; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!10528 () Bool)

(assert start!10528)

(declare-fun b!82830 () Bool)

(declare-fun b_free!2225 () Bool)

(declare-fun b_next!2225 () Bool)

(assert (=> b!82830 (= b_free!2225 (not b_next!2225))))

(declare-fun tp!8892 () Bool)

(declare-fun b_and!5037 () Bool)

(assert (=> b!82830 (= tp!8892 b_and!5037)))

(declare-fun b!82846 () Bool)

(declare-fun b_free!2227 () Bool)

(declare-fun b_next!2227 () Bool)

(assert (=> b!82846 (= b_free!2227 (not b_next!2227))))

(declare-fun tp!8894 () Bool)

(declare-fun b_and!5039 () Bool)

(assert (=> b!82846 (= tp!8894 b_and!5039)))

(declare-fun b!82829 () Bool)

(declare-fun e!54106 () Bool)

(declare-fun e!54105 () Bool)

(declare-fun mapRes!3373 () Bool)

(assert (=> b!82829 (= e!54106 (and e!54105 mapRes!3373))))

(declare-fun condMapEmpty!3373 () Bool)

(declare-datatypes ((V!3019 0))(
  ( (V!3020 (val!1309 Int)) )
))
(declare-datatypes ((array!4014 0))(
  ( (array!4015 (arr!1912 (Array (_ BitVec 32) (_ BitVec 64))) (size!2155 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!921 0))(
  ( (ValueCellFull!921 (v!2631 V!3019)) (EmptyCell!921) )
))
(declare-datatypes ((array!4016 0))(
  ( (array!4017 (arr!1913 (Array (_ BitVec 32) ValueCell!921)) (size!2156 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!750 0))(
  ( (LongMapFixedSize!751 (defaultEntry!2317 Int) (mask!6335 (_ BitVec 32)) (extraKeys!2160 (_ BitVec 32)) (zeroValue!2211 V!3019) (minValue!2211 V!3019) (_size!424 (_ BitVec 32)) (_keys!3985 array!4014) (_values!2300 array!4016) (_vacant!424 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!750)

(declare-fun mapDefault!3374 () ValueCell!921)

(assert (=> b!82829 (= condMapEmpty!3373 (= (arr!1913 (_values!2300 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!921)) mapDefault!3374)))))

(declare-fun mapIsEmpty!3373 () Bool)

(declare-fun mapRes!3374 () Bool)

(assert (=> mapIsEmpty!3373 mapRes!3374))

(declare-datatypes ((Cell!558 0))(
  ( (Cell!559 (v!2632 LongMapFixedSize!750)) )
))
(declare-datatypes ((LongMap!558 0))(
  ( (LongMap!559 (underlying!290 Cell!558)) )
))
(declare-fun thiss!992 () LongMap!558)

(declare-fun tp_is_empty!2529 () Bool)

(declare-fun e!54102 () Bool)

(declare-fun e!54101 () Bool)

(declare-fun array_inv!1143 (array!4014) Bool)

(declare-fun array_inv!1144 (array!4016) Bool)

(assert (=> b!82830 (= e!54102 (and tp!8892 tp_is_empty!2529 (array_inv!1143 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (array_inv!1144 (_values!2300 (v!2632 (underlying!290 thiss!992)))) e!54101))))

(declare-fun b!82831 () Bool)

(declare-fun e!54103 () Bool)

(assert (=> b!82831 (= e!54103 tp_is_empty!2529)))

(declare-fun b!82832 () Bool)

(declare-fun res!42907 () Bool)

(declare-fun e!54104 () Bool)

(assert (=> b!82832 (=> (not res!42907) (not e!54104))))

(assert (=> b!82832 (= res!42907 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6335 newMap!16)) (_size!424 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun res!42902 () Bool)

(assert (=> start!10528 (=> (not res!42902) (not e!54104))))

(declare-fun valid!324 (LongMap!558) Bool)

(assert (=> start!10528 (= res!42902 (valid!324 thiss!992))))

(assert (=> start!10528 e!54104))

(declare-fun e!54092 () Bool)

(assert (=> start!10528 e!54092))

(assert (=> start!10528 true))

(declare-fun e!54108 () Bool)

(assert (=> start!10528 e!54108))

(declare-fun b!82833 () Bool)

(declare-fun res!42903 () Bool)

(assert (=> b!82833 (=> (not res!42903) (not e!54104))))

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!82833 (= res!42903 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!82834 () Bool)

(assert (=> b!82834 (= e!54105 tp_is_empty!2529)))

(declare-fun b!82835 () Bool)

(declare-datatypes ((Unit!2445 0))(
  ( (Unit!2446) )
))
(declare-fun e!54097 () Unit!2445)

(declare-fun Unit!2447 () Unit!2445)

(assert (=> b!82835 (= e!54097 Unit!2447)))

(declare-fun b!82836 () Bool)

(declare-fun e!54100 () Bool)

(assert (=> b!82836 (= e!54092 e!54100)))

(declare-fun b!82837 () Bool)

(declare-fun e!54093 () Bool)

(declare-fun e!54107 () Bool)

(assert (=> b!82837 (= e!54093 (not e!54107))))

(declare-fun res!42906 () Bool)

(assert (=> b!82837 (=> res!42906 e!54107)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!82837 (= res!42906 (not (validMask!0 (mask!6335 (v!2632 (underlying!290 thiss!992))))))))

(declare-datatypes ((tuple2!2220 0))(
  ( (tuple2!2221 (_1!1120 (_ BitVec 64)) (_2!1120 V!3019)) )
))
(declare-fun lt!38750 () tuple2!2220)

(declare-fun lt!38747 () tuple2!2220)

(declare-datatypes ((List!1547 0))(
  ( (Nil!1544) (Cons!1543 (h!2133 tuple2!2220) (t!5251 List!1547)) )
))
(declare-datatypes ((ListLongMap!1481 0))(
  ( (ListLongMap!1482 (toList!756 List!1547)) )
))
(declare-fun lt!38751 () ListLongMap!1481)

(declare-fun lt!38754 () ListLongMap!1481)

(declare-fun +!114 (ListLongMap!1481 tuple2!2220) ListLongMap!1481)

(assert (=> b!82837 (= (+!114 lt!38751 lt!38747) (+!114 (+!114 lt!38754 lt!38747) lt!38750))))

(assert (=> b!82837 (= lt!38747 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun lt!38745 () Unit!2445)

(declare-fun lt!38748 () V!3019)

(declare-fun addCommutativeForDiffKeys!33 (ListLongMap!1481 (_ BitVec 64) V!3019 (_ BitVec 64) V!3019) Unit!2445)

(assert (=> b!82837 (= lt!38745 (addCommutativeForDiffKeys!33 lt!38754 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun lt!38761 () ListLongMap!1481)

(assert (=> b!82837 (= lt!38761 lt!38751)))

(assert (=> b!82837 (= lt!38751 (+!114 lt!38754 lt!38750))))

(declare-fun lt!38749 () ListLongMap!1481)

(declare-fun lt!38760 () tuple2!2220)

(assert (=> b!82837 (= lt!38761 (+!114 lt!38749 lt!38760))))

(declare-fun lt!38755 () ListLongMap!1481)

(assert (=> b!82837 (= lt!38754 (+!114 lt!38755 lt!38760))))

(assert (=> b!82837 (= lt!38760 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))

(assert (=> b!82837 (= lt!38749 (+!114 lt!38755 lt!38750))))

(assert (=> b!82837 (= lt!38750 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))

(declare-fun lt!38752 () Unit!2445)

(assert (=> b!82837 (= lt!38752 (addCommutativeForDiffKeys!33 lt!38755 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!78 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 (_ BitVec 32) Int) ListLongMap!1481)

(assert (=> b!82837 (= lt!38755 (getCurrentListMapNoExtraKeys!78 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun b!82838 () Bool)

(assert (=> b!82838 (= e!54107 (or (not (= (size!2156 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6335 (v!2632 (underlying!290 thiss!992)))))) (not (= (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (size!2156 (_values!2300 (v!2632 (underlying!290 thiss!992)))))) (bvslt (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000000) (bvsge (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!82839 () Bool)

(declare-fun e!54096 () Bool)

(assert (=> b!82839 (= e!54096 tp_is_empty!2529)))

(declare-fun b!82840 () Bool)

(declare-fun e!54098 () Bool)

(declare-fun e!54094 () Bool)

(assert (=> b!82840 (= e!54098 e!54094)))

(declare-fun res!42909 () Bool)

(assert (=> b!82840 (=> (not res!42909) (not e!54094))))

(assert (=> b!82840 (= res!42909 (and (not (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1206 (ValueCell!921 V!3019) V!3019)

(declare-fun dynLambda!351 (Int (_ BitVec 64)) V!3019)

(assert (=> b!82840 (= lt!38748 (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) from!355) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!82841 () Bool)

(assert (=> b!82841 (= e!54100 e!54102)))

(declare-fun mapNonEmpty!3373 () Bool)

(declare-fun tp!8891 () Bool)

(declare-fun e!54109 () Bool)

(assert (=> mapNonEmpty!3373 (= mapRes!3373 (and tp!8891 e!54109))))

(declare-fun mapValue!3373 () ValueCell!921)

(declare-fun mapKey!3374 () (_ BitVec 32))

(declare-fun mapRest!3374 () (Array (_ BitVec 32) ValueCell!921))

(assert (=> mapNonEmpty!3373 (= (arr!1913 (_values!2300 newMap!16)) (store mapRest!3374 mapKey!3374 mapValue!3373))))

(declare-fun b!82842 () Bool)

(assert (=> b!82842 (= e!54109 tp_is_empty!2529)))

(declare-fun b!82843 () Bool)

(declare-fun Unit!2448 () Unit!2445)

(assert (=> b!82843 (= e!54097 Unit!2448)))

(declare-fun lt!38759 () Unit!2445)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!70 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 (_ BitVec 64) (_ BitVec 32) Int) Unit!2445)

(assert (=> b!82843 (= lt!38759 (lemmaListMapContainsThenArrayContainsFrom!70 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4014 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!82843 (arrayContainsKey!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!38753 () Unit!2445)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4014 (_ BitVec 32) (_ BitVec 32)) Unit!2445)

(assert (=> b!82843 (= lt!38753 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1548 0))(
  ( (Nil!1545) (Cons!1544 (h!2134 (_ BitVec 64)) (t!5252 List!1548)) )
))
(declare-fun arrayNoDuplicates!0 (array!4014 (_ BitVec 32) List!1548) Bool)

(assert (=> b!82843 (arrayNoDuplicates!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) from!355 Nil!1545)))

(declare-fun lt!38746 () Unit!2445)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4014 (_ BitVec 32) (_ BitVec 64) List!1548) Unit!2445)

(assert (=> b!82843 (= lt!38746 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545)))))

(assert (=> b!82843 false))

(declare-fun b!82844 () Bool)

(assert (=> b!82844 (= e!54094 e!54093)))

(declare-fun res!42905 () Bool)

(assert (=> b!82844 (=> (not res!42905) (not e!54093))))

(declare-datatypes ((tuple2!2222 0))(
  ( (tuple2!2223 (_1!1121 Bool) (_2!1121 LongMapFixedSize!750)) )
))
(declare-fun lt!38758 () tuple2!2222)

(assert (=> b!82844 (= res!42905 (and (_1!1121 lt!38758) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!38762 () Unit!2445)

(assert (=> b!82844 (= lt!38762 e!54097)))

(declare-fun c!13177 () Bool)

(declare-fun lt!38757 () ListLongMap!1481)

(declare-fun contains!757 (ListLongMap!1481 (_ BitVec 64)) Bool)

(assert (=> b!82844 (= c!13177 (contains!757 lt!38757 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun update!119 (LongMapFixedSize!750 (_ BitVec 64) V!3019) tuple2!2222)

(assert (=> b!82844 (= lt!38758 (update!119 newMap!16 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))

(declare-fun b!82845 () Bool)

(assert (=> b!82845 (= e!54101 (and e!54096 mapRes!3374))))

(declare-fun condMapEmpty!3374 () Bool)

(declare-fun mapDefault!3373 () ValueCell!921)

(assert (=> b!82845 (= condMapEmpty!3374 (= (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!921)) mapDefault!3373)))))

(assert (=> b!82846 (= e!54108 (and tp!8894 tp_is_empty!2529 (array_inv!1143 (_keys!3985 newMap!16)) (array_inv!1144 (_values!2300 newMap!16)) e!54106))))

(declare-fun mapIsEmpty!3374 () Bool)

(assert (=> mapIsEmpty!3374 mapRes!3373))

(declare-fun b!82847 () Bool)

(assert (=> b!82847 (= e!54104 e!54098)))

(declare-fun res!42908 () Bool)

(assert (=> b!82847 (=> (not res!42908) (not e!54098))))

(declare-fun lt!38756 () ListLongMap!1481)

(assert (=> b!82847 (= res!42908 (= lt!38756 lt!38757))))

(declare-fun map!1190 (LongMapFixedSize!750) ListLongMap!1481)

(assert (=> b!82847 (= lt!38757 (map!1190 newMap!16))))

(declare-fun getCurrentListMap!440 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 (_ BitVec 32) Int) ListLongMap!1481)

(assert (=> b!82847 (= lt!38756 (getCurrentListMap!440 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun b!82848 () Bool)

(declare-fun res!42904 () Bool)

(assert (=> b!82848 (=> (not res!42904) (not e!54104))))

(declare-fun valid!325 (LongMapFixedSize!750) Bool)

(assert (=> b!82848 (= res!42904 (valid!325 newMap!16))))

(declare-fun mapNonEmpty!3374 () Bool)

(declare-fun tp!8893 () Bool)

(assert (=> mapNonEmpty!3374 (= mapRes!3374 (and tp!8893 e!54103))))

(declare-fun mapRest!3373 () (Array (_ BitVec 32) ValueCell!921))

(declare-fun mapKey!3373 () (_ BitVec 32))

(declare-fun mapValue!3374 () ValueCell!921)

(assert (=> mapNonEmpty!3374 (= (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (store mapRest!3373 mapKey!3373 mapValue!3374))))

(assert (= (and start!10528 res!42902) b!82833))

(assert (= (and b!82833 res!42903) b!82848))

(assert (= (and b!82848 res!42904) b!82832))

(assert (= (and b!82832 res!42907) b!82847))

(assert (= (and b!82847 res!42908) b!82840))

(assert (= (and b!82840 res!42909) b!82844))

(assert (= (and b!82844 c!13177) b!82843))

(assert (= (and b!82844 (not c!13177)) b!82835))

(assert (= (and b!82844 res!42905) b!82837))

(assert (= (and b!82837 (not res!42906)) b!82838))

(assert (= (and b!82845 condMapEmpty!3374) mapIsEmpty!3373))

(assert (= (and b!82845 (not condMapEmpty!3374)) mapNonEmpty!3374))

(get-info :version)

(assert (= (and mapNonEmpty!3374 ((_ is ValueCellFull!921) mapValue!3374)) b!82831))

(assert (= (and b!82845 ((_ is ValueCellFull!921) mapDefault!3373)) b!82839))

(assert (= b!82830 b!82845))

(assert (= b!82841 b!82830))

(assert (= b!82836 b!82841))

(assert (= start!10528 b!82836))

(assert (= (and b!82829 condMapEmpty!3373) mapIsEmpty!3374))

(assert (= (and b!82829 (not condMapEmpty!3373)) mapNonEmpty!3373))

(assert (= (and mapNonEmpty!3373 ((_ is ValueCellFull!921) mapValue!3373)) b!82842))

(assert (= (and b!82829 ((_ is ValueCellFull!921) mapDefault!3374)) b!82834))

(assert (= b!82846 b!82829))

(assert (= start!10528 b!82846))

(declare-fun b_lambda!3693 () Bool)

(assert (=> (not b_lambda!3693) (not b!82840)))

(declare-fun t!5248 () Bool)

(declare-fun tb!1673 () Bool)

(assert (=> (and b!82830 (= (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))) t!5248) tb!1673))

(declare-fun result!2889 () Bool)

(assert (=> tb!1673 (= result!2889 tp_is_empty!2529)))

(assert (=> b!82840 t!5248))

(declare-fun b_and!5041 () Bool)

(assert (= b_and!5037 (and (=> t!5248 result!2889) b_and!5041)))

(declare-fun tb!1675 () Bool)

(declare-fun t!5250 () Bool)

(assert (=> (and b!82846 (= (defaultEntry!2317 newMap!16) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))) t!5250) tb!1675))

(declare-fun result!2893 () Bool)

(assert (= result!2893 result!2889))

(assert (=> b!82840 t!5250))

(declare-fun b_and!5043 () Bool)

(assert (= b_and!5039 (and (=> t!5250 result!2893) b_and!5043)))

(declare-fun m!85571 () Bool)

(assert (=> mapNonEmpty!3373 m!85571))

(declare-fun m!85573 () Bool)

(assert (=> b!82846 m!85573))

(declare-fun m!85575 () Bool)

(assert (=> b!82846 m!85575))

(declare-fun m!85577 () Bool)

(assert (=> b!82830 m!85577))

(declare-fun m!85579 () Bool)

(assert (=> b!82830 m!85579))

(declare-fun m!85581 () Bool)

(assert (=> b!82837 m!85581))

(declare-fun m!85583 () Bool)

(assert (=> b!82837 m!85583))

(declare-fun m!85585 () Bool)

(assert (=> b!82837 m!85585))

(declare-fun m!85587 () Bool)

(assert (=> b!82837 m!85587))

(declare-fun m!85589 () Bool)

(assert (=> b!82837 m!85589))

(declare-fun m!85591 () Bool)

(assert (=> b!82837 m!85591))

(declare-fun m!85593 () Bool)

(assert (=> b!82837 m!85593))

(assert (=> b!82837 m!85591))

(declare-fun m!85595 () Bool)

(assert (=> b!82837 m!85595))

(declare-fun m!85597 () Bool)

(assert (=> b!82837 m!85597))

(declare-fun m!85599 () Bool)

(assert (=> b!82837 m!85599))

(declare-fun m!85601 () Bool)

(assert (=> b!82837 m!85601))

(declare-fun m!85603 () Bool)

(assert (=> b!82837 m!85603))

(assert (=> b!82837 m!85591))

(assert (=> b!82837 m!85587))

(declare-fun m!85605 () Bool)

(assert (=> start!10528 m!85605))

(assert (=> b!82844 m!85591))

(assert (=> b!82844 m!85591))

(declare-fun m!85607 () Bool)

(assert (=> b!82844 m!85607))

(assert (=> b!82844 m!85591))

(declare-fun m!85609 () Bool)

(assert (=> b!82844 m!85609))

(declare-fun m!85611 () Bool)

(assert (=> mapNonEmpty!3374 m!85611))

(assert (=> b!82840 m!85591))

(declare-fun m!85613 () Bool)

(assert (=> b!82840 m!85613))

(declare-fun m!85615 () Bool)

(assert (=> b!82840 m!85615))

(assert (=> b!82840 m!85613))

(assert (=> b!82840 m!85615))

(declare-fun m!85617 () Bool)

(assert (=> b!82840 m!85617))

(declare-fun m!85619 () Bool)

(assert (=> b!82848 m!85619))

(declare-fun m!85621 () Bool)

(assert (=> b!82847 m!85621))

(declare-fun m!85623 () Bool)

(assert (=> b!82847 m!85623))

(declare-fun m!85625 () Bool)

(assert (=> b!82843 m!85625))

(declare-fun m!85627 () Bool)

(assert (=> b!82843 m!85627))

(assert (=> b!82843 m!85591))

(declare-fun m!85629 () Bool)

(assert (=> b!82843 m!85629))

(assert (=> b!82843 m!85591))

(assert (=> b!82843 m!85591))

(declare-fun m!85631 () Bool)

(assert (=> b!82843 m!85631))

(assert (=> b!82843 m!85591))

(declare-fun m!85633 () Bool)

(assert (=> b!82843 m!85633))

(check-sat (not start!10528) (not b_lambda!3693) (not mapNonEmpty!3374) (not b_next!2225) (not mapNonEmpty!3373) (not b!82830) (not b!82848) (not b!82840) b_and!5041 b_and!5043 tp_is_empty!2529 (not b!82837) (not b!82844) (not b!82846) (not b!82843) (not b!82847) (not b_next!2227))
(check-sat b_and!5041 b_and!5043 (not b_next!2225) (not b_next!2227))
(get-model)

(declare-fun b_lambda!3697 () Bool)

(assert (= b_lambda!3693 (or (and b!82830 b_free!2225) (and b!82846 b_free!2227 (= (defaultEntry!2317 newMap!16) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))))) b_lambda!3697)))

(check-sat (not start!10528) (not mapNonEmpty!3374) (not b_next!2225) (not b_lambda!3697) (not mapNonEmpty!3373) (not b!82830) (not b!82848) (not b!82840) b_and!5041 b_and!5043 tp_is_empty!2529 (not b!82837) (not b!82844) (not b!82846) (not b!82843) (not b!82847) (not b_next!2227))
(check-sat b_and!5041 b_and!5043 (not b_next!2225) (not b_next!2227))
(get-model)

(declare-fun d!20847 () Bool)

(assert (=> d!20847 (= (array_inv!1143 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvsge (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!82830 d!20847))

(declare-fun d!20849 () Bool)

(assert (=> d!20849 (= (array_inv!1144 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvsge (size!2156 (_values!2300 (v!2632 (underlying!290 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!82830 d!20849))

(declare-fun d!20851 () Bool)

(declare-fun res!42940 () Bool)

(declare-fun e!54166 () Bool)

(assert (=> d!20851 (=> (not res!42940) (not e!54166))))

(declare-fun simpleValid!56 (LongMapFixedSize!750) Bool)

(assert (=> d!20851 (= res!42940 (simpleValid!56 newMap!16))))

(assert (=> d!20851 (= (valid!325 newMap!16) e!54166)))

(declare-fun b!82919 () Bool)

(declare-fun res!42941 () Bool)

(assert (=> b!82919 (=> (not res!42941) (not e!54166))))

(declare-fun arrayCountValidKeys!0 (array!4014 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!82919 (= res!42941 (= (arrayCountValidKeys!0 (_keys!3985 newMap!16) #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))) (_size!424 newMap!16)))))

(declare-fun b!82920 () Bool)

(declare-fun res!42942 () Bool)

(assert (=> b!82920 (=> (not res!42942) (not e!54166))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4014 (_ BitVec 32)) Bool)

(assert (=> b!82920 (= res!42942 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3985 newMap!16) (mask!6335 newMap!16)))))

(declare-fun b!82921 () Bool)

(assert (=> b!82921 (= e!54166 (arrayNoDuplicates!0 (_keys!3985 newMap!16) #b00000000000000000000000000000000 Nil!1545))))

(assert (= (and d!20851 res!42940) b!82919))

(assert (= (and b!82919 res!42941) b!82920))

(assert (= (and b!82920 res!42942) b!82921))

(declare-fun m!85699 () Bool)

(assert (=> d!20851 m!85699))

(declare-fun m!85701 () Bool)

(assert (=> b!82919 m!85701))

(declare-fun m!85703 () Bool)

(assert (=> b!82920 m!85703))

(declare-fun m!85705 () Bool)

(assert (=> b!82921 m!85705))

(assert (=> b!82848 d!20851))

(declare-fun d!20853 () Bool)

(assert (=> d!20853 (= (valid!324 thiss!992) (valid!325 (v!2632 (underlying!290 thiss!992))))))

(declare-fun bs!3497 () Bool)

(assert (= bs!3497 d!20853))

(declare-fun m!85707 () Bool)

(assert (=> bs!3497 m!85707))

(assert (=> start!10528 d!20853))

(declare-fun d!20855 () Bool)

(declare-fun c!13183 () Bool)

(assert (=> d!20855 (= c!13183 ((_ is ValueCellFull!921) (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun e!54169 () V!3019)

(assert (=> d!20855 (= (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) from!355) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!54169)))

(declare-fun b!82926 () Bool)

(declare-fun get!1207 (ValueCell!921 V!3019) V!3019)

(assert (=> b!82926 (= e!54169 (get!1207 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) from!355) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!82927 () Bool)

(declare-fun get!1208 (ValueCell!921 V!3019) V!3019)

(assert (=> b!82927 (= e!54169 (get!1208 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) from!355) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20855 c!13183) b!82926))

(assert (= (and d!20855 (not c!13183)) b!82927))

(assert (=> b!82926 m!85613))

(assert (=> b!82926 m!85615))

(declare-fun m!85709 () Bool)

(assert (=> b!82926 m!85709))

(assert (=> b!82927 m!85613))

(assert (=> b!82927 m!85615))

(declare-fun m!85711 () Bool)

(assert (=> b!82927 m!85711))

(assert (=> b!82840 d!20855))

(declare-fun d!20857 () Bool)

(declare-fun e!54174 () Bool)

(assert (=> d!20857 e!54174))

(declare-fun res!42945 () Bool)

(assert (=> d!20857 (=> res!42945 e!54174)))

(declare-fun lt!38825 () Bool)

(assert (=> d!20857 (= res!42945 (not lt!38825))))

(declare-fun lt!38827 () Bool)

(assert (=> d!20857 (= lt!38825 lt!38827)))

(declare-fun lt!38828 () Unit!2445)

(declare-fun e!54175 () Unit!2445)

(assert (=> d!20857 (= lt!38828 e!54175)))

(declare-fun c!13186 () Bool)

(assert (=> d!20857 (= c!13186 lt!38827)))

(declare-fun containsKey!142 (List!1547 (_ BitVec 64)) Bool)

(assert (=> d!20857 (= lt!38827 (containsKey!142 (toList!756 lt!38757) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> d!20857 (= (contains!757 lt!38757 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) lt!38825)))

(declare-fun b!82934 () Bool)

(declare-fun lt!38826 () Unit!2445)

(assert (=> b!82934 (= e!54175 lt!38826)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!91 (List!1547 (_ BitVec 64)) Unit!2445)

(assert (=> b!82934 (= lt!38826 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!38757) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-datatypes ((Option!144 0))(
  ( (Some!143 (v!2636 V!3019)) (None!142) )
))
(declare-fun isDefined!92 (Option!144) Bool)

(declare-fun getValueByKey!138 (List!1547 (_ BitVec 64)) Option!144)

(assert (=> b!82934 (isDefined!92 (getValueByKey!138 (toList!756 lt!38757) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun b!82935 () Bool)

(declare-fun Unit!2452 () Unit!2445)

(assert (=> b!82935 (= e!54175 Unit!2452)))

(declare-fun b!82936 () Bool)

(assert (=> b!82936 (= e!54174 (isDefined!92 (getValueByKey!138 (toList!756 lt!38757) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))))

(assert (= (and d!20857 c!13186) b!82934))

(assert (= (and d!20857 (not c!13186)) b!82935))

(assert (= (and d!20857 (not res!42945)) b!82936))

(assert (=> d!20857 m!85591))

(declare-fun m!85713 () Bool)

(assert (=> d!20857 m!85713))

(assert (=> b!82934 m!85591))

(declare-fun m!85715 () Bool)

(assert (=> b!82934 m!85715))

(assert (=> b!82934 m!85591))

(declare-fun m!85717 () Bool)

(assert (=> b!82934 m!85717))

(assert (=> b!82934 m!85717))

(declare-fun m!85719 () Bool)

(assert (=> b!82934 m!85719))

(assert (=> b!82936 m!85591))

(assert (=> b!82936 m!85717))

(assert (=> b!82936 m!85717))

(assert (=> b!82936 m!85719))

(assert (=> b!82844 d!20857))

(declare-fun b!83017 () Bool)

(declare-fun lt!38895 () Unit!2445)

(declare-fun e!54234 () Unit!2445)

(assert (=> b!83017 (= lt!38895 e!54234)))

(declare-fun c!13222 () Bool)

(declare-fun call!7767 () Bool)

(assert (=> b!83017 (= c!13222 call!7767)))

(declare-fun e!54229 () tuple2!2222)

(assert (=> b!83017 (= e!54229 (tuple2!2223 false newMap!16))))

(declare-fun bm!7755 () Bool)

(declare-fun call!7771 () ListLongMap!1481)

(declare-fun call!7781 () ListLongMap!1481)

(assert (=> bm!7755 (= call!7771 call!7781)))

(declare-fun b!83018 () Bool)

(declare-fun e!54226 () Bool)

(declare-fun e!54231 () Bool)

(assert (=> b!83018 (= e!54226 e!54231)))

(declare-fun res!42987 () Bool)

(declare-fun call!7759 () ListLongMap!1481)

(assert (=> b!83018 (= res!42987 (contains!757 call!7759 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> b!83018 (=> (not res!42987) (not e!54231))))

(declare-fun lt!38889 () (_ BitVec 32))

(declare-fun c!13218 () Bool)

(declare-fun call!7762 () ListLongMap!1481)

(declare-fun lt!38887 () array!4016)

(declare-fun bm!7756 () Bool)

(declare-fun c!13216 () Bool)

(declare-fun c!13219 () Bool)

(assert (=> bm!7756 (= call!7762 (getCurrentListMap!440 (_keys!3985 newMap!16) (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887) (mask!6335 newMap!16) (ite c!13216 (ite c!13218 (extraKeys!2160 newMap!16) lt!38889) (extraKeys!2160 newMap!16)) (zeroValue!2211 newMap!16) (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun b!83019 () Bool)

(declare-fun e!54220 () Bool)

(declare-fun call!7777 () Bool)

(assert (=> b!83019 (= e!54220 (not call!7777))))

(declare-fun b!83020 () Bool)

(declare-fun e!54233 () Unit!2445)

(declare-fun lt!38900 () Unit!2445)

(assert (=> b!83020 (= e!54233 lt!38900)))

(declare-fun call!7766 () Unit!2445)

(assert (=> b!83020 (= lt!38900 call!7766)))

(declare-datatypes ((SeekEntryResult!252 0))(
  ( (MissingZero!252 (index!3144 (_ BitVec 32))) (Found!252 (index!3145 (_ BitVec 32))) (Intermediate!252 (undefined!1064 Bool) (index!3146 (_ BitVec 32)) (x!11861 (_ BitVec 32))) (Undefined!252) (MissingVacant!252 (index!3147 (_ BitVec 32))) )
))
(declare-fun lt!38884 () SeekEntryResult!252)

(declare-fun call!7773 () SeekEntryResult!252)

(assert (=> b!83020 (= lt!38884 call!7773)))

(declare-fun res!42977 () Bool)

(assert (=> b!83020 (= res!42977 ((_ is Found!252) lt!38884))))

(declare-fun e!54224 () Bool)

(assert (=> b!83020 (=> (not res!42977) (not e!54224))))

(assert (=> b!83020 e!54224))

(declare-fun bm!7757 () Bool)

(declare-fun call!7776 () tuple2!2222)

(declare-fun c!13214 () Bool)

(declare-fun lt!38899 () SeekEntryResult!252)

(declare-fun updateHelperNewKey!30 (LongMapFixedSize!750 (_ BitVec 64) V!3019 (_ BitVec 32)) tuple2!2222)

(assert (=> bm!7757 (= call!7776 (updateHelperNewKey!30 newMap!16 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748 (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899))))))

(declare-fun b!83021 () Bool)

(declare-fun e!54237 () Bool)

(assert (=> b!83021 (= e!54237 (not call!7777))))

(declare-fun b!83022 () Bool)

(declare-fun res!42985 () Bool)

(assert (=> b!83022 (=> (not res!42985) (not e!54237))))

(declare-fun lt!38888 () SeekEntryResult!252)

(assert (=> b!83022 (= res!42985 (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3144 lt!38888)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83023 () Bool)

(declare-fun e!54236 () tuple2!2222)

(declare-fun e!54225 () tuple2!2222)

(assert (=> b!83023 (= e!54236 e!54225)))

(declare-fun c!13223 () Bool)

(assert (=> b!83023 (= c!13223 ((_ is MissingZero!252) lt!38899))))

(declare-fun b!83024 () Bool)

(declare-fun lt!38892 () tuple2!2222)

(assert (=> b!83024 (= lt!38892 call!7776)))

(assert (=> b!83024 (= e!54225 (tuple2!2223 (_1!1121 lt!38892) (_2!1121 lt!38892)))))

(declare-fun b!83025 () Bool)

(declare-fun lt!38896 () Unit!2445)

(declare-fun lt!38906 () Unit!2445)

(assert (=> b!83025 (= lt!38896 lt!38906)))

(declare-fun call!7772 () ListLongMap!1481)

(assert (=> b!83025 (= call!7772 call!7771)))

(declare-fun lt!38883 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!30 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 V!3019 Int) Unit!2445)

(assert (=> b!83025 (= lt!38906 (lemmaChangeZeroKeyThenAddPairToListMap!30 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) lt!38883 (zeroValue!2211 newMap!16) lt!38748 (minValue!2211 newMap!16) (defaultEntry!2317 newMap!16)))))

(assert (=> b!83025 (= lt!38883 (bvor (extraKeys!2160 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!54227 () tuple2!2222)

(assert (=> b!83025 (= e!54227 (tuple2!2223 true (LongMapFixedSize!751 (defaultEntry!2317 newMap!16) (mask!6335 newMap!16) (bvor (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) lt!38748 (minValue!2211 newMap!16) (_size!424 newMap!16) (_keys!3985 newMap!16) (_values!2300 newMap!16) (_vacant!424 newMap!16))))))

(declare-fun b!83026 () Bool)

(declare-fun e!54219 () Bool)

(assert (=> b!83026 (= e!54219 e!54226)))

(declare-fun c!13220 () Bool)

(declare-fun lt!38897 () tuple2!2222)

(assert (=> b!83026 (= c!13220 (_1!1121 lt!38897))))

(declare-fun bm!7758 () Bool)

(assert (=> bm!7758 (= call!7781 (getCurrentListMap!440 (_keys!3985 newMap!16) (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16)))) (mask!6335 newMap!16) (ite (and c!13216 c!13218) lt!38883 (extraKeys!2160 newMap!16)) (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun b!83027 () Bool)

(assert (=> b!83027 (= e!54224 (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38884)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun call!7778 () SeekEntryResult!252)

(declare-fun bm!7759 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4014 (_ BitVec 32)) SeekEntryResult!252)

(assert (=> bm!7759 (= call!7778 (seekEntryOrOpen!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (_keys!3985 newMap!16) (mask!6335 newMap!16)))))

(declare-fun bm!7760 () Bool)

(declare-fun call!7768 () ListLongMap!1481)

(assert (=> bm!7760 (= call!7768 call!7762)))

(declare-fun b!83028 () Bool)

(declare-fun c!13215 () Bool)

(declare-fun lt!38907 () SeekEntryResult!252)

(assert (=> b!83028 (= c!13215 ((_ is MissingVacant!252) lt!38907))))

(declare-fun e!54222 () Bool)

(declare-fun e!54221 () Bool)

(assert (=> b!83028 (= e!54222 e!54221)))

(declare-fun call!7761 () ListLongMap!1481)

(declare-fun b!83029 () Bool)

(assert (=> b!83029 (= e!54231 (= call!7759 (+!114 call!7761 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun b!83030 () Bool)

(declare-fun e!54235 () Bool)

(declare-fun call!7763 () Bool)

(assert (=> b!83030 (= e!54235 (not call!7763))))

(declare-fun b!83031 () Bool)

(assert (=> b!83031 (= c!13214 ((_ is MissingVacant!252) lt!38899))))

(assert (=> b!83031 (= e!54229 e!54236)))

(declare-fun bm!7761 () Bool)

(declare-fun call!7769 () ListLongMap!1481)

(assert (=> bm!7761 (= call!7769 call!7762)))

(declare-fun b!83032 () Bool)

(assert (=> b!83032 (= e!54226 (= call!7759 call!7761))))

(declare-fun bm!7762 () Bool)

(assert (=> bm!7762 (= call!7767 (contains!757 call!7768 (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899)))))))

(declare-fun b!83033 () Bool)

(declare-fun e!54223 () Bool)

(assert (=> b!83033 (= e!54223 e!54220)))

(declare-fun res!42982 () Bool)

(declare-fun call!7779 () Bool)

(assert (=> b!83033 (= res!42982 call!7779)))

(assert (=> b!83033 (=> (not res!42982) (not e!54220))))

(declare-fun b!83034 () Bool)

(assert (=> b!83034 (= e!54221 e!54235)))

(declare-fun res!42981 () Bool)

(declare-fun call!7758 () Bool)

(assert (=> b!83034 (= res!42981 call!7758)))

(assert (=> b!83034 (=> (not res!42981) (not e!54235))))

(declare-fun b!83035 () Bool)

(declare-fun res!42980 () Bool)

(declare-fun call!7764 () Bool)

(assert (=> b!83035 (= res!42980 call!7764)))

(assert (=> b!83035 (=> (not res!42980) (not e!54224))))

(declare-fun b!83036 () Bool)

(declare-fun Unit!2453 () Unit!2445)

(assert (=> b!83036 (= e!54234 Unit!2453)))

(declare-fun lt!38886 () Unit!2445)

(assert (=> b!83036 (= lt!38886 call!7766)))

(declare-fun lt!38885 () SeekEntryResult!252)

(declare-fun call!7780 () SeekEntryResult!252)

(assert (=> b!83036 (= lt!38885 call!7780)))

(declare-fun res!42975 () Bool)

(assert (=> b!83036 (= res!42975 ((_ is Found!252) lt!38885))))

(declare-fun e!54228 () Bool)

(assert (=> b!83036 (=> (not res!42975) (not e!54228))))

(assert (=> b!83036 e!54228))

(declare-fun lt!38905 () Unit!2445)

(assert (=> b!83036 (= lt!38905 lt!38886)))

(assert (=> b!83036 false))

(declare-fun e!54230 () ListLongMap!1481)

(declare-fun b!83037 () Bool)

(assert (=> b!83037 (= e!54230 (ite c!13218 call!7769 call!7771))))

(declare-fun b!83038 () Bool)

(declare-fun lt!38904 () tuple2!2222)

(assert (=> b!83038 (= e!54236 (tuple2!2223 (_1!1121 lt!38904) (_2!1121 lt!38904)))))

(assert (=> b!83038 (= lt!38904 call!7776)))

(declare-fun b!83039 () Bool)

(declare-fun Unit!2454 () Unit!2445)

(assert (=> b!83039 (= e!54233 Unit!2454)))

(declare-fun lt!38908 () Unit!2445)

(declare-fun call!7774 () Unit!2445)

(assert (=> b!83039 (= lt!38908 call!7774)))

(assert (=> b!83039 (= lt!38888 call!7773)))

(declare-fun c!13213 () Bool)

(assert (=> b!83039 (= c!13213 ((_ is MissingZero!252) lt!38888))))

(declare-fun e!54218 () Bool)

(assert (=> b!83039 e!54218))

(declare-fun lt!38894 () Unit!2445)

(assert (=> b!83039 (= lt!38894 lt!38908)))

(assert (=> b!83039 false))

(declare-fun bm!7763 () Bool)

(assert (=> bm!7763 (= call!7759 (map!1190 (_2!1121 lt!38897)))))

(declare-fun b!83040 () Bool)

(declare-fun res!42983 () Bool)

(assert (=> b!83040 (= res!42983 (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3147 lt!38888)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83040 (=> (not res!42983) (not e!54220))))

(declare-fun b!83041 () Bool)

(declare-fun lt!38902 () Unit!2445)

(declare-fun lt!38890 () Unit!2445)

(assert (=> b!83041 (= lt!38902 lt!38890)))

(assert (=> b!83041 (= call!7772 call!7769)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!30 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 V!3019 Int) Unit!2445)

(assert (=> b!83041 (= lt!38890 (lemmaChangeLongMinValueKeyThenAddPairToListMap!30 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) lt!38889 (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) lt!38748 (defaultEntry!2317 newMap!16)))))

(assert (=> b!83041 (= lt!38889 (bvor (extraKeys!2160 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!83041 (= e!54227 (tuple2!2223 true (LongMapFixedSize!751 (defaultEntry!2317 newMap!16) (mask!6335 newMap!16) (bvor (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) (zeroValue!2211 newMap!16) lt!38748 (_size!424 newMap!16) (_keys!3985 newMap!16) (_values!2300 newMap!16) (_vacant!424 newMap!16))))))

(declare-fun bm!7764 () Bool)

(declare-fun call!7775 () Bool)

(assert (=> bm!7764 (= call!7775 (arrayContainsKey!0 (_keys!3985 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!7765 () Bool)

(assert (=> bm!7765 (= call!7761 (map!1190 newMap!16))))

(declare-fun bm!7766 () Bool)

(assert (=> bm!7766 (= call!7763 call!7775)))

(declare-fun bm!7767 () Bool)

(declare-fun call!7760 () Bool)

(assert (=> bm!7767 (= call!7764 call!7760)))

(declare-fun bm!7768 () Bool)

(declare-fun call!7770 () Bool)

(assert (=> bm!7768 (= call!7770 call!7760)))

(declare-fun bm!7769 () Bool)

(assert (=> bm!7769 (= call!7758 call!7770)))

(declare-fun b!83042 () Bool)

(declare-fun e!54238 () tuple2!2222)

(assert (=> b!83042 (= e!54238 e!54227)))

(assert (=> b!83042 (= c!13218 (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7770 () Bool)

(assert (=> bm!7770 (= call!7779 call!7764)))

(declare-fun b!83043 () Bool)

(assert (=> b!83043 (= e!54223 ((_ is Undefined!252) lt!38888))))

(declare-fun bm!7771 () Bool)

(declare-fun c!13221 () Bool)

(declare-fun c!13225 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!7771 (= call!7760 (inRange!0 (ite c!13219 (ite c!13222 (index!3145 lt!38885) (ite c!13221 (index!3144 lt!38907) (index!3147 lt!38907))) (ite c!13225 (index!3145 lt!38884) (ite c!13213 (index!3144 lt!38888) (index!3147 lt!38888)))) (mask!6335 newMap!16)))))

(declare-fun b!83044 () Bool)

(assert (=> b!83044 (= e!54221 ((_ is Undefined!252) lt!38907))))

(declare-fun b!83045 () Bool)

(declare-fun res!42986 () Bool)

(assert (=> b!83045 (= res!42986 (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3147 lt!38907)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83045 (=> (not res!42986) (not e!54235))))

(declare-fun b!83046 () Bool)

(declare-fun lt!38893 () Unit!2445)

(declare-fun lt!38898 () Unit!2445)

(assert (=> b!83046 (= lt!38893 lt!38898)))

(assert (=> b!83046 call!7767))

(declare-fun lemmaValidKeyInArrayIsInListMap!88 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 (_ BitVec 32) Int) Unit!2445)

(assert (=> b!83046 (= lt!38898 (lemmaValidKeyInArrayIsInListMap!88 (_keys!3985 newMap!16) lt!38887 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (index!3145 lt!38899) (defaultEntry!2317 newMap!16)))))

(assert (=> b!83046 (= lt!38887 (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))))))

(declare-fun lt!38909 () Unit!2445)

(declare-fun lt!38901 () Unit!2445)

(assert (=> b!83046 (= lt!38909 lt!38901)))

(declare-fun call!7765 () ListLongMap!1481)

(assert (=> b!83046 (= call!7765 call!7781)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!30 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 (_ BitVec 32) (_ BitVec 64) V!3019 Int) Unit!2445)

(assert (=> b!83046 (= lt!38901 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!30 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (index!3145 lt!38899) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!38891 () Unit!2445)

(assert (=> b!83046 (= lt!38891 e!54233)))

(assert (=> b!83046 (= c!13225 (contains!757 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> b!83046 (= e!54225 (tuple2!2223 true (LongMapFixedSize!751 (defaultEntry!2317 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (_size!424 newMap!16) (_keys!3985 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))) (_vacant!424 newMap!16))))))

(declare-fun b!83047 () Bool)

(declare-fun e!54232 () Bool)

(assert (=> b!83047 (= e!54232 (not call!7763))))

(declare-fun b!83048 () Bool)

(declare-fun res!42979 () Bool)

(assert (=> b!83048 (=> (not res!42979) (not e!54237))))

(assert (=> b!83048 (= res!42979 call!7779)))

(assert (=> b!83048 (= e!54218 e!54237)))

(declare-fun b!83049 () Bool)

(declare-fun res!42984 () Bool)

(assert (=> b!83049 (=> (not res!42984) (not e!54232))))

(assert (=> b!83049 (= res!42984 (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3144 lt!38907)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!20859 () Bool)

(assert (=> d!20859 e!54219))

(declare-fun res!42976 () Bool)

(assert (=> d!20859 (=> (not res!42976) (not e!54219))))

(assert (=> d!20859 (= res!42976 (valid!325 (_2!1121 lt!38897)))))

(assert (=> d!20859 (= lt!38897 e!54238)))

(assert (=> d!20859 (= c!13216 (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvneg (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))))

(assert (=> d!20859 (valid!325 newMap!16)))

(assert (=> d!20859 (= (update!119 newMap!16 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748) lt!38897)))

(declare-fun b!83050 () Bool)

(declare-fun res!42978 () Bool)

(assert (=> b!83050 (= res!42978 call!7770)))

(assert (=> b!83050 (=> (not res!42978) (not e!54228))))

(declare-fun b!83051 () Bool)

(declare-fun lt!38903 () Unit!2445)

(assert (=> b!83051 (= e!54234 lt!38903)))

(assert (=> b!83051 (= lt!38903 call!7774)))

(assert (=> b!83051 (= lt!38907 call!7780)))

(assert (=> b!83051 (= c!13221 ((_ is MissingZero!252) lt!38907))))

(assert (=> b!83051 e!54222))

(declare-fun bm!7772 () Bool)

(assert (=> bm!7772 (= call!7780 call!7778)))

(declare-fun bm!7773 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!30 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 (_ BitVec 64) Int) Unit!2445)

(assert (=> bm!7773 (= call!7766 (lemmaInListMapThenSeekEntryOrOpenFindsIt!30 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (defaultEntry!2317 newMap!16)))))

(declare-fun bm!7774 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!30 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 (_ BitVec 64) Int) Unit!2445)

(assert (=> bm!7774 (= call!7774 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!30 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (defaultEntry!2317 newMap!16)))))

(declare-fun b!83052 () Bool)

(declare-fun res!42974 () Bool)

(assert (=> b!83052 (=> (not res!42974) (not e!54232))))

(assert (=> b!83052 (= res!42974 call!7758)))

(assert (=> b!83052 (= e!54222 e!54232)))

(declare-fun b!83053 () Bool)

(declare-fun c!13224 () Bool)

(assert (=> b!83053 (= c!13224 ((_ is MissingVacant!252) lt!38888))))

(assert (=> b!83053 (= e!54218 e!54223)))

(declare-fun b!83054 () Bool)

(assert (=> b!83054 (= e!54230 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun b!83055 () Bool)

(assert (=> b!83055 (= e!54238 e!54229)))

(assert (=> b!83055 (= lt!38899 (seekEntryOrOpen!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (_keys!3985 newMap!16) (mask!6335 newMap!16)))))

(assert (=> b!83055 (= c!13219 ((_ is Undefined!252) lt!38899))))

(declare-fun bm!7775 () Bool)

(assert (=> bm!7775 (= call!7777 call!7775)))

(declare-fun bm!7776 () Bool)

(assert (=> bm!7776 (= call!7765 (+!114 e!54230 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun c!13217 () Bool)

(assert (=> bm!7776 (= c!13217 c!13216)))

(declare-fun bm!7777 () Bool)

(assert (=> bm!7777 (= call!7773 call!7778)))

(declare-fun bm!7778 () Bool)

(assert (=> bm!7778 (= call!7772 call!7765)))

(declare-fun b!83056 () Bool)

(assert (=> b!83056 (= e!54228 (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38885)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (= (and d!20859 c!13216) b!83042))

(assert (= (and d!20859 (not c!13216)) b!83055))

(assert (= (and b!83042 c!13218) b!83025))

(assert (= (and b!83042 (not c!13218)) b!83041))

(assert (= (or b!83025 b!83041) bm!7761))

(assert (= (or b!83025 b!83041) bm!7755))

(assert (= (or b!83025 b!83041) bm!7778))

(assert (= (and b!83055 c!13219) b!83017))

(assert (= (and b!83055 (not c!13219)) b!83031))

(assert (= (and b!83017 c!13222) b!83036))

(assert (= (and b!83017 (not c!13222)) b!83051))

(assert (= (and b!83036 res!42975) b!83050))

(assert (= (and b!83050 res!42978) b!83056))

(assert (= (and b!83051 c!13221) b!83052))

(assert (= (and b!83051 (not c!13221)) b!83028))

(assert (= (and b!83052 res!42974) b!83049))

(assert (= (and b!83049 res!42984) b!83047))

(assert (= (and b!83028 c!13215) b!83034))

(assert (= (and b!83028 (not c!13215)) b!83044))

(assert (= (and b!83034 res!42981) b!83045))

(assert (= (and b!83045 res!42986) b!83030))

(assert (= (or b!83052 b!83034) bm!7769))

(assert (= (or b!83047 b!83030) bm!7766))

(assert (= (or b!83050 bm!7769) bm!7768))

(assert (= (or b!83036 b!83051) bm!7772))

(assert (= (and b!83031 c!13214) b!83038))

(assert (= (and b!83031 (not c!13214)) b!83023))

(assert (= (and b!83023 c!13223) b!83024))

(assert (= (and b!83023 (not c!13223)) b!83046))

(assert (= (and b!83046 c!13225) b!83020))

(assert (= (and b!83046 (not c!13225)) b!83039))

(assert (= (and b!83020 res!42977) b!83035))

(assert (= (and b!83035 res!42980) b!83027))

(assert (= (and b!83039 c!13213) b!83048))

(assert (= (and b!83039 (not c!13213)) b!83053))

(assert (= (and b!83048 res!42979) b!83022))

(assert (= (and b!83022 res!42985) b!83021))

(assert (= (and b!83053 c!13224) b!83033))

(assert (= (and b!83053 (not c!13224)) b!83043))

(assert (= (and b!83033 res!42982) b!83040))

(assert (= (and b!83040 res!42983) b!83019))

(assert (= (or b!83048 b!83033) bm!7770))

(assert (= (or b!83021 b!83019) bm!7775))

(assert (= (or b!83035 bm!7770) bm!7767))

(assert (= (or b!83020 b!83039) bm!7777))

(assert (= (or b!83038 b!83024) bm!7757))

(assert (= (or bm!7772 bm!7777) bm!7759))

(assert (= (or bm!7766 bm!7775) bm!7764))

(assert (= (or b!83051 b!83039) bm!7774))

(assert (= (or b!83017 b!83046) bm!7760))

(assert (= (or bm!7768 bm!7767) bm!7771))

(assert (= (or b!83036 b!83020) bm!7773))

(assert (= (or b!83017 b!83046) bm!7762))

(assert (= (or bm!7755 b!83046) bm!7758))

(assert (= (or bm!7761 bm!7760) bm!7756))

(assert (= (or bm!7778 b!83046) bm!7776))

(assert (= (and bm!7776 c!13217) b!83037))

(assert (= (and bm!7776 (not c!13217)) b!83054))

(assert (= (and d!20859 res!42976) b!83026))

(assert (= (and b!83026 c!13220) b!83018))

(assert (= (and b!83026 (not c!13220)) b!83032))

(assert (= (and b!83018 res!42987) b!83029))

(assert (= (or b!83018 b!83029 b!83032) bm!7763))

(assert (= (or b!83029 b!83032) bm!7765))

(declare-fun m!85721 () Bool)

(assert (=> bm!7763 m!85721))

(declare-fun m!85723 () Bool)

(assert (=> b!83022 m!85723))

(declare-fun m!85725 () Bool)

(assert (=> bm!7776 m!85725))

(declare-fun m!85727 () Bool)

(assert (=> b!83045 m!85727))

(declare-fun m!85729 () Bool)

(assert (=> b!83054 m!85729))

(assert (=> bm!7764 m!85591))

(declare-fun m!85731 () Bool)

(assert (=> bm!7764 m!85731))

(declare-fun m!85733 () Bool)

(assert (=> b!83025 m!85733))

(declare-fun m!85735 () Bool)

(assert (=> bm!7756 m!85735))

(assert (=> bm!7757 m!85591))

(declare-fun m!85737 () Bool)

(assert (=> bm!7757 m!85737))

(declare-fun m!85739 () Bool)

(assert (=> d!20859 m!85739))

(assert (=> d!20859 m!85619))

(assert (=> b!83055 m!85591))

(declare-fun m!85741 () Bool)

(assert (=> b!83055 m!85741))

(declare-fun m!85743 () Bool)

(assert (=> bm!7771 m!85743))

(declare-fun m!85745 () Bool)

(assert (=> b!83056 m!85745))

(assert (=> bm!7765 m!85621))

(declare-fun m!85747 () Bool)

(assert (=> b!83049 m!85747))

(assert (=> bm!7759 m!85591))

(assert (=> bm!7759 m!85741))

(assert (=> b!83018 m!85591))

(declare-fun m!85749 () Bool)

(assert (=> b!83018 m!85749))

(declare-fun m!85751 () Bool)

(assert (=> b!83029 m!85751))

(declare-fun m!85753 () Bool)

(assert (=> b!83041 m!85753))

(declare-fun m!85755 () Bool)

(assert (=> b!83040 m!85755))

(declare-fun m!85757 () Bool)

(assert (=> bm!7758 m!85757))

(declare-fun m!85759 () Bool)

(assert (=> bm!7758 m!85759))

(assert (=> b!83046 m!85729))

(assert (=> b!83046 m!85591))

(declare-fun m!85761 () Bool)

(assert (=> b!83046 m!85761))

(assert (=> b!83046 m!85591))

(declare-fun m!85763 () Bool)

(assert (=> b!83046 m!85763))

(assert (=> b!83046 m!85757))

(declare-fun m!85765 () Bool)

(assert (=> b!83046 m!85765))

(assert (=> b!83046 m!85729))

(assert (=> bm!7774 m!85591))

(declare-fun m!85767 () Bool)

(assert (=> bm!7774 m!85767))

(declare-fun m!85769 () Bool)

(assert (=> bm!7762 m!85769))

(declare-fun m!85771 () Bool)

(assert (=> bm!7762 m!85771))

(assert (=> bm!7773 m!85591))

(declare-fun m!85773 () Bool)

(assert (=> bm!7773 m!85773))

(declare-fun m!85775 () Bool)

(assert (=> b!83027 m!85775))

(assert (=> b!82844 d!20859))

(declare-fun d!20861 () Bool)

(assert (=> d!20861 (not (arrayContainsKey!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!38912 () Unit!2445)

(declare-fun choose!68 (array!4014 (_ BitVec 32) (_ BitVec 64) List!1548) Unit!2445)

(assert (=> d!20861 (= lt!38912 (choose!68 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545)))))

(assert (=> d!20861 (bvslt (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!20861 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545)) lt!38912)))

(declare-fun bs!3498 () Bool)

(assert (= bs!3498 d!20861))

(assert (=> bs!3498 m!85591))

(assert (=> bs!3498 m!85631))

(assert (=> bs!3498 m!85591))

(declare-fun m!85777 () Bool)

(assert (=> bs!3498 m!85777))

(assert (=> b!82843 d!20861))

(declare-fun d!20863 () Bool)

(assert (=> d!20863 (arrayNoDuplicates!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) from!355 Nil!1545)))

(declare-fun lt!38915 () Unit!2445)

(declare-fun choose!39 (array!4014 (_ BitVec 32) (_ BitVec 32)) Unit!2445)

(assert (=> d!20863 (= lt!38915 (choose!39 (_keys!3985 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!20863 (bvslt (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!20863 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000000 from!355) lt!38915)))

(declare-fun bs!3499 () Bool)

(assert (= bs!3499 d!20863))

(assert (=> bs!3499 m!85627))

(declare-fun m!85779 () Bool)

(assert (=> bs!3499 m!85779))

(assert (=> b!82843 d!20863))

(declare-fun d!20865 () Bool)

(declare-fun res!42992 () Bool)

(declare-fun e!54243 () Bool)

(assert (=> d!20865 (=> res!42992 e!54243)))

(assert (=> d!20865 (= res!42992 (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> d!20865 (= (arrayContainsKey!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!54243)))

(declare-fun b!83061 () Bool)

(declare-fun e!54244 () Bool)

(assert (=> b!83061 (= e!54243 e!54244)))

(declare-fun res!42993 () Bool)

(assert (=> b!83061 (=> (not res!42993) (not e!54244))))

(assert (=> b!83061 (= res!42993 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!83062 () Bool)

(assert (=> b!83062 (= e!54244 (arrayContainsKey!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!20865 (not res!42992)) b!83061))

(assert (= (and b!83061 res!42993) b!83062))

(declare-fun m!85781 () Bool)

(assert (=> d!20865 m!85781))

(assert (=> b!83062 m!85591))

(declare-fun m!85783 () Bool)

(assert (=> b!83062 m!85783))

(assert (=> b!82843 d!20865))

(declare-fun d!20867 () Bool)

(declare-fun e!54247 () Bool)

(assert (=> d!20867 e!54247))

(declare-fun c!13228 () Bool)

(assert (=> d!20867 (= c!13228 (and (not (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!38918 () Unit!2445)

(declare-fun choose!491 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 (_ BitVec 64) (_ BitVec 32) Int) Unit!2445)

(assert (=> d!20867 (= lt!38918 (choose!491 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))))))

(assert (=> d!20867 (validMask!0 (mask!6335 (v!2632 (underlying!290 thiss!992))))))

(assert (=> d!20867 (= (lemmaListMapContainsThenArrayContainsFrom!70 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))) lt!38918)))

(declare-fun b!83067 () Bool)

(assert (=> b!83067 (= e!54247 (arrayContainsKey!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!83068 () Bool)

(assert (=> b!83068 (= e!54247 (ite (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!20867 c!13228) b!83067))

(assert (= (and d!20867 (not c!13228)) b!83068))

(assert (=> d!20867 m!85591))

(declare-fun m!85785 () Bool)

(assert (=> d!20867 m!85785))

(assert (=> d!20867 m!85601))

(assert (=> b!83067 m!85591))

(assert (=> b!83067 m!85631))

(assert (=> b!82843 d!20867))

(declare-fun d!20869 () Bool)

(declare-fun res!43001 () Bool)

(declare-fun e!54258 () Bool)

(assert (=> d!20869 (=> res!43001 e!54258)))

(assert (=> d!20869 (= res!43001 (bvsge from!355 (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(assert (=> d!20869 (= (arrayNoDuplicates!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) from!355 Nil!1545) e!54258)))

(declare-fun b!83079 () Bool)

(declare-fun e!54259 () Bool)

(assert (=> b!83079 (= e!54258 e!54259)))

(declare-fun res!43000 () Bool)

(assert (=> b!83079 (=> (not res!43000) (not e!54259))))

(declare-fun e!54257 () Bool)

(assert (=> b!83079 (= res!43000 (not e!54257))))

(declare-fun res!43002 () Bool)

(assert (=> b!83079 (=> (not res!43002) (not e!54257))))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!83079 (= res!43002 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun b!83080 () Bool)

(declare-fun e!54256 () Bool)

(declare-fun call!7784 () Bool)

(assert (=> b!83080 (= e!54256 call!7784)))

(declare-fun c!13231 () Bool)

(declare-fun bm!7781 () Bool)

(assert (=> bm!7781 (= call!7784 (arrayNoDuplicates!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!13231 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545) Nil!1545)))))

(declare-fun b!83081 () Bool)

(assert (=> b!83081 (= e!54259 e!54256)))

(assert (=> b!83081 (= c!13231 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun b!83082 () Bool)

(declare-fun contains!759 (List!1548 (_ BitVec 64)) Bool)

(assert (=> b!83082 (= e!54257 (contains!759 Nil!1545 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun b!83083 () Bool)

(assert (=> b!83083 (= e!54256 call!7784)))

(assert (= (and d!20869 (not res!43001)) b!83079))

(assert (= (and b!83079 res!43002) b!83082))

(assert (= (and b!83079 res!43000) b!83081))

(assert (= (and b!83081 c!13231) b!83080))

(assert (= (and b!83081 (not c!13231)) b!83083))

(assert (= (or b!83080 b!83083) bm!7781))

(assert (=> b!83079 m!85591))

(assert (=> b!83079 m!85591))

(declare-fun m!85787 () Bool)

(assert (=> b!83079 m!85787))

(assert (=> bm!7781 m!85591))

(declare-fun m!85789 () Bool)

(assert (=> bm!7781 m!85789))

(assert (=> b!83081 m!85591))

(assert (=> b!83081 m!85591))

(assert (=> b!83081 m!85787))

(assert (=> b!83082 m!85591))

(assert (=> b!83082 m!85591))

(declare-fun m!85791 () Bool)

(assert (=> b!83082 m!85791))

(assert (=> b!82843 d!20869))

(declare-fun d!20871 () Bool)

(assert (=> d!20871 (= (map!1190 newMap!16) (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun bs!3500 () Bool)

(assert (= bs!3500 d!20871))

(assert (=> bs!3500 m!85729))

(assert (=> b!82847 d!20871))

(declare-fun b!83126 () Bool)

(declare-fun e!54291 () ListLongMap!1481)

(declare-fun call!7799 () ListLongMap!1481)

(assert (=> b!83126 (= e!54291 call!7799)))

(declare-fun bm!7796 () Bool)

(declare-fun call!7805 () ListLongMap!1481)

(declare-fun call!7800 () ListLongMap!1481)

(assert (=> bm!7796 (= call!7805 call!7800)))

(declare-fun b!83127 () Bool)

(declare-fun e!54295 () Bool)

(declare-fun lt!38974 () ListLongMap!1481)

(declare-fun apply!81 (ListLongMap!1481 (_ BitVec 64)) V!3019)

(assert (=> b!83127 (= e!54295 (= (apply!81 lt!38974 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun b!83128 () Bool)

(declare-fun e!54286 () ListLongMap!1481)

(declare-fun call!7801 () ListLongMap!1481)

(assert (=> b!83128 (= e!54286 call!7801)))

(declare-fun b!83130 () Bool)

(declare-fun e!54287 () ListLongMap!1481)

(declare-fun call!7802 () ListLongMap!1481)

(assert (=> b!83130 (= e!54287 (+!114 call!7802 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!83131 () Bool)

(declare-fun res!43029 () Bool)

(declare-fun e!54294 () Bool)

(assert (=> b!83131 (=> (not res!43029) (not e!54294))))

(declare-fun e!54290 () Bool)

(assert (=> b!83131 (= res!43029 e!54290)))

(declare-fun c!13248 () Bool)

(assert (=> b!83131 (= c!13248 (not (= (bvand (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7797 () Bool)

(assert (=> bm!7797 (= call!7800 (getCurrentListMapNoExtraKeys!78 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun bm!7798 () Bool)

(declare-fun c!13249 () Bool)

(declare-fun c!13247 () Bool)

(assert (=> bm!7798 (= call!7802 (+!114 (ite c!13247 call!7800 (ite c!13249 call!7805 call!7799)) (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!83132 () Bool)

(declare-fun e!54293 () Unit!2445)

(declare-fun Unit!2455 () Unit!2445)

(assert (=> b!83132 (= e!54293 Unit!2455)))

(declare-fun bm!7799 () Bool)

(declare-fun call!7803 () Bool)

(assert (=> bm!7799 (= call!7803 (contains!757 lt!38974 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83133 () Bool)

(declare-fun res!43026 () Bool)

(assert (=> b!83133 (=> (not res!43026) (not e!54294))))

(declare-fun e!54297 () Bool)

(assert (=> b!83133 (= res!43026 e!54297)))

(declare-fun res!43027 () Bool)

(assert (=> b!83133 (=> res!43027 e!54297)))

(declare-fun e!54292 () Bool)

(assert (=> b!83133 (= res!43027 (not e!54292))))

(declare-fun res!43024 () Bool)

(assert (=> b!83133 (=> (not res!43024) (not e!54292))))

(assert (=> b!83133 (= res!43024 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!83134 () Bool)

(declare-fun e!54288 () Bool)

(assert (=> b!83134 (= e!54297 e!54288)))

(declare-fun res!43023 () Bool)

(assert (=> b!83134 (=> (not res!43023) (not e!54288))))

(assert (=> b!83134 (= res!43023 (contains!757 lt!38974 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!83134 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!83135 () Bool)

(declare-fun e!54289 () Bool)

(assert (=> b!83135 (= e!54289 (not call!7803))))

(declare-fun b!83136 () Bool)

(declare-fun e!54296 () Bool)

(assert (=> b!83136 (= e!54290 e!54296)))

(declare-fun res!43022 () Bool)

(declare-fun call!7804 () Bool)

(assert (=> b!83136 (= res!43022 call!7804)))

(assert (=> b!83136 (=> (not res!43022) (not e!54296))))

(declare-fun b!83137 () Bool)

(declare-fun c!13246 () Bool)

(assert (=> b!83137 (= c!13246 (and (not (= (bvand (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!83137 (= e!54286 e!54291)))

(declare-fun b!83138 () Bool)

(declare-fun lt!38969 () Unit!2445)

(assert (=> b!83138 (= e!54293 lt!38969)))

(declare-fun lt!38975 () ListLongMap!1481)

(assert (=> b!83138 (= lt!38975 (getCurrentListMapNoExtraKeys!78 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun lt!38968 () (_ BitVec 64))

(assert (=> b!83138 (= lt!38968 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38972 () (_ BitVec 64))

(assert (=> b!83138 (= lt!38972 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!38977 () Unit!2445)

(declare-fun addStillContains!57 (ListLongMap!1481 (_ BitVec 64) V!3019 (_ BitVec 64)) Unit!2445)

(assert (=> b!83138 (= lt!38977 (addStillContains!57 lt!38975 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) lt!38972))))

(assert (=> b!83138 (contains!757 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!38972)))

(declare-fun lt!38973 () Unit!2445)

(assert (=> b!83138 (= lt!38973 lt!38977)))

(declare-fun lt!38978 () ListLongMap!1481)

(assert (=> b!83138 (= lt!38978 (getCurrentListMapNoExtraKeys!78 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun lt!38970 () (_ BitVec 64))

(assert (=> b!83138 (= lt!38970 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38984 () (_ BitVec 64))

(assert (=> b!83138 (= lt!38984 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!38982 () Unit!2445)

(declare-fun addApplyDifferent!57 (ListLongMap!1481 (_ BitVec 64) V!3019 (_ BitVec 64)) Unit!2445)

(assert (=> b!83138 (= lt!38982 (addApplyDifferent!57 lt!38978 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))) lt!38984))))

(assert (=> b!83138 (= (apply!81 (+!114 lt!38978 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!38984) (apply!81 lt!38978 lt!38984))))

(declare-fun lt!38976 () Unit!2445)

(assert (=> b!83138 (= lt!38976 lt!38982)))

(declare-fun lt!38971 () ListLongMap!1481)

(assert (=> b!83138 (= lt!38971 (getCurrentListMapNoExtraKeys!78 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun lt!38980 () (_ BitVec 64))

(assert (=> b!83138 (= lt!38980 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38964 () (_ BitVec 64))

(assert (=> b!83138 (= lt!38964 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!38979 () Unit!2445)

(assert (=> b!83138 (= lt!38979 (addApplyDifferent!57 lt!38971 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) lt!38964))))

(assert (=> b!83138 (= (apply!81 (+!114 lt!38971 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!38964) (apply!81 lt!38971 lt!38964))))

(declare-fun lt!38965 () Unit!2445)

(assert (=> b!83138 (= lt!38965 lt!38979)))

(declare-fun lt!38967 () ListLongMap!1481)

(assert (=> b!83138 (= lt!38967 (getCurrentListMapNoExtraKeys!78 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun lt!38981 () (_ BitVec 64))

(assert (=> b!83138 (= lt!38981 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38966 () (_ BitVec 64))

(assert (=> b!83138 (= lt!38966 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!83138 (= lt!38969 (addApplyDifferent!57 lt!38967 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))) lt!38966))))

(assert (=> b!83138 (= (apply!81 (+!114 lt!38967 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!38966) (apply!81 lt!38967 lt!38966))))

(declare-fun b!83139 () Bool)

(assert (=> b!83139 (= e!54288 (= (apply!81 lt!38974 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83139 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2156 (_values!2300 (v!2632 (underlying!290 thiss!992))))))))

(assert (=> b!83139 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!83129 () Bool)

(assert (=> b!83129 (= e!54291 call!7801)))

(declare-fun d!20873 () Bool)

(assert (=> d!20873 e!54294))

(declare-fun res!43025 () Bool)

(assert (=> d!20873 (=> (not res!43025) (not e!54294))))

(assert (=> d!20873 (= res!43025 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun lt!38983 () ListLongMap!1481)

(assert (=> d!20873 (= lt!38974 lt!38983)))

(declare-fun lt!38963 () Unit!2445)

(assert (=> d!20873 (= lt!38963 e!54293)))

(declare-fun c!13245 () Bool)

(declare-fun e!54298 () Bool)

(assert (=> d!20873 (= c!13245 e!54298)))

(declare-fun res!43021 () Bool)

(assert (=> d!20873 (=> (not res!43021) (not e!54298))))

(assert (=> d!20873 (= res!43021 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(assert (=> d!20873 (= lt!38983 e!54287)))

(assert (=> d!20873 (= c!13247 (and (not (= (bvand (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20873 (validMask!0 (mask!6335 (v!2632 (underlying!290 thiss!992))))))

(assert (=> d!20873 (= (getCurrentListMap!440 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))) lt!38974)))

(declare-fun bm!7800 () Bool)

(assert (=> bm!7800 (= call!7804 (contains!757 lt!38974 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83140 () Bool)

(assert (=> b!83140 (= e!54290 (not call!7804))))

(declare-fun bm!7801 () Bool)

(assert (=> bm!7801 (= call!7799 call!7805)))

(declare-fun b!83141 () Bool)

(assert (=> b!83141 (= e!54298 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!83142 () Bool)

(assert (=> b!83142 (= e!54294 e!54289)))

(declare-fun c!13244 () Bool)

(assert (=> b!83142 (= c!13244 (not (= (bvand (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7802 () Bool)

(assert (=> bm!7802 (= call!7801 call!7802)))

(declare-fun b!83143 () Bool)

(assert (=> b!83143 (= e!54296 (= (apply!81 lt!38974 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun b!83144 () Bool)

(assert (=> b!83144 (= e!54292 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!83145 () Bool)

(assert (=> b!83145 (= e!54287 e!54286)))

(assert (=> b!83145 (= c!13249 (and (not (= (bvand (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!83146 () Bool)

(assert (=> b!83146 (= e!54289 e!54295)))

(declare-fun res!43028 () Bool)

(assert (=> b!83146 (= res!43028 call!7803)))

(assert (=> b!83146 (=> (not res!43028) (not e!54295))))

(assert (= (and d!20873 c!13247) b!83130))

(assert (= (and d!20873 (not c!13247)) b!83145))

(assert (= (and b!83145 c!13249) b!83128))

(assert (= (and b!83145 (not c!13249)) b!83137))

(assert (= (and b!83137 c!13246) b!83129))

(assert (= (and b!83137 (not c!13246)) b!83126))

(assert (= (or b!83129 b!83126) bm!7801))

(assert (= (or b!83128 bm!7801) bm!7796))

(assert (= (or b!83128 b!83129) bm!7802))

(assert (= (or b!83130 bm!7796) bm!7797))

(assert (= (or b!83130 bm!7802) bm!7798))

(assert (= (and d!20873 res!43021) b!83141))

(assert (= (and d!20873 c!13245) b!83138))

(assert (= (and d!20873 (not c!13245)) b!83132))

(assert (= (and d!20873 res!43025) b!83133))

(assert (= (and b!83133 res!43024) b!83144))

(assert (= (and b!83133 (not res!43027)) b!83134))

(assert (= (and b!83134 res!43023) b!83139))

(assert (= (and b!83133 res!43026) b!83131))

(assert (= (and b!83131 c!13248) b!83136))

(assert (= (and b!83131 (not c!13248)) b!83140))

(assert (= (and b!83136 res!43022) b!83143))

(assert (= (or b!83136 b!83140) bm!7800))

(assert (= (and b!83131 res!43029) b!83142))

(assert (= (and b!83142 c!13244) b!83146))

(assert (= (and b!83142 (not c!13244)) b!83135))

(assert (= (and b!83146 res!43028) b!83127))

(assert (= (or b!83146 b!83135) bm!7799))

(declare-fun b_lambda!3699 () Bool)

(assert (=> (not b_lambda!3699) (not b!83139)))

(assert (=> b!83139 t!5248))

(declare-fun b_and!5053 () Bool)

(assert (= b_and!5041 (and (=> t!5248 result!2889) b_and!5053)))

(assert (=> b!83139 t!5250))

(declare-fun b_and!5055 () Bool)

(assert (= b_and!5043 (and (=> t!5250 result!2893) b_and!5055)))

(assert (=> bm!7797 m!85597))

(declare-fun m!85793 () Bool)

(assert (=> bm!7800 m!85793))

(declare-fun m!85795 () Bool)

(assert (=> bm!7798 m!85795))

(assert (=> b!83144 m!85781))

(assert (=> b!83144 m!85781))

(declare-fun m!85797 () Bool)

(assert (=> b!83144 m!85797))

(declare-fun m!85799 () Bool)

(assert (=> bm!7799 m!85799))

(assert (=> b!83141 m!85781))

(assert (=> b!83141 m!85781))

(assert (=> b!83141 m!85797))

(assert (=> b!83134 m!85781))

(assert (=> b!83134 m!85781))

(declare-fun m!85801 () Bool)

(assert (=> b!83134 m!85801))

(assert (=> d!20873 m!85601))

(declare-fun m!85803 () Bool)

(assert (=> b!83127 m!85803))

(declare-fun m!85805 () Bool)

(assert (=> b!83138 m!85805))

(declare-fun m!85807 () Bool)

(assert (=> b!83138 m!85807))

(declare-fun m!85809 () Bool)

(assert (=> b!83138 m!85809))

(declare-fun m!85811 () Bool)

(assert (=> b!83138 m!85811))

(declare-fun m!85813 () Bool)

(assert (=> b!83138 m!85813))

(declare-fun m!85815 () Bool)

(assert (=> b!83138 m!85815))

(declare-fun m!85817 () Bool)

(assert (=> b!83138 m!85817))

(assert (=> b!83138 m!85807))

(declare-fun m!85819 () Bool)

(assert (=> b!83138 m!85819))

(declare-fun m!85821 () Bool)

(assert (=> b!83138 m!85821))

(assert (=> b!83138 m!85813))

(declare-fun m!85823 () Bool)

(assert (=> b!83138 m!85823))

(assert (=> b!83138 m!85809))

(assert (=> b!83138 m!85781))

(declare-fun m!85825 () Bool)

(assert (=> b!83138 m!85825))

(declare-fun m!85827 () Bool)

(assert (=> b!83138 m!85827))

(declare-fun m!85829 () Bool)

(assert (=> b!83138 m!85829))

(assert (=> b!83138 m!85597))

(declare-fun m!85831 () Bool)

(assert (=> b!83138 m!85831))

(assert (=> b!83138 m!85823))

(declare-fun m!85833 () Bool)

(assert (=> b!83138 m!85833))

(assert (=> b!83139 m!85615))

(declare-fun m!85835 () Bool)

(assert (=> b!83139 m!85835))

(assert (=> b!83139 m!85781))

(declare-fun m!85837 () Bool)

(assert (=> b!83139 m!85837))

(assert (=> b!83139 m!85781))

(assert (=> b!83139 m!85835))

(assert (=> b!83139 m!85615))

(declare-fun m!85839 () Bool)

(assert (=> b!83139 m!85839))

(declare-fun m!85841 () Bool)

(assert (=> b!83130 m!85841))

(declare-fun m!85843 () Bool)

(assert (=> b!83143 m!85843))

(assert (=> b!82847 d!20873))

(declare-fun d!20875 () Bool)

(assert (=> d!20875 (= (array_inv!1143 (_keys!3985 newMap!16)) (bvsge (size!2155 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!82846 d!20875))

(declare-fun d!20877 () Bool)

(assert (=> d!20877 (= (array_inv!1144 (_values!2300 newMap!16)) (bvsge (size!2156 (_values!2300 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!82846 d!20877))

(declare-fun d!20879 () Bool)

(assert (=> d!20879 (= (+!114 (+!114 lt!38754 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (+!114 (+!114 lt!38754 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(declare-fun lt!38987 () Unit!2445)

(declare-fun choose!492 (ListLongMap!1481 (_ BitVec 64) V!3019 (_ BitVec 64) V!3019) Unit!2445)

(assert (=> d!20879 (= lt!38987 (choose!492 lt!38754 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))

(assert (=> d!20879 (not (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20879 (= (addCommutativeForDiffKeys!33 lt!38754 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))) lt!38987)))

(declare-fun bs!3501 () Bool)

(assert (= bs!3501 d!20879))

(declare-fun m!85845 () Bool)

(assert (=> bs!3501 m!85845))

(declare-fun m!85847 () Bool)

(assert (=> bs!3501 m!85847))

(assert (=> bs!3501 m!85845))

(declare-fun m!85849 () Bool)

(assert (=> bs!3501 m!85849))

(assert (=> bs!3501 m!85849))

(declare-fun m!85851 () Bool)

(assert (=> bs!3501 m!85851))

(assert (=> bs!3501 m!85591))

(declare-fun m!85853 () Bool)

(assert (=> bs!3501 m!85853))

(assert (=> b!82837 d!20879))

(declare-fun d!20881 () Bool)

(declare-fun e!54301 () Bool)

(assert (=> d!20881 e!54301))

(declare-fun res!43034 () Bool)

(assert (=> d!20881 (=> (not res!43034) (not e!54301))))

(declare-fun lt!38999 () ListLongMap!1481)

(assert (=> d!20881 (= res!43034 (contains!757 lt!38999 (_1!1120 lt!38750)))))

(declare-fun lt!38996 () List!1547)

(assert (=> d!20881 (= lt!38999 (ListLongMap!1482 lt!38996))))

(declare-fun lt!38997 () Unit!2445)

(declare-fun lt!38998 () Unit!2445)

(assert (=> d!20881 (= lt!38997 lt!38998)))

(assert (=> d!20881 (= (getValueByKey!138 lt!38996 (_1!1120 lt!38750)) (Some!143 (_2!1120 lt!38750)))))

(declare-fun lemmaContainsTupThenGetReturnValue!57 (List!1547 (_ BitVec 64) V!3019) Unit!2445)

(assert (=> d!20881 (= lt!38998 (lemmaContainsTupThenGetReturnValue!57 lt!38996 (_1!1120 lt!38750) (_2!1120 lt!38750)))))

(declare-fun insertStrictlySorted!59 (List!1547 (_ BitVec 64) V!3019) List!1547)

(assert (=> d!20881 (= lt!38996 (insertStrictlySorted!59 (toList!756 lt!38754) (_1!1120 lt!38750) (_2!1120 lt!38750)))))

(assert (=> d!20881 (= (+!114 lt!38754 lt!38750) lt!38999)))

(declare-fun b!83151 () Bool)

(declare-fun res!43035 () Bool)

(assert (=> b!83151 (=> (not res!43035) (not e!54301))))

(assert (=> b!83151 (= res!43035 (= (getValueByKey!138 (toList!756 lt!38999) (_1!1120 lt!38750)) (Some!143 (_2!1120 lt!38750))))))

(declare-fun b!83152 () Bool)

(declare-fun contains!760 (List!1547 tuple2!2220) Bool)

(assert (=> b!83152 (= e!54301 (contains!760 (toList!756 lt!38999) lt!38750))))

(assert (= (and d!20881 res!43034) b!83151))

(assert (= (and b!83151 res!43035) b!83152))

(declare-fun m!85855 () Bool)

(assert (=> d!20881 m!85855))

(declare-fun m!85857 () Bool)

(assert (=> d!20881 m!85857))

(declare-fun m!85859 () Bool)

(assert (=> d!20881 m!85859))

(declare-fun m!85861 () Bool)

(assert (=> d!20881 m!85861))

(declare-fun m!85863 () Bool)

(assert (=> b!83151 m!85863))

(declare-fun m!85865 () Bool)

(assert (=> b!83152 m!85865))

(assert (=> b!82837 d!20881))

(declare-fun d!20883 () Bool)

(declare-fun e!54302 () Bool)

(assert (=> d!20883 e!54302))

(declare-fun res!43036 () Bool)

(assert (=> d!20883 (=> (not res!43036) (not e!54302))))

(declare-fun lt!39003 () ListLongMap!1481)

(assert (=> d!20883 (= res!43036 (contains!757 lt!39003 (_1!1120 lt!38750)))))

(declare-fun lt!39000 () List!1547)

(assert (=> d!20883 (= lt!39003 (ListLongMap!1482 lt!39000))))

(declare-fun lt!39001 () Unit!2445)

(declare-fun lt!39002 () Unit!2445)

(assert (=> d!20883 (= lt!39001 lt!39002)))

(assert (=> d!20883 (= (getValueByKey!138 lt!39000 (_1!1120 lt!38750)) (Some!143 (_2!1120 lt!38750)))))

(assert (=> d!20883 (= lt!39002 (lemmaContainsTupThenGetReturnValue!57 lt!39000 (_1!1120 lt!38750) (_2!1120 lt!38750)))))

(assert (=> d!20883 (= lt!39000 (insertStrictlySorted!59 (toList!756 (+!114 lt!38754 lt!38747)) (_1!1120 lt!38750) (_2!1120 lt!38750)))))

(assert (=> d!20883 (= (+!114 (+!114 lt!38754 lt!38747) lt!38750) lt!39003)))

(declare-fun b!83153 () Bool)

(declare-fun res!43037 () Bool)

(assert (=> b!83153 (=> (not res!43037) (not e!54302))))

(assert (=> b!83153 (= res!43037 (= (getValueByKey!138 (toList!756 lt!39003) (_1!1120 lt!38750)) (Some!143 (_2!1120 lt!38750))))))

(declare-fun b!83154 () Bool)

(assert (=> b!83154 (= e!54302 (contains!760 (toList!756 lt!39003) lt!38750))))

(assert (= (and d!20883 res!43036) b!83153))

(assert (= (and b!83153 res!43037) b!83154))

(declare-fun m!85867 () Bool)

(assert (=> d!20883 m!85867))

(declare-fun m!85869 () Bool)

(assert (=> d!20883 m!85869))

(declare-fun m!85871 () Bool)

(assert (=> d!20883 m!85871))

(declare-fun m!85873 () Bool)

(assert (=> d!20883 m!85873))

(declare-fun m!85875 () Bool)

(assert (=> b!83153 m!85875))

(declare-fun m!85877 () Bool)

(assert (=> b!83154 m!85877))

(assert (=> b!82837 d!20883))

(declare-fun b!83179 () Bool)

(declare-fun e!54317 () ListLongMap!1481)

(declare-fun call!7808 () ListLongMap!1481)

(assert (=> b!83179 (= e!54317 call!7808)))

(declare-fun b!83180 () Bool)

(assert (=> b!83180 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(assert (=> b!83180 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2156 (_values!2300 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun lt!39021 () ListLongMap!1481)

(declare-fun e!54320 () Bool)

(assert (=> b!83180 (= e!54320 (= (apply!81 lt!39021 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!83181 () Bool)

(declare-fun e!54322 () ListLongMap!1481)

(assert (=> b!83181 (= e!54322 (ListLongMap!1482 Nil!1544))))

(declare-fun b!83182 () Bool)

(declare-fun e!54321 () Bool)

(assert (=> b!83182 (= e!54321 (= lt!39021 (getCurrentListMapNoExtraKeys!78 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!83184 () Bool)

(declare-fun e!54319 () Bool)

(assert (=> b!83184 (= e!54319 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!83184 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!83185 () Bool)

(declare-fun e!54318 () Bool)

(assert (=> b!83185 (= e!54318 e!54320)))

(assert (=> b!83185 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun res!43049 () Bool)

(assert (=> b!83185 (= res!43049 (contains!757 lt!39021 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!83185 (=> (not res!43049) (not e!54320))))

(declare-fun b!83186 () Bool)

(assert (=> b!83186 (= e!54318 e!54321)))

(declare-fun c!13260 () Bool)

(assert (=> b!83186 (= c!13260 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!83187 () Bool)

(assert (=> b!83187 (= e!54322 e!54317)))

(declare-fun c!13259 () Bool)

(assert (=> b!83187 (= c!13259 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!83183 () Bool)

(declare-fun res!43048 () Bool)

(declare-fun e!54323 () Bool)

(assert (=> b!83183 (=> (not res!43048) (not e!54323))))

(assert (=> b!83183 (= res!43048 (not (contains!757 lt!39021 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!20885 () Bool)

(assert (=> d!20885 e!54323))

(declare-fun res!43047 () Bool)

(assert (=> d!20885 (=> (not res!43047) (not e!54323))))

(assert (=> d!20885 (= res!43047 (not (contains!757 lt!39021 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20885 (= lt!39021 e!54322)))

(declare-fun c!13258 () Bool)

(assert (=> d!20885 (= c!13258 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(assert (=> d!20885 (validMask!0 (mask!6335 (v!2632 (underlying!290 thiss!992))))))

(assert (=> d!20885 (= (getCurrentListMapNoExtraKeys!78 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))) lt!39021)))

(declare-fun b!83188 () Bool)

(declare-fun lt!39024 () Unit!2445)

(declare-fun lt!39023 () Unit!2445)

(assert (=> b!83188 (= lt!39024 lt!39023)))

(declare-fun lt!39018 () ListLongMap!1481)

(declare-fun lt!39019 () (_ BitVec 64))

(declare-fun lt!39020 () V!3019)

(declare-fun lt!39022 () (_ BitVec 64))

(assert (=> b!83188 (not (contains!757 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020)) lt!39019))))

(declare-fun addStillNotContains!32 (ListLongMap!1481 (_ BitVec 64) V!3019 (_ BitVec 64)) Unit!2445)

(assert (=> b!83188 (= lt!39023 (addStillNotContains!32 lt!39018 lt!39022 lt!39020 lt!39019))))

(assert (=> b!83188 (= lt!39019 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!83188 (= lt!39020 (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!83188 (= lt!39022 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!83188 (= lt!39018 call!7808)))

(assert (=> b!83188 (= e!54317 (+!114 call!7808 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!83189 () Bool)

(assert (=> b!83189 (= e!54323 e!54318)))

(declare-fun c!13261 () Bool)

(assert (=> b!83189 (= c!13261 e!54319)))

(declare-fun res!43046 () Bool)

(assert (=> b!83189 (=> (not res!43046) (not e!54319))))

(assert (=> b!83189 (= res!43046 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun bm!7805 () Bool)

(assert (=> bm!7805 (= call!7808 (getCurrentListMapNoExtraKeys!78 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun b!83190 () Bool)

(declare-fun isEmpty!337 (ListLongMap!1481) Bool)

(assert (=> b!83190 (= e!54321 (isEmpty!337 lt!39021))))

(assert (= (and d!20885 c!13258) b!83181))

(assert (= (and d!20885 (not c!13258)) b!83187))

(assert (= (and b!83187 c!13259) b!83188))

(assert (= (and b!83187 (not c!13259)) b!83179))

(assert (= (or b!83188 b!83179) bm!7805))

(assert (= (and d!20885 res!43047) b!83183))

(assert (= (and b!83183 res!43048) b!83189))

(assert (= (and b!83189 res!43046) b!83184))

(assert (= (and b!83189 c!13261) b!83185))

(assert (= (and b!83189 (not c!13261)) b!83186))

(assert (= (and b!83185 res!43049) b!83180))

(assert (= (and b!83186 c!13260) b!83182))

(assert (= (and b!83186 (not c!13260)) b!83190))

(declare-fun b_lambda!3701 () Bool)

(assert (=> (not b_lambda!3701) (not b!83180)))

(assert (=> b!83180 t!5248))

(declare-fun b_and!5057 () Bool)

(assert (= b_and!5053 (and (=> t!5248 result!2889) b_and!5057)))

(assert (=> b!83180 t!5250))

(declare-fun b_and!5059 () Bool)

(assert (= b_and!5055 (and (=> t!5250 result!2893) b_and!5059)))

(declare-fun b_lambda!3703 () Bool)

(assert (=> (not b_lambda!3703) (not b!83188)))

(assert (=> b!83188 t!5248))

(declare-fun b_and!5061 () Bool)

(assert (= b_and!5057 (and (=> t!5248 result!2889) b_and!5061)))

(assert (=> b!83188 t!5250))

(declare-fun b_and!5063 () Bool)

(assert (= b_and!5059 (and (=> t!5250 result!2893) b_and!5063)))

(declare-fun m!85879 () Bool)

(assert (=> b!83182 m!85879))

(assert (=> bm!7805 m!85879))

(assert (=> b!83180 m!85835))

(assert (=> b!83180 m!85781))

(assert (=> b!83180 m!85835))

(assert (=> b!83180 m!85615))

(assert (=> b!83180 m!85839))

(assert (=> b!83180 m!85781))

(declare-fun m!85881 () Bool)

(assert (=> b!83180 m!85881))

(assert (=> b!83180 m!85615))

(assert (=> b!83184 m!85781))

(assert (=> b!83184 m!85781))

(assert (=> b!83184 m!85797))

(assert (=> b!83187 m!85781))

(assert (=> b!83187 m!85781))

(assert (=> b!83187 m!85797))

(assert (=> b!83188 m!85835))

(declare-fun m!85883 () Bool)

(assert (=> b!83188 m!85883))

(assert (=> b!83188 m!85781))

(declare-fun m!85885 () Bool)

(assert (=> b!83188 m!85885))

(assert (=> b!83188 m!85835))

(assert (=> b!83188 m!85615))

(assert (=> b!83188 m!85839))

(declare-fun m!85887 () Bool)

(assert (=> b!83188 m!85887))

(assert (=> b!83188 m!85615))

(assert (=> b!83188 m!85885))

(declare-fun m!85889 () Bool)

(assert (=> b!83188 m!85889))

(declare-fun m!85891 () Bool)

(assert (=> d!20885 m!85891))

(assert (=> d!20885 m!85601))

(declare-fun m!85893 () Bool)

(assert (=> b!83190 m!85893))

(assert (=> b!83185 m!85781))

(assert (=> b!83185 m!85781))

(declare-fun m!85895 () Bool)

(assert (=> b!83185 m!85895))

(declare-fun m!85897 () Bool)

(assert (=> b!83183 m!85897))

(assert (=> b!82837 d!20885))

(declare-fun d!20887 () Bool)

(assert (=> d!20887 (= (+!114 (+!114 lt!38755 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (+!114 (+!114 lt!38755 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(declare-fun lt!39025 () Unit!2445)

(assert (=> d!20887 (= lt!39025 (choose!492 lt!38755 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))

(assert (=> d!20887 (not (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20887 (= (addCommutativeForDiffKeys!33 lt!38755 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) lt!39025)))

(declare-fun bs!3502 () Bool)

(assert (= bs!3502 d!20887))

(declare-fun m!85899 () Bool)

(assert (=> bs!3502 m!85899))

(declare-fun m!85901 () Bool)

(assert (=> bs!3502 m!85901))

(assert (=> bs!3502 m!85899))

(declare-fun m!85903 () Bool)

(assert (=> bs!3502 m!85903))

(assert (=> bs!3502 m!85903))

(declare-fun m!85905 () Bool)

(assert (=> bs!3502 m!85905))

(assert (=> bs!3502 m!85591))

(declare-fun m!85907 () Bool)

(assert (=> bs!3502 m!85907))

(assert (=> b!82837 d!20887))

(declare-fun d!20889 () Bool)

(declare-fun e!54324 () Bool)

(assert (=> d!20889 e!54324))

(declare-fun res!43050 () Bool)

(assert (=> d!20889 (=> (not res!43050) (not e!54324))))

(declare-fun lt!39029 () ListLongMap!1481)

(assert (=> d!20889 (= res!43050 (contains!757 lt!39029 (_1!1120 lt!38750)))))

(declare-fun lt!39026 () List!1547)

(assert (=> d!20889 (= lt!39029 (ListLongMap!1482 lt!39026))))

(declare-fun lt!39027 () Unit!2445)

(declare-fun lt!39028 () Unit!2445)

(assert (=> d!20889 (= lt!39027 lt!39028)))

(assert (=> d!20889 (= (getValueByKey!138 lt!39026 (_1!1120 lt!38750)) (Some!143 (_2!1120 lt!38750)))))

(assert (=> d!20889 (= lt!39028 (lemmaContainsTupThenGetReturnValue!57 lt!39026 (_1!1120 lt!38750) (_2!1120 lt!38750)))))

(assert (=> d!20889 (= lt!39026 (insertStrictlySorted!59 (toList!756 lt!38755) (_1!1120 lt!38750) (_2!1120 lt!38750)))))

(assert (=> d!20889 (= (+!114 lt!38755 lt!38750) lt!39029)))

(declare-fun b!83191 () Bool)

(declare-fun res!43051 () Bool)

(assert (=> b!83191 (=> (not res!43051) (not e!54324))))

(assert (=> b!83191 (= res!43051 (= (getValueByKey!138 (toList!756 lt!39029) (_1!1120 lt!38750)) (Some!143 (_2!1120 lt!38750))))))

(declare-fun b!83192 () Bool)

(assert (=> b!83192 (= e!54324 (contains!760 (toList!756 lt!39029) lt!38750))))

(assert (= (and d!20889 res!43050) b!83191))

(assert (= (and b!83191 res!43051) b!83192))

(declare-fun m!85909 () Bool)

(assert (=> d!20889 m!85909))

(declare-fun m!85911 () Bool)

(assert (=> d!20889 m!85911))

(declare-fun m!85913 () Bool)

(assert (=> d!20889 m!85913))

(declare-fun m!85915 () Bool)

(assert (=> d!20889 m!85915))

(declare-fun m!85917 () Bool)

(assert (=> b!83191 m!85917))

(declare-fun m!85919 () Bool)

(assert (=> b!83192 m!85919))

(assert (=> b!82837 d!20889))

(declare-fun d!20891 () Bool)

(declare-fun e!54325 () Bool)

(assert (=> d!20891 e!54325))

(declare-fun res!43052 () Bool)

(assert (=> d!20891 (=> (not res!43052) (not e!54325))))

(declare-fun lt!39033 () ListLongMap!1481)

(assert (=> d!20891 (= res!43052 (contains!757 lt!39033 (_1!1120 lt!38760)))))

(declare-fun lt!39030 () List!1547)

(assert (=> d!20891 (= lt!39033 (ListLongMap!1482 lt!39030))))

(declare-fun lt!39031 () Unit!2445)

(declare-fun lt!39032 () Unit!2445)

(assert (=> d!20891 (= lt!39031 lt!39032)))

(assert (=> d!20891 (= (getValueByKey!138 lt!39030 (_1!1120 lt!38760)) (Some!143 (_2!1120 lt!38760)))))

(assert (=> d!20891 (= lt!39032 (lemmaContainsTupThenGetReturnValue!57 lt!39030 (_1!1120 lt!38760) (_2!1120 lt!38760)))))

(assert (=> d!20891 (= lt!39030 (insertStrictlySorted!59 (toList!756 lt!38749) (_1!1120 lt!38760) (_2!1120 lt!38760)))))

(assert (=> d!20891 (= (+!114 lt!38749 lt!38760) lt!39033)))

(declare-fun b!83193 () Bool)

(declare-fun res!43053 () Bool)

(assert (=> b!83193 (=> (not res!43053) (not e!54325))))

(assert (=> b!83193 (= res!43053 (= (getValueByKey!138 (toList!756 lt!39033) (_1!1120 lt!38760)) (Some!143 (_2!1120 lt!38760))))))

(declare-fun b!83194 () Bool)

(assert (=> b!83194 (= e!54325 (contains!760 (toList!756 lt!39033) lt!38760))))

(assert (= (and d!20891 res!43052) b!83193))

(assert (= (and b!83193 res!43053) b!83194))

(declare-fun m!85921 () Bool)

(assert (=> d!20891 m!85921))

(declare-fun m!85923 () Bool)

(assert (=> d!20891 m!85923))

(declare-fun m!85925 () Bool)

(assert (=> d!20891 m!85925))

(declare-fun m!85927 () Bool)

(assert (=> d!20891 m!85927))

(declare-fun m!85929 () Bool)

(assert (=> b!83193 m!85929))

(declare-fun m!85931 () Bool)

(assert (=> b!83194 m!85931))

(assert (=> b!82837 d!20891))

(declare-fun d!20893 () Bool)

(declare-fun e!54326 () Bool)

(assert (=> d!20893 e!54326))

(declare-fun res!43054 () Bool)

(assert (=> d!20893 (=> (not res!43054) (not e!54326))))

(declare-fun lt!39037 () ListLongMap!1481)

(assert (=> d!20893 (= res!43054 (contains!757 lt!39037 (_1!1120 lt!38760)))))

(declare-fun lt!39034 () List!1547)

(assert (=> d!20893 (= lt!39037 (ListLongMap!1482 lt!39034))))

(declare-fun lt!39035 () Unit!2445)

(declare-fun lt!39036 () Unit!2445)

(assert (=> d!20893 (= lt!39035 lt!39036)))

(assert (=> d!20893 (= (getValueByKey!138 lt!39034 (_1!1120 lt!38760)) (Some!143 (_2!1120 lt!38760)))))

(assert (=> d!20893 (= lt!39036 (lemmaContainsTupThenGetReturnValue!57 lt!39034 (_1!1120 lt!38760) (_2!1120 lt!38760)))))

(assert (=> d!20893 (= lt!39034 (insertStrictlySorted!59 (toList!756 lt!38755) (_1!1120 lt!38760) (_2!1120 lt!38760)))))

(assert (=> d!20893 (= (+!114 lt!38755 lt!38760) lt!39037)))

(declare-fun b!83195 () Bool)

(declare-fun res!43055 () Bool)

(assert (=> b!83195 (=> (not res!43055) (not e!54326))))

(assert (=> b!83195 (= res!43055 (= (getValueByKey!138 (toList!756 lt!39037) (_1!1120 lt!38760)) (Some!143 (_2!1120 lt!38760))))))

(declare-fun b!83196 () Bool)

(assert (=> b!83196 (= e!54326 (contains!760 (toList!756 lt!39037) lt!38760))))

(assert (= (and d!20893 res!43054) b!83195))

(assert (= (and b!83195 res!43055) b!83196))

(declare-fun m!85933 () Bool)

(assert (=> d!20893 m!85933))

(declare-fun m!85935 () Bool)

(assert (=> d!20893 m!85935))

(declare-fun m!85937 () Bool)

(assert (=> d!20893 m!85937))

(declare-fun m!85939 () Bool)

(assert (=> d!20893 m!85939))

(declare-fun m!85941 () Bool)

(assert (=> b!83195 m!85941))

(declare-fun m!85943 () Bool)

(assert (=> b!83196 m!85943))

(assert (=> b!82837 d!20893))

(declare-fun d!20895 () Bool)

(assert (=> d!20895 (= (validMask!0 (mask!6335 (v!2632 (underlying!290 thiss!992)))) (and (or (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000001111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000011111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000001111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000011111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000001111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000011111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000111111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000000001111111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000000011111111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000000111111111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000001111111111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000011111111111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000111111111111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000001111111111111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000011111111111111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000111111111111111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000001111111111111111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000011111111111111111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000111111111111111111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000001111111111111111111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000011111111111111111111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000111111111111111111111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00001111111111111111111111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00011111111111111111111111111111) (= (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!82837 d!20895))

(declare-fun d!20897 () Bool)

(declare-fun e!54327 () Bool)

(assert (=> d!20897 e!54327))

(declare-fun res!43056 () Bool)

(assert (=> d!20897 (=> (not res!43056) (not e!54327))))

(declare-fun lt!39041 () ListLongMap!1481)

(assert (=> d!20897 (= res!43056 (contains!757 lt!39041 (_1!1120 lt!38747)))))

(declare-fun lt!39038 () List!1547)

(assert (=> d!20897 (= lt!39041 (ListLongMap!1482 lt!39038))))

(declare-fun lt!39039 () Unit!2445)

(declare-fun lt!39040 () Unit!2445)

(assert (=> d!20897 (= lt!39039 lt!39040)))

(assert (=> d!20897 (= (getValueByKey!138 lt!39038 (_1!1120 lt!38747)) (Some!143 (_2!1120 lt!38747)))))

(assert (=> d!20897 (= lt!39040 (lemmaContainsTupThenGetReturnValue!57 lt!39038 (_1!1120 lt!38747) (_2!1120 lt!38747)))))

(assert (=> d!20897 (= lt!39038 (insertStrictlySorted!59 (toList!756 lt!38751) (_1!1120 lt!38747) (_2!1120 lt!38747)))))

(assert (=> d!20897 (= (+!114 lt!38751 lt!38747) lt!39041)))

(declare-fun b!83197 () Bool)

(declare-fun res!43057 () Bool)

(assert (=> b!83197 (=> (not res!43057) (not e!54327))))

(assert (=> b!83197 (= res!43057 (= (getValueByKey!138 (toList!756 lt!39041) (_1!1120 lt!38747)) (Some!143 (_2!1120 lt!38747))))))

(declare-fun b!83198 () Bool)

(assert (=> b!83198 (= e!54327 (contains!760 (toList!756 lt!39041) lt!38747))))

(assert (= (and d!20897 res!43056) b!83197))

(assert (= (and b!83197 res!43057) b!83198))

(declare-fun m!85945 () Bool)

(assert (=> d!20897 m!85945))

(declare-fun m!85947 () Bool)

(assert (=> d!20897 m!85947))

(declare-fun m!85949 () Bool)

(assert (=> d!20897 m!85949))

(declare-fun m!85951 () Bool)

(assert (=> d!20897 m!85951))

(declare-fun m!85953 () Bool)

(assert (=> b!83197 m!85953))

(declare-fun m!85955 () Bool)

(assert (=> b!83198 m!85955))

(assert (=> b!82837 d!20897))

(declare-fun d!20899 () Bool)

(declare-fun e!54328 () Bool)

(assert (=> d!20899 e!54328))

(declare-fun res!43058 () Bool)

(assert (=> d!20899 (=> (not res!43058) (not e!54328))))

(declare-fun lt!39045 () ListLongMap!1481)

(assert (=> d!20899 (= res!43058 (contains!757 lt!39045 (_1!1120 lt!38747)))))

(declare-fun lt!39042 () List!1547)

(assert (=> d!20899 (= lt!39045 (ListLongMap!1482 lt!39042))))

(declare-fun lt!39043 () Unit!2445)

(declare-fun lt!39044 () Unit!2445)

(assert (=> d!20899 (= lt!39043 lt!39044)))

(assert (=> d!20899 (= (getValueByKey!138 lt!39042 (_1!1120 lt!38747)) (Some!143 (_2!1120 lt!38747)))))

(assert (=> d!20899 (= lt!39044 (lemmaContainsTupThenGetReturnValue!57 lt!39042 (_1!1120 lt!38747) (_2!1120 lt!38747)))))

(assert (=> d!20899 (= lt!39042 (insertStrictlySorted!59 (toList!756 lt!38754) (_1!1120 lt!38747) (_2!1120 lt!38747)))))

(assert (=> d!20899 (= (+!114 lt!38754 lt!38747) lt!39045)))

(declare-fun b!83199 () Bool)

(declare-fun res!43059 () Bool)

(assert (=> b!83199 (=> (not res!43059) (not e!54328))))

(assert (=> b!83199 (= res!43059 (= (getValueByKey!138 (toList!756 lt!39045) (_1!1120 lt!38747)) (Some!143 (_2!1120 lt!38747))))))

(declare-fun b!83200 () Bool)

(assert (=> b!83200 (= e!54328 (contains!760 (toList!756 lt!39045) lt!38747))))

(assert (= (and d!20899 res!43058) b!83199))

(assert (= (and b!83199 res!43059) b!83200))

(declare-fun m!85957 () Bool)

(assert (=> d!20899 m!85957))

(declare-fun m!85959 () Bool)

(assert (=> d!20899 m!85959))

(declare-fun m!85961 () Bool)

(assert (=> d!20899 m!85961))

(declare-fun m!85963 () Bool)

(assert (=> d!20899 m!85963))

(declare-fun m!85965 () Bool)

(assert (=> b!83199 m!85965))

(declare-fun m!85967 () Bool)

(assert (=> b!83200 m!85967))

(assert (=> b!82837 d!20899))

(declare-fun mapNonEmpty!3383 () Bool)

(declare-fun mapRes!3383 () Bool)

(declare-fun tp!8909 () Bool)

(declare-fun e!54334 () Bool)

(assert (=> mapNonEmpty!3383 (= mapRes!3383 (and tp!8909 e!54334))))

(declare-fun mapKey!3383 () (_ BitVec 32))

(declare-fun mapRest!3383 () (Array (_ BitVec 32) ValueCell!921))

(declare-fun mapValue!3383 () ValueCell!921)

(assert (=> mapNonEmpty!3383 (= mapRest!3373 (store mapRest!3383 mapKey!3383 mapValue!3383))))

(declare-fun b!83207 () Bool)

(assert (=> b!83207 (= e!54334 tp_is_empty!2529)))

(declare-fun mapIsEmpty!3383 () Bool)

(assert (=> mapIsEmpty!3383 mapRes!3383))

(declare-fun condMapEmpty!3383 () Bool)

(declare-fun mapDefault!3383 () ValueCell!921)

(assert (=> mapNonEmpty!3374 (= condMapEmpty!3383 (= mapRest!3373 ((as const (Array (_ BitVec 32) ValueCell!921)) mapDefault!3383)))))

(declare-fun e!54333 () Bool)

(assert (=> mapNonEmpty!3374 (= tp!8893 (and e!54333 mapRes!3383))))

(declare-fun b!83208 () Bool)

(assert (=> b!83208 (= e!54333 tp_is_empty!2529)))

(assert (= (and mapNonEmpty!3374 condMapEmpty!3383) mapIsEmpty!3383))

(assert (= (and mapNonEmpty!3374 (not condMapEmpty!3383)) mapNonEmpty!3383))

(assert (= (and mapNonEmpty!3383 ((_ is ValueCellFull!921) mapValue!3383)) b!83207))

(assert (= (and mapNonEmpty!3374 ((_ is ValueCellFull!921) mapDefault!3383)) b!83208))

(declare-fun m!85969 () Bool)

(assert (=> mapNonEmpty!3383 m!85969))

(declare-fun mapNonEmpty!3384 () Bool)

(declare-fun mapRes!3384 () Bool)

(declare-fun tp!8910 () Bool)

(declare-fun e!54336 () Bool)

(assert (=> mapNonEmpty!3384 (= mapRes!3384 (and tp!8910 e!54336))))

(declare-fun mapRest!3384 () (Array (_ BitVec 32) ValueCell!921))

(declare-fun mapValue!3384 () ValueCell!921)

(declare-fun mapKey!3384 () (_ BitVec 32))

(assert (=> mapNonEmpty!3384 (= mapRest!3374 (store mapRest!3384 mapKey!3384 mapValue!3384))))

(declare-fun b!83209 () Bool)

(assert (=> b!83209 (= e!54336 tp_is_empty!2529)))

(declare-fun mapIsEmpty!3384 () Bool)

(assert (=> mapIsEmpty!3384 mapRes!3384))

(declare-fun condMapEmpty!3384 () Bool)

(declare-fun mapDefault!3384 () ValueCell!921)

(assert (=> mapNonEmpty!3373 (= condMapEmpty!3384 (= mapRest!3374 ((as const (Array (_ BitVec 32) ValueCell!921)) mapDefault!3384)))))

(declare-fun e!54335 () Bool)

(assert (=> mapNonEmpty!3373 (= tp!8891 (and e!54335 mapRes!3384))))

(declare-fun b!83210 () Bool)

(assert (=> b!83210 (= e!54335 tp_is_empty!2529)))

(assert (= (and mapNonEmpty!3373 condMapEmpty!3384) mapIsEmpty!3384))

(assert (= (and mapNonEmpty!3373 (not condMapEmpty!3384)) mapNonEmpty!3384))

(assert (= (and mapNonEmpty!3384 ((_ is ValueCellFull!921) mapValue!3384)) b!83209))

(assert (= (and mapNonEmpty!3373 ((_ is ValueCellFull!921) mapDefault!3384)) b!83210))

(declare-fun m!85971 () Bool)

(assert (=> mapNonEmpty!3384 m!85971))

(declare-fun b_lambda!3705 () Bool)

(assert (= b_lambda!3699 (or (and b!82830 b_free!2225) (and b!82846 b_free!2227 (= (defaultEntry!2317 newMap!16) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))))) b_lambda!3705)))

(declare-fun b_lambda!3707 () Bool)

(assert (= b_lambda!3701 (or (and b!82830 b_free!2225) (and b!82846 b_free!2227 (= (defaultEntry!2317 newMap!16) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))))) b_lambda!3707)))

(declare-fun b_lambda!3709 () Bool)

(assert (= b_lambda!3703 (or (and b!82830 b_free!2225) (and b!82846 b_free!2227 (= (defaultEntry!2317 newMap!16) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))))) b_lambda!3709)))

(check-sat (not d!20853) (not bm!7757) (not b_next!2225) (not b!83190) (not b!83194) (not b!83152) (not bm!7800) (not b!82920) (not bm!7781) (not bm!7765) (not b!83079) (not b!83200) (not d!20857) (not bm!7771) (not bm!7763) (not d!20873) (not b!83192) (not b_lambda!3707) (not b_lambda!3705) (not bm!7773) (not d!20871) (not b!83195) (not bm!7762) (not d!20883) (not d!20897) (not b!83018) (not d!20851) (not bm!7798) (not b!83141) (not b!83188) (not bm!7805) (not d!20885) (not b!83187) tp_is_empty!2529 (not b!83185) (not b!83127) b_and!5061 (not bm!7756) (not b!83067) (not b!83154) (not b!82921) (not bm!7799) (not b_lambda!3697) (not b!83130) (not bm!7758) (not b!83041) (not b!83138) b_and!5063 (not b!83046) (not b!83184) (not b!83139) (not b!83081) (not d!20867) (not b!82927) (not d!20893) (not d!20863) (not b!83062) (not b!83082) (not b!83193) (not b!83198) (not b_next!2227) (not d!20891) (not b!83054) (not b!83134) (not b!83196) (not bm!7776) (not b!83055) (not b!83180) (not d!20881) (not b_lambda!3709) (not b!83197) (not b!82936) (not b!83153) (not b!83029) (not bm!7764) (not d!20887) (not b!83199) (not b!82934) (not b!83144) (not d!20889) (not b!82919) (not b!83191) (not b!83182) (not b!83151) (not d!20861) (not bm!7759) (not mapNonEmpty!3384) (not b!82926) (not b!83143) (not b!83183) (not b!83025) (not bm!7774) (not d!20899) (not d!20859) (not d!20879) (not bm!7797) (not mapNonEmpty!3383))
(check-sat b_and!5061 b_and!5063 (not b_next!2225) (not b_next!2227))
(get-model)

(declare-fun d!20901 () Bool)

(declare-fun e!54337 () Bool)

(assert (=> d!20901 e!54337))

(declare-fun res!43060 () Bool)

(assert (=> d!20901 (=> (not res!43060) (not e!54337))))

(declare-fun lt!39049 () ListLongMap!1481)

(assert (=> d!20901 (= res!43060 (contains!757 lt!39049 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun lt!39046 () List!1547)

(assert (=> d!20901 (= lt!39049 (ListLongMap!1482 lt!39046))))

(declare-fun lt!39047 () Unit!2445)

(declare-fun lt!39048 () Unit!2445)

(assert (=> d!20901 (= lt!39047 lt!39048)))

(assert (=> d!20901 (= (getValueByKey!138 lt!39046 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!20901 (= lt!39048 (lemmaContainsTupThenGetReturnValue!57 lt!39046 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!20901 (= lt!39046 (insertStrictlySorted!59 (toList!756 (+!114 lt!38754 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!20901 (= (+!114 (+!114 lt!38754 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) lt!39049)))

(declare-fun b!83211 () Bool)

(declare-fun res!43061 () Bool)

(assert (=> b!83211 (=> (not res!43061) (not e!54337))))

(assert (=> b!83211 (= res!43061 (= (getValueByKey!138 (toList!756 lt!39049) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun b!83212 () Bool)

(assert (=> b!83212 (= e!54337 (contains!760 (toList!756 lt!39049) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(assert (= (and d!20901 res!43060) b!83211))

(assert (= (and b!83211 res!43061) b!83212))

(declare-fun m!85973 () Bool)

(assert (=> d!20901 m!85973))

(declare-fun m!85975 () Bool)

(assert (=> d!20901 m!85975))

(declare-fun m!85977 () Bool)

(assert (=> d!20901 m!85977))

(declare-fun m!85979 () Bool)

(assert (=> d!20901 m!85979))

(declare-fun m!85981 () Bool)

(assert (=> b!83211 m!85981))

(declare-fun m!85983 () Bool)

(assert (=> b!83212 m!85983))

(assert (=> d!20879 d!20901))

(declare-fun d!20903 () Bool)

(declare-fun e!54338 () Bool)

(assert (=> d!20903 e!54338))

(declare-fun res!43062 () Bool)

(assert (=> d!20903 (=> (not res!43062) (not e!54338))))

(declare-fun lt!39053 () ListLongMap!1481)

(assert (=> d!20903 (= res!43062 (contains!757 lt!39053 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun lt!39050 () List!1547)

(assert (=> d!20903 (= lt!39053 (ListLongMap!1482 lt!39050))))

(declare-fun lt!39051 () Unit!2445)

(declare-fun lt!39052 () Unit!2445)

(assert (=> d!20903 (= lt!39051 lt!39052)))

(assert (=> d!20903 (= (getValueByKey!138 lt!39050 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!20903 (= lt!39052 (lemmaContainsTupThenGetReturnValue!57 lt!39050 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!20903 (= lt!39050 (insertStrictlySorted!59 (toList!756 lt!38754) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!20903 (= (+!114 lt!38754 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) lt!39053)))

(declare-fun b!83213 () Bool)

(declare-fun res!43063 () Bool)

(assert (=> b!83213 (=> (not res!43063) (not e!54338))))

(assert (=> b!83213 (= res!43063 (= (getValueByKey!138 (toList!756 lt!39053) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun b!83214 () Bool)

(assert (=> b!83214 (= e!54338 (contains!760 (toList!756 lt!39053) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(assert (= (and d!20903 res!43062) b!83213))

(assert (= (and b!83213 res!43063) b!83214))

(declare-fun m!85985 () Bool)

(assert (=> d!20903 m!85985))

(declare-fun m!85987 () Bool)

(assert (=> d!20903 m!85987))

(declare-fun m!85989 () Bool)

(assert (=> d!20903 m!85989))

(declare-fun m!85991 () Bool)

(assert (=> d!20903 m!85991))

(declare-fun m!85993 () Bool)

(assert (=> b!83213 m!85993))

(declare-fun m!85995 () Bool)

(assert (=> b!83214 m!85995))

(assert (=> d!20879 d!20903))

(declare-fun d!20905 () Bool)

(declare-fun e!54339 () Bool)

(assert (=> d!20905 e!54339))

(declare-fun res!43064 () Bool)

(assert (=> d!20905 (=> (not res!43064) (not e!54339))))

(declare-fun lt!39057 () ListLongMap!1481)

(assert (=> d!20905 (= res!43064 (contains!757 lt!39057 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun lt!39054 () List!1547)

(assert (=> d!20905 (= lt!39057 (ListLongMap!1482 lt!39054))))

(declare-fun lt!39055 () Unit!2445)

(declare-fun lt!39056 () Unit!2445)

(assert (=> d!20905 (= lt!39055 lt!39056)))

(assert (=> d!20905 (= (getValueByKey!138 lt!39054 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!20905 (= lt!39056 (lemmaContainsTupThenGetReturnValue!57 lt!39054 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!20905 (= lt!39054 (insertStrictlySorted!59 (toList!756 (+!114 lt!38754 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!20905 (= (+!114 (+!114 lt!38754 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!39057)))

(declare-fun b!83215 () Bool)

(declare-fun res!43065 () Bool)

(assert (=> b!83215 (=> (not res!43065) (not e!54339))))

(assert (=> b!83215 (= res!43065 (= (getValueByKey!138 (toList!756 lt!39057) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!83216 () Bool)

(assert (=> b!83216 (= e!54339 (contains!760 (toList!756 lt!39057) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(assert (= (and d!20905 res!43064) b!83215))

(assert (= (and b!83215 res!43065) b!83216))

(declare-fun m!85997 () Bool)

(assert (=> d!20905 m!85997))

(declare-fun m!85999 () Bool)

(assert (=> d!20905 m!85999))

(declare-fun m!86001 () Bool)

(assert (=> d!20905 m!86001))

(declare-fun m!86003 () Bool)

(assert (=> d!20905 m!86003))

(declare-fun m!86005 () Bool)

(assert (=> b!83215 m!86005))

(declare-fun m!86007 () Bool)

(assert (=> b!83216 m!86007))

(assert (=> d!20879 d!20905))

(declare-fun d!20907 () Bool)

(assert (=> d!20907 (= (+!114 (+!114 lt!38754 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (+!114 (+!114 lt!38754 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(assert (=> d!20907 true))

(declare-fun _$28!138 () Unit!2445)

(assert (=> d!20907 (= (choose!492 lt!38754 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))) _$28!138)))

(declare-fun bs!3503 () Bool)

(assert (= bs!3503 d!20907))

(assert (=> bs!3503 m!85849))

(assert (=> bs!3503 m!85849))

(assert (=> bs!3503 m!85851))

(assert (=> bs!3503 m!85845))

(assert (=> bs!3503 m!85845))

(assert (=> bs!3503 m!85847))

(assert (=> d!20879 d!20907))

(declare-fun d!20909 () Bool)

(declare-fun e!54340 () Bool)

(assert (=> d!20909 e!54340))

(declare-fun res!43066 () Bool)

(assert (=> d!20909 (=> (not res!43066) (not e!54340))))

(declare-fun lt!39061 () ListLongMap!1481)

(assert (=> d!20909 (= res!43066 (contains!757 lt!39061 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun lt!39058 () List!1547)

(assert (=> d!20909 (= lt!39061 (ListLongMap!1482 lt!39058))))

(declare-fun lt!39059 () Unit!2445)

(declare-fun lt!39060 () Unit!2445)

(assert (=> d!20909 (= lt!39059 lt!39060)))

(assert (=> d!20909 (= (getValueByKey!138 lt!39058 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!20909 (= lt!39060 (lemmaContainsTupThenGetReturnValue!57 lt!39058 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!20909 (= lt!39058 (insertStrictlySorted!59 (toList!756 lt!38754) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!20909 (= (+!114 lt!38754 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!39061)))

(declare-fun b!83217 () Bool)

(declare-fun res!43067 () Bool)

(assert (=> b!83217 (=> (not res!43067) (not e!54340))))

(assert (=> b!83217 (= res!43067 (= (getValueByKey!138 (toList!756 lt!39061) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!83218 () Bool)

(assert (=> b!83218 (= e!54340 (contains!760 (toList!756 lt!39061) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(assert (= (and d!20909 res!43066) b!83217))

(assert (= (and b!83217 res!43067) b!83218))

(declare-fun m!86009 () Bool)

(assert (=> d!20909 m!86009))

(declare-fun m!86011 () Bool)

(assert (=> d!20909 m!86011))

(declare-fun m!86013 () Bool)

(assert (=> d!20909 m!86013))

(declare-fun m!86015 () Bool)

(assert (=> d!20909 m!86015))

(declare-fun m!86017 () Bool)

(assert (=> b!83217 m!86017))

(declare-fun m!86019 () Bool)

(assert (=> b!83218 m!86019))

(assert (=> d!20879 d!20909))

(declare-fun d!20911 () Bool)

(declare-fun e!54343 () Bool)

(assert (=> d!20911 e!54343))

(declare-fun res!43070 () Bool)

(assert (=> d!20911 (=> (not res!43070) (not e!54343))))

(assert (=> d!20911 (= res!43070 (and (bvsge (index!3145 lt!38899) #b00000000000000000000000000000000) (bvslt (index!3145 lt!38899) (size!2155 (_keys!3985 newMap!16)))))))

(declare-fun lt!39064 () Unit!2445)

(declare-fun choose!493 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 (_ BitVec 32) Int) Unit!2445)

(assert (=> d!20911 (= lt!39064 (choose!493 (_keys!3985 newMap!16) lt!38887 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (index!3145 lt!38899) (defaultEntry!2317 newMap!16)))))

(assert (=> d!20911 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!20911 (= (lemmaValidKeyInArrayIsInListMap!88 (_keys!3985 newMap!16) lt!38887 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (index!3145 lt!38899) (defaultEntry!2317 newMap!16)) lt!39064)))

(declare-fun b!83221 () Bool)

(assert (=> b!83221 (= e!54343 (contains!757 (getCurrentListMap!440 (_keys!3985 newMap!16) lt!38887 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899))))))

(assert (= (and d!20911 res!43070) b!83221))

(declare-fun m!86021 () Bool)

(assert (=> d!20911 m!86021))

(declare-fun m!86023 () Bool)

(assert (=> d!20911 m!86023))

(declare-fun m!86025 () Bool)

(assert (=> b!83221 m!86025))

(assert (=> b!83221 m!85769))

(assert (=> b!83221 m!86025))

(assert (=> b!83221 m!85769))

(declare-fun m!86027 () Bool)

(assert (=> b!83221 m!86027))

(assert (=> b!83046 d!20911))

(declare-fun d!20913 () Bool)

(declare-fun e!54346 () Bool)

(assert (=> d!20913 e!54346))

(declare-fun res!43073 () Bool)

(assert (=> d!20913 (=> (not res!43073) (not e!54346))))

(assert (=> d!20913 (= res!43073 (and (bvsge (index!3145 lt!38899) #b00000000000000000000000000000000) (bvslt (index!3145 lt!38899) (size!2156 (_values!2300 newMap!16)))))))

(declare-fun lt!39067 () Unit!2445)

(declare-fun choose!494 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 (_ BitVec 32) (_ BitVec 64) V!3019 Int) Unit!2445)

(assert (=> d!20913 (= lt!39067 (choose!494 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (index!3145 lt!38899) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748 (defaultEntry!2317 newMap!16)))))

(assert (=> d!20913 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!20913 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!30 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (index!3145 lt!38899) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748 (defaultEntry!2317 newMap!16)) lt!39067)))

(declare-fun b!83224 () Bool)

(assert (=> b!83224 (= e!54346 (= (+!114 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (getCurrentListMap!440 (_keys!3985 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))))))

(assert (= (and d!20913 res!43073) b!83224))

(assert (=> d!20913 m!85591))

(declare-fun m!86029 () Bool)

(assert (=> d!20913 m!86029))

(assert (=> d!20913 m!86023))

(assert (=> b!83224 m!85729))

(assert (=> b!83224 m!85729))

(declare-fun m!86031 () Bool)

(assert (=> b!83224 m!86031))

(assert (=> b!83224 m!85757))

(declare-fun m!86033 () Bool)

(assert (=> b!83224 m!86033))

(assert (=> b!83046 d!20913))

(declare-fun d!20915 () Bool)

(declare-fun e!54347 () Bool)

(assert (=> d!20915 e!54347))

(declare-fun res!43074 () Bool)

(assert (=> d!20915 (=> res!43074 e!54347)))

(declare-fun lt!39068 () Bool)

(assert (=> d!20915 (= res!43074 (not lt!39068))))

(declare-fun lt!39070 () Bool)

(assert (=> d!20915 (= lt!39068 lt!39070)))

(declare-fun lt!39071 () Unit!2445)

(declare-fun e!54348 () Unit!2445)

(assert (=> d!20915 (= lt!39071 e!54348)))

(declare-fun c!13262 () Bool)

(assert (=> d!20915 (= c!13262 lt!39070)))

(assert (=> d!20915 (= lt!39070 (containsKey!142 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> d!20915 (= (contains!757 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) lt!39068)))

(declare-fun b!83225 () Bool)

(declare-fun lt!39069 () Unit!2445)

(assert (=> b!83225 (= e!54348 lt!39069)))

(assert (=> b!83225 (= lt!39069 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> b!83225 (isDefined!92 (getValueByKey!138 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun b!83226 () Bool)

(declare-fun Unit!2456 () Unit!2445)

(assert (=> b!83226 (= e!54348 Unit!2456)))

(declare-fun b!83227 () Bool)

(assert (=> b!83227 (= e!54347 (isDefined!92 (getValueByKey!138 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))))

(assert (= (and d!20915 c!13262) b!83225))

(assert (= (and d!20915 (not c!13262)) b!83226))

(assert (= (and d!20915 (not res!43074)) b!83227))

(assert (=> d!20915 m!85591))

(declare-fun m!86035 () Bool)

(assert (=> d!20915 m!86035))

(assert (=> b!83225 m!85591))

(declare-fun m!86037 () Bool)

(assert (=> b!83225 m!86037))

(assert (=> b!83225 m!85591))

(declare-fun m!86039 () Bool)

(assert (=> b!83225 m!86039))

(assert (=> b!83225 m!86039))

(declare-fun m!86041 () Bool)

(assert (=> b!83225 m!86041))

(assert (=> b!83227 m!85591))

(assert (=> b!83227 m!86039))

(assert (=> b!83227 m!86039))

(assert (=> b!83227 m!86041))

(assert (=> b!83046 d!20915))

(declare-fun b!83228 () Bool)

(declare-fun e!54354 () ListLongMap!1481)

(declare-fun call!7809 () ListLongMap!1481)

(assert (=> b!83228 (= e!54354 call!7809)))

(declare-fun bm!7806 () Bool)

(declare-fun call!7815 () ListLongMap!1481)

(declare-fun call!7810 () ListLongMap!1481)

(assert (=> bm!7806 (= call!7815 call!7810)))

(declare-fun b!83229 () Bool)

(declare-fun e!54358 () Bool)

(declare-fun lt!39083 () ListLongMap!1481)

(assert (=> b!83229 (= e!54358 (= (apply!81 lt!39083 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2211 newMap!16)))))

(declare-fun b!83230 () Bool)

(declare-fun e!54349 () ListLongMap!1481)

(declare-fun call!7811 () ListLongMap!1481)

(assert (=> b!83230 (= e!54349 call!7811)))

(declare-fun b!83232 () Bool)

(declare-fun e!54350 () ListLongMap!1481)

(declare-fun call!7812 () ListLongMap!1481)

(assert (=> b!83232 (= e!54350 (+!114 call!7812 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))

(declare-fun b!83233 () Bool)

(declare-fun res!43083 () Bool)

(declare-fun e!54357 () Bool)

(assert (=> b!83233 (=> (not res!43083) (not e!54357))))

(declare-fun e!54353 () Bool)

(assert (=> b!83233 (= res!43083 e!54353)))

(declare-fun c!13267 () Bool)

(assert (=> b!83233 (= c!13267 (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7807 () Bool)

(assert (=> bm!7807 (= call!7810 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun c!13268 () Bool)

(declare-fun c!13266 () Bool)

(declare-fun bm!7808 () Bool)

(assert (=> bm!7808 (= call!7812 (+!114 (ite c!13266 call!7810 (ite c!13268 call!7815 call!7809)) (ite (or c!13266 c!13268) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))

(declare-fun b!83234 () Bool)

(declare-fun e!54356 () Unit!2445)

(declare-fun Unit!2457 () Unit!2445)

(assert (=> b!83234 (= e!54356 Unit!2457)))

(declare-fun bm!7809 () Bool)

(declare-fun call!7813 () Bool)

(assert (=> bm!7809 (= call!7813 (contains!757 lt!39083 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83235 () Bool)

(declare-fun res!43080 () Bool)

(assert (=> b!83235 (=> (not res!43080) (not e!54357))))

(declare-fun e!54360 () Bool)

(assert (=> b!83235 (= res!43080 e!54360)))

(declare-fun res!43081 () Bool)

(assert (=> b!83235 (=> res!43081 e!54360)))

(declare-fun e!54355 () Bool)

(assert (=> b!83235 (= res!43081 (not e!54355))))

(declare-fun res!43078 () Bool)

(assert (=> b!83235 (=> (not res!43078) (not e!54355))))

(assert (=> b!83235 (= res!43078 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!83236 () Bool)

(declare-fun e!54351 () Bool)

(assert (=> b!83236 (= e!54360 e!54351)))

(declare-fun res!43077 () Bool)

(assert (=> b!83236 (=> (not res!43077) (not e!54351))))

(assert (=> b!83236 (= res!43077 (contains!757 lt!39083 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83236 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!83237 () Bool)

(declare-fun e!54352 () Bool)

(assert (=> b!83237 (= e!54352 (not call!7813))))

(declare-fun b!83238 () Bool)

(declare-fun e!54359 () Bool)

(assert (=> b!83238 (= e!54353 e!54359)))

(declare-fun res!43076 () Bool)

(declare-fun call!7814 () Bool)

(assert (=> b!83238 (= res!43076 call!7814)))

(assert (=> b!83238 (=> (not res!43076) (not e!54359))))

(declare-fun b!83239 () Bool)

(declare-fun c!13265 () Bool)

(assert (=> b!83239 (= c!13265 (and (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!83239 (= e!54349 e!54354)))

(declare-fun b!83240 () Bool)

(declare-fun lt!39078 () Unit!2445)

(assert (=> b!83240 (= e!54356 lt!39078)))

(declare-fun lt!39084 () ListLongMap!1481)

(assert (=> b!83240 (= lt!39084 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39077 () (_ BitVec 64))

(assert (=> b!83240 (= lt!39077 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39081 () (_ BitVec 64))

(assert (=> b!83240 (= lt!39081 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39086 () Unit!2445)

(assert (=> b!83240 (= lt!39086 (addStillContains!57 lt!39084 lt!39077 (zeroValue!2211 newMap!16) lt!39081))))

(assert (=> b!83240 (contains!757 (+!114 lt!39084 (tuple2!2221 lt!39077 (zeroValue!2211 newMap!16))) lt!39081)))

(declare-fun lt!39082 () Unit!2445)

(assert (=> b!83240 (= lt!39082 lt!39086)))

(declare-fun lt!39087 () ListLongMap!1481)

(assert (=> b!83240 (= lt!39087 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39079 () (_ BitVec 64))

(assert (=> b!83240 (= lt!39079 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39093 () (_ BitVec 64))

(assert (=> b!83240 (= lt!39093 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39091 () Unit!2445)

(assert (=> b!83240 (= lt!39091 (addApplyDifferent!57 lt!39087 lt!39079 (minValue!2211 newMap!16) lt!39093))))

(assert (=> b!83240 (= (apply!81 (+!114 lt!39087 (tuple2!2221 lt!39079 (minValue!2211 newMap!16))) lt!39093) (apply!81 lt!39087 lt!39093))))

(declare-fun lt!39085 () Unit!2445)

(assert (=> b!83240 (= lt!39085 lt!39091)))

(declare-fun lt!39080 () ListLongMap!1481)

(assert (=> b!83240 (= lt!39080 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39089 () (_ BitVec 64))

(assert (=> b!83240 (= lt!39089 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39073 () (_ BitVec 64))

(assert (=> b!83240 (= lt!39073 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39088 () Unit!2445)

(assert (=> b!83240 (= lt!39088 (addApplyDifferent!57 lt!39080 lt!39089 (zeroValue!2211 newMap!16) lt!39073))))

(assert (=> b!83240 (= (apply!81 (+!114 lt!39080 (tuple2!2221 lt!39089 (zeroValue!2211 newMap!16))) lt!39073) (apply!81 lt!39080 lt!39073))))

(declare-fun lt!39074 () Unit!2445)

(assert (=> b!83240 (= lt!39074 lt!39088)))

(declare-fun lt!39076 () ListLongMap!1481)

(assert (=> b!83240 (= lt!39076 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39090 () (_ BitVec 64))

(assert (=> b!83240 (= lt!39090 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39075 () (_ BitVec 64))

(assert (=> b!83240 (= lt!39075 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!83240 (= lt!39078 (addApplyDifferent!57 lt!39076 lt!39090 (minValue!2211 newMap!16) lt!39075))))

(assert (=> b!83240 (= (apply!81 (+!114 lt!39076 (tuple2!2221 lt!39090 (minValue!2211 newMap!16))) lt!39075) (apply!81 lt!39076 lt!39075))))

(declare-fun b!83241 () Bool)

(assert (=> b!83241 (= e!54351 (= (apply!81 lt!39083 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) (get!1206 (select (arr!1913 (_values!2300 newMap!16)) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83241 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2156 (_values!2300 newMap!16))))))

(assert (=> b!83241 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!83231 () Bool)

(assert (=> b!83231 (= e!54354 call!7811)))

(declare-fun d!20917 () Bool)

(assert (=> d!20917 e!54357))

(declare-fun res!43079 () Bool)

(assert (=> d!20917 (=> (not res!43079) (not e!54357))))

(assert (=> d!20917 (= res!43079 (or (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))))

(declare-fun lt!39092 () ListLongMap!1481)

(assert (=> d!20917 (= lt!39083 lt!39092)))

(declare-fun lt!39072 () Unit!2445)

(assert (=> d!20917 (= lt!39072 e!54356)))

(declare-fun c!13264 () Bool)

(declare-fun e!54361 () Bool)

(assert (=> d!20917 (= c!13264 e!54361)))

(declare-fun res!43075 () Bool)

(assert (=> d!20917 (=> (not res!43075) (not e!54361))))

(assert (=> d!20917 (= res!43075 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!20917 (= lt!39092 e!54350)))

(assert (=> d!20917 (= c!13266 (and (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20917 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!20917 (= (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) lt!39083)))

(declare-fun bm!7810 () Bool)

(assert (=> bm!7810 (= call!7814 (contains!757 lt!39083 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83242 () Bool)

(assert (=> b!83242 (= e!54353 (not call!7814))))

(declare-fun bm!7811 () Bool)

(assert (=> bm!7811 (= call!7809 call!7815)))

(declare-fun b!83243 () Bool)

(assert (=> b!83243 (= e!54361 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83244 () Bool)

(assert (=> b!83244 (= e!54357 e!54352)))

(declare-fun c!13263 () Bool)

(assert (=> b!83244 (= c!13263 (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7812 () Bool)

(assert (=> bm!7812 (= call!7811 call!7812)))

(declare-fun b!83245 () Bool)

(assert (=> b!83245 (= e!54359 (= (apply!81 lt!39083 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2211 newMap!16)))))

(declare-fun b!83246 () Bool)

(assert (=> b!83246 (= e!54355 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83247 () Bool)

(assert (=> b!83247 (= e!54350 e!54349)))

(assert (=> b!83247 (= c!13268 (and (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!83248 () Bool)

(assert (=> b!83248 (= e!54352 e!54358)))

(declare-fun res!43082 () Bool)

(assert (=> b!83248 (= res!43082 call!7813)))

(assert (=> b!83248 (=> (not res!43082) (not e!54358))))

(assert (= (and d!20917 c!13266) b!83232))

(assert (= (and d!20917 (not c!13266)) b!83247))

(assert (= (and b!83247 c!13268) b!83230))

(assert (= (and b!83247 (not c!13268)) b!83239))

(assert (= (and b!83239 c!13265) b!83231))

(assert (= (and b!83239 (not c!13265)) b!83228))

(assert (= (or b!83231 b!83228) bm!7811))

(assert (= (or b!83230 bm!7811) bm!7806))

(assert (= (or b!83230 b!83231) bm!7812))

(assert (= (or b!83232 bm!7806) bm!7807))

(assert (= (or b!83232 bm!7812) bm!7808))

(assert (= (and d!20917 res!43075) b!83243))

(assert (= (and d!20917 c!13264) b!83240))

(assert (= (and d!20917 (not c!13264)) b!83234))

(assert (= (and d!20917 res!43079) b!83235))

(assert (= (and b!83235 res!43078) b!83246))

(assert (= (and b!83235 (not res!43081)) b!83236))

(assert (= (and b!83236 res!43077) b!83241))

(assert (= (and b!83235 res!43080) b!83233))

(assert (= (and b!83233 c!13267) b!83238))

(assert (= (and b!83233 (not c!13267)) b!83242))

(assert (= (and b!83238 res!43076) b!83245))

(assert (= (or b!83238 b!83242) bm!7810))

(assert (= (and b!83233 res!43083) b!83244))

(assert (= (and b!83244 c!13263) b!83248))

(assert (= (and b!83244 (not c!13263)) b!83237))

(assert (= (and b!83248 res!43082) b!83229))

(assert (= (or b!83248 b!83237) bm!7809))

(declare-fun b_lambda!3711 () Bool)

(assert (=> (not b_lambda!3711) (not b!83241)))

(declare-fun tb!1681 () Bool)

(declare-fun t!5259 () Bool)

(assert (=> (and b!82830 (= (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) (defaultEntry!2317 newMap!16)) t!5259) tb!1681))

(declare-fun result!2903 () Bool)

(assert (=> tb!1681 (= result!2903 tp_is_empty!2529)))

(assert (=> b!83241 t!5259))

(declare-fun b_and!5065 () Bool)

(assert (= b_and!5061 (and (=> t!5259 result!2903) b_and!5065)))

(declare-fun t!5261 () Bool)

(declare-fun tb!1683 () Bool)

(assert (=> (and b!82846 (= (defaultEntry!2317 newMap!16) (defaultEntry!2317 newMap!16)) t!5261) tb!1683))

(declare-fun result!2905 () Bool)

(assert (= result!2905 result!2903))

(assert (=> b!83241 t!5261))

(declare-fun b_and!5067 () Bool)

(assert (= b_and!5063 (and (=> t!5261 result!2905) b_and!5067)))

(declare-fun m!86043 () Bool)

(assert (=> bm!7807 m!86043))

(declare-fun m!86045 () Bool)

(assert (=> bm!7810 m!86045))

(declare-fun m!86047 () Bool)

(assert (=> bm!7808 m!86047))

(declare-fun m!86049 () Bool)

(assert (=> b!83246 m!86049))

(assert (=> b!83246 m!86049))

(declare-fun m!86051 () Bool)

(assert (=> b!83246 m!86051))

(declare-fun m!86053 () Bool)

(assert (=> bm!7809 m!86053))

(assert (=> b!83243 m!86049))

(assert (=> b!83243 m!86049))

(assert (=> b!83243 m!86051))

(assert (=> b!83236 m!86049))

(assert (=> b!83236 m!86049))

(declare-fun m!86055 () Bool)

(assert (=> b!83236 m!86055))

(assert (=> d!20917 m!86023))

(declare-fun m!86057 () Bool)

(assert (=> b!83229 m!86057))

(declare-fun m!86059 () Bool)

(assert (=> b!83240 m!86059))

(declare-fun m!86061 () Bool)

(assert (=> b!83240 m!86061))

(declare-fun m!86063 () Bool)

(assert (=> b!83240 m!86063))

(declare-fun m!86065 () Bool)

(assert (=> b!83240 m!86065))

(declare-fun m!86067 () Bool)

(assert (=> b!83240 m!86067))

(declare-fun m!86069 () Bool)

(assert (=> b!83240 m!86069))

(declare-fun m!86071 () Bool)

(assert (=> b!83240 m!86071))

(assert (=> b!83240 m!86061))

(declare-fun m!86073 () Bool)

(assert (=> b!83240 m!86073))

(declare-fun m!86075 () Bool)

(assert (=> b!83240 m!86075))

(assert (=> b!83240 m!86067))

(declare-fun m!86077 () Bool)

(assert (=> b!83240 m!86077))

(assert (=> b!83240 m!86063))

(assert (=> b!83240 m!86049))

(declare-fun m!86079 () Bool)

(assert (=> b!83240 m!86079))

(declare-fun m!86081 () Bool)

(assert (=> b!83240 m!86081))

(declare-fun m!86083 () Bool)

(assert (=> b!83240 m!86083))

(assert (=> b!83240 m!86043))

(declare-fun m!86085 () Bool)

(assert (=> b!83240 m!86085))

(assert (=> b!83240 m!86077))

(declare-fun m!86087 () Bool)

(assert (=> b!83240 m!86087))

(declare-fun m!86089 () Bool)

(assert (=> b!83241 m!86089))

(declare-fun m!86091 () Bool)

(assert (=> b!83241 m!86091))

(assert (=> b!83241 m!86049))

(declare-fun m!86093 () Bool)

(assert (=> b!83241 m!86093))

(assert (=> b!83241 m!86049))

(assert (=> b!83241 m!86091))

(assert (=> b!83241 m!86089))

(declare-fun m!86095 () Bool)

(assert (=> b!83241 m!86095))

(declare-fun m!86097 () Bool)

(assert (=> b!83232 m!86097))

(declare-fun m!86099 () Bool)

(assert (=> b!83245 m!86099))

(assert (=> b!83046 d!20917))

(declare-fun d!20919 () Bool)

(declare-fun res!43084 () Bool)

(declare-fun e!54362 () Bool)

(assert (=> d!20919 (=> (not res!43084) (not e!54362))))

(assert (=> d!20919 (= res!43084 (simpleValid!56 (v!2632 (underlying!290 thiss!992))))))

(assert (=> d!20919 (= (valid!325 (v!2632 (underlying!290 thiss!992))) e!54362)))

(declare-fun b!83249 () Bool)

(declare-fun res!43085 () Bool)

(assert (=> b!83249 (=> (not res!43085) (not e!54362))))

(assert (=> b!83249 (= res!43085 (= (arrayCountValidKeys!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000000 (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))) (_size!424 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun b!83250 () Bool)

(declare-fun res!43086 () Bool)

(assert (=> b!83250 (=> (not res!43086) (not e!54362))))

(assert (=> b!83250 (= res!43086 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun b!83251 () Bool)

(assert (=> b!83251 (= e!54362 (arrayNoDuplicates!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000000 Nil!1545))))

(assert (= (and d!20919 res!43084) b!83249))

(assert (= (and b!83249 res!43085) b!83250))

(assert (= (and b!83250 res!43086) b!83251))

(declare-fun m!86101 () Bool)

(assert (=> d!20919 m!86101))

(declare-fun m!86103 () Bool)

(assert (=> b!83249 m!86103))

(declare-fun m!86105 () Bool)

(assert (=> b!83250 m!86105))

(declare-fun m!86107 () Bool)

(assert (=> b!83251 m!86107))

(assert (=> d!20853 d!20919))

(assert (=> bm!7797 d!20885))

(declare-fun d!20921 () Bool)

(declare-fun e!54363 () Bool)

(assert (=> d!20921 e!54363))

(declare-fun res!43087 () Bool)

(assert (=> d!20921 (=> res!43087 e!54363)))

(declare-fun lt!39094 () Bool)

(assert (=> d!20921 (= res!43087 (not lt!39094))))

(declare-fun lt!39096 () Bool)

(assert (=> d!20921 (= lt!39094 lt!39096)))

(declare-fun lt!39097 () Unit!2445)

(declare-fun e!54364 () Unit!2445)

(assert (=> d!20921 (= lt!39097 e!54364)))

(declare-fun c!13269 () Bool)

(assert (=> d!20921 (= c!13269 lt!39096)))

(assert (=> d!20921 (= lt!39096 (containsKey!142 (toList!756 call!7768) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899)))))))

(assert (=> d!20921 (= (contains!757 call!7768 (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899)))) lt!39094)))

(declare-fun b!83252 () Bool)

(declare-fun lt!39095 () Unit!2445)

(assert (=> b!83252 (= e!54364 lt!39095)))

(assert (=> b!83252 (= lt!39095 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 call!7768) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899)))))))

(assert (=> b!83252 (isDefined!92 (getValueByKey!138 (toList!756 call!7768) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899)))))))

(declare-fun b!83253 () Bool)

(declare-fun Unit!2458 () Unit!2445)

(assert (=> b!83253 (= e!54364 Unit!2458)))

(declare-fun b!83254 () Bool)

(assert (=> b!83254 (= e!54363 (isDefined!92 (getValueByKey!138 (toList!756 call!7768) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899))))))))

(assert (= (and d!20921 c!13269) b!83252))

(assert (= (and d!20921 (not c!13269)) b!83253))

(assert (= (and d!20921 (not res!43087)) b!83254))

(declare-fun m!86109 () Bool)

(assert (=> d!20921 m!86109))

(declare-fun m!86111 () Bool)

(assert (=> b!83252 m!86111))

(declare-fun m!86113 () Bool)

(assert (=> b!83252 m!86113))

(assert (=> b!83252 m!86113))

(declare-fun m!86115 () Bool)

(assert (=> b!83252 m!86115))

(assert (=> b!83254 m!86113))

(assert (=> b!83254 m!86113))

(assert (=> b!83254 m!86115))

(assert (=> bm!7762 d!20921))

(declare-fun d!20923 () Bool)

(declare-fun e!54365 () Bool)

(assert (=> d!20923 e!54365))

(declare-fun res!43088 () Bool)

(assert (=> d!20923 (=> (not res!43088) (not e!54365))))

(declare-fun lt!39101 () ListLongMap!1481)

(assert (=> d!20923 (= res!43088 (contains!757 lt!39101 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun lt!39098 () List!1547)

(assert (=> d!20923 (= lt!39101 (ListLongMap!1482 lt!39098))))

(declare-fun lt!39099 () Unit!2445)

(declare-fun lt!39100 () Unit!2445)

(assert (=> d!20923 (= lt!39099 lt!39100)))

(assert (=> d!20923 (= (getValueByKey!138 lt!39098 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!20923 (= lt!39100 (lemmaContainsTupThenGetReturnValue!57 lt!39098 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!20923 (= lt!39098 (insertStrictlySorted!59 (toList!756 call!7802) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!20923 (= (+!114 call!7802 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!39101)))

(declare-fun b!83255 () Bool)

(declare-fun res!43089 () Bool)

(assert (=> b!83255 (=> (not res!43089) (not e!54365))))

(assert (=> b!83255 (= res!43089 (= (getValueByKey!138 (toList!756 lt!39101) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!83256 () Bool)

(assert (=> b!83256 (= e!54365 (contains!760 (toList!756 lt!39101) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(assert (= (and d!20923 res!43088) b!83255))

(assert (= (and b!83255 res!43089) b!83256))

(declare-fun m!86117 () Bool)

(assert (=> d!20923 m!86117))

(declare-fun m!86119 () Bool)

(assert (=> d!20923 m!86119))

(declare-fun m!86121 () Bool)

(assert (=> d!20923 m!86121))

(declare-fun m!86123 () Bool)

(assert (=> d!20923 m!86123))

(declare-fun m!86125 () Bool)

(assert (=> b!83255 m!86125))

(declare-fun m!86127 () Bool)

(assert (=> b!83256 m!86127))

(assert (=> b!83130 d!20923))

(declare-fun d!20925 () Bool)

(declare-fun e!54366 () Bool)

(assert (=> d!20925 e!54366))

(declare-fun res!43090 () Bool)

(assert (=> d!20925 (=> res!43090 e!54366)))

(declare-fun lt!39102 () Bool)

(assert (=> d!20925 (= res!43090 (not lt!39102))))

(declare-fun lt!39104 () Bool)

(assert (=> d!20925 (= lt!39102 lt!39104)))

(declare-fun lt!39105 () Unit!2445)

(declare-fun e!54367 () Unit!2445)

(assert (=> d!20925 (= lt!39105 e!54367)))

(declare-fun c!13270 () Bool)

(assert (=> d!20925 (= c!13270 lt!39104)))

(assert (=> d!20925 (= lt!39104 (containsKey!142 (toList!756 call!7759) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> d!20925 (= (contains!757 call!7759 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) lt!39102)))

(declare-fun b!83257 () Bool)

(declare-fun lt!39103 () Unit!2445)

(assert (=> b!83257 (= e!54367 lt!39103)))

(assert (=> b!83257 (= lt!39103 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 call!7759) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> b!83257 (isDefined!92 (getValueByKey!138 (toList!756 call!7759) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun b!83258 () Bool)

(declare-fun Unit!2459 () Unit!2445)

(assert (=> b!83258 (= e!54367 Unit!2459)))

(declare-fun b!83259 () Bool)

(assert (=> b!83259 (= e!54366 (isDefined!92 (getValueByKey!138 (toList!756 call!7759) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))))

(assert (= (and d!20925 c!13270) b!83257))

(assert (= (and d!20925 (not c!13270)) b!83258))

(assert (= (and d!20925 (not res!43090)) b!83259))

(assert (=> d!20925 m!85591))

(declare-fun m!86129 () Bool)

(assert (=> d!20925 m!86129))

(assert (=> b!83257 m!85591))

(declare-fun m!86131 () Bool)

(assert (=> b!83257 m!86131))

(assert (=> b!83257 m!85591))

(declare-fun m!86133 () Bool)

(assert (=> b!83257 m!86133))

(assert (=> b!83257 m!86133))

(declare-fun m!86135 () Bool)

(assert (=> b!83257 m!86135))

(assert (=> b!83259 m!85591))

(assert (=> b!83259 m!86133))

(assert (=> b!83259 m!86133))

(assert (=> b!83259 m!86135))

(assert (=> b!83018 d!20925))

(declare-fun b!83269 () Bool)

(declare-fun e!54372 () Option!144)

(declare-fun e!54373 () Option!144)

(assert (=> b!83269 (= e!54372 e!54373)))

(declare-fun c!13276 () Bool)

(assert (=> b!83269 (= c!13276 (and ((_ is Cons!1543) (toList!756 lt!39045)) (not (= (_1!1120 (h!2133 (toList!756 lt!39045))) (_1!1120 lt!38747)))))))

(declare-fun b!83268 () Bool)

(assert (=> b!83268 (= e!54372 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39045)))))))

(declare-fun b!83271 () Bool)

(assert (=> b!83271 (= e!54373 None!142)))

(declare-fun d!20927 () Bool)

(declare-fun c!13275 () Bool)

(assert (=> d!20927 (= c!13275 (and ((_ is Cons!1543) (toList!756 lt!39045)) (= (_1!1120 (h!2133 (toList!756 lt!39045))) (_1!1120 lt!38747))))))

(assert (=> d!20927 (= (getValueByKey!138 (toList!756 lt!39045) (_1!1120 lt!38747)) e!54372)))

(declare-fun b!83270 () Bool)

(assert (=> b!83270 (= e!54373 (getValueByKey!138 (t!5251 (toList!756 lt!39045)) (_1!1120 lt!38747)))))

(assert (= (and d!20927 c!13275) b!83268))

(assert (= (and d!20927 (not c!13275)) b!83269))

(assert (= (and b!83269 c!13276) b!83270))

(assert (= (and b!83269 (not c!13276)) b!83271))

(declare-fun m!86137 () Bool)

(assert (=> b!83270 m!86137))

(assert (=> b!83199 d!20927))

(declare-fun d!20929 () Bool)

(assert (=> d!20929 (= (get!1207 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) from!355) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2631 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> b!82926 d!20929))

(declare-fun e!54393 () Bool)

(declare-fun b!83306 () Bool)

(declare-fun lt!39166 () tuple2!2222)

(assert (=> b!83306 (= e!54393 (= (map!1190 (_2!1121 lt!39166)) (+!114 (map!1190 newMap!16) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun bm!7821 () Bool)

(declare-fun call!7827 () Bool)

(declare-fun call!7826 () Bool)

(assert (=> bm!7821 (= call!7827 call!7826)))

(declare-fun b!83307 () Bool)

(declare-fun e!54391 () Bool)

(declare-fun call!7825 () Bool)

(assert (=> b!83307 (= e!54391 (not call!7825))))

(declare-fun b!83308 () Bool)

(declare-fun res!43109 () Bool)

(assert (=> b!83308 (=> (not res!43109) (not e!54393))))

(assert (=> b!83308 (= res!43109 (contains!757 (map!1190 (_2!1121 lt!39166)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun b!83309 () Bool)

(declare-fun res!43113 () Bool)

(assert (=> b!83309 (=> (not res!43113) (not e!54391))))

(declare-fun lt!39176 () SeekEntryResult!252)

(assert (=> b!83309 (= res!43113 (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3144 lt!39176)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83310 () Bool)

(declare-fun e!54396 () Bool)

(assert (=> b!83310 (= e!54396 (not call!7825))))

(declare-fun b!83311 () Bool)

(declare-fun res!43116 () Bool)

(assert (=> b!83311 (= res!43116 call!7826)))

(declare-fun e!54397 () Bool)

(assert (=> b!83311 (=> (not res!43116) (not e!54397))))

(declare-fun b!83312 () Bool)

(declare-fun e!54390 () Bool)

(assert (=> b!83312 (= e!54390 ((_ is Undefined!252) lt!39176))))

(declare-fun lt!39167 () SeekEntryResult!252)

(declare-fun b!83313 () Bool)

(assert (=> b!83313 (= e!54397 (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!39167)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun d!20931 () Bool)

(assert (=> d!20931 e!54393))

(declare-fun res!43117 () Bool)

(assert (=> d!20931 (=> (not res!43117) (not e!54393))))

(assert (=> d!20931 (= res!43117 (_1!1121 lt!39166))))

(assert (=> d!20931 (= lt!39166 (tuple2!2223 true (LongMapFixedSize!751 (defaultEntry!2317 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (bvadd (_size!424 newMap!16) #b00000000000000000000000000000001) (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))) (_vacant!424 newMap!16))))))

(declare-fun lt!39175 () Unit!2445)

(declare-fun lt!39180 () Unit!2445)

(assert (=> d!20931 (= lt!39175 lt!39180)))

(declare-fun lt!39189 () array!4016)

(declare-fun lt!39188 () array!4014)

(assert (=> d!20931 (contains!757 (getCurrentListMap!440 lt!39188 lt!39189 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (select (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899))))))

(assert (=> d!20931 (= lt!39180 (lemmaValidKeyInArrayIsInListMap!88 lt!39188 lt!39189 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (defaultEntry!2317 newMap!16)))))

(assert (=> d!20931 (= lt!39189 (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))))))

(assert (=> d!20931 (= lt!39188 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))))))

(declare-fun lt!39187 () Unit!2445)

(declare-fun lt!39177 () Unit!2445)

(assert (=> d!20931 (= lt!39187 lt!39177)))

(declare-fun lt!39174 () array!4014)

(assert (=> d!20931 (= (arrayCountValidKeys!0 lt!39174 (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (bvadd (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4014 (_ BitVec 32)) Unit!2445)

(assert (=> d!20931 (= lt!39177 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!39174 (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899))))))

(assert (=> d!20931 (= lt!39174 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))))))

(declare-fun lt!39193 () Unit!2445)

(declare-fun lt!39179 () Unit!2445)

(assert (=> d!20931 (= lt!39193 lt!39179)))

(declare-fun lt!39182 () array!4014)

(assert (=> d!20931 (arrayContainsKey!0 lt!39182 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4014 (_ BitVec 64) (_ BitVec 32)) Unit!2445)

(assert (=> d!20931 (= lt!39179 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!39182 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899))))))

(assert (=> d!20931 (= lt!39182 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))))))

(declare-fun lt!39181 () Unit!2445)

(declare-fun lt!39169 () Unit!2445)

(assert (=> d!20931 (= lt!39181 lt!39169)))

(assert (=> d!20931 (= (+!114 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (getCurrentListMap!440 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!18 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 (_ BitVec 32) (_ BitVec 64) V!3019 Int) Unit!2445)

(assert (=> d!20931 (= lt!39169 (lemmaAddValidKeyToArrayThenAddPairToListMap!18 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39195 () Unit!2445)

(declare-fun lt!39194 () Unit!2445)

(assert (=> d!20931 (= lt!39195 lt!39194)))

(assert (=> d!20931 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) (mask!6335 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4014 (_ BitVec 32) (_ BitVec 32)) Unit!2445)

(assert (=> d!20931 (= lt!39194 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (_keys!3985 newMap!16) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (mask!6335 newMap!16)))))

(declare-fun lt!39172 () Unit!2445)

(declare-fun lt!39170 () Unit!2445)

(assert (=> d!20931 (= lt!39172 lt!39170)))

(assert (=> d!20931 (= (arrayCountValidKeys!0 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3985 newMap!16) #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4014 (_ BitVec 32) (_ BitVec 64)) Unit!2445)

(assert (=> d!20931 (= lt!39170 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3985 newMap!16) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun lt!39185 () Unit!2445)

(declare-fun lt!39191 () Unit!2445)

(assert (=> d!20931 (= lt!39185 lt!39191)))

(declare-fun lt!39190 () List!1548)

(declare-fun lt!39168 () (_ BitVec 32))

(assert (=> d!20931 (arrayNoDuplicates!0 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) lt!39168 lt!39190)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4014 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1548) Unit!2445)

(assert (=> d!20931 (= lt!39191 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3985 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) lt!39168 lt!39190))))

(assert (=> d!20931 (= lt!39190 Nil!1545)))

(assert (=> d!20931 (= lt!39168 #b00000000000000000000000000000000)))

(declare-fun lt!39183 () Unit!2445)

(declare-fun e!54394 () Unit!2445)

(assert (=> d!20931 (= lt!39183 e!54394)))

(declare-fun c!13286 () Bool)

(assert (=> d!20931 (= c!13286 (arrayContainsKey!0 (_keys!3985 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!39173 () Unit!2445)

(declare-fun e!54392 () Unit!2445)

(assert (=> d!20931 (= lt!39173 e!54392)))

(declare-fun c!13285 () Bool)

(assert (=> d!20931 (= c!13285 (contains!757 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> d!20931 (valid!325 newMap!16)))

(assert (=> d!20931 (= (updateHelperNewKey!30 newMap!16 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748 (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899))) lt!39166)))

(declare-fun bm!7822 () Bool)

(assert (=> bm!7822 (= call!7825 (arrayContainsKey!0 (_keys!3985 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!83314 () Bool)

(declare-fun c!13288 () Bool)

(assert (=> b!83314 (= c!13288 ((_ is MissingVacant!252) lt!39176))))

(declare-fun e!54395 () Bool)

(assert (=> b!83314 (= e!54395 e!54390)))

(declare-fun b!83315 () Bool)

(declare-fun Unit!2460 () Unit!2445)

(assert (=> b!83315 (= e!54394 Unit!2460)))

(declare-fun lt!39184 () Unit!2445)

(declare-fun lemmaArrayContainsKeyThenInListMap!18 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 (_ BitVec 64) (_ BitVec 32) Int) Unit!2445)

(assert (=> b!83315 (= lt!39184 (lemmaArrayContainsKeyThenInListMap!18 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(assert (=> b!83315 (contains!757 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))

(declare-fun lt!39192 () Unit!2445)

(assert (=> b!83315 (= lt!39192 lt!39184)))

(assert (=> b!83315 false))

(declare-fun b!83316 () Bool)

(declare-fun res!43111 () Bool)

(assert (=> b!83316 (= res!43111 (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3147 lt!39176)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83316 (=> (not res!43111) (not e!54396))))

(declare-fun bm!7823 () Bool)

(declare-fun c!13287 () Bool)

(assert (=> bm!7823 (= call!7826 (inRange!0 (ite c!13285 (index!3145 lt!39167) (ite c!13287 (index!3144 lt!39176) (index!3147 lt!39176))) (mask!6335 newMap!16)))))

(declare-fun b!83317 () Bool)

(declare-fun lt!39178 () Unit!2445)

(assert (=> b!83317 (= e!54392 lt!39178)))

(assert (=> b!83317 (= lt!39178 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!30 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (defaultEntry!2317 newMap!16)))))

(declare-fun call!7824 () SeekEntryResult!252)

(assert (=> b!83317 (= lt!39176 call!7824)))

(assert (=> b!83317 (= c!13287 ((_ is MissingZero!252) lt!39176))))

(assert (=> b!83317 e!54395))

(declare-fun b!83318 () Bool)

(assert (=> b!83318 (= e!54390 e!54396)))

(declare-fun res!43110 () Bool)

(assert (=> b!83318 (= res!43110 call!7827)))

(assert (=> b!83318 (=> (not res!43110) (not e!54396))))

(declare-fun b!83319 () Bool)

(declare-fun Unit!2461 () Unit!2445)

(assert (=> b!83319 (= e!54394 Unit!2461)))

(declare-fun bm!7824 () Bool)

(assert (=> bm!7824 (= call!7824 (seekEntryOrOpen!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (_keys!3985 newMap!16) (mask!6335 newMap!16)))))

(declare-fun b!83320 () Bool)

(declare-fun res!43114 () Bool)

(assert (=> b!83320 (=> (not res!43114) (not e!54391))))

(assert (=> b!83320 (= res!43114 call!7827)))

(assert (=> b!83320 (= e!54395 e!54391)))

(declare-fun b!83321 () Bool)

(declare-fun Unit!2462 () Unit!2445)

(assert (=> b!83321 (= e!54392 Unit!2462)))

(declare-fun lt!39171 () Unit!2445)

(assert (=> b!83321 (= lt!39171 (lemmaInListMapThenSeekEntryOrOpenFindsIt!30 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (defaultEntry!2317 newMap!16)))))

(assert (=> b!83321 (= lt!39167 call!7824)))

(declare-fun res!43115 () Bool)

(assert (=> b!83321 (= res!43115 ((_ is Found!252) lt!39167))))

(assert (=> b!83321 (=> (not res!43115) (not e!54397))))

(assert (=> b!83321 e!54397))

(declare-fun lt!39186 () Unit!2445)

(assert (=> b!83321 (= lt!39186 lt!39171)))

(assert (=> b!83321 false))

(declare-fun b!83322 () Bool)

(declare-fun res!43112 () Bool)

(assert (=> b!83322 (=> (not res!43112) (not e!54393))))

(assert (=> b!83322 (= res!43112 (valid!325 (_2!1121 lt!39166)))))

(assert (= (and d!20931 c!13285) b!83321))

(assert (= (and d!20931 (not c!13285)) b!83317))

(assert (= (and b!83321 res!43115) b!83311))

(assert (= (and b!83311 res!43116) b!83313))

(assert (= (and b!83317 c!13287) b!83320))

(assert (= (and b!83317 (not c!13287)) b!83314))

(assert (= (and b!83320 res!43114) b!83309))

(assert (= (and b!83309 res!43113) b!83307))

(assert (= (and b!83314 c!13288) b!83318))

(assert (= (and b!83314 (not c!13288)) b!83312))

(assert (= (and b!83318 res!43110) b!83316))

(assert (= (and b!83316 res!43111) b!83310))

(assert (= (or b!83320 b!83318) bm!7821))

(assert (= (or b!83307 b!83310) bm!7822))

(assert (= (or b!83311 bm!7821) bm!7823))

(assert (= (or b!83321 b!83317) bm!7824))

(assert (= (and d!20931 c!13286) b!83315))

(assert (= (and d!20931 (not c!13286)) b!83319))

(assert (= (and d!20931 res!43117) b!83322))

(assert (= (and b!83322 res!43112) b!83308))

(assert (= (and b!83308 res!43109) b!83306))

(declare-fun m!86139 () Bool)

(assert (=> b!83313 m!86139))

(declare-fun m!86141 () Bool)

(assert (=> b!83308 m!86141))

(assert (=> b!83308 m!86141))

(assert (=> b!83308 m!85591))

(declare-fun m!86143 () Bool)

(assert (=> b!83308 m!86143))

(assert (=> b!83306 m!86141))

(assert (=> b!83306 m!85621))

(assert (=> b!83306 m!85621))

(declare-fun m!86145 () Bool)

(assert (=> b!83306 m!86145))

(assert (=> b!83315 m!85591))

(declare-fun m!86147 () Bool)

(assert (=> b!83315 m!86147))

(assert (=> b!83315 m!85729))

(assert (=> b!83315 m!85729))

(assert (=> b!83315 m!85591))

(assert (=> b!83315 m!85761))

(declare-fun m!86149 () Bool)

(assert (=> b!83309 m!86149))

(assert (=> bm!7824 m!85591))

(assert (=> bm!7824 m!85741))

(assert (=> b!83321 m!85591))

(assert (=> b!83321 m!85773))

(assert (=> bm!7822 m!85591))

(assert (=> bm!7822 m!85731))

(declare-fun m!86151 () Bool)

(assert (=> bm!7823 m!86151))

(declare-fun m!86153 () Bool)

(assert (=> b!83316 m!86153))

(declare-fun m!86155 () Bool)

(assert (=> b!83322 m!86155))

(assert (=> d!20931 m!85701))

(assert (=> d!20931 m!85591))

(declare-fun m!86157 () Bool)

(assert (=> d!20931 m!86157))

(declare-fun m!86159 () Bool)

(assert (=> d!20931 m!86159))

(declare-fun m!86161 () Bool)

(assert (=> d!20931 m!86161))

(declare-fun m!86163 () Bool)

(assert (=> d!20931 m!86163))

(assert (=> d!20931 m!85729))

(declare-fun m!86165 () Bool)

(assert (=> d!20931 m!86165))

(declare-fun m!86167 () Bool)

(assert (=> d!20931 m!86167))

(declare-fun m!86169 () Bool)

(assert (=> d!20931 m!86169))

(declare-fun m!86171 () Bool)

(assert (=> d!20931 m!86171))

(assert (=> d!20931 m!86161))

(assert (=> d!20931 m!86159))

(declare-fun m!86173 () Bool)

(assert (=> d!20931 m!86173))

(assert (=> d!20931 m!85591))

(declare-fun m!86175 () Bool)

(assert (=> d!20931 m!86175))

(declare-fun m!86177 () Bool)

(assert (=> d!20931 m!86177))

(declare-fun m!86179 () Bool)

(assert (=> d!20931 m!86179))

(assert (=> d!20931 m!85619))

(assert (=> d!20931 m!85591))

(declare-fun m!86181 () Bool)

(assert (=> d!20931 m!86181))

(assert (=> d!20931 m!85729))

(assert (=> d!20931 m!85591))

(assert (=> d!20931 m!85761))

(assert (=> d!20931 m!85591))

(declare-fun m!86183 () Bool)

(assert (=> d!20931 m!86183))

(assert (=> d!20931 m!85729))

(assert (=> d!20931 m!86031))

(declare-fun m!86185 () Bool)

(assert (=> d!20931 m!86185))

(assert (=> d!20931 m!85591))

(declare-fun m!86187 () Bool)

(assert (=> d!20931 m!86187))

(assert (=> d!20931 m!85591))

(declare-fun m!86189 () Bool)

(assert (=> d!20931 m!86189))

(assert (=> d!20931 m!85591))

(assert (=> d!20931 m!85731))

(declare-fun m!86191 () Bool)

(assert (=> d!20931 m!86191))

(assert (=> b!83317 m!85591))

(assert (=> b!83317 m!85767))

(assert (=> bm!7757 d!20931))

(declare-fun d!20933 () Bool)

(declare-fun e!54398 () Bool)

(assert (=> d!20933 e!54398))

(declare-fun res!43118 () Bool)

(assert (=> d!20933 (=> res!43118 e!54398)))

(declare-fun lt!39196 () Bool)

(assert (=> d!20933 (= res!43118 (not lt!39196))))

(declare-fun lt!39198 () Bool)

(assert (=> d!20933 (= lt!39196 lt!39198)))

(declare-fun lt!39199 () Unit!2445)

(declare-fun e!54399 () Unit!2445)

(assert (=> d!20933 (= lt!39199 e!54399)))

(declare-fun c!13289 () Bool)

(assert (=> d!20933 (= c!13289 lt!39198)))

(assert (=> d!20933 (= lt!39198 (containsKey!142 (toList!756 lt!39029) (_1!1120 lt!38750)))))

(assert (=> d!20933 (= (contains!757 lt!39029 (_1!1120 lt!38750)) lt!39196)))

(declare-fun b!83323 () Bool)

(declare-fun lt!39197 () Unit!2445)

(assert (=> b!83323 (= e!54399 lt!39197)))

(assert (=> b!83323 (= lt!39197 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39029) (_1!1120 lt!38750)))))

(assert (=> b!83323 (isDefined!92 (getValueByKey!138 (toList!756 lt!39029) (_1!1120 lt!38750)))))

(declare-fun b!83324 () Bool)

(declare-fun Unit!2463 () Unit!2445)

(assert (=> b!83324 (= e!54399 Unit!2463)))

(declare-fun b!83325 () Bool)

(assert (=> b!83325 (= e!54398 (isDefined!92 (getValueByKey!138 (toList!756 lt!39029) (_1!1120 lt!38750))))))

(assert (= (and d!20933 c!13289) b!83323))

(assert (= (and d!20933 (not c!13289)) b!83324))

(assert (= (and d!20933 (not res!43118)) b!83325))

(declare-fun m!86193 () Bool)

(assert (=> d!20933 m!86193))

(declare-fun m!86195 () Bool)

(assert (=> b!83323 m!86195))

(assert (=> b!83323 m!85917))

(assert (=> b!83323 m!85917))

(declare-fun m!86197 () Bool)

(assert (=> b!83323 m!86197))

(assert (=> b!83325 m!85917))

(assert (=> b!83325 m!85917))

(assert (=> b!83325 m!86197))

(assert (=> d!20889 d!20933))

(declare-fun b!83327 () Bool)

(declare-fun e!54400 () Option!144)

(declare-fun e!54401 () Option!144)

(assert (=> b!83327 (= e!54400 e!54401)))

(declare-fun c!13291 () Bool)

(assert (=> b!83327 (= c!13291 (and ((_ is Cons!1543) lt!39026) (not (= (_1!1120 (h!2133 lt!39026)) (_1!1120 lt!38750)))))))

(declare-fun b!83326 () Bool)

(assert (=> b!83326 (= e!54400 (Some!143 (_2!1120 (h!2133 lt!39026))))))

(declare-fun b!83329 () Bool)

(assert (=> b!83329 (= e!54401 None!142)))

(declare-fun d!20935 () Bool)

(declare-fun c!13290 () Bool)

(assert (=> d!20935 (= c!13290 (and ((_ is Cons!1543) lt!39026) (= (_1!1120 (h!2133 lt!39026)) (_1!1120 lt!38750))))))

(assert (=> d!20935 (= (getValueByKey!138 lt!39026 (_1!1120 lt!38750)) e!54400)))

(declare-fun b!83328 () Bool)

(assert (=> b!83328 (= e!54401 (getValueByKey!138 (t!5251 lt!39026) (_1!1120 lt!38750)))))

(assert (= (and d!20935 c!13290) b!83326))

(assert (= (and d!20935 (not c!13290)) b!83327))

(assert (= (and b!83327 c!13291) b!83328))

(assert (= (and b!83327 (not c!13291)) b!83329))

(declare-fun m!86199 () Bool)

(assert (=> b!83328 m!86199))

(assert (=> d!20889 d!20935))

(declare-fun d!20937 () Bool)

(assert (=> d!20937 (= (getValueByKey!138 lt!39026 (_1!1120 lt!38750)) (Some!143 (_2!1120 lt!38750)))))

(declare-fun lt!39202 () Unit!2445)

(declare-fun choose!495 (List!1547 (_ BitVec 64) V!3019) Unit!2445)

(assert (=> d!20937 (= lt!39202 (choose!495 lt!39026 (_1!1120 lt!38750) (_2!1120 lt!38750)))))

(declare-fun e!54404 () Bool)

(assert (=> d!20937 e!54404))

(declare-fun res!43123 () Bool)

(assert (=> d!20937 (=> (not res!43123) (not e!54404))))

(declare-fun isStrictlySorted!292 (List!1547) Bool)

(assert (=> d!20937 (= res!43123 (isStrictlySorted!292 lt!39026))))

(assert (=> d!20937 (= (lemmaContainsTupThenGetReturnValue!57 lt!39026 (_1!1120 lt!38750) (_2!1120 lt!38750)) lt!39202)))

(declare-fun b!83334 () Bool)

(declare-fun res!43124 () Bool)

(assert (=> b!83334 (=> (not res!43124) (not e!54404))))

(assert (=> b!83334 (= res!43124 (containsKey!142 lt!39026 (_1!1120 lt!38750)))))

(declare-fun b!83335 () Bool)

(assert (=> b!83335 (= e!54404 (contains!760 lt!39026 (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(assert (= (and d!20937 res!43123) b!83334))

(assert (= (and b!83334 res!43124) b!83335))

(assert (=> d!20937 m!85911))

(declare-fun m!86201 () Bool)

(assert (=> d!20937 m!86201))

(declare-fun m!86203 () Bool)

(assert (=> d!20937 m!86203))

(declare-fun m!86205 () Bool)

(assert (=> b!83334 m!86205))

(declare-fun m!86207 () Bool)

(assert (=> b!83335 m!86207))

(assert (=> d!20889 d!20937))

(declare-fun bm!7831 () Bool)

(declare-fun call!7835 () List!1547)

(declare-fun call!7834 () List!1547)

(assert (=> bm!7831 (= call!7835 call!7834)))

(declare-fun b!83356 () Bool)

(declare-fun e!54418 () List!1547)

(assert (=> b!83356 (= e!54418 call!7835)))

(declare-fun b!83357 () Bool)

(declare-fun e!54417 () List!1547)

(declare-fun call!7836 () List!1547)

(assert (=> b!83357 (= e!54417 call!7836)))

(declare-fun b!83358 () Bool)

(declare-fun e!54416 () List!1547)

(assert (=> b!83358 (= e!54416 (insertStrictlySorted!59 (t!5251 (toList!756 lt!38755)) (_1!1120 lt!38750) (_2!1120 lt!38750)))))

(declare-fun b!83359 () Bool)

(assert (=> b!83359 (= e!54417 call!7836)))

(declare-fun b!83360 () Bool)

(declare-fun res!43129 () Bool)

(declare-fun e!54419 () Bool)

(assert (=> b!83360 (=> (not res!43129) (not e!54419))))

(declare-fun lt!39205 () List!1547)

(assert (=> b!83360 (= res!43129 (containsKey!142 lt!39205 (_1!1120 lt!38750)))))

(declare-fun d!20939 () Bool)

(assert (=> d!20939 e!54419))

(declare-fun res!43130 () Bool)

(assert (=> d!20939 (=> (not res!43130) (not e!54419))))

(assert (=> d!20939 (= res!43130 (isStrictlySorted!292 lt!39205))))

(declare-fun e!54415 () List!1547)

(assert (=> d!20939 (= lt!39205 e!54415)))

(declare-fun c!13301 () Bool)

(assert (=> d!20939 (= c!13301 (and ((_ is Cons!1543) (toList!756 lt!38755)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38755))) (_1!1120 lt!38750))))))

(assert (=> d!20939 (isStrictlySorted!292 (toList!756 lt!38755))))

(assert (=> d!20939 (= (insertStrictlySorted!59 (toList!756 lt!38755) (_1!1120 lt!38750) (_2!1120 lt!38750)) lt!39205)))

(declare-fun b!83361 () Bool)

(assert (=> b!83361 (= e!54419 (contains!760 lt!39205 (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(declare-fun b!83362 () Bool)

(assert (=> b!83362 (= e!54415 e!54418)))

(declare-fun c!13300 () Bool)

(assert (=> b!83362 (= c!13300 (and ((_ is Cons!1543) (toList!756 lt!38755)) (= (_1!1120 (h!2133 (toList!756 lt!38755))) (_1!1120 lt!38750))))))

(declare-fun b!83363 () Bool)

(declare-fun c!13303 () Bool)

(assert (=> b!83363 (= e!54416 (ite c!13300 (t!5251 (toList!756 lt!38755)) (ite c!13303 (Cons!1543 (h!2133 (toList!756 lt!38755)) (t!5251 (toList!756 lt!38755))) Nil!1544)))))

(declare-fun b!83364 () Bool)

(assert (=> b!83364 (= c!13303 (and ((_ is Cons!1543) (toList!756 lt!38755)) (bvsgt (_1!1120 (h!2133 (toList!756 lt!38755))) (_1!1120 lt!38750))))))

(assert (=> b!83364 (= e!54418 e!54417)))

(declare-fun bm!7832 () Bool)

(declare-fun $colon$colon!70 (List!1547 tuple2!2220) List!1547)

(assert (=> bm!7832 (= call!7834 ($colon$colon!70 e!54416 (ite c!13301 (h!2133 (toList!756 lt!38755)) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750)))))))

(declare-fun c!13302 () Bool)

(assert (=> bm!7832 (= c!13302 c!13301)))

(declare-fun b!83365 () Bool)

(assert (=> b!83365 (= e!54415 call!7834)))

(declare-fun bm!7833 () Bool)

(assert (=> bm!7833 (= call!7836 call!7835)))

(assert (= (and d!20939 c!13301) b!83365))

(assert (= (and d!20939 (not c!13301)) b!83362))

(assert (= (and b!83362 c!13300) b!83356))

(assert (= (and b!83362 (not c!13300)) b!83364))

(assert (= (and b!83364 c!13303) b!83359))

(assert (= (and b!83364 (not c!13303)) b!83357))

(assert (= (or b!83359 b!83357) bm!7833))

(assert (= (or b!83356 bm!7833) bm!7831))

(assert (= (or b!83365 bm!7831) bm!7832))

(assert (= (and bm!7832 c!13302) b!83358))

(assert (= (and bm!7832 (not c!13302)) b!83363))

(assert (= (and d!20939 res!43130) b!83360))

(assert (= (and b!83360 res!43129) b!83361))

(declare-fun m!86209 () Bool)

(assert (=> d!20939 m!86209))

(declare-fun m!86211 () Bool)

(assert (=> d!20939 m!86211))

(declare-fun m!86213 () Bool)

(assert (=> b!83358 m!86213))

(declare-fun m!86215 () Bool)

(assert (=> b!83361 m!86215))

(declare-fun m!86217 () Bool)

(assert (=> bm!7832 m!86217))

(declare-fun m!86219 () Bool)

(assert (=> b!83360 m!86219))

(assert (=> d!20889 d!20939))

(declare-fun d!20941 () Bool)

(declare-fun e!54420 () Bool)

(assert (=> d!20941 e!54420))

(declare-fun res!43131 () Bool)

(assert (=> d!20941 (=> res!43131 e!54420)))

(declare-fun lt!39206 () Bool)

(assert (=> d!20941 (= res!43131 (not lt!39206))))

(declare-fun lt!39208 () Bool)

(assert (=> d!20941 (= lt!39206 lt!39208)))

(declare-fun lt!39209 () Unit!2445)

(declare-fun e!54421 () Unit!2445)

(assert (=> d!20941 (= lt!39209 e!54421)))

(declare-fun c!13304 () Bool)

(assert (=> d!20941 (= c!13304 lt!39208)))

(assert (=> d!20941 (= lt!39208 (containsKey!142 (toList!756 lt!38999) (_1!1120 lt!38750)))))

(assert (=> d!20941 (= (contains!757 lt!38999 (_1!1120 lt!38750)) lt!39206)))

(declare-fun b!83366 () Bool)

(declare-fun lt!39207 () Unit!2445)

(assert (=> b!83366 (= e!54421 lt!39207)))

(assert (=> b!83366 (= lt!39207 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!38999) (_1!1120 lt!38750)))))

(assert (=> b!83366 (isDefined!92 (getValueByKey!138 (toList!756 lt!38999) (_1!1120 lt!38750)))))

(declare-fun b!83367 () Bool)

(declare-fun Unit!2464 () Unit!2445)

(assert (=> b!83367 (= e!54421 Unit!2464)))

(declare-fun b!83368 () Bool)

(assert (=> b!83368 (= e!54420 (isDefined!92 (getValueByKey!138 (toList!756 lt!38999) (_1!1120 lt!38750))))))

(assert (= (and d!20941 c!13304) b!83366))

(assert (= (and d!20941 (not c!13304)) b!83367))

(assert (= (and d!20941 (not res!43131)) b!83368))

(declare-fun m!86221 () Bool)

(assert (=> d!20941 m!86221))

(declare-fun m!86223 () Bool)

(assert (=> b!83366 m!86223))

(assert (=> b!83366 m!85863))

(assert (=> b!83366 m!85863))

(declare-fun m!86225 () Bool)

(assert (=> b!83366 m!86225))

(assert (=> b!83368 m!85863))

(assert (=> b!83368 m!85863))

(assert (=> b!83368 m!86225))

(assert (=> d!20881 d!20941))

(declare-fun b!83370 () Bool)

(declare-fun e!54422 () Option!144)

(declare-fun e!54423 () Option!144)

(assert (=> b!83370 (= e!54422 e!54423)))

(declare-fun c!13306 () Bool)

(assert (=> b!83370 (= c!13306 (and ((_ is Cons!1543) lt!38996) (not (= (_1!1120 (h!2133 lt!38996)) (_1!1120 lt!38750)))))))

(declare-fun b!83369 () Bool)

(assert (=> b!83369 (= e!54422 (Some!143 (_2!1120 (h!2133 lt!38996))))))

(declare-fun b!83372 () Bool)

(assert (=> b!83372 (= e!54423 None!142)))

(declare-fun d!20943 () Bool)

(declare-fun c!13305 () Bool)

(assert (=> d!20943 (= c!13305 (and ((_ is Cons!1543) lt!38996) (= (_1!1120 (h!2133 lt!38996)) (_1!1120 lt!38750))))))

(assert (=> d!20943 (= (getValueByKey!138 lt!38996 (_1!1120 lt!38750)) e!54422)))

(declare-fun b!83371 () Bool)

(assert (=> b!83371 (= e!54423 (getValueByKey!138 (t!5251 lt!38996) (_1!1120 lt!38750)))))

(assert (= (and d!20943 c!13305) b!83369))

(assert (= (and d!20943 (not c!13305)) b!83370))

(assert (= (and b!83370 c!13306) b!83371))

(assert (= (and b!83370 (not c!13306)) b!83372))

(declare-fun m!86227 () Bool)

(assert (=> b!83371 m!86227))

(assert (=> d!20881 d!20943))

(declare-fun d!20945 () Bool)

(assert (=> d!20945 (= (getValueByKey!138 lt!38996 (_1!1120 lt!38750)) (Some!143 (_2!1120 lt!38750)))))

(declare-fun lt!39210 () Unit!2445)

(assert (=> d!20945 (= lt!39210 (choose!495 lt!38996 (_1!1120 lt!38750) (_2!1120 lt!38750)))))

(declare-fun e!54424 () Bool)

(assert (=> d!20945 e!54424))

(declare-fun res!43132 () Bool)

(assert (=> d!20945 (=> (not res!43132) (not e!54424))))

(assert (=> d!20945 (= res!43132 (isStrictlySorted!292 lt!38996))))

(assert (=> d!20945 (= (lemmaContainsTupThenGetReturnValue!57 lt!38996 (_1!1120 lt!38750) (_2!1120 lt!38750)) lt!39210)))

(declare-fun b!83373 () Bool)

(declare-fun res!43133 () Bool)

(assert (=> b!83373 (=> (not res!43133) (not e!54424))))

(assert (=> b!83373 (= res!43133 (containsKey!142 lt!38996 (_1!1120 lt!38750)))))

(declare-fun b!83374 () Bool)

(assert (=> b!83374 (= e!54424 (contains!760 lt!38996 (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(assert (= (and d!20945 res!43132) b!83373))

(assert (= (and b!83373 res!43133) b!83374))

(assert (=> d!20945 m!85857))

(declare-fun m!86229 () Bool)

(assert (=> d!20945 m!86229))

(declare-fun m!86231 () Bool)

(assert (=> d!20945 m!86231))

(declare-fun m!86233 () Bool)

(assert (=> b!83373 m!86233))

(declare-fun m!86235 () Bool)

(assert (=> b!83374 m!86235))

(assert (=> d!20881 d!20945))

(declare-fun bm!7834 () Bool)

(declare-fun call!7838 () List!1547)

(declare-fun call!7837 () List!1547)

(assert (=> bm!7834 (= call!7838 call!7837)))

(declare-fun b!83375 () Bool)

(declare-fun e!54428 () List!1547)

(assert (=> b!83375 (= e!54428 call!7838)))

(declare-fun b!83376 () Bool)

(declare-fun e!54427 () List!1547)

(declare-fun call!7839 () List!1547)

(assert (=> b!83376 (= e!54427 call!7839)))

(declare-fun b!83377 () Bool)

(declare-fun e!54426 () List!1547)

(assert (=> b!83377 (= e!54426 (insertStrictlySorted!59 (t!5251 (toList!756 lt!38754)) (_1!1120 lt!38750) (_2!1120 lt!38750)))))

(declare-fun b!83378 () Bool)

(assert (=> b!83378 (= e!54427 call!7839)))

(declare-fun b!83379 () Bool)

(declare-fun res!43134 () Bool)

(declare-fun e!54429 () Bool)

(assert (=> b!83379 (=> (not res!43134) (not e!54429))))

(declare-fun lt!39211 () List!1547)

(assert (=> b!83379 (= res!43134 (containsKey!142 lt!39211 (_1!1120 lt!38750)))))

(declare-fun d!20947 () Bool)

(assert (=> d!20947 e!54429))

(declare-fun res!43135 () Bool)

(assert (=> d!20947 (=> (not res!43135) (not e!54429))))

(assert (=> d!20947 (= res!43135 (isStrictlySorted!292 lt!39211))))

(declare-fun e!54425 () List!1547)

(assert (=> d!20947 (= lt!39211 e!54425)))

(declare-fun c!13308 () Bool)

(assert (=> d!20947 (= c!13308 (and ((_ is Cons!1543) (toList!756 lt!38754)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38754))) (_1!1120 lt!38750))))))

(assert (=> d!20947 (isStrictlySorted!292 (toList!756 lt!38754))))

(assert (=> d!20947 (= (insertStrictlySorted!59 (toList!756 lt!38754) (_1!1120 lt!38750) (_2!1120 lt!38750)) lt!39211)))

(declare-fun b!83380 () Bool)

(assert (=> b!83380 (= e!54429 (contains!760 lt!39211 (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(declare-fun b!83381 () Bool)

(assert (=> b!83381 (= e!54425 e!54428)))

(declare-fun c!13307 () Bool)

(assert (=> b!83381 (= c!13307 (and ((_ is Cons!1543) (toList!756 lt!38754)) (= (_1!1120 (h!2133 (toList!756 lt!38754))) (_1!1120 lt!38750))))))

(declare-fun b!83382 () Bool)

(declare-fun c!13310 () Bool)

(assert (=> b!83382 (= e!54426 (ite c!13307 (t!5251 (toList!756 lt!38754)) (ite c!13310 (Cons!1543 (h!2133 (toList!756 lt!38754)) (t!5251 (toList!756 lt!38754))) Nil!1544)))))

(declare-fun b!83383 () Bool)

(assert (=> b!83383 (= c!13310 (and ((_ is Cons!1543) (toList!756 lt!38754)) (bvsgt (_1!1120 (h!2133 (toList!756 lt!38754))) (_1!1120 lt!38750))))))

(assert (=> b!83383 (= e!54428 e!54427)))

(declare-fun bm!7835 () Bool)

(assert (=> bm!7835 (= call!7837 ($colon$colon!70 e!54426 (ite c!13308 (h!2133 (toList!756 lt!38754)) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750)))))))

(declare-fun c!13309 () Bool)

(assert (=> bm!7835 (= c!13309 c!13308)))

(declare-fun b!83384 () Bool)

(assert (=> b!83384 (= e!54425 call!7837)))

(declare-fun bm!7836 () Bool)

(assert (=> bm!7836 (= call!7839 call!7838)))

(assert (= (and d!20947 c!13308) b!83384))

(assert (= (and d!20947 (not c!13308)) b!83381))

(assert (= (and b!83381 c!13307) b!83375))

(assert (= (and b!83381 (not c!13307)) b!83383))

(assert (= (and b!83383 c!13310) b!83378))

(assert (= (and b!83383 (not c!13310)) b!83376))

(assert (= (or b!83378 b!83376) bm!7836))

(assert (= (or b!83375 bm!7836) bm!7834))

(assert (= (or b!83384 bm!7834) bm!7835))

(assert (= (and bm!7835 c!13309) b!83377))

(assert (= (and bm!7835 (not c!13309)) b!83382))

(assert (= (and d!20947 res!43135) b!83379))

(assert (= (and b!83379 res!43134) b!83380))

(declare-fun m!86237 () Bool)

(assert (=> d!20947 m!86237))

(declare-fun m!86239 () Bool)

(assert (=> d!20947 m!86239))

(declare-fun m!86241 () Bool)

(assert (=> b!83377 m!86241))

(declare-fun m!86243 () Bool)

(assert (=> b!83380 m!86243))

(declare-fun m!86245 () Bool)

(assert (=> bm!7835 m!86245))

(declare-fun m!86247 () Bool)

(assert (=> b!83379 m!86247))

(assert (=> d!20881 d!20947))

(declare-fun d!20949 () Bool)

(declare-fun e!54430 () Bool)

(assert (=> d!20949 e!54430))

(declare-fun res!43136 () Bool)

(assert (=> d!20949 (=> res!43136 e!54430)))

(declare-fun lt!39212 () Bool)

(assert (=> d!20949 (= res!43136 (not lt!39212))))

(declare-fun lt!39214 () Bool)

(assert (=> d!20949 (= lt!39212 lt!39214)))

(declare-fun lt!39215 () Unit!2445)

(declare-fun e!54431 () Unit!2445)

(assert (=> d!20949 (= lt!39215 e!54431)))

(declare-fun c!13311 () Bool)

(assert (=> d!20949 (= c!13311 lt!39214)))

(assert (=> d!20949 (= lt!39214 (containsKey!142 (toList!756 lt!39033) (_1!1120 lt!38760)))))

(assert (=> d!20949 (= (contains!757 lt!39033 (_1!1120 lt!38760)) lt!39212)))

(declare-fun b!83385 () Bool)

(declare-fun lt!39213 () Unit!2445)

(assert (=> b!83385 (= e!54431 lt!39213)))

(assert (=> b!83385 (= lt!39213 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39033) (_1!1120 lt!38760)))))

(assert (=> b!83385 (isDefined!92 (getValueByKey!138 (toList!756 lt!39033) (_1!1120 lt!38760)))))

(declare-fun b!83386 () Bool)

(declare-fun Unit!2465 () Unit!2445)

(assert (=> b!83386 (= e!54431 Unit!2465)))

(declare-fun b!83387 () Bool)

(assert (=> b!83387 (= e!54430 (isDefined!92 (getValueByKey!138 (toList!756 lt!39033) (_1!1120 lt!38760))))))

(assert (= (and d!20949 c!13311) b!83385))

(assert (= (and d!20949 (not c!13311)) b!83386))

(assert (= (and d!20949 (not res!43136)) b!83387))

(declare-fun m!86249 () Bool)

(assert (=> d!20949 m!86249))

(declare-fun m!86251 () Bool)

(assert (=> b!83385 m!86251))

(assert (=> b!83385 m!85929))

(assert (=> b!83385 m!85929))

(declare-fun m!86253 () Bool)

(assert (=> b!83385 m!86253))

(assert (=> b!83387 m!85929))

(assert (=> b!83387 m!85929))

(assert (=> b!83387 m!86253))

(assert (=> d!20891 d!20949))

(declare-fun b!83389 () Bool)

(declare-fun e!54432 () Option!144)

(declare-fun e!54433 () Option!144)

(assert (=> b!83389 (= e!54432 e!54433)))

(declare-fun c!13313 () Bool)

(assert (=> b!83389 (= c!13313 (and ((_ is Cons!1543) lt!39030) (not (= (_1!1120 (h!2133 lt!39030)) (_1!1120 lt!38760)))))))

(declare-fun b!83388 () Bool)

(assert (=> b!83388 (= e!54432 (Some!143 (_2!1120 (h!2133 lt!39030))))))

(declare-fun b!83391 () Bool)

(assert (=> b!83391 (= e!54433 None!142)))

(declare-fun d!20951 () Bool)

(declare-fun c!13312 () Bool)

(assert (=> d!20951 (= c!13312 (and ((_ is Cons!1543) lt!39030) (= (_1!1120 (h!2133 lt!39030)) (_1!1120 lt!38760))))))

(assert (=> d!20951 (= (getValueByKey!138 lt!39030 (_1!1120 lt!38760)) e!54432)))

(declare-fun b!83390 () Bool)

(assert (=> b!83390 (= e!54433 (getValueByKey!138 (t!5251 lt!39030) (_1!1120 lt!38760)))))

(assert (= (and d!20951 c!13312) b!83388))

(assert (= (and d!20951 (not c!13312)) b!83389))

(assert (= (and b!83389 c!13313) b!83390))

(assert (= (and b!83389 (not c!13313)) b!83391))

(declare-fun m!86255 () Bool)

(assert (=> b!83390 m!86255))

(assert (=> d!20891 d!20951))

(declare-fun d!20953 () Bool)

(assert (=> d!20953 (= (getValueByKey!138 lt!39030 (_1!1120 lt!38760)) (Some!143 (_2!1120 lt!38760)))))

(declare-fun lt!39216 () Unit!2445)

(assert (=> d!20953 (= lt!39216 (choose!495 lt!39030 (_1!1120 lt!38760) (_2!1120 lt!38760)))))

(declare-fun e!54434 () Bool)

(assert (=> d!20953 e!54434))

(declare-fun res!43137 () Bool)

(assert (=> d!20953 (=> (not res!43137) (not e!54434))))

(assert (=> d!20953 (= res!43137 (isStrictlySorted!292 lt!39030))))

(assert (=> d!20953 (= (lemmaContainsTupThenGetReturnValue!57 lt!39030 (_1!1120 lt!38760) (_2!1120 lt!38760)) lt!39216)))

(declare-fun b!83392 () Bool)

(declare-fun res!43138 () Bool)

(assert (=> b!83392 (=> (not res!43138) (not e!54434))))

(assert (=> b!83392 (= res!43138 (containsKey!142 lt!39030 (_1!1120 lt!38760)))))

(declare-fun b!83393 () Bool)

(assert (=> b!83393 (= e!54434 (contains!760 lt!39030 (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))))))

(assert (= (and d!20953 res!43137) b!83392))

(assert (= (and b!83392 res!43138) b!83393))

(assert (=> d!20953 m!85923))

(declare-fun m!86257 () Bool)

(assert (=> d!20953 m!86257))

(declare-fun m!86259 () Bool)

(assert (=> d!20953 m!86259))

(declare-fun m!86261 () Bool)

(assert (=> b!83392 m!86261))

(declare-fun m!86263 () Bool)

(assert (=> b!83393 m!86263))

(assert (=> d!20891 d!20953))

(declare-fun bm!7837 () Bool)

(declare-fun call!7841 () List!1547)

(declare-fun call!7840 () List!1547)

(assert (=> bm!7837 (= call!7841 call!7840)))

(declare-fun b!83394 () Bool)

(declare-fun e!54438 () List!1547)

(assert (=> b!83394 (= e!54438 call!7841)))

(declare-fun b!83395 () Bool)

(declare-fun e!54437 () List!1547)

(declare-fun call!7842 () List!1547)

(assert (=> b!83395 (= e!54437 call!7842)))

(declare-fun b!83396 () Bool)

(declare-fun e!54436 () List!1547)

(assert (=> b!83396 (= e!54436 (insertStrictlySorted!59 (t!5251 (toList!756 lt!38749)) (_1!1120 lt!38760) (_2!1120 lt!38760)))))

(declare-fun b!83397 () Bool)

(assert (=> b!83397 (= e!54437 call!7842)))

(declare-fun b!83398 () Bool)

(declare-fun res!43139 () Bool)

(declare-fun e!54439 () Bool)

(assert (=> b!83398 (=> (not res!43139) (not e!54439))))

(declare-fun lt!39217 () List!1547)

(assert (=> b!83398 (= res!43139 (containsKey!142 lt!39217 (_1!1120 lt!38760)))))

(declare-fun d!20955 () Bool)

(assert (=> d!20955 e!54439))

(declare-fun res!43140 () Bool)

(assert (=> d!20955 (=> (not res!43140) (not e!54439))))

(assert (=> d!20955 (= res!43140 (isStrictlySorted!292 lt!39217))))

(declare-fun e!54435 () List!1547)

(assert (=> d!20955 (= lt!39217 e!54435)))

(declare-fun c!13315 () Bool)

(assert (=> d!20955 (= c!13315 (and ((_ is Cons!1543) (toList!756 lt!38749)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38749))) (_1!1120 lt!38760))))))

(assert (=> d!20955 (isStrictlySorted!292 (toList!756 lt!38749))))

(assert (=> d!20955 (= (insertStrictlySorted!59 (toList!756 lt!38749) (_1!1120 lt!38760) (_2!1120 lt!38760)) lt!39217)))

(declare-fun b!83399 () Bool)

(assert (=> b!83399 (= e!54439 (contains!760 lt!39217 (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))))))

(declare-fun b!83400 () Bool)

(assert (=> b!83400 (= e!54435 e!54438)))

(declare-fun c!13314 () Bool)

(assert (=> b!83400 (= c!13314 (and ((_ is Cons!1543) (toList!756 lt!38749)) (= (_1!1120 (h!2133 (toList!756 lt!38749))) (_1!1120 lt!38760))))))

(declare-fun c!13317 () Bool)

(declare-fun b!83401 () Bool)

(assert (=> b!83401 (= e!54436 (ite c!13314 (t!5251 (toList!756 lt!38749)) (ite c!13317 (Cons!1543 (h!2133 (toList!756 lt!38749)) (t!5251 (toList!756 lt!38749))) Nil!1544)))))

(declare-fun b!83402 () Bool)

(assert (=> b!83402 (= c!13317 (and ((_ is Cons!1543) (toList!756 lt!38749)) (bvsgt (_1!1120 (h!2133 (toList!756 lt!38749))) (_1!1120 lt!38760))))))

(assert (=> b!83402 (= e!54438 e!54437)))

(declare-fun bm!7838 () Bool)

(assert (=> bm!7838 (= call!7840 ($colon$colon!70 e!54436 (ite c!13315 (h!2133 (toList!756 lt!38749)) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760)))))))

(declare-fun c!13316 () Bool)

(assert (=> bm!7838 (= c!13316 c!13315)))

(declare-fun b!83403 () Bool)

(assert (=> b!83403 (= e!54435 call!7840)))

(declare-fun bm!7839 () Bool)

(assert (=> bm!7839 (= call!7842 call!7841)))

(assert (= (and d!20955 c!13315) b!83403))

(assert (= (and d!20955 (not c!13315)) b!83400))

(assert (= (and b!83400 c!13314) b!83394))

(assert (= (and b!83400 (not c!13314)) b!83402))

(assert (= (and b!83402 c!13317) b!83397))

(assert (= (and b!83402 (not c!13317)) b!83395))

(assert (= (or b!83397 b!83395) bm!7839))

(assert (= (or b!83394 bm!7839) bm!7837))

(assert (= (or b!83403 bm!7837) bm!7838))

(assert (= (and bm!7838 c!13316) b!83396))

(assert (= (and bm!7838 (not c!13316)) b!83401))

(assert (= (and d!20955 res!43140) b!83398))

(assert (= (and b!83398 res!43139) b!83399))

(declare-fun m!86265 () Bool)

(assert (=> d!20955 m!86265))

(declare-fun m!86267 () Bool)

(assert (=> d!20955 m!86267))

(declare-fun m!86269 () Bool)

(assert (=> b!83396 m!86269))

(declare-fun m!86271 () Bool)

(assert (=> b!83399 m!86271))

(declare-fun m!86273 () Bool)

(assert (=> bm!7838 m!86273))

(declare-fun m!86275 () Bool)

(assert (=> b!83398 m!86275))

(assert (=> d!20891 d!20955))

(declare-fun d!20957 () Bool)

(assert (=> d!20957 (isDefined!92 (getValueByKey!138 (toList!756 lt!38757) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun lt!39220 () Unit!2445)

(declare-fun choose!496 (List!1547 (_ BitVec 64)) Unit!2445)

(assert (=> d!20957 (= lt!39220 (choose!496 (toList!756 lt!38757) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun e!54442 () Bool)

(assert (=> d!20957 e!54442))

(declare-fun res!43143 () Bool)

(assert (=> d!20957 (=> (not res!43143) (not e!54442))))

(assert (=> d!20957 (= res!43143 (isStrictlySorted!292 (toList!756 lt!38757)))))

(assert (=> d!20957 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!38757) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) lt!39220)))

(declare-fun b!83406 () Bool)

(assert (=> b!83406 (= e!54442 (containsKey!142 (toList!756 lt!38757) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (= (and d!20957 res!43143) b!83406))

(assert (=> d!20957 m!85591))

(assert (=> d!20957 m!85717))

(assert (=> d!20957 m!85717))

(assert (=> d!20957 m!85719))

(assert (=> d!20957 m!85591))

(declare-fun m!86277 () Bool)

(assert (=> d!20957 m!86277))

(declare-fun m!86279 () Bool)

(assert (=> d!20957 m!86279))

(assert (=> b!83406 m!85591))

(assert (=> b!83406 m!85713))

(assert (=> b!82934 d!20957))

(declare-fun d!20959 () Bool)

(declare-fun isEmpty!338 (Option!144) Bool)

(assert (=> d!20959 (= (isDefined!92 (getValueByKey!138 (toList!756 lt!38757) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))) (not (isEmpty!338 (getValueByKey!138 (toList!756 lt!38757) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))))

(declare-fun bs!3504 () Bool)

(assert (= bs!3504 d!20959))

(assert (=> bs!3504 m!85717))

(declare-fun m!86281 () Bool)

(assert (=> bs!3504 m!86281))

(assert (=> b!82934 d!20959))

(declare-fun b!83408 () Bool)

(declare-fun e!54443 () Option!144)

(declare-fun e!54444 () Option!144)

(assert (=> b!83408 (= e!54443 e!54444)))

(declare-fun c!13319 () Bool)

(assert (=> b!83408 (= c!13319 (and ((_ is Cons!1543) (toList!756 lt!38757)) (not (= (_1!1120 (h!2133 (toList!756 lt!38757))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))))

(declare-fun b!83407 () Bool)

(assert (=> b!83407 (= e!54443 (Some!143 (_2!1120 (h!2133 (toList!756 lt!38757)))))))

(declare-fun b!83410 () Bool)

(assert (=> b!83410 (= e!54444 None!142)))

(declare-fun c!13318 () Bool)

(declare-fun d!20961 () Bool)

(assert (=> d!20961 (= c!13318 (and ((_ is Cons!1543) (toList!756 lt!38757)) (= (_1!1120 (h!2133 (toList!756 lt!38757))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))))

(assert (=> d!20961 (= (getValueByKey!138 (toList!756 lt!38757) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) e!54443)))

(declare-fun b!83409 () Bool)

(assert (=> b!83409 (= e!54444 (getValueByKey!138 (t!5251 (toList!756 lt!38757)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (= (and d!20961 c!13318) b!83407))

(assert (= (and d!20961 (not c!13318)) b!83408))

(assert (= (and b!83408 c!13319) b!83409))

(assert (= (and b!83408 (not c!13319)) b!83410))

(assert (=> b!83409 m!85591))

(declare-fun m!86283 () Bool)

(assert (=> b!83409 m!86283))

(assert (=> b!82934 d!20961))

(declare-fun d!20963 () Bool)

(declare-fun res!43145 () Bool)

(declare-fun e!54447 () Bool)

(assert (=> d!20963 (=> res!43145 e!54447)))

(assert (=> d!20963 (= res!43145 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(assert (=> d!20963 (= (arrayNoDuplicates!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!13231 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545) Nil!1545)) e!54447)))

(declare-fun b!83411 () Bool)

(declare-fun e!54448 () Bool)

(assert (=> b!83411 (= e!54447 e!54448)))

(declare-fun res!43144 () Bool)

(assert (=> b!83411 (=> (not res!43144) (not e!54448))))

(declare-fun e!54446 () Bool)

(assert (=> b!83411 (= res!43144 (not e!54446))))

(declare-fun res!43146 () Bool)

(assert (=> b!83411 (=> (not res!43146) (not e!54446))))

(assert (=> b!83411 (= res!43146 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!83412 () Bool)

(declare-fun e!54445 () Bool)

(declare-fun call!7843 () Bool)

(assert (=> b!83412 (= e!54445 call!7843)))

(declare-fun bm!7840 () Bool)

(declare-fun c!13320 () Bool)

(assert (=> bm!7840 (= call!7843 (arrayNoDuplicates!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13320 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13231 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545) Nil!1545)) (ite c!13231 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545) Nil!1545))))))

(declare-fun b!83413 () Bool)

(assert (=> b!83413 (= e!54448 e!54445)))

(assert (=> b!83413 (= c!13320 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!83414 () Bool)

(assert (=> b!83414 (= e!54446 (contains!759 (ite c!13231 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545) Nil!1545) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!83415 () Bool)

(assert (=> b!83415 (= e!54445 call!7843)))

(assert (= (and d!20963 (not res!43145)) b!83411))

(assert (= (and b!83411 res!43146) b!83414))

(assert (= (and b!83411 res!43144) b!83413))

(assert (= (and b!83413 c!13320) b!83412))

(assert (= (and b!83413 (not c!13320)) b!83415))

(assert (= (or b!83412 b!83415) bm!7840))

(declare-fun m!86285 () Bool)

(assert (=> b!83411 m!86285))

(assert (=> b!83411 m!86285))

(declare-fun m!86287 () Bool)

(assert (=> b!83411 m!86287))

(assert (=> bm!7840 m!86285))

(declare-fun m!86289 () Bool)

(assert (=> bm!7840 m!86289))

(assert (=> b!83413 m!86285))

(assert (=> b!83413 m!86285))

(assert (=> b!83413 m!86287))

(assert (=> b!83414 m!86285))

(assert (=> b!83414 m!86285))

(declare-fun m!86291 () Bool)

(assert (=> b!83414 m!86291))

(assert (=> bm!7781 d!20963))

(declare-fun d!20965 () Bool)

(declare-fun isEmpty!339 (List!1547) Bool)

(assert (=> d!20965 (= (isEmpty!337 lt!39021) (isEmpty!339 (toList!756 lt!39021)))))

(declare-fun bs!3505 () Bool)

(assert (= bs!3505 d!20965))

(declare-fun m!86293 () Bool)

(assert (=> bs!3505 m!86293))

(assert (=> b!83190 d!20965))

(declare-fun b!83417 () Bool)

(declare-fun e!54449 () Option!144)

(declare-fun e!54450 () Option!144)

(assert (=> b!83417 (= e!54449 e!54450)))

(declare-fun c!13322 () Bool)

(assert (=> b!83417 (= c!13322 (and ((_ is Cons!1543) (toList!756 lt!39041)) (not (= (_1!1120 (h!2133 (toList!756 lt!39041))) (_1!1120 lt!38747)))))))

(declare-fun b!83416 () Bool)

(assert (=> b!83416 (= e!54449 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39041)))))))

(declare-fun b!83419 () Bool)

(assert (=> b!83419 (= e!54450 None!142)))

(declare-fun d!20967 () Bool)

(declare-fun c!13321 () Bool)

(assert (=> d!20967 (= c!13321 (and ((_ is Cons!1543) (toList!756 lt!39041)) (= (_1!1120 (h!2133 (toList!756 lt!39041))) (_1!1120 lt!38747))))))

(assert (=> d!20967 (= (getValueByKey!138 (toList!756 lt!39041) (_1!1120 lt!38747)) e!54449)))

(declare-fun b!83418 () Bool)

(assert (=> b!83418 (= e!54450 (getValueByKey!138 (t!5251 (toList!756 lt!39041)) (_1!1120 lt!38747)))))

(assert (= (and d!20967 c!13321) b!83416))

(assert (= (and d!20967 (not c!13321)) b!83417))

(assert (= (and b!83417 c!13322) b!83418))

(assert (= (and b!83417 (not c!13322)) b!83419))

(declare-fun m!86295 () Bool)

(assert (=> b!83418 m!86295))

(assert (=> b!83197 d!20967))

(declare-fun d!20969 () Bool)

(declare-fun get!1209 (Option!144) V!3019)

(assert (=> d!20969 (= (apply!81 lt!38974 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1209 (getValueByKey!138 (toList!756 lt!38974) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3506 () Bool)

(assert (= bs!3506 d!20969))

(declare-fun m!86297 () Bool)

(assert (=> bs!3506 m!86297))

(assert (=> bs!3506 m!86297))

(declare-fun m!86299 () Bool)

(assert (=> bs!3506 m!86299))

(assert (=> b!83143 d!20969))

(declare-fun d!20971 () Bool)

(declare-fun lt!39223 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!86 (List!1548) (InoxSet (_ BitVec 64)))

(assert (=> d!20971 (= lt!39223 (select (content!86 Nil!1545) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun e!54456 () Bool)

(assert (=> d!20971 (= lt!39223 e!54456)))

(declare-fun res!43151 () Bool)

(assert (=> d!20971 (=> (not res!43151) (not e!54456))))

(assert (=> d!20971 (= res!43151 ((_ is Cons!1544) Nil!1545))))

(assert (=> d!20971 (= (contains!759 Nil!1545 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) lt!39223)))

(declare-fun b!83424 () Bool)

(declare-fun e!54455 () Bool)

(assert (=> b!83424 (= e!54456 e!54455)))

(declare-fun res!43152 () Bool)

(assert (=> b!83424 (=> res!43152 e!54455)))

(assert (=> b!83424 (= res!43152 (= (h!2134 Nil!1545) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun b!83425 () Bool)

(assert (=> b!83425 (= e!54455 (contains!759 (t!5252 Nil!1545) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (= (and d!20971 res!43151) b!83424))

(assert (= (and b!83424 (not res!43152)) b!83425))

(declare-fun m!86301 () Bool)

(assert (=> d!20971 m!86301))

(assert (=> d!20971 m!85591))

(declare-fun m!86303 () Bool)

(assert (=> d!20971 m!86303))

(assert (=> b!83425 m!85591))

(declare-fun m!86305 () Bool)

(assert (=> b!83425 m!86305))

(assert (=> b!83082 d!20971))

(declare-fun b!83427 () Bool)

(declare-fun e!54457 () Option!144)

(declare-fun e!54458 () Option!144)

(assert (=> b!83427 (= e!54457 e!54458)))

(declare-fun c!13324 () Bool)

(assert (=> b!83427 (= c!13324 (and ((_ is Cons!1543) (toList!756 lt!38999)) (not (= (_1!1120 (h!2133 (toList!756 lt!38999))) (_1!1120 lt!38750)))))))

(declare-fun b!83426 () Bool)

(assert (=> b!83426 (= e!54457 (Some!143 (_2!1120 (h!2133 (toList!756 lt!38999)))))))

(declare-fun b!83429 () Bool)

(assert (=> b!83429 (= e!54458 None!142)))

(declare-fun d!20973 () Bool)

(declare-fun c!13323 () Bool)

(assert (=> d!20973 (= c!13323 (and ((_ is Cons!1543) (toList!756 lt!38999)) (= (_1!1120 (h!2133 (toList!756 lt!38999))) (_1!1120 lt!38750))))))

(assert (=> d!20973 (= (getValueByKey!138 (toList!756 lt!38999) (_1!1120 lt!38750)) e!54457)))

(declare-fun b!83428 () Bool)

(assert (=> b!83428 (= e!54458 (getValueByKey!138 (t!5251 (toList!756 lt!38999)) (_1!1120 lt!38750)))))

(assert (= (and d!20973 c!13323) b!83426))

(assert (= (and d!20973 (not c!13323)) b!83427))

(assert (= (and b!83427 c!13324) b!83428))

(assert (= (and b!83427 (not c!13324)) b!83429))

(declare-fun m!86307 () Bool)

(assert (=> b!83428 m!86307))

(assert (=> b!83151 d!20973))

(assert (=> b!83054 d!20917))

(declare-fun d!20975 () Bool)

(declare-fun e!54459 () Bool)

(assert (=> d!20975 e!54459))

(declare-fun res!43153 () Bool)

(assert (=> d!20975 (=> res!43153 e!54459)))

(declare-fun lt!39224 () Bool)

(assert (=> d!20975 (= res!43153 (not lt!39224))))

(declare-fun lt!39226 () Bool)

(assert (=> d!20975 (= lt!39224 lt!39226)))

(declare-fun lt!39227 () Unit!2445)

(declare-fun e!54460 () Unit!2445)

(assert (=> d!20975 (= lt!39227 e!54460)))

(declare-fun c!13325 () Bool)

(assert (=> d!20975 (= c!13325 lt!39226)))

(assert (=> d!20975 (= lt!39226 (containsKey!142 (toList!756 lt!39021) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20975 (= (contains!757 lt!39021 #b1000000000000000000000000000000000000000000000000000000000000000) lt!39224)))

(declare-fun b!83430 () Bool)

(declare-fun lt!39225 () Unit!2445)

(assert (=> b!83430 (= e!54460 lt!39225)))

(assert (=> b!83430 (= lt!39225 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39021) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83430 (isDefined!92 (getValueByKey!138 (toList!756 lt!39021) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83431 () Bool)

(declare-fun Unit!2466 () Unit!2445)

(assert (=> b!83431 (= e!54460 Unit!2466)))

(declare-fun b!83432 () Bool)

(assert (=> b!83432 (= e!54459 (isDefined!92 (getValueByKey!138 (toList!756 lt!39021) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20975 c!13325) b!83430))

(assert (= (and d!20975 (not c!13325)) b!83431))

(assert (= (and d!20975 (not res!43153)) b!83432))

(declare-fun m!86309 () Bool)

(assert (=> d!20975 m!86309))

(declare-fun m!86311 () Bool)

(assert (=> b!83430 m!86311))

(declare-fun m!86313 () Bool)

(assert (=> b!83430 m!86313))

(assert (=> b!83430 m!86313))

(declare-fun m!86315 () Bool)

(assert (=> b!83430 m!86315))

(assert (=> b!83432 m!86313))

(assert (=> b!83432 m!86313))

(assert (=> b!83432 m!86315))

(assert (=> b!83183 d!20975))

(declare-fun d!20977 () Bool)

(declare-fun e!54461 () Bool)

(assert (=> d!20977 e!54461))

(declare-fun res!43154 () Bool)

(assert (=> d!20977 (=> res!43154 e!54461)))

(declare-fun lt!39228 () Bool)

(assert (=> d!20977 (= res!43154 (not lt!39228))))

(declare-fun lt!39230 () Bool)

(assert (=> d!20977 (= lt!39228 lt!39230)))

(declare-fun lt!39231 () Unit!2445)

(declare-fun e!54462 () Unit!2445)

(assert (=> d!20977 (= lt!39231 e!54462)))

(declare-fun c!13326 () Bool)

(assert (=> d!20977 (= c!13326 lt!39230)))

(assert (=> d!20977 (= lt!39230 (containsKey!142 (toList!756 lt!39041) (_1!1120 lt!38747)))))

(assert (=> d!20977 (= (contains!757 lt!39041 (_1!1120 lt!38747)) lt!39228)))

(declare-fun b!83433 () Bool)

(declare-fun lt!39229 () Unit!2445)

(assert (=> b!83433 (= e!54462 lt!39229)))

(assert (=> b!83433 (= lt!39229 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39041) (_1!1120 lt!38747)))))

(assert (=> b!83433 (isDefined!92 (getValueByKey!138 (toList!756 lt!39041) (_1!1120 lt!38747)))))

(declare-fun b!83434 () Bool)

(declare-fun Unit!2467 () Unit!2445)

(assert (=> b!83434 (= e!54462 Unit!2467)))

(declare-fun b!83435 () Bool)

(assert (=> b!83435 (= e!54461 (isDefined!92 (getValueByKey!138 (toList!756 lt!39041) (_1!1120 lt!38747))))))

(assert (= (and d!20977 c!13326) b!83433))

(assert (= (and d!20977 (not c!13326)) b!83434))

(assert (= (and d!20977 (not res!43154)) b!83435))

(declare-fun m!86317 () Bool)

(assert (=> d!20977 m!86317))

(declare-fun m!86319 () Bool)

(assert (=> b!83433 m!86319))

(assert (=> b!83433 m!85953))

(assert (=> b!83433 m!85953))

(declare-fun m!86321 () Bool)

(assert (=> b!83433 m!86321))

(assert (=> b!83435 m!85953))

(assert (=> b!83435 m!85953))

(assert (=> b!83435 m!86321))

(assert (=> d!20897 d!20977))

(declare-fun b!83437 () Bool)

(declare-fun e!54463 () Option!144)

(declare-fun e!54464 () Option!144)

(assert (=> b!83437 (= e!54463 e!54464)))

(declare-fun c!13328 () Bool)

(assert (=> b!83437 (= c!13328 (and ((_ is Cons!1543) lt!39038) (not (= (_1!1120 (h!2133 lt!39038)) (_1!1120 lt!38747)))))))

(declare-fun b!83436 () Bool)

(assert (=> b!83436 (= e!54463 (Some!143 (_2!1120 (h!2133 lt!39038))))))

(declare-fun b!83439 () Bool)

(assert (=> b!83439 (= e!54464 None!142)))

(declare-fun d!20979 () Bool)

(declare-fun c!13327 () Bool)

(assert (=> d!20979 (= c!13327 (and ((_ is Cons!1543) lt!39038) (= (_1!1120 (h!2133 lt!39038)) (_1!1120 lt!38747))))))

(assert (=> d!20979 (= (getValueByKey!138 lt!39038 (_1!1120 lt!38747)) e!54463)))

(declare-fun b!83438 () Bool)

(assert (=> b!83438 (= e!54464 (getValueByKey!138 (t!5251 lt!39038) (_1!1120 lt!38747)))))

(assert (= (and d!20979 c!13327) b!83436))

(assert (= (and d!20979 (not c!13327)) b!83437))

(assert (= (and b!83437 c!13328) b!83438))

(assert (= (and b!83437 (not c!13328)) b!83439))

(declare-fun m!86323 () Bool)

(assert (=> b!83438 m!86323))

(assert (=> d!20897 d!20979))

(declare-fun d!20981 () Bool)

(assert (=> d!20981 (= (getValueByKey!138 lt!39038 (_1!1120 lt!38747)) (Some!143 (_2!1120 lt!38747)))))

(declare-fun lt!39232 () Unit!2445)

(assert (=> d!20981 (= lt!39232 (choose!495 lt!39038 (_1!1120 lt!38747) (_2!1120 lt!38747)))))

(declare-fun e!54465 () Bool)

(assert (=> d!20981 e!54465))

(declare-fun res!43155 () Bool)

(assert (=> d!20981 (=> (not res!43155) (not e!54465))))

(assert (=> d!20981 (= res!43155 (isStrictlySorted!292 lt!39038))))

(assert (=> d!20981 (= (lemmaContainsTupThenGetReturnValue!57 lt!39038 (_1!1120 lt!38747) (_2!1120 lt!38747)) lt!39232)))

(declare-fun b!83440 () Bool)

(declare-fun res!43156 () Bool)

(assert (=> b!83440 (=> (not res!43156) (not e!54465))))

(assert (=> b!83440 (= res!43156 (containsKey!142 lt!39038 (_1!1120 lt!38747)))))

(declare-fun b!83441 () Bool)

(assert (=> b!83441 (= e!54465 (contains!760 lt!39038 (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))))))

(assert (= (and d!20981 res!43155) b!83440))

(assert (= (and b!83440 res!43156) b!83441))

(assert (=> d!20981 m!85947))

(declare-fun m!86325 () Bool)

(assert (=> d!20981 m!86325))

(declare-fun m!86327 () Bool)

(assert (=> d!20981 m!86327))

(declare-fun m!86329 () Bool)

(assert (=> b!83440 m!86329))

(declare-fun m!86331 () Bool)

(assert (=> b!83441 m!86331))

(assert (=> d!20897 d!20981))

(declare-fun bm!7841 () Bool)

(declare-fun call!7845 () List!1547)

(declare-fun call!7844 () List!1547)

(assert (=> bm!7841 (= call!7845 call!7844)))

(declare-fun b!83442 () Bool)

(declare-fun e!54469 () List!1547)

(assert (=> b!83442 (= e!54469 call!7845)))

(declare-fun b!83443 () Bool)

(declare-fun e!54468 () List!1547)

(declare-fun call!7846 () List!1547)

(assert (=> b!83443 (= e!54468 call!7846)))

(declare-fun b!83444 () Bool)

(declare-fun e!54467 () List!1547)

(assert (=> b!83444 (= e!54467 (insertStrictlySorted!59 (t!5251 (toList!756 lt!38751)) (_1!1120 lt!38747) (_2!1120 lt!38747)))))

(declare-fun b!83445 () Bool)

(assert (=> b!83445 (= e!54468 call!7846)))

(declare-fun b!83446 () Bool)

(declare-fun res!43157 () Bool)

(declare-fun e!54470 () Bool)

(assert (=> b!83446 (=> (not res!43157) (not e!54470))))

(declare-fun lt!39233 () List!1547)

(assert (=> b!83446 (= res!43157 (containsKey!142 lt!39233 (_1!1120 lt!38747)))))

(declare-fun d!20983 () Bool)

(assert (=> d!20983 e!54470))

(declare-fun res!43158 () Bool)

(assert (=> d!20983 (=> (not res!43158) (not e!54470))))

(assert (=> d!20983 (= res!43158 (isStrictlySorted!292 lt!39233))))

(declare-fun e!54466 () List!1547)

(assert (=> d!20983 (= lt!39233 e!54466)))

(declare-fun c!13330 () Bool)

(assert (=> d!20983 (= c!13330 (and ((_ is Cons!1543) (toList!756 lt!38751)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38751))) (_1!1120 lt!38747))))))

(assert (=> d!20983 (isStrictlySorted!292 (toList!756 lt!38751))))

(assert (=> d!20983 (= (insertStrictlySorted!59 (toList!756 lt!38751) (_1!1120 lt!38747) (_2!1120 lt!38747)) lt!39233)))

(declare-fun b!83447 () Bool)

(assert (=> b!83447 (= e!54470 (contains!760 lt!39233 (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))))))

(declare-fun b!83448 () Bool)

(assert (=> b!83448 (= e!54466 e!54469)))

(declare-fun c!13329 () Bool)

(assert (=> b!83448 (= c!13329 (and ((_ is Cons!1543) (toList!756 lt!38751)) (= (_1!1120 (h!2133 (toList!756 lt!38751))) (_1!1120 lt!38747))))))

(declare-fun c!13332 () Bool)

(declare-fun b!83449 () Bool)

(assert (=> b!83449 (= e!54467 (ite c!13329 (t!5251 (toList!756 lt!38751)) (ite c!13332 (Cons!1543 (h!2133 (toList!756 lt!38751)) (t!5251 (toList!756 lt!38751))) Nil!1544)))))

(declare-fun b!83450 () Bool)

(assert (=> b!83450 (= c!13332 (and ((_ is Cons!1543) (toList!756 lt!38751)) (bvsgt (_1!1120 (h!2133 (toList!756 lt!38751))) (_1!1120 lt!38747))))))

(assert (=> b!83450 (= e!54469 e!54468)))

(declare-fun bm!7842 () Bool)

(assert (=> bm!7842 (= call!7844 ($colon$colon!70 e!54467 (ite c!13330 (h!2133 (toList!756 lt!38751)) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747)))))))

(declare-fun c!13331 () Bool)

(assert (=> bm!7842 (= c!13331 c!13330)))

(declare-fun b!83451 () Bool)

(assert (=> b!83451 (= e!54466 call!7844)))

(declare-fun bm!7843 () Bool)

(assert (=> bm!7843 (= call!7846 call!7845)))

(assert (= (and d!20983 c!13330) b!83451))

(assert (= (and d!20983 (not c!13330)) b!83448))

(assert (= (and b!83448 c!13329) b!83442))

(assert (= (and b!83448 (not c!13329)) b!83450))

(assert (= (and b!83450 c!13332) b!83445))

(assert (= (and b!83450 (not c!13332)) b!83443))

(assert (= (or b!83445 b!83443) bm!7843))

(assert (= (or b!83442 bm!7843) bm!7841))

(assert (= (or b!83451 bm!7841) bm!7842))

(assert (= (and bm!7842 c!13331) b!83444))

(assert (= (and bm!7842 (not c!13331)) b!83449))

(assert (= (and d!20983 res!43158) b!83446))

(assert (= (and b!83446 res!43157) b!83447))

(declare-fun m!86333 () Bool)

(assert (=> d!20983 m!86333))

(declare-fun m!86335 () Bool)

(assert (=> d!20983 m!86335))

(declare-fun m!86337 () Bool)

(assert (=> b!83444 m!86337))

(declare-fun m!86339 () Bool)

(assert (=> b!83447 m!86339))

(declare-fun m!86341 () Bool)

(assert (=> bm!7842 m!86341))

(declare-fun m!86343 () Bool)

(assert (=> b!83446 m!86343))

(assert (=> d!20897 d!20983))

(declare-fun d!20985 () Bool)

(declare-fun e!54471 () Bool)

(assert (=> d!20985 e!54471))

(declare-fun res!43159 () Bool)

(assert (=> d!20985 (=> res!43159 e!54471)))

(declare-fun lt!39234 () Bool)

(assert (=> d!20985 (= res!43159 (not lt!39234))))

(declare-fun lt!39236 () Bool)

(assert (=> d!20985 (= lt!39234 lt!39236)))

(declare-fun lt!39237 () Unit!2445)

(declare-fun e!54472 () Unit!2445)

(assert (=> d!20985 (= lt!39237 e!54472)))

(declare-fun c!13333 () Bool)

(assert (=> d!20985 (= c!13333 lt!39236)))

(assert (=> d!20985 (= lt!39236 (containsKey!142 (toList!756 lt!39021) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!20985 (= (contains!757 lt!39021 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!39234)))

(declare-fun b!83452 () Bool)

(declare-fun lt!39235 () Unit!2445)

(assert (=> b!83452 (= e!54472 lt!39235)))

(assert (=> b!83452 (= lt!39235 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39021) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!83452 (isDefined!92 (getValueByKey!138 (toList!756 lt!39021) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!83453 () Bool)

(declare-fun Unit!2468 () Unit!2445)

(assert (=> b!83453 (= e!54472 Unit!2468)))

(declare-fun b!83454 () Bool)

(assert (=> b!83454 (= e!54471 (isDefined!92 (getValueByKey!138 (toList!756 lt!39021) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!20985 c!13333) b!83452))

(assert (= (and d!20985 (not c!13333)) b!83453))

(assert (= (and d!20985 (not res!43159)) b!83454))

(assert (=> d!20985 m!85781))

(declare-fun m!86345 () Bool)

(assert (=> d!20985 m!86345))

(assert (=> b!83452 m!85781))

(declare-fun m!86347 () Bool)

(assert (=> b!83452 m!86347))

(assert (=> b!83452 m!85781))

(declare-fun m!86349 () Bool)

(assert (=> b!83452 m!86349))

(assert (=> b!83452 m!86349))

(declare-fun m!86351 () Bool)

(assert (=> b!83452 m!86351))

(assert (=> b!83454 m!85781))

(assert (=> b!83454 m!86349))

(assert (=> b!83454 m!86349))

(assert (=> b!83454 m!86351))

(assert (=> b!83185 d!20985))

(declare-fun b!83456 () Bool)

(declare-fun e!54473 () Option!144)

(declare-fun e!54474 () Option!144)

(assert (=> b!83456 (= e!54473 e!54474)))

(declare-fun c!13335 () Bool)

(assert (=> b!83456 (= c!13335 (and ((_ is Cons!1543) (toList!756 lt!39003)) (not (= (_1!1120 (h!2133 (toList!756 lt!39003))) (_1!1120 lt!38750)))))))

(declare-fun b!83455 () Bool)

(assert (=> b!83455 (= e!54473 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39003)))))))

(declare-fun b!83458 () Bool)

(assert (=> b!83458 (= e!54474 None!142)))

(declare-fun d!20987 () Bool)

(declare-fun c!13334 () Bool)

(assert (=> d!20987 (= c!13334 (and ((_ is Cons!1543) (toList!756 lt!39003)) (= (_1!1120 (h!2133 (toList!756 lt!39003))) (_1!1120 lt!38750))))))

(assert (=> d!20987 (= (getValueByKey!138 (toList!756 lt!39003) (_1!1120 lt!38750)) e!54473)))

(declare-fun b!83457 () Bool)

(assert (=> b!83457 (= e!54474 (getValueByKey!138 (t!5251 (toList!756 lt!39003)) (_1!1120 lt!38750)))))

(assert (= (and d!20987 c!13334) b!83455))

(assert (= (and d!20987 (not c!13334)) b!83456))

(assert (= (and b!83456 c!13335) b!83457))

(assert (= (and b!83456 (not c!13335)) b!83458))

(declare-fun m!86353 () Bool)

(assert (=> b!83457 m!86353))

(assert (=> b!83153 d!20987))

(declare-fun d!20989 () Bool)

(declare-fun res!43160 () Bool)

(declare-fun e!54475 () Bool)

(assert (=> d!20989 (=> res!43160 e!54475)))

(assert (=> d!20989 (= res!43160 (= (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> d!20989 (= (arrayContainsKey!0 (_keys!3985 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b00000000000000000000000000000000) e!54475)))

(declare-fun b!83459 () Bool)

(declare-fun e!54476 () Bool)

(assert (=> b!83459 (= e!54475 e!54476)))

(declare-fun res!43161 () Bool)

(assert (=> b!83459 (=> (not res!43161) (not e!54476))))

(assert (=> b!83459 (= res!43161 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!83460 () Bool)

(assert (=> b!83460 (= e!54476 (arrayContainsKey!0 (_keys!3985 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!20989 (not res!43160)) b!83459))

(assert (= (and b!83459 res!43161) b!83460))

(assert (=> d!20989 m!86049))

(assert (=> b!83460 m!85591))

(declare-fun m!86355 () Bool)

(assert (=> b!83460 m!86355))

(assert (=> bm!7764 d!20989))

(declare-fun d!20991 () Bool)

(declare-fun res!43166 () Bool)

(declare-fun e!54481 () Bool)

(assert (=> d!20991 (=> res!43166 e!54481)))

(assert (=> d!20991 (= res!43166 (and ((_ is Cons!1543) (toList!756 lt!38757)) (= (_1!1120 (h!2133 (toList!756 lt!38757))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))))

(assert (=> d!20991 (= (containsKey!142 (toList!756 lt!38757) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) e!54481)))

(declare-fun b!83465 () Bool)

(declare-fun e!54482 () Bool)

(assert (=> b!83465 (= e!54481 e!54482)))

(declare-fun res!43167 () Bool)

(assert (=> b!83465 (=> (not res!43167) (not e!54482))))

(assert (=> b!83465 (= res!43167 (and (or (not ((_ is Cons!1543) (toList!756 lt!38757))) (bvsle (_1!1120 (h!2133 (toList!756 lt!38757))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))) ((_ is Cons!1543) (toList!756 lt!38757)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38757))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))))

(declare-fun b!83466 () Bool)

(assert (=> b!83466 (= e!54482 (containsKey!142 (t!5251 (toList!756 lt!38757)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (= (and d!20991 (not res!43166)) b!83465))

(assert (= (and b!83465 res!43167) b!83466))

(assert (=> b!83466 m!85591))

(declare-fun m!86357 () Bool)

(assert (=> b!83466 m!86357))

(assert (=> d!20857 d!20991))

(declare-fun b!83475 () Bool)

(declare-fun e!54488 () (_ BitVec 32))

(assert (=> b!83475 (= e!54488 #b00000000000000000000000000000000)))

(declare-fun bm!7846 () Bool)

(declare-fun call!7849 () (_ BitVec 32))

(assert (=> bm!7846 (= call!7849 (arrayCountValidKeys!0 (_keys!3985 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2155 (_keys!3985 newMap!16))))))

(declare-fun d!20993 () Bool)

(declare-fun lt!39240 () (_ BitVec 32))

(assert (=> d!20993 (and (bvsge lt!39240 #b00000000000000000000000000000000) (bvsle lt!39240 (bvsub (size!2155 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!20993 (= lt!39240 e!54488)))

(declare-fun c!13340 () Bool)

(assert (=> d!20993 (= c!13340 (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!20993 (and (bvsle #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2155 (_keys!3985 newMap!16)) (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!20993 (= (arrayCountValidKeys!0 (_keys!3985 newMap!16) #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))) lt!39240)))

(declare-fun b!83476 () Bool)

(declare-fun e!54487 () (_ BitVec 32))

(assert (=> b!83476 (= e!54487 (bvadd #b00000000000000000000000000000001 call!7849))))

(declare-fun b!83477 () Bool)

(assert (=> b!83477 (= e!54488 e!54487)))

(declare-fun c!13341 () Bool)

(assert (=> b!83477 (= c!13341 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83478 () Bool)

(assert (=> b!83478 (= e!54487 call!7849)))

(assert (= (and d!20993 c!13340) b!83475))

(assert (= (and d!20993 (not c!13340)) b!83477))

(assert (= (and b!83477 c!13341) b!83476))

(assert (= (and b!83477 (not c!13341)) b!83478))

(assert (= (or b!83476 b!83478) bm!7846))

(declare-fun m!86359 () Bool)

(assert (=> bm!7846 m!86359))

(assert (=> b!83477 m!86049))

(assert (=> b!83477 m!86049))

(assert (=> b!83477 m!86051))

(assert (=> b!82919 d!20993))

(declare-fun d!20995 () Bool)

(assert (=> d!20995 (= (apply!81 (+!114 lt!38971 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!38964) (get!1209 (getValueByKey!138 (toList!756 (+!114 lt!38971 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38964)))))

(declare-fun bs!3507 () Bool)

(assert (= bs!3507 d!20995))

(declare-fun m!86361 () Bool)

(assert (=> bs!3507 m!86361))

(assert (=> bs!3507 m!86361))

(declare-fun m!86363 () Bool)

(assert (=> bs!3507 m!86363))

(assert (=> b!83138 d!20995))

(declare-fun d!20997 () Bool)

(declare-fun e!54489 () Bool)

(assert (=> d!20997 e!54489))

(declare-fun res!43168 () Bool)

(assert (=> d!20997 (=> (not res!43168) (not e!54489))))

(declare-fun lt!39244 () ListLongMap!1481)

(assert (=> d!20997 (= res!43168 (contains!757 lt!39244 (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun lt!39241 () List!1547)

(assert (=> d!20997 (= lt!39244 (ListLongMap!1482 lt!39241))))

(declare-fun lt!39242 () Unit!2445)

(declare-fun lt!39243 () Unit!2445)

(assert (=> d!20997 (= lt!39242 lt!39243)))

(assert (=> d!20997 (= (getValueByKey!138 lt!39241 (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!20997 (= lt!39243 (lemmaContainsTupThenGetReturnValue!57 lt!39241 (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!20997 (= lt!39241 (insertStrictlySorted!59 (toList!756 lt!38978) (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!20997 (= (+!114 lt!38978 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!39244)))

(declare-fun b!83479 () Bool)

(declare-fun res!43169 () Bool)

(assert (=> b!83479 (=> (not res!43169) (not e!54489))))

(assert (=> b!83479 (= res!43169 (= (getValueByKey!138 (toList!756 lt!39244) (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!83480 () Bool)

(assert (=> b!83480 (= e!54489 (contains!760 (toList!756 lt!39244) (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(assert (= (and d!20997 res!43168) b!83479))

(assert (= (and b!83479 res!43169) b!83480))

(declare-fun m!86365 () Bool)

(assert (=> d!20997 m!86365))

(declare-fun m!86367 () Bool)

(assert (=> d!20997 m!86367))

(declare-fun m!86369 () Bool)

(assert (=> d!20997 m!86369))

(declare-fun m!86371 () Bool)

(assert (=> d!20997 m!86371))

(declare-fun m!86373 () Bool)

(assert (=> b!83479 m!86373))

(declare-fun m!86375 () Bool)

(assert (=> b!83480 m!86375))

(assert (=> b!83138 d!20997))

(declare-fun d!20999 () Bool)

(assert (=> d!20999 (= (apply!81 (+!114 lt!38978 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!38984) (apply!81 lt!38978 lt!38984))))

(declare-fun lt!39247 () Unit!2445)

(declare-fun choose!497 (ListLongMap!1481 (_ BitVec 64) V!3019 (_ BitVec 64)) Unit!2445)

(assert (=> d!20999 (= lt!39247 (choose!497 lt!38978 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))) lt!38984))))

(declare-fun e!54492 () Bool)

(assert (=> d!20999 e!54492))

(declare-fun res!43172 () Bool)

(assert (=> d!20999 (=> (not res!43172) (not e!54492))))

(assert (=> d!20999 (= res!43172 (contains!757 lt!38978 lt!38984))))

(assert (=> d!20999 (= (addApplyDifferent!57 lt!38978 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))) lt!38984) lt!39247)))

(declare-fun b!83484 () Bool)

(assert (=> b!83484 (= e!54492 (not (= lt!38984 lt!38970)))))

(assert (= (and d!20999 res!43172) b!83484))

(declare-fun m!86377 () Bool)

(assert (=> d!20999 m!86377))

(assert (=> d!20999 m!85813))

(assert (=> d!20999 m!85815))

(assert (=> d!20999 m!85813))

(declare-fun m!86379 () Bool)

(assert (=> d!20999 m!86379))

(assert (=> d!20999 m!85831))

(assert (=> b!83138 d!20999))

(declare-fun d!21001 () Bool)

(assert (=> d!21001 (= (apply!81 lt!38971 lt!38964) (get!1209 (getValueByKey!138 (toList!756 lt!38971) lt!38964)))))

(declare-fun bs!3508 () Bool)

(assert (= bs!3508 d!21001))

(declare-fun m!86381 () Bool)

(assert (=> bs!3508 m!86381))

(assert (=> bs!3508 m!86381))

(declare-fun m!86383 () Bool)

(assert (=> bs!3508 m!86383))

(assert (=> b!83138 d!21001))

(assert (=> b!83138 d!20885))

(declare-fun d!21003 () Bool)

(assert (=> d!21003 (= (apply!81 lt!38967 lt!38966) (get!1209 (getValueByKey!138 (toList!756 lt!38967) lt!38966)))))

(declare-fun bs!3509 () Bool)

(assert (= bs!3509 d!21003))

(declare-fun m!86385 () Bool)

(assert (=> bs!3509 m!86385))

(assert (=> bs!3509 m!86385))

(declare-fun m!86387 () Bool)

(assert (=> bs!3509 m!86387))

(assert (=> b!83138 d!21003))

(declare-fun d!21005 () Bool)

(assert (=> d!21005 (= (apply!81 lt!38978 lt!38984) (get!1209 (getValueByKey!138 (toList!756 lt!38978) lt!38984)))))

(declare-fun bs!3510 () Bool)

(assert (= bs!3510 d!21005))

(declare-fun m!86389 () Bool)

(assert (=> bs!3510 m!86389))

(assert (=> bs!3510 m!86389))

(declare-fun m!86391 () Bool)

(assert (=> bs!3510 m!86391))

(assert (=> b!83138 d!21005))

(declare-fun d!21007 () Bool)

(declare-fun e!54493 () Bool)

(assert (=> d!21007 e!54493))

(declare-fun res!43173 () Bool)

(assert (=> d!21007 (=> (not res!43173) (not e!54493))))

(declare-fun lt!39251 () ListLongMap!1481)

(assert (=> d!21007 (= res!43173 (contains!757 lt!39251 (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun lt!39248 () List!1547)

(assert (=> d!21007 (= lt!39251 (ListLongMap!1482 lt!39248))))

(declare-fun lt!39249 () Unit!2445)

(declare-fun lt!39250 () Unit!2445)

(assert (=> d!21007 (= lt!39249 lt!39250)))

(assert (=> d!21007 (= (getValueByKey!138 lt!39248 (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21007 (= lt!39250 (lemmaContainsTupThenGetReturnValue!57 lt!39248 (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21007 (= lt!39248 (insertStrictlySorted!59 (toList!756 lt!38967) (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21007 (= (+!114 lt!38967 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!39251)))

(declare-fun b!83485 () Bool)

(declare-fun res!43174 () Bool)

(assert (=> b!83485 (=> (not res!43174) (not e!54493))))

(assert (=> b!83485 (= res!43174 (= (getValueByKey!138 (toList!756 lt!39251) (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!83486 () Bool)

(assert (=> b!83486 (= e!54493 (contains!760 (toList!756 lt!39251) (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(assert (= (and d!21007 res!43173) b!83485))

(assert (= (and b!83485 res!43174) b!83486))

(declare-fun m!86393 () Bool)

(assert (=> d!21007 m!86393))

(declare-fun m!86395 () Bool)

(assert (=> d!21007 m!86395))

(declare-fun m!86397 () Bool)

(assert (=> d!21007 m!86397))

(declare-fun m!86399 () Bool)

(assert (=> d!21007 m!86399))

(declare-fun m!86401 () Bool)

(assert (=> b!83485 m!86401))

(declare-fun m!86403 () Bool)

(assert (=> b!83486 m!86403))

(assert (=> b!83138 d!21007))

(declare-fun d!21009 () Bool)

(assert (=> d!21009 (= (apply!81 (+!114 lt!38967 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!38966) (get!1209 (getValueByKey!138 (toList!756 (+!114 lt!38967 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38966)))))

(declare-fun bs!3511 () Bool)

(assert (= bs!3511 d!21009))

(declare-fun m!86405 () Bool)

(assert (=> bs!3511 m!86405))

(assert (=> bs!3511 m!86405))

(declare-fun m!86407 () Bool)

(assert (=> bs!3511 m!86407))

(assert (=> b!83138 d!21009))

(declare-fun d!21011 () Bool)

(declare-fun e!54494 () Bool)

(assert (=> d!21011 e!54494))

(declare-fun res!43175 () Bool)

(assert (=> d!21011 (=> res!43175 e!54494)))

(declare-fun lt!39252 () Bool)

(assert (=> d!21011 (= res!43175 (not lt!39252))))

(declare-fun lt!39254 () Bool)

(assert (=> d!21011 (= lt!39252 lt!39254)))

(declare-fun lt!39255 () Unit!2445)

(declare-fun e!54495 () Unit!2445)

(assert (=> d!21011 (= lt!39255 e!54495)))

(declare-fun c!13342 () Bool)

(assert (=> d!21011 (= c!13342 lt!39254)))

(assert (=> d!21011 (= lt!39254 (containsKey!142 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38972))))

(assert (=> d!21011 (= (contains!757 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!38972) lt!39252)))

(declare-fun b!83487 () Bool)

(declare-fun lt!39253 () Unit!2445)

(assert (=> b!83487 (= e!54495 lt!39253)))

(assert (=> b!83487 (= lt!39253 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38972))))

(assert (=> b!83487 (isDefined!92 (getValueByKey!138 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38972))))

(declare-fun b!83488 () Bool)

(declare-fun Unit!2469 () Unit!2445)

(assert (=> b!83488 (= e!54495 Unit!2469)))

(declare-fun b!83489 () Bool)

(assert (=> b!83489 (= e!54494 (isDefined!92 (getValueByKey!138 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38972)))))

(assert (= (and d!21011 c!13342) b!83487))

(assert (= (and d!21011 (not c!13342)) b!83488))

(assert (= (and d!21011 (not res!43175)) b!83489))

(declare-fun m!86409 () Bool)

(assert (=> d!21011 m!86409))

(declare-fun m!86411 () Bool)

(assert (=> b!83487 m!86411))

(declare-fun m!86413 () Bool)

(assert (=> b!83487 m!86413))

(assert (=> b!83487 m!86413))

(declare-fun m!86415 () Bool)

(assert (=> b!83487 m!86415))

(assert (=> b!83489 m!86413))

(assert (=> b!83489 m!86413))

(assert (=> b!83489 m!86415))

(assert (=> b!83138 d!21011))

(declare-fun d!21013 () Bool)

(assert (=> d!21013 (contains!757 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!38972)))

(declare-fun lt!39258 () Unit!2445)

(declare-fun choose!498 (ListLongMap!1481 (_ BitVec 64) V!3019 (_ BitVec 64)) Unit!2445)

(assert (=> d!21013 (= lt!39258 (choose!498 lt!38975 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) lt!38972))))

(assert (=> d!21013 (contains!757 lt!38975 lt!38972)))

(assert (=> d!21013 (= (addStillContains!57 lt!38975 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) lt!38972) lt!39258)))

(declare-fun bs!3512 () Bool)

(assert (= bs!3512 d!21013))

(assert (=> bs!3512 m!85807))

(assert (=> bs!3512 m!85807))

(assert (=> bs!3512 m!85819))

(declare-fun m!86417 () Bool)

(assert (=> bs!3512 m!86417))

(declare-fun m!86419 () Bool)

(assert (=> bs!3512 m!86419))

(assert (=> b!83138 d!21013))

(declare-fun d!21015 () Bool)

(declare-fun e!54496 () Bool)

(assert (=> d!21015 e!54496))

(declare-fun res!43176 () Bool)

(assert (=> d!21015 (=> (not res!43176) (not e!54496))))

(declare-fun lt!39262 () ListLongMap!1481)

(assert (=> d!21015 (= res!43176 (contains!757 lt!39262 (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun lt!39259 () List!1547)

(assert (=> d!21015 (= lt!39262 (ListLongMap!1482 lt!39259))))

(declare-fun lt!39260 () Unit!2445)

(declare-fun lt!39261 () Unit!2445)

(assert (=> d!21015 (= lt!39260 lt!39261)))

(assert (=> d!21015 (= (getValueByKey!138 lt!39259 (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21015 (= lt!39261 (lemmaContainsTupThenGetReturnValue!57 lt!39259 (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21015 (= lt!39259 (insertStrictlySorted!59 (toList!756 lt!38975) (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21015 (= (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!39262)))

(declare-fun b!83491 () Bool)

(declare-fun res!43177 () Bool)

(assert (=> b!83491 (=> (not res!43177) (not e!54496))))

(assert (=> b!83491 (= res!43177 (= (getValueByKey!138 (toList!756 lt!39262) (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!83492 () Bool)

(assert (=> b!83492 (= e!54496 (contains!760 (toList!756 lt!39262) (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(assert (= (and d!21015 res!43176) b!83491))

(assert (= (and b!83491 res!43177) b!83492))

(declare-fun m!86421 () Bool)

(assert (=> d!21015 m!86421))

(declare-fun m!86423 () Bool)

(assert (=> d!21015 m!86423))

(declare-fun m!86425 () Bool)

(assert (=> d!21015 m!86425))

(declare-fun m!86427 () Bool)

(assert (=> d!21015 m!86427))

(declare-fun m!86429 () Bool)

(assert (=> b!83491 m!86429))

(declare-fun m!86431 () Bool)

(assert (=> b!83492 m!86431))

(assert (=> b!83138 d!21015))

(declare-fun d!21017 () Bool)

(assert (=> d!21017 (= (apply!81 (+!114 lt!38978 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!38984) (get!1209 (getValueByKey!138 (toList!756 (+!114 lt!38978 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38984)))))

(declare-fun bs!3513 () Bool)

(assert (= bs!3513 d!21017))

(declare-fun m!86433 () Bool)

(assert (=> bs!3513 m!86433))

(assert (=> bs!3513 m!86433))

(declare-fun m!86435 () Bool)

(assert (=> bs!3513 m!86435))

(assert (=> b!83138 d!21017))

(declare-fun d!21019 () Bool)

(assert (=> d!21019 (= (apply!81 (+!114 lt!38971 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!38964) (apply!81 lt!38971 lt!38964))))

(declare-fun lt!39263 () Unit!2445)

(assert (=> d!21019 (= lt!39263 (choose!497 lt!38971 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) lt!38964))))

(declare-fun e!54497 () Bool)

(assert (=> d!21019 e!54497))

(declare-fun res!43178 () Bool)

(assert (=> d!21019 (=> (not res!43178) (not e!54497))))

(assert (=> d!21019 (= res!43178 (contains!757 lt!38971 lt!38964))))

(assert (=> d!21019 (= (addApplyDifferent!57 lt!38971 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) lt!38964) lt!39263)))

(declare-fun b!83493 () Bool)

(assert (=> b!83493 (= e!54497 (not (= lt!38964 lt!38980)))))

(assert (= (and d!21019 res!43178) b!83493))

(declare-fun m!86437 () Bool)

(assert (=> d!21019 m!86437))

(assert (=> d!21019 m!85809))

(assert (=> d!21019 m!85811))

(assert (=> d!21019 m!85809))

(declare-fun m!86439 () Bool)

(assert (=> d!21019 m!86439))

(assert (=> d!21019 m!85825))

(assert (=> b!83138 d!21019))

(declare-fun d!21021 () Bool)

(declare-fun e!54498 () Bool)

(assert (=> d!21021 e!54498))

(declare-fun res!43179 () Bool)

(assert (=> d!21021 (=> (not res!43179) (not e!54498))))

(declare-fun lt!39267 () ListLongMap!1481)

(assert (=> d!21021 (= res!43179 (contains!757 lt!39267 (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun lt!39264 () List!1547)

(assert (=> d!21021 (= lt!39267 (ListLongMap!1482 lt!39264))))

(declare-fun lt!39265 () Unit!2445)

(declare-fun lt!39266 () Unit!2445)

(assert (=> d!21021 (= lt!39265 lt!39266)))

(assert (=> d!21021 (= (getValueByKey!138 lt!39264 (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21021 (= lt!39266 (lemmaContainsTupThenGetReturnValue!57 lt!39264 (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21021 (= lt!39264 (insertStrictlySorted!59 (toList!756 lt!38971) (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21021 (= (+!114 lt!38971 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!39267)))

(declare-fun b!83494 () Bool)

(declare-fun res!43180 () Bool)

(assert (=> b!83494 (=> (not res!43180) (not e!54498))))

(assert (=> b!83494 (= res!43180 (= (getValueByKey!138 (toList!756 lt!39267) (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!83495 () Bool)

(assert (=> b!83495 (= e!54498 (contains!760 (toList!756 lt!39267) (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(assert (= (and d!21021 res!43179) b!83494))

(assert (= (and b!83494 res!43180) b!83495))

(declare-fun m!86441 () Bool)

(assert (=> d!21021 m!86441))

(declare-fun m!86443 () Bool)

(assert (=> d!21021 m!86443))

(declare-fun m!86445 () Bool)

(assert (=> d!21021 m!86445))

(declare-fun m!86447 () Bool)

(assert (=> d!21021 m!86447))

(declare-fun m!86449 () Bool)

(assert (=> b!83494 m!86449))

(declare-fun m!86451 () Bool)

(assert (=> b!83495 m!86451))

(assert (=> b!83138 d!21021))

(declare-fun d!21023 () Bool)

(assert (=> d!21023 (= (apply!81 (+!114 lt!38967 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!38966) (apply!81 lt!38967 lt!38966))))

(declare-fun lt!39268 () Unit!2445)

(assert (=> d!21023 (= lt!39268 (choose!497 lt!38967 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))) lt!38966))))

(declare-fun e!54499 () Bool)

(assert (=> d!21023 e!54499))

(declare-fun res!43181 () Bool)

(assert (=> d!21023 (=> (not res!43181) (not e!54499))))

(assert (=> d!21023 (= res!43181 (contains!757 lt!38967 lt!38966))))

(assert (=> d!21023 (= (addApplyDifferent!57 lt!38967 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))) lt!38966) lt!39268)))

(declare-fun b!83496 () Bool)

(assert (=> b!83496 (= e!54499 (not (= lt!38966 lt!38981)))))

(assert (= (and d!21023 res!43181) b!83496))

(declare-fun m!86453 () Bool)

(assert (=> d!21023 m!86453))

(assert (=> d!21023 m!85823))

(assert (=> d!21023 m!85833))

(assert (=> d!21023 m!85823))

(declare-fun m!86455 () Bool)

(assert (=> d!21023 m!86455))

(assert (=> d!21023 m!85827))

(assert (=> b!83138 d!21023))

(declare-fun b!83497 () Bool)

(declare-fun e!54505 () ListLongMap!1481)

(declare-fun call!7850 () ListLongMap!1481)

(assert (=> b!83497 (= e!54505 call!7850)))

(declare-fun bm!7847 () Bool)

(declare-fun call!7856 () ListLongMap!1481)

(declare-fun call!7851 () ListLongMap!1481)

(assert (=> bm!7847 (= call!7856 call!7851)))

(declare-fun b!83498 () Bool)

(declare-fun e!54509 () Bool)

(declare-fun lt!39280 () ListLongMap!1481)

(assert (=> b!83498 (= e!54509 (= (apply!81 lt!39280 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2211 newMap!16)))))

(declare-fun b!83499 () Bool)

(declare-fun e!54500 () ListLongMap!1481)

(declare-fun call!7852 () ListLongMap!1481)

(assert (=> b!83499 (= e!54500 call!7852)))

(declare-fun b!83501 () Bool)

(declare-fun e!54501 () ListLongMap!1481)

(declare-fun call!7853 () ListLongMap!1481)

(assert (=> b!83501 (= e!54501 (+!114 call!7853 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))

(declare-fun b!83502 () Bool)

(declare-fun res!43190 () Bool)

(declare-fun e!54508 () Bool)

(assert (=> b!83502 (=> (not res!43190) (not e!54508))))

(declare-fun e!54504 () Bool)

(assert (=> b!83502 (= res!43190 e!54504)))

(declare-fun c!13347 () Bool)

(assert (=> b!83502 (= c!13347 (not (= (bvand (ite (and c!13216 c!13218) lt!38883 (extraKeys!2160 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7848 () Bool)

(assert (=> bm!7848 (= call!7851 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16)))) (mask!6335 newMap!16) (ite (and c!13216 c!13218) lt!38883 (extraKeys!2160 newMap!16)) (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun c!13346 () Bool)

(declare-fun c!13348 () Bool)

(declare-fun bm!7849 () Bool)

(assert (=> bm!7849 (= call!7853 (+!114 (ite c!13346 call!7851 (ite c!13348 call!7856 call!7850)) (ite (or c!13346 c!13348) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))

(declare-fun b!83503 () Bool)

(declare-fun e!54507 () Unit!2445)

(declare-fun Unit!2470 () Unit!2445)

(assert (=> b!83503 (= e!54507 Unit!2470)))

(declare-fun bm!7850 () Bool)

(declare-fun call!7854 () Bool)

(assert (=> bm!7850 (= call!7854 (contains!757 lt!39280 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83504 () Bool)

(declare-fun res!43187 () Bool)

(assert (=> b!83504 (=> (not res!43187) (not e!54508))))

(declare-fun e!54511 () Bool)

(assert (=> b!83504 (= res!43187 e!54511)))

(declare-fun res!43188 () Bool)

(assert (=> b!83504 (=> res!43188 e!54511)))

(declare-fun e!54506 () Bool)

(assert (=> b!83504 (= res!43188 (not e!54506))))

(declare-fun res!43185 () Bool)

(assert (=> b!83504 (=> (not res!43185) (not e!54506))))

(assert (=> b!83504 (= res!43185 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!83505 () Bool)

(declare-fun e!54502 () Bool)

(assert (=> b!83505 (= e!54511 e!54502)))

(declare-fun res!43184 () Bool)

(assert (=> b!83505 (=> (not res!43184) (not e!54502))))

(assert (=> b!83505 (= res!43184 (contains!757 lt!39280 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83505 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!83506 () Bool)

(declare-fun e!54503 () Bool)

(assert (=> b!83506 (= e!54503 (not call!7854))))

(declare-fun b!83507 () Bool)

(declare-fun e!54510 () Bool)

(assert (=> b!83507 (= e!54504 e!54510)))

(declare-fun res!43183 () Bool)

(declare-fun call!7855 () Bool)

(assert (=> b!83507 (= res!43183 call!7855)))

(assert (=> b!83507 (=> (not res!43183) (not e!54510))))

(declare-fun b!83508 () Bool)

(declare-fun c!13345 () Bool)

(assert (=> b!83508 (= c!13345 (and (not (= (bvand (ite (and c!13216 c!13218) lt!38883 (extraKeys!2160 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!13216 c!13218) lt!38883 (extraKeys!2160 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!83508 (= e!54500 e!54505)))

(declare-fun b!83509 () Bool)

(declare-fun lt!39275 () Unit!2445)

(assert (=> b!83509 (= e!54507 lt!39275)))

(declare-fun lt!39281 () ListLongMap!1481)

(assert (=> b!83509 (= lt!39281 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16)))) (mask!6335 newMap!16) (ite (and c!13216 c!13218) lt!38883 (extraKeys!2160 newMap!16)) (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39274 () (_ BitVec 64))

(assert (=> b!83509 (= lt!39274 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39278 () (_ BitVec 64))

(assert (=> b!83509 (= lt!39278 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39283 () Unit!2445)

(assert (=> b!83509 (= lt!39283 (addStillContains!57 lt!39281 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)) lt!39278))))

(assert (=> b!83509 (contains!757 (+!114 lt!39281 (tuple2!2221 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)))) lt!39278)))

(declare-fun lt!39279 () Unit!2445)

(assert (=> b!83509 (= lt!39279 lt!39283)))

(declare-fun lt!39284 () ListLongMap!1481)

(assert (=> b!83509 (= lt!39284 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16)))) (mask!6335 newMap!16) (ite (and c!13216 c!13218) lt!38883 (extraKeys!2160 newMap!16)) (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39276 () (_ BitVec 64))

(assert (=> b!83509 (= lt!39276 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39290 () (_ BitVec 64))

(assert (=> b!83509 (= lt!39290 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39288 () Unit!2445)

(assert (=> b!83509 (= lt!39288 (addApplyDifferent!57 lt!39284 lt!39276 (minValue!2211 newMap!16) lt!39290))))

(assert (=> b!83509 (= (apply!81 (+!114 lt!39284 (tuple2!2221 lt!39276 (minValue!2211 newMap!16))) lt!39290) (apply!81 lt!39284 lt!39290))))

(declare-fun lt!39282 () Unit!2445)

(assert (=> b!83509 (= lt!39282 lt!39288)))

(declare-fun lt!39277 () ListLongMap!1481)

(assert (=> b!83509 (= lt!39277 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16)))) (mask!6335 newMap!16) (ite (and c!13216 c!13218) lt!38883 (extraKeys!2160 newMap!16)) (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39286 () (_ BitVec 64))

(assert (=> b!83509 (= lt!39286 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39270 () (_ BitVec 64))

(assert (=> b!83509 (= lt!39270 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39285 () Unit!2445)

(assert (=> b!83509 (= lt!39285 (addApplyDifferent!57 lt!39277 lt!39286 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)) lt!39270))))

(assert (=> b!83509 (= (apply!81 (+!114 lt!39277 (tuple2!2221 lt!39286 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)))) lt!39270) (apply!81 lt!39277 lt!39270))))

(declare-fun lt!39271 () Unit!2445)

(assert (=> b!83509 (= lt!39271 lt!39285)))

(declare-fun lt!39273 () ListLongMap!1481)

(assert (=> b!83509 (= lt!39273 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16)))) (mask!6335 newMap!16) (ite (and c!13216 c!13218) lt!38883 (extraKeys!2160 newMap!16)) (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39287 () (_ BitVec 64))

(assert (=> b!83509 (= lt!39287 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39272 () (_ BitVec 64))

(assert (=> b!83509 (= lt!39272 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!83509 (= lt!39275 (addApplyDifferent!57 lt!39273 lt!39287 (minValue!2211 newMap!16) lt!39272))))

(assert (=> b!83509 (= (apply!81 (+!114 lt!39273 (tuple2!2221 lt!39287 (minValue!2211 newMap!16))) lt!39272) (apply!81 lt!39273 lt!39272))))

(declare-fun b!83510 () Bool)

(assert (=> b!83510 (= e!54502 (= (apply!81 lt!39280 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) (get!1206 (select (arr!1913 (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83510 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2156 (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16)))))))))

(assert (=> b!83510 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!83500 () Bool)

(assert (=> b!83500 (= e!54505 call!7852)))

(declare-fun d!21025 () Bool)

(assert (=> d!21025 e!54508))

(declare-fun res!43186 () Bool)

(assert (=> d!21025 (=> (not res!43186) (not e!54508))))

(assert (=> d!21025 (= res!43186 (or (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))))

(declare-fun lt!39289 () ListLongMap!1481)

(assert (=> d!21025 (= lt!39280 lt!39289)))

(declare-fun lt!39269 () Unit!2445)

(assert (=> d!21025 (= lt!39269 e!54507)))

(declare-fun c!13344 () Bool)

(declare-fun e!54512 () Bool)

(assert (=> d!21025 (= c!13344 e!54512)))

(declare-fun res!43182 () Bool)

(assert (=> d!21025 (=> (not res!43182) (not e!54512))))

(assert (=> d!21025 (= res!43182 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!21025 (= lt!39289 e!54501)))

(assert (=> d!21025 (= c!13346 (and (not (= (bvand (ite (and c!13216 c!13218) lt!38883 (extraKeys!2160 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!13216 c!13218) lt!38883 (extraKeys!2160 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21025 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!21025 (= (getCurrentListMap!440 (_keys!3985 newMap!16) (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16)))) (mask!6335 newMap!16) (ite (and c!13216 c!13218) lt!38883 (extraKeys!2160 newMap!16)) (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) lt!39280)))

(declare-fun bm!7851 () Bool)

(assert (=> bm!7851 (= call!7855 (contains!757 lt!39280 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83511 () Bool)

(assert (=> b!83511 (= e!54504 (not call!7855))))

(declare-fun bm!7852 () Bool)

(assert (=> bm!7852 (= call!7850 call!7856)))

(declare-fun b!83512 () Bool)

(assert (=> b!83512 (= e!54512 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83513 () Bool)

(assert (=> b!83513 (= e!54508 e!54503)))

(declare-fun c!13343 () Bool)

(assert (=> b!83513 (= c!13343 (not (= (bvand (ite (and c!13216 c!13218) lt!38883 (extraKeys!2160 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7853 () Bool)

(assert (=> bm!7853 (= call!7852 call!7853)))

(declare-fun b!83514 () Bool)

(assert (=> b!83514 (= e!54510 (= (apply!81 lt!39280 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))))))

(declare-fun b!83515 () Bool)

(assert (=> b!83515 (= e!54506 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83516 () Bool)

(assert (=> b!83516 (= e!54501 e!54500)))

(assert (=> b!83516 (= c!13348 (and (not (= (bvand (ite (and c!13216 c!13218) lt!38883 (extraKeys!2160 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!13216 c!13218) lt!38883 (extraKeys!2160 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!83517 () Bool)

(assert (=> b!83517 (= e!54503 e!54509)))

(declare-fun res!43189 () Bool)

(assert (=> b!83517 (= res!43189 call!7854)))

(assert (=> b!83517 (=> (not res!43189) (not e!54509))))

(assert (= (and d!21025 c!13346) b!83501))

(assert (= (and d!21025 (not c!13346)) b!83516))

(assert (= (and b!83516 c!13348) b!83499))

(assert (= (and b!83516 (not c!13348)) b!83508))

(assert (= (and b!83508 c!13345) b!83500))

(assert (= (and b!83508 (not c!13345)) b!83497))

(assert (= (or b!83500 b!83497) bm!7852))

(assert (= (or b!83499 bm!7852) bm!7847))

(assert (= (or b!83499 b!83500) bm!7853))

(assert (= (or b!83501 bm!7847) bm!7848))

(assert (= (or b!83501 bm!7853) bm!7849))

(assert (= (and d!21025 res!43182) b!83512))

(assert (= (and d!21025 c!13344) b!83509))

(assert (= (and d!21025 (not c!13344)) b!83503))

(assert (= (and d!21025 res!43186) b!83504))

(assert (= (and b!83504 res!43185) b!83515))

(assert (= (and b!83504 (not res!43188)) b!83505))

(assert (= (and b!83505 res!43184) b!83510))

(assert (= (and b!83504 res!43187) b!83502))

(assert (= (and b!83502 c!13347) b!83507))

(assert (= (and b!83502 (not c!13347)) b!83511))

(assert (= (and b!83507 res!43183) b!83514))

(assert (= (or b!83507 b!83511) bm!7851))

(assert (= (and b!83502 res!43190) b!83513))

(assert (= (and b!83513 c!13343) b!83517))

(assert (= (and b!83513 (not c!13343)) b!83506))

(assert (= (and b!83517 res!43189) b!83498))

(assert (= (or b!83517 b!83506) bm!7850))

(declare-fun b_lambda!3713 () Bool)

(assert (=> (not b_lambda!3713) (not b!83510)))

(assert (=> b!83510 t!5259))

(declare-fun b_and!5069 () Bool)

(assert (= b_and!5065 (and (=> t!5259 result!2903) b_and!5069)))

(assert (=> b!83510 t!5261))

(declare-fun b_and!5071 () Bool)

(assert (= b_and!5067 (and (=> t!5261 result!2905) b_and!5071)))

(declare-fun m!86457 () Bool)

(assert (=> bm!7848 m!86457))

(declare-fun m!86459 () Bool)

(assert (=> bm!7851 m!86459))

(declare-fun m!86461 () Bool)

(assert (=> bm!7849 m!86461))

(assert (=> b!83515 m!86049))

(assert (=> b!83515 m!86049))

(assert (=> b!83515 m!86051))

(declare-fun m!86463 () Bool)

(assert (=> bm!7850 m!86463))

(assert (=> b!83512 m!86049))

(assert (=> b!83512 m!86049))

(assert (=> b!83512 m!86051))

(assert (=> b!83505 m!86049))

(assert (=> b!83505 m!86049))

(declare-fun m!86465 () Bool)

(assert (=> b!83505 m!86465))

(assert (=> d!21025 m!86023))

(declare-fun m!86467 () Bool)

(assert (=> b!83498 m!86467))

(declare-fun m!86469 () Bool)

(assert (=> b!83509 m!86469))

(declare-fun m!86471 () Bool)

(assert (=> b!83509 m!86471))

(declare-fun m!86473 () Bool)

(assert (=> b!83509 m!86473))

(declare-fun m!86475 () Bool)

(assert (=> b!83509 m!86475))

(declare-fun m!86477 () Bool)

(assert (=> b!83509 m!86477))

(declare-fun m!86479 () Bool)

(assert (=> b!83509 m!86479))

(declare-fun m!86481 () Bool)

(assert (=> b!83509 m!86481))

(assert (=> b!83509 m!86471))

(declare-fun m!86483 () Bool)

(assert (=> b!83509 m!86483))

(declare-fun m!86485 () Bool)

(assert (=> b!83509 m!86485))

(assert (=> b!83509 m!86477))

(declare-fun m!86487 () Bool)

(assert (=> b!83509 m!86487))

(assert (=> b!83509 m!86473))

(assert (=> b!83509 m!86049))

(declare-fun m!86489 () Bool)

(assert (=> b!83509 m!86489))

(declare-fun m!86491 () Bool)

(assert (=> b!83509 m!86491))

(declare-fun m!86493 () Bool)

(assert (=> b!83509 m!86493))

(assert (=> b!83509 m!86457))

(declare-fun m!86495 () Bool)

(assert (=> b!83509 m!86495))

(assert (=> b!83509 m!86487))

(declare-fun m!86497 () Bool)

(assert (=> b!83509 m!86497))

(assert (=> b!83510 m!86089))

(declare-fun m!86499 () Bool)

(assert (=> b!83510 m!86499))

(assert (=> b!83510 m!86049))

(declare-fun m!86501 () Bool)

(assert (=> b!83510 m!86501))

(assert (=> b!83510 m!86049))

(assert (=> b!83510 m!86499))

(assert (=> b!83510 m!86089))

(declare-fun m!86503 () Bool)

(assert (=> b!83510 m!86503))

(declare-fun m!86505 () Bool)

(assert (=> b!83501 m!86505))

(declare-fun m!86507 () Bool)

(assert (=> b!83514 m!86507))

(assert (=> bm!7758 d!21025))

(declare-fun d!21027 () Bool)

(declare-fun lt!39293 () Bool)

(declare-fun content!87 (List!1547) (InoxSet tuple2!2220))

(assert (=> d!21027 (= lt!39293 (select (content!87 (toList!756 lt!39029)) lt!38750))))

(declare-fun e!54517 () Bool)

(assert (=> d!21027 (= lt!39293 e!54517)))

(declare-fun res!43195 () Bool)

(assert (=> d!21027 (=> (not res!43195) (not e!54517))))

(assert (=> d!21027 (= res!43195 ((_ is Cons!1543) (toList!756 lt!39029)))))

(assert (=> d!21027 (= (contains!760 (toList!756 lt!39029) lt!38750) lt!39293)))

(declare-fun b!83522 () Bool)

(declare-fun e!54518 () Bool)

(assert (=> b!83522 (= e!54517 e!54518)))

(declare-fun res!43196 () Bool)

(assert (=> b!83522 (=> res!43196 e!54518)))

(assert (=> b!83522 (= res!43196 (= (h!2133 (toList!756 lt!39029)) lt!38750))))

(declare-fun b!83523 () Bool)

(assert (=> b!83523 (= e!54518 (contains!760 (t!5251 (toList!756 lt!39029)) lt!38750))))

(assert (= (and d!21027 res!43195) b!83522))

(assert (= (and b!83522 (not res!43196)) b!83523))

(declare-fun m!86509 () Bool)

(assert (=> d!21027 m!86509))

(declare-fun m!86511 () Bool)

(assert (=> d!21027 m!86511))

(declare-fun m!86513 () Bool)

(assert (=> b!83523 m!86513))

(assert (=> b!83192 d!21027))

(declare-fun d!21029 () Bool)

(declare-fun lt!39294 () Bool)

(assert (=> d!21029 (= lt!39294 (select (content!87 (toList!756 lt!39033)) lt!38760))))

(declare-fun e!54519 () Bool)

(assert (=> d!21029 (= lt!39294 e!54519)))

(declare-fun res!43197 () Bool)

(assert (=> d!21029 (=> (not res!43197) (not e!54519))))

(assert (=> d!21029 (= res!43197 ((_ is Cons!1543) (toList!756 lt!39033)))))

(assert (=> d!21029 (= (contains!760 (toList!756 lt!39033) lt!38760) lt!39294)))

(declare-fun b!83524 () Bool)

(declare-fun e!54520 () Bool)

(assert (=> b!83524 (= e!54519 e!54520)))

(declare-fun res!43198 () Bool)

(assert (=> b!83524 (=> res!43198 e!54520)))

(assert (=> b!83524 (= res!43198 (= (h!2133 (toList!756 lt!39033)) lt!38760))))

(declare-fun b!83525 () Bool)

(assert (=> b!83525 (= e!54520 (contains!760 (t!5251 (toList!756 lt!39033)) lt!38760))))

(assert (= (and d!21029 res!43197) b!83524))

(assert (= (and b!83524 (not res!43198)) b!83525))

(declare-fun m!86515 () Bool)

(assert (=> d!21029 m!86515))

(declare-fun m!86517 () Bool)

(assert (=> d!21029 m!86517))

(declare-fun m!86519 () Bool)

(assert (=> b!83525 m!86519))

(assert (=> b!83194 d!21029))

(declare-fun d!21031 () Bool)

(assert (=> d!21031 (= (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (and (not (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83079 d!21031))

(declare-fun d!21033 () Bool)

(declare-fun res!43200 () Bool)

(declare-fun e!54523 () Bool)

(assert (=> d!21033 (=> res!43200 e!54523)))

(assert (=> d!21033 (= res!43200 (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!21033 (= (arrayNoDuplicates!0 (_keys!3985 newMap!16) #b00000000000000000000000000000000 Nil!1545) e!54523)))

(declare-fun b!83526 () Bool)

(declare-fun e!54524 () Bool)

(assert (=> b!83526 (= e!54523 e!54524)))

(declare-fun res!43199 () Bool)

(assert (=> b!83526 (=> (not res!43199) (not e!54524))))

(declare-fun e!54522 () Bool)

(assert (=> b!83526 (= res!43199 (not e!54522))))

(declare-fun res!43201 () Bool)

(assert (=> b!83526 (=> (not res!43201) (not e!54522))))

(assert (=> b!83526 (= res!43201 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83527 () Bool)

(declare-fun e!54521 () Bool)

(declare-fun call!7857 () Bool)

(assert (=> b!83527 (= e!54521 call!7857)))

(declare-fun bm!7854 () Bool)

(declare-fun c!13349 () Bool)

(assert (=> bm!7854 (= call!7857 (arrayNoDuplicates!0 (_keys!3985 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!13349 (Cons!1544 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000) Nil!1545) Nil!1545)))))

(declare-fun b!83528 () Bool)

(assert (=> b!83528 (= e!54524 e!54521)))

(assert (=> b!83528 (= c!13349 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83529 () Bool)

(assert (=> b!83529 (= e!54522 (contains!759 Nil!1545 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83530 () Bool)

(assert (=> b!83530 (= e!54521 call!7857)))

(assert (= (and d!21033 (not res!43200)) b!83526))

(assert (= (and b!83526 res!43201) b!83529))

(assert (= (and b!83526 res!43199) b!83528))

(assert (= (and b!83528 c!13349) b!83527))

(assert (= (and b!83528 (not c!13349)) b!83530))

(assert (= (or b!83527 b!83530) bm!7854))

(assert (=> b!83526 m!86049))

(assert (=> b!83526 m!86049))

(assert (=> b!83526 m!86051))

(assert (=> bm!7854 m!86049))

(declare-fun m!86521 () Bool)

(assert (=> bm!7854 m!86521))

(assert (=> b!83528 m!86049))

(assert (=> b!83528 m!86049))

(assert (=> b!83528 m!86051))

(assert (=> b!83529 m!86049))

(assert (=> b!83529 m!86049))

(declare-fun m!86523 () Bool)

(assert (=> b!83529 m!86523))

(assert (=> b!82921 d!21033))

(declare-fun d!21035 () Bool)

(declare-fun e!54525 () Bool)

(assert (=> d!21035 e!54525))

(declare-fun res!43202 () Bool)

(assert (=> d!21035 (=> res!43202 e!54525)))

(declare-fun lt!39295 () Bool)

(assert (=> d!21035 (= res!43202 (not lt!39295))))

(declare-fun lt!39297 () Bool)

(assert (=> d!21035 (= lt!39295 lt!39297)))

(declare-fun lt!39298 () Unit!2445)

(declare-fun e!54526 () Unit!2445)

(assert (=> d!21035 (= lt!39298 e!54526)))

(declare-fun c!13350 () Bool)

(assert (=> d!21035 (= c!13350 lt!39297)))

(assert (=> d!21035 (= lt!39297 (containsKey!142 (toList!756 lt!38974) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21035 (= (contains!757 lt!38974 #b0000000000000000000000000000000000000000000000000000000000000000) lt!39295)))

(declare-fun b!83531 () Bool)

(declare-fun lt!39296 () Unit!2445)

(assert (=> b!83531 (= e!54526 lt!39296)))

(assert (=> b!83531 (= lt!39296 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!38974) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83531 (isDefined!92 (getValueByKey!138 (toList!756 lt!38974) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83532 () Bool)

(declare-fun Unit!2471 () Unit!2445)

(assert (=> b!83532 (= e!54526 Unit!2471)))

(declare-fun b!83533 () Bool)

(assert (=> b!83533 (= e!54525 (isDefined!92 (getValueByKey!138 (toList!756 lt!38974) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21035 c!13350) b!83531))

(assert (= (and d!21035 (not c!13350)) b!83532))

(assert (= (and d!21035 (not res!43202)) b!83533))

(declare-fun m!86525 () Bool)

(assert (=> d!21035 m!86525))

(declare-fun m!86527 () Bool)

(assert (=> b!83531 m!86527))

(assert (=> b!83531 m!86297))

(assert (=> b!83531 m!86297))

(declare-fun m!86529 () Bool)

(assert (=> b!83531 m!86529))

(assert (=> b!83533 m!86297))

(assert (=> b!83533 m!86297))

(assert (=> b!83533 m!86529))

(assert (=> bm!7800 d!21035))

(assert (=> d!20873 d!20895))

(declare-fun b!83546 () Bool)

(declare-fun e!54533 () SeekEntryResult!252)

(declare-fun lt!39307 () SeekEntryResult!252)

(assert (=> b!83546 (= e!54533 (Found!252 (index!3146 lt!39307)))))

(declare-fun b!83547 () Bool)

(declare-fun e!54535 () SeekEntryResult!252)

(assert (=> b!83547 (= e!54535 e!54533)))

(declare-fun lt!39305 () (_ BitVec 64))

(assert (=> b!83547 (= lt!39305 (select (arr!1912 (_keys!3985 newMap!16)) (index!3146 lt!39307)))))

(declare-fun c!13358 () Bool)

(assert (=> b!83547 (= c!13358 (= lt!39305 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun b!83548 () Bool)

(declare-fun e!54534 () SeekEntryResult!252)

(assert (=> b!83548 (= e!54534 (MissingZero!252 (index!3146 lt!39307)))))

(declare-fun d!21037 () Bool)

(declare-fun lt!39306 () SeekEntryResult!252)

(assert (=> d!21037 (and (or ((_ is Undefined!252) lt!39306) (not ((_ is Found!252) lt!39306)) (and (bvsge (index!3145 lt!39306) #b00000000000000000000000000000000) (bvslt (index!3145 lt!39306) (size!2155 (_keys!3985 newMap!16))))) (or ((_ is Undefined!252) lt!39306) ((_ is Found!252) lt!39306) (not ((_ is MissingZero!252) lt!39306)) (and (bvsge (index!3144 lt!39306) #b00000000000000000000000000000000) (bvslt (index!3144 lt!39306) (size!2155 (_keys!3985 newMap!16))))) (or ((_ is Undefined!252) lt!39306) ((_ is Found!252) lt!39306) ((_ is MissingZero!252) lt!39306) (not ((_ is MissingVacant!252) lt!39306)) (and (bvsge (index!3147 lt!39306) #b00000000000000000000000000000000) (bvslt (index!3147 lt!39306) (size!2155 (_keys!3985 newMap!16))))) (or ((_ is Undefined!252) lt!39306) (ite ((_ is Found!252) lt!39306) (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!39306)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (ite ((_ is MissingZero!252) lt!39306) (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3144 lt!39306)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!252) lt!39306) (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3147 lt!39306)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21037 (= lt!39306 e!54535)))

(declare-fun c!13359 () Bool)

(assert (=> d!21037 (= c!13359 (and ((_ is Intermediate!252) lt!39307) (undefined!1064 lt!39307)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4014 (_ BitVec 32)) SeekEntryResult!252)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!21037 (= lt!39307 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (mask!6335 newMap!16)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (_keys!3985 newMap!16) (mask!6335 newMap!16)))))

(assert (=> d!21037 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!21037 (= (seekEntryOrOpen!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (_keys!3985 newMap!16) (mask!6335 newMap!16)) lt!39306)))

(declare-fun b!83549 () Bool)

(assert (=> b!83549 (= e!54535 Undefined!252)))

(declare-fun b!83550 () Bool)

(declare-fun c!13357 () Bool)

(assert (=> b!83550 (= c!13357 (= lt!39305 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83550 (= e!54533 e!54534)))

(declare-fun b!83551 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4014 (_ BitVec 32)) SeekEntryResult!252)

(assert (=> b!83551 (= e!54534 (seekKeyOrZeroReturnVacant!0 (x!11861 lt!39307) (index!3146 lt!39307) (index!3146 lt!39307) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (_keys!3985 newMap!16) (mask!6335 newMap!16)))))

(assert (= (and d!21037 c!13359) b!83549))

(assert (= (and d!21037 (not c!13359)) b!83547))

(assert (= (and b!83547 c!13358) b!83546))

(assert (= (and b!83547 (not c!13358)) b!83550))

(assert (= (and b!83550 c!13357) b!83548))

(assert (= (and b!83550 (not c!13357)) b!83551))

(declare-fun m!86531 () Bool)

(assert (=> b!83547 m!86531))

(assert (=> d!21037 m!86023))

(declare-fun m!86533 () Bool)

(assert (=> d!21037 m!86533))

(declare-fun m!86535 () Bool)

(assert (=> d!21037 m!86535))

(declare-fun m!86537 () Bool)

(assert (=> d!21037 m!86537))

(declare-fun m!86539 () Bool)

(assert (=> d!21037 m!86539))

(assert (=> d!21037 m!85591))

(declare-fun m!86541 () Bool)

(assert (=> d!21037 m!86541))

(assert (=> d!21037 m!85591))

(assert (=> d!21037 m!86539))

(assert (=> b!83551 m!85591))

(declare-fun m!86543 () Bool)

(assert (=> b!83551 m!86543))

(assert (=> bm!7759 d!21037))

(declare-fun d!21039 () Bool)

(declare-fun lt!39308 () Bool)

(assert (=> d!21039 (= lt!39308 (select (content!87 (toList!756 lt!39037)) lt!38760))))

(declare-fun e!54536 () Bool)

(assert (=> d!21039 (= lt!39308 e!54536)))

(declare-fun res!43203 () Bool)

(assert (=> d!21039 (=> (not res!43203) (not e!54536))))

(assert (=> d!21039 (= res!43203 ((_ is Cons!1543) (toList!756 lt!39037)))))

(assert (=> d!21039 (= (contains!760 (toList!756 lt!39037) lt!38760) lt!39308)))

(declare-fun b!83552 () Bool)

(declare-fun e!54537 () Bool)

(assert (=> b!83552 (= e!54536 e!54537)))

(declare-fun res!43204 () Bool)

(assert (=> b!83552 (=> res!43204 e!54537)))

(assert (=> b!83552 (= res!43204 (= (h!2133 (toList!756 lt!39037)) lt!38760))))

(declare-fun b!83553 () Bool)

(assert (=> b!83553 (= e!54537 (contains!760 (t!5251 (toList!756 lt!39037)) lt!38760))))

(assert (= (and d!21039 res!43203) b!83552))

(assert (= (and b!83552 (not res!43204)) b!83553))

(declare-fun m!86545 () Bool)

(assert (=> d!21039 m!86545))

(declare-fun m!86547 () Bool)

(assert (=> d!21039 m!86547))

(declare-fun m!86549 () Bool)

(assert (=> b!83553 m!86549))

(assert (=> b!83196 d!21039))

(declare-fun d!21041 () Bool)

(assert (=> d!21041 (= (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83187 d!21041))

(declare-fun d!21043 () Bool)

(declare-fun e!54538 () Bool)

(assert (=> d!21043 e!54538))

(declare-fun res!43205 () Bool)

(assert (=> d!21043 (=> res!43205 e!54538)))

(declare-fun lt!39309 () Bool)

(assert (=> d!21043 (= res!43205 (not lt!39309))))

(declare-fun lt!39311 () Bool)

(assert (=> d!21043 (= lt!39309 lt!39311)))

(declare-fun lt!39312 () Unit!2445)

(declare-fun e!54539 () Unit!2445)

(assert (=> d!21043 (= lt!39312 e!54539)))

(declare-fun c!13360 () Bool)

(assert (=> d!21043 (= c!13360 lt!39311)))

(assert (=> d!21043 (= lt!39311 (containsKey!142 (toList!756 lt!39045) (_1!1120 lt!38747)))))

(assert (=> d!21043 (= (contains!757 lt!39045 (_1!1120 lt!38747)) lt!39309)))

(declare-fun b!83554 () Bool)

(declare-fun lt!39310 () Unit!2445)

(assert (=> b!83554 (= e!54539 lt!39310)))

(assert (=> b!83554 (= lt!39310 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39045) (_1!1120 lt!38747)))))

(assert (=> b!83554 (isDefined!92 (getValueByKey!138 (toList!756 lt!39045) (_1!1120 lt!38747)))))

(declare-fun b!83555 () Bool)

(declare-fun Unit!2472 () Unit!2445)

(assert (=> b!83555 (= e!54539 Unit!2472)))

(declare-fun b!83556 () Bool)

(assert (=> b!83556 (= e!54538 (isDefined!92 (getValueByKey!138 (toList!756 lt!39045) (_1!1120 lt!38747))))))

(assert (= (and d!21043 c!13360) b!83554))

(assert (= (and d!21043 (not c!13360)) b!83555))

(assert (= (and d!21043 (not res!43205)) b!83556))

(declare-fun m!86551 () Bool)

(assert (=> d!21043 m!86551))

(declare-fun m!86553 () Bool)

(assert (=> b!83554 m!86553))

(assert (=> b!83554 m!85965))

(assert (=> b!83554 m!85965))

(declare-fun m!86555 () Bool)

(assert (=> b!83554 m!86555))

(assert (=> b!83556 m!85965))

(assert (=> b!83556 m!85965))

(assert (=> b!83556 m!86555))

(assert (=> d!20899 d!21043))

(declare-fun b!83558 () Bool)

(declare-fun e!54540 () Option!144)

(declare-fun e!54541 () Option!144)

(assert (=> b!83558 (= e!54540 e!54541)))

(declare-fun c!13362 () Bool)

(assert (=> b!83558 (= c!13362 (and ((_ is Cons!1543) lt!39042) (not (= (_1!1120 (h!2133 lt!39042)) (_1!1120 lt!38747)))))))

(declare-fun b!83557 () Bool)

(assert (=> b!83557 (= e!54540 (Some!143 (_2!1120 (h!2133 lt!39042))))))

(declare-fun b!83560 () Bool)

(assert (=> b!83560 (= e!54541 None!142)))

(declare-fun d!21045 () Bool)

(declare-fun c!13361 () Bool)

(assert (=> d!21045 (= c!13361 (and ((_ is Cons!1543) lt!39042) (= (_1!1120 (h!2133 lt!39042)) (_1!1120 lt!38747))))))

(assert (=> d!21045 (= (getValueByKey!138 lt!39042 (_1!1120 lt!38747)) e!54540)))

(declare-fun b!83559 () Bool)

(assert (=> b!83559 (= e!54541 (getValueByKey!138 (t!5251 lt!39042) (_1!1120 lt!38747)))))

(assert (= (and d!21045 c!13361) b!83557))

(assert (= (and d!21045 (not c!13361)) b!83558))

(assert (= (and b!83558 c!13362) b!83559))

(assert (= (and b!83558 (not c!13362)) b!83560))

(declare-fun m!86557 () Bool)

(assert (=> b!83559 m!86557))

(assert (=> d!20899 d!21045))

(declare-fun d!21047 () Bool)

(assert (=> d!21047 (= (getValueByKey!138 lt!39042 (_1!1120 lt!38747)) (Some!143 (_2!1120 lt!38747)))))

(declare-fun lt!39313 () Unit!2445)

(assert (=> d!21047 (= lt!39313 (choose!495 lt!39042 (_1!1120 lt!38747) (_2!1120 lt!38747)))))

(declare-fun e!54542 () Bool)

(assert (=> d!21047 e!54542))

(declare-fun res!43206 () Bool)

(assert (=> d!21047 (=> (not res!43206) (not e!54542))))

(assert (=> d!21047 (= res!43206 (isStrictlySorted!292 lt!39042))))

(assert (=> d!21047 (= (lemmaContainsTupThenGetReturnValue!57 lt!39042 (_1!1120 lt!38747) (_2!1120 lt!38747)) lt!39313)))

(declare-fun b!83561 () Bool)

(declare-fun res!43207 () Bool)

(assert (=> b!83561 (=> (not res!43207) (not e!54542))))

(assert (=> b!83561 (= res!43207 (containsKey!142 lt!39042 (_1!1120 lt!38747)))))

(declare-fun b!83562 () Bool)

(assert (=> b!83562 (= e!54542 (contains!760 lt!39042 (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))))))

(assert (= (and d!21047 res!43206) b!83561))

(assert (= (and b!83561 res!43207) b!83562))

(assert (=> d!21047 m!85959))

(declare-fun m!86559 () Bool)

(assert (=> d!21047 m!86559))

(declare-fun m!86561 () Bool)

(assert (=> d!21047 m!86561))

(declare-fun m!86563 () Bool)

(assert (=> b!83561 m!86563))

(declare-fun m!86565 () Bool)

(assert (=> b!83562 m!86565))

(assert (=> d!20899 d!21047))

(declare-fun bm!7855 () Bool)

(declare-fun call!7859 () List!1547)

(declare-fun call!7858 () List!1547)

(assert (=> bm!7855 (= call!7859 call!7858)))

(declare-fun b!83563 () Bool)

(declare-fun e!54546 () List!1547)

(assert (=> b!83563 (= e!54546 call!7859)))

(declare-fun b!83564 () Bool)

(declare-fun e!54545 () List!1547)

(declare-fun call!7860 () List!1547)

(assert (=> b!83564 (= e!54545 call!7860)))

(declare-fun b!83565 () Bool)

(declare-fun e!54544 () List!1547)

(assert (=> b!83565 (= e!54544 (insertStrictlySorted!59 (t!5251 (toList!756 lt!38754)) (_1!1120 lt!38747) (_2!1120 lt!38747)))))

(declare-fun b!83566 () Bool)

(assert (=> b!83566 (= e!54545 call!7860)))

(declare-fun b!83567 () Bool)

(declare-fun res!43208 () Bool)

(declare-fun e!54547 () Bool)

(assert (=> b!83567 (=> (not res!43208) (not e!54547))))

(declare-fun lt!39314 () List!1547)

(assert (=> b!83567 (= res!43208 (containsKey!142 lt!39314 (_1!1120 lt!38747)))))

(declare-fun d!21049 () Bool)

(assert (=> d!21049 e!54547))

(declare-fun res!43209 () Bool)

(assert (=> d!21049 (=> (not res!43209) (not e!54547))))

(assert (=> d!21049 (= res!43209 (isStrictlySorted!292 lt!39314))))

(declare-fun e!54543 () List!1547)

(assert (=> d!21049 (= lt!39314 e!54543)))

(declare-fun c!13364 () Bool)

(assert (=> d!21049 (= c!13364 (and ((_ is Cons!1543) (toList!756 lt!38754)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38754))) (_1!1120 lt!38747))))))

(assert (=> d!21049 (isStrictlySorted!292 (toList!756 lt!38754))))

(assert (=> d!21049 (= (insertStrictlySorted!59 (toList!756 lt!38754) (_1!1120 lt!38747) (_2!1120 lt!38747)) lt!39314)))

(declare-fun b!83568 () Bool)

(assert (=> b!83568 (= e!54547 (contains!760 lt!39314 (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))))))

(declare-fun b!83569 () Bool)

(assert (=> b!83569 (= e!54543 e!54546)))

(declare-fun c!13363 () Bool)

(assert (=> b!83569 (= c!13363 (and ((_ is Cons!1543) (toList!756 lt!38754)) (= (_1!1120 (h!2133 (toList!756 lt!38754))) (_1!1120 lt!38747))))))

(declare-fun c!13366 () Bool)

(declare-fun b!83570 () Bool)

(assert (=> b!83570 (= e!54544 (ite c!13363 (t!5251 (toList!756 lt!38754)) (ite c!13366 (Cons!1543 (h!2133 (toList!756 lt!38754)) (t!5251 (toList!756 lt!38754))) Nil!1544)))))

(declare-fun b!83571 () Bool)

(assert (=> b!83571 (= c!13366 (and ((_ is Cons!1543) (toList!756 lt!38754)) (bvsgt (_1!1120 (h!2133 (toList!756 lt!38754))) (_1!1120 lt!38747))))))

(assert (=> b!83571 (= e!54546 e!54545)))

(declare-fun bm!7856 () Bool)

(assert (=> bm!7856 (= call!7858 ($colon$colon!70 e!54544 (ite c!13364 (h!2133 (toList!756 lt!38754)) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747)))))))

(declare-fun c!13365 () Bool)

(assert (=> bm!7856 (= c!13365 c!13364)))

(declare-fun b!83572 () Bool)

(assert (=> b!83572 (= e!54543 call!7858)))

(declare-fun bm!7857 () Bool)

(assert (=> bm!7857 (= call!7860 call!7859)))

(assert (= (and d!21049 c!13364) b!83572))

(assert (= (and d!21049 (not c!13364)) b!83569))

(assert (= (and b!83569 c!13363) b!83563))

(assert (= (and b!83569 (not c!13363)) b!83571))

(assert (= (and b!83571 c!13366) b!83566))

(assert (= (and b!83571 (not c!13366)) b!83564))

(assert (= (or b!83566 b!83564) bm!7857))

(assert (= (or b!83563 bm!7857) bm!7855))

(assert (= (or b!83572 bm!7855) bm!7856))

(assert (= (and bm!7856 c!13365) b!83565))

(assert (= (and bm!7856 (not c!13365)) b!83570))

(assert (= (and d!21049 res!43209) b!83567))

(assert (= (and b!83567 res!43208) b!83568))

(declare-fun m!86567 () Bool)

(assert (=> d!21049 m!86567))

(assert (=> d!21049 m!86239))

(declare-fun m!86569 () Bool)

(assert (=> b!83565 m!86569))

(declare-fun m!86571 () Bool)

(assert (=> b!83568 m!86571))

(declare-fun m!86573 () Bool)

(assert (=> bm!7856 m!86573))

(declare-fun m!86575 () Bool)

(assert (=> b!83567 m!86575))

(assert (=> d!20899 d!21049))

(declare-fun d!21051 () Bool)

(declare-fun e!54548 () Bool)

(assert (=> d!21051 e!54548))

(declare-fun res!43210 () Bool)

(assert (=> d!21051 (=> res!43210 e!54548)))

(declare-fun lt!39315 () Bool)

(assert (=> d!21051 (= res!43210 (not lt!39315))))

(declare-fun lt!39317 () Bool)

(assert (=> d!21051 (= lt!39315 lt!39317)))

(declare-fun lt!39318 () Unit!2445)

(declare-fun e!54549 () Unit!2445)

(assert (=> d!21051 (= lt!39318 e!54549)))

(declare-fun c!13367 () Bool)

(assert (=> d!21051 (= c!13367 lt!39317)))

(assert (=> d!21051 (= lt!39317 (containsKey!142 (toList!756 lt!38974) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!21051 (= (contains!757 lt!38974 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!39315)))

(declare-fun b!83573 () Bool)

(declare-fun lt!39316 () Unit!2445)

(assert (=> b!83573 (= e!54549 lt!39316)))

(assert (=> b!83573 (= lt!39316 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!38974) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!83573 (isDefined!92 (getValueByKey!138 (toList!756 lt!38974) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!83574 () Bool)

(declare-fun Unit!2473 () Unit!2445)

(assert (=> b!83574 (= e!54549 Unit!2473)))

(declare-fun b!83575 () Bool)

(assert (=> b!83575 (= e!54548 (isDefined!92 (getValueByKey!138 (toList!756 lt!38974) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!21051 c!13367) b!83573))

(assert (= (and d!21051 (not c!13367)) b!83574))

(assert (= (and d!21051 (not res!43210)) b!83575))

(assert (=> d!21051 m!85781))

(declare-fun m!86577 () Bool)

(assert (=> d!21051 m!86577))

(assert (=> b!83573 m!85781))

(declare-fun m!86579 () Bool)

(assert (=> b!83573 m!86579))

(assert (=> b!83573 m!85781))

(declare-fun m!86581 () Bool)

(assert (=> b!83573 m!86581))

(assert (=> b!83573 m!86581))

(declare-fun m!86583 () Bool)

(assert (=> b!83573 m!86583))

(assert (=> b!83575 m!85781))

(assert (=> b!83575 m!86581))

(assert (=> b!83575 m!86581))

(assert (=> b!83575 m!86583))

(assert (=> b!83134 d!21051))

(assert (=> d!20871 d!20917))

(declare-fun d!21053 () Bool)

(declare-fun e!54550 () Bool)

(assert (=> d!21053 e!54550))

(declare-fun res!43211 () Bool)

(assert (=> d!21053 (=> res!43211 e!54550)))

(declare-fun lt!39319 () Bool)

(assert (=> d!21053 (= res!43211 (not lt!39319))))

(declare-fun lt!39321 () Bool)

(assert (=> d!21053 (= lt!39319 lt!39321)))

(declare-fun lt!39322 () Unit!2445)

(declare-fun e!54551 () Unit!2445)

(assert (=> d!21053 (= lt!39322 e!54551)))

(declare-fun c!13368 () Bool)

(assert (=> d!21053 (= c!13368 lt!39321)))

(assert (=> d!21053 (= lt!39321 (containsKey!142 (toList!756 lt!38974) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21053 (= (contains!757 lt!38974 #b1000000000000000000000000000000000000000000000000000000000000000) lt!39319)))

(declare-fun b!83576 () Bool)

(declare-fun lt!39320 () Unit!2445)

(assert (=> b!83576 (= e!54551 lt!39320)))

(assert (=> b!83576 (= lt!39320 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!38974) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83576 (isDefined!92 (getValueByKey!138 (toList!756 lt!38974) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83577 () Bool)

(declare-fun Unit!2474 () Unit!2445)

(assert (=> b!83577 (= e!54551 Unit!2474)))

(declare-fun b!83578 () Bool)

(assert (=> b!83578 (= e!54550 (isDefined!92 (getValueByKey!138 (toList!756 lt!38974) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21053 c!13368) b!83576))

(assert (= (and d!21053 (not c!13368)) b!83577))

(assert (= (and d!21053 (not res!43211)) b!83578))

(declare-fun m!86585 () Bool)

(assert (=> d!21053 m!86585))

(declare-fun m!86587 () Bool)

(assert (=> b!83576 m!86587))

(declare-fun m!86589 () Bool)

(assert (=> b!83576 m!86589))

(assert (=> b!83576 m!86589))

(declare-fun m!86591 () Bool)

(assert (=> b!83576 m!86591))

(assert (=> b!83578 m!86589))

(assert (=> b!83578 m!86589))

(assert (=> b!83578 m!86591))

(assert (=> bm!7799 d!21053))

(assert (=> d!20863 d!20869))

(declare-fun d!21055 () Bool)

(assert (=> d!21055 (arrayNoDuplicates!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) from!355 Nil!1545)))

(assert (=> d!21055 true))

(declare-fun _$71!111 () Unit!2445)

(assert (=> d!21055 (= (choose!39 (_keys!3985 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!111)))

(declare-fun bs!3514 () Bool)

(assert (= bs!3514 d!21055))

(assert (=> bs!3514 m!85627))

(assert (=> d!20863 d!21055))

(declare-fun d!21057 () Bool)

(declare-fun e!54552 () Bool)

(assert (=> d!21057 e!54552))

(declare-fun res!43212 () Bool)

(assert (=> d!21057 (=> res!43212 e!54552)))

(declare-fun lt!39323 () Bool)

(assert (=> d!21057 (= res!43212 (not lt!39323))))

(declare-fun lt!39325 () Bool)

(assert (=> d!21057 (= lt!39323 lt!39325)))

(declare-fun lt!39326 () Unit!2445)

(declare-fun e!54553 () Unit!2445)

(assert (=> d!21057 (= lt!39326 e!54553)))

(declare-fun c!13369 () Bool)

(assert (=> d!21057 (= c!13369 lt!39325)))

(assert (=> d!21057 (= lt!39325 (containsKey!142 (toList!756 lt!39021) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21057 (= (contains!757 lt!39021 #b0000000000000000000000000000000000000000000000000000000000000000) lt!39323)))

(declare-fun b!83579 () Bool)

(declare-fun lt!39324 () Unit!2445)

(assert (=> b!83579 (= e!54553 lt!39324)))

(assert (=> b!83579 (= lt!39324 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39021) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83579 (isDefined!92 (getValueByKey!138 (toList!756 lt!39021) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83580 () Bool)

(declare-fun Unit!2475 () Unit!2445)

(assert (=> b!83580 (= e!54553 Unit!2475)))

(declare-fun b!83581 () Bool)

(assert (=> b!83581 (= e!54552 (isDefined!92 (getValueByKey!138 (toList!756 lt!39021) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21057 c!13369) b!83579))

(assert (= (and d!21057 (not c!13369)) b!83580))

(assert (= (and d!21057 (not res!43212)) b!83581))

(declare-fun m!86593 () Bool)

(assert (=> d!21057 m!86593))

(declare-fun m!86595 () Bool)

(assert (=> b!83579 m!86595))

(declare-fun m!86597 () Bool)

(assert (=> b!83579 m!86597))

(assert (=> b!83579 m!86597))

(declare-fun m!86599 () Bool)

(assert (=> b!83579 m!86599))

(assert (=> b!83581 m!86597))

(assert (=> b!83581 m!86597))

(assert (=> b!83581 m!86599))

(assert (=> d!20885 d!21057))

(assert (=> d!20885 d!20895))

(declare-fun d!21059 () Bool)

(assert (=> d!21059 (= (+!114 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) lt!38883 lt!38748 (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39329 () Unit!2445)

(declare-fun choose!499 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 V!3019 Int) Unit!2445)

(assert (=> d!21059 (= lt!39329 (choose!499 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) lt!38883 (zeroValue!2211 newMap!16) lt!38748 (minValue!2211 newMap!16) (defaultEntry!2317 newMap!16)))))

(assert (=> d!21059 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!21059 (= (lemmaChangeZeroKeyThenAddPairToListMap!30 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) lt!38883 (zeroValue!2211 newMap!16) lt!38748 (minValue!2211 newMap!16) (defaultEntry!2317 newMap!16)) lt!39329)))

(declare-fun bs!3515 () Bool)

(assert (= bs!3515 d!21059))

(declare-fun m!86601 () Bool)

(assert (=> bs!3515 m!86601))

(assert (=> bs!3515 m!86023))

(assert (=> bs!3515 m!85729))

(declare-fun m!86603 () Bool)

(assert (=> bs!3515 m!86603))

(declare-fun m!86605 () Bool)

(assert (=> bs!3515 m!86605))

(assert (=> bs!3515 m!85729))

(assert (=> b!83025 d!21059))

(declare-fun d!21061 () Bool)

(assert (=> d!21061 (= (+!114 (+!114 lt!38755 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (+!114 (+!114 lt!38755 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(assert (=> d!21061 true))

(declare-fun _$28!139 () Unit!2445)

(assert (=> d!21061 (= (choose!492 lt!38755 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) _$28!139)))

(declare-fun bs!3516 () Bool)

(assert (= bs!3516 d!21061))

(assert (=> bs!3516 m!85903))

(assert (=> bs!3516 m!85903))

(assert (=> bs!3516 m!85905))

(assert (=> bs!3516 m!85899))

(assert (=> bs!3516 m!85899))

(assert (=> bs!3516 m!85901))

(assert (=> d!20887 d!21061))

(declare-fun d!21063 () Bool)

(declare-fun e!54554 () Bool)

(assert (=> d!21063 e!54554))

(declare-fun res!43213 () Bool)

(assert (=> d!21063 (=> (not res!43213) (not e!54554))))

(declare-fun lt!39333 () ListLongMap!1481)

(assert (=> d!21063 (= res!43213 (contains!757 lt!39333 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun lt!39330 () List!1547)

(assert (=> d!21063 (= lt!39333 (ListLongMap!1482 lt!39330))))

(declare-fun lt!39331 () Unit!2445)

(declare-fun lt!39332 () Unit!2445)

(assert (=> d!21063 (= lt!39331 lt!39332)))

(assert (=> d!21063 (= (getValueByKey!138 lt!39330 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21063 (= lt!39332 (lemmaContainsTupThenGetReturnValue!57 lt!39330 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21063 (= lt!39330 (insertStrictlySorted!59 (toList!756 lt!38755) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21063 (= (+!114 lt!38755 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) lt!39333)))

(declare-fun b!83582 () Bool)

(declare-fun res!43214 () Bool)

(assert (=> b!83582 (=> (not res!43214) (not e!54554))))

(assert (=> b!83582 (= res!43214 (= (getValueByKey!138 (toList!756 lt!39333) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun b!83583 () Bool)

(assert (=> b!83583 (= e!54554 (contains!760 (toList!756 lt!39333) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(assert (= (and d!21063 res!43213) b!83582))

(assert (= (and b!83582 res!43214) b!83583))

(declare-fun m!86607 () Bool)

(assert (=> d!21063 m!86607))

(declare-fun m!86609 () Bool)

(assert (=> d!21063 m!86609))

(declare-fun m!86611 () Bool)

(assert (=> d!21063 m!86611))

(declare-fun m!86613 () Bool)

(assert (=> d!21063 m!86613))

(declare-fun m!86615 () Bool)

(assert (=> b!83582 m!86615))

(declare-fun m!86617 () Bool)

(assert (=> b!83583 m!86617))

(assert (=> d!20887 d!21063))

(declare-fun d!21065 () Bool)

(declare-fun e!54555 () Bool)

(assert (=> d!21065 e!54555))

(declare-fun res!43215 () Bool)

(assert (=> d!21065 (=> (not res!43215) (not e!54555))))

(declare-fun lt!39337 () ListLongMap!1481)

(assert (=> d!21065 (= res!43215 (contains!757 lt!39337 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun lt!39334 () List!1547)

(assert (=> d!21065 (= lt!39337 (ListLongMap!1482 lt!39334))))

(declare-fun lt!39335 () Unit!2445)

(declare-fun lt!39336 () Unit!2445)

(assert (=> d!21065 (= lt!39335 lt!39336)))

(assert (=> d!21065 (= (getValueByKey!138 lt!39334 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21065 (= lt!39336 (lemmaContainsTupThenGetReturnValue!57 lt!39334 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21065 (= lt!39334 (insertStrictlySorted!59 (toList!756 (+!114 lt!38755 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21065 (= (+!114 (+!114 lt!38755 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!39337)))

(declare-fun b!83584 () Bool)

(declare-fun res!43216 () Bool)

(assert (=> b!83584 (=> (not res!43216) (not e!54555))))

(assert (=> b!83584 (= res!43216 (= (getValueByKey!138 (toList!756 lt!39337) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!83585 () Bool)

(assert (=> b!83585 (= e!54555 (contains!760 (toList!756 lt!39337) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(assert (= (and d!21065 res!43215) b!83584))

(assert (= (and b!83584 res!43216) b!83585))

(declare-fun m!86619 () Bool)

(assert (=> d!21065 m!86619))

(declare-fun m!86621 () Bool)

(assert (=> d!21065 m!86621))

(declare-fun m!86623 () Bool)

(assert (=> d!21065 m!86623))

(declare-fun m!86625 () Bool)

(assert (=> d!21065 m!86625))

(declare-fun m!86627 () Bool)

(assert (=> b!83584 m!86627))

(declare-fun m!86629 () Bool)

(assert (=> b!83585 m!86629))

(assert (=> d!20887 d!21065))

(declare-fun d!21067 () Bool)

(declare-fun e!54556 () Bool)

(assert (=> d!21067 e!54556))

(declare-fun res!43217 () Bool)

(assert (=> d!21067 (=> (not res!43217) (not e!54556))))

(declare-fun lt!39341 () ListLongMap!1481)

(assert (=> d!21067 (= res!43217 (contains!757 lt!39341 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun lt!39338 () List!1547)

(assert (=> d!21067 (= lt!39341 (ListLongMap!1482 lt!39338))))

(declare-fun lt!39339 () Unit!2445)

(declare-fun lt!39340 () Unit!2445)

(assert (=> d!21067 (= lt!39339 lt!39340)))

(assert (=> d!21067 (= (getValueByKey!138 lt!39338 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21067 (= lt!39340 (lemmaContainsTupThenGetReturnValue!57 lt!39338 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21067 (= lt!39338 (insertStrictlySorted!59 (toList!756 lt!38755) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21067 (= (+!114 lt!38755 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!39341)))

(declare-fun b!83586 () Bool)

(declare-fun res!43218 () Bool)

(assert (=> b!83586 (=> (not res!43218) (not e!54556))))

(assert (=> b!83586 (= res!43218 (= (getValueByKey!138 (toList!756 lt!39341) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!83587 () Bool)

(assert (=> b!83587 (= e!54556 (contains!760 (toList!756 lt!39341) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(assert (= (and d!21067 res!43217) b!83586))

(assert (= (and b!83586 res!43218) b!83587))

(declare-fun m!86631 () Bool)

(assert (=> d!21067 m!86631))

(declare-fun m!86633 () Bool)

(assert (=> d!21067 m!86633))

(declare-fun m!86635 () Bool)

(assert (=> d!21067 m!86635))

(declare-fun m!86637 () Bool)

(assert (=> d!21067 m!86637))

(declare-fun m!86639 () Bool)

(assert (=> b!83586 m!86639))

(declare-fun m!86641 () Bool)

(assert (=> b!83587 m!86641))

(assert (=> d!20887 d!21067))

(declare-fun d!21069 () Bool)

(declare-fun e!54557 () Bool)

(assert (=> d!21069 e!54557))

(declare-fun res!43219 () Bool)

(assert (=> d!21069 (=> (not res!43219) (not e!54557))))

(declare-fun lt!39345 () ListLongMap!1481)

(assert (=> d!21069 (= res!43219 (contains!757 lt!39345 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun lt!39342 () List!1547)

(assert (=> d!21069 (= lt!39345 (ListLongMap!1482 lt!39342))))

(declare-fun lt!39343 () Unit!2445)

(declare-fun lt!39344 () Unit!2445)

(assert (=> d!21069 (= lt!39343 lt!39344)))

(assert (=> d!21069 (= (getValueByKey!138 lt!39342 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21069 (= lt!39344 (lemmaContainsTupThenGetReturnValue!57 lt!39342 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21069 (= lt!39342 (insertStrictlySorted!59 (toList!756 (+!114 lt!38755 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21069 (= (+!114 (+!114 lt!38755 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) lt!39345)))

(declare-fun b!83588 () Bool)

(declare-fun res!43220 () Bool)

(assert (=> b!83588 (=> (not res!43220) (not e!54557))))

(assert (=> b!83588 (= res!43220 (= (getValueByKey!138 (toList!756 lt!39345) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun b!83589 () Bool)

(assert (=> b!83589 (= e!54557 (contains!760 (toList!756 lt!39345) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(assert (= (and d!21069 res!43219) b!83588))

(assert (= (and b!83588 res!43220) b!83589))

(declare-fun m!86643 () Bool)

(assert (=> d!21069 m!86643))

(declare-fun m!86645 () Bool)

(assert (=> d!21069 m!86645))

(declare-fun m!86647 () Bool)

(assert (=> d!21069 m!86647))

(declare-fun m!86649 () Bool)

(assert (=> d!21069 m!86649))

(declare-fun m!86651 () Bool)

(assert (=> b!83588 m!86651))

(declare-fun m!86653 () Bool)

(assert (=> b!83589 m!86653))

(assert (=> d!20887 d!21069))

(assert (=> b!83067 d!20865))

(declare-fun d!21071 () Bool)

(declare-fun e!54560 () Bool)

(assert (=> d!21071 e!54560))

(declare-fun res!43225 () Bool)

(assert (=> d!21071 (=> (not res!43225) (not e!54560))))

(declare-fun lt!39350 () SeekEntryResult!252)

(assert (=> d!21071 (= res!43225 ((_ is Found!252) lt!39350))))

(assert (=> d!21071 (= lt!39350 (seekEntryOrOpen!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (_keys!3985 newMap!16) (mask!6335 newMap!16)))))

(declare-fun lt!39351 () Unit!2445)

(declare-fun choose!500 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 (_ BitVec 64) Int) Unit!2445)

(assert (=> d!21071 (= lt!39351 (choose!500 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (defaultEntry!2317 newMap!16)))))

(assert (=> d!21071 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!21071 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!30 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (defaultEntry!2317 newMap!16)) lt!39351)))

(declare-fun b!83594 () Bool)

(declare-fun res!43226 () Bool)

(assert (=> b!83594 (=> (not res!43226) (not e!54560))))

(assert (=> b!83594 (= res!43226 (inRange!0 (index!3145 lt!39350) (mask!6335 newMap!16)))))

(declare-fun b!83595 () Bool)

(assert (=> b!83595 (= e!54560 (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!39350)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> b!83595 (and (bvsge (index!3145 lt!39350) #b00000000000000000000000000000000) (bvslt (index!3145 lt!39350) (size!2155 (_keys!3985 newMap!16))))))

(assert (= (and d!21071 res!43225) b!83594))

(assert (= (and b!83594 res!43226) b!83595))

(assert (=> d!21071 m!85591))

(assert (=> d!21071 m!85741))

(assert (=> d!21071 m!85591))

(declare-fun m!86655 () Bool)

(assert (=> d!21071 m!86655))

(assert (=> d!21071 m!86023))

(declare-fun m!86657 () Bool)

(assert (=> b!83594 m!86657))

(declare-fun m!86659 () Bool)

(assert (=> b!83595 m!86659))

(assert (=> bm!7773 d!21071))

(declare-fun b!83596 () Bool)

(declare-fun e!54566 () ListLongMap!1481)

(declare-fun call!7861 () ListLongMap!1481)

(assert (=> b!83596 (= e!54566 call!7861)))

(declare-fun bm!7858 () Bool)

(declare-fun call!7867 () ListLongMap!1481)

(declare-fun call!7862 () ListLongMap!1481)

(assert (=> bm!7858 (= call!7867 call!7862)))

(declare-fun b!83597 () Bool)

(declare-fun e!54570 () Bool)

(declare-fun lt!39363 () ListLongMap!1481)

(assert (=> b!83597 (= e!54570 (= (apply!81 lt!39363 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))))

(declare-fun b!83598 () Bool)

(declare-fun e!54561 () ListLongMap!1481)

(declare-fun call!7863 () ListLongMap!1481)

(assert (=> b!83598 (= e!54561 call!7863)))

(declare-fun b!83600 () Bool)

(declare-fun e!54562 () ListLongMap!1481)

(declare-fun call!7864 () ListLongMap!1481)

(assert (=> b!83600 (= e!54562 (+!114 call!7864 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))))))

(declare-fun b!83601 () Bool)

(declare-fun res!43235 () Bool)

(declare-fun e!54569 () Bool)

(assert (=> b!83601 (=> (not res!43235) (not e!54569))))

(declare-fun e!54565 () Bool)

(assert (=> b!83601 (= res!43235 e!54565)))

(declare-fun c!13374 () Bool)

(assert (=> b!83601 (= c!13374 (not (= (bvand (ite c!13216 (ite c!13218 (extraKeys!2160 newMap!16) lt!38889) (extraKeys!2160 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7859 () Bool)

(assert (=> bm!7859 (= call!7862 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887) (mask!6335 newMap!16) (ite c!13216 (ite c!13218 (extraKeys!2160 newMap!16) lt!38889) (extraKeys!2160 newMap!16)) (zeroValue!2211 newMap!16) (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun c!13375 () Bool)

(declare-fun c!13373 () Bool)

(declare-fun bm!7860 () Bool)

(assert (=> bm!7860 (= call!7864 (+!114 (ite c!13373 call!7862 (ite c!13375 call!7867 call!7861)) (ite (or c!13373 c!13375) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))))))

(declare-fun b!83602 () Bool)

(declare-fun e!54568 () Unit!2445)

(declare-fun Unit!2476 () Unit!2445)

(assert (=> b!83602 (= e!54568 Unit!2476)))

(declare-fun bm!7861 () Bool)

(declare-fun call!7865 () Bool)

(assert (=> bm!7861 (= call!7865 (contains!757 lt!39363 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83603 () Bool)

(declare-fun res!43232 () Bool)

(assert (=> b!83603 (=> (not res!43232) (not e!54569))))

(declare-fun e!54572 () Bool)

(assert (=> b!83603 (= res!43232 e!54572)))

(declare-fun res!43233 () Bool)

(assert (=> b!83603 (=> res!43233 e!54572)))

(declare-fun e!54567 () Bool)

(assert (=> b!83603 (= res!43233 (not e!54567))))

(declare-fun res!43230 () Bool)

(assert (=> b!83603 (=> (not res!43230) (not e!54567))))

(assert (=> b!83603 (= res!43230 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!83604 () Bool)

(declare-fun e!54563 () Bool)

(assert (=> b!83604 (= e!54572 e!54563)))

(declare-fun res!43229 () Bool)

(assert (=> b!83604 (=> (not res!43229) (not e!54563))))

(assert (=> b!83604 (= res!43229 (contains!757 lt!39363 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83604 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!83605 () Bool)

(declare-fun e!54564 () Bool)

(assert (=> b!83605 (= e!54564 (not call!7865))))

(declare-fun b!83606 () Bool)

(declare-fun e!54571 () Bool)

(assert (=> b!83606 (= e!54565 e!54571)))

(declare-fun res!43228 () Bool)

(declare-fun call!7866 () Bool)

(assert (=> b!83606 (= res!43228 call!7866)))

(assert (=> b!83606 (=> (not res!43228) (not e!54571))))

(declare-fun b!83607 () Bool)

(declare-fun c!13372 () Bool)

(assert (=> b!83607 (= c!13372 (and (not (= (bvand (ite c!13216 (ite c!13218 (extraKeys!2160 newMap!16) lt!38889) (extraKeys!2160 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!13216 (ite c!13218 (extraKeys!2160 newMap!16) lt!38889) (extraKeys!2160 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!83607 (= e!54561 e!54566)))

(declare-fun b!83608 () Bool)

(declare-fun lt!39358 () Unit!2445)

(assert (=> b!83608 (= e!54568 lt!39358)))

(declare-fun lt!39364 () ListLongMap!1481)

(assert (=> b!83608 (= lt!39364 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887) (mask!6335 newMap!16) (ite c!13216 (ite c!13218 (extraKeys!2160 newMap!16) lt!38889) (extraKeys!2160 newMap!16)) (zeroValue!2211 newMap!16) (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39357 () (_ BitVec 64))

(assert (=> b!83608 (= lt!39357 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39361 () (_ BitVec 64))

(assert (=> b!83608 (= lt!39361 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39366 () Unit!2445)

(assert (=> b!83608 (= lt!39366 (addStillContains!57 lt!39364 lt!39357 (zeroValue!2211 newMap!16) lt!39361))))

(assert (=> b!83608 (contains!757 (+!114 lt!39364 (tuple2!2221 lt!39357 (zeroValue!2211 newMap!16))) lt!39361)))

(declare-fun lt!39362 () Unit!2445)

(assert (=> b!83608 (= lt!39362 lt!39366)))

(declare-fun lt!39367 () ListLongMap!1481)

(assert (=> b!83608 (= lt!39367 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887) (mask!6335 newMap!16) (ite c!13216 (ite c!13218 (extraKeys!2160 newMap!16) lt!38889) (extraKeys!2160 newMap!16)) (zeroValue!2211 newMap!16) (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39359 () (_ BitVec 64))

(assert (=> b!83608 (= lt!39359 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39373 () (_ BitVec 64))

(assert (=> b!83608 (= lt!39373 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39371 () Unit!2445)

(assert (=> b!83608 (= lt!39371 (addApplyDifferent!57 lt!39367 lt!39359 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)) lt!39373))))

(assert (=> b!83608 (= (apply!81 (+!114 lt!39367 (tuple2!2221 lt!39359 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))) lt!39373) (apply!81 lt!39367 lt!39373))))

(declare-fun lt!39365 () Unit!2445)

(assert (=> b!83608 (= lt!39365 lt!39371)))

(declare-fun lt!39360 () ListLongMap!1481)

(assert (=> b!83608 (= lt!39360 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887) (mask!6335 newMap!16) (ite c!13216 (ite c!13218 (extraKeys!2160 newMap!16) lt!38889) (extraKeys!2160 newMap!16)) (zeroValue!2211 newMap!16) (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39369 () (_ BitVec 64))

(assert (=> b!83608 (= lt!39369 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39353 () (_ BitVec 64))

(assert (=> b!83608 (= lt!39353 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39368 () Unit!2445)

(assert (=> b!83608 (= lt!39368 (addApplyDifferent!57 lt!39360 lt!39369 (zeroValue!2211 newMap!16) lt!39353))))

(assert (=> b!83608 (= (apply!81 (+!114 lt!39360 (tuple2!2221 lt!39369 (zeroValue!2211 newMap!16))) lt!39353) (apply!81 lt!39360 lt!39353))))

(declare-fun lt!39354 () Unit!2445)

(assert (=> b!83608 (= lt!39354 lt!39368)))

(declare-fun lt!39356 () ListLongMap!1481)

(assert (=> b!83608 (= lt!39356 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887) (mask!6335 newMap!16) (ite c!13216 (ite c!13218 (extraKeys!2160 newMap!16) lt!38889) (extraKeys!2160 newMap!16)) (zeroValue!2211 newMap!16) (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39370 () (_ BitVec 64))

(assert (=> b!83608 (= lt!39370 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39355 () (_ BitVec 64))

(assert (=> b!83608 (= lt!39355 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!83608 (= lt!39358 (addApplyDifferent!57 lt!39356 lt!39370 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)) lt!39355))))

(assert (=> b!83608 (= (apply!81 (+!114 lt!39356 (tuple2!2221 lt!39370 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))) lt!39355) (apply!81 lt!39356 lt!39355))))

(declare-fun b!83609 () Bool)

(assert (=> b!83609 (= e!54563 (= (apply!81 lt!39363 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) (get!1206 (select (arr!1913 (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887)) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83609 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2156 (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887))))))

(assert (=> b!83609 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!83599 () Bool)

(assert (=> b!83599 (= e!54566 call!7863)))

(declare-fun d!21073 () Bool)

(assert (=> d!21073 e!54569))

(declare-fun res!43231 () Bool)

(assert (=> d!21073 (=> (not res!43231) (not e!54569))))

(assert (=> d!21073 (= res!43231 (or (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))))

(declare-fun lt!39372 () ListLongMap!1481)

(assert (=> d!21073 (= lt!39363 lt!39372)))

(declare-fun lt!39352 () Unit!2445)

(assert (=> d!21073 (= lt!39352 e!54568)))

(declare-fun c!13371 () Bool)

(declare-fun e!54573 () Bool)

(assert (=> d!21073 (= c!13371 e!54573)))

(declare-fun res!43227 () Bool)

(assert (=> d!21073 (=> (not res!43227) (not e!54573))))

(assert (=> d!21073 (= res!43227 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!21073 (= lt!39372 e!54562)))

(assert (=> d!21073 (= c!13373 (and (not (= (bvand (ite c!13216 (ite c!13218 (extraKeys!2160 newMap!16) lt!38889) (extraKeys!2160 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!13216 (ite c!13218 (extraKeys!2160 newMap!16) lt!38889) (extraKeys!2160 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21073 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!21073 (= (getCurrentListMap!440 (_keys!3985 newMap!16) (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887) (mask!6335 newMap!16) (ite c!13216 (ite c!13218 (extraKeys!2160 newMap!16) lt!38889) (extraKeys!2160 newMap!16)) (zeroValue!2211 newMap!16) (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) lt!39363)))

(declare-fun bm!7862 () Bool)

(assert (=> bm!7862 (= call!7866 (contains!757 lt!39363 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83610 () Bool)

(assert (=> b!83610 (= e!54565 (not call!7866))))

(declare-fun bm!7863 () Bool)

(assert (=> bm!7863 (= call!7861 call!7867)))

(declare-fun b!83611 () Bool)

(assert (=> b!83611 (= e!54573 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83612 () Bool)

(assert (=> b!83612 (= e!54569 e!54564)))

(declare-fun c!13370 () Bool)

(assert (=> b!83612 (= c!13370 (not (= (bvand (ite c!13216 (ite c!13218 (extraKeys!2160 newMap!16) lt!38889) (extraKeys!2160 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7864 () Bool)

(assert (=> bm!7864 (= call!7863 call!7864)))

(declare-fun b!83613 () Bool)

(assert (=> b!83613 (= e!54571 (= (apply!81 lt!39363 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2211 newMap!16)))))

(declare-fun b!83614 () Bool)

(assert (=> b!83614 (= e!54567 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83615 () Bool)

(assert (=> b!83615 (= e!54562 e!54561)))

(assert (=> b!83615 (= c!13375 (and (not (= (bvand (ite c!13216 (ite c!13218 (extraKeys!2160 newMap!16) lt!38889) (extraKeys!2160 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!13216 (ite c!13218 (extraKeys!2160 newMap!16) lt!38889) (extraKeys!2160 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!83616 () Bool)

(assert (=> b!83616 (= e!54564 e!54570)))

(declare-fun res!43234 () Bool)

(assert (=> b!83616 (= res!43234 call!7865)))

(assert (=> b!83616 (=> (not res!43234) (not e!54570))))

(assert (= (and d!21073 c!13373) b!83600))

(assert (= (and d!21073 (not c!13373)) b!83615))

(assert (= (and b!83615 c!13375) b!83598))

(assert (= (and b!83615 (not c!13375)) b!83607))

(assert (= (and b!83607 c!13372) b!83599))

(assert (= (and b!83607 (not c!13372)) b!83596))

(assert (= (or b!83599 b!83596) bm!7863))

(assert (= (or b!83598 bm!7863) bm!7858))

(assert (= (or b!83598 b!83599) bm!7864))

(assert (= (or b!83600 bm!7858) bm!7859))

(assert (= (or b!83600 bm!7864) bm!7860))

(assert (= (and d!21073 res!43227) b!83611))

(assert (= (and d!21073 c!13371) b!83608))

(assert (= (and d!21073 (not c!13371)) b!83602))

(assert (= (and d!21073 res!43231) b!83603))

(assert (= (and b!83603 res!43230) b!83614))

(assert (= (and b!83603 (not res!43233)) b!83604))

(assert (= (and b!83604 res!43229) b!83609))

(assert (= (and b!83603 res!43232) b!83601))

(assert (= (and b!83601 c!13374) b!83606))

(assert (= (and b!83601 (not c!13374)) b!83610))

(assert (= (and b!83606 res!43228) b!83613))

(assert (= (or b!83606 b!83610) bm!7862))

(assert (= (and b!83601 res!43235) b!83612))

(assert (= (and b!83612 c!13370) b!83616))

(assert (= (and b!83612 (not c!13370)) b!83605))

(assert (= (and b!83616 res!43234) b!83597))

(assert (= (or b!83616 b!83605) bm!7861))

(declare-fun b_lambda!3715 () Bool)

(assert (=> (not b_lambda!3715) (not b!83609)))

(assert (=> b!83609 t!5259))

(declare-fun b_and!5073 () Bool)

(assert (= b_and!5069 (and (=> t!5259 result!2903) b_and!5073)))

(assert (=> b!83609 t!5261))

(declare-fun b_and!5075 () Bool)

(assert (= b_and!5071 (and (=> t!5261 result!2905) b_and!5075)))

(declare-fun m!86661 () Bool)

(assert (=> bm!7859 m!86661))

(declare-fun m!86663 () Bool)

(assert (=> bm!7862 m!86663))

(declare-fun m!86665 () Bool)

(assert (=> bm!7860 m!86665))

(assert (=> b!83614 m!86049))

(assert (=> b!83614 m!86049))

(assert (=> b!83614 m!86051))

(declare-fun m!86667 () Bool)

(assert (=> bm!7861 m!86667))

(assert (=> b!83611 m!86049))

(assert (=> b!83611 m!86049))

(assert (=> b!83611 m!86051))

(assert (=> b!83604 m!86049))

(assert (=> b!83604 m!86049))

(declare-fun m!86669 () Bool)

(assert (=> b!83604 m!86669))

(assert (=> d!21073 m!86023))

(declare-fun m!86671 () Bool)

(assert (=> b!83597 m!86671))

(declare-fun m!86673 () Bool)

(assert (=> b!83608 m!86673))

(declare-fun m!86675 () Bool)

(assert (=> b!83608 m!86675))

(declare-fun m!86677 () Bool)

(assert (=> b!83608 m!86677))

(declare-fun m!86679 () Bool)

(assert (=> b!83608 m!86679))

(declare-fun m!86681 () Bool)

(assert (=> b!83608 m!86681))

(declare-fun m!86683 () Bool)

(assert (=> b!83608 m!86683))

(declare-fun m!86685 () Bool)

(assert (=> b!83608 m!86685))

(assert (=> b!83608 m!86675))

(declare-fun m!86687 () Bool)

(assert (=> b!83608 m!86687))

(declare-fun m!86689 () Bool)

(assert (=> b!83608 m!86689))

(assert (=> b!83608 m!86681))

(declare-fun m!86691 () Bool)

(assert (=> b!83608 m!86691))

(assert (=> b!83608 m!86677))

(assert (=> b!83608 m!86049))

(declare-fun m!86693 () Bool)

(assert (=> b!83608 m!86693))

(declare-fun m!86695 () Bool)

(assert (=> b!83608 m!86695))

(declare-fun m!86697 () Bool)

(assert (=> b!83608 m!86697))

(assert (=> b!83608 m!86661))

(declare-fun m!86699 () Bool)

(assert (=> b!83608 m!86699))

(assert (=> b!83608 m!86691))

(declare-fun m!86701 () Bool)

(assert (=> b!83608 m!86701))

(assert (=> b!83609 m!86089))

(declare-fun m!86703 () Bool)

(assert (=> b!83609 m!86703))

(assert (=> b!83609 m!86049))

(declare-fun m!86705 () Bool)

(assert (=> b!83609 m!86705))

(assert (=> b!83609 m!86049))

(assert (=> b!83609 m!86703))

(assert (=> b!83609 m!86089))

(declare-fun m!86707 () Bool)

(assert (=> b!83609 m!86707))

(declare-fun m!86709 () Bool)

(assert (=> b!83600 m!86709))

(declare-fun m!86711 () Bool)

(assert (=> b!83613 m!86711))

(assert (=> bm!7756 d!21073))

(declare-fun d!21075 () Bool)

(declare-fun lt!39374 () Bool)

(assert (=> d!21075 (= lt!39374 (select (content!87 (toList!756 lt!39041)) lt!38747))))

(declare-fun e!54574 () Bool)

(assert (=> d!21075 (= lt!39374 e!54574)))

(declare-fun res!43236 () Bool)

(assert (=> d!21075 (=> (not res!43236) (not e!54574))))

(assert (=> d!21075 (= res!43236 ((_ is Cons!1543) (toList!756 lt!39041)))))

(assert (=> d!21075 (= (contains!760 (toList!756 lt!39041) lt!38747) lt!39374)))

(declare-fun b!83617 () Bool)

(declare-fun e!54575 () Bool)

(assert (=> b!83617 (= e!54574 e!54575)))

(declare-fun res!43237 () Bool)

(assert (=> b!83617 (=> res!43237 e!54575)))

(assert (=> b!83617 (= res!43237 (= (h!2133 (toList!756 lt!39041)) lt!38747))))

(declare-fun b!83618 () Bool)

(assert (=> b!83618 (= e!54575 (contains!760 (t!5251 (toList!756 lt!39041)) lt!38747))))

(assert (= (and d!21075 res!43236) b!83617))

(assert (= (and b!83617 (not res!43237)) b!83618))

(declare-fun m!86713 () Bool)

(assert (=> d!21075 m!86713))

(declare-fun m!86715 () Bool)

(assert (=> d!21075 m!86715))

(declare-fun m!86717 () Bool)

(assert (=> b!83618 m!86717))

(assert (=> b!83198 d!21075))

(declare-fun d!21077 () Bool)

(declare-fun lt!39375 () Bool)

(assert (=> d!21077 (= lt!39375 (select (content!87 (toList!756 lt!39045)) lt!38747))))

(declare-fun e!54576 () Bool)

(assert (=> d!21077 (= lt!39375 e!54576)))

(declare-fun res!43238 () Bool)

(assert (=> d!21077 (=> (not res!43238) (not e!54576))))

(assert (=> d!21077 (= res!43238 ((_ is Cons!1543) (toList!756 lt!39045)))))

(assert (=> d!21077 (= (contains!760 (toList!756 lt!39045) lt!38747) lt!39375)))

(declare-fun b!83619 () Bool)

(declare-fun e!54577 () Bool)

(assert (=> b!83619 (= e!54576 e!54577)))

(declare-fun res!43239 () Bool)

(assert (=> b!83619 (=> res!43239 e!54577)))

(assert (=> b!83619 (= res!43239 (= (h!2133 (toList!756 lt!39045)) lt!38747))))

(declare-fun b!83620 () Bool)

(assert (=> b!83620 (= e!54577 (contains!760 (t!5251 (toList!756 lt!39045)) lt!38747))))

(assert (= (and d!21077 res!43238) b!83619))

(assert (= (and b!83619 (not res!43239)) b!83620))

(declare-fun m!86719 () Bool)

(assert (=> d!21077 m!86719))

(declare-fun m!86721 () Bool)

(assert (=> d!21077 m!86721))

(declare-fun m!86723 () Bool)

(assert (=> b!83620 m!86723))

(assert (=> b!83200 d!21077))

(declare-fun d!21079 () Bool)

(declare-fun e!54580 () Bool)

(assert (=> d!21079 e!54580))

(declare-fun c!13378 () Bool)

(assert (=> d!21079 (= c!13378 (and (not (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!21079 true))

(declare-fun _$29!105 () Unit!2445)

(assert (=> d!21079 (= (choose!491 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))) _$29!105)))

(declare-fun b!83625 () Bool)

(assert (=> b!83625 (= e!54580 (arrayContainsKey!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!83626 () Bool)

(assert (=> b!83626 (= e!54580 (ite (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!21079 c!13378) b!83625))

(assert (= (and d!21079 (not c!13378)) b!83626))

(assert (=> b!83625 m!85591))

(assert (=> b!83625 m!85631))

(assert (=> d!20867 d!21079))

(assert (=> d!20867 d!20895))

(declare-fun d!21081 () Bool)

(assert (=> d!21081 (= (get!1208 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) from!355) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82927 d!21081))

(declare-fun d!21083 () Bool)

(declare-fun e!54581 () Bool)

(assert (=> d!21083 e!54581))

(declare-fun res!43240 () Bool)

(assert (=> d!21083 (=> res!43240 e!54581)))

(declare-fun lt!39376 () Bool)

(assert (=> d!21083 (= res!43240 (not lt!39376))))

(declare-fun lt!39378 () Bool)

(assert (=> d!21083 (= lt!39376 lt!39378)))

(declare-fun lt!39379 () Unit!2445)

(declare-fun e!54582 () Unit!2445)

(assert (=> d!21083 (= lt!39379 e!54582)))

(declare-fun c!13379 () Bool)

(assert (=> d!21083 (= c!13379 lt!39378)))

(assert (=> d!21083 (= lt!39378 (containsKey!142 (toList!756 lt!39003) (_1!1120 lt!38750)))))

(assert (=> d!21083 (= (contains!757 lt!39003 (_1!1120 lt!38750)) lt!39376)))

(declare-fun b!83627 () Bool)

(declare-fun lt!39377 () Unit!2445)

(assert (=> b!83627 (= e!54582 lt!39377)))

(assert (=> b!83627 (= lt!39377 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39003) (_1!1120 lt!38750)))))

(assert (=> b!83627 (isDefined!92 (getValueByKey!138 (toList!756 lt!39003) (_1!1120 lt!38750)))))

(declare-fun b!83628 () Bool)

(declare-fun Unit!2477 () Unit!2445)

(assert (=> b!83628 (= e!54582 Unit!2477)))

(declare-fun b!83629 () Bool)

(assert (=> b!83629 (= e!54581 (isDefined!92 (getValueByKey!138 (toList!756 lt!39003) (_1!1120 lt!38750))))))

(assert (= (and d!21083 c!13379) b!83627))

(assert (= (and d!21083 (not c!13379)) b!83628))

(assert (= (and d!21083 (not res!43240)) b!83629))

(declare-fun m!86725 () Bool)

(assert (=> d!21083 m!86725))

(declare-fun m!86727 () Bool)

(assert (=> b!83627 m!86727))

(assert (=> b!83627 m!85875))

(assert (=> b!83627 m!85875))

(declare-fun m!86729 () Bool)

(assert (=> b!83627 m!86729))

(assert (=> b!83629 m!85875))

(assert (=> b!83629 m!85875))

(assert (=> b!83629 m!86729))

(assert (=> d!20883 d!21083))

(declare-fun b!83631 () Bool)

(declare-fun e!54583 () Option!144)

(declare-fun e!54584 () Option!144)

(assert (=> b!83631 (= e!54583 e!54584)))

(declare-fun c!13381 () Bool)

(assert (=> b!83631 (= c!13381 (and ((_ is Cons!1543) lt!39000) (not (= (_1!1120 (h!2133 lt!39000)) (_1!1120 lt!38750)))))))

(declare-fun b!83630 () Bool)

(assert (=> b!83630 (= e!54583 (Some!143 (_2!1120 (h!2133 lt!39000))))))

(declare-fun b!83633 () Bool)

(assert (=> b!83633 (= e!54584 None!142)))

(declare-fun d!21085 () Bool)

(declare-fun c!13380 () Bool)

(assert (=> d!21085 (= c!13380 (and ((_ is Cons!1543) lt!39000) (= (_1!1120 (h!2133 lt!39000)) (_1!1120 lt!38750))))))

(assert (=> d!21085 (= (getValueByKey!138 lt!39000 (_1!1120 lt!38750)) e!54583)))

(declare-fun b!83632 () Bool)

(assert (=> b!83632 (= e!54584 (getValueByKey!138 (t!5251 lt!39000) (_1!1120 lt!38750)))))

(assert (= (and d!21085 c!13380) b!83630))

(assert (= (and d!21085 (not c!13380)) b!83631))

(assert (= (and b!83631 c!13381) b!83632))

(assert (= (and b!83631 (not c!13381)) b!83633))

(declare-fun m!86731 () Bool)

(assert (=> b!83632 m!86731))

(assert (=> d!20883 d!21085))

(declare-fun d!21087 () Bool)

(assert (=> d!21087 (= (getValueByKey!138 lt!39000 (_1!1120 lt!38750)) (Some!143 (_2!1120 lt!38750)))))

(declare-fun lt!39380 () Unit!2445)

(assert (=> d!21087 (= lt!39380 (choose!495 lt!39000 (_1!1120 lt!38750) (_2!1120 lt!38750)))))

(declare-fun e!54585 () Bool)

(assert (=> d!21087 e!54585))

(declare-fun res!43241 () Bool)

(assert (=> d!21087 (=> (not res!43241) (not e!54585))))

(assert (=> d!21087 (= res!43241 (isStrictlySorted!292 lt!39000))))

(assert (=> d!21087 (= (lemmaContainsTupThenGetReturnValue!57 lt!39000 (_1!1120 lt!38750) (_2!1120 lt!38750)) lt!39380)))

(declare-fun b!83634 () Bool)

(declare-fun res!43242 () Bool)

(assert (=> b!83634 (=> (not res!43242) (not e!54585))))

(assert (=> b!83634 (= res!43242 (containsKey!142 lt!39000 (_1!1120 lt!38750)))))

(declare-fun b!83635 () Bool)

(assert (=> b!83635 (= e!54585 (contains!760 lt!39000 (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(assert (= (and d!21087 res!43241) b!83634))

(assert (= (and b!83634 res!43242) b!83635))

(assert (=> d!21087 m!85869))

(declare-fun m!86733 () Bool)

(assert (=> d!21087 m!86733))

(declare-fun m!86735 () Bool)

(assert (=> d!21087 m!86735))

(declare-fun m!86737 () Bool)

(assert (=> b!83634 m!86737))

(declare-fun m!86739 () Bool)

(assert (=> b!83635 m!86739))

(assert (=> d!20883 d!21087))

(declare-fun bm!7865 () Bool)

(declare-fun call!7869 () List!1547)

(declare-fun call!7868 () List!1547)

(assert (=> bm!7865 (= call!7869 call!7868)))

(declare-fun b!83636 () Bool)

(declare-fun e!54589 () List!1547)

(assert (=> b!83636 (= e!54589 call!7869)))

(declare-fun b!83637 () Bool)

(declare-fun e!54588 () List!1547)

(declare-fun call!7870 () List!1547)

(assert (=> b!83637 (= e!54588 call!7870)))

(declare-fun b!83638 () Bool)

(declare-fun e!54587 () List!1547)

(assert (=> b!83638 (= e!54587 (insertStrictlySorted!59 (t!5251 (toList!756 (+!114 lt!38754 lt!38747))) (_1!1120 lt!38750) (_2!1120 lt!38750)))))

(declare-fun b!83639 () Bool)

(assert (=> b!83639 (= e!54588 call!7870)))

(declare-fun b!83640 () Bool)

(declare-fun res!43243 () Bool)

(declare-fun e!54590 () Bool)

(assert (=> b!83640 (=> (not res!43243) (not e!54590))))

(declare-fun lt!39381 () List!1547)

(assert (=> b!83640 (= res!43243 (containsKey!142 lt!39381 (_1!1120 lt!38750)))))

(declare-fun d!21089 () Bool)

(assert (=> d!21089 e!54590))

(declare-fun res!43244 () Bool)

(assert (=> d!21089 (=> (not res!43244) (not e!54590))))

(assert (=> d!21089 (= res!43244 (isStrictlySorted!292 lt!39381))))

(declare-fun e!54586 () List!1547)

(assert (=> d!21089 (= lt!39381 e!54586)))

(declare-fun c!13383 () Bool)

(assert (=> d!21089 (= c!13383 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38754 lt!38747))) (bvslt (_1!1120 (h!2133 (toList!756 (+!114 lt!38754 lt!38747)))) (_1!1120 lt!38750))))))

(assert (=> d!21089 (isStrictlySorted!292 (toList!756 (+!114 lt!38754 lt!38747)))))

(assert (=> d!21089 (= (insertStrictlySorted!59 (toList!756 (+!114 lt!38754 lt!38747)) (_1!1120 lt!38750) (_2!1120 lt!38750)) lt!39381)))

(declare-fun b!83641 () Bool)

(assert (=> b!83641 (= e!54590 (contains!760 lt!39381 (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(declare-fun b!83642 () Bool)

(assert (=> b!83642 (= e!54586 e!54589)))

(declare-fun c!13382 () Bool)

(assert (=> b!83642 (= c!13382 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38754 lt!38747))) (= (_1!1120 (h!2133 (toList!756 (+!114 lt!38754 lt!38747)))) (_1!1120 lt!38750))))))

(declare-fun b!83643 () Bool)

(declare-fun c!13385 () Bool)

(assert (=> b!83643 (= e!54587 (ite c!13382 (t!5251 (toList!756 (+!114 lt!38754 lt!38747))) (ite c!13385 (Cons!1543 (h!2133 (toList!756 (+!114 lt!38754 lt!38747))) (t!5251 (toList!756 (+!114 lt!38754 lt!38747)))) Nil!1544)))))

(declare-fun b!83644 () Bool)

(assert (=> b!83644 (= c!13385 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38754 lt!38747))) (bvsgt (_1!1120 (h!2133 (toList!756 (+!114 lt!38754 lt!38747)))) (_1!1120 lt!38750))))))

(assert (=> b!83644 (= e!54589 e!54588)))

(declare-fun bm!7866 () Bool)

(assert (=> bm!7866 (= call!7868 ($colon$colon!70 e!54587 (ite c!13383 (h!2133 (toList!756 (+!114 lt!38754 lt!38747))) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750)))))))

(declare-fun c!13384 () Bool)

(assert (=> bm!7866 (= c!13384 c!13383)))

(declare-fun b!83645 () Bool)

(assert (=> b!83645 (= e!54586 call!7868)))

(declare-fun bm!7867 () Bool)

(assert (=> bm!7867 (= call!7870 call!7869)))

(assert (= (and d!21089 c!13383) b!83645))

(assert (= (and d!21089 (not c!13383)) b!83642))

(assert (= (and b!83642 c!13382) b!83636))

(assert (= (and b!83642 (not c!13382)) b!83644))

(assert (= (and b!83644 c!13385) b!83639))

(assert (= (and b!83644 (not c!13385)) b!83637))

(assert (= (or b!83639 b!83637) bm!7867))

(assert (= (or b!83636 bm!7867) bm!7865))

(assert (= (or b!83645 bm!7865) bm!7866))

(assert (= (and bm!7866 c!13384) b!83638))

(assert (= (and bm!7866 (not c!13384)) b!83643))

(assert (= (and d!21089 res!43244) b!83640))

(assert (= (and b!83640 res!43243) b!83641))

(declare-fun m!86741 () Bool)

(assert (=> d!21089 m!86741))

(declare-fun m!86743 () Bool)

(assert (=> d!21089 m!86743))

(declare-fun m!86745 () Bool)

(assert (=> b!83638 m!86745))

(declare-fun m!86747 () Bool)

(assert (=> b!83641 m!86747))

(declare-fun m!86749 () Bool)

(assert (=> bm!7866 m!86749))

(declare-fun m!86751 () Bool)

(assert (=> b!83640 m!86751))

(assert (=> d!20883 d!21089))

(declare-fun d!21091 () Bool)

(declare-fun e!54591 () Bool)

(assert (=> d!21091 e!54591))

(declare-fun res!43245 () Bool)

(assert (=> d!21091 (=> (not res!43245) (not e!54591))))

(declare-fun lt!39385 () ListLongMap!1481)

(assert (=> d!21091 (= res!43245 (contains!757 lt!39385 (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun lt!39382 () List!1547)

(assert (=> d!21091 (= lt!39385 (ListLongMap!1482 lt!39382))))

(declare-fun lt!39383 () Unit!2445)

(declare-fun lt!39384 () Unit!2445)

(assert (=> d!21091 (= lt!39383 lt!39384)))

(assert (=> d!21091 (= (getValueByKey!138 lt!39382 (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) (Some!143 (_2!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21091 (= lt!39384 (lemmaContainsTupThenGetReturnValue!57 lt!39382 (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (_2!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21091 (= lt!39382 (insertStrictlySorted!59 (toList!756 (ite c!13247 call!7800 (ite c!13249 call!7805 call!7799))) (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (_2!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21091 (= (+!114 (ite c!13247 call!7800 (ite c!13249 call!7805 call!7799)) (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39385)))

(declare-fun b!83646 () Bool)

(declare-fun res!43246 () Bool)

(assert (=> b!83646 (=> (not res!43246) (not e!54591))))

(assert (=> b!83646 (= res!43246 (= (getValueByKey!138 (toList!756 lt!39385) (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) (Some!143 (_2!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!83647 () Bool)

(assert (=> b!83647 (= e!54591 (contains!760 (toList!756 lt!39385) (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21091 res!43245) b!83646))

(assert (= (and b!83646 res!43246) b!83647))

(declare-fun m!86753 () Bool)

(assert (=> d!21091 m!86753))

(declare-fun m!86755 () Bool)

(assert (=> d!21091 m!86755))

(declare-fun m!86757 () Bool)

(assert (=> d!21091 m!86757))

(declare-fun m!86759 () Bool)

(assert (=> d!21091 m!86759))

(declare-fun m!86761 () Bool)

(assert (=> b!83646 m!86761))

(declare-fun m!86763 () Bool)

(assert (=> b!83647 m!86763))

(assert (=> bm!7798 d!21091))

(declare-fun d!21093 () Bool)

(declare-fun c!13386 () Bool)

(assert (=> d!21093 (= c!13386 ((_ is ValueCellFull!921) (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!54592 () V!3019)

(assert (=> d!21093 (= (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!54592)))

(declare-fun b!83648 () Bool)

(assert (=> b!83648 (= e!54592 (get!1207 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!83649 () Bool)

(assert (=> b!83649 (= e!54592 (get!1208 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21093 c!13386) b!83648))

(assert (= (and d!21093 (not c!13386)) b!83649))

(assert (=> b!83648 m!85835))

(assert (=> b!83648 m!85615))

(declare-fun m!86765 () Bool)

(assert (=> b!83648 m!86765))

(assert (=> b!83649 m!85835))

(assert (=> b!83649 m!85615))

(declare-fun m!86767 () Bool)

(assert (=> b!83649 m!86767))

(assert (=> b!83188 d!21093))

(declare-fun d!21095 () Bool)

(declare-fun e!54593 () Bool)

(assert (=> d!21095 e!54593))

(declare-fun res!43247 () Bool)

(assert (=> d!21095 (=> (not res!43247) (not e!54593))))

(declare-fun lt!39389 () ListLongMap!1481)

(assert (=> d!21095 (= res!43247 (contains!757 lt!39389 (_1!1120 (tuple2!2221 lt!39022 lt!39020))))))

(declare-fun lt!39386 () List!1547)

(assert (=> d!21095 (= lt!39389 (ListLongMap!1482 lt!39386))))

(declare-fun lt!39387 () Unit!2445)

(declare-fun lt!39388 () Unit!2445)

(assert (=> d!21095 (= lt!39387 lt!39388)))

(assert (=> d!21095 (= (getValueByKey!138 lt!39386 (_1!1120 (tuple2!2221 lt!39022 lt!39020))) (Some!143 (_2!1120 (tuple2!2221 lt!39022 lt!39020))))))

(assert (=> d!21095 (= lt!39388 (lemmaContainsTupThenGetReturnValue!57 lt!39386 (_1!1120 (tuple2!2221 lt!39022 lt!39020)) (_2!1120 (tuple2!2221 lt!39022 lt!39020))))))

(assert (=> d!21095 (= lt!39386 (insertStrictlySorted!59 (toList!756 lt!39018) (_1!1120 (tuple2!2221 lt!39022 lt!39020)) (_2!1120 (tuple2!2221 lt!39022 lt!39020))))))

(assert (=> d!21095 (= (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020)) lt!39389)))

(declare-fun b!83650 () Bool)

(declare-fun res!43248 () Bool)

(assert (=> b!83650 (=> (not res!43248) (not e!54593))))

(assert (=> b!83650 (= res!43248 (= (getValueByKey!138 (toList!756 lt!39389) (_1!1120 (tuple2!2221 lt!39022 lt!39020))) (Some!143 (_2!1120 (tuple2!2221 lt!39022 lt!39020)))))))

(declare-fun b!83651 () Bool)

(assert (=> b!83651 (= e!54593 (contains!760 (toList!756 lt!39389) (tuple2!2221 lt!39022 lt!39020)))))

(assert (= (and d!21095 res!43247) b!83650))

(assert (= (and b!83650 res!43248) b!83651))

(declare-fun m!86769 () Bool)

(assert (=> d!21095 m!86769))

(declare-fun m!86771 () Bool)

(assert (=> d!21095 m!86771))

(declare-fun m!86773 () Bool)

(assert (=> d!21095 m!86773))

(declare-fun m!86775 () Bool)

(assert (=> d!21095 m!86775))

(declare-fun m!86777 () Bool)

(assert (=> b!83650 m!86777))

(declare-fun m!86779 () Bool)

(assert (=> b!83651 m!86779))

(assert (=> b!83188 d!21095))

(declare-fun d!21097 () Bool)

(declare-fun e!54594 () Bool)

(assert (=> d!21097 e!54594))

(declare-fun res!43249 () Bool)

(assert (=> d!21097 (=> res!43249 e!54594)))

(declare-fun lt!39390 () Bool)

(assert (=> d!21097 (= res!43249 (not lt!39390))))

(declare-fun lt!39392 () Bool)

(assert (=> d!21097 (= lt!39390 lt!39392)))

(declare-fun lt!39393 () Unit!2445)

(declare-fun e!54595 () Unit!2445)

(assert (=> d!21097 (= lt!39393 e!54595)))

(declare-fun c!13387 () Bool)

(assert (=> d!21097 (= c!13387 lt!39392)))

(assert (=> d!21097 (= lt!39392 (containsKey!142 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020))) lt!39019))))

(assert (=> d!21097 (= (contains!757 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020)) lt!39019) lt!39390)))

(declare-fun b!83652 () Bool)

(declare-fun lt!39391 () Unit!2445)

(assert (=> b!83652 (= e!54595 lt!39391)))

(assert (=> b!83652 (= lt!39391 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020))) lt!39019))))

(assert (=> b!83652 (isDefined!92 (getValueByKey!138 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020))) lt!39019))))

(declare-fun b!83653 () Bool)

(declare-fun Unit!2478 () Unit!2445)

(assert (=> b!83653 (= e!54595 Unit!2478)))

(declare-fun b!83654 () Bool)

(assert (=> b!83654 (= e!54594 (isDefined!92 (getValueByKey!138 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020))) lt!39019)))))

(assert (= (and d!21097 c!13387) b!83652))

(assert (= (and d!21097 (not c!13387)) b!83653))

(assert (= (and d!21097 (not res!43249)) b!83654))

(declare-fun m!86781 () Bool)

(assert (=> d!21097 m!86781))

(declare-fun m!86783 () Bool)

(assert (=> b!83652 m!86783))

(declare-fun m!86785 () Bool)

(assert (=> b!83652 m!86785))

(assert (=> b!83652 m!86785))

(declare-fun m!86787 () Bool)

(assert (=> b!83652 m!86787))

(assert (=> b!83654 m!86785))

(assert (=> b!83654 m!86785))

(assert (=> b!83654 m!86787))

(assert (=> b!83188 d!21097))

(declare-fun d!21099 () Bool)

(assert (=> d!21099 (not (contains!757 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020)) lt!39019))))

(declare-fun lt!39396 () Unit!2445)

(declare-fun choose!501 (ListLongMap!1481 (_ BitVec 64) V!3019 (_ BitVec 64)) Unit!2445)

(assert (=> d!21099 (= lt!39396 (choose!501 lt!39018 lt!39022 lt!39020 lt!39019))))

(declare-fun e!54598 () Bool)

(assert (=> d!21099 e!54598))

(declare-fun res!43252 () Bool)

(assert (=> d!21099 (=> (not res!43252) (not e!54598))))

(assert (=> d!21099 (= res!43252 (not (contains!757 lt!39018 lt!39019)))))

(assert (=> d!21099 (= (addStillNotContains!32 lt!39018 lt!39022 lt!39020 lt!39019) lt!39396)))

(declare-fun b!83658 () Bool)

(assert (=> b!83658 (= e!54598 (not (= lt!39022 lt!39019)))))

(assert (= (and d!21099 res!43252) b!83658))

(assert (=> d!21099 m!85885))

(assert (=> d!21099 m!85885))

(assert (=> d!21099 m!85889))

(declare-fun m!86789 () Bool)

(assert (=> d!21099 m!86789))

(declare-fun m!86791 () Bool)

(assert (=> d!21099 m!86791))

(assert (=> b!83188 d!21099))

(declare-fun d!21101 () Bool)

(declare-fun e!54599 () Bool)

(assert (=> d!21101 e!54599))

(declare-fun res!43253 () Bool)

(assert (=> d!21101 (=> (not res!43253) (not e!54599))))

(declare-fun lt!39400 () ListLongMap!1481)

(assert (=> d!21101 (= res!43253 (contains!757 lt!39400 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!39397 () List!1547)

(assert (=> d!21101 (= lt!39400 (ListLongMap!1482 lt!39397))))

(declare-fun lt!39398 () Unit!2445)

(declare-fun lt!39399 () Unit!2445)

(assert (=> d!21101 (= lt!39398 lt!39399)))

(assert (=> d!21101 (= (getValueByKey!138 lt!39397 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21101 (= lt!39399 (lemmaContainsTupThenGetReturnValue!57 lt!39397 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21101 (= lt!39397 (insertStrictlySorted!59 (toList!756 call!7808) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21101 (= (+!114 call!7808 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!39400)))

(declare-fun b!83659 () Bool)

(declare-fun res!43254 () Bool)

(assert (=> b!83659 (=> (not res!43254) (not e!54599))))

(assert (=> b!83659 (= res!43254 (= (getValueByKey!138 (toList!756 lt!39400) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!83660 () Bool)

(assert (=> b!83660 (= e!54599 (contains!760 (toList!756 lt!39400) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!21101 res!43253) b!83659))

(assert (= (and b!83659 res!43254) b!83660))

(declare-fun m!86793 () Bool)

(assert (=> d!21101 m!86793))

(declare-fun m!86795 () Bool)

(assert (=> d!21101 m!86795))

(declare-fun m!86797 () Bool)

(assert (=> d!21101 m!86797))

(declare-fun m!86799 () Bool)

(assert (=> d!21101 m!86799))

(declare-fun m!86801 () Bool)

(assert (=> b!83659 m!86801))

(declare-fun m!86803 () Bool)

(assert (=> b!83660 m!86803))

(assert (=> b!83188 d!21101))

(assert (=> b!83141 d!21041))

(declare-fun d!21103 () Bool)

(declare-fun e!54600 () Bool)

(assert (=> d!21103 e!54600))

(declare-fun res!43255 () Bool)

(assert (=> d!21103 (=> (not res!43255) (not e!54600))))

(declare-fun lt!39404 () ListLongMap!1481)

(assert (=> d!21103 (= res!43255 (contains!757 lt!39404 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun lt!39401 () List!1547)

(assert (=> d!21103 (= lt!39404 (ListLongMap!1482 lt!39401))))

(declare-fun lt!39402 () Unit!2445)

(declare-fun lt!39403 () Unit!2445)

(assert (=> d!21103 (= lt!39402 lt!39403)))

(assert (=> d!21103 (= (getValueByKey!138 lt!39401 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21103 (= lt!39403 (lemmaContainsTupThenGetReturnValue!57 lt!39401 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21103 (= lt!39401 (insertStrictlySorted!59 (toList!756 call!7761) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21103 (= (+!114 call!7761 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) lt!39404)))

(declare-fun b!83661 () Bool)

(declare-fun res!43256 () Bool)

(assert (=> b!83661 (=> (not res!43256) (not e!54600))))

(assert (=> b!83661 (= res!43256 (= (getValueByKey!138 (toList!756 lt!39404) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun b!83662 () Bool)

(assert (=> b!83662 (= e!54600 (contains!760 (toList!756 lt!39404) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(assert (= (and d!21103 res!43255) b!83661))

(assert (= (and b!83661 res!43256) b!83662))

(declare-fun m!86805 () Bool)

(assert (=> d!21103 m!86805))

(declare-fun m!86807 () Bool)

(assert (=> d!21103 m!86807))

(declare-fun m!86809 () Bool)

(assert (=> d!21103 m!86809))

(declare-fun m!86811 () Bool)

(assert (=> d!21103 m!86811))

(declare-fun m!86813 () Bool)

(assert (=> b!83661 m!86813))

(declare-fun m!86815 () Bool)

(assert (=> b!83662 m!86815))

(assert (=> b!83029 d!21103))

(declare-fun b!83663 () Bool)

(declare-fun e!54601 () ListLongMap!1481)

(declare-fun call!7871 () ListLongMap!1481)

(assert (=> b!83663 (= e!54601 call!7871)))

(declare-fun b!83664 () Bool)

(assert (=> b!83664 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(assert (=> b!83664 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2156 (_values!2300 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun lt!39408 () ListLongMap!1481)

(declare-fun e!54604 () Bool)

(assert (=> b!83664 (= e!54604 (= (apply!81 lt!39408 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!83665 () Bool)

(declare-fun e!54606 () ListLongMap!1481)

(assert (=> b!83665 (= e!54606 (ListLongMap!1482 Nil!1544))))

(declare-fun e!54605 () Bool)

(declare-fun b!83666 () Bool)

(assert (=> b!83666 (= e!54605 (= lt!39408 (getCurrentListMapNoExtraKeys!78 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!83668 () Bool)

(declare-fun e!54603 () Bool)

(assert (=> b!83668 (= e!54603 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!83668 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!83669 () Bool)

(declare-fun e!54602 () Bool)

(assert (=> b!83669 (= e!54602 e!54604)))

(assert (=> b!83669 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun res!43260 () Bool)

(assert (=> b!83669 (= res!43260 (contains!757 lt!39408 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!83669 (=> (not res!43260) (not e!54604))))

(declare-fun b!83670 () Bool)

(assert (=> b!83670 (= e!54602 e!54605)))

(declare-fun c!13390 () Bool)

(assert (=> b!83670 (= c!13390 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!83671 () Bool)

(assert (=> b!83671 (= e!54606 e!54601)))

(declare-fun c!13389 () Bool)

(assert (=> b!83671 (= c!13389 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!83667 () Bool)

(declare-fun res!43259 () Bool)

(declare-fun e!54607 () Bool)

(assert (=> b!83667 (=> (not res!43259) (not e!54607))))

(assert (=> b!83667 (= res!43259 (not (contains!757 lt!39408 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!21105 () Bool)

(assert (=> d!21105 e!54607))

(declare-fun res!43258 () Bool)

(assert (=> d!21105 (=> (not res!43258) (not e!54607))))

(assert (=> d!21105 (= res!43258 (not (contains!757 lt!39408 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21105 (= lt!39408 e!54606)))

(declare-fun c!13388 () Bool)

(assert (=> d!21105 (= c!13388 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(assert (=> d!21105 (validMask!0 (mask!6335 (v!2632 (underlying!290 thiss!992))))))

(assert (=> d!21105 (= (getCurrentListMapNoExtraKeys!78 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))) lt!39408)))

(declare-fun b!83672 () Bool)

(declare-fun lt!39411 () Unit!2445)

(declare-fun lt!39410 () Unit!2445)

(assert (=> b!83672 (= lt!39411 lt!39410)))

(declare-fun lt!39407 () V!3019)

(declare-fun lt!39406 () (_ BitVec 64))

(declare-fun lt!39409 () (_ BitVec 64))

(declare-fun lt!39405 () ListLongMap!1481)

(assert (=> b!83672 (not (contains!757 (+!114 lt!39405 (tuple2!2221 lt!39409 lt!39407)) lt!39406))))

(assert (=> b!83672 (= lt!39410 (addStillNotContains!32 lt!39405 lt!39409 lt!39407 lt!39406))))

(assert (=> b!83672 (= lt!39406 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!83672 (= lt!39407 (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!83672 (= lt!39409 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!83672 (= lt!39405 call!7871)))

(assert (=> b!83672 (= e!54601 (+!114 call!7871 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!83673 () Bool)

(assert (=> b!83673 (= e!54607 e!54602)))

(declare-fun c!13391 () Bool)

(assert (=> b!83673 (= c!13391 e!54603)))

(declare-fun res!43257 () Bool)

(assert (=> b!83673 (=> (not res!43257) (not e!54603))))

(assert (=> b!83673 (= res!43257 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun bm!7868 () Bool)

(assert (=> bm!7868 (= call!7871 (getCurrentListMapNoExtraKeys!78 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun b!83674 () Bool)

(assert (=> b!83674 (= e!54605 (isEmpty!337 lt!39408))))

(assert (= (and d!21105 c!13388) b!83665))

(assert (= (and d!21105 (not c!13388)) b!83671))

(assert (= (and b!83671 c!13389) b!83672))

(assert (= (and b!83671 (not c!13389)) b!83663))

(assert (= (or b!83672 b!83663) bm!7868))

(assert (= (and d!21105 res!43258) b!83667))

(assert (= (and b!83667 res!43259) b!83673))

(assert (= (and b!83673 res!43257) b!83668))

(assert (= (and b!83673 c!13391) b!83669))

(assert (= (and b!83673 (not c!13391)) b!83670))

(assert (= (and b!83669 res!43260) b!83664))

(assert (= (and b!83670 c!13390) b!83666))

(assert (= (and b!83670 (not c!13390)) b!83674))

(declare-fun b_lambda!3717 () Bool)

(assert (=> (not b_lambda!3717) (not b!83664)))

(assert (=> b!83664 t!5248))

(declare-fun b_and!5077 () Bool)

(assert (= b_and!5073 (and (=> t!5248 result!2889) b_and!5077)))

(assert (=> b!83664 t!5250))

(declare-fun b_and!5079 () Bool)

(assert (= b_and!5075 (and (=> t!5250 result!2893) b_and!5079)))

(declare-fun b_lambda!3719 () Bool)

(assert (=> (not b_lambda!3719) (not b!83672)))

(assert (=> b!83672 t!5248))

(declare-fun b_and!5081 () Bool)

(assert (= b_and!5077 (and (=> t!5248 result!2889) b_and!5081)))

(assert (=> b!83672 t!5250))

(declare-fun b_and!5083 () Bool)

(assert (= b_and!5079 (and (=> t!5250 result!2893) b_and!5083)))

(declare-fun m!86817 () Bool)

(assert (=> b!83666 m!86817))

(assert (=> bm!7868 m!86817))

(declare-fun m!86819 () Bool)

(assert (=> b!83664 m!86819))

(declare-fun m!86821 () Bool)

(assert (=> b!83664 m!86821))

(assert (=> b!83664 m!86819))

(assert (=> b!83664 m!85615))

(declare-fun m!86823 () Bool)

(assert (=> b!83664 m!86823))

(assert (=> b!83664 m!86821))

(declare-fun m!86825 () Bool)

(assert (=> b!83664 m!86825))

(assert (=> b!83664 m!85615))

(assert (=> b!83668 m!86821))

(assert (=> b!83668 m!86821))

(declare-fun m!86827 () Bool)

(assert (=> b!83668 m!86827))

(assert (=> b!83671 m!86821))

(assert (=> b!83671 m!86821))

(assert (=> b!83671 m!86827))

(assert (=> b!83672 m!86819))

(declare-fun m!86829 () Bool)

(assert (=> b!83672 m!86829))

(assert (=> b!83672 m!86821))

(declare-fun m!86831 () Bool)

(assert (=> b!83672 m!86831))

(assert (=> b!83672 m!86819))

(assert (=> b!83672 m!85615))

(assert (=> b!83672 m!86823))

(declare-fun m!86833 () Bool)

(assert (=> b!83672 m!86833))

(assert (=> b!83672 m!85615))

(assert (=> b!83672 m!86831))

(declare-fun m!86835 () Bool)

(assert (=> b!83672 m!86835))

(declare-fun m!86837 () Bool)

(assert (=> d!21105 m!86837))

(assert (=> d!21105 m!85601))

(declare-fun m!86839 () Bool)

(assert (=> b!83674 m!86839))

(assert (=> b!83669 m!86821))

(assert (=> b!83669 m!86821))

(declare-fun m!86841 () Bool)

(assert (=> b!83669 m!86841))

(declare-fun m!86843 () Bool)

(assert (=> b!83667 m!86843))

(assert (=> bm!7805 d!21105))

(declare-fun d!21107 () Bool)

(declare-fun res!43261 () Bool)

(declare-fun e!54608 () Bool)

(assert (=> d!21107 (=> res!43261 e!54608)))

(assert (=> d!21107 (= res!43261 (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> d!21107 (= (arrayContainsKey!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!54608)))

(declare-fun b!83675 () Bool)

(declare-fun e!54609 () Bool)

(assert (=> b!83675 (= e!54608 e!54609)))

(declare-fun res!43262 () Bool)

(assert (=> b!83675 (=> (not res!43262) (not e!54609))))

(assert (=> b!83675 (= res!43262 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!83676 () Bool)

(assert (=> b!83676 (= e!54609 (arrayContainsKey!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!21107 (not res!43261)) b!83675))

(assert (= (and b!83675 res!43262) b!83676))

(assert (=> d!21107 m!86821))

(assert (=> b!83676 m!85591))

(declare-fun m!86845 () Bool)

(assert (=> b!83676 m!86845))

(assert (=> b!83062 d!21107))

(declare-fun d!21109 () Bool)

(assert (=> d!21109 (= (inRange!0 (ite c!13219 (ite c!13222 (index!3145 lt!38885) (ite c!13221 (index!3144 lt!38907) (index!3147 lt!38907))) (ite c!13225 (index!3145 lt!38884) (ite c!13213 (index!3144 lt!38888) (index!3147 lt!38888)))) (mask!6335 newMap!16)) (and (bvsge (ite c!13219 (ite c!13222 (index!3145 lt!38885) (ite c!13221 (index!3144 lt!38907) (index!3147 lt!38907))) (ite c!13225 (index!3145 lt!38884) (ite c!13213 (index!3144 lt!38888) (index!3147 lt!38888)))) #b00000000000000000000000000000000) (bvslt (ite c!13219 (ite c!13222 (index!3145 lt!38885) (ite c!13221 (index!3144 lt!38907) (index!3147 lt!38907))) (ite c!13225 (index!3145 lt!38884) (ite c!13213 (index!3144 lt!38888) (index!3147 lt!38888)))) (bvadd (mask!6335 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7771 d!21109))

(assert (=> b!83144 d!21041))

(declare-fun d!21111 () Bool)

(assert (=> d!21111 (= (apply!81 lt!38974 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1209 (getValueByKey!138 (toList!756 lt!38974) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3517 () Bool)

(assert (= bs!3517 d!21111))

(assert (=> bs!3517 m!86589))

(assert (=> bs!3517 m!86589))

(declare-fun m!86847 () Bool)

(assert (=> bs!3517 m!86847))

(assert (=> b!83127 d!21111))

(assert (=> b!83081 d!21031))

(assert (=> bm!7765 d!20871))

(declare-fun d!21113 () Bool)

(assert (=> d!21113 (= (apply!81 lt!38974 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1209 (getValueByKey!138 (toList!756 lt!38974) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3518 () Bool)

(assert (= bs!3518 d!21113))

(assert (=> bs!3518 m!85781))

(assert (=> bs!3518 m!86581))

(assert (=> bs!3518 m!86581))

(declare-fun m!86849 () Bool)

(assert (=> bs!3518 m!86849))

(assert (=> b!83139 d!21113))

(assert (=> b!83139 d!21093))

(assert (=> d!20861 d!20865))

(declare-fun d!21115 () Bool)

(assert (=> d!21115 (not (arrayContainsKey!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!21115 true))

(declare-fun _$68!70 () Unit!2445)

(assert (=> d!21115 (= (choose!68 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545)) _$68!70)))

(declare-fun bs!3519 () Bool)

(assert (= bs!3519 d!21115))

(assert (=> bs!3519 m!85591))

(assert (=> bs!3519 m!85631))

(assert (=> d!20861 d!21115))

(declare-fun b!83678 () Bool)

(declare-fun e!54610 () Option!144)

(declare-fun e!54611 () Option!144)

(assert (=> b!83678 (= e!54610 e!54611)))

(declare-fun c!13393 () Bool)

(assert (=> b!83678 (= c!13393 (and ((_ is Cons!1543) (toList!756 lt!39029)) (not (= (_1!1120 (h!2133 (toList!756 lt!39029))) (_1!1120 lt!38750)))))))

(declare-fun b!83677 () Bool)

(assert (=> b!83677 (= e!54610 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39029)))))))

(declare-fun b!83680 () Bool)

(assert (=> b!83680 (= e!54611 None!142)))

(declare-fun d!21117 () Bool)

(declare-fun c!13392 () Bool)

(assert (=> d!21117 (= c!13392 (and ((_ is Cons!1543) (toList!756 lt!39029)) (= (_1!1120 (h!2133 (toList!756 lt!39029))) (_1!1120 lt!38750))))))

(assert (=> d!21117 (= (getValueByKey!138 (toList!756 lt!39029) (_1!1120 lt!38750)) e!54610)))

(declare-fun b!83679 () Bool)

(assert (=> b!83679 (= e!54611 (getValueByKey!138 (t!5251 (toList!756 lt!39029)) (_1!1120 lt!38750)))))

(assert (= (and d!21117 c!13392) b!83677))

(assert (= (and d!21117 (not c!13392)) b!83678))

(assert (= (and b!83678 c!13393) b!83679))

(assert (= (and b!83678 (not c!13393)) b!83680))

(declare-fun m!86851 () Bool)

(assert (=> b!83679 m!86851))

(assert (=> b!83191 d!21117))

(declare-fun b!83689 () Bool)

(declare-fun e!54620 () Bool)

(declare-fun call!7874 () Bool)

(assert (=> b!83689 (= e!54620 call!7874)))

(declare-fun bm!7871 () Bool)

(assert (=> bm!7871 (= call!7874 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3985 newMap!16) (mask!6335 newMap!16)))))

(declare-fun b!83690 () Bool)

(declare-fun e!54619 () Bool)

(assert (=> b!83690 (= e!54619 call!7874)))

(declare-fun b!83692 () Bool)

(assert (=> b!83692 (= e!54619 e!54620)))

(declare-fun lt!39418 () (_ BitVec 64))

(assert (=> b!83692 (= lt!39418 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39419 () Unit!2445)

(assert (=> b!83692 (= lt!39419 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3985 newMap!16) lt!39418 #b00000000000000000000000000000000))))

(assert (=> b!83692 (arrayContainsKey!0 (_keys!3985 newMap!16) lt!39418 #b00000000000000000000000000000000)))

(declare-fun lt!39420 () Unit!2445)

(assert (=> b!83692 (= lt!39420 lt!39419)))

(declare-fun res!43268 () Bool)

(assert (=> b!83692 (= res!43268 (= (seekEntryOrOpen!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000) (_keys!3985 newMap!16) (mask!6335 newMap!16)) (Found!252 #b00000000000000000000000000000000)))))

(assert (=> b!83692 (=> (not res!43268) (not e!54620))))

(declare-fun b!83691 () Bool)

(declare-fun e!54618 () Bool)

(assert (=> b!83691 (= e!54618 e!54619)))

(declare-fun c!13396 () Bool)

(assert (=> b!83691 (= c!13396 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!21119 () Bool)

(declare-fun res!43267 () Bool)

(assert (=> d!21119 (=> res!43267 e!54618)))

(assert (=> d!21119 (= res!43267 (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!21119 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3985 newMap!16) (mask!6335 newMap!16)) e!54618)))

(assert (= (and d!21119 (not res!43267)) b!83691))

(assert (= (and b!83691 c!13396) b!83692))

(assert (= (and b!83691 (not c!13396)) b!83690))

(assert (= (and b!83692 res!43268) b!83689))

(assert (= (or b!83689 b!83690) bm!7871))

(declare-fun m!86853 () Bool)

(assert (=> bm!7871 m!86853))

(assert (=> b!83692 m!86049))

(declare-fun m!86855 () Bool)

(assert (=> b!83692 m!86855))

(declare-fun m!86857 () Bool)

(assert (=> b!83692 m!86857))

(assert (=> b!83692 m!86049))

(declare-fun m!86859 () Bool)

(assert (=> b!83692 m!86859))

(assert (=> b!83691 m!86049))

(assert (=> b!83691 m!86049))

(assert (=> b!83691 m!86051))

(assert (=> b!82920 d!21119))

(declare-fun b!83704 () Bool)

(declare-fun e!54623 () Bool)

(assert (=> b!83704 (= e!54623 (and (bvsge (extraKeys!2160 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2160 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!424 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!83701 () Bool)

(declare-fun res!43280 () Bool)

(assert (=> b!83701 (=> (not res!43280) (not e!54623))))

(assert (=> b!83701 (= res!43280 (and (= (size!2156 (_values!2300 newMap!16)) (bvadd (mask!6335 newMap!16) #b00000000000000000000000000000001)) (= (size!2155 (_keys!3985 newMap!16)) (size!2156 (_values!2300 newMap!16))) (bvsge (_size!424 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!424 newMap!16) (bvadd (mask!6335 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun d!21121 () Bool)

(declare-fun res!43279 () Bool)

(assert (=> d!21121 (=> (not res!43279) (not e!54623))))

(assert (=> d!21121 (= res!43279 (validMask!0 (mask!6335 newMap!16)))))

(assert (=> d!21121 (= (simpleValid!56 newMap!16) e!54623)))

(declare-fun b!83702 () Bool)

(declare-fun res!43277 () Bool)

(assert (=> b!83702 (=> (not res!43277) (not e!54623))))

(declare-fun size!2159 (LongMapFixedSize!750) (_ BitVec 32))

(assert (=> b!83702 (= res!43277 (bvsge (size!2159 newMap!16) (_size!424 newMap!16)))))

(declare-fun b!83703 () Bool)

(declare-fun res!43278 () Bool)

(assert (=> b!83703 (=> (not res!43278) (not e!54623))))

(assert (=> b!83703 (= res!43278 (= (size!2159 newMap!16) (bvadd (_size!424 newMap!16) (bvsdiv (bvadd (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!21121 res!43279) b!83701))

(assert (= (and b!83701 res!43280) b!83702))

(assert (= (and b!83702 res!43277) b!83703))

(assert (= (and b!83703 res!43278) b!83704))

(assert (=> d!21121 m!86023))

(declare-fun m!86861 () Bool)

(assert (=> b!83702 m!86861))

(assert (=> b!83703 m!86861))

(assert (=> d!20851 d!21121))

(declare-fun b!83706 () Bool)

(declare-fun e!54624 () Option!144)

(declare-fun e!54625 () Option!144)

(assert (=> b!83706 (= e!54624 e!54625)))

(declare-fun c!13398 () Bool)

(assert (=> b!83706 (= c!13398 (and ((_ is Cons!1543) (toList!756 lt!39033)) (not (= (_1!1120 (h!2133 (toList!756 lt!39033))) (_1!1120 lt!38760)))))))

(declare-fun b!83705 () Bool)

(assert (=> b!83705 (= e!54624 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39033)))))))

(declare-fun b!83708 () Bool)

(assert (=> b!83708 (= e!54625 None!142)))

(declare-fun d!21123 () Bool)

(declare-fun c!13397 () Bool)

(assert (=> d!21123 (= c!13397 (and ((_ is Cons!1543) (toList!756 lt!39033)) (= (_1!1120 (h!2133 (toList!756 lt!39033))) (_1!1120 lt!38760))))))

(assert (=> d!21123 (= (getValueByKey!138 (toList!756 lt!39033) (_1!1120 lt!38760)) e!54624)))

(declare-fun b!83707 () Bool)

(assert (=> b!83707 (= e!54625 (getValueByKey!138 (t!5251 (toList!756 lt!39033)) (_1!1120 lt!38760)))))

(assert (= (and d!21123 c!13397) b!83705))

(assert (= (and d!21123 (not c!13397)) b!83706))

(assert (= (and b!83706 c!13398) b!83707))

(assert (= (and b!83706 (not c!13398)) b!83708))

(declare-fun m!86863 () Bool)

(assert (=> b!83707 m!86863))

(assert (=> b!83193 d!21123))

(declare-fun d!21125 () Bool)

(declare-fun lt!39421 () Bool)

(assert (=> d!21125 (= lt!39421 (select (content!87 (toList!756 lt!38999)) lt!38750))))

(declare-fun e!54626 () Bool)

(assert (=> d!21125 (= lt!39421 e!54626)))

(declare-fun res!43281 () Bool)

(assert (=> d!21125 (=> (not res!43281) (not e!54626))))

(assert (=> d!21125 (= res!43281 ((_ is Cons!1543) (toList!756 lt!38999)))))

(assert (=> d!21125 (= (contains!760 (toList!756 lt!38999) lt!38750) lt!39421)))

(declare-fun b!83709 () Bool)

(declare-fun e!54627 () Bool)

(assert (=> b!83709 (= e!54626 e!54627)))

(declare-fun res!43282 () Bool)

(assert (=> b!83709 (=> res!43282 e!54627)))

(assert (=> b!83709 (= res!43282 (= (h!2133 (toList!756 lt!38999)) lt!38750))))

(declare-fun b!83710 () Bool)

(assert (=> b!83710 (= e!54627 (contains!760 (t!5251 (toList!756 lt!38999)) lt!38750))))

(assert (= (and d!21125 res!43281) b!83709))

(assert (= (and b!83709 (not res!43282)) b!83710))

(declare-fun m!86865 () Bool)

(assert (=> d!21125 m!86865))

(declare-fun m!86867 () Bool)

(assert (=> d!21125 m!86867))

(declare-fun m!86869 () Bool)

(assert (=> b!83710 m!86869))

(assert (=> b!83152 d!21125))

(assert (=> b!83184 d!21041))

(declare-fun b!83712 () Bool)

(declare-fun e!54628 () Option!144)

(declare-fun e!54629 () Option!144)

(assert (=> b!83712 (= e!54628 e!54629)))

(declare-fun c!13400 () Bool)

(assert (=> b!83712 (= c!13400 (and ((_ is Cons!1543) (toList!756 lt!39037)) (not (= (_1!1120 (h!2133 (toList!756 lt!39037))) (_1!1120 lt!38760)))))))

(declare-fun b!83711 () Bool)

(assert (=> b!83711 (= e!54628 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39037)))))))

(declare-fun b!83714 () Bool)

(assert (=> b!83714 (= e!54629 None!142)))

(declare-fun d!21127 () Bool)

(declare-fun c!13399 () Bool)

(assert (=> d!21127 (= c!13399 (and ((_ is Cons!1543) (toList!756 lt!39037)) (= (_1!1120 (h!2133 (toList!756 lt!39037))) (_1!1120 lt!38760))))))

(assert (=> d!21127 (= (getValueByKey!138 (toList!756 lt!39037) (_1!1120 lt!38760)) e!54628)))

(declare-fun b!83713 () Bool)

(assert (=> b!83713 (= e!54629 (getValueByKey!138 (t!5251 (toList!756 lt!39037)) (_1!1120 lt!38760)))))

(assert (= (and d!21127 c!13399) b!83711))

(assert (= (and d!21127 (not c!13399)) b!83712))

(assert (= (and b!83712 c!13400) b!83713))

(assert (= (and b!83712 (not c!13400)) b!83714))

(declare-fun m!86871 () Bool)

(assert (=> b!83713 m!86871))

(assert (=> b!83195 d!21127))

(declare-fun d!21129 () Bool)

(declare-fun lt!39422 () Bool)

(assert (=> d!21129 (= lt!39422 (select (content!87 (toList!756 lt!39003)) lt!38750))))

(declare-fun e!54630 () Bool)

(assert (=> d!21129 (= lt!39422 e!54630)))

(declare-fun res!43283 () Bool)

(assert (=> d!21129 (=> (not res!43283) (not e!54630))))

(assert (=> d!21129 (= res!43283 ((_ is Cons!1543) (toList!756 lt!39003)))))

(assert (=> d!21129 (= (contains!760 (toList!756 lt!39003) lt!38750) lt!39422)))

(declare-fun b!83715 () Bool)

(declare-fun e!54631 () Bool)

(assert (=> b!83715 (= e!54630 e!54631)))

(declare-fun res!43284 () Bool)

(assert (=> b!83715 (=> res!43284 e!54631)))

(assert (=> b!83715 (= res!43284 (= (h!2133 (toList!756 lt!39003)) lt!38750))))

(declare-fun b!83716 () Bool)

(assert (=> b!83716 (= e!54631 (contains!760 (t!5251 (toList!756 lt!39003)) lt!38750))))

(assert (= (and d!21129 res!43283) b!83715))

(assert (= (and b!83715 (not res!43284)) b!83716))

(declare-fun m!86873 () Bool)

(assert (=> d!21129 m!86873))

(declare-fun m!86875 () Bool)

(assert (=> d!21129 m!86875))

(declare-fun m!86877 () Bool)

(assert (=> b!83716 m!86877))

(assert (=> b!83154 d!21129))

(declare-fun d!21131 () Bool)

(declare-fun res!43285 () Bool)

(declare-fun e!54632 () Bool)

(assert (=> d!21131 (=> (not res!43285) (not e!54632))))

(assert (=> d!21131 (= res!43285 (simpleValid!56 (_2!1121 lt!38897)))))

(assert (=> d!21131 (= (valid!325 (_2!1121 lt!38897)) e!54632)))

(declare-fun b!83717 () Bool)

(declare-fun res!43286 () Bool)

(assert (=> b!83717 (=> (not res!43286) (not e!54632))))

(assert (=> b!83717 (= res!43286 (= (arrayCountValidKeys!0 (_keys!3985 (_2!1121 lt!38897)) #b00000000000000000000000000000000 (size!2155 (_keys!3985 (_2!1121 lt!38897)))) (_size!424 (_2!1121 lt!38897))))))

(declare-fun b!83718 () Bool)

(declare-fun res!43287 () Bool)

(assert (=> b!83718 (=> (not res!43287) (not e!54632))))

(assert (=> b!83718 (= res!43287 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3985 (_2!1121 lt!38897)) (mask!6335 (_2!1121 lt!38897))))))

(declare-fun b!83719 () Bool)

(assert (=> b!83719 (= e!54632 (arrayNoDuplicates!0 (_keys!3985 (_2!1121 lt!38897)) #b00000000000000000000000000000000 Nil!1545))))

(assert (= (and d!21131 res!43285) b!83717))

(assert (= (and b!83717 res!43286) b!83718))

(assert (= (and b!83718 res!43287) b!83719))

(declare-fun m!86879 () Bool)

(assert (=> d!21131 m!86879))

(declare-fun m!86881 () Bool)

(assert (=> b!83717 m!86881))

(declare-fun m!86883 () Bool)

(assert (=> b!83718 m!86883))

(declare-fun m!86885 () Bool)

(assert (=> b!83719 m!86885))

(assert (=> d!20859 d!21131))

(assert (=> d!20859 d!20851))

(declare-fun d!21133 () Bool)

(declare-fun e!54633 () Bool)

(assert (=> d!21133 e!54633))

(declare-fun res!43288 () Bool)

(assert (=> d!21133 (=> (not res!43288) (not e!54633))))

(declare-fun lt!39426 () ListLongMap!1481)

(assert (=> d!21133 (= res!43288 (contains!757 lt!39426 (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun lt!39423 () List!1547)

(assert (=> d!21133 (= lt!39426 (ListLongMap!1482 lt!39423))))

(declare-fun lt!39424 () Unit!2445)

(declare-fun lt!39425 () Unit!2445)

(assert (=> d!21133 (= lt!39424 lt!39425)))

(assert (=> d!21133 (= (getValueByKey!138 lt!39423 (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) (Some!143 (_2!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21133 (= lt!39425 (lemmaContainsTupThenGetReturnValue!57 lt!39423 (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (_2!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21133 (= lt!39423 (insertStrictlySorted!59 (toList!756 e!54230) (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (_2!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21133 (= (+!114 e!54230 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) lt!39426)))

(declare-fun b!83720 () Bool)

(declare-fun res!43289 () Bool)

(assert (=> b!83720 (=> (not res!43289) (not e!54633))))

(assert (=> b!83720 (= res!43289 (= (getValueByKey!138 (toList!756 lt!39426) (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) (Some!143 (_2!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(declare-fun b!83721 () Bool)

(assert (=> b!83721 (= e!54633 (contains!760 (toList!756 lt!39426) (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (= (and d!21133 res!43288) b!83720))

(assert (= (and b!83720 res!43289) b!83721))

(declare-fun m!86887 () Bool)

(assert (=> d!21133 m!86887))

(declare-fun m!86889 () Bool)

(assert (=> d!21133 m!86889))

(declare-fun m!86891 () Bool)

(assert (=> d!21133 m!86891))

(declare-fun m!86893 () Bool)

(assert (=> d!21133 m!86893))

(declare-fun m!86895 () Bool)

(assert (=> b!83720 m!86895))

(declare-fun m!86897 () Bool)

(assert (=> b!83721 m!86897))

(assert (=> bm!7776 d!21133))

(assert (=> b!83055 d!21037))

(declare-fun d!21135 () Bool)

(declare-fun e!54634 () Bool)

(assert (=> d!21135 e!54634))

(declare-fun res!43290 () Bool)

(assert (=> d!21135 (=> res!43290 e!54634)))

(declare-fun lt!39427 () Bool)

(assert (=> d!21135 (= res!43290 (not lt!39427))))

(declare-fun lt!39429 () Bool)

(assert (=> d!21135 (= lt!39427 lt!39429)))

(declare-fun lt!39430 () Unit!2445)

(declare-fun e!54635 () Unit!2445)

(assert (=> d!21135 (= lt!39430 e!54635)))

(declare-fun c!13401 () Bool)

(assert (=> d!21135 (= c!13401 lt!39429)))

(assert (=> d!21135 (= lt!39429 (containsKey!142 (toList!756 lt!39037) (_1!1120 lt!38760)))))

(assert (=> d!21135 (= (contains!757 lt!39037 (_1!1120 lt!38760)) lt!39427)))

(declare-fun b!83722 () Bool)

(declare-fun lt!39428 () Unit!2445)

(assert (=> b!83722 (= e!54635 lt!39428)))

(assert (=> b!83722 (= lt!39428 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39037) (_1!1120 lt!38760)))))

(assert (=> b!83722 (isDefined!92 (getValueByKey!138 (toList!756 lt!39037) (_1!1120 lt!38760)))))

(declare-fun b!83723 () Bool)

(declare-fun Unit!2479 () Unit!2445)

(assert (=> b!83723 (= e!54635 Unit!2479)))

(declare-fun b!83724 () Bool)

(assert (=> b!83724 (= e!54634 (isDefined!92 (getValueByKey!138 (toList!756 lt!39037) (_1!1120 lt!38760))))))

(assert (= (and d!21135 c!13401) b!83722))

(assert (= (and d!21135 (not c!13401)) b!83723))

(assert (= (and d!21135 (not res!43290)) b!83724))

(declare-fun m!86899 () Bool)

(assert (=> d!21135 m!86899))

(declare-fun m!86901 () Bool)

(assert (=> b!83722 m!86901))

(assert (=> b!83722 m!85941))

(assert (=> b!83722 m!85941))

(declare-fun m!86903 () Bool)

(assert (=> b!83722 m!86903))

(assert (=> b!83724 m!85941))

(assert (=> b!83724 m!85941))

(assert (=> b!83724 m!86903))

(assert (=> d!20893 d!21135))

(declare-fun b!83726 () Bool)

(declare-fun e!54636 () Option!144)

(declare-fun e!54637 () Option!144)

(assert (=> b!83726 (= e!54636 e!54637)))

(declare-fun c!13403 () Bool)

(assert (=> b!83726 (= c!13403 (and ((_ is Cons!1543) lt!39034) (not (= (_1!1120 (h!2133 lt!39034)) (_1!1120 lt!38760)))))))

(declare-fun b!83725 () Bool)

(assert (=> b!83725 (= e!54636 (Some!143 (_2!1120 (h!2133 lt!39034))))))

(declare-fun b!83728 () Bool)

(assert (=> b!83728 (= e!54637 None!142)))

(declare-fun d!21137 () Bool)

(declare-fun c!13402 () Bool)

(assert (=> d!21137 (= c!13402 (and ((_ is Cons!1543) lt!39034) (= (_1!1120 (h!2133 lt!39034)) (_1!1120 lt!38760))))))

(assert (=> d!21137 (= (getValueByKey!138 lt!39034 (_1!1120 lt!38760)) e!54636)))

(declare-fun b!83727 () Bool)

(assert (=> b!83727 (= e!54637 (getValueByKey!138 (t!5251 lt!39034) (_1!1120 lt!38760)))))

(assert (= (and d!21137 c!13402) b!83725))

(assert (= (and d!21137 (not c!13402)) b!83726))

(assert (= (and b!83726 c!13403) b!83727))

(assert (= (and b!83726 (not c!13403)) b!83728))

(declare-fun m!86905 () Bool)

(assert (=> b!83727 m!86905))

(assert (=> d!20893 d!21137))

(declare-fun d!21139 () Bool)

(assert (=> d!21139 (= (getValueByKey!138 lt!39034 (_1!1120 lt!38760)) (Some!143 (_2!1120 lt!38760)))))

(declare-fun lt!39431 () Unit!2445)

(assert (=> d!21139 (= lt!39431 (choose!495 lt!39034 (_1!1120 lt!38760) (_2!1120 lt!38760)))))

(declare-fun e!54638 () Bool)

(assert (=> d!21139 e!54638))

(declare-fun res!43291 () Bool)

(assert (=> d!21139 (=> (not res!43291) (not e!54638))))

(assert (=> d!21139 (= res!43291 (isStrictlySorted!292 lt!39034))))

(assert (=> d!21139 (= (lemmaContainsTupThenGetReturnValue!57 lt!39034 (_1!1120 lt!38760) (_2!1120 lt!38760)) lt!39431)))

(declare-fun b!83729 () Bool)

(declare-fun res!43292 () Bool)

(assert (=> b!83729 (=> (not res!43292) (not e!54638))))

(assert (=> b!83729 (= res!43292 (containsKey!142 lt!39034 (_1!1120 lt!38760)))))

(declare-fun b!83730 () Bool)

(assert (=> b!83730 (= e!54638 (contains!760 lt!39034 (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))))))

(assert (= (and d!21139 res!43291) b!83729))

(assert (= (and b!83729 res!43292) b!83730))

(assert (=> d!21139 m!85935))

(declare-fun m!86907 () Bool)

(assert (=> d!21139 m!86907))

(declare-fun m!86909 () Bool)

(assert (=> d!21139 m!86909))

(declare-fun m!86911 () Bool)

(assert (=> b!83729 m!86911))

(declare-fun m!86913 () Bool)

(assert (=> b!83730 m!86913))

(assert (=> d!20893 d!21139))

(declare-fun bm!7872 () Bool)

(declare-fun call!7876 () List!1547)

(declare-fun call!7875 () List!1547)

(assert (=> bm!7872 (= call!7876 call!7875)))

(declare-fun b!83731 () Bool)

(declare-fun e!54642 () List!1547)

(assert (=> b!83731 (= e!54642 call!7876)))

(declare-fun b!83732 () Bool)

(declare-fun e!54641 () List!1547)

(declare-fun call!7877 () List!1547)

(assert (=> b!83732 (= e!54641 call!7877)))

(declare-fun b!83733 () Bool)

(declare-fun e!54640 () List!1547)

(assert (=> b!83733 (= e!54640 (insertStrictlySorted!59 (t!5251 (toList!756 lt!38755)) (_1!1120 lt!38760) (_2!1120 lt!38760)))))

(declare-fun b!83734 () Bool)

(assert (=> b!83734 (= e!54641 call!7877)))

(declare-fun b!83735 () Bool)

(declare-fun res!43293 () Bool)

(declare-fun e!54643 () Bool)

(assert (=> b!83735 (=> (not res!43293) (not e!54643))))

(declare-fun lt!39432 () List!1547)

(assert (=> b!83735 (= res!43293 (containsKey!142 lt!39432 (_1!1120 lt!38760)))))

(declare-fun d!21141 () Bool)

(assert (=> d!21141 e!54643))

(declare-fun res!43294 () Bool)

(assert (=> d!21141 (=> (not res!43294) (not e!54643))))

(assert (=> d!21141 (= res!43294 (isStrictlySorted!292 lt!39432))))

(declare-fun e!54639 () List!1547)

(assert (=> d!21141 (= lt!39432 e!54639)))

(declare-fun c!13405 () Bool)

(assert (=> d!21141 (= c!13405 (and ((_ is Cons!1543) (toList!756 lt!38755)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38755))) (_1!1120 lt!38760))))))

(assert (=> d!21141 (isStrictlySorted!292 (toList!756 lt!38755))))

(assert (=> d!21141 (= (insertStrictlySorted!59 (toList!756 lt!38755) (_1!1120 lt!38760) (_2!1120 lt!38760)) lt!39432)))

(declare-fun b!83736 () Bool)

(assert (=> b!83736 (= e!54643 (contains!760 lt!39432 (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))))))

(declare-fun b!83737 () Bool)

(assert (=> b!83737 (= e!54639 e!54642)))

(declare-fun c!13404 () Bool)

(assert (=> b!83737 (= c!13404 (and ((_ is Cons!1543) (toList!756 lt!38755)) (= (_1!1120 (h!2133 (toList!756 lt!38755))) (_1!1120 lt!38760))))))

(declare-fun b!83738 () Bool)

(declare-fun c!13407 () Bool)

(assert (=> b!83738 (= e!54640 (ite c!13404 (t!5251 (toList!756 lt!38755)) (ite c!13407 (Cons!1543 (h!2133 (toList!756 lt!38755)) (t!5251 (toList!756 lt!38755))) Nil!1544)))))

(declare-fun b!83739 () Bool)

(assert (=> b!83739 (= c!13407 (and ((_ is Cons!1543) (toList!756 lt!38755)) (bvsgt (_1!1120 (h!2133 (toList!756 lt!38755))) (_1!1120 lt!38760))))))

(assert (=> b!83739 (= e!54642 e!54641)))

(declare-fun bm!7873 () Bool)

(assert (=> bm!7873 (= call!7875 ($colon$colon!70 e!54640 (ite c!13405 (h!2133 (toList!756 lt!38755)) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760)))))))

(declare-fun c!13406 () Bool)

(assert (=> bm!7873 (= c!13406 c!13405)))

(declare-fun b!83740 () Bool)

(assert (=> b!83740 (= e!54639 call!7875)))

(declare-fun bm!7874 () Bool)

(assert (=> bm!7874 (= call!7877 call!7876)))

(assert (= (and d!21141 c!13405) b!83740))

(assert (= (and d!21141 (not c!13405)) b!83737))

(assert (= (and b!83737 c!13404) b!83731))

(assert (= (and b!83737 (not c!13404)) b!83739))

(assert (= (and b!83739 c!13407) b!83734))

(assert (= (and b!83739 (not c!13407)) b!83732))

(assert (= (or b!83734 b!83732) bm!7874))

(assert (= (or b!83731 bm!7874) bm!7872))

(assert (= (or b!83740 bm!7872) bm!7873))

(assert (= (and bm!7873 c!13406) b!83733))

(assert (= (and bm!7873 (not c!13406)) b!83738))

(assert (= (and d!21141 res!43294) b!83735))

(assert (= (and b!83735 res!43293) b!83736))

(declare-fun m!86915 () Bool)

(assert (=> d!21141 m!86915))

(assert (=> d!21141 m!86211))

(declare-fun m!86917 () Bool)

(assert (=> b!83733 m!86917))

(declare-fun m!86919 () Bool)

(assert (=> b!83736 m!86919))

(declare-fun m!86921 () Bool)

(assert (=> bm!7873 m!86921))

(declare-fun m!86923 () Bool)

(assert (=> b!83735 m!86923))

(assert (=> d!20893 d!21141))

(assert (=> b!82936 d!20959))

(assert (=> b!82936 d!20961))

(declare-fun b!83757 () Bool)

(declare-fun e!54655 () Bool)

(declare-fun call!7882 () Bool)

(assert (=> b!83757 (= e!54655 (not call!7882))))

(declare-fun c!13413 () Bool)

(declare-fun bm!7879 () Bool)

(declare-fun call!7883 () Bool)

(declare-fun lt!39437 () SeekEntryResult!252)

(assert (=> bm!7879 (= call!7883 (inRange!0 (ite c!13413 (index!3144 lt!39437) (index!3147 lt!39437)) (mask!6335 newMap!16)))))

(declare-fun b!83758 () Bool)

(declare-fun e!54653 () Bool)

(assert (=> b!83758 (= e!54653 (not call!7882))))

(declare-fun b!83759 () Bool)

(declare-fun e!54654 () Bool)

(assert (=> b!83759 (= e!54654 ((_ is Undefined!252) lt!39437))))

(declare-fun b!83760 () Bool)

(assert (=> b!83760 (and (bvsge (index!3144 lt!39437) #b00000000000000000000000000000000) (bvslt (index!3144 lt!39437) (size!2155 (_keys!3985 newMap!16))))))

(declare-fun res!43306 () Bool)

(assert (=> b!83760 (= res!43306 (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3144 lt!39437)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83760 (=> (not res!43306) (not e!54653))))

(declare-fun b!83761 () Bool)

(declare-fun res!43304 () Bool)

(assert (=> b!83761 (=> (not res!43304) (not e!54655))))

(assert (=> b!83761 (= res!43304 (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3147 lt!39437)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83761 (and (bvsge (index!3147 lt!39437) #b00000000000000000000000000000000) (bvslt (index!3147 lt!39437) (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!83762 () Bool)

(declare-fun e!54652 () Bool)

(assert (=> b!83762 (= e!54652 e!54654)))

(declare-fun c!13412 () Bool)

(assert (=> b!83762 (= c!13412 ((_ is MissingVacant!252) lt!39437))))

(declare-fun b!83763 () Bool)

(assert (=> b!83763 (= e!54652 e!54653)))

(declare-fun res!43303 () Bool)

(assert (=> b!83763 (= res!43303 call!7883)))

(assert (=> b!83763 (=> (not res!43303) (not e!54653))))

(declare-fun b!83764 () Bool)

(declare-fun res!43305 () Bool)

(assert (=> b!83764 (=> (not res!43305) (not e!54655))))

(assert (=> b!83764 (= res!43305 call!7883)))

(assert (=> b!83764 (= e!54654 e!54655)))

(declare-fun bm!7880 () Bool)

(assert (=> bm!7880 (= call!7882 (arrayContainsKey!0 (_keys!3985 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!21143 () Bool)

(assert (=> d!21143 e!54652))

(assert (=> d!21143 (= c!13413 ((_ is MissingZero!252) lt!39437))))

(assert (=> d!21143 (= lt!39437 (seekEntryOrOpen!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (_keys!3985 newMap!16) (mask!6335 newMap!16)))))

(declare-fun lt!39438 () Unit!2445)

(declare-fun choose!502 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 (_ BitVec 64) Int) Unit!2445)

(assert (=> d!21143 (= lt!39438 (choose!502 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (defaultEntry!2317 newMap!16)))))

(assert (=> d!21143 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!21143 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!30 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (defaultEntry!2317 newMap!16)) lt!39438)))

(assert (= (and d!21143 c!13413) b!83763))

(assert (= (and d!21143 (not c!13413)) b!83762))

(assert (= (and b!83763 res!43303) b!83760))

(assert (= (and b!83760 res!43306) b!83758))

(assert (= (and b!83762 c!13412) b!83764))

(assert (= (and b!83762 (not c!13412)) b!83759))

(assert (= (and b!83764 res!43305) b!83761))

(assert (= (and b!83761 res!43304) b!83757))

(assert (= (or b!83763 b!83764) bm!7879))

(assert (= (or b!83758 b!83757) bm!7880))

(declare-fun m!86925 () Bool)

(assert (=> b!83760 m!86925))

(declare-fun m!86927 () Bool)

(assert (=> bm!7879 m!86927))

(assert (=> bm!7880 m!85591))

(assert (=> bm!7880 m!85731))

(declare-fun m!86929 () Bool)

(assert (=> b!83761 m!86929))

(assert (=> d!21143 m!85591))

(assert (=> d!21143 m!85741))

(assert (=> d!21143 m!85591))

(declare-fun m!86931 () Bool)

(assert (=> d!21143 m!86931))

(assert (=> d!21143 m!86023))

(assert (=> bm!7774 d!21143))

(declare-fun d!21145 () Bool)

(assert (=> d!21145 (= (+!114 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) lt!38889 (zeroValue!2211 newMap!16) lt!38748 #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39441 () Unit!2445)

(declare-fun choose!503 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 V!3019 Int) Unit!2445)

(assert (=> d!21145 (= lt!39441 (choose!503 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) lt!38889 (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) lt!38748 (defaultEntry!2317 newMap!16)))))

(assert (=> d!21145 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!21145 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!30 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) lt!38889 (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) lt!38748 (defaultEntry!2317 newMap!16)) lt!39441)))

(declare-fun bs!3520 () Bool)

(assert (= bs!3520 d!21145))

(assert (=> bs!3520 m!86023))

(declare-fun m!86933 () Bool)

(assert (=> bs!3520 m!86933))

(assert (=> bs!3520 m!85729))

(declare-fun m!86935 () Bool)

(assert (=> bs!3520 m!86935))

(declare-fun m!86937 () Bool)

(assert (=> bs!3520 m!86937))

(assert (=> bs!3520 m!85729))

(assert (=> b!83041 d!21145))

(declare-fun d!21147 () Bool)

(assert (=> d!21147 (= (apply!81 lt!39021 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1209 (getValueByKey!138 (toList!756 lt!39021) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3521 () Bool)

(assert (= bs!3521 d!21147))

(assert (=> bs!3521 m!85781))

(assert (=> bs!3521 m!86349))

(assert (=> bs!3521 m!86349))

(declare-fun m!86939 () Bool)

(assert (=> bs!3521 m!86939))

(assert (=> b!83180 d!21147))

(assert (=> b!83180 d!21093))

(declare-fun d!21149 () Bool)

(assert (=> d!21149 (= (map!1190 (_2!1121 lt!38897)) (getCurrentListMap!440 (_keys!3985 (_2!1121 lt!38897)) (_values!2300 (_2!1121 lt!38897)) (mask!6335 (_2!1121 lt!38897)) (extraKeys!2160 (_2!1121 lt!38897)) (zeroValue!2211 (_2!1121 lt!38897)) (minValue!2211 (_2!1121 lt!38897)) #b00000000000000000000000000000000 (defaultEntry!2317 (_2!1121 lt!38897))))))

(declare-fun bs!3522 () Bool)

(assert (= bs!3522 d!21149))

(declare-fun m!86941 () Bool)

(assert (=> bs!3522 m!86941))

(assert (=> bm!7763 d!21149))

(assert (=> b!83182 d!21105))

(declare-fun mapNonEmpty!3385 () Bool)

(declare-fun mapRes!3385 () Bool)

(declare-fun tp!8911 () Bool)

(declare-fun e!54657 () Bool)

(assert (=> mapNonEmpty!3385 (= mapRes!3385 (and tp!8911 e!54657))))

(declare-fun mapValue!3385 () ValueCell!921)

(declare-fun mapRest!3385 () (Array (_ BitVec 32) ValueCell!921))

(declare-fun mapKey!3385 () (_ BitVec 32))

(assert (=> mapNonEmpty!3385 (= mapRest!3384 (store mapRest!3385 mapKey!3385 mapValue!3385))))

(declare-fun b!83765 () Bool)

(assert (=> b!83765 (= e!54657 tp_is_empty!2529)))

(declare-fun mapIsEmpty!3385 () Bool)

(assert (=> mapIsEmpty!3385 mapRes!3385))

(declare-fun condMapEmpty!3385 () Bool)

(declare-fun mapDefault!3385 () ValueCell!921)

(assert (=> mapNonEmpty!3384 (= condMapEmpty!3385 (= mapRest!3384 ((as const (Array (_ BitVec 32) ValueCell!921)) mapDefault!3385)))))

(declare-fun e!54656 () Bool)

(assert (=> mapNonEmpty!3384 (= tp!8910 (and e!54656 mapRes!3385))))

(declare-fun b!83766 () Bool)

(assert (=> b!83766 (= e!54656 tp_is_empty!2529)))

(assert (= (and mapNonEmpty!3384 condMapEmpty!3385) mapIsEmpty!3385))

(assert (= (and mapNonEmpty!3384 (not condMapEmpty!3385)) mapNonEmpty!3385))

(assert (= (and mapNonEmpty!3385 ((_ is ValueCellFull!921) mapValue!3385)) b!83765))

(assert (= (and mapNonEmpty!3384 ((_ is ValueCellFull!921) mapDefault!3385)) b!83766))

(declare-fun m!86943 () Bool)

(assert (=> mapNonEmpty!3385 m!86943))

(declare-fun mapNonEmpty!3386 () Bool)

(declare-fun mapRes!3386 () Bool)

(declare-fun tp!8912 () Bool)

(declare-fun e!54659 () Bool)

(assert (=> mapNonEmpty!3386 (= mapRes!3386 (and tp!8912 e!54659))))

(declare-fun mapKey!3386 () (_ BitVec 32))

(declare-fun mapRest!3386 () (Array (_ BitVec 32) ValueCell!921))

(declare-fun mapValue!3386 () ValueCell!921)

(assert (=> mapNonEmpty!3386 (= mapRest!3383 (store mapRest!3386 mapKey!3386 mapValue!3386))))

(declare-fun b!83767 () Bool)

(assert (=> b!83767 (= e!54659 tp_is_empty!2529)))

(declare-fun mapIsEmpty!3386 () Bool)

(assert (=> mapIsEmpty!3386 mapRes!3386))

(declare-fun condMapEmpty!3386 () Bool)

(declare-fun mapDefault!3386 () ValueCell!921)

(assert (=> mapNonEmpty!3383 (= condMapEmpty!3386 (= mapRest!3383 ((as const (Array (_ BitVec 32) ValueCell!921)) mapDefault!3386)))))

(declare-fun e!54658 () Bool)

(assert (=> mapNonEmpty!3383 (= tp!8909 (and e!54658 mapRes!3386))))

(declare-fun b!83768 () Bool)

(assert (=> b!83768 (= e!54658 tp_is_empty!2529)))

(assert (= (and mapNonEmpty!3383 condMapEmpty!3386) mapIsEmpty!3386))

(assert (= (and mapNonEmpty!3383 (not condMapEmpty!3386)) mapNonEmpty!3386))

(assert (= (and mapNonEmpty!3386 ((_ is ValueCellFull!921) mapValue!3386)) b!83767))

(assert (= (and mapNonEmpty!3383 ((_ is ValueCellFull!921) mapDefault!3386)) b!83768))

(declare-fun m!86945 () Bool)

(assert (=> mapNonEmpty!3386 m!86945))

(declare-fun b_lambda!3721 () Bool)

(assert (= b_lambda!3719 (or (and b!82830 b_free!2225) (and b!82846 b_free!2227 (= (defaultEntry!2317 newMap!16) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))))) b_lambda!3721)))

(declare-fun b_lambda!3723 () Bool)

(assert (= b_lambda!3711 (or (and b!82830 b_free!2225 (= (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) (defaultEntry!2317 newMap!16))) (and b!82846 b_free!2227) b_lambda!3723)))

(declare-fun b_lambda!3725 () Bool)

(assert (= b_lambda!3717 (or (and b!82830 b_free!2225) (and b!82846 b_free!2227 (= (defaultEntry!2317 newMap!16) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))))) b_lambda!3725)))

(declare-fun b_lambda!3727 () Bool)

(assert (= b_lambda!3715 (or (and b!82830 b_free!2225 (= (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) (defaultEntry!2317 newMap!16))) (and b!82846 b_free!2227) b_lambda!3727)))

(declare-fun b_lambda!3729 () Bool)

(assert (= b_lambda!3713 (or (and b!82830 b_free!2225 (= (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) (defaultEntry!2317 newMap!16))) (and b!82846 b_free!2227) b_lambda!3729)))

(check-sat (not b!83573) (not b!83466) (not d!21145) (not bm!7846) (not bm!7871) (not bm!7879) (not b!83368) (not b!83551) (not d!21063) (not d!20919) (not bm!7861) (not b!83380) (not d!21071) (not bm!7860) (not b!83308) (not b!83625) (not b!83668) (not d!20905) (not b!83736) (not b!83632) (not b!83212) (not b!83586) (not b!83411) (not b!83720) (not d!21139) (not b!83578) (not d!20955) (not b!83489) (not b!83730) (not bm!7809) (not b!83479) (not d!20939) (not b!83553) (not b!83597) (not b!83218) (not d!20959) (not b!83392) (not b!83650) (not b_lambda!3705) (not d!21051) (not d!21003) (not b!83679) (not b_lambda!3707) (not b!83245) (not b!83515) (not b!83724) (not d!21053) (not d!20999) (not b!83620) (not d!21015) (not d!20981) (not b!83480) (not bm!7873) (not bm!7848) (not b!83523) (not b!83491) (not b!83649) (not b!83594) (not b!83713) (not d!21087) (not b!83691) (not b!83611) (not d!21007) (not bm!7810) (not b!83232) (not d!20941) (not b!83661) (not b!83722) (not d!20995) (not d!20965) (not b_lambda!3725) (not bm!7866) (not d!21029) (not b!83428) (not b!83652) (not bm!7854) (not b!83252) (not d!21147) (not b!83396) (not d!20903) (not b!83225) (not b!83635) (not d!20945) (not d!20917) (not b!83526) (not b!83374) (not b!83660) (not b!83666) (not b!83447) (not d!20923) (not bm!7840) (not d!20901) (not b!83559) (not b_lambda!3729) (not b!83568) (not b!83648) (not b!83575) (not b!83676) (not b!83322) (not d!21021) (not b!83377) (not b!83561) (not b!83608) (not b!83435) (not b!83335) (not d!21121) (not d!20975) tp_is_empty!2529 (not b!83485) (not b!83430) (not d!21017) (not b!83501) (not b!83433) (not b!83562) (not b!83627) (not b!83664) (not d!20957) (not d!21095) (not b!83583) (not b!83409) (not d!21043) (not d!20911) (not b!83315) (not b!83229) (not d!21013) (not b!83727) (not b!83270) (not b!83638) (not b!83512) (not d!21115) (not b!83692) (not b!83718) (not b!83256) (not d!20983) (not d!21065) (not b!83634) (not b!83576) (not d!21149) (not b!83213) (not b!83215) (not bm!7823) (not d!20985) (not bm!7838) (not d!21061) (not b!83719) (not b!83581) (not b!83360) (not d!21023) (not b_next!2225) (not b!83565) (not b!83325) (not d!20949) (not b!83585) (not bm!7850) (not b!83406) (not b!83494) (not b!83487) (not d!21039) (not b!83729) (not b!83243) (not d!21091) (not b!83457) (not d!21069) (not mapNonEmpty!3386) (not b!83629) (not b!83613) (not d!21131) (not b!83249) (not b!83399) (not d!21001) (not b!83659) (not b_lambda!3697) (not bm!7842) (not d!21057) (not b!83444) (not b!83498) (not d!21037) (not d!20953) (not bm!7862) (not d!20977) (not d!21011) (not b!83654) (not d!21099) (not b!83505) (not b!83216) (not d!21135) (not d!21077) (not b!83618) (not b!83385) (not b!83306) (not b!83510) (not b!83674) (not b!83514) (not b!83646) (not d!20913) (not b!83432) (not b!83702) (not d!21059) (not b!83707) b_and!5081 (not b!83710) (not b!83486) (not d!21105) (not d!21019) (not d!21101) (not d!21025) (not b!83717) (not b!83582) (not b!83584) (not bm!7851) (not b!83567) (not b!83733) (not b!83600) (not b!83735) (not b!83554) (not b!83259) (not d!21125) (not d!21055) (not d!21089) (not b!83387) (not b!83452) (not b!83509) (not b!83418) (not b!83398) (not b!83254) (not b!83373) (not b!83721) (not b!83604) (not b!83221) (not d!20947) (not b!83255) (not b_lambda!3721) (not b!83334) (not b_next!2227) (not b!83477) (not b!83361) (not b!83240) (not b!83662) (not b!83425) (not b!83224) (not b!83317) (not bm!7835) (not b!83588) (not d!21129) (not d!21075) (not b!83393) (not d!21027) b_and!5083 (not bm!7807) (not d!21073) (not b!83669) (not d!20925) (not bm!7822) (not b!83589) (not d!21143) (not b!83647) (not b!83495) (not mapNonEmpty!3385) (not bm!7856) (not b!83671) (not b!83246) (not d!21113) (not b_lambda!3723) (not b!83672) (not b!83214) (not b!83525) (not b!83414) (not d!21009) (not b_lambda!3727) (not d!21067) (not b!83614) (not b_lambda!3709) (not b!83556) (not bm!7880) (not bm!7849) (not b!83609) (not d!20997) (not b!83250) (not bm!7832) (not d!20933) (not b!83438) (not d!21103) (not b!83257) (not d!21111) (not d!21141) (not d!20931) (not b!83321) (not b!83217) (not b!83227) (not b!83241) (not d!20937) (not d!21049) (not b!83528) (not d!20909) (not d!20921) (not b!83413) (not b!83366) (not d!20971) (not b!83587) (not d!20907) (not b!83579) (not d!21133) (not b!83454) (not b!83667) (not b!83441) (not d!21035) (not d!21005) (not b!83358) (not b!83440) (not b!83529) (not b!83390) (not b!83651) (not b!83379) (not d!20915) (not bm!7868) (not bm!7808) (not d!21047) (not b!83460) (not b!83492) (not b!83323) (not d!21083) (not bm!7859) (not b!83703) (not b!83236) (not b!83640) (not b!83251) (not b!83328) (not b!83446) (not d!21097) (not b!83716) (not b!83211) (not d!20969) (not b!83641) (not bm!7824) (not b!83531) (not b!83533) (not b!83371))
(check-sat b_and!5081 b_and!5083 (not b_next!2225) (not b_next!2227))
(get-model)

(declare-fun b!83770 () Bool)

(declare-fun e!54660 () Option!144)

(declare-fun e!54661 () Option!144)

(assert (=> b!83770 (= e!54660 e!54661)))

(declare-fun c!13415 () Bool)

(assert (=> b!83770 (= c!13415 (and ((_ is Cons!1543) (t!5251 lt!39042)) (not (= (_1!1120 (h!2133 (t!5251 lt!39042))) (_1!1120 lt!38747)))))))

(declare-fun b!83769 () Bool)

(assert (=> b!83769 (= e!54660 (Some!143 (_2!1120 (h!2133 (t!5251 lt!39042)))))))

(declare-fun b!83772 () Bool)

(assert (=> b!83772 (= e!54661 None!142)))

(declare-fun d!21151 () Bool)

(declare-fun c!13414 () Bool)

(assert (=> d!21151 (= c!13414 (and ((_ is Cons!1543) (t!5251 lt!39042)) (= (_1!1120 (h!2133 (t!5251 lt!39042))) (_1!1120 lt!38747))))))

(assert (=> d!21151 (= (getValueByKey!138 (t!5251 lt!39042) (_1!1120 lt!38747)) e!54660)))

(declare-fun b!83771 () Bool)

(assert (=> b!83771 (= e!54661 (getValueByKey!138 (t!5251 (t!5251 lt!39042)) (_1!1120 lt!38747)))))

(assert (= (and d!21151 c!13414) b!83769))

(assert (= (and d!21151 (not c!13414)) b!83770))

(assert (= (and b!83770 c!13415) b!83771))

(assert (= (and b!83770 (not c!13415)) b!83772))

(declare-fun m!86947 () Bool)

(assert (=> b!83771 m!86947))

(assert (=> b!83559 d!21151))

(declare-fun d!21153 () Bool)

(declare-fun e!54662 () Bool)

(assert (=> d!21153 e!54662))

(declare-fun res!43307 () Bool)

(assert (=> d!21153 (=> res!43307 e!54662)))

(declare-fun lt!39442 () Bool)

(assert (=> d!21153 (= res!43307 (not lt!39442))))

(declare-fun lt!39444 () Bool)

(assert (=> d!21153 (= lt!39442 lt!39444)))

(declare-fun lt!39445 () Unit!2445)

(declare-fun e!54663 () Unit!2445)

(assert (=> d!21153 (= lt!39445 e!54663)))

(declare-fun c!13416 () Bool)

(assert (=> d!21153 (= c!13416 lt!39444)))

(assert (=> d!21153 (= lt!39444 (containsKey!142 (toList!756 lt!39083) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21153 (= (contains!757 lt!39083 #b0000000000000000000000000000000000000000000000000000000000000000) lt!39442)))

(declare-fun b!83773 () Bool)

(declare-fun lt!39443 () Unit!2445)

(assert (=> b!83773 (= e!54663 lt!39443)))

(assert (=> b!83773 (= lt!39443 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39083) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83773 (isDefined!92 (getValueByKey!138 (toList!756 lt!39083) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83774 () Bool)

(declare-fun Unit!2480 () Unit!2445)

(assert (=> b!83774 (= e!54663 Unit!2480)))

(declare-fun b!83775 () Bool)

(assert (=> b!83775 (= e!54662 (isDefined!92 (getValueByKey!138 (toList!756 lt!39083) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21153 c!13416) b!83773))

(assert (= (and d!21153 (not c!13416)) b!83774))

(assert (= (and d!21153 (not res!43307)) b!83775))

(declare-fun m!86949 () Bool)

(assert (=> d!21153 m!86949))

(declare-fun m!86951 () Bool)

(assert (=> b!83773 m!86951))

(declare-fun m!86953 () Bool)

(assert (=> b!83773 m!86953))

(assert (=> b!83773 m!86953))

(declare-fun m!86955 () Bool)

(assert (=> b!83773 m!86955))

(assert (=> b!83775 m!86953))

(assert (=> b!83775 m!86953))

(assert (=> b!83775 m!86955))

(assert (=> bm!7810 d!21153))

(declare-fun lt!39446 () Bool)

(declare-fun d!21155 () Bool)

(assert (=> d!21155 (= lt!39446 (select (content!86 (ite c!13231 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545) Nil!1545)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!54665 () Bool)

(assert (=> d!21155 (= lt!39446 e!54665)))

(declare-fun res!43308 () Bool)

(assert (=> d!21155 (=> (not res!43308) (not e!54665))))

(assert (=> d!21155 (= res!43308 ((_ is Cons!1544) (ite c!13231 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545) Nil!1545)))))

(assert (=> d!21155 (= (contains!759 (ite c!13231 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545) Nil!1545) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!39446)))

(declare-fun b!83776 () Bool)

(declare-fun e!54664 () Bool)

(assert (=> b!83776 (= e!54665 e!54664)))

(declare-fun res!43309 () Bool)

(assert (=> b!83776 (=> res!43309 e!54664)))

(assert (=> b!83776 (= res!43309 (= (h!2134 (ite c!13231 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545) Nil!1545)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!83777 () Bool)

(assert (=> b!83777 (= e!54664 (contains!759 (t!5252 (ite c!13231 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545) Nil!1545)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!21155 res!43308) b!83776))

(assert (= (and b!83776 (not res!43309)) b!83777))

(declare-fun m!86957 () Bool)

(assert (=> d!21155 m!86957))

(assert (=> d!21155 m!86285))

(declare-fun m!86959 () Bool)

(assert (=> d!21155 m!86959))

(assert (=> b!83777 m!86285))

(declare-fun m!86961 () Bool)

(assert (=> b!83777 m!86961))

(assert (=> b!83414 d!21155))

(declare-fun b!83779 () Bool)

(declare-fun e!54666 () Option!144)

(declare-fun e!54667 () Option!144)

(assert (=> b!83779 (= e!54666 e!54667)))

(declare-fun c!13418 () Bool)

(assert (=> b!83779 (= c!13418 (and ((_ is Cons!1543) (toList!756 lt!39337)) (not (= (_1!1120 (h!2133 (toList!756 lt!39337))) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!83778 () Bool)

(assert (=> b!83778 (= e!54666 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39337)))))))

(declare-fun b!83781 () Bool)

(assert (=> b!83781 (= e!54667 None!142)))

(declare-fun d!21157 () Bool)

(declare-fun c!13417 () Bool)

(assert (=> d!21157 (= c!13417 (and ((_ is Cons!1543) (toList!756 lt!39337)) (= (_1!1120 (h!2133 (toList!756 lt!39337))) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21157 (= (getValueByKey!138 (toList!756 lt!39337) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) e!54666)))

(declare-fun b!83780 () Bool)

(assert (=> b!83780 (= e!54667 (getValueByKey!138 (t!5251 (toList!756 lt!39337)) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21157 c!13417) b!83778))

(assert (= (and d!21157 (not c!13417)) b!83779))

(assert (= (and b!83779 c!13418) b!83780))

(assert (= (and b!83779 (not c!13418)) b!83781))

(declare-fun m!86963 () Bool)

(assert (=> b!83780 m!86963))

(assert (=> b!83584 d!21157))

(declare-fun d!21159 () Bool)

(assert (=> d!21159 (= (content!86 Nil!1545) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!20971 d!21159))

(declare-fun d!21161 () Bool)

(declare-fun lt!39447 () Bool)

(assert (=> d!21161 (= lt!39447 (select (content!87 lt!39034) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))))))

(declare-fun e!54668 () Bool)

(assert (=> d!21161 (= lt!39447 e!54668)))

(declare-fun res!43310 () Bool)

(assert (=> d!21161 (=> (not res!43310) (not e!54668))))

(assert (=> d!21161 (= res!43310 ((_ is Cons!1543) lt!39034))))

(assert (=> d!21161 (= (contains!760 lt!39034 (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))) lt!39447)))

(declare-fun b!83782 () Bool)

(declare-fun e!54669 () Bool)

(assert (=> b!83782 (= e!54668 e!54669)))

(declare-fun res!43311 () Bool)

(assert (=> b!83782 (=> res!43311 e!54669)))

(assert (=> b!83782 (= res!43311 (= (h!2133 lt!39034) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))))))

(declare-fun b!83783 () Bool)

(assert (=> b!83783 (= e!54669 (contains!760 (t!5251 lt!39034) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))))))

(assert (= (and d!21161 res!43310) b!83782))

(assert (= (and b!83782 (not res!43311)) b!83783))

(declare-fun m!86965 () Bool)

(assert (=> d!21161 m!86965))

(declare-fun m!86967 () Bool)

(assert (=> d!21161 m!86967))

(declare-fun m!86969 () Bool)

(assert (=> b!83783 m!86969))

(assert (=> b!83730 d!21161))

(declare-fun bm!7881 () Bool)

(declare-fun call!7885 () List!1547)

(declare-fun call!7884 () List!1547)

(assert (=> bm!7881 (= call!7885 call!7884)))

(declare-fun b!83784 () Bool)

(declare-fun e!54673 () List!1547)

(assert (=> b!83784 (= e!54673 call!7885)))

(declare-fun b!83785 () Bool)

(declare-fun e!54672 () List!1547)

(declare-fun call!7886 () List!1547)

(assert (=> b!83785 (= e!54672 call!7886)))

(declare-fun b!83786 () Bool)

(declare-fun e!54671 () List!1547)

(assert (=> b!83786 (= e!54671 (insertStrictlySorted!59 (t!5251 (t!5251 (toList!756 lt!38754))) (_1!1120 lt!38750) (_2!1120 lt!38750)))))

(declare-fun b!83787 () Bool)

(assert (=> b!83787 (= e!54672 call!7886)))

(declare-fun b!83788 () Bool)

(declare-fun res!43312 () Bool)

(declare-fun e!54674 () Bool)

(assert (=> b!83788 (=> (not res!43312) (not e!54674))))

(declare-fun lt!39448 () List!1547)

(assert (=> b!83788 (= res!43312 (containsKey!142 lt!39448 (_1!1120 lt!38750)))))

(declare-fun d!21163 () Bool)

(assert (=> d!21163 e!54674))

(declare-fun res!43313 () Bool)

(assert (=> d!21163 (=> (not res!43313) (not e!54674))))

(assert (=> d!21163 (= res!43313 (isStrictlySorted!292 lt!39448))))

(declare-fun e!54670 () List!1547)

(assert (=> d!21163 (= lt!39448 e!54670)))

(declare-fun c!13420 () Bool)

(assert (=> d!21163 (= c!13420 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38754))) (bvslt (_1!1120 (h!2133 (t!5251 (toList!756 lt!38754)))) (_1!1120 lt!38750))))))

(assert (=> d!21163 (isStrictlySorted!292 (t!5251 (toList!756 lt!38754)))))

(assert (=> d!21163 (= (insertStrictlySorted!59 (t!5251 (toList!756 lt!38754)) (_1!1120 lt!38750) (_2!1120 lt!38750)) lt!39448)))

(declare-fun b!83789 () Bool)

(assert (=> b!83789 (= e!54674 (contains!760 lt!39448 (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(declare-fun b!83790 () Bool)

(assert (=> b!83790 (= e!54670 e!54673)))

(declare-fun c!13419 () Bool)

(assert (=> b!83790 (= c!13419 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38754))) (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!38754)))) (_1!1120 lt!38750))))))

(declare-fun c!13422 () Bool)

(declare-fun b!83791 () Bool)

(assert (=> b!83791 (= e!54671 (ite c!13419 (t!5251 (t!5251 (toList!756 lt!38754))) (ite c!13422 (Cons!1543 (h!2133 (t!5251 (toList!756 lt!38754))) (t!5251 (t!5251 (toList!756 lt!38754)))) Nil!1544)))))

(declare-fun b!83792 () Bool)

(assert (=> b!83792 (= c!13422 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38754))) (bvsgt (_1!1120 (h!2133 (t!5251 (toList!756 lt!38754)))) (_1!1120 lt!38750))))))

(assert (=> b!83792 (= e!54673 e!54672)))

(declare-fun bm!7882 () Bool)

(assert (=> bm!7882 (= call!7884 ($colon$colon!70 e!54671 (ite c!13420 (h!2133 (t!5251 (toList!756 lt!38754))) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750)))))))

(declare-fun c!13421 () Bool)

(assert (=> bm!7882 (= c!13421 c!13420)))

(declare-fun b!83793 () Bool)

(assert (=> b!83793 (= e!54670 call!7884)))

(declare-fun bm!7883 () Bool)

(assert (=> bm!7883 (= call!7886 call!7885)))

(assert (= (and d!21163 c!13420) b!83793))

(assert (= (and d!21163 (not c!13420)) b!83790))

(assert (= (and b!83790 c!13419) b!83784))

(assert (= (and b!83790 (not c!13419)) b!83792))

(assert (= (and b!83792 c!13422) b!83787))

(assert (= (and b!83792 (not c!13422)) b!83785))

(assert (= (or b!83787 b!83785) bm!7883))

(assert (= (or b!83784 bm!7883) bm!7881))

(assert (= (or b!83793 bm!7881) bm!7882))

(assert (= (and bm!7882 c!13421) b!83786))

(assert (= (and bm!7882 (not c!13421)) b!83791))

(assert (= (and d!21163 res!43313) b!83788))

(assert (= (and b!83788 res!43312) b!83789))

(declare-fun m!86971 () Bool)

(assert (=> d!21163 m!86971))

(declare-fun m!86973 () Bool)

(assert (=> d!21163 m!86973))

(declare-fun m!86975 () Bool)

(assert (=> b!83786 m!86975))

(declare-fun m!86977 () Bool)

(assert (=> b!83789 m!86977))

(declare-fun m!86979 () Bool)

(assert (=> bm!7882 m!86979))

(declare-fun m!86981 () Bool)

(assert (=> b!83788 m!86981))

(assert (=> b!83377 d!21163))

(declare-fun d!21165 () Bool)

(assert (not d!21165))

(assert (=> b!83425 d!21165))

(declare-fun d!21167 () Bool)

(assert (=> d!21167 (isDefined!92 (getValueByKey!138 (toList!756 lt!39045) (_1!1120 lt!38747)))))

(declare-fun lt!39449 () Unit!2445)

(assert (=> d!21167 (= lt!39449 (choose!496 (toList!756 lt!39045) (_1!1120 lt!38747)))))

(declare-fun e!54675 () Bool)

(assert (=> d!21167 e!54675))

(declare-fun res!43314 () Bool)

(assert (=> d!21167 (=> (not res!43314) (not e!54675))))

(assert (=> d!21167 (= res!43314 (isStrictlySorted!292 (toList!756 lt!39045)))))

(assert (=> d!21167 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39045) (_1!1120 lt!38747)) lt!39449)))

(declare-fun b!83794 () Bool)

(assert (=> b!83794 (= e!54675 (containsKey!142 (toList!756 lt!39045) (_1!1120 lt!38747)))))

(assert (= (and d!21167 res!43314) b!83794))

(assert (=> d!21167 m!85965))

(assert (=> d!21167 m!85965))

(assert (=> d!21167 m!86555))

(declare-fun m!86983 () Bool)

(assert (=> d!21167 m!86983))

(declare-fun m!86985 () Bool)

(assert (=> d!21167 m!86985))

(assert (=> b!83794 m!86551))

(assert (=> b!83554 d!21167))

(declare-fun d!21169 () Bool)

(assert (=> d!21169 (= (isDefined!92 (getValueByKey!138 (toList!756 lt!39045) (_1!1120 lt!38747))) (not (isEmpty!338 (getValueByKey!138 (toList!756 lt!39045) (_1!1120 lt!38747)))))))

(declare-fun bs!3523 () Bool)

(assert (= bs!3523 d!21169))

(assert (=> bs!3523 m!85965))

(declare-fun m!86987 () Bool)

(assert (=> bs!3523 m!86987))

(assert (=> b!83554 d!21169))

(assert (=> b!83554 d!20927))

(declare-fun d!21171 () Bool)

(declare-fun lt!39450 () Bool)

(assert (=> d!21171 (= lt!39450 (select (content!87 (toList!756 lt!39061)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun e!54676 () Bool)

(assert (=> d!21171 (= lt!39450 e!54676)))

(declare-fun res!43315 () Bool)

(assert (=> d!21171 (=> (not res!43315) (not e!54676))))

(assert (=> d!21171 (= res!43315 ((_ is Cons!1543) (toList!756 lt!39061)))))

(assert (=> d!21171 (= (contains!760 (toList!756 lt!39061) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!39450)))

(declare-fun b!83795 () Bool)

(declare-fun e!54677 () Bool)

(assert (=> b!83795 (= e!54676 e!54677)))

(declare-fun res!43316 () Bool)

(assert (=> b!83795 (=> res!43316 e!54677)))

(assert (=> b!83795 (= res!43316 (= (h!2133 (toList!756 lt!39061)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!83796 () Bool)

(assert (=> b!83796 (= e!54677 (contains!760 (t!5251 (toList!756 lt!39061)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(assert (= (and d!21171 res!43315) b!83795))

(assert (= (and b!83795 (not res!43316)) b!83796))

(declare-fun m!86989 () Bool)

(assert (=> d!21171 m!86989))

(declare-fun m!86991 () Bool)

(assert (=> d!21171 m!86991))

(declare-fun m!86993 () Bool)

(assert (=> b!83796 m!86993))

(assert (=> b!83218 d!21171))

(declare-fun d!21173 () Bool)

(declare-fun lt!39451 () Bool)

(assert (=> d!21173 (= lt!39451 (select (content!87 lt!39381) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(declare-fun e!54678 () Bool)

(assert (=> d!21173 (= lt!39451 e!54678)))

(declare-fun res!43317 () Bool)

(assert (=> d!21173 (=> (not res!43317) (not e!54678))))

(assert (=> d!21173 (= res!43317 ((_ is Cons!1543) lt!39381))))

(assert (=> d!21173 (= (contains!760 lt!39381 (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))) lt!39451)))

(declare-fun b!83797 () Bool)

(declare-fun e!54679 () Bool)

(assert (=> b!83797 (= e!54678 e!54679)))

(declare-fun res!43318 () Bool)

(assert (=> b!83797 (=> res!43318 e!54679)))

(assert (=> b!83797 (= res!43318 (= (h!2133 lt!39381) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(declare-fun b!83798 () Bool)

(assert (=> b!83798 (= e!54679 (contains!760 (t!5251 lt!39381) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(assert (= (and d!21173 res!43317) b!83797))

(assert (= (and b!83797 (not res!43318)) b!83798))

(declare-fun m!86995 () Bool)

(assert (=> d!21173 m!86995))

(declare-fun m!86997 () Bool)

(assert (=> d!21173 m!86997))

(declare-fun m!86999 () Bool)

(assert (=> b!83798 m!86999))

(assert (=> b!83641 d!21173))

(declare-fun d!21175 () Bool)

(assert (=> d!21175 (= (isDefined!92 (getValueByKey!138 (toList!756 lt!39033) (_1!1120 lt!38760))) (not (isEmpty!338 (getValueByKey!138 (toList!756 lt!39033) (_1!1120 lt!38760)))))))

(declare-fun bs!3524 () Bool)

(assert (= bs!3524 d!21175))

(assert (=> bs!3524 m!85929))

(declare-fun m!87001 () Bool)

(assert (=> bs!3524 m!87001))

(assert (=> b!83387 d!21175))

(assert (=> b!83387 d!21123))

(declare-fun d!21177 () Bool)

(declare-fun c!13425 () Bool)

(assert (=> d!21177 (= c!13425 ((_ is Nil!1544) (toList!756 lt!39003)))))

(declare-fun e!54682 () (InoxSet tuple2!2220))

(assert (=> d!21177 (= (content!87 (toList!756 lt!39003)) e!54682)))

(declare-fun b!83803 () Bool)

(assert (=> b!83803 (= e!54682 ((as const (Array tuple2!2220 Bool)) false))))

(declare-fun b!83804 () Bool)

(assert (=> b!83804 (= e!54682 ((_ map or) (store ((as const (Array tuple2!2220 Bool)) false) (h!2133 (toList!756 lt!39003)) true) (content!87 (t!5251 (toList!756 lt!39003)))))))

(assert (= (and d!21177 c!13425) b!83803))

(assert (= (and d!21177 (not c!13425)) b!83804))

(declare-fun m!87003 () Bool)

(assert (=> b!83804 m!87003))

(declare-fun m!87005 () Bool)

(assert (=> b!83804 m!87005))

(assert (=> d!21129 d!21177))

(declare-fun d!21179 () Bool)

(declare-fun lt!39452 () Bool)

(assert (=> d!21179 (= lt!39452 (select (content!87 (t!5251 (toList!756 lt!39041))) lt!38747))))

(declare-fun e!54683 () Bool)

(assert (=> d!21179 (= lt!39452 e!54683)))

(declare-fun res!43319 () Bool)

(assert (=> d!21179 (=> (not res!43319) (not e!54683))))

(assert (=> d!21179 (= res!43319 ((_ is Cons!1543) (t!5251 (toList!756 lt!39041))))))

(assert (=> d!21179 (= (contains!760 (t!5251 (toList!756 lt!39041)) lt!38747) lt!39452)))

(declare-fun b!83805 () Bool)

(declare-fun e!54684 () Bool)

(assert (=> b!83805 (= e!54683 e!54684)))

(declare-fun res!43320 () Bool)

(assert (=> b!83805 (=> res!43320 e!54684)))

(assert (=> b!83805 (= res!43320 (= (h!2133 (t!5251 (toList!756 lt!39041))) lt!38747))))

(declare-fun b!83806 () Bool)

(assert (=> b!83806 (= e!54684 (contains!760 (t!5251 (t!5251 (toList!756 lt!39041))) lt!38747))))

(assert (= (and d!21179 res!43319) b!83805))

(assert (= (and b!83805 (not res!43320)) b!83806))

(declare-fun m!87007 () Bool)

(assert (=> d!21179 m!87007))

(declare-fun m!87009 () Bool)

(assert (=> d!21179 m!87009))

(declare-fun m!87011 () Bool)

(assert (=> b!83806 m!87011))

(assert (=> b!83618 d!21179))

(declare-fun d!21181 () Bool)

(assert (=> d!21181 (= (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83691 d!21181))

(declare-fun d!21183 () Bool)

(declare-fun lt!39453 () Bool)

(assert (=> d!21183 (= lt!39453 (select (content!87 (toList!756 lt!39053)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(declare-fun e!54685 () Bool)

(assert (=> d!21183 (= lt!39453 e!54685)))

(declare-fun res!43321 () Bool)

(assert (=> d!21183 (=> (not res!43321) (not e!54685))))

(assert (=> d!21183 (= res!43321 ((_ is Cons!1543) (toList!756 lt!39053)))))

(assert (=> d!21183 (= (contains!760 (toList!756 lt!39053) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) lt!39453)))

(declare-fun b!83807 () Bool)

(declare-fun e!54686 () Bool)

(assert (=> b!83807 (= e!54685 e!54686)))

(declare-fun res!43322 () Bool)

(assert (=> b!83807 (=> res!43322 e!54686)))

(assert (=> b!83807 (= res!43322 (= (h!2133 (toList!756 lt!39053)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(declare-fun b!83808 () Bool)

(assert (=> b!83808 (= e!54686 (contains!760 (t!5251 (toList!756 lt!39053)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(assert (= (and d!21183 res!43321) b!83807))

(assert (= (and b!83807 (not res!43322)) b!83808))

(declare-fun m!87013 () Bool)

(assert (=> d!21183 m!87013))

(declare-fun m!87015 () Bool)

(assert (=> d!21183 m!87015))

(declare-fun m!87017 () Bool)

(assert (=> b!83808 m!87017))

(assert (=> b!83214 d!21183))

(declare-fun d!21185 () Bool)

(declare-fun res!43323 () Bool)

(declare-fun e!54687 () Bool)

(assert (=> d!21185 (=> res!43323 e!54687)))

(assert (=> d!21185 (= res!43323 (and ((_ is Cons!1543) lt!39030) (= (_1!1120 (h!2133 lt!39030)) (_1!1120 lt!38760))))))

(assert (=> d!21185 (= (containsKey!142 lt!39030 (_1!1120 lt!38760)) e!54687)))

(declare-fun b!83809 () Bool)

(declare-fun e!54688 () Bool)

(assert (=> b!83809 (= e!54687 e!54688)))

(declare-fun res!43324 () Bool)

(assert (=> b!83809 (=> (not res!43324) (not e!54688))))

(assert (=> b!83809 (= res!43324 (and (or (not ((_ is Cons!1543) lt!39030)) (bvsle (_1!1120 (h!2133 lt!39030)) (_1!1120 lt!38760))) ((_ is Cons!1543) lt!39030) (bvslt (_1!1120 (h!2133 lt!39030)) (_1!1120 lt!38760))))))

(declare-fun b!83810 () Bool)

(assert (=> b!83810 (= e!54688 (containsKey!142 (t!5251 lt!39030) (_1!1120 lt!38760)))))

(assert (= (and d!21185 (not res!43323)) b!83809))

(assert (= (and b!83809 res!43324) b!83810))

(declare-fun m!87019 () Bool)

(assert (=> b!83810 m!87019))

(assert (=> b!83392 d!21185))

(declare-fun d!21187 () Bool)

(declare-fun e!54689 () Bool)

(assert (=> d!21187 e!54689))

(declare-fun res!43325 () Bool)

(assert (=> d!21187 (=> res!43325 e!54689)))

(declare-fun lt!39454 () Bool)

(assert (=> d!21187 (= res!43325 (not lt!39454))))

(declare-fun lt!39456 () Bool)

(assert (=> d!21187 (= lt!39454 lt!39456)))

(declare-fun lt!39457 () Unit!2445)

(declare-fun e!54690 () Unit!2445)

(assert (=> d!21187 (= lt!39457 e!54690)))

(declare-fun c!13426 () Bool)

(assert (=> d!21187 (= c!13426 lt!39456)))

(assert (=> d!21187 (= lt!39456 (containsKey!142 (toList!756 lt!39363) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21187 (= (contains!757 lt!39363 #b1000000000000000000000000000000000000000000000000000000000000000) lt!39454)))

(declare-fun b!83811 () Bool)

(declare-fun lt!39455 () Unit!2445)

(assert (=> b!83811 (= e!54690 lt!39455)))

(assert (=> b!83811 (= lt!39455 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39363) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83811 (isDefined!92 (getValueByKey!138 (toList!756 lt!39363) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83812 () Bool)

(declare-fun Unit!2481 () Unit!2445)

(assert (=> b!83812 (= e!54690 Unit!2481)))

(declare-fun b!83813 () Bool)

(assert (=> b!83813 (= e!54689 (isDefined!92 (getValueByKey!138 (toList!756 lt!39363) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21187 c!13426) b!83811))

(assert (= (and d!21187 (not c!13426)) b!83812))

(assert (= (and d!21187 (not res!43325)) b!83813))

(declare-fun m!87021 () Bool)

(assert (=> d!21187 m!87021))

(declare-fun m!87023 () Bool)

(assert (=> b!83811 m!87023))

(declare-fun m!87025 () Bool)

(assert (=> b!83811 m!87025))

(assert (=> b!83811 m!87025))

(declare-fun m!87027 () Bool)

(assert (=> b!83811 m!87027))

(assert (=> b!83813 m!87025))

(assert (=> b!83813 m!87025))

(assert (=> b!83813 m!87027))

(assert (=> bm!7861 d!21187))

(declare-fun d!21189 () Bool)

(declare-fun res!43326 () Bool)

(declare-fun e!54691 () Bool)

(assert (=> d!21189 (=> res!43326 e!54691)))

(assert (=> d!21189 (= res!43326 (and ((_ is Cons!1543) lt!39314) (= (_1!1120 (h!2133 lt!39314)) (_1!1120 lt!38747))))))

(assert (=> d!21189 (= (containsKey!142 lt!39314 (_1!1120 lt!38747)) e!54691)))

(declare-fun b!83814 () Bool)

(declare-fun e!54692 () Bool)

(assert (=> b!83814 (= e!54691 e!54692)))

(declare-fun res!43327 () Bool)

(assert (=> b!83814 (=> (not res!43327) (not e!54692))))

(assert (=> b!83814 (= res!43327 (and (or (not ((_ is Cons!1543) lt!39314)) (bvsle (_1!1120 (h!2133 lt!39314)) (_1!1120 lt!38747))) ((_ is Cons!1543) lt!39314) (bvslt (_1!1120 (h!2133 lt!39314)) (_1!1120 lt!38747))))))

(declare-fun b!83815 () Bool)

(assert (=> b!83815 (= e!54692 (containsKey!142 (t!5251 lt!39314) (_1!1120 lt!38747)))))

(assert (= (and d!21189 (not res!43326)) b!83814))

(assert (= (and b!83814 res!43327) b!83815))

(declare-fun m!87029 () Bool)

(assert (=> b!83815 m!87029))

(assert (=> b!83567 d!21189))

(declare-fun d!21191 () Bool)

(assert (=> d!21191 (= (apply!81 lt!39363 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1209 (getValueByKey!138 (toList!756 lt!39363) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3525 () Bool)

(assert (= bs!3525 d!21191))

(assert (=> bs!3525 m!87025))

(assert (=> bs!3525 m!87025))

(declare-fun m!87031 () Bool)

(assert (=> bs!3525 m!87031))

(assert (=> b!83597 d!21191))

(declare-fun d!21193 () Bool)

(declare-fun e!54693 () Bool)

(assert (=> d!21193 e!54693))

(declare-fun res!43328 () Bool)

(assert (=> d!21193 (=> res!43328 e!54693)))

(declare-fun lt!39458 () Bool)

(assert (=> d!21193 (= res!43328 (not lt!39458))))

(declare-fun lt!39460 () Bool)

(assert (=> d!21193 (= lt!39458 lt!39460)))

(declare-fun lt!39461 () Unit!2445)

(declare-fun e!54694 () Unit!2445)

(assert (=> d!21193 (= lt!39461 e!54694)))

(declare-fun c!13427 () Bool)

(assert (=> d!21193 (= c!13427 lt!39460)))

(assert (=> d!21193 (= lt!39460 (containsKey!142 (toList!756 lt!39083) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21193 (= (contains!757 lt!39083 #b1000000000000000000000000000000000000000000000000000000000000000) lt!39458)))

(declare-fun b!83816 () Bool)

(declare-fun lt!39459 () Unit!2445)

(assert (=> b!83816 (= e!54694 lt!39459)))

(assert (=> b!83816 (= lt!39459 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39083) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83816 (isDefined!92 (getValueByKey!138 (toList!756 lt!39083) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83817 () Bool)

(declare-fun Unit!2482 () Unit!2445)

(assert (=> b!83817 (= e!54694 Unit!2482)))

(declare-fun b!83818 () Bool)

(assert (=> b!83818 (= e!54693 (isDefined!92 (getValueByKey!138 (toList!756 lt!39083) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21193 c!13427) b!83816))

(assert (= (and d!21193 (not c!13427)) b!83817))

(assert (= (and d!21193 (not res!43328)) b!83818))

(declare-fun m!87033 () Bool)

(assert (=> d!21193 m!87033))

(declare-fun m!87035 () Bool)

(assert (=> b!83816 m!87035))

(declare-fun m!87037 () Bool)

(assert (=> b!83816 m!87037))

(assert (=> b!83816 m!87037))

(declare-fun m!87039 () Bool)

(assert (=> b!83816 m!87039))

(assert (=> b!83818 m!87037))

(assert (=> b!83818 m!87037))

(assert (=> b!83818 m!87039))

(assert (=> bm!7809 d!21193))

(declare-fun b!83819 () Bool)

(declare-fun e!54695 () ListLongMap!1481)

(declare-fun call!7887 () ListLongMap!1481)

(assert (=> b!83819 (= e!54695 call!7887)))

(declare-fun b!83820 () Bool)

(assert (=> b!83820 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(assert (=> b!83820 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2156 (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16)))))))))

(declare-fun lt!39465 () ListLongMap!1481)

(declare-fun e!54698 () Bool)

(assert (=> b!83820 (= e!54698 (= (apply!81 lt!39465 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) (get!1206 (select (arr!1913 (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!83821 () Bool)

(declare-fun e!54700 () ListLongMap!1481)

(assert (=> b!83821 (= e!54700 (ListLongMap!1482 Nil!1544))))

(declare-fun b!83822 () Bool)

(declare-fun e!54699 () Bool)

(assert (=> b!83822 (= e!54699 (= lt!39465 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16)))) (mask!6335 newMap!16) (ite (and c!13216 c!13218) lt!38883 (extraKeys!2160 newMap!16)) (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)) (minValue!2211 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2317 newMap!16))))))

(declare-fun b!83824 () Bool)

(declare-fun e!54697 () Bool)

(assert (=> b!83824 (= e!54697 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83824 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!83825 () Bool)

(declare-fun e!54696 () Bool)

(assert (=> b!83825 (= e!54696 e!54698)))

(assert (=> b!83825 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun res!43332 () Bool)

(assert (=> b!83825 (= res!43332 (contains!757 lt!39465 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83825 (=> (not res!43332) (not e!54698))))

(declare-fun b!83826 () Bool)

(assert (=> b!83826 (= e!54696 e!54699)))

(declare-fun c!13430 () Bool)

(assert (=> b!83826 (= c!13430 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!83827 () Bool)

(assert (=> b!83827 (= e!54700 e!54695)))

(declare-fun c!13429 () Bool)

(assert (=> b!83827 (= c!13429 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83823 () Bool)

(declare-fun res!43331 () Bool)

(declare-fun e!54701 () Bool)

(assert (=> b!83823 (=> (not res!43331) (not e!54701))))

(assert (=> b!83823 (= res!43331 (not (contains!757 lt!39465 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!21195 () Bool)

(assert (=> d!21195 e!54701))

(declare-fun res!43330 () Bool)

(assert (=> d!21195 (=> (not res!43330) (not e!54701))))

(assert (=> d!21195 (= res!43330 (not (contains!757 lt!39465 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21195 (= lt!39465 e!54700)))

(declare-fun c!13428 () Bool)

(assert (=> d!21195 (= c!13428 (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!21195 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!21195 (= (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16)))) (mask!6335 newMap!16) (ite (and c!13216 c!13218) lt!38883 (extraKeys!2160 newMap!16)) (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) lt!39465)))

(declare-fun b!83828 () Bool)

(declare-fun lt!39468 () Unit!2445)

(declare-fun lt!39467 () Unit!2445)

(assert (=> b!83828 (= lt!39468 lt!39467)))

(declare-fun lt!39462 () ListLongMap!1481)

(declare-fun lt!39464 () V!3019)

(declare-fun lt!39463 () (_ BitVec 64))

(declare-fun lt!39466 () (_ BitVec 64))

(assert (=> b!83828 (not (contains!757 (+!114 lt!39462 (tuple2!2221 lt!39466 lt!39464)) lt!39463))))

(assert (=> b!83828 (= lt!39467 (addStillNotContains!32 lt!39462 lt!39466 lt!39464 lt!39463))))

(assert (=> b!83828 (= lt!39463 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!83828 (= lt!39464 (get!1206 (select (arr!1913 (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!83828 (= lt!39466 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!83828 (= lt!39462 call!7887)))

(assert (=> b!83828 (= e!54695 (+!114 call!7887 (tuple2!2221 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000) (get!1206 (select (arr!1913 (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!83829 () Bool)

(assert (=> b!83829 (= e!54701 e!54696)))

(declare-fun c!13431 () Bool)

(assert (=> b!83829 (= c!13431 e!54697)))

(declare-fun res!43329 () Bool)

(assert (=> b!83829 (=> (not res!43329) (not e!54697))))

(assert (=> b!83829 (= res!43329 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun bm!7884 () Bool)

(assert (=> bm!7884 (= call!7887 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16)))) (mask!6335 newMap!16) (ite (and c!13216 c!13218) lt!38883 (extraKeys!2160 newMap!16)) (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)) (minValue!2211 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2317 newMap!16)))))

(declare-fun b!83830 () Bool)

(assert (=> b!83830 (= e!54699 (isEmpty!337 lt!39465))))

(assert (= (and d!21195 c!13428) b!83821))

(assert (= (and d!21195 (not c!13428)) b!83827))

(assert (= (and b!83827 c!13429) b!83828))

(assert (= (and b!83827 (not c!13429)) b!83819))

(assert (= (or b!83828 b!83819) bm!7884))

(assert (= (and d!21195 res!43330) b!83823))

(assert (= (and b!83823 res!43331) b!83829))

(assert (= (and b!83829 res!43329) b!83824))

(assert (= (and b!83829 c!13431) b!83825))

(assert (= (and b!83829 (not c!13431)) b!83826))

(assert (= (and b!83825 res!43332) b!83820))

(assert (= (and b!83826 c!13430) b!83822))

(assert (= (and b!83826 (not c!13430)) b!83830))

(declare-fun b_lambda!3731 () Bool)

(assert (=> (not b_lambda!3731) (not b!83820)))

(assert (=> b!83820 t!5259))

(declare-fun b_and!5085 () Bool)

(assert (= b_and!5081 (and (=> t!5259 result!2903) b_and!5085)))

(assert (=> b!83820 t!5261))

(declare-fun b_and!5087 () Bool)

(assert (= b_and!5083 (and (=> t!5261 result!2905) b_and!5087)))

(declare-fun b_lambda!3733 () Bool)

(assert (=> (not b_lambda!3733) (not b!83828)))

(assert (=> b!83828 t!5259))

(declare-fun b_and!5089 () Bool)

(assert (= b_and!5085 (and (=> t!5259 result!2903) b_and!5089)))

(assert (=> b!83828 t!5261))

(declare-fun b_and!5091 () Bool)

(assert (= b_and!5087 (and (=> t!5261 result!2905) b_and!5091)))

(declare-fun m!87041 () Bool)

(assert (=> b!83822 m!87041))

(assert (=> bm!7884 m!87041))

(assert (=> b!83820 m!86499))

(assert (=> b!83820 m!86049))

(assert (=> b!83820 m!86499))

(assert (=> b!83820 m!86089))

(assert (=> b!83820 m!86503))

(assert (=> b!83820 m!86049))

(declare-fun m!87043 () Bool)

(assert (=> b!83820 m!87043))

(assert (=> b!83820 m!86089))

(assert (=> b!83824 m!86049))

(assert (=> b!83824 m!86049))

(assert (=> b!83824 m!86051))

(assert (=> b!83827 m!86049))

(assert (=> b!83827 m!86049))

(assert (=> b!83827 m!86051))

(assert (=> b!83828 m!86499))

(declare-fun m!87045 () Bool)

(assert (=> b!83828 m!87045))

(assert (=> b!83828 m!86049))

(declare-fun m!87047 () Bool)

(assert (=> b!83828 m!87047))

(assert (=> b!83828 m!86499))

(assert (=> b!83828 m!86089))

(assert (=> b!83828 m!86503))

(declare-fun m!87049 () Bool)

(assert (=> b!83828 m!87049))

(assert (=> b!83828 m!86089))

(assert (=> b!83828 m!87047))

(declare-fun m!87051 () Bool)

(assert (=> b!83828 m!87051))

(declare-fun m!87053 () Bool)

(assert (=> d!21195 m!87053))

(assert (=> d!21195 m!86023))

(declare-fun m!87055 () Bool)

(assert (=> b!83830 m!87055))

(assert (=> b!83825 m!86049))

(assert (=> b!83825 m!86049))

(declare-fun m!87057 () Bool)

(assert (=> b!83825 m!87057))

(declare-fun m!87059 () Bool)

(assert (=> b!83823 m!87059))

(assert (=> bm!7848 d!21195))

(declare-fun d!21197 () Bool)

(declare-fun e!54702 () Bool)

(assert (=> d!21197 e!54702))

(declare-fun res!43333 () Bool)

(assert (=> d!21197 (=> res!43333 e!54702)))

(declare-fun lt!39469 () Bool)

(assert (=> d!21197 (= res!43333 (not lt!39469))))

(declare-fun lt!39471 () Bool)

(assert (=> d!21197 (= lt!39469 lt!39471)))

(declare-fun lt!39472 () Unit!2445)

(declare-fun e!54703 () Unit!2445)

(assert (=> d!21197 (= lt!39472 e!54703)))

(declare-fun c!13432 () Bool)

(assert (=> d!21197 (= c!13432 lt!39471)))

(assert (=> d!21197 (= lt!39471 (containsKey!142 (toList!756 lt!39337) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21197 (= (contains!757 lt!39337 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39469)))

(declare-fun b!83831 () Bool)

(declare-fun lt!39470 () Unit!2445)

(assert (=> b!83831 (= e!54703 lt!39470)))

(assert (=> b!83831 (= lt!39470 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39337) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> b!83831 (isDefined!92 (getValueByKey!138 (toList!756 lt!39337) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!83832 () Bool)

(declare-fun Unit!2483 () Unit!2445)

(assert (=> b!83832 (= e!54703 Unit!2483)))

(declare-fun b!83833 () Bool)

(assert (=> b!83833 (= e!54702 (isDefined!92 (getValueByKey!138 (toList!756 lt!39337) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!21197 c!13432) b!83831))

(assert (= (and d!21197 (not c!13432)) b!83832))

(assert (= (and d!21197 (not res!43333)) b!83833))

(declare-fun m!87061 () Bool)

(assert (=> d!21197 m!87061))

(declare-fun m!87063 () Bool)

(assert (=> b!83831 m!87063))

(assert (=> b!83831 m!86627))

(assert (=> b!83831 m!86627))

(declare-fun m!87065 () Bool)

(assert (=> b!83831 m!87065))

(assert (=> b!83833 m!86627))

(assert (=> b!83833 m!86627))

(assert (=> b!83833 m!87065))

(assert (=> d!21065 d!21197))

(declare-fun b!83835 () Bool)

(declare-fun e!54704 () Option!144)

(declare-fun e!54705 () Option!144)

(assert (=> b!83835 (= e!54704 e!54705)))

(declare-fun c!13434 () Bool)

(assert (=> b!83835 (= c!13434 (and ((_ is Cons!1543) lt!39334) (not (= (_1!1120 (h!2133 lt!39334)) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!83834 () Bool)

(assert (=> b!83834 (= e!54704 (Some!143 (_2!1120 (h!2133 lt!39334))))))

(declare-fun b!83837 () Bool)

(assert (=> b!83837 (= e!54705 None!142)))

(declare-fun d!21199 () Bool)

(declare-fun c!13433 () Bool)

(assert (=> d!21199 (= c!13433 (and ((_ is Cons!1543) lt!39334) (= (_1!1120 (h!2133 lt!39334)) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21199 (= (getValueByKey!138 lt!39334 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) e!54704)))

(declare-fun b!83836 () Bool)

(assert (=> b!83836 (= e!54705 (getValueByKey!138 (t!5251 lt!39334) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21199 c!13433) b!83834))

(assert (= (and d!21199 (not c!13433)) b!83835))

(assert (= (and b!83835 c!13434) b!83836))

(assert (= (and b!83835 (not c!13434)) b!83837))

(declare-fun m!87067 () Bool)

(assert (=> b!83836 m!87067))

(assert (=> d!21065 d!21199))

(declare-fun d!21201 () Bool)

(assert (=> d!21201 (= (getValueByKey!138 lt!39334 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun lt!39473 () Unit!2445)

(assert (=> d!21201 (= lt!39473 (choose!495 lt!39334 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun e!54706 () Bool)

(assert (=> d!21201 e!54706))

(declare-fun res!43334 () Bool)

(assert (=> d!21201 (=> (not res!43334) (not e!54706))))

(assert (=> d!21201 (= res!43334 (isStrictlySorted!292 lt!39334))))

(assert (=> d!21201 (= (lemmaContainsTupThenGetReturnValue!57 lt!39334 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39473)))

(declare-fun b!83838 () Bool)

(declare-fun res!43335 () Bool)

(assert (=> b!83838 (=> (not res!43335) (not e!54706))))

(assert (=> b!83838 (= res!43335 (containsKey!142 lt!39334 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!83839 () Bool)

(assert (=> b!83839 (= e!54706 (contains!760 lt!39334 (tuple2!2221 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!21201 res!43334) b!83838))

(assert (= (and b!83838 res!43335) b!83839))

(assert (=> d!21201 m!86621))

(declare-fun m!87069 () Bool)

(assert (=> d!21201 m!87069))

(declare-fun m!87071 () Bool)

(assert (=> d!21201 m!87071))

(declare-fun m!87073 () Bool)

(assert (=> b!83838 m!87073))

(declare-fun m!87075 () Bool)

(assert (=> b!83839 m!87075))

(assert (=> d!21065 d!21201))

(declare-fun bm!7885 () Bool)

(declare-fun call!7889 () List!1547)

(declare-fun call!7888 () List!1547)

(assert (=> bm!7885 (= call!7889 call!7888)))

(declare-fun b!83840 () Bool)

(declare-fun e!54710 () List!1547)

(assert (=> b!83840 (= e!54710 call!7889)))

(declare-fun b!83841 () Bool)

(declare-fun e!54709 () List!1547)

(declare-fun call!7890 () List!1547)

(assert (=> b!83841 (= e!54709 call!7890)))

(declare-fun e!54708 () List!1547)

(declare-fun b!83842 () Bool)

(assert (=> b!83842 (= e!54708 (insertStrictlySorted!59 (t!5251 (toList!756 (+!114 lt!38755 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!83843 () Bool)

(assert (=> b!83843 (= e!54709 call!7890)))

(declare-fun b!83844 () Bool)

(declare-fun res!43336 () Bool)

(declare-fun e!54711 () Bool)

(assert (=> b!83844 (=> (not res!43336) (not e!54711))))

(declare-fun lt!39474 () List!1547)

(assert (=> b!83844 (= res!43336 (containsKey!142 lt!39474 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun d!21203 () Bool)

(assert (=> d!21203 e!54711))

(declare-fun res!43337 () Bool)

(assert (=> d!21203 (=> (not res!43337) (not e!54711))))

(assert (=> d!21203 (= res!43337 (isStrictlySorted!292 lt!39474))))

(declare-fun e!54707 () List!1547)

(assert (=> d!21203 (= lt!39474 e!54707)))

(declare-fun c!13436 () Bool)

(assert (=> d!21203 (= c!13436 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38755 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) (bvslt (_1!1120 (h!2133 (toList!756 (+!114 lt!38755 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21203 (isStrictlySorted!292 (toList!756 (+!114 lt!38755 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21203 (= (insertStrictlySorted!59 (toList!756 (+!114 lt!38755 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39474)))

(declare-fun b!83845 () Bool)

(assert (=> b!83845 (= e!54711 (contains!760 lt!39474 (tuple2!2221 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!83846 () Bool)

(assert (=> b!83846 (= e!54707 e!54710)))

(declare-fun c!13435 () Bool)

(assert (=> b!83846 (= c!13435 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38755 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) (= (_1!1120 (h!2133 (toList!756 (+!114 lt!38755 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun c!13438 () Bool)

(declare-fun b!83847 () Bool)

(assert (=> b!83847 (= e!54708 (ite c!13435 (t!5251 (toList!756 (+!114 lt!38755 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) (ite c!13438 (Cons!1543 (h!2133 (toList!756 (+!114 lt!38755 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) (t!5251 (toList!756 (+!114 lt!38755 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))) Nil!1544)))))

(declare-fun b!83848 () Bool)

(assert (=> b!83848 (= c!13438 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38755 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) (bvsgt (_1!1120 (h!2133 (toList!756 (+!114 lt!38755 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> b!83848 (= e!54710 e!54709)))

(declare-fun bm!7886 () Bool)

(assert (=> bm!7886 (= call!7888 ($colon$colon!70 e!54708 (ite c!13436 (h!2133 (toList!756 (+!114 lt!38755 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) (tuple2!2221 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun c!13437 () Bool)

(assert (=> bm!7886 (= c!13437 c!13436)))

(declare-fun b!83849 () Bool)

(assert (=> b!83849 (= e!54707 call!7888)))

(declare-fun bm!7887 () Bool)

(assert (=> bm!7887 (= call!7890 call!7889)))

(assert (= (and d!21203 c!13436) b!83849))

(assert (= (and d!21203 (not c!13436)) b!83846))

(assert (= (and b!83846 c!13435) b!83840))

(assert (= (and b!83846 (not c!13435)) b!83848))

(assert (= (and b!83848 c!13438) b!83843))

(assert (= (and b!83848 (not c!13438)) b!83841))

(assert (= (or b!83843 b!83841) bm!7887))

(assert (= (or b!83840 bm!7887) bm!7885))

(assert (= (or b!83849 bm!7885) bm!7886))

(assert (= (and bm!7886 c!13437) b!83842))

(assert (= (and bm!7886 (not c!13437)) b!83847))

(assert (= (and d!21203 res!43337) b!83844))

(assert (= (and b!83844 res!43336) b!83845))

(declare-fun m!87077 () Bool)

(assert (=> d!21203 m!87077))

(declare-fun m!87079 () Bool)

(assert (=> d!21203 m!87079))

(declare-fun m!87081 () Bool)

(assert (=> b!83842 m!87081))

(declare-fun m!87083 () Bool)

(assert (=> b!83845 m!87083))

(declare-fun m!87085 () Bool)

(assert (=> bm!7886 m!87085))

(declare-fun m!87087 () Bool)

(assert (=> b!83844 m!87087))

(assert (=> d!21065 d!21203))

(declare-fun b!83850 () Bool)

(declare-fun e!54712 () ListLongMap!1481)

(declare-fun call!7891 () ListLongMap!1481)

(assert (=> b!83850 (= e!54712 call!7891)))

(declare-fun b!83851 () Bool)

(assert (=> b!83851 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(assert (=> b!83851 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2156 (_values!2300 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun e!54715 () Bool)

(declare-fun lt!39478 () ListLongMap!1481)

(assert (=> b!83851 (= e!54715 (= (apply!81 lt!39478 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!83852 () Bool)

(declare-fun e!54717 () ListLongMap!1481)

(assert (=> b!83852 (= e!54717 (ListLongMap!1482 Nil!1544))))

(declare-fun b!83853 () Bool)

(declare-fun e!54716 () Bool)

(assert (=> b!83853 (= e!54716 (= lt!39478 (getCurrentListMapNoExtraKeys!78 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!83855 () Bool)

(declare-fun e!54714 () Bool)

(assert (=> b!83855 (= e!54714 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!83855 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!83856 () Bool)

(declare-fun e!54713 () Bool)

(assert (=> b!83856 (= e!54713 e!54715)))

(assert (=> b!83856 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun res!43341 () Bool)

(assert (=> b!83856 (= res!43341 (contains!757 lt!39478 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!83856 (=> (not res!43341) (not e!54715))))

(declare-fun b!83857 () Bool)

(assert (=> b!83857 (= e!54713 e!54716)))

(declare-fun c!13441 () Bool)

(assert (=> b!83857 (= c!13441 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!83858 () Bool)

(assert (=> b!83858 (= e!54717 e!54712)))

(declare-fun c!13440 () Bool)

(assert (=> b!83858 (= c!13440 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!83854 () Bool)

(declare-fun res!43340 () Bool)

(declare-fun e!54718 () Bool)

(assert (=> b!83854 (=> (not res!43340) (not e!54718))))

(assert (=> b!83854 (= res!43340 (not (contains!757 lt!39478 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!21205 () Bool)

(assert (=> d!21205 e!54718))

(declare-fun res!43339 () Bool)

(assert (=> d!21205 (=> (not res!43339) (not e!54718))))

(assert (=> d!21205 (= res!43339 (not (contains!757 lt!39478 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21205 (= lt!39478 e!54717)))

(declare-fun c!13439 () Bool)

(assert (=> d!21205 (= c!13439 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(assert (=> d!21205 (validMask!0 (mask!6335 (v!2632 (underlying!290 thiss!992))))))

(assert (=> d!21205 (= (getCurrentListMapNoExtraKeys!78 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))) lt!39478)))

(declare-fun b!83859 () Bool)

(declare-fun lt!39481 () Unit!2445)

(declare-fun lt!39480 () Unit!2445)

(assert (=> b!83859 (= lt!39481 lt!39480)))

(declare-fun lt!39476 () (_ BitVec 64))

(declare-fun lt!39479 () (_ BitVec 64))

(declare-fun lt!39477 () V!3019)

(declare-fun lt!39475 () ListLongMap!1481)

(assert (=> b!83859 (not (contains!757 (+!114 lt!39475 (tuple2!2221 lt!39479 lt!39477)) lt!39476))))

(assert (=> b!83859 (= lt!39480 (addStillNotContains!32 lt!39475 lt!39479 lt!39477 lt!39476))))

(assert (=> b!83859 (= lt!39476 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!83859 (= lt!39477 (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!83859 (= lt!39479 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!83859 (= lt!39475 call!7891)))

(assert (=> b!83859 (= e!54712 (+!114 call!7891 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!83860 () Bool)

(assert (=> b!83860 (= e!54718 e!54713)))

(declare-fun c!13442 () Bool)

(assert (=> b!83860 (= c!13442 e!54714)))

(declare-fun res!43338 () Bool)

(assert (=> b!83860 (=> (not res!43338) (not e!54714))))

(assert (=> b!83860 (= res!43338 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun bm!7888 () Bool)

(assert (=> bm!7888 (= call!7891 (getCurrentListMapNoExtraKeys!78 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (_values!2300 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992))) (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) (minValue!2211 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun b!83861 () Bool)

(assert (=> b!83861 (= e!54716 (isEmpty!337 lt!39478))))

(assert (= (and d!21205 c!13439) b!83852))

(assert (= (and d!21205 (not c!13439)) b!83858))

(assert (= (and b!83858 c!13440) b!83859))

(assert (= (and b!83858 (not c!13440)) b!83850))

(assert (= (or b!83859 b!83850) bm!7888))

(assert (= (and d!21205 res!43339) b!83854))

(assert (= (and b!83854 res!43340) b!83860))

(assert (= (and b!83860 res!43338) b!83855))

(assert (= (and b!83860 c!13442) b!83856))

(assert (= (and b!83860 (not c!13442)) b!83857))

(assert (= (and b!83856 res!43341) b!83851))

(assert (= (and b!83857 c!13441) b!83853))

(assert (= (and b!83857 (not c!13441)) b!83861))

(declare-fun b_lambda!3735 () Bool)

(assert (=> (not b_lambda!3735) (not b!83851)))

(assert (=> b!83851 t!5248))

(declare-fun b_and!5093 () Bool)

(assert (= b_and!5089 (and (=> t!5248 result!2889) b_and!5093)))

(assert (=> b!83851 t!5250))

(declare-fun b_and!5095 () Bool)

(assert (= b_and!5091 (and (=> t!5250 result!2893) b_and!5095)))

(declare-fun b_lambda!3737 () Bool)

(assert (=> (not b_lambda!3737) (not b!83859)))

(assert (=> b!83859 t!5248))

(declare-fun b_and!5097 () Bool)

(assert (= b_and!5093 (and (=> t!5248 result!2889) b_and!5097)))

(assert (=> b!83859 t!5250))

(declare-fun b_and!5099 () Bool)

(assert (= b_and!5095 (and (=> t!5250 result!2893) b_and!5099)))

(declare-fun m!87089 () Bool)

(assert (=> b!83853 m!87089))

(assert (=> bm!7888 m!87089))

(declare-fun m!87091 () Bool)

(assert (=> b!83851 m!87091))

(declare-fun m!87093 () Bool)

(assert (=> b!83851 m!87093))

(assert (=> b!83851 m!87091))

(assert (=> b!83851 m!85615))

(declare-fun m!87095 () Bool)

(assert (=> b!83851 m!87095))

(assert (=> b!83851 m!87093))

(declare-fun m!87097 () Bool)

(assert (=> b!83851 m!87097))

(assert (=> b!83851 m!85615))

(assert (=> b!83855 m!87093))

(assert (=> b!83855 m!87093))

(declare-fun m!87099 () Bool)

(assert (=> b!83855 m!87099))

(assert (=> b!83858 m!87093))

(assert (=> b!83858 m!87093))

(assert (=> b!83858 m!87099))

(assert (=> b!83859 m!87091))

(declare-fun m!87101 () Bool)

(assert (=> b!83859 m!87101))

(assert (=> b!83859 m!87093))

(declare-fun m!87103 () Bool)

(assert (=> b!83859 m!87103))

(assert (=> b!83859 m!87091))

(assert (=> b!83859 m!85615))

(assert (=> b!83859 m!87095))

(declare-fun m!87105 () Bool)

(assert (=> b!83859 m!87105))

(assert (=> b!83859 m!85615))

(assert (=> b!83859 m!87103))

(declare-fun m!87107 () Bool)

(assert (=> b!83859 m!87107))

(declare-fun m!87109 () Bool)

(assert (=> d!21205 m!87109))

(assert (=> d!21205 m!85601))

(declare-fun m!87111 () Bool)

(assert (=> b!83861 m!87111))

(assert (=> b!83856 m!87093))

(assert (=> b!83856 m!87093))

(declare-fun m!87113 () Bool)

(assert (=> b!83856 m!87113))

(declare-fun m!87115 () Bool)

(assert (=> b!83854 m!87115))

(assert (=> bm!7868 d!21205))

(assert (=> b!83477 d!21181))

(declare-fun d!21207 () Bool)

(assert (=> d!21207 (= (apply!81 lt!39083 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1209 (getValueByKey!138 (toList!756 lt!39083) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3526 () Bool)

(assert (= bs!3526 d!21207))

(assert (=> bs!3526 m!87037))

(assert (=> bs!3526 m!87037))

(declare-fun m!87117 () Bool)

(assert (=> bs!3526 m!87117))

(assert (=> b!83229 d!21207))

(declare-fun b!83862 () Bool)

(declare-fun e!54721 () Bool)

(declare-fun call!7892 () Bool)

(assert (=> b!83862 (= e!54721 call!7892)))

(declare-fun bm!7889 () Bool)

(assert (=> bm!7889 (= call!7892 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3985 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun b!83863 () Bool)

(declare-fun e!54720 () Bool)

(assert (=> b!83863 (= e!54720 call!7892)))

(declare-fun b!83865 () Bool)

(assert (=> b!83865 (= e!54720 e!54721)))

(declare-fun lt!39482 () (_ BitVec 64))

(assert (=> b!83865 (= lt!39482 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!39483 () Unit!2445)

(assert (=> b!83865 (= lt!39483 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) lt!39482 #b00000000000000000000000000000000))))

(assert (=> b!83865 (arrayContainsKey!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) lt!39482 #b00000000000000000000000000000000)))

(declare-fun lt!39484 () Unit!2445)

(assert (=> b!83865 (= lt!39484 lt!39483)))

(declare-fun res!43343 () Bool)

(assert (=> b!83865 (= res!43343 (= (seekEntryOrOpen!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) #b00000000000000000000000000000000) (_keys!3985 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992)))) (Found!252 #b00000000000000000000000000000000)))))

(assert (=> b!83865 (=> (not res!43343) (not e!54721))))

(declare-fun b!83864 () Bool)

(declare-fun e!54719 () Bool)

(assert (=> b!83864 (= e!54719 e!54720)))

(declare-fun c!13443 () Bool)

(assert (=> b!83864 (= c!13443 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!21209 () Bool)

(declare-fun res!43342 () Bool)

(assert (=> d!21209 (=> res!43342 e!54719)))

(assert (=> d!21209 (= res!43342 (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(assert (=> d!21209 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (mask!6335 (v!2632 (underlying!290 thiss!992)))) e!54719)))

(assert (= (and d!21209 (not res!43342)) b!83864))

(assert (= (and b!83864 c!13443) b!83865))

(assert (= (and b!83864 (not c!13443)) b!83863))

(assert (= (and b!83865 res!43343) b!83862))

(assert (= (or b!83862 b!83863) bm!7889))

(declare-fun m!87119 () Bool)

(assert (=> bm!7889 m!87119))

(declare-fun m!87121 () Bool)

(assert (=> b!83865 m!87121))

(declare-fun m!87123 () Bool)

(assert (=> b!83865 m!87123))

(declare-fun m!87125 () Bool)

(assert (=> b!83865 m!87125))

(assert (=> b!83865 m!87121))

(declare-fun m!87127 () Bool)

(assert (=> b!83865 m!87127))

(assert (=> b!83864 m!87121))

(assert (=> b!83864 m!87121))

(declare-fun m!87129 () Bool)

(assert (=> b!83864 m!87129))

(assert (=> b!83250 d!21209))

(declare-fun b!83867 () Bool)

(declare-fun e!54722 () Option!144)

(declare-fun e!54723 () Option!144)

(assert (=> b!83867 (= e!54722 e!54723)))

(declare-fun c!13445 () Bool)

(assert (=> b!83867 (= c!13445 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!39041))) (not (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!39041)))) (_1!1120 lt!38747)))))))

(declare-fun b!83866 () Bool)

(assert (=> b!83866 (= e!54722 (Some!143 (_2!1120 (h!2133 (t!5251 (toList!756 lt!39041))))))))

(declare-fun b!83869 () Bool)

(assert (=> b!83869 (= e!54723 None!142)))

(declare-fun d!21211 () Bool)

(declare-fun c!13444 () Bool)

(assert (=> d!21211 (= c!13444 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!39041))) (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!39041)))) (_1!1120 lt!38747))))))

(assert (=> d!21211 (= (getValueByKey!138 (t!5251 (toList!756 lt!39041)) (_1!1120 lt!38747)) e!54722)))

(declare-fun b!83868 () Bool)

(assert (=> b!83868 (= e!54723 (getValueByKey!138 (t!5251 (t!5251 (toList!756 lt!39041))) (_1!1120 lt!38747)))))

(assert (= (and d!21211 c!13444) b!83866))

(assert (= (and d!21211 (not c!13444)) b!83867))

(assert (= (and b!83867 c!13445) b!83868))

(assert (= (and b!83867 (not c!13445)) b!83869))

(declare-fun m!87131 () Bool)

(assert (=> b!83868 m!87131))

(assert (=> b!83418 d!21211))

(assert (=> b!83526 d!21181))

(declare-fun d!21213 () Bool)

(declare-fun res!43344 () Bool)

(declare-fun e!54724 () Bool)

(assert (=> d!21213 (=> res!43344 e!54724)))

(assert (=> d!21213 (= res!43344 (and ((_ is Cons!1543) (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020)))) (= (_1!1120 (h!2133 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020))))) lt!39019)))))

(assert (=> d!21213 (= (containsKey!142 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020))) lt!39019) e!54724)))

(declare-fun b!83870 () Bool)

(declare-fun e!54725 () Bool)

(assert (=> b!83870 (= e!54724 e!54725)))

(declare-fun res!43345 () Bool)

(assert (=> b!83870 (=> (not res!43345) (not e!54725))))

(assert (=> b!83870 (= res!43345 (and (or (not ((_ is Cons!1543) (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020))))) (bvsle (_1!1120 (h!2133 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020))))) lt!39019)) ((_ is Cons!1543) (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020)))) (bvslt (_1!1120 (h!2133 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020))))) lt!39019)))))

(declare-fun b!83871 () Bool)

(assert (=> b!83871 (= e!54725 (containsKey!142 (t!5251 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020)))) lt!39019))))

(assert (= (and d!21213 (not res!43344)) b!83870))

(assert (= (and b!83870 res!43345) b!83871))

(declare-fun m!87133 () Bool)

(assert (=> b!83871 m!87133))

(assert (=> d!21097 d!21213))

(declare-fun d!21215 () Bool)

(assert (=> d!21215 (= (+!114 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) lt!38883 lt!38748 (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(assert (=> d!21215 true))

(declare-fun _$7!71 () Unit!2445)

(assert (=> d!21215 (= (choose!499 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) lt!38883 (zeroValue!2211 newMap!16) lt!38748 (minValue!2211 newMap!16) (defaultEntry!2317 newMap!16)) _$7!71)))

(declare-fun bs!3527 () Bool)

(assert (= bs!3527 d!21215))

(assert (=> bs!3527 m!85729))

(assert (=> bs!3527 m!85729))

(assert (=> bs!3527 m!86603))

(assert (=> bs!3527 m!86605))

(assert (=> d!21059 d!21215))

(assert (=> d!21059 d!20917))

(declare-fun d!21217 () Bool)

(declare-fun e!54726 () Bool)

(assert (=> d!21217 e!54726))

(declare-fun res!43346 () Bool)

(assert (=> d!21217 (=> (not res!43346) (not e!54726))))

(declare-fun lt!39488 () ListLongMap!1481)

(assert (=> d!21217 (= res!43346 (contains!757 lt!39488 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748))))))

(declare-fun lt!39485 () List!1547)

(assert (=> d!21217 (= lt!39488 (ListLongMap!1482 lt!39485))))

(declare-fun lt!39486 () Unit!2445)

(declare-fun lt!39487 () Unit!2445)

(assert (=> d!21217 (= lt!39486 lt!39487)))

(assert (=> d!21217 (= (getValueByKey!138 lt!39485 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748))) (Some!143 (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748))))))

(assert (=> d!21217 (= lt!39487 (lemmaContainsTupThenGetReturnValue!57 lt!39485 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748))))))

(assert (=> d!21217 (= lt!39485 (insertStrictlySorted!59 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748))))))

(assert (=> d!21217 (= (+!114 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748)) lt!39488)))

(declare-fun b!83872 () Bool)

(declare-fun res!43347 () Bool)

(assert (=> b!83872 (=> (not res!43347) (not e!54726))))

(assert (=> b!83872 (= res!43347 (= (getValueByKey!138 (toList!756 lt!39488) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748))) (Some!143 (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748)))))))

(declare-fun b!83873 () Bool)

(assert (=> b!83873 (= e!54726 (contains!760 (toList!756 lt!39488) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748)))))

(assert (= (and d!21217 res!43346) b!83872))

(assert (= (and b!83872 res!43347) b!83873))

(declare-fun m!87135 () Bool)

(assert (=> d!21217 m!87135))

(declare-fun m!87137 () Bool)

(assert (=> d!21217 m!87137))

(declare-fun m!87139 () Bool)

(assert (=> d!21217 m!87139))

(declare-fun m!87141 () Bool)

(assert (=> d!21217 m!87141))

(declare-fun m!87143 () Bool)

(assert (=> b!83872 m!87143))

(declare-fun m!87145 () Bool)

(assert (=> b!83873 m!87145))

(assert (=> d!21059 d!21217))

(declare-fun d!21219 () Bool)

(assert (=> d!21219 (= (validMask!0 (mask!6335 newMap!16)) (and (or (= (mask!6335 newMap!16) #b00000000000000000000000000000111) (= (mask!6335 newMap!16) #b00000000000000000000000000001111) (= (mask!6335 newMap!16) #b00000000000000000000000000011111) (= (mask!6335 newMap!16) #b00000000000000000000000000111111) (= (mask!6335 newMap!16) #b00000000000000000000000001111111) (= (mask!6335 newMap!16) #b00000000000000000000000011111111) (= (mask!6335 newMap!16) #b00000000000000000000000111111111) (= (mask!6335 newMap!16) #b00000000000000000000001111111111) (= (mask!6335 newMap!16) #b00000000000000000000011111111111) (= (mask!6335 newMap!16) #b00000000000000000000111111111111) (= (mask!6335 newMap!16) #b00000000000000000001111111111111) (= (mask!6335 newMap!16) #b00000000000000000011111111111111) (= (mask!6335 newMap!16) #b00000000000000000111111111111111) (= (mask!6335 newMap!16) #b00000000000000001111111111111111) (= (mask!6335 newMap!16) #b00000000000000011111111111111111) (= (mask!6335 newMap!16) #b00000000000000111111111111111111) (= (mask!6335 newMap!16) #b00000000000001111111111111111111) (= (mask!6335 newMap!16) #b00000000000011111111111111111111) (= (mask!6335 newMap!16) #b00000000000111111111111111111111) (= (mask!6335 newMap!16) #b00000000001111111111111111111111) (= (mask!6335 newMap!16) #b00000000011111111111111111111111) (= (mask!6335 newMap!16) #b00000000111111111111111111111111) (= (mask!6335 newMap!16) #b00000001111111111111111111111111) (= (mask!6335 newMap!16) #b00000011111111111111111111111111) (= (mask!6335 newMap!16) #b00000111111111111111111111111111) (= (mask!6335 newMap!16) #b00001111111111111111111111111111) (= (mask!6335 newMap!16) #b00011111111111111111111111111111) (= (mask!6335 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6335 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!21059 d!21219))

(declare-fun b!83874 () Bool)

(declare-fun e!54732 () ListLongMap!1481)

(declare-fun call!7893 () ListLongMap!1481)

(assert (=> b!83874 (= e!54732 call!7893)))

(declare-fun bm!7890 () Bool)

(declare-fun call!7899 () ListLongMap!1481)

(declare-fun call!7894 () ListLongMap!1481)

(assert (=> bm!7890 (= call!7899 call!7894)))

(declare-fun b!83875 () Bool)

(declare-fun e!54736 () Bool)

(declare-fun lt!39500 () ListLongMap!1481)

(assert (=> b!83875 (= e!54736 (= (apply!81 lt!39500 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2211 newMap!16)))))

(declare-fun b!83876 () Bool)

(declare-fun e!54727 () ListLongMap!1481)

(declare-fun call!7895 () ListLongMap!1481)

(assert (=> b!83876 (= e!54727 call!7895)))

(declare-fun b!83878 () Bool)

(declare-fun e!54728 () ListLongMap!1481)

(declare-fun call!7896 () ListLongMap!1481)

(assert (=> b!83878 (= e!54728 (+!114 call!7896 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))

(declare-fun b!83879 () Bool)

(declare-fun res!43356 () Bool)

(declare-fun e!54735 () Bool)

(assert (=> b!83879 (=> (not res!43356) (not e!54735))))

(declare-fun e!54731 () Bool)

(assert (=> b!83879 (= res!43356 e!54731)))

(declare-fun c!13450 () Bool)

(assert (=> b!83879 (= c!13450 (not (= (bvand lt!38883 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7891 () Bool)

(assert (=> bm!7891 (= call!7894 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) lt!38883 lt!38748 (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun c!13451 () Bool)

(declare-fun bm!7892 () Bool)

(declare-fun c!13449 () Bool)

(assert (=> bm!7892 (= call!7896 (+!114 (ite c!13449 call!7894 (ite c!13451 call!7899 call!7893)) (ite (or c!13449 c!13451) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))

(declare-fun b!83880 () Bool)

(declare-fun e!54734 () Unit!2445)

(declare-fun Unit!2484 () Unit!2445)

(assert (=> b!83880 (= e!54734 Unit!2484)))

(declare-fun bm!7893 () Bool)

(declare-fun call!7897 () Bool)

(assert (=> bm!7893 (= call!7897 (contains!757 lt!39500 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83881 () Bool)

(declare-fun res!43353 () Bool)

(assert (=> b!83881 (=> (not res!43353) (not e!54735))))

(declare-fun e!54738 () Bool)

(assert (=> b!83881 (= res!43353 e!54738)))

(declare-fun res!43354 () Bool)

(assert (=> b!83881 (=> res!43354 e!54738)))

(declare-fun e!54733 () Bool)

(assert (=> b!83881 (= res!43354 (not e!54733))))

(declare-fun res!43351 () Bool)

(assert (=> b!83881 (=> (not res!43351) (not e!54733))))

(assert (=> b!83881 (= res!43351 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!83882 () Bool)

(declare-fun e!54729 () Bool)

(assert (=> b!83882 (= e!54738 e!54729)))

(declare-fun res!43350 () Bool)

(assert (=> b!83882 (=> (not res!43350) (not e!54729))))

(assert (=> b!83882 (= res!43350 (contains!757 lt!39500 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83882 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!83883 () Bool)

(declare-fun e!54730 () Bool)

(assert (=> b!83883 (= e!54730 (not call!7897))))

(declare-fun b!83884 () Bool)

(declare-fun e!54737 () Bool)

(assert (=> b!83884 (= e!54731 e!54737)))

(declare-fun res!43349 () Bool)

(declare-fun call!7898 () Bool)

(assert (=> b!83884 (= res!43349 call!7898)))

(assert (=> b!83884 (=> (not res!43349) (not e!54737))))

(declare-fun b!83885 () Bool)

(declare-fun c!13448 () Bool)

(assert (=> b!83885 (= c!13448 (and (not (= (bvand lt!38883 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!38883 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!83885 (= e!54727 e!54732)))

(declare-fun b!83886 () Bool)

(declare-fun lt!39495 () Unit!2445)

(assert (=> b!83886 (= e!54734 lt!39495)))

(declare-fun lt!39501 () ListLongMap!1481)

(assert (=> b!83886 (= lt!39501 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) lt!38883 lt!38748 (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39494 () (_ BitVec 64))

(assert (=> b!83886 (= lt!39494 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39498 () (_ BitVec 64))

(assert (=> b!83886 (= lt!39498 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39503 () Unit!2445)

(assert (=> b!83886 (= lt!39503 (addStillContains!57 lt!39501 lt!39494 lt!38748 lt!39498))))

(assert (=> b!83886 (contains!757 (+!114 lt!39501 (tuple2!2221 lt!39494 lt!38748)) lt!39498)))

(declare-fun lt!39499 () Unit!2445)

(assert (=> b!83886 (= lt!39499 lt!39503)))

(declare-fun lt!39504 () ListLongMap!1481)

(assert (=> b!83886 (= lt!39504 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) lt!38883 lt!38748 (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39496 () (_ BitVec 64))

(assert (=> b!83886 (= lt!39496 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39510 () (_ BitVec 64))

(assert (=> b!83886 (= lt!39510 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39508 () Unit!2445)

(assert (=> b!83886 (= lt!39508 (addApplyDifferent!57 lt!39504 lt!39496 (minValue!2211 newMap!16) lt!39510))))

(assert (=> b!83886 (= (apply!81 (+!114 lt!39504 (tuple2!2221 lt!39496 (minValue!2211 newMap!16))) lt!39510) (apply!81 lt!39504 lt!39510))))

(declare-fun lt!39502 () Unit!2445)

(assert (=> b!83886 (= lt!39502 lt!39508)))

(declare-fun lt!39497 () ListLongMap!1481)

(assert (=> b!83886 (= lt!39497 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) lt!38883 lt!38748 (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39506 () (_ BitVec 64))

(assert (=> b!83886 (= lt!39506 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39490 () (_ BitVec 64))

(assert (=> b!83886 (= lt!39490 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39505 () Unit!2445)

(assert (=> b!83886 (= lt!39505 (addApplyDifferent!57 lt!39497 lt!39506 lt!38748 lt!39490))))

(assert (=> b!83886 (= (apply!81 (+!114 lt!39497 (tuple2!2221 lt!39506 lt!38748)) lt!39490) (apply!81 lt!39497 lt!39490))))

(declare-fun lt!39491 () Unit!2445)

(assert (=> b!83886 (= lt!39491 lt!39505)))

(declare-fun lt!39493 () ListLongMap!1481)

(assert (=> b!83886 (= lt!39493 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) lt!38883 lt!38748 (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39507 () (_ BitVec 64))

(assert (=> b!83886 (= lt!39507 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39492 () (_ BitVec 64))

(assert (=> b!83886 (= lt!39492 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!83886 (= lt!39495 (addApplyDifferent!57 lt!39493 lt!39507 (minValue!2211 newMap!16) lt!39492))))

(assert (=> b!83886 (= (apply!81 (+!114 lt!39493 (tuple2!2221 lt!39507 (minValue!2211 newMap!16))) lt!39492) (apply!81 lt!39493 lt!39492))))

(declare-fun b!83887 () Bool)

(assert (=> b!83887 (= e!54729 (= (apply!81 lt!39500 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) (get!1206 (select (arr!1913 (_values!2300 newMap!16)) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83887 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2156 (_values!2300 newMap!16))))))

(assert (=> b!83887 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!83877 () Bool)

(assert (=> b!83877 (= e!54732 call!7895)))

(declare-fun d!21221 () Bool)

(assert (=> d!21221 e!54735))

(declare-fun res!43352 () Bool)

(assert (=> d!21221 (=> (not res!43352) (not e!54735))))

(assert (=> d!21221 (= res!43352 (or (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))))

(declare-fun lt!39509 () ListLongMap!1481)

(assert (=> d!21221 (= lt!39500 lt!39509)))

(declare-fun lt!39489 () Unit!2445)

(assert (=> d!21221 (= lt!39489 e!54734)))

(declare-fun c!13447 () Bool)

(declare-fun e!54739 () Bool)

(assert (=> d!21221 (= c!13447 e!54739)))

(declare-fun res!43348 () Bool)

(assert (=> d!21221 (=> (not res!43348) (not e!54739))))

(assert (=> d!21221 (= res!43348 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!21221 (= lt!39509 e!54728)))

(assert (=> d!21221 (= c!13449 (and (not (= (bvand lt!38883 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!38883 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21221 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!21221 (= (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) lt!38883 lt!38748 (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) lt!39500)))

(declare-fun bm!7894 () Bool)

(assert (=> bm!7894 (= call!7898 (contains!757 lt!39500 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83888 () Bool)

(assert (=> b!83888 (= e!54731 (not call!7898))))

(declare-fun bm!7895 () Bool)

(assert (=> bm!7895 (= call!7893 call!7899)))

(declare-fun b!83889 () Bool)

(assert (=> b!83889 (= e!54739 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83890 () Bool)

(assert (=> b!83890 (= e!54735 e!54730)))

(declare-fun c!13446 () Bool)

(assert (=> b!83890 (= c!13446 (not (= (bvand lt!38883 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7896 () Bool)

(assert (=> bm!7896 (= call!7895 call!7896)))

(declare-fun b!83891 () Bool)

(assert (=> b!83891 (= e!54737 (= (apply!81 lt!39500 #b0000000000000000000000000000000000000000000000000000000000000000) lt!38748))))

(declare-fun b!83892 () Bool)

(assert (=> b!83892 (= e!54733 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83893 () Bool)

(assert (=> b!83893 (= e!54728 e!54727)))

(assert (=> b!83893 (= c!13451 (and (not (= (bvand lt!38883 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!38883 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!83894 () Bool)

(assert (=> b!83894 (= e!54730 e!54736)))

(declare-fun res!43355 () Bool)

(assert (=> b!83894 (= res!43355 call!7897)))

(assert (=> b!83894 (=> (not res!43355) (not e!54736))))

(assert (= (and d!21221 c!13449) b!83878))

(assert (= (and d!21221 (not c!13449)) b!83893))

(assert (= (and b!83893 c!13451) b!83876))

(assert (= (and b!83893 (not c!13451)) b!83885))

(assert (= (and b!83885 c!13448) b!83877))

(assert (= (and b!83885 (not c!13448)) b!83874))

(assert (= (or b!83877 b!83874) bm!7895))

(assert (= (or b!83876 bm!7895) bm!7890))

(assert (= (or b!83876 b!83877) bm!7896))

(assert (= (or b!83878 bm!7890) bm!7891))

(assert (= (or b!83878 bm!7896) bm!7892))

(assert (= (and d!21221 res!43348) b!83889))

(assert (= (and d!21221 c!13447) b!83886))

(assert (= (and d!21221 (not c!13447)) b!83880))

(assert (= (and d!21221 res!43352) b!83881))

(assert (= (and b!83881 res!43351) b!83892))

(assert (= (and b!83881 (not res!43354)) b!83882))

(assert (= (and b!83882 res!43350) b!83887))

(assert (= (and b!83881 res!43353) b!83879))

(assert (= (and b!83879 c!13450) b!83884))

(assert (= (and b!83879 (not c!13450)) b!83888))

(assert (= (and b!83884 res!43349) b!83891))

(assert (= (or b!83884 b!83888) bm!7894))

(assert (= (and b!83879 res!43356) b!83890))

(assert (= (and b!83890 c!13446) b!83894))

(assert (= (and b!83890 (not c!13446)) b!83883))

(assert (= (and b!83894 res!43355) b!83875))

(assert (= (or b!83894 b!83883) bm!7893))

(declare-fun b_lambda!3739 () Bool)

(assert (=> (not b_lambda!3739) (not b!83887)))

(assert (=> b!83887 t!5259))

(declare-fun b_and!5101 () Bool)

(assert (= b_and!5097 (and (=> t!5259 result!2903) b_and!5101)))

(assert (=> b!83887 t!5261))

(declare-fun b_and!5103 () Bool)

(assert (= b_and!5099 (and (=> t!5261 result!2905) b_and!5103)))

(declare-fun m!87147 () Bool)

(assert (=> bm!7891 m!87147))

(declare-fun m!87149 () Bool)

(assert (=> bm!7894 m!87149))

(declare-fun m!87151 () Bool)

(assert (=> bm!7892 m!87151))

(assert (=> b!83892 m!86049))

(assert (=> b!83892 m!86049))

(assert (=> b!83892 m!86051))

(declare-fun m!87153 () Bool)

(assert (=> bm!7893 m!87153))

(assert (=> b!83889 m!86049))

(assert (=> b!83889 m!86049))

(assert (=> b!83889 m!86051))

(assert (=> b!83882 m!86049))

(assert (=> b!83882 m!86049))

(declare-fun m!87155 () Bool)

(assert (=> b!83882 m!87155))

(assert (=> d!21221 m!86023))

(declare-fun m!87157 () Bool)

(assert (=> b!83875 m!87157))

(declare-fun m!87159 () Bool)

(assert (=> b!83886 m!87159))

(declare-fun m!87161 () Bool)

(assert (=> b!83886 m!87161))

(declare-fun m!87163 () Bool)

(assert (=> b!83886 m!87163))

(declare-fun m!87165 () Bool)

(assert (=> b!83886 m!87165))

(declare-fun m!87167 () Bool)

(assert (=> b!83886 m!87167))

(declare-fun m!87169 () Bool)

(assert (=> b!83886 m!87169))

(declare-fun m!87171 () Bool)

(assert (=> b!83886 m!87171))

(assert (=> b!83886 m!87161))

(declare-fun m!87173 () Bool)

(assert (=> b!83886 m!87173))

(declare-fun m!87175 () Bool)

(assert (=> b!83886 m!87175))

(assert (=> b!83886 m!87167))

(declare-fun m!87177 () Bool)

(assert (=> b!83886 m!87177))

(assert (=> b!83886 m!87163))

(assert (=> b!83886 m!86049))

(declare-fun m!87179 () Bool)

(assert (=> b!83886 m!87179))

(declare-fun m!87181 () Bool)

(assert (=> b!83886 m!87181))

(declare-fun m!87183 () Bool)

(assert (=> b!83886 m!87183))

(assert (=> b!83886 m!87147))

(declare-fun m!87185 () Bool)

(assert (=> b!83886 m!87185))

(assert (=> b!83886 m!87177))

(declare-fun m!87187 () Bool)

(assert (=> b!83886 m!87187))

(assert (=> b!83887 m!86089))

(assert (=> b!83887 m!86091))

(assert (=> b!83887 m!86049))

(declare-fun m!87189 () Bool)

(assert (=> b!83887 m!87189))

(assert (=> b!83887 m!86049))

(assert (=> b!83887 m!86091))

(assert (=> b!83887 m!86089))

(assert (=> b!83887 m!86095))

(declare-fun m!87191 () Bool)

(assert (=> b!83878 m!87191))

(declare-fun m!87193 () Bool)

(assert (=> b!83891 m!87193))

(assert (=> d!21059 d!21221))

(declare-fun d!21223 () Bool)

(assert (=> d!21223 (= (isDefined!92 (getValueByKey!138 (toList!756 lt!38974) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!338 (getValueByKey!138 (toList!756 lt!38974) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3528 () Bool)

(assert (= bs!3528 d!21223))

(assert (=> bs!3528 m!86589))

(declare-fun m!87195 () Bool)

(assert (=> bs!3528 m!87195))

(assert (=> b!83578 d!21223))

(declare-fun b!83896 () Bool)

(declare-fun e!54740 () Option!144)

(declare-fun e!54741 () Option!144)

(assert (=> b!83896 (= e!54740 e!54741)))

(declare-fun c!13453 () Bool)

(assert (=> b!83896 (= c!13453 (and ((_ is Cons!1543) (toList!756 lt!38974)) (not (= (_1!1120 (h!2133 (toList!756 lt!38974))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!83895 () Bool)

(assert (=> b!83895 (= e!54740 (Some!143 (_2!1120 (h!2133 (toList!756 lt!38974)))))))

(declare-fun b!83898 () Bool)

(assert (=> b!83898 (= e!54741 None!142)))

(declare-fun d!21225 () Bool)

(declare-fun c!13452 () Bool)

(assert (=> d!21225 (= c!13452 (and ((_ is Cons!1543) (toList!756 lt!38974)) (= (_1!1120 (h!2133 (toList!756 lt!38974))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21225 (= (getValueByKey!138 (toList!756 lt!38974) #b1000000000000000000000000000000000000000000000000000000000000000) e!54740)))

(declare-fun b!83897 () Bool)

(assert (=> b!83897 (= e!54741 (getValueByKey!138 (t!5251 (toList!756 lt!38974)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21225 c!13452) b!83895))

(assert (= (and d!21225 (not c!13452)) b!83896))

(assert (= (and b!83896 c!13453) b!83897))

(assert (= (and b!83896 (not c!13453)) b!83898))

(declare-fun m!87197 () Bool)

(assert (=> b!83897 m!87197))

(assert (=> b!83578 d!21225))

(declare-fun d!21227 () Bool)

(declare-fun lt!39511 () Bool)

(assert (=> d!21227 (= lt!39511 (select (content!87 lt!39233) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))))))

(declare-fun e!54742 () Bool)

(assert (=> d!21227 (= lt!39511 e!54742)))

(declare-fun res!43357 () Bool)

(assert (=> d!21227 (=> (not res!43357) (not e!54742))))

(assert (=> d!21227 (= res!43357 ((_ is Cons!1543) lt!39233))))

(assert (=> d!21227 (= (contains!760 lt!39233 (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))) lt!39511)))

(declare-fun b!83899 () Bool)

(declare-fun e!54743 () Bool)

(assert (=> b!83899 (= e!54742 e!54743)))

(declare-fun res!43358 () Bool)

(assert (=> b!83899 (=> res!43358 e!54743)))

(assert (=> b!83899 (= res!43358 (= (h!2133 lt!39233) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))))))

(declare-fun b!83900 () Bool)

(assert (=> b!83900 (= e!54743 (contains!760 (t!5251 lt!39233) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))))))

(assert (= (and d!21227 res!43357) b!83899))

(assert (= (and b!83899 (not res!43358)) b!83900))

(declare-fun m!87199 () Bool)

(assert (=> d!21227 m!87199))

(declare-fun m!87201 () Bool)

(assert (=> d!21227 m!87201))

(declare-fun m!87203 () Bool)

(assert (=> b!83900 m!87203))

(assert (=> b!83447 d!21227))

(declare-fun d!21229 () Bool)

(assert (=> d!21229 (= (apply!81 lt!39280 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1209 (getValueByKey!138 (toList!756 lt!39280) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3529 () Bool)

(assert (= bs!3529 d!21229))

(declare-fun m!87205 () Bool)

(assert (=> bs!3529 m!87205))

(assert (=> bs!3529 m!87205))

(declare-fun m!87207 () Bool)

(assert (=> bs!3529 m!87207))

(assert (=> b!83514 d!21229))

(declare-fun d!21231 () Bool)

(assert (=> d!21231 (= (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83413 d!21231))

(declare-fun d!21233 () Bool)

(declare-fun c!13454 () Bool)

(assert (=> d!21233 (= c!13454 ((_ is Nil!1544) (toList!756 lt!39037)))))

(declare-fun e!54744 () (InoxSet tuple2!2220))

(assert (=> d!21233 (= (content!87 (toList!756 lt!39037)) e!54744)))

(declare-fun b!83901 () Bool)

(assert (=> b!83901 (= e!54744 ((as const (Array tuple2!2220 Bool)) false))))

(declare-fun b!83902 () Bool)

(assert (=> b!83902 (= e!54744 ((_ map or) (store ((as const (Array tuple2!2220 Bool)) false) (h!2133 (toList!756 lt!39037)) true) (content!87 (t!5251 (toList!756 lt!39037)))))))

(assert (= (and d!21233 c!13454) b!83901))

(assert (= (and d!21233 (not c!13454)) b!83902))

(declare-fun m!87209 () Bool)

(assert (=> b!83902 m!87209))

(declare-fun m!87211 () Bool)

(assert (=> b!83902 m!87211))

(assert (=> d!21039 d!21233))

(declare-fun d!21235 () Bool)

(declare-fun res!43359 () Bool)

(declare-fun e!54745 () Bool)

(assert (=> d!21235 (=> res!43359 e!54745)))

(assert (=> d!21235 (= res!43359 (and ((_ is Cons!1543) lt!39034) (= (_1!1120 (h!2133 lt!39034)) (_1!1120 lt!38760))))))

(assert (=> d!21235 (= (containsKey!142 lt!39034 (_1!1120 lt!38760)) e!54745)))

(declare-fun b!83903 () Bool)

(declare-fun e!54746 () Bool)

(assert (=> b!83903 (= e!54745 e!54746)))

(declare-fun res!43360 () Bool)

(assert (=> b!83903 (=> (not res!43360) (not e!54746))))

(assert (=> b!83903 (= res!43360 (and (or (not ((_ is Cons!1543) lt!39034)) (bvsle (_1!1120 (h!2133 lt!39034)) (_1!1120 lt!38760))) ((_ is Cons!1543) lt!39034) (bvslt (_1!1120 (h!2133 lt!39034)) (_1!1120 lt!38760))))))

(declare-fun b!83904 () Bool)

(assert (=> b!83904 (= e!54746 (containsKey!142 (t!5251 lt!39034) (_1!1120 lt!38760)))))

(assert (= (and d!21235 (not res!43359)) b!83903))

(assert (= (and b!83903 res!43360) b!83904))

(declare-fun m!87213 () Bool)

(assert (=> b!83904 m!87213))

(assert (=> b!83729 d!21235))

(declare-fun d!21237 () Bool)

(declare-fun res!43361 () Bool)

(declare-fun e!54747 () Bool)

(assert (=> d!21237 (=> res!43361 e!54747)))

(assert (=> d!21237 (= res!43361 (and ((_ is Cons!1543) (toList!756 lt!39041)) (= (_1!1120 (h!2133 (toList!756 lt!39041))) (_1!1120 lt!38747))))))

(assert (=> d!21237 (= (containsKey!142 (toList!756 lt!39041) (_1!1120 lt!38747)) e!54747)))

(declare-fun b!83905 () Bool)

(declare-fun e!54748 () Bool)

(assert (=> b!83905 (= e!54747 e!54748)))

(declare-fun res!43362 () Bool)

(assert (=> b!83905 (=> (not res!43362) (not e!54748))))

(assert (=> b!83905 (= res!43362 (and (or (not ((_ is Cons!1543) (toList!756 lt!39041))) (bvsle (_1!1120 (h!2133 (toList!756 lt!39041))) (_1!1120 lt!38747))) ((_ is Cons!1543) (toList!756 lt!39041)) (bvslt (_1!1120 (h!2133 (toList!756 lt!39041))) (_1!1120 lt!38747))))))

(declare-fun b!83906 () Bool)

(assert (=> b!83906 (= e!54748 (containsKey!142 (t!5251 (toList!756 lt!39041)) (_1!1120 lt!38747)))))

(assert (= (and d!21237 (not res!43361)) b!83905))

(assert (= (and b!83905 res!43362) b!83906))

(declare-fun m!87215 () Bool)

(assert (=> b!83906 m!87215))

(assert (=> d!20977 d!21237))

(declare-fun d!21239 () Bool)

(declare-fun e!54749 () Bool)

(assert (=> d!21239 e!54749))

(declare-fun res!43363 () Bool)

(assert (=> d!21239 (=> res!43363 e!54749)))

(declare-fun lt!39512 () Bool)

(assert (=> d!21239 (= res!43363 (not lt!39512))))

(declare-fun lt!39514 () Bool)

(assert (=> d!21239 (= lt!39512 lt!39514)))

(declare-fun lt!39515 () Unit!2445)

(declare-fun e!54750 () Unit!2445)

(assert (=> d!21239 (= lt!39515 e!54750)))

(declare-fun c!13455 () Bool)

(assert (=> d!21239 (= c!13455 lt!39514)))

(assert (=> d!21239 (= lt!39514 (containsKey!142 (toList!756 (+!114 lt!39405 (tuple2!2221 lt!39409 lt!39407))) lt!39406))))

(assert (=> d!21239 (= (contains!757 (+!114 lt!39405 (tuple2!2221 lt!39409 lt!39407)) lt!39406) lt!39512)))

(declare-fun b!83907 () Bool)

(declare-fun lt!39513 () Unit!2445)

(assert (=> b!83907 (= e!54750 lt!39513)))

(assert (=> b!83907 (= lt!39513 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 (+!114 lt!39405 (tuple2!2221 lt!39409 lt!39407))) lt!39406))))

(assert (=> b!83907 (isDefined!92 (getValueByKey!138 (toList!756 (+!114 lt!39405 (tuple2!2221 lt!39409 lt!39407))) lt!39406))))

(declare-fun b!83908 () Bool)

(declare-fun Unit!2485 () Unit!2445)

(assert (=> b!83908 (= e!54750 Unit!2485)))

(declare-fun b!83909 () Bool)

(assert (=> b!83909 (= e!54749 (isDefined!92 (getValueByKey!138 (toList!756 (+!114 lt!39405 (tuple2!2221 lt!39409 lt!39407))) lt!39406)))))

(assert (= (and d!21239 c!13455) b!83907))

(assert (= (and d!21239 (not c!13455)) b!83908))

(assert (= (and d!21239 (not res!43363)) b!83909))

(declare-fun m!87217 () Bool)

(assert (=> d!21239 m!87217))

(declare-fun m!87219 () Bool)

(assert (=> b!83907 m!87219))

(declare-fun m!87221 () Bool)

(assert (=> b!83907 m!87221))

(assert (=> b!83907 m!87221))

(declare-fun m!87223 () Bool)

(assert (=> b!83907 m!87223))

(assert (=> b!83909 m!87221))

(assert (=> b!83909 m!87221))

(assert (=> b!83909 m!87223))

(assert (=> b!83672 d!21239))

(declare-fun d!21241 () Bool)

(declare-fun e!54751 () Bool)

(assert (=> d!21241 e!54751))

(declare-fun res!43364 () Bool)

(assert (=> d!21241 (=> (not res!43364) (not e!54751))))

(declare-fun lt!39519 () ListLongMap!1481)

(assert (=> d!21241 (= res!43364 (contains!757 lt!39519 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!39516 () List!1547)

(assert (=> d!21241 (= lt!39519 (ListLongMap!1482 lt!39516))))

(declare-fun lt!39517 () Unit!2445)

(declare-fun lt!39518 () Unit!2445)

(assert (=> d!21241 (= lt!39517 lt!39518)))

(assert (=> d!21241 (= (getValueByKey!138 lt!39516 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21241 (= lt!39518 (lemmaContainsTupThenGetReturnValue!57 lt!39516 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21241 (= lt!39516 (insertStrictlySorted!59 (toList!756 call!7871) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21241 (= (+!114 call!7871 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!39519)))

(declare-fun b!83910 () Bool)

(declare-fun res!43365 () Bool)

(assert (=> b!83910 (=> (not res!43365) (not e!54751))))

(assert (=> b!83910 (= res!43365 (= (getValueByKey!138 (toList!756 lt!39519) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!83911 () Bool)

(assert (=> b!83911 (= e!54751 (contains!760 (toList!756 lt!39519) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!21241 res!43364) b!83910))

(assert (= (and b!83910 res!43365) b!83911))

(declare-fun m!87225 () Bool)

(assert (=> d!21241 m!87225))

(declare-fun m!87227 () Bool)

(assert (=> d!21241 m!87227))

(declare-fun m!87229 () Bool)

(assert (=> d!21241 m!87229))

(declare-fun m!87231 () Bool)

(assert (=> d!21241 m!87231))

(declare-fun m!87233 () Bool)

(assert (=> b!83910 m!87233))

(declare-fun m!87235 () Bool)

(assert (=> b!83911 m!87235))

(assert (=> b!83672 d!21241))

(declare-fun d!21243 () Bool)

(declare-fun c!13456 () Bool)

(assert (=> d!21243 (= c!13456 ((_ is ValueCellFull!921) (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!54752 () V!3019)

(assert (=> d!21243 (= (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!54752)))

(declare-fun b!83912 () Bool)

(assert (=> b!83912 (= e!54752 (get!1207 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!83913 () Bool)

(assert (=> b!83913 (= e!54752 (get!1208 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21243 c!13456) b!83912))

(assert (= (and d!21243 (not c!13456)) b!83913))

(assert (=> b!83912 m!86819))

(assert (=> b!83912 m!85615))

(declare-fun m!87237 () Bool)

(assert (=> b!83912 m!87237))

(assert (=> b!83913 m!86819))

(assert (=> b!83913 m!85615))

(declare-fun m!87239 () Bool)

(assert (=> b!83913 m!87239))

(assert (=> b!83672 d!21243))

(declare-fun d!21245 () Bool)

(declare-fun e!54753 () Bool)

(assert (=> d!21245 e!54753))

(declare-fun res!43366 () Bool)

(assert (=> d!21245 (=> (not res!43366) (not e!54753))))

(declare-fun lt!39523 () ListLongMap!1481)

(assert (=> d!21245 (= res!43366 (contains!757 lt!39523 (_1!1120 (tuple2!2221 lt!39409 lt!39407))))))

(declare-fun lt!39520 () List!1547)

(assert (=> d!21245 (= lt!39523 (ListLongMap!1482 lt!39520))))

(declare-fun lt!39521 () Unit!2445)

(declare-fun lt!39522 () Unit!2445)

(assert (=> d!21245 (= lt!39521 lt!39522)))

(assert (=> d!21245 (= (getValueByKey!138 lt!39520 (_1!1120 (tuple2!2221 lt!39409 lt!39407))) (Some!143 (_2!1120 (tuple2!2221 lt!39409 lt!39407))))))

(assert (=> d!21245 (= lt!39522 (lemmaContainsTupThenGetReturnValue!57 lt!39520 (_1!1120 (tuple2!2221 lt!39409 lt!39407)) (_2!1120 (tuple2!2221 lt!39409 lt!39407))))))

(assert (=> d!21245 (= lt!39520 (insertStrictlySorted!59 (toList!756 lt!39405) (_1!1120 (tuple2!2221 lt!39409 lt!39407)) (_2!1120 (tuple2!2221 lt!39409 lt!39407))))))

(assert (=> d!21245 (= (+!114 lt!39405 (tuple2!2221 lt!39409 lt!39407)) lt!39523)))

(declare-fun b!83914 () Bool)

(declare-fun res!43367 () Bool)

(assert (=> b!83914 (=> (not res!43367) (not e!54753))))

(assert (=> b!83914 (= res!43367 (= (getValueByKey!138 (toList!756 lt!39523) (_1!1120 (tuple2!2221 lt!39409 lt!39407))) (Some!143 (_2!1120 (tuple2!2221 lt!39409 lt!39407)))))))

(declare-fun b!83915 () Bool)

(assert (=> b!83915 (= e!54753 (contains!760 (toList!756 lt!39523) (tuple2!2221 lt!39409 lt!39407)))))

(assert (= (and d!21245 res!43366) b!83914))

(assert (= (and b!83914 res!43367) b!83915))

(declare-fun m!87241 () Bool)

(assert (=> d!21245 m!87241))

(declare-fun m!87243 () Bool)

(assert (=> d!21245 m!87243))

(declare-fun m!87245 () Bool)

(assert (=> d!21245 m!87245))

(declare-fun m!87247 () Bool)

(assert (=> d!21245 m!87247))

(declare-fun m!87249 () Bool)

(assert (=> b!83914 m!87249))

(declare-fun m!87251 () Bool)

(assert (=> b!83915 m!87251))

(assert (=> b!83672 d!21245))

(declare-fun d!21247 () Bool)

(assert (=> d!21247 (not (contains!757 (+!114 lt!39405 (tuple2!2221 lt!39409 lt!39407)) lt!39406))))

(declare-fun lt!39524 () Unit!2445)

(assert (=> d!21247 (= lt!39524 (choose!501 lt!39405 lt!39409 lt!39407 lt!39406))))

(declare-fun e!54754 () Bool)

(assert (=> d!21247 e!54754))

(declare-fun res!43368 () Bool)

(assert (=> d!21247 (=> (not res!43368) (not e!54754))))

(assert (=> d!21247 (= res!43368 (not (contains!757 lt!39405 lt!39406)))))

(assert (=> d!21247 (= (addStillNotContains!32 lt!39405 lt!39409 lt!39407 lt!39406) lt!39524)))

(declare-fun b!83916 () Bool)

(assert (=> b!83916 (= e!54754 (not (= lt!39409 lt!39406)))))

(assert (= (and d!21247 res!43368) b!83916))

(assert (=> d!21247 m!86831))

(assert (=> d!21247 m!86831))

(assert (=> d!21247 m!86835))

(declare-fun m!87253 () Bool)

(assert (=> d!21247 m!87253))

(declare-fun m!87255 () Bool)

(assert (=> d!21247 m!87255))

(assert (=> b!83672 d!21247))

(declare-fun d!21249 () Bool)

(declare-fun lt!39525 () Bool)

(assert (=> d!21249 (= lt!39525 (select (content!87 (t!5251 (toList!756 lt!39003))) lt!38750))))

(declare-fun e!54755 () Bool)

(assert (=> d!21249 (= lt!39525 e!54755)))

(declare-fun res!43369 () Bool)

(assert (=> d!21249 (=> (not res!43369) (not e!54755))))

(assert (=> d!21249 (= res!43369 ((_ is Cons!1543) (t!5251 (toList!756 lt!39003))))))

(assert (=> d!21249 (= (contains!760 (t!5251 (toList!756 lt!39003)) lt!38750) lt!39525)))

(declare-fun b!83917 () Bool)

(declare-fun e!54756 () Bool)

(assert (=> b!83917 (= e!54755 e!54756)))

(declare-fun res!43370 () Bool)

(assert (=> b!83917 (=> res!43370 e!54756)))

(assert (=> b!83917 (= res!43370 (= (h!2133 (t!5251 (toList!756 lt!39003))) lt!38750))))

(declare-fun b!83918 () Bool)

(assert (=> b!83918 (= e!54756 (contains!760 (t!5251 (t!5251 (toList!756 lt!39003))) lt!38750))))

(assert (= (and d!21249 res!43369) b!83917))

(assert (= (and b!83917 (not res!43370)) b!83918))

(assert (=> d!21249 m!87005))

(declare-fun m!87257 () Bool)

(assert (=> d!21249 m!87257))

(declare-fun m!87259 () Bool)

(assert (=> b!83918 m!87259))

(assert (=> b!83716 d!21249))

(declare-fun b!83920 () Bool)

(declare-fun e!54757 () Option!144)

(declare-fun e!54758 () Option!144)

(assert (=> b!83920 (= e!54757 e!54758)))

(declare-fun c!13458 () Bool)

(assert (=> b!83920 (= c!13458 (and ((_ is Cons!1543) (toList!756 lt!39101)) (not (= (_1!1120 (h!2133 (toList!756 lt!39101))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!83919 () Bool)

(assert (=> b!83919 (= e!54757 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39101)))))))

(declare-fun b!83922 () Bool)

(assert (=> b!83922 (= e!54758 None!142)))

(declare-fun d!21251 () Bool)

(declare-fun c!13457 () Bool)

(assert (=> d!21251 (= c!13457 (and ((_ is Cons!1543) (toList!756 lt!39101)) (= (_1!1120 (h!2133 (toList!756 lt!39101))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21251 (= (getValueByKey!138 (toList!756 lt!39101) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) e!54757)))

(declare-fun b!83921 () Bool)

(assert (=> b!83921 (= e!54758 (getValueByKey!138 (t!5251 (toList!756 lt!39101)) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21251 c!13457) b!83919))

(assert (= (and d!21251 (not c!13457)) b!83920))

(assert (= (and b!83920 c!13458) b!83921))

(assert (= (and b!83920 (not c!13458)) b!83922))

(declare-fun m!87261 () Bool)

(assert (=> b!83921 m!87261))

(assert (=> b!83255 d!21251))

(declare-fun d!21253 () Bool)

(declare-fun lt!39526 () Bool)

(assert (=> d!21253 (= lt!39526 (select (content!87 (toList!756 lt!39341)) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun e!54759 () Bool)

(assert (=> d!21253 (= lt!39526 e!54759)))

(declare-fun res!43371 () Bool)

(assert (=> d!21253 (=> (not res!43371) (not e!54759))))

(assert (=> d!21253 (= res!43371 ((_ is Cons!1543) (toList!756 lt!39341)))))

(assert (=> d!21253 (= (contains!760 (toList!756 lt!39341) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!39526)))

(declare-fun b!83923 () Bool)

(declare-fun e!54760 () Bool)

(assert (=> b!83923 (= e!54759 e!54760)))

(declare-fun res!43372 () Bool)

(assert (=> b!83923 (=> res!43372 e!54760)))

(assert (=> b!83923 (= res!43372 (= (h!2133 (toList!756 lt!39341)) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!83924 () Bool)

(assert (=> b!83924 (= e!54760 (contains!760 (t!5251 (toList!756 lt!39341)) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(assert (= (and d!21253 res!43371) b!83923))

(assert (= (and b!83923 (not res!43372)) b!83924))

(declare-fun m!87263 () Bool)

(assert (=> d!21253 m!87263))

(declare-fun m!87265 () Bool)

(assert (=> d!21253 m!87265))

(declare-fun m!87267 () Bool)

(assert (=> b!83924 m!87267))

(assert (=> b!83587 d!21253))

(declare-fun b!83925 () Bool)

(declare-fun e!54762 () (_ BitVec 32))

(assert (=> b!83925 (= e!54762 #b00000000000000000000000000000000)))

(declare-fun bm!7897 () Bool)

(declare-fun call!7900 () (_ BitVec 32))

(assert (=> bm!7897 (= call!7900 (arrayCountValidKeys!0 (_keys!3985 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2155 (_keys!3985 newMap!16))))))

(declare-fun d!21255 () Bool)

(declare-fun lt!39527 () (_ BitVec 32))

(assert (=> d!21255 (and (bvsge lt!39527 #b00000000000000000000000000000000) (bvsle lt!39527 (bvsub (size!2155 (_keys!3985 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!21255 (= lt!39527 e!54762)))

(declare-fun c!13459 () Bool)

(assert (=> d!21255 (= c!13459 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!21255 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2155 (_keys!3985 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2155 (_keys!3985 newMap!16)) (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!21255 (= (arrayCountValidKeys!0 (_keys!3985 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2155 (_keys!3985 newMap!16))) lt!39527)))

(declare-fun b!83926 () Bool)

(declare-fun e!54761 () (_ BitVec 32))

(assert (=> b!83926 (= e!54761 (bvadd #b00000000000000000000000000000001 call!7900))))

(declare-fun b!83927 () Bool)

(assert (=> b!83927 (= e!54762 e!54761)))

(declare-fun c!13460 () Bool)

(assert (=> b!83927 (= c!13460 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!83928 () Bool)

(assert (=> b!83928 (= e!54761 call!7900)))

(assert (= (and d!21255 c!13459) b!83925))

(assert (= (and d!21255 (not c!13459)) b!83927))

(assert (= (and b!83927 c!13460) b!83926))

(assert (= (and b!83927 (not c!13460)) b!83928))

(assert (= (or b!83926 b!83928) bm!7897))

(declare-fun m!87269 () Bool)

(assert (=> bm!7897 m!87269))

(declare-fun m!87271 () Bool)

(assert (=> b!83927 m!87271))

(assert (=> b!83927 m!87271))

(declare-fun m!87273 () Bool)

(assert (=> b!83927 m!87273))

(assert (=> bm!7846 d!21255))

(declare-fun b!83930 () Bool)

(declare-fun e!54763 () Option!144)

(declare-fun e!54764 () Option!144)

(assert (=> b!83930 (= e!54763 e!54764)))

(declare-fun c!13462 () Bool)

(assert (=> b!83930 (= c!13462 (and ((_ is Cons!1543) (t!5251 lt!39000)) (not (= (_1!1120 (h!2133 (t!5251 lt!39000))) (_1!1120 lt!38750)))))))

(declare-fun b!83929 () Bool)

(assert (=> b!83929 (= e!54763 (Some!143 (_2!1120 (h!2133 (t!5251 lt!39000)))))))

(declare-fun b!83932 () Bool)

(assert (=> b!83932 (= e!54764 None!142)))

(declare-fun d!21257 () Bool)

(declare-fun c!13461 () Bool)

(assert (=> d!21257 (= c!13461 (and ((_ is Cons!1543) (t!5251 lt!39000)) (= (_1!1120 (h!2133 (t!5251 lt!39000))) (_1!1120 lt!38750))))))

(assert (=> d!21257 (= (getValueByKey!138 (t!5251 lt!39000) (_1!1120 lt!38750)) e!54763)))

(declare-fun b!83931 () Bool)

(assert (=> b!83931 (= e!54764 (getValueByKey!138 (t!5251 (t!5251 lt!39000)) (_1!1120 lt!38750)))))

(assert (= (and d!21257 c!13461) b!83929))

(assert (= (and d!21257 (not c!13461)) b!83930))

(assert (= (and b!83930 c!13462) b!83931))

(assert (= (and b!83930 (not c!13462)) b!83932))

(declare-fun m!87275 () Bool)

(assert (=> b!83931 m!87275))

(assert (=> b!83632 d!21257))

(assert (=> d!21073 d!21219))

(declare-fun d!21259 () Bool)

(declare-fun lt!39528 () Bool)

(assert (=> d!21259 (= lt!39528 (select (content!87 (toList!756 lt!39426)) (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun e!54765 () Bool)

(assert (=> d!21259 (= lt!39528 e!54765)))

(declare-fun res!43373 () Bool)

(assert (=> d!21259 (=> (not res!43373) (not e!54765))))

(assert (=> d!21259 (= res!43373 ((_ is Cons!1543) (toList!756 lt!39426)))))

(assert (=> d!21259 (= (contains!760 (toList!756 lt!39426) (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) lt!39528)))

(declare-fun b!83933 () Bool)

(declare-fun e!54766 () Bool)

(assert (=> b!83933 (= e!54765 e!54766)))

(declare-fun res!43374 () Bool)

(assert (=> b!83933 (=> res!43374 e!54766)))

(assert (=> b!83933 (= res!43374 (= (h!2133 (toList!756 lt!39426)) (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun b!83934 () Bool)

(assert (=> b!83934 (= e!54766 (contains!760 (t!5251 (toList!756 lt!39426)) (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (= (and d!21259 res!43373) b!83933))

(assert (= (and b!83933 (not res!43374)) b!83934))

(declare-fun m!87277 () Bool)

(assert (=> d!21259 m!87277))

(declare-fun m!87279 () Bool)

(assert (=> d!21259 m!87279))

(declare-fun m!87281 () Bool)

(assert (=> b!83934 m!87281))

(assert (=> b!83721 d!21259))

(assert (=> d!20937 d!20935))

(declare-fun d!21261 () Bool)

(assert (=> d!21261 (= (getValueByKey!138 lt!39026 (_1!1120 lt!38750)) (Some!143 (_2!1120 lt!38750)))))

(assert (=> d!21261 true))

(declare-fun _$22!409 () Unit!2445)

(assert (=> d!21261 (= (choose!495 lt!39026 (_1!1120 lt!38750) (_2!1120 lt!38750)) _$22!409)))

(declare-fun bs!3530 () Bool)

(assert (= bs!3530 d!21261))

(assert (=> bs!3530 m!85911))

(assert (=> d!20937 d!21261))

(declare-fun d!21263 () Bool)

(declare-fun res!43379 () Bool)

(declare-fun e!54771 () Bool)

(assert (=> d!21263 (=> res!43379 e!54771)))

(assert (=> d!21263 (= res!43379 (or ((_ is Nil!1544) lt!39026) ((_ is Nil!1544) (t!5251 lt!39026))))))

(assert (=> d!21263 (= (isStrictlySorted!292 lt!39026) e!54771)))

(declare-fun b!83939 () Bool)

(declare-fun e!54772 () Bool)

(assert (=> b!83939 (= e!54771 e!54772)))

(declare-fun res!43380 () Bool)

(assert (=> b!83939 (=> (not res!43380) (not e!54772))))

(assert (=> b!83939 (= res!43380 (bvslt (_1!1120 (h!2133 lt!39026)) (_1!1120 (h!2133 (t!5251 lt!39026)))))))

(declare-fun b!83940 () Bool)

(assert (=> b!83940 (= e!54772 (isStrictlySorted!292 (t!5251 lt!39026)))))

(assert (= (and d!21263 (not res!43379)) b!83939))

(assert (= (and b!83939 res!43380) b!83940))

(declare-fun m!87283 () Bool)

(assert (=> b!83940 m!87283))

(assert (=> d!20937 d!21263))

(declare-fun d!21265 () Bool)

(declare-fun res!43381 () Bool)

(declare-fun e!54773 () Bool)

(assert (=> d!21265 (=> res!43381 e!54773)))

(assert (=> d!21265 (= res!43381 (and ((_ is Cons!1543) (toList!756 lt!39045)) (= (_1!1120 (h!2133 (toList!756 lt!39045))) (_1!1120 lt!38747))))))

(assert (=> d!21265 (= (containsKey!142 (toList!756 lt!39045) (_1!1120 lt!38747)) e!54773)))

(declare-fun b!83941 () Bool)

(declare-fun e!54774 () Bool)

(assert (=> b!83941 (= e!54773 e!54774)))

(declare-fun res!43382 () Bool)

(assert (=> b!83941 (=> (not res!43382) (not e!54774))))

(assert (=> b!83941 (= res!43382 (and (or (not ((_ is Cons!1543) (toList!756 lt!39045))) (bvsle (_1!1120 (h!2133 (toList!756 lt!39045))) (_1!1120 lt!38747))) ((_ is Cons!1543) (toList!756 lt!39045)) (bvslt (_1!1120 (h!2133 (toList!756 lt!39045))) (_1!1120 lt!38747))))))

(declare-fun b!83942 () Bool)

(assert (=> b!83942 (= e!54774 (containsKey!142 (t!5251 (toList!756 lt!39045)) (_1!1120 lt!38747)))))

(assert (= (and d!21265 (not res!43381)) b!83941))

(assert (= (and b!83941 res!43382) b!83942))

(declare-fun m!87285 () Bool)

(assert (=> b!83942 m!87285))

(assert (=> d!21043 d!21265))

(declare-fun d!21267 () Bool)

(assert (=> d!21267 (= (apply!81 lt!39408 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1209 (getValueByKey!138 (toList!756 lt!39408) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3531 () Bool)

(assert (= bs!3531 d!21267))

(assert (=> bs!3531 m!86821))

(declare-fun m!87287 () Bool)

(assert (=> bs!3531 m!87287))

(assert (=> bs!3531 m!87287))

(declare-fun m!87289 () Bool)

(assert (=> bs!3531 m!87289))

(assert (=> b!83664 d!21267))

(assert (=> b!83664 d!21243))

(declare-fun d!21269 () Bool)

(declare-fun e!54775 () Bool)

(assert (=> d!21269 e!54775))

(declare-fun res!43383 () Bool)

(assert (=> d!21269 (=> res!43383 e!54775)))

(declare-fun lt!39529 () Bool)

(assert (=> d!21269 (= res!43383 (not lt!39529))))

(declare-fun lt!39531 () Bool)

(assert (=> d!21269 (= lt!39529 lt!39531)))

(declare-fun lt!39532 () Unit!2445)

(declare-fun e!54776 () Unit!2445)

(assert (=> d!21269 (= lt!39532 e!54776)))

(declare-fun c!13463 () Bool)

(assert (=> d!21269 (= c!13463 lt!39531)))

(assert (=> d!21269 (= lt!39531 (containsKey!142 (toList!756 lt!39101) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21269 (= (contains!757 lt!39101 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39529)))

(declare-fun b!83943 () Bool)

(declare-fun lt!39530 () Unit!2445)

(assert (=> b!83943 (= e!54776 lt!39530)))

(assert (=> b!83943 (= lt!39530 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39101) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> b!83943 (isDefined!92 (getValueByKey!138 (toList!756 lt!39101) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!83944 () Bool)

(declare-fun Unit!2486 () Unit!2445)

(assert (=> b!83944 (= e!54776 Unit!2486)))

(declare-fun b!83945 () Bool)

(assert (=> b!83945 (= e!54775 (isDefined!92 (getValueByKey!138 (toList!756 lt!39101) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!21269 c!13463) b!83943))

(assert (= (and d!21269 (not c!13463)) b!83944))

(assert (= (and d!21269 (not res!43383)) b!83945))

(declare-fun m!87291 () Bool)

(assert (=> d!21269 m!87291))

(declare-fun m!87293 () Bool)

(assert (=> b!83943 m!87293))

(assert (=> b!83943 m!86125))

(assert (=> b!83943 m!86125))

(declare-fun m!87295 () Bool)

(assert (=> b!83943 m!87295))

(assert (=> b!83945 m!86125))

(assert (=> b!83945 m!86125))

(assert (=> b!83945 m!87295))

(assert (=> d!20923 d!21269))

(declare-fun b!83947 () Bool)

(declare-fun e!54777 () Option!144)

(declare-fun e!54778 () Option!144)

(assert (=> b!83947 (= e!54777 e!54778)))

(declare-fun c!13465 () Bool)

(assert (=> b!83947 (= c!13465 (and ((_ is Cons!1543) lt!39098) (not (= (_1!1120 (h!2133 lt!39098)) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!83946 () Bool)

(assert (=> b!83946 (= e!54777 (Some!143 (_2!1120 (h!2133 lt!39098))))))

(declare-fun b!83949 () Bool)

(assert (=> b!83949 (= e!54778 None!142)))

(declare-fun d!21271 () Bool)

(declare-fun c!13464 () Bool)

(assert (=> d!21271 (= c!13464 (and ((_ is Cons!1543) lt!39098) (= (_1!1120 (h!2133 lt!39098)) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21271 (= (getValueByKey!138 lt!39098 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) e!54777)))

(declare-fun b!83948 () Bool)

(assert (=> b!83948 (= e!54778 (getValueByKey!138 (t!5251 lt!39098) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21271 c!13464) b!83946))

(assert (= (and d!21271 (not c!13464)) b!83947))

(assert (= (and b!83947 c!13465) b!83948))

(assert (= (and b!83947 (not c!13465)) b!83949))

(declare-fun m!87297 () Bool)

(assert (=> b!83948 m!87297))

(assert (=> d!20923 d!21271))

(declare-fun d!21273 () Bool)

(assert (=> d!21273 (= (getValueByKey!138 lt!39098 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun lt!39533 () Unit!2445)

(assert (=> d!21273 (= lt!39533 (choose!495 lt!39098 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun e!54779 () Bool)

(assert (=> d!21273 e!54779))

(declare-fun res!43384 () Bool)

(assert (=> d!21273 (=> (not res!43384) (not e!54779))))

(assert (=> d!21273 (= res!43384 (isStrictlySorted!292 lt!39098))))

(assert (=> d!21273 (= (lemmaContainsTupThenGetReturnValue!57 lt!39098 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39533)))

(declare-fun b!83950 () Bool)

(declare-fun res!43385 () Bool)

(assert (=> b!83950 (=> (not res!43385) (not e!54779))))

(assert (=> b!83950 (= res!43385 (containsKey!142 lt!39098 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!83951 () Bool)

(assert (=> b!83951 (= e!54779 (contains!760 lt!39098 (tuple2!2221 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!21273 res!43384) b!83950))

(assert (= (and b!83950 res!43385) b!83951))

(assert (=> d!21273 m!86119))

(declare-fun m!87299 () Bool)

(assert (=> d!21273 m!87299))

(declare-fun m!87301 () Bool)

(assert (=> d!21273 m!87301))

(declare-fun m!87303 () Bool)

(assert (=> b!83950 m!87303))

(declare-fun m!87305 () Bool)

(assert (=> b!83951 m!87305))

(assert (=> d!20923 d!21273))

(declare-fun bm!7898 () Bool)

(declare-fun call!7902 () List!1547)

(declare-fun call!7901 () List!1547)

(assert (=> bm!7898 (= call!7902 call!7901)))

(declare-fun b!83952 () Bool)

(declare-fun e!54783 () List!1547)

(assert (=> b!83952 (= e!54783 call!7902)))

(declare-fun b!83953 () Bool)

(declare-fun e!54782 () List!1547)

(declare-fun call!7903 () List!1547)

(assert (=> b!83953 (= e!54782 call!7903)))

(declare-fun b!83954 () Bool)

(declare-fun e!54781 () List!1547)

(assert (=> b!83954 (= e!54781 (insertStrictlySorted!59 (t!5251 (toList!756 call!7802)) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!83955 () Bool)

(assert (=> b!83955 (= e!54782 call!7903)))

(declare-fun b!83956 () Bool)

(declare-fun res!43386 () Bool)

(declare-fun e!54784 () Bool)

(assert (=> b!83956 (=> (not res!43386) (not e!54784))))

(declare-fun lt!39534 () List!1547)

(assert (=> b!83956 (= res!43386 (containsKey!142 lt!39534 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun d!21275 () Bool)

(assert (=> d!21275 e!54784))

(declare-fun res!43387 () Bool)

(assert (=> d!21275 (=> (not res!43387) (not e!54784))))

(assert (=> d!21275 (= res!43387 (isStrictlySorted!292 lt!39534))))

(declare-fun e!54780 () List!1547)

(assert (=> d!21275 (= lt!39534 e!54780)))

(declare-fun c!13467 () Bool)

(assert (=> d!21275 (= c!13467 (and ((_ is Cons!1543) (toList!756 call!7802)) (bvslt (_1!1120 (h!2133 (toList!756 call!7802))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21275 (isStrictlySorted!292 (toList!756 call!7802))))

(assert (=> d!21275 (= (insertStrictlySorted!59 (toList!756 call!7802) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39534)))

(declare-fun b!83957 () Bool)

(assert (=> b!83957 (= e!54784 (contains!760 lt!39534 (tuple2!2221 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!83958 () Bool)

(assert (=> b!83958 (= e!54780 e!54783)))

(declare-fun c!13466 () Bool)

(assert (=> b!83958 (= c!13466 (and ((_ is Cons!1543) (toList!756 call!7802)) (= (_1!1120 (h!2133 (toList!756 call!7802))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun c!13469 () Bool)

(declare-fun b!83959 () Bool)

(assert (=> b!83959 (= e!54781 (ite c!13466 (t!5251 (toList!756 call!7802)) (ite c!13469 (Cons!1543 (h!2133 (toList!756 call!7802)) (t!5251 (toList!756 call!7802))) Nil!1544)))))

(declare-fun b!83960 () Bool)

(assert (=> b!83960 (= c!13469 (and ((_ is Cons!1543) (toList!756 call!7802)) (bvsgt (_1!1120 (h!2133 (toList!756 call!7802))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> b!83960 (= e!54783 e!54782)))

(declare-fun bm!7899 () Bool)

(assert (=> bm!7899 (= call!7901 ($colon$colon!70 e!54781 (ite c!13467 (h!2133 (toList!756 call!7802)) (tuple2!2221 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun c!13468 () Bool)

(assert (=> bm!7899 (= c!13468 c!13467)))

(declare-fun b!83961 () Bool)

(assert (=> b!83961 (= e!54780 call!7901)))

(declare-fun bm!7900 () Bool)

(assert (=> bm!7900 (= call!7903 call!7902)))

(assert (= (and d!21275 c!13467) b!83961))

(assert (= (and d!21275 (not c!13467)) b!83958))

(assert (= (and b!83958 c!13466) b!83952))

(assert (= (and b!83958 (not c!13466)) b!83960))

(assert (= (and b!83960 c!13469) b!83955))

(assert (= (and b!83960 (not c!13469)) b!83953))

(assert (= (or b!83955 b!83953) bm!7900))

(assert (= (or b!83952 bm!7900) bm!7898))

(assert (= (or b!83961 bm!7898) bm!7899))

(assert (= (and bm!7899 c!13468) b!83954))

(assert (= (and bm!7899 (not c!13468)) b!83959))

(assert (= (and d!21275 res!43387) b!83956))

(assert (= (and b!83956 res!43386) b!83957))

(declare-fun m!87307 () Bool)

(assert (=> d!21275 m!87307))

(declare-fun m!87309 () Bool)

(assert (=> d!21275 m!87309))

(declare-fun m!87311 () Bool)

(assert (=> b!83954 m!87311))

(declare-fun m!87313 () Bool)

(assert (=> b!83957 m!87313))

(declare-fun m!87315 () Bool)

(assert (=> bm!7899 m!87315))

(declare-fun m!87317 () Bool)

(assert (=> b!83956 m!87317))

(assert (=> d!20923 d!21275))

(assert (=> d!21145 d!20917))

(assert (=> d!21145 d!21219))

(declare-fun d!21277 () Bool)

(declare-fun e!54785 () Bool)

(assert (=> d!21277 e!54785))

(declare-fun res!43388 () Bool)

(assert (=> d!21277 (=> (not res!43388) (not e!54785))))

(declare-fun lt!39538 () ListLongMap!1481)

(assert (=> d!21277 (= res!43388 (contains!757 lt!39538 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748))))))

(declare-fun lt!39535 () List!1547)

(assert (=> d!21277 (= lt!39538 (ListLongMap!1482 lt!39535))))

(declare-fun lt!39536 () Unit!2445)

(declare-fun lt!39537 () Unit!2445)

(assert (=> d!21277 (= lt!39536 lt!39537)))

(assert (=> d!21277 (= (getValueByKey!138 lt!39535 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748))) (Some!143 (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748))))))

(assert (=> d!21277 (= lt!39537 (lemmaContainsTupThenGetReturnValue!57 lt!39535 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748))))))

(assert (=> d!21277 (= lt!39535 (insertStrictlySorted!59 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748))))))

(assert (=> d!21277 (= (+!114 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) lt!39538)))

(declare-fun b!83962 () Bool)

(declare-fun res!43389 () Bool)

(assert (=> b!83962 (=> (not res!43389) (not e!54785))))

(assert (=> b!83962 (= res!43389 (= (getValueByKey!138 (toList!756 lt!39538) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748))) (Some!143 (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)))))))

(declare-fun b!83963 () Bool)

(assert (=> b!83963 (= e!54785 (contains!760 (toList!756 lt!39538) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)))))

(assert (= (and d!21277 res!43388) b!83962))

(assert (= (and b!83962 res!43389) b!83963))

(declare-fun m!87319 () Bool)

(assert (=> d!21277 m!87319))

(declare-fun m!87321 () Bool)

(assert (=> d!21277 m!87321))

(declare-fun m!87323 () Bool)

(assert (=> d!21277 m!87323))

(declare-fun m!87325 () Bool)

(assert (=> d!21277 m!87325))

(declare-fun m!87327 () Bool)

(assert (=> b!83962 m!87327))

(declare-fun m!87329 () Bool)

(assert (=> b!83963 m!87329))

(assert (=> d!21145 d!21277))

(declare-fun d!21279 () Bool)

(assert (=> d!21279 (= (+!114 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) lt!38889 (zeroValue!2211 newMap!16) lt!38748 #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(assert (=> d!21279 true))

(declare-fun _$8!73 () Unit!2445)

(assert (=> d!21279 (= (choose!503 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) lt!38889 (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) lt!38748 (defaultEntry!2317 newMap!16)) _$8!73)))

(declare-fun bs!3532 () Bool)

(assert (= bs!3532 d!21279))

(assert (=> bs!3532 m!85729))

(assert (=> bs!3532 m!85729))

(assert (=> bs!3532 m!86935))

(assert (=> bs!3532 m!86937))

(assert (=> d!21145 d!21279))

(declare-fun b!83964 () Bool)

(declare-fun e!54791 () ListLongMap!1481)

(declare-fun call!7904 () ListLongMap!1481)

(assert (=> b!83964 (= e!54791 call!7904)))

(declare-fun bm!7901 () Bool)

(declare-fun call!7910 () ListLongMap!1481)

(declare-fun call!7905 () ListLongMap!1481)

(assert (=> bm!7901 (= call!7910 call!7905)))

(declare-fun b!83965 () Bool)

(declare-fun e!54795 () Bool)

(declare-fun lt!39550 () ListLongMap!1481)

(assert (=> b!83965 (= e!54795 (= (apply!81 lt!39550 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38748))))

(declare-fun b!83966 () Bool)

(declare-fun e!54786 () ListLongMap!1481)

(declare-fun call!7906 () ListLongMap!1481)

(assert (=> b!83966 (= e!54786 call!7906)))

(declare-fun b!83968 () Bool)

(declare-fun e!54787 () ListLongMap!1481)

(declare-fun call!7907 () ListLongMap!1481)

(assert (=> b!83968 (= e!54787 (+!114 call!7907 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)))))

(declare-fun b!83969 () Bool)

(declare-fun res!43398 () Bool)

(declare-fun e!54794 () Bool)

(assert (=> b!83969 (=> (not res!43398) (not e!54794))))

(declare-fun e!54790 () Bool)

(assert (=> b!83969 (= res!43398 e!54790)))

(declare-fun c!13474 () Bool)

(assert (=> b!83969 (= c!13474 (not (= (bvand lt!38889 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7902 () Bool)

(assert (=> bm!7902 (= call!7905 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) lt!38889 (zeroValue!2211 newMap!16) lt!38748 #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun c!13475 () Bool)

(declare-fun c!13473 () Bool)

(declare-fun bm!7903 () Bool)

(assert (=> bm!7903 (= call!7907 (+!114 (ite c!13473 call!7905 (ite c!13475 call!7910 call!7904)) (ite (or c!13473 c!13475) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748))))))

(declare-fun b!83970 () Bool)

(declare-fun e!54793 () Unit!2445)

(declare-fun Unit!2487 () Unit!2445)

(assert (=> b!83970 (= e!54793 Unit!2487)))

(declare-fun bm!7904 () Bool)

(declare-fun call!7908 () Bool)

(assert (=> bm!7904 (= call!7908 (contains!757 lt!39550 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83971 () Bool)

(declare-fun res!43395 () Bool)

(assert (=> b!83971 (=> (not res!43395) (not e!54794))))

(declare-fun e!54797 () Bool)

(assert (=> b!83971 (= res!43395 e!54797)))

(declare-fun res!43396 () Bool)

(assert (=> b!83971 (=> res!43396 e!54797)))

(declare-fun e!54792 () Bool)

(assert (=> b!83971 (= res!43396 (not e!54792))))

(declare-fun res!43393 () Bool)

(assert (=> b!83971 (=> (not res!43393) (not e!54792))))

(assert (=> b!83971 (= res!43393 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!83972 () Bool)

(declare-fun e!54788 () Bool)

(assert (=> b!83972 (= e!54797 e!54788)))

(declare-fun res!43392 () Bool)

(assert (=> b!83972 (=> (not res!43392) (not e!54788))))

(assert (=> b!83972 (= res!43392 (contains!757 lt!39550 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83972 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!83973 () Bool)

(declare-fun e!54789 () Bool)

(assert (=> b!83973 (= e!54789 (not call!7908))))

(declare-fun b!83974 () Bool)

(declare-fun e!54796 () Bool)

(assert (=> b!83974 (= e!54790 e!54796)))

(declare-fun res!43391 () Bool)

(declare-fun call!7909 () Bool)

(assert (=> b!83974 (= res!43391 call!7909)))

(assert (=> b!83974 (=> (not res!43391) (not e!54796))))

(declare-fun b!83975 () Bool)

(declare-fun c!13472 () Bool)

(assert (=> b!83975 (= c!13472 (and (not (= (bvand lt!38889 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!38889 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!83975 (= e!54786 e!54791)))

(declare-fun b!83976 () Bool)

(declare-fun lt!39545 () Unit!2445)

(assert (=> b!83976 (= e!54793 lt!39545)))

(declare-fun lt!39551 () ListLongMap!1481)

(assert (=> b!83976 (= lt!39551 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) lt!38889 (zeroValue!2211 newMap!16) lt!38748 #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39544 () (_ BitVec 64))

(assert (=> b!83976 (= lt!39544 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39548 () (_ BitVec 64))

(assert (=> b!83976 (= lt!39548 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39553 () Unit!2445)

(assert (=> b!83976 (= lt!39553 (addStillContains!57 lt!39551 lt!39544 (zeroValue!2211 newMap!16) lt!39548))))

(assert (=> b!83976 (contains!757 (+!114 lt!39551 (tuple2!2221 lt!39544 (zeroValue!2211 newMap!16))) lt!39548)))

(declare-fun lt!39549 () Unit!2445)

(assert (=> b!83976 (= lt!39549 lt!39553)))

(declare-fun lt!39554 () ListLongMap!1481)

(assert (=> b!83976 (= lt!39554 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) lt!38889 (zeroValue!2211 newMap!16) lt!38748 #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39546 () (_ BitVec 64))

(assert (=> b!83976 (= lt!39546 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39560 () (_ BitVec 64))

(assert (=> b!83976 (= lt!39560 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39558 () Unit!2445)

(assert (=> b!83976 (= lt!39558 (addApplyDifferent!57 lt!39554 lt!39546 lt!38748 lt!39560))))

(assert (=> b!83976 (= (apply!81 (+!114 lt!39554 (tuple2!2221 lt!39546 lt!38748)) lt!39560) (apply!81 lt!39554 lt!39560))))

(declare-fun lt!39552 () Unit!2445)

(assert (=> b!83976 (= lt!39552 lt!39558)))

(declare-fun lt!39547 () ListLongMap!1481)

(assert (=> b!83976 (= lt!39547 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) lt!38889 (zeroValue!2211 newMap!16) lt!38748 #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39556 () (_ BitVec 64))

(assert (=> b!83976 (= lt!39556 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39540 () (_ BitVec 64))

(assert (=> b!83976 (= lt!39540 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39555 () Unit!2445)

(assert (=> b!83976 (= lt!39555 (addApplyDifferent!57 lt!39547 lt!39556 (zeroValue!2211 newMap!16) lt!39540))))

(assert (=> b!83976 (= (apply!81 (+!114 lt!39547 (tuple2!2221 lt!39556 (zeroValue!2211 newMap!16))) lt!39540) (apply!81 lt!39547 lt!39540))))

(declare-fun lt!39541 () Unit!2445)

(assert (=> b!83976 (= lt!39541 lt!39555)))

(declare-fun lt!39543 () ListLongMap!1481)

(assert (=> b!83976 (= lt!39543 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) lt!38889 (zeroValue!2211 newMap!16) lt!38748 #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39557 () (_ BitVec 64))

(assert (=> b!83976 (= lt!39557 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39542 () (_ BitVec 64))

(assert (=> b!83976 (= lt!39542 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!83976 (= lt!39545 (addApplyDifferent!57 lt!39543 lt!39557 lt!38748 lt!39542))))

(assert (=> b!83976 (= (apply!81 (+!114 lt!39543 (tuple2!2221 lt!39557 lt!38748)) lt!39542) (apply!81 lt!39543 lt!39542))))

(declare-fun b!83977 () Bool)

(assert (=> b!83977 (= e!54788 (= (apply!81 lt!39550 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) (get!1206 (select (arr!1913 (_values!2300 newMap!16)) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83977 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2156 (_values!2300 newMap!16))))))

(assert (=> b!83977 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!83967 () Bool)

(assert (=> b!83967 (= e!54791 call!7906)))

(declare-fun d!21281 () Bool)

(assert (=> d!21281 e!54794))

(declare-fun res!43394 () Bool)

(assert (=> d!21281 (=> (not res!43394) (not e!54794))))

(assert (=> d!21281 (= res!43394 (or (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))))

(declare-fun lt!39559 () ListLongMap!1481)

(assert (=> d!21281 (= lt!39550 lt!39559)))

(declare-fun lt!39539 () Unit!2445)

(assert (=> d!21281 (= lt!39539 e!54793)))

(declare-fun c!13471 () Bool)

(declare-fun e!54798 () Bool)

(assert (=> d!21281 (= c!13471 e!54798)))

(declare-fun res!43390 () Bool)

(assert (=> d!21281 (=> (not res!43390) (not e!54798))))

(assert (=> d!21281 (= res!43390 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!21281 (= lt!39559 e!54787)))

(assert (=> d!21281 (= c!13473 (and (not (= (bvand lt!38889 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!38889 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21281 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!21281 (= (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) lt!38889 (zeroValue!2211 newMap!16) lt!38748 #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) lt!39550)))

(declare-fun bm!7905 () Bool)

(assert (=> bm!7905 (= call!7909 (contains!757 lt!39550 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83978 () Bool)

(assert (=> b!83978 (= e!54790 (not call!7909))))

(declare-fun bm!7906 () Bool)

(assert (=> bm!7906 (= call!7904 call!7910)))

(declare-fun b!83979 () Bool)

(assert (=> b!83979 (= e!54798 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83980 () Bool)

(assert (=> b!83980 (= e!54794 e!54789)))

(declare-fun c!13470 () Bool)

(assert (=> b!83980 (= c!13470 (not (= (bvand lt!38889 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7907 () Bool)

(assert (=> bm!7907 (= call!7906 call!7907)))

(declare-fun b!83981 () Bool)

(assert (=> b!83981 (= e!54796 (= (apply!81 lt!39550 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2211 newMap!16)))))

(declare-fun b!83982 () Bool)

(assert (=> b!83982 (= e!54792 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83983 () Bool)

(assert (=> b!83983 (= e!54787 e!54786)))

(assert (=> b!83983 (= c!13475 (and (not (= (bvand lt!38889 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!38889 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!83984 () Bool)

(assert (=> b!83984 (= e!54789 e!54795)))

(declare-fun res!43397 () Bool)

(assert (=> b!83984 (= res!43397 call!7908)))

(assert (=> b!83984 (=> (not res!43397) (not e!54795))))

(assert (= (and d!21281 c!13473) b!83968))

(assert (= (and d!21281 (not c!13473)) b!83983))

(assert (= (and b!83983 c!13475) b!83966))

(assert (= (and b!83983 (not c!13475)) b!83975))

(assert (= (and b!83975 c!13472) b!83967))

(assert (= (and b!83975 (not c!13472)) b!83964))

(assert (= (or b!83967 b!83964) bm!7906))

(assert (= (or b!83966 bm!7906) bm!7901))

(assert (= (or b!83966 b!83967) bm!7907))

(assert (= (or b!83968 bm!7901) bm!7902))

(assert (= (or b!83968 bm!7907) bm!7903))

(assert (= (and d!21281 res!43390) b!83979))

(assert (= (and d!21281 c!13471) b!83976))

(assert (= (and d!21281 (not c!13471)) b!83970))

(assert (= (and d!21281 res!43394) b!83971))

(assert (= (and b!83971 res!43393) b!83982))

(assert (= (and b!83971 (not res!43396)) b!83972))

(assert (= (and b!83972 res!43392) b!83977))

(assert (= (and b!83971 res!43395) b!83969))

(assert (= (and b!83969 c!13474) b!83974))

(assert (= (and b!83969 (not c!13474)) b!83978))

(assert (= (and b!83974 res!43391) b!83981))

(assert (= (or b!83974 b!83978) bm!7905))

(assert (= (and b!83969 res!43398) b!83980))

(assert (= (and b!83980 c!13470) b!83984))

(assert (= (and b!83980 (not c!13470)) b!83973))

(assert (= (and b!83984 res!43397) b!83965))

(assert (= (or b!83984 b!83973) bm!7904))

(declare-fun b_lambda!3741 () Bool)

(assert (=> (not b_lambda!3741) (not b!83977)))

(assert (=> b!83977 t!5259))

(declare-fun b_and!5105 () Bool)

(assert (= b_and!5101 (and (=> t!5259 result!2903) b_and!5105)))

(assert (=> b!83977 t!5261))

(declare-fun b_and!5107 () Bool)

(assert (= b_and!5103 (and (=> t!5261 result!2905) b_and!5107)))

(declare-fun m!87331 () Bool)

(assert (=> bm!7902 m!87331))

(declare-fun m!87333 () Bool)

(assert (=> bm!7905 m!87333))

(declare-fun m!87335 () Bool)

(assert (=> bm!7903 m!87335))

(assert (=> b!83982 m!86049))

(assert (=> b!83982 m!86049))

(assert (=> b!83982 m!86051))

(declare-fun m!87337 () Bool)

(assert (=> bm!7904 m!87337))

(assert (=> b!83979 m!86049))

(assert (=> b!83979 m!86049))

(assert (=> b!83979 m!86051))

(assert (=> b!83972 m!86049))

(assert (=> b!83972 m!86049))

(declare-fun m!87339 () Bool)

(assert (=> b!83972 m!87339))

(assert (=> d!21281 m!86023))

(declare-fun m!87341 () Bool)

(assert (=> b!83965 m!87341))

(declare-fun m!87343 () Bool)

(assert (=> b!83976 m!87343))

(declare-fun m!87345 () Bool)

(assert (=> b!83976 m!87345))

(declare-fun m!87347 () Bool)

(assert (=> b!83976 m!87347))

(declare-fun m!87349 () Bool)

(assert (=> b!83976 m!87349))

(declare-fun m!87351 () Bool)

(assert (=> b!83976 m!87351))

(declare-fun m!87353 () Bool)

(assert (=> b!83976 m!87353))

(declare-fun m!87355 () Bool)

(assert (=> b!83976 m!87355))

(assert (=> b!83976 m!87345))

(declare-fun m!87357 () Bool)

(assert (=> b!83976 m!87357))

(declare-fun m!87359 () Bool)

(assert (=> b!83976 m!87359))

(assert (=> b!83976 m!87351))

(declare-fun m!87361 () Bool)

(assert (=> b!83976 m!87361))

(assert (=> b!83976 m!87347))

(assert (=> b!83976 m!86049))

(declare-fun m!87363 () Bool)

(assert (=> b!83976 m!87363))

(declare-fun m!87365 () Bool)

(assert (=> b!83976 m!87365))

(declare-fun m!87367 () Bool)

(assert (=> b!83976 m!87367))

(assert (=> b!83976 m!87331))

(declare-fun m!87369 () Bool)

(assert (=> b!83976 m!87369))

(assert (=> b!83976 m!87361))

(declare-fun m!87371 () Bool)

(assert (=> b!83976 m!87371))

(assert (=> b!83977 m!86089))

(assert (=> b!83977 m!86091))

(assert (=> b!83977 m!86049))

(declare-fun m!87373 () Bool)

(assert (=> b!83977 m!87373))

(assert (=> b!83977 m!86049))

(assert (=> b!83977 m!86091))

(assert (=> b!83977 m!86089))

(assert (=> b!83977 m!86095))

(declare-fun m!87375 () Bool)

(assert (=> b!83968 m!87375))

(declare-fun m!87377 () Bool)

(assert (=> b!83981 m!87377))

(assert (=> d!21145 d!21281))

(declare-fun d!21283 () Bool)

(assert (=> d!21283 (= (isDefined!92 (getValueByKey!138 (toList!756 lt!39021) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!338 (getValueByKey!138 (toList!756 lt!39021) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3533 () Bool)

(assert (= bs!3533 d!21283))

(assert (=> bs!3533 m!86597))

(declare-fun m!87379 () Bool)

(assert (=> bs!3533 m!87379))

(assert (=> b!83581 d!21283))

(declare-fun b!83986 () Bool)

(declare-fun e!54799 () Option!144)

(declare-fun e!54800 () Option!144)

(assert (=> b!83986 (= e!54799 e!54800)))

(declare-fun c!13477 () Bool)

(assert (=> b!83986 (= c!13477 (and ((_ is Cons!1543) (toList!756 lt!39021)) (not (= (_1!1120 (h!2133 (toList!756 lt!39021))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!83985 () Bool)

(assert (=> b!83985 (= e!54799 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39021)))))))

(declare-fun b!83988 () Bool)

(assert (=> b!83988 (= e!54800 None!142)))

(declare-fun d!21285 () Bool)

(declare-fun c!13476 () Bool)

(assert (=> d!21285 (= c!13476 (and ((_ is Cons!1543) (toList!756 lt!39021)) (= (_1!1120 (h!2133 (toList!756 lt!39021))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21285 (= (getValueByKey!138 (toList!756 lt!39021) #b0000000000000000000000000000000000000000000000000000000000000000) e!54799)))

(declare-fun b!83987 () Bool)

(assert (=> b!83987 (= e!54800 (getValueByKey!138 (t!5251 (toList!756 lt!39021)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21285 c!13476) b!83985))

(assert (= (and d!21285 (not c!13476)) b!83986))

(assert (= (and b!83986 c!13477) b!83987))

(assert (= (and b!83986 (not c!13477)) b!83988))

(declare-fun m!87381 () Bool)

(assert (=> b!83987 m!87381))

(assert (=> b!83581 d!21285))

(declare-fun d!21287 () Bool)

(assert (=> d!21287 (= (isDefined!92 (getValueByKey!138 (toList!756 lt!39037) (_1!1120 lt!38760))) (not (isEmpty!338 (getValueByKey!138 (toList!756 lt!39037) (_1!1120 lt!38760)))))))

(declare-fun bs!3534 () Bool)

(assert (= bs!3534 d!21287))

(assert (=> bs!3534 m!85941))

(declare-fun m!87383 () Bool)

(assert (=> bs!3534 m!87383))

(assert (=> b!83724 d!21287))

(assert (=> b!83724 d!21127))

(declare-fun d!21289 () Bool)

(assert (=> d!21289 (= (apply!81 lt!39083 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) (get!1209 (getValueByKey!138 (toList!756 lt!39083) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3535 () Bool)

(assert (= bs!3535 d!21289))

(assert (=> bs!3535 m!86049))

(declare-fun m!87385 () Bool)

(assert (=> bs!3535 m!87385))

(assert (=> bs!3535 m!87385))

(declare-fun m!87387 () Bool)

(assert (=> bs!3535 m!87387))

(assert (=> b!83241 d!21289))

(declare-fun d!21291 () Bool)

(declare-fun c!13478 () Bool)

(assert (=> d!21291 (= c!13478 ((_ is ValueCellFull!921) (select (arr!1913 (_values!2300 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!54801 () V!3019)

(assert (=> d!21291 (= (get!1206 (select (arr!1913 (_values!2300 newMap!16)) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!54801)))

(declare-fun b!83989 () Bool)

(assert (=> b!83989 (= e!54801 (get!1207 (select (arr!1913 (_values!2300 newMap!16)) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!83990 () Bool)

(assert (=> b!83990 (= e!54801 (get!1208 (select (arr!1913 (_values!2300 newMap!16)) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21291 c!13478) b!83989))

(assert (= (and d!21291 (not c!13478)) b!83990))

(assert (=> b!83989 m!86091))

(assert (=> b!83989 m!86089))

(declare-fun m!87389 () Bool)

(assert (=> b!83989 m!87389))

(assert (=> b!83990 m!86091))

(assert (=> b!83990 m!86089))

(declare-fun m!87391 () Bool)

(assert (=> b!83990 m!87391))

(assert (=> b!83241 d!21291))

(declare-fun b!83992 () Bool)

(declare-fun e!54802 () Option!144)

(declare-fun e!54803 () Option!144)

(assert (=> b!83992 (= e!54802 e!54803)))

(declare-fun c!13480 () Bool)

(assert (=> b!83992 (= c!13480 (and ((_ is Cons!1543) (toList!756 lt!39053)) (not (= (_1!1120 (h!2133 (toList!756 lt!39053))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(declare-fun b!83991 () Bool)

(assert (=> b!83991 (= e!54802 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39053)))))))

(declare-fun b!83994 () Bool)

(assert (=> b!83994 (= e!54803 None!142)))

(declare-fun c!13479 () Bool)

(declare-fun d!21293 () Bool)

(assert (=> d!21293 (= c!13479 (and ((_ is Cons!1543) (toList!756 lt!39053)) (= (_1!1120 (h!2133 (toList!756 lt!39053))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21293 (= (getValueByKey!138 (toList!756 lt!39053) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) e!54802)))

(declare-fun b!83993 () Bool)

(assert (=> b!83993 (= e!54803 (getValueByKey!138 (t!5251 (toList!756 lt!39053)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (= (and d!21293 c!13479) b!83991))

(assert (= (and d!21293 (not c!13479)) b!83992))

(assert (= (and b!83992 c!13480) b!83993))

(assert (= (and b!83992 (not c!13480)) b!83994))

(declare-fun m!87393 () Bool)

(assert (=> b!83993 m!87393))

(assert (=> b!83213 d!21293))

(declare-fun d!21295 () Bool)

(assert (=> d!21295 (isDefined!92 (getValueByKey!138 (toList!756 lt!39003) (_1!1120 lt!38750)))))

(declare-fun lt!39561 () Unit!2445)

(assert (=> d!21295 (= lt!39561 (choose!496 (toList!756 lt!39003) (_1!1120 lt!38750)))))

(declare-fun e!54804 () Bool)

(assert (=> d!21295 e!54804))

(declare-fun res!43399 () Bool)

(assert (=> d!21295 (=> (not res!43399) (not e!54804))))

(assert (=> d!21295 (= res!43399 (isStrictlySorted!292 (toList!756 lt!39003)))))

(assert (=> d!21295 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39003) (_1!1120 lt!38750)) lt!39561)))

(declare-fun b!83995 () Bool)

(assert (=> b!83995 (= e!54804 (containsKey!142 (toList!756 lt!39003) (_1!1120 lt!38750)))))

(assert (= (and d!21295 res!43399) b!83995))

(assert (=> d!21295 m!85875))

(assert (=> d!21295 m!85875))

(assert (=> d!21295 m!86729))

(declare-fun m!87395 () Bool)

(assert (=> d!21295 m!87395))

(declare-fun m!87397 () Bool)

(assert (=> d!21295 m!87397))

(assert (=> b!83995 m!86725))

(assert (=> b!83627 d!21295))

(declare-fun d!21297 () Bool)

(assert (=> d!21297 (= (isDefined!92 (getValueByKey!138 (toList!756 lt!39003) (_1!1120 lt!38750))) (not (isEmpty!338 (getValueByKey!138 (toList!756 lt!39003) (_1!1120 lt!38750)))))))

(declare-fun bs!3536 () Bool)

(assert (= bs!3536 d!21297))

(assert (=> bs!3536 m!85875))

(declare-fun m!87399 () Bool)

(assert (=> bs!3536 m!87399))

(assert (=> b!83627 d!21297))

(assert (=> b!83627 d!20987))

(declare-fun d!21299 () Bool)

(declare-fun lt!39562 () Bool)

(assert (=> d!21299 (= lt!39562 (select (content!87 lt!39217) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))))))

(declare-fun e!54805 () Bool)

(assert (=> d!21299 (= lt!39562 e!54805)))

(declare-fun res!43400 () Bool)

(assert (=> d!21299 (=> (not res!43400) (not e!54805))))

(assert (=> d!21299 (= res!43400 ((_ is Cons!1543) lt!39217))))

(assert (=> d!21299 (= (contains!760 lt!39217 (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))) lt!39562)))

(declare-fun b!83996 () Bool)

(declare-fun e!54806 () Bool)

(assert (=> b!83996 (= e!54805 e!54806)))

(declare-fun res!43401 () Bool)

(assert (=> b!83996 (=> res!43401 e!54806)))

(assert (=> b!83996 (= res!43401 (= (h!2133 lt!39217) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))))))

(declare-fun b!83997 () Bool)

(assert (=> b!83997 (= e!54806 (contains!760 (t!5251 lt!39217) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))))))

(assert (= (and d!21299 res!43400) b!83996))

(assert (= (and b!83996 (not res!43401)) b!83997))

(declare-fun m!87401 () Bool)

(assert (=> d!21299 m!87401))

(declare-fun m!87403 () Bool)

(assert (=> d!21299 m!87403))

(declare-fun m!87405 () Bool)

(assert (=> b!83997 m!87405))

(assert (=> b!83399 d!21299))

(assert (=> d!21143 d!21037))

(declare-fun b!84014 () Bool)

(declare-fun e!54815 () Bool)

(declare-fun e!54816 () Bool)

(assert (=> b!84014 (= e!54815 e!54816)))

(declare-fun c!13485 () Bool)

(declare-fun lt!39565 () SeekEntryResult!252)

(assert (=> b!84014 (= c!13485 ((_ is MissingVacant!252) lt!39565))))

(declare-fun call!7916 () Bool)

(declare-fun bm!7912 () Bool)

(declare-fun c!13486 () Bool)

(assert (=> bm!7912 (= call!7916 (inRange!0 (ite c!13486 (index!3144 lt!39565) (index!3147 lt!39565)) (mask!6335 newMap!16)))))

(declare-fun d!21301 () Bool)

(assert (=> d!21301 e!54815))

(assert (=> d!21301 (= c!13486 ((_ is MissingZero!252) lt!39565))))

(assert (=> d!21301 (= lt!39565 (seekEntryOrOpen!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (_keys!3985 newMap!16) (mask!6335 newMap!16)))))

(assert (=> d!21301 true))

(declare-fun _$34!831 () Unit!2445)

(assert (=> d!21301 (= (choose!502 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (defaultEntry!2317 newMap!16)) _$34!831)))

(declare-fun b!84015 () Bool)

(declare-fun e!54818 () Bool)

(declare-fun call!7915 () Bool)

(assert (=> b!84015 (= e!54818 (not call!7915))))

(declare-fun b!84016 () Bool)

(declare-fun e!54817 () Bool)

(assert (=> b!84016 (= e!54817 (not call!7915))))

(declare-fun b!84017 () Bool)

(declare-fun res!43412 () Bool)

(assert (=> b!84017 (= res!43412 (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3144 lt!39565)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84017 (=> (not res!43412) (not e!54817))))

(declare-fun bm!7913 () Bool)

(assert (=> bm!7913 (= call!7915 (arrayContainsKey!0 (_keys!3985 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!84018 () Bool)

(assert (=> b!84018 (= e!54815 e!54817)))

(declare-fun res!43413 () Bool)

(assert (=> b!84018 (= res!43413 call!7916)))

(assert (=> b!84018 (=> (not res!43413) (not e!54817))))

(declare-fun b!84019 () Bool)

(assert (=> b!84019 (= e!54816 ((_ is Undefined!252) lt!39565))))

(declare-fun b!84020 () Bool)

(declare-fun res!43411 () Bool)

(assert (=> b!84020 (=> (not res!43411) (not e!54818))))

(assert (=> b!84020 (= res!43411 call!7916)))

(assert (=> b!84020 (= e!54816 e!54818)))

(declare-fun b!84021 () Bool)

(declare-fun res!43410 () Bool)

(assert (=> b!84021 (=> (not res!43410) (not e!54818))))

(assert (=> b!84021 (= res!43410 (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3147 lt!39565)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21301 c!13486) b!84018))

(assert (= (and d!21301 (not c!13486)) b!84014))

(assert (= (and b!84018 res!43413) b!84017))

(assert (= (and b!84017 res!43412) b!84016))

(assert (= (and b!84014 c!13485) b!84020))

(assert (= (and b!84014 (not c!13485)) b!84019))

(assert (= (and b!84020 res!43411) b!84021))

(assert (= (and b!84021 res!43410) b!84015))

(assert (= (or b!84018 b!84020) bm!7912))

(assert (= (or b!84016 b!84015) bm!7913))

(declare-fun m!87407 () Bool)

(assert (=> b!84017 m!87407))

(declare-fun m!87409 () Bool)

(assert (=> bm!7912 m!87409))

(declare-fun m!87411 () Bool)

(assert (=> b!84021 m!87411))

(assert (=> bm!7913 m!85591))

(assert (=> bm!7913 m!85731))

(assert (=> d!21301 m!85591))

(assert (=> d!21301 m!85741))

(assert (=> d!21143 d!21301))

(assert (=> d!21143 d!21219))

(declare-fun d!21303 () Bool)

(assert (=> d!21303 (= (isEmpty!338 (getValueByKey!138 (toList!756 lt!38757) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))) (not ((_ is Some!143) (getValueByKey!138 (toList!756 lt!38757) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))))

(assert (=> d!20959 d!21303))

(declare-fun d!21305 () Bool)

(declare-fun res!43414 () Bool)

(declare-fun e!54819 () Bool)

(assert (=> d!21305 (=> res!43414 e!54819)))

(assert (=> d!21305 (= res!43414 (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> d!21305 (= (arrayContainsKey!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!54819)))

(declare-fun b!84022 () Bool)

(declare-fun e!54820 () Bool)

(assert (=> b!84022 (= e!54819 e!54820)))

(declare-fun res!43415 () Bool)

(assert (=> b!84022 (=> (not res!43415) (not e!54820))))

(assert (=> b!84022 (= res!43415 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!84023 () Bool)

(assert (=> b!84023 (= e!54820 (arrayContainsKey!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!21305 (not res!43414)) b!84022))

(assert (= (and b!84022 res!43415) b!84023))

(assert (=> d!21305 m!87093))

(assert (=> b!84023 m!85591))

(declare-fun m!87413 () Bool)

(assert (=> b!84023 m!87413))

(assert (=> b!83676 d!21305))

(declare-fun d!21307 () Bool)

(declare-fun e!54821 () Bool)

(assert (=> d!21307 e!54821))

(declare-fun res!43416 () Bool)

(assert (=> d!21307 (=> res!43416 e!54821)))

(declare-fun lt!39566 () Bool)

(assert (=> d!21307 (= res!43416 (not lt!39566))))

(declare-fun lt!39568 () Bool)

(assert (=> d!21307 (= lt!39566 lt!39568)))

(declare-fun lt!39569 () Unit!2445)

(declare-fun e!54822 () Unit!2445)

(assert (=> d!21307 (= lt!39569 e!54822)))

(declare-fun c!13487 () Bool)

(assert (=> d!21307 (= c!13487 lt!39568)))

(assert (=> d!21307 (= lt!39568 (containsKey!142 (toList!756 lt!39053) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21307 (= (contains!757 lt!39053 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) lt!39566)))

(declare-fun b!84024 () Bool)

(declare-fun lt!39567 () Unit!2445)

(assert (=> b!84024 (= e!54822 lt!39567)))

(assert (=> b!84024 (= lt!39567 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39053) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> b!84024 (isDefined!92 (getValueByKey!138 (toList!756 lt!39053) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun b!84025 () Bool)

(declare-fun Unit!2488 () Unit!2445)

(assert (=> b!84025 (= e!54822 Unit!2488)))

(declare-fun b!84026 () Bool)

(assert (=> b!84026 (= e!54821 (isDefined!92 (getValueByKey!138 (toList!756 lt!39053) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (= (and d!21307 c!13487) b!84024))

(assert (= (and d!21307 (not c!13487)) b!84025))

(assert (= (and d!21307 (not res!43416)) b!84026))

(declare-fun m!87415 () Bool)

(assert (=> d!21307 m!87415))

(declare-fun m!87417 () Bool)

(assert (=> b!84024 m!87417))

(assert (=> b!84024 m!85993))

(assert (=> b!84024 m!85993))

(declare-fun m!87419 () Bool)

(assert (=> b!84024 m!87419))

(assert (=> b!84026 m!85993))

(assert (=> b!84026 m!85993))

(assert (=> b!84026 m!87419))

(assert (=> d!20903 d!21307))

(declare-fun b!84028 () Bool)

(declare-fun e!54823 () Option!144)

(declare-fun e!54824 () Option!144)

(assert (=> b!84028 (= e!54823 e!54824)))

(declare-fun c!13489 () Bool)

(assert (=> b!84028 (= c!13489 (and ((_ is Cons!1543) lt!39050) (not (= (_1!1120 (h!2133 lt!39050)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(declare-fun b!84027 () Bool)

(assert (=> b!84027 (= e!54823 (Some!143 (_2!1120 (h!2133 lt!39050))))))

(declare-fun b!84030 () Bool)

(assert (=> b!84030 (= e!54824 None!142)))

(declare-fun c!13488 () Bool)

(declare-fun d!21309 () Bool)

(assert (=> d!21309 (= c!13488 (and ((_ is Cons!1543) lt!39050) (= (_1!1120 (h!2133 lt!39050)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21309 (= (getValueByKey!138 lt!39050 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) e!54823)))

(declare-fun b!84029 () Bool)

(assert (=> b!84029 (= e!54824 (getValueByKey!138 (t!5251 lt!39050) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (= (and d!21309 c!13488) b!84027))

(assert (= (and d!21309 (not c!13488)) b!84028))

(assert (= (and b!84028 c!13489) b!84029))

(assert (= (and b!84028 (not c!13489)) b!84030))

(declare-fun m!87421 () Bool)

(assert (=> b!84029 m!87421))

(assert (=> d!20903 d!21309))

(declare-fun d!21311 () Bool)

(assert (=> d!21311 (= (getValueByKey!138 lt!39050 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun lt!39570 () Unit!2445)

(assert (=> d!21311 (= lt!39570 (choose!495 lt!39050 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun e!54825 () Bool)

(assert (=> d!21311 e!54825))

(declare-fun res!43417 () Bool)

(assert (=> d!21311 (=> (not res!43417) (not e!54825))))

(assert (=> d!21311 (= res!43417 (isStrictlySorted!292 lt!39050))))

(assert (=> d!21311 (= (lemmaContainsTupThenGetReturnValue!57 lt!39050 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) lt!39570)))

(declare-fun b!84031 () Bool)

(declare-fun res!43418 () Bool)

(assert (=> b!84031 (=> (not res!43418) (not e!54825))))

(assert (=> b!84031 (= res!43418 (containsKey!142 lt!39050 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun b!84032 () Bool)

(assert (=> b!84032 (= e!54825 (contains!760 lt!39050 (tuple2!2221 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (= (and d!21311 res!43417) b!84031))

(assert (= (and b!84031 res!43418) b!84032))

(assert (=> d!21311 m!85987))

(declare-fun m!87423 () Bool)

(assert (=> d!21311 m!87423))

(declare-fun m!87425 () Bool)

(assert (=> d!21311 m!87425))

(declare-fun m!87427 () Bool)

(assert (=> b!84031 m!87427))

(declare-fun m!87429 () Bool)

(assert (=> b!84032 m!87429))

(assert (=> d!20903 d!21311))

(declare-fun bm!7914 () Bool)

(declare-fun call!7918 () List!1547)

(declare-fun call!7917 () List!1547)

(assert (=> bm!7914 (= call!7918 call!7917)))

(declare-fun b!84033 () Bool)

(declare-fun e!54829 () List!1547)

(assert (=> b!84033 (= e!54829 call!7918)))

(declare-fun b!84034 () Bool)

(declare-fun e!54828 () List!1547)

(declare-fun call!7919 () List!1547)

(assert (=> b!84034 (= e!54828 call!7919)))

(declare-fun e!54827 () List!1547)

(declare-fun b!84035 () Bool)

(assert (=> b!84035 (= e!54827 (insertStrictlySorted!59 (t!5251 (toList!756 lt!38754)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun b!84036 () Bool)

(assert (=> b!84036 (= e!54828 call!7919)))

(declare-fun b!84037 () Bool)

(declare-fun res!43419 () Bool)

(declare-fun e!54830 () Bool)

(assert (=> b!84037 (=> (not res!43419) (not e!54830))))

(declare-fun lt!39571 () List!1547)

(assert (=> b!84037 (= res!43419 (containsKey!142 lt!39571 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun d!21313 () Bool)

(assert (=> d!21313 e!54830))

(declare-fun res!43420 () Bool)

(assert (=> d!21313 (=> (not res!43420) (not e!54830))))

(assert (=> d!21313 (= res!43420 (isStrictlySorted!292 lt!39571))))

(declare-fun e!54826 () List!1547)

(assert (=> d!21313 (= lt!39571 e!54826)))

(declare-fun c!13491 () Bool)

(assert (=> d!21313 (= c!13491 (and ((_ is Cons!1543) (toList!756 lt!38754)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38754))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21313 (isStrictlySorted!292 (toList!756 lt!38754))))

(assert (=> d!21313 (= (insertStrictlySorted!59 (toList!756 lt!38754) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) lt!39571)))

(declare-fun b!84038 () Bool)

(assert (=> b!84038 (= e!54830 (contains!760 lt!39571 (tuple2!2221 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun b!84039 () Bool)

(assert (=> b!84039 (= e!54826 e!54829)))

(declare-fun c!13490 () Bool)

(assert (=> b!84039 (= c!13490 (and ((_ is Cons!1543) (toList!756 lt!38754)) (= (_1!1120 (h!2133 (toList!756 lt!38754))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun c!13493 () Bool)

(declare-fun b!84040 () Bool)

(assert (=> b!84040 (= e!54827 (ite c!13490 (t!5251 (toList!756 lt!38754)) (ite c!13493 (Cons!1543 (h!2133 (toList!756 lt!38754)) (t!5251 (toList!756 lt!38754))) Nil!1544)))))

(declare-fun b!84041 () Bool)

(assert (=> b!84041 (= c!13493 (and ((_ is Cons!1543) (toList!756 lt!38754)) (bvsgt (_1!1120 (h!2133 (toList!756 lt!38754))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> b!84041 (= e!54829 e!54828)))

(declare-fun bm!7915 () Bool)

(assert (=> bm!7915 (= call!7917 ($colon$colon!70 e!54827 (ite c!13491 (h!2133 (toList!756 lt!38754)) (tuple2!2221 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(declare-fun c!13492 () Bool)

(assert (=> bm!7915 (= c!13492 c!13491)))

(declare-fun b!84042 () Bool)

(assert (=> b!84042 (= e!54826 call!7917)))

(declare-fun bm!7916 () Bool)

(assert (=> bm!7916 (= call!7919 call!7918)))

(assert (= (and d!21313 c!13491) b!84042))

(assert (= (and d!21313 (not c!13491)) b!84039))

(assert (= (and b!84039 c!13490) b!84033))

(assert (= (and b!84039 (not c!13490)) b!84041))

(assert (= (and b!84041 c!13493) b!84036))

(assert (= (and b!84041 (not c!13493)) b!84034))

(assert (= (or b!84036 b!84034) bm!7916))

(assert (= (or b!84033 bm!7916) bm!7914))

(assert (= (or b!84042 bm!7914) bm!7915))

(assert (= (and bm!7915 c!13492) b!84035))

(assert (= (and bm!7915 (not c!13492)) b!84040))

(assert (= (and d!21313 res!43420) b!84037))

(assert (= (and b!84037 res!43419) b!84038))

(declare-fun m!87431 () Bool)

(assert (=> d!21313 m!87431))

(assert (=> d!21313 m!86239))

(declare-fun m!87433 () Bool)

(assert (=> b!84035 m!87433))

(declare-fun m!87435 () Bool)

(assert (=> b!84038 m!87435))

(declare-fun m!87437 () Bool)

(assert (=> bm!7915 m!87437))

(declare-fun m!87439 () Bool)

(assert (=> b!84037 m!87439))

(assert (=> d!20903 d!21313))

(declare-fun d!21315 () Bool)

(assert (=> d!21315 (isDefined!92 (getValueByKey!138 (toList!756 lt!39041) (_1!1120 lt!38747)))))

(declare-fun lt!39572 () Unit!2445)

(assert (=> d!21315 (= lt!39572 (choose!496 (toList!756 lt!39041) (_1!1120 lt!38747)))))

(declare-fun e!54831 () Bool)

(assert (=> d!21315 e!54831))

(declare-fun res!43421 () Bool)

(assert (=> d!21315 (=> (not res!43421) (not e!54831))))

(assert (=> d!21315 (= res!43421 (isStrictlySorted!292 (toList!756 lt!39041)))))

(assert (=> d!21315 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39041) (_1!1120 lt!38747)) lt!39572)))

(declare-fun b!84043 () Bool)

(assert (=> b!84043 (= e!54831 (containsKey!142 (toList!756 lt!39041) (_1!1120 lt!38747)))))

(assert (= (and d!21315 res!43421) b!84043))

(assert (=> d!21315 m!85953))

(assert (=> d!21315 m!85953))

(assert (=> d!21315 m!86321))

(declare-fun m!87441 () Bool)

(assert (=> d!21315 m!87441))

(declare-fun m!87443 () Bool)

(assert (=> d!21315 m!87443))

(assert (=> b!84043 m!86317))

(assert (=> b!83433 d!21315))

(declare-fun d!21317 () Bool)

(assert (=> d!21317 (= (isDefined!92 (getValueByKey!138 (toList!756 lt!39041) (_1!1120 lt!38747))) (not (isEmpty!338 (getValueByKey!138 (toList!756 lt!39041) (_1!1120 lt!38747)))))))

(declare-fun bs!3537 () Bool)

(assert (= bs!3537 d!21317))

(assert (=> bs!3537 m!85953))

(declare-fun m!87445 () Bool)

(assert (=> bs!3537 m!87445))

(assert (=> b!83433 d!21317))

(assert (=> b!83433 d!20967))

(declare-fun d!21319 () Bool)

(declare-fun e!54832 () Bool)

(assert (=> d!21319 e!54832))

(declare-fun res!43422 () Bool)

(assert (=> d!21319 (=> res!43422 e!54832)))

(declare-fun lt!39573 () Bool)

(assert (=> d!21319 (= res!43422 (not lt!39573))))

(declare-fun lt!39575 () Bool)

(assert (=> d!21319 (= lt!39573 lt!39575)))

(declare-fun lt!39576 () Unit!2445)

(declare-fun e!54833 () Unit!2445)

(assert (=> d!21319 (= lt!39576 e!54833)))

(declare-fun c!13494 () Bool)

(assert (=> d!21319 (= c!13494 lt!39575)))

(assert (=> d!21319 (= lt!39575 (containsKey!142 (toList!756 lt!39408) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21319 (= (contains!757 lt!39408 #b0000000000000000000000000000000000000000000000000000000000000000) lt!39573)))

(declare-fun b!84044 () Bool)

(declare-fun lt!39574 () Unit!2445)

(assert (=> b!84044 (= e!54833 lt!39574)))

(assert (=> b!84044 (= lt!39574 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39408) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84044 (isDefined!92 (getValueByKey!138 (toList!756 lt!39408) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84045 () Bool)

(declare-fun Unit!2489 () Unit!2445)

(assert (=> b!84045 (= e!54833 Unit!2489)))

(declare-fun b!84046 () Bool)

(assert (=> b!84046 (= e!54832 (isDefined!92 (getValueByKey!138 (toList!756 lt!39408) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21319 c!13494) b!84044))

(assert (= (and d!21319 (not c!13494)) b!84045))

(assert (= (and d!21319 (not res!43422)) b!84046))

(declare-fun m!87447 () Bool)

(assert (=> d!21319 m!87447))

(declare-fun m!87449 () Bool)

(assert (=> b!84044 m!87449))

(declare-fun m!87451 () Bool)

(assert (=> b!84044 m!87451))

(assert (=> b!84044 m!87451))

(declare-fun m!87453 () Bool)

(assert (=> b!84044 m!87453))

(assert (=> b!84046 m!87451))

(assert (=> b!84046 m!87451))

(assert (=> b!84046 m!87453))

(assert (=> d!21105 d!21319))

(assert (=> d!21105 d!20895))

(declare-fun b!84048 () Bool)

(declare-fun e!54834 () Option!144)

(declare-fun e!54835 () Option!144)

(assert (=> b!84048 (= e!54834 e!54835)))

(declare-fun c!13496 () Bool)

(assert (=> b!84048 (= c!13496 (and ((_ is Cons!1543) (toList!756 lt!39061)) (not (= (_1!1120 (h!2133 (toList!756 lt!39061))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!84047 () Bool)

(assert (=> b!84047 (= e!54834 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39061)))))))

(declare-fun b!84050 () Bool)

(assert (=> b!84050 (= e!54835 None!142)))

(declare-fun d!21321 () Bool)

(declare-fun c!13495 () Bool)

(assert (=> d!21321 (= c!13495 (and ((_ is Cons!1543) (toList!756 lt!39061)) (= (_1!1120 (h!2133 (toList!756 lt!39061))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21321 (= (getValueByKey!138 (toList!756 lt!39061) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) e!54834)))

(declare-fun b!84049 () Bool)

(assert (=> b!84049 (= e!54835 (getValueByKey!138 (t!5251 (toList!756 lt!39061)) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21321 c!13495) b!84047))

(assert (= (and d!21321 (not c!13495)) b!84048))

(assert (= (and b!84048 c!13496) b!84049))

(assert (= (and b!84048 (not c!13496)) b!84050))

(declare-fun m!87455 () Bool)

(assert (=> b!84049 m!87455))

(assert (=> b!83217 d!21321))

(declare-fun d!21323 () Bool)

(declare-fun res!43423 () Bool)

(declare-fun e!54836 () Bool)

(assert (=> d!21323 (=> res!43423 e!54836)))

(assert (=> d!21323 (= res!43423 (and ((_ is Cons!1543) lt!39381) (= (_1!1120 (h!2133 lt!39381)) (_1!1120 lt!38750))))))

(assert (=> d!21323 (= (containsKey!142 lt!39381 (_1!1120 lt!38750)) e!54836)))

(declare-fun b!84051 () Bool)

(declare-fun e!54837 () Bool)

(assert (=> b!84051 (= e!54836 e!54837)))

(declare-fun res!43424 () Bool)

(assert (=> b!84051 (=> (not res!43424) (not e!54837))))

(assert (=> b!84051 (= res!43424 (and (or (not ((_ is Cons!1543) lt!39381)) (bvsle (_1!1120 (h!2133 lt!39381)) (_1!1120 lt!38750))) ((_ is Cons!1543) lt!39381) (bvslt (_1!1120 (h!2133 lt!39381)) (_1!1120 lt!38750))))))

(declare-fun b!84052 () Bool)

(assert (=> b!84052 (= e!54837 (containsKey!142 (t!5251 lt!39381) (_1!1120 lt!38750)))))

(assert (= (and d!21323 (not res!43423)) b!84051))

(assert (= (and b!84051 res!43424) b!84052))

(declare-fun m!87457 () Bool)

(assert (=> b!84052 m!87457))

(assert (=> b!83640 d!21323))

(declare-fun d!21325 () Bool)

(declare-fun lt!39577 () Bool)

(assert (=> d!21325 (= lt!39577 (select (content!87 (toList!756 lt!39101)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun e!54838 () Bool)

(assert (=> d!21325 (= lt!39577 e!54838)))

(declare-fun res!43425 () Bool)

(assert (=> d!21325 (=> (not res!43425) (not e!54838))))

(assert (=> d!21325 (= res!43425 ((_ is Cons!1543) (toList!756 lt!39101)))))

(assert (=> d!21325 (= (contains!760 (toList!756 lt!39101) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!39577)))

(declare-fun b!84053 () Bool)

(declare-fun e!54839 () Bool)

(assert (=> b!84053 (= e!54838 e!54839)))

(declare-fun res!43426 () Bool)

(assert (=> b!84053 (=> res!43426 e!54839)))

(assert (=> b!84053 (= res!43426 (= (h!2133 (toList!756 lt!39101)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!84054 () Bool)

(assert (=> b!84054 (= e!54839 (contains!760 (t!5251 (toList!756 lt!39101)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(assert (= (and d!21325 res!43425) b!84053))

(assert (= (and b!84053 (not res!43426)) b!84054))

(declare-fun m!87459 () Bool)

(assert (=> d!21325 m!87459))

(declare-fun m!87461 () Bool)

(assert (=> d!21325 m!87461))

(declare-fun m!87463 () Bool)

(assert (=> b!84054 m!87463))

(assert (=> b!83256 d!21325))

(declare-fun d!21327 () Bool)

(declare-fun c!13497 () Bool)

(assert (=> d!21327 (= c!13497 ((_ is Nil!1544) (toList!756 lt!39045)))))

(declare-fun e!54840 () (InoxSet tuple2!2220))

(assert (=> d!21327 (= (content!87 (toList!756 lt!39045)) e!54840)))

(declare-fun b!84055 () Bool)

(assert (=> b!84055 (= e!54840 ((as const (Array tuple2!2220 Bool)) false))))

(declare-fun b!84056 () Bool)

(assert (=> b!84056 (= e!54840 ((_ map or) (store ((as const (Array tuple2!2220 Bool)) false) (h!2133 (toList!756 lt!39045)) true) (content!87 (t!5251 (toList!756 lt!39045)))))))

(assert (= (and d!21327 c!13497) b!84055))

(assert (= (and d!21327 (not c!13497)) b!84056))

(declare-fun m!87465 () Bool)

(assert (=> b!84056 m!87465))

(declare-fun m!87467 () Bool)

(assert (=> b!84056 m!87467))

(assert (=> d!21077 d!21327))

(declare-fun b!84069 () Bool)

(declare-fun e!54848 () SeekEntryResult!252)

(assert (=> b!84069 (= e!54848 (Found!252 (index!3146 lt!39307)))))

(declare-fun b!84070 () Bool)

(declare-fun e!54847 () SeekEntryResult!252)

(assert (=> b!84070 (= e!54847 (MissingVacant!252 (index!3146 lt!39307)))))

(declare-fun b!84071 () Bool)

(declare-fun c!13505 () Bool)

(declare-fun lt!39582 () (_ BitVec 64))

(assert (=> b!84071 (= c!13505 (= lt!39582 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84071 (= e!54848 e!54847)))

(declare-fun b!84073 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!84073 (= e!54847 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11861 lt!39307) #b00000000000000000000000000000001) (nextIndex!0 (index!3146 lt!39307) (x!11861 lt!39307) (mask!6335 newMap!16)) (index!3146 lt!39307) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (_keys!3985 newMap!16) (mask!6335 newMap!16)))))

(declare-fun b!84074 () Bool)

(declare-fun e!54849 () SeekEntryResult!252)

(assert (=> b!84074 (= e!54849 Undefined!252)))

(declare-fun b!84072 () Bool)

(assert (=> b!84072 (= e!54849 e!54848)))

(declare-fun c!13504 () Bool)

(assert (=> b!84072 (= c!13504 (= lt!39582 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun lt!39583 () SeekEntryResult!252)

(declare-fun d!21329 () Bool)

(assert (=> d!21329 (and (or ((_ is Undefined!252) lt!39583) (not ((_ is Found!252) lt!39583)) (and (bvsge (index!3145 lt!39583) #b00000000000000000000000000000000) (bvslt (index!3145 lt!39583) (size!2155 (_keys!3985 newMap!16))))) (or ((_ is Undefined!252) lt!39583) ((_ is Found!252) lt!39583) (not ((_ is MissingVacant!252) lt!39583)) (not (= (index!3147 lt!39583) (index!3146 lt!39307))) (and (bvsge (index!3147 lt!39583) #b00000000000000000000000000000000) (bvslt (index!3147 lt!39583) (size!2155 (_keys!3985 newMap!16))))) (or ((_ is Undefined!252) lt!39583) (ite ((_ is Found!252) lt!39583) (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!39583)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (and ((_ is MissingVacant!252) lt!39583) (= (index!3147 lt!39583) (index!3146 lt!39307)) (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3147 lt!39583)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!21329 (= lt!39583 e!54849)))

(declare-fun c!13506 () Bool)

(assert (=> d!21329 (= c!13506 (bvsge (x!11861 lt!39307) #b01111111111111111111111111111110))))

(assert (=> d!21329 (= lt!39582 (select (arr!1912 (_keys!3985 newMap!16)) (index!3146 lt!39307)))))

(assert (=> d!21329 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!21329 (= (seekKeyOrZeroReturnVacant!0 (x!11861 lt!39307) (index!3146 lt!39307) (index!3146 lt!39307) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (_keys!3985 newMap!16) (mask!6335 newMap!16)) lt!39583)))

(assert (= (and d!21329 c!13506) b!84074))

(assert (= (and d!21329 (not c!13506)) b!84072))

(assert (= (and b!84072 c!13504) b!84069))

(assert (= (and b!84072 (not c!13504)) b!84071))

(assert (= (and b!84071 c!13505) b!84070))

(assert (= (and b!84071 (not c!13505)) b!84073))

(declare-fun m!87469 () Bool)

(assert (=> b!84073 m!87469))

(assert (=> b!84073 m!87469))

(assert (=> b!84073 m!85591))

(declare-fun m!87471 () Bool)

(assert (=> b!84073 m!87471))

(declare-fun m!87473 () Bool)

(assert (=> d!21329 m!87473))

(declare-fun m!87475 () Bool)

(assert (=> d!21329 m!87475))

(assert (=> d!21329 m!86531))

(assert (=> d!21329 m!86023))

(assert (=> b!83551 d!21329))

(declare-fun d!21331 () Bool)

(declare-fun res!43427 () Bool)

(declare-fun e!54850 () Bool)

(assert (=> d!21331 (=> res!43427 e!54850)))

(assert (=> d!21331 (= res!43427 (and ((_ is Cons!1543) lt!39233) (= (_1!1120 (h!2133 lt!39233)) (_1!1120 lt!38747))))))

(assert (=> d!21331 (= (containsKey!142 lt!39233 (_1!1120 lt!38747)) e!54850)))

(declare-fun b!84075 () Bool)

(declare-fun e!54851 () Bool)

(assert (=> b!84075 (= e!54850 e!54851)))

(declare-fun res!43428 () Bool)

(assert (=> b!84075 (=> (not res!43428) (not e!54851))))

(assert (=> b!84075 (= res!43428 (and (or (not ((_ is Cons!1543) lt!39233)) (bvsle (_1!1120 (h!2133 lt!39233)) (_1!1120 lt!38747))) ((_ is Cons!1543) lt!39233) (bvslt (_1!1120 (h!2133 lt!39233)) (_1!1120 lt!38747))))))

(declare-fun b!84076 () Bool)

(assert (=> b!84076 (= e!54851 (containsKey!142 (t!5251 lt!39233) (_1!1120 lt!38747)))))

(assert (= (and d!21331 (not res!43427)) b!84075))

(assert (= (and b!84075 res!43428) b!84076))

(declare-fun m!87477 () Bool)

(assert (=> b!84076 m!87477))

(assert (=> b!83446 d!21331))

(declare-fun d!21333 () Bool)

(declare-fun e!54852 () Bool)

(assert (=> d!21333 e!54852))

(declare-fun res!43429 () Bool)

(assert (=> d!21333 (=> res!43429 e!54852)))

(declare-fun lt!39584 () Bool)

(assert (=> d!21333 (= res!43429 (not lt!39584))))

(declare-fun lt!39586 () Bool)

(assert (=> d!21333 (= lt!39584 lt!39586)))

(declare-fun lt!39587 () Unit!2445)

(declare-fun e!54853 () Unit!2445)

(assert (=> d!21333 (= lt!39587 e!54853)))

(declare-fun c!13507 () Bool)

(assert (=> d!21333 (= c!13507 lt!39586)))

(assert (=> d!21333 (= lt!39586 (containsKey!142 (toList!756 lt!39363) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21333 (= (contains!757 lt!39363 #b0000000000000000000000000000000000000000000000000000000000000000) lt!39584)))

(declare-fun b!84077 () Bool)

(declare-fun lt!39585 () Unit!2445)

(assert (=> b!84077 (= e!54853 lt!39585)))

(assert (=> b!84077 (= lt!39585 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39363) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84077 (isDefined!92 (getValueByKey!138 (toList!756 lt!39363) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84078 () Bool)

(declare-fun Unit!2490 () Unit!2445)

(assert (=> b!84078 (= e!54853 Unit!2490)))

(declare-fun b!84079 () Bool)

(assert (=> b!84079 (= e!54852 (isDefined!92 (getValueByKey!138 (toList!756 lt!39363) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21333 c!13507) b!84077))

(assert (= (and d!21333 (not c!13507)) b!84078))

(assert (= (and d!21333 (not res!43429)) b!84079))

(declare-fun m!87479 () Bool)

(assert (=> d!21333 m!87479))

(declare-fun m!87481 () Bool)

(assert (=> b!84077 m!87481))

(declare-fun m!87483 () Bool)

(assert (=> b!84077 m!87483))

(assert (=> b!84077 m!87483))

(declare-fun m!87485 () Bool)

(assert (=> b!84077 m!87485))

(assert (=> b!84079 m!87483))

(assert (=> b!84079 m!87483))

(assert (=> b!84079 m!87485))

(assert (=> bm!7862 d!21333))

(declare-fun d!21335 () Bool)

(declare-fun e!54854 () Bool)

(assert (=> d!21335 e!54854))

(declare-fun res!43430 () Bool)

(assert (=> d!21335 (=> res!43430 e!54854)))

(declare-fun lt!39588 () Bool)

(assert (=> d!21335 (= res!43430 (not lt!39588))))

(declare-fun lt!39590 () Bool)

(assert (=> d!21335 (= lt!39588 lt!39590)))

(declare-fun lt!39591 () Unit!2445)

(declare-fun e!54855 () Unit!2445)

(assert (=> d!21335 (= lt!39591 e!54855)))

(declare-fun c!13508 () Bool)

(assert (=> d!21335 (= c!13508 lt!39590)))

(assert (=> d!21335 (= lt!39590 (containsKey!142 (toList!756 lt!39061) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21335 (= (contains!757 lt!39061 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39588)))

(declare-fun b!84080 () Bool)

(declare-fun lt!39589 () Unit!2445)

(assert (=> b!84080 (= e!54855 lt!39589)))

(assert (=> b!84080 (= lt!39589 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39061) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> b!84080 (isDefined!92 (getValueByKey!138 (toList!756 lt!39061) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84081 () Bool)

(declare-fun Unit!2491 () Unit!2445)

(assert (=> b!84081 (= e!54855 Unit!2491)))

(declare-fun b!84082 () Bool)

(assert (=> b!84082 (= e!54854 (isDefined!92 (getValueByKey!138 (toList!756 lt!39061) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!21335 c!13508) b!84080))

(assert (= (and d!21335 (not c!13508)) b!84081))

(assert (= (and d!21335 (not res!43430)) b!84082))

(declare-fun m!87487 () Bool)

(assert (=> d!21335 m!87487))

(declare-fun m!87489 () Bool)

(assert (=> b!84080 m!87489))

(assert (=> b!84080 m!86017))

(assert (=> b!84080 m!86017))

(declare-fun m!87491 () Bool)

(assert (=> b!84080 m!87491))

(assert (=> b!84082 m!86017))

(assert (=> b!84082 m!86017))

(assert (=> b!84082 m!87491))

(assert (=> d!20909 d!21335))

(declare-fun b!84084 () Bool)

(declare-fun e!54856 () Option!144)

(declare-fun e!54857 () Option!144)

(assert (=> b!84084 (= e!54856 e!54857)))

(declare-fun c!13510 () Bool)

(assert (=> b!84084 (= c!13510 (and ((_ is Cons!1543) lt!39058) (not (= (_1!1120 (h!2133 lt!39058)) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!84083 () Bool)

(assert (=> b!84083 (= e!54856 (Some!143 (_2!1120 (h!2133 lt!39058))))))

(declare-fun b!84086 () Bool)

(assert (=> b!84086 (= e!54857 None!142)))

(declare-fun d!21337 () Bool)

(declare-fun c!13509 () Bool)

(assert (=> d!21337 (= c!13509 (and ((_ is Cons!1543) lt!39058) (= (_1!1120 (h!2133 lt!39058)) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21337 (= (getValueByKey!138 lt!39058 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) e!54856)))

(declare-fun b!84085 () Bool)

(assert (=> b!84085 (= e!54857 (getValueByKey!138 (t!5251 lt!39058) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21337 c!13509) b!84083))

(assert (= (and d!21337 (not c!13509)) b!84084))

(assert (= (and b!84084 c!13510) b!84085))

(assert (= (and b!84084 (not c!13510)) b!84086))

(declare-fun m!87493 () Bool)

(assert (=> b!84085 m!87493))

(assert (=> d!20909 d!21337))

(declare-fun d!21339 () Bool)

(assert (=> d!21339 (= (getValueByKey!138 lt!39058 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun lt!39592 () Unit!2445)

(assert (=> d!21339 (= lt!39592 (choose!495 lt!39058 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun e!54858 () Bool)

(assert (=> d!21339 e!54858))

(declare-fun res!43431 () Bool)

(assert (=> d!21339 (=> (not res!43431) (not e!54858))))

(assert (=> d!21339 (= res!43431 (isStrictlySorted!292 lt!39058))))

(assert (=> d!21339 (= (lemmaContainsTupThenGetReturnValue!57 lt!39058 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39592)))

(declare-fun b!84087 () Bool)

(declare-fun res!43432 () Bool)

(assert (=> b!84087 (=> (not res!43432) (not e!54858))))

(assert (=> b!84087 (= res!43432 (containsKey!142 lt!39058 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84088 () Bool)

(assert (=> b!84088 (= e!54858 (contains!760 lt!39058 (tuple2!2221 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!21339 res!43431) b!84087))

(assert (= (and b!84087 res!43432) b!84088))

(assert (=> d!21339 m!86011))

(declare-fun m!87495 () Bool)

(assert (=> d!21339 m!87495))

(declare-fun m!87497 () Bool)

(assert (=> d!21339 m!87497))

(declare-fun m!87499 () Bool)

(assert (=> b!84087 m!87499))

(declare-fun m!87501 () Bool)

(assert (=> b!84088 m!87501))

(assert (=> d!20909 d!21339))

(declare-fun bm!7917 () Bool)

(declare-fun call!7921 () List!1547)

(declare-fun call!7920 () List!1547)

(assert (=> bm!7917 (= call!7921 call!7920)))

(declare-fun b!84089 () Bool)

(declare-fun e!54862 () List!1547)

(assert (=> b!84089 (= e!54862 call!7921)))

(declare-fun b!84090 () Bool)

(declare-fun e!54861 () List!1547)

(declare-fun call!7922 () List!1547)

(assert (=> b!84090 (= e!54861 call!7922)))

(declare-fun b!84091 () Bool)

(declare-fun e!54860 () List!1547)

(assert (=> b!84091 (= e!54860 (insertStrictlySorted!59 (t!5251 (toList!756 lt!38754)) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84092 () Bool)

(assert (=> b!84092 (= e!54861 call!7922)))

(declare-fun b!84093 () Bool)

(declare-fun res!43433 () Bool)

(declare-fun e!54863 () Bool)

(assert (=> b!84093 (=> (not res!43433) (not e!54863))))

(declare-fun lt!39593 () List!1547)

(assert (=> b!84093 (= res!43433 (containsKey!142 lt!39593 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun d!21341 () Bool)

(assert (=> d!21341 e!54863))

(declare-fun res!43434 () Bool)

(assert (=> d!21341 (=> (not res!43434) (not e!54863))))

(assert (=> d!21341 (= res!43434 (isStrictlySorted!292 lt!39593))))

(declare-fun e!54859 () List!1547)

(assert (=> d!21341 (= lt!39593 e!54859)))

(declare-fun c!13512 () Bool)

(assert (=> d!21341 (= c!13512 (and ((_ is Cons!1543) (toList!756 lt!38754)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38754))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21341 (isStrictlySorted!292 (toList!756 lt!38754))))

(assert (=> d!21341 (= (insertStrictlySorted!59 (toList!756 lt!38754) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39593)))

(declare-fun b!84094 () Bool)

(assert (=> b!84094 (= e!54863 (contains!760 lt!39593 (tuple2!2221 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!84095 () Bool)

(assert (=> b!84095 (= e!54859 e!54862)))

(declare-fun c!13511 () Bool)

(assert (=> b!84095 (= c!13511 (and ((_ is Cons!1543) (toList!756 lt!38754)) (= (_1!1120 (h!2133 (toList!756 lt!38754))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun c!13514 () Bool)

(declare-fun b!84096 () Bool)

(assert (=> b!84096 (= e!54860 (ite c!13511 (t!5251 (toList!756 lt!38754)) (ite c!13514 (Cons!1543 (h!2133 (toList!756 lt!38754)) (t!5251 (toList!756 lt!38754))) Nil!1544)))))

(declare-fun b!84097 () Bool)

(assert (=> b!84097 (= c!13514 (and ((_ is Cons!1543) (toList!756 lt!38754)) (bvsgt (_1!1120 (h!2133 (toList!756 lt!38754))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> b!84097 (= e!54862 e!54861)))

(declare-fun bm!7918 () Bool)

(assert (=> bm!7918 (= call!7920 ($colon$colon!70 e!54860 (ite c!13512 (h!2133 (toList!756 lt!38754)) (tuple2!2221 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun c!13513 () Bool)

(assert (=> bm!7918 (= c!13513 c!13512)))

(declare-fun b!84098 () Bool)

(assert (=> b!84098 (= e!54859 call!7920)))

(declare-fun bm!7919 () Bool)

(assert (=> bm!7919 (= call!7922 call!7921)))

(assert (= (and d!21341 c!13512) b!84098))

(assert (= (and d!21341 (not c!13512)) b!84095))

(assert (= (and b!84095 c!13511) b!84089))

(assert (= (and b!84095 (not c!13511)) b!84097))

(assert (= (and b!84097 c!13514) b!84092))

(assert (= (and b!84097 (not c!13514)) b!84090))

(assert (= (or b!84092 b!84090) bm!7919))

(assert (= (or b!84089 bm!7919) bm!7917))

(assert (= (or b!84098 bm!7917) bm!7918))

(assert (= (and bm!7918 c!13513) b!84091))

(assert (= (and bm!7918 (not c!13513)) b!84096))

(assert (= (and d!21341 res!43434) b!84093))

(assert (= (and b!84093 res!43433) b!84094))

(declare-fun m!87503 () Bool)

(assert (=> d!21341 m!87503))

(assert (=> d!21341 m!86239))

(declare-fun m!87505 () Bool)

(assert (=> b!84091 m!87505))

(declare-fun m!87507 () Bool)

(assert (=> b!84094 m!87507))

(declare-fun m!87509 () Bool)

(assert (=> bm!7918 m!87509))

(declare-fun m!87511 () Bool)

(assert (=> b!84093 m!87511))

(assert (=> d!20909 d!21341))

(declare-fun b!84099 () Bool)

(declare-fun e!54865 () (_ BitVec 32))

(assert (=> b!84099 (= e!54865 #b00000000000000000000000000000000)))

(declare-fun bm!7920 () Bool)

(declare-fun call!7923 () (_ BitVec 32))

(assert (=> bm!7920 (= call!7923 (arrayCountValidKeys!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun d!21343 () Bool)

(declare-fun lt!39594 () (_ BitVec 32))

(assert (=> d!21343 (and (bvsge lt!39594 #b00000000000000000000000000000000) (bvsle lt!39594 (bvsub (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!21343 (= lt!39594 e!54865)))

(declare-fun c!13515 () Bool)

(assert (=> d!21343 (= c!13515 (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(assert (=> d!21343 (and (bvsle #b00000000000000000000000000000000 (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(assert (=> d!21343 (= (arrayCountValidKeys!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000000 (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))) lt!39594)))

(declare-fun b!84100 () Bool)

(declare-fun e!54864 () (_ BitVec 32))

(assert (=> b!84100 (= e!54864 (bvadd #b00000000000000000000000000000001 call!7923))))

(declare-fun b!84101 () Bool)

(assert (=> b!84101 (= e!54865 e!54864)))

(declare-fun c!13516 () Bool)

(assert (=> b!84101 (= c!13516 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!84102 () Bool)

(assert (=> b!84102 (= e!54864 call!7923)))

(assert (= (and d!21343 c!13515) b!84099))

(assert (= (and d!21343 (not c!13515)) b!84101))

(assert (= (and b!84101 c!13516) b!84100))

(assert (= (and b!84101 (not c!13516)) b!84102))

(assert (= (or b!84100 b!84102) bm!7920))

(declare-fun m!87513 () Bool)

(assert (=> bm!7920 m!87513))

(assert (=> b!84101 m!87121))

(assert (=> b!84101 m!87121))

(assert (=> b!84101 m!87129))

(assert (=> b!83249 d!21343))

(declare-fun b!84104 () Bool)

(declare-fun e!54866 () Option!144)

(declare-fun e!54867 () Option!144)

(assert (=> b!84104 (= e!54866 e!54867)))

(declare-fun c!13518 () Bool)

(assert (=> b!84104 (= c!13518 (and ((_ is Cons!1543) (t!5251 lt!39038)) (not (= (_1!1120 (h!2133 (t!5251 lt!39038))) (_1!1120 lt!38747)))))))

(declare-fun b!84103 () Bool)

(assert (=> b!84103 (= e!54866 (Some!143 (_2!1120 (h!2133 (t!5251 lt!39038)))))))

(declare-fun b!84106 () Bool)

(assert (=> b!84106 (= e!54867 None!142)))

(declare-fun d!21345 () Bool)

(declare-fun c!13517 () Bool)

(assert (=> d!21345 (= c!13517 (and ((_ is Cons!1543) (t!5251 lt!39038)) (= (_1!1120 (h!2133 (t!5251 lt!39038))) (_1!1120 lt!38747))))))

(assert (=> d!21345 (= (getValueByKey!138 (t!5251 lt!39038) (_1!1120 lt!38747)) e!54866)))

(declare-fun b!84105 () Bool)

(assert (=> b!84105 (= e!54867 (getValueByKey!138 (t!5251 (t!5251 lt!39038)) (_1!1120 lt!38747)))))

(assert (= (and d!21345 c!13517) b!84103))

(assert (= (and d!21345 (not c!13517)) b!84104))

(assert (= (and b!84104 c!13518) b!84105))

(assert (= (and b!84104 (not c!13518)) b!84106))

(declare-fun m!87515 () Bool)

(assert (=> b!84105 m!87515))

(assert (=> b!83438 d!21345))

(declare-fun d!21347 () Bool)

(assert (=> d!21347 (= (get!1209 (getValueByKey!138 (toList!756 lt!38967) lt!38966)) (v!2636 (getValueByKey!138 (toList!756 lt!38967) lt!38966)))))

(assert (=> d!21003 d!21347))

(declare-fun b!84108 () Bool)

(declare-fun e!54868 () Option!144)

(declare-fun e!54869 () Option!144)

(assert (=> b!84108 (= e!54868 e!54869)))

(declare-fun c!13520 () Bool)

(assert (=> b!84108 (= c!13520 (and ((_ is Cons!1543) (toList!756 lt!38967)) (not (= (_1!1120 (h!2133 (toList!756 lt!38967))) lt!38966))))))

(declare-fun b!84107 () Bool)

(assert (=> b!84107 (= e!54868 (Some!143 (_2!1120 (h!2133 (toList!756 lt!38967)))))))

(declare-fun b!84110 () Bool)

(assert (=> b!84110 (= e!54869 None!142)))

(declare-fun d!21349 () Bool)

(declare-fun c!13519 () Bool)

(assert (=> d!21349 (= c!13519 (and ((_ is Cons!1543) (toList!756 lt!38967)) (= (_1!1120 (h!2133 (toList!756 lt!38967))) lt!38966)))))

(assert (=> d!21349 (= (getValueByKey!138 (toList!756 lt!38967) lt!38966) e!54868)))

(declare-fun b!84109 () Bool)

(assert (=> b!84109 (= e!54869 (getValueByKey!138 (t!5251 (toList!756 lt!38967)) lt!38966))))

(assert (= (and d!21349 c!13519) b!84107))

(assert (= (and d!21349 (not c!13519)) b!84108))

(assert (= (and b!84108 c!13520) b!84109))

(assert (= (and b!84108 (not c!13520)) b!84110))

(declare-fun m!87517 () Bool)

(assert (=> b!84109 m!87517))

(assert (=> d!21003 d!21349))

(declare-fun d!21351 () Bool)

(assert (=> d!21351 (= (isDefined!92 (getValueByKey!138 (toList!756 call!7759) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))) (not (isEmpty!338 (getValueByKey!138 (toList!756 call!7759) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))))

(declare-fun bs!3538 () Bool)

(assert (= bs!3538 d!21351))

(assert (=> bs!3538 m!86133))

(declare-fun m!87519 () Bool)

(assert (=> bs!3538 m!87519))

(assert (=> b!83259 d!21351))

(declare-fun b!84112 () Bool)

(declare-fun e!54870 () Option!144)

(declare-fun e!54871 () Option!144)

(assert (=> b!84112 (= e!54870 e!54871)))

(declare-fun c!13522 () Bool)

(assert (=> b!84112 (= c!13522 (and ((_ is Cons!1543) (toList!756 call!7759)) (not (= (_1!1120 (h!2133 (toList!756 call!7759))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))))

(declare-fun b!84111 () Bool)

(assert (=> b!84111 (= e!54870 (Some!143 (_2!1120 (h!2133 (toList!756 call!7759)))))))

(declare-fun b!84114 () Bool)

(assert (=> b!84114 (= e!54871 None!142)))

(declare-fun c!13521 () Bool)

(declare-fun d!21353 () Bool)

(assert (=> d!21353 (= c!13521 (and ((_ is Cons!1543) (toList!756 call!7759)) (= (_1!1120 (h!2133 (toList!756 call!7759))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))))

(assert (=> d!21353 (= (getValueByKey!138 (toList!756 call!7759) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) e!54870)))

(declare-fun b!84113 () Bool)

(assert (=> b!84113 (= e!54871 (getValueByKey!138 (t!5251 (toList!756 call!7759)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (= (and d!21353 c!13521) b!84111))

(assert (= (and d!21353 (not c!13521)) b!84112))

(assert (= (and b!84112 c!13522) b!84113))

(assert (= (and b!84112 (not c!13522)) b!84114))

(assert (=> b!84113 m!85591))

(declare-fun m!87521 () Bool)

(assert (=> b!84113 m!87521))

(assert (=> b!83259 d!21353))

(assert (=> d!20917 d!21219))

(declare-fun d!21355 () Bool)

(declare-fun e!54872 () Bool)

(assert (=> d!21355 e!54872))

(declare-fun res!43435 () Bool)

(assert (=> d!21355 (=> res!43435 e!54872)))

(declare-fun lt!39595 () Bool)

(assert (=> d!21355 (= res!43435 (not lt!39595))))

(declare-fun lt!39597 () Bool)

(assert (=> d!21355 (= lt!39595 lt!39597)))

(declare-fun lt!39598 () Unit!2445)

(declare-fun e!54873 () Unit!2445)

(assert (=> d!21355 (= lt!39598 e!54873)))

(declare-fun c!13523 () Bool)

(assert (=> d!21355 (= c!13523 lt!39597)))

(assert (=> d!21355 (= lt!39597 (containsKey!142 (toList!756 lt!39363) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!21355 (= (contains!757 lt!39363 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) lt!39595)))

(declare-fun b!84115 () Bool)

(declare-fun lt!39596 () Unit!2445)

(assert (=> b!84115 (= e!54873 lt!39596)))

(assert (=> b!84115 (= lt!39596 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39363) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84115 (isDefined!92 (getValueByKey!138 (toList!756 lt!39363) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84116 () Bool)

(declare-fun Unit!2492 () Unit!2445)

(assert (=> b!84116 (= e!54873 Unit!2492)))

(declare-fun b!84117 () Bool)

(assert (=> b!84117 (= e!54872 (isDefined!92 (getValueByKey!138 (toList!756 lt!39363) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!21355 c!13523) b!84115))

(assert (= (and d!21355 (not c!13523)) b!84116))

(assert (= (and d!21355 (not res!43435)) b!84117))

(assert (=> d!21355 m!86049))

(declare-fun m!87523 () Bool)

(assert (=> d!21355 m!87523))

(assert (=> b!84115 m!86049))

(declare-fun m!87525 () Bool)

(assert (=> b!84115 m!87525))

(assert (=> b!84115 m!86049))

(declare-fun m!87527 () Bool)

(assert (=> b!84115 m!87527))

(assert (=> b!84115 m!87527))

(declare-fun m!87529 () Bool)

(assert (=> b!84115 m!87529))

(assert (=> b!84117 m!86049))

(assert (=> b!84117 m!87527))

(assert (=> b!84117 m!87527))

(assert (=> b!84117 m!87529))

(assert (=> b!83604 d!21355))

(assert (=> bm!7822 d!20989))

(declare-fun b!84118 () Bool)

(declare-fun e!54879 () ListLongMap!1481)

(declare-fun call!7924 () ListLongMap!1481)

(assert (=> b!84118 (= e!54879 call!7924)))

(declare-fun bm!7921 () Bool)

(declare-fun call!7930 () ListLongMap!1481)

(declare-fun call!7925 () ListLongMap!1481)

(assert (=> bm!7921 (= call!7930 call!7925)))

(declare-fun b!84119 () Bool)

(declare-fun e!54883 () Bool)

(declare-fun lt!39610 () ListLongMap!1481)

(assert (=> b!84119 (= e!54883 (= (apply!81 lt!39610 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2211 (_2!1121 lt!38897))))))

(declare-fun b!84120 () Bool)

(declare-fun e!54874 () ListLongMap!1481)

(declare-fun call!7926 () ListLongMap!1481)

(assert (=> b!84120 (= e!54874 call!7926)))

(declare-fun b!84122 () Bool)

(declare-fun e!54875 () ListLongMap!1481)

(declare-fun call!7927 () ListLongMap!1481)

(assert (=> b!84122 (= e!54875 (+!114 call!7927 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (_2!1121 lt!38897)))))))

(declare-fun b!84123 () Bool)

(declare-fun res!43444 () Bool)

(declare-fun e!54882 () Bool)

(assert (=> b!84123 (=> (not res!43444) (not e!54882))))

(declare-fun e!54878 () Bool)

(assert (=> b!84123 (= res!43444 e!54878)))

(declare-fun c!13528 () Bool)

(assert (=> b!84123 (= c!13528 (not (= (bvand (extraKeys!2160 (_2!1121 lt!38897)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7922 () Bool)

(assert (=> bm!7922 (= call!7925 (getCurrentListMapNoExtraKeys!78 (_keys!3985 (_2!1121 lt!38897)) (_values!2300 (_2!1121 lt!38897)) (mask!6335 (_2!1121 lt!38897)) (extraKeys!2160 (_2!1121 lt!38897)) (zeroValue!2211 (_2!1121 lt!38897)) (minValue!2211 (_2!1121 lt!38897)) #b00000000000000000000000000000000 (defaultEntry!2317 (_2!1121 lt!38897))))))

(declare-fun bm!7923 () Bool)

(declare-fun c!13529 () Bool)

(declare-fun c!13527 () Bool)

(assert (=> bm!7923 (= call!7927 (+!114 (ite c!13527 call!7925 (ite c!13529 call!7930 call!7924)) (ite (or c!13527 c!13529) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (_2!1121 lt!38897))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (_2!1121 lt!38897))))))))

(declare-fun b!84124 () Bool)

(declare-fun e!54881 () Unit!2445)

(declare-fun Unit!2493 () Unit!2445)

(assert (=> b!84124 (= e!54881 Unit!2493)))

(declare-fun bm!7924 () Bool)

(declare-fun call!7928 () Bool)

(assert (=> bm!7924 (= call!7928 (contains!757 lt!39610 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84125 () Bool)

(declare-fun res!43441 () Bool)

(assert (=> b!84125 (=> (not res!43441) (not e!54882))))

(declare-fun e!54885 () Bool)

(assert (=> b!84125 (= res!43441 e!54885)))

(declare-fun res!43442 () Bool)

(assert (=> b!84125 (=> res!43442 e!54885)))

(declare-fun e!54880 () Bool)

(assert (=> b!84125 (= res!43442 (not e!54880))))

(declare-fun res!43439 () Bool)

(assert (=> b!84125 (=> (not res!43439) (not e!54880))))

(assert (=> b!84125 (= res!43439 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 (_2!1121 lt!38897)))))))

(declare-fun b!84126 () Bool)

(declare-fun e!54876 () Bool)

(assert (=> b!84126 (= e!54885 e!54876)))

(declare-fun res!43438 () Bool)

(assert (=> b!84126 (=> (not res!43438) (not e!54876))))

(assert (=> b!84126 (= res!43438 (contains!757 lt!39610 (select (arr!1912 (_keys!3985 (_2!1121 lt!38897))) #b00000000000000000000000000000000)))))

(assert (=> b!84126 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 (_2!1121 lt!38897)))))))

(declare-fun b!84127 () Bool)

(declare-fun e!54877 () Bool)

(assert (=> b!84127 (= e!54877 (not call!7928))))

(declare-fun b!84128 () Bool)

(declare-fun e!54884 () Bool)

(assert (=> b!84128 (= e!54878 e!54884)))

(declare-fun res!43437 () Bool)

(declare-fun call!7929 () Bool)

(assert (=> b!84128 (= res!43437 call!7929)))

(assert (=> b!84128 (=> (not res!43437) (not e!54884))))

(declare-fun b!84129 () Bool)

(declare-fun c!13526 () Bool)

(assert (=> b!84129 (= c!13526 (and (not (= (bvand (extraKeys!2160 (_2!1121 lt!38897)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2160 (_2!1121 lt!38897)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!84129 (= e!54874 e!54879)))

(declare-fun b!84130 () Bool)

(declare-fun lt!39605 () Unit!2445)

(assert (=> b!84130 (= e!54881 lt!39605)))

(declare-fun lt!39611 () ListLongMap!1481)

(assert (=> b!84130 (= lt!39611 (getCurrentListMapNoExtraKeys!78 (_keys!3985 (_2!1121 lt!38897)) (_values!2300 (_2!1121 lt!38897)) (mask!6335 (_2!1121 lt!38897)) (extraKeys!2160 (_2!1121 lt!38897)) (zeroValue!2211 (_2!1121 lt!38897)) (minValue!2211 (_2!1121 lt!38897)) #b00000000000000000000000000000000 (defaultEntry!2317 (_2!1121 lt!38897))))))

(declare-fun lt!39604 () (_ BitVec 64))

(assert (=> b!84130 (= lt!39604 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39608 () (_ BitVec 64))

(assert (=> b!84130 (= lt!39608 (select (arr!1912 (_keys!3985 (_2!1121 lt!38897))) #b00000000000000000000000000000000))))

(declare-fun lt!39613 () Unit!2445)

(assert (=> b!84130 (= lt!39613 (addStillContains!57 lt!39611 lt!39604 (zeroValue!2211 (_2!1121 lt!38897)) lt!39608))))

(assert (=> b!84130 (contains!757 (+!114 lt!39611 (tuple2!2221 lt!39604 (zeroValue!2211 (_2!1121 lt!38897)))) lt!39608)))

(declare-fun lt!39609 () Unit!2445)

(assert (=> b!84130 (= lt!39609 lt!39613)))

(declare-fun lt!39614 () ListLongMap!1481)

(assert (=> b!84130 (= lt!39614 (getCurrentListMapNoExtraKeys!78 (_keys!3985 (_2!1121 lt!38897)) (_values!2300 (_2!1121 lt!38897)) (mask!6335 (_2!1121 lt!38897)) (extraKeys!2160 (_2!1121 lt!38897)) (zeroValue!2211 (_2!1121 lt!38897)) (minValue!2211 (_2!1121 lt!38897)) #b00000000000000000000000000000000 (defaultEntry!2317 (_2!1121 lt!38897))))))

(declare-fun lt!39606 () (_ BitVec 64))

(assert (=> b!84130 (= lt!39606 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39620 () (_ BitVec 64))

(assert (=> b!84130 (= lt!39620 (select (arr!1912 (_keys!3985 (_2!1121 lt!38897))) #b00000000000000000000000000000000))))

(declare-fun lt!39618 () Unit!2445)

(assert (=> b!84130 (= lt!39618 (addApplyDifferent!57 lt!39614 lt!39606 (minValue!2211 (_2!1121 lt!38897)) lt!39620))))

(assert (=> b!84130 (= (apply!81 (+!114 lt!39614 (tuple2!2221 lt!39606 (minValue!2211 (_2!1121 lt!38897)))) lt!39620) (apply!81 lt!39614 lt!39620))))

(declare-fun lt!39612 () Unit!2445)

(assert (=> b!84130 (= lt!39612 lt!39618)))

(declare-fun lt!39607 () ListLongMap!1481)

(assert (=> b!84130 (= lt!39607 (getCurrentListMapNoExtraKeys!78 (_keys!3985 (_2!1121 lt!38897)) (_values!2300 (_2!1121 lt!38897)) (mask!6335 (_2!1121 lt!38897)) (extraKeys!2160 (_2!1121 lt!38897)) (zeroValue!2211 (_2!1121 lt!38897)) (minValue!2211 (_2!1121 lt!38897)) #b00000000000000000000000000000000 (defaultEntry!2317 (_2!1121 lt!38897))))))

(declare-fun lt!39616 () (_ BitVec 64))

(assert (=> b!84130 (= lt!39616 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39600 () (_ BitVec 64))

(assert (=> b!84130 (= lt!39600 (select (arr!1912 (_keys!3985 (_2!1121 lt!38897))) #b00000000000000000000000000000000))))

(declare-fun lt!39615 () Unit!2445)

(assert (=> b!84130 (= lt!39615 (addApplyDifferent!57 lt!39607 lt!39616 (zeroValue!2211 (_2!1121 lt!38897)) lt!39600))))

(assert (=> b!84130 (= (apply!81 (+!114 lt!39607 (tuple2!2221 lt!39616 (zeroValue!2211 (_2!1121 lt!38897)))) lt!39600) (apply!81 lt!39607 lt!39600))))

(declare-fun lt!39601 () Unit!2445)

(assert (=> b!84130 (= lt!39601 lt!39615)))

(declare-fun lt!39603 () ListLongMap!1481)

(assert (=> b!84130 (= lt!39603 (getCurrentListMapNoExtraKeys!78 (_keys!3985 (_2!1121 lt!38897)) (_values!2300 (_2!1121 lt!38897)) (mask!6335 (_2!1121 lt!38897)) (extraKeys!2160 (_2!1121 lt!38897)) (zeroValue!2211 (_2!1121 lt!38897)) (minValue!2211 (_2!1121 lt!38897)) #b00000000000000000000000000000000 (defaultEntry!2317 (_2!1121 lt!38897))))))

(declare-fun lt!39617 () (_ BitVec 64))

(assert (=> b!84130 (= lt!39617 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39602 () (_ BitVec 64))

(assert (=> b!84130 (= lt!39602 (select (arr!1912 (_keys!3985 (_2!1121 lt!38897))) #b00000000000000000000000000000000))))

(assert (=> b!84130 (= lt!39605 (addApplyDifferent!57 lt!39603 lt!39617 (minValue!2211 (_2!1121 lt!38897)) lt!39602))))

(assert (=> b!84130 (= (apply!81 (+!114 lt!39603 (tuple2!2221 lt!39617 (minValue!2211 (_2!1121 lt!38897)))) lt!39602) (apply!81 lt!39603 lt!39602))))

(declare-fun b!84131 () Bool)

(assert (=> b!84131 (= e!54876 (= (apply!81 lt!39610 (select (arr!1912 (_keys!3985 (_2!1121 lt!38897))) #b00000000000000000000000000000000)) (get!1206 (select (arr!1913 (_values!2300 (_2!1121 lt!38897))) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 (_2!1121 lt!38897)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!84131 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2156 (_values!2300 (_2!1121 lt!38897)))))))

(assert (=> b!84131 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 (_2!1121 lt!38897)))))))

(declare-fun b!84121 () Bool)

(assert (=> b!84121 (= e!54879 call!7926)))

(declare-fun d!21357 () Bool)

(assert (=> d!21357 e!54882))

(declare-fun res!43440 () Bool)

(assert (=> d!21357 (=> (not res!43440) (not e!54882))))

(assert (=> d!21357 (= res!43440 (or (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 (_2!1121 lt!38897)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 (_2!1121 lt!38897)))))))))

(declare-fun lt!39619 () ListLongMap!1481)

(assert (=> d!21357 (= lt!39610 lt!39619)))

(declare-fun lt!39599 () Unit!2445)

(assert (=> d!21357 (= lt!39599 e!54881)))

(declare-fun c!13525 () Bool)

(declare-fun e!54886 () Bool)

(assert (=> d!21357 (= c!13525 e!54886)))

(declare-fun res!43436 () Bool)

(assert (=> d!21357 (=> (not res!43436) (not e!54886))))

(assert (=> d!21357 (= res!43436 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 (_2!1121 lt!38897)))))))

(assert (=> d!21357 (= lt!39619 e!54875)))

(assert (=> d!21357 (= c!13527 (and (not (= (bvand (extraKeys!2160 (_2!1121 lt!38897)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2160 (_2!1121 lt!38897)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21357 (validMask!0 (mask!6335 (_2!1121 lt!38897)))))

(assert (=> d!21357 (= (getCurrentListMap!440 (_keys!3985 (_2!1121 lt!38897)) (_values!2300 (_2!1121 lt!38897)) (mask!6335 (_2!1121 lt!38897)) (extraKeys!2160 (_2!1121 lt!38897)) (zeroValue!2211 (_2!1121 lt!38897)) (minValue!2211 (_2!1121 lt!38897)) #b00000000000000000000000000000000 (defaultEntry!2317 (_2!1121 lt!38897))) lt!39610)))

(declare-fun bm!7925 () Bool)

(assert (=> bm!7925 (= call!7929 (contains!757 lt!39610 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84132 () Bool)

(assert (=> b!84132 (= e!54878 (not call!7929))))

(declare-fun bm!7926 () Bool)

(assert (=> bm!7926 (= call!7924 call!7930)))

(declare-fun b!84133 () Bool)

(assert (=> b!84133 (= e!54886 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (_2!1121 lt!38897))) #b00000000000000000000000000000000)))))

(declare-fun b!84134 () Bool)

(assert (=> b!84134 (= e!54882 e!54877)))

(declare-fun c!13524 () Bool)

(assert (=> b!84134 (= c!13524 (not (= (bvand (extraKeys!2160 (_2!1121 lt!38897)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7927 () Bool)

(assert (=> bm!7927 (= call!7926 call!7927)))

(declare-fun b!84135 () Bool)

(assert (=> b!84135 (= e!54884 (= (apply!81 lt!39610 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2211 (_2!1121 lt!38897))))))

(declare-fun b!84136 () Bool)

(assert (=> b!84136 (= e!54880 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (_2!1121 lt!38897))) #b00000000000000000000000000000000)))))

(declare-fun b!84137 () Bool)

(assert (=> b!84137 (= e!54875 e!54874)))

(assert (=> b!84137 (= c!13529 (and (not (= (bvand (extraKeys!2160 (_2!1121 lt!38897)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2160 (_2!1121 lt!38897)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!84138 () Bool)

(assert (=> b!84138 (= e!54877 e!54883)))

(declare-fun res!43443 () Bool)

(assert (=> b!84138 (= res!43443 call!7928)))

(assert (=> b!84138 (=> (not res!43443) (not e!54883))))

(assert (= (and d!21357 c!13527) b!84122))

(assert (= (and d!21357 (not c!13527)) b!84137))

(assert (= (and b!84137 c!13529) b!84120))

(assert (= (and b!84137 (not c!13529)) b!84129))

(assert (= (and b!84129 c!13526) b!84121))

(assert (= (and b!84129 (not c!13526)) b!84118))

(assert (= (or b!84121 b!84118) bm!7926))

(assert (= (or b!84120 bm!7926) bm!7921))

(assert (= (or b!84120 b!84121) bm!7927))

(assert (= (or b!84122 bm!7921) bm!7922))

(assert (= (or b!84122 bm!7927) bm!7923))

(assert (= (and d!21357 res!43436) b!84133))

(assert (= (and d!21357 c!13525) b!84130))

(assert (= (and d!21357 (not c!13525)) b!84124))

(assert (= (and d!21357 res!43440) b!84125))

(assert (= (and b!84125 res!43439) b!84136))

(assert (= (and b!84125 (not res!43442)) b!84126))

(assert (= (and b!84126 res!43438) b!84131))

(assert (= (and b!84125 res!43441) b!84123))

(assert (= (and b!84123 c!13528) b!84128))

(assert (= (and b!84123 (not c!13528)) b!84132))

(assert (= (and b!84128 res!43437) b!84135))

(assert (= (or b!84128 b!84132) bm!7925))

(assert (= (and b!84123 res!43444) b!84134))

(assert (= (and b!84134 c!13524) b!84138))

(assert (= (and b!84134 (not c!13524)) b!84127))

(assert (= (and b!84138 res!43443) b!84119))

(assert (= (or b!84138 b!84127) bm!7924))

(declare-fun b_lambda!3743 () Bool)

(assert (=> (not b_lambda!3743) (not b!84131)))

(declare-fun tb!1685 () Bool)

(declare-fun t!5263 () Bool)

(assert (=> (and b!82830 (= (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) (defaultEntry!2317 (_2!1121 lt!38897))) t!5263) tb!1685))

(declare-fun result!2907 () Bool)

(assert (=> tb!1685 (= result!2907 tp_is_empty!2529)))

(assert (=> b!84131 t!5263))

(declare-fun b_and!5109 () Bool)

(assert (= b_and!5105 (and (=> t!5263 result!2907) b_and!5109)))

(declare-fun t!5265 () Bool)

(declare-fun tb!1687 () Bool)

(assert (=> (and b!82846 (= (defaultEntry!2317 newMap!16) (defaultEntry!2317 (_2!1121 lt!38897))) t!5265) tb!1687))

(declare-fun result!2909 () Bool)

(assert (= result!2909 result!2907))

(assert (=> b!84131 t!5265))

(declare-fun b_and!5111 () Bool)

(assert (= b_and!5107 (and (=> t!5265 result!2909) b_and!5111)))

(declare-fun m!87531 () Bool)

(assert (=> bm!7922 m!87531))

(declare-fun m!87533 () Bool)

(assert (=> bm!7925 m!87533))

(declare-fun m!87535 () Bool)

(assert (=> bm!7923 m!87535))

(declare-fun m!87537 () Bool)

(assert (=> b!84136 m!87537))

(assert (=> b!84136 m!87537))

(declare-fun m!87539 () Bool)

(assert (=> b!84136 m!87539))

(declare-fun m!87541 () Bool)

(assert (=> bm!7924 m!87541))

(assert (=> b!84133 m!87537))

(assert (=> b!84133 m!87537))

(assert (=> b!84133 m!87539))

(assert (=> b!84126 m!87537))

(assert (=> b!84126 m!87537))

(declare-fun m!87543 () Bool)

(assert (=> b!84126 m!87543))

(declare-fun m!87545 () Bool)

(assert (=> d!21357 m!87545))

(declare-fun m!87547 () Bool)

(assert (=> b!84119 m!87547))

(declare-fun m!87549 () Bool)

(assert (=> b!84130 m!87549))

(declare-fun m!87551 () Bool)

(assert (=> b!84130 m!87551))

(declare-fun m!87553 () Bool)

(assert (=> b!84130 m!87553))

(declare-fun m!87555 () Bool)

(assert (=> b!84130 m!87555))

(declare-fun m!87557 () Bool)

(assert (=> b!84130 m!87557))

(declare-fun m!87559 () Bool)

(assert (=> b!84130 m!87559))

(declare-fun m!87561 () Bool)

(assert (=> b!84130 m!87561))

(assert (=> b!84130 m!87551))

(declare-fun m!87563 () Bool)

(assert (=> b!84130 m!87563))

(declare-fun m!87565 () Bool)

(assert (=> b!84130 m!87565))

(assert (=> b!84130 m!87557))

(declare-fun m!87567 () Bool)

(assert (=> b!84130 m!87567))

(assert (=> b!84130 m!87553))

(assert (=> b!84130 m!87537))

(declare-fun m!87569 () Bool)

(assert (=> b!84130 m!87569))

(declare-fun m!87571 () Bool)

(assert (=> b!84130 m!87571))

(declare-fun m!87573 () Bool)

(assert (=> b!84130 m!87573))

(assert (=> b!84130 m!87531))

(declare-fun m!87575 () Bool)

(assert (=> b!84130 m!87575))

(assert (=> b!84130 m!87567))

(declare-fun m!87577 () Bool)

(assert (=> b!84130 m!87577))

(declare-fun m!87579 () Bool)

(assert (=> b!84131 m!87579))

(declare-fun m!87581 () Bool)

(assert (=> b!84131 m!87581))

(assert (=> b!84131 m!87537))

(declare-fun m!87583 () Bool)

(assert (=> b!84131 m!87583))

(assert (=> b!84131 m!87537))

(assert (=> b!84131 m!87581))

(assert (=> b!84131 m!87579))

(declare-fun m!87585 () Bool)

(assert (=> b!84131 m!87585))

(declare-fun m!87587 () Bool)

(assert (=> b!84122 m!87587))

(declare-fun m!87589 () Bool)

(assert (=> b!84135 m!87589))

(assert (=> d!21149 d!21357))

(declare-fun d!21359 () Bool)

(assert (=> d!21359 (= (apply!81 lt!39280 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) (get!1209 (getValueByKey!138 (toList!756 lt!39280) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3539 () Bool)

(assert (= bs!3539 d!21359))

(assert (=> bs!3539 m!86049))

(declare-fun m!87591 () Bool)

(assert (=> bs!3539 m!87591))

(assert (=> bs!3539 m!87591))

(declare-fun m!87593 () Bool)

(assert (=> bs!3539 m!87593))

(assert (=> b!83510 d!21359))

(declare-fun c!13530 () Bool)

(declare-fun d!21361 () Bool)

(assert (=> d!21361 (= c!13530 ((_ is ValueCellFull!921) (select (arr!1913 (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!54887 () V!3019)

(assert (=> d!21361 (= (get!1206 (select (arr!1913 (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!54887)))

(declare-fun b!84139 () Bool)

(assert (=> b!84139 (= e!54887 (get!1207 (select (arr!1913 (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84140 () Bool)

(assert (=> b!84140 (= e!54887 (get!1208 (select (arr!1913 (ite c!13216 (_values!2300 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21361 c!13530) b!84139))

(assert (= (and d!21361 (not c!13530)) b!84140))

(assert (=> b!84139 m!86499))

(assert (=> b!84139 m!86089))

(declare-fun m!87595 () Bool)

(assert (=> b!84139 m!87595))

(assert (=> b!84140 m!86499))

(assert (=> b!84140 m!86089))

(declare-fun m!87597 () Bool)

(assert (=> b!84140 m!87597))

(assert (=> b!83510 d!21361))

(assert (=> b!83406 d!20991))

(declare-fun d!21363 () Bool)

(assert (=> d!21363 (= ($colon$colon!70 e!54640 (ite c!13405 (h!2133 (toList!756 lt!38755)) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760)))) (Cons!1543 (ite c!13405 (h!2133 (toList!756 lt!38755)) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))) e!54640))))

(assert (=> bm!7873 d!21363))

(assert (=> d!21055 d!20869))

(assert (=> d!21139 d!21137))

(declare-fun d!21365 () Bool)

(assert (=> d!21365 (= (getValueByKey!138 lt!39034 (_1!1120 lt!38760)) (Some!143 (_2!1120 lt!38760)))))

(assert (=> d!21365 true))

(declare-fun _$22!410 () Unit!2445)

(assert (=> d!21365 (= (choose!495 lt!39034 (_1!1120 lt!38760) (_2!1120 lt!38760)) _$22!410)))

(declare-fun bs!3540 () Bool)

(assert (= bs!3540 d!21365))

(assert (=> bs!3540 m!85935))

(assert (=> d!21139 d!21365))

(declare-fun d!21367 () Bool)

(declare-fun res!43445 () Bool)

(declare-fun e!54888 () Bool)

(assert (=> d!21367 (=> res!43445 e!54888)))

(assert (=> d!21367 (= res!43445 (or ((_ is Nil!1544) lt!39034) ((_ is Nil!1544) (t!5251 lt!39034))))))

(assert (=> d!21367 (= (isStrictlySorted!292 lt!39034) e!54888)))

(declare-fun b!84141 () Bool)

(declare-fun e!54889 () Bool)

(assert (=> b!84141 (= e!54888 e!54889)))

(declare-fun res!43446 () Bool)

(assert (=> b!84141 (=> (not res!43446) (not e!54889))))

(assert (=> b!84141 (= res!43446 (bvslt (_1!1120 (h!2133 lt!39034)) (_1!1120 (h!2133 (t!5251 lt!39034)))))))

(declare-fun b!84142 () Bool)

(assert (=> b!84142 (= e!54889 (isStrictlySorted!292 (t!5251 lt!39034)))))

(assert (= (and d!21367 (not res!43445)) b!84141))

(assert (= (and b!84141 res!43446) b!84142))

(declare-fun m!87599 () Bool)

(assert (=> b!84142 m!87599))

(assert (=> d!21139 d!21367))

(declare-fun d!21369 () Bool)

(declare-fun lt!39621 () Bool)

(assert (=> d!21369 (= lt!39621 (select (content!87 (toList!756 lt!39049)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(declare-fun e!54890 () Bool)

(assert (=> d!21369 (= lt!39621 e!54890)))

(declare-fun res!43447 () Bool)

(assert (=> d!21369 (=> (not res!43447) (not e!54890))))

(assert (=> d!21369 (= res!43447 ((_ is Cons!1543) (toList!756 lt!39049)))))

(assert (=> d!21369 (= (contains!760 (toList!756 lt!39049) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) lt!39621)))

(declare-fun b!84143 () Bool)

(declare-fun e!54891 () Bool)

(assert (=> b!84143 (= e!54890 e!54891)))

(declare-fun res!43448 () Bool)

(assert (=> b!84143 (=> res!43448 e!54891)))

(assert (=> b!84143 (= res!43448 (= (h!2133 (toList!756 lt!39049)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(declare-fun b!84144 () Bool)

(assert (=> b!84144 (= e!54891 (contains!760 (t!5251 (toList!756 lt!39049)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(assert (= (and d!21369 res!43447) b!84143))

(assert (= (and b!84143 (not res!43448)) b!84144))

(declare-fun m!87601 () Bool)

(assert (=> d!21369 m!87601))

(declare-fun m!87603 () Bool)

(assert (=> d!21369 m!87603))

(declare-fun m!87605 () Bool)

(assert (=> b!84144 m!87605))

(assert (=> b!83212 d!21369))

(declare-fun d!21371 () Bool)

(declare-fun res!43449 () Bool)

(declare-fun e!54892 () Bool)

(assert (=> d!21371 (=> res!43449 e!54892)))

(assert (=> d!21371 (= res!43449 (and ((_ is Cons!1543) (toList!756 lt!38974)) (= (_1!1120 (h!2133 (toList!756 lt!38974))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!21371 (= (containsKey!142 (toList!756 lt!38974) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!54892)))

(declare-fun b!84145 () Bool)

(declare-fun e!54893 () Bool)

(assert (=> b!84145 (= e!54892 e!54893)))

(declare-fun res!43450 () Bool)

(assert (=> b!84145 (=> (not res!43450) (not e!54893))))

(assert (=> b!84145 (= res!43450 (and (or (not ((_ is Cons!1543) (toList!756 lt!38974))) (bvsle (_1!1120 (h!2133 (toList!756 lt!38974))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1543) (toList!756 lt!38974)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38974))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!84146 () Bool)

(assert (=> b!84146 (= e!54893 (containsKey!142 (t!5251 (toList!756 lt!38974)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!21371 (not res!43449)) b!84145))

(assert (= (and b!84145 res!43450) b!84146))

(assert (=> b!84146 m!85781))

(declare-fun m!87607 () Bool)

(assert (=> b!84146 m!87607))

(assert (=> d!21051 d!21371))

(declare-fun d!21373 () Bool)

(assert (=> d!21373 (isDefined!92 (getValueByKey!138 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38972))))

(declare-fun lt!39622 () Unit!2445)

(assert (=> d!21373 (= lt!39622 (choose!496 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38972))))

(declare-fun e!54894 () Bool)

(assert (=> d!21373 e!54894))

(declare-fun res!43451 () Bool)

(assert (=> d!21373 (=> (not res!43451) (not e!54894))))

(assert (=> d!21373 (= res!43451 (isStrictlySorted!292 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21373 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38972) lt!39622)))

(declare-fun b!84147 () Bool)

(assert (=> b!84147 (= e!54894 (containsKey!142 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38972))))

(assert (= (and d!21373 res!43451) b!84147))

(assert (=> d!21373 m!86413))

(assert (=> d!21373 m!86413))

(assert (=> d!21373 m!86415))

(declare-fun m!87609 () Bool)

(assert (=> d!21373 m!87609))

(declare-fun m!87611 () Bool)

(assert (=> d!21373 m!87611))

(assert (=> b!84147 m!86409))

(assert (=> b!83487 d!21373))

(declare-fun d!21375 () Bool)

(assert (=> d!21375 (= (isDefined!92 (getValueByKey!138 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38972)) (not (isEmpty!338 (getValueByKey!138 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38972))))))

(declare-fun bs!3541 () Bool)

(assert (= bs!3541 d!21375))

(assert (=> bs!3541 m!86413))

(declare-fun m!87613 () Bool)

(assert (=> bs!3541 m!87613))

(assert (=> b!83487 d!21375))

(declare-fun b!84149 () Bool)

(declare-fun e!54895 () Option!144)

(declare-fun e!54896 () Option!144)

(assert (=> b!84149 (= e!54895 e!54896)))

(declare-fun c!13532 () Bool)

(assert (=> b!84149 (= c!13532 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))) (not (= (_1!1120 (h!2133 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))) lt!38972))))))

(declare-fun b!84148 () Bool)

(assert (=> b!84148 (= e!54895 (Some!143 (_2!1120 (h!2133 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))))

(declare-fun b!84151 () Bool)

(assert (=> b!84151 (= e!54896 None!142)))

(declare-fun d!21377 () Bool)

(declare-fun c!13531 () Bool)

(assert (=> d!21377 (= c!13531 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))) (= (_1!1120 (h!2133 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))) lt!38972)))))

(assert (=> d!21377 (= (getValueByKey!138 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38972) e!54895)))

(declare-fun b!84150 () Bool)

(assert (=> b!84150 (= e!54896 (getValueByKey!138 (t!5251 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))) lt!38972))))

(assert (= (and d!21377 c!13531) b!84148))

(assert (= (and d!21377 (not c!13531)) b!84149))

(assert (= (and b!84149 c!13532) b!84150))

(assert (= (and b!84149 (not c!13532)) b!84151))

(declare-fun m!87615 () Bool)

(assert (=> b!84150 m!87615))

(assert (=> b!83487 d!21377))

(assert (=> d!21071 d!21037))

(declare-fun d!21379 () Bool)

(declare-fun e!54899 () Bool)

(assert (=> d!21379 e!54899))

(declare-fun res!43456 () Bool)

(assert (=> d!21379 (=> (not res!43456) (not e!54899))))

(declare-fun lt!39625 () SeekEntryResult!252)

(assert (=> d!21379 (= res!43456 ((_ is Found!252) lt!39625))))

(assert (=> d!21379 (= lt!39625 (seekEntryOrOpen!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (_keys!3985 newMap!16) (mask!6335 newMap!16)))))

(assert (=> d!21379 true))

(declare-fun _$33!69 () Unit!2445)

(assert (=> d!21379 (= (choose!500 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (defaultEntry!2317 newMap!16)) _$33!69)))

(declare-fun b!84156 () Bool)

(declare-fun res!43457 () Bool)

(assert (=> b!84156 (=> (not res!43457) (not e!54899))))

(assert (=> b!84156 (= res!43457 (inRange!0 (index!3145 lt!39625) (mask!6335 newMap!16)))))

(declare-fun b!84157 () Bool)

(assert (=> b!84157 (= e!54899 (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!39625)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (= (and d!21379 res!43456) b!84156))

(assert (= (and b!84156 res!43457) b!84157))

(assert (=> d!21379 m!85591))

(assert (=> d!21379 m!85741))

(declare-fun m!87617 () Bool)

(assert (=> b!84156 m!87617))

(declare-fun m!87619 () Bool)

(assert (=> b!84157 m!87619))

(assert (=> d!21071 d!21379))

(assert (=> d!21071 d!21219))

(declare-fun d!21381 () Bool)

(declare-fun lt!39626 () Bool)

(assert (=> d!21381 (= lt!39626 (select (content!87 lt!39038) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))))))

(declare-fun e!54900 () Bool)

(assert (=> d!21381 (= lt!39626 e!54900)))

(declare-fun res!43458 () Bool)

(assert (=> d!21381 (=> (not res!43458) (not e!54900))))

(assert (=> d!21381 (= res!43458 ((_ is Cons!1543) lt!39038))))

(assert (=> d!21381 (= (contains!760 lt!39038 (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))) lt!39626)))

(declare-fun b!84158 () Bool)

(declare-fun e!54901 () Bool)

(assert (=> b!84158 (= e!54900 e!54901)))

(declare-fun res!43459 () Bool)

(assert (=> b!84158 (=> res!43459 e!54901)))

(assert (=> b!84158 (= res!43459 (= (h!2133 lt!39038) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))))))

(declare-fun b!84159 () Bool)

(assert (=> b!84159 (= e!54901 (contains!760 (t!5251 lt!39038) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))))))

(assert (= (and d!21381 res!43458) b!84158))

(assert (= (and b!84158 (not res!43459)) b!84159))

(declare-fun m!87621 () Bool)

(assert (=> d!21381 m!87621))

(declare-fun m!87623 () Bool)

(assert (=> d!21381 m!87623))

(declare-fun m!87625 () Bool)

(assert (=> b!84159 m!87625))

(assert (=> b!83441 d!21381))

(declare-fun d!21383 () Bool)

(declare-fun e!54902 () Bool)

(assert (=> d!21383 e!54902))

(declare-fun res!43460 () Bool)

(assert (=> d!21383 (=> res!43460 e!54902)))

(declare-fun lt!39627 () Bool)

(assert (=> d!21383 (= res!43460 (not lt!39627))))

(declare-fun lt!39629 () Bool)

(assert (=> d!21383 (= lt!39627 lt!39629)))

(declare-fun lt!39630 () Unit!2445)

(declare-fun e!54903 () Unit!2445)

(assert (=> d!21383 (= lt!39630 e!54903)))

(declare-fun c!13533 () Bool)

(assert (=> d!21383 (= c!13533 lt!39629)))

(assert (=> d!21383 (= lt!39629 (containsKey!142 (toList!756 lt!39408) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21383 (= (contains!757 lt!39408 #b1000000000000000000000000000000000000000000000000000000000000000) lt!39627)))

(declare-fun b!84160 () Bool)

(declare-fun lt!39628 () Unit!2445)

(assert (=> b!84160 (= e!54903 lt!39628)))

(assert (=> b!84160 (= lt!39628 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39408) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84160 (isDefined!92 (getValueByKey!138 (toList!756 lt!39408) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84161 () Bool)

(declare-fun Unit!2494 () Unit!2445)

(assert (=> b!84161 (= e!54903 Unit!2494)))

(declare-fun b!84162 () Bool)

(assert (=> b!84162 (= e!54902 (isDefined!92 (getValueByKey!138 (toList!756 lt!39408) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21383 c!13533) b!84160))

(assert (= (and d!21383 (not c!13533)) b!84161))

(assert (= (and d!21383 (not res!43460)) b!84162))

(declare-fun m!87627 () Bool)

(assert (=> d!21383 m!87627))

(declare-fun m!87629 () Bool)

(assert (=> b!84160 m!87629))

(declare-fun m!87631 () Bool)

(assert (=> b!84160 m!87631))

(assert (=> b!84160 m!87631))

(declare-fun m!87633 () Bool)

(assert (=> b!84160 m!87633))

(assert (=> b!84162 m!87631))

(assert (=> b!84162 m!87631))

(assert (=> b!84162 m!87633))

(assert (=> b!83667 d!21383))

(declare-fun lt!39631 () Bool)

(declare-fun d!21385 () Bool)

(assert (=> d!21385 (= lt!39631 (select (content!87 (toList!756 lt!39404)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(declare-fun e!54904 () Bool)

(assert (=> d!21385 (= lt!39631 e!54904)))

(declare-fun res!43461 () Bool)

(assert (=> d!21385 (=> (not res!43461) (not e!54904))))

(assert (=> d!21385 (= res!43461 ((_ is Cons!1543) (toList!756 lt!39404)))))

(assert (=> d!21385 (= (contains!760 (toList!756 lt!39404) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) lt!39631)))

(declare-fun b!84163 () Bool)

(declare-fun e!54905 () Bool)

(assert (=> b!84163 (= e!54904 e!54905)))

(declare-fun res!43462 () Bool)

(assert (=> b!84163 (=> res!43462 e!54905)))

(assert (=> b!84163 (= res!43462 (= (h!2133 (toList!756 lt!39404)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(declare-fun b!84164 () Bool)

(assert (=> b!84164 (= e!54905 (contains!760 (t!5251 (toList!756 lt!39404)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(assert (= (and d!21385 res!43461) b!84163))

(assert (= (and b!84163 (not res!43462)) b!84164))

(declare-fun m!87635 () Bool)

(assert (=> d!21385 m!87635))

(declare-fun m!87637 () Bool)

(assert (=> d!21385 m!87637))

(declare-fun m!87639 () Bool)

(assert (=> b!84164 m!87639))

(assert (=> b!83662 d!21385))

(assert (=> d!20999 d!20997))

(assert (=> d!20999 d!21017))

(declare-fun d!21387 () Bool)

(declare-fun e!54906 () Bool)

(assert (=> d!21387 e!54906))

(declare-fun res!43463 () Bool)

(assert (=> d!21387 (=> res!43463 e!54906)))

(declare-fun lt!39632 () Bool)

(assert (=> d!21387 (= res!43463 (not lt!39632))))

(declare-fun lt!39634 () Bool)

(assert (=> d!21387 (= lt!39632 lt!39634)))

(declare-fun lt!39635 () Unit!2445)

(declare-fun e!54907 () Unit!2445)

(assert (=> d!21387 (= lt!39635 e!54907)))

(declare-fun c!13534 () Bool)

(assert (=> d!21387 (= c!13534 lt!39634)))

(assert (=> d!21387 (= lt!39634 (containsKey!142 (toList!756 lt!38978) lt!38984))))

(assert (=> d!21387 (= (contains!757 lt!38978 lt!38984) lt!39632)))

(declare-fun b!84165 () Bool)

(declare-fun lt!39633 () Unit!2445)

(assert (=> b!84165 (= e!54907 lt!39633)))

(assert (=> b!84165 (= lt!39633 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!38978) lt!38984))))

(assert (=> b!84165 (isDefined!92 (getValueByKey!138 (toList!756 lt!38978) lt!38984))))

(declare-fun b!84166 () Bool)

(declare-fun Unit!2495 () Unit!2445)

(assert (=> b!84166 (= e!54907 Unit!2495)))

(declare-fun b!84167 () Bool)

(assert (=> b!84167 (= e!54906 (isDefined!92 (getValueByKey!138 (toList!756 lt!38978) lt!38984)))))

(assert (= (and d!21387 c!13534) b!84165))

(assert (= (and d!21387 (not c!13534)) b!84166))

(assert (= (and d!21387 (not res!43463)) b!84167))

(declare-fun m!87641 () Bool)

(assert (=> d!21387 m!87641))

(declare-fun m!87643 () Bool)

(assert (=> b!84165 m!87643))

(assert (=> b!84165 m!86389))

(assert (=> b!84165 m!86389))

(declare-fun m!87645 () Bool)

(assert (=> b!84165 m!87645))

(assert (=> b!84167 m!86389))

(assert (=> b!84167 m!86389))

(assert (=> b!84167 m!87645))

(assert (=> d!20999 d!21387))

(assert (=> d!20999 d!21005))

(declare-fun d!21389 () Bool)

(assert (=> d!21389 (= (apply!81 (+!114 lt!38978 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!38984) (apply!81 lt!38978 lt!38984))))

(assert (=> d!21389 true))

(declare-fun _$34!834 () Unit!2445)

(assert (=> d!21389 (= (choose!497 lt!38978 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))) lt!38984) _$34!834)))

(declare-fun bs!3542 () Bool)

(assert (= bs!3542 d!21389))

(assert (=> bs!3542 m!85813))

(assert (=> bs!3542 m!85813))

(assert (=> bs!3542 m!85815))

(assert (=> bs!3542 m!85831))

(assert (=> d!20999 d!21389))

(declare-fun b!84170 () Bool)

(declare-fun e!54908 () Option!144)

(declare-fun e!54909 () Option!144)

(assert (=> b!84170 (= e!54908 e!54909)))

(declare-fun c!13536 () Bool)

(assert (=> b!84170 (= c!13536 (and ((_ is Cons!1543) (toList!756 lt!39333)) (not (= (_1!1120 (h!2133 (toList!756 lt!39333))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(declare-fun b!84169 () Bool)

(assert (=> b!84169 (= e!54908 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39333)))))))

(declare-fun b!84172 () Bool)

(assert (=> b!84172 (= e!54909 None!142)))

(declare-fun c!13535 () Bool)

(declare-fun d!21391 () Bool)

(assert (=> d!21391 (= c!13535 (and ((_ is Cons!1543) (toList!756 lt!39333)) (= (_1!1120 (h!2133 (toList!756 lt!39333))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21391 (= (getValueByKey!138 (toList!756 lt!39333) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) e!54908)))

(declare-fun b!84171 () Bool)

(assert (=> b!84171 (= e!54909 (getValueByKey!138 (t!5251 (toList!756 lt!39333)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (= (and d!21391 c!13535) b!84169))

(assert (= (and d!21391 (not c!13535)) b!84170))

(assert (= (and b!84170 c!13536) b!84171))

(assert (= (and b!84170 (not c!13536)) b!84172))

(declare-fun m!87647 () Bool)

(assert (=> b!84171 m!87647))

(assert (=> b!83582 d!21391))

(declare-fun d!21393 () Bool)

(declare-fun res!43464 () Bool)

(declare-fun e!54910 () Bool)

(assert (=> d!21393 (=> res!43464 e!54910)))

(assert (=> d!21393 (= res!43464 (or ((_ is Nil!1544) lt!39217) ((_ is Nil!1544) (t!5251 lt!39217))))))

(assert (=> d!21393 (= (isStrictlySorted!292 lt!39217) e!54910)))

(declare-fun b!84173 () Bool)

(declare-fun e!54911 () Bool)

(assert (=> b!84173 (= e!54910 e!54911)))

(declare-fun res!43465 () Bool)

(assert (=> b!84173 (=> (not res!43465) (not e!54911))))

(assert (=> b!84173 (= res!43465 (bvslt (_1!1120 (h!2133 lt!39217)) (_1!1120 (h!2133 (t!5251 lt!39217)))))))

(declare-fun b!84174 () Bool)

(assert (=> b!84174 (= e!54911 (isStrictlySorted!292 (t!5251 lt!39217)))))

(assert (= (and d!21393 (not res!43464)) b!84173))

(assert (= (and b!84173 res!43465) b!84174))

(declare-fun m!87649 () Bool)

(assert (=> b!84174 m!87649))

(assert (=> d!20955 d!21393))

(declare-fun d!21395 () Bool)

(declare-fun res!43466 () Bool)

(declare-fun e!54912 () Bool)

(assert (=> d!21395 (=> res!43466 e!54912)))

(assert (=> d!21395 (= res!43466 (or ((_ is Nil!1544) (toList!756 lt!38749)) ((_ is Nil!1544) (t!5251 (toList!756 lt!38749)))))))

(assert (=> d!21395 (= (isStrictlySorted!292 (toList!756 lt!38749)) e!54912)))

(declare-fun b!84175 () Bool)

(declare-fun e!54913 () Bool)

(assert (=> b!84175 (= e!54912 e!54913)))

(declare-fun res!43467 () Bool)

(assert (=> b!84175 (=> (not res!43467) (not e!54913))))

(assert (=> b!84175 (= res!43467 (bvslt (_1!1120 (h!2133 (toList!756 lt!38749))) (_1!1120 (h!2133 (t!5251 (toList!756 lt!38749))))))))

(declare-fun b!84176 () Bool)

(assert (=> b!84176 (= e!54913 (isStrictlySorted!292 (t!5251 (toList!756 lt!38749))))))

(assert (= (and d!21395 (not res!43466)) b!84175))

(assert (= (and b!84175 res!43467) b!84176))

(declare-fun m!87651 () Bool)

(assert (=> b!84176 m!87651))

(assert (=> d!20955 d!21395))

(declare-fun b!84178 () Bool)

(declare-fun e!54914 () Option!144)

(declare-fun e!54915 () Option!144)

(assert (=> b!84178 (= e!54914 e!54915)))

(declare-fun c!13538 () Bool)

(assert (=> b!84178 (= c!13538 (and ((_ is Cons!1543) (t!5251 lt!39026)) (not (= (_1!1120 (h!2133 (t!5251 lt!39026))) (_1!1120 lt!38750)))))))

(declare-fun b!84177 () Bool)

(assert (=> b!84177 (= e!54914 (Some!143 (_2!1120 (h!2133 (t!5251 lt!39026)))))))

(declare-fun b!84180 () Bool)

(assert (=> b!84180 (= e!54915 None!142)))

(declare-fun d!21397 () Bool)

(declare-fun c!13537 () Bool)

(assert (=> d!21397 (= c!13537 (and ((_ is Cons!1543) (t!5251 lt!39026)) (= (_1!1120 (h!2133 (t!5251 lt!39026))) (_1!1120 lt!38750))))))

(assert (=> d!21397 (= (getValueByKey!138 (t!5251 lt!39026) (_1!1120 lt!38750)) e!54914)))

(declare-fun b!84179 () Bool)

(assert (=> b!84179 (= e!54915 (getValueByKey!138 (t!5251 (t!5251 lt!39026)) (_1!1120 lt!38750)))))

(assert (= (and d!21397 c!13537) b!84177))

(assert (= (and d!21397 (not c!13537)) b!84178))

(assert (= (and b!84178 c!13538) b!84179))

(assert (= (and b!84178 (not c!13538)) b!84180))

(declare-fun m!87653 () Bool)

(assert (=> b!84179 m!87653))

(assert (=> b!83328 d!21397))

(declare-fun d!21399 () Bool)

(declare-fun lt!39636 () Bool)

(assert (=> d!21399 (= lt!39636 (select (content!87 lt!39042) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))))))

(declare-fun e!54916 () Bool)

(assert (=> d!21399 (= lt!39636 e!54916)))

(declare-fun res!43468 () Bool)

(assert (=> d!21399 (=> (not res!43468) (not e!54916))))

(assert (=> d!21399 (= res!43468 ((_ is Cons!1543) lt!39042))))

(assert (=> d!21399 (= (contains!760 lt!39042 (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))) lt!39636)))

(declare-fun b!84181 () Bool)

(declare-fun e!54917 () Bool)

(assert (=> b!84181 (= e!54916 e!54917)))

(declare-fun res!43469 () Bool)

(assert (=> b!84181 (=> res!43469 e!54917)))

(assert (=> b!84181 (= res!43469 (= (h!2133 lt!39042) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))))))

(declare-fun b!84182 () Bool)

(assert (=> b!84182 (= e!54917 (contains!760 (t!5251 lt!39042) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))))))

(assert (= (and d!21399 res!43468) b!84181))

(assert (= (and b!84181 (not res!43469)) b!84182))

(declare-fun m!87655 () Bool)

(assert (=> d!21399 m!87655))

(declare-fun m!87657 () Bool)

(assert (=> d!21399 m!87657))

(declare-fun m!87659 () Bool)

(assert (=> b!84182 m!87659))

(assert (=> b!83562 d!21399))

(declare-fun d!21401 () Bool)

(assert (=> d!21401 (= (isEmpty!339 (toList!756 lt!39021)) ((_ is Nil!1544) (toList!756 lt!39021)))))

(assert (=> d!20965 d!21401))

(declare-fun d!21403 () Bool)

(declare-fun e!54918 () Bool)

(assert (=> d!21403 e!54918))

(declare-fun res!43470 () Bool)

(assert (=> d!21403 (=> res!43470 e!54918)))

(declare-fun lt!39637 () Bool)

(assert (=> d!21403 (= res!43470 (not lt!39637))))

(declare-fun lt!39639 () Bool)

(assert (=> d!21403 (= lt!39637 lt!39639)))

(declare-fun lt!39640 () Unit!2445)

(declare-fun e!54919 () Unit!2445)

(assert (=> d!21403 (= lt!39640 e!54919)))

(declare-fun c!13539 () Bool)

(assert (=> d!21403 (= c!13539 lt!39639)))

(assert (=> d!21403 (= lt!39639 (containsKey!142 (toList!756 lt!39333) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21403 (= (contains!757 lt!39333 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) lt!39637)))

(declare-fun b!84183 () Bool)

(declare-fun lt!39638 () Unit!2445)

(assert (=> b!84183 (= e!54919 lt!39638)))

(assert (=> b!84183 (= lt!39638 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39333) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> b!84183 (isDefined!92 (getValueByKey!138 (toList!756 lt!39333) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun b!84184 () Bool)

(declare-fun Unit!2496 () Unit!2445)

(assert (=> b!84184 (= e!54919 Unit!2496)))

(declare-fun b!84185 () Bool)

(assert (=> b!84185 (= e!54918 (isDefined!92 (getValueByKey!138 (toList!756 lt!39333) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (= (and d!21403 c!13539) b!84183))

(assert (= (and d!21403 (not c!13539)) b!84184))

(assert (= (and d!21403 (not res!43470)) b!84185))

(declare-fun m!87661 () Bool)

(assert (=> d!21403 m!87661))

(declare-fun m!87663 () Bool)

(assert (=> b!84183 m!87663))

(assert (=> b!84183 m!86615))

(assert (=> b!84183 m!86615))

(declare-fun m!87665 () Bool)

(assert (=> b!84183 m!87665))

(assert (=> b!84185 m!86615))

(assert (=> b!84185 m!86615))

(assert (=> b!84185 m!87665))

(assert (=> d!21063 d!21403))

(declare-fun b!84187 () Bool)

(declare-fun e!54920 () Option!144)

(declare-fun e!54921 () Option!144)

(assert (=> b!84187 (= e!54920 e!54921)))

(declare-fun c!13541 () Bool)

(assert (=> b!84187 (= c!13541 (and ((_ is Cons!1543) lt!39330) (not (= (_1!1120 (h!2133 lt!39330)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(declare-fun b!84186 () Bool)

(assert (=> b!84186 (= e!54920 (Some!143 (_2!1120 (h!2133 lt!39330))))))

(declare-fun b!84189 () Bool)

(assert (=> b!84189 (= e!54921 None!142)))

(declare-fun c!13540 () Bool)

(declare-fun d!21405 () Bool)

(assert (=> d!21405 (= c!13540 (and ((_ is Cons!1543) lt!39330) (= (_1!1120 (h!2133 lt!39330)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21405 (= (getValueByKey!138 lt!39330 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) e!54920)))

(declare-fun b!84188 () Bool)

(assert (=> b!84188 (= e!54921 (getValueByKey!138 (t!5251 lt!39330) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (= (and d!21405 c!13540) b!84186))

(assert (= (and d!21405 (not c!13540)) b!84187))

(assert (= (and b!84187 c!13541) b!84188))

(assert (= (and b!84187 (not c!13541)) b!84189))

(declare-fun m!87667 () Bool)

(assert (=> b!84188 m!87667))

(assert (=> d!21063 d!21405))

(declare-fun d!21407 () Bool)

(assert (=> d!21407 (= (getValueByKey!138 lt!39330 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun lt!39641 () Unit!2445)

(assert (=> d!21407 (= lt!39641 (choose!495 lt!39330 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun e!54922 () Bool)

(assert (=> d!21407 e!54922))

(declare-fun res!43471 () Bool)

(assert (=> d!21407 (=> (not res!43471) (not e!54922))))

(assert (=> d!21407 (= res!43471 (isStrictlySorted!292 lt!39330))))

(assert (=> d!21407 (= (lemmaContainsTupThenGetReturnValue!57 lt!39330 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) lt!39641)))

(declare-fun b!84190 () Bool)

(declare-fun res!43472 () Bool)

(assert (=> b!84190 (=> (not res!43472) (not e!54922))))

(assert (=> b!84190 (= res!43472 (containsKey!142 lt!39330 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun b!84191 () Bool)

(assert (=> b!84191 (= e!54922 (contains!760 lt!39330 (tuple2!2221 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (= (and d!21407 res!43471) b!84190))

(assert (= (and b!84190 res!43472) b!84191))

(assert (=> d!21407 m!86609))

(declare-fun m!87669 () Bool)

(assert (=> d!21407 m!87669))

(declare-fun m!87671 () Bool)

(assert (=> d!21407 m!87671))

(declare-fun m!87673 () Bool)

(assert (=> b!84190 m!87673))

(declare-fun m!87675 () Bool)

(assert (=> b!84191 m!87675))

(assert (=> d!21063 d!21407))

(declare-fun bm!7928 () Bool)

(declare-fun call!7932 () List!1547)

(declare-fun call!7931 () List!1547)

(assert (=> bm!7928 (= call!7932 call!7931)))

(declare-fun b!84192 () Bool)

(declare-fun e!54926 () List!1547)

(assert (=> b!84192 (= e!54926 call!7932)))

(declare-fun b!84193 () Bool)

(declare-fun e!54925 () List!1547)

(declare-fun call!7933 () List!1547)

(assert (=> b!84193 (= e!54925 call!7933)))

(declare-fun b!84194 () Bool)

(declare-fun e!54924 () List!1547)

(assert (=> b!84194 (= e!54924 (insertStrictlySorted!59 (t!5251 (toList!756 lt!38755)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun b!84195 () Bool)

(assert (=> b!84195 (= e!54925 call!7933)))

(declare-fun b!84196 () Bool)

(declare-fun res!43473 () Bool)

(declare-fun e!54927 () Bool)

(assert (=> b!84196 (=> (not res!43473) (not e!54927))))

(declare-fun lt!39642 () List!1547)

(assert (=> b!84196 (= res!43473 (containsKey!142 lt!39642 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun d!21409 () Bool)

(assert (=> d!21409 e!54927))

(declare-fun res!43474 () Bool)

(assert (=> d!21409 (=> (not res!43474) (not e!54927))))

(assert (=> d!21409 (= res!43474 (isStrictlySorted!292 lt!39642))))

(declare-fun e!54923 () List!1547)

(assert (=> d!21409 (= lt!39642 e!54923)))

(declare-fun c!13543 () Bool)

(assert (=> d!21409 (= c!13543 (and ((_ is Cons!1543) (toList!756 lt!38755)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38755))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21409 (isStrictlySorted!292 (toList!756 lt!38755))))

(assert (=> d!21409 (= (insertStrictlySorted!59 (toList!756 lt!38755) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) lt!39642)))

(declare-fun b!84197 () Bool)

(assert (=> b!84197 (= e!54927 (contains!760 lt!39642 (tuple2!2221 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun b!84198 () Bool)

(assert (=> b!84198 (= e!54923 e!54926)))

(declare-fun c!13542 () Bool)

(assert (=> b!84198 (= c!13542 (and ((_ is Cons!1543) (toList!756 lt!38755)) (= (_1!1120 (h!2133 (toList!756 lt!38755))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun c!13545 () Bool)

(declare-fun b!84199 () Bool)

(assert (=> b!84199 (= e!54924 (ite c!13542 (t!5251 (toList!756 lt!38755)) (ite c!13545 (Cons!1543 (h!2133 (toList!756 lt!38755)) (t!5251 (toList!756 lt!38755))) Nil!1544)))))

(declare-fun b!84200 () Bool)

(assert (=> b!84200 (= c!13545 (and ((_ is Cons!1543) (toList!756 lt!38755)) (bvsgt (_1!1120 (h!2133 (toList!756 lt!38755))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> b!84200 (= e!54926 e!54925)))

(declare-fun bm!7929 () Bool)

(assert (=> bm!7929 (= call!7931 ($colon$colon!70 e!54924 (ite c!13543 (h!2133 (toList!756 lt!38755)) (tuple2!2221 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(declare-fun c!13544 () Bool)

(assert (=> bm!7929 (= c!13544 c!13543)))

(declare-fun b!84201 () Bool)

(assert (=> b!84201 (= e!54923 call!7931)))

(declare-fun bm!7930 () Bool)

(assert (=> bm!7930 (= call!7933 call!7932)))

(assert (= (and d!21409 c!13543) b!84201))

(assert (= (and d!21409 (not c!13543)) b!84198))

(assert (= (and b!84198 c!13542) b!84192))

(assert (= (and b!84198 (not c!13542)) b!84200))

(assert (= (and b!84200 c!13545) b!84195))

(assert (= (and b!84200 (not c!13545)) b!84193))

(assert (= (or b!84195 b!84193) bm!7930))

(assert (= (or b!84192 bm!7930) bm!7928))

(assert (= (or b!84201 bm!7928) bm!7929))

(assert (= (and bm!7929 c!13544) b!84194))

(assert (= (and bm!7929 (not c!13544)) b!84199))

(assert (= (and d!21409 res!43474) b!84196))

(assert (= (and b!84196 res!43473) b!84197))

(declare-fun m!87677 () Bool)

(assert (=> d!21409 m!87677))

(assert (=> d!21409 m!86211))

(declare-fun m!87679 () Bool)

(assert (=> b!84194 m!87679))

(declare-fun m!87681 () Bool)

(assert (=> b!84197 m!87681))

(declare-fun m!87683 () Bool)

(assert (=> bm!7929 m!87683))

(declare-fun m!87685 () Bool)

(assert (=> b!84196 m!87685))

(assert (=> d!21063 d!21409))

(assert (=> d!21025 d!21219))

(declare-fun b!84203 () Bool)

(declare-fun e!54928 () Option!144)

(declare-fun e!54929 () Option!144)

(assert (=> b!84203 (= e!54928 e!54929)))

(declare-fun c!13547 () Bool)

(assert (=> b!84203 (= c!13547 (and ((_ is Cons!1543) (toList!756 lt!39389)) (not (= (_1!1120 (h!2133 (toList!756 lt!39389))) (_1!1120 (tuple2!2221 lt!39022 lt!39020))))))))

(declare-fun b!84202 () Bool)

(assert (=> b!84202 (= e!54928 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39389)))))))

(declare-fun b!84205 () Bool)

(assert (=> b!84205 (= e!54929 None!142)))

(declare-fun c!13546 () Bool)

(declare-fun d!21411 () Bool)

(assert (=> d!21411 (= c!13546 (and ((_ is Cons!1543) (toList!756 lt!39389)) (= (_1!1120 (h!2133 (toList!756 lt!39389))) (_1!1120 (tuple2!2221 lt!39022 lt!39020)))))))

(assert (=> d!21411 (= (getValueByKey!138 (toList!756 lt!39389) (_1!1120 (tuple2!2221 lt!39022 lt!39020))) e!54928)))

(declare-fun b!84204 () Bool)

(assert (=> b!84204 (= e!54929 (getValueByKey!138 (t!5251 (toList!756 lt!39389)) (_1!1120 (tuple2!2221 lt!39022 lt!39020))))))

(assert (= (and d!21411 c!13546) b!84202))

(assert (= (and d!21411 (not c!13546)) b!84203))

(assert (= (and b!84203 c!13547) b!84204))

(assert (= (and b!84203 (not c!13547)) b!84205))

(declare-fun m!87687 () Bool)

(assert (=> b!84204 m!87687))

(assert (=> b!83650 d!21411))

(declare-fun d!21413 () Bool)

(assert (=> d!21413 (isDefined!92 (getValueByKey!138 (toList!756 lt!39029) (_1!1120 lt!38750)))))

(declare-fun lt!39643 () Unit!2445)

(assert (=> d!21413 (= lt!39643 (choose!496 (toList!756 lt!39029) (_1!1120 lt!38750)))))

(declare-fun e!54930 () Bool)

(assert (=> d!21413 e!54930))

(declare-fun res!43475 () Bool)

(assert (=> d!21413 (=> (not res!43475) (not e!54930))))

(assert (=> d!21413 (= res!43475 (isStrictlySorted!292 (toList!756 lt!39029)))))

(assert (=> d!21413 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39029) (_1!1120 lt!38750)) lt!39643)))

(declare-fun b!84206 () Bool)

(assert (=> b!84206 (= e!54930 (containsKey!142 (toList!756 lt!39029) (_1!1120 lt!38750)))))

(assert (= (and d!21413 res!43475) b!84206))

(assert (=> d!21413 m!85917))

(assert (=> d!21413 m!85917))

(assert (=> d!21413 m!86197))

(declare-fun m!87689 () Bool)

(assert (=> d!21413 m!87689))

(declare-fun m!87691 () Bool)

(assert (=> d!21413 m!87691))

(assert (=> b!84206 m!86193))

(assert (=> b!83323 d!21413))

(declare-fun d!21415 () Bool)

(assert (=> d!21415 (= (isDefined!92 (getValueByKey!138 (toList!756 lt!39029) (_1!1120 lt!38750))) (not (isEmpty!338 (getValueByKey!138 (toList!756 lt!39029) (_1!1120 lt!38750)))))))

(declare-fun bs!3543 () Bool)

(assert (= bs!3543 d!21415))

(assert (=> bs!3543 m!85917))

(declare-fun m!87693 () Bool)

(assert (=> bs!3543 m!87693))

(assert (=> b!83323 d!21415))

(assert (=> b!83323 d!21117))

(declare-fun d!21417 () Bool)

(declare-fun e!54931 () Bool)

(assert (=> d!21417 e!54931))

(declare-fun res!43476 () Bool)

(assert (=> d!21417 (=> res!43476 e!54931)))

(declare-fun lt!39644 () Bool)

(assert (=> d!21417 (= res!43476 (not lt!39644))))

(declare-fun lt!39646 () Bool)

(assert (=> d!21417 (= lt!39644 lt!39646)))

(declare-fun lt!39647 () Unit!2445)

(declare-fun e!54932 () Unit!2445)

(assert (=> d!21417 (= lt!39647 e!54932)))

(declare-fun c!13548 () Bool)

(assert (=> d!21417 (= c!13548 lt!39646)))

(assert (=> d!21417 (= lt!39646 (containsKey!142 (toList!756 lt!39083) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!21417 (= (contains!757 lt!39083 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) lt!39644)))

(declare-fun b!84207 () Bool)

(declare-fun lt!39645 () Unit!2445)

(assert (=> b!84207 (= e!54932 lt!39645)))

(assert (=> b!84207 (= lt!39645 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39083) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84207 (isDefined!92 (getValueByKey!138 (toList!756 lt!39083) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84208 () Bool)

(declare-fun Unit!2497 () Unit!2445)

(assert (=> b!84208 (= e!54932 Unit!2497)))

(declare-fun b!84209 () Bool)

(assert (=> b!84209 (= e!54931 (isDefined!92 (getValueByKey!138 (toList!756 lt!39083) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!21417 c!13548) b!84207))

(assert (= (and d!21417 (not c!13548)) b!84208))

(assert (= (and d!21417 (not res!43476)) b!84209))

(assert (=> d!21417 m!86049))

(declare-fun m!87695 () Bool)

(assert (=> d!21417 m!87695))

(assert (=> b!84207 m!86049))

(declare-fun m!87697 () Bool)

(assert (=> b!84207 m!87697))

(assert (=> b!84207 m!86049))

(assert (=> b!84207 m!87385))

(assert (=> b!84207 m!87385))

(declare-fun m!87699 () Bool)

(assert (=> b!84207 m!87699))

(assert (=> b!84209 m!86049))

(assert (=> b!84209 m!87385))

(assert (=> b!84209 m!87385))

(assert (=> b!84209 m!87699))

(assert (=> b!83236 d!21417))

(declare-fun d!21419 () Bool)

(assert (=> d!21419 (= (get!1209 (getValueByKey!138 (toList!756 (+!114 lt!38978 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38984)) (v!2636 (getValueByKey!138 (toList!756 (+!114 lt!38978 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38984)))))

(assert (=> d!21017 d!21419))

(declare-fun b!84211 () Bool)

(declare-fun e!54933 () Option!144)

(declare-fun e!54934 () Option!144)

(assert (=> b!84211 (= e!54933 e!54934)))

(declare-fun c!13550 () Bool)

(assert (=> b!84211 (= c!13550 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38978 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) (not (= (_1!1120 (h!2133 (toList!756 (+!114 lt!38978 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))) lt!38984))))))

(declare-fun b!84210 () Bool)

(assert (=> b!84210 (= e!54933 (Some!143 (_2!1120 (h!2133 (toList!756 (+!114 lt!38978 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))))

(declare-fun b!84213 () Bool)

(assert (=> b!84213 (= e!54934 None!142)))

(declare-fun d!21421 () Bool)

(declare-fun c!13549 () Bool)

(assert (=> d!21421 (= c!13549 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38978 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) (= (_1!1120 (h!2133 (toList!756 (+!114 lt!38978 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))) lt!38984)))))

(assert (=> d!21421 (= (getValueByKey!138 (toList!756 (+!114 lt!38978 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38984) e!54933)))

(declare-fun b!84212 () Bool)

(assert (=> b!84212 (= e!54934 (getValueByKey!138 (t!5251 (toList!756 (+!114 lt!38978 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) lt!38984))))

(assert (= (and d!21421 c!13549) b!84210))

(assert (= (and d!21421 (not c!13549)) b!84211))

(assert (= (and b!84211 c!13550) b!84212))

(assert (= (and b!84211 (not c!13550)) b!84213))

(declare-fun m!87701 () Bool)

(assert (=> b!84212 m!87701))

(assert (=> d!21017 d!21421))

(declare-fun d!21423 () Bool)

(declare-fun e!54935 () Bool)

(assert (=> d!21423 e!54935))

(declare-fun res!43477 () Bool)

(assert (=> d!21423 (=> res!43477 e!54935)))

(declare-fun lt!39648 () Bool)

(assert (=> d!21423 (= res!43477 (not lt!39648))))

(declare-fun lt!39650 () Bool)

(assert (=> d!21423 (= lt!39648 lt!39650)))

(declare-fun lt!39651 () Unit!2445)

(declare-fun e!54936 () Unit!2445)

(assert (=> d!21423 (= lt!39651 e!54936)))

(declare-fun c!13551 () Bool)

(assert (=> d!21423 (= c!13551 lt!39650)))

(assert (=> d!21423 (= lt!39650 (containsKey!142 (toList!756 lt!39389) (_1!1120 (tuple2!2221 lt!39022 lt!39020))))))

(assert (=> d!21423 (= (contains!757 lt!39389 (_1!1120 (tuple2!2221 lt!39022 lt!39020))) lt!39648)))

(declare-fun b!84214 () Bool)

(declare-fun lt!39649 () Unit!2445)

(assert (=> b!84214 (= e!54936 lt!39649)))

(assert (=> b!84214 (= lt!39649 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39389) (_1!1120 (tuple2!2221 lt!39022 lt!39020))))))

(assert (=> b!84214 (isDefined!92 (getValueByKey!138 (toList!756 lt!39389) (_1!1120 (tuple2!2221 lt!39022 lt!39020))))))

(declare-fun b!84215 () Bool)

(declare-fun Unit!2498 () Unit!2445)

(assert (=> b!84215 (= e!54936 Unit!2498)))

(declare-fun b!84216 () Bool)

(assert (=> b!84216 (= e!54935 (isDefined!92 (getValueByKey!138 (toList!756 lt!39389) (_1!1120 (tuple2!2221 lt!39022 lt!39020)))))))

(assert (= (and d!21423 c!13551) b!84214))

(assert (= (and d!21423 (not c!13551)) b!84215))

(assert (= (and d!21423 (not res!43477)) b!84216))

(declare-fun m!87703 () Bool)

(assert (=> d!21423 m!87703))

(declare-fun m!87705 () Bool)

(assert (=> b!84214 m!87705))

(assert (=> b!84214 m!86777))

(assert (=> b!84214 m!86777))

(declare-fun m!87707 () Bool)

(assert (=> b!84214 m!87707))

(assert (=> b!84216 m!86777))

(assert (=> b!84216 m!86777))

(assert (=> b!84216 m!87707))

(assert (=> d!21095 d!21423))

(declare-fun b!84218 () Bool)

(declare-fun e!54937 () Option!144)

(declare-fun e!54938 () Option!144)

(assert (=> b!84218 (= e!54937 e!54938)))

(declare-fun c!13553 () Bool)

(assert (=> b!84218 (= c!13553 (and ((_ is Cons!1543) lt!39386) (not (= (_1!1120 (h!2133 lt!39386)) (_1!1120 (tuple2!2221 lt!39022 lt!39020))))))))

(declare-fun b!84217 () Bool)

(assert (=> b!84217 (= e!54937 (Some!143 (_2!1120 (h!2133 lt!39386))))))

(declare-fun b!84220 () Bool)

(assert (=> b!84220 (= e!54938 None!142)))

(declare-fun c!13552 () Bool)

(declare-fun d!21425 () Bool)

(assert (=> d!21425 (= c!13552 (and ((_ is Cons!1543) lt!39386) (= (_1!1120 (h!2133 lt!39386)) (_1!1120 (tuple2!2221 lt!39022 lt!39020)))))))

(assert (=> d!21425 (= (getValueByKey!138 lt!39386 (_1!1120 (tuple2!2221 lt!39022 lt!39020))) e!54937)))

(declare-fun b!84219 () Bool)

(assert (=> b!84219 (= e!54938 (getValueByKey!138 (t!5251 lt!39386) (_1!1120 (tuple2!2221 lt!39022 lt!39020))))))

(assert (= (and d!21425 c!13552) b!84217))

(assert (= (and d!21425 (not c!13552)) b!84218))

(assert (= (and b!84218 c!13553) b!84219))

(assert (= (and b!84218 (not c!13553)) b!84220))

(declare-fun m!87709 () Bool)

(assert (=> b!84219 m!87709))

(assert (=> d!21095 d!21425))

(declare-fun d!21427 () Bool)

(assert (=> d!21427 (= (getValueByKey!138 lt!39386 (_1!1120 (tuple2!2221 lt!39022 lt!39020))) (Some!143 (_2!1120 (tuple2!2221 lt!39022 lt!39020))))))

(declare-fun lt!39652 () Unit!2445)

(assert (=> d!21427 (= lt!39652 (choose!495 lt!39386 (_1!1120 (tuple2!2221 lt!39022 lt!39020)) (_2!1120 (tuple2!2221 lt!39022 lt!39020))))))

(declare-fun e!54939 () Bool)

(assert (=> d!21427 e!54939))

(declare-fun res!43478 () Bool)

(assert (=> d!21427 (=> (not res!43478) (not e!54939))))

(assert (=> d!21427 (= res!43478 (isStrictlySorted!292 lt!39386))))

(assert (=> d!21427 (= (lemmaContainsTupThenGetReturnValue!57 lt!39386 (_1!1120 (tuple2!2221 lt!39022 lt!39020)) (_2!1120 (tuple2!2221 lt!39022 lt!39020))) lt!39652)))

(declare-fun b!84221 () Bool)

(declare-fun res!43479 () Bool)

(assert (=> b!84221 (=> (not res!43479) (not e!54939))))

(assert (=> b!84221 (= res!43479 (containsKey!142 lt!39386 (_1!1120 (tuple2!2221 lt!39022 lt!39020))))))

(declare-fun b!84222 () Bool)

(assert (=> b!84222 (= e!54939 (contains!760 lt!39386 (tuple2!2221 (_1!1120 (tuple2!2221 lt!39022 lt!39020)) (_2!1120 (tuple2!2221 lt!39022 lt!39020)))))))

(assert (= (and d!21427 res!43478) b!84221))

(assert (= (and b!84221 res!43479) b!84222))

(assert (=> d!21427 m!86771))

(declare-fun m!87711 () Bool)

(assert (=> d!21427 m!87711))

(declare-fun m!87713 () Bool)

(assert (=> d!21427 m!87713))

(declare-fun m!87715 () Bool)

(assert (=> b!84221 m!87715))

(declare-fun m!87717 () Bool)

(assert (=> b!84222 m!87717))

(assert (=> d!21095 d!21427))

(declare-fun bm!7931 () Bool)

(declare-fun call!7935 () List!1547)

(declare-fun call!7934 () List!1547)

(assert (=> bm!7931 (= call!7935 call!7934)))

(declare-fun b!84223 () Bool)

(declare-fun e!54943 () List!1547)

(assert (=> b!84223 (= e!54943 call!7935)))

(declare-fun b!84224 () Bool)

(declare-fun e!54942 () List!1547)

(declare-fun call!7936 () List!1547)

(assert (=> b!84224 (= e!54942 call!7936)))

(declare-fun b!84225 () Bool)

(declare-fun e!54941 () List!1547)

(assert (=> b!84225 (= e!54941 (insertStrictlySorted!59 (t!5251 (toList!756 lt!39018)) (_1!1120 (tuple2!2221 lt!39022 lt!39020)) (_2!1120 (tuple2!2221 lt!39022 lt!39020))))))

(declare-fun b!84226 () Bool)

(assert (=> b!84226 (= e!54942 call!7936)))

(declare-fun b!84227 () Bool)

(declare-fun res!43480 () Bool)

(declare-fun e!54944 () Bool)

(assert (=> b!84227 (=> (not res!43480) (not e!54944))))

(declare-fun lt!39653 () List!1547)

(assert (=> b!84227 (= res!43480 (containsKey!142 lt!39653 (_1!1120 (tuple2!2221 lt!39022 lt!39020))))))

(declare-fun d!21429 () Bool)

(assert (=> d!21429 e!54944))

(declare-fun res!43481 () Bool)

(assert (=> d!21429 (=> (not res!43481) (not e!54944))))

(assert (=> d!21429 (= res!43481 (isStrictlySorted!292 lt!39653))))

(declare-fun e!54940 () List!1547)

(assert (=> d!21429 (= lt!39653 e!54940)))

(declare-fun c!13555 () Bool)

(assert (=> d!21429 (= c!13555 (and ((_ is Cons!1543) (toList!756 lt!39018)) (bvslt (_1!1120 (h!2133 (toList!756 lt!39018))) (_1!1120 (tuple2!2221 lt!39022 lt!39020)))))))

(assert (=> d!21429 (isStrictlySorted!292 (toList!756 lt!39018))))

(assert (=> d!21429 (= (insertStrictlySorted!59 (toList!756 lt!39018) (_1!1120 (tuple2!2221 lt!39022 lt!39020)) (_2!1120 (tuple2!2221 lt!39022 lt!39020))) lt!39653)))

(declare-fun b!84228 () Bool)

(assert (=> b!84228 (= e!54944 (contains!760 lt!39653 (tuple2!2221 (_1!1120 (tuple2!2221 lt!39022 lt!39020)) (_2!1120 (tuple2!2221 lt!39022 lt!39020)))))))

(declare-fun b!84229 () Bool)

(assert (=> b!84229 (= e!54940 e!54943)))

(declare-fun c!13554 () Bool)

(assert (=> b!84229 (= c!13554 (and ((_ is Cons!1543) (toList!756 lt!39018)) (= (_1!1120 (h!2133 (toList!756 lt!39018))) (_1!1120 (tuple2!2221 lt!39022 lt!39020)))))))

(declare-fun b!84230 () Bool)

(declare-fun c!13557 () Bool)

(assert (=> b!84230 (= e!54941 (ite c!13554 (t!5251 (toList!756 lt!39018)) (ite c!13557 (Cons!1543 (h!2133 (toList!756 lt!39018)) (t!5251 (toList!756 lt!39018))) Nil!1544)))))

(declare-fun b!84231 () Bool)

(assert (=> b!84231 (= c!13557 (and ((_ is Cons!1543) (toList!756 lt!39018)) (bvsgt (_1!1120 (h!2133 (toList!756 lt!39018))) (_1!1120 (tuple2!2221 lt!39022 lt!39020)))))))

(assert (=> b!84231 (= e!54943 e!54942)))

(declare-fun bm!7932 () Bool)

(assert (=> bm!7932 (= call!7934 ($colon$colon!70 e!54941 (ite c!13555 (h!2133 (toList!756 lt!39018)) (tuple2!2221 (_1!1120 (tuple2!2221 lt!39022 lt!39020)) (_2!1120 (tuple2!2221 lt!39022 lt!39020))))))))

(declare-fun c!13556 () Bool)

(assert (=> bm!7932 (= c!13556 c!13555)))

(declare-fun b!84232 () Bool)

(assert (=> b!84232 (= e!54940 call!7934)))

(declare-fun bm!7933 () Bool)

(assert (=> bm!7933 (= call!7936 call!7935)))

(assert (= (and d!21429 c!13555) b!84232))

(assert (= (and d!21429 (not c!13555)) b!84229))

(assert (= (and b!84229 c!13554) b!84223))

(assert (= (and b!84229 (not c!13554)) b!84231))

(assert (= (and b!84231 c!13557) b!84226))

(assert (= (and b!84231 (not c!13557)) b!84224))

(assert (= (or b!84226 b!84224) bm!7933))

(assert (= (or b!84223 bm!7933) bm!7931))

(assert (= (or b!84232 bm!7931) bm!7932))

(assert (= (and bm!7932 c!13556) b!84225))

(assert (= (and bm!7932 (not c!13556)) b!84230))

(assert (= (and d!21429 res!43481) b!84227))

(assert (= (and b!84227 res!43480) b!84228))

(declare-fun m!87719 () Bool)

(assert (=> d!21429 m!87719))

(declare-fun m!87721 () Bool)

(assert (=> d!21429 m!87721))

(declare-fun m!87723 () Bool)

(assert (=> b!84225 m!87723))

(declare-fun m!87725 () Bool)

(assert (=> b!84228 m!87725))

(declare-fun m!87727 () Bool)

(assert (=> bm!7932 m!87727))

(declare-fun m!87729 () Bool)

(assert (=> b!84227 m!87729))

(assert (=> d!21095 d!21429))

(declare-fun d!21431 () Bool)

(assert (=> d!21431 (isDefined!92 (getValueByKey!138 (toList!756 lt!38974) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!39654 () Unit!2445)

(assert (=> d!21431 (= lt!39654 (choose!496 (toList!756 lt!38974) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!54945 () Bool)

(assert (=> d!21431 e!54945))

(declare-fun res!43482 () Bool)

(assert (=> d!21431 (=> (not res!43482) (not e!54945))))

(assert (=> d!21431 (= res!43482 (isStrictlySorted!292 (toList!756 lt!38974)))))

(assert (=> d!21431 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!38974) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!39654)))

(declare-fun b!84233 () Bool)

(assert (=> b!84233 (= e!54945 (containsKey!142 (toList!756 lt!38974) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!21431 res!43482) b!84233))

(assert (=> d!21431 m!85781))

(assert (=> d!21431 m!86581))

(assert (=> d!21431 m!86581))

(assert (=> d!21431 m!86583))

(assert (=> d!21431 m!85781))

(declare-fun m!87731 () Bool)

(assert (=> d!21431 m!87731))

(declare-fun m!87733 () Bool)

(assert (=> d!21431 m!87733))

(assert (=> b!84233 m!85781))

(assert (=> b!84233 m!86577))

(assert (=> b!83573 d!21431))

(declare-fun d!21433 () Bool)

(assert (=> d!21433 (= (isDefined!92 (getValueByKey!138 (toList!756 lt!38974) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!338 (getValueByKey!138 (toList!756 lt!38974) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3544 () Bool)

(assert (= bs!3544 d!21433))

(assert (=> bs!3544 m!86581))

(declare-fun m!87735 () Bool)

(assert (=> bs!3544 m!87735))

(assert (=> b!83573 d!21433))

(declare-fun b!84235 () Bool)

(declare-fun e!54946 () Option!144)

(declare-fun e!54947 () Option!144)

(assert (=> b!84235 (= e!54946 e!54947)))

(declare-fun c!13559 () Bool)

(assert (=> b!84235 (= c!13559 (and ((_ is Cons!1543) (toList!756 lt!38974)) (not (= (_1!1120 (h!2133 (toList!756 lt!38974))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!84234 () Bool)

(assert (=> b!84234 (= e!54946 (Some!143 (_2!1120 (h!2133 (toList!756 lt!38974)))))))

(declare-fun b!84237 () Bool)

(assert (=> b!84237 (= e!54947 None!142)))

(declare-fun d!21435 () Bool)

(declare-fun c!13558 () Bool)

(assert (=> d!21435 (= c!13558 (and ((_ is Cons!1543) (toList!756 lt!38974)) (= (_1!1120 (h!2133 (toList!756 lt!38974))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!21435 (= (getValueByKey!138 (toList!756 lt!38974) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!54946)))

(declare-fun b!84236 () Bool)

(assert (=> b!84236 (= e!54947 (getValueByKey!138 (t!5251 (toList!756 lt!38974)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!21435 c!13558) b!84234))

(assert (= (and d!21435 (not c!13558)) b!84235))

(assert (= (and b!84235 c!13559) b!84236))

(assert (= (and b!84235 (not c!13559)) b!84237))

(assert (=> b!84236 m!85781))

(declare-fun m!87737 () Bool)

(assert (=> b!84236 m!87737))

(assert (=> b!83573 d!21435))

(declare-fun d!21437 () Bool)

(declare-fun lt!39655 () Bool)

(assert (=> d!21437 (= lt!39655 (select (content!87 (t!5251 (toList!756 lt!39033))) lt!38760))))

(declare-fun e!54948 () Bool)

(assert (=> d!21437 (= lt!39655 e!54948)))

(declare-fun res!43483 () Bool)

(assert (=> d!21437 (=> (not res!43483) (not e!54948))))

(assert (=> d!21437 (= res!43483 ((_ is Cons!1543) (t!5251 (toList!756 lt!39033))))))

(assert (=> d!21437 (= (contains!760 (t!5251 (toList!756 lt!39033)) lt!38760) lt!39655)))

(declare-fun b!84238 () Bool)

(declare-fun e!54949 () Bool)

(assert (=> b!84238 (= e!54948 e!54949)))

(declare-fun res!43484 () Bool)

(assert (=> b!84238 (=> res!43484 e!54949)))

(assert (=> b!84238 (= res!43484 (= (h!2133 (t!5251 (toList!756 lt!39033))) lt!38760))))

(declare-fun b!84239 () Bool)

(assert (=> b!84239 (= e!54949 (contains!760 (t!5251 (t!5251 (toList!756 lt!39033))) lt!38760))))

(assert (= (and d!21437 res!43483) b!84238))

(assert (= (and b!84238 (not res!43484)) b!84239))

(declare-fun m!87739 () Bool)

(assert (=> d!21437 m!87739))

(declare-fun m!87741 () Bool)

(assert (=> d!21437 m!87741))

(declare-fun m!87743 () Bool)

(assert (=> b!84239 m!87743))

(assert (=> b!83525 d!21437))

(declare-fun d!21439 () Bool)

(declare-fun lt!39656 () Bool)

(assert (=> d!21439 (= lt!39656 (select (content!87 lt!39211) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(declare-fun e!54950 () Bool)

(assert (=> d!21439 (= lt!39656 e!54950)))

(declare-fun res!43485 () Bool)

(assert (=> d!21439 (=> (not res!43485) (not e!54950))))

(assert (=> d!21439 (= res!43485 ((_ is Cons!1543) lt!39211))))

(assert (=> d!21439 (= (contains!760 lt!39211 (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))) lt!39656)))

(declare-fun b!84240 () Bool)

(declare-fun e!54951 () Bool)

(assert (=> b!84240 (= e!54950 e!54951)))

(declare-fun res!43486 () Bool)

(assert (=> b!84240 (=> res!43486 e!54951)))

(assert (=> b!84240 (= res!43486 (= (h!2133 lt!39211) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(declare-fun b!84241 () Bool)

(assert (=> b!84241 (= e!54951 (contains!760 (t!5251 lt!39211) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(assert (= (and d!21439 res!43485) b!84240))

(assert (= (and b!84240 (not res!43486)) b!84241))

(declare-fun m!87745 () Bool)

(assert (=> d!21439 m!87745))

(declare-fun m!87747 () Bool)

(assert (=> d!21439 m!87747))

(declare-fun m!87749 () Bool)

(assert (=> b!84241 m!87749))

(assert (=> b!83380 d!21439))

(assert (=> d!21121 d!21219))

(assert (=> d!20957 d!20959))

(assert (=> d!20957 d!20961))

(declare-fun d!21441 () Bool)

(assert (=> d!21441 (isDefined!92 (getValueByKey!138 (toList!756 lt!38757) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> d!21441 true))

(declare-fun _$12!332 () Unit!2445)

(assert (=> d!21441 (= (choose!496 (toList!756 lt!38757) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) _$12!332)))

(declare-fun bs!3545 () Bool)

(assert (= bs!3545 d!21441))

(assert (=> bs!3545 m!85591))

(assert (=> bs!3545 m!85717))

(assert (=> bs!3545 m!85717))

(assert (=> bs!3545 m!85719))

(assert (=> d!20957 d!21441))

(declare-fun d!21443 () Bool)

(declare-fun res!43487 () Bool)

(declare-fun e!54952 () Bool)

(assert (=> d!21443 (=> res!43487 e!54952)))

(assert (=> d!21443 (= res!43487 (or ((_ is Nil!1544) (toList!756 lt!38757)) ((_ is Nil!1544) (t!5251 (toList!756 lt!38757)))))))

(assert (=> d!21443 (= (isStrictlySorted!292 (toList!756 lt!38757)) e!54952)))

(declare-fun b!84242 () Bool)

(declare-fun e!54953 () Bool)

(assert (=> b!84242 (= e!54952 e!54953)))

(declare-fun res!43488 () Bool)

(assert (=> b!84242 (=> (not res!43488) (not e!54953))))

(assert (=> b!84242 (= res!43488 (bvslt (_1!1120 (h!2133 (toList!756 lt!38757))) (_1!1120 (h!2133 (t!5251 (toList!756 lt!38757))))))))

(declare-fun b!84243 () Bool)

(assert (=> b!84243 (= e!54953 (isStrictlySorted!292 (t!5251 (toList!756 lt!38757))))))

(assert (= (and d!21443 (not res!43487)) b!84242))

(assert (= (and b!84242 res!43488) b!84243))

(declare-fun m!87751 () Bool)

(assert (=> b!84243 m!87751))

(assert (=> d!20957 d!21443))

(assert (=> b!83611 d!21181))

(declare-fun d!21445 () Bool)

(declare-fun res!43490 () Bool)

(declare-fun e!54956 () Bool)

(assert (=> d!21445 (=> res!43490 e!54956)))

(assert (=> d!21445 (= res!43490 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!21445 (= (arrayNoDuplicates!0 (_keys!3985 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!13349 (Cons!1544 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000) Nil!1545) Nil!1545)) e!54956)))

(declare-fun b!84244 () Bool)

(declare-fun e!54957 () Bool)

(assert (=> b!84244 (= e!54956 e!54957)))

(declare-fun res!43489 () Bool)

(assert (=> b!84244 (=> (not res!43489) (not e!54957))))

(declare-fun e!54955 () Bool)

(assert (=> b!84244 (= res!43489 (not e!54955))))

(declare-fun res!43491 () Bool)

(assert (=> b!84244 (=> (not res!43491) (not e!54955))))

(assert (=> b!84244 (= res!43491 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!84245 () Bool)

(declare-fun e!54954 () Bool)

(declare-fun call!7937 () Bool)

(assert (=> b!84245 (= e!54954 call!7937)))

(declare-fun bm!7934 () Bool)

(declare-fun c!13560 () Bool)

(assert (=> bm!7934 (= call!7937 (arrayNoDuplicates!0 (_keys!3985 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13560 (Cons!1544 (select (arr!1912 (_keys!3985 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!13349 (Cons!1544 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000) Nil!1545) Nil!1545)) (ite c!13349 (Cons!1544 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000) Nil!1545) Nil!1545))))))

(declare-fun b!84246 () Bool)

(assert (=> b!84246 (= e!54957 e!54954)))

(assert (=> b!84246 (= c!13560 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!84247 () Bool)

(assert (=> b!84247 (= e!54955 (contains!759 (ite c!13349 (Cons!1544 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000) Nil!1545) Nil!1545) (select (arr!1912 (_keys!3985 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!84248 () Bool)

(assert (=> b!84248 (= e!54954 call!7937)))

(assert (= (and d!21445 (not res!43490)) b!84244))

(assert (= (and b!84244 res!43491) b!84247))

(assert (= (and b!84244 res!43489) b!84246))

(assert (= (and b!84246 c!13560) b!84245))

(assert (= (and b!84246 (not c!13560)) b!84248))

(assert (= (or b!84245 b!84248) bm!7934))

(assert (=> b!84244 m!87271))

(assert (=> b!84244 m!87271))

(assert (=> b!84244 m!87273))

(assert (=> bm!7934 m!87271))

(declare-fun m!87753 () Bool)

(assert (=> bm!7934 m!87753))

(assert (=> b!84246 m!87271))

(assert (=> b!84246 m!87271))

(assert (=> b!84246 m!87273))

(assert (=> b!84247 m!87271))

(assert (=> b!84247 m!87271))

(declare-fun m!87755 () Bool)

(assert (=> b!84247 m!87755))

(assert (=> bm!7854 d!21445))

(declare-fun b!84250 () Bool)

(declare-fun e!54958 () Option!144)

(declare-fun e!54959 () Option!144)

(assert (=> b!84250 (= e!54958 e!54959)))

(declare-fun c!13562 () Bool)

(assert (=> b!84250 (= c!13562 (and ((_ is Cons!1543) (toList!756 lt!39267)) (not (= (_1!1120 (h!2133 (toList!756 lt!39267))) (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!84249 () Bool)

(assert (=> b!84249 (= e!54958 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39267)))))))

(declare-fun b!84252 () Bool)

(assert (=> b!84252 (= e!54959 None!142)))

(declare-fun d!21447 () Bool)

(declare-fun c!13561 () Bool)

(assert (=> d!21447 (= c!13561 (and ((_ is Cons!1543) (toList!756 lt!39267)) (= (_1!1120 (h!2133 (toList!756 lt!39267))) (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21447 (= (getValueByKey!138 (toList!756 lt!39267) (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) e!54958)))

(declare-fun b!84251 () Bool)

(assert (=> b!84251 (= e!54959 (getValueByKey!138 (t!5251 (toList!756 lt!39267)) (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21447 c!13561) b!84249))

(assert (= (and d!21447 (not c!13561)) b!84250))

(assert (= (and b!84250 c!13562) b!84251))

(assert (= (and b!84250 (not c!13562)) b!84252))

(declare-fun m!87757 () Bool)

(assert (=> b!84251 m!87757))

(assert (=> b!83494 d!21447))

(declare-fun d!21449 () Bool)

(declare-fun e!54960 () Bool)

(assert (=> d!21449 e!54960))

(declare-fun res!43492 () Bool)

(assert (=> d!21449 (=> res!43492 e!54960)))

(declare-fun lt!39657 () Bool)

(assert (=> d!21449 (= res!43492 (not lt!39657))))

(declare-fun lt!39659 () Bool)

(assert (=> d!21449 (= lt!39657 lt!39659)))

(declare-fun lt!39660 () Unit!2445)

(declare-fun e!54961 () Unit!2445)

(assert (=> d!21449 (= lt!39660 e!54961)))

(declare-fun c!13563 () Bool)

(assert (=> d!21449 (= c!13563 lt!39659)))

(assert (=> d!21449 (= lt!39659 (containsKey!142 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) lt!38887 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899))))))

(assert (=> d!21449 (= (contains!757 (getCurrentListMap!440 (_keys!3985 newMap!16) lt!38887 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899))) lt!39657)))

(declare-fun b!84253 () Bool)

(declare-fun lt!39658 () Unit!2445)

(assert (=> b!84253 (= e!54961 lt!39658)))

(assert (=> b!84253 (= lt!39658 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) lt!38887 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899))))))

(assert (=> b!84253 (isDefined!92 (getValueByKey!138 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) lt!38887 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899))))))

(declare-fun b!84254 () Bool)

(declare-fun Unit!2499 () Unit!2445)

(assert (=> b!84254 (= e!54961 Unit!2499)))

(declare-fun b!84255 () Bool)

(assert (=> b!84255 (= e!54960 (isDefined!92 (getValueByKey!138 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) lt!38887 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899)))))))

(assert (= (and d!21449 c!13563) b!84253))

(assert (= (and d!21449 (not c!13563)) b!84254))

(assert (= (and d!21449 (not res!43492)) b!84255))

(assert (=> d!21449 m!85769))

(declare-fun m!87759 () Bool)

(assert (=> d!21449 m!87759))

(assert (=> b!84253 m!85769))

(declare-fun m!87761 () Bool)

(assert (=> b!84253 m!87761))

(assert (=> b!84253 m!85769))

(declare-fun m!87763 () Bool)

(assert (=> b!84253 m!87763))

(assert (=> b!84253 m!87763))

(declare-fun m!87765 () Bool)

(assert (=> b!84253 m!87765))

(assert (=> b!84255 m!85769))

(assert (=> b!84255 m!87763))

(assert (=> b!84255 m!87763))

(assert (=> b!84255 m!87765))

(assert (=> b!83221 d!21449))

(declare-fun b!84256 () Bool)

(declare-fun e!54967 () ListLongMap!1481)

(declare-fun call!7938 () ListLongMap!1481)

(assert (=> b!84256 (= e!54967 call!7938)))

(declare-fun bm!7935 () Bool)

(declare-fun call!7944 () ListLongMap!1481)

(declare-fun call!7939 () ListLongMap!1481)

(assert (=> bm!7935 (= call!7944 call!7939)))

(declare-fun b!84257 () Bool)

(declare-fun e!54971 () Bool)

(declare-fun lt!39672 () ListLongMap!1481)

(assert (=> b!84257 (= e!54971 (= (apply!81 lt!39672 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2211 newMap!16)))))

(declare-fun b!84258 () Bool)

(declare-fun e!54962 () ListLongMap!1481)

(declare-fun call!7940 () ListLongMap!1481)

(assert (=> b!84258 (= e!54962 call!7940)))

(declare-fun b!84260 () Bool)

(declare-fun e!54963 () ListLongMap!1481)

(declare-fun call!7941 () ListLongMap!1481)

(assert (=> b!84260 (= e!54963 (+!114 call!7941 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))

(declare-fun b!84261 () Bool)

(declare-fun res!43501 () Bool)

(declare-fun e!54970 () Bool)

(assert (=> b!84261 (=> (not res!43501) (not e!54970))))

(declare-fun e!54966 () Bool)

(assert (=> b!84261 (= res!43501 e!54966)))

(declare-fun c!13568 () Bool)

(assert (=> b!84261 (= c!13568 (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7936 () Bool)

(assert (=> bm!7936 (= call!7939 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) lt!38887 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun c!13567 () Bool)

(declare-fun bm!7937 () Bool)

(declare-fun c!13569 () Bool)

(assert (=> bm!7937 (= call!7941 (+!114 (ite c!13567 call!7939 (ite c!13569 call!7944 call!7938)) (ite (or c!13567 c!13569) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))

(declare-fun b!84262 () Bool)

(declare-fun e!54969 () Unit!2445)

(declare-fun Unit!2500 () Unit!2445)

(assert (=> b!84262 (= e!54969 Unit!2500)))

(declare-fun bm!7938 () Bool)

(declare-fun call!7942 () Bool)

(assert (=> bm!7938 (= call!7942 (contains!757 lt!39672 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84263 () Bool)

(declare-fun res!43498 () Bool)

(assert (=> b!84263 (=> (not res!43498) (not e!54970))))

(declare-fun e!54973 () Bool)

(assert (=> b!84263 (= res!43498 e!54973)))

(declare-fun res!43499 () Bool)

(assert (=> b!84263 (=> res!43499 e!54973)))

(declare-fun e!54968 () Bool)

(assert (=> b!84263 (= res!43499 (not e!54968))))

(declare-fun res!43496 () Bool)

(assert (=> b!84263 (=> (not res!43496) (not e!54968))))

(assert (=> b!84263 (= res!43496 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!84264 () Bool)

(declare-fun e!54964 () Bool)

(assert (=> b!84264 (= e!54973 e!54964)))

(declare-fun res!43495 () Bool)

(assert (=> b!84264 (=> (not res!43495) (not e!54964))))

(assert (=> b!84264 (= res!43495 (contains!757 lt!39672 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84264 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!84265 () Bool)

(declare-fun e!54965 () Bool)

(assert (=> b!84265 (= e!54965 (not call!7942))))

(declare-fun b!84266 () Bool)

(declare-fun e!54972 () Bool)

(assert (=> b!84266 (= e!54966 e!54972)))

(declare-fun res!43494 () Bool)

(declare-fun call!7943 () Bool)

(assert (=> b!84266 (= res!43494 call!7943)))

(assert (=> b!84266 (=> (not res!43494) (not e!54972))))

(declare-fun b!84267 () Bool)

(declare-fun c!13566 () Bool)

(assert (=> b!84267 (= c!13566 (and (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!84267 (= e!54962 e!54967)))

(declare-fun b!84268 () Bool)

(declare-fun lt!39667 () Unit!2445)

(assert (=> b!84268 (= e!54969 lt!39667)))

(declare-fun lt!39673 () ListLongMap!1481)

(assert (=> b!84268 (= lt!39673 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) lt!38887 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39666 () (_ BitVec 64))

(assert (=> b!84268 (= lt!39666 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39670 () (_ BitVec 64))

(assert (=> b!84268 (= lt!39670 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39675 () Unit!2445)

(assert (=> b!84268 (= lt!39675 (addStillContains!57 lt!39673 lt!39666 (zeroValue!2211 newMap!16) lt!39670))))

(assert (=> b!84268 (contains!757 (+!114 lt!39673 (tuple2!2221 lt!39666 (zeroValue!2211 newMap!16))) lt!39670)))

(declare-fun lt!39671 () Unit!2445)

(assert (=> b!84268 (= lt!39671 lt!39675)))

(declare-fun lt!39676 () ListLongMap!1481)

(assert (=> b!84268 (= lt!39676 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) lt!38887 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39668 () (_ BitVec 64))

(assert (=> b!84268 (= lt!39668 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39682 () (_ BitVec 64))

(assert (=> b!84268 (= lt!39682 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39680 () Unit!2445)

(assert (=> b!84268 (= lt!39680 (addApplyDifferent!57 lt!39676 lt!39668 (minValue!2211 newMap!16) lt!39682))))

(assert (=> b!84268 (= (apply!81 (+!114 lt!39676 (tuple2!2221 lt!39668 (minValue!2211 newMap!16))) lt!39682) (apply!81 lt!39676 lt!39682))))

(declare-fun lt!39674 () Unit!2445)

(assert (=> b!84268 (= lt!39674 lt!39680)))

(declare-fun lt!39669 () ListLongMap!1481)

(assert (=> b!84268 (= lt!39669 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) lt!38887 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39678 () (_ BitVec 64))

(assert (=> b!84268 (= lt!39678 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39662 () (_ BitVec 64))

(assert (=> b!84268 (= lt!39662 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39677 () Unit!2445)

(assert (=> b!84268 (= lt!39677 (addApplyDifferent!57 lt!39669 lt!39678 (zeroValue!2211 newMap!16) lt!39662))))

(assert (=> b!84268 (= (apply!81 (+!114 lt!39669 (tuple2!2221 lt!39678 (zeroValue!2211 newMap!16))) lt!39662) (apply!81 lt!39669 lt!39662))))

(declare-fun lt!39663 () Unit!2445)

(assert (=> b!84268 (= lt!39663 lt!39677)))

(declare-fun lt!39665 () ListLongMap!1481)

(assert (=> b!84268 (= lt!39665 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) lt!38887 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39679 () (_ BitVec 64))

(assert (=> b!84268 (= lt!39679 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39664 () (_ BitVec 64))

(assert (=> b!84268 (= lt!39664 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!84268 (= lt!39667 (addApplyDifferent!57 lt!39665 lt!39679 (minValue!2211 newMap!16) lt!39664))))

(assert (=> b!84268 (= (apply!81 (+!114 lt!39665 (tuple2!2221 lt!39679 (minValue!2211 newMap!16))) lt!39664) (apply!81 lt!39665 lt!39664))))

(declare-fun b!84269 () Bool)

(assert (=> b!84269 (= e!54964 (= (apply!81 lt!39672 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) (get!1206 (select (arr!1913 lt!38887) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!84269 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2156 lt!38887)))))

(assert (=> b!84269 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!84259 () Bool)

(assert (=> b!84259 (= e!54967 call!7940)))

(declare-fun d!21451 () Bool)

(assert (=> d!21451 e!54970))

(declare-fun res!43497 () Bool)

(assert (=> d!21451 (=> (not res!43497) (not e!54970))))

(assert (=> d!21451 (= res!43497 (or (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))))

(declare-fun lt!39681 () ListLongMap!1481)

(assert (=> d!21451 (= lt!39672 lt!39681)))

(declare-fun lt!39661 () Unit!2445)

(assert (=> d!21451 (= lt!39661 e!54969)))

(declare-fun c!13565 () Bool)

(declare-fun e!54974 () Bool)

(assert (=> d!21451 (= c!13565 e!54974)))

(declare-fun res!43493 () Bool)

(assert (=> d!21451 (=> (not res!43493) (not e!54974))))

(assert (=> d!21451 (= res!43493 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!21451 (= lt!39681 e!54963)))

(assert (=> d!21451 (= c!13567 (and (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21451 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!21451 (= (getCurrentListMap!440 (_keys!3985 newMap!16) lt!38887 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) lt!39672)))

(declare-fun bm!7939 () Bool)

(assert (=> bm!7939 (= call!7943 (contains!757 lt!39672 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84270 () Bool)

(assert (=> b!84270 (= e!54966 (not call!7943))))

(declare-fun bm!7940 () Bool)

(assert (=> bm!7940 (= call!7938 call!7944)))

(declare-fun b!84271 () Bool)

(assert (=> b!84271 (= e!54974 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84272 () Bool)

(assert (=> b!84272 (= e!54970 e!54965)))

(declare-fun c!13564 () Bool)

(assert (=> b!84272 (= c!13564 (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7941 () Bool)

(assert (=> bm!7941 (= call!7940 call!7941)))

(declare-fun b!84273 () Bool)

(assert (=> b!84273 (= e!54972 (= (apply!81 lt!39672 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2211 newMap!16)))))

(declare-fun b!84274 () Bool)

(assert (=> b!84274 (= e!54968 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84275 () Bool)

(assert (=> b!84275 (= e!54963 e!54962)))

(assert (=> b!84275 (= c!13569 (and (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!84276 () Bool)

(assert (=> b!84276 (= e!54965 e!54971)))

(declare-fun res!43500 () Bool)

(assert (=> b!84276 (= res!43500 call!7942)))

(assert (=> b!84276 (=> (not res!43500) (not e!54971))))

(assert (= (and d!21451 c!13567) b!84260))

(assert (= (and d!21451 (not c!13567)) b!84275))

(assert (= (and b!84275 c!13569) b!84258))

(assert (= (and b!84275 (not c!13569)) b!84267))

(assert (= (and b!84267 c!13566) b!84259))

(assert (= (and b!84267 (not c!13566)) b!84256))

(assert (= (or b!84259 b!84256) bm!7940))

(assert (= (or b!84258 bm!7940) bm!7935))

(assert (= (or b!84258 b!84259) bm!7941))

(assert (= (or b!84260 bm!7935) bm!7936))

(assert (= (or b!84260 bm!7941) bm!7937))

(assert (= (and d!21451 res!43493) b!84271))

(assert (= (and d!21451 c!13565) b!84268))

(assert (= (and d!21451 (not c!13565)) b!84262))

(assert (= (and d!21451 res!43497) b!84263))

(assert (= (and b!84263 res!43496) b!84274))

(assert (= (and b!84263 (not res!43499)) b!84264))

(assert (= (and b!84264 res!43495) b!84269))

(assert (= (and b!84263 res!43498) b!84261))

(assert (= (and b!84261 c!13568) b!84266))

(assert (= (and b!84261 (not c!13568)) b!84270))

(assert (= (and b!84266 res!43494) b!84273))

(assert (= (or b!84266 b!84270) bm!7939))

(assert (= (and b!84261 res!43501) b!84272))

(assert (= (and b!84272 c!13564) b!84276))

(assert (= (and b!84272 (not c!13564)) b!84265))

(assert (= (and b!84276 res!43500) b!84257))

(assert (= (or b!84276 b!84265) bm!7938))

(declare-fun b_lambda!3745 () Bool)

(assert (=> (not b_lambda!3745) (not b!84269)))

(assert (=> b!84269 t!5259))

(declare-fun b_and!5113 () Bool)

(assert (= b_and!5109 (and (=> t!5259 result!2903) b_and!5113)))

(assert (=> b!84269 t!5261))

(declare-fun b_and!5115 () Bool)

(assert (= b_and!5111 (and (=> t!5261 result!2905) b_and!5115)))

(declare-fun m!87767 () Bool)

(assert (=> bm!7936 m!87767))

(declare-fun m!87769 () Bool)

(assert (=> bm!7939 m!87769))

(declare-fun m!87771 () Bool)

(assert (=> bm!7937 m!87771))

(assert (=> b!84274 m!86049))

(assert (=> b!84274 m!86049))

(assert (=> b!84274 m!86051))

(declare-fun m!87773 () Bool)

(assert (=> bm!7938 m!87773))

(assert (=> b!84271 m!86049))

(assert (=> b!84271 m!86049))

(assert (=> b!84271 m!86051))

(assert (=> b!84264 m!86049))

(assert (=> b!84264 m!86049))

(declare-fun m!87775 () Bool)

(assert (=> b!84264 m!87775))

(assert (=> d!21451 m!86023))

(declare-fun m!87777 () Bool)

(assert (=> b!84257 m!87777))

(declare-fun m!87779 () Bool)

(assert (=> b!84268 m!87779))

(declare-fun m!87781 () Bool)

(assert (=> b!84268 m!87781))

(declare-fun m!87783 () Bool)

(assert (=> b!84268 m!87783))

(declare-fun m!87785 () Bool)

(assert (=> b!84268 m!87785))

(declare-fun m!87787 () Bool)

(assert (=> b!84268 m!87787))

(declare-fun m!87789 () Bool)

(assert (=> b!84268 m!87789))

(declare-fun m!87791 () Bool)

(assert (=> b!84268 m!87791))

(assert (=> b!84268 m!87781))

(declare-fun m!87793 () Bool)

(assert (=> b!84268 m!87793))

(declare-fun m!87795 () Bool)

(assert (=> b!84268 m!87795))

(assert (=> b!84268 m!87787))

(declare-fun m!87797 () Bool)

(assert (=> b!84268 m!87797))

(assert (=> b!84268 m!87783))

(assert (=> b!84268 m!86049))

(declare-fun m!87799 () Bool)

(assert (=> b!84268 m!87799))

(declare-fun m!87801 () Bool)

(assert (=> b!84268 m!87801))

(declare-fun m!87803 () Bool)

(assert (=> b!84268 m!87803))

(assert (=> b!84268 m!87767))

(declare-fun m!87805 () Bool)

(assert (=> b!84268 m!87805))

(assert (=> b!84268 m!87797))

(declare-fun m!87807 () Bool)

(assert (=> b!84268 m!87807))

(assert (=> b!84269 m!86089))

(declare-fun m!87809 () Bool)

(assert (=> b!84269 m!87809))

(assert (=> b!84269 m!86049))

(declare-fun m!87811 () Bool)

(assert (=> b!84269 m!87811))

(assert (=> b!84269 m!86049))

(assert (=> b!84269 m!87809))

(assert (=> b!84269 m!86089))

(declare-fun m!87813 () Bool)

(assert (=> b!84269 m!87813))

(declare-fun m!87815 () Bool)

(assert (=> b!84260 m!87815))

(declare-fun m!87817 () Bool)

(assert (=> b!84273 m!87817))

(assert (=> b!83221 d!21451))

(assert (=> d!21115 d!20865))

(declare-fun d!21453 () Bool)

(declare-fun lt!39683 () Bool)

(assert (=> d!21453 (= lt!39683 (select (content!87 lt!39030) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))))))

(declare-fun e!54975 () Bool)

(assert (=> d!21453 (= lt!39683 e!54975)))

(declare-fun res!43502 () Bool)

(assert (=> d!21453 (=> (not res!43502) (not e!54975))))

(assert (=> d!21453 (= res!43502 ((_ is Cons!1543) lt!39030))))

(assert (=> d!21453 (= (contains!760 lt!39030 (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))) lt!39683)))

(declare-fun b!84277 () Bool)

(declare-fun e!54976 () Bool)

(assert (=> b!84277 (= e!54975 e!54976)))

(declare-fun res!43503 () Bool)

(assert (=> b!84277 (=> res!43503 e!54976)))

(assert (=> b!84277 (= res!43503 (= (h!2133 lt!39030) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))))))

(declare-fun b!84278 () Bool)

(assert (=> b!84278 (= e!54976 (contains!760 (t!5251 lt!39030) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))))))

(assert (= (and d!21453 res!43502) b!84277))

(assert (= (and b!84277 (not res!43503)) b!84278))

(declare-fun m!87819 () Bool)

(assert (=> d!21453 m!87819))

(declare-fun m!87821 () Bool)

(assert (=> d!21453 m!87821))

(declare-fun m!87823 () Bool)

(assert (=> b!84278 m!87823))

(assert (=> b!83393 d!21453))

(declare-fun d!21455 () Bool)

(assert (=> d!21455 (= (get!1209 (getValueByKey!138 (toList!756 lt!38974) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2636 (getValueByKey!138 (toList!756 lt!38974) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21111 d!21455))

(assert (=> d!21111 d!21225))

(declare-fun d!21457 () Bool)

(declare-fun lt!39684 () Bool)

(assert (=> d!21457 (= lt!39684 (select (content!87 lt!39314) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))))))

(declare-fun e!54977 () Bool)

(assert (=> d!21457 (= lt!39684 e!54977)))

(declare-fun res!43504 () Bool)

(assert (=> d!21457 (=> (not res!43504) (not e!54977))))

(assert (=> d!21457 (= res!43504 ((_ is Cons!1543) lt!39314))))

(assert (=> d!21457 (= (contains!760 lt!39314 (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))) lt!39684)))

(declare-fun b!84279 () Bool)

(declare-fun e!54978 () Bool)

(assert (=> b!84279 (= e!54977 e!54978)))

(declare-fun res!43505 () Bool)

(assert (=> b!84279 (=> res!43505 e!54978)))

(assert (=> b!84279 (= res!43505 (= (h!2133 lt!39314) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))))))

(declare-fun b!84280 () Bool)

(assert (=> b!84280 (= e!54978 (contains!760 (t!5251 lt!39314) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))))))

(assert (= (and d!21457 res!43504) b!84279))

(assert (= (and b!84279 (not res!43505)) b!84280))

(declare-fun m!87825 () Bool)

(assert (=> d!21457 m!87825))

(declare-fun m!87827 () Bool)

(assert (=> d!21457 m!87827))

(declare-fun m!87829 () Bool)

(assert (=> b!84280 m!87829))

(assert (=> b!83568 d!21457))

(assert (=> b!83509 d!21195))

(declare-fun d!21459 () Bool)

(assert (=> d!21459 (= (apply!81 (+!114 lt!39273 (tuple2!2221 lt!39287 (minValue!2211 newMap!16))) lt!39272) (apply!81 lt!39273 lt!39272))))

(declare-fun lt!39685 () Unit!2445)

(assert (=> d!21459 (= lt!39685 (choose!497 lt!39273 lt!39287 (minValue!2211 newMap!16) lt!39272))))

(declare-fun e!54979 () Bool)

(assert (=> d!21459 e!54979))

(declare-fun res!43506 () Bool)

(assert (=> d!21459 (=> (not res!43506) (not e!54979))))

(assert (=> d!21459 (= res!43506 (contains!757 lt!39273 lt!39272))))

(assert (=> d!21459 (= (addApplyDifferent!57 lt!39273 lt!39287 (minValue!2211 newMap!16) lt!39272) lt!39685)))

(declare-fun b!84281 () Bool)

(assert (=> b!84281 (= e!54979 (not (= lt!39272 lt!39287)))))

(assert (= (and d!21459 res!43506) b!84281))

(declare-fun m!87831 () Bool)

(assert (=> d!21459 m!87831))

(assert (=> d!21459 m!86487))

(assert (=> d!21459 m!86497))

(assert (=> d!21459 m!86487))

(declare-fun m!87833 () Bool)

(assert (=> d!21459 m!87833))

(assert (=> d!21459 m!86491))

(assert (=> b!83509 d!21459))

(declare-fun d!21461 () Bool)

(declare-fun e!54980 () Bool)

(assert (=> d!21461 e!54980))

(declare-fun res!43507 () Bool)

(assert (=> d!21461 (=> (not res!43507) (not e!54980))))

(declare-fun lt!39689 () ListLongMap!1481)

(assert (=> d!21461 (= res!43507 (contains!757 lt!39689 (_1!1120 (tuple2!2221 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))))))))

(declare-fun lt!39686 () List!1547)

(assert (=> d!21461 (= lt!39689 (ListLongMap!1482 lt!39686))))

(declare-fun lt!39687 () Unit!2445)

(declare-fun lt!39688 () Unit!2445)

(assert (=> d!21461 (= lt!39687 lt!39688)))

(assert (=> d!21461 (= (getValueByKey!138 lt!39686 (_1!1120 (tuple2!2221 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))))) (Some!143 (_2!1120 (tuple2!2221 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))))))))

(assert (=> d!21461 (= lt!39688 (lemmaContainsTupThenGetReturnValue!57 lt!39686 (_1!1120 (tuple2!2221 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)))) (_2!1120 (tuple2!2221 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))))))))

(assert (=> d!21461 (= lt!39686 (insertStrictlySorted!59 (toList!756 lt!39281) (_1!1120 (tuple2!2221 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)))) (_2!1120 (tuple2!2221 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))))))))

(assert (=> d!21461 (= (+!114 lt!39281 (tuple2!2221 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)))) lt!39689)))

(declare-fun b!84282 () Bool)

(declare-fun res!43508 () Bool)

(assert (=> b!84282 (=> (not res!43508) (not e!54980))))

(assert (=> b!84282 (= res!43508 (= (getValueByKey!138 (toList!756 lt!39689) (_1!1120 (tuple2!2221 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))))) (Some!143 (_2!1120 (tuple2!2221 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)))))))))

(declare-fun b!84283 () Bool)

(assert (=> b!84283 (= e!54980 (contains!760 (toList!756 lt!39689) (tuple2!2221 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)))))))

(assert (= (and d!21461 res!43507) b!84282))

(assert (= (and b!84282 res!43508) b!84283))

(declare-fun m!87835 () Bool)

(assert (=> d!21461 m!87835))

(declare-fun m!87837 () Bool)

(assert (=> d!21461 m!87837))

(declare-fun m!87839 () Bool)

(assert (=> d!21461 m!87839))

(declare-fun m!87841 () Bool)

(assert (=> d!21461 m!87841))

(declare-fun m!87843 () Bool)

(assert (=> b!84282 m!87843))

(declare-fun m!87845 () Bool)

(assert (=> b!84283 m!87845))

(assert (=> b!83509 d!21461))

(declare-fun d!21463 () Bool)

(assert (=> d!21463 (= (apply!81 lt!39277 lt!39270) (get!1209 (getValueByKey!138 (toList!756 lt!39277) lt!39270)))))

(declare-fun bs!3546 () Bool)

(assert (= bs!3546 d!21463))

(declare-fun m!87847 () Bool)

(assert (=> bs!3546 m!87847))

(assert (=> bs!3546 m!87847))

(declare-fun m!87849 () Bool)

(assert (=> bs!3546 m!87849))

(assert (=> b!83509 d!21463))

(declare-fun d!21465 () Bool)

(declare-fun e!54981 () Bool)

(assert (=> d!21465 e!54981))

(declare-fun res!43509 () Bool)

(assert (=> d!21465 (=> res!43509 e!54981)))

(declare-fun lt!39690 () Bool)

(assert (=> d!21465 (= res!43509 (not lt!39690))))

(declare-fun lt!39692 () Bool)

(assert (=> d!21465 (= lt!39690 lt!39692)))

(declare-fun lt!39693 () Unit!2445)

(declare-fun e!54982 () Unit!2445)

(assert (=> d!21465 (= lt!39693 e!54982)))

(declare-fun c!13570 () Bool)

(assert (=> d!21465 (= c!13570 lt!39692)))

(assert (=> d!21465 (= lt!39692 (containsKey!142 (toList!756 (+!114 lt!39281 (tuple2!2221 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))))) lt!39278))))

(assert (=> d!21465 (= (contains!757 (+!114 lt!39281 (tuple2!2221 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)))) lt!39278) lt!39690)))

(declare-fun b!84284 () Bool)

(declare-fun lt!39691 () Unit!2445)

(assert (=> b!84284 (= e!54982 lt!39691)))

(assert (=> b!84284 (= lt!39691 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 (+!114 lt!39281 (tuple2!2221 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))))) lt!39278))))

(assert (=> b!84284 (isDefined!92 (getValueByKey!138 (toList!756 (+!114 lt!39281 (tuple2!2221 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))))) lt!39278))))

(declare-fun b!84285 () Bool)

(declare-fun Unit!2501 () Unit!2445)

(assert (=> b!84285 (= e!54982 Unit!2501)))

(declare-fun b!84286 () Bool)

(assert (=> b!84286 (= e!54981 (isDefined!92 (getValueByKey!138 (toList!756 (+!114 lt!39281 (tuple2!2221 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))))) lt!39278)))))

(assert (= (and d!21465 c!13570) b!84284))

(assert (= (and d!21465 (not c!13570)) b!84285))

(assert (= (and d!21465 (not res!43509)) b!84286))

(declare-fun m!87851 () Bool)

(assert (=> d!21465 m!87851))

(declare-fun m!87853 () Bool)

(assert (=> b!84284 m!87853))

(declare-fun m!87855 () Bool)

(assert (=> b!84284 m!87855))

(assert (=> b!84284 m!87855))

(declare-fun m!87857 () Bool)

(assert (=> b!84284 m!87857))

(assert (=> b!84286 m!87855))

(assert (=> b!84286 m!87855))

(assert (=> b!84286 m!87857))

(assert (=> b!83509 d!21465))

(declare-fun d!21467 () Bool)

(declare-fun e!54983 () Bool)

(assert (=> d!21467 e!54983))

(declare-fun res!43510 () Bool)

(assert (=> d!21467 (=> (not res!43510) (not e!54983))))

(declare-fun lt!39697 () ListLongMap!1481)

(assert (=> d!21467 (= res!43510 (contains!757 lt!39697 (_1!1120 (tuple2!2221 lt!39287 (minValue!2211 newMap!16)))))))

(declare-fun lt!39694 () List!1547)

(assert (=> d!21467 (= lt!39697 (ListLongMap!1482 lt!39694))))

(declare-fun lt!39695 () Unit!2445)

(declare-fun lt!39696 () Unit!2445)

(assert (=> d!21467 (= lt!39695 lt!39696)))

(assert (=> d!21467 (= (getValueByKey!138 lt!39694 (_1!1120 (tuple2!2221 lt!39287 (minValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 lt!39287 (minValue!2211 newMap!16)))))))

(assert (=> d!21467 (= lt!39696 (lemmaContainsTupThenGetReturnValue!57 lt!39694 (_1!1120 (tuple2!2221 lt!39287 (minValue!2211 newMap!16))) (_2!1120 (tuple2!2221 lt!39287 (minValue!2211 newMap!16)))))))

(assert (=> d!21467 (= lt!39694 (insertStrictlySorted!59 (toList!756 lt!39273) (_1!1120 (tuple2!2221 lt!39287 (minValue!2211 newMap!16))) (_2!1120 (tuple2!2221 lt!39287 (minValue!2211 newMap!16)))))))

(assert (=> d!21467 (= (+!114 lt!39273 (tuple2!2221 lt!39287 (minValue!2211 newMap!16))) lt!39697)))

(declare-fun b!84287 () Bool)

(declare-fun res!43511 () Bool)

(assert (=> b!84287 (=> (not res!43511) (not e!54983))))

(assert (=> b!84287 (= res!43511 (= (getValueByKey!138 (toList!756 lt!39697) (_1!1120 (tuple2!2221 lt!39287 (minValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 lt!39287 (minValue!2211 newMap!16))))))))

(declare-fun b!84288 () Bool)

(assert (=> b!84288 (= e!54983 (contains!760 (toList!756 lt!39697) (tuple2!2221 lt!39287 (minValue!2211 newMap!16))))))

(assert (= (and d!21467 res!43510) b!84287))

(assert (= (and b!84287 res!43511) b!84288))

(declare-fun m!87859 () Bool)

(assert (=> d!21467 m!87859))

(declare-fun m!87861 () Bool)

(assert (=> d!21467 m!87861))

(declare-fun m!87863 () Bool)

(assert (=> d!21467 m!87863))

(declare-fun m!87865 () Bool)

(assert (=> d!21467 m!87865))

(declare-fun m!87867 () Bool)

(assert (=> b!84287 m!87867))

(declare-fun m!87869 () Bool)

(assert (=> b!84288 m!87869))

(assert (=> b!83509 d!21467))

(declare-fun d!21469 () Bool)

(assert (=> d!21469 (= (apply!81 (+!114 lt!39273 (tuple2!2221 lt!39287 (minValue!2211 newMap!16))) lt!39272) (get!1209 (getValueByKey!138 (toList!756 (+!114 lt!39273 (tuple2!2221 lt!39287 (minValue!2211 newMap!16)))) lt!39272)))))

(declare-fun bs!3547 () Bool)

(assert (= bs!3547 d!21469))

(declare-fun m!87871 () Bool)

(assert (=> bs!3547 m!87871))

(assert (=> bs!3547 m!87871))

(declare-fun m!87873 () Bool)

(assert (=> bs!3547 m!87873))

(assert (=> b!83509 d!21469))

(declare-fun d!21471 () Bool)

(assert (=> d!21471 (contains!757 (+!114 lt!39281 (tuple2!2221 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)))) lt!39278)))

(declare-fun lt!39698 () Unit!2445)

(assert (=> d!21471 (= lt!39698 (choose!498 lt!39281 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)) lt!39278))))

(assert (=> d!21471 (contains!757 lt!39281 lt!39278)))

(assert (=> d!21471 (= (addStillContains!57 lt!39281 lt!39274 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)) lt!39278) lt!39698)))

(declare-fun bs!3548 () Bool)

(assert (= bs!3548 d!21471))

(assert (=> bs!3548 m!86471))

(assert (=> bs!3548 m!86471))

(assert (=> bs!3548 m!86483))

(declare-fun m!87875 () Bool)

(assert (=> bs!3548 m!87875))

(declare-fun m!87877 () Bool)

(assert (=> bs!3548 m!87877))

(assert (=> b!83509 d!21471))

(declare-fun d!21473 () Bool)

(assert (=> d!21473 (= (apply!81 (+!114 lt!39284 (tuple2!2221 lt!39276 (minValue!2211 newMap!16))) lt!39290) (get!1209 (getValueByKey!138 (toList!756 (+!114 lt!39284 (tuple2!2221 lt!39276 (minValue!2211 newMap!16)))) lt!39290)))))

(declare-fun bs!3549 () Bool)

(assert (= bs!3549 d!21473))

(declare-fun m!87879 () Bool)

(assert (=> bs!3549 m!87879))

(assert (=> bs!3549 m!87879))

(declare-fun m!87881 () Bool)

(assert (=> bs!3549 m!87881))

(assert (=> b!83509 d!21473))

(declare-fun d!21475 () Bool)

(assert (=> d!21475 (= (apply!81 lt!39284 lt!39290) (get!1209 (getValueByKey!138 (toList!756 lt!39284) lt!39290)))))

(declare-fun bs!3550 () Bool)

(assert (= bs!3550 d!21475))

(declare-fun m!87883 () Bool)

(assert (=> bs!3550 m!87883))

(assert (=> bs!3550 m!87883))

(declare-fun m!87885 () Bool)

(assert (=> bs!3550 m!87885))

(assert (=> b!83509 d!21475))

(declare-fun d!21477 () Bool)

(assert (=> d!21477 (= (apply!81 (+!114 lt!39284 (tuple2!2221 lt!39276 (minValue!2211 newMap!16))) lt!39290) (apply!81 lt!39284 lt!39290))))

(declare-fun lt!39699 () Unit!2445)

(assert (=> d!21477 (= lt!39699 (choose!497 lt!39284 lt!39276 (minValue!2211 newMap!16) lt!39290))))

(declare-fun e!54984 () Bool)

(assert (=> d!21477 e!54984))

(declare-fun res!43512 () Bool)

(assert (=> d!21477 (=> (not res!43512) (not e!54984))))

(assert (=> d!21477 (= res!43512 (contains!757 lt!39284 lt!39290))))

(assert (=> d!21477 (= (addApplyDifferent!57 lt!39284 lt!39276 (minValue!2211 newMap!16) lt!39290) lt!39699)))

(declare-fun b!84289 () Bool)

(assert (=> b!84289 (= e!54984 (not (= lt!39290 lt!39276)))))

(assert (= (and d!21477 res!43512) b!84289))

(declare-fun m!87887 () Bool)

(assert (=> d!21477 m!87887))

(assert (=> d!21477 m!86477))

(assert (=> d!21477 m!86479))

(assert (=> d!21477 m!86477))

(declare-fun m!87889 () Bool)

(assert (=> d!21477 m!87889))

(assert (=> d!21477 m!86495))

(assert (=> b!83509 d!21477))

(declare-fun d!21479 () Bool)

(assert (=> d!21479 (= (apply!81 (+!114 lt!39277 (tuple2!2221 lt!39286 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)))) lt!39270) (apply!81 lt!39277 lt!39270))))

(declare-fun lt!39700 () Unit!2445)

(assert (=> d!21479 (= lt!39700 (choose!497 lt!39277 lt!39286 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)) lt!39270))))

(declare-fun e!54985 () Bool)

(assert (=> d!21479 e!54985))

(declare-fun res!43513 () Bool)

(assert (=> d!21479 (=> (not res!43513) (not e!54985))))

(assert (=> d!21479 (= res!43513 (contains!757 lt!39277 lt!39270))))

(assert (=> d!21479 (= (addApplyDifferent!57 lt!39277 lt!39286 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)) lt!39270) lt!39700)))

(declare-fun b!84290 () Bool)

(assert (=> b!84290 (= e!54985 (not (= lt!39270 lt!39286)))))

(assert (= (and d!21479 res!43513) b!84290))

(declare-fun m!87891 () Bool)

(assert (=> d!21479 m!87891))

(assert (=> d!21479 m!86473))

(assert (=> d!21479 m!86475))

(assert (=> d!21479 m!86473))

(declare-fun m!87893 () Bool)

(assert (=> d!21479 m!87893))

(assert (=> d!21479 m!86489))

(assert (=> b!83509 d!21479))

(declare-fun d!21481 () Bool)

(declare-fun e!54986 () Bool)

(assert (=> d!21481 e!54986))

(declare-fun res!43514 () Bool)

(assert (=> d!21481 (=> (not res!43514) (not e!54986))))

(declare-fun lt!39704 () ListLongMap!1481)

(assert (=> d!21481 (= res!43514 (contains!757 lt!39704 (_1!1120 (tuple2!2221 lt!39286 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))))))))

(declare-fun lt!39701 () List!1547)

(assert (=> d!21481 (= lt!39704 (ListLongMap!1482 lt!39701))))

(declare-fun lt!39702 () Unit!2445)

(declare-fun lt!39703 () Unit!2445)

(assert (=> d!21481 (= lt!39702 lt!39703)))

(assert (=> d!21481 (= (getValueByKey!138 lt!39701 (_1!1120 (tuple2!2221 lt!39286 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))))) (Some!143 (_2!1120 (tuple2!2221 lt!39286 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))))))))

(assert (=> d!21481 (= lt!39703 (lemmaContainsTupThenGetReturnValue!57 lt!39701 (_1!1120 (tuple2!2221 lt!39286 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)))) (_2!1120 (tuple2!2221 lt!39286 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))))))))

(assert (=> d!21481 (= lt!39701 (insertStrictlySorted!59 (toList!756 lt!39277) (_1!1120 (tuple2!2221 lt!39286 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)))) (_2!1120 (tuple2!2221 lt!39286 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))))))))

(assert (=> d!21481 (= (+!114 lt!39277 (tuple2!2221 lt!39286 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)))) lt!39704)))

(declare-fun b!84291 () Bool)

(declare-fun res!43515 () Bool)

(assert (=> b!84291 (=> (not res!43515) (not e!54986))))

(assert (=> b!84291 (= res!43515 (= (getValueByKey!138 (toList!756 lt!39704) (_1!1120 (tuple2!2221 lt!39286 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))))) (Some!143 (_2!1120 (tuple2!2221 lt!39286 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)))))))))

(declare-fun b!84292 () Bool)

(assert (=> b!84292 (= e!54986 (contains!760 (toList!756 lt!39704) (tuple2!2221 lt!39286 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)))))))

(assert (= (and d!21481 res!43514) b!84291))

(assert (= (and b!84291 res!43515) b!84292))

(declare-fun m!87895 () Bool)

(assert (=> d!21481 m!87895))

(declare-fun m!87897 () Bool)

(assert (=> d!21481 m!87897))

(declare-fun m!87899 () Bool)

(assert (=> d!21481 m!87899))

(declare-fun m!87901 () Bool)

(assert (=> d!21481 m!87901))

(declare-fun m!87903 () Bool)

(assert (=> b!84291 m!87903))

(declare-fun m!87905 () Bool)

(assert (=> b!84292 m!87905))

(assert (=> b!83509 d!21481))

(declare-fun d!21483 () Bool)

(assert (=> d!21483 (= (apply!81 lt!39273 lt!39272) (get!1209 (getValueByKey!138 (toList!756 lt!39273) lt!39272)))))

(declare-fun bs!3551 () Bool)

(assert (= bs!3551 d!21483))

(declare-fun m!87907 () Bool)

(assert (=> bs!3551 m!87907))

(assert (=> bs!3551 m!87907))

(declare-fun m!87909 () Bool)

(assert (=> bs!3551 m!87909))

(assert (=> b!83509 d!21483))

(declare-fun d!21485 () Bool)

(declare-fun e!54987 () Bool)

(assert (=> d!21485 e!54987))

(declare-fun res!43516 () Bool)

(assert (=> d!21485 (=> (not res!43516) (not e!54987))))

(declare-fun lt!39708 () ListLongMap!1481)

(assert (=> d!21485 (= res!43516 (contains!757 lt!39708 (_1!1120 (tuple2!2221 lt!39276 (minValue!2211 newMap!16)))))))

(declare-fun lt!39705 () List!1547)

(assert (=> d!21485 (= lt!39708 (ListLongMap!1482 lt!39705))))

(declare-fun lt!39706 () Unit!2445)

(declare-fun lt!39707 () Unit!2445)

(assert (=> d!21485 (= lt!39706 lt!39707)))

(assert (=> d!21485 (= (getValueByKey!138 lt!39705 (_1!1120 (tuple2!2221 lt!39276 (minValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 lt!39276 (minValue!2211 newMap!16)))))))

(assert (=> d!21485 (= lt!39707 (lemmaContainsTupThenGetReturnValue!57 lt!39705 (_1!1120 (tuple2!2221 lt!39276 (minValue!2211 newMap!16))) (_2!1120 (tuple2!2221 lt!39276 (minValue!2211 newMap!16)))))))

(assert (=> d!21485 (= lt!39705 (insertStrictlySorted!59 (toList!756 lt!39284) (_1!1120 (tuple2!2221 lt!39276 (minValue!2211 newMap!16))) (_2!1120 (tuple2!2221 lt!39276 (minValue!2211 newMap!16)))))))

(assert (=> d!21485 (= (+!114 lt!39284 (tuple2!2221 lt!39276 (minValue!2211 newMap!16))) lt!39708)))

(declare-fun b!84293 () Bool)

(declare-fun res!43517 () Bool)

(assert (=> b!84293 (=> (not res!43517) (not e!54987))))

(assert (=> b!84293 (= res!43517 (= (getValueByKey!138 (toList!756 lt!39708) (_1!1120 (tuple2!2221 lt!39276 (minValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 lt!39276 (minValue!2211 newMap!16))))))))

(declare-fun b!84294 () Bool)

(assert (=> b!84294 (= e!54987 (contains!760 (toList!756 lt!39708) (tuple2!2221 lt!39276 (minValue!2211 newMap!16))))))

(assert (= (and d!21485 res!43516) b!84293))

(assert (= (and b!84293 res!43517) b!84294))

(declare-fun m!87911 () Bool)

(assert (=> d!21485 m!87911))

(declare-fun m!87913 () Bool)

(assert (=> d!21485 m!87913))

(declare-fun m!87915 () Bool)

(assert (=> d!21485 m!87915))

(declare-fun m!87917 () Bool)

(assert (=> d!21485 m!87917))

(declare-fun m!87919 () Bool)

(assert (=> b!84293 m!87919))

(declare-fun m!87921 () Bool)

(assert (=> b!84294 m!87921))

(assert (=> b!83509 d!21485))

(declare-fun d!21487 () Bool)

(assert (=> d!21487 (= (apply!81 (+!114 lt!39277 (tuple2!2221 lt!39286 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16)))) lt!39270) (get!1209 (getValueByKey!138 (toList!756 (+!114 lt!39277 (tuple2!2221 lt!39286 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))))) lt!39270)))))

(declare-fun bs!3552 () Bool)

(assert (= bs!3552 d!21487))

(declare-fun m!87923 () Bool)

(assert (=> bs!3552 m!87923))

(assert (=> bs!3552 m!87923))

(declare-fun m!87925 () Bool)

(assert (=> bs!3552 m!87925))

(assert (=> b!83509 d!21487))

(assert (=> b!83629 d!21297))

(assert (=> b!83629 d!20987))

(declare-fun d!21489 () Bool)

(assert (=> d!21489 (= (get!1209 (getValueByKey!138 (toList!756 lt!38971) lt!38964)) (v!2636 (getValueByKey!138 (toList!756 lt!38971) lt!38964)))))

(assert (=> d!21001 d!21489))

(declare-fun b!84296 () Bool)

(declare-fun e!54988 () Option!144)

(declare-fun e!54989 () Option!144)

(assert (=> b!84296 (= e!54988 e!54989)))

(declare-fun c!13572 () Bool)

(assert (=> b!84296 (= c!13572 (and ((_ is Cons!1543) (toList!756 lt!38971)) (not (= (_1!1120 (h!2133 (toList!756 lt!38971))) lt!38964))))))

(declare-fun b!84295 () Bool)

(assert (=> b!84295 (= e!54988 (Some!143 (_2!1120 (h!2133 (toList!756 lt!38971)))))))

(declare-fun b!84298 () Bool)

(assert (=> b!84298 (= e!54989 None!142)))

(declare-fun d!21491 () Bool)

(declare-fun c!13571 () Bool)

(assert (=> d!21491 (= c!13571 (and ((_ is Cons!1543) (toList!756 lt!38971)) (= (_1!1120 (h!2133 (toList!756 lt!38971))) lt!38964)))))

(assert (=> d!21491 (= (getValueByKey!138 (toList!756 lt!38971) lt!38964) e!54988)))

(declare-fun b!84297 () Bool)

(assert (=> b!84297 (= e!54989 (getValueByKey!138 (t!5251 (toList!756 lt!38971)) lt!38964))))

(assert (= (and d!21491 c!13571) b!84295))

(assert (= (and d!21491 (not c!13571)) b!84296))

(assert (= (and b!84296 c!13572) b!84297))

(assert (= (and b!84296 (not c!13572)) b!84298))

(declare-fun m!87927 () Bool)

(assert (=> b!84297 m!87927))

(assert (=> d!21001 d!21491))

(declare-fun d!21493 () Bool)

(declare-fun lt!39709 () Bool)

(assert (=> d!21493 (= lt!39709 (select (content!87 (toList!756 lt!39337)) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun e!54990 () Bool)

(assert (=> d!21493 (= lt!39709 e!54990)))

(declare-fun res!43518 () Bool)

(assert (=> d!21493 (=> (not res!43518) (not e!54990))))

(assert (=> d!21493 (= res!43518 ((_ is Cons!1543) (toList!756 lt!39337)))))

(assert (=> d!21493 (= (contains!760 (toList!756 lt!39337) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!39709)))

(declare-fun b!84299 () Bool)

(declare-fun e!54991 () Bool)

(assert (=> b!84299 (= e!54990 e!54991)))

(declare-fun res!43519 () Bool)

(assert (=> b!84299 (=> res!43519 e!54991)))

(assert (=> b!84299 (= res!43519 (= (h!2133 (toList!756 lt!39337)) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!84300 () Bool)

(assert (=> b!84300 (= e!54991 (contains!760 (t!5251 (toList!756 lt!39337)) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(assert (= (and d!21493 res!43518) b!84299))

(assert (= (and b!84299 (not res!43519)) b!84300))

(declare-fun m!87929 () Bool)

(assert (=> d!21493 m!87929))

(declare-fun m!87931 () Bool)

(assert (=> d!21493 m!87931))

(declare-fun m!87933 () Bool)

(assert (=> b!84300 m!87933))

(assert (=> b!83585 d!21493))

(declare-fun d!21495 () Bool)

(declare-fun res!43520 () Bool)

(declare-fun e!54992 () Bool)

(assert (=> d!21495 (=> res!43520 e!54992)))

(assert (=> d!21495 (= res!43520 (= (select (arr!1912 (_keys!3985 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> d!21495 (= (arrayContainsKey!0 (_keys!3985 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!54992)))

(declare-fun b!84301 () Bool)

(declare-fun e!54993 () Bool)

(assert (=> b!84301 (= e!54992 e!54993)))

(declare-fun res!43521 () Bool)

(assert (=> b!84301 (=> (not res!43521) (not e!54993))))

(assert (=> b!84301 (= res!43521 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!84302 () Bool)

(assert (=> b!84302 (= e!54993 (arrayContainsKey!0 (_keys!3985 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!21495 (not res!43520)) b!84301))

(assert (= (and b!84301 res!43521) b!84302))

(assert (=> d!21495 m!87271))

(assert (=> b!84302 m!85591))

(declare-fun m!87935 () Bool)

(assert (=> b!84302 m!87935))

(assert (=> b!83460 d!21495))

(declare-fun d!21497 () Bool)

(declare-fun e!54994 () Bool)

(assert (=> d!21497 e!54994))

(declare-fun res!43522 () Bool)

(assert (=> d!21497 (=> res!43522 e!54994)))

(declare-fun lt!39710 () Bool)

(assert (=> d!21497 (= res!43522 (not lt!39710))))

(declare-fun lt!39712 () Bool)

(assert (=> d!21497 (= lt!39710 lt!39712)))

(declare-fun lt!39713 () Unit!2445)

(declare-fun e!54995 () Unit!2445)

(assert (=> d!21497 (= lt!39713 e!54995)))

(declare-fun c!13573 () Bool)

(assert (=> d!21497 (= c!13573 lt!39712)))

(assert (=> d!21497 (= lt!39712 (containsKey!142 (toList!756 lt!38967) lt!38966))))

(assert (=> d!21497 (= (contains!757 lt!38967 lt!38966) lt!39710)))

(declare-fun b!84303 () Bool)

(declare-fun lt!39711 () Unit!2445)

(assert (=> b!84303 (= e!54995 lt!39711)))

(assert (=> b!84303 (= lt!39711 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!38967) lt!38966))))

(assert (=> b!84303 (isDefined!92 (getValueByKey!138 (toList!756 lt!38967) lt!38966))))

(declare-fun b!84304 () Bool)

(declare-fun Unit!2502 () Unit!2445)

(assert (=> b!84304 (= e!54995 Unit!2502)))

(declare-fun b!84305 () Bool)

(assert (=> b!84305 (= e!54994 (isDefined!92 (getValueByKey!138 (toList!756 lt!38967) lt!38966)))))

(assert (= (and d!21497 c!13573) b!84303))

(assert (= (and d!21497 (not c!13573)) b!84304))

(assert (= (and d!21497 (not res!43522)) b!84305))

(declare-fun m!87937 () Bool)

(assert (=> d!21497 m!87937))

(declare-fun m!87939 () Bool)

(assert (=> b!84303 m!87939))

(assert (=> b!84303 m!86385))

(assert (=> b!84303 m!86385))

(declare-fun m!87941 () Bool)

(assert (=> b!84303 m!87941))

(assert (=> b!84305 m!86385))

(assert (=> b!84305 m!86385))

(assert (=> b!84305 m!87941))

(assert (=> d!21023 d!21497))

(assert (=> d!21023 d!21003))

(assert (=> d!21023 d!21007))

(assert (=> d!21023 d!21009))

(declare-fun d!21499 () Bool)

(assert (=> d!21499 (= (apply!81 (+!114 lt!38967 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!38966) (apply!81 lt!38967 lt!38966))))

(assert (=> d!21499 true))

(declare-fun _$34!835 () Unit!2445)

(assert (=> d!21499 (= (choose!497 lt!38967 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))) lt!38966) _$34!835)))

(declare-fun bs!3553 () Bool)

(assert (= bs!3553 d!21499))

(assert (=> bs!3553 m!85823))

(assert (=> bs!3553 m!85823))

(assert (=> bs!3553 m!85833))

(assert (=> bs!3553 m!85827))

(assert (=> d!21023 d!21499))

(declare-fun d!21501 () Bool)

(declare-fun res!43523 () Bool)

(declare-fun e!54996 () Bool)

(assert (=> d!21501 (=> res!43523 e!54996)))

(assert (=> d!21501 (= res!43523 (and ((_ is Cons!1543) (toList!756 lt!38999)) (= (_1!1120 (h!2133 (toList!756 lt!38999))) (_1!1120 lt!38750))))))

(assert (=> d!21501 (= (containsKey!142 (toList!756 lt!38999) (_1!1120 lt!38750)) e!54996)))

(declare-fun b!84306 () Bool)

(declare-fun e!54997 () Bool)

(assert (=> b!84306 (= e!54996 e!54997)))

(declare-fun res!43524 () Bool)

(assert (=> b!84306 (=> (not res!43524) (not e!54997))))

(assert (=> b!84306 (= res!43524 (and (or (not ((_ is Cons!1543) (toList!756 lt!38999))) (bvsle (_1!1120 (h!2133 (toList!756 lt!38999))) (_1!1120 lt!38750))) ((_ is Cons!1543) (toList!756 lt!38999)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38999))) (_1!1120 lt!38750))))))

(declare-fun b!84307 () Bool)

(assert (=> b!84307 (= e!54997 (containsKey!142 (t!5251 (toList!756 lt!38999)) (_1!1120 lt!38750)))))

(assert (= (and d!21501 (not res!43523)) b!84306))

(assert (= (and b!84306 res!43524) b!84307))

(declare-fun m!87943 () Bool)

(assert (=> b!84307 m!87943))

(assert (=> d!20941 d!21501))

(declare-fun d!21503 () Bool)

(declare-fun res!43525 () Bool)

(declare-fun e!54998 () Bool)

(assert (=> d!21503 (=> res!43525 e!54998)))

(assert (=> d!21503 (= res!43525 (and ((_ is Cons!1543) lt!39000) (= (_1!1120 (h!2133 lt!39000)) (_1!1120 lt!38750))))))

(assert (=> d!21503 (= (containsKey!142 lt!39000 (_1!1120 lt!38750)) e!54998)))

(declare-fun b!84308 () Bool)

(declare-fun e!54999 () Bool)

(assert (=> b!84308 (= e!54998 e!54999)))

(declare-fun res!43526 () Bool)

(assert (=> b!84308 (=> (not res!43526) (not e!54999))))

(assert (=> b!84308 (= res!43526 (and (or (not ((_ is Cons!1543) lt!39000)) (bvsle (_1!1120 (h!2133 lt!39000)) (_1!1120 lt!38750))) ((_ is Cons!1543) lt!39000) (bvslt (_1!1120 (h!2133 lt!39000)) (_1!1120 lt!38750))))))

(declare-fun b!84309 () Bool)

(assert (=> b!84309 (= e!54999 (containsKey!142 (t!5251 lt!39000) (_1!1120 lt!38750)))))

(assert (= (and d!21503 (not res!43525)) b!84308))

(assert (= (and b!84308 res!43526) b!84309))

(declare-fun m!87945 () Bool)

(assert (=> b!84309 m!87945))

(assert (=> b!83634 d!21503))

(declare-fun d!21505 () Bool)

(assert (=> d!21505 (isDefined!92 (getValueByKey!138 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020))) lt!39019))))

(declare-fun lt!39714 () Unit!2445)

(assert (=> d!21505 (= lt!39714 (choose!496 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020))) lt!39019))))

(declare-fun e!55000 () Bool)

(assert (=> d!21505 e!55000))

(declare-fun res!43527 () Bool)

(assert (=> d!21505 (=> (not res!43527) (not e!55000))))

(assert (=> d!21505 (= res!43527 (isStrictlySorted!292 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020)))))))

(assert (=> d!21505 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020))) lt!39019) lt!39714)))

(declare-fun b!84310 () Bool)

(assert (=> b!84310 (= e!55000 (containsKey!142 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020))) lt!39019))))

(assert (= (and d!21505 res!43527) b!84310))

(assert (=> d!21505 m!86785))

(assert (=> d!21505 m!86785))

(assert (=> d!21505 m!86787))

(declare-fun m!87947 () Bool)

(assert (=> d!21505 m!87947))

(declare-fun m!87949 () Bool)

(assert (=> d!21505 m!87949))

(assert (=> b!84310 m!86781))

(assert (=> b!83652 d!21505))

(declare-fun d!21507 () Bool)

(assert (=> d!21507 (= (isDefined!92 (getValueByKey!138 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020))) lt!39019)) (not (isEmpty!338 (getValueByKey!138 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020))) lt!39019))))))

(declare-fun bs!3554 () Bool)

(assert (= bs!3554 d!21507))

(assert (=> bs!3554 m!86785))

(declare-fun m!87951 () Bool)

(assert (=> bs!3554 m!87951))

(assert (=> b!83652 d!21507))

(declare-fun b!84312 () Bool)

(declare-fun e!55001 () Option!144)

(declare-fun e!55002 () Option!144)

(assert (=> b!84312 (= e!55001 e!55002)))

(declare-fun c!13575 () Bool)

(assert (=> b!84312 (= c!13575 (and ((_ is Cons!1543) (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020)))) (not (= (_1!1120 (h!2133 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020))))) lt!39019))))))

(declare-fun b!84311 () Bool)

(assert (=> b!84311 (= e!55001 (Some!143 (_2!1120 (h!2133 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020)))))))))

(declare-fun b!84314 () Bool)

(assert (=> b!84314 (= e!55002 None!142)))

(declare-fun c!13574 () Bool)

(declare-fun d!21509 () Bool)

(assert (=> d!21509 (= c!13574 (and ((_ is Cons!1543) (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020)))) (= (_1!1120 (h!2133 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020))))) lt!39019)))))

(assert (=> d!21509 (= (getValueByKey!138 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020))) lt!39019) e!55001)))

(declare-fun b!84313 () Bool)

(assert (=> b!84313 (= e!55002 (getValueByKey!138 (t!5251 (toList!756 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020)))) lt!39019))))

(assert (= (and d!21509 c!13574) b!84311))

(assert (= (and d!21509 (not c!13574)) b!84312))

(assert (= (and b!84312 c!13575) b!84313))

(assert (= (and b!84312 (not c!13575)) b!84314))

(declare-fun m!87953 () Bool)

(assert (=> b!84313 m!87953))

(assert (=> b!83652 d!21509))

(declare-fun b!84316 () Bool)

(declare-fun e!55003 () Option!144)

(declare-fun e!55004 () Option!144)

(assert (=> b!84316 (= e!55003 e!55004)))

(declare-fun c!13577 () Bool)

(assert (=> b!84316 (= c!13577 (and ((_ is Cons!1543) (toList!756 lt!39049)) (not (= (_1!1120 (h!2133 (toList!756 lt!39049))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(declare-fun b!84315 () Bool)

(assert (=> b!84315 (= e!55003 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39049)))))))

(declare-fun b!84318 () Bool)

(assert (=> b!84318 (= e!55004 None!142)))

(declare-fun c!13576 () Bool)

(declare-fun d!21511 () Bool)

(assert (=> d!21511 (= c!13576 (and ((_ is Cons!1543) (toList!756 lt!39049)) (= (_1!1120 (h!2133 (toList!756 lt!39049))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21511 (= (getValueByKey!138 (toList!756 lt!39049) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) e!55003)))

(declare-fun b!84317 () Bool)

(assert (=> b!84317 (= e!55004 (getValueByKey!138 (t!5251 (toList!756 lt!39049)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (= (and d!21511 c!13576) b!84315))

(assert (= (and d!21511 (not c!13576)) b!84316))

(assert (= (and b!84316 c!13577) b!84317))

(assert (= (and b!84316 (not c!13577)) b!84318))

(declare-fun m!87955 () Bool)

(assert (=> b!84317 m!87955))

(assert (=> b!83211 d!21511))

(declare-fun d!21513 () Bool)

(declare-fun res!43528 () Bool)

(declare-fun e!55005 () Bool)

(assert (=> d!21513 (=> res!43528 e!55005)))

(assert (=> d!21513 (= res!43528 (and ((_ is Cons!1543) lt!39038) (= (_1!1120 (h!2133 lt!39038)) (_1!1120 lt!38747))))))

(assert (=> d!21513 (= (containsKey!142 lt!39038 (_1!1120 lt!38747)) e!55005)))

(declare-fun b!84319 () Bool)

(declare-fun e!55006 () Bool)

(assert (=> b!84319 (= e!55005 e!55006)))

(declare-fun res!43529 () Bool)

(assert (=> b!84319 (=> (not res!43529) (not e!55006))))

(assert (=> b!84319 (= res!43529 (and (or (not ((_ is Cons!1543) lt!39038)) (bvsle (_1!1120 (h!2133 lt!39038)) (_1!1120 lt!38747))) ((_ is Cons!1543) lt!39038) (bvslt (_1!1120 (h!2133 lt!39038)) (_1!1120 lt!38747))))))

(declare-fun b!84320 () Bool)

(assert (=> b!84320 (= e!55006 (containsKey!142 (t!5251 lt!39038) (_1!1120 lt!38747)))))

(assert (= (and d!21513 (not res!43528)) b!84319))

(assert (= (and b!84319 res!43529) b!84320))

(declare-fun m!87957 () Bool)

(assert (=> b!84320 m!87957))

(assert (=> b!83440 d!21513))

(assert (=> b!83666 d!21205))

(declare-fun b!84322 () Bool)

(declare-fun e!55007 () Option!144)

(declare-fun e!55008 () Option!144)

(assert (=> b!84322 (= e!55007 e!55008)))

(declare-fun c!13579 () Bool)

(assert (=> b!84322 (= c!13579 (and ((_ is Cons!1543) (toList!756 lt!39404)) (not (= (_1!1120 (h!2133 (toList!756 lt!39404))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(declare-fun b!84321 () Bool)

(assert (=> b!84321 (= e!55007 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39404)))))))

(declare-fun b!84324 () Bool)

(assert (=> b!84324 (= e!55008 None!142)))

(declare-fun c!13578 () Bool)

(declare-fun d!21515 () Bool)

(assert (=> d!21515 (= c!13578 (and ((_ is Cons!1543) (toList!756 lt!39404)) (= (_1!1120 (h!2133 (toList!756 lt!39404))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21515 (= (getValueByKey!138 (toList!756 lt!39404) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) e!55007)))

(declare-fun b!84323 () Bool)

(assert (=> b!84323 (= e!55008 (getValueByKey!138 (t!5251 (toList!756 lt!39404)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (= (and d!21515 c!13578) b!84321))

(assert (= (and d!21515 (not c!13578)) b!84322))

(assert (= (and b!84322 c!13579) b!84323))

(assert (= (and b!84322 (not c!13579)) b!84324))

(declare-fun m!87959 () Bool)

(assert (=> b!84323 m!87959))

(assert (=> b!83661 d!21515))

(declare-fun d!21517 () Bool)

(assert (=> d!21517 (arrayContainsKey!0 (_keys!3985 newMap!16) lt!39418 #b00000000000000000000000000000000)))

(declare-fun lt!39717 () Unit!2445)

(declare-fun choose!13 (array!4014 (_ BitVec 64) (_ BitVec 32)) Unit!2445)

(assert (=> d!21517 (= lt!39717 (choose!13 (_keys!3985 newMap!16) lt!39418 #b00000000000000000000000000000000))))

(assert (=> d!21517 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!21517 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3985 newMap!16) lt!39418 #b00000000000000000000000000000000) lt!39717)))

(declare-fun bs!3555 () Bool)

(assert (= bs!3555 d!21517))

(assert (=> bs!3555 m!86857))

(declare-fun m!87961 () Bool)

(assert (=> bs!3555 m!87961))

(assert (=> b!83692 d!21517))

(declare-fun d!21519 () Bool)

(declare-fun res!43530 () Bool)

(declare-fun e!55009 () Bool)

(assert (=> d!21519 (=> res!43530 e!55009)))

(assert (=> d!21519 (= res!43530 (= (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000) lt!39418))))

(assert (=> d!21519 (= (arrayContainsKey!0 (_keys!3985 newMap!16) lt!39418 #b00000000000000000000000000000000) e!55009)))

(declare-fun b!84325 () Bool)

(declare-fun e!55010 () Bool)

(assert (=> b!84325 (= e!55009 e!55010)))

(declare-fun res!43531 () Bool)

(assert (=> b!84325 (=> (not res!43531) (not e!55010))))

(assert (=> b!84325 (= res!43531 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!84326 () Bool)

(assert (=> b!84326 (= e!55010 (arrayContainsKey!0 (_keys!3985 newMap!16) lt!39418 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!21519 (not res!43530)) b!84325))

(assert (= (and b!84325 res!43531) b!84326))

(assert (=> d!21519 m!86049))

(declare-fun m!87963 () Bool)

(assert (=> b!84326 m!87963))

(assert (=> b!83692 d!21519))

(declare-fun b!84327 () Bool)

(declare-fun e!55011 () SeekEntryResult!252)

(declare-fun lt!39720 () SeekEntryResult!252)

(assert (=> b!84327 (= e!55011 (Found!252 (index!3146 lt!39720)))))

(declare-fun b!84328 () Bool)

(declare-fun e!55013 () SeekEntryResult!252)

(assert (=> b!84328 (= e!55013 e!55011)))

(declare-fun lt!39718 () (_ BitVec 64))

(assert (=> b!84328 (= lt!39718 (select (arr!1912 (_keys!3985 newMap!16)) (index!3146 lt!39720)))))

(declare-fun c!13581 () Bool)

(assert (=> b!84328 (= c!13581 (= lt!39718 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84329 () Bool)

(declare-fun e!55012 () SeekEntryResult!252)

(assert (=> b!84329 (= e!55012 (MissingZero!252 (index!3146 lt!39720)))))

(declare-fun d!21521 () Bool)

(declare-fun lt!39719 () SeekEntryResult!252)

(assert (=> d!21521 (and (or ((_ is Undefined!252) lt!39719) (not ((_ is Found!252) lt!39719)) (and (bvsge (index!3145 lt!39719) #b00000000000000000000000000000000) (bvslt (index!3145 lt!39719) (size!2155 (_keys!3985 newMap!16))))) (or ((_ is Undefined!252) lt!39719) ((_ is Found!252) lt!39719) (not ((_ is MissingZero!252) lt!39719)) (and (bvsge (index!3144 lt!39719) #b00000000000000000000000000000000) (bvslt (index!3144 lt!39719) (size!2155 (_keys!3985 newMap!16))))) (or ((_ is Undefined!252) lt!39719) ((_ is Found!252) lt!39719) ((_ is MissingZero!252) lt!39719) (not ((_ is MissingVacant!252) lt!39719)) (and (bvsge (index!3147 lt!39719) #b00000000000000000000000000000000) (bvslt (index!3147 lt!39719) (size!2155 (_keys!3985 newMap!16))))) (or ((_ is Undefined!252) lt!39719) (ite ((_ is Found!252) lt!39719) (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!39719)) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!252) lt!39719) (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3144 lt!39719)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!252) lt!39719) (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3147 lt!39719)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21521 (= lt!39719 e!55013)))

(declare-fun c!13582 () Bool)

(assert (=> d!21521 (= c!13582 (and ((_ is Intermediate!252) lt!39720) (undefined!1064 lt!39720)))))

(assert (=> d!21521 (= lt!39720 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000) (mask!6335 newMap!16)) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000) (_keys!3985 newMap!16) (mask!6335 newMap!16)))))

(assert (=> d!21521 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!21521 (= (seekEntryOrOpen!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000) (_keys!3985 newMap!16) (mask!6335 newMap!16)) lt!39719)))

(declare-fun b!84330 () Bool)

(assert (=> b!84330 (= e!55013 Undefined!252)))

(declare-fun b!84331 () Bool)

(declare-fun c!13580 () Bool)

(assert (=> b!84331 (= c!13580 (= lt!39718 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84331 (= e!55011 e!55012)))

(declare-fun b!84332 () Bool)

(assert (=> b!84332 (= e!55012 (seekKeyOrZeroReturnVacant!0 (x!11861 lt!39720) (index!3146 lt!39720) (index!3146 lt!39720) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000) (_keys!3985 newMap!16) (mask!6335 newMap!16)))))

(assert (= (and d!21521 c!13582) b!84330))

(assert (= (and d!21521 (not c!13582)) b!84328))

(assert (= (and b!84328 c!13581) b!84327))

(assert (= (and b!84328 (not c!13581)) b!84331))

(assert (= (and b!84331 c!13580) b!84329))

(assert (= (and b!84331 (not c!13580)) b!84332))

(declare-fun m!87965 () Bool)

(assert (=> b!84328 m!87965))

(assert (=> d!21521 m!86023))

(declare-fun m!87967 () Bool)

(assert (=> d!21521 m!87967))

(declare-fun m!87969 () Bool)

(assert (=> d!21521 m!87969))

(declare-fun m!87971 () Bool)

(assert (=> d!21521 m!87971))

(declare-fun m!87973 () Bool)

(assert (=> d!21521 m!87973))

(assert (=> d!21521 m!86049))

(declare-fun m!87975 () Bool)

(assert (=> d!21521 m!87975))

(assert (=> d!21521 m!86049))

(assert (=> d!21521 m!87973))

(assert (=> b!84332 m!86049))

(declare-fun m!87977 () Bool)

(assert (=> b!84332 m!87977))

(assert (=> b!83692 d!21521))

(assert (=> bm!7824 d!21037))

(declare-fun d!21523 () Bool)

(assert (=> d!21523 (isDefined!92 (getValueByKey!138 (toList!756 lt!38999) (_1!1120 lt!38750)))))

(declare-fun lt!39721 () Unit!2445)

(assert (=> d!21523 (= lt!39721 (choose!496 (toList!756 lt!38999) (_1!1120 lt!38750)))))

(declare-fun e!55014 () Bool)

(assert (=> d!21523 e!55014))

(declare-fun res!43532 () Bool)

(assert (=> d!21523 (=> (not res!43532) (not e!55014))))

(assert (=> d!21523 (= res!43532 (isStrictlySorted!292 (toList!756 lt!38999)))))

(assert (=> d!21523 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!38999) (_1!1120 lt!38750)) lt!39721)))

(declare-fun b!84333 () Bool)

(assert (=> b!84333 (= e!55014 (containsKey!142 (toList!756 lt!38999) (_1!1120 lt!38750)))))

(assert (= (and d!21523 res!43532) b!84333))

(assert (=> d!21523 m!85863))

(assert (=> d!21523 m!85863))

(assert (=> d!21523 m!86225))

(declare-fun m!87979 () Bool)

(assert (=> d!21523 m!87979))

(declare-fun m!87981 () Bool)

(assert (=> d!21523 m!87981))

(assert (=> b!84333 m!86221))

(assert (=> b!83366 d!21523))

(declare-fun d!21525 () Bool)

(assert (=> d!21525 (= (isDefined!92 (getValueByKey!138 (toList!756 lt!38999) (_1!1120 lt!38750))) (not (isEmpty!338 (getValueByKey!138 (toList!756 lt!38999) (_1!1120 lt!38750)))))))

(declare-fun bs!3556 () Bool)

(assert (= bs!3556 d!21525))

(assert (=> bs!3556 m!85863))

(declare-fun m!87983 () Bool)

(assert (=> bs!3556 m!87983))

(assert (=> b!83366 d!21525))

(assert (=> b!83366 d!20973))

(assert (=> b!83515 d!21181))

(declare-fun d!21527 () Bool)

(declare-fun c!13583 () Bool)

(assert (=> d!21527 (= c!13583 ((_ is Nil!1544) (toList!756 lt!39041)))))

(declare-fun e!55015 () (InoxSet tuple2!2220))

(assert (=> d!21527 (= (content!87 (toList!756 lt!39041)) e!55015)))

(declare-fun b!84334 () Bool)

(assert (=> b!84334 (= e!55015 ((as const (Array tuple2!2220 Bool)) false))))

(declare-fun b!84335 () Bool)

(assert (=> b!84335 (= e!55015 ((_ map or) (store ((as const (Array tuple2!2220 Bool)) false) (h!2133 (toList!756 lt!39041)) true) (content!87 (t!5251 (toList!756 lt!39041)))))))

(assert (= (and d!21527 c!13583) b!84334))

(assert (= (and d!21527 (not c!13583)) b!84335))

(declare-fun m!87985 () Bool)

(assert (=> b!84335 m!87985))

(assert (=> b!84335 m!87007))

(assert (=> d!21075 d!21527))

(declare-fun d!21529 () Bool)

(declare-fun e!55016 () Bool)

(assert (=> d!21529 e!55016))

(declare-fun res!43533 () Bool)

(assert (=> d!21529 (=> res!43533 e!55016)))

(declare-fun lt!39722 () Bool)

(assert (=> d!21529 (= res!43533 (not lt!39722))))

(declare-fun lt!39724 () Bool)

(assert (=> d!21529 (= lt!39722 lt!39724)))

(declare-fun lt!39725 () Unit!2445)

(declare-fun e!55017 () Unit!2445)

(assert (=> d!21529 (= lt!39725 e!55017)))

(declare-fun c!13584 () Bool)

(assert (=> d!21529 (= c!13584 lt!39724)))

(assert (=> d!21529 (= lt!39724 (containsKey!142 (toList!756 lt!39404) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21529 (= (contains!757 lt!39404 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) lt!39722)))

(declare-fun b!84336 () Bool)

(declare-fun lt!39723 () Unit!2445)

(assert (=> b!84336 (= e!55017 lt!39723)))

(assert (=> b!84336 (= lt!39723 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39404) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> b!84336 (isDefined!92 (getValueByKey!138 (toList!756 lt!39404) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun b!84337 () Bool)

(declare-fun Unit!2503 () Unit!2445)

(assert (=> b!84337 (= e!55017 Unit!2503)))

(declare-fun b!84338 () Bool)

(assert (=> b!84338 (= e!55016 (isDefined!92 (getValueByKey!138 (toList!756 lt!39404) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (= (and d!21529 c!13584) b!84336))

(assert (= (and d!21529 (not c!13584)) b!84337))

(assert (= (and d!21529 (not res!43533)) b!84338))

(declare-fun m!87987 () Bool)

(assert (=> d!21529 m!87987))

(declare-fun m!87989 () Bool)

(assert (=> b!84336 m!87989))

(assert (=> b!84336 m!86813))

(assert (=> b!84336 m!86813))

(declare-fun m!87991 () Bool)

(assert (=> b!84336 m!87991))

(assert (=> b!84338 m!86813))

(assert (=> b!84338 m!86813))

(assert (=> b!84338 m!87991))

(assert (=> d!21103 d!21529))

(declare-fun b!84340 () Bool)

(declare-fun e!55018 () Option!144)

(declare-fun e!55019 () Option!144)

(assert (=> b!84340 (= e!55018 e!55019)))

(declare-fun c!13586 () Bool)

(assert (=> b!84340 (= c!13586 (and ((_ is Cons!1543) lt!39401) (not (= (_1!1120 (h!2133 lt!39401)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(declare-fun b!84339 () Bool)

(assert (=> b!84339 (= e!55018 (Some!143 (_2!1120 (h!2133 lt!39401))))))

(declare-fun b!84342 () Bool)

(assert (=> b!84342 (= e!55019 None!142)))

(declare-fun c!13585 () Bool)

(declare-fun d!21531 () Bool)

(assert (=> d!21531 (= c!13585 (and ((_ is Cons!1543) lt!39401) (= (_1!1120 (h!2133 lt!39401)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21531 (= (getValueByKey!138 lt!39401 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) e!55018)))

(declare-fun b!84341 () Bool)

(assert (=> b!84341 (= e!55019 (getValueByKey!138 (t!5251 lt!39401) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (= (and d!21531 c!13585) b!84339))

(assert (= (and d!21531 (not c!13585)) b!84340))

(assert (= (and b!84340 c!13586) b!84341))

(assert (= (and b!84340 (not c!13586)) b!84342))

(declare-fun m!87993 () Bool)

(assert (=> b!84341 m!87993))

(assert (=> d!21103 d!21531))

(declare-fun d!21533 () Bool)

(assert (=> d!21533 (= (getValueByKey!138 lt!39401 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun lt!39726 () Unit!2445)

(assert (=> d!21533 (= lt!39726 (choose!495 lt!39401 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun e!55020 () Bool)

(assert (=> d!21533 e!55020))

(declare-fun res!43534 () Bool)

(assert (=> d!21533 (=> (not res!43534) (not e!55020))))

(assert (=> d!21533 (= res!43534 (isStrictlySorted!292 lt!39401))))

(assert (=> d!21533 (= (lemmaContainsTupThenGetReturnValue!57 lt!39401 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) lt!39726)))

(declare-fun b!84343 () Bool)

(declare-fun res!43535 () Bool)

(assert (=> b!84343 (=> (not res!43535) (not e!55020))))

(assert (=> b!84343 (= res!43535 (containsKey!142 lt!39401 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun b!84344 () Bool)

(assert (=> b!84344 (= e!55020 (contains!760 lt!39401 (tuple2!2221 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (= (and d!21533 res!43534) b!84343))

(assert (= (and b!84343 res!43535) b!84344))

(assert (=> d!21533 m!86807))

(declare-fun m!87995 () Bool)

(assert (=> d!21533 m!87995))

(declare-fun m!87997 () Bool)

(assert (=> d!21533 m!87997))

(declare-fun m!87999 () Bool)

(assert (=> b!84343 m!87999))

(declare-fun m!88001 () Bool)

(assert (=> b!84344 m!88001))

(assert (=> d!21103 d!21533))

(declare-fun bm!7942 () Bool)

(declare-fun call!7946 () List!1547)

(declare-fun call!7945 () List!1547)

(assert (=> bm!7942 (= call!7946 call!7945)))

(declare-fun b!84345 () Bool)

(declare-fun e!55024 () List!1547)

(assert (=> b!84345 (= e!55024 call!7946)))

(declare-fun b!84346 () Bool)

(declare-fun e!55023 () List!1547)

(declare-fun call!7947 () List!1547)

(assert (=> b!84346 (= e!55023 call!7947)))

(declare-fun e!55022 () List!1547)

(declare-fun b!84347 () Bool)

(assert (=> b!84347 (= e!55022 (insertStrictlySorted!59 (t!5251 (toList!756 call!7761)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun b!84348 () Bool)

(assert (=> b!84348 (= e!55023 call!7947)))

(declare-fun b!84349 () Bool)

(declare-fun res!43536 () Bool)

(declare-fun e!55025 () Bool)

(assert (=> b!84349 (=> (not res!43536) (not e!55025))))

(declare-fun lt!39727 () List!1547)

(assert (=> b!84349 (= res!43536 (containsKey!142 lt!39727 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun d!21535 () Bool)

(assert (=> d!21535 e!55025))

(declare-fun res!43537 () Bool)

(assert (=> d!21535 (=> (not res!43537) (not e!55025))))

(assert (=> d!21535 (= res!43537 (isStrictlySorted!292 lt!39727))))

(declare-fun e!55021 () List!1547)

(assert (=> d!21535 (= lt!39727 e!55021)))

(declare-fun c!13588 () Bool)

(assert (=> d!21535 (= c!13588 (and ((_ is Cons!1543) (toList!756 call!7761)) (bvslt (_1!1120 (h!2133 (toList!756 call!7761))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21535 (isStrictlySorted!292 (toList!756 call!7761))))

(assert (=> d!21535 (= (insertStrictlySorted!59 (toList!756 call!7761) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) lt!39727)))

(declare-fun b!84350 () Bool)

(assert (=> b!84350 (= e!55025 (contains!760 lt!39727 (tuple2!2221 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun b!84351 () Bool)

(assert (=> b!84351 (= e!55021 e!55024)))

(declare-fun c!13587 () Bool)

(assert (=> b!84351 (= c!13587 (and ((_ is Cons!1543) (toList!756 call!7761)) (= (_1!1120 (h!2133 (toList!756 call!7761))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun c!13590 () Bool)

(declare-fun b!84352 () Bool)

(assert (=> b!84352 (= e!55022 (ite c!13587 (t!5251 (toList!756 call!7761)) (ite c!13590 (Cons!1543 (h!2133 (toList!756 call!7761)) (t!5251 (toList!756 call!7761))) Nil!1544)))))

(declare-fun b!84353 () Bool)

(assert (=> b!84353 (= c!13590 (and ((_ is Cons!1543) (toList!756 call!7761)) (bvsgt (_1!1120 (h!2133 (toList!756 call!7761))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> b!84353 (= e!55024 e!55023)))

(declare-fun bm!7943 () Bool)

(assert (=> bm!7943 (= call!7945 ($colon$colon!70 e!55022 (ite c!13588 (h!2133 (toList!756 call!7761)) (tuple2!2221 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(declare-fun c!13589 () Bool)

(assert (=> bm!7943 (= c!13589 c!13588)))

(declare-fun b!84354 () Bool)

(assert (=> b!84354 (= e!55021 call!7945)))

(declare-fun bm!7944 () Bool)

(assert (=> bm!7944 (= call!7947 call!7946)))

(assert (= (and d!21535 c!13588) b!84354))

(assert (= (and d!21535 (not c!13588)) b!84351))

(assert (= (and b!84351 c!13587) b!84345))

(assert (= (and b!84351 (not c!13587)) b!84353))

(assert (= (and b!84353 c!13590) b!84348))

(assert (= (and b!84353 (not c!13590)) b!84346))

(assert (= (or b!84348 b!84346) bm!7944))

(assert (= (or b!84345 bm!7944) bm!7942))

(assert (= (or b!84354 bm!7942) bm!7943))

(assert (= (and bm!7943 c!13589) b!84347))

(assert (= (and bm!7943 (not c!13589)) b!84352))

(assert (= (and d!21535 res!43537) b!84349))

(assert (= (and b!84349 res!43536) b!84350))

(declare-fun m!88003 () Bool)

(assert (=> d!21535 m!88003))

(declare-fun m!88005 () Bool)

(assert (=> d!21535 m!88005))

(declare-fun m!88007 () Bool)

(assert (=> b!84347 m!88007))

(declare-fun m!88009 () Bool)

(assert (=> b!84350 m!88009))

(declare-fun m!88011 () Bool)

(assert (=> bm!7943 m!88011))

(declare-fun m!88013 () Bool)

(assert (=> b!84349 m!88013))

(assert (=> d!21103 d!21535))

(assert (=> d!21019 d!20995))

(assert (=> d!21019 d!21001))

(assert (=> d!21019 d!21021))

(declare-fun d!21537 () Bool)

(assert (=> d!21537 (= (apply!81 (+!114 lt!38971 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!38964) (apply!81 lt!38971 lt!38964))))

(assert (=> d!21537 true))

(declare-fun _$34!836 () Unit!2445)

(assert (=> d!21537 (= (choose!497 lt!38971 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) lt!38964) _$34!836)))

(declare-fun bs!3557 () Bool)

(assert (= bs!3557 d!21537))

(assert (=> bs!3557 m!85809))

(assert (=> bs!3557 m!85809))

(assert (=> bs!3557 m!85811))

(assert (=> bs!3557 m!85825))

(assert (=> d!21019 d!21537))

(declare-fun d!21539 () Bool)

(declare-fun e!55026 () Bool)

(assert (=> d!21539 e!55026))

(declare-fun res!43538 () Bool)

(assert (=> d!21539 (=> res!43538 e!55026)))

(declare-fun lt!39728 () Bool)

(assert (=> d!21539 (= res!43538 (not lt!39728))))

(declare-fun lt!39730 () Bool)

(assert (=> d!21539 (= lt!39728 lt!39730)))

(declare-fun lt!39731 () Unit!2445)

(declare-fun e!55027 () Unit!2445)

(assert (=> d!21539 (= lt!39731 e!55027)))

(declare-fun c!13591 () Bool)

(assert (=> d!21539 (= c!13591 lt!39730)))

(assert (=> d!21539 (= lt!39730 (containsKey!142 (toList!756 lt!38971) lt!38964))))

(assert (=> d!21539 (= (contains!757 lt!38971 lt!38964) lt!39728)))

(declare-fun b!84355 () Bool)

(declare-fun lt!39729 () Unit!2445)

(assert (=> b!84355 (= e!55027 lt!39729)))

(assert (=> b!84355 (= lt!39729 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!38971) lt!38964))))

(assert (=> b!84355 (isDefined!92 (getValueByKey!138 (toList!756 lt!38971) lt!38964))))

(declare-fun b!84356 () Bool)

(declare-fun Unit!2504 () Unit!2445)

(assert (=> b!84356 (= e!55027 Unit!2504)))

(declare-fun b!84357 () Bool)

(assert (=> b!84357 (= e!55026 (isDefined!92 (getValueByKey!138 (toList!756 lt!38971) lt!38964)))))

(assert (= (and d!21539 c!13591) b!84355))

(assert (= (and d!21539 (not c!13591)) b!84356))

(assert (= (and d!21539 (not res!43538)) b!84357))

(declare-fun m!88015 () Bool)

(assert (=> d!21539 m!88015))

(declare-fun m!88017 () Bool)

(assert (=> b!84355 m!88017))

(assert (=> b!84355 m!86381))

(assert (=> b!84355 m!86381))

(declare-fun m!88019 () Bool)

(assert (=> b!84355 m!88019))

(assert (=> b!84357 m!86381))

(assert (=> b!84357 m!86381))

(assert (=> b!84357 m!88019))

(assert (=> d!21019 d!21539))

(declare-fun d!21541 () Bool)

(declare-fun res!43539 () Bool)

(declare-fun e!55028 () Bool)

(assert (=> d!21541 (=> res!43539 e!55028)))

(assert (=> d!21541 (= res!43539 (or ((_ is Nil!1544) lt!39432) ((_ is Nil!1544) (t!5251 lt!39432))))))

(assert (=> d!21541 (= (isStrictlySorted!292 lt!39432) e!55028)))

(declare-fun b!84358 () Bool)

(declare-fun e!55029 () Bool)

(assert (=> b!84358 (= e!55028 e!55029)))

(declare-fun res!43540 () Bool)

(assert (=> b!84358 (=> (not res!43540) (not e!55029))))

(assert (=> b!84358 (= res!43540 (bvslt (_1!1120 (h!2133 lt!39432)) (_1!1120 (h!2133 (t!5251 lt!39432)))))))

(declare-fun b!84359 () Bool)

(assert (=> b!84359 (= e!55029 (isStrictlySorted!292 (t!5251 lt!39432)))))

(assert (= (and d!21541 (not res!43539)) b!84358))

(assert (= (and b!84358 res!43540) b!84359))

(declare-fun m!88021 () Bool)

(assert (=> b!84359 m!88021))

(assert (=> d!21141 d!21541))

(declare-fun d!21543 () Bool)

(declare-fun res!43541 () Bool)

(declare-fun e!55030 () Bool)

(assert (=> d!21543 (=> res!43541 e!55030)))

(assert (=> d!21543 (= res!43541 (or ((_ is Nil!1544) (toList!756 lt!38755)) ((_ is Nil!1544) (t!5251 (toList!756 lt!38755)))))))

(assert (=> d!21543 (= (isStrictlySorted!292 (toList!756 lt!38755)) e!55030)))

(declare-fun b!84360 () Bool)

(declare-fun e!55031 () Bool)

(assert (=> b!84360 (= e!55030 e!55031)))

(declare-fun res!43542 () Bool)

(assert (=> b!84360 (=> (not res!43542) (not e!55031))))

(assert (=> b!84360 (= res!43542 (bvslt (_1!1120 (h!2133 (toList!756 lt!38755))) (_1!1120 (h!2133 (t!5251 (toList!756 lt!38755))))))))

(declare-fun b!84361 () Bool)

(assert (=> b!84361 (= e!55031 (isStrictlySorted!292 (t!5251 (toList!756 lt!38755))))))

(assert (= (and d!21543 (not res!43541)) b!84360))

(assert (= (and b!84360 res!43542) b!84361))

(declare-fun m!88023 () Bool)

(assert (=> b!84361 m!88023))

(assert (=> d!21141 d!21543))

(assert (=> b!83435 d!21317))

(assert (=> b!83435 d!20967))

(declare-fun d!21545 () Bool)

(declare-fun e!55032 () Bool)

(assert (=> d!21545 e!55032))

(declare-fun res!43543 () Bool)

(assert (=> d!21545 (=> (not res!43543) (not e!55032))))

(declare-fun lt!39735 () ListLongMap!1481)

(assert (=> d!21545 (= res!43543 (contains!757 lt!39735 (_1!1120 (ite (or c!13346 c!13348) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))))

(declare-fun lt!39732 () List!1547)

(assert (=> d!21545 (= lt!39735 (ListLongMap!1482 lt!39732))))

(declare-fun lt!39733 () Unit!2445)

(declare-fun lt!39734 () Unit!2445)

(assert (=> d!21545 (= lt!39733 lt!39734)))

(assert (=> d!21545 (= (getValueByKey!138 lt!39732 (_1!1120 (ite (or c!13346 c!13348) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))) (Some!143 (_2!1120 (ite (or c!13346 c!13348) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))))

(assert (=> d!21545 (= lt!39734 (lemmaContainsTupThenGetReturnValue!57 lt!39732 (_1!1120 (ite (or c!13346 c!13348) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))) (_2!1120 (ite (or c!13346 c!13348) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))))

(assert (=> d!21545 (= lt!39732 (insertStrictlySorted!59 (toList!756 (ite c!13346 call!7851 (ite c!13348 call!7856 call!7850))) (_1!1120 (ite (or c!13346 c!13348) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))) (_2!1120 (ite (or c!13346 c!13348) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))))

(assert (=> d!21545 (= (+!114 (ite c!13346 call!7851 (ite c!13348 call!7856 call!7850)) (ite (or c!13346 c!13348) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))) lt!39735)))

(declare-fun b!84362 () Bool)

(declare-fun res!43544 () Bool)

(assert (=> b!84362 (=> (not res!43544) (not e!55032))))

(assert (=> b!84362 (= res!43544 (= (getValueByKey!138 (toList!756 lt!39735) (_1!1120 (ite (or c!13346 c!13348) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))) (Some!143 (_2!1120 (ite (or c!13346 c!13348) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))))

(declare-fun b!84363 () Bool)

(assert (=> b!84363 (= e!55032 (contains!760 (toList!756 lt!39735) (ite (or c!13346 c!13348) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13216 c!13218) lt!38748 (zeroValue!2211 newMap!16))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))

(assert (= (and d!21545 res!43543) b!84362))

(assert (= (and b!84362 res!43544) b!84363))

(declare-fun m!88025 () Bool)

(assert (=> d!21545 m!88025))

(declare-fun m!88027 () Bool)

(assert (=> d!21545 m!88027))

(declare-fun m!88029 () Bool)

(assert (=> d!21545 m!88029))

(declare-fun m!88031 () Bool)

(assert (=> d!21545 m!88031))

(declare-fun m!88033 () Bool)

(assert (=> b!84362 m!88033))

(declare-fun m!88035 () Bool)

(assert (=> b!84363 m!88035))

(assert (=> bm!7849 d!21545))

(declare-fun d!21547 () Bool)

(assert (=> d!21547 (= (map!1190 (_2!1121 lt!39166)) (getCurrentListMap!440 (_keys!3985 (_2!1121 lt!39166)) (_values!2300 (_2!1121 lt!39166)) (mask!6335 (_2!1121 lt!39166)) (extraKeys!2160 (_2!1121 lt!39166)) (zeroValue!2211 (_2!1121 lt!39166)) (minValue!2211 (_2!1121 lt!39166)) #b00000000000000000000000000000000 (defaultEntry!2317 (_2!1121 lt!39166))))))

(declare-fun bs!3558 () Bool)

(assert (= bs!3558 d!21547))

(declare-fun m!88037 () Bool)

(assert (=> bs!3558 m!88037))

(assert (=> b!83306 d!21547))

(declare-fun d!21549 () Bool)

(declare-fun e!55033 () Bool)

(assert (=> d!21549 e!55033))

(declare-fun res!43545 () Bool)

(assert (=> d!21549 (=> (not res!43545) (not e!55033))))

(declare-fun lt!39739 () ListLongMap!1481)

(assert (=> d!21549 (= res!43545 (contains!757 lt!39739 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun lt!39736 () List!1547)

(assert (=> d!21549 (= lt!39739 (ListLongMap!1482 lt!39736))))

(declare-fun lt!39737 () Unit!2445)

(declare-fun lt!39738 () Unit!2445)

(assert (=> d!21549 (= lt!39737 lt!39738)))

(assert (=> d!21549 (= (getValueByKey!138 lt!39736 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21549 (= lt!39738 (lemmaContainsTupThenGetReturnValue!57 lt!39736 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21549 (= lt!39736 (insertStrictlySorted!59 (toList!756 (map!1190 newMap!16)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21549 (= (+!114 (map!1190 newMap!16) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) lt!39739)))

(declare-fun b!84364 () Bool)

(declare-fun res!43546 () Bool)

(assert (=> b!84364 (=> (not res!43546) (not e!55033))))

(assert (=> b!84364 (= res!43546 (= (getValueByKey!138 (toList!756 lt!39739) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun b!84365 () Bool)

(assert (=> b!84365 (= e!55033 (contains!760 (toList!756 lt!39739) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(assert (= (and d!21549 res!43545) b!84364))

(assert (= (and b!84364 res!43546) b!84365))

(declare-fun m!88039 () Bool)

(assert (=> d!21549 m!88039))

(declare-fun m!88041 () Bool)

(assert (=> d!21549 m!88041))

(declare-fun m!88043 () Bool)

(assert (=> d!21549 m!88043))

(declare-fun m!88045 () Bool)

(assert (=> d!21549 m!88045))

(declare-fun m!88047 () Bool)

(assert (=> b!84364 m!88047))

(declare-fun m!88049 () Bool)

(assert (=> b!84365 m!88049))

(assert (=> b!83306 d!21549))

(assert (=> b!83306 d!20871))

(declare-fun d!21551 () Bool)

(declare-fun res!43547 () Bool)

(declare-fun e!55034 () Bool)

(assert (=> d!21551 (=> res!43547 e!55034)))

(assert (=> d!21551 (= res!43547 (and ((_ is Cons!1543) (toList!756 lt!39029)) (= (_1!1120 (h!2133 (toList!756 lt!39029))) (_1!1120 lt!38750))))))

(assert (=> d!21551 (= (containsKey!142 (toList!756 lt!39029) (_1!1120 lt!38750)) e!55034)))

(declare-fun b!84366 () Bool)

(declare-fun e!55035 () Bool)

(assert (=> b!84366 (= e!55034 e!55035)))

(declare-fun res!43548 () Bool)

(assert (=> b!84366 (=> (not res!43548) (not e!55035))))

(assert (=> b!84366 (= res!43548 (and (or (not ((_ is Cons!1543) (toList!756 lt!39029))) (bvsle (_1!1120 (h!2133 (toList!756 lt!39029))) (_1!1120 lt!38750))) ((_ is Cons!1543) (toList!756 lt!39029)) (bvslt (_1!1120 (h!2133 (toList!756 lt!39029))) (_1!1120 lt!38750))))))

(declare-fun b!84367 () Bool)

(assert (=> b!84367 (= e!55035 (containsKey!142 (t!5251 (toList!756 lt!39029)) (_1!1120 lt!38750)))))

(assert (= (and d!21551 (not res!43547)) b!84366))

(assert (= (and b!84366 res!43548) b!84367))

(declare-fun m!88051 () Bool)

(assert (=> b!84367 m!88051))

(assert (=> d!20933 d!21551))

(declare-fun d!21553 () Bool)

(declare-fun lt!39740 () Bool)

(assert (=> d!21553 (= lt!39740 (select (content!87 lt!39000) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(declare-fun e!55036 () Bool)

(assert (=> d!21553 (= lt!39740 e!55036)))

(declare-fun res!43549 () Bool)

(assert (=> d!21553 (=> (not res!43549) (not e!55036))))

(assert (=> d!21553 (= res!43549 ((_ is Cons!1543) lt!39000))))

(assert (=> d!21553 (= (contains!760 lt!39000 (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))) lt!39740)))

(declare-fun b!84368 () Bool)

(declare-fun e!55037 () Bool)

(assert (=> b!84368 (= e!55036 e!55037)))

(declare-fun res!43550 () Bool)

(assert (=> b!84368 (=> res!43550 e!55037)))

(assert (=> b!84368 (= res!43550 (= (h!2133 lt!39000) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(declare-fun b!84369 () Bool)

(assert (=> b!84369 (= e!55037 (contains!760 (t!5251 lt!39000) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(assert (= (and d!21553 res!43549) b!84368))

(assert (= (and b!84368 (not res!43550)) b!84369))

(declare-fun m!88053 () Bool)

(assert (=> d!21553 m!88053))

(declare-fun m!88055 () Bool)

(assert (=> d!21553 m!88055))

(declare-fun m!88057 () Bool)

(assert (=> b!84369 m!88057))

(assert (=> b!83635 d!21553))

(declare-fun d!21555 () Bool)

(assert (=> d!21555 (= (isEmpty!337 lt!39408) (isEmpty!339 (toList!756 lt!39408)))))

(declare-fun bs!3559 () Bool)

(assert (= bs!3559 d!21555))

(declare-fun m!88059 () Bool)

(assert (=> bs!3559 m!88059))

(assert (=> b!83674 d!21555))

(declare-fun b!84371 () Bool)

(declare-fun e!55038 () Option!144)

(declare-fun e!55039 () Option!144)

(assert (=> b!84371 (= e!55038 e!55039)))

(declare-fun c!13593 () Bool)

(assert (=> b!84371 (= c!13593 (and ((_ is Cons!1543) (t!5251 lt!38996)) (not (= (_1!1120 (h!2133 (t!5251 lt!38996))) (_1!1120 lt!38750)))))))

(declare-fun b!84370 () Bool)

(assert (=> b!84370 (= e!55038 (Some!143 (_2!1120 (h!2133 (t!5251 lt!38996)))))))

(declare-fun b!84373 () Bool)

(assert (=> b!84373 (= e!55039 None!142)))

(declare-fun d!21557 () Bool)

(declare-fun c!13592 () Bool)

(assert (=> d!21557 (= c!13592 (and ((_ is Cons!1543) (t!5251 lt!38996)) (= (_1!1120 (h!2133 (t!5251 lt!38996))) (_1!1120 lt!38750))))))

(assert (=> d!21557 (= (getValueByKey!138 (t!5251 lt!38996) (_1!1120 lt!38750)) e!55038)))

(declare-fun b!84372 () Bool)

(assert (=> b!84372 (= e!55039 (getValueByKey!138 (t!5251 (t!5251 lt!38996)) (_1!1120 lt!38750)))))

(assert (= (and d!21557 c!13592) b!84370))

(assert (= (and d!21557 (not c!13592)) b!84371))

(assert (= (and b!84371 c!13593) b!84372))

(assert (= (and b!84371 (not c!13593)) b!84373))

(declare-fun m!88061 () Bool)

(assert (=> b!84372 m!88061))

(assert (=> b!83371 d!21557))

(assert (=> b!83556 d!21169))

(assert (=> b!83556 d!20927))

(declare-fun d!21559 () Bool)

(declare-fun res!43551 () Bool)

(declare-fun e!55040 () Bool)

(assert (=> d!21559 (=> res!43551 e!55040)))

(assert (=> d!21559 (= res!43551 (and ((_ is Cons!1543) lt!39211) (= (_1!1120 (h!2133 lt!39211)) (_1!1120 lt!38750))))))

(assert (=> d!21559 (= (containsKey!142 lt!39211 (_1!1120 lt!38750)) e!55040)))

(declare-fun b!84374 () Bool)

(declare-fun e!55041 () Bool)

(assert (=> b!84374 (= e!55040 e!55041)))

(declare-fun res!43552 () Bool)

(assert (=> b!84374 (=> (not res!43552) (not e!55041))))

(assert (=> b!84374 (= res!43552 (and (or (not ((_ is Cons!1543) lt!39211)) (bvsle (_1!1120 (h!2133 lt!39211)) (_1!1120 lt!38750))) ((_ is Cons!1543) lt!39211) (bvslt (_1!1120 (h!2133 lt!39211)) (_1!1120 lt!38750))))))

(declare-fun b!84375 () Bool)

(assert (=> b!84375 (= e!55041 (containsKey!142 (t!5251 lt!39211) (_1!1120 lt!38750)))))

(assert (= (and d!21559 (not res!43551)) b!84374))

(assert (= (and b!84374 res!43552) b!84375))

(declare-fun m!88063 () Bool)

(assert (=> b!84375 m!88063))

(assert (=> b!83379 d!21559))

(declare-fun b!84377 () Bool)

(declare-fun e!55042 () Option!144)

(declare-fun e!55043 () Option!144)

(assert (=> b!84377 (= e!55042 e!55043)))

(declare-fun c!13595 () Bool)

(assert (=> b!84377 (= c!13595 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!39033))) (not (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!39033)))) (_1!1120 lt!38760)))))))

(declare-fun b!84376 () Bool)

(assert (=> b!84376 (= e!55042 (Some!143 (_2!1120 (h!2133 (t!5251 (toList!756 lt!39033))))))))

(declare-fun b!84379 () Bool)

(assert (=> b!84379 (= e!55043 None!142)))

(declare-fun d!21561 () Bool)

(declare-fun c!13594 () Bool)

(assert (=> d!21561 (= c!13594 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!39033))) (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!39033)))) (_1!1120 lt!38760))))))

(assert (=> d!21561 (= (getValueByKey!138 (t!5251 (toList!756 lt!39033)) (_1!1120 lt!38760)) e!55042)))

(declare-fun b!84378 () Bool)

(assert (=> b!84378 (= e!55043 (getValueByKey!138 (t!5251 (t!5251 (toList!756 lt!39033))) (_1!1120 lt!38760)))))

(assert (= (and d!21561 c!13594) b!84376))

(assert (= (and d!21561 (not c!13594)) b!84377))

(assert (= (and b!84377 c!13595) b!84378))

(assert (= (and b!84377 (not c!13595)) b!84379))

(declare-fun m!88065 () Bool)

(assert (=> b!84378 m!88065))

(assert (=> b!83707 d!21561))

(declare-fun d!21563 () Bool)

(declare-fun res!43554 () Bool)

(declare-fun e!55046 () Bool)

(assert (=> d!21563 (=> res!43554 e!55046)))

(assert (=> d!21563 (= res!43554 (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(assert (=> d!21563 (= (arrayNoDuplicates!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000000 Nil!1545) e!55046)))

(declare-fun b!84380 () Bool)

(declare-fun e!55047 () Bool)

(assert (=> b!84380 (= e!55046 e!55047)))

(declare-fun res!43553 () Bool)

(assert (=> b!84380 (=> (not res!43553) (not e!55047))))

(declare-fun e!55045 () Bool)

(assert (=> b!84380 (= res!43553 (not e!55045))))

(declare-fun res!43555 () Bool)

(assert (=> b!84380 (=> (not res!43555) (not e!55045))))

(assert (=> b!84380 (= res!43555 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!84381 () Bool)

(declare-fun e!55044 () Bool)

(declare-fun call!7948 () Bool)

(assert (=> b!84381 (= e!55044 call!7948)))

(declare-fun bm!7945 () Bool)

(declare-fun c!13596 () Bool)

(assert (=> bm!7945 (= call!7948 (arrayNoDuplicates!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!13596 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) #b00000000000000000000000000000000) Nil!1545) Nil!1545)))))

(declare-fun b!84382 () Bool)

(assert (=> b!84382 (= e!55047 e!55044)))

(assert (=> b!84382 (= c!13596 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!84383 () Bool)

(assert (=> b!84383 (= e!55045 (contains!759 Nil!1545 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!84384 () Bool)

(assert (=> b!84384 (= e!55044 call!7948)))

(assert (= (and d!21563 (not res!43554)) b!84380))

(assert (= (and b!84380 res!43555) b!84383))

(assert (= (and b!84380 res!43553) b!84382))

(assert (= (and b!84382 c!13596) b!84381))

(assert (= (and b!84382 (not c!13596)) b!84384))

(assert (= (or b!84381 b!84384) bm!7945))

(assert (=> b!84380 m!87121))

(assert (=> b!84380 m!87121))

(assert (=> b!84380 m!87129))

(assert (=> bm!7945 m!87121))

(declare-fun m!88067 () Bool)

(assert (=> bm!7945 m!88067))

(assert (=> b!84382 m!87121))

(assert (=> b!84382 m!87121))

(assert (=> b!84382 m!87129))

(assert (=> b!84383 m!87121))

(assert (=> b!84383 m!87121))

(declare-fun m!88069 () Bool)

(assert (=> b!84383 m!88069))

(assert (=> b!83251 d!21563))

(declare-fun d!21565 () Bool)

(declare-fun res!43556 () Bool)

(declare-fun e!55048 () Bool)

(assert (=> d!21565 (=> res!43556 e!55048)))

(assert (=> d!21565 (= res!43556 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38757))) (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!38757)))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))))

(assert (=> d!21565 (= (containsKey!142 (t!5251 (toList!756 lt!38757)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) e!55048)))

(declare-fun b!84385 () Bool)

(declare-fun e!55049 () Bool)

(assert (=> b!84385 (= e!55048 e!55049)))

(declare-fun res!43557 () Bool)

(assert (=> b!84385 (=> (not res!43557) (not e!55049))))

(assert (=> b!84385 (= res!43557 (and (or (not ((_ is Cons!1543) (t!5251 (toList!756 lt!38757)))) (bvsle (_1!1120 (h!2133 (t!5251 (toList!756 lt!38757)))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))) ((_ is Cons!1543) (t!5251 (toList!756 lt!38757))) (bvslt (_1!1120 (h!2133 (t!5251 (toList!756 lt!38757)))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))))

(declare-fun b!84386 () Bool)

(assert (=> b!84386 (= e!55049 (containsKey!142 (t!5251 (t!5251 (toList!756 lt!38757))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (= (and d!21565 (not res!43556)) b!84385))

(assert (= (and b!84385 res!43557) b!84386))

(assert (=> b!84386 m!85591))

(declare-fun m!88071 () Bool)

(assert (=> b!84386 m!88071))

(assert (=> b!83466 d!21565))

(declare-fun d!21567 () Bool)

(assert (=> d!21567 (= ($colon$colon!70 e!54416 (ite c!13301 (h!2133 (toList!756 lt!38755)) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750)))) (Cons!1543 (ite c!13301 (h!2133 (toList!756 lt!38755)) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))) e!54416))))

(assert (=> bm!7832 d!21567))

(declare-fun d!21569 () Bool)

(declare-fun e!55050 () Bool)

(assert (=> d!21569 e!55050))

(declare-fun res!43558 () Bool)

(assert (=> d!21569 (=> res!43558 e!55050)))

(declare-fun lt!39741 () Bool)

(assert (=> d!21569 (= res!43558 (not lt!39741))))

(declare-fun lt!39743 () Bool)

(assert (=> d!21569 (= lt!39741 lt!39743)))

(declare-fun lt!39744 () Unit!2445)

(declare-fun e!55051 () Unit!2445)

(assert (=> d!21569 (= lt!39744 e!55051)))

(declare-fun c!13597 () Bool)

(assert (=> d!21569 (= c!13597 lt!39743)))

(assert (=> d!21569 (= lt!39743 (containsKey!142 (toList!756 lt!39049) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21569 (= (contains!757 lt!39049 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) lt!39741)))

(declare-fun b!84387 () Bool)

(declare-fun lt!39742 () Unit!2445)

(assert (=> b!84387 (= e!55051 lt!39742)))

(assert (=> b!84387 (= lt!39742 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39049) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> b!84387 (isDefined!92 (getValueByKey!138 (toList!756 lt!39049) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun b!84388 () Bool)

(declare-fun Unit!2505 () Unit!2445)

(assert (=> b!84388 (= e!55051 Unit!2505)))

(declare-fun b!84389 () Bool)

(assert (=> b!84389 (= e!55050 (isDefined!92 (getValueByKey!138 (toList!756 lt!39049) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (= (and d!21569 c!13597) b!84387))

(assert (= (and d!21569 (not c!13597)) b!84388))

(assert (= (and d!21569 (not res!43558)) b!84389))

(declare-fun m!88073 () Bool)

(assert (=> d!21569 m!88073))

(declare-fun m!88075 () Bool)

(assert (=> b!84387 m!88075))

(assert (=> b!84387 m!85981))

(assert (=> b!84387 m!85981))

(declare-fun m!88077 () Bool)

(assert (=> b!84387 m!88077))

(assert (=> b!84389 m!85981))

(assert (=> b!84389 m!85981))

(assert (=> b!84389 m!88077))

(assert (=> d!20901 d!21569))

(declare-fun b!84391 () Bool)

(declare-fun e!55052 () Option!144)

(declare-fun e!55053 () Option!144)

(assert (=> b!84391 (= e!55052 e!55053)))

(declare-fun c!13599 () Bool)

(assert (=> b!84391 (= c!13599 (and ((_ is Cons!1543) lt!39046) (not (= (_1!1120 (h!2133 lt!39046)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(declare-fun b!84390 () Bool)

(assert (=> b!84390 (= e!55052 (Some!143 (_2!1120 (h!2133 lt!39046))))))

(declare-fun b!84393 () Bool)

(assert (=> b!84393 (= e!55053 None!142)))

(declare-fun d!21571 () Bool)

(declare-fun c!13598 () Bool)

(assert (=> d!21571 (= c!13598 (and ((_ is Cons!1543) lt!39046) (= (_1!1120 (h!2133 lt!39046)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21571 (= (getValueByKey!138 lt!39046 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) e!55052)))

(declare-fun b!84392 () Bool)

(assert (=> b!84392 (= e!55053 (getValueByKey!138 (t!5251 lt!39046) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (= (and d!21571 c!13598) b!84390))

(assert (= (and d!21571 (not c!13598)) b!84391))

(assert (= (and b!84391 c!13599) b!84392))

(assert (= (and b!84391 (not c!13599)) b!84393))

(declare-fun m!88079 () Bool)

(assert (=> b!84392 m!88079))

(assert (=> d!20901 d!21571))

(declare-fun d!21573 () Bool)

(assert (=> d!21573 (= (getValueByKey!138 lt!39046 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun lt!39745 () Unit!2445)

(assert (=> d!21573 (= lt!39745 (choose!495 lt!39046 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun e!55054 () Bool)

(assert (=> d!21573 e!55054))

(declare-fun res!43559 () Bool)

(assert (=> d!21573 (=> (not res!43559) (not e!55054))))

(assert (=> d!21573 (= res!43559 (isStrictlySorted!292 lt!39046))))

(assert (=> d!21573 (= (lemmaContainsTupThenGetReturnValue!57 lt!39046 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) lt!39745)))

(declare-fun b!84394 () Bool)

(declare-fun res!43560 () Bool)

(assert (=> b!84394 (=> (not res!43560) (not e!55054))))

(assert (=> b!84394 (= res!43560 (containsKey!142 lt!39046 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun b!84395 () Bool)

(assert (=> b!84395 (= e!55054 (contains!760 lt!39046 (tuple2!2221 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (= (and d!21573 res!43559) b!84394))

(assert (= (and b!84394 res!43560) b!84395))

(assert (=> d!21573 m!85975))

(declare-fun m!88081 () Bool)

(assert (=> d!21573 m!88081))

(declare-fun m!88083 () Bool)

(assert (=> d!21573 m!88083))

(declare-fun m!88085 () Bool)

(assert (=> b!84394 m!88085))

(declare-fun m!88087 () Bool)

(assert (=> b!84395 m!88087))

(assert (=> d!20901 d!21573))

(declare-fun bm!7946 () Bool)

(declare-fun call!7950 () List!1547)

(declare-fun call!7949 () List!1547)

(assert (=> bm!7946 (= call!7950 call!7949)))

(declare-fun b!84396 () Bool)

(declare-fun e!55058 () List!1547)

(assert (=> b!84396 (= e!55058 call!7950)))

(declare-fun b!84397 () Bool)

(declare-fun e!55057 () List!1547)

(declare-fun call!7951 () List!1547)

(assert (=> b!84397 (= e!55057 call!7951)))

(declare-fun e!55056 () List!1547)

(declare-fun b!84398 () Bool)

(assert (=> b!84398 (= e!55056 (insertStrictlySorted!59 (t!5251 (toList!756 (+!114 lt!38754 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun b!84399 () Bool)

(assert (=> b!84399 (= e!55057 call!7951)))

(declare-fun b!84400 () Bool)

(declare-fun res!43561 () Bool)

(declare-fun e!55059 () Bool)

(assert (=> b!84400 (=> (not res!43561) (not e!55059))))

(declare-fun lt!39746 () List!1547)

(assert (=> b!84400 (= res!43561 (containsKey!142 lt!39746 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun d!21575 () Bool)

(assert (=> d!21575 e!55059))

(declare-fun res!43562 () Bool)

(assert (=> d!21575 (=> (not res!43562) (not e!55059))))

(assert (=> d!21575 (= res!43562 (isStrictlySorted!292 lt!39746))))

(declare-fun e!55055 () List!1547)

(assert (=> d!21575 (= lt!39746 e!55055)))

(declare-fun c!13601 () Bool)

(assert (=> d!21575 (= c!13601 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38754 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) (bvslt (_1!1120 (h!2133 (toList!756 (+!114 lt!38754 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21575 (isStrictlySorted!292 (toList!756 (+!114 lt!38754 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21575 (= (insertStrictlySorted!59 (toList!756 (+!114 lt!38754 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) lt!39746)))

(declare-fun b!84401 () Bool)

(assert (=> b!84401 (= e!55059 (contains!760 lt!39746 (tuple2!2221 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun b!84402 () Bool)

(assert (=> b!84402 (= e!55055 e!55058)))

(declare-fun c!13600 () Bool)

(assert (=> b!84402 (= c!13600 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38754 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) (= (_1!1120 (h!2133 (toList!756 (+!114 lt!38754 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun b!84403 () Bool)

(declare-fun c!13603 () Bool)

(assert (=> b!84403 (= e!55056 (ite c!13600 (t!5251 (toList!756 (+!114 lt!38754 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) (ite c!13603 (Cons!1543 (h!2133 (toList!756 (+!114 lt!38754 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) (t!5251 (toList!756 (+!114 lt!38754 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))) Nil!1544)))))

(declare-fun b!84404 () Bool)

(assert (=> b!84404 (= c!13603 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38754 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) (bvsgt (_1!1120 (h!2133 (toList!756 (+!114 lt!38754 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> b!84404 (= e!55058 e!55057)))

(declare-fun bm!7947 () Bool)

(assert (=> bm!7947 (= call!7949 ($colon$colon!70 e!55056 (ite c!13601 (h!2133 (toList!756 (+!114 lt!38754 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) (tuple2!2221 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(declare-fun c!13602 () Bool)

(assert (=> bm!7947 (= c!13602 c!13601)))

(declare-fun b!84405 () Bool)

(assert (=> b!84405 (= e!55055 call!7949)))

(declare-fun bm!7948 () Bool)

(assert (=> bm!7948 (= call!7951 call!7950)))

(assert (= (and d!21575 c!13601) b!84405))

(assert (= (and d!21575 (not c!13601)) b!84402))

(assert (= (and b!84402 c!13600) b!84396))

(assert (= (and b!84402 (not c!13600)) b!84404))

(assert (= (and b!84404 c!13603) b!84399))

(assert (= (and b!84404 (not c!13603)) b!84397))

(assert (= (or b!84399 b!84397) bm!7948))

(assert (= (or b!84396 bm!7948) bm!7946))

(assert (= (or b!84405 bm!7946) bm!7947))

(assert (= (and bm!7947 c!13602) b!84398))

(assert (= (and bm!7947 (not c!13602)) b!84403))

(assert (= (and d!21575 res!43562) b!84400))

(assert (= (and b!84400 res!43561) b!84401))

(declare-fun m!88089 () Bool)

(assert (=> d!21575 m!88089))

(declare-fun m!88091 () Bool)

(assert (=> d!21575 m!88091))

(declare-fun m!88093 () Bool)

(assert (=> b!84398 m!88093))

(declare-fun m!88095 () Bool)

(assert (=> b!84401 m!88095))

(declare-fun m!88097 () Bool)

(assert (=> bm!7947 m!88097))

(declare-fun m!88099 () Bool)

(assert (=> b!84400 m!88099))

(assert (=> d!20901 d!21575))

(declare-fun d!21577 () Bool)

(declare-fun res!43563 () Bool)

(declare-fun e!55060 () Bool)

(assert (=> d!21577 (=> res!43563 e!55060)))

(assert (=> d!21577 (= res!43563 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))) (= (_1!1120 (h!2133 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))) lt!38972)))))

(assert (=> d!21577 (= (containsKey!142 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38972) e!55060)))

(declare-fun b!84406 () Bool)

(declare-fun e!55061 () Bool)

(assert (=> b!84406 (= e!55060 e!55061)))

(declare-fun res!43564 () Bool)

(assert (=> b!84406 (=> (not res!43564) (not e!55061))))

(assert (=> b!84406 (= res!43564 (and (or (not ((_ is Cons!1543) (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))) (bvsle (_1!1120 (h!2133 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))) lt!38972)) ((_ is Cons!1543) (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))) (bvslt (_1!1120 (h!2133 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))) lt!38972)))))

(declare-fun b!84407 () Bool)

(assert (=> b!84407 (= e!55061 (containsKey!142 (t!5251 (toList!756 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))) lt!38972))))

(assert (= (and d!21577 (not res!43563)) b!84406))

(assert (= (and b!84406 res!43564) b!84407))

(declare-fun m!88101 () Bool)

(assert (=> b!84407 m!88101))

(assert (=> d!21011 d!21577))

(declare-fun d!21579 () Bool)

(declare-fun res!43565 () Bool)

(declare-fun e!55062 () Bool)

(assert (=> d!21579 (=> res!43565 e!55062)))

(assert (=> d!21579 (= res!43565 (and ((_ is Cons!1543) lt!39042) (= (_1!1120 (h!2133 lt!39042)) (_1!1120 lt!38747))))))

(assert (=> d!21579 (= (containsKey!142 lt!39042 (_1!1120 lt!38747)) e!55062)))

(declare-fun b!84408 () Bool)

(declare-fun e!55063 () Bool)

(assert (=> b!84408 (= e!55062 e!55063)))

(declare-fun res!43566 () Bool)

(assert (=> b!84408 (=> (not res!43566) (not e!55063))))

(assert (=> b!84408 (= res!43566 (and (or (not ((_ is Cons!1543) lt!39042)) (bvsle (_1!1120 (h!2133 lt!39042)) (_1!1120 lt!38747))) ((_ is Cons!1543) lt!39042) (bvslt (_1!1120 (h!2133 lt!39042)) (_1!1120 lt!38747))))))

(declare-fun b!84409 () Bool)

(assert (=> b!84409 (= e!55063 (containsKey!142 (t!5251 lt!39042) (_1!1120 lt!38747)))))

(assert (= (and d!21579 (not res!43565)) b!84408))

(assert (= (and b!84408 res!43566) b!84409))

(declare-fun m!88103 () Bool)

(assert (=> b!84409 m!88103))

(assert (=> b!83561 d!21579))

(assert (=> d!21087 d!21085))

(declare-fun d!21581 () Bool)

(assert (=> d!21581 (= (getValueByKey!138 lt!39000 (_1!1120 lt!38750)) (Some!143 (_2!1120 lt!38750)))))

(assert (=> d!21581 true))

(declare-fun _$22!411 () Unit!2445)

(assert (=> d!21581 (= (choose!495 lt!39000 (_1!1120 lt!38750) (_2!1120 lt!38750)) _$22!411)))

(declare-fun bs!3560 () Bool)

(assert (= bs!3560 d!21581))

(assert (=> bs!3560 m!85869))

(assert (=> d!21087 d!21581))

(declare-fun d!21583 () Bool)

(declare-fun res!43567 () Bool)

(declare-fun e!55064 () Bool)

(assert (=> d!21583 (=> res!43567 e!55064)))

(assert (=> d!21583 (= res!43567 (or ((_ is Nil!1544) lt!39000) ((_ is Nil!1544) (t!5251 lt!39000))))))

(assert (=> d!21583 (= (isStrictlySorted!292 lt!39000) e!55064)))

(declare-fun b!84410 () Bool)

(declare-fun e!55065 () Bool)

(assert (=> b!84410 (= e!55064 e!55065)))

(declare-fun res!43568 () Bool)

(assert (=> b!84410 (=> (not res!43568) (not e!55065))))

(assert (=> b!84410 (= res!43568 (bvslt (_1!1120 (h!2133 lt!39000)) (_1!1120 (h!2133 (t!5251 lt!39000)))))))

(declare-fun b!84411 () Bool)

(assert (=> b!84411 (= e!55065 (isStrictlySorted!292 (t!5251 lt!39000)))))

(assert (= (and d!21583 (not res!43567)) b!84410))

(assert (= (and b!84410 res!43568) b!84411))

(declare-fun m!88105 () Bool)

(assert (=> b!84411 m!88105))

(assert (=> d!21087 d!21583))

(declare-fun d!21585 () Bool)

(declare-fun res!43569 () Bool)

(declare-fun e!55066 () Bool)

(assert (=> d!21585 (=> res!43569 e!55066)))

(assert (=> d!21585 (= res!43569 (or ((_ is Nil!1544) lt!39314) ((_ is Nil!1544) (t!5251 lt!39314))))))

(assert (=> d!21585 (= (isStrictlySorted!292 lt!39314) e!55066)))

(declare-fun b!84412 () Bool)

(declare-fun e!55067 () Bool)

(assert (=> b!84412 (= e!55066 e!55067)))

(declare-fun res!43570 () Bool)

(assert (=> b!84412 (=> (not res!43570) (not e!55067))))

(assert (=> b!84412 (= res!43570 (bvslt (_1!1120 (h!2133 lt!39314)) (_1!1120 (h!2133 (t!5251 lt!39314)))))))

(declare-fun b!84413 () Bool)

(assert (=> b!84413 (= e!55067 (isStrictlySorted!292 (t!5251 lt!39314)))))

(assert (= (and d!21585 (not res!43569)) b!84412))

(assert (= (and b!84412 res!43570) b!84413))

(declare-fun m!88107 () Bool)

(assert (=> b!84413 m!88107))

(assert (=> d!21049 d!21585))

(declare-fun d!21587 () Bool)

(declare-fun res!43571 () Bool)

(declare-fun e!55068 () Bool)

(assert (=> d!21587 (=> res!43571 e!55068)))

(assert (=> d!21587 (= res!43571 (or ((_ is Nil!1544) (toList!756 lt!38754)) ((_ is Nil!1544) (t!5251 (toList!756 lt!38754)))))))

(assert (=> d!21587 (= (isStrictlySorted!292 (toList!756 lt!38754)) e!55068)))

(declare-fun b!84414 () Bool)

(declare-fun e!55069 () Bool)

(assert (=> b!84414 (= e!55068 e!55069)))

(declare-fun res!43572 () Bool)

(assert (=> b!84414 (=> (not res!43572) (not e!55069))))

(assert (=> b!84414 (= res!43572 (bvslt (_1!1120 (h!2133 (toList!756 lt!38754))) (_1!1120 (h!2133 (t!5251 (toList!756 lt!38754))))))))

(declare-fun b!84415 () Bool)

(assert (=> b!84415 (= e!55069 (isStrictlySorted!292 (t!5251 (toList!756 lt!38754))))))

(assert (= (and d!21587 (not res!43571)) b!84414))

(assert (= (and b!84414 res!43572) b!84415))

(assert (=> b!84415 m!86973))

(assert (=> d!21049 d!21587))

(declare-fun d!21589 () Bool)

(declare-fun e!55070 () Bool)

(assert (=> d!21589 e!55070))

(declare-fun res!43573 () Bool)

(assert (=> d!21589 (=> res!43573 e!55070)))

(declare-fun lt!39747 () Bool)

(assert (=> d!21589 (= res!43573 (not lt!39747))))

(declare-fun lt!39749 () Bool)

(assert (=> d!21589 (= lt!39747 lt!39749)))

(declare-fun lt!39750 () Unit!2445)

(declare-fun e!55071 () Unit!2445)

(assert (=> d!21589 (= lt!39750 e!55071)))

(declare-fun c!13604 () Bool)

(assert (=> d!21589 (= c!13604 lt!39749)))

(assert (=> d!21589 (= lt!39749 (containsKey!142 (toList!756 lt!39408) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!21589 (= (contains!757 lt!39408 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!39747)))

(declare-fun b!84416 () Bool)

(declare-fun lt!39748 () Unit!2445)

(assert (=> b!84416 (= e!55071 lt!39748)))

(assert (=> b!84416 (= lt!39748 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39408) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!84416 (isDefined!92 (getValueByKey!138 (toList!756 lt!39408) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!84417 () Bool)

(declare-fun Unit!2506 () Unit!2445)

(assert (=> b!84417 (= e!55071 Unit!2506)))

(declare-fun b!84418 () Bool)

(assert (=> b!84418 (= e!55070 (isDefined!92 (getValueByKey!138 (toList!756 lt!39408) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!21589 c!13604) b!84416))

(assert (= (and d!21589 (not c!13604)) b!84417))

(assert (= (and d!21589 (not res!43573)) b!84418))

(assert (=> d!21589 m!86821))

(declare-fun m!88109 () Bool)

(assert (=> d!21589 m!88109))

(assert (=> b!84416 m!86821))

(declare-fun m!88111 () Bool)

(assert (=> b!84416 m!88111))

(assert (=> b!84416 m!86821))

(assert (=> b!84416 m!87287))

(assert (=> b!84416 m!87287))

(declare-fun m!88113 () Bool)

(assert (=> b!84416 m!88113))

(assert (=> b!84418 m!86821))

(assert (=> b!84418 m!87287))

(assert (=> b!84418 m!87287))

(assert (=> b!84418 m!88113))

(assert (=> b!83669 d!21589))

(declare-fun d!21591 () Bool)

(declare-fun e!55072 () Bool)

(assert (=> d!21591 e!55072))

(declare-fun res!43574 () Bool)

(assert (=> d!21591 (=> (not res!43574) (not e!55072))))

(declare-fun lt!39754 () ListLongMap!1481)

(assert (=> d!21591 (= res!43574 (contains!757 lt!39754 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun lt!39751 () List!1547)

(assert (=> d!21591 (= lt!39754 (ListLongMap!1482 lt!39751))))

(declare-fun lt!39752 () Unit!2445)

(declare-fun lt!39753 () Unit!2445)

(assert (=> d!21591 (= lt!39752 lt!39753)))

(assert (=> d!21591 (= (getValueByKey!138 lt!39751 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21591 (= lt!39753 (lemmaContainsTupThenGetReturnValue!57 lt!39751 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21591 (= lt!39751 (insertStrictlySorted!59 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21591 (= (+!114 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) lt!39754)))

(declare-fun b!84419 () Bool)

(declare-fun res!43575 () Bool)

(assert (=> b!84419 (=> (not res!43575) (not e!55072))))

(assert (=> b!84419 (= res!43575 (= (getValueByKey!138 (toList!756 lt!39754) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun b!84420 () Bool)

(assert (=> b!84420 (= e!55072 (contains!760 (toList!756 lt!39754) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(assert (= (and d!21591 res!43574) b!84419))

(assert (= (and b!84419 res!43575) b!84420))

(declare-fun m!88115 () Bool)

(assert (=> d!21591 m!88115))

(declare-fun m!88117 () Bool)

(assert (=> d!21591 m!88117))

(declare-fun m!88119 () Bool)

(assert (=> d!21591 m!88119))

(declare-fun m!88121 () Bool)

(assert (=> d!21591 m!88121))

(declare-fun m!88123 () Bool)

(assert (=> b!84419 m!88123))

(declare-fun m!88125 () Bool)

(assert (=> b!84420 m!88125))

(assert (=> b!83224 d!21591))

(assert (=> b!83224 d!20917))

(declare-fun b!84421 () Bool)

(declare-fun e!55078 () ListLongMap!1481)

(declare-fun call!7952 () ListLongMap!1481)

(assert (=> b!84421 (= e!55078 call!7952)))

(declare-fun bm!7949 () Bool)

(declare-fun call!7958 () ListLongMap!1481)

(declare-fun call!7953 () ListLongMap!1481)

(assert (=> bm!7949 (= call!7958 call!7953)))

(declare-fun b!84422 () Bool)

(declare-fun e!55082 () Bool)

(declare-fun lt!39766 () ListLongMap!1481)

(assert (=> b!84422 (= e!55082 (= (apply!81 lt!39766 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2211 newMap!16)))))

(declare-fun b!84423 () Bool)

(declare-fun e!55073 () ListLongMap!1481)

(declare-fun call!7954 () ListLongMap!1481)

(assert (=> b!84423 (= e!55073 call!7954)))

(declare-fun b!84425 () Bool)

(declare-fun e!55074 () ListLongMap!1481)

(declare-fun call!7955 () ListLongMap!1481)

(assert (=> b!84425 (= e!55074 (+!114 call!7955 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))

(declare-fun b!84426 () Bool)

(declare-fun res!43584 () Bool)

(declare-fun e!55081 () Bool)

(assert (=> b!84426 (=> (not res!43584) (not e!55081))))

(declare-fun e!55077 () Bool)

(assert (=> b!84426 (= res!43584 e!55077)))

(declare-fun c!13609 () Bool)

(assert (=> b!84426 (= c!13609 (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7950 () Bool)

(assert (=> bm!7950 (= call!7953 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun c!13610 () Bool)

(declare-fun bm!7951 () Bool)

(declare-fun c!13608 () Bool)

(assert (=> bm!7951 (= call!7955 (+!114 (ite c!13608 call!7953 (ite c!13610 call!7958 call!7952)) (ite (or c!13608 c!13610) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))

(declare-fun b!84427 () Bool)

(declare-fun e!55080 () Unit!2445)

(declare-fun Unit!2507 () Unit!2445)

(assert (=> b!84427 (= e!55080 Unit!2507)))

(declare-fun bm!7952 () Bool)

(declare-fun call!7956 () Bool)

(assert (=> bm!7952 (= call!7956 (contains!757 lt!39766 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84428 () Bool)

(declare-fun res!43581 () Bool)

(assert (=> b!84428 (=> (not res!43581) (not e!55081))))

(declare-fun e!55084 () Bool)

(assert (=> b!84428 (= res!43581 e!55084)))

(declare-fun res!43582 () Bool)

(assert (=> b!84428 (=> res!43582 e!55084)))

(declare-fun e!55079 () Bool)

(assert (=> b!84428 (= res!43582 (not e!55079))))

(declare-fun res!43579 () Bool)

(assert (=> b!84428 (=> (not res!43579) (not e!55079))))

(assert (=> b!84428 (= res!43579 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!84429 () Bool)

(declare-fun e!55075 () Bool)

(assert (=> b!84429 (= e!55084 e!55075)))

(declare-fun res!43578 () Bool)

(assert (=> b!84429 (=> (not res!43578) (not e!55075))))

(assert (=> b!84429 (= res!43578 (contains!757 lt!39766 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84429 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!84430 () Bool)

(declare-fun e!55076 () Bool)

(assert (=> b!84430 (= e!55076 (not call!7956))))

(declare-fun b!84431 () Bool)

(declare-fun e!55083 () Bool)

(assert (=> b!84431 (= e!55077 e!55083)))

(declare-fun res!43577 () Bool)

(declare-fun call!7957 () Bool)

(assert (=> b!84431 (= res!43577 call!7957)))

(assert (=> b!84431 (=> (not res!43577) (not e!55083))))

(declare-fun b!84432 () Bool)

(declare-fun c!13607 () Bool)

(assert (=> b!84432 (= c!13607 (and (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!84432 (= e!55073 e!55078)))

(declare-fun b!84433 () Bool)

(declare-fun lt!39761 () Unit!2445)

(assert (=> b!84433 (= e!55080 lt!39761)))

(declare-fun lt!39767 () ListLongMap!1481)

(assert (=> b!84433 (= lt!39767 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39760 () (_ BitVec 64))

(assert (=> b!84433 (= lt!39760 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39764 () (_ BitVec 64))

(assert (=> b!84433 (= lt!39764 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39769 () Unit!2445)

(assert (=> b!84433 (= lt!39769 (addStillContains!57 lt!39767 lt!39760 (zeroValue!2211 newMap!16) lt!39764))))

(assert (=> b!84433 (contains!757 (+!114 lt!39767 (tuple2!2221 lt!39760 (zeroValue!2211 newMap!16))) lt!39764)))

(declare-fun lt!39765 () Unit!2445)

(assert (=> b!84433 (= lt!39765 lt!39769)))

(declare-fun lt!39770 () ListLongMap!1481)

(assert (=> b!84433 (= lt!39770 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39762 () (_ BitVec 64))

(assert (=> b!84433 (= lt!39762 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39776 () (_ BitVec 64))

(assert (=> b!84433 (= lt!39776 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39774 () Unit!2445)

(assert (=> b!84433 (= lt!39774 (addApplyDifferent!57 lt!39770 lt!39762 (minValue!2211 newMap!16) lt!39776))))

(assert (=> b!84433 (= (apply!81 (+!114 lt!39770 (tuple2!2221 lt!39762 (minValue!2211 newMap!16))) lt!39776) (apply!81 lt!39770 lt!39776))))

(declare-fun lt!39768 () Unit!2445)

(assert (=> b!84433 (= lt!39768 lt!39774)))

(declare-fun lt!39763 () ListLongMap!1481)

(assert (=> b!84433 (= lt!39763 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39772 () (_ BitVec 64))

(assert (=> b!84433 (= lt!39772 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39756 () (_ BitVec 64))

(assert (=> b!84433 (= lt!39756 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39771 () Unit!2445)

(assert (=> b!84433 (= lt!39771 (addApplyDifferent!57 lt!39763 lt!39772 (zeroValue!2211 newMap!16) lt!39756))))

(assert (=> b!84433 (= (apply!81 (+!114 lt!39763 (tuple2!2221 lt!39772 (zeroValue!2211 newMap!16))) lt!39756) (apply!81 lt!39763 lt!39756))))

(declare-fun lt!39757 () Unit!2445)

(assert (=> b!84433 (= lt!39757 lt!39771)))

(declare-fun lt!39759 () ListLongMap!1481)

(assert (=> b!84433 (= lt!39759 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!39773 () (_ BitVec 64))

(assert (=> b!84433 (= lt!39773 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39758 () (_ BitVec 64))

(assert (=> b!84433 (= lt!39758 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!84433 (= lt!39761 (addApplyDifferent!57 lt!39759 lt!39773 (minValue!2211 newMap!16) lt!39758))))

(assert (=> b!84433 (= (apply!81 (+!114 lt!39759 (tuple2!2221 lt!39773 (minValue!2211 newMap!16))) lt!39758) (apply!81 lt!39759 lt!39758))))

(declare-fun b!84434 () Bool)

(assert (=> b!84434 (= e!55075 (= (apply!81 lt!39766 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) (get!1206 (select (arr!1913 (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!84434 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2156 (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))))))))

(assert (=> b!84434 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!84424 () Bool)

(assert (=> b!84424 (= e!55078 call!7954)))

(declare-fun d!21593 () Bool)

(assert (=> d!21593 e!55081))

(declare-fun res!43580 () Bool)

(assert (=> d!21593 (=> (not res!43580) (not e!55081))))

(assert (=> d!21593 (= res!43580 (or (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))))

(declare-fun lt!39775 () ListLongMap!1481)

(assert (=> d!21593 (= lt!39766 lt!39775)))

(declare-fun lt!39755 () Unit!2445)

(assert (=> d!21593 (= lt!39755 e!55080)))

(declare-fun c!13606 () Bool)

(declare-fun e!55085 () Bool)

(assert (=> d!21593 (= c!13606 e!55085)))

(declare-fun res!43576 () Bool)

(assert (=> d!21593 (=> (not res!43576) (not e!55085))))

(assert (=> d!21593 (= res!43576 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!21593 (= lt!39775 e!55074)))

(assert (=> d!21593 (= c!13608 (and (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21593 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!21593 (= (getCurrentListMap!440 (_keys!3985 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) lt!39766)))

(declare-fun bm!7953 () Bool)

(assert (=> bm!7953 (= call!7957 (contains!757 lt!39766 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84435 () Bool)

(assert (=> b!84435 (= e!55077 (not call!7957))))

(declare-fun bm!7954 () Bool)

(assert (=> bm!7954 (= call!7952 call!7958)))

(declare-fun b!84436 () Bool)

(assert (=> b!84436 (= e!55085 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84437 () Bool)

(assert (=> b!84437 (= e!55081 e!55076)))

(declare-fun c!13605 () Bool)

(assert (=> b!84437 (= c!13605 (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7955 () Bool)

(assert (=> bm!7955 (= call!7954 call!7955)))

(declare-fun b!84438 () Bool)

(assert (=> b!84438 (= e!55083 (= (apply!81 lt!39766 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2211 newMap!16)))))

(declare-fun b!84439 () Bool)

(assert (=> b!84439 (= e!55079 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84440 () Bool)

(assert (=> b!84440 (= e!55074 e!55073)))

(assert (=> b!84440 (= c!13610 (and (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!84441 () Bool)

(assert (=> b!84441 (= e!55076 e!55082)))

(declare-fun res!43583 () Bool)

(assert (=> b!84441 (= res!43583 call!7956)))

(assert (=> b!84441 (=> (not res!43583) (not e!55082))))

(assert (= (and d!21593 c!13608) b!84425))

(assert (= (and d!21593 (not c!13608)) b!84440))

(assert (= (and b!84440 c!13610) b!84423))

(assert (= (and b!84440 (not c!13610)) b!84432))

(assert (= (and b!84432 c!13607) b!84424))

(assert (= (and b!84432 (not c!13607)) b!84421))

(assert (= (or b!84424 b!84421) bm!7954))

(assert (= (or b!84423 bm!7954) bm!7949))

(assert (= (or b!84423 b!84424) bm!7955))

(assert (= (or b!84425 bm!7949) bm!7950))

(assert (= (or b!84425 bm!7955) bm!7951))

(assert (= (and d!21593 res!43576) b!84436))

(assert (= (and d!21593 c!13606) b!84433))

(assert (= (and d!21593 (not c!13606)) b!84427))

(assert (= (and d!21593 res!43580) b!84428))

(assert (= (and b!84428 res!43579) b!84439))

(assert (= (and b!84428 (not res!43582)) b!84429))

(assert (= (and b!84429 res!43578) b!84434))

(assert (= (and b!84428 res!43581) b!84426))

(assert (= (and b!84426 c!13609) b!84431))

(assert (= (and b!84426 (not c!13609)) b!84435))

(assert (= (and b!84431 res!43577) b!84438))

(assert (= (or b!84431 b!84435) bm!7953))

(assert (= (and b!84426 res!43584) b!84437))

(assert (= (and b!84437 c!13605) b!84441))

(assert (= (and b!84437 (not c!13605)) b!84430))

(assert (= (and b!84441 res!43583) b!84422))

(assert (= (or b!84441 b!84430) bm!7952))

(declare-fun b_lambda!3747 () Bool)

(assert (=> (not b_lambda!3747) (not b!84434)))

(assert (=> b!84434 t!5259))

(declare-fun b_and!5117 () Bool)

(assert (= b_and!5113 (and (=> t!5259 result!2903) b_and!5117)))

(assert (=> b!84434 t!5261))

(declare-fun b_and!5119 () Bool)

(assert (= b_and!5115 (and (=> t!5261 result!2905) b_and!5119)))

(declare-fun m!88127 () Bool)

(assert (=> bm!7950 m!88127))

(declare-fun m!88129 () Bool)

(assert (=> bm!7953 m!88129))

(declare-fun m!88131 () Bool)

(assert (=> bm!7951 m!88131))

(assert (=> b!84439 m!86049))

(assert (=> b!84439 m!86049))

(assert (=> b!84439 m!86051))

(declare-fun m!88133 () Bool)

(assert (=> bm!7952 m!88133))

(assert (=> b!84436 m!86049))

(assert (=> b!84436 m!86049))

(assert (=> b!84436 m!86051))

(assert (=> b!84429 m!86049))

(assert (=> b!84429 m!86049))

(declare-fun m!88135 () Bool)

(assert (=> b!84429 m!88135))

(assert (=> d!21593 m!86023))

(declare-fun m!88137 () Bool)

(assert (=> b!84422 m!88137))

(declare-fun m!88139 () Bool)

(assert (=> b!84433 m!88139))

(declare-fun m!88141 () Bool)

(assert (=> b!84433 m!88141))

(declare-fun m!88143 () Bool)

(assert (=> b!84433 m!88143))

(declare-fun m!88145 () Bool)

(assert (=> b!84433 m!88145))

(declare-fun m!88147 () Bool)

(assert (=> b!84433 m!88147))

(declare-fun m!88149 () Bool)

(assert (=> b!84433 m!88149))

(declare-fun m!88151 () Bool)

(assert (=> b!84433 m!88151))

(assert (=> b!84433 m!88141))

(declare-fun m!88153 () Bool)

(assert (=> b!84433 m!88153))

(declare-fun m!88155 () Bool)

(assert (=> b!84433 m!88155))

(assert (=> b!84433 m!88147))

(declare-fun m!88157 () Bool)

(assert (=> b!84433 m!88157))

(assert (=> b!84433 m!88143))

(assert (=> b!84433 m!86049))

(declare-fun m!88159 () Bool)

(assert (=> b!84433 m!88159))

(declare-fun m!88161 () Bool)

(assert (=> b!84433 m!88161))

(declare-fun m!88163 () Bool)

(assert (=> b!84433 m!88163))

(assert (=> b!84433 m!88127))

(declare-fun m!88165 () Bool)

(assert (=> b!84433 m!88165))

(assert (=> b!84433 m!88157))

(declare-fun m!88167 () Bool)

(assert (=> b!84433 m!88167))

(assert (=> b!84434 m!86089))

(declare-fun m!88169 () Bool)

(assert (=> b!84434 m!88169))

(assert (=> b!84434 m!86049))

(declare-fun m!88171 () Bool)

(assert (=> b!84434 m!88171))

(assert (=> b!84434 m!86049))

(assert (=> b!84434 m!88169))

(assert (=> b!84434 m!86089))

(declare-fun m!88173 () Bool)

(assert (=> b!84434 m!88173))

(declare-fun m!88175 () Bool)

(assert (=> b!84425 m!88175))

(declare-fun m!88177 () Bool)

(assert (=> b!84438 m!88177))

(assert (=> b!83224 d!21593))

(declare-fun d!21595 () Bool)

(declare-fun lt!39777 () Bool)

(assert (=> d!21595 (= lt!39777 (select (content!87 (toList!756 lt!39385)) (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun e!55086 () Bool)

(assert (=> d!21595 (= lt!39777 e!55086)))

(declare-fun res!43585 () Bool)

(assert (=> d!21595 (=> (not res!43585) (not e!55086))))

(assert (=> d!21595 (= res!43585 ((_ is Cons!1543) (toList!756 lt!39385)))))

(assert (=> d!21595 (= (contains!760 (toList!756 lt!39385) (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39777)))

(declare-fun b!84442 () Bool)

(declare-fun e!55087 () Bool)

(assert (=> b!84442 (= e!55086 e!55087)))

(declare-fun res!43586 () Bool)

(assert (=> b!84442 (=> res!43586 e!55087)))

(assert (=> b!84442 (= res!43586 (= (h!2133 (toList!756 lt!39385)) (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84443 () Bool)

(assert (=> b!84443 (= e!55087 (contains!760 (t!5251 (toList!756 lt!39385)) (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21595 res!43585) b!84442))

(assert (= (and b!84442 (not res!43586)) b!84443))

(declare-fun m!88179 () Bool)

(assert (=> d!21595 m!88179))

(declare-fun m!88181 () Bool)

(assert (=> d!21595 m!88181))

(declare-fun m!88183 () Bool)

(assert (=> b!84443 m!88183))

(assert (=> b!83647 d!21595))

(declare-fun b!84445 () Bool)

(declare-fun e!55088 () Option!144)

(declare-fun e!55089 () Option!144)

(assert (=> b!84445 (= e!55088 e!55089)))

(declare-fun c!13612 () Bool)

(assert (=> b!84445 (= c!13612 (and ((_ is Cons!1543) (toList!756 lt!39244)) (not (= (_1!1120 (h!2133 (toList!756 lt!39244))) (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!84444 () Bool)

(assert (=> b!84444 (= e!55088 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39244)))))))

(declare-fun b!84447 () Bool)

(assert (=> b!84447 (= e!55089 None!142)))

(declare-fun d!21597 () Bool)

(declare-fun c!13611 () Bool)

(assert (=> d!21597 (= c!13611 (and ((_ is Cons!1543) (toList!756 lt!39244)) (= (_1!1120 (h!2133 (toList!756 lt!39244))) (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21597 (= (getValueByKey!138 (toList!756 lt!39244) (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) e!55088)))

(declare-fun b!84446 () Bool)

(assert (=> b!84446 (= e!55089 (getValueByKey!138 (t!5251 (toList!756 lt!39244)) (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21597 c!13611) b!84444))

(assert (= (and d!21597 (not c!13611)) b!84445))

(assert (= (and b!84445 c!13612) b!84446))

(assert (= (and b!84445 (not c!13612)) b!84447))

(declare-fun m!88185 () Bool)

(assert (=> b!84446 m!88185))

(assert (=> b!83479 d!21597))

(declare-fun b!84449 () Bool)

(declare-fun e!55090 () Option!144)

(declare-fun e!55091 () Option!144)

(assert (=> b!84449 (= e!55090 e!55091)))

(declare-fun c!13614 () Bool)

(assert (=> b!84449 (= c!13614 (and ((_ is Cons!1543) (toList!756 lt!39345)) (not (= (_1!1120 (h!2133 (toList!756 lt!39345))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(declare-fun b!84448 () Bool)

(assert (=> b!84448 (= e!55090 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39345)))))))

(declare-fun b!84451 () Bool)

(assert (=> b!84451 (= e!55091 None!142)))

(declare-fun c!13613 () Bool)

(declare-fun d!21599 () Bool)

(assert (=> d!21599 (= c!13613 (and ((_ is Cons!1543) (toList!756 lt!39345)) (= (_1!1120 (h!2133 (toList!756 lt!39345))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21599 (= (getValueByKey!138 (toList!756 lt!39345) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) e!55090)))

(declare-fun b!84450 () Bool)

(assert (=> b!84450 (= e!55091 (getValueByKey!138 (t!5251 (toList!756 lt!39345)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (= (and d!21599 c!13613) b!84448))

(assert (= (and d!21599 (not c!13613)) b!84449))

(assert (= (and b!84449 c!13614) b!84450))

(assert (= (and b!84449 (not c!13614)) b!84451))

(declare-fun m!88187 () Bool)

(assert (=> b!84450 m!88187))

(assert (=> b!83588 d!21599))

(declare-fun d!21601 () Bool)

(declare-fun res!43587 () Bool)

(declare-fun e!55092 () Bool)

(assert (=> d!21601 (=> res!43587 e!55092)))

(assert (=> d!21601 (= res!43587 (and ((_ is Cons!1543) lt!39026) (= (_1!1120 (h!2133 lt!39026)) (_1!1120 lt!38750))))))

(assert (=> d!21601 (= (containsKey!142 lt!39026 (_1!1120 lt!38750)) e!55092)))

(declare-fun b!84452 () Bool)

(declare-fun e!55093 () Bool)

(assert (=> b!84452 (= e!55092 e!55093)))

(declare-fun res!43588 () Bool)

(assert (=> b!84452 (=> (not res!43588) (not e!55093))))

(assert (=> b!84452 (= res!43588 (and (or (not ((_ is Cons!1543) lt!39026)) (bvsle (_1!1120 (h!2133 lt!39026)) (_1!1120 lt!38750))) ((_ is Cons!1543) lt!39026) (bvslt (_1!1120 (h!2133 lt!39026)) (_1!1120 lt!38750))))))

(declare-fun b!84453 () Bool)

(assert (=> b!84453 (= e!55093 (containsKey!142 (t!5251 lt!39026) (_1!1120 lt!38750)))))

(assert (= (and d!21601 (not res!43587)) b!84452))

(assert (= (and b!84452 res!43588) b!84453))

(declare-fun m!88189 () Bool)

(assert (=> b!84453 m!88189))

(assert (=> b!83334 d!21601))

(declare-fun d!21603 () Bool)

(assert (=> d!21603 (isDefined!92 (getValueByKey!138 (toList!756 lt!39021) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!39778 () Unit!2445)

(assert (=> d!21603 (= lt!39778 (choose!496 (toList!756 lt!39021) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!55094 () Bool)

(assert (=> d!21603 e!55094))

(declare-fun res!43589 () Bool)

(assert (=> d!21603 (=> (not res!43589) (not e!55094))))

(assert (=> d!21603 (= res!43589 (isStrictlySorted!292 (toList!756 lt!39021)))))

(assert (=> d!21603 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39021) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!39778)))

(declare-fun b!84454 () Bool)

(assert (=> b!84454 (= e!55094 (containsKey!142 (toList!756 lt!39021) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!21603 res!43589) b!84454))

(assert (=> d!21603 m!85781))

(assert (=> d!21603 m!86349))

(assert (=> d!21603 m!86349))

(assert (=> d!21603 m!86351))

(assert (=> d!21603 m!85781))

(declare-fun m!88191 () Bool)

(assert (=> d!21603 m!88191))

(declare-fun m!88193 () Bool)

(assert (=> d!21603 m!88193))

(assert (=> b!84454 m!85781))

(assert (=> b!84454 m!86345))

(assert (=> b!83452 d!21603))

(declare-fun d!21605 () Bool)

(assert (=> d!21605 (= (isDefined!92 (getValueByKey!138 (toList!756 lt!39021) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!338 (getValueByKey!138 (toList!756 lt!39021) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3561 () Bool)

(assert (= bs!3561 d!21605))

(assert (=> bs!3561 m!86349))

(declare-fun m!88195 () Bool)

(assert (=> bs!3561 m!88195))

(assert (=> b!83452 d!21605))

(declare-fun b!84456 () Bool)

(declare-fun e!55095 () Option!144)

(declare-fun e!55096 () Option!144)

(assert (=> b!84456 (= e!55095 e!55096)))

(declare-fun c!13616 () Bool)

(assert (=> b!84456 (= c!13616 (and ((_ is Cons!1543) (toList!756 lt!39021)) (not (= (_1!1120 (h!2133 (toList!756 lt!39021))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!84455 () Bool)

(assert (=> b!84455 (= e!55095 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39021)))))))

(declare-fun b!84458 () Bool)

(assert (=> b!84458 (= e!55096 None!142)))

(declare-fun c!13615 () Bool)

(declare-fun d!21607 () Bool)

(assert (=> d!21607 (= c!13615 (and ((_ is Cons!1543) (toList!756 lt!39021)) (= (_1!1120 (h!2133 (toList!756 lt!39021))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!21607 (= (getValueByKey!138 (toList!756 lt!39021) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!55095)))

(declare-fun b!84457 () Bool)

(assert (=> b!84457 (= e!55096 (getValueByKey!138 (t!5251 (toList!756 lt!39021)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!21607 c!13615) b!84455))

(assert (= (and d!21607 (not c!13615)) b!84456))

(assert (= (and b!84456 c!13616) b!84457))

(assert (= (and b!84456 (not c!13616)) b!84458))

(assert (=> b!84457 m!85781))

(declare-fun m!88197 () Bool)

(assert (=> b!84457 m!88197))

(assert (=> b!83452 d!21607))

(declare-fun d!21609 () Bool)

(declare-fun e!55097 () Bool)

(assert (=> d!21609 e!55097))

(declare-fun res!43590 () Bool)

(assert (=> d!21609 (=> res!43590 e!55097)))

(declare-fun lt!39779 () Bool)

(assert (=> d!21609 (= res!43590 (not lt!39779))))

(declare-fun lt!39781 () Bool)

(assert (=> d!21609 (= lt!39779 lt!39781)))

(declare-fun lt!39782 () Unit!2445)

(declare-fun e!55098 () Unit!2445)

(assert (=> d!21609 (= lt!39782 e!55098)))

(declare-fun c!13617 () Bool)

(assert (=> d!21609 (= c!13617 lt!39781)))

(assert (=> d!21609 (= lt!39781 (containsKey!142 (toList!756 lt!39244) (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21609 (= (contains!757 lt!39244 (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39779)))

(declare-fun b!84459 () Bool)

(declare-fun lt!39780 () Unit!2445)

(assert (=> b!84459 (= e!55098 lt!39780)))

(assert (=> b!84459 (= lt!39780 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39244) (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> b!84459 (isDefined!92 (getValueByKey!138 (toList!756 lt!39244) (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84460 () Bool)

(declare-fun Unit!2508 () Unit!2445)

(assert (=> b!84460 (= e!55098 Unit!2508)))

(declare-fun b!84461 () Bool)

(assert (=> b!84461 (= e!55097 (isDefined!92 (getValueByKey!138 (toList!756 lt!39244) (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!21609 c!13617) b!84459))

(assert (= (and d!21609 (not c!13617)) b!84460))

(assert (= (and d!21609 (not res!43590)) b!84461))

(declare-fun m!88199 () Bool)

(assert (=> d!21609 m!88199))

(declare-fun m!88201 () Bool)

(assert (=> b!84459 m!88201))

(assert (=> b!84459 m!86373))

(assert (=> b!84459 m!86373))

(declare-fun m!88203 () Bool)

(assert (=> b!84459 m!88203))

(assert (=> b!84461 m!86373))

(assert (=> b!84461 m!86373))

(assert (=> b!84461 m!88203))

(assert (=> d!20997 d!21609))

(declare-fun b!84463 () Bool)

(declare-fun e!55099 () Option!144)

(declare-fun e!55100 () Option!144)

(assert (=> b!84463 (= e!55099 e!55100)))

(declare-fun c!13619 () Bool)

(assert (=> b!84463 (= c!13619 (and ((_ is Cons!1543) lt!39241) (not (= (_1!1120 (h!2133 lt!39241)) (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!84462 () Bool)

(assert (=> b!84462 (= e!55099 (Some!143 (_2!1120 (h!2133 lt!39241))))))

(declare-fun b!84465 () Bool)

(assert (=> b!84465 (= e!55100 None!142)))

(declare-fun c!13618 () Bool)

(declare-fun d!21611 () Bool)

(assert (=> d!21611 (= c!13618 (and ((_ is Cons!1543) lt!39241) (= (_1!1120 (h!2133 lt!39241)) (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21611 (= (getValueByKey!138 lt!39241 (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) e!55099)))

(declare-fun b!84464 () Bool)

(assert (=> b!84464 (= e!55100 (getValueByKey!138 (t!5251 lt!39241) (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21611 c!13618) b!84462))

(assert (= (and d!21611 (not c!13618)) b!84463))

(assert (= (and b!84463 c!13619) b!84464))

(assert (= (and b!84463 (not c!13619)) b!84465))

(declare-fun m!88205 () Bool)

(assert (=> b!84464 m!88205))

(assert (=> d!20997 d!21611))

(declare-fun d!21613 () Bool)

(assert (=> d!21613 (= (getValueByKey!138 lt!39241 (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun lt!39783 () Unit!2445)

(assert (=> d!21613 (= lt!39783 (choose!495 lt!39241 (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun e!55101 () Bool)

(assert (=> d!21613 e!55101))

(declare-fun res!43591 () Bool)

(assert (=> d!21613 (=> (not res!43591) (not e!55101))))

(assert (=> d!21613 (= res!43591 (isStrictlySorted!292 lt!39241))))

(assert (=> d!21613 (= (lemmaContainsTupThenGetReturnValue!57 lt!39241 (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39783)))

(declare-fun b!84466 () Bool)

(declare-fun res!43592 () Bool)

(assert (=> b!84466 (=> (not res!43592) (not e!55101))))

(assert (=> b!84466 (= res!43592 (containsKey!142 lt!39241 (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84467 () Bool)

(assert (=> b!84467 (= e!55101 (contains!760 lt!39241 (tuple2!2221 (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!21613 res!43591) b!84466))

(assert (= (and b!84466 res!43592) b!84467))

(assert (=> d!21613 m!86367))

(declare-fun m!88207 () Bool)

(assert (=> d!21613 m!88207))

(declare-fun m!88209 () Bool)

(assert (=> d!21613 m!88209))

(declare-fun m!88211 () Bool)

(assert (=> b!84466 m!88211))

(declare-fun m!88213 () Bool)

(assert (=> b!84467 m!88213))

(assert (=> d!20997 d!21613))

(declare-fun bm!7956 () Bool)

(declare-fun call!7960 () List!1547)

(declare-fun call!7959 () List!1547)

(assert (=> bm!7956 (= call!7960 call!7959)))

(declare-fun b!84468 () Bool)

(declare-fun e!55105 () List!1547)

(assert (=> b!84468 (= e!55105 call!7960)))

(declare-fun b!84469 () Bool)

(declare-fun e!55104 () List!1547)

(declare-fun call!7961 () List!1547)

(assert (=> b!84469 (= e!55104 call!7961)))

(declare-fun b!84470 () Bool)

(declare-fun e!55103 () List!1547)

(assert (=> b!84470 (= e!55103 (insertStrictlySorted!59 (t!5251 (toList!756 lt!38978)) (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84471 () Bool)

(assert (=> b!84471 (= e!55104 call!7961)))

(declare-fun b!84472 () Bool)

(declare-fun res!43593 () Bool)

(declare-fun e!55106 () Bool)

(assert (=> b!84472 (=> (not res!43593) (not e!55106))))

(declare-fun lt!39784 () List!1547)

(assert (=> b!84472 (= res!43593 (containsKey!142 lt!39784 (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun d!21615 () Bool)

(assert (=> d!21615 e!55106))

(declare-fun res!43594 () Bool)

(assert (=> d!21615 (=> (not res!43594) (not e!55106))))

(assert (=> d!21615 (= res!43594 (isStrictlySorted!292 lt!39784))))

(declare-fun e!55102 () List!1547)

(assert (=> d!21615 (= lt!39784 e!55102)))

(declare-fun c!13621 () Bool)

(assert (=> d!21615 (= c!13621 (and ((_ is Cons!1543) (toList!756 lt!38978)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38978))) (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21615 (isStrictlySorted!292 (toList!756 lt!38978))))

(assert (=> d!21615 (= (insertStrictlySorted!59 (toList!756 lt!38978) (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39784)))

(declare-fun b!84473 () Bool)

(assert (=> b!84473 (= e!55106 (contains!760 lt!39784 (tuple2!2221 (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!84474 () Bool)

(assert (=> b!84474 (= e!55102 e!55105)))

(declare-fun c!13620 () Bool)

(assert (=> b!84474 (= c!13620 (and ((_ is Cons!1543) (toList!756 lt!38978)) (= (_1!1120 (h!2133 (toList!756 lt!38978))) (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!84475 () Bool)

(declare-fun c!13623 () Bool)

(assert (=> b!84475 (= e!55103 (ite c!13620 (t!5251 (toList!756 lt!38978)) (ite c!13623 (Cons!1543 (h!2133 (toList!756 lt!38978)) (t!5251 (toList!756 lt!38978))) Nil!1544)))))

(declare-fun b!84476 () Bool)

(assert (=> b!84476 (= c!13623 (and ((_ is Cons!1543) (toList!756 lt!38978)) (bvsgt (_1!1120 (h!2133 (toList!756 lt!38978))) (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> b!84476 (= e!55105 e!55104)))

(declare-fun bm!7957 () Bool)

(assert (=> bm!7957 (= call!7959 ($colon$colon!70 e!55103 (ite c!13621 (h!2133 (toList!756 lt!38978)) (tuple2!2221 (_1!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun c!13622 () Bool)

(assert (=> bm!7957 (= c!13622 c!13621)))

(declare-fun b!84477 () Bool)

(assert (=> b!84477 (= e!55102 call!7959)))

(declare-fun bm!7958 () Bool)

(assert (=> bm!7958 (= call!7961 call!7960)))

(assert (= (and d!21615 c!13621) b!84477))

(assert (= (and d!21615 (not c!13621)) b!84474))

(assert (= (and b!84474 c!13620) b!84468))

(assert (= (and b!84474 (not c!13620)) b!84476))

(assert (= (and b!84476 c!13623) b!84471))

(assert (= (and b!84476 (not c!13623)) b!84469))

(assert (= (or b!84471 b!84469) bm!7958))

(assert (= (or b!84468 bm!7958) bm!7956))

(assert (= (or b!84477 bm!7956) bm!7957))

(assert (= (and bm!7957 c!13622) b!84470))

(assert (= (and bm!7957 (not c!13622)) b!84475))

(assert (= (and d!21615 res!43594) b!84472))

(assert (= (and b!84472 res!43593) b!84473))

(declare-fun m!88215 () Bool)

(assert (=> d!21615 m!88215))

(declare-fun m!88217 () Bool)

(assert (=> d!21615 m!88217))

(declare-fun m!88219 () Bool)

(assert (=> b!84470 m!88219))

(declare-fun m!88221 () Bool)

(assert (=> b!84473 m!88221))

(declare-fun m!88223 () Bool)

(assert (=> bm!7957 m!88223))

(declare-fun m!88225 () Bool)

(assert (=> b!84472 m!88225))

(assert (=> d!20997 d!21615))

(declare-fun d!21617 () Bool)

(declare-fun lt!39785 () Bool)

(assert (=> d!21617 (= lt!39785 (select (content!87 lt!38996) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(declare-fun e!55107 () Bool)

(assert (=> d!21617 (= lt!39785 e!55107)))

(declare-fun res!43595 () Bool)

(assert (=> d!21617 (=> (not res!43595) (not e!55107))))

(assert (=> d!21617 (= res!43595 ((_ is Cons!1543) lt!38996))))

(assert (=> d!21617 (= (contains!760 lt!38996 (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))) lt!39785)))

(declare-fun b!84478 () Bool)

(declare-fun e!55108 () Bool)

(assert (=> b!84478 (= e!55107 e!55108)))

(declare-fun res!43596 () Bool)

(assert (=> b!84478 (=> res!43596 e!55108)))

(assert (=> b!84478 (= res!43596 (= (h!2133 lt!38996) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(declare-fun b!84479 () Bool)

(assert (=> b!84479 (= e!55108 (contains!760 (t!5251 lt!38996) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(assert (= (and d!21617 res!43595) b!84478))

(assert (= (and b!84478 (not res!43596)) b!84479))

(declare-fun m!88227 () Bool)

(assert (=> d!21617 m!88227))

(declare-fun m!88229 () Bool)

(assert (=> d!21617 m!88229))

(declare-fun m!88231 () Bool)

(assert (=> b!84479 m!88231))

(assert (=> b!83374 d!21617))

(declare-fun b!84480 () Bool)

(declare-fun e!55111 () Bool)

(declare-fun call!7962 () Bool)

(assert (=> b!84480 (= e!55111 call!7962)))

(declare-fun bm!7959 () Bool)

(assert (=> bm!7959 (= call!7962 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3985 (_2!1121 lt!38897)) (mask!6335 (_2!1121 lt!38897))))))

(declare-fun b!84481 () Bool)

(declare-fun e!55110 () Bool)

(assert (=> b!84481 (= e!55110 call!7962)))

(declare-fun b!84483 () Bool)

(assert (=> b!84483 (= e!55110 e!55111)))

(declare-fun lt!39786 () (_ BitVec 64))

(assert (=> b!84483 (= lt!39786 (select (arr!1912 (_keys!3985 (_2!1121 lt!38897))) #b00000000000000000000000000000000))))

(declare-fun lt!39787 () Unit!2445)

(assert (=> b!84483 (= lt!39787 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3985 (_2!1121 lt!38897)) lt!39786 #b00000000000000000000000000000000))))

(assert (=> b!84483 (arrayContainsKey!0 (_keys!3985 (_2!1121 lt!38897)) lt!39786 #b00000000000000000000000000000000)))

(declare-fun lt!39788 () Unit!2445)

(assert (=> b!84483 (= lt!39788 lt!39787)))

(declare-fun res!43598 () Bool)

(assert (=> b!84483 (= res!43598 (= (seekEntryOrOpen!0 (select (arr!1912 (_keys!3985 (_2!1121 lt!38897))) #b00000000000000000000000000000000) (_keys!3985 (_2!1121 lt!38897)) (mask!6335 (_2!1121 lt!38897))) (Found!252 #b00000000000000000000000000000000)))))

(assert (=> b!84483 (=> (not res!43598) (not e!55111))))

(declare-fun b!84482 () Bool)

(declare-fun e!55109 () Bool)

(assert (=> b!84482 (= e!55109 e!55110)))

(declare-fun c!13624 () Bool)

(assert (=> b!84482 (= c!13624 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (_2!1121 lt!38897))) #b00000000000000000000000000000000)))))

(declare-fun d!21619 () Bool)

(declare-fun res!43597 () Bool)

(assert (=> d!21619 (=> res!43597 e!55109)))

(assert (=> d!21619 (= res!43597 (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 (_2!1121 lt!38897)))))))

(assert (=> d!21619 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3985 (_2!1121 lt!38897)) (mask!6335 (_2!1121 lt!38897))) e!55109)))

(assert (= (and d!21619 (not res!43597)) b!84482))

(assert (= (and b!84482 c!13624) b!84483))

(assert (= (and b!84482 (not c!13624)) b!84481))

(assert (= (and b!84483 res!43598) b!84480))

(assert (= (or b!84480 b!84481) bm!7959))

(declare-fun m!88233 () Bool)

(assert (=> bm!7959 m!88233))

(assert (=> b!84483 m!87537))

(declare-fun m!88235 () Bool)

(assert (=> b!84483 m!88235))

(declare-fun m!88237 () Bool)

(assert (=> b!84483 m!88237))

(assert (=> b!84483 m!87537))

(declare-fun m!88239 () Bool)

(assert (=> b!84483 m!88239))

(assert (=> b!84482 m!87537))

(assert (=> b!84482 m!87537))

(assert (=> b!84482 m!87539))

(assert (=> b!83718 d!21619))

(assert (=> b!83325 d!21415))

(assert (=> b!83325 d!21117))

(declare-fun d!21621 () Bool)

(declare-fun e!55112 () Bool)

(assert (=> d!21621 e!55112))

(declare-fun res!43599 () Bool)

(assert (=> d!21621 (=> res!43599 e!55112)))

(declare-fun lt!39789 () Bool)

(assert (=> d!21621 (= res!43599 (not lt!39789))))

(declare-fun lt!39791 () Bool)

(assert (=> d!21621 (= lt!39789 lt!39791)))

(declare-fun lt!39792 () Unit!2445)

(declare-fun e!55113 () Unit!2445)

(assert (=> d!21621 (= lt!39792 e!55113)))

(declare-fun c!13625 () Bool)

(assert (=> d!21621 (= c!13625 lt!39791)))

(assert (=> d!21621 (= lt!39791 (containsKey!142 (toList!756 lt!39345) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!21621 (= (contains!757 lt!39345 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) lt!39789)))

(declare-fun b!84484 () Bool)

(declare-fun lt!39790 () Unit!2445)

(assert (=> b!84484 (= e!55113 lt!39790)))

(assert (=> b!84484 (= lt!39790 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39345) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> b!84484 (isDefined!92 (getValueByKey!138 (toList!756 lt!39345) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun b!84485 () Bool)

(declare-fun Unit!2509 () Unit!2445)

(assert (=> b!84485 (= e!55113 Unit!2509)))

(declare-fun b!84486 () Bool)

(assert (=> b!84486 (= e!55112 (isDefined!92 (getValueByKey!138 (toList!756 lt!39345) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (= (and d!21621 c!13625) b!84484))

(assert (= (and d!21621 (not c!13625)) b!84485))

(assert (= (and d!21621 (not res!43599)) b!84486))

(declare-fun m!88241 () Bool)

(assert (=> d!21621 m!88241))

(declare-fun m!88243 () Bool)

(assert (=> b!84484 m!88243))

(assert (=> b!84484 m!86651))

(assert (=> b!84484 m!86651))

(declare-fun m!88245 () Bool)

(assert (=> b!84484 m!88245))

(assert (=> b!84486 m!86651))

(assert (=> b!84486 m!86651))

(assert (=> b!84486 m!88245))

(assert (=> d!21069 d!21621))

(declare-fun b!84488 () Bool)

(declare-fun e!55114 () Option!144)

(declare-fun e!55115 () Option!144)

(assert (=> b!84488 (= e!55114 e!55115)))

(declare-fun c!13627 () Bool)

(assert (=> b!84488 (= c!13627 (and ((_ is Cons!1543) lt!39342) (not (= (_1!1120 (h!2133 lt!39342)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(declare-fun b!84487 () Bool)

(assert (=> b!84487 (= e!55114 (Some!143 (_2!1120 (h!2133 lt!39342))))))

(declare-fun b!84490 () Bool)

(assert (=> b!84490 (= e!55115 None!142)))

(declare-fun c!13626 () Bool)

(declare-fun d!21623 () Bool)

(assert (=> d!21623 (= c!13626 (and ((_ is Cons!1543) lt!39342) (= (_1!1120 (h!2133 lt!39342)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21623 (= (getValueByKey!138 lt!39342 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) e!55114)))

(declare-fun b!84489 () Bool)

(assert (=> b!84489 (= e!55115 (getValueByKey!138 (t!5251 lt!39342) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (= (and d!21623 c!13626) b!84487))

(assert (= (and d!21623 (not c!13626)) b!84488))

(assert (= (and b!84488 c!13627) b!84489))

(assert (= (and b!84488 (not c!13627)) b!84490))

(declare-fun m!88247 () Bool)

(assert (=> b!84489 m!88247))

(assert (=> d!21069 d!21623))

(declare-fun d!21625 () Bool)

(assert (=> d!21625 (= (getValueByKey!138 lt!39342 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun lt!39793 () Unit!2445)

(assert (=> d!21625 (= lt!39793 (choose!495 lt!39342 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun e!55116 () Bool)

(assert (=> d!21625 e!55116))

(declare-fun res!43600 () Bool)

(assert (=> d!21625 (=> (not res!43600) (not e!55116))))

(assert (=> d!21625 (= res!43600 (isStrictlySorted!292 lt!39342))))

(assert (=> d!21625 (= (lemmaContainsTupThenGetReturnValue!57 lt!39342 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) lt!39793)))

(declare-fun b!84491 () Bool)

(declare-fun res!43601 () Bool)

(assert (=> b!84491 (=> (not res!43601) (not e!55116))))

(assert (=> b!84491 (= res!43601 (containsKey!142 lt!39342 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun b!84492 () Bool)

(assert (=> b!84492 (= e!55116 (contains!760 lt!39342 (tuple2!2221 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (= (and d!21625 res!43600) b!84491))

(assert (= (and b!84491 res!43601) b!84492))

(assert (=> d!21625 m!86645))

(declare-fun m!88249 () Bool)

(assert (=> d!21625 m!88249))

(declare-fun m!88251 () Bool)

(assert (=> d!21625 m!88251))

(declare-fun m!88253 () Bool)

(assert (=> b!84491 m!88253))

(declare-fun m!88255 () Bool)

(assert (=> b!84492 m!88255))

(assert (=> d!21069 d!21625))

(declare-fun bm!7960 () Bool)

(declare-fun call!7964 () List!1547)

(declare-fun call!7963 () List!1547)

(assert (=> bm!7960 (= call!7964 call!7963)))

(declare-fun b!84493 () Bool)

(declare-fun e!55120 () List!1547)

(assert (=> b!84493 (= e!55120 call!7964)))

(declare-fun b!84494 () Bool)

(declare-fun e!55119 () List!1547)

(declare-fun call!7965 () List!1547)

(assert (=> b!84494 (= e!55119 call!7965)))

(declare-fun e!55118 () List!1547)

(declare-fun b!84495 () Bool)

(assert (=> b!84495 (= e!55118 (insertStrictlySorted!59 (t!5251 (toList!756 (+!114 lt!38755 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun b!84496 () Bool)

(assert (=> b!84496 (= e!55119 call!7965)))

(declare-fun b!84497 () Bool)

(declare-fun res!43602 () Bool)

(declare-fun e!55121 () Bool)

(assert (=> b!84497 (=> (not res!43602) (not e!55121))))

(declare-fun lt!39794 () List!1547)

(assert (=> b!84497 (= res!43602 (containsKey!142 lt!39794 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(declare-fun d!21627 () Bool)

(assert (=> d!21627 e!55121))

(declare-fun res!43603 () Bool)

(assert (=> d!21627 (=> (not res!43603) (not e!55121))))

(assert (=> d!21627 (= res!43603 (isStrictlySorted!292 lt!39794))))

(declare-fun e!55117 () List!1547)

(assert (=> d!21627 (= lt!39794 e!55117)))

(declare-fun c!13629 () Bool)

(assert (=> d!21627 (= c!13629 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38755 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))) (bvslt (_1!1120 (h!2133 (toList!756 (+!114 lt!38755 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21627 (isStrictlySorted!292 (toList!756 (+!114 lt!38755 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21627 (= (insertStrictlySorted!59 (toList!756 (+!114 lt!38755 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) lt!39794)))

(declare-fun b!84498 () Bool)

(assert (=> b!84498 (= e!55121 (contains!760 lt!39794 (tuple2!2221 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun b!84499 () Bool)

(assert (=> b!84499 (= e!55117 e!55120)))

(declare-fun c!13628 () Bool)

(assert (=> b!84499 (= c!13628 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38755 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))) (= (_1!1120 (h!2133 (toList!756 (+!114 lt!38755 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun b!84500 () Bool)

(declare-fun c!13631 () Bool)

(assert (=> b!84500 (= e!55118 (ite c!13628 (t!5251 (toList!756 (+!114 lt!38755 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))) (ite c!13631 (Cons!1543 (h!2133 (toList!756 (+!114 lt!38755 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))) (t!5251 (toList!756 (+!114 lt!38755 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))) Nil!1544)))))

(declare-fun b!84501 () Bool)

(assert (=> b!84501 (= c!13631 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38755 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))) (bvsgt (_1!1120 (h!2133 (toList!756 (+!114 lt!38755 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> b!84501 (= e!55120 e!55119)))

(declare-fun bm!7961 () Bool)

(assert (=> bm!7961 (= call!7963 ($colon$colon!70 e!55118 (ite c!13629 (h!2133 (toList!756 (+!114 lt!38755 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))) (tuple2!2221 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(declare-fun c!13630 () Bool)

(assert (=> bm!7961 (= c!13630 c!13629)))

(declare-fun b!84502 () Bool)

(assert (=> b!84502 (= e!55117 call!7963)))

(declare-fun bm!7962 () Bool)

(assert (=> bm!7962 (= call!7965 call!7964)))

(assert (= (and d!21627 c!13629) b!84502))

(assert (= (and d!21627 (not c!13629)) b!84499))

(assert (= (and b!84499 c!13628) b!84493))

(assert (= (and b!84499 (not c!13628)) b!84501))

(assert (= (and b!84501 c!13631) b!84496))

(assert (= (and b!84501 (not c!13631)) b!84494))

(assert (= (or b!84496 b!84494) bm!7962))

(assert (= (or b!84493 bm!7962) bm!7960))

(assert (= (or b!84502 bm!7960) bm!7961))

(assert (= (and bm!7961 c!13630) b!84495))

(assert (= (and bm!7961 (not c!13630)) b!84500))

(assert (= (and d!21627 res!43603) b!84497))

(assert (= (and b!84497 res!43602) b!84498))

(declare-fun m!88257 () Bool)

(assert (=> d!21627 m!88257))

(declare-fun m!88259 () Bool)

(assert (=> d!21627 m!88259))

(declare-fun m!88261 () Bool)

(assert (=> b!84495 m!88261))

(declare-fun m!88263 () Bool)

(assert (=> b!84498 m!88263))

(declare-fun m!88265 () Bool)

(assert (=> bm!7961 m!88265))

(declare-fun m!88267 () Bool)

(assert (=> b!84497 m!88267))

(assert (=> d!21069 d!21627))

(assert (=> b!83411 d!21231))

(declare-fun d!21629 () Bool)

(declare-fun lt!39795 () Bool)

(assert (=> d!21629 (= lt!39795 (select (content!87 (toList!756 lt!39400)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!55122 () Bool)

(assert (=> d!21629 (= lt!39795 e!55122)))

(declare-fun res!43604 () Bool)

(assert (=> d!21629 (=> (not res!43604) (not e!55122))))

(assert (=> d!21629 (= res!43604 ((_ is Cons!1543) (toList!756 lt!39400)))))

(assert (=> d!21629 (= (contains!760 (toList!756 lt!39400) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!39795)))

(declare-fun b!84503 () Bool)

(declare-fun e!55123 () Bool)

(assert (=> b!84503 (= e!55122 e!55123)))

(declare-fun res!43605 () Bool)

(assert (=> b!84503 (=> res!43605 e!55123)))

(assert (=> b!84503 (= res!43605 (= (h!2133 (toList!756 lt!39400)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!84504 () Bool)

(assert (=> b!84504 (= e!55123 (contains!760 (t!5251 (toList!756 lt!39400)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!21629 res!43604) b!84503))

(assert (= (and b!84503 (not res!43605)) b!84504))

(declare-fun m!88269 () Bool)

(assert (=> d!21629 m!88269))

(declare-fun m!88271 () Bool)

(assert (=> d!21629 m!88271))

(declare-fun m!88273 () Bool)

(assert (=> b!84504 m!88273))

(assert (=> b!83660 d!21629))

(declare-fun d!21631 () Bool)

(assert (=> d!21631 (= (+!114 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (getCurrentListMap!440 (_keys!3985 newMap!16) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (index!3145 lt!38899) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(assert (=> d!21631 true))

(declare-fun _$5!89 () Unit!2445)

(assert (=> d!21631 (= (choose!494 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (index!3145 lt!38899) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748 (defaultEntry!2317 newMap!16)) _$5!89)))

(declare-fun bs!3562 () Bool)

(assert (= bs!3562 d!21631))

(assert (=> bs!3562 m!85729))

(assert (=> bs!3562 m!85729))

(assert (=> bs!3562 m!86031))

(assert (=> bs!3562 m!85757))

(assert (=> bs!3562 m!86033))

(assert (=> d!20913 d!21631))

(assert (=> d!20913 d!21219))

(declare-fun d!21633 () Bool)

(declare-fun e!55124 () Bool)

(assert (=> d!21633 e!55124))

(declare-fun res!43606 () Bool)

(assert (=> d!21633 (=> res!43606 e!55124)))

(declare-fun lt!39796 () Bool)

(assert (=> d!21633 (= res!43606 (not lt!39796))))

(declare-fun lt!39798 () Bool)

(assert (=> d!21633 (= lt!39796 lt!39798)))

(declare-fun lt!39799 () Unit!2445)

(declare-fun e!55125 () Unit!2445)

(assert (=> d!21633 (= lt!39799 e!55125)))

(declare-fun c!13632 () Bool)

(assert (=> d!21633 (= c!13632 lt!39798)))

(assert (=> d!21633 (= lt!39798 (containsKey!142 (toList!756 (map!1190 (_2!1121 lt!39166))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> d!21633 (= (contains!757 (map!1190 (_2!1121 lt!39166)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) lt!39796)))

(declare-fun b!84505 () Bool)

(declare-fun lt!39797 () Unit!2445)

(assert (=> b!84505 (= e!55125 lt!39797)))

(assert (=> b!84505 (= lt!39797 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 (map!1190 (_2!1121 lt!39166))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> b!84505 (isDefined!92 (getValueByKey!138 (toList!756 (map!1190 (_2!1121 lt!39166))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun b!84506 () Bool)

(declare-fun Unit!2510 () Unit!2445)

(assert (=> b!84506 (= e!55125 Unit!2510)))

(declare-fun b!84507 () Bool)

(assert (=> b!84507 (= e!55124 (isDefined!92 (getValueByKey!138 (toList!756 (map!1190 (_2!1121 lt!39166))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))))

(assert (= (and d!21633 c!13632) b!84505))

(assert (= (and d!21633 (not c!13632)) b!84506))

(assert (= (and d!21633 (not res!43606)) b!84507))

(assert (=> d!21633 m!85591))

(declare-fun m!88275 () Bool)

(assert (=> d!21633 m!88275))

(assert (=> b!84505 m!85591))

(declare-fun m!88277 () Bool)

(assert (=> b!84505 m!88277))

(assert (=> b!84505 m!85591))

(declare-fun m!88279 () Bool)

(assert (=> b!84505 m!88279))

(assert (=> b!84505 m!88279))

(declare-fun m!88281 () Bool)

(assert (=> b!84505 m!88281))

(assert (=> b!84507 m!85591))

(assert (=> b!84507 m!88279))

(assert (=> b!84507 m!88279))

(assert (=> b!84507 m!88281))

(assert (=> b!83308 d!21633))

(assert (=> b!83308 d!21547))

(declare-fun d!21635 () Bool)

(assert (=> d!21635 (isDefined!92 (getValueByKey!138 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun lt!39800 () Unit!2445)

(assert (=> d!21635 (= lt!39800 (choose!496 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun e!55126 () Bool)

(assert (=> d!21635 e!55126))

(declare-fun res!43607 () Bool)

(assert (=> d!21635 (=> (not res!43607) (not e!55126))))

(assert (=> d!21635 (= res!43607 (isStrictlySorted!292 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))))

(assert (=> d!21635 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) lt!39800)))

(declare-fun b!84508 () Bool)

(assert (=> b!84508 (= e!55126 (containsKey!142 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (= (and d!21635 res!43607) b!84508))

(assert (=> d!21635 m!85591))

(assert (=> d!21635 m!86039))

(assert (=> d!21635 m!86039))

(assert (=> d!21635 m!86041))

(assert (=> d!21635 m!85591))

(declare-fun m!88283 () Bool)

(assert (=> d!21635 m!88283))

(declare-fun m!88285 () Bool)

(assert (=> d!21635 m!88285))

(assert (=> b!84508 m!85591))

(assert (=> b!84508 m!86035))

(assert (=> b!83225 d!21635))

(declare-fun d!21637 () Bool)

(assert (=> d!21637 (= (isDefined!92 (getValueByKey!138 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))) (not (isEmpty!338 (getValueByKey!138 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))))

(declare-fun bs!3563 () Bool)

(assert (= bs!3563 d!21637))

(assert (=> bs!3563 m!86039))

(declare-fun m!88287 () Bool)

(assert (=> bs!3563 m!88287))

(assert (=> b!83225 d!21637))

(declare-fun b!84510 () Bool)

(declare-fun e!55127 () Option!144)

(declare-fun e!55128 () Option!144)

(assert (=> b!84510 (= e!55127 e!55128)))

(declare-fun c!13634 () Bool)

(assert (=> b!84510 (= c!13634 (and ((_ is Cons!1543) (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))) (not (= (_1!1120 (h!2133 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))))

(declare-fun b!84509 () Bool)

(assert (=> b!84509 (= e!55127 (Some!143 (_2!1120 (h!2133 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))))))

(declare-fun b!84512 () Bool)

(assert (=> b!84512 (= e!55128 None!142)))

(declare-fun d!21639 () Bool)

(declare-fun c!13633 () Bool)

(assert (=> d!21639 (= c!13633 (and ((_ is Cons!1543) (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))) (= (_1!1120 (h!2133 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))))

(assert (=> d!21639 (= (getValueByKey!138 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) e!55127)))

(declare-fun b!84511 () Bool)

(assert (=> b!84511 (= e!55128 (getValueByKey!138 (t!5251 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (= (and d!21639 c!13633) b!84509))

(assert (= (and d!21639 (not c!13633)) b!84510))

(assert (= (and b!84510 c!13634) b!84511))

(assert (= (and b!84510 (not c!13634)) b!84512))

(assert (=> b!84511 m!85591))

(declare-fun m!88289 () Bool)

(assert (=> b!84511 m!88289))

(assert (=> b!83225 d!21639))

(declare-fun d!21641 () Bool)

(declare-fun c!13635 () Bool)

(assert (=> d!21641 (= c!13635 ((_ is Nil!1544) (toList!756 lt!39033)))))

(declare-fun e!55129 () (InoxSet tuple2!2220))

(assert (=> d!21641 (= (content!87 (toList!756 lt!39033)) e!55129)))

(declare-fun b!84513 () Bool)

(assert (=> b!84513 (= e!55129 ((as const (Array tuple2!2220 Bool)) false))))

(declare-fun b!84514 () Bool)

(assert (=> b!84514 (= e!55129 ((_ map or) (store ((as const (Array tuple2!2220 Bool)) false) (h!2133 (toList!756 lt!39033)) true) (content!87 (t!5251 (toList!756 lt!39033)))))))

(assert (= (and d!21641 c!13635) b!84513))

(assert (= (and d!21641 (not c!13635)) b!84514))

(declare-fun m!88291 () Bool)

(assert (=> b!84514 m!88291))

(assert (=> b!84514 m!87739))

(assert (=> d!21029 d!21641))

(declare-fun d!21643 () Bool)

(assert (=> d!21643 (= (get!1207 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2631 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!83648 d!21643))

(declare-fun d!21645 () Bool)

(assert (=> d!21645 (= ($colon$colon!70 e!54587 (ite c!13383 (h!2133 (toList!756 (+!114 lt!38754 lt!38747))) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750)))) (Cons!1543 (ite c!13383 (h!2133 (toList!756 (+!114 lt!38754 lt!38747))) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))) e!54587))))

(assert (=> bm!7866 d!21645))

(assert (=> b!83489 d!21375))

(assert (=> b!83489 d!21377))

(declare-fun d!21647 () Bool)

(declare-fun lt!39801 () Bool)

(assert (=> d!21647 (= lt!39801 (select (content!86 Nil!1545) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!55131 () Bool)

(assert (=> d!21647 (= lt!39801 e!55131)))

(declare-fun res!43608 () Bool)

(assert (=> d!21647 (=> (not res!43608) (not e!55131))))

(assert (=> d!21647 (= res!43608 ((_ is Cons!1544) Nil!1545))))

(assert (=> d!21647 (= (contains!759 Nil!1545 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) lt!39801)))

(declare-fun b!84515 () Bool)

(declare-fun e!55130 () Bool)

(assert (=> b!84515 (= e!55131 e!55130)))

(declare-fun res!43609 () Bool)

(assert (=> b!84515 (=> res!43609 e!55130)))

(assert (=> b!84515 (= res!43609 (= (h!2134 Nil!1545) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84516 () Bool)

(assert (=> b!84516 (= e!55130 (contains!759 (t!5252 Nil!1545) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!21647 res!43608) b!84515))

(assert (= (and b!84515 (not res!43609)) b!84516))

(assert (=> d!21647 m!86301))

(assert (=> d!21647 m!86049))

(declare-fun m!88293 () Bool)

(assert (=> d!21647 m!88293))

(assert (=> b!84516 m!86049))

(declare-fun m!88295 () Bool)

(assert (=> b!84516 m!88295))

(assert (=> b!83529 d!21647))

(declare-fun d!21649 () Bool)

(declare-fun lt!39802 () Bool)

(assert (=> d!21649 (= lt!39802 (select (content!87 (t!5251 (toList!756 lt!39029))) lt!38750))))

(declare-fun e!55132 () Bool)

(assert (=> d!21649 (= lt!39802 e!55132)))

(declare-fun res!43610 () Bool)

(assert (=> d!21649 (=> (not res!43610) (not e!55132))))

(assert (=> d!21649 (= res!43610 ((_ is Cons!1543) (t!5251 (toList!756 lt!39029))))))

(assert (=> d!21649 (= (contains!760 (t!5251 (toList!756 lt!39029)) lt!38750) lt!39802)))

(declare-fun b!84517 () Bool)

(declare-fun e!55133 () Bool)

(assert (=> b!84517 (= e!55132 e!55133)))

(declare-fun res!43611 () Bool)

(assert (=> b!84517 (=> res!43611 e!55133)))

(assert (=> b!84517 (= res!43611 (= (h!2133 (t!5251 (toList!756 lt!39029))) lt!38750))))

(declare-fun b!84518 () Bool)

(assert (=> b!84518 (= e!55133 (contains!760 (t!5251 (t!5251 (toList!756 lt!39029))) lt!38750))))

(assert (= (and d!21649 res!43610) b!84517))

(assert (= (and b!84517 (not res!43611)) b!84518))

(declare-fun m!88297 () Bool)

(assert (=> d!21649 m!88297))

(declare-fun m!88299 () Bool)

(assert (=> d!21649 m!88299))

(declare-fun m!88301 () Bool)

(assert (=> b!84518 m!88301))

(assert (=> b!83523 d!21649))

(assert (=> d!20981 d!20979))

(declare-fun d!21651 () Bool)

(assert (=> d!21651 (= (getValueByKey!138 lt!39038 (_1!1120 lt!38747)) (Some!143 (_2!1120 lt!38747)))))

(assert (=> d!21651 true))

(declare-fun _$22!412 () Unit!2445)

(assert (=> d!21651 (= (choose!495 lt!39038 (_1!1120 lt!38747) (_2!1120 lt!38747)) _$22!412)))

(declare-fun bs!3564 () Bool)

(assert (= bs!3564 d!21651))

(assert (=> bs!3564 m!85947))

(assert (=> d!20981 d!21651))

(declare-fun d!21653 () Bool)

(declare-fun res!43612 () Bool)

(declare-fun e!55134 () Bool)

(assert (=> d!21653 (=> res!43612 e!55134)))

(assert (=> d!21653 (= res!43612 (or ((_ is Nil!1544) lt!39038) ((_ is Nil!1544) (t!5251 lt!39038))))))

(assert (=> d!21653 (= (isStrictlySorted!292 lt!39038) e!55134)))

(declare-fun b!84519 () Bool)

(declare-fun e!55135 () Bool)

(assert (=> b!84519 (= e!55134 e!55135)))

(declare-fun res!43613 () Bool)

(assert (=> b!84519 (=> (not res!43613) (not e!55135))))

(assert (=> b!84519 (= res!43613 (bvslt (_1!1120 (h!2133 lt!39038)) (_1!1120 (h!2133 (t!5251 lt!39038)))))))

(declare-fun b!84520 () Bool)

(assert (=> b!84520 (= e!55135 (isStrictlySorted!292 (t!5251 lt!39038)))))

(assert (= (and d!21653 (not res!43612)) b!84519))

(assert (= (and b!84519 res!43613) b!84520))

(declare-fun m!88303 () Bool)

(assert (=> b!84520 m!88303))

(assert (=> d!20981 d!21653))

(declare-fun b!84522 () Bool)

(declare-fun e!55136 () Option!144)

(declare-fun e!55137 () Option!144)

(assert (=> b!84522 (= e!55136 e!55137)))

(declare-fun c!13637 () Bool)

(assert (=> b!84522 (= c!13637 (and ((_ is Cons!1543) (toList!756 lt!39262)) (not (= (_1!1120 (h!2133 (toList!756 lt!39262))) (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!84521 () Bool)

(assert (=> b!84521 (= e!55136 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39262)))))))

(declare-fun b!84524 () Bool)

(assert (=> b!84524 (= e!55137 None!142)))

(declare-fun c!13636 () Bool)

(declare-fun d!21655 () Bool)

(assert (=> d!21655 (= c!13636 (and ((_ is Cons!1543) (toList!756 lt!39262)) (= (_1!1120 (h!2133 (toList!756 lt!39262))) (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21655 (= (getValueByKey!138 (toList!756 lt!39262) (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) e!55136)))

(declare-fun b!84523 () Bool)

(assert (=> b!84523 (= e!55137 (getValueByKey!138 (t!5251 (toList!756 lt!39262)) (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21655 c!13636) b!84521))

(assert (= (and d!21655 (not c!13636)) b!84522))

(assert (= (and b!84522 c!13637) b!84523))

(assert (= (and b!84522 (not c!13637)) b!84524))

(declare-fun m!88305 () Bool)

(assert (=> b!84523 m!88305))

(assert (=> b!83491 d!21655))

(declare-fun d!21657 () Bool)

(assert (=> d!21657 (= ($colon$colon!70 e!54467 (ite c!13330 (h!2133 (toList!756 lt!38751)) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747)))) (Cons!1543 (ite c!13330 (h!2133 (toList!756 lt!38751)) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))) e!54467))))

(assert (=> bm!7842 d!21657))

(declare-fun d!21659 () Bool)

(declare-fun res!43614 () Bool)

(declare-fun e!55138 () Bool)

(assert (=> d!21659 (=> (not res!43614) (not e!55138))))

(assert (=> d!21659 (= res!43614 (simpleValid!56 (_2!1121 lt!39166)))))

(assert (=> d!21659 (= (valid!325 (_2!1121 lt!39166)) e!55138)))

(declare-fun b!84525 () Bool)

(declare-fun res!43615 () Bool)

(assert (=> b!84525 (=> (not res!43615) (not e!55138))))

(assert (=> b!84525 (= res!43615 (= (arrayCountValidKeys!0 (_keys!3985 (_2!1121 lt!39166)) #b00000000000000000000000000000000 (size!2155 (_keys!3985 (_2!1121 lt!39166)))) (_size!424 (_2!1121 lt!39166))))))

(declare-fun b!84526 () Bool)

(declare-fun res!43616 () Bool)

(assert (=> b!84526 (=> (not res!43616) (not e!55138))))

(assert (=> b!84526 (= res!43616 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3985 (_2!1121 lt!39166)) (mask!6335 (_2!1121 lt!39166))))))

(declare-fun b!84527 () Bool)

(assert (=> b!84527 (= e!55138 (arrayNoDuplicates!0 (_keys!3985 (_2!1121 lt!39166)) #b00000000000000000000000000000000 Nil!1545))))

(assert (= (and d!21659 res!43614) b!84525))

(assert (= (and b!84525 res!43615) b!84526))

(assert (= (and b!84526 res!43616) b!84527))

(declare-fun m!88307 () Bool)

(assert (=> d!21659 m!88307))

(declare-fun m!88309 () Bool)

(assert (=> b!84525 m!88309))

(declare-fun m!88311 () Bool)

(assert (=> b!84526 m!88311))

(declare-fun m!88313 () Bool)

(assert (=> b!84527 m!88313))

(assert (=> b!83322 d!21659))

(declare-fun d!21661 () Bool)

(declare-fun lt!39803 () Bool)

(assert (=> d!21661 (= lt!39803 (select (content!87 (toList!756 lt!39244)) (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun e!55139 () Bool)

(assert (=> d!21661 (= lt!39803 e!55139)))

(declare-fun res!43617 () Bool)

(assert (=> d!21661 (=> (not res!43617) (not e!55139))))

(assert (=> d!21661 (= res!43617 ((_ is Cons!1543) (toList!756 lt!39244)))))

(assert (=> d!21661 (= (contains!760 (toList!756 lt!39244) (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!39803)))

(declare-fun b!84528 () Bool)

(declare-fun e!55140 () Bool)

(assert (=> b!84528 (= e!55139 e!55140)))

(declare-fun res!43618 () Bool)

(assert (=> b!84528 (=> res!43618 e!55140)))

(assert (=> b!84528 (= res!43618 (= (h!2133 (toList!756 lt!39244)) (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!84529 () Bool)

(assert (=> b!84529 (= e!55140 (contains!760 (t!5251 (toList!756 lt!39244)) (tuple2!2221 lt!38970 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(assert (= (and d!21661 res!43617) b!84528))

(assert (= (and b!84528 (not res!43618)) b!84529))

(declare-fun m!88315 () Bool)

(assert (=> d!21661 m!88315))

(declare-fun m!88317 () Bool)

(assert (=> d!21661 m!88317))

(declare-fun m!88319 () Bool)

(assert (=> b!84529 m!88319))

(assert (=> b!83480 d!21661))

(declare-fun d!21663 () Bool)

(declare-fun lt!39804 () Bool)

(assert (=> d!21663 (= lt!39804 (select (content!87 (toList!756 lt!39345)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(declare-fun e!55141 () Bool)

(assert (=> d!21663 (= lt!39804 e!55141)))

(declare-fun res!43619 () Bool)

(assert (=> d!21663 (=> (not res!43619) (not e!55141))))

(assert (=> d!21663 (= res!43619 ((_ is Cons!1543) (toList!756 lt!39345)))))

(assert (=> d!21663 (= (contains!760 (toList!756 lt!39345) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) lt!39804)))

(declare-fun b!84530 () Bool)

(declare-fun e!55142 () Bool)

(assert (=> b!84530 (= e!55141 e!55142)))

(declare-fun res!43620 () Bool)

(assert (=> b!84530 (=> res!43620 e!55142)))

(assert (=> b!84530 (= res!43620 (= (h!2133 (toList!756 lt!39345)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(declare-fun b!84531 () Bool)

(assert (=> b!84531 (= e!55142 (contains!760 (t!5251 (toList!756 lt!39345)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(assert (= (and d!21663 res!43619) b!84530))

(assert (= (and b!84530 (not res!43620)) b!84531))

(declare-fun m!88321 () Bool)

(assert (=> d!21663 m!88321))

(declare-fun m!88323 () Bool)

(assert (=> d!21663 m!88323))

(declare-fun m!88325 () Bool)

(assert (=> b!84531 m!88325))

(assert (=> b!83589 d!21663))

(assert (=> d!21047 d!21045))

(declare-fun d!21665 () Bool)

(assert (=> d!21665 (= (getValueByKey!138 lt!39042 (_1!1120 lt!38747)) (Some!143 (_2!1120 lt!38747)))))

(assert (=> d!21665 true))

(declare-fun _$22!413 () Unit!2445)

(assert (=> d!21665 (= (choose!495 lt!39042 (_1!1120 lt!38747) (_2!1120 lt!38747)) _$22!413)))

(declare-fun bs!3565 () Bool)

(assert (= bs!3565 d!21665))

(assert (=> bs!3565 m!85959))

(assert (=> d!21047 d!21665))

(declare-fun d!21667 () Bool)

(declare-fun res!43621 () Bool)

(declare-fun e!55143 () Bool)

(assert (=> d!21667 (=> res!43621 e!55143)))

(assert (=> d!21667 (= res!43621 (or ((_ is Nil!1544) lt!39042) ((_ is Nil!1544) (t!5251 lt!39042))))))

(assert (=> d!21667 (= (isStrictlySorted!292 lt!39042) e!55143)))

(declare-fun b!84532 () Bool)

(declare-fun e!55144 () Bool)

(assert (=> b!84532 (= e!55143 e!55144)))

(declare-fun res!43622 () Bool)

(assert (=> b!84532 (=> (not res!43622) (not e!55144))))

(assert (=> b!84532 (= res!43622 (bvslt (_1!1120 (h!2133 lt!39042)) (_1!1120 (h!2133 (t!5251 lt!39042)))))))

(declare-fun b!84533 () Bool)

(assert (=> b!84533 (= e!55144 (isStrictlySorted!292 (t!5251 lt!39042)))))

(assert (= (and d!21667 (not res!43621)) b!84532))

(assert (= (and b!84532 res!43622) b!84533))

(declare-fun m!88327 () Bool)

(assert (=> b!84533 m!88327))

(assert (=> d!21047 d!21667))

(assert (=> d!21099 d!21097))

(assert (=> d!21099 d!21095))

(declare-fun d!21669 () Bool)

(assert (=> d!21669 (not (contains!757 (+!114 lt!39018 (tuple2!2221 lt!39022 lt!39020)) lt!39019))))

(assert (=> d!21669 true))

(declare-fun _$36!310 () Unit!2445)

(assert (=> d!21669 (= (choose!501 lt!39018 lt!39022 lt!39020 lt!39019) _$36!310)))

(declare-fun bs!3566 () Bool)

(assert (= bs!3566 d!21669))

(assert (=> bs!3566 m!85885))

(assert (=> bs!3566 m!85885))

(assert (=> bs!3566 m!85889))

(assert (=> d!21099 d!21669))

(declare-fun d!21671 () Bool)

(declare-fun e!55145 () Bool)

(assert (=> d!21671 e!55145))

(declare-fun res!43623 () Bool)

(assert (=> d!21671 (=> res!43623 e!55145)))

(declare-fun lt!39805 () Bool)

(assert (=> d!21671 (= res!43623 (not lt!39805))))

(declare-fun lt!39807 () Bool)

(assert (=> d!21671 (= lt!39805 lt!39807)))

(declare-fun lt!39808 () Unit!2445)

(declare-fun e!55146 () Unit!2445)

(assert (=> d!21671 (= lt!39808 e!55146)))

(declare-fun c!13638 () Bool)

(assert (=> d!21671 (= c!13638 lt!39807)))

(assert (=> d!21671 (= lt!39807 (containsKey!142 (toList!756 lt!39018) lt!39019))))

(assert (=> d!21671 (= (contains!757 lt!39018 lt!39019) lt!39805)))

(declare-fun b!84535 () Bool)

(declare-fun lt!39806 () Unit!2445)

(assert (=> b!84535 (= e!55146 lt!39806)))

(assert (=> b!84535 (= lt!39806 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39018) lt!39019))))

(assert (=> b!84535 (isDefined!92 (getValueByKey!138 (toList!756 lt!39018) lt!39019))))

(declare-fun b!84536 () Bool)

(declare-fun Unit!2511 () Unit!2445)

(assert (=> b!84536 (= e!55146 Unit!2511)))

(declare-fun b!84537 () Bool)

(assert (=> b!84537 (= e!55145 (isDefined!92 (getValueByKey!138 (toList!756 lt!39018) lt!39019)))))

(assert (= (and d!21671 c!13638) b!84535))

(assert (= (and d!21671 (not c!13638)) b!84536))

(assert (= (and d!21671 (not res!43623)) b!84537))

(declare-fun m!88329 () Bool)

(assert (=> d!21671 m!88329))

(declare-fun m!88331 () Bool)

(assert (=> b!84535 m!88331))

(declare-fun m!88333 () Bool)

(assert (=> b!84535 m!88333))

(assert (=> b!84535 m!88333))

(declare-fun m!88335 () Bool)

(assert (=> b!84535 m!88335))

(assert (=> b!84537 m!88333))

(assert (=> b!84537 m!88333))

(assert (=> b!84537 m!88335))

(assert (=> d!21099 d!21671))

(declare-fun d!21673 () Bool)

(declare-fun res!43624 () Bool)

(declare-fun e!55147 () Bool)

(assert (=> d!21673 (=> res!43624 e!55147)))

(assert (=> d!21673 (= res!43624 (and ((_ is Cons!1543) (toList!756 lt!39021)) (= (_1!1120 (h!2133 (toList!756 lt!39021))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21673 (= (containsKey!142 (toList!756 lt!39021) #b0000000000000000000000000000000000000000000000000000000000000000) e!55147)))

(declare-fun b!84538 () Bool)

(declare-fun e!55148 () Bool)

(assert (=> b!84538 (= e!55147 e!55148)))

(declare-fun res!43625 () Bool)

(assert (=> b!84538 (=> (not res!43625) (not e!55148))))

(assert (=> b!84538 (= res!43625 (and (or (not ((_ is Cons!1543) (toList!756 lt!39021))) (bvsle (_1!1120 (h!2133 (toList!756 lt!39021))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1543) (toList!756 lt!39021)) (bvslt (_1!1120 (h!2133 (toList!756 lt!39021))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84539 () Bool)

(assert (=> b!84539 (= e!55148 (containsKey!142 (t!5251 (toList!756 lt!39021)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21673 (not res!43624)) b!84538))

(assert (= (and b!84538 res!43625) b!84539))

(declare-fun m!88337 () Bool)

(assert (=> b!84539 m!88337))

(assert (=> d!21057 d!21673))

(assert (=> b!83575 d!21433))

(assert (=> b!83575 d!21435))

(declare-fun b!84541 () Bool)

(declare-fun e!55149 () Option!144)

(declare-fun e!55150 () Option!144)

(assert (=> b!84541 (= e!55149 e!55150)))

(declare-fun c!13640 () Bool)

(assert (=> b!84541 (= c!13640 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!39029))) (not (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!39029)))) (_1!1120 lt!38750)))))))

(declare-fun b!84540 () Bool)

(assert (=> b!84540 (= e!55149 (Some!143 (_2!1120 (h!2133 (t!5251 (toList!756 lt!39029))))))))

(declare-fun b!84543 () Bool)

(assert (=> b!84543 (= e!55150 None!142)))

(declare-fun d!21675 () Bool)

(declare-fun c!13639 () Bool)

(assert (=> d!21675 (= c!13639 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!39029))) (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!39029)))) (_1!1120 lt!38750))))))

(assert (=> d!21675 (= (getValueByKey!138 (t!5251 (toList!756 lt!39029)) (_1!1120 lt!38750)) e!55149)))

(declare-fun b!84542 () Bool)

(assert (=> b!84542 (= e!55150 (getValueByKey!138 (t!5251 (t!5251 (toList!756 lt!39029))) (_1!1120 lt!38750)))))

(assert (= (and d!21675 c!13639) b!84540))

(assert (= (and d!21675 (not c!13639)) b!84541))

(assert (= (and b!84541 c!13640) b!84542))

(assert (= (and b!84541 (not c!13640)) b!84543))

(declare-fun m!88339 () Bool)

(assert (=> b!84542 m!88339))

(assert (=> b!83679 d!21675))

(declare-fun b!84545 () Bool)

(declare-fun e!55151 () Option!144)

(declare-fun e!55152 () Option!144)

(assert (=> b!84545 (= e!55151 e!55152)))

(declare-fun c!13642 () Bool)

(assert (=> b!84545 (= c!13642 (and ((_ is Cons!1543) (toList!756 lt!39251)) (not (= (_1!1120 (h!2133 (toList!756 lt!39251))) (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!84544 () Bool)

(assert (=> b!84544 (= e!55151 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39251)))))))

(declare-fun b!84547 () Bool)

(assert (=> b!84547 (= e!55152 None!142)))

(declare-fun d!21677 () Bool)

(declare-fun c!13641 () Bool)

(assert (=> d!21677 (= c!13641 (and ((_ is Cons!1543) (toList!756 lt!39251)) (= (_1!1120 (h!2133 (toList!756 lt!39251))) (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21677 (= (getValueByKey!138 (toList!756 lt!39251) (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) e!55151)))

(declare-fun b!84546 () Bool)

(assert (=> b!84546 (= e!55152 (getValueByKey!138 (t!5251 (toList!756 lt!39251)) (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21677 c!13641) b!84544))

(assert (= (and d!21677 (not c!13641)) b!84545))

(assert (= (and b!84545 c!13642) b!84546))

(assert (= (and b!84545 (not c!13642)) b!84547))

(declare-fun m!88341 () Bool)

(assert (=> b!84546 m!88341))

(assert (=> b!83485 d!21677))

(declare-fun bm!7963 () Bool)

(declare-fun call!7967 () List!1547)

(declare-fun call!7966 () List!1547)

(assert (=> bm!7963 (= call!7967 call!7966)))

(declare-fun b!84548 () Bool)

(declare-fun e!55156 () List!1547)

(assert (=> b!84548 (= e!55156 call!7967)))

(declare-fun b!84549 () Bool)

(declare-fun e!55155 () List!1547)

(declare-fun call!7968 () List!1547)

(assert (=> b!84549 (= e!55155 call!7968)))

(declare-fun b!84550 () Bool)

(declare-fun e!55154 () List!1547)

(assert (=> b!84550 (= e!55154 (insertStrictlySorted!59 (t!5251 (t!5251 (toList!756 lt!38749))) (_1!1120 lt!38760) (_2!1120 lt!38760)))))

(declare-fun b!84551 () Bool)

(assert (=> b!84551 (= e!55155 call!7968)))

(declare-fun b!84552 () Bool)

(declare-fun res!43626 () Bool)

(declare-fun e!55157 () Bool)

(assert (=> b!84552 (=> (not res!43626) (not e!55157))))

(declare-fun lt!39809 () List!1547)

(assert (=> b!84552 (= res!43626 (containsKey!142 lt!39809 (_1!1120 lt!38760)))))

(declare-fun d!21679 () Bool)

(assert (=> d!21679 e!55157))

(declare-fun res!43627 () Bool)

(assert (=> d!21679 (=> (not res!43627) (not e!55157))))

(assert (=> d!21679 (= res!43627 (isStrictlySorted!292 lt!39809))))

(declare-fun e!55153 () List!1547)

(assert (=> d!21679 (= lt!39809 e!55153)))

(declare-fun c!13644 () Bool)

(assert (=> d!21679 (= c!13644 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38749))) (bvslt (_1!1120 (h!2133 (t!5251 (toList!756 lt!38749)))) (_1!1120 lt!38760))))))

(assert (=> d!21679 (isStrictlySorted!292 (t!5251 (toList!756 lt!38749)))))

(assert (=> d!21679 (= (insertStrictlySorted!59 (t!5251 (toList!756 lt!38749)) (_1!1120 lt!38760) (_2!1120 lt!38760)) lt!39809)))

(declare-fun b!84553 () Bool)

(assert (=> b!84553 (= e!55157 (contains!760 lt!39809 (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))))))

(declare-fun b!84554 () Bool)

(assert (=> b!84554 (= e!55153 e!55156)))

(declare-fun c!13643 () Bool)

(assert (=> b!84554 (= c!13643 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38749))) (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!38749)))) (_1!1120 lt!38760))))))

(declare-fun b!84555 () Bool)

(declare-fun c!13646 () Bool)

(assert (=> b!84555 (= e!55154 (ite c!13643 (t!5251 (t!5251 (toList!756 lt!38749))) (ite c!13646 (Cons!1543 (h!2133 (t!5251 (toList!756 lt!38749))) (t!5251 (t!5251 (toList!756 lt!38749)))) Nil!1544)))))

(declare-fun b!84556 () Bool)

(assert (=> b!84556 (= c!13646 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38749))) (bvsgt (_1!1120 (h!2133 (t!5251 (toList!756 lt!38749)))) (_1!1120 lt!38760))))))

(assert (=> b!84556 (= e!55156 e!55155)))

(declare-fun bm!7964 () Bool)

(assert (=> bm!7964 (= call!7966 ($colon$colon!70 e!55154 (ite c!13644 (h!2133 (t!5251 (toList!756 lt!38749))) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760)))))))

(declare-fun c!13645 () Bool)

(assert (=> bm!7964 (= c!13645 c!13644)))

(declare-fun b!84557 () Bool)

(assert (=> b!84557 (= e!55153 call!7966)))

(declare-fun bm!7965 () Bool)

(assert (=> bm!7965 (= call!7968 call!7967)))

(assert (= (and d!21679 c!13644) b!84557))

(assert (= (and d!21679 (not c!13644)) b!84554))

(assert (= (and b!84554 c!13643) b!84548))

(assert (= (and b!84554 (not c!13643)) b!84556))

(assert (= (and b!84556 c!13646) b!84551))

(assert (= (and b!84556 (not c!13646)) b!84549))

(assert (= (or b!84551 b!84549) bm!7965))

(assert (= (or b!84548 bm!7965) bm!7963))

(assert (= (or b!84557 bm!7963) bm!7964))

(assert (= (and bm!7964 c!13645) b!84550))

(assert (= (and bm!7964 (not c!13645)) b!84555))

(assert (= (and d!21679 res!43627) b!84552))

(assert (= (and b!84552 res!43626) b!84553))

(declare-fun m!88343 () Bool)

(assert (=> d!21679 m!88343))

(assert (=> d!21679 m!87651))

(declare-fun m!88345 () Bool)

(assert (=> b!84550 m!88345))

(declare-fun m!88347 () Bool)

(assert (=> b!84553 m!88347))

(declare-fun m!88349 () Bool)

(assert (=> bm!7964 m!88349))

(declare-fun m!88351 () Bool)

(assert (=> b!84552 m!88351))

(assert (=> b!83396 d!21679))

(declare-fun d!21681 () Bool)

(declare-fun c!13647 () Bool)

(assert (=> d!21681 (= c!13647 ((_ is Nil!1544) (toList!756 lt!39029)))))

(declare-fun e!55158 () (InoxSet tuple2!2220))

(assert (=> d!21681 (= (content!87 (toList!756 lt!39029)) e!55158)))

(declare-fun b!84558 () Bool)

(assert (=> b!84558 (= e!55158 ((as const (Array tuple2!2220 Bool)) false))))

(declare-fun b!84559 () Bool)

(assert (=> b!84559 (= e!55158 ((_ map or) (store ((as const (Array tuple2!2220 Bool)) false) (h!2133 (toList!756 lt!39029)) true) (content!87 (t!5251 (toList!756 lt!39029)))))))

(assert (= (and d!21681 c!13647) b!84558))

(assert (= (and d!21681 (not c!13647)) b!84559))

(declare-fun m!88353 () Bool)

(assert (=> b!84559 m!88353))

(assert (=> b!84559 m!88297))

(assert (=> d!21027 d!21681))

(declare-fun d!21683 () Bool)

(declare-fun res!43628 () Bool)

(declare-fun e!55159 () Bool)

(assert (=> d!21683 (=> res!43628 e!55159)))

(assert (=> d!21683 (= res!43628 (and ((_ is Cons!1543) (toList!756 lt!39037)) (= (_1!1120 (h!2133 (toList!756 lt!39037))) (_1!1120 lt!38760))))))

(assert (=> d!21683 (= (containsKey!142 (toList!756 lt!39037) (_1!1120 lt!38760)) e!55159)))

(declare-fun b!84560 () Bool)

(declare-fun e!55160 () Bool)

(assert (=> b!84560 (= e!55159 e!55160)))

(declare-fun res!43629 () Bool)

(assert (=> b!84560 (=> (not res!43629) (not e!55160))))

(assert (=> b!84560 (= res!43629 (and (or (not ((_ is Cons!1543) (toList!756 lt!39037))) (bvsle (_1!1120 (h!2133 (toList!756 lt!39037))) (_1!1120 lt!38760))) ((_ is Cons!1543) (toList!756 lt!39037)) (bvslt (_1!1120 (h!2133 (toList!756 lt!39037))) (_1!1120 lt!38760))))))

(declare-fun b!84561 () Bool)

(assert (=> b!84561 (= e!55160 (containsKey!142 (t!5251 (toList!756 lt!39037)) (_1!1120 lt!38760)))))

(assert (= (and d!21683 (not res!43628)) b!84560))

(assert (= (and b!84560 res!43629) b!84561))

(declare-fun m!88355 () Bool)

(assert (=> b!84561 m!88355))

(assert (=> d!21135 d!21683))

(declare-fun bm!7966 () Bool)

(declare-fun call!7970 () List!1547)

(declare-fun call!7969 () List!1547)

(assert (=> bm!7966 (= call!7970 call!7969)))

(declare-fun b!84562 () Bool)

(declare-fun e!55164 () List!1547)

(assert (=> b!84562 (= e!55164 call!7970)))

(declare-fun b!84563 () Bool)

(declare-fun e!55163 () List!1547)

(declare-fun call!7971 () List!1547)

(assert (=> b!84563 (= e!55163 call!7971)))

(declare-fun b!84564 () Bool)

(declare-fun e!55162 () List!1547)

(assert (=> b!84564 (= e!55162 (insertStrictlySorted!59 (t!5251 (t!5251 (toList!756 lt!38755))) (_1!1120 lt!38750) (_2!1120 lt!38750)))))

(declare-fun b!84565 () Bool)

(assert (=> b!84565 (= e!55163 call!7971)))

(declare-fun b!84566 () Bool)

(declare-fun res!43630 () Bool)

(declare-fun e!55165 () Bool)

(assert (=> b!84566 (=> (not res!43630) (not e!55165))))

(declare-fun lt!39810 () List!1547)

(assert (=> b!84566 (= res!43630 (containsKey!142 lt!39810 (_1!1120 lt!38750)))))

(declare-fun d!21685 () Bool)

(assert (=> d!21685 e!55165))

(declare-fun res!43631 () Bool)

(assert (=> d!21685 (=> (not res!43631) (not e!55165))))

(assert (=> d!21685 (= res!43631 (isStrictlySorted!292 lt!39810))))

(declare-fun e!55161 () List!1547)

(assert (=> d!21685 (= lt!39810 e!55161)))

(declare-fun c!13649 () Bool)

(assert (=> d!21685 (= c!13649 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38755))) (bvslt (_1!1120 (h!2133 (t!5251 (toList!756 lt!38755)))) (_1!1120 lt!38750))))))

(assert (=> d!21685 (isStrictlySorted!292 (t!5251 (toList!756 lt!38755)))))

(assert (=> d!21685 (= (insertStrictlySorted!59 (t!5251 (toList!756 lt!38755)) (_1!1120 lt!38750) (_2!1120 lt!38750)) lt!39810)))

(declare-fun b!84567 () Bool)

(assert (=> b!84567 (= e!55165 (contains!760 lt!39810 (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(declare-fun b!84568 () Bool)

(assert (=> b!84568 (= e!55161 e!55164)))

(declare-fun c!13648 () Bool)

(assert (=> b!84568 (= c!13648 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38755))) (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!38755)))) (_1!1120 lt!38750))))))

(declare-fun c!13651 () Bool)

(declare-fun b!84569 () Bool)

(assert (=> b!84569 (= e!55162 (ite c!13648 (t!5251 (t!5251 (toList!756 lt!38755))) (ite c!13651 (Cons!1543 (h!2133 (t!5251 (toList!756 lt!38755))) (t!5251 (t!5251 (toList!756 lt!38755)))) Nil!1544)))))

(declare-fun b!84570 () Bool)

(assert (=> b!84570 (= c!13651 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38755))) (bvsgt (_1!1120 (h!2133 (t!5251 (toList!756 lt!38755)))) (_1!1120 lt!38750))))))

(assert (=> b!84570 (= e!55164 e!55163)))

(declare-fun bm!7967 () Bool)

(assert (=> bm!7967 (= call!7969 ($colon$colon!70 e!55162 (ite c!13649 (h!2133 (t!5251 (toList!756 lt!38755))) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750)))))))

(declare-fun c!13650 () Bool)

(assert (=> bm!7967 (= c!13650 c!13649)))

(declare-fun b!84571 () Bool)

(assert (=> b!84571 (= e!55161 call!7969)))

(declare-fun bm!7968 () Bool)

(assert (=> bm!7968 (= call!7971 call!7970)))

(assert (= (and d!21685 c!13649) b!84571))

(assert (= (and d!21685 (not c!13649)) b!84568))

(assert (= (and b!84568 c!13648) b!84562))

(assert (= (and b!84568 (not c!13648)) b!84570))

(assert (= (and b!84570 c!13651) b!84565))

(assert (= (and b!84570 (not c!13651)) b!84563))

(assert (= (or b!84565 b!84563) bm!7968))

(assert (= (or b!84562 bm!7968) bm!7966))

(assert (= (or b!84571 bm!7966) bm!7967))

(assert (= (and bm!7967 c!13650) b!84564))

(assert (= (and bm!7967 (not c!13650)) b!84569))

(assert (= (and d!21685 res!43631) b!84566))

(assert (= (and b!84566 res!43630) b!84567))

(declare-fun m!88357 () Bool)

(assert (=> d!21685 m!88357))

(assert (=> d!21685 m!88023))

(declare-fun m!88359 () Bool)

(assert (=> b!84564 m!88359))

(declare-fun m!88361 () Bool)

(assert (=> b!84567 m!88361))

(declare-fun m!88363 () Bool)

(assert (=> bm!7967 m!88363))

(declare-fun m!88365 () Bool)

(assert (=> b!84566 m!88365))

(assert (=> b!83358 d!21685))

(declare-fun d!21687 () Bool)

(declare-fun lt!39811 () Bool)

(assert (=> d!21687 (= lt!39811 (select (content!87 (toList!756 lt!39333)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(declare-fun e!55166 () Bool)

(assert (=> d!21687 (= lt!39811 e!55166)))

(declare-fun res!43632 () Bool)

(assert (=> d!21687 (=> (not res!43632) (not e!55166))))

(assert (=> d!21687 (= res!43632 ((_ is Cons!1543) (toList!756 lt!39333)))))

(assert (=> d!21687 (= (contains!760 (toList!756 lt!39333) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) lt!39811)))

(declare-fun b!84572 () Bool)

(declare-fun e!55167 () Bool)

(assert (=> b!84572 (= e!55166 e!55167)))

(declare-fun res!43633 () Bool)

(assert (=> b!84572 (=> res!43633 e!55167)))

(assert (=> b!84572 (= res!43633 (= (h!2133 (toList!756 lt!39333)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(declare-fun b!84573 () Bool)

(assert (=> b!84573 (= e!55167 (contains!760 (t!5251 (toList!756 lt!39333)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))

(assert (= (and d!21687 res!43632) b!84572))

(assert (= (and b!84572 (not res!43633)) b!84573))

(declare-fun m!88367 () Bool)

(assert (=> d!21687 m!88367))

(declare-fun m!88369 () Bool)

(assert (=> d!21687 m!88369))

(declare-fun m!88371 () Bool)

(assert (=> b!84573 m!88371))

(assert (=> b!83583 d!21687))

(declare-fun d!21689 () Bool)

(declare-fun e!55168 () Bool)

(assert (=> d!21689 e!55168))

(declare-fun res!43634 () Bool)

(assert (=> d!21689 (=> res!43634 e!55168)))

(declare-fun lt!39812 () Bool)

(assert (=> d!21689 (= res!43634 (not lt!39812))))

(declare-fun lt!39814 () Bool)

(assert (=> d!21689 (= lt!39812 lt!39814)))

(declare-fun lt!39815 () Unit!2445)

(declare-fun e!55169 () Unit!2445)

(assert (=> d!21689 (= lt!39815 e!55169)))

(declare-fun c!13652 () Bool)

(assert (=> d!21689 (= c!13652 lt!39814)))

(assert (=> d!21689 (= lt!39814 (containsKey!142 (toList!756 lt!39267) (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21689 (= (contains!757 lt!39267 (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39812)))

(declare-fun b!84574 () Bool)

(declare-fun lt!39813 () Unit!2445)

(assert (=> b!84574 (= e!55169 lt!39813)))

(assert (=> b!84574 (= lt!39813 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39267) (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> b!84574 (isDefined!92 (getValueByKey!138 (toList!756 lt!39267) (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84575 () Bool)

(declare-fun Unit!2512 () Unit!2445)

(assert (=> b!84575 (= e!55169 Unit!2512)))

(declare-fun b!84576 () Bool)

(assert (=> b!84576 (= e!55168 (isDefined!92 (getValueByKey!138 (toList!756 lt!39267) (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!21689 c!13652) b!84574))

(assert (= (and d!21689 (not c!13652)) b!84575))

(assert (= (and d!21689 (not res!43634)) b!84576))

(declare-fun m!88373 () Bool)

(assert (=> d!21689 m!88373))

(declare-fun m!88375 () Bool)

(assert (=> b!84574 m!88375))

(assert (=> b!84574 m!86449))

(assert (=> b!84574 m!86449))

(declare-fun m!88377 () Bool)

(assert (=> b!84574 m!88377))

(assert (=> b!84576 m!86449))

(assert (=> b!84576 m!86449))

(assert (=> b!84576 m!88377))

(assert (=> d!21021 d!21689))

(declare-fun b!84578 () Bool)

(declare-fun e!55170 () Option!144)

(declare-fun e!55171 () Option!144)

(assert (=> b!84578 (= e!55170 e!55171)))

(declare-fun c!13654 () Bool)

(assert (=> b!84578 (= c!13654 (and ((_ is Cons!1543) lt!39264) (not (= (_1!1120 (h!2133 lt!39264)) (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!84577 () Bool)

(assert (=> b!84577 (= e!55170 (Some!143 (_2!1120 (h!2133 lt!39264))))))

(declare-fun b!84580 () Bool)

(assert (=> b!84580 (= e!55171 None!142)))

(declare-fun c!13653 () Bool)

(declare-fun d!21691 () Bool)

(assert (=> d!21691 (= c!13653 (and ((_ is Cons!1543) lt!39264) (= (_1!1120 (h!2133 lt!39264)) (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21691 (= (getValueByKey!138 lt!39264 (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) e!55170)))

(declare-fun b!84579 () Bool)

(assert (=> b!84579 (= e!55171 (getValueByKey!138 (t!5251 lt!39264) (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21691 c!13653) b!84577))

(assert (= (and d!21691 (not c!13653)) b!84578))

(assert (= (and b!84578 c!13654) b!84579))

(assert (= (and b!84578 (not c!13654)) b!84580))

(declare-fun m!88379 () Bool)

(assert (=> b!84579 m!88379))

(assert (=> d!21021 d!21691))

(declare-fun d!21693 () Bool)

(assert (=> d!21693 (= (getValueByKey!138 lt!39264 (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun lt!39816 () Unit!2445)

(assert (=> d!21693 (= lt!39816 (choose!495 lt!39264 (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun e!55172 () Bool)

(assert (=> d!21693 e!55172))

(declare-fun res!43635 () Bool)

(assert (=> d!21693 (=> (not res!43635) (not e!55172))))

(assert (=> d!21693 (= res!43635 (isStrictlySorted!292 lt!39264))))

(assert (=> d!21693 (= (lemmaContainsTupThenGetReturnValue!57 lt!39264 (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39816)))

(declare-fun b!84581 () Bool)

(declare-fun res!43636 () Bool)

(assert (=> b!84581 (=> (not res!43636) (not e!55172))))

(assert (=> b!84581 (= res!43636 (containsKey!142 lt!39264 (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84582 () Bool)

(assert (=> b!84582 (= e!55172 (contains!760 lt!39264 (tuple2!2221 (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!21693 res!43635) b!84581))

(assert (= (and b!84581 res!43636) b!84582))

(assert (=> d!21693 m!86443))

(declare-fun m!88381 () Bool)

(assert (=> d!21693 m!88381))

(declare-fun m!88383 () Bool)

(assert (=> d!21693 m!88383))

(declare-fun m!88385 () Bool)

(assert (=> b!84581 m!88385))

(declare-fun m!88387 () Bool)

(assert (=> b!84582 m!88387))

(assert (=> d!21021 d!21693))

(declare-fun bm!7969 () Bool)

(declare-fun call!7973 () List!1547)

(declare-fun call!7972 () List!1547)

(assert (=> bm!7969 (= call!7973 call!7972)))

(declare-fun b!84583 () Bool)

(declare-fun e!55176 () List!1547)

(assert (=> b!84583 (= e!55176 call!7973)))

(declare-fun b!84584 () Bool)

(declare-fun e!55175 () List!1547)

(declare-fun call!7974 () List!1547)

(assert (=> b!84584 (= e!55175 call!7974)))

(declare-fun e!55174 () List!1547)

(declare-fun b!84585 () Bool)

(assert (=> b!84585 (= e!55174 (insertStrictlySorted!59 (t!5251 (toList!756 lt!38971)) (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84586 () Bool)

(assert (=> b!84586 (= e!55175 call!7974)))

(declare-fun b!84587 () Bool)

(declare-fun res!43637 () Bool)

(declare-fun e!55177 () Bool)

(assert (=> b!84587 (=> (not res!43637) (not e!55177))))

(declare-fun lt!39817 () List!1547)

(assert (=> b!84587 (= res!43637 (containsKey!142 lt!39817 (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun d!21695 () Bool)

(assert (=> d!21695 e!55177))

(declare-fun res!43638 () Bool)

(assert (=> d!21695 (=> (not res!43638) (not e!55177))))

(assert (=> d!21695 (= res!43638 (isStrictlySorted!292 lt!39817))))

(declare-fun e!55173 () List!1547)

(assert (=> d!21695 (= lt!39817 e!55173)))

(declare-fun c!13656 () Bool)

(assert (=> d!21695 (= c!13656 (and ((_ is Cons!1543) (toList!756 lt!38971)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38971))) (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21695 (isStrictlySorted!292 (toList!756 lt!38971))))

(assert (=> d!21695 (= (insertStrictlySorted!59 (toList!756 lt!38971) (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39817)))

(declare-fun b!84588 () Bool)

(assert (=> b!84588 (= e!55177 (contains!760 lt!39817 (tuple2!2221 (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!84589 () Bool)

(assert (=> b!84589 (= e!55173 e!55176)))

(declare-fun c!13655 () Bool)

(assert (=> b!84589 (= c!13655 (and ((_ is Cons!1543) (toList!756 lt!38971)) (= (_1!1120 (h!2133 (toList!756 lt!38971))) (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!84590 () Bool)

(declare-fun c!13658 () Bool)

(assert (=> b!84590 (= e!55174 (ite c!13655 (t!5251 (toList!756 lt!38971)) (ite c!13658 (Cons!1543 (h!2133 (toList!756 lt!38971)) (t!5251 (toList!756 lt!38971))) Nil!1544)))))

(declare-fun b!84591 () Bool)

(assert (=> b!84591 (= c!13658 (and ((_ is Cons!1543) (toList!756 lt!38971)) (bvsgt (_1!1120 (h!2133 (toList!756 lt!38971))) (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> b!84591 (= e!55176 e!55175)))

(declare-fun bm!7970 () Bool)

(assert (=> bm!7970 (= call!7972 ($colon$colon!70 e!55174 (ite c!13656 (h!2133 (toList!756 lt!38971)) (tuple2!2221 (_1!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun c!13657 () Bool)

(assert (=> bm!7970 (= c!13657 c!13656)))

(declare-fun b!84592 () Bool)

(assert (=> b!84592 (= e!55173 call!7972)))

(declare-fun bm!7971 () Bool)

(assert (=> bm!7971 (= call!7974 call!7973)))

(assert (= (and d!21695 c!13656) b!84592))

(assert (= (and d!21695 (not c!13656)) b!84589))

(assert (= (and b!84589 c!13655) b!84583))

(assert (= (and b!84589 (not c!13655)) b!84591))

(assert (= (and b!84591 c!13658) b!84586))

(assert (= (and b!84591 (not c!13658)) b!84584))

(assert (= (or b!84586 b!84584) bm!7971))

(assert (= (or b!84583 bm!7971) bm!7969))

(assert (= (or b!84592 bm!7969) bm!7970))

(assert (= (and bm!7970 c!13657) b!84585))

(assert (= (and bm!7970 (not c!13657)) b!84590))

(assert (= (and d!21695 res!43638) b!84587))

(assert (= (and b!84587 res!43637) b!84588))

(declare-fun m!88389 () Bool)

(assert (=> d!21695 m!88389))

(declare-fun m!88391 () Bool)

(assert (=> d!21695 m!88391))

(declare-fun m!88393 () Bool)

(assert (=> b!84585 m!88393))

(declare-fun m!88395 () Bool)

(assert (=> b!84588 m!88395))

(declare-fun m!88397 () Bool)

(assert (=> bm!7970 m!88397))

(declare-fun m!88399 () Bool)

(assert (=> b!84587 m!88399))

(assert (=> d!21021 d!21695))

(declare-fun b!84596 () Bool)

(declare-fun e!55178 () Bool)

(assert (=> b!84596 (= e!55178 (and (bvsge (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!424 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!84593 () Bool)

(declare-fun res!43642 () Bool)

(assert (=> b!84593 (=> (not res!43642) (not e!55178))))

(assert (=> b!84593 (= res!43642 (and (= (size!2156 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000001)) (= (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (size!2156 (_values!2300 (v!2632 (underlying!290 thiss!992))))) (bvsge (_size!424 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!424 (v!2632 (underlying!290 thiss!992))) (bvadd (mask!6335 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun d!21697 () Bool)

(declare-fun res!43641 () Bool)

(assert (=> d!21697 (=> (not res!43641) (not e!55178))))

(assert (=> d!21697 (= res!43641 (validMask!0 (mask!6335 (v!2632 (underlying!290 thiss!992)))))))

(assert (=> d!21697 (= (simpleValid!56 (v!2632 (underlying!290 thiss!992))) e!55178)))

(declare-fun b!84594 () Bool)

(declare-fun res!43639 () Bool)

(assert (=> b!84594 (=> (not res!43639) (not e!55178))))

(assert (=> b!84594 (= res!43639 (bvsge (size!2159 (v!2632 (underlying!290 thiss!992))) (_size!424 (v!2632 (underlying!290 thiss!992)))))))

(declare-fun b!84595 () Bool)

(declare-fun res!43640 () Bool)

(assert (=> b!84595 (=> (not res!43640) (not e!55178))))

(assert (=> b!84595 (= res!43640 (= (size!2159 (v!2632 (underlying!290 thiss!992))) (bvadd (_size!424 (v!2632 (underlying!290 thiss!992))) (bvsdiv (bvadd (extraKeys!2160 (v!2632 (underlying!290 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!21697 res!43641) b!84593))

(assert (= (and b!84593 res!43642) b!84594))

(assert (= (and b!84594 res!43639) b!84595))

(assert (= (and b!84595 res!43640) b!84596))

(assert (=> d!21697 m!85601))

(declare-fun m!88401 () Bool)

(assert (=> b!84594 m!88401))

(assert (=> b!84595 m!88401))

(assert (=> d!20919 d!21697))

(declare-fun b!84598 () Bool)

(declare-fun e!55179 () Option!144)

(declare-fun e!55180 () Option!144)

(assert (=> b!84598 (= e!55179 e!55180)))

(declare-fun c!13660 () Bool)

(assert (=> b!84598 (= c!13660 (and ((_ is Cons!1543) (toList!756 lt!39385)) (not (= (_1!1120 (h!2133 (toList!756 lt!39385))) (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))))

(declare-fun b!84597 () Bool)

(assert (=> b!84597 (= e!55179 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39385)))))))

(declare-fun b!84600 () Bool)

(assert (=> b!84600 (= e!55180 None!142)))

(declare-fun c!13659 () Bool)

(declare-fun d!21699 () Bool)

(assert (=> d!21699 (= c!13659 (and ((_ is Cons!1543) (toList!756 lt!39385)) (= (_1!1120 (h!2133 (toList!756 lt!39385))) (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(assert (=> d!21699 (= (getValueByKey!138 (toList!756 lt!39385) (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) e!55179)))

(declare-fun b!84599 () Bool)

(assert (=> b!84599 (= e!55180 (getValueByKey!138 (t!5251 (toList!756 lt!39385)) (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!21699 c!13659) b!84597))

(assert (= (and d!21699 (not c!13659)) b!84598))

(assert (= (and b!84598 c!13660) b!84599))

(assert (= (and b!84598 (not c!13660)) b!84600))

(declare-fun m!88403 () Bool)

(assert (=> b!84599 m!88403))

(assert (=> b!83646 d!21699))

(declare-fun d!21701 () Bool)

(declare-fun res!43643 () Bool)

(declare-fun e!55181 () Bool)

(assert (=> d!21701 (=> res!43643 e!55181)))

(assert (=> d!21701 (= res!43643 (and ((_ is Cons!1543) (toList!756 lt!39021)) (= (_1!1120 (h!2133 (toList!756 lt!39021))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21701 (= (containsKey!142 (toList!756 lt!39021) #b1000000000000000000000000000000000000000000000000000000000000000) e!55181)))

(declare-fun b!84601 () Bool)

(declare-fun e!55182 () Bool)

(assert (=> b!84601 (= e!55181 e!55182)))

(declare-fun res!43644 () Bool)

(assert (=> b!84601 (=> (not res!43644) (not e!55182))))

(assert (=> b!84601 (= res!43644 (and (or (not ((_ is Cons!1543) (toList!756 lt!39021))) (bvsle (_1!1120 (h!2133 (toList!756 lt!39021))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1543) (toList!756 lt!39021)) (bvslt (_1!1120 (h!2133 (toList!756 lt!39021))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84602 () Bool)

(assert (=> b!84602 (= e!55182 (containsKey!142 (t!5251 (toList!756 lt!39021)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21701 (not res!43643)) b!84601))

(assert (= (and b!84601 res!43644) b!84602))

(declare-fun m!88405 () Bool)

(assert (=> b!84602 m!88405))

(assert (=> d!20975 d!21701))

(assert (=> b!83243 d!21181))

(declare-fun d!21703 () Bool)

(assert (=> d!21703 (= (get!1209 (getValueByKey!138 (toList!756 (+!114 lt!38967 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38966)) (v!2636 (getValueByKey!138 (toList!756 (+!114 lt!38967 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38966)))))

(assert (=> d!21009 d!21703))

(declare-fun b!84604 () Bool)

(declare-fun e!55183 () Option!144)

(declare-fun e!55184 () Option!144)

(assert (=> b!84604 (= e!55183 e!55184)))

(declare-fun c!13662 () Bool)

(assert (=> b!84604 (= c!13662 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38967 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) (not (= (_1!1120 (h!2133 (toList!756 (+!114 lt!38967 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))) lt!38966))))))

(declare-fun b!84603 () Bool)

(assert (=> b!84603 (= e!55183 (Some!143 (_2!1120 (h!2133 (toList!756 (+!114 lt!38967 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))))

(declare-fun b!84606 () Bool)

(assert (=> b!84606 (= e!55184 None!142)))

(declare-fun d!21705 () Bool)

(declare-fun c!13661 () Bool)

(assert (=> d!21705 (= c!13661 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38967 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) (= (_1!1120 (h!2133 (toList!756 (+!114 lt!38967 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))) lt!38966)))))

(assert (=> d!21705 (= (getValueByKey!138 (toList!756 (+!114 lt!38967 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38966) e!55183)))

(declare-fun b!84605 () Bool)

(assert (=> b!84605 (= e!55184 (getValueByKey!138 (t!5251 (toList!756 (+!114 lt!38967 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) lt!38966))))

(assert (= (and d!21705 c!13661) b!84603))

(assert (= (and d!21705 (not c!13661)) b!84604))

(assert (= (and b!84604 c!13662) b!84605))

(assert (= (and b!84604 (not c!13662)) b!84606))

(declare-fun m!88407 () Bool)

(assert (=> b!84605 m!88407))

(assert (=> d!21009 d!21705))

(declare-fun d!21707 () Bool)

(declare-fun e!55185 () Bool)

(assert (=> d!21707 e!55185))

(declare-fun res!43645 () Bool)

(assert (=> d!21707 (=> res!43645 e!55185)))

(declare-fun lt!39818 () Bool)

(assert (=> d!21707 (= res!43645 (not lt!39818))))

(declare-fun lt!39820 () Bool)

(assert (=> d!21707 (= lt!39818 lt!39820)))

(declare-fun lt!39821 () Unit!2445)

(declare-fun e!55186 () Unit!2445)

(assert (=> d!21707 (= lt!39821 e!55186)))

(declare-fun c!13663 () Bool)

(assert (=> d!21707 (= c!13663 lt!39820)))

(assert (=> d!21707 (= lt!39820 (containsKey!142 (toList!756 lt!39280) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21707 (= (contains!757 lt!39280 #b0000000000000000000000000000000000000000000000000000000000000000) lt!39818)))

(declare-fun b!84607 () Bool)

(declare-fun lt!39819 () Unit!2445)

(assert (=> b!84607 (= e!55186 lt!39819)))

(assert (=> b!84607 (= lt!39819 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39280) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84607 (isDefined!92 (getValueByKey!138 (toList!756 lt!39280) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84608 () Bool)

(declare-fun Unit!2513 () Unit!2445)

(assert (=> b!84608 (= e!55186 Unit!2513)))

(declare-fun b!84609 () Bool)

(assert (=> b!84609 (= e!55185 (isDefined!92 (getValueByKey!138 (toList!756 lt!39280) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21707 c!13663) b!84607))

(assert (= (and d!21707 (not c!13663)) b!84608))

(assert (= (and d!21707 (not res!43645)) b!84609))

(declare-fun m!88409 () Bool)

(assert (=> d!21707 m!88409))

(declare-fun m!88411 () Bool)

(assert (=> b!84607 m!88411))

(assert (=> b!84607 m!87205))

(assert (=> b!84607 m!87205))

(declare-fun m!88413 () Bool)

(assert (=> b!84607 m!88413))

(assert (=> b!84609 m!87205))

(assert (=> b!84609 m!87205))

(assert (=> b!84609 m!88413))

(assert (=> bm!7851 d!21707))

(declare-fun b!84611 () Bool)

(declare-fun e!55187 () Option!144)

(declare-fun e!55188 () Option!144)

(assert (=> b!84611 (= e!55187 e!55188)))

(declare-fun c!13665 () Bool)

(assert (=> b!84611 (= c!13665 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!39045))) (not (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!39045)))) (_1!1120 lt!38747)))))))

(declare-fun b!84610 () Bool)

(assert (=> b!84610 (= e!55187 (Some!143 (_2!1120 (h!2133 (t!5251 (toList!756 lt!39045))))))))

(declare-fun b!84613 () Bool)

(assert (=> b!84613 (= e!55188 None!142)))

(declare-fun d!21709 () Bool)

(declare-fun c!13664 () Bool)

(assert (=> d!21709 (= c!13664 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!39045))) (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!39045)))) (_1!1120 lt!38747))))))

(assert (=> d!21709 (= (getValueByKey!138 (t!5251 (toList!756 lt!39045)) (_1!1120 lt!38747)) e!55187)))

(declare-fun b!84612 () Bool)

(assert (=> b!84612 (= e!55188 (getValueByKey!138 (t!5251 (t!5251 (toList!756 lt!39045))) (_1!1120 lt!38747)))))

(assert (= (and d!21709 c!13664) b!84610))

(assert (= (and d!21709 (not c!13664)) b!84611))

(assert (= (and b!84611 c!13665) b!84612))

(assert (= (and b!84611 (not c!13665)) b!84613))

(declare-fun m!88415 () Bool)

(assert (=> b!84612 m!88415))

(assert (=> b!83270 d!21709))

(declare-fun d!21711 () Bool)

(declare-fun res!43646 () Bool)

(declare-fun e!55189 () Bool)

(assert (=> d!21711 (=> res!43646 e!55189)))

(assert (=> d!21711 (= res!43646 (or ((_ is Nil!1544) lt!39381) ((_ is Nil!1544) (t!5251 lt!39381))))))

(assert (=> d!21711 (= (isStrictlySorted!292 lt!39381) e!55189)))

(declare-fun b!84614 () Bool)

(declare-fun e!55190 () Bool)

(assert (=> b!84614 (= e!55189 e!55190)))

(declare-fun res!43647 () Bool)

(assert (=> b!84614 (=> (not res!43647) (not e!55190))))

(assert (=> b!84614 (= res!43647 (bvslt (_1!1120 (h!2133 lt!39381)) (_1!1120 (h!2133 (t!5251 lt!39381)))))))

(declare-fun b!84615 () Bool)

(assert (=> b!84615 (= e!55190 (isStrictlySorted!292 (t!5251 lt!39381)))))

(assert (= (and d!21711 (not res!43646)) b!84614))

(assert (= (and b!84614 res!43647) b!84615))

(declare-fun m!88417 () Bool)

(assert (=> b!84615 m!88417))

(assert (=> d!21089 d!21711))

(declare-fun d!21713 () Bool)

(declare-fun res!43648 () Bool)

(declare-fun e!55191 () Bool)

(assert (=> d!21713 (=> res!43648 e!55191)))

(assert (=> d!21713 (= res!43648 (or ((_ is Nil!1544) (toList!756 (+!114 lt!38754 lt!38747))) ((_ is Nil!1544) (t!5251 (toList!756 (+!114 lt!38754 lt!38747))))))))

(assert (=> d!21713 (= (isStrictlySorted!292 (toList!756 (+!114 lt!38754 lt!38747))) e!55191)))

(declare-fun b!84616 () Bool)

(declare-fun e!55192 () Bool)

(assert (=> b!84616 (= e!55191 e!55192)))

(declare-fun res!43649 () Bool)

(assert (=> b!84616 (=> (not res!43649) (not e!55192))))

(assert (=> b!84616 (= res!43649 (bvslt (_1!1120 (h!2133 (toList!756 (+!114 lt!38754 lt!38747)))) (_1!1120 (h!2133 (t!5251 (toList!756 (+!114 lt!38754 lt!38747)))))))))

(declare-fun b!84617 () Bool)

(assert (=> b!84617 (= e!55192 (isStrictlySorted!292 (t!5251 (toList!756 (+!114 lt!38754 lt!38747)))))))

(assert (= (and d!21713 (not res!43648)) b!84616))

(assert (= (and b!84616 res!43649) b!84617))

(declare-fun m!88419 () Bool)

(assert (=> b!84617 m!88419))

(assert (=> d!21089 d!21713))

(assert (=> d!20953 d!20951))

(declare-fun d!21715 () Bool)

(assert (=> d!21715 (= (getValueByKey!138 lt!39030 (_1!1120 lt!38760)) (Some!143 (_2!1120 lt!38760)))))

(assert (=> d!21715 true))

(declare-fun _$22!414 () Unit!2445)

(assert (=> d!21715 (= (choose!495 lt!39030 (_1!1120 lt!38760) (_2!1120 lt!38760)) _$22!414)))

(declare-fun bs!3567 () Bool)

(assert (= bs!3567 d!21715))

(assert (=> bs!3567 m!85923))

(assert (=> d!20953 d!21715))

(declare-fun d!21717 () Bool)

(declare-fun res!43650 () Bool)

(declare-fun e!55193 () Bool)

(assert (=> d!21717 (=> res!43650 e!55193)))

(assert (=> d!21717 (= res!43650 (or ((_ is Nil!1544) lt!39030) ((_ is Nil!1544) (t!5251 lt!39030))))))

(assert (=> d!21717 (= (isStrictlySorted!292 lt!39030) e!55193)))

(declare-fun b!84618 () Bool)

(declare-fun e!55194 () Bool)

(assert (=> b!84618 (= e!55193 e!55194)))

(declare-fun res!43651 () Bool)

(assert (=> b!84618 (=> (not res!43651) (not e!55194))))

(assert (=> b!84618 (= res!43651 (bvslt (_1!1120 (h!2133 lt!39030)) (_1!1120 (h!2133 (t!5251 lt!39030)))))))

(declare-fun b!84619 () Bool)

(assert (=> b!84619 (= e!55194 (isStrictlySorted!292 (t!5251 lt!39030)))))

(assert (= (and d!21717 (not res!43650)) b!84618))

(assert (= (and b!84618 res!43651) b!84619))

(declare-fun m!88421 () Bool)

(assert (=> b!84619 m!88421))

(assert (=> d!20953 d!21717))

(declare-fun d!21719 () Bool)

(declare-fun e!55195 () Bool)

(assert (=> d!21719 e!55195))

(declare-fun res!43652 () Bool)

(assert (=> d!21719 (=> res!43652 e!55195)))

(declare-fun lt!39822 () Bool)

(assert (=> d!21719 (= res!43652 (not lt!39822))))

(declare-fun lt!39824 () Bool)

(assert (=> d!21719 (= lt!39822 lt!39824)))

(declare-fun lt!39825 () Unit!2445)

(declare-fun e!55196 () Unit!2445)

(assert (=> d!21719 (= lt!39825 e!55196)))

(declare-fun c!13666 () Bool)

(assert (=> d!21719 (= c!13666 lt!39824)))

(assert (=> d!21719 (= lt!39824 (containsKey!142 (toList!756 lt!39280) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21719 (= (contains!757 lt!39280 #b1000000000000000000000000000000000000000000000000000000000000000) lt!39822)))

(declare-fun b!84620 () Bool)

(declare-fun lt!39823 () Unit!2445)

(assert (=> b!84620 (= e!55196 lt!39823)))

(assert (=> b!84620 (= lt!39823 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39280) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84620 (isDefined!92 (getValueByKey!138 (toList!756 lt!39280) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84621 () Bool)

(declare-fun Unit!2514 () Unit!2445)

(assert (=> b!84621 (= e!55196 Unit!2514)))

(declare-fun b!84622 () Bool)

(assert (=> b!84622 (= e!55195 (isDefined!92 (getValueByKey!138 (toList!756 lt!39280) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21719 c!13666) b!84620))

(assert (= (and d!21719 (not c!13666)) b!84621))

(assert (= (and d!21719 (not res!43652)) b!84622))

(declare-fun m!88423 () Bool)

(assert (=> d!21719 m!88423))

(declare-fun m!88425 () Bool)

(assert (=> b!84620 m!88425))

(declare-fun m!88427 () Bool)

(assert (=> b!84620 m!88427))

(assert (=> b!84620 m!88427))

(declare-fun m!88429 () Bool)

(assert (=> b!84620 m!88429))

(assert (=> b!84622 m!88427))

(assert (=> b!84622 m!88427))

(assert (=> b!84622 m!88429))

(assert (=> bm!7850 d!21719))

(declare-fun b!84623 () Bool)

(declare-fun e!55198 () (_ BitVec 32))

(assert (=> b!84623 (= e!55198 #b00000000000000000000000000000000)))

(declare-fun bm!7972 () Bool)

(declare-fun call!7975 () (_ BitVec 32))

(assert (=> bm!7972 (= call!7975 (arrayCountValidKeys!0 (_keys!3985 (_2!1121 lt!38897)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2155 (_keys!3985 (_2!1121 lt!38897)))))))

(declare-fun d!21721 () Bool)

(declare-fun lt!39826 () (_ BitVec 32))

(assert (=> d!21721 (and (bvsge lt!39826 #b00000000000000000000000000000000) (bvsle lt!39826 (bvsub (size!2155 (_keys!3985 (_2!1121 lt!38897))) #b00000000000000000000000000000000)))))

(assert (=> d!21721 (= lt!39826 e!55198)))

(declare-fun c!13667 () Bool)

(assert (=> d!21721 (= c!13667 (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 (_2!1121 lt!38897)))))))

(assert (=> d!21721 (and (bvsle #b00000000000000000000000000000000 (size!2155 (_keys!3985 (_2!1121 lt!38897)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2155 (_keys!3985 (_2!1121 lt!38897))) (size!2155 (_keys!3985 (_2!1121 lt!38897)))))))

(assert (=> d!21721 (= (arrayCountValidKeys!0 (_keys!3985 (_2!1121 lt!38897)) #b00000000000000000000000000000000 (size!2155 (_keys!3985 (_2!1121 lt!38897)))) lt!39826)))

(declare-fun b!84624 () Bool)

(declare-fun e!55197 () (_ BitVec 32))

(assert (=> b!84624 (= e!55197 (bvadd #b00000000000000000000000000000001 call!7975))))

(declare-fun b!84625 () Bool)

(assert (=> b!84625 (= e!55198 e!55197)))

(declare-fun c!13668 () Bool)

(assert (=> b!84625 (= c!13668 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (_2!1121 lt!38897))) #b00000000000000000000000000000000)))))

(declare-fun b!84626 () Bool)

(assert (=> b!84626 (= e!55197 call!7975)))

(assert (= (and d!21721 c!13667) b!84623))

(assert (= (and d!21721 (not c!13667)) b!84625))

(assert (= (and b!84625 c!13668) b!84624))

(assert (= (and b!84625 (not c!13668)) b!84626))

(assert (= (or b!84624 b!84626) bm!7972))

(declare-fun m!88431 () Bool)

(assert (=> bm!7972 m!88431))

(assert (=> b!84625 m!87537))

(assert (=> b!84625 m!87537))

(assert (=> b!84625 m!87539))

(assert (=> b!83717 d!21721))

(declare-fun b!84628 () Bool)

(declare-fun e!55199 () Option!144)

(declare-fun e!55200 () Option!144)

(assert (=> b!84628 (= e!55199 e!55200)))

(declare-fun c!13670 () Bool)

(assert (=> b!84628 (= c!13670 (and ((_ is Cons!1543) (toList!756 lt!39400)) (not (= (_1!1120 (h!2133 (toList!756 lt!39400))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!84627 () Bool)

(assert (=> b!84627 (= e!55199 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39400)))))))

(declare-fun b!84630 () Bool)

(assert (=> b!84630 (= e!55200 None!142)))

(declare-fun c!13669 () Bool)

(declare-fun d!21723 () Bool)

(assert (=> d!21723 (= c!13669 (and ((_ is Cons!1543) (toList!756 lt!39400)) (= (_1!1120 (h!2133 (toList!756 lt!39400))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!21723 (= (getValueByKey!138 (toList!756 lt!39400) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!55199)))

(declare-fun b!84629 () Bool)

(assert (=> b!84629 (= e!55200 (getValueByKey!138 (t!5251 (toList!756 lt!39400)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!21723 c!13669) b!84627))

(assert (= (and d!21723 (not c!13669)) b!84628))

(assert (= (and b!84628 c!13670) b!84629))

(assert (= (and b!84628 (not c!13670)) b!84630))

(declare-fun m!88433 () Bool)

(assert (=> b!84629 m!88433))

(assert (=> b!83659 d!21723))

(declare-fun d!21725 () Bool)

(declare-fun res!43653 () Bool)

(declare-fun e!55201 () Bool)

(assert (=> d!21725 (=> res!43653 e!55201)))

(assert (=> d!21725 (= res!43653 (and ((_ is Cons!1543) lt!38996) (= (_1!1120 (h!2133 lt!38996)) (_1!1120 lt!38750))))))

(assert (=> d!21725 (= (containsKey!142 lt!38996 (_1!1120 lt!38750)) e!55201)))

(declare-fun b!84631 () Bool)

(declare-fun e!55202 () Bool)

(assert (=> b!84631 (= e!55201 e!55202)))

(declare-fun res!43654 () Bool)

(assert (=> b!84631 (=> (not res!43654) (not e!55202))))

(assert (=> b!84631 (= res!43654 (and (or (not ((_ is Cons!1543) lt!38996)) (bvsle (_1!1120 (h!2133 lt!38996)) (_1!1120 lt!38750))) ((_ is Cons!1543) lt!38996) (bvslt (_1!1120 (h!2133 lt!38996)) (_1!1120 lt!38750))))))

(declare-fun b!84632 () Bool)

(assert (=> b!84632 (= e!55202 (containsKey!142 (t!5251 lt!38996) (_1!1120 lt!38750)))))

(assert (= (and d!21725 (not res!43653)) b!84631))

(assert (= (and b!84631 res!43654) b!84632))

(declare-fun m!88435 () Bool)

(assert (=> b!84632 m!88435))

(assert (=> b!83373 d!21725))

(assert (=> b!83654 d!21507))

(assert (=> b!83654 d!21509))

(declare-fun d!21727 () Bool)

(declare-fun res!43655 () Bool)

(declare-fun e!55203 () Bool)

(assert (=> d!21727 (=> res!43655 e!55203)))

(assert (=> d!21727 (= res!43655 (and ((_ is Cons!1543) (toList!756 lt!38974)) (= (_1!1120 (h!2133 (toList!756 lt!38974))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21727 (= (containsKey!142 (toList!756 lt!38974) #b0000000000000000000000000000000000000000000000000000000000000000) e!55203)))

(declare-fun b!84633 () Bool)

(declare-fun e!55204 () Bool)

(assert (=> b!84633 (= e!55203 e!55204)))

(declare-fun res!43656 () Bool)

(assert (=> b!84633 (=> (not res!43656) (not e!55204))))

(assert (=> b!84633 (= res!43656 (and (or (not ((_ is Cons!1543) (toList!756 lt!38974))) (bvsle (_1!1120 (h!2133 (toList!756 lt!38974))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1543) (toList!756 lt!38974)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38974))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84634 () Bool)

(assert (=> b!84634 (= e!55204 (containsKey!142 (t!5251 (toList!756 lt!38974)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21727 (not res!43655)) b!84633))

(assert (= (and b!84633 res!43656) b!84634))

(declare-fun m!88437 () Bool)

(assert (=> b!84634 m!88437))

(assert (=> d!21035 d!21727))

(declare-fun d!21729 () Bool)

(declare-fun res!43657 () Bool)

(declare-fun e!55205 () Bool)

(assert (=> d!21729 (=> res!43657 e!55205)))

(assert (=> d!21729 (= res!43657 (and ((_ is Cons!1543) (toList!756 call!7768)) (= (_1!1120 (h!2133 (toList!756 call!7768))) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899))))))))

(assert (=> d!21729 (= (containsKey!142 (toList!756 call!7768) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899)))) e!55205)))

(declare-fun b!84635 () Bool)

(declare-fun e!55206 () Bool)

(assert (=> b!84635 (= e!55205 e!55206)))

(declare-fun res!43658 () Bool)

(assert (=> b!84635 (=> (not res!43658) (not e!55206))))

(assert (=> b!84635 (= res!43658 (and (or (not ((_ is Cons!1543) (toList!756 call!7768))) (bvsle (_1!1120 (h!2133 (toList!756 call!7768))) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899))))) ((_ is Cons!1543) (toList!756 call!7768)) (bvslt (_1!1120 (h!2133 (toList!756 call!7768))) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899))))))))

(declare-fun b!84636 () Bool)

(assert (=> b!84636 (= e!55206 (containsKey!142 (t!5251 (toList!756 call!7768)) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899)))))))

(assert (= (and d!21729 (not res!43657)) b!84635))

(assert (= (and b!84635 res!43658) b!84636))

(declare-fun m!88439 () Bool)

(assert (=> b!84636 m!88439))

(assert (=> d!20921 d!21729))

(declare-fun d!21731 () Bool)

(assert (=> d!21731 (= (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83668 d!21731))

(assert (=> b!83528 d!21181))

(declare-fun bm!7973 () Bool)

(declare-fun call!7977 () List!1547)

(declare-fun call!7976 () List!1547)

(assert (=> bm!7973 (= call!7977 call!7976)))

(declare-fun b!84637 () Bool)

(declare-fun e!55210 () List!1547)

(assert (=> b!84637 (= e!55210 call!7977)))

(declare-fun b!84638 () Bool)

(declare-fun e!55209 () List!1547)

(declare-fun call!7978 () List!1547)

(assert (=> b!84638 (= e!55209 call!7978)))

(declare-fun b!84639 () Bool)

(declare-fun e!55208 () List!1547)

(assert (=> b!84639 (= e!55208 (insertStrictlySorted!59 (t!5251 (t!5251 (toList!756 lt!38755))) (_1!1120 lt!38760) (_2!1120 lt!38760)))))

(declare-fun b!84640 () Bool)

(assert (=> b!84640 (= e!55209 call!7978)))

(declare-fun b!84641 () Bool)

(declare-fun res!43659 () Bool)

(declare-fun e!55211 () Bool)

(assert (=> b!84641 (=> (not res!43659) (not e!55211))))

(declare-fun lt!39827 () List!1547)

(assert (=> b!84641 (= res!43659 (containsKey!142 lt!39827 (_1!1120 lt!38760)))))

(declare-fun d!21733 () Bool)

(assert (=> d!21733 e!55211))

(declare-fun res!43660 () Bool)

(assert (=> d!21733 (=> (not res!43660) (not e!55211))))

(assert (=> d!21733 (= res!43660 (isStrictlySorted!292 lt!39827))))

(declare-fun e!55207 () List!1547)

(assert (=> d!21733 (= lt!39827 e!55207)))

(declare-fun c!13672 () Bool)

(assert (=> d!21733 (= c!13672 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38755))) (bvslt (_1!1120 (h!2133 (t!5251 (toList!756 lt!38755)))) (_1!1120 lt!38760))))))

(assert (=> d!21733 (isStrictlySorted!292 (t!5251 (toList!756 lt!38755)))))

(assert (=> d!21733 (= (insertStrictlySorted!59 (t!5251 (toList!756 lt!38755)) (_1!1120 lt!38760) (_2!1120 lt!38760)) lt!39827)))

(declare-fun b!84642 () Bool)

(assert (=> b!84642 (= e!55211 (contains!760 lt!39827 (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))))))

(declare-fun b!84643 () Bool)

(assert (=> b!84643 (= e!55207 e!55210)))

(declare-fun c!13671 () Bool)

(assert (=> b!84643 (= c!13671 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38755))) (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!38755)))) (_1!1120 lt!38760))))))

(declare-fun c!13674 () Bool)

(declare-fun b!84644 () Bool)

(assert (=> b!84644 (= e!55208 (ite c!13671 (t!5251 (t!5251 (toList!756 lt!38755))) (ite c!13674 (Cons!1543 (h!2133 (t!5251 (toList!756 lt!38755))) (t!5251 (t!5251 (toList!756 lt!38755)))) Nil!1544)))))

(declare-fun b!84645 () Bool)

(assert (=> b!84645 (= c!13674 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38755))) (bvsgt (_1!1120 (h!2133 (t!5251 (toList!756 lt!38755)))) (_1!1120 lt!38760))))))

(assert (=> b!84645 (= e!55210 e!55209)))

(declare-fun bm!7974 () Bool)

(assert (=> bm!7974 (= call!7976 ($colon$colon!70 e!55208 (ite c!13672 (h!2133 (t!5251 (toList!756 lt!38755))) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760)))))))

(declare-fun c!13673 () Bool)

(assert (=> bm!7974 (= c!13673 c!13672)))

(declare-fun b!84646 () Bool)

(assert (=> b!84646 (= e!55207 call!7976)))

(declare-fun bm!7975 () Bool)

(assert (=> bm!7975 (= call!7978 call!7977)))

(assert (= (and d!21733 c!13672) b!84646))

(assert (= (and d!21733 (not c!13672)) b!84643))

(assert (= (and b!84643 c!13671) b!84637))

(assert (= (and b!84643 (not c!13671)) b!84645))

(assert (= (and b!84645 c!13674) b!84640))

(assert (= (and b!84645 (not c!13674)) b!84638))

(assert (= (or b!84640 b!84638) bm!7975))

(assert (= (or b!84637 bm!7975) bm!7973))

(assert (= (or b!84646 bm!7973) bm!7974))

(assert (= (and bm!7974 c!13673) b!84639))

(assert (= (and bm!7974 (not c!13673)) b!84644))

(assert (= (and d!21733 res!43660) b!84641))

(assert (= (and b!84641 res!43659) b!84642))

(declare-fun m!88441 () Bool)

(assert (=> d!21733 m!88441))

(assert (=> d!21733 m!88023))

(declare-fun m!88443 () Bool)

(assert (=> b!84639 m!88443))

(declare-fun m!88445 () Bool)

(assert (=> b!84642 m!88445))

(declare-fun m!88447 () Bool)

(assert (=> bm!7974 m!88447))

(declare-fun m!88449 () Bool)

(assert (=> b!84641 m!88449))

(assert (=> b!83733 d!21733))

(declare-fun d!21735 () Bool)

(assert (=> d!21735 (isDefined!92 (getValueByKey!138 (toList!756 lt!39021) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!39828 () Unit!2445)

(assert (=> d!21735 (= lt!39828 (choose!496 (toList!756 lt!39021) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55212 () Bool)

(assert (=> d!21735 e!55212))

(declare-fun res!43661 () Bool)

(assert (=> d!21735 (=> (not res!43661) (not e!55212))))

(assert (=> d!21735 (= res!43661 (isStrictlySorted!292 (toList!756 lt!39021)))))

(assert (=> d!21735 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39021) #b1000000000000000000000000000000000000000000000000000000000000000) lt!39828)))

(declare-fun b!84647 () Bool)

(assert (=> b!84647 (= e!55212 (containsKey!142 (toList!756 lt!39021) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21735 res!43661) b!84647))

(assert (=> d!21735 m!86313))

(assert (=> d!21735 m!86313))

(assert (=> d!21735 m!86315))

(declare-fun m!88451 () Bool)

(assert (=> d!21735 m!88451))

(assert (=> d!21735 m!88193))

(assert (=> b!84647 m!86309))

(assert (=> b!83430 d!21735))

(declare-fun d!21737 () Bool)

(assert (=> d!21737 (= (isDefined!92 (getValueByKey!138 (toList!756 lt!39021) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!338 (getValueByKey!138 (toList!756 lt!39021) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3568 () Bool)

(assert (= bs!3568 d!21737))

(assert (=> bs!3568 m!86313))

(declare-fun m!88453 () Bool)

(assert (=> bs!3568 m!88453))

(assert (=> b!83430 d!21737))

(declare-fun b!84649 () Bool)

(declare-fun e!55213 () Option!144)

(declare-fun e!55214 () Option!144)

(assert (=> b!84649 (= e!55213 e!55214)))

(declare-fun c!13676 () Bool)

(assert (=> b!84649 (= c!13676 (and ((_ is Cons!1543) (toList!756 lt!39021)) (not (= (_1!1120 (h!2133 (toList!756 lt!39021))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!84648 () Bool)

(assert (=> b!84648 (= e!55213 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39021)))))))

(declare-fun b!84651 () Bool)

(assert (=> b!84651 (= e!55214 None!142)))

(declare-fun d!21739 () Bool)

(declare-fun c!13675 () Bool)

(assert (=> d!21739 (= c!13675 (and ((_ is Cons!1543) (toList!756 lt!39021)) (= (_1!1120 (h!2133 (toList!756 lt!39021))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21739 (= (getValueByKey!138 (toList!756 lt!39021) #b1000000000000000000000000000000000000000000000000000000000000000) e!55213)))

(declare-fun b!84650 () Bool)

(assert (=> b!84650 (= e!55214 (getValueByKey!138 (t!5251 (toList!756 lt!39021)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21739 c!13675) b!84648))

(assert (= (and d!21739 (not c!13675)) b!84649))

(assert (= (and b!84649 c!13676) b!84650))

(assert (= (and b!84649 (not c!13676)) b!84651))

(declare-fun m!88455 () Bool)

(assert (=> b!84650 m!88455))

(assert (=> b!83430 d!21739))

(declare-fun b!84653 () Bool)

(declare-fun e!55215 () Option!144)

(declare-fun e!55216 () Option!144)

(assert (=> b!84653 (= e!55215 e!55216)))

(declare-fun c!13678 () Bool)

(assert (=> b!84653 (= c!13678 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!39037))) (not (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!39037)))) (_1!1120 lt!38760)))))))

(declare-fun b!84652 () Bool)

(assert (=> b!84652 (= e!55215 (Some!143 (_2!1120 (h!2133 (t!5251 (toList!756 lt!39037))))))))

(declare-fun b!84655 () Bool)

(assert (=> b!84655 (= e!55216 None!142)))

(declare-fun d!21741 () Bool)

(declare-fun c!13677 () Bool)

(assert (=> d!21741 (= c!13677 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!39037))) (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!39037)))) (_1!1120 lt!38760))))))

(assert (=> d!21741 (= (getValueByKey!138 (t!5251 (toList!756 lt!39037)) (_1!1120 lt!38760)) e!55215)))

(declare-fun b!84654 () Bool)

(assert (=> b!84654 (= e!55216 (getValueByKey!138 (t!5251 (t!5251 (toList!756 lt!39037))) (_1!1120 lt!38760)))))

(assert (= (and d!21741 c!13677) b!84652))

(assert (= (and d!21741 (not c!13677)) b!84653))

(assert (= (and b!84653 c!13678) b!84654))

(assert (= (and b!84653 (not c!13678)) b!84655))

(declare-fun m!88457 () Bool)

(assert (=> b!84654 m!88457))

(assert (=> b!83713 d!21741))

(assert (=> b!83321 d!21071))

(assert (=> b!83368 d!21525))

(assert (=> b!83368 d!20973))

(declare-fun d!21743 () Bool)

(assert (=> d!21743 (= ($colon$colon!70 e!54436 (ite c!13315 (h!2133 (toList!756 lt!38749)) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760)))) (Cons!1543 (ite c!13315 (h!2133 (toList!756 lt!38749)) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))) e!54436))))

(assert (=> bm!7838 d!21743))

(declare-fun d!21745 () Bool)

(declare-fun e!55217 () Bool)

(assert (=> d!21745 e!55217))

(declare-fun res!43662 () Bool)

(assert (=> d!21745 (=> (not res!43662) (not e!55217))))

(declare-fun lt!39832 () ListLongMap!1481)

(assert (=> d!21745 (= res!43662 (contains!757 lt!39832 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))))))

(declare-fun lt!39829 () List!1547)

(assert (=> d!21745 (= lt!39832 (ListLongMap!1482 lt!39829))))

(declare-fun lt!39830 () Unit!2445)

(declare-fun lt!39831 () Unit!2445)

(assert (=> d!21745 (= lt!39830 lt!39831)))

(assert (=> d!21745 (= (getValueByKey!138 lt!39829 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))) (Some!143 (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))))))

(assert (=> d!21745 (= lt!39831 (lemmaContainsTupThenGetReturnValue!57 lt!39829 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))))))

(assert (=> d!21745 (= lt!39829 (insertStrictlySorted!59 (toList!756 call!7864) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))))))

(assert (=> d!21745 (= (+!114 call!7864 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))) lt!39832)))

(declare-fun b!84656 () Bool)

(declare-fun res!43663 () Bool)

(assert (=> b!84656 (=> (not res!43663) (not e!55217))))

(assert (=> b!84656 (= res!43663 (= (getValueByKey!138 (toList!756 lt!39832) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))) (Some!143 (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))))))))

(declare-fun b!84657 () Bool)

(assert (=> b!84657 (= e!55217 (contains!760 (toList!756 lt!39832) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))))))

(assert (= (and d!21745 res!43662) b!84656))

(assert (= (and b!84656 res!43663) b!84657))

(declare-fun m!88459 () Bool)

(assert (=> d!21745 m!88459))

(declare-fun m!88461 () Bool)

(assert (=> d!21745 m!88461))

(declare-fun m!88463 () Bool)

(assert (=> d!21745 m!88463))

(declare-fun m!88465 () Bool)

(assert (=> d!21745 m!88465))

(declare-fun m!88467 () Bool)

(assert (=> b!84656 m!88467))

(declare-fun m!88469 () Bool)

(assert (=> b!84657 m!88469))

(assert (=> b!83600 d!21745))

(declare-fun d!21747 () Bool)

(declare-fun lt!39833 () Bool)

(assert (=> d!21747 (= lt!39833 (select (content!87 (toList!756 lt!39389)) (tuple2!2221 lt!39022 lt!39020)))))

(declare-fun e!55218 () Bool)

(assert (=> d!21747 (= lt!39833 e!55218)))

(declare-fun res!43664 () Bool)

(assert (=> d!21747 (=> (not res!43664) (not e!55218))))

(assert (=> d!21747 (= res!43664 ((_ is Cons!1543) (toList!756 lt!39389)))))

(assert (=> d!21747 (= (contains!760 (toList!756 lt!39389) (tuple2!2221 lt!39022 lt!39020)) lt!39833)))

(declare-fun b!84658 () Bool)

(declare-fun e!55219 () Bool)

(assert (=> b!84658 (= e!55218 e!55219)))

(declare-fun res!43665 () Bool)

(assert (=> b!84658 (=> res!43665 e!55219)))

(assert (=> b!84658 (= res!43665 (= (h!2133 (toList!756 lt!39389)) (tuple2!2221 lt!39022 lt!39020)))))

(declare-fun b!84659 () Bool)

(assert (=> b!84659 (= e!55219 (contains!760 (t!5251 (toList!756 lt!39389)) (tuple2!2221 lt!39022 lt!39020)))))

(assert (= (and d!21747 res!43664) b!84658))

(assert (= (and b!84658 (not res!43665)) b!84659))

(declare-fun m!88471 () Bool)

(assert (=> d!21747 m!88471))

(declare-fun m!88473 () Bool)

(assert (=> d!21747 m!88473))

(declare-fun m!88475 () Bool)

(assert (=> b!84659 m!88475))

(assert (=> b!83651 d!21747))

(assert (=> d!20907 d!20905))

(assert (=> d!20907 d!20903))

(assert (=> d!20907 d!20901))

(assert (=> d!20907 d!20909))

(declare-fun d!21749 () Bool)

(declare-fun e!55220 () Bool)

(assert (=> d!21749 e!55220))

(declare-fun res!43666 () Bool)

(assert (=> d!21749 (=> res!43666 e!55220)))

(declare-fun lt!39834 () Bool)

(assert (=> d!21749 (= res!43666 (not lt!39834))))

(declare-fun lt!39836 () Bool)

(assert (=> d!21749 (= lt!39834 lt!39836)))

(declare-fun lt!39837 () Unit!2445)

(declare-fun e!55221 () Unit!2445)

(assert (=> d!21749 (= lt!39837 e!55221)))

(declare-fun c!13679 () Bool)

(assert (=> d!21749 (= c!13679 lt!39836)))

(assert (=> d!21749 (= lt!39836 (containsKey!142 (toList!756 lt!39385) (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21749 (= (contains!757 lt!39385 (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) lt!39834)))

(declare-fun b!84660 () Bool)

(declare-fun lt!39835 () Unit!2445)

(assert (=> b!84660 (= e!55221 lt!39835)))

(assert (=> b!84660 (= lt!39835 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39385) (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> b!84660 (isDefined!92 (getValueByKey!138 (toList!756 lt!39385) (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!84661 () Bool)

(declare-fun Unit!2515 () Unit!2445)

(assert (=> b!84661 (= e!55221 Unit!2515)))

(declare-fun b!84662 () Bool)

(assert (=> b!84662 (= e!55220 (isDefined!92 (getValueByKey!138 (toList!756 lt!39385) (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(assert (= (and d!21749 c!13679) b!84660))

(assert (= (and d!21749 (not c!13679)) b!84661))

(assert (= (and d!21749 (not res!43666)) b!84662))

(declare-fun m!88477 () Bool)

(assert (=> d!21749 m!88477))

(declare-fun m!88479 () Bool)

(assert (=> b!84660 m!88479))

(assert (=> b!84660 m!86761))

(assert (=> b!84660 m!86761))

(declare-fun m!88481 () Bool)

(assert (=> b!84660 m!88481))

(assert (=> b!84662 m!86761))

(assert (=> b!84662 m!86761))

(assert (=> b!84662 m!88481))

(assert (=> d!21091 d!21749))

(declare-fun b!84664 () Bool)

(declare-fun e!55222 () Option!144)

(declare-fun e!55223 () Option!144)

(assert (=> b!84664 (= e!55222 e!55223)))

(declare-fun c!13681 () Bool)

(assert (=> b!84664 (= c!13681 (and ((_ is Cons!1543) lt!39382) (not (= (_1!1120 (h!2133 lt!39382)) (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))))

(declare-fun b!84663 () Bool)

(assert (=> b!84663 (= e!55222 (Some!143 (_2!1120 (h!2133 lt!39382))))))

(declare-fun b!84666 () Bool)

(assert (=> b!84666 (= e!55223 None!142)))

(declare-fun c!13680 () Bool)

(declare-fun d!21751 () Bool)

(assert (=> d!21751 (= c!13680 (and ((_ is Cons!1543) lt!39382) (= (_1!1120 (h!2133 lt!39382)) (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(assert (=> d!21751 (= (getValueByKey!138 lt!39382 (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) e!55222)))

(declare-fun b!84665 () Bool)

(assert (=> b!84665 (= e!55223 (getValueByKey!138 (t!5251 lt!39382) (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!21751 c!13680) b!84663))

(assert (= (and d!21751 (not c!13680)) b!84664))

(assert (= (and b!84664 c!13681) b!84665))

(assert (= (and b!84664 (not c!13681)) b!84666))

(declare-fun m!88483 () Bool)

(assert (=> b!84665 m!88483))

(assert (=> d!21091 d!21751))

(declare-fun d!21753 () Bool)

(assert (=> d!21753 (= (getValueByKey!138 lt!39382 (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) (Some!143 (_2!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun lt!39838 () Unit!2445)

(assert (=> d!21753 (= lt!39838 (choose!495 lt!39382 (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (_2!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun e!55224 () Bool)

(assert (=> d!21753 e!55224))

(declare-fun res!43667 () Bool)

(assert (=> d!21753 (=> (not res!43667) (not e!55224))))

(assert (=> d!21753 (= res!43667 (isStrictlySorted!292 lt!39382))))

(assert (=> d!21753 (= (lemmaContainsTupThenGetReturnValue!57 lt!39382 (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (_2!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) lt!39838)))

(declare-fun b!84667 () Bool)

(declare-fun res!43668 () Bool)

(assert (=> b!84667 (=> (not res!43668) (not e!55224))))

(assert (=> b!84667 (= res!43668 (containsKey!142 lt!39382 (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!84668 () Bool)

(assert (=> b!84668 (= e!55224 (contains!760 lt!39382 (tuple2!2221 (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (_2!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(assert (= (and d!21753 res!43667) b!84667))

(assert (= (and b!84667 res!43668) b!84668))

(assert (=> d!21753 m!86755))

(declare-fun m!88485 () Bool)

(assert (=> d!21753 m!88485))

(declare-fun m!88487 () Bool)

(assert (=> d!21753 m!88487))

(declare-fun m!88489 () Bool)

(assert (=> b!84667 m!88489))

(declare-fun m!88491 () Bool)

(assert (=> b!84668 m!88491))

(assert (=> d!21091 d!21753))

(declare-fun bm!7976 () Bool)

(declare-fun call!7980 () List!1547)

(declare-fun call!7979 () List!1547)

(assert (=> bm!7976 (= call!7980 call!7979)))

(declare-fun b!84669 () Bool)

(declare-fun e!55228 () List!1547)

(assert (=> b!84669 (= e!55228 call!7980)))

(declare-fun b!84670 () Bool)

(declare-fun e!55227 () List!1547)

(declare-fun call!7981 () List!1547)

(assert (=> b!84670 (= e!55227 call!7981)))

(declare-fun b!84671 () Bool)

(declare-fun e!55226 () List!1547)

(assert (=> b!84671 (= e!55226 (insertStrictlySorted!59 (t!5251 (toList!756 (ite c!13247 call!7800 (ite c!13249 call!7805 call!7799)))) (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (_2!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!84672 () Bool)

(assert (=> b!84672 (= e!55227 call!7981)))

(declare-fun b!84673 () Bool)

(declare-fun res!43669 () Bool)

(declare-fun e!55229 () Bool)

(assert (=> b!84673 (=> (not res!43669) (not e!55229))))

(declare-fun lt!39839 () List!1547)

(assert (=> b!84673 (= res!43669 (containsKey!142 lt!39839 (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun d!21755 () Bool)

(assert (=> d!21755 e!55229))

(declare-fun res!43670 () Bool)

(assert (=> d!21755 (=> (not res!43670) (not e!55229))))

(assert (=> d!21755 (= res!43670 (isStrictlySorted!292 lt!39839))))

(declare-fun e!55225 () List!1547)

(assert (=> d!21755 (= lt!39839 e!55225)))

(declare-fun c!13683 () Bool)

(assert (=> d!21755 (= c!13683 (and ((_ is Cons!1543) (toList!756 (ite c!13247 call!7800 (ite c!13249 call!7805 call!7799)))) (bvslt (_1!1120 (h!2133 (toList!756 (ite c!13247 call!7800 (ite c!13249 call!7805 call!7799))))) (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(assert (=> d!21755 (isStrictlySorted!292 (toList!756 (ite c!13247 call!7800 (ite c!13249 call!7805 call!7799))))))

(assert (=> d!21755 (= (insertStrictlySorted!59 (toList!756 (ite c!13247 call!7800 (ite c!13249 call!7805 call!7799))) (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (_2!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))) lt!39839)))

(declare-fun b!84674 () Bool)

(assert (=> b!84674 (= e!55229 (contains!760 lt!39839 (tuple2!2221 (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (_2!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!84675 () Bool)

(assert (=> b!84675 (= e!55225 e!55228)))

(declare-fun c!13682 () Bool)

(assert (=> b!84675 (= c!13682 (and ((_ is Cons!1543) (toList!756 (ite c!13247 call!7800 (ite c!13249 call!7805 call!7799)))) (= (_1!1120 (h!2133 (toList!756 (ite c!13247 call!7800 (ite c!13249 call!7805 call!7799))))) (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun c!13685 () Bool)

(declare-fun b!84676 () Bool)

(assert (=> b!84676 (= e!55226 (ite c!13682 (t!5251 (toList!756 (ite c!13247 call!7800 (ite c!13249 call!7805 call!7799)))) (ite c!13685 (Cons!1543 (h!2133 (toList!756 (ite c!13247 call!7800 (ite c!13249 call!7805 call!7799)))) (t!5251 (toList!756 (ite c!13247 call!7800 (ite c!13249 call!7805 call!7799))))) Nil!1544)))))

(declare-fun b!84677 () Bool)

(assert (=> b!84677 (= c!13685 (and ((_ is Cons!1543) (toList!756 (ite c!13247 call!7800 (ite c!13249 call!7805 call!7799)))) (bvsgt (_1!1120 (h!2133 (toList!756 (ite c!13247 call!7800 (ite c!13249 call!7805 call!7799))))) (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(assert (=> b!84677 (= e!55228 e!55227)))

(declare-fun bm!7977 () Bool)

(assert (=> bm!7977 (= call!7979 ($colon$colon!70 e!55226 (ite c!13683 (h!2133 (toList!756 (ite c!13247 call!7800 (ite c!13249 call!7805 call!7799)))) (tuple2!2221 (_1!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (_2!1120 (ite (or c!13247 c!13249) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))))

(declare-fun c!13684 () Bool)

(assert (=> bm!7977 (= c!13684 c!13683)))

(declare-fun b!84678 () Bool)

(assert (=> b!84678 (= e!55225 call!7979)))

(declare-fun bm!7978 () Bool)

(assert (=> bm!7978 (= call!7981 call!7980)))

(assert (= (and d!21755 c!13683) b!84678))

(assert (= (and d!21755 (not c!13683)) b!84675))

(assert (= (and b!84675 c!13682) b!84669))

(assert (= (and b!84675 (not c!13682)) b!84677))

(assert (= (and b!84677 c!13685) b!84672))

(assert (= (and b!84677 (not c!13685)) b!84670))

(assert (= (or b!84672 b!84670) bm!7978))

(assert (= (or b!84669 bm!7978) bm!7976))

(assert (= (or b!84678 bm!7976) bm!7977))

(assert (= (and bm!7977 c!13684) b!84671))

(assert (= (and bm!7977 (not c!13684)) b!84676))

(assert (= (and d!21755 res!43670) b!84673))

(assert (= (and b!84673 res!43669) b!84674))

(declare-fun m!88493 () Bool)

(assert (=> d!21755 m!88493))

(declare-fun m!88495 () Bool)

(assert (=> d!21755 m!88495))

(declare-fun m!88497 () Bool)

(assert (=> b!84671 m!88497))

(declare-fun m!88499 () Bool)

(assert (=> b!84674 m!88499))

(declare-fun m!88501 () Bool)

(assert (=> bm!7977 m!88501))

(declare-fun m!88503 () Bool)

(assert (=> b!84673 m!88503))

(assert (=> d!21091 d!21755))

(declare-fun d!21757 () Bool)

(assert (=> d!21757 (isDefined!92 (getValueByKey!138 (toList!756 call!7768) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899)))))))

(declare-fun lt!39840 () Unit!2445)

(assert (=> d!21757 (= lt!39840 (choose!496 (toList!756 call!7768) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899)))))))

(declare-fun e!55230 () Bool)

(assert (=> d!21757 e!55230))

(declare-fun res!43671 () Bool)

(assert (=> d!21757 (=> (not res!43671) (not e!55230))))

(assert (=> d!21757 (= res!43671 (isStrictlySorted!292 (toList!756 call!7768)))))

(assert (=> d!21757 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 call!7768) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899)))) lt!39840)))

(declare-fun b!84679 () Bool)

(assert (=> b!84679 (= e!55230 (containsKey!142 (toList!756 call!7768) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899)))))))

(assert (= (and d!21757 res!43671) b!84679))

(assert (=> d!21757 m!86113))

(assert (=> d!21757 m!86113))

(assert (=> d!21757 m!86115))

(declare-fun m!88505 () Bool)

(assert (=> d!21757 m!88505))

(declare-fun m!88507 () Bool)

(assert (=> d!21757 m!88507))

(assert (=> b!84679 m!86109))

(assert (=> b!83252 d!21757))

(declare-fun d!21759 () Bool)

(assert (=> d!21759 (= (isDefined!92 (getValueByKey!138 (toList!756 call!7768) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899))))) (not (isEmpty!338 (getValueByKey!138 (toList!756 call!7768) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899)))))))))

(declare-fun bs!3569 () Bool)

(assert (= bs!3569 d!21759))

(assert (=> bs!3569 m!86113))

(declare-fun m!88509 () Bool)

(assert (=> bs!3569 m!88509))

(assert (=> b!83252 d!21759))

(declare-fun b!84681 () Bool)

(declare-fun e!55231 () Option!144)

(declare-fun e!55232 () Option!144)

(assert (=> b!84681 (= e!55231 e!55232)))

(declare-fun c!13687 () Bool)

(assert (=> b!84681 (= c!13687 (and ((_ is Cons!1543) (toList!756 call!7768)) (not (= (_1!1120 (h!2133 (toList!756 call!7768))) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899)))))))))

(declare-fun b!84680 () Bool)

(assert (=> b!84680 (= e!55231 (Some!143 (_2!1120 (h!2133 (toList!756 call!7768)))))))

(declare-fun b!84683 () Bool)

(assert (=> b!84683 (= e!55232 None!142)))

(declare-fun c!13686 () Bool)

(declare-fun d!21761 () Bool)

(assert (=> d!21761 (= c!13686 (and ((_ is Cons!1543) (toList!756 call!7768)) (= (_1!1120 (h!2133 (toList!756 call!7768))) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899))))))))

(assert (=> d!21761 (= (getValueByKey!138 (toList!756 call!7768) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899)))) e!55231)))

(declare-fun b!84682 () Bool)

(assert (=> b!84682 (= e!55232 (getValueByKey!138 (t!5251 (toList!756 call!7768)) (ite c!13219 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899)))))))

(assert (= (and d!21761 c!13686) b!84680))

(assert (= (and d!21761 (not c!13686)) b!84681))

(assert (= (and b!84681 c!13687) b!84682))

(assert (= (and b!84681 (not c!13687)) b!84683))

(declare-fun m!88511 () Bool)

(assert (=> b!84682 m!88511))

(assert (=> b!83252 d!21761))

(declare-fun d!21763 () Bool)

(assert (=> d!21763 (contains!757 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))

(declare-fun lt!39843 () Unit!2445)

(declare-fun choose!504 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 (_ BitVec 64) (_ BitVec 32) Int) Unit!2445)

(assert (=> d!21763 (= lt!39843 (choose!504 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(assert (=> d!21763 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!21763 (= (lemmaArrayContainsKeyThenInListMap!18 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) lt!39843)))

(declare-fun bs!3570 () Bool)

(assert (= bs!3570 d!21763))

(assert (=> bs!3570 m!85729))

(assert (=> bs!3570 m!85729))

(assert (=> bs!3570 m!85591))

(assert (=> bs!3570 m!85761))

(assert (=> bs!3570 m!85591))

(declare-fun m!88513 () Bool)

(assert (=> bs!3570 m!88513))

(assert (=> bs!3570 m!86023))

(assert (=> b!83315 d!21763))

(assert (=> b!83315 d!20915))

(assert (=> b!83315 d!20917))

(declare-fun d!21765 () Bool)

(assert (=> d!21765 (isDefined!92 (getValueByKey!138 (toList!756 lt!38974) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!39844 () Unit!2445)

(assert (=> d!21765 (= lt!39844 (choose!496 (toList!756 lt!38974) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55233 () Bool)

(assert (=> d!21765 e!55233))

(declare-fun res!43672 () Bool)

(assert (=> d!21765 (=> (not res!43672) (not e!55233))))

(assert (=> d!21765 (= res!43672 (isStrictlySorted!292 (toList!756 lt!38974)))))

(assert (=> d!21765 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!38974) #b0000000000000000000000000000000000000000000000000000000000000000) lt!39844)))

(declare-fun b!84684 () Bool)

(assert (=> b!84684 (= e!55233 (containsKey!142 (toList!756 lt!38974) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21765 res!43672) b!84684))

(assert (=> d!21765 m!86297))

(assert (=> d!21765 m!86297))

(assert (=> d!21765 m!86529))

(declare-fun m!88515 () Bool)

(assert (=> d!21765 m!88515))

(assert (=> d!21765 m!87733))

(assert (=> b!84684 m!86525))

(assert (=> b!83531 d!21765))

(declare-fun d!21767 () Bool)

(assert (=> d!21767 (= (isDefined!92 (getValueByKey!138 (toList!756 lt!38974) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!338 (getValueByKey!138 (toList!756 lt!38974) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3571 () Bool)

(assert (= bs!3571 d!21767))

(assert (=> bs!3571 m!86297))

(declare-fun m!88517 () Bool)

(assert (=> bs!3571 m!88517))

(assert (=> b!83531 d!21767))

(declare-fun b!84686 () Bool)

(declare-fun e!55234 () Option!144)

(declare-fun e!55235 () Option!144)

(assert (=> b!84686 (= e!55234 e!55235)))

(declare-fun c!13689 () Bool)

(assert (=> b!84686 (= c!13689 (and ((_ is Cons!1543) (toList!756 lt!38974)) (not (= (_1!1120 (h!2133 (toList!756 lt!38974))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!84685 () Bool)

(assert (=> b!84685 (= e!55234 (Some!143 (_2!1120 (h!2133 (toList!756 lt!38974)))))))

(declare-fun b!84688 () Bool)

(assert (=> b!84688 (= e!55235 None!142)))

(declare-fun d!21769 () Bool)

(declare-fun c!13688 () Bool)

(assert (=> d!21769 (= c!13688 (and ((_ is Cons!1543) (toList!756 lt!38974)) (= (_1!1120 (h!2133 (toList!756 lt!38974))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21769 (= (getValueByKey!138 (toList!756 lt!38974) #b0000000000000000000000000000000000000000000000000000000000000000) e!55234)))

(declare-fun b!84687 () Bool)

(assert (=> b!84687 (= e!55235 (getValueByKey!138 (t!5251 (toList!756 lt!38974)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21769 c!13688) b!84685))

(assert (= (and d!21769 (not c!13688)) b!84686))

(assert (= (and b!84686 c!13689) b!84687))

(assert (= (and b!84686 (not c!13689)) b!84688))

(declare-fun m!88519 () Bool)

(assert (=> b!84687 m!88519))

(assert (=> b!83531 d!21769))

(declare-fun d!21771 () Bool)

(declare-fun res!43673 () Bool)

(declare-fun e!55236 () Bool)

(assert (=> d!21771 (=> res!43673 e!55236)))

(assert (=> d!21771 (= res!43673 (or ((_ is Nil!1544) lt!39233) ((_ is Nil!1544) (t!5251 lt!39233))))))

(assert (=> d!21771 (= (isStrictlySorted!292 lt!39233) e!55236)))

(declare-fun b!84689 () Bool)

(declare-fun e!55237 () Bool)

(assert (=> b!84689 (= e!55236 e!55237)))

(declare-fun res!43674 () Bool)

(assert (=> b!84689 (=> (not res!43674) (not e!55237))))

(assert (=> b!84689 (= res!43674 (bvslt (_1!1120 (h!2133 lt!39233)) (_1!1120 (h!2133 (t!5251 lt!39233)))))))

(declare-fun b!84690 () Bool)

(assert (=> b!84690 (= e!55237 (isStrictlySorted!292 (t!5251 lt!39233)))))

(assert (= (and d!21771 (not res!43673)) b!84689))

(assert (= (and b!84689 res!43674) b!84690))

(declare-fun m!88521 () Bool)

(assert (=> b!84690 m!88521))

(assert (=> d!20983 d!21771))

(declare-fun d!21773 () Bool)

(declare-fun res!43675 () Bool)

(declare-fun e!55238 () Bool)

(assert (=> d!21773 (=> res!43675 e!55238)))

(assert (=> d!21773 (= res!43675 (or ((_ is Nil!1544) (toList!756 lt!38751)) ((_ is Nil!1544) (t!5251 (toList!756 lt!38751)))))))

(assert (=> d!21773 (= (isStrictlySorted!292 (toList!756 lt!38751)) e!55238)))

(declare-fun b!84691 () Bool)

(declare-fun e!55239 () Bool)

(assert (=> b!84691 (= e!55238 e!55239)))

(declare-fun res!43676 () Bool)

(assert (=> b!84691 (=> (not res!43676) (not e!55239))))

(assert (=> b!84691 (= res!43676 (bvslt (_1!1120 (h!2133 (toList!756 lt!38751))) (_1!1120 (h!2133 (t!5251 (toList!756 lt!38751))))))))

(declare-fun b!84692 () Bool)

(assert (=> b!84692 (= e!55239 (isStrictlySorted!292 (t!5251 (toList!756 lt!38751))))))

(assert (= (and d!21773 (not res!43675)) b!84691))

(assert (= (and b!84691 res!43676) b!84692))

(declare-fun m!88523 () Bool)

(assert (=> b!84692 m!88523))

(assert (=> d!20983 d!21773))

(declare-fun d!21775 () Bool)

(declare-fun res!43677 () Bool)

(declare-fun e!55240 () Bool)

(assert (=> d!21775 (=> res!43677 e!55240)))

(assert (=> d!21775 (= res!43677 (and ((_ is Cons!1543) (toList!756 lt!39021)) (= (_1!1120 (h!2133 (toList!756 lt!39021))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!21775 (= (containsKey!142 (toList!756 lt!39021) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!55240)))

(declare-fun b!84693 () Bool)

(declare-fun e!55241 () Bool)

(assert (=> b!84693 (= e!55240 e!55241)))

(declare-fun res!43678 () Bool)

(assert (=> b!84693 (=> (not res!43678) (not e!55241))))

(assert (=> b!84693 (= res!43678 (and (or (not ((_ is Cons!1543) (toList!756 lt!39021))) (bvsle (_1!1120 (h!2133 (toList!756 lt!39021))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1543) (toList!756 lt!39021)) (bvslt (_1!1120 (h!2133 (toList!756 lt!39021))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!84694 () Bool)

(assert (=> b!84694 (= e!55241 (containsKey!142 (t!5251 (toList!756 lt!39021)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!21775 (not res!43677)) b!84693))

(assert (= (and b!84693 res!43678) b!84694))

(assert (=> b!84694 m!85781))

(declare-fun m!88525 () Bool)

(assert (=> b!84694 m!88525))

(assert (=> d!20985 d!21775))

(declare-fun d!21777 () Bool)

(declare-fun e!55242 () Bool)

(assert (=> d!21777 e!55242))

(declare-fun res!43679 () Bool)

(assert (=> d!21777 (=> (not res!43679) (not e!55242))))

(declare-fun lt!39848 () ListLongMap!1481)

(assert (=> d!21777 (= res!43679 (contains!757 lt!39848 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))

(declare-fun lt!39845 () List!1547)

(assert (=> d!21777 (= lt!39848 (ListLongMap!1482 lt!39845))))

(declare-fun lt!39846 () Unit!2445)

(declare-fun lt!39847 () Unit!2445)

(assert (=> d!21777 (= lt!39846 lt!39847)))

(assert (=> d!21777 (= (getValueByKey!138 lt!39845 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))

(assert (=> d!21777 (= lt!39847 (lemmaContainsTupThenGetReturnValue!57 lt!39845 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))

(assert (=> d!21777 (= lt!39845 (insertStrictlySorted!59 (toList!756 call!7812) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))

(assert (=> d!21777 (= (+!114 call!7812 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))) lt!39848)))

(declare-fun b!84695 () Bool)

(declare-fun res!43680 () Bool)

(assert (=> b!84695 (=> (not res!43680) (not e!55242))))

(assert (=> b!84695 (= res!43680 (= (getValueByKey!138 (toList!756 lt!39848) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))))

(declare-fun b!84696 () Bool)

(assert (=> b!84696 (= e!55242 (contains!760 (toList!756 lt!39848) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))

(assert (= (and d!21777 res!43679) b!84695))

(assert (= (and b!84695 res!43680) b!84696))

(declare-fun m!88527 () Bool)

(assert (=> d!21777 m!88527))

(declare-fun m!88529 () Bool)

(assert (=> d!21777 m!88529))

(declare-fun m!88531 () Bool)

(assert (=> d!21777 m!88531))

(declare-fun m!88533 () Bool)

(assert (=> d!21777 m!88533))

(declare-fun m!88535 () Bool)

(assert (=> b!84695 m!88535))

(declare-fun m!88537 () Bool)

(assert (=> b!84696 m!88537))

(assert (=> b!83232 d!21777))

(declare-fun d!21779 () Bool)

(assert (=> d!21779 (= (apply!81 lt!39280 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1209 (getValueByKey!138 (toList!756 lt!39280) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3572 () Bool)

(assert (= bs!3572 d!21779))

(assert (=> bs!3572 m!88427))

(assert (=> bs!3572 m!88427))

(declare-fun m!88539 () Bool)

(assert (=> bs!3572 m!88539))

(assert (=> b!83498 d!21779))

(declare-fun d!21781 () Bool)

(declare-fun e!55243 () Bool)

(assert (=> d!21781 e!55243))

(declare-fun res!43681 () Bool)

(assert (=> d!21781 (=> res!43681 e!55243)))

(declare-fun lt!39849 () Bool)

(assert (=> d!21781 (= res!43681 (not lt!39849))))

(declare-fun lt!39851 () Bool)

(assert (=> d!21781 (= lt!39849 lt!39851)))

(declare-fun lt!39852 () Unit!2445)

(declare-fun e!55244 () Unit!2445)

(assert (=> d!21781 (= lt!39852 e!55244)))

(declare-fun c!13690 () Bool)

(assert (=> d!21781 (= c!13690 lt!39851)))

(assert (=> d!21781 (= lt!39851 (containsKey!142 (toList!756 lt!39400) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21781 (= (contains!757 lt!39400 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!39849)))

(declare-fun b!84697 () Bool)

(declare-fun lt!39850 () Unit!2445)

(assert (=> b!84697 (= e!55244 lt!39850)))

(assert (=> b!84697 (= lt!39850 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39400) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!84697 (isDefined!92 (getValueByKey!138 (toList!756 lt!39400) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!84698 () Bool)

(declare-fun Unit!2516 () Unit!2445)

(assert (=> b!84698 (= e!55244 Unit!2516)))

(declare-fun b!84699 () Bool)

(assert (=> b!84699 (= e!55243 (isDefined!92 (getValueByKey!138 (toList!756 lt!39400) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!21781 c!13690) b!84697))

(assert (= (and d!21781 (not c!13690)) b!84698))

(assert (= (and d!21781 (not res!43681)) b!84699))

(declare-fun m!88541 () Bool)

(assert (=> d!21781 m!88541))

(declare-fun m!88543 () Bool)

(assert (=> b!84697 m!88543))

(assert (=> b!84697 m!86801))

(assert (=> b!84697 m!86801))

(declare-fun m!88545 () Bool)

(assert (=> b!84697 m!88545))

(assert (=> b!84699 m!86801))

(assert (=> b!84699 m!86801))

(assert (=> b!84699 m!88545))

(assert (=> d!21101 d!21781))

(declare-fun b!84701 () Bool)

(declare-fun e!55245 () Option!144)

(declare-fun e!55246 () Option!144)

(assert (=> b!84701 (= e!55245 e!55246)))

(declare-fun c!13692 () Bool)

(assert (=> b!84701 (= c!13692 (and ((_ is Cons!1543) lt!39397) (not (= (_1!1120 (h!2133 lt!39397)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!84700 () Bool)

(assert (=> b!84700 (= e!55245 (Some!143 (_2!1120 (h!2133 lt!39397))))))

(declare-fun b!84703 () Bool)

(assert (=> b!84703 (= e!55246 None!142)))

(declare-fun d!21783 () Bool)

(declare-fun c!13691 () Bool)

(assert (=> d!21783 (= c!13691 (and ((_ is Cons!1543) lt!39397) (= (_1!1120 (h!2133 lt!39397)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!21783 (= (getValueByKey!138 lt!39397 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!55245)))

(declare-fun b!84702 () Bool)

(assert (=> b!84702 (= e!55246 (getValueByKey!138 (t!5251 lt!39397) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!21783 c!13691) b!84700))

(assert (= (and d!21783 (not c!13691)) b!84701))

(assert (= (and b!84701 c!13692) b!84702))

(assert (= (and b!84701 (not c!13692)) b!84703))

(declare-fun m!88547 () Bool)

(assert (=> b!84702 m!88547))

(assert (=> d!21101 d!21783))

(declare-fun d!21785 () Bool)

(assert (=> d!21785 (= (getValueByKey!138 lt!39397 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!39853 () Unit!2445)

(assert (=> d!21785 (= lt!39853 (choose!495 lt!39397 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!55247 () Bool)

(assert (=> d!21785 e!55247))

(declare-fun res!43682 () Bool)

(assert (=> d!21785 (=> (not res!43682) (not e!55247))))

(assert (=> d!21785 (= res!43682 (isStrictlySorted!292 lt!39397))))

(assert (=> d!21785 (= (lemmaContainsTupThenGetReturnValue!57 lt!39397 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!39853)))

(declare-fun b!84704 () Bool)

(declare-fun res!43683 () Bool)

(assert (=> b!84704 (=> (not res!43683) (not e!55247))))

(assert (=> b!84704 (= res!43683 (containsKey!142 lt!39397 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!84705 () Bool)

(assert (=> b!84705 (= e!55247 (contains!760 lt!39397 (tuple2!2221 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!21785 res!43682) b!84704))

(assert (= (and b!84704 res!43683) b!84705))

(assert (=> d!21785 m!86795))

(declare-fun m!88549 () Bool)

(assert (=> d!21785 m!88549))

(declare-fun m!88551 () Bool)

(assert (=> d!21785 m!88551))

(declare-fun m!88553 () Bool)

(assert (=> b!84704 m!88553))

(declare-fun m!88555 () Bool)

(assert (=> b!84705 m!88555))

(assert (=> d!21101 d!21785))

(declare-fun bm!7979 () Bool)

(declare-fun call!7983 () List!1547)

(declare-fun call!7982 () List!1547)

(assert (=> bm!7979 (= call!7983 call!7982)))

(declare-fun b!84706 () Bool)

(declare-fun e!55251 () List!1547)

(assert (=> b!84706 (= e!55251 call!7983)))

(declare-fun b!84707 () Bool)

(declare-fun e!55250 () List!1547)

(declare-fun call!7984 () List!1547)

(assert (=> b!84707 (= e!55250 call!7984)))

(declare-fun b!84708 () Bool)

(declare-fun e!55249 () List!1547)

(assert (=> b!84708 (= e!55249 (insertStrictlySorted!59 (t!5251 (toList!756 call!7808)) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!84709 () Bool)

(assert (=> b!84709 (= e!55250 call!7984)))

(declare-fun b!84710 () Bool)

(declare-fun res!43684 () Bool)

(declare-fun e!55252 () Bool)

(assert (=> b!84710 (=> (not res!43684) (not e!55252))))

(declare-fun lt!39854 () List!1547)

(assert (=> b!84710 (= res!43684 (containsKey!142 lt!39854 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!21787 () Bool)

(assert (=> d!21787 e!55252))

(declare-fun res!43685 () Bool)

(assert (=> d!21787 (=> (not res!43685) (not e!55252))))

(assert (=> d!21787 (= res!43685 (isStrictlySorted!292 lt!39854))))

(declare-fun e!55248 () List!1547)

(assert (=> d!21787 (= lt!39854 e!55248)))

(declare-fun c!13694 () Bool)

(assert (=> d!21787 (= c!13694 (and ((_ is Cons!1543) (toList!756 call!7808)) (bvslt (_1!1120 (h!2133 (toList!756 call!7808))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!21787 (isStrictlySorted!292 (toList!756 call!7808))))

(assert (=> d!21787 (= (insertStrictlySorted!59 (toList!756 call!7808) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!39854)))

(declare-fun b!84711 () Bool)

(assert (=> b!84711 (= e!55252 (contains!760 lt!39854 (tuple2!2221 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!84712 () Bool)

(assert (=> b!84712 (= e!55248 e!55251)))

(declare-fun c!13693 () Bool)

(assert (=> b!84712 (= c!13693 (and ((_ is Cons!1543) (toList!756 call!7808)) (= (_1!1120 (h!2133 (toList!756 call!7808))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!84713 () Bool)

(declare-fun c!13696 () Bool)

(assert (=> b!84713 (= e!55249 (ite c!13693 (t!5251 (toList!756 call!7808)) (ite c!13696 (Cons!1543 (h!2133 (toList!756 call!7808)) (t!5251 (toList!756 call!7808))) Nil!1544)))))

(declare-fun b!84714 () Bool)

(assert (=> b!84714 (= c!13696 (and ((_ is Cons!1543) (toList!756 call!7808)) (bvsgt (_1!1120 (h!2133 (toList!756 call!7808))) (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!84714 (= e!55251 e!55250)))

(declare-fun bm!7980 () Bool)

(assert (=> bm!7980 (= call!7982 ($colon$colon!70 e!55249 (ite c!13694 (h!2133 (toList!756 call!7808)) (tuple2!2221 (_1!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1120 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1206 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!13695 () Bool)

(assert (=> bm!7980 (= c!13695 c!13694)))

(declare-fun b!84715 () Bool)

(assert (=> b!84715 (= e!55248 call!7982)))

(declare-fun bm!7981 () Bool)

(assert (=> bm!7981 (= call!7984 call!7983)))

(assert (= (and d!21787 c!13694) b!84715))

(assert (= (and d!21787 (not c!13694)) b!84712))

(assert (= (and b!84712 c!13693) b!84706))

(assert (= (and b!84712 (not c!13693)) b!84714))

(assert (= (and b!84714 c!13696) b!84709))

(assert (= (and b!84714 (not c!13696)) b!84707))

(assert (= (or b!84709 b!84707) bm!7981))

(assert (= (or b!84706 bm!7981) bm!7979))

(assert (= (or b!84715 bm!7979) bm!7980))

(assert (= (and bm!7980 c!13695) b!84708))

(assert (= (and bm!7980 (not c!13695)) b!84713))

(assert (= (and d!21787 res!43685) b!84710))

(assert (= (and b!84710 res!43684) b!84711))

(declare-fun m!88557 () Bool)

(assert (=> d!21787 m!88557))

(declare-fun m!88559 () Bool)

(assert (=> d!21787 m!88559))

(declare-fun m!88561 () Bool)

(assert (=> b!84708 m!88561))

(declare-fun m!88563 () Bool)

(assert (=> b!84711 m!88563))

(declare-fun m!88565 () Bool)

(assert (=> bm!7980 m!88565))

(declare-fun m!88567 () Bool)

(assert (=> b!84710 m!88567))

(assert (=> d!21101 d!21787))

(declare-fun d!21789 () Bool)

(declare-fun res!43686 () Bool)

(declare-fun e!55253 () Bool)

(assert (=> d!21789 (=> res!43686 e!55253)))

(assert (=> d!21789 (= res!43686 (and ((_ is Cons!1543) (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))) (= (_1!1120 (h!2133 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))))

(assert (=> d!21789 (= (containsKey!142 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) e!55253)))

(declare-fun b!84716 () Bool)

(declare-fun e!55254 () Bool)

(assert (=> b!84716 (= e!55253 e!55254)))

(declare-fun res!43687 () Bool)

(assert (=> b!84716 (=> (not res!43687) (not e!55254))))

(assert (=> b!84716 (= res!43687 (and (or (not ((_ is Cons!1543) (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))))) (bvsle (_1!1120 (h!2133 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))) ((_ is Cons!1543) (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))) (bvslt (_1!1120 (h!2133 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))))

(declare-fun b!84717 () Bool)

(assert (=> b!84717 (= e!55254 (containsKey!142 (t!5251 (toList!756 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (= (and d!21789 (not res!43686)) b!84716))

(assert (= (and b!84716 res!43687) b!84717))

(assert (=> b!84717 m!85591))

(declare-fun m!88569 () Bool)

(assert (=> b!84717 m!88569))

(assert (=> d!20915 d!21789))

(declare-fun lt!39855 () Bool)

(declare-fun d!21791 () Bool)

(assert (=> d!21791 (= lt!39855 (select (content!87 (toList!756 lt!39267)) (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun e!55255 () Bool)

(assert (=> d!21791 (= lt!39855 e!55255)))

(declare-fun res!43688 () Bool)

(assert (=> d!21791 (=> (not res!43688) (not e!55255))))

(assert (=> d!21791 (= res!43688 ((_ is Cons!1543) (toList!756 lt!39267)))))

(assert (=> d!21791 (= (contains!760 (toList!756 lt!39267) (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!39855)))

(declare-fun b!84718 () Bool)

(declare-fun e!55256 () Bool)

(assert (=> b!84718 (= e!55255 e!55256)))

(declare-fun res!43689 () Bool)

(assert (=> b!84718 (=> res!43689 e!55256)))

(assert (=> b!84718 (= res!43689 (= (h!2133 (toList!756 lt!39267)) (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!84719 () Bool)

(assert (=> b!84719 (= e!55256 (contains!760 (t!5251 (toList!756 lt!39267)) (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(assert (= (and d!21791 res!43688) b!84718))

(assert (= (and b!84718 (not res!43689)) b!84719))

(declare-fun m!88571 () Bool)

(assert (=> d!21791 m!88571))

(declare-fun m!88573 () Bool)

(assert (=> d!21791 m!88573))

(declare-fun m!88575 () Bool)

(assert (=> b!84719 m!88575))

(assert (=> b!83495 d!21791))

(declare-fun d!21793 () Bool)

(declare-fun res!43691 () Bool)

(declare-fun e!55259 () Bool)

(assert (=> d!21793 (=> res!43691 e!55259)))

(assert (=> d!21793 (= res!43691 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2155 (_keys!3985 (v!2632 (underlying!290 thiss!992))))))))

(assert (=> d!21793 (= (arrayNoDuplicates!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13320 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13231 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545) Nil!1545)) (ite c!13231 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545) Nil!1545))) e!55259)))

(declare-fun b!84720 () Bool)

(declare-fun e!55260 () Bool)

(assert (=> b!84720 (= e!55259 e!55260)))

(declare-fun res!43690 () Bool)

(assert (=> b!84720 (=> (not res!43690) (not e!55260))))

(declare-fun e!55258 () Bool)

(assert (=> b!84720 (= res!43690 (not e!55258))))

(declare-fun res!43692 () Bool)

(assert (=> b!84720 (=> (not res!43692) (not e!55258))))

(assert (=> b!84720 (= res!43692 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!84721 () Bool)

(declare-fun e!55257 () Bool)

(declare-fun call!7985 () Bool)

(assert (=> b!84721 (= e!55257 call!7985)))

(declare-fun bm!7982 () Bool)

(declare-fun c!13697 () Bool)

(assert (=> bm!7982 (= call!7985 (arrayNoDuplicates!0 (_keys!3985 (v!2632 (underlying!290 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13697 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!13320 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13231 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545) Nil!1545)) (ite c!13231 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545) Nil!1545))) (ite c!13320 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13231 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545) Nil!1545)) (ite c!13231 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545) Nil!1545)))))))

(declare-fun b!84722 () Bool)

(assert (=> b!84722 (= e!55260 e!55257)))

(assert (=> b!84722 (= c!13697 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!84723 () Bool)

(assert (=> b!84723 (= e!55258 (contains!759 (ite c!13320 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13231 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545) Nil!1545)) (ite c!13231 (Cons!1544 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) Nil!1545) Nil!1545)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!84724 () Bool)

(assert (=> b!84724 (= e!55257 call!7985)))

(assert (= (and d!21793 (not res!43691)) b!84720))

(assert (= (and b!84720 res!43692) b!84723))

(assert (= (and b!84720 res!43690) b!84722))

(assert (= (and b!84722 c!13697) b!84721))

(assert (= (and b!84722 (not c!13697)) b!84724))

(assert (= (or b!84721 b!84724) bm!7982))

(declare-fun m!88577 () Bool)

(assert (=> b!84720 m!88577))

(assert (=> b!84720 m!88577))

(declare-fun m!88579 () Bool)

(assert (=> b!84720 m!88579))

(assert (=> bm!7982 m!88577))

(declare-fun m!88581 () Bool)

(assert (=> bm!7982 m!88581))

(assert (=> b!84722 m!88577))

(assert (=> b!84722 m!88577))

(assert (=> b!84722 m!88579))

(assert (=> b!84723 m!88577))

(assert (=> b!84723 m!88577))

(declare-fun m!88583 () Bool)

(assert (=> b!84723 m!88583))

(assert (=> bm!7840 d!21793))

(declare-fun d!21795 () Bool)

(declare-fun lt!39856 () Bool)

(assert (=> d!21795 (= lt!39856 (select (content!87 (toList!756 lt!39057)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun e!55261 () Bool)

(assert (=> d!21795 (= lt!39856 e!55261)))

(declare-fun res!43693 () Bool)

(assert (=> d!21795 (=> (not res!43693) (not e!55261))))

(assert (=> d!21795 (= res!43693 ((_ is Cons!1543) (toList!756 lt!39057)))))

(assert (=> d!21795 (= (contains!760 (toList!756 lt!39057) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!39856)))

(declare-fun b!84725 () Bool)

(declare-fun e!55262 () Bool)

(assert (=> b!84725 (= e!55261 e!55262)))

(declare-fun res!43694 () Bool)

(assert (=> b!84725 (=> res!43694 e!55262)))

(assert (=> b!84725 (= res!43694 (= (h!2133 (toList!756 lt!39057)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!84726 () Bool)

(assert (=> b!84726 (= e!55262 (contains!760 (t!5251 (toList!756 lt!39057)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(assert (= (and d!21795 res!43693) b!84725))

(assert (= (and b!84725 (not res!43694)) b!84726))

(declare-fun m!88585 () Bool)

(assert (=> d!21795 m!88585))

(declare-fun m!88587 () Bool)

(assert (=> d!21795 m!88587))

(declare-fun m!88589 () Bool)

(assert (=> b!84726 m!88589))

(assert (=> b!83216 d!21795))

(assert (=> b!83671 d!21731))

(declare-fun b!84728 () Bool)

(declare-fun e!55263 () Option!144)

(declare-fun e!55264 () Option!144)

(assert (=> b!84728 (= e!55263 e!55264)))

(declare-fun c!13699 () Bool)

(assert (=> b!84728 (= c!13699 (and ((_ is Cons!1543) (toList!756 lt!39341)) (not (= (_1!1120 (h!2133 (toList!756 lt!39341))) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!84727 () Bool)

(assert (=> b!84727 (= e!55263 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39341)))))))

(declare-fun b!84730 () Bool)

(assert (=> b!84730 (= e!55264 None!142)))

(declare-fun d!21797 () Bool)

(declare-fun c!13698 () Bool)

(assert (=> d!21797 (= c!13698 (and ((_ is Cons!1543) (toList!756 lt!39341)) (= (_1!1120 (h!2133 (toList!756 lt!39341))) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21797 (= (getValueByKey!138 (toList!756 lt!39341) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) e!55263)))

(declare-fun b!84729 () Bool)

(assert (=> b!84729 (= e!55264 (getValueByKey!138 (t!5251 (toList!756 lt!39341)) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21797 c!13698) b!84727))

(assert (= (and d!21797 (not c!13698)) b!84728))

(assert (= (and b!84728 c!13699) b!84729))

(assert (= (and b!84728 (not c!13699)) b!84730))

(declare-fun m!88591 () Bool)

(assert (=> b!84729 m!88591))

(assert (=> b!83586 d!21797))

(assert (=> b!83625 d!20865))

(declare-fun d!21799 () Bool)

(declare-fun lt!39857 () Bool)

(assert (=> d!21799 (= lt!39857 (select (content!87 lt!39205) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(declare-fun e!55265 () Bool)

(assert (=> d!21799 (= lt!39857 e!55265)))

(declare-fun res!43695 () Bool)

(assert (=> d!21799 (=> (not res!43695) (not e!55265))))

(assert (=> d!21799 (= res!43695 ((_ is Cons!1543) lt!39205))))

(assert (=> d!21799 (= (contains!760 lt!39205 (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))) lt!39857)))

(declare-fun b!84731 () Bool)

(declare-fun e!55266 () Bool)

(assert (=> b!84731 (= e!55265 e!55266)))

(declare-fun res!43696 () Bool)

(assert (=> b!84731 (=> res!43696 e!55266)))

(assert (=> b!84731 (= res!43696 (= (h!2133 lt!39205) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(declare-fun b!84732 () Bool)

(assert (=> b!84732 (= e!55266 (contains!760 (t!5251 lt!39205) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(assert (= (and d!21799 res!43695) b!84731))

(assert (= (and b!84731 (not res!43696)) b!84732))

(declare-fun m!88593 () Bool)

(assert (=> d!21799 m!88593))

(declare-fun m!88595 () Bool)

(assert (=> d!21799 m!88595))

(declare-fun m!88597 () Bool)

(assert (=> b!84732 m!88597))

(assert (=> b!83361 d!21799))

(declare-fun b!84734 () Bool)

(declare-fun e!55267 () Option!144)

(declare-fun e!55268 () Option!144)

(assert (=> b!84734 (= e!55267 e!55268)))

(declare-fun c!13701 () Bool)

(assert (=> b!84734 (= c!13701 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38757))) (not (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!38757)))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))))

(declare-fun b!84733 () Bool)

(assert (=> b!84733 (= e!55267 (Some!143 (_2!1120 (h!2133 (t!5251 (toList!756 lt!38757))))))))

(declare-fun b!84736 () Bool)

(assert (=> b!84736 (= e!55268 None!142)))

(declare-fun c!13700 () Bool)

(declare-fun d!21801 () Bool)

(assert (=> d!21801 (= c!13700 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38757))) (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!38757)))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))))

(assert (=> d!21801 (= (getValueByKey!138 (t!5251 (toList!756 lt!38757)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) e!55267)))

(declare-fun b!84735 () Bool)

(assert (=> b!84735 (= e!55268 (getValueByKey!138 (t!5251 (t!5251 (toList!756 lt!38757))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (= (and d!21801 c!13700) b!84733))

(assert (= (and d!21801 (not c!13700)) b!84734))

(assert (= (and b!84734 c!13701) b!84735))

(assert (= (and b!84734 (not c!13701)) b!84736))

(assert (=> b!84735 m!85591))

(declare-fun m!88599 () Bool)

(assert (=> b!84735 m!88599))

(assert (=> b!83409 d!21801))

(declare-fun d!21803 () Bool)

(assert (=> d!21803 (= (apply!81 lt!39367 lt!39373) (get!1209 (getValueByKey!138 (toList!756 lt!39367) lt!39373)))))

(declare-fun bs!3573 () Bool)

(assert (= bs!3573 d!21803))

(declare-fun m!88601 () Bool)

(assert (=> bs!3573 m!88601))

(assert (=> bs!3573 m!88601))

(declare-fun m!88603 () Bool)

(assert (=> bs!3573 m!88603))

(assert (=> b!83608 d!21803))

(declare-fun d!21805 () Bool)

(assert (=> d!21805 (= (apply!81 (+!114 lt!39367 (tuple2!2221 lt!39359 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))) lt!39373) (apply!81 lt!39367 lt!39373))))

(declare-fun lt!39858 () Unit!2445)

(assert (=> d!21805 (= lt!39858 (choose!497 lt!39367 lt!39359 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)) lt!39373))))

(declare-fun e!55269 () Bool)

(assert (=> d!21805 e!55269))

(declare-fun res!43697 () Bool)

(assert (=> d!21805 (=> (not res!43697) (not e!55269))))

(assert (=> d!21805 (= res!43697 (contains!757 lt!39367 lt!39373))))

(assert (=> d!21805 (= (addApplyDifferent!57 lt!39367 lt!39359 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)) lt!39373) lt!39858)))

(declare-fun b!84737 () Bool)

(assert (=> b!84737 (= e!55269 (not (= lt!39373 lt!39359)))))

(assert (= (and d!21805 res!43697) b!84737))

(declare-fun m!88605 () Bool)

(assert (=> d!21805 m!88605))

(assert (=> d!21805 m!86681))

(assert (=> d!21805 m!86683))

(assert (=> d!21805 m!86681))

(declare-fun m!88607 () Bool)

(assert (=> d!21805 m!88607))

(assert (=> d!21805 m!86699))

(assert (=> b!83608 d!21805))

(declare-fun d!21807 () Bool)

(assert (=> d!21807 (= (apply!81 (+!114 lt!39367 (tuple2!2221 lt!39359 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))) lt!39373) (get!1209 (getValueByKey!138 (toList!756 (+!114 lt!39367 (tuple2!2221 lt!39359 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))) lt!39373)))))

(declare-fun bs!3574 () Bool)

(assert (= bs!3574 d!21807))

(declare-fun m!88609 () Bool)

(assert (=> bs!3574 m!88609))

(assert (=> bs!3574 m!88609))

(declare-fun m!88611 () Bool)

(assert (=> bs!3574 m!88611))

(assert (=> b!83608 d!21807))

(declare-fun d!21809 () Bool)

(assert (=> d!21809 (= (apply!81 (+!114 lt!39356 (tuple2!2221 lt!39370 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))) lt!39355) (get!1209 (getValueByKey!138 (toList!756 (+!114 lt!39356 (tuple2!2221 lt!39370 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))) lt!39355)))))

(declare-fun bs!3575 () Bool)

(assert (= bs!3575 d!21809))

(declare-fun m!88613 () Bool)

(assert (=> bs!3575 m!88613))

(assert (=> bs!3575 m!88613))

(declare-fun m!88615 () Bool)

(assert (=> bs!3575 m!88615))

(assert (=> b!83608 d!21809))

(declare-fun d!21811 () Bool)

(assert (=> d!21811 (= (apply!81 lt!39360 lt!39353) (get!1209 (getValueByKey!138 (toList!756 lt!39360) lt!39353)))))

(declare-fun bs!3576 () Bool)

(assert (= bs!3576 d!21811))

(declare-fun m!88617 () Bool)

(assert (=> bs!3576 m!88617))

(assert (=> bs!3576 m!88617))

(declare-fun m!88619 () Bool)

(assert (=> bs!3576 m!88619))

(assert (=> b!83608 d!21811))

(declare-fun d!21813 () Bool)

(declare-fun e!55270 () Bool)

(assert (=> d!21813 e!55270))

(declare-fun res!43698 () Bool)

(assert (=> d!21813 (=> (not res!43698) (not e!55270))))

(declare-fun lt!39862 () ListLongMap!1481)

(assert (=> d!21813 (= res!43698 (contains!757 lt!39862 (_1!1120 (tuple2!2221 lt!39370 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))))))

(declare-fun lt!39859 () List!1547)

(assert (=> d!21813 (= lt!39862 (ListLongMap!1482 lt!39859))))

(declare-fun lt!39860 () Unit!2445)

(declare-fun lt!39861 () Unit!2445)

(assert (=> d!21813 (= lt!39860 lt!39861)))

(assert (=> d!21813 (= (getValueByKey!138 lt!39859 (_1!1120 (tuple2!2221 lt!39370 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))) (Some!143 (_2!1120 (tuple2!2221 lt!39370 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))))))

(assert (=> d!21813 (= lt!39861 (lemmaContainsTupThenGetReturnValue!57 lt!39859 (_1!1120 (tuple2!2221 lt!39370 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))) (_2!1120 (tuple2!2221 lt!39370 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))))))

(assert (=> d!21813 (= lt!39859 (insertStrictlySorted!59 (toList!756 lt!39356) (_1!1120 (tuple2!2221 lt!39370 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))) (_2!1120 (tuple2!2221 lt!39370 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))))))

(assert (=> d!21813 (= (+!114 lt!39356 (tuple2!2221 lt!39370 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))) lt!39862)))

(declare-fun b!84738 () Bool)

(declare-fun res!43699 () Bool)

(assert (=> b!84738 (=> (not res!43699) (not e!55270))))

(assert (=> b!84738 (= res!43699 (= (getValueByKey!138 (toList!756 lt!39862) (_1!1120 (tuple2!2221 lt!39370 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))) (Some!143 (_2!1120 (tuple2!2221 lt!39370 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))))))))

(declare-fun b!84739 () Bool)

(assert (=> b!84739 (= e!55270 (contains!760 (toList!756 lt!39862) (tuple2!2221 lt!39370 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))))))

(assert (= (and d!21813 res!43698) b!84738))

(assert (= (and b!84738 res!43699) b!84739))

(declare-fun m!88621 () Bool)

(assert (=> d!21813 m!88621))

(declare-fun m!88623 () Bool)

(assert (=> d!21813 m!88623))

(declare-fun m!88625 () Bool)

(assert (=> d!21813 m!88625))

(declare-fun m!88627 () Bool)

(assert (=> d!21813 m!88627))

(declare-fun m!88629 () Bool)

(assert (=> b!84738 m!88629))

(declare-fun m!88631 () Bool)

(assert (=> b!84739 m!88631))

(assert (=> b!83608 d!21813))

(declare-fun d!21815 () Bool)

(declare-fun e!55271 () Bool)

(assert (=> d!21815 e!55271))

(declare-fun res!43700 () Bool)

(assert (=> d!21815 (=> (not res!43700) (not e!55271))))

(declare-fun lt!39866 () ListLongMap!1481)

(assert (=> d!21815 (= res!43700 (contains!757 lt!39866 (_1!1120 (tuple2!2221 lt!39369 (zeroValue!2211 newMap!16)))))))

(declare-fun lt!39863 () List!1547)

(assert (=> d!21815 (= lt!39866 (ListLongMap!1482 lt!39863))))

(declare-fun lt!39864 () Unit!2445)

(declare-fun lt!39865 () Unit!2445)

(assert (=> d!21815 (= lt!39864 lt!39865)))

(assert (=> d!21815 (= (getValueByKey!138 lt!39863 (_1!1120 (tuple2!2221 lt!39369 (zeroValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 lt!39369 (zeroValue!2211 newMap!16)))))))

(assert (=> d!21815 (= lt!39865 (lemmaContainsTupThenGetReturnValue!57 lt!39863 (_1!1120 (tuple2!2221 lt!39369 (zeroValue!2211 newMap!16))) (_2!1120 (tuple2!2221 lt!39369 (zeroValue!2211 newMap!16)))))))

(assert (=> d!21815 (= lt!39863 (insertStrictlySorted!59 (toList!756 lt!39360) (_1!1120 (tuple2!2221 lt!39369 (zeroValue!2211 newMap!16))) (_2!1120 (tuple2!2221 lt!39369 (zeroValue!2211 newMap!16)))))))

(assert (=> d!21815 (= (+!114 lt!39360 (tuple2!2221 lt!39369 (zeroValue!2211 newMap!16))) lt!39866)))

(declare-fun b!84740 () Bool)

(declare-fun res!43701 () Bool)

(assert (=> b!84740 (=> (not res!43701) (not e!55271))))

(assert (=> b!84740 (= res!43701 (= (getValueByKey!138 (toList!756 lt!39866) (_1!1120 (tuple2!2221 lt!39369 (zeroValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 lt!39369 (zeroValue!2211 newMap!16))))))))

(declare-fun b!84741 () Bool)

(assert (=> b!84741 (= e!55271 (contains!760 (toList!756 lt!39866) (tuple2!2221 lt!39369 (zeroValue!2211 newMap!16))))))

(assert (= (and d!21815 res!43700) b!84740))

(assert (= (and b!84740 res!43701) b!84741))

(declare-fun m!88633 () Bool)

(assert (=> d!21815 m!88633))

(declare-fun m!88635 () Bool)

(assert (=> d!21815 m!88635))

(declare-fun m!88637 () Bool)

(assert (=> d!21815 m!88637))

(declare-fun m!88639 () Bool)

(assert (=> d!21815 m!88639))

(declare-fun m!88641 () Bool)

(assert (=> b!84740 m!88641))

(declare-fun m!88643 () Bool)

(assert (=> b!84741 m!88643))

(assert (=> b!83608 d!21815))

(declare-fun b!84742 () Bool)

(declare-fun e!55272 () ListLongMap!1481)

(declare-fun call!7986 () ListLongMap!1481)

(assert (=> b!84742 (= e!55272 call!7986)))

(declare-fun b!84743 () Bool)

(assert (=> b!84743 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(assert (=> b!84743 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2156 (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887))))))

(declare-fun e!55275 () Bool)

(declare-fun lt!39870 () ListLongMap!1481)

(assert (=> b!84743 (= e!55275 (= (apply!81 lt!39870 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) (get!1206 (select (arr!1913 (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887)) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!84744 () Bool)

(declare-fun e!55277 () ListLongMap!1481)

(assert (=> b!84744 (= e!55277 (ListLongMap!1482 Nil!1544))))

(declare-fun b!84745 () Bool)

(declare-fun e!55276 () Bool)

(assert (=> b!84745 (= e!55276 (= lt!39870 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887) (mask!6335 newMap!16) (ite c!13216 (ite c!13218 (extraKeys!2160 newMap!16) lt!38889) (extraKeys!2160 newMap!16)) (zeroValue!2211 newMap!16) (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2317 newMap!16))))))

(declare-fun b!84747 () Bool)

(declare-fun e!55274 () Bool)

(assert (=> b!84747 (= e!55274 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84747 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!84748 () Bool)

(declare-fun e!55273 () Bool)

(assert (=> b!84748 (= e!55273 e!55275)))

(assert (=> b!84748 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun res!43705 () Bool)

(assert (=> b!84748 (= res!43705 (contains!757 lt!39870 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84748 (=> (not res!43705) (not e!55275))))

(declare-fun b!84749 () Bool)

(assert (=> b!84749 (= e!55273 e!55276)))

(declare-fun c!13704 () Bool)

(assert (=> b!84749 (= c!13704 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!84750 () Bool)

(assert (=> b!84750 (= e!55277 e!55272)))

(declare-fun c!13703 () Bool)

(assert (=> b!84750 (= c!13703 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84746 () Bool)

(declare-fun res!43704 () Bool)

(declare-fun e!55278 () Bool)

(assert (=> b!84746 (=> (not res!43704) (not e!55278))))

(assert (=> b!84746 (= res!43704 (not (contains!757 lt!39870 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!21817 () Bool)

(assert (=> d!21817 e!55278))

(declare-fun res!43703 () Bool)

(assert (=> d!21817 (=> (not res!43703) (not e!55278))))

(assert (=> d!21817 (= res!43703 (not (contains!757 lt!39870 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21817 (= lt!39870 e!55277)))

(declare-fun c!13702 () Bool)

(assert (=> d!21817 (= c!13702 (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!21817 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!21817 (= (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887) (mask!6335 newMap!16) (ite c!13216 (ite c!13218 (extraKeys!2160 newMap!16) lt!38889) (extraKeys!2160 newMap!16)) (zeroValue!2211 newMap!16) (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) lt!39870)))

(declare-fun b!84751 () Bool)

(declare-fun lt!39873 () Unit!2445)

(declare-fun lt!39872 () Unit!2445)

(assert (=> b!84751 (= lt!39873 lt!39872)))

(declare-fun lt!39867 () ListLongMap!1481)

(declare-fun lt!39868 () (_ BitVec 64))

(declare-fun lt!39869 () V!3019)

(declare-fun lt!39871 () (_ BitVec 64))

(assert (=> b!84751 (not (contains!757 (+!114 lt!39867 (tuple2!2221 lt!39871 lt!39869)) lt!39868))))

(assert (=> b!84751 (= lt!39872 (addStillNotContains!32 lt!39867 lt!39871 lt!39869 lt!39868))))

(assert (=> b!84751 (= lt!39868 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!84751 (= lt!39869 (get!1206 (select (arr!1913 (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887)) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!84751 (= lt!39871 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!84751 (= lt!39867 call!7986)))

(assert (=> b!84751 (= e!55272 (+!114 call!7986 (tuple2!2221 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000) (get!1206 (select (arr!1913 (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887)) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!84752 () Bool)

(assert (=> b!84752 (= e!55278 e!55273)))

(declare-fun c!13705 () Bool)

(assert (=> b!84752 (= c!13705 e!55274)))

(declare-fun res!43702 () Bool)

(assert (=> b!84752 (=> (not res!43702) (not e!55274))))

(assert (=> b!84752 (= res!43702 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun bm!7983 () Bool)

(assert (=> bm!7983 (= call!7986 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887) (mask!6335 newMap!16) (ite c!13216 (ite c!13218 (extraKeys!2160 newMap!16) lt!38889) (extraKeys!2160 newMap!16)) (zeroValue!2211 newMap!16) (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2317 newMap!16)))))

(declare-fun b!84753 () Bool)

(assert (=> b!84753 (= e!55276 (isEmpty!337 lt!39870))))

(assert (= (and d!21817 c!13702) b!84744))

(assert (= (and d!21817 (not c!13702)) b!84750))

(assert (= (and b!84750 c!13703) b!84751))

(assert (= (and b!84750 (not c!13703)) b!84742))

(assert (= (or b!84751 b!84742) bm!7983))

(assert (= (and d!21817 res!43703) b!84746))

(assert (= (and b!84746 res!43704) b!84752))

(assert (= (and b!84752 res!43702) b!84747))

(assert (= (and b!84752 c!13705) b!84748))

(assert (= (and b!84752 (not c!13705)) b!84749))

(assert (= (and b!84748 res!43705) b!84743))

(assert (= (and b!84749 c!13704) b!84745))

(assert (= (and b!84749 (not c!13704)) b!84753))

(declare-fun b_lambda!3749 () Bool)

(assert (=> (not b_lambda!3749) (not b!84743)))

(assert (=> b!84743 t!5259))

(declare-fun b_and!5121 () Bool)

(assert (= b_and!5117 (and (=> t!5259 result!2903) b_and!5121)))

(assert (=> b!84743 t!5261))

(declare-fun b_and!5123 () Bool)

(assert (= b_and!5119 (and (=> t!5261 result!2905) b_and!5123)))

(declare-fun b_lambda!3751 () Bool)

(assert (=> (not b_lambda!3751) (not b!84751)))

(assert (=> b!84751 t!5259))

(declare-fun b_and!5125 () Bool)

(assert (= b_and!5121 (and (=> t!5259 result!2903) b_and!5125)))

(assert (=> b!84751 t!5261))

(declare-fun b_and!5127 () Bool)

(assert (= b_and!5123 (and (=> t!5261 result!2905) b_and!5127)))

(declare-fun m!88645 () Bool)

(assert (=> b!84745 m!88645))

(assert (=> bm!7983 m!88645))

(assert (=> b!84743 m!86703))

(assert (=> b!84743 m!86049))

(assert (=> b!84743 m!86703))

(assert (=> b!84743 m!86089))

(assert (=> b!84743 m!86707))

(assert (=> b!84743 m!86049))

(declare-fun m!88647 () Bool)

(assert (=> b!84743 m!88647))

(assert (=> b!84743 m!86089))

(assert (=> b!84747 m!86049))

(assert (=> b!84747 m!86049))

(assert (=> b!84747 m!86051))

(assert (=> b!84750 m!86049))

(assert (=> b!84750 m!86049))

(assert (=> b!84750 m!86051))

(assert (=> b!84751 m!86703))

(declare-fun m!88649 () Bool)

(assert (=> b!84751 m!88649))

(assert (=> b!84751 m!86049))

(declare-fun m!88651 () Bool)

(assert (=> b!84751 m!88651))

(assert (=> b!84751 m!86703))

(assert (=> b!84751 m!86089))

(assert (=> b!84751 m!86707))

(declare-fun m!88653 () Bool)

(assert (=> b!84751 m!88653))

(assert (=> b!84751 m!86089))

(assert (=> b!84751 m!88651))

(declare-fun m!88655 () Bool)

(assert (=> b!84751 m!88655))

(declare-fun m!88657 () Bool)

(assert (=> d!21817 m!88657))

(assert (=> d!21817 m!86023))

(declare-fun m!88659 () Bool)

(assert (=> b!84753 m!88659))

(assert (=> b!84748 m!86049))

(assert (=> b!84748 m!86049))

(declare-fun m!88661 () Bool)

(assert (=> b!84748 m!88661))

(declare-fun m!88663 () Bool)

(assert (=> b!84746 m!88663))

(assert (=> b!83608 d!21817))

(declare-fun d!21819 () Bool)

(declare-fun e!55279 () Bool)

(assert (=> d!21819 e!55279))

(declare-fun res!43706 () Bool)

(assert (=> d!21819 (=> (not res!43706) (not e!55279))))

(declare-fun lt!39877 () ListLongMap!1481)

(assert (=> d!21819 (= res!43706 (contains!757 lt!39877 (_1!1120 (tuple2!2221 lt!39357 (zeroValue!2211 newMap!16)))))))

(declare-fun lt!39874 () List!1547)

(assert (=> d!21819 (= lt!39877 (ListLongMap!1482 lt!39874))))

(declare-fun lt!39875 () Unit!2445)

(declare-fun lt!39876 () Unit!2445)

(assert (=> d!21819 (= lt!39875 lt!39876)))

(assert (=> d!21819 (= (getValueByKey!138 lt!39874 (_1!1120 (tuple2!2221 lt!39357 (zeroValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 lt!39357 (zeroValue!2211 newMap!16)))))))

(assert (=> d!21819 (= lt!39876 (lemmaContainsTupThenGetReturnValue!57 lt!39874 (_1!1120 (tuple2!2221 lt!39357 (zeroValue!2211 newMap!16))) (_2!1120 (tuple2!2221 lt!39357 (zeroValue!2211 newMap!16)))))))

(assert (=> d!21819 (= lt!39874 (insertStrictlySorted!59 (toList!756 lt!39364) (_1!1120 (tuple2!2221 lt!39357 (zeroValue!2211 newMap!16))) (_2!1120 (tuple2!2221 lt!39357 (zeroValue!2211 newMap!16)))))))

(assert (=> d!21819 (= (+!114 lt!39364 (tuple2!2221 lt!39357 (zeroValue!2211 newMap!16))) lt!39877)))

(declare-fun b!84754 () Bool)

(declare-fun res!43707 () Bool)

(assert (=> b!84754 (=> (not res!43707) (not e!55279))))

(assert (=> b!84754 (= res!43707 (= (getValueByKey!138 (toList!756 lt!39877) (_1!1120 (tuple2!2221 lt!39357 (zeroValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 lt!39357 (zeroValue!2211 newMap!16))))))))

(declare-fun b!84755 () Bool)

(assert (=> b!84755 (= e!55279 (contains!760 (toList!756 lt!39877) (tuple2!2221 lt!39357 (zeroValue!2211 newMap!16))))))

(assert (= (and d!21819 res!43706) b!84754))

(assert (= (and b!84754 res!43707) b!84755))

(declare-fun m!88665 () Bool)

(assert (=> d!21819 m!88665))

(declare-fun m!88667 () Bool)

(assert (=> d!21819 m!88667))

(declare-fun m!88669 () Bool)

(assert (=> d!21819 m!88669))

(declare-fun m!88671 () Bool)

(assert (=> d!21819 m!88671))

(declare-fun m!88673 () Bool)

(assert (=> b!84754 m!88673))

(declare-fun m!88675 () Bool)

(assert (=> b!84755 m!88675))

(assert (=> b!83608 d!21819))

(declare-fun d!21821 () Bool)

(assert (=> d!21821 (contains!757 (+!114 lt!39364 (tuple2!2221 lt!39357 (zeroValue!2211 newMap!16))) lt!39361)))

(declare-fun lt!39878 () Unit!2445)

(assert (=> d!21821 (= lt!39878 (choose!498 lt!39364 lt!39357 (zeroValue!2211 newMap!16) lt!39361))))

(assert (=> d!21821 (contains!757 lt!39364 lt!39361)))

(assert (=> d!21821 (= (addStillContains!57 lt!39364 lt!39357 (zeroValue!2211 newMap!16) lt!39361) lt!39878)))

(declare-fun bs!3577 () Bool)

(assert (= bs!3577 d!21821))

(assert (=> bs!3577 m!86675))

(assert (=> bs!3577 m!86675))

(assert (=> bs!3577 m!86687))

(declare-fun m!88677 () Bool)

(assert (=> bs!3577 m!88677))

(declare-fun m!88679 () Bool)

(assert (=> bs!3577 m!88679))

(assert (=> b!83608 d!21821))

(declare-fun d!21823 () Bool)

(assert (=> d!21823 (= (apply!81 (+!114 lt!39360 (tuple2!2221 lt!39369 (zeroValue!2211 newMap!16))) lt!39353) (apply!81 lt!39360 lt!39353))))

(declare-fun lt!39879 () Unit!2445)

(assert (=> d!21823 (= lt!39879 (choose!497 lt!39360 lt!39369 (zeroValue!2211 newMap!16) lt!39353))))

(declare-fun e!55280 () Bool)

(assert (=> d!21823 e!55280))

(declare-fun res!43708 () Bool)

(assert (=> d!21823 (=> (not res!43708) (not e!55280))))

(assert (=> d!21823 (= res!43708 (contains!757 lt!39360 lt!39353))))

(assert (=> d!21823 (= (addApplyDifferent!57 lt!39360 lt!39369 (zeroValue!2211 newMap!16) lt!39353) lt!39879)))

(declare-fun b!84756 () Bool)

(assert (=> b!84756 (= e!55280 (not (= lt!39353 lt!39369)))))

(assert (= (and d!21823 res!43708) b!84756))

(declare-fun m!88681 () Bool)

(assert (=> d!21823 m!88681))

(assert (=> d!21823 m!86677))

(assert (=> d!21823 m!86679))

(assert (=> d!21823 m!86677))

(declare-fun m!88683 () Bool)

(assert (=> d!21823 m!88683))

(assert (=> d!21823 m!86693))

(assert (=> b!83608 d!21823))

(declare-fun d!21825 () Bool)

(declare-fun e!55281 () Bool)

(assert (=> d!21825 e!55281))

(declare-fun res!43709 () Bool)

(assert (=> d!21825 (=> res!43709 e!55281)))

(declare-fun lt!39880 () Bool)

(assert (=> d!21825 (= res!43709 (not lt!39880))))

(declare-fun lt!39882 () Bool)

(assert (=> d!21825 (= lt!39880 lt!39882)))

(declare-fun lt!39883 () Unit!2445)

(declare-fun e!55282 () Unit!2445)

(assert (=> d!21825 (= lt!39883 e!55282)))

(declare-fun c!13706 () Bool)

(assert (=> d!21825 (= c!13706 lt!39882)))

(assert (=> d!21825 (= lt!39882 (containsKey!142 (toList!756 (+!114 lt!39364 (tuple2!2221 lt!39357 (zeroValue!2211 newMap!16)))) lt!39361))))

(assert (=> d!21825 (= (contains!757 (+!114 lt!39364 (tuple2!2221 lt!39357 (zeroValue!2211 newMap!16))) lt!39361) lt!39880)))

(declare-fun b!84757 () Bool)

(declare-fun lt!39881 () Unit!2445)

(assert (=> b!84757 (= e!55282 lt!39881)))

(assert (=> b!84757 (= lt!39881 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 (+!114 lt!39364 (tuple2!2221 lt!39357 (zeroValue!2211 newMap!16)))) lt!39361))))

(assert (=> b!84757 (isDefined!92 (getValueByKey!138 (toList!756 (+!114 lt!39364 (tuple2!2221 lt!39357 (zeroValue!2211 newMap!16)))) lt!39361))))

(declare-fun b!84758 () Bool)

(declare-fun Unit!2517 () Unit!2445)

(assert (=> b!84758 (= e!55282 Unit!2517)))

(declare-fun b!84759 () Bool)

(assert (=> b!84759 (= e!55281 (isDefined!92 (getValueByKey!138 (toList!756 (+!114 lt!39364 (tuple2!2221 lt!39357 (zeroValue!2211 newMap!16)))) lt!39361)))))

(assert (= (and d!21825 c!13706) b!84757))

(assert (= (and d!21825 (not c!13706)) b!84758))

(assert (= (and d!21825 (not res!43709)) b!84759))

(declare-fun m!88685 () Bool)

(assert (=> d!21825 m!88685))

(declare-fun m!88687 () Bool)

(assert (=> b!84757 m!88687))

(declare-fun m!88689 () Bool)

(assert (=> b!84757 m!88689))

(assert (=> b!84757 m!88689))

(declare-fun m!88691 () Bool)

(assert (=> b!84757 m!88691))

(assert (=> b!84759 m!88689))

(assert (=> b!84759 m!88689))

(assert (=> b!84759 m!88691))

(assert (=> b!83608 d!21825))

(declare-fun d!21827 () Bool)

(assert (=> d!21827 (= (apply!81 (+!114 lt!39360 (tuple2!2221 lt!39369 (zeroValue!2211 newMap!16))) lt!39353) (get!1209 (getValueByKey!138 (toList!756 (+!114 lt!39360 (tuple2!2221 lt!39369 (zeroValue!2211 newMap!16)))) lt!39353)))))

(declare-fun bs!3578 () Bool)

(assert (= bs!3578 d!21827))

(declare-fun m!88693 () Bool)

(assert (=> bs!3578 m!88693))

(assert (=> bs!3578 m!88693))

(declare-fun m!88695 () Bool)

(assert (=> bs!3578 m!88695))

(assert (=> b!83608 d!21827))

(declare-fun d!21829 () Bool)

(declare-fun e!55283 () Bool)

(assert (=> d!21829 e!55283))

(declare-fun res!43710 () Bool)

(assert (=> d!21829 (=> (not res!43710) (not e!55283))))

(declare-fun lt!39887 () ListLongMap!1481)

(assert (=> d!21829 (= res!43710 (contains!757 lt!39887 (_1!1120 (tuple2!2221 lt!39359 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))))))

(declare-fun lt!39884 () List!1547)

(assert (=> d!21829 (= lt!39887 (ListLongMap!1482 lt!39884))))

(declare-fun lt!39885 () Unit!2445)

(declare-fun lt!39886 () Unit!2445)

(assert (=> d!21829 (= lt!39885 lt!39886)))

(assert (=> d!21829 (= (getValueByKey!138 lt!39884 (_1!1120 (tuple2!2221 lt!39359 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))) (Some!143 (_2!1120 (tuple2!2221 lt!39359 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))))))

(assert (=> d!21829 (= lt!39886 (lemmaContainsTupThenGetReturnValue!57 lt!39884 (_1!1120 (tuple2!2221 lt!39359 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))) (_2!1120 (tuple2!2221 lt!39359 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))))))

(assert (=> d!21829 (= lt!39884 (insertStrictlySorted!59 (toList!756 lt!39367) (_1!1120 (tuple2!2221 lt!39359 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))) (_2!1120 (tuple2!2221 lt!39359 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))))))

(assert (=> d!21829 (= (+!114 lt!39367 (tuple2!2221 lt!39359 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))) lt!39887)))

(declare-fun b!84760 () Bool)

(declare-fun res!43711 () Bool)

(assert (=> b!84760 (=> (not res!43711) (not e!55283))))

(assert (=> b!84760 (= res!43711 (= (getValueByKey!138 (toList!756 lt!39887) (_1!1120 (tuple2!2221 lt!39359 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))) (Some!143 (_2!1120 (tuple2!2221 lt!39359 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))))))))

(declare-fun b!84761 () Bool)

(assert (=> b!84761 (= e!55283 (contains!760 (toList!756 lt!39887) (tuple2!2221 lt!39359 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))))))

(assert (= (and d!21829 res!43710) b!84760))

(assert (= (and b!84760 res!43711) b!84761))

(declare-fun m!88697 () Bool)

(assert (=> d!21829 m!88697))

(declare-fun m!88699 () Bool)

(assert (=> d!21829 m!88699))

(declare-fun m!88701 () Bool)

(assert (=> d!21829 m!88701))

(declare-fun m!88703 () Bool)

(assert (=> d!21829 m!88703))

(declare-fun m!88705 () Bool)

(assert (=> b!84760 m!88705))

(declare-fun m!88707 () Bool)

(assert (=> b!84761 m!88707))

(assert (=> b!83608 d!21829))

(declare-fun d!21831 () Bool)

(assert (=> d!21831 (= (apply!81 lt!39356 lt!39355) (get!1209 (getValueByKey!138 (toList!756 lt!39356) lt!39355)))))

(declare-fun bs!3579 () Bool)

(assert (= bs!3579 d!21831))

(declare-fun m!88709 () Bool)

(assert (=> bs!3579 m!88709))

(assert (=> bs!3579 m!88709))

(declare-fun m!88711 () Bool)

(assert (=> bs!3579 m!88711))

(assert (=> b!83608 d!21831))

(declare-fun d!21833 () Bool)

(assert (=> d!21833 (= (apply!81 (+!114 lt!39356 (tuple2!2221 lt!39370 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))) lt!39355) (apply!81 lt!39356 lt!39355))))

(declare-fun lt!39888 () Unit!2445)

(assert (=> d!21833 (= lt!39888 (choose!497 lt!39356 lt!39370 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)) lt!39355))))

(declare-fun e!55284 () Bool)

(assert (=> d!21833 e!55284))

(declare-fun res!43712 () Bool)

(assert (=> d!21833 (=> (not res!43712) (not e!55284))))

(assert (=> d!21833 (= res!43712 (contains!757 lt!39356 lt!39355))))

(assert (=> d!21833 (= (addApplyDifferent!57 lt!39356 lt!39370 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)) lt!39355) lt!39888)))

(declare-fun b!84762 () Bool)

(assert (=> b!84762 (= e!55284 (not (= lt!39355 lt!39370)))))

(assert (= (and d!21833 res!43712) b!84762))

(declare-fun m!88713 () Bool)

(assert (=> d!21833 m!88713))

(assert (=> d!21833 m!86691))

(assert (=> d!21833 m!86701))

(assert (=> d!21833 m!86691))

(declare-fun m!88715 () Bool)

(assert (=> d!21833 m!88715))

(assert (=> d!21833 m!86695))

(assert (=> b!83608 d!21833))

(declare-fun d!21835 () Bool)

(declare-fun e!55285 () Bool)

(assert (=> d!21835 e!55285))

(declare-fun res!43713 () Bool)

(assert (=> d!21835 (=> res!43713 e!55285)))

(declare-fun lt!39889 () Bool)

(assert (=> d!21835 (= res!43713 (not lt!39889))))

(declare-fun lt!39891 () Bool)

(assert (=> d!21835 (= lt!39889 lt!39891)))

(declare-fun lt!39892 () Unit!2445)

(declare-fun e!55286 () Unit!2445)

(assert (=> d!21835 (= lt!39892 e!55286)))

(declare-fun c!13707 () Bool)

(assert (=> d!21835 (= c!13707 lt!39891)))

(assert (=> d!21835 (= lt!39891 (containsKey!142 (toList!756 lt!39341) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21835 (= (contains!757 lt!39341 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39889)))

(declare-fun b!84763 () Bool)

(declare-fun lt!39890 () Unit!2445)

(assert (=> b!84763 (= e!55286 lt!39890)))

(assert (=> b!84763 (= lt!39890 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39341) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> b!84763 (isDefined!92 (getValueByKey!138 (toList!756 lt!39341) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84764 () Bool)

(declare-fun Unit!2518 () Unit!2445)

(assert (=> b!84764 (= e!55286 Unit!2518)))

(declare-fun b!84765 () Bool)

(assert (=> b!84765 (= e!55285 (isDefined!92 (getValueByKey!138 (toList!756 lt!39341) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!21835 c!13707) b!84763))

(assert (= (and d!21835 (not c!13707)) b!84764))

(assert (= (and d!21835 (not res!43713)) b!84765))

(declare-fun m!88717 () Bool)

(assert (=> d!21835 m!88717))

(declare-fun m!88719 () Bool)

(assert (=> b!84763 m!88719))

(assert (=> b!84763 m!86639))

(assert (=> b!84763 m!86639))

(declare-fun m!88721 () Bool)

(assert (=> b!84763 m!88721))

(assert (=> b!84765 m!86639))

(assert (=> b!84765 m!86639))

(assert (=> b!84765 m!88721))

(assert (=> d!21067 d!21835))

(declare-fun b!84767 () Bool)

(declare-fun e!55287 () Option!144)

(declare-fun e!55288 () Option!144)

(assert (=> b!84767 (= e!55287 e!55288)))

(declare-fun c!13709 () Bool)

(assert (=> b!84767 (= c!13709 (and ((_ is Cons!1543) lt!39338) (not (= (_1!1120 (h!2133 lt!39338)) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!84766 () Bool)

(assert (=> b!84766 (= e!55287 (Some!143 (_2!1120 (h!2133 lt!39338))))))

(declare-fun b!84769 () Bool)

(assert (=> b!84769 (= e!55288 None!142)))

(declare-fun d!21837 () Bool)

(declare-fun c!13708 () Bool)

(assert (=> d!21837 (= c!13708 (and ((_ is Cons!1543) lt!39338) (= (_1!1120 (h!2133 lt!39338)) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21837 (= (getValueByKey!138 lt!39338 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) e!55287)))

(declare-fun b!84768 () Bool)

(assert (=> b!84768 (= e!55288 (getValueByKey!138 (t!5251 lt!39338) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21837 c!13708) b!84766))

(assert (= (and d!21837 (not c!13708)) b!84767))

(assert (= (and b!84767 c!13709) b!84768))

(assert (= (and b!84767 (not c!13709)) b!84769))

(declare-fun m!88723 () Bool)

(assert (=> b!84768 m!88723))

(assert (=> d!21067 d!21837))

(declare-fun d!21839 () Bool)

(assert (=> d!21839 (= (getValueByKey!138 lt!39338 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun lt!39893 () Unit!2445)

(assert (=> d!21839 (= lt!39893 (choose!495 lt!39338 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun e!55289 () Bool)

(assert (=> d!21839 e!55289))

(declare-fun res!43714 () Bool)

(assert (=> d!21839 (=> (not res!43714) (not e!55289))))

(assert (=> d!21839 (= res!43714 (isStrictlySorted!292 lt!39338))))

(assert (=> d!21839 (= (lemmaContainsTupThenGetReturnValue!57 lt!39338 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39893)))

(declare-fun b!84770 () Bool)

(declare-fun res!43715 () Bool)

(assert (=> b!84770 (=> (not res!43715) (not e!55289))))

(assert (=> b!84770 (= res!43715 (containsKey!142 lt!39338 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84771 () Bool)

(assert (=> b!84771 (= e!55289 (contains!760 lt!39338 (tuple2!2221 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!21839 res!43714) b!84770))

(assert (= (and b!84770 res!43715) b!84771))

(assert (=> d!21839 m!86633))

(declare-fun m!88725 () Bool)

(assert (=> d!21839 m!88725))

(declare-fun m!88727 () Bool)

(assert (=> d!21839 m!88727))

(declare-fun m!88729 () Bool)

(assert (=> b!84770 m!88729))

(declare-fun m!88731 () Bool)

(assert (=> b!84771 m!88731))

(assert (=> d!21067 d!21839))

(declare-fun bm!7984 () Bool)

(declare-fun call!7988 () List!1547)

(declare-fun call!7987 () List!1547)

(assert (=> bm!7984 (= call!7988 call!7987)))

(declare-fun b!84772 () Bool)

(declare-fun e!55293 () List!1547)

(assert (=> b!84772 (= e!55293 call!7988)))

(declare-fun b!84773 () Bool)

(declare-fun e!55292 () List!1547)

(declare-fun call!7989 () List!1547)

(assert (=> b!84773 (= e!55292 call!7989)))

(declare-fun b!84774 () Bool)

(declare-fun e!55291 () List!1547)

(assert (=> b!84774 (= e!55291 (insertStrictlySorted!59 (t!5251 (toList!756 lt!38755)) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84775 () Bool)

(assert (=> b!84775 (= e!55292 call!7989)))

(declare-fun b!84776 () Bool)

(declare-fun res!43716 () Bool)

(declare-fun e!55294 () Bool)

(assert (=> b!84776 (=> (not res!43716) (not e!55294))))

(declare-fun lt!39894 () List!1547)

(assert (=> b!84776 (= res!43716 (containsKey!142 lt!39894 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun d!21841 () Bool)

(assert (=> d!21841 e!55294))

(declare-fun res!43717 () Bool)

(assert (=> d!21841 (=> (not res!43717) (not e!55294))))

(assert (=> d!21841 (= res!43717 (isStrictlySorted!292 lt!39894))))

(declare-fun e!55290 () List!1547)

(assert (=> d!21841 (= lt!39894 e!55290)))

(declare-fun c!13711 () Bool)

(assert (=> d!21841 (= c!13711 (and ((_ is Cons!1543) (toList!756 lt!38755)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38755))) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21841 (isStrictlySorted!292 (toList!756 lt!38755))))

(assert (=> d!21841 (= (insertStrictlySorted!59 (toList!756 lt!38755) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39894)))

(declare-fun b!84777 () Bool)

(assert (=> b!84777 (= e!55294 (contains!760 lt!39894 (tuple2!2221 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!84778 () Bool)

(assert (=> b!84778 (= e!55290 e!55293)))

(declare-fun c!13710 () Bool)

(assert (=> b!84778 (= c!13710 (and ((_ is Cons!1543) (toList!756 lt!38755)) (= (_1!1120 (h!2133 (toList!756 lt!38755))) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun c!13713 () Bool)

(declare-fun b!84779 () Bool)

(assert (=> b!84779 (= e!55291 (ite c!13710 (t!5251 (toList!756 lt!38755)) (ite c!13713 (Cons!1543 (h!2133 (toList!756 lt!38755)) (t!5251 (toList!756 lt!38755))) Nil!1544)))))

(declare-fun b!84780 () Bool)

(assert (=> b!84780 (= c!13713 (and ((_ is Cons!1543) (toList!756 lt!38755)) (bvsgt (_1!1120 (h!2133 (toList!756 lt!38755))) (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> b!84780 (= e!55293 e!55292)))

(declare-fun bm!7985 () Bool)

(assert (=> bm!7985 (= call!7987 ($colon$colon!70 e!55291 (ite c!13711 (h!2133 (toList!756 lt!38755)) (tuple2!2221 (_1!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun c!13712 () Bool)

(assert (=> bm!7985 (= c!13712 c!13711)))

(declare-fun b!84781 () Bool)

(assert (=> b!84781 (= e!55290 call!7987)))

(declare-fun bm!7986 () Bool)

(assert (=> bm!7986 (= call!7989 call!7988)))

(assert (= (and d!21841 c!13711) b!84781))

(assert (= (and d!21841 (not c!13711)) b!84778))

(assert (= (and b!84778 c!13710) b!84772))

(assert (= (and b!84778 (not c!13710)) b!84780))

(assert (= (and b!84780 c!13713) b!84775))

(assert (= (and b!84780 (not c!13713)) b!84773))

(assert (= (or b!84775 b!84773) bm!7986))

(assert (= (or b!84772 bm!7986) bm!7984))

(assert (= (or b!84781 bm!7984) bm!7985))

(assert (= (and bm!7985 c!13712) b!84774))

(assert (= (and bm!7985 (not c!13712)) b!84779))

(assert (= (and d!21841 res!43717) b!84776))

(assert (= (and b!84776 res!43716) b!84777))

(declare-fun m!88733 () Bool)

(assert (=> d!21841 m!88733))

(assert (=> d!21841 m!86211))

(declare-fun m!88735 () Bool)

(assert (=> b!84774 m!88735))

(declare-fun m!88737 () Bool)

(assert (=> b!84777 m!88737))

(declare-fun m!88739 () Bool)

(assert (=> bm!7985 m!88739))

(declare-fun m!88741 () Bool)

(assert (=> b!84776 m!88741))

(assert (=> d!21067 d!21841))

(declare-fun d!21843 () Bool)

(assert (=> d!21843 (= (size!2159 newMap!16) (bvadd (_size!424 newMap!16) (bvsdiv (bvadd (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!83703 d!21843))

(assert (=> b!83454 d!21605))

(assert (=> b!83454 d!21607))

(declare-fun b!84782 () Bool)

(declare-fun e!55297 () Bool)

(declare-fun call!7990 () Bool)

(assert (=> b!84782 (= e!55297 call!7990)))

(declare-fun bm!7987 () Bool)

(assert (=> bm!7987 (= call!7990 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3985 newMap!16) (mask!6335 newMap!16)))))

(declare-fun b!84783 () Bool)

(declare-fun e!55296 () Bool)

(assert (=> b!84783 (= e!55296 call!7990)))

(declare-fun b!84785 () Bool)

(assert (=> b!84785 (= e!55296 e!55297)))

(declare-fun lt!39895 () (_ BitVec 64))

(assert (=> b!84785 (= lt!39895 (select (arr!1912 (_keys!3985 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!39896 () Unit!2445)

(assert (=> b!84785 (= lt!39896 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3985 newMap!16) lt!39895 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!84785 (arrayContainsKey!0 (_keys!3985 newMap!16) lt!39895 #b00000000000000000000000000000000)))

(declare-fun lt!39897 () Unit!2445)

(assert (=> b!84785 (= lt!39897 lt!39896)))

(declare-fun res!43719 () Bool)

(assert (=> b!84785 (= res!43719 (= (seekEntryOrOpen!0 (select (arr!1912 (_keys!3985 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3985 newMap!16) (mask!6335 newMap!16)) (Found!252 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!84785 (=> (not res!43719) (not e!55297))))

(declare-fun b!84784 () Bool)

(declare-fun e!55295 () Bool)

(assert (=> b!84784 (= e!55295 e!55296)))

(declare-fun c!13714 () Bool)

(assert (=> b!84784 (= c!13714 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!21845 () Bool)

(declare-fun res!43718 () Bool)

(assert (=> d!21845 (=> res!43718 e!55295)))

(assert (=> d!21845 (= res!43718 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!21845 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3985 newMap!16) (mask!6335 newMap!16)) e!55295)))

(assert (= (and d!21845 (not res!43718)) b!84784))

(assert (= (and b!84784 c!13714) b!84785))

(assert (= (and b!84784 (not c!13714)) b!84783))

(assert (= (and b!84785 res!43719) b!84782))

(assert (= (or b!84782 b!84783) bm!7987))

(declare-fun m!88743 () Bool)

(assert (=> bm!7987 m!88743))

(assert (=> b!84785 m!87271))

(declare-fun m!88745 () Bool)

(assert (=> b!84785 m!88745))

(declare-fun m!88747 () Bool)

(assert (=> b!84785 m!88747))

(assert (=> b!84785 m!87271))

(declare-fun m!88749 () Bool)

(assert (=> b!84785 m!88749))

(assert (=> b!84784 m!87271))

(assert (=> b!84784 m!87271))

(assert (=> b!84784 m!87273))

(assert (=> bm!7871 d!21845))

(declare-fun d!21847 () Bool)

(declare-fun res!43720 () Bool)

(declare-fun e!55298 () Bool)

(assert (=> d!21847 (=> res!43720 e!55298)))

(assert (=> d!21847 (= res!43720 (and ((_ is Cons!1543) (toList!756 lt!38974)) (= (_1!1120 (h!2133 (toList!756 lt!38974))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21847 (= (containsKey!142 (toList!756 lt!38974) #b1000000000000000000000000000000000000000000000000000000000000000) e!55298)))

(declare-fun b!84786 () Bool)

(declare-fun e!55299 () Bool)

(assert (=> b!84786 (= e!55298 e!55299)))

(declare-fun res!43721 () Bool)

(assert (=> b!84786 (=> (not res!43721) (not e!55299))))

(assert (=> b!84786 (= res!43721 (and (or (not ((_ is Cons!1543) (toList!756 lt!38974))) (bvsle (_1!1120 (h!2133 (toList!756 lt!38974))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1543) (toList!756 lt!38974)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38974))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84787 () Bool)

(assert (=> b!84787 (= e!55299 (containsKey!142 (t!5251 (toList!756 lt!38974)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21847 (not res!43720)) b!84786))

(assert (= (and b!84786 res!43721) b!84787))

(declare-fun m!88751 () Bool)

(assert (=> b!84787 m!88751))

(assert (=> d!21053 d!21847))

(declare-fun d!21849 () Bool)

(declare-fun e!55300 () Bool)

(assert (=> d!21849 e!55300))

(declare-fun res!43722 () Bool)

(assert (=> d!21849 (=> (not res!43722) (not e!55300))))

(declare-fun lt!39901 () ListLongMap!1481)

(assert (=> d!21849 (= res!43722 (contains!757 lt!39901 (_1!1120 (ite (or c!13373 c!13375) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))))))))

(declare-fun lt!39898 () List!1547)

(assert (=> d!21849 (= lt!39901 (ListLongMap!1482 lt!39898))))

(declare-fun lt!39899 () Unit!2445)

(declare-fun lt!39900 () Unit!2445)

(assert (=> d!21849 (= lt!39899 lt!39900)))

(assert (=> d!21849 (= (getValueByKey!138 lt!39898 (_1!1120 (ite (or c!13373 c!13375) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))))) (Some!143 (_2!1120 (ite (or c!13373 c!13375) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))))))))

(assert (=> d!21849 (= lt!39900 (lemmaContainsTupThenGetReturnValue!57 lt!39898 (_1!1120 (ite (or c!13373 c!13375) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))) (_2!1120 (ite (or c!13373 c!13375) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))))))))

(assert (=> d!21849 (= lt!39898 (insertStrictlySorted!59 (toList!756 (ite c!13373 call!7862 (ite c!13375 call!7867 call!7861))) (_1!1120 (ite (or c!13373 c!13375) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))) (_2!1120 (ite (or c!13373 c!13375) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))))))))

(assert (=> d!21849 (= (+!114 (ite c!13373 call!7862 (ite c!13375 call!7867 call!7861)) (ite (or c!13373 c!13375) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))) lt!39901)))

(declare-fun b!84788 () Bool)

(declare-fun res!43723 () Bool)

(assert (=> b!84788 (=> (not res!43723) (not e!55300))))

(assert (=> b!84788 (= res!43723 (= (getValueByKey!138 (toList!756 lt!39901) (_1!1120 (ite (or c!13373 c!13375) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16)))))) (Some!143 (_2!1120 (ite (or c!13373 c!13375) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))))))))

(declare-fun b!84789 () Bool)

(assert (=> b!84789 (= e!55300 (contains!760 (toList!756 lt!39901) (ite (or c!13373 c!13375) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13216 (ite c!13218 (minValue!2211 newMap!16) lt!38748) (minValue!2211 newMap!16))))))))

(assert (= (and d!21849 res!43722) b!84788))

(assert (= (and b!84788 res!43723) b!84789))

(declare-fun m!88753 () Bool)

(assert (=> d!21849 m!88753))

(declare-fun m!88755 () Bool)

(assert (=> d!21849 m!88755))

(declare-fun m!88757 () Bool)

(assert (=> d!21849 m!88757))

(declare-fun m!88759 () Bool)

(assert (=> d!21849 m!88759))

(declare-fun m!88761 () Bool)

(assert (=> b!84788 m!88761))

(declare-fun m!88763 () Bool)

(assert (=> b!84789 m!88763))

(assert (=> bm!7860 d!21849))

(declare-fun bm!7988 () Bool)

(declare-fun call!7992 () List!1547)

(declare-fun call!7991 () List!1547)

(assert (=> bm!7988 (= call!7992 call!7991)))

(declare-fun b!84790 () Bool)

(declare-fun e!55304 () List!1547)

(assert (=> b!84790 (= e!55304 call!7992)))

(declare-fun b!84791 () Bool)

(declare-fun e!55303 () List!1547)

(declare-fun call!7993 () List!1547)

(assert (=> b!84791 (= e!55303 call!7993)))

(declare-fun b!84792 () Bool)

(declare-fun e!55302 () List!1547)

(assert (=> b!84792 (= e!55302 (insertStrictlySorted!59 (t!5251 (t!5251 (toList!756 lt!38754))) (_1!1120 lt!38747) (_2!1120 lt!38747)))))

(declare-fun b!84793 () Bool)

(assert (=> b!84793 (= e!55303 call!7993)))

(declare-fun b!84794 () Bool)

(declare-fun res!43724 () Bool)

(declare-fun e!55305 () Bool)

(assert (=> b!84794 (=> (not res!43724) (not e!55305))))

(declare-fun lt!39902 () List!1547)

(assert (=> b!84794 (= res!43724 (containsKey!142 lt!39902 (_1!1120 lt!38747)))))

(declare-fun d!21851 () Bool)

(assert (=> d!21851 e!55305))

(declare-fun res!43725 () Bool)

(assert (=> d!21851 (=> (not res!43725) (not e!55305))))

(assert (=> d!21851 (= res!43725 (isStrictlySorted!292 lt!39902))))

(declare-fun e!55301 () List!1547)

(assert (=> d!21851 (= lt!39902 e!55301)))

(declare-fun c!13716 () Bool)

(assert (=> d!21851 (= c!13716 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38754))) (bvslt (_1!1120 (h!2133 (t!5251 (toList!756 lt!38754)))) (_1!1120 lt!38747))))))

(assert (=> d!21851 (isStrictlySorted!292 (t!5251 (toList!756 lt!38754)))))

(assert (=> d!21851 (= (insertStrictlySorted!59 (t!5251 (toList!756 lt!38754)) (_1!1120 lt!38747) (_2!1120 lt!38747)) lt!39902)))

(declare-fun b!84795 () Bool)

(assert (=> b!84795 (= e!55305 (contains!760 lt!39902 (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))))))

(declare-fun b!84796 () Bool)

(assert (=> b!84796 (= e!55301 e!55304)))

(declare-fun c!13715 () Bool)

(assert (=> b!84796 (= c!13715 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38754))) (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!38754)))) (_1!1120 lt!38747))))))

(declare-fun b!84797 () Bool)

(declare-fun c!13718 () Bool)

(assert (=> b!84797 (= e!55302 (ite c!13715 (t!5251 (t!5251 (toList!756 lt!38754))) (ite c!13718 (Cons!1543 (h!2133 (t!5251 (toList!756 lt!38754))) (t!5251 (t!5251 (toList!756 lt!38754)))) Nil!1544)))))

(declare-fun b!84798 () Bool)

(assert (=> b!84798 (= c!13718 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38754))) (bvsgt (_1!1120 (h!2133 (t!5251 (toList!756 lt!38754)))) (_1!1120 lt!38747))))))

(assert (=> b!84798 (= e!55304 e!55303)))

(declare-fun bm!7989 () Bool)

(assert (=> bm!7989 (= call!7991 ($colon$colon!70 e!55302 (ite c!13716 (h!2133 (t!5251 (toList!756 lt!38754))) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747)))))))

(declare-fun c!13717 () Bool)

(assert (=> bm!7989 (= c!13717 c!13716)))

(declare-fun b!84799 () Bool)

(assert (=> b!84799 (= e!55301 call!7991)))

(declare-fun bm!7990 () Bool)

(assert (=> bm!7990 (= call!7993 call!7992)))

(assert (= (and d!21851 c!13716) b!84799))

(assert (= (and d!21851 (not c!13716)) b!84796))

(assert (= (and b!84796 c!13715) b!84790))

(assert (= (and b!84796 (not c!13715)) b!84798))

(assert (= (and b!84798 c!13718) b!84793))

(assert (= (and b!84798 (not c!13718)) b!84791))

(assert (= (or b!84793 b!84791) bm!7990))

(assert (= (or b!84790 bm!7990) bm!7988))

(assert (= (or b!84799 bm!7988) bm!7989))

(assert (= (and bm!7989 c!13717) b!84792))

(assert (= (and bm!7989 (not c!13717)) b!84797))

(assert (= (and d!21851 res!43725) b!84794))

(assert (= (and b!84794 res!43724) b!84795))

(declare-fun m!88765 () Bool)

(assert (=> d!21851 m!88765))

(assert (=> d!21851 m!86973))

(declare-fun m!88767 () Bool)

(assert (=> b!84792 m!88767))

(declare-fun m!88769 () Bool)

(assert (=> b!84795 m!88769))

(declare-fun m!88771 () Bool)

(assert (=> bm!7989 m!88771))

(declare-fun m!88773 () Bool)

(assert (=> b!84794 m!88773))

(assert (=> b!83565 d!21851))

(declare-fun d!21853 () Bool)

(assert (=> d!21853 (= (apply!81 (+!114 lt!39087 (tuple2!2221 lt!39079 (minValue!2211 newMap!16))) lt!39093) (get!1209 (getValueByKey!138 (toList!756 (+!114 lt!39087 (tuple2!2221 lt!39079 (minValue!2211 newMap!16)))) lt!39093)))))

(declare-fun bs!3580 () Bool)

(assert (= bs!3580 d!21853))

(declare-fun m!88775 () Bool)

(assert (=> bs!3580 m!88775))

(assert (=> bs!3580 m!88775))

(declare-fun m!88777 () Bool)

(assert (=> bs!3580 m!88777))

(assert (=> b!83240 d!21853))

(declare-fun d!21855 () Bool)

(declare-fun e!55306 () Bool)

(assert (=> d!21855 e!55306))

(declare-fun res!43726 () Bool)

(assert (=> d!21855 (=> (not res!43726) (not e!55306))))

(declare-fun lt!39906 () ListLongMap!1481)

(assert (=> d!21855 (= res!43726 (contains!757 lt!39906 (_1!1120 (tuple2!2221 lt!39077 (zeroValue!2211 newMap!16)))))))

(declare-fun lt!39903 () List!1547)

(assert (=> d!21855 (= lt!39906 (ListLongMap!1482 lt!39903))))

(declare-fun lt!39904 () Unit!2445)

(declare-fun lt!39905 () Unit!2445)

(assert (=> d!21855 (= lt!39904 lt!39905)))

(assert (=> d!21855 (= (getValueByKey!138 lt!39903 (_1!1120 (tuple2!2221 lt!39077 (zeroValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 lt!39077 (zeroValue!2211 newMap!16)))))))

(assert (=> d!21855 (= lt!39905 (lemmaContainsTupThenGetReturnValue!57 lt!39903 (_1!1120 (tuple2!2221 lt!39077 (zeroValue!2211 newMap!16))) (_2!1120 (tuple2!2221 lt!39077 (zeroValue!2211 newMap!16)))))))

(assert (=> d!21855 (= lt!39903 (insertStrictlySorted!59 (toList!756 lt!39084) (_1!1120 (tuple2!2221 lt!39077 (zeroValue!2211 newMap!16))) (_2!1120 (tuple2!2221 lt!39077 (zeroValue!2211 newMap!16)))))))

(assert (=> d!21855 (= (+!114 lt!39084 (tuple2!2221 lt!39077 (zeroValue!2211 newMap!16))) lt!39906)))

(declare-fun b!84800 () Bool)

(declare-fun res!43727 () Bool)

(assert (=> b!84800 (=> (not res!43727) (not e!55306))))

(assert (=> b!84800 (= res!43727 (= (getValueByKey!138 (toList!756 lt!39906) (_1!1120 (tuple2!2221 lt!39077 (zeroValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 lt!39077 (zeroValue!2211 newMap!16))))))))

(declare-fun b!84801 () Bool)

(assert (=> b!84801 (= e!55306 (contains!760 (toList!756 lt!39906) (tuple2!2221 lt!39077 (zeroValue!2211 newMap!16))))))

(assert (= (and d!21855 res!43726) b!84800))

(assert (= (and b!84800 res!43727) b!84801))

(declare-fun m!88779 () Bool)

(assert (=> d!21855 m!88779))

(declare-fun m!88781 () Bool)

(assert (=> d!21855 m!88781))

(declare-fun m!88783 () Bool)

(assert (=> d!21855 m!88783))

(declare-fun m!88785 () Bool)

(assert (=> d!21855 m!88785))

(declare-fun m!88787 () Bool)

(assert (=> b!84800 m!88787))

(declare-fun m!88789 () Bool)

(assert (=> b!84801 m!88789))

(assert (=> b!83240 d!21855))

(declare-fun d!21857 () Bool)

(assert (=> d!21857 (= (apply!81 (+!114 lt!39080 (tuple2!2221 lt!39089 (zeroValue!2211 newMap!16))) lt!39073) (apply!81 lt!39080 lt!39073))))

(declare-fun lt!39907 () Unit!2445)

(assert (=> d!21857 (= lt!39907 (choose!497 lt!39080 lt!39089 (zeroValue!2211 newMap!16) lt!39073))))

(declare-fun e!55307 () Bool)

(assert (=> d!21857 e!55307))

(declare-fun res!43728 () Bool)

(assert (=> d!21857 (=> (not res!43728) (not e!55307))))

(assert (=> d!21857 (= res!43728 (contains!757 lt!39080 lt!39073))))

(assert (=> d!21857 (= (addApplyDifferent!57 lt!39080 lt!39089 (zeroValue!2211 newMap!16) lt!39073) lt!39907)))

(declare-fun b!84802 () Bool)

(assert (=> b!84802 (= e!55307 (not (= lt!39073 lt!39089)))))

(assert (= (and d!21857 res!43728) b!84802))

(declare-fun m!88791 () Bool)

(assert (=> d!21857 m!88791))

(assert (=> d!21857 m!86063))

(assert (=> d!21857 m!86065))

(assert (=> d!21857 m!86063))

(declare-fun m!88793 () Bool)

(assert (=> d!21857 m!88793))

(assert (=> d!21857 m!86079))

(assert (=> b!83240 d!21857))

(declare-fun d!21859 () Bool)

(assert (=> d!21859 (= (apply!81 (+!114 lt!39080 (tuple2!2221 lt!39089 (zeroValue!2211 newMap!16))) lt!39073) (get!1209 (getValueByKey!138 (toList!756 (+!114 lt!39080 (tuple2!2221 lt!39089 (zeroValue!2211 newMap!16)))) lt!39073)))))

(declare-fun bs!3581 () Bool)

(assert (= bs!3581 d!21859))

(declare-fun m!88795 () Bool)

(assert (=> bs!3581 m!88795))

(assert (=> bs!3581 m!88795))

(declare-fun m!88797 () Bool)

(assert (=> bs!3581 m!88797))

(assert (=> b!83240 d!21859))

(declare-fun d!21861 () Bool)

(declare-fun e!55308 () Bool)

(assert (=> d!21861 e!55308))

(declare-fun res!43729 () Bool)

(assert (=> d!21861 (=> (not res!43729) (not e!55308))))

(declare-fun lt!39911 () ListLongMap!1481)

(assert (=> d!21861 (= res!43729 (contains!757 lt!39911 (_1!1120 (tuple2!2221 lt!39079 (minValue!2211 newMap!16)))))))

(declare-fun lt!39908 () List!1547)

(assert (=> d!21861 (= lt!39911 (ListLongMap!1482 lt!39908))))

(declare-fun lt!39909 () Unit!2445)

(declare-fun lt!39910 () Unit!2445)

(assert (=> d!21861 (= lt!39909 lt!39910)))

(assert (=> d!21861 (= (getValueByKey!138 lt!39908 (_1!1120 (tuple2!2221 lt!39079 (minValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 lt!39079 (minValue!2211 newMap!16)))))))

(assert (=> d!21861 (= lt!39910 (lemmaContainsTupThenGetReturnValue!57 lt!39908 (_1!1120 (tuple2!2221 lt!39079 (minValue!2211 newMap!16))) (_2!1120 (tuple2!2221 lt!39079 (minValue!2211 newMap!16)))))))

(assert (=> d!21861 (= lt!39908 (insertStrictlySorted!59 (toList!756 lt!39087) (_1!1120 (tuple2!2221 lt!39079 (minValue!2211 newMap!16))) (_2!1120 (tuple2!2221 lt!39079 (minValue!2211 newMap!16)))))))

(assert (=> d!21861 (= (+!114 lt!39087 (tuple2!2221 lt!39079 (minValue!2211 newMap!16))) lt!39911)))

(declare-fun b!84803 () Bool)

(declare-fun res!43730 () Bool)

(assert (=> b!84803 (=> (not res!43730) (not e!55308))))

(assert (=> b!84803 (= res!43730 (= (getValueByKey!138 (toList!756 lt!39911) (_1!1120 (tuple2!2221 lt!39079 (minValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 lt!39079 (minValue!2211 newMap!16))))))))

(declare-fun b!84804 () Bool)

(assert (=> b!84804 (= e!55308 (contains!760 (toList!756 lt!39911) (tuple2!2221 lt!39079 (minValue!2211 newMap!16))))))

(assert (= (and d!21861 res!43729) b!84803))

(assert (= (and b!84803 res!43730) b!84804))

(declare-fun m!88799 () Bool)

(assert (=> d!21861 m!88799))

(declare-fun m!88801 () Bool)

(assert (=> d!21861 m!88801))

(declare-fun m!88803 () Bool)

(assert (=> d!21861 m!88803))

(declare-fun m!88805 () Bool)

(assert (=> d!21861 m!88805))

(declare-fun m!88807 () Bool)

(assert (=> b!84803 m!88807))

(declare-fun m!88809 () Bool)

(assert (=> b!84804 m!88809))

(assert (=> b!83240 d!21861))

(declare-fun d!21863 () Bool)

(declare-fun e!55309 () Bool)

(assert (=> d!21863 e!55309))

(declare-fun res!43731 () Bool)

(assert (=> d!21863 (=> (not res!43731) (not e!55309))))

(declare-fun lt!39915 () ListLongMap!1481)

(assert (=> d!21863 (= res!43731 (contains!757 lt!39915 (_1!1120 (tuple2!2221 lt!39090 (minValue!2211 newMap!16)))))))

(declare-fun lt!39912 () List!1547)

(assert (=> d!21863 (= lt!39915 (ListLongMap!1482 lt!39912))))

(declare-fun lt!39913 () Unit!2445)

(declare-fun lt!39914 () Unit!2445)

(assert (=> d!21863 (= lt!39913 lt!39914)))

(assert (=> d!21863 (= (getValueByKey!138 lt!39912 (_1!1120 (tuple2!2221 lt!39090 (minValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 lt!39090 (minValue!2211 newMap!16)))))))

(assert (=> d!21863 (= lt!39914 (lemmaContainsTupThenGetReturnValue!57 lt!39912 (_1!1120 (tuple2!2221 lt!39090 (minValue!2211 newMap!16))) (_2!1120 (tuple2!2221 lt!39090 (minValue!2211 newMap!16)))))))

(assert (=> d!21863 (= lt!39912 (insertStrictlySorted!59 (toList!756 lt!39076) (_1!1120 (tuple2!2221 lt!39090 (minValue!2211 newMap!16))) (_2!1120 (tuple2!2221 lt!39090 (minValue!2211 newMap!16)))))))

(assert (=> d!21863 (= (+!114 lt!39076 (tuple2!2221 lt!39090 (minValue!2211 newMap!16))) lt!39915)))

(declare-fun b!84805 () Bool)

(declare-fun res!43732 () Bool)

(assert (=> b!84805 (=> (not res!43732) (not e!55309))))

(assert (=> b!84805 (= res!43732 (= (getValueByKey!138 (toList!756 lt!39915) (_1!1120 (tuple2!2221 lt!39090 (minValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 lt!39090 (minValue!2211 newMap!16))))))))

(declare-fun b!84806 () Bool)

(assert (=> b!84806 (= e!55309 (contains!760 (toList!756 lt!39915) (tuple2!2221 lt!39090 (minValue!2211 newMap!16))))))

(assert (= (and d!21863 res!43731) b!84805))

(assert (= (and b!84805 res!43732) b!84806))

(declare-fun m!88811 () Bool)

(assert (=> d!21863 m!88811))

(declare-fun m!88813 () Bool)

(assert (=> d!21863 m!88813))

(declare-fun m!88815 () Bool)

(assert (=> d!21863 m!88815))

(declare-fun m!88817 () Bool)

(assert (=> d!21863 m!88817))

(declare-fun m!88819 () Bool)

(assert (=> b!84805 m!88819))

(declare-fun m!88821 () Bool)

(assert (=> b!84806 m!88821))

(assert (=> b!83240 d!21863))

(declare-fun d!21865 () Bool)

(assert (=> d!21865 (= (apply!81 (+!114 lt!39087 (tuple2!2221 lt!39079 (minValue!2211 newMap!16))) lt!39093) (apply!81 lt!39087 lt!39093))))

(declare-fun lt!39916 () Unit!2445)

(assert (=> d!21865 (= lt!39916 (choose!497 lt!39087 lt!39079 (minValue!2211 newMap!16) lt!39093))))

(declare-fun e!55310 () Bool)

(assert (=> d!21865 e!55310))

(declare-fun res!43733 () Bool)

(assert (=> d!21865 (=> (not res!43733) (not e!55310))))

(assert (=> d!21865 (= res!43733 (contains!757 lt!39087 lt!39093))))

(assert (=> d!21865 (= (addApplyDifferent!57 lt!39087 lt!39079 (minValue!2211 newMap!16) lt!39093) lt!39916)))

(declare-fun b!84807 () Bool)

(assert (=> b!84807 (= e!55310 (not (= lt!39093 lt!39079)))))

(assert (= (and d!21865 res!43733) b!84807))

(declare-fun m!88823 () Bool)

(assert (=> d!21865 m!88823))

(assert (=> d!21865 m!86067))

(assert (=> d!21865 m!86069))

(assert (=> d!21865 m!86067))

(declare-fun m!88825 () Bool)

(assert (=> d!21865 m!88825))

(assert (=> d!21865 m!86085))

(assert (=> b!83240 d!21865))

(declare-fun d!21867 () Bool)

(assert (=> d!21867 (= (apply!81 lt!39076 lt!39075) (get!1209 (getValueByKey!138 (toList!756 lt!39076) lt!39075)))))

(declare-fun bs!3582 () Bool)

(assert (= bs!3582 d!21867))

(declare-fun m!88827 () Bool)

(assert (=> bs!3582 m!88827))

(assert (=> bs!3582 m!88827))

(declare-fun m!88829 () Bool)

(assert (=> bs!3582 m!88829))

(assert (=> b!83240 d!21867))

(declare-fun d!21869 () Bool)

(declare-fun e!55311 () Bool)

(assert (=> d!21869 e!55311))

(declare-fun res!43734 () Bool)

(assert (=> d!21869 (=> res!43734 e!55311)))

(declare-fun lt!39917 () Bool)

(assert (=> d!21869 (= res!43734 (not lt!39917))))

(declare-fun lt!39919 () Bool)

(assert (=> d!21869 (= lt!39917 lt!39919)))

(declare-fun lt!39920 () Unit!2445)

(declare-fun e!55312 () Unit!2445)

(assert (=> d!21869 (= lt!39920 e!55312)))

(declare-fun c!13719 () Bool)

(assert (=> d!21869 (= c!13719 lt!39919)))

(assert (=> d!21869 (= lt!39919 (containsKey!142 (toList!756 (+!114 lt!39084 (tuple2!2221 lt!39077 (zeroValue!2211 newMap!16)))) lt!39081))))

(assert (=> d!21869 (= (contains!757 (+!114 lt!39084 (tuple2!2221 lt!39077 (zeroValue!2211 newMap!16))) lt!39081) lt!39917)))

(declare-fun b!84808 () Bool)

(declare-fun lt!39918 () Unit!2445)

(assert (=> b!84808 (= e!55312 lt!39918)))

(assert (=> b!84808 (= lt!39918 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 (+!114 lt!39084 (tuple2!2221 lt!39077 (zeroValue!2211 newMap!16)))) lt!39081))))

(assert (=> b!84808 (isDefined!92 (getValueByKey!138 (toList!756 (+!114 lt!39084 (tuple2!2221 lt!39077 (zeroValue!2211 newMap!16)))) lt!39081))))

(declare-fun b!84809 () Bool)

(declare-fun Unit!2519 () Unit!2445)

(assert (=> b!84809 (= e!55312 Unit!2519)))

(declare-fun b!84810 () Bool)

(assert (=> b!84810 (= e!55311 (isDefined!92 (getValueByKey!138 (toList!756 (+!114 lt!39084 (tuple2!2221 lt!39077 (zeroValue!2211 newMap!16)))) lt!39081)))))

(assert (= (and d!21869 c!13719) b!84808))

(assert (= (and d!21869 (not c!13719)) b!84809))

(assert (= (and d!21869 (not res!43734)) b!84810))

(declare-fun m!88831 () Bool)

(assert (=> d!21869 m!88831))

(declare-fun m!88833 () Bool)

(assert (=> b!84808 m!88833))

(declare-fun m!88835 () Bool)

(assert (=> b!84808 m!88835))

(assert (=> b!84808 m!88835))

(declare-fun m!88837 () Bool)

(assert (=> b!84808 m!88837))

(assert (=> b!84810 m!88835))

(assert (=> b!84810 m!88835))

(assert (=> b!84810 m!88837))

(assert (=> b!83240 d!21869))

(declare-fun d!21871 () Bool)

(assert (=> d!21871 (= (apply!81 (+!114 lt!39076 (tuple2!2221 lt!39090 (minValue!2211 newMap!16))) lt!39075) (apply!81 lt!39076 lt!39075))))

(declare-fun lt!39921 () Unit!2445)

(assert (=> d!21871 (= lt!39921 (choose!497 lt!39076 lt!39090 (minValue!2211 newMap!16) lt!39075))))

(declare-fun e!55313 () Bool)

(assert (=> d!21871 e!55313))

(declare-fun res!43735 () Bool)

(assert (=> d!21871 (=> (not res!43735) (not e!55313))))

(assert (=> d!21871 (= res!43735 (contains!757 lt!39076 lt!39075))))

(assert (=> d!21871 (= (addApplyDifferent!57 lt!39076 lt!39090 (minValue!2211 newMap!16) lt!39075) lt!39921)))

(declare-fun b!84811 () Bool)

(assert (=> b!84811 (= e!55313 (not (= lt!39075 lt!39090)))))

(assert (= (and d!21871 res!43735) b!84811))

(declare-fun m!88839 () Bool)

(assert (=> d!21871 m!88839))

(assert (=> d!21871 m!86077))

(assert (=> d!21871 m!86087))

(assert (=> d!21871 m!86077))

(declare-fun m!88841 () Bool)

(assert (=> d!21871 m!88841))

(assert (=> d!21871 m!86081))

(assert (=> b!83240 d!21871))

(declare-fun d!21873 () Bool)

(assert (=> d!21873 (= (apply!81 lt!39080 lt!39073) (get!1209 (getValueByKey!138 (toList!756 lt!39080) lt!39073)))))

(declare-fun bs!3583 () Bool)

(assert (= bs!3583 d!21873))

(declare-fun m!88843 () Bool)

(assert (=> bs!3583 m!88843))

(assert (=> bs!3583 m!88843))

(declare-fun m!88845 () Bool)

(assert (=> bs!3583 m!88845))

(assert (=> b!83240 d!21873))

(declare-fun d!21875 () Bool)

(assert (=> d!21875 (= (apply!81 lt!39087 lt!39093) (get!1209 (getValueByKey!138 (toList!756 lt!39087) lt!39093)))))

(declare-fun bs!3584 () Bool)

(assert (= bs!3584 d!21875))

(declare-fun m!88847 () Bool)

(assert (=> bs!3584 m!88847))

(assert (=> bs!3584 m!88847))

(declare-fun m!88849 () Bool)

(assert (=> bs!3584 m!88849))

(assert (=> b!83240 d!21875))

(declare-fun b!84812 () Bool)

(declare-fun e!55314 () ListLongMap!1481)

(declare-fun call!7994 () ListLongMap!1481)

(assert (=> b!84812 (= e!55314 call!7994)))

(declare-fun b!84813 () Bool)

(assert (=> b!84813 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(assert (=> b!84813 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2156 (_values!2300 newMap!16))))))

(declare-fun e!55317 () Bool)

(declare-fun lt!39925 () ListLongMap!1481)

(assert (=> b!84813 (= e!55317 (= (apply!81 lt!39925 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) (get!1206 (select (arr!1913 (_values!2300 newMap!16)) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!84814 () Bool)

(declare-fun e!55319 () ListLongMap!1481)

(assert (=> b!84814 (= e!55319 (ListLongMap!1482 Nil!1544))))

(declare-fun b!84815 () Bool)

(declare-fun e!55318 () Bool)

(assert (=> b!84815 (= e!55318 (= lt!39925 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2317 newMap!16))))))

(declare-fun b!84817 () Bool)

(declare-fun e!55316 () Bool)

(assert (=> b!84817 (= e!55316 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84817 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!84818 () Bool)

(declare-fun e!55315 () Bool)

(assert (=> b!84818 (= e!55315 e!55317)))

(assert (=> b!84818 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun res!43739 () Bool)

(assert (=> b!84818 (= res!43739 (contains!757 lt!39925 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84818 (=> (not res!43739) (not e!55317))))

(declare-fun b!84819 () Bool)

(assert (=> b!84819 (= e!55315 e!55318)))

(declare-fun c!13722 () Bool)

(assert (=> b!84819 (= c!13722 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun b!84820 () Bool)

(assert (=> b!84820 (= e!55319 e!55314)))

(declare-fun c!13721 () Bool)

(assert (=> b!84820 (= c!13721 (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84816 () Bool)

(declare-fun res!43738 () Bool)

(declare-fun e!55320 () Bool)

(assert (=> b!84816 (=> (not res!43738) (not e!55320))))

(assert (=> b!84816 (= res!43738 (not (contains!757 lt!39925 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!21877 () Bool)

(assert (=> d!21877 e!55320))

(declare-fun res!43737 () Bool)

(assert (=> d!21877 (=> (not res!43737) (not e!55320))))

(assert (=> d!21877 (= res!43737 (not (contains!757 lt!39925 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21877 (= lt!39925 e!55319)))

(declare-fun c!13720 () Bool)

(assert (=> d!21877 (= c!13720 (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!21877 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!21877 (= (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) lt!39925)))

(declare-fun b!84821 () Bool)

(declare-fun lt!39928 () Unit!2445)

(declare-fun lt!39927 () Unit!2445)

(assert (=> b!84821 (= lt!39928 lt!39927)))

(declare-fun lt!39924 () V!3019)

(declare-fun lt!39923 () (_ BitVec 64))

(declare-fun lt!39922 () ListLongMap!1481)

(declare-fun lt!39926 () (_ BitVec 64))

(assert (=> b!84821 (not (contains!757 (+!114 lt!39922 (tuple2!2221 lt!39926 lt!39924)) lt!39923))))

(assert (=> b!84821 (= lt!39927 (addStillNotContains!32 lt!39922 lt!39926 lt!39924 lt!39923))))

(assert (=> b!84821 (= lt!39923 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!84821 (= lt!39924 (get!1206 (select (arr!1913 (_values!2300 newMap!16)) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!84821 (= lt!39926 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!84821 (= lt!39922 call!7994)))

(assert (=> b!84821 (= e!55314 (+!114 call!7994 (tuple2!2221 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000) (get!1206 (select (arr!1913 (_values!2300 newMap!16)) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!84822 () Bool)

(assert (=> b!84822 (= e!55320 e!55315)))

(declare-fun c!13723 () Bool)

(assert (=> b!84822 (= c!13723 e!55316)))

(declare-fun res!43736 () Bool)

(assert (=> b!84822 (=> (not res!43736) (not e!55316))))

(assert (=> b!84822 (= res!43736 (bvslt #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(declare-fun bm!7991 () Bool)

(assert (=> bm!7991 (= call!7994 (getCurrentListMapNoExtraKeys!78 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2317 newMap!16)))))

(declare-fun b!84823 () Bool)

(assert (=> b!84823 (= e!55318 (isEmpty!337 lt!39925))))

(assert (= (and d!21877 c!13720) b!84814))

(assert (= (and d!21877 (not c!13720)) b!84820))

(assert (= (and b!84820 c!13721) b!84821))

(assert (= (and b!84820 (not c!13721)) b!84812))

(assert (= (or b!84821 b!84812) bm!7991))

(assert (= (and d!21877 res!43737) b!84816))

(assert (= (and b!84816 res!43738) b!84822))

(assert (= (and b!84822 res!43736) b!84817))

(assert (= (and b!84822 c!13723) b!84818))

(assert (= (and b!84822 (not c!13723)) b!84819))

(assert (= (and b!84818 res!43739) b!84813))

(assert (= (and b!84819 c!13722) b!84815))

(assert (= (and b!84819 (not c!13722)) b!84823))

(declare-fun b_lambda!3753 () Bool)

(assert (=> (not b_lambda!3753) (not b!84813)))

(assert (=> b!84813 t!5259))

(declare-fun b_and!5129 () Bool)

(assert (= b_and!5125 (and (=> t!5259 result!2903) b_and!5129)))

(assert (=> b!84813 t!5261))

(declare-fun b_and!5131 () Bool)

(assert (= b_and!5127 (and (=> t!5261 result!2905) b_and!5131)))

(declare-fun b_lambda!3755 () Bool)

(assert (=> (not b_lambda!3755) (not b!84821)))

(assert (=> b!84821 t!5259))

(declare-fun b_and!5133 () Bool)

(assert (= b_and!5129 (and (=> t!5259 result!2903) b_and!5133)))

(assert (=> b!84821 t!5261))

(declare-fun b_and!5135 () Bool)

(assert (= b_and!5131 (and (=> t!5261 result!2905) b_and!5135)))

(declare-fun m!88851 () Bool)

(assert (=> b!84815 m!88851))

(assert (=> bm!7991 m!88851))

(assert (=> b!84813 m!86091))

(assert (=> b!84813 m!86049))

(assert (=> b!84813 m!86091))

(assert (=> b!84813 m!86089))

(assert (=> b!84813 m!86095))

(assert (=> b!84813 m!86049))

(declare-fun m!88853 () Bool)

(assert (=> b!84813 m!88853))

(assert (=> b!84813 m!86089))

(assert (=> b!84817 m!86049))

(assert (=> b!84817 m!86049))

(assert (=> b!84817 m!86051))

(assert (=> b!84820 m!86049))

(assert (=> b!84820 m!86049))

(assert (=> b!84820 m!86051))

(assert (=> b!84821 m!86091))

(declare-fun m!88855 () Bool)

(assert (=> b!84821 m!88855))

(assert (=> b!84821 m!86049))

(declare-fun m!88857 () Bool)

(assert (=> b!84821 m!88857))

(assert (=> b!84821 m!86091))

(assert (=> b!84821 m!86089))

(assert (=> b!84821 m!86095))

(declare-fun m!88859 () Bool)

(assert (=> b!84821 m!88859))

(assert (=> b!84821 m!86089))

(assert (=> b!84821 m!88857))

(declare-fun m!88861 () Bool)

(assert (=> b!84821 m!88861))

(declare-fun m!88863 () Bool)

(assert (=> d!21877 m!88863))

(assert (=> d!21877 m!86023))

(declare-fun m!88865 () Bool)

(assert (=> b!84823 m!88865))

(assert (=> b!84818 m!86049))

(assert (=> b!84818 m!86049))

(declare-fun m!88867 () Bool)

(assert (=> b!84818 m!88867))

(declare-fun m!88869 () Bool)

(assert (=> b!84816 m!88869))

(assert (=> b!83240 d!21877))

(declare-fun d!21879 () Bool)

(declare-fun e!55321 () Bool)

(assert (=> d!21879 e!55321))

(declare-fun res!43740 () Bool)

(assert (=> d!21879 (=> (not res!43740) (not e!55321))))

(declare-fun lt!39932 () ListLongMap!1481)

(assert (=> d!21879 (= res!43740 (contains!757 lt!39932 (_1!1120 (tuple2!2221 lt!39089 (zeroValue!2211 newMap!16)))))))

(declare-fun lt!39929 () List!1547)

(assert (=> d!21879 (= lt!39932 (ListLongMap!1482 lt!39929))))

(declare-fun lt!39930 () Unit!2445)

(declare-fun lt!39931 () Unit!2445)

(assert (=> d!21879 (= lt!39930 lt!39931)))

(assert (=> d!21879 (= (getValueByKey!138 lt!39929 (_1!1120 (tuple2!2221 lt!39089 (zeroValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 lt!39089 (zeroValue!2211 newMap!16)))))))

(assert (=> d!21879 (= lt!39931 (lemmaContainsTupThenGetReturnValue!57 lt!39929 (_1!1120 (tuple2!2221 lt!39089 (zeroValue!2211 newMap!16))) (_2!1120 (tuple2!2221 lt!39089 (zeroValue!2211 newMap!16)))))))

(assert (=> d!21879 (= lt!39929 (insertStrictlySorted!59 (toList!756 lt!39080) (_1!1120 (tuple2!2221 lt!39089 (zeroValue!2211 newMap!16))) (_2!1120 (tuple2!2221 lt!39089 (zeroValue!2211 newMap!16)))))))

(assert (=> d!21879 (= (+!114 lt!39080 (tuple2!2221 lt!39089 (zeroValue!2211 newMap!16))) lt!39932)))

(declare-fun b!84824 () Bool)

(declare-fun res!43741 () Bool)

(assert (=> b!84824 (=> (not res!43741) (not e!55321))))

(assert (=> b!84824 (= res!43741 (= (getValueByKey!138 (toList!756 lt!39932) (_1!1120 (tuple2!2221 lt!39089 (zeroValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 lt!39089 (zeroValue!2211 newMap!16))))))))

(declare-fun b!84825 () Bool)

(assert (=> b!84825 (= e!55321 (contains!760 (toList!756 lt!39932) (tuple2!2221 lt!39089 (zeroValue!2211 newMap!16))))))

(assert (= (and d!21879 res!43740) b!84824))

(assert (= (and b!84824 res!43741) b!84825))

(declare-fun m!88871 () Bool)

(assert (=> d!21879 m!88871))

(declare-fun m!88873 () Bool)

(assert (=> d!21879 m!88873))

(declare-fun m!88875 () Bool)

(assert (=> d!21879 m!88875))

(declare-fun m!88877 () Bool)

(assert (=> d!21879 m!88877))

(declare-fun m!88879 () Bool)

(assert (=> b!84824 m!88879))

(declare-fun m!88881 () Bool)

(assert (=> b!84825 m!88881))

(assert (=> b!83240 d!21879))

(declare-fun d!21881 () Bool)

(assert (=> d!21881 (contains!757 (+!114 lt!39084 (tuple2!2221 lt!39077 (zeroValue!2211 newMap!16))) lt!39081)))

(declare-fun lt!39933 () Unit!2445)

(assert (=> d!21881 (= lt!39933 (choose!498 lt!39084 lt!39077 (zeroValue!2211 newMap!16) lt!39081))))

(assert (=> d!21881 (contains!757 lt!39084 lt!39081)))

(assert (=> d!21881 (= (addStillContains!57 lt!39084 lt!39077 (zeroValue!2211 newMap!16) lt!39081) lt!39933)))

(declare-fun bs!3585 () Bool)

(assert (= bs!3585 d!21881))

(assert (=> bs!3585 m!86061))

(assert (=> bs!3585 m!86061))

(assert (=> bs!3585 m!86073))

(declare-fun m!88883 () Bool)

(assert (=> bs!3585 m!88883))

(declare-fun m!88885 () Bool)

(assert (=> bs!3585 m!88885))

(assert (=> b!83240 d!21881))

(declare-fun d!21883 () Bool)

(assert (=> d!21883 (= (apply!81 (+!114 lt!39076 (tuple2!2221 lt!39090 (minValue!2211 newMap!16))) lt!39075) (get!1209 (getValueByKey!138 (toList!756 (+!114 lt!39076 (tuple2!2221 lt!39090 (minValue!2211 newMap!16)))) lt!39075)))))

(declare-fun bs!3586 () Bool)

(assert (= bs!3586 d!21883))

(declare-fun m!88887 () Bool)

(assert (=> bs!3586 m!88887))

(assert (=> bs!3586 m!88887))

(declare-fun m!88889 () Bool)

(assert (=> bs!3586 m!88889))

(assert (=> b!83240 d!21883))

(assert (=> b!83227 d!21637))

(assert (=> b!83227 d!21639))

(declare-fun b!84827 () Bool)

(declare-fun e!55322 () Option!144)

(declare-fun e!55323 () Option!144)

(assert (=> b!84827 (= e!55322 e!55323)))

(declare-fun c!13725 () Bool)

(assert (=> b!84827 (= c!13725 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38999))) (not (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!38999)))) (_1!1120 lt!38750)))))))

(declare-fun b!84826 () Bool)

(assert (=> b!84826 (= e!55322 (Some!143 (_2!1120 (h!2133 (t!5251 (toList!756 lt!38999))))))))

(declare-fun b!84829 () Bool)

(assert (=> b!84829 (= e!55323 None!142)))

(declare-fun d!21885 () Bool)

(declare-fun c!13724 () Bool)

(assert (=> d!21885 (= c!13724 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38999))) (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!38999)))) (_1!1120 lt!38750))))))

(assert (=> d!21885 (= (getValueByKey!138 (t!5251 (toList!756 lt!38999)) (_1!1120 lt!38750)) e!55322)))

(declare-fun b!84828 () Bool)

(assert (=> b!84828 (= e!55323 (getValueByKey!138 (t!5251 (t!5251 (toList!756 lt!38999))) (_1!1120 lt!38750)))))

(assert (= (and d!21885 c!13724) b!84826))

(assert (= (and d!21885 (not c!13724)) b!84827))

(assert (= (and b!84827 c!13725) b!84828))

(assert (= (and b!84827 (not c!13725)) b!84829))

(declare-fun m!88891 () Bool)

(assert (=> b!84828 m!88891))

(assert (=> b!83428 d!21885))

(declare-fun d!21887 () Bool)

(assert (=> d!21887 (= (inRange!0 (ite c!13413 (index!3144 lt!39437) (index!3147 lt!39437)) (mask!6335 newMap!16)) (and (bvsge (ite c!13413 (index!3144 lt!39437) (index!3147 lt!39437)) #b00000000000000000000000000000000) (bvslt (ite c!13413 (index!3144 lt!39437) (index!3147 lt!39437)) (bvadd (mask!6335 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7879 d!21887))

(declare-fun d!21889 () Bool)

(declare-fun e!55324 () Bool)

(assert (=> d!21889 e!55324))

(declare-fun res!43742 () Bool)

(assert (=> d!21889 (=> (not res!43742) (not e!55324))))

(declare-fun lt!39937 () ListLongMap!1481)

(assert (=> d!21889 (= res!43742 (contains!757 lt!39937 (_1!1120 (ite (or c!13266 c!13268) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))))

(declare-fun lt!39934 () List!1547)

(assert (=> d!21889 (= lt!39937 (ListLongMap!1482 lt!39934))))

(declare-fun lt!39935 () Unit!2445)

(declare-fun lt!39936 () Unit!2445)

(assert (=> d!21889 (= lt!39935 lt!39936)))

(assert (=> d!21889 (= (getValueByKey!138 lt!39934 (_1!1120 (ite (or c!13266 c!13268) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))) (Some!143 (_2!1120 (ite (or c!13266 c!13268) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))))

(assert (=> d!21889 (= lt!39936 (lemmaContainsTupThenGetReturnValue!57 lt!39934 (_1!1120 (ite (or c!13266 c!13268) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))) (_2!1120 (ite (or c!13266 c!13268) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))))

(assert (=> d!21889 (= lt!39934 (insertStrictlySorted!59 (toList!756 (ite c!13266 call!7810 (ite c!13268 call!7815 call!7809))) (_1!1120 (ite (or c!13266 c!13268) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))) (_2!1120 (ite (or c!13266 c!13268) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))))

(assert (=> d!21889 (= (+!114 (ite c!13266 call!7810 (ite c!13268 call!7815 call!7809)) (ite (or c!13266 c!13268) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))) lt!39937)))

(declare-fun b!84830 () Bool)

(declare-fun res!43743 () Bool)

(assert (=> b!84830 (=> (not res!43743) (not e!55324))))

(assert (=> b!84830 (= res!43743 (= (getValueByKey!138 (toList!756 lt!39937) (_1!1120 (ite (or c!13266 c!13268) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))) (Some!143 (_2!1120 (ite (or c!13266 c!13268) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))))

(declare-fun b!84831 () Bool)

(assert (=> b!84831 (= e!55324 (contains!760 (toList!756 lt!39937) (ite (or c!13266 c!13268) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))

(assert (= (and d!21889 res!43742) b!84830))

(assert (= (and b!84830 res!43743) b!84831))

(declare-fun m!88893 () Bool)

(assert (=> d!21889 m!88893))

(declare-fun m!88895 () Bool)

(assert (=> d!21889 m!88895))

(declare-fun m!88897 () Bool)

(assert (=> d!21889 m!88897))

(declare-fun m!88899 () Bool)

(assert (=> d!21889 m!88899))

(declare-fun m!88901 () Bool)

(assert (=> b!84830 m!88901))

(declare-fun m!88903 () Bool)

(assert (=> b!84831 m!88903))

(assert (=> bm!7808 d!21889))

(declare-fun d!21891 () Bool)

(assert (=> d!21891 (= ($colon$colon!70 e!54426 (ite c!13308 (h!2133 (toList!756 lt!38754)) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750)))) (Cons!1543 (ite c!13308 (h!2133 (toList!756 lt!38754)) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))) e!54426))))

(assert (=> bm!7835 d!21891))

(declare-fun d!21893 () Bool)

(declare-fun res!43744 () Bool)

(declare-fun e!55325 () Bool)

(assert (=> d!21893 (=> res!43744 e!55325)))

(assert (=> d!21893 (= res!43744 (and ((_ is Cons!1543) (toList!756 lt!39003)) (= (_1!1120 (h!2133 (toList!756 lt!39003))) (_1!1120 lt!38750))))))

(assert (=> d!21893 (= (containsKey!142 (toList!756 lt!39003) (_1!1120 lt!38750)) e!55325)))

(declare-fun b!84832 () Bool)

(declare-fun e!55326 () Bool)

(assert (=> b!84832 (= e!55325 e!55326)))

(declare-fun res!43745 () Bool)

(assert (=> b!84832 (=> (not res!43745) (not e!55326))))

(assert (=> b!84832 (= res!43745 (and (or (not ((_ is Cons!1543) (toList!756 lt!39003))) (bvsle (_1!1120 (h!2133 (toList!756 lt!39003))) (_1!1120 lt!38750))) ((_ is Cons!1543) (toList!756 lt!39003)) (bvslt (_1!1120 (h!2133 (toList!756 lt!39003))) (_1!1120 lt!38750))))))

(declare-fun b!84833 () Bool)

(assert (=> b!84833 (= e!55326 (containsKey!142 (t!5251 (toList!756 lt!39003)) (_1!1120 lt!38750)))))

(assert (= (and d!21893 (not res!43744)) b!84832))

(assert (= (and b!84832 res!43745) b!84833))

(declare-fun m!88905 () Bool)

(assert (=> b!84833 m!88905))

(assert (=> d!21083 d!21893))

(declare-fun b!84835 () Bool)

(declare-fun e!55327 () Option!144)

(declare-fun e!55328 () Option!144)

(assert (=> b!84835 (= e!55327 e!55328)))

(declare-fun c!13727 () Bool)

(assert (=> b!84835 (= c!13727 (and ((_ is Cons!1543) (t!5251 lt!39030)) (not (= (_1!1120 (h!2133 (t!5251 lt!39030))) (_1!1120 lt!38760)))))))

(declare-fun b!84834 () Bool)

(assert (=> b!84834 (= e!55327 (Some!143 (_2!1120 (h!2133 (t!5251 lt!39030)))))))

(declare-fun b!84837 () Bool)

(assert (=> b!84837 (= e!55328 None!142)))

(declare-fun d!21895 () Bool)

(declare-fun c!13726 () Bool)

(assert (=> d!21895 (= c!13726 (and ((_ is Cons!1543) (t!5251 lt!39030)) (= (_1!1120 (h!2133 (t!5251 lt!39030))) (_1!1120 lt!38760))))))

(assert (=> d!21895 (= (getValueByKey!138 (t!5251 lt!39030) (_1!1120 lt!38760)) e!55327)))

(declare-fun b!84836 () Bool)

(assert (=> b!84836 (= e!55328 (getValueByKey!138 (t!5251 (t!5251 lt!39030)) (_1!1120 lt!38760)))))

(assert (= (and d!21895 c!13726) b!84834))

(assert (= (and d!21895 (not c!13726)) b!84835))

(assert (= (and b!84835 c!13727) b!84836))

(assert (= (and b!84835 (not c!13727)) b!84837))

(declare-fun m!88907 () Bool)

(assert (=> b!84836 m!88907))

(assert (=> b!83390 d!21895))

(declare-fun b!84841 () Bool)

(declare-fun e!55329 () Bool)

(assert (=> b!84841 (= e!55329 (and (bvsge (extraKeys!2160 (_2!1121 lt!38897)) #b00000000000000000000000000000000) (bvsle (extraKeys!2160 (_2!1121 lt!38897)) #b00000000000000000000000000000011) (bvsge (_vacant!424 (_2!1121 lt!38897)) #b00000000000000000000000000000000)))))

(declare-fun b!84838 () Bool)

(declare-fun res!43749 () Bool)

(assert (=> b!84838 (=> (not res!43749) (not e!55329))))

(assert (=> b!84838 (= res!43749 (and (= (size!2156 (_values!2300 (_2!1121 lt!38897))) (bvadd (mask!6335 (_2!1121 lt!38897)) #b00000000000000000000000000000001)) (= (size!2155 (_keys!3985 (_2!1121 lt!38897))) (size!2156 (_values!2300 (_2!1121 lt!38897)))) (bvsge (_size!424 (_2!1121 lt!38897)) #b00000000000000000000000000000000) (bvsle (_size!424 (_2!1121 lt!38897)) (bvadd (mask!6335 (_2!1121 lt!38897)) #b00000000000000000000000000000001))))))

(declare-fun d!21897 () Bool)

(declare-fun res!43748 () Bool)

(assert (=> d!21897 (=> (not res!43748) (not e!55329))))

(assert (=> d!21897 (= res!43748 (validMask!0 (mask!6335 (_2!1121 lt!38897))))))

(assert (=> d!21897 (= (simpleValid!56 (_2!1121 lt!38897)) e!55329)))

(declare-fun b!84839 () Bool)

(declare-fun res!43746 () Bool)

(assert (=> b!84839 (=> (not res!43746) (not e!55329))))

(assert (=> b!84839 (= res!43746 (bvsge (size!2159 (_2!1121 lt!38897)) (_size!424 (_2!1121 lt!38897))))))

(declare-fun b!84840 () Bool)

(declare-fun res!43747 () Bool)

(assert (=> b!84840 (=> (not res!43747) (not e!55329))))

(assert (=> b!84840 (= res!43747 (= (size!2159 (_2!1121 lt!38897)) (bvadd (_size!424 (_2!1121 lt!38897)) (bvsdiv (bvadd (extraKeys!2160 (_2!1121 lt!38897)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!21897 res!43748) b!84838))

(assert (= (and b!84838 res!43749) b!84839))

(assert (= (and b!84839 res!43746) b!84840))

(assert (= (and b!84840 res!43747) b!84841))

(assert (=> d!21897 m!87545))

(declare-fun m!88909 () Bool)

(assert (=> b!84839 m!88909))

(assert (=> b!84840 m!88909))

(assert (=> d!21131 d!21897))

(declare-fun d!21899 () Bool)

(declare-fun lt!39938 () Bool)

(assert (=> d!21899 (= lt!39938 (select (content!87 (t!5251 (toList!756 lt!39045))) lt!38747))))

(declare-fun e!55330 () Bool)

(assert (=> d!21899 (= lt!39938 e!55330)))

(declare-fun res!43750 () Bool)

(assert (=> d!21899 (=> (not res!43750) (not e!55330))))

(assert (=> d!21899 (= res!43750 ((_ is Cons!1543) (t!5251 (toList!756 lt!39045))))))

(assert (=> d!21899 (= (contains!760 (t!5251 (toList!756 lt!39045)) lt!38747) lt!39938)))

(declare-fun b!84842 () Bool)

(declare-fun e!55331 () Bool)

(assert (=> b!84842 (= e!55330 e!55331)))

(declare-fun res!43751 () Bool)

(assert (=> b!84842 (=> res!43751 e!55331)))

(assert (=> b!84842 (= res!43751 (= (h!2133 (t!5251 (toList!756 lt!39045))) lt!38747))))

(declare-fun b!84843 () Bool)

(assert (=> b!84843 (= e!55331 (contains!760 (t!5251 (t!5251 (toList!756 lt!39045))) lt!38747))))

(assert (= (and d!21899 res!43750) b!84842))

(assert (= (and b!84842 (not res!43751)) b!84843))

(assert (=> d!21899 m!87467))

(declare-fun m!88911 () Bool)

(assert (=> d!21899 m!88911))

(declare-fun m!88913 () Bool)

(assert (=> b!84843 m!88913))

(assert (=> b!83620 d!21899))

(declare-fun d!21901 () Bool)

(declare-fun e!55332 () Bool)

(assert (=> d!21901 e!55332))

(declare-fun res!43752 () Bool)

(assert (=> d!21901 (=> (not res!43752) (not e!55332))))

(declare-fun lt!39942 () ListLongMap!1481)

(assert (=> d!21901 (= res!43752 (contains!757 lt!39942 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))

(declare-fun lt!39939 () List!1547)

(assert (=> d!21901 (= lt!39942 (ListLongMap!1482 lt!39939))))

(declare-fun lt!39940 () Unit!2445)

(declare-fun lt!39941 () Unit!2445)

(assert (=> d!21901 (= lt!39940 lt!39941)))

(assert (=> d!21901 (= (getValueByKey!138 lt!39939 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))

(assert (=> d!21901 (= lt!39941 (lemmaContainsTupThenGetReturnValue!57 lt!39939 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))

(assert (=> d!21901 (= lt!39939 (insertStrictlySorted!59 (toList!756 call!7853) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))

(assert (=> d!21901 (= (+!114 call!7853 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))) lt!39942)))

(declare-fun b!84844 () Bool)

(declare-fun res!43753 () Bool)

(assert (=> b!84844 (=> (not res!43753) (not e!55332))))

(assert (=> b!84844 (= res!43753 (= (getValueByKey!138 (toList!756 lt!39942) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))) (Some!143 (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))))

(declare-fun b!84845 () Bool)

(assert (=> b!84845 (= e!55332 (contains!760 (toList!756 lt!39942) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))

(assert (= (and d!21901 res!43752) b!84844))

(assert (= (and b!84844 res!43753) b!84845))

(declare-fun m!88915 () Bool)

(assert (=> d!21901 m!88915))

(declare-fun m!88917 () Bool)

(assert (=> d!21901 m!88917))

(declare-fun m!88919 () Bool)

(assert (=> d!21901 m!88919))

(declare-fun m!88921 () Bool)

(assert (=> d!21901 m!88921))

(declare-fun m!88923 () Bool)

(assert (=> b!84844 m!88923))

(declare-fun m!88925 () Bool)

(assert (=> b!84845 m!88925))

(assert (=> b!83501 d!21901))

(declare-fun d!21903 () Bool)

(declare-fun c!13728 () Bool)

(assert (=> d!21903 (= c!13728 ((_ is Nil!1544) (toList!756 lt!38999)))))

(declare-fun e!55333 () (InoxSet tuple2!2220))

(assert (=> d!21903 (= (content!87 (toList!756 lt!38999)) e!55333)))

(declare-fun b!84846 () Bool)

(assert (=> b!84846 (= e!55333 ((as const (Array tuple2!2220 Bool)) false))))

(declare-fun b!84847 () Bool)

(assert (=> b!84847 (= e!55333 ((_ map or) (store ((as const (Array tuple2!2220 Bool)) false) (h!2133 (toList!756 lt!38999)) true) (content!87 (t!5251 (toList!756 lt!38999)))))))

(assert (= (and d!21903 c!13728) b!84846))

(assert (= (and d!21903 (not c!13728)) b!84847))

(declare-fun m!88927 () Bool)

(assert (=> b!84847 m!88927))

(declare-fun m!88929 () Bool)

(assert (=> b!84847 m!88929))

(assert (=> d!21125 d!21903))

(assert (=> d!20945 d!20943))

(declare-fun d!21905 () Bool)

(assert (=> d!21905 (= (getValueByKey!138 lt!38996 (_1!1120 lt!38750)) (Some!143 (_2!1120 lt!38750)))))

(assert (=> d!21905 true))

(declare-fun _$22!415 () Unit!2445)

(assert (=> d!21905 (= (choose!495 lt!38996 (_1!1120 lt!38750) (_2!1120 lt!38750)) _$22!415)))

(declare-fun bs!3587 () Bool)

(assert (= bs!3587 d!21905))

(assert (=> bs!3587 m!85857))

(assert (=> d!20945 d!21905))

(declare-fun d!21907 () Bool)

(declare-fun res!43754 () Bool)

(declare-fun e!55334 () Bool)

(assert (=> d!21907 (=> res!43754 e!55334)))

(assert (=> d!21907 (= res!43754 (or ((_ is Nil!1544) lt!38996) ((_ is Nil!1544) (t!5251 lt!38996))))))

(assert (=> d!21907 (= (isStrictlySorted!292 lt!38996) e!55334)))

(declare-fun b!84848 () Bool)

(declare-fun e!55335 () Bool)

(assert (=> b!84848 (= e!55334 e!55335)))

(declare-fun res!43755 () Bool)

(assert (=> b!84848 (=> (not res!43755) (not e!55335))))

(assert (=> b!84848 (= res!43755 (bvslt (_1!1120 (h!2133 lt!38996)) (_1!1120 (h!2133 (t!5251 lt!38996)))))))

(declare-fun b!84849 () Bool)

(assert (=> b!84849 (= e!55335 (isStrictlySorted!292 (t!5251 lt!38996)))))

(assert (= (and d!21907 (not res!43754)) b!84848))

(assert (= (and b!84848 res!43755) b!84849))

(declare-fun m!88931 () Bool)

(assert (=> b!84849 m!88931))

(assert (=> d!20945 d!21907))

(assert (=> b!83614 d!21181))

(declare-fun d!21909 () Bool)

(declare-fun lt!39943 () Bool)

(assert (=> d!21909 (= lt!39943 (select (content!87 lt!39432) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))))))

(declare-fun e!55336 () Bool)

(assert (=> d!21909 (= lt!39943 e!55336)))

(declare-fun res!43756 () Bool)

(assert (=> d!21909 (=> (not res!43756) (not e!55336))))

(assert (=> d!21909 (= res!43756 ((_ is Cons!1543) lt!39432))))

(assert (=> d!21909 (= (contains!760 lt!39432 (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))) lt!39943)))

(declare-fun b!84850 () Bool)

(declare-fun e!55337 () Bool)

(assert (=> b!84850 (= e!55336 e!55337)))

(declare-fun res!43757 () Bool)

(assert (=> b!84850 (=> res!43757 e!55337)))

(assert (=> b!84850 (= res!43757 (= (h!2133 lt!39432) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))))))

(declare-fun b!84851 () Bool)

(assert (=> b!84851 (= e!55337 (contains!760 (t!5251 lt!39432) (tuple2!2221 (_1!1120 lt!38760) (_2!1120 lt!38760))))))

(assert (= (and d!21909 res!43756) b!84850))

(assert (= (and b!84850 (not res!43757)) b!84851))

(declare-fun m!88933 () Bool)

(assert (=> d!21909 m!88933))

(declare-fun m!88935 () Bool)

(assert (=> d!21909 m!88935))

(declare-fun m!88937 () Bool)

(assert (=> b!84851 m!88937))

(assert (=> b!83736 d!21909))

(declare-fun b!84853 () Bool)

(declare-fun e!55338 () Option!144)

(declare-fun e!55339 () Option!144)

(assert (=> b!84853 (= e!55338 e!55339)))

(declare-fun c!13730 () Bool)

(assert (=> b!84853 (= c!13730 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!39003))) (not (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!39003)))) (_1!1120 lt!38750)))))))

(declare-fun b!84852 () Bool)

(assert (=> b!84852 (= e!55338 (Some!143 (_2!1120 (h!2133 (t!5251 (toList!756 lt!39003))))))))

(declare-fun b!84855 () Bool)

(assert (=> b!84855 (= e!55339 None!142)))

(declare-fun d!21911 () Bool)

(declare-fun c!13729 () Bool)

(assert (=> d!21911 (= c!13729 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!39003))) (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!39003)))) (_1!1120 lt!38750))))))

(assert (=> d!21911 (= (getValueByKey!138 (t!5251 (toList!756 lt!39003)) (_1!1120 lt!38750)) e!55338)))

(declare-fun b!84854 () Bool)

(assert (=> b!84854 (= e!55339 (getValueByKey!138 (t!5251 (t!5251 (toList!756 lt!39003))) (_1!1120 lt!38750)))))

(assert (= (and d!21911 c!13729) b!84852))

(assert (= (and d!21911 (not c!13729)) b!84853))

(assert (= (and b!84853 c!13730) b!84854))

(assert (= (and b!84853 (not c!13730)) b!84855))

(declare-fun m!88939 () Bool)

(assert (=> b!84854 m!88939))

(assert (=> b!83457 d!21911))

(declare-fun d!21913 () Bool)

(assert (=> d!21913 (= (get!1209 (getValueByKey!138 (toList!756 lt!38978) lt!38984)) (v!2636 (getValueByKey!138 (toList!756 lt!38978) lt!38984)))))

(assert (=> d!21005 d!21913))

(declare-fun b!84857 () Bool)

(declare-fun e!55340 () Option!144)

(declare-fun e!55341 () Option!144)

(assert (=> b!84857 (= e!55340 e!55341)))

(declare-fun c!13732 () Bool)

(assert (=> b!84857 (= c!13732 (and ((_ is Cons!1543) (toList!756 lt!38978)) (not (= (_1!1120 (h!2133 (toList!756 lt!38978))) lt!38984))))))

(declare-fun b!84856 () Bool)

(assert (=> b!84856 (= e!55340 (Some!143 (_2!1120 (h!2133 (toList!756 lt!38978)))))))

(declare-fun b!84859 () Bool)

(assert (=> b!84859 (= e!55341 None!142)))

(declare-fun d!21915 () Bool)

(declare-fun c!13731 () Bool)

(assert (=> d!21915 (= c!13731 (and ((_ is Cons!1543) (toList!756 lt!38978)) (= (_1!1120 (h!2133 (toList!756 lt!38978))) lt!38984)))))

(assert (=> d!21915 (= (getValueByKey!138 (toList!756 lt!38978) lt!38984) e!55340)))

(declare-fun b!84858 () Bool)

(assert (=> b!84858 (= e!55341 (getValueByKey!138 (t!5251 (toList!756 lt!38978)) lt!38984))))

(assert (= (and d!21915 c!13731) b!84856))

(assert (= (and d!21915 (not c!13731)) b!84857))

(assert (= (and b!84857 c!13732) b!84858))

(assert (= (and b!84857 (not c!13732)) b!84859))

(declare-fun m!88941 () Bool)

(assert (=> b!84858 m!88941))

(assert (=> d!21005 d!21915))

(declare-fun d!21917 () Bool)

(assert (=> d!21917 (isDefined!92 (getValueByKey!138 (toList!756 lt!39033) (_1!1120 lt!38760)))))

(declare-fun lt!39944 () Unit!2445)

(assert (=> d!21917 (= lt!39944 (choose!496 (toList!756 lt!39033) (_1!1120 lt!38760)))))

(declare-fun e!55342 () Bool)

(assert (=> d!21917 e!55342))

(declare-fun res!43758 () Bool)

(assert (=> d!21917 (=> (not res!43758) (not e!55342))))

(assert (=> d!21917 (= res!43758 (isStrictlySorted!292 (toList!756 lt!39033)))))

(assert (=> d!21917 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39033) (_1!1120 lt!38760)) lt!39944)))

(declare-fun b!84860 () Bool)

(assert (=> b!84860 (= e!55342 (containsKey!142 (toList!756 lt!39033) (_1!1120 lt!38760)))))

(assert (= (and d!21917 res!43758) b!84860))

(assert (=> d!21917 m!85929))

(assert (=> d!21917 m!85929))

(assert (=> d!21917 m!86253))

(declare-fun m!88943 () Bool)

(assert (=> d!21917 m!88943))

(declare-fun m!88945 () Bool)

(assert (=> d!21917 m!88945))

(assert (=> b!84860 m!86249))

(assert (=> b!83385 d!21917))

(assert (=> b!83385 d!21175))

(assert (=> b!83385 d!21123))

(declare-fun b!84862 () Bool)

(declare-fun e!55343 () Option!144)

(declare-fun e!55344 () Option!144)

(assert (=> b!84862 (= e!55343 e!55344)))

(declare-fun c!13734 () Bool)

(assert (=> b!84862 (= c!13734 (and ((_ is Cons!1543) (toList!756 lt!39426)) (not (= (_1!1120 (h!2133 (toList!756 lt!39426))) (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))))

(declare-fun b!84861 () Bool)

(assert (=> b!84861 (= e!55343 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39426)))))))

(declare-fun b!84864 () Bool)

(assert (=> b!84864 (= e!55344 None!142)))

(declare-fun c!13733 () Bool)

(declare-fun d!21919 () Bool)

(assert (=> d!21919 (= c!13733 (and ((_ is Cons!1543) (toList!756 lt!39426)) (= (_1!1120 (h!2133 (toList!756 lt!39426))) (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(assert (=> d!21919 (= (getValueByKey!138 (toList!756 lt!39426) (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) e!55343)))

(declare-fun b!84863 () Bool)

(assert (=> b!84863 (= e!55344 (getValueByKey!138 (t!5251 (toList!756 lt!39426)) (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (= (and d!21919 c!13733) b!84861))

(assert (= (and d!21919 (not c!13733)) b!84862))

(assert (= (and b!84862 c!13734) b!84863))

(assert (= (and b!84862 (not c!13734)) b!84864))

(declare-fun m!88947 () Bool)

(assert (=> b!84863 m!88947))

(assert (=> b!83720 d!21919))

(declare-fun d!21921 () Bool)

(assert (=> d!21921 (= (apply!81 lt!39363 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) (get!1209 (getValueByKey!138 (toList!756 lt!39363) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3588 () Bool)

(assert (= bs!3588 d!21921))

(assert (=> bs!3588 m!86049))

(assert (=> bs!3588 m!87527))

(assert (=> bs!3588 m!87527))

(declare-fun m!88949 () Bool)

(assert (=> bs!3588 m!88949))

(assert (=> b!83609 d!21921))

(declare-fun d!21923 () Bool)

(declare-fun c!13735 () Bool)

(assert (=> d!21923 (= c!13735 ((_ is ValueCellFull!921) (select (arr!1913 (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887)) #b00000000000000000000000000000000)))))

(declare-fun e!55345 () V!3019)

(assert (=> d!21923 (= (get!1206 (select (arr!1913 (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887)) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!55345)))

(declare-fun b!84865 () Bool)

(assert (=> b!84865 (= e!55345 (get!1207 (select (arr!1913 (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887)) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84866 () Bool)

(assert (=> b!84866 (= e!55345 (get!1208 (select (arr!1913 (ite (or c!13216 c!13219) (_values!2300 newMap!16) lt!38887)) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21923 c!13735) b!84865))

(assert (= (and d!21923 (not c!13735)) b!84866))

(assert (=> b!84865 m!86703))

(assert (=> b!84865 m!86089))

(declare-fun m!88951 () Bool)

(assert (=> b!84865 m!88951))

(assert (=> b!84866 m!86703))

(assert (=> b!84866 m!86089))

(declare-fun m!88953 () Bool)

(assert (=> b!84866 m!88953))

(assert (=> b!83609 d!21923))

(declare-fun d!21925 () Bool)

(declare-fun res!43759 () Bool)

(declare-fun e!55346 () Bool)

(assert (=> d!21925 (=> res!43759 e!55346)))

(assert (=> d!21925 (= res!43759 (or ((_ is Nil!1544) lt!39205) ((_ is Nil!1544) (t!5251 lt!39205))))))

(assert (=> d!21925 (= (isStrictlySorted!292 lt!39205) e!55346)))

(declare-fun b!84867 () Bool)

(declare-fun e!55347 () Bool)

(assert (=> b!84867 (= e!55346 e!55347)))

(declare-fun res!43760 () Bool)

(assert (=> b!84867 (=> (not res!43760) (not e!55347))))

(assert (=> b!84867 (= res!43760 (bvslt (_1!1120 (h!2133 lt!39205)) (_1!1120 (h!2133 (t!5251 lt!39205)))))))

(declare-fun b!84868 () Bool)

(assert (=> b!84868 (= e!55347 (isStrictlySorted!292 (t!5251 lt!39205)))))

(assert (= (and d!21925 (not res!43759)) b!84867))

(assert (= (and b!84867 res!43760) b!84868))

(declare-fun m!88955 () Bool)

(assert (=> b!84868 m!88955))

(assert (=> d!20939 d!21925))

(assert (=> d!20939 d!21543))

(declare-fun d!21927 () Bool)

(assert (=> d!21927 (isDefined!92 (getValueByKey!138 (toList!756 lt!38974) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!39945 () Unit!2445)

(assert (=> d!21927 (= lt!39945 (choose!496 (toList!756 lt!38974) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55348 () Bool)

(assert (=> d!21927 e!55348))

(declare-fun res!43761 () Bool)

(assert (=> d!21927 (=> (not res!43761) (not e!55348))))

(assert (=> d!21927 (= res!43761 (isStrictlySorted!292 (toList!756 lt!38974)))))

(assert (=> d!21927 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!38974) #b1000000000000000000000000000000000000000000000000000000000000000) lt!39945)))

(declare-fun b!84869 () Bool)

(assert (=> b!84869 (= e!55348 (containsKey!142 (toList!756 lt!38974) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21927 res!43761) b!84869))

(assert (=> d!21927 m!86589))

(assert (=> d!21927 m!86589))

(assert (=> d!21927 m!86591))

(declare-fun m!88957 () Bool)

(assert (=> d!21927 m!88957))

(assert (=> d!21927 m!87733))

(assert (=> b!84869 m!86585))

(assert (=> b!83576 d!21927))

(assert (=> b!83576 d!21223))

(assert (=> b!83576 d!21225))

(declare-fun d!21929 () Bool)

(assert (=> d!21929 (= (inRange!0 (index!3145 lt!39350) (mask!6335 newMap!16)) (and (bvsge (index!3145 lt!39350) #b00000000000000000000000000000000) (bvslt (index!3145 lt!39350) (bvadd (mask!6335 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!83594 d!21929))

(assert (=> b!83246 d!21181))

(declare-fun d!21931 () Bool)

(declare-fun e!55349 () Bool)

(assert (=> d!21931 e!55349))

(declare-fun res!43762 () Bool)

(assert (=> d!21931 (=> res!43762 e!55349)))

(declare-fun lt!39946 () Bool)

(assert (=> d!21931 (= res!43762 (not lt!39946))))

(declare-fun lt!39948 () Bool)

(assert (=> d!21931 (= lt!39946 lt!39948)))

(declare-fun lt!39949 () Unit!2445)

(declare-fun e!55350 () Unit!2445)

(assert (=> d!21931 (= lt!39949 e!55350)))

(declare-fun c!13736 () Bool)

(assert (=> d!21931 (= c!13736 lt!39948)))

(assert (=> d!21931 (= lt!39948 (containsKey!142 (toList!756 lt!39426) (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> d!21931 (= (contains!757 lt!39426 (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) lt!39946)))

(declare-fun b!84870 () Bool)

(declare-fun lt!39947 () Unit!2445)

(assert (=> b!84870 (= e!55350 lt!39947)))

(assert (=> b!84870 (= lt!39947 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39426) (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (=> b!84870 (isDefined!92 (getValueByKey!138 (toList!756 lt!39426) (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun b!84871 () Bool)

(declare-fun Unit!2520 () Unit!2445)

(assert (=> b!84871 (= e!55350 Unit!2520)))

(declare-fun b!84872 () Bool)

(assert (=> b!84872 (= e!55349 (isDefined!92 (getValueByKey!138 (toList!756 lt!39426) (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(assert (= (and d!21931 c!13736) b!84870))

(assert (= (and d!21931 (not c!13736)) b!84871))

(assert (= (and d!21931 (not res!43762)) b!84872))

(declare-fun m!88959 () Bool)

(assert (=> d!21931 m!88959))

(declare-fun m!88961 () Bool)

(assert (=> b!84870 m!88961))

(assert (=> b!84870 m!86895))

(assert (=> b!84870 m!86895))

(declare-fun m!88963 () Bool)

(assert (=> b!84870 m!88963))

(assert (=> b!84872 m!86895))

(assert (=> b!84872 m!86895))

(assert (=> b!84872 m!88963))

(assert (=> d!21133 d!21931))

(declare-fun b!84874 () Bool)

(declare-fun e!55351 () Option!144)

(declare-fun e!55352 () Option!144)

(assert (=> b!84874 (= e!55351 e!55352)))

(declare-fun c!13738 () Bool)

(assert (=> b!84874 (= c!13738 (and ((_ is Cons!1543) lt!39423) (not (= (_1!1120 (h!2133 lt!39423)) (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))))

(declare-fun b!84873 () Bool)

(assert (=> b!84873 (= e!55351 (Some!143 (_2!1120 (h!2133 lt!39423))))))

(declare-fun b!84876 () Bool)

(assert (=> b!84876 (= e!55352 None!142)))

(declare-fun d!21933 () Bool)

(declare-fun c!13737 () Bool)

(assert (=> d!21933 (= c!13737 (and ((_ is Cons!1543) lt!39423) (= (_1!1120 (h!2133 lt!39423)) (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(assert (=> d!21933 (= (getValueByKey!138 lt!39423 (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) e!55351)))

(declare-fun b!84875 () Bool)

(assert (=> b!84875 (= e!55352 (getValueByKey!138 (t!5251 lt!39423) (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(assert (= (and d!21933 c!13737) b!84873))

(assert (= (and d!21933 (not c!13737)) b!84874))

(assert (= (and b!84874 c!13738) b!84875))

(assert (= (and b!84874 (not c!13738)) b!84876))

(declare-fun m!88965 () Bool)

(assert (=> b!84875 m!88965))

(assert (=> d!21133 d!21933))

(declare-fun d!21935 () Bool)

(assert (=> d!21935 (= (getValueByKey!138 lt!39423 (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) (Some!143 (_2!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun lt!39950 () Unit!2445)

(assert (=> d!21935 (= lt!39950 (choose!495 lt!39423 (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (_2!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun e!55353 () Bool)

(assert (=> d!21935 e!55353))

(declare-fun res!43763 () Bool)

(assert (=> d!21935 (=> (not res!43763) (not e!55353))))

(assert (=> d!21935 (= res!43763 (isStrictlySorted!292 lt!39423))))

(assert (=> d!21935 (= (lemmaContainsTupThenGetReturnValue!57 lt!39423 (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (_2!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) lt!39950)))

(declare-fun b!84877 () Bool)

(declare-fun res!43764 () Bool)

(assert (=> b!84877 (=> (not res!43764) (not e!55353))))

(assert (=> b!84877 (= res!43764 (containsKey!142 lt!39423 (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun b!84878 () Bool)

(assert (=> b!84878 (= e!55353 (contains!760 lt!39423 (tuple2!2221 (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (_2!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(assert (= (and d!21935 res!43763) b!84877))

(assert (= (and b!84877 res!43764) b!84878))

(assert (=> d!21935 m!86889))

(declare-fun m!88967 () Bool)

(assert (=> d!21935 m!88967))

(declare-fun m!88969 () Bool)

(assert (=> d!21935 m!88969))

(declare-fun m!88971 () Bool)

(assert (=> b!84877 m!88971))

(declare-fun m!88973 () Bool)

(assert (=> b!84878 m!88973))

(assert (=> d!21133 d!21935))

(declare-fun bm!7992 () Bool)

(declare-fun call!7996 () List!1547)

(declare-fun call!7995 () List!1547)

(assert (=> bm!7992 (= call!7996 call!7995)))

(declare-fun b!84879 () Bool)

(declare-fun e!55357 () List!1547)

(assert (=> b!84879 (= e!55357 call!7996)))

(declare-fun b!84880 () Bool)

(declare-fun e!55356 () List!1547)

(declare-fun call!7997 () List!1547)

(assert (=> b!84880 (= e!55356 call!7997)))

(declare-fun b!84881 () Bool)

(declare-fun e!55355 () List!1547)

(assert (=> b!84881 (= e!55355 (insertStrictlySorted!59 (t!5251 (toList!756 e!54230)) (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (_2!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun b!84882 () Bool)

(assert (=> b!84882 (= e!55356 call!7997)))

(declare-fun b!84883 () Bool)

(declare-fun res!43765 () Bool)

(declare-fun e!55358 () Bool)

(assert (=> b!84883 (=> (not res!43765) (not e!55358))))

(declare-fun lt!39951 () List!1547)

(assert (=> b!84883 (= res!43765 (containsKey!142 lt!39951 (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))

(declare-fun d!21937 () Bool)

(assert (=> d!21937 e!55358))

(declare-fun res!43766 () Bool)

(assert (=> d!21937 (=> (not res!43766) (not e!55358))))

(assert (=> d!21937 (= res!43766 (isStrictlySorted!292 lt!39951))))

(declare-fun e!55354 () List!1547)

(assert (=> d!21937 (= lt!39951 e!55354)))

(declare-fun c!13740 () Bool)

(assert (=> d!21937 (= c!13740 (and ((_ is Cons!1543) (toList!756 e!54230)) (bvslt (_1!1120 (h!2133 (toList!756 e!54230))) (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(assert (=> d!21937 (isStrictlySorted!292 (toList!756 e!54230))))

(assert (=> d!21937 (= (insertStrictlySorted!59 (toList!756 e!54230) (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (_2!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) lt!39951)))

(declare-fun b!84884 () Bool)

(assert (=> b!84884 (= e!55358 (contains!760 lt!39951 (tuple2!2221 (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (_2!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(declare-fun b!84885 () Bool)

(assert (=> b!84885 (= e!55354 e!55357)))

(declare-fun c!13739 () Bool)

(assert (=> b!84885 (= c!13739 (and ((_ is Cons!1543) (toList!756 e!54230)) (= (_1!1120 (h!2133 (toList!756 e!54230))) (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(declare-fun c!13742 () Bool)

(declare-fun b!84886 () Bool)

(assert (=> b!84886 (= e!55355 (ite c!13739 (t!5251 (toList!756 e!54230)) (ite c!13742 (Cons!1543 (h!2133 (toList!756 e!54230)) (t!5251 (toList!756 e!54230))) Nil!1544)))))

(declare-fun b!84887 () Bool)

(assert (=> b!84887 (= c!13742 (and ((_ is Cons!1543) (toList!756 e!54230)) (bvsgt (_1!1120 (h!2133 (toList!756 e!54230))) (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))))

(assert (=> b!84887 (= e!55357 e!55356)))

(declare-fun bm!7993 () Bool)

(assert (=> bm!7993 (= call!7995 ($colon$colon!70 e!55355 (ite c!13740 (h!2133 (toList!756 e!54230)) (tuple2!2221 (_1!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (_2!1120 (ite c!13216 (ite c!13218 (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38748) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38748)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))))))))

(declare-fun c!13741 () Bool)

(assert (=> bm!7993 (= c!13741 c!13740)))

(declare-fun b!84888 () Bool)

(assert (=> b!84888 (= e!55354 call!7995)))

(declare-fun bm!7994 () Bool)

(assert (=> bm!7994 (= call!7997 call!7996)))

(assert (= (and d!21937 c!13740) b!84888))

(assert (= (and d!21937 (not c!13740)) b!84885))

(assert (= (and b!84885 c!13739) b!84879))

(assert (= (and b!84885 (not c!13739)) b!84887))

(assert (= (and b!84887 c!13742) b!84882))

(assert (= (and b!84887 (not c!13742)) b!84880))

(assert (= (or b!84882 b!84880) bm!7994))

(assert (= (or b!84879 bm!7994) bm!7992))

(assert (= (or b!84888 bm!7992) bm!7993))

(assert (= (and bm!7993 c!13741) b!84881))

(assert (= (and bm!7993 (not c!13741)) b!84886))

(assert (= (and d!21937 res!43766) b!84883))

(assert (= (and b!84883 res!43765) b!84884))

(declare-fun m!88975 () Bool)

(assert (=> d!21937 m!88975))

(declare-fun m!88977 () Bool)

(assert (=> d!21937 m!88977))

(declare-fun m!88979 () Bool)

(assert (=> b!84881 m!88979))

(declare-fun m!88981 () Bool)

(assert (=> b!84884 m!88981))

(declare-fun m!88983 () Bool)

(assert (=> bm!7993 m!88983))

(declare-fun m!88985 () Bool)

(assert (=> b!84883 m!88985))

(assert (=> d!21133 d!21937))

(assert (=> d!21061 d!21065))

(assert (=> d!21061 d!21063))

(assert (=> d!21061 d!21069))

(assert (=> d!21061 d!21067))

(assert (=> b!83317 d!21143))

(declare-fun d!21939 () Bool)

(declare-fun res!43767 () Bool)

(declare-fun e!55359 () Bool)

(assert (=> d!21939 (=> res!43767 e!55359)))

(assert (=> d!21939 (= res!43767 (and ((_ is Cons!1543) lt!39217) (= (_1!1120 (h!2133 lt!39217)) (_1!1120 lt!38760))))))

(assert (=> d!21939 (= (containsKey!142 lt!39217 (_1!1120 lt!38760)) e!55359)))

(declare-fun b!84889 () Bool)

(declare-fun e!55360 () Bool)

(assert (=> b!84889 (= e!55359 e!55360)))

(declare-fun res!43768 () Bool)

(assert (=> b!84889 (=> (not res!43768) (not e!55360))))

(assert (=> b!84889 (= res!43768 (and (or (not ((_ is Cons!1543) lt!39217)) (bvsle (_1!1120 (h!2133 lt!39217)) (_1!1120 lt!38760))) ((_ is Cons!1543) lt!39217) (bvslt (_1!1120 (h!2133 lt!39217)) (_1!1120 lt!38760))))))

(declare-fun b!84890 () Bool)

(assert (=> b!84890 (= e!55360 (containsKey!142 (t!5251 lt!39217) (_1!1120 lt!38760)))))

(assert (= (and d!21939 (not res!43767)) b!84889))

(assert (= (and b!84889 res!43768) b!84890))

(declare-fun m!88987 () Bool)

(assert (=> b!84890 m!88987))

(assert (=> b!83398 d!21939))

(declare-fun d!21941 () Bool)

(declare-fun e!55361 () Bool)

(assert (=> d!21941 e!55361))

(declare-fun res!43769 () Bool)

(assert (=> d!21941 (=> res!43769 e!55361)))

(declare-fun lt!39952 () Bool)

(assert (=> d!21941 (= res!43769 (not lt!39952))))

(declare-fun lt!39954 () Bool)

(assert (=> d!21941 (= lt!39952 lt!39954)))

(declare-fun lt!39955 () Unit!2445)

(declare-fun e!55362 () Unit!2445)

(assert (=> d!21941 (= lt!39955 e!55362)))

(declare-fun c!13743 () Bool)

(assert (=> d!21941 (= c!13743 lt!39954)))

(assert (=> d!21941 (= lt!39954 (containsKey!142 (toList!756 lt!39251) (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21941 (= (contains!757 lt!39251 (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39952)))

(declare-fun b!84891 () Bool)

(declare-fun lt!39953 () Unit!2445)

(assert (=> b!84891 (= e!55362 lt!39953)))

(assert (=> b!84891 (= lt!39953 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39251) (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> b!84891 (isDefined!92 (getValueByKey!138 (toList!756 lt!39251) (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84892 () Bool)

(declare-fun Unit!2521 () Unit!2445)

(assert (=> b!84892 (= e!55362 Unit!2521)))

(declare-fun b!84893 () Bool)

(assert (=> b!84893 (= e!55361 (isDefined!92 (getValueByKey!138 (toList!756 lt!39251) (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!21941 c!13743) b!84891))

(assert (= (and d!21941 (not c!13743)) b!84892))

(assert (= (and d!21941 (not res!43769)) b!84893))

(declare-fun m!88989 () Bool)

(assert (=> d!21941 m!88989))

(declare-fun m!88991 () Bool)

(assert (=> b!84891 m!88991))

(assert (=> b!84891 m!86401))

(assert (=> b!84891 m!86401))

(declare-fun m!88993 () Bool)

(assert (=> b!84891 m!88993))

(assert (=> b!84893 m!86401))

(assert (=> b!84893 m!86401))

(assert (=> b!84893 m!88993))

(assert (=> d!21007 d!21941))

(declare-fun b!84895 () Bool)

(declare-fun e!55363 () Option!144)

(declare-fun e!55364 () Option!144)

(assert (=> b!84895 (= e!55363 e!55364)))

(declare-fun c!13745 () Bool)

(assert (=> b!84895 (= c!13745 (and ((_ is Cons!1543) lt!39248) (not (= (_1!1120 (h!2133 lt!39248)) (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!84894 () Bool)

(assert (=> b!84894 (= e!55363 (Some!143 (_2!1120 (h!2133 lt!39248))))))

(declare-fun b!84897 () Bool)

(assert (=> b!84897 (= e!55364 None!142)))

(declare-fun c!13744 () Bool)

(declare-fun d!21943 () Bool)

(assert (=> d!21943 (= c!13744 (and ((_ is Cons!1543) lt!39248) (= (_1!1120 (h!2133 lt!39248)) (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21943 (= (getValueByKey!138 lt!39248 (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) e!55363)))

(declare-fun b!84896 () Bool)

(assert (=> b!84896 (= e!55364 (getValueByKey!138 (t!5251 lt!39248) (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21943 c!13744) b!84894))

(assert (= (and d!21943 (not c!13744)) b!84895))

(assert (= (and b!84895 c!13745) b!84896))

(assert (= (and b!84895 (not c!13745)) b!84897))

(declare-fun m!88995 () Bool)

(assert (=> b!84896 m!88995))

(assert (=> d!21007 d!21943))

(declare-fun d!21945 () Bool)

(assert (=> d!21945 (= (getValueByKey!138 lt!39248 (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun lt!39956 () Unit!2445)

(assert (=> d!21945 (= lt!39956 (choose!495 lt!39248 (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun e!55365 () Bool)

(assert (=> d!21945 e!55365))

(declare-fun res!43770 () Bool)

(assert (=> d!21945 (=> (not res!43770) (not e!55365))))

(assert (=> d!21945 (= res!43770 (isStrictlySorted!292 lt!39248))))

(assert (=> d!21945 (= (lemmaContainsTupThenGetReturnValue!57 lt!39248 (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39956)))

(declare-fun b!84898 () Bool)

(declare-fun res!43771 () Bool)

(assert (=> b!84898 (=> (not res!43771) (not e!55365))))

(assert (=> b!84898 (= res!43771 (containsKey!142 lt!39248 (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84899 () Bool)

(assert (=> b!84899 (= e!55365 (contains!760 lt!39248 (tuple2!2221 (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!21945 res!43770) b!84898))

(assert (= (and b!84898 res!43771) b!84899))

(assert (=> d!21945 m!86395))

(declare-fun m!88997 () Bool)

(assert (=> d!21945 m!88997))

(declare-fun m!88999 () Bool)

(assert (=> d!21945 m!88999))

(declare-fun m!89001 () Bool)

(assert (=> b!84898 m!89001))

(declare-fun m!89003 () Bool)

(assert (=> b!84899 m!89003))

(assert (=> d!21007 d!21945))

(declare-fun bm!7995 () Bool)

(declare-fun call!7999 () List!1547)

(declare-fun call!7998 () List!1547)

(assert (=> bm!7995 (= call!7999 call!7998)))

(declare-fun b!84900 () Bool)

(declare-fun e!55369 () List!1547)

(assert (=> b!84900 (= e!55369 call!7999)))

(declare-fun b!84901 () Bool)

(declare-fun e!55368 () List!1547)

(declare-fun call!8000 () List!1547)

(assert (=> b!84901 (= e!55368 call!8000)))

(declare-fun e!55367 () List!1547)

(declare-fun b!84902 () Bool)

(assert (=> b!84902 (= e!55367 (insertStrictlySorted!59 (t!5251 (toList!756 lt!38967)) (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84903 () Bool)

(assert (=> b!84903 (= e!55368 call!8000)))

(declare-fun b!84904 () Bool)

(declare-fun res!43772 () Bool)

(declare-fun e!55370 () Bool)

(assert (=> b!84904 (=> (not res!43772) (not e!55370))))

(declare-fun lt!39957 () List!1547)

(assert (=> b!84904 (= res!43772 (containsKey!142 lt!39957 (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun d!21947 () Bool)

(assert (=> d!21947 e!55370))

(declare-fun res!43773 () Bool)

(assert (=> d!21947 (=> (not res!43773) (not e!55370))))

(assert (=> d!21947 (= res!43773 (isStrictlySorted!292 lt!39957))))

(declare-fun e!55366 () List!1547)

(assert (=> d!21947 (= lt!39957 e!55366)))

(declare-fun c!13747 () Bool)

(assert (=> d!21947 (= c!13747 (and ((_ is Cons!1543) (toList!756 lt!38967)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38967))) (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21947 (isStrictlySorted!292 (toList!756 lt!38967))))

(assert (=> d!21947 (= (insertStrictlySorted!59 (toList!756 lt!38967) (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39957)))

(declare-fun b!84905 () Bool)

(assert (=> b!84905 (= e!55370 (contains!760 lt!39957 (tuple2!2221 (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!84906 () Bool)

(assert (=> b!84906 (= e!55366 e!55369)))

(declare-fun c!13746 () Bool)

(assert (=> b!84906 (= c!13746 (and ((_ is Cons!1543) (toList!756 lt!38967)) (= (_1!1120 (h!2133 (toList!756 lt!38967))) (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!84907 () Bool)

(declare-fun c!13749 () Bool)

(assert (=> b!84907 (= e!55367 (ite c!13746 (t!5251 (toList!756 lt!38967)) (ite c!13749 (Cons!1543 (h!2133 (toList!756 lt!38967)) (t!5251 (toList!756 lt!38967))) Nil!1544)))))

(declare-fun b!84908 () Bool)

(assert (=> b!84908 (= c!13749 (and ((_ is Cons!1543) (toList!756 lt!38967)) (bvsgt (_1!1120 (h!2133 (toList!756 lt!38967))) (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> b!84908 (= e!55369 e!55368)))

(declare-fun bm!7996 () Bool)

(assert (=> bm!7996 (= call!7998 ($colon$colon!70 e!55367 (ite c!13747 (h!2133 (toList!756 lt!38967)) (tuple2!2221 (_1!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun c!13748 () Bool)

(assert (=> bm!7996 (= c!13748 c!13747)))

(declare-fun b!84909 () Bool)

(assert (=> b!84909 (= e!55366 call!7998)))

(declare-fun bm!7997 () Bool)

(assert (=> bm!7997 (= call!8000 call!7999)))

(assert (= (and d!21947 c!13747) b!84909))

(assert (= (and d!21947 (not c!13747)) b!84906))

(assert (= (and b!84906 c!13746) b!84900))

(assert (= (and b!84906 (not c!13746)) b!84908))

(assert (= (and b!84908 c!13749) b!84903))

(assert (= (and b!84908 (not c!13749)) b!84901))

(assert (= (or b!84903 b!84901) bm!7997))

(assert (= (or b!84900 bm!7997) bm!7995))

(assert (= (or b!84909 bm!7995) bm!7996))

(assert (= (and bm!7996 c!13748) b!84902))

(assert (= (and bm!7996 (not c!13748)) b!84907))

(assert (= (and d!21947 res!43773) b!84904))

(assert (= (and b!84904 res!43772) b!84905))

(declare-fun m!89005 () Bool)

(assert (=> d!21947 m!89005))

(declare-fun m!89007 () Bool)

(assert (=> d!21947 m!89007))

(declare-fun m!89009 () Bool)

(assert (=> b!84902 m!89009))

(declare-fun m!89011 () Bool)

(assert (=> b!84905 m!89011))

(declare-fun m!89013 () Bool)

(assert (=> bm!7996 m!89013))

(declare-fun m!89015 () Bool)

(assert (=> b!84904 m!89015))

(assert (=> d!21007 d!21947))

(declare-fun b!84911 () Bool)

(declare-fun e!55371 () Option!144)

(declare-fun e!55372 () Option!144)

(assert (=> b!84911 (= e!55371 e!55372)))

(declare-fun c!13751 () Bool)

(assert (=> b!84911 (= c!13751 (and ((_ is Cons!1543) (toList!756 lt!39057)) (not (= (_1!1120 (h!2133 (toList!756 lt!39057))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!84910 () Bool)

(assert (=> b!84910 (= e!55371 (Some!143 (_2!1120 (h!2133 (toList!756 lt!39057)))))))

(declare-fun b!84913 () Bool)

(assert (=> b!84913 (= e!55372 None!142)))

(declare-fun d!21949 () Bool)

(declare-fun c!13750 () Bool)

(assert (=> d!21949 (= c!13750 (and ((_ is Cons!1543) (toList!756 lt!39057)) (= (_1!1120 (h!2133 (toList!756 lt!39057))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21949 (= (getValueByKey!138 (toList!756 lt!39057) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) e!55371)))

(declare-fun b!84912 () Bool)

(assert (=> b!84912 (= e!55372 (getValueByKey!138 (t!5251 (toList!756 lt!39057)) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21949 c!13750) b!84910))

(assert (= (and d!21949 (not c!13750)) b!84911))

(assert (= (and b!84911 c!13751) b!84912))

(assert (= (and b!84911 (not c!13751)) b!84913))

(declare-fun m!89017 () Bool)

(assert (=> b!84912 m!89017))

(assert (=> b!83215 d!21949))

(declare-fun d!21951 () Bool)

(declare-fun res!43774 () Bool)

(declare-fun e!55373 () Bool)

(assert (=> d!21951 (=> res!43774 e!55373)))

(assert (=> d!21951 (= res!43774 (and ((_ is Cons!1543) lt!39205) (= (_1!1120 (h!2133 lt!39205)) (_1!1120 lt!38750))))))

(assert (=> d!21951 (= (containsKey!142 lt!39205 (_1!1120 lt!38750)) e!55373)))

(declare-fun b!84914 () Bool)

(declare-fun e!55374 () Bool)

(assert (=> b!84914 (= e!55373 e!55374)))

(declare-fun res!43775 () Bool)

(assert (=> b!84914 (=> (not res!43775) (not e!55374))))

(assert (=> b!84914 (= res!43775 (and (or (not ((_ is Cons!1543) lt!39205)) (bvsle (_1!1120 (h!2133 lt!39205)) (_1!1120 lt!38750))) ((_ is Cons!1543) lt!39205) (bvslt (_1!1120 (h!2133 lt!39205)) (_1!1120 lt!38750))))))

(declare-fun b!84915 () Bool)

(assert (=> b!84915 (= e!55374 (containsKey!142 (t!5251 lt!39205) (_1!1120 lt!38750)))))

(assert (= (and d!21951 (not res!43774)) b!84914))

(assert (= (and b!84914 res!43775) b!84915))

(declare-fun m!89019 () Bool)

(assert (=> b!84915 m!89019))

(assert (=> b!83360 d!21951))

(declare-fun d!21953 () Bool)

(declare-fun e!55375 () Bool)

(assert (=> d!21953 e!55375))

(declare-fun res!43776 () Bool)

(assert (=> d!21953 (=> res!43776 e!55375)))

(declare-fun lt!39958 () Bool)

(assert (=> d!21953 (= res!43776 (not lt!39958))))

(declare-fun lt!39960 () Bool)

(assert (=> d!21953 (= lt!39958 lt!39960)))

(declare-fun lt!39961 () Unit!2445)

(declare-fun e!55376 () Unit!2445)

(assert (=> d!21953 (= lt!39961 e!55376)))

(declare-fun c!13752 () Bool)

(assert (=> d!21953 (= c!13752 lt!39960)))

(assert (=> d!21953 (= lt!39960 (containsKey!142 (toList!756 lt!39262) (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!21953 (= (contains!757 lt!39262 (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39958)))

(declare-fun b!84916 () Bool)

(declare-fun lt!39959 () Unit!2445)

(assert (=> b!84916 (= e!55376 lt!39959)))

(assert (=> b!84916 (= lt!39959 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39262) (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> b!84916 (isDefined!92 (getValueByKey!138 (toList!756 lt!39262) (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84917 () Bool)

(declare-fun Unit!2522 () Unit!2445)

(assert (=> b!84917 (= e!55376 Unit!2522)))

(declare-fun b!84918 () Bool)

(assert (=> b!84918 (= e!55375 (isDefined!92 (getValueByKey!138 (toList!756 lt!39262) (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!21953 c!13752) b!84916))

(assert (= (and d!21953 (not c!13752)) b!84917))

(assert (= (and d!21953 (not res!43776)) b!84918))

(declare-fun m!89021 () Bool)

(assert (=> d!21953 m!89021))

(declare-fun m!89023 () Bool)

(assert (=> b!84916 m!89023))

(assert (=> b!84916 m!86429))

(assert (=> b!84916 m!86429))

(declare-fun m!89025 () Bool)

(assert (=> b!84916 m!89025))

(assert (=> b!84918 m!86429))

(assert (=> b!84918 m!86429))

(assert (=> b!84918 m!89025))

(assert (=> d!21015 d!21953))

(declare-fun b!84920 () Bool)

(declare-fun e!55377 () Option!144)

(declare-fun e!55378 () Option!144)

(assert (=> b!84920 (= e!55377 e!55378)))

(declare-fun c!13754 () Bool)

(assert (=> b!84920 (= c!13754 (and ((_ is Cons!1543) lt!39259) (not (= (_1!1120 (h!2133 lt!39259)) (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!84919 () Bool)

(assert (=> b!84919 (= e!55377 (Some!143 (_2!1120 (h!2133 lt!39259))))))

(declare-fun b!84922 () Bool)

(assert (=> b!84922 (= e!55378 None!142)))

(declare-fun c!13753 () Bool)

(declare-fun d!21955 () Bool)

(assert (=> d!21955 (= c!13753 (and ((_ is Cons!1543) lt!39259) (= (_1!1120 (h!2133 lt!39259)) (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21955 (= (getValueByKey!138 lt!39259 (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) e!55377)))

(declare-fun b!84921 () Bool)

(assert (=> b!84921 (= e!55378 (getValueByKey!138 (t!5251 lt!39259) (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!21955 c!13753) b!84919))

(assert (= (and d!21955 (not c!13753)) b!84920))

(assert (= (and b!84920 c!13754) b!84921))

(assert (= (and b!84920 (not c!13754)) b!84922))

(declare-fun m!89027 () Bool)

(assert (=> b!84921 m!89027))

(assert (=> d!21015 d!21955))

(declare-fun d!21957 () Bool)

(assert (=> d!21957 (= (getValueByKey!138 lt!39259 (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun lt!39962 () Unit!2445)

(assert (=> d!21957 (= lt!39962 (choose!495 lt!39259 (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun e!55379 () Bool)

(assert (=> d!21957 e!55379))

(declare-fun res!43777 () Bool)

(assert (=> d!21957 (=> (not res!43777) (not e!55379))))

(assert (=> d!21957 (= res!43777 (isStrictlySorted!292 lt!39259))))

(assert (=> d!21957 (= (lemmaContainsTupThenGetReturnValue!57 lt!39259 (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39962)))

(declare-fun b!84923 () Bool)

(declare-fun res!43778 () Bool)

(assert (=> b!84923 (=> (not res!43778) (not e!55379))))

(assert (=> b!84923 (= res!43778 (containsKey!142 lt!39259 (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84924 () Bool)

(assert (=> b!84924 (= e!55379 (contains!760 lt!39259 (tuple2!2221 (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!21957 res!43777) b!84923))

(assert (= (and b!84923 res!43778) b!84924))

(assert (=> d!21957 m!86423))

(declare-fun m!89029 () Bool)

(assert (=> d!21957 m!89029))

(declare-fun m!89031 () Bool)

(assert (=> d!21957 m!89031))

(declare-fun m!89033 () Bool)

(assert (=> b!84923 m!89033))

(declare-fun m!89035 () Bool)

(assert (=> b!84924 m!89035))

(assert (=> d!21015 d!21957))

(declare-fun bm!7998 () Bool)

(declare-fun call!8002 () List!1547)

(declare-fun call!8001 () List!1547)

(assert (=> bm!7998 (= call!8002 call!8001)))

(declare-fun b!84925 () Bool)

(declare-fun e!55383 () List!1547)

(assert (=> b!84925 (= e!55383 call!8002)))

(declare-fun b!84926 () Bool)

(declare-fun e!55382 () List!1547)

(declare-fun call!8003 () List!1547)

(assert (=> b!84926 (= e!55382 call!8003)))

(declare-fun b!84927 () Bool)

(declare-fun e!55381 () List!1547)

(assert (=> b!84927 (= e!55381 (insertStrictlySorted!59 (t!5251 (toList!756 lt!38975)) (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!84928 () Bool)

(assert (=> b!84928 (= e!55382 call!8003)))

(declare-fun b!84929 () Bool)

(declare-fun res!43779 () Bool)

(declare-fun e!55384 () Bool)

(assert (=> b!84929 (=> (not res!43779) (not e!55384))))

(declare-fun lt!39963 () List!1547)

(assert (=> b!84929 (= res!43779 (containsKey!142 lt!39963 (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun d!21959 () Bool)

(assert (=> d!21959 e!55384))

(declare-fun res!43780 () Bool)

(assert (=> d!21959 (=> (not res!43780) (not e!55384))))

(assert (=> d!21959 (= res!43780 (isStrictlySorted!292 lt!39963))))

(declare-fun e!55380 () List!1547)

(assert (=> d!21959 (= lt!39963 e!55380)))

(declare-fun c!13756 () Bool)

(assert (=> d!21959 (= c!13756 (and ((_ is Cons!1543) (toList!756 lt!38975)) (bvslt (_1!1120 (h!2133 (toList!756 lt!38975))) (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!21959 (isStrictlySorted!292 (toList!756 lt!38975))))

(assert (=> d!21959 (= (insertStrictlySorted!59 (toList!756 lt!38975) (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39963)))

(declare-fun b!84930 () Bool)

(assert (=> b!84930 (= e!55384 (contains!760 lt!39963 (tuple2!2221 (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!84931 () Bool)

(assert (=> b!84931 (= e!55380 e!55383)))

(declare-fun c!13755 () Bool)

(assert (=> b!84931 (= c!13755 (and ((_ is Cons!1543) (toList!756 lt!38975)) (= (_1!1120 (h!2133 (toList!756 lt!38975))) (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun c!13758 () Bool)

(declare-fun b!84932 () Bool)

(assert (=> b!84932 (= e!55381 (ite c!13755 (t!5251 (toList!756 lt!38975)) (ite c!13758 (Cons!1543 (h!2133 (toList!756 lt!38975)) (t!5251 (toList!756 lt!38975))) Nil!1544)))))

(declare-fun b!84933 () Bool)

(assert (=> b!84933 (= c!13758 (and ((_ is Cons!1543) (toList!756 lt!38975)) (bvsgt (_1!1120 (h!2133 (toList!756 lt!38975))) (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> b!84933 (= e!55383 e!55382)))

(declare-fun bm!7999 () Bool)

(assert (=> bm!7999 (= call!8001 ($colon$colon!70 e!55381 (ite c!13756 (h!2133 (toList!756 lt!38975)) (tuple2!2221 (_1!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun c!13757 () Bool)

(assert (=> bm!7999 (= c!13757 c!13756)))

(declare-fun b!84934 () Bool)

(assert (=> b!84934 (= e!55380 call!8001)))

(declare-fun bm!8000 () Bool)

(assert (=> bm!8000 (= call!8003 call!8002)))

(assert (= (and d!21959 c!13756) b!84934))

(assert (= (and d!21959 (not c!13756)) b!84931))

(assert (= (and b!84931 c!13755) b!84925))

(assert (= (and b!84931 (not c!13755)) b!84933))

(assert (= (and b!84933 c!13758) b!84928))

(assert (= (and b!84933 (not c!13758)) b!84926))

(assert (= (or b!84928 b!84926) bm!8000))

(assert (= (or b!84925 bm!8000) bm!7998))

(assert (= (or b!84934 bm!7998) bm!7999))

(assert (= (and bm!7999 c!13757) b!84927))

(assert (= (and bm!7999 (not c!13757)) b!84932))

(assert (= (and d!21959 res!43780) b!84929))

(assert (= (and b!84929 res!43779) b!84930))

(declare-fun m!89037 () Bool)

(assert (=> d!21959 m!89037))

(declare-fun m!89039 () Bool)

(assert (=> d!21959 m!89039))

(declare-fun m!89041 () Bool)

(assert (=> b!84927 m!89041))

(declare-fun m!89043 () Bool)

(assert (=> b!84930 m!89043))

(declare-fun m!89045 () Bool)

(assert (=> bm!7999 m!89045))

(declare-fun m!89047 () Bool)

(assert (=> b!84929 m!89047))

(assert (=> d!21015 d!21959))

(declare-fun d!21961 () Bool)

(assert (=> d!21961 (= ($colon$colon!70 e!54544 (ite c!13364 (h!2133 (toList!756 lt!38754)) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747)))) (Cons!1543 (ite c!13364 (h!2133 (toList!756 lt!38754)) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))) e!54544))))

(assert (=> bm!7856 d!21961))

(declare-fun e!55396 () SeekEntryResult!252)

(declare-fun b!84953 () Bool)

(assert (=> b!84953 (= e!55396 (Intermediate!252 false (toIndex!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (mask!6335 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!84954 () Bool)

(declare-fun lt!39969 () SeekEntryResult!252)

(assert (=> b!84954 (and (bvsge (index!3146 lt!39969) #b00000000000000000000000000000000) (bvslt (index!3146 lt!39969) (size!2155 (_keys!3985 newMap!16))))))

(declare-fun res!43788 () Bool)

(assert (=> b!84954 (= res!43788 (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3146 lt!39969)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55395 () Bool)

(assert (=> b!84954 (=> res!43788 e!55395)))

(declare-fun b!84955 () Bool)

(declare-fun e!55399 () Bool)

(declare-fun e!55397 () Bool)

(assert (=> b!84955 (= e!55399 e!55397)))

(declare-fun res!43789 () Bool)

(assert (=> b!84955 (= res!43789 (and ((_ is Intermediate!252) lt!39969) (not (undefined!1064 lt!39969)) (bvslt (x!11861 lt!39969) #b01111111111111111111111111111110) (bvsge (x!11861 lt!39969) #b00000000000000000000000000000000) (bvsge (x!11861 lt!39969) #b00000000000000000000000000000000)))))

(assert (=> b!84955 (=> (not res!43789) (not e!55397))))

(declare-fun d!21963 () Bool)

(assert (=> d!21963 e!55399))

(declare-fun c!13765 () Bool)

(assert (=> d!21963 (= c!13765 (and ((_ is Intermediate!252) lt!39969) (undefined!1064 lt!39969)))))

(declare-fun e!55398 () SeekEntryResult!252)

(assert (=> d!21963 (= lt!39969 e!55398)))

(declare-fun c!13767 () Bool)

(assert (=> d!21963 (= c!13767 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!39968 () (_ BitVec 64))

(assert (=> d!21963 (= lt!39968 (select (arr!1912 (_keys!3985 newMap!16)) (toIndex!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (mask!6335 newMap!16))))))

(assert (=> d!21963 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!21963 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (mask!6335 newMap!16)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (_keys!3985 newMap!16) (mask!6335 newMap!16)) lt!39969)))

(declare-fun b!84956 () Bool)

(assert (=> b!84956 (= e!55398 (Intermediate!252 true (toIndex!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (mask!6335 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!84957 () Bool)

(assert (=> b!84957 (and (bvsge (index!3146 lt!39969) #b00000000000000000000000000000000) (bvslt (index!3146 lt!39969) (size!2155 (_keys!3985 newMap!16))))))

(declare-fun res!43787 () Bool)

(assert (=> b!84957 (= res!43787 (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3146 lt!39969)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> b!84957 (=> res!43787 e!55395)))

(assert (=> b!84957 (= e!55397 e!55395)))

(declare-fun b!84958 () Bool)

(assert (=> b!84958 (= e!55396 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (mask!6335 newMap!16)) #b00000000000000000000000000000000 (mask!6335 newMap!16)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (_keys!3985 newMap!16) (mask!6335 newMap!16)))))

(declare-fun b!84959 () Bool)

(assert (=> b!84959 (= e!55399 (bvsge (x!11861 lt!39969) #b01111111111111111111111111111110))))

(declare-fun b!84960 () Bool)

(assert (=> b!84960 (and (bvsge (index!3146 lt!39969) #b00000000000000000000000000000000) (bvslt (index!3146 lt!39969) (size!2155 (_keys!3985 newMap!16))))))

(assert (=> b!84960 (= e!55395 (= (select (arr!1912 (_keys!3985 newMap!16)) (index!3146 lt!39969)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84961 () Bool)

(assert (=> b!84961 (= e!55398 e!55396)))

(declare-fun c!13766 () Bool)

(assert (=> b!84961 (= c!13766 (or (= lt!39968 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (= (bvadd lt!39968 lt!39968) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21963 c!13767) b!84956))

(assert (= (and d!21963 (not c!13767)) b!84961))

(assert (= (and b!84961 c!13766) b!84953))

(assert (= (and b!84961 (not c!13766)) b!84958))

(assert (= (and d!21963 c!13765) b!84959))

(assert (= (and d!21963 (not c!13765)) b!84955))

(assert (= (and b!84955 res!43789) b!84957))

(assert (= (and b!84957 (not res!43787)) b!84954))

(assert (= (and b!84954 (not res!43788)) b!84960))

(assert (=> b!84958 m!86539))

(declare-fun m!89049 () Bool)

(assert (=> b!84958 m!89049))

(assert (=> b!84958 m!89049))

(assert (=> b!84958 m!85591))

(declare-fun m!89051 () Bool)

(assert (=> b!84958 m!89051))

(declare-fun m!89053 () Bool)

(assert (=> b!84957 m!89053))

(assert (=> b!84954 m!89053))

(assert (=> d!21963 m!86539))

(declare-fun m!89055 () Bool)

(assert (=> d!21963 m!89055))

(assert (=> d!21963 m!86023))

(assert (=> b!84960 m!89053))

(assert (=> d!21037 d!21963))

(declare-fun d!21965 () Bool)

(declare-fun lt!39975 () (_ BitVec 32))

(declare-fun lt!39974 () (_ BitVec 32))

(assert (=> d!21965 (= lt!39975 (bvmul (bvxor lt!39974 (bvlshr lt!39974 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!21965 (= lt!39974 ((_ extract 31 0) (bvand (bvxor (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvlshr (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!21965 (and (bvsge (mask!6335 newMap!16) #b00000000000000000000000000000000) (let ((res!43790 (let ((h!2136 ((_ extract 31 0) (bvand (bvxor (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvlshr (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11964 (bvmul (bvxor h!2136 (bvlshr h!2136 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11964 (bvlshr x!11964 #b00000000000000000000000000001101)) (mask!6335 newMap!16)))))) (and (bvslt res!43790 (bvadd (mask!6335 newMap!16) #b00000000000000000000000000000001)) (bvsge res!43790 #b00000000000000000000000000000000))))))

(assert (=> d!21965 (= (toIndex!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (mask!6335 newMap!16)) (bvand (bvxor lt!39975 (bvlshr lt!39975 #b00000000000000000000000000001101)) (mask!6335 newMap!16)))))

(assert (=> d!21037 d!21965))

(assert (=> d!21037 d!21219))

(assert (=> bm!7859 d!21817))

(declare-fun d!21967 () Bool)

(assert (=> d!21967 (isDefined!92 (getValueByKey!138 (toList!756 lt!39021) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!39976 () Unit!2445)

(assert (=> d!21967 (= lt!39976 (choose!496 (toList!756 lt!39021) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55400 () Bool)

(assert (=> d!21967 e!55400))

(declare-fun res!43791 () Bool)

(assert (=> d!21967 (=> (not res!43791) (not e!55400))))

(assert (=> d!21967 (= res!43791 (isStrictlySorted!292 (toList!756 lt!39021)))))

(assert (=> d!21967 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39021) #b0000000000000000000000000000000000000000000000000000000000000000) lt!39976)))

(declare-fun b!84962 () Bool)

(assert (=> b!84962 (= e!55400 (containsKey!142 (toList!756 lt!39021) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21967 res!43791) b!84962))

(assert (=> d!21967 m!86597))

(assert (=> d!21967 m!86597))

(assert (=> d!21967 m!86599))

(declare-fun m!89057 () Bool)

(assert (=> d!21967 m!89057))

(assert (=> d!21967 m!88193))

(assert (=> b!84962 m!86593))

(assert (=> b!83579 d!21967))

(assert (=> b!83579 d!21283))

(assert (=> b!83579 d!21285))

(declare-fun d!21969 () Bool)

(assert (=> d!21969 (isDefined!92 (getValueByKey!138 (toList!756 lt!39037) (_1!1120 lt!38760)))))

(declare-fun lt!39977 () Unit!2445)

(assert (=> d!21969 (= lt!39977 (choose!496 (toList!756 lt!39037) (_1!1120 lt!38760)))))

(declare-fun e!55401 () Bool)

(assert (=> d!21969 e!55401))

(declare-fun res!43792 () Bool)

(assert (=> d!21969 (=> (not res!43792) (not e!55401))))

(assert (=> d!21969 (= res!43792 (isStrictlySorted!292 (toList!756 lt!39037)))))

(assert (=> d!21969 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39037) (_1!1120 lt!38760)) lt!39977)))

(declare-fun b!84963 () Bool)

(assert (=> b!84963 (= e!55401 (containsKey!142 (toList!756 lt!39037) (_1!1120 lt!38760)))))

(assert (= (and d!21969 res!43792) b!84963))

(assert (=> d!21969 m!85941))

(assert (=> d!21969 m!85941))

(assert (=> d!21969 m!86903))

(declare-fun m!89059 () Bool)

(assert (=> d!21969 m!89059))

(declare-fun m!89061 () Bool)

(assert (=> d!21969 m!89061))

(assert (=> b!84963 m!86899))

(assert (=> b!83722 d!21969))

(assert (=> b!83722 d!21287))

(assert (=> b!83722 d!21127))

(declare-fun d!21971 () Bool)

(declare-fun lt!39978 () Bool)

(assert (=> d!21971 (= lt!39978 (select (content!87 lt!39026) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(declare-fun e!55402 () Bool)

(assert (=> d!21971 (= lt!39978 e!55402)))

(declare-fun res!43793 () Bool)

(assert (=> d!21971 (=> (not res!43793) (not e!55402))))

(assert (=> d!21971 (= res!43793 ((_ is Cons!1543) lt!39026))))

(assert (=> d!21971 (= (contains!760 lt!39026 (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))) lt!39978)))

(declare-fun b!84964 () Bool)

(declare-fun e!55403 () Bool)

(assert (=> b!84964 (= e!55402 e!55403)))

(declare-fun res!43794 () Bool)

(assert (=> b!84964 (=> res!43794 e!55403)))

(assert (=> b!84964 (= res!43794 (= (h!2133 lt!39026) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(declare-fun b!84965 () Bool)

(assert (=> b!84965 (= e!55403 (contains!760 (t!5251 lt!39026) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(assert (= (and d!21971 res!43793) b!84964))

(assert (= (and b!84964 (not res!43794)) b!84965))

(declare-fun m!89063 () Bool)

(assert (=> d!21971 m!89063))

(declare-fun m!89065 () Bool)

(assert (=> d!21971 m!89065))

(declare-fun m!89067 () Bool)

(assert (=> b!84965 m!89067))

(assert (=> b!83335 d!21971))

(declare-fun d!21973 () Bool)

(declare-fun e!55404 () Bool)

(assert (=> d!21973 e!55404))

(declare-fun res!43795 () Bool)

(assert (=> d!21973 (=> res!43795 e!55404)))

(declare-fun lt!39979 () Bool)

(assert (=> d!21973 (= res!43795 (not lt!39979))))

(declare-fun lt!39981 () Bool)

(assert (=> d!21973 (= lt!39979 lt!39981)))

(declare-fun lt!39982 () Unit!2445)

(declare-fun e!55405 () Unit!2445)

(assert (=> d!21973 (= lt!39982 e!55405)))

(declare-fun c!13768 () Bool)

(assert (=> d!21973 (= c!13768 lt!39981)))

(assert (=> d!21973 (= lt!39981 (containsKey!142 (toList!756 lt!39280) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!21973 (= (contains!757 lt!39280 (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)) lt!39979)))

(declare-fun b!84966 () Bool)

(declare-fun lt!39980 () Unit!2445)

(assert (=> b!84966 (= e!55405 lt!39980)))

(assert (=> b!84966 (= lt!39980 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39280) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84966 (isDefined!92 (getValueByKey!138 (toList!756 lt!39280) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84967 () Bool)

(declare-fun Unit!2523 () Unit!2445)

(assert (=> b!84967 (= e!55405 Unit!2523)))

(declare-fun b!84968 () Bool)

(assert (=> b!84968 (= e!55404 (isDefined!92 (getValueByKey!138 (toList!756 lt!39280) (select (arr!1912 (_keys!3985 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!21973 c!13768) b!84966))

(assert (= (and d!21973 (not c!13768)) b!84967))

(assert (= (and d!21973 (not res!43795)) b!84968))

(assert (=> d!21973 m!86049))

(declare-fun m!89069 () Bool)

(assert (=> d!21973 m!89069))

(assert (=> b!84966 m!86049))

(declare-fun m!89071 () Bool)

(assert (=> b!84966 m!89071))

(assert (=> b!84966 m!86049))

(assert (=> b!84966 m!87591))

(assert (=> b!84966 m!87591))

(declare-fun m!89073 () Bool)

(assert (=> b!84966 m!89073))

(assert (=> b!84968 m!86049))

(assert (=> b!84968 m!87591))

(assert (=> b!84968 m!87591))

(assert (=> b!84968 m!89073))

(assert (=> b!83505 d!21973))

(declare-fun d!21975 () Bool)

(declare-fun res!43797 () Bool)

(declare-fun e!55408 () Bool)

(assert (=> d!21975 (=> res!43797 e!55408)))

(assert (=> d!21975 (= res!43797 (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 (_2!1121 lt!38897)))))))

(assert (=> d!21975 (= (arrayNoDuplicates!0 (_keys!3985 (_2!1121 lt!38897)) #b00000000000000000000000000000000 Nil!1545) e!55408)))

(declare-fun b!84969 () Bool)

(declare-fun e!55409 () Bool)

(assert (=> b!84969 (= e!55408 e!55409)))

(declare-fun res!43796 () Bool)

(assert (=> b!84969 (=> (not res!43796) (not e!55409))))

(declare-fun e!55407 () Bool)

(assert (=> b!84969 (= res!43796 (not e!55407))))

(declare-fun res!43798 () Bool)

(assert (=> b!84969 (=> (not res!43798) (not e!55407))))

(assert (=> b!84969 (= res!43798 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (_2!1121 lt!38897))) #b00000000000000000000000000000000)))))

(declare-fun b!84970 () Bool)

(declare-fun e!55406 () Bool)

(declare-fun call!8004 () Bool)

(assert (=> b!84970 (= e!55406 call!8004)))

(declare-fun bm!8001 () Bool)

(declare-fun c!13769 () Bool)

(assert (=> bm!8001 (= call!8004 (arrayNoDuplicates!0 (_keys!3985 (_2!1121 lt!38897)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!13769 (Cons!1544 (select (arr!1912 (_keys!3985 (_2!1121 lt!38897))) #b00000000000000000000000000000000) Nil!1545) Nil!1545)))))

(declare-fun b!84971 () Bool)

(assert (=> b!84971 (= e!55409 e!55406)))

(assert (=> b!84971 (= c!13769 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (_2!1121 lt!38897))) #b00000000000000000000000000000000)))))

(declare-fun b!84972 () Bool)

(assert (=> b!84972 (= e!55407 (contains!759 Nil!1545 (select (arr!1912 (_keys!3985 (_2!1121 lt!38897))) #b00000000000000000000000000000000)))))

(declare-fun b!84973 () Bool)

(assert (=> b!84973 (= e!55406 call!8004)))

(assert (= (and d!21975 (not res!43797)) b!84969))

(assert (= (and b!84969 res!43798) b!84972))

(assert (= (and b!84969 res!43796) b!84971))

(assert (= (and b!84971 c!13769) b!84970))

(assert (= (and b!84971 (not c!13769)) b!84973))

(assert (= (or b!84970 b!84973) bm!8001))

(assert (=> b!84969 m!87537))

(assert (=> b!84969 m!87537))

(assert (=> b!84969 m!87539))

(assert (=> bm!8001 m!87537))

(declare-fun m!89075 () Bool)

(assert (=> bm!8001 m!89075))

(assert (=> b!84971 m!87537))

(assert (=> b!84971 m!87537))

(assert (=> b!84971 m!87539))

(assert (=> b!84972 m!87537))

(assert (=> b!84972 m!87537))

(declare-fun m!89077 () Bool)

(assert (=> b!84972 m!89077))

(assert (=> b!83719 d!21975))

(declare-fun d!21977 () Bool)

(assert (=> d!21977 (= (get!1209 (getValueByKey!138 (toList!756 lt!39021) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2636 (getValueByKey!138 (toList!756 lt!39021) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!21147 d!21977))

(assert (=> d!21147 d!21607))

(declare-fun d!21979 () Bool)

(declare-fun lt!39983 () Bool)

(assert (=> d!21979 (= lt!39983 (select (content!87 (t!5251 (toList!756 lt!38999))) lt!38750))))

(declare-fun e!55410 () Bool)

(assert (=> d!21979 (= lt!39983 e!55410)))

(declare-fun res!43799 () Bool)

(assert (=> d!21979 (=> (not res!43799) (not e!55410))))

(assert (=> d!21979 (= res!43799 ((_ is Cons!1543) (t!5251 (toList!756 lt!38999))))))

(assert (=> d!21979 (= (contains!760 (t!5251 (toList!756 lt!38999)) lt!38750) lt!39983)))

(declare-fun b!84974 () Bool)

(declare-fun e!55411 () Bool)

(assert (=> b!84974 (= e!55410 e!55411)))

(declare-fun res!43800 () Bool)

(assert (=> b!84974 (=> res!43800 e!55411)))

(assert (=> b!84974 (= res!43800 (= (h!2133 (t!5251 (toList!756 lt!38999))) lt!38750))))

(declare-fun b!84975 () Bool)

(assert (=> b!84975 (= e!55411 (contains!760 (t!5251 (t!5251 (toList!756 lt!38999))) lt!38750))))

(assert (= (and d!21979 res!43799) b!84974))

(assert (= (and b!84974 (not res!43800)) b!84975))

(assert (=> d!21979 m!88929))

(declare-fun m!89079 () Bool)

(assert (=> d!21979 m!89079))

(declare-fun m!89081 () Bool)

(assert (=> b!84975 m!89081))

(assert (=> b!83710 d!21979))

(declare-fun d!21981 () Bool)

(declare-fun res!43801 () Bool)

(declare-fun e!55412 () Bool)

(assert (=> d!21981 (=> res!43801 e!55412)))

(assert (=> d!21981 (= res!43801 (and ((_ is Cons!1543) (toList!756 call!7759)) (= (_1!1120 (h!2133 (toList!756 call!7759))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))))

(assert (=> d!21981 (= (containsKey!142 (toList!756 call!7759) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) e!55412)))

(declare-fun b!84976 () Bool)

(declare-fun e!55413 () Bool)

(assert (=> b!84976 (= e!55412 e!55413)))

(declare-fun res!43802 () Bool)

(assert (=> b!84976 (=> (not res!43802) (not e!55413))))

(assert (=> b!84976 (= res!43802 (and (or (not ((_ is Cons!1543) (toList!756 call!7759))) (bvsle (_1!1120 (h!2133 (toList!756 call!7759))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))) ((_ is Cons!1543) (toList!756 call!7759)) (bvslt (_1!1120 (h!2133 (toList!756 call!7759))) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355))))))

(declare-fun b!84977 () Bool)

(assert (=> b!84977 (= e!55413 (containsKey!142 (t!5251 (toList!756 call!7759)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (= (and d!21981 (not res!43801)) b!84976))

(assert (= (and b!84976 res!43802) b!84977))

(assert (=> b!84977 m!85591))

(declare-fun m!89083 () Bool)

(assert (=> b!84977 m!89083))

(assert (=> d!20925 d!21981))

(declare-fun d!21983 () Bool)

(assert (=> d!21983 (= (get!1208 (select (arr!1913 (_values!2300 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!351 (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83649 d!21983))

(declare-fun d!21985 () Bool)

(assert (=> d!21985 (= (get!1209 (getValueByKey!138 (toList!756 (+!114 lt!38971 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38964)) (v!2636 (getValueByKey!138 (toList!756 (+!114 lt!38971 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38964)))))

(assert (=> d!20995 d!21985))

(declare-fun b!84979 () Bool)

(declare-fun e!55414 () Option!144)

(declare-fun e!55415 () Option!144)

(assert (=> b!84979 (= e!55414 e!55415)))

(declare-fun c!13771 () Bool)

(assert (=> b!84979 (= c!13771 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38971 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))) (not (= (_1!1120 (h!2133 (toList!756 (+!114 lt!38971 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))) lt!38964))))))

(declare-fun b!84978 () Bool)

(assert (=> b!84978 (= e!55414 (Some!143 (_2!1120 (h!2133 (toList!756 (+!114 lt!38971 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))))))

(declare-fun b!84981 () Bool)

(assert (=> b!84981 (= e!55415 None!142)))

(declare-fun c!13770 () Bool)

(declare-fun d!21987 () Bool)

(assert (=> d!21987 (= c!13770 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38971 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))) (= (_1!1120 (h!2133 (toList!756 (+!114 lt!38971 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))))) lt!38964)))))

(assert (=> d!21987 (= (getValueByKey!138 (toList!756 (+!114 lt!38971 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!38964) e!55414)))

(declare-fun b!84980 () Bool)

(assert (=> b!84980 (= e!55415 (getValueByKey!138 (t!5251 (toList!756 (+!114 lt!38971 (tuple2!2221 lt!38980 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))) lt!38964))))

(assert (= (and d!21987 c!13770) b!84978))

(assert (= (and d!21987 (not c!13770)) b!84979))

(assert (= (and b!84979 c!13771) b!84980))

(assert (= (and b!84979 (not c!13771)) b!84981))

(declare-fun m!89085 () Bool)

(assert (=> b!84980 m!89085))

(assert (=> d!20995 d!21987))

(declare-fun d!21989 () Bool)

(assert (=> d!21989 (= (get!1209 (getValueByKey!138 (toList!756 lt!38974) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2636 (getValueByKey!138 (toList!756 lt!38974) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20969 d!21989))

(assert (=> d!20969 d!21769))

(declare-fun d!21991 () Bool)

(declare-fun lt!39984 () Bool)

(assert (=> d!21991 (= lt!39984 (select (content!87 (toList!756 lt!39262)) (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun e!55416 () Bool)

(assert (=> d!21991 (= lt!39984 e!55416)))

(declare-fun res!43803 () Bool)

(assert (=> d!21991 (=> (not res!43803) (not e!55416))))

(assert (=> d!21991 (= res!43803 ((_ is Cons!1543) (toList!756 lt!39262)))))

(assert (=> d!21991 (= (contains!760 (toList!756 lt!39262) (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!39984)))

(declare-fun b!84982 () Bool)

(declare-fun e!55417 () Bool)

(assert (=> b!84982 (= e!55416 e!55417)))

(declare-fun res!43804 () Bool)

(assert (=> b!84982 (=> res!43804 e!55417)))

(assert (=> b!84982 (= res!43804 (= (h!2133 (toList!756 lt!39262)) (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!84983 () Bool)

(assert (=> b!84983 (= e!55417 (contains!760 (t!5251 (toList!756 lt!39262)) (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(assert (= (and d!21991 res!43803) b!84982))

(assert (= (and b!84982 (not res!43804)) b!84983))

(declare-fun m!89087 () Bool)

(assert (=> d!21991 m!89087))

(declare-fun m!89089 () Bool)

(assert (=> d!21991 m!89089))

(declare-fun m!89091 () Bool)

(assert (=> b!84983 m!89091))

(assert (=> b!83492 d!21991))

(declare-fun d!21993 () Bool)

(assert (=> d!21993 (= (apply!81 lt!39363 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1209 (getValueByKey!138 (toList!756 lt!39363) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3589 () Bool)

(assert (= bs!3589 d!21993))

(assert (=> bs!3589 m!87483))

(assert (=> bs!3589 m!87483))

(declare-fun m!89093 () Bool)

(assert (=> bs!3589 m!89093))

(assert (=> b!83613 d!21993))

(declare-fun d!21995 () Bool)

(declare-fun res!43805 () Bool)

(declare-fun e!55418 () Bool)

(assert (=> d!21995 (=> res!43805 e!55418)))

(assert (=> d!21995 (= res!43805 (and ((_ is Cons!1543) lt!39432) (= (_1!1120 (h!2133 lt!39432)) (_1!1120 lt!38760))))))

(assert (=> d!21995 (= (containsKey!142 lt!39432 (_1!1120 lt!38760)) e!55418)))

(declare-fun b!84984 () Bool)

(declare-fun e!55419 () Bool)

(assert (=> b!84984 (= e!55418 e!55419)))

(declare-fun res!43806 () Bool)

(assert (=> b!84984 (=> (not res!43806) (not e!55419))))

(assert (=> b!84984 (= res!43806 (and (or (not ((_ is Cons!1543) lt!39432)) (bvsle (_1!1120 (h!2133 lt!39432)) (_1!1120 lt!38760))) ((_ is Cons!1543) lt!39432) (bvslt (_1!1120 (h!2133 lt!39432)) (_1!1120 lt!38760))))))

(declare-fun b!84985 () Bool)

(assert (=> b!84985 (= e!55419 (containsKey!142 (t!5251 lt!39432) (_1!1120 lt!38760)))))

(assert (= (and d!21995 (not res!43805)) b!84984))

(assert (= (and b!84984 res!43806) b!84985))

(declare-fun m!89095 () Bool)

(assert (=> b!84985 m!89095))

(assert (=> b!83735 d!21995))

(declare-fun bm!8002 () Bool)

(declare-fun call!8006 () List!1547)

(declare-fun call!8005 () List!1547)

(assert (=> bm!8002 (= call!8006 call!8005)))

(declare-fun b!84986 () Bool)

(declare-fun e!55423 () List!1547)

(assert (=> b!84986 (= e!55423 call!8006)))

(declare-fun b!84987 () Bool)

(declare-fun e!55422 () List!1547)

(declare-fun call!8007 () List!1547)

(assert (=> b!84987 (= e!55422 call!8007)))

(declare-fun b!84988 () Bool)

(declare-fun e!55421 () List!1547)

(assert (=> b!84988 (= e!55421 (insertStrictlySorted!59 (t!5251 (t!5251 (toList!756 (+!114 lt!38754 lt!38747)))) (_1!1120 lt!38750) (_2!1120 lt!38750)))))

(declare-fun b!84989 () Bool)

(assert (=> b!84989 (= e!55422 call!8007)))

(declare-fun b!84990 () Bool)

(declare-fun res!43807 () Bool)

(declare-fun e!55424 () Bool)

(assert (=> b!84990 (=> (not res!43807) (not e!55424))))

(declare-fun lt!39985 () List!1547)

(assert (=> b!84990 (= res!43807 (containsKey!142 lt!39985 (_1!1120 lt!38750)))))

(declare-fun d!21997 () Bool)

(assert (=> d!21997 e!55424))

(declare-fun res!43808 () Bool)

(assert (=> d!21997 (=> (not res!43808) (not e!55424))))

(assert (=> d!21997 (= res!43808 (isStrictlySorted!292 lt!39985))))

(declare-fun e!55420 () List!1547)

(assert (=> d!21997 (= lt!39985 e!55420)))

(declare-fun c!13773 () Bool)

(assert (=> d!21997 (= c!13773 (and ((_ is Cons!1543) (t!5251 (toList!756 (+!114 lt!38754 lt!38747)))) (bvslt (_1!1120 (h!2133 (t!5251 (toList!756 (+!114 lt!38754 lt!38747))))) (_1!1120 lt!38750))))))

(assert (=> d!21997 (isStrictlySorted!292 (t!5251 (toList!756 (+!114 lt!38754 lt!38747))))))

(assert (=> d!21997 (= (insertStrictlySorted!59 (t!5251 (toList!756 (+!114 lt!38754 lt!38747))) (_1!1120 lt!38750) (_2!1120 lt!38750)) lt!39985)))

(declare-fun b!84991 () Bool)

(assert (=> b!84991 (= e!55424 (contains!760 lt!39985 (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750))))))

(declare-fun b!84992 () Bool)

(assert (=> b!84992 (= e!55420 e!55423)))

(declare-fun c!13772 () Bool)

(assert (=> b!84992 (= c!13772 (and ((_ is Cons!1543) (t!5251 (toList!756 (+!114 lt!38754 lt!38747)))) (= (_1!1120 (h!2133 (t!5251 (toList!756 (+!114 lt!38754 lt!38747))))) (_1!1120 lt!38750))))))

(declare-fun b!84993 () Bool)

(declare-fun c!13775 () Bool)

(assert (=> b!84993 (= e!55421 (ite c!13772 (t!5251 (t!5251 (toList!756 (+!114 lt!38754 lt!38747)))) (ite c!13775 (Cons!1543 (h!2133 (t!5251 (toList!756 (+!114 lt!38754 lt!38747)))) (t!5251 (t!5251 (toList!756 (+!114 lt!38754 lt!38747))))) Nil!1544)))))

(declare-fun b!84994 () Bool)

(assert (=> b!84994 (= c!13775 (and ((_ is Cons!1543) (t!5251 (toList!756 (+!114 lt!38754 lt!38747)))) (bvsgt (_1!1120 (h!2133 (t!5251 (toList!756 (+!114 lt!38754 lt!38747))))) (_1!1120 lt!38750))))))

(assert (=> b!84994 (= e!55423 e!55422)))

(declare-fun bm!8003 () Bool)

(assert (=> bm!8003 (= call!8005 ($colon$colon!70 e!55421 (ite c!13773 (h!2133 (t!5251 (toList!756 (+!114 lt!38754 lt!38747)))) (tuple2!2221 (_1!1120 lt!38750) (_2!1120 lt!38750)))))))

(declare-fun c!13774 () Bool)

(assert (=> bm!8003 (= c!13774 c!13773)))

(declare-fun b!84995 () Bool)

(assert (=> b!84995 (= e!55420 call!8005)))

(declare-fun bm!8004 () Bool)

(assert (=> bm!8004 (= call!8007 call!8006)))

(assert (= (and d!21997 c!13773) b!84995))

(assert (= (and d!21997 (not c!13773)) b!84992))

(assert (= (and b!84992 c!13772) b!84986))

(assert (= (and b!84992 (not c!13772)) b!84994))

(assert (= (and b!84994 c!13775) b!84989))

(assert (= (and b!84994 (not c!13775)) b!84987))

(assert (= (or b!84989 b!84987) bm!8004))

(assert (= (or b!84986 bm!8004) bm!8002))

(assert (= (or b!84995 bm!8002) bm!8003))

(assert (= (and bm!8003 c!13774) b!84988))

(assert (= (and bm!8003 (not c!13774)) b!84993))

(assert (= (and d!21997 res!43808) b!84990))

(assert (= (and b!84990 res!43807) b!84991))

(declare-fun m!89097 () Bool)

(assert (=> d!21997 m!89097))

(assert (=> d!21997 m!88419))

(declare-fun m!89099 () Bool)

(assert (=> b!84988 m!89099))

(declare-fun m!89101 () Bool)

(assert (=> b!84991 m!89101))

(declare-fun m!89103 () Bool)

(assert (=> bm!8003 m!89103))

(declare-fun m!89105 () Bool)

(assert (=> b!84990 m!89105))

(assert (=> b!83638 d!21997))

(declare-fun b!84997 () Bool)

(declare-fun e!55425 () Option!144)

(declare-fun e!55426 () Option!144)

(assert (=> b!84997 (= e!55425 e!55426)))

(declare-fun c!13777 () Bool)

(assert (=> b!84997 (= c!13777 (and ((_ is Cons!1543) (t!5251 lt!39034)) (not (= (_1!1120 (h!2133 (t!5251 lt!39034))) (_1!1120 lt!38760)))))))

(declare-fun b!84996 () Bool)

(assert (=> b!84996 (= e!55425 (Some!143 (_2!1120 (h!2133 (t!5251 lt!39034)))))))

(declare-fun b!84999 () Bool)

(assert (=> b!84999 (= e!55426 None!142)))

(declare-fun d!21999 () Bool)

(declare-fun c!13776 () Bool)

(assert (=> d!21999 (= c!13776 (and ((_ is Cons!1543) (t!5251 lt!39034)) (= (_1!1120 (h!2133 (t!5251 lt!39034))) (_1!1120 lt!38760))))))

(assert (=> d!21999 (= (getValueByKey!138 (t!5251 lt!39034) (_1!1120 lt!38760)) e!55425)))

(declare-fun b!84998 () Bool)

(assert (=> b!84998 (= e!55426 (getValueByKey!138 (t!5251 (t!5251 lt!39034)) (_1!1120 lt!38760)))))

(assert (= (and d!21999 c!13776) b!84996))

(assert (= (and d!21999 (not c!13776)) b!84997))

(assert (= (and b!84997 c!13777) b!84998))

(assert (= (and b!84997 (not c!13777)) b!84999))

(declare-fun m!89107 () Bool)

(assert (=> b!84998 m!89107))

(assert (=> b!83727 d!21999))

(declare-fun d!22001 () Bool)

(declare-fun e!55427 () Bool)

(assert (=> d!22001 e!55427))

(declare-fun res!43809 () Bool)

(assert (=> d!22001 (=> res!43809 e!55427)))

(declare-fun lt!39986 () Bool)

(assert (=> d!22001 (= res!43809 (not lt!39986))))

(declare-fun lt!39988 () Bool)

(assert (=> d!22001 (= lt!39986 lt!39988)))

(declare-fun lt!39989 () Unit!2445)

(declare-fun e!55428 () Unit!2445)

(assert (=> d!22001 (= lt!39989 e!55428)))

(declare-fun c!13778 () Bool)

(assert (=> d!22001 (= c!13778 lt!39988)))

(assert (=> d!22001 (= lt!39988 (containsKey!142 (toList!756 lt!39057) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> d!22001 (= (contains!757 lt!39057 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39986)))

(declare-fun b!85000 () Bool)

(declare-fun lt!39987 () Unit!2445)

(assert (=> b!85000 (= e!55428 lt!39987)))

(assert (=> b!85000 (= lt!39987 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!39057) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (=> b!85000 (isDefined!92 (getValueByKey!138 (toList!756 lt!39057) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!85001 () Bool)

(declare-fun Unit!2524 () Unit!2445)

(assert (=> b!85001 (= e!55428 Unit!2524)))

(declare-fun b!85002 () Bool)

(assert (=> b!85002 (= e!55427 (isDefined!92 (getValueByKey!138 (toList!756 lt!39057) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!22001 c!13778) b!85000))

(assert (= (and d!22001 (not c!13778)) b!85001))

(assert (= (and d!22001 (not res!43809)) b!85002))

(declare-fun m!89109 () Bool)

(assert (=> d!22001 m!89109))

(declare-fun m!89111 () Bool)

(assert (=> b!85000 m!89111))

(assert (=> b!85000 m!86005))

(assert (=> b!85000 m!86005))

(declare-fun m!89113 () Bool)

(assert (=> b!85000 m!89113))

(assert (=> b!85002 m!86005))

(assert (=> b!85002 m!86005))

(assert (=> b!85002 m!89113))

(assert (=> d!20905 d!22001))

(declare-fun b!85004 () Bool)

(declare-fun e!55429 () Option!144)

(declare-fun e!55430 () Option!144)

(assert (=> b!85004 (= e!55429 e!55430)))

(declare-fun c!13780 () Bool)

(assert (=> b!85004 (= c!13780 (and ((_ is Cons!1543) lt!39054) (not (= (_1!1120 (h!2133 lt!39054)) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun b!85003 () Bool)

(assert (=> b!85003 (= e!55429 (Some!143 (_2!1120 (h!2133 lt!39054))))))

(declare-fun b!85006 () Bool)

(assert (=> b!85006 (= e!55430 None!142)))

(declare-fun d!22003 () Bool)

(declare-fun c!13779 () Bool)

(assert (=> d!22003 (= c!13779 (and ((_ is Cons!1543) lt!39054) (= (_1!1120 (h!2133 lt!39054)) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!22003 (= (getValueByKey!138 lt!39054 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) e!55429)))

(declare-fun b!85005 () Bool)

(assert (=> b!85005 (= e!55430 (getValueByKey!138 (t!5251 lt!39054) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(assert (= (and d!22003 c!13779) b!85003))

(assert (= (and d!22003 (not c!13779)) b!85004))

(assert (= (and b!85004 c!13780) b!85005))

(assert (= (and b!85004 (not c!13780)) b!85006))

(declare-fun m!89115 () Bool)

(assert (=> b!85005 m!89115))

(assert (=> d!20905 d!22003))

(declare-fun d!22005 () Bool)

(assert (=> d!22005 (= (getValueByKey!138 lt!39054 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) (Some!143 (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun lt!39990 () Unit!2445)

(assert (=> d!22005 (= lt!39990 (choose!495 lt!39054 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun e!55431 () Bool)

(assert (=> d!22005 e!55431))

(declare-fun res!43810 () Bool)

(assert (=> d!22005 (=> (not res!43810) (not e!55431))))

(assert (=> d!22005 (= res!43810 (isStrictlySorted!292 lt!39054))))

(assert (=> d!22005 (= (lemmaContainsTupThenGetReturnValue!57 lt!39054 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39990)))

(declare-fun b!85007 () Bool)

(declare-fun res!43811 () Bool)

(assert (=> b!85007 (=> (not res!43811) (not e!55431))))

(assert (=> b!85007 (= res!43811 (containsKey!142 lt!39054 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!85008 () Bool)

(assert (=> b!85008 (= e!55431 (contains!760 lt!39054 (tuple2!2221 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (= (and d!22005 res!43810) b!85007))

(assert (= (and b!85007 res!43811) b!85008))

(assert (=> d!22005 m!85999))

(declare-fun m!89117 () Bool)

(assert (=> d!22005 m!89117))

(declare-fun m!89119 () Bool)

(assert (=> d!22005 m!89119))

(declare-fun m!89121 () Bool)

(assert (=> b!85007 m!89121))

(declare-fun m!89123 () Bool)

(assert (=> b!85008 m!89123))

(assert (=> d!20905 d!22005))

(declare-fun bm!8005 () Bool)

(declare-fun call!8009 () List!1547)

(declare-fun call!8008 () List!1547)

(assert (=> bm!8005 (= call!8009 call!8008)))

(declare-fun b!85009 () Bool)

(declare-fun e!55435 () List!1547)

(assert (=> b!85009 (= e!55435 call!8009)))

(declare-fun b!85010 () Bool)

(declare-fun e!55434 () List!1547)

(declare-fun call!8010 () List!1547)

(assert (=> b!85010 (= e!55434 call!8010)))

(declare-fun e!55433 () List!1547)

(declare-fun b!85011 () Bool)

(assert (=> b!85011 (= e!55433 (insertStrictlySorted!59 (t!5251 (toList!756 (+!114 lt!38754 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun b!85012 () Bool)

(assert (=> b!85012 (= e!55434 call!8010)))

(declare-fun b!85013 () Bool)

(declare-fun res!43812 () Bool)

(declare-fun e!55436 () Bool)

(assert (=> b!85013 (=> (not res!43812) (not e!55436))))

(declare-fun lt!39991 () List!1547)

(assert (=> b!85013 (= res!43812 (containsKey!142 lt!39991 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))

(declare-fun d!22007 () Bool)

(assert (=> d!22007 e!55436))

(declare-fun res!43813 () Bool)

(assert (=> d!22007 (=> (not res!43813) (not e!55436))))

(assert (=> d!22007 (= res!43813 (isStrictlySorted!292 lt!39991))))

(declare-fun e!55432 () List!1547)

(assert (=> d!22007 (= lt!39991 e!55432)))

(declare-fun c!13782 () Bool)

(assert (=> d!22007 (= c!13782 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38754 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) (bvslt (_1!1120 (h!2133 (toList!756 (+!114 lt!38754 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> d!22007 (isStrictlySorted!292 (toList!756 (+!114 lt!38754 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))))

(assert (=> d!22007 (= (insertStrictlySorted!59 (toList!756 (+!114 lt!38754 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))) lt!39991)))

(declare-fun b!85014 () Bool)

(assert (=> b!85014 (= e!55436 (contains!760 lt!39991 (tuple2!2221 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun b!85015 () Bool)

(assert (=> b!85015 (= e!55432 e!55435)))

(declare-fun c!13781 () Bool)

(assert (=> b!85015 (= c!13781 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38754 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) (= (_1!1120 (h!2133 (toList!756 (+!114 lt!38754 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(declare-fun c!13784 () Bool)

(declare-fun b!85016 () Bool)

(assert (=> b!85016 (= e!55433 (ite c!13781 (t!5251 (toList!756 (+!114 lt!38754 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) (ite c!13784 (Cons!1543 (h!2133 (toList!756 (+!114 lt!38754 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) (t!5251 (toList!756 (+!114 lt!38754 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))) Nil!1544)))))

(declare-fun b!85017 () Bool)

(assert (=> b!85017 (= c!13784 (and ((_ is Cons!1543) (toList!756 (+!114 lt!38754 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) (bvsgt (_1!1120 (h!2133 (toList!756 (+!114 lt!38754 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748))))) (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))))

(assert (=> b!85017 (= e!55435 e!55434)))

(declare-fun bm!8006 () Bool)

(assert (=> bm!8006 (= call!8008 ($colon$colon!70 e!55433 (ite c!13782 (h!2133 (toList!756 (+!114 lt!38754 (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)))) (tuple2!2221 (_1!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) (_2!1120 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 (v!2632 (underlying!290 thiss!992)))))))))))

(declare-fun c!13783 () Bool)

(assert (=> bm!8006 (= c!13783 c!13782)))

(declare-fun b!85018 () Bool)

(assert (=> b!85018 (= e!55432 call!8008)))

(declare-fun bm!8007 () Bool)

(assert (=> bm!8007 (= call!8010 call!8009)))

(assert (= (and d!22007 c!13782) b!85018))

(assert (= (and d!22007 (not c!13782)) b!85015))

(assert (= (and b!85015 c!13781) b!85009))

(assert (= (and b!85015 (not c!13781)) b!85017))

(assert (= (and b!85017 c!13784) b!85012))

(assert (= (and b!85017 (not c!13784)) b!85010))

(assert (= (or b!85012 b!85010) bm!8007))

(assert (= (or b!85009 bm!8007) bm!8005))

(assert (= (or b!85018 bm!8005) bm!8006))

(assert (= (and bm!8006 c!13783) b!85011))

(assert (= (and bm!8006 (not c!13783)) b!85016))

(assert (= (and d!22007 res!43813) b!85013))

(assert (= (and b!85013 res!43812) b!85014))

(declare-fun m!89125 () Bool)

(assert (=> d!22007 m!89125))

(declare-fun m!89127 () Bool)

(assert (=> d!22007 m!89127))

(declare-fun m!89129 () Bool)

(assert (=> b!85011 m!89129))

(declare-fun m!89131 () Bool)

(assert (=> b!85014 m!89131))

(declare-fun m!89133 () Bool)

(assert (=> bm!8006 m!89133))

(declare-fun m!89135 () Bool)

(assert (=> b!85013 m!89135))

(assert (=> d!20905 d!22007))

(declare-fun b!85019 () Bool)

(declare-fun e!55439 () Bool)

(declare-fun call!8011 () Bool)

(assert (=> b!85019 (= e!55439 call!8011)))

(declare-fun bm!8008 () Bool)

(assert (=> bm!8008 (= call!8011 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) (mask!6335 newMap!16)))))

(declare-fun b!85020 () Bool)

(declare-fun e!55438 () Bool)

(assert (=> b!85020 (= e!55438 call!8011)))

(declare-fun b!85022 () Bool)

(assert (=> b!85022 (= e!55438 e!55439)))

(declare-fun lt!39992 () (_ BitVec 64))

(assert (=> b!85022 (= lt!39992 (select (arr!1912 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!39993 () Unit!2445)

(assert (=> b!85022 (= lt!39993 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) lt!39992 #b00000000000000000000000000000000))))

(assert (=> b!85022 (arrayContainsKey!0 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) lt!39992 #b00000000000000000000000000000000)))

(declare-fun lt!39994 () Unit!2445)

(assert (=> b!85022 (= lt!39994 lt!39993)))

(declare-fun res!43815 () Bool)

(assert (=> b!85022 (= res!43815 (= (seekEntryOrOpen!0 (select (arr!1912 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16)))) #b00000000000000000000000000000000) (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) (mask!6335 newMap!16)) (Found!252 #b00000000000000000000000000000000)))))

(assert (=> b!85022 (=> (not res!43815) (not e!55439))))

(declare-fun b!85021 () Bool)

(declare-fun e!55437 () Bool)

(assert (=> b!85021 (= e!55437 e!55438)))

(declare-fun c!13785 () Bool)

(assert (=> b!85021 (= c!13785 (validKeyInArray!0 (select (arr!1912 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!22009 () Bool)

(declare-fun res!43814 () Bool)

(assert (=> d!22009 (=> res!43814 e!55437)))

(assert (=> d!22009 (= res!43814 (bvsge #b00000000000000000000000000000000 (size!2155 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))))))))

(assert (=> d!22009 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) (mask!6335 newMap!16)) e!55437)))

(assert (= (and d!22009 (not res!43814)) b!85021))

(assert (= (and b!85021 c!13785) b!85022))

(assert (= (and b!85021 (not c!13785)) b!85020))

(assert (= (and b!85022 res!43815) b!85019))

(assert (= (or b!85019 b!85020) bm!8008))

(declare-fun m!89137 () Bool)

(assert (=> bm!8008 m!89137))

(declare-fun m!89139 () Bool)

(assert (=> b!85022 m!89139))

(declare-fun m!89141 () Bool)

(assert (=> b!85022 m!89141))

(declare-fun m!89143 () Bool)

(assert (=> b!85022 m!89143))

(assert (=> b!85022 m!89139))

(declare-fun m!89145 () Bool)

(assert (=> b!85022 m!89145))

(assert (=> b!85021 m!89139))

(assert (=> b!85021 m!89139))

(declare-fun m!89147 () Bool)

(assert (=> b!85021 m!89147))

(assert (=> d!20931 d!22009))

(assert (=> d!20931 d!20851))

(declare-fun d!22011 () Bool)

(declare-fun e!55442 () Bool)

(assert (=> d!22011 e!55442))

(declare-fun res!43818 () Bool)

(assert (=> d!22011 (=> (not res!43818) (not e!55442))))

(assert (=> d!22011 (= res!43818 (and (bvsge (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) #b00000000000000000000000000000000) (bvslt (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (size!2155 (_keys!3985 newMap!16))) (bvslt (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (size!2156 (_values!2300 newMap!16)))))))

(declare-fun lt!39997 () Unit!2445)

(declare-fun choose!505 (array!4014 array!4016 (_ BitVec 32) (_ BitVec 32) V!3019 V!3019 (_ BitVec 32) (_ BitVec 64) V!3019 Int) Unit!2445)

(assert (=> d!22011 (= lt!39997 (choose!505 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748 (defaultEntry!2317 newMap!16)))))

(assert (=> d!22011 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!22011 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!18 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748 (defaultEntry!2317 newMap!16)) lt!39997)))

(declare-fun b!85025 () Bool)

(assert (=> b!85025 (= e!55442 (= (+!114 (getCurrentListMap!440 (_keys!3985 newMap!16) (_values!2300 newMap!16) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (tuple2!2221 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) lt!38748)) (getCurrentListMap!440 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))))))

(assert (= (and d!22011 res!43818) b!85025))

(assert (=> d!22011 m!85591))

(declare-fun m!89149 () Bool)

(assert (=> d!22011 m!89149))

(assert (=> d!22011 m!86023))

(assert (=> b!85025 m!85729))

(assert (=> b!85025 m!86179))

(assert (=> b!85025 m!85729))

(assert (=> b!85025 m!86031))

(assert (=> b!85025 m!86163))

(assert (=> b!85025 m!86167))

(assert (=> d!20931 d!22011))

(assert (=> d!20931 d!20989))

(assert (=> d!20931 d!20993))

(declare-fun b!85026 () Bool)

(declare-fun e!55448 () ListLongMap!1481)

(declare-fun call!8012 () ListLongMap!1481)

(assert (=> b!85026 (= e!55448 call!8012)))

(declare-fun bm!8009 () Bool)

(declare-fun call!8018 () ListLongMap!1481)

(declare-fun call!8013 () ListLongMap!1481)

(assert (=> bm!8009 (= call!8018 call!8013)))

(declare-fun b!85027 () Bool)

(declare-fun e!55452 () Bool)

(declare-fun lt!40009 () ListLongMap!1481)

(assert (=> b!85027 (= e!55452 (= (apply!81 lt!40009 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2211 newMap!16)))))

(declare-fun b!85028 () Bool)

(declare-fun e!55443 () ListLongMap!1481)

(declare-fun call!8014 () ListLongMap!1481)

(assert (=> b!85028 (= e!55443 call!8014)))

(declare-fun b!85030 () Bool)

(declare-fun e!55444 () ListLongMap!1481)

(declare-fun call!8015 () ListLongMap!1481)

(assert (=> b!85030 (= e!55444 (+!114 call!8015 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))

(declare-fun b!85031 () Bool)

(declare-fun res!43827 () Bool)

(declare-fun e!55451 () Bool)

(assert (=> b!85031 (=> (not res!43827) (not e!55451))))

(declare-fun e!55447 () Bool)

(assert (=> b!85031 (= res!43827 e!55447)))

(declare-fun c!13790 () Bool)

(assert (=> b!85031 (= c!13790 (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!8010 () Bool)

(assert (=> bm!8010 (= call!8013 (getCurrentListMapNoExtraKeys!78 lt!39188 lt!39189 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun c!13789 () Bool)

(declare-fun bm!8011 () Bool)

(declare-fun c!13791 () Bool)

(assert (=> bm!8011 (= call!8015 (+!114 (ite c!13789 call!8013 (ite c!13791 call!8018 call!8012)) (ite (or c!13789 c!13791) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))

(declare-fun b!85032 () Bool)

(declare-fun e!55450 () Unit!2445)

(declare-fun Unit!2525 () Unit!2445)

(assert (=> b!85032 (= e!55450 Unit!2525)))

(declare-fun bm!8012 () Bool)

(declare-fun call!8016 () Bool)

(assert (=> bm!8012 (= call!8016 (contains!757 lt!40009 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85033 () Bool)

(declare-fun res!43824 () Bool)

(assert (=> b!85033 (=> (not res!43824) (not e!55451))))

(declare-fun e!55454 () Bool)

(assert (=> b!85033 (= res!43824 e!55454)))

(declare-fun res!43825 () Bool)

(assert (=> b!85033 (=> res!43825 e!55454)))

(declare-fun e!55449 () Bool)

(assert (=> b!85033 (= res!43825 (not e!55449))))

(declare-fun res!43822 () Bool)

(assert (=> b!85033 (=> (not res!43822) (not e!55449))))

(assert (=> b!85033 (= res!43822 (bvslt #b00000000000000000000000000000000 (size!2155 lt!39188)))))

(declare-fun b!85034 () Bool)

(declare-fun e!55445 () Bool)

(assert (=> b!85034 (= e!55454 e!55445)))

(declare-fun res!43821 () Bool)

(assert (=> b!85034 (=> (not res!43821) (not e!55445))))

(assert (=> b!85034 (= res!43821 (contains!757 lt!40009 (select (arr!1912 lt!39188) #b00000000000000000000000000000000)))))

(assert (=> b!85034 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 lt!39188)))))

(declare-fun b!85035 () Bool)

(declare-fun e!55446 () Bool)

(assert (=> b!85035 (= e!55446 (not call!8016))))

(declare-fun b!85036 () Bool)

(declare-fun e!55453 () Bool)

(assert (=> b!85036 (= e!55447 e!55453)))

(declare-fun res!43820 () Bool)

(declare-fun call!8017 () Bool)

(assert (=> b!85036 (= res!43820 call!8017)))

(assert (=> b!85036 (=> (not res!43820) (not e!55453))))

(declare-fun b!85037 () Bool)

(declare-fun c!13788 () Bool)

(assert (=> b!85037 (= c!13788 (and (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!85037 (= e!55443 e!55448)))

(declare-fun b!85038 () Bool)

(declare-fun lt!40004 () Unit!2445)

(assert (=> b!85038 (= e!55450 lt!40004)))

(declare-fun lt!40010 () ListLongMap!1481)

(assert (=> b!85038 (= lt!40010 (getCurrentListMapNoExtraKeys!78 lt!39188 lt!39189 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!40003 () (_ BitVec 64))

(assert (=> b!85038 (= lt!40003 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40007 () (_ BitVec 64))

(assert (=> b!85038 (= lt!40007 (select (arr!1912 lt!39188) #b00000000000000000000000000000000))))

(declare-fun lt!40012 () Unit!2445)

(assert (=> b!85038 (= lt!40012 (addStillContains!57 lt!40010 lt!40003 (zeroValue!2211 newMap!16) lt!40007))))

(assert (=> b!85038 (contains!757 (+!114 lt!40010 (tuple2!2221 lt!40003 (zeroValue!2211 newMap!16))) lt!40007)))

(declare-fun lt!40008 () Unit!2445)

(assert (=> b!85038 (= lt!40008 lt!40012)))

(declare-fun lt!40013 () ListLongMap!1481)

(assert (=> b!85038 (= lt!40013 (getCurrentListMapNoExtraKeys!78 lt!39188 lt!39189 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!40005 () (_ BitVec 64))

(assert (=> b!85038 (= lt!40005 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40019 () (_ BitVec 64))

(assert (=> b!85038 (= lt!40019 (select (arr!1912 lt!39188) #b00000000000000000000000000000000))))

(declare-fun lt!40017 () Unit!2445)

(assert (=> b!85038 (= lt!40017 (addApplyDifferent!57 lt!40013 lt!40005 (minValue!2211 newMap!16) lt!40019))))

(assert (=> b!85038 (= (apply!81 (+!114 lt!40013 (tuple2!2221 lt!40005 (minValue!2211 newMap!16))) lt!40019) (apply!81 lt!40013 lt!40019))))

(declare-fun lt!40011 () Unit!2445)

(assert (=> b!85038 (= lt!40011 lt!40017)))

(declare-fun lt!40006 () ListLongMap!1481)

(assert (=> b!85038 (= lt!40006 (getCurrentListMapNoExtraKeys!78 lt!39188 lt!39189 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!40015 () (_ BitVec 64))

(assert (=> b!85038 (= lt!40015 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39999 () (_ BitVec 64))

(assert (=> b!85038 (= lt!39999 (select (arr!1912 lt!39188) #b00000000000000000000000000000000))))

(declare-fun lt!40014 () Unit!2445)

(assert (=> b!85038 (= lt!40014 (addApplyDifferent!57 lt!40006 lt!40015 (zeroValue!2211 newMap!16) lt!39999))))

(assert (=> b!85038 (= (apply!81 (+!114 lt!40006 (tuple2!2221 lt!40015 (zeroValue!2211 newMap!16))) lt!39999) (apply!81 lt!40006 lt!39999))))

(declare-fun lt!40000 () Unit!2445)

(assert (=> b!85038 (= lt!40000 lt!40014)))

(declare-fun lt!40002 () ListLongMap!1481)

(assert (=> b!85038 (= lt!40002 (getCurrentListMapNoExtraKeys!78 lt!39188 lt!39189 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!40016 () (_ BitVec 64))

(assert (=> b!85038 (= lt!40016 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40001 () (_ BitVec 64))

(assert (=> b!85038 (= lt!40001 (select (arr!1912 lt!39188) #b00000000000000000000000000000000))))

(assert (=> b!85038 (= lt!40004 (addApplyDifferent!57 lt!40002 lt!40016 (minValue!2211 newMap!16) lt!40001))))

(assert (=> b!85038 (= (apply!81 (+!114 lt!40002 (tuple2!2221 lt!40016 (minValue!2211 newMap!16))) lt!40001) (apply!81 lt!40002 lt!40001))))

(declare-fun b!85039 () Bool)

(assert (=> b!85039 (= e!55445 (= (apply!81 lt!40009 (select (arr!1912 lt!39188) #b00000000000000000000000000000000)) (get!1206 (select (arr!1913 lt!39189) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85039 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2156 lt!39189)))))

(assert (=> b!85039 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 lt!39188)))))

(declare-fun b!85029 () Bool)

(assert (=> b!85029 (= e!55448 call!8014)))

(declare-fun d!22013 () Bool)

(assert (=> d!22013 e!55451))

(declare-fun res!43823 () Bool)

(assert (=> d!22013 (=> (not res!43823) (not e!55451))))

(assert (=> d!22013 (= res!43823 (or (bvsge #b00000000000000000000000000000000 (size!2155 lt!39188)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 lt!39188)))))))

(declare-fun lt!40018 () ListLongMap!1481)

(assert (=> d!22013 (= lt!40009 lt!40018)))

(declare-fun lt!39998 () Unit!2445)

(assert (=> d!22013 (= lt!39998 e!55450)))

(declare-fun c!13787 () Bool)

(declare-fun e!55455 () Bool)

(assert (=> d!22013 (= c!13787 e!55455)))

(declare-fun res!43819 () Bool)

(assert (=> d!22013 (=> (not res!43819) (not e!55455))))

(assert (=> d!22013 (= res!43819 (bvslt #b00000000000000000000000000000000 (size!2155 lt!39188)))))

(assert (=> d!22013 (= lt!40018 e!55444)))

(assert (=> d!22013 (= c!13789 (and (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22013 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!22013 (= (getCurrentListMap!440 lt!39188 lt!39189 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) lt!40009)))

(declare-fun bm!8013 () Bool)

(assert (=> bm!8013 (= call!8017 (contains!757 lt!40009 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85040 () Bool)

(assert (=> b!85040 (= e!55447 (not call!8017))))

(declare-fun bm!8014 () Bool)

(assert (=> bm!8014 (= call!8012 call!8018)))

(declare-fun b!85041 () Bool)

(assert (=> b!85041 (= e!55455 (validKeyInArray!0 (select (arr!1912 lt!39188) #b00000000000000000000000000000000)))))

(declare-fun b!85042 () Bool)

(assert (=> b!85042 (= e!55451 e!55446)))

(declare-fun c!13786 () Bool)

(assert (=> b!85042 (= c!13786 (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!8015 () Bool)

(assert (=> bm!8015 (= call!8014 call!8015)))

(declare-fun b!85043 () Bool)

(assert (=> b!85043 (= e!55453 (= (apply!81 lt!40009 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2211 newMap!16)))))

(declare-fun b!85044 () Bool)

(assert (=> b!85044 (= e!55449 (validKeyInArray!0 (select (arr!1912 lt!39188) #b00000000000000000000000000000000)))))

(declare-fun b!85045 () Bool)

(assert (=> b!85045 (= e!55444 e!55443)))

(assert (=> b!85045 (= c!13791 (and (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!85046 () Bool)

(assert (=> b!85046 (= e!55446 e!55452)))

(declare-fun res!43826 () Bool)

(assert (=> b!85046 (= res!43826 call!8016)))

(assert (=> b!85046 (=> (not res!43826) (not e!55452))))

(assert (= (and d!22013 c!13789) b!85030))

(assert (= (and d!22013 (not c!13789)) b!85045))

(assert (= (and b!85045 c!13791) b!85028))

(assert (= (and b!85045 (not c!13791)) b!85037))

(assert (= (and b!85037 c!13788) b!85029))

(assert (= (and b!85037 (not c!13788)) b!85026))

(assert (= (or b!85029 b!85026) bm!8014))

(assert (= (or b!85028 bm!8014) bm!8009))

(assert (= (or b!85028 b!85029) bm!8015))

(assert (= (or b!85030 bm!8009) bm!8010))

(assert (= (or b!85030 bm!8015) bm!8011))

(assert (= (and d!22013 res!43819) b!85041))

(assert (= (and d!22013 c!13787) b!85038))

(assert (= (and d!22013 (not c!13787)) b!85032))

(assert (= (and d!22013 res!43823) b!85033))

(assert (= (and b!85033 res!43822) b!85044))

(assert (= (and b!85033 (not res!43825)) b!85034))

(assert (= (and b!85034 res!43821) b!85039))

(assert (= (and b!85033 res!43824) b!85031))

(assert (= (and b!85031 c!13790) b!85036))

(assert (= (and b!85031 (not c!13790)) b!85040))

(assert (= (and b!85036 res!43820) b!85043))

(assert (= (or b!85036 b!85040) bm!8013))

(assert (= (and b!85031 res!43827) b!85042))

(assert (= (and b!85042 c!13786) b!85046))

(assert (= (and b!85042 (not c!13786)) b!85035))

(assert (= (and b!85046 res!43826) b!85027))

(assert (= (or b!85046 b!85035) bm!8012))

(declare-fun b_lambda!3757 () Bool)

(assert (=> (not b_lambda!3757) (not b!85039)))

(assert (=> b!85039 t!5259))

(declare-fun b_and!5137 () Bool)

(assert (= b_and!5133 (and (=> t!5259 result!2903) b_and!5137)))

(assert (=> b!85039 t!5261))

(declare-fun b_and!5139 () Bool)

(assert (= b_and!5135 (and (=> t!5261 result!2905) b_and!5139)))

(declare-fun m!89151 () Bool)

(assert (=> bm!8010 m!89151))

(declare-fun m!89153 () Bool)

(assert (=> bm!8013 m!89153))

(declare-fun m!89155 () Bool)

(assert (=> bm!8011 m!89155))

(declare-fun m!89157 () Bool)

(assert (=> b!85044 m!89157))

(assert (=> b!85044 m!89157))

(declare-fun m!89159 () Bool)

(assert (=> b!85044 m!89159))

(declare-fun m!89161 () Bool)

(assert (=> bm!8012 m!89161))

(assert (=> b!85041 m!89157))

(assert (=> b!85041 m!89157))

(assert (=> b!85041 m!89159))

(assert (=> b!85034 m!89157))

(assert (=> b!85034 m!89157))

(declare-fun m!89163 () Bool)

(assert (=> b!85034 m!89163))

(assert (=> d!22013 m!86023))

(declare-fun m!89165 () Bool)

(assert (=> b!85027 m!89165))

(declare-fun m!89167 () Bool)

(assert (=> b!85038 m!89167))

(declare-fun m!89169 () Bool)

(assert (=> b!85038 m!89169))

(declare-fun m!89171 () Bool)

(assert (=> b!85038 m!89171))

(declare-fun m!89173 () Bool)

(assert (=> b!85038 m!89173))

(declare-fun m!89175 () Bool)

(assert (=> b!85038 m!89175))

(declare-fun m!89177 () Bool)

(assert (=> b!85038 m!89177))

(declare-fun m!89179 () Bool)

(assert (=> b!85038 m!89179))

(assert (=> b!85038 m!89169))

(declare-fun m!89181 () Bool)

(assert (=> b!85038 m!89181))

(declare-fun m!89183 () Bool)

(assert (=> b!85038 m!89183))

(assert (=> b!85038 m!89175))

(declare-fun m!89185 () Bool)

(assert (=> b!85038 m!89185))

(assert (=> b!85038 m!89171))

(assert (=> b!85038 m!89157))

(declare-fun m!89187 () Bool)

(assert (=> b!85038 m!89187))

(declare-fun m!89189 () Bool)

(assert (=> b!85038 m!89189))

(declare-fun m!89191 () Bool)

(assert (=> b!85038 m!89191))

(assert (=> b!85038 m!89151))

(declare-fun m!89193 () Bool)

(assert (=> b!85038 m!89193))

(assert (=> b!85038 m!89185))

(declare-fun m!89195 () Bool)

(assert (=> b!85038 m!89195))

(assert (=> b!85039 m!86089))

(declare-fun m!89197 () Bool)

(assert (=> b!85039 m!89197))

(assert (=> b!85039 m!89157))

(declare-fun m!89199 () Bool)

(assert (=> b!85039 m!89199))

(assert (=> b!85039 m!89157))

(assert (=> b!85039 m!89197))

(assert (=> b!85039 m!86089))

(declare-fun m!89201 () Bool)

(assert (=> b!85039 m!89201))

(declare-fun m!89203 () Bool)

(assert (=> b!85030 m!89203))

(declare-fun m!89205 () Bool)

(assert (=> b!85043 m!89205))

(assert (=> d!20931 d!22013))

(declare-fun b!85047 () Bool)

(declare-fun e!55461 () ListLongMap!1481)

(declare-fun call!8019 () ListLongMap!1481)

(assert (=> b!85047 (= e!55461 call!8019)))

(declare-fun bm!8016 () Bool)

(declare-fun call!8025 () ListLongMap!1481)

(declare-fun call!8020 () ListLongMap!1481)

(assert (=> bm!8016 (= call!8025 call!8020)))

(declare-fun b!85048 () Bool)

(declare-fun e!55465 () Bool)

(declare-fun lt!40031 () ListLongMap!1481)

(assert (=> b!85048 (= e!55465 (= (apply!81 lt!40031 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2211 newMap!16)))))

(declare-fun b!85049 () Bool)

(declare-fun e!55456 () ListLongMap!1481)

(declare-fun call!8021 () ListLongMap!1481)

(assert (=> b!85049 (= e!55456 call!8021)))

(declare-fun b!85051 () Bool)

(declare-fun e!55457 () ListLongMap!1481)

(declare-fun call!8022 () ListLongMap!1481)

(assert (=> b!85051 (= e!55457 (+!114 call!8022 (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16))))))

(declare-fun b!85052 () Bool)

(declare-fun res!43836 () Bool)

(declare-fun e!55464 () Bool)

(assert (=> b!85052 (=> (not res!43836) (not e!55464))))

(declare-fun e!55460 () Bool)

(assert (=> b!85052 (= res!43836 e!55460)))

(declare-fun c!13796 () Bool)

(assert (=> b!85052 (= c!13796 (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!8017 () Bool)

(assert (=> bm!8017 (= call!8020 (getCurrentListMapNoExtraKeys!78 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun c!13797 () Bool)

(declare-fun bm!8018 () Bool)

(declare-fun c!13795 () Bool)

(assert (=> bm!8018 (= call!8022 (+!114 (ite c!13795 call!8020 (ite c!13797 call!8025 call!8019)) (ite (or c!13795 c!13797) (tuple2!2221 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2211 newMap!16)) (tuple2!2221 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2211 newMap!16)))))))

(declare-fun b!85053 () Bool)

(declare-fun e!55463 () Unit!2445)

(declare-fun Unit!2526 () Unit!2445)

(assert (=> b!85053 (= e!55463 Unit!2526)))

(declare-fun bm!8019 () Bool)

(declare-fun call!8023 () Bool)

(assert (=> bm!8019 (= call!8023 (contains!757 lt!40031 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85054 () Bool)

(declare-fun res!43833 () Bool)

(assert (=> b!85054 (=> (not res!43833) (not e!55464))))

(declare-fun e!55467 () Bool)

(assert (=> b!85054 (= res!43833 e!55467)))

(declare-fun res!43834 () Bool)

(assert (=> b!85054 (=> res!43834 e!55467)))

(declare-fun e!55462 () Bool)

(assert (=> b!85054 (= res!43834 (not e!55462))))

(declare-fun res!43831 () Bool)

(assert (=> b!85054 (=> (not res!43831) (not e!55462))))

(assert (=> b!85054 (= res!43831 (bvslt #b00000000000000000000000000000000 (size!2155 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))))))))

(declare-fun b!85055 () Bool)

(declare-fun e!55458 () Bool)

(assert (=> b!85055 (= e!55467 e!55458)))

(declare-fun res!43830 () Bool)

(assert (=> b!85055 (=> (not res!43830) (not e!55458))))

(assert (=> b!85055 (= res!43830 (contains!757 lt!40031 (select (arr!1912 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!85055 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))))))))

(declare-fun b!85056 () Bool)

(declare-fun e!55459 () Bool)

(assert (=> b!85056 (= e!55459 (not call!8023))))

(declare-fun b!85057 () Bool)

(declare-fun e!55466 () Bool)

(assert (=> b!85057 (= e!55460 e!55466)))

(declare-fun res!43829 () Bool)

(declare-fun call!8024 () Bool)

(assert (=> b!85057 (= res!43829 call!8024)))

(assert (=> b!85057 (=> (not res!43829) (not e!55466))))

(declare-fun b!85058 () Bool)

(declare-fun c!13794 () Bool)

(assert (=> b!85058 (= c!13794 (and (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!85058 (= e!55456 e!55461)))

(declare-fun b!85059 () Bool)

(declare-fun lt!40026 () Unit!2445)

(assert (=> b!85059 (= e!55463 lt!40026)))

(declare-fun lt!40032 () ListLongMap!1481)

(assert (=> b!85059 (= lt!40032 (getCurrentListMapNoExtraKeys!78 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!40025 () (_ BitVec 64))

(assert (=> b!85059 (= lt!40025 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40029 () (_ BitVec 64))

(assert (=> b!85059 (= lt!40029 (select (arr!1912 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!40034 () Unit!2445)

(assert (=> b!85059 (= lt!40034 (addStillContains!57 lt!40032 lt!40025 (zeroValue!2211 newMap!16) lt!40029))))

(assert (=> b!85059 (contains!757 (+!114 lt!40032 (tuple2!2221 lt!40025 (zeroValue!2211 newMap!16))) lt!40029)))

(declare-fun lt!40030 () Unit!2445)

(assert (=> b!85059 (= lt!40030 lt!40034)))

(declare-fun lt!40035 () ListLongMap!1481)

(assert (=> b!85059 (= lt!40035 (getCurrentListMapNoExtraKeys!78 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!40027 () (_ BitVec 64))

(assert (=> b!85059 (= lt!40027 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40041 () (_ BitVec 64))

(assert (=> b!85059 (= lt!40041 (select (arr!1912 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!40039 () Unit!2445)

(assert (=> b!85059 (= lt!40039 (addApplyDifferent!57 lt!40035 lt!40027 (minValue!2211 newMap!16) lt!40041))))

(assert (=> b!85059 (= (apply!81 (+!114 lt!40035 (tuple2!2221 lt!40027 (minValue!2211 newMap!16))) lt!40041) (apply!81 lt!40035 lt!40041))))

(declare-fun lt!40033 () Unit!2445)

(assert (=> b!85059 (= lt!40033 lt!40039)))

(declare-fun lt!40028 () ListLongMap!1481)

(assert (=> b!85059 (= lt!40028 (getCurrentListMapNoExtraKeys!78 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!40037 () (_ BitVec 64))

(assert (=> b!85059 (= lt!40037 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40021 () (_ BitVec 64))

(assert (=> b!85059 (= lt!40021 (select (arr!1912 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!40036 () Unit!2445)

(assert (=> b!85059 (= lt!40036 (addApplyDifferent!57 lt!40028 lt!40037 (zeroValue!2211 newMap!16) lt!40021))))

(assert (=> b!85059 (= (apply!81 (+!114 lt!40028 (tuple2!2221 lt!40037 (zeroValue!2211 newMap!16))) lt!40021) (apply!81 lt!40028 lt!40021))))

(declare-fun lt!40022 () Unit!2445)

(assert (=> b!85059 (= lt!40022 lt!40036)))

(declare-fun lt!40024 () ListLongMap!1481)

(assert (=> b!85059 (= lt!40024 (getCurrentListMapNoExtraKeys!78 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)))))

(declare-fun lt!40038 () (_ BitVec 64))

(assert (=> b!85059 (= lt!40038 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40023 () (_ BitVec 64))

(assert (=> b!85059 (= lt!40023 (select (arr!1912 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!85059 (= lt!40026 (addApplyDifferent!57 lt!40024 lt!40038 (minValue!2211 newMap!16) lt!40023))))

(assert (=> b!85059 (= (apply!81 (+!114 lt!40024 (tuple2!2221 lt!40038 (minValue!2211 newMap!16))) lt!40023) (apply!81 lt!40024 lt!40023))))

(declare-fun b!85060 () Bool)

(assert (=> b!85060 (= e!55458 (= (apply!81 lt!40031 (select (arr!1912 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16)))) #b00000000000000000000000000000000)) (get!1206 (select (arr!1913 (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!351 (defaultEntry!2317 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85060 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2156 (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))))))))

(assert (=> b!85060 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))))))))

(declare-fun b!85050 () Bool)

(assert (=> b!85050 (= e!55461 call!8021)))

(declare-fun d!22015 () Bool)

(assert (=> d!22015 e!55464))

(declare-fun res!43832 () Bool)

(assert (=> d!22015 (=> (not res!43832) (not e!55464))))

(assert (=> d!22015 (= res!43832 (or (bvsge #b00000000000000000000000000000000 (size!2155 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))))))))))

(declare-fun lt!40040 () ListLongMap!1481)

(assert (=> d!22015 (= lt!40031 lt!40040)))

(declare-fun lt!40020 () Unit!2445)

(assert (=> d!22015 (= lt!40020 e!55463)))

(declare-fun c!13793 () Bool)

(declare-fun e!55468 () Bool)

(assert (=> d!22015 (= c!13793 e!55468)))

(declare-fun res!43828 () Bool)

(assert (=> d!22015 (=> (not res!43828) (not e!55468))))

(assert (=> d!22015 (= res!43828 (bvslt #b00000000000000000000000000000000 (size!2155 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))))))))

(assert (=> d!22015 (= lt!40040 e!55457)))

(assert (=> d!22015 (= c!13795 (and (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22015 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!22015 (= (getCurrentListMap!440 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) (array!4017 (store (arr!1913 (_values!2300 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (ValueCellFull!921 lt!38748)) (size!2156 (_values!2300 newMap!16))) (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) lt!40031)))

(declare-fun bm!8020 () Bool)

(assert (=> bm!8020 (= call!8024 (contains!757 lt!40031 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85061 () Bool)

(assert (=> b!85061 (= e!55460 (not call!8024))))

(declare-fun bm!8021 () Bool)

(assert (=> bm!8021 (= call!8019 call!8025)))

(declare-fun b!85062 () Bool)

(assert (=> b!85062 (= e!55468 (validKeyInArray!0 (select (arr!1912 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!85063 () Bool)

(assert (=> b!85063 (= e!55464 e!55459)))

(declare-fun c!13792 () Bool)

(assert (=> b!85063 (= c!13792 (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!8022 () Bool)

(assert (=> bm!8022 (= call!8021 call!8022)))

(declare-fun b!85064 () Bool)

(assert (=> b!85064 (= e!55466 (= (apply!81 lt!40031 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2211 newMap!16)))))

(declare-fun b!85065 () Bool)

(assert (=> b!85065 (= e!55462 (validKeyInArray!0 (select (arr!1912 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!85066 () Bool)

(assert (=> b!85066 (= e!55457 e!55456)))

(assert (=> b!85066 (= c!13797 (and (not (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2160 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!85067 () Bool)

(assert (=> b!85067 (= e!55459 e!55465)))

(declare-fun res!43835 () Bool)

(assert (=> b!85067 (= res!43835 call!8023)))

(assert (=> b!85067 (=> (not res!43835) (not e!55465))))

(assert (= (and d!22015 c!13795) b!85051))

(assert (= (and d!22015 (not c!13795)) b!85066))

(assert (= (and b!85066 c!13797) b!85049))

(assert (= (and b!85066 (not c!13797)) b!85058))

(assert (= (and b!85058 c!13794) b!85050))

(assert (= (and b!85058 (not c!13794)) b!85047))

(assert (= (or b!85050 b!85047) bm!8021))

(assert (= (or b!85049 bm!8021) bm!8016))

(assert (= (or b!85049 b!85050) bm!8022))

(assert (= (or b!85051 bm!8016) bm!8017))

(assert (= (or b!85051 bm!8022) bm!8018))

(assert (= (and d!22015 res!43828) b!85062))

(assert (= (and d!22015 c!13793) b!85059))

(assert (= (and d!22015 (not c!13793)) b!85053))

(assert (= (and d!22015 res!43832) b!85054))

(assert (= (and b!85054 res!43831) b!85065))

(assert (= (and b!85054 (not res!43834)) b!85055))

(assert (= (and b!85055 res!43830) b!85060))

(assert (= (and b!85054 res!43833) b!85052))

(assert (= (and b!85052 c!13796) b!85057))

(assert (= (and b!85052 (not c!13796)) b!85061))

(assert (= (and b!85057 res!43829) b!85064))

(assert (= (or b!85057 b!85061) bm!8020))

(assert (= (and b!85052 res!43836) b!85063))

(assert (= (and b!85063 c!13792) b!85067))

(assert (= (and b!85063 (not c!13792)) b!85056))

(assert (= (and b!85067 res!43835) b!85048))

(assert (= (or b!85067 b!85056) bm!8019))

(declare-fun b_lambda!3759 () Bool)

(assert (=> (not b_lambda!3759) (not b!85060)))

(assert (=> b!85060 t!5259))

(declare-fun b_and!5141 () Bool)

(assert (= b_and!5137 (and (=> t!5259 result!2903) b_and!5141)))

(assert (=> b!85060 t!5261))

(declare-fun b_and!5143 () Bool)

(assert (= b_and!5139 (and (=> t!5261 result!2905) b_and!5143)))

(declare-fun m!89207 () Bool)

(assert (=> bm!8017 m!89207))

(declare-fun m!89209 () Bool)

(assert (=> bm!8020 m!89209))

(declare-fun m!89211 () Bool)

(assert (=> bm!8018 m!89211))

(assert (=> b!85065 m!89139))

(assert (=> b!85065 m!89139))

(assert (=> b!85065 m!89147))

(declare-fun m!89213 () Bool)

(assert (=> bm!8019 m!89213))

(assert (=> b!85062 m!89139))

(assert (=> b!85062 m!89139))

(assert (=> b!85062 m!89147))

(assert (=> b!85055 m!89139))

(assert (=> b!85055 m!89139))

(declare-fun m!89215 () Bool)

(assert (=> b!85055 m!89215))

(assert (=> d!22015 m!86023))

(declare-fun m!89217 () Bool)

(assert (=> b!85048 m!89217))

(declare-fun m!89219 () Bool)

(assert (=> b!85059 m!89219))

(declare-fun m!89221 () Bool)

(assert (=> b!85059 m!89221))

(declare-fun m!89223 () Bool)

(assert (=> b!85059 m!89223))

(declare-fun m!89225 () Bool)

(assert (=> b!85059 m!89225))

(declare-fun m!89227 () Bool)

(assert (=> b!85059 m!89227))

(declare-fun m!89229 () Bool)

(assert (=> b!85059 m!89229))

(declare-fun m!89231 () Bool)

(assert (=> b!85059 m!89231))

(assert (=> b!85059 m!89221))

(declare-fun m!89233 () Bool)

(assert (=> b!85059 m!89233))

(declare-fun m!89235 () Bool)

(assert (=> b!85059 m!89235))

(assert (=> b!85059 m!89227))

(declare-fun m!89237 () Bool)

(assert (=> b!85059 m!89237))

(assert (=> b!85059 m!89223))

(assert (=> b!85059 m!89139))

(declare-fun m!89239 () Bool)

(assert (=> b!85059 m!89239))

(declare-fun m!89241 () Bool)

(assert (=> b!85059 m!89241))

(declare-fun m!89243 () Bool)

(assert (=> b!85059 m!89243))

(assert (=> b!85059 m!89207))

(declare-fun m!89245 () Bool)

(assert (=> b!85059 m!89245))

(assert (=> b!85059 m!89237))

(declare-fun m!89247 () Bool)

(assert (=> b!85059 m!89247))

(assert (=> b!85060 m!86089))

(declare-fun m!89249 () Bool)

(assert (=> b!85060 m!89249))

(assert (=> b!85060 m!89139))

(declare-fun m!89251 () Bool)

(assert (=> b!85060 m!89251))

(assert (=> b!85060 m!89139))

(assert (=> b!85060 m!89249))

(assert (=> b!85060 m!86089))

(declare-fun m!89253 () Bool)

(assert (=> b!85060 m!89253))

(declare-fun m!89255 () Bool)

(assert (=> b!85051 m!89255))

(declare-fun m!89257 () Bool)

(assert (=> b!85064 m!89257))

(assert (=> d!20931 d!22015))

(declare-fun d!22017 () Bool)

(declare-fun e!55469 () Bool)

(assert (=> d!22017 e!55469))

(declare-fun res!43837 () Bool)

(assert (=> d!22017 (=> (not res!43837) (not e!55469))))

(assert (=> d!22017 (= res!43837 (and (bvsge (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) #b00000000000000000000000000000000) (bvslt (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (size!2155 lt!39188))))))

(declare-fun lt!40042 () Unit!2445)

(assert (=> d!22017 (= lt!40042 (choose!493 lt!39188 lt!39189 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (defaultEntry!2317 newMap!16)))))

(assert (=> d!22017 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!22017 (= (lemmaValidKeyInArrayIsInListMap!88 lt!39188 lt!39189 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (defaultEntry!2317 newMap!16)) lt!40042)))

(declare-fun b!85068 () Bool)

(assert (=> b!85068 (= e!55469 (contains!757 (getCurrentListMap!440 lt!39188 lt!39189 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (select (arr!1912 lt!39188) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)))))))

(assert (= (and d!22017 res!43837) b!85068))

(declare-fun m!89259 () Bool)

(assert (=> d!22017 m!89259))

(assert (=> d!22017 m!86023))

(assert (=> b!85068 m!86161))

(declare-fun m!89261 () Bool)

(assert (=> b!85068 m!89261))

(assert (=> b!85068 m!86161))

(assert (=> b!85068 m!89261))

(declare-fun m!89263 () Bool)

(assert (=> b!85068 m!89263))

(assert (=> d!20931 d!22017))

(declare-fun d!22019 () Bool)

(declare-fun e!55470 () Bool)

(assert (=> d!22019 e!55470))

(declare-fun res!43838 () Bool)

(assert (=> d!22019 (=> res!43838 e!55470)))

(declare-fun lt!40043 () Bool)

(assert (=> d!22019 (= res!43838 (not lt!40043))))

(declare-fun lt!40045 () Bool)

(assert (=> d!22019 (= lt!40043 lt!40045)))

(declare-fun lt!40046 () Unit!2445)

(declare-fun e!55471 () Unit!2445)

(assert (=> d!22019 (= lt!40046 e!55471)))

(declare-fun c!13798 () Bool)

(assert (=> d!22019 (= c!13798 lt!40045)))

(assert (=> d!22019 (= lt!40045 (containsKey!142 (toList!756 (getCurrentListMap!440 lt!39188 lt!39189 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)))))))

(assert (=> d!22019 (= (contains!757 (getCurrentListMap!440 lt!39188 lt!39189 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (select (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)))) lt!40043)))

(declare-fun b!85069 () Bool)

(declare-fun lt!40044 () Unit!2445)

(assert (=> b!85069 (= e!55471 lt!40044)))

(assert (=> b!85069 (= lt!40044 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 (getCurrentListMap!440 lt!39188 lt!39189 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)))))))

(assert (=> b!85069 (isDefined!92 (getValueByKey!138 (toList!756 (getCurrentListMap!440 lt!39188 lt!39189 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)))))))

(declare-fun b!85070 () Bool)

(declare-fun Unit!2527 () Unit!2445)

(assert (=> b!85070 (= e!55471 Unit!2527)))

(declare-fun b!85071 () Bool)

(assert (=> b!85071 (= e!55470 (isDefined!92 (getValueByKey!138 (toList!756 (getCurrentListMap!440 lt!39188 lt!39189 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16))) (select (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899))))))))

(assert (= (and d!22019 c!13798) b!85069))

(assert (= (and d!22019 (not c!13798)) b!85070))

(assert (= (and d!22019 (not res!43838)) b!85071))

(assert (=> d!22019 m!86159))

(declare-fun m!89265 () Bool)

(assert (=> d!22019 m!89265))

(assert (=> b!85069 m!86159))

(declare-fun m!89267 () Bool)

(assert (=> b!85069 m!89267))

(assert (=> b!85069 m!86159))

(declare-fun m!89269 () Bool)

(assert (=> b!85069 m!89269))

(assert (=> b!85069 m!89269))

(declare-fun m!89271 () Bool)

(assert (=> b!85069 m!89271))

(assert (=> b!85071 m!86159))

(assert (=> b!85071 m!89269))

(assert (=> b!85071 m!89269))

(assert (=> b!85071 m!89271))

(assert (=> d!20931 d!22019))

(assert (=> d!20931 d!21591))

(assert (=> d!20931 d!20915))

(declare-fun d!22021 () Bool)

(declare-fun e!55474 () Bool)

(assert (=> d!22021 e!55474))

(declare-fun res!43841 () Bool)

(assert (=> d!22021 (=> (not res!43841) (not e!55474))))

(assert (=> d!22021 (= res!43841 (and (bvsge (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) #b00000000000000000000000000000000) (bvslt (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (size!2155 (_keys!3985 newMap!16)))))))

(declare-fun lt!40049 () Unit!2445)

(declare-fun choose!41 (array!4014 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1548) Unit!2445)

(assert (=> d!22021 (= lt!40049 (choose!41 (_keys!3985 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) lt!39168 lt!39190))))

(assert (=> d!22021 (bvslt (size!2155 (_keys!3985 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!22021 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3985 newMap!16) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) lt!39168 lt!39190) lt!40049)))

(declare-fun b!85074 () Bool)

(assert (=> b!85074 (= e!55474 (arrayNoDuplicates!0 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) lt!39168 lt!39190))))

(assert (= (and d!22021 res!43841) b!85074))

(assert (=> d!22021 m!85591))

(declare-fun m!89273 () Bool)

(assert (=> d!22021 m!89273))

(assert (=> b!85074 m!86179))

(assert (=> b!85074 m!86171))

(assert (=> d!20931 d!22021))

(assert (=> d!20931 d!20917))

(declare-fun d!22023 () Bool)

(declare-fun res!43842 () Bool)

(declare-fun e!55475 () Bool)

(assert (=> d!22023 (=> res!43842 e!55475)))

(assert (=> d!22023 (= res!43842 (= (select (arr!1912 lt!39182) #b00000000000000000000000000000000) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> d!22023 (= (arrayContainsKey!0 lt!39182 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b00000000000000000000000000000000) e!55475)))

(declare-fun b!85075 () Bool)

(declare-fun e!55476 () Bool)

(assert (=> b!85075 (= e!55475 e!55476)))

(declare-fun res!43843 () Bool)

(assert (=> b!85075 (=> (not res!43843) (not e!55476))))

(assert (=> b!85075 (= res!43843 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2155 lt!39182)))))

(declare-fun b!85076 () Bool)

(assert (=> b!85076 (= e!55476 (arrayContainsKey!0 lt!39182 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!22023 (not res!43842)) b!85075))

(assert (= (and b!85075 res!43843) b!85076))

(declare-fun m!89275 () Bool)

(assert (=> d!22023 m!89275))

(assert (=> b!85076 m!85591))

(declare-fun m!89277 () Bool)

(assert (=> b!85076 m!89277))

(assert (=> d!20931 d!22023))

(declare-fun b!85077 () Bool)

(declare-fun e!55478 () (_ BitVec 32))

(assert (=> b!85077 (= e!55478 #b00000000000000000000000000000000)))

(declare-fun bm!8023 () Bool)

(declare-fun call!8026 () (_ BitVec 32))

(assert (=> bm!8023 (= call!8026 (arrayCountValidKeys!0 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2155 (_keys!3985 newMap!16))))))

(declare-fun d!22025 () Bool)

(declare-fun lt!40050 () (_ BitVec 32))

(assert (=> d!22025 (and (bvsge lt!40050 #b00000000000000000000000000000000) (bvsle lt!40050 (bvsub (size!2155 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!22025 (= lt!40050 e!55478)))

(declare-fun c!13799 () Bool)

(assert (=> d!22025 (= c!13799 (bvsge #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))))))

(assert (=> d!22025 (and (bvsle #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2155 (_keys!3985 newMap!16)) (size!2155 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))))))))

(assert (=> d!22025 (= (arrayCountValidKeys!0 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))) lt!40050)))

(declare-fun b!85078 () Bool)

(declare-fun e!55477 () (_ BitVec 32))

(assert (=> b!85078 (= e!55477 (bvadd #b00000000000000000000000000000001 call!8026))))

(declare-fun b!85079 () Bool)

(assert (=> b!85079 (= e!55478 e!55477)))

(declare-fun c!13800 () Bool)

(assert (=> b!85079 (= c!13800 (validKeyInArray!0 (select (arr!1912 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!85080 () Bool)

(assert (=> b!85080 (= e!55477 call!8026)))

(assert (= (and d!22025 c!13799) b!85077))

(assert (= (and d!22025 (not c!13799)) b!85079))

(assert (= (and b!85079 c!13800) b!85078))

(assert (= (and b!85079 (not c!13800)) b!85080))

(assert (= (or b!85078 b!85080) bm!8023))

(declare-fun m!89279 () Bool)

(assert (=> bm!8023 m!89279))

(assert (=> b!85079 m!89139))

(assert (=> b!85079 m!89139))

(assert (=> b!85079 m!89147))

(assert (=> d!20931 d!22025))

(declare-fun b!85089 () Bool)

(declare-fun res!43854 () Bool)

(declare-fun e!55483 () Bool)

(assert (=> b!85089 (=> (not res!43854) (not e!55483))))

(assert (=> b!85089 (= res!43854 (not (validKeyInArray!0 (select (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899))))))))

(declare-fun b!85091 () Bool)

(assert (=> b!85091 (= e!55483 (bvslt (size!2155 (_keys!3985 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun d!22027 () Bool)

(declare-fun e!55484 () Bool)

(assert (=> d!22027 e!55484))

(declare-fun res!43853 () Bool)

(assert (=> d!22027 (=> (not res!43853) (not e!55484))))

(assert (=> d!22027 (= res!43853 (and (bvsge (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) #b00000000000000000000000000000000) (bvslt (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (size!2155 (_keys!3985 newMap!16)))))))

(declare-fun lt!40053 () Unit!2445)

(declare-fun choose!1 (array!4014 (_ BitVec 32) (_ BitVec 64)) Unit!2445)

(assert (=> d!22027 (= lt!40053 (choose!1 (_keys!3985 newMap!16) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (=> d!22027 e!55483))

(declare-fun res!43852 () Bool)

(assert (=> d!22027 (=> (not res!43852) (not e!55483))))

(assert (=> d!22027 (= res!43852 (and (bvsge (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) #b00000000000000000000000000000000) (bvslt (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (size!2155 (_keys!3985 newMap!16)))))))

(assert (=> d!22027 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3985 newMap!16) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) lt!40053)))

(declare-fun b!85090 () Bool)

(declare-fun res!43855 () Bool)

(assert (=> b!85090 (=> (not res!43855) (not e!55483))))

(assert (=> b!85090 (= res!43855 (validKeyInArray!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun b!85092 () Bool)

(assert (=> b!85092 (= e!55484 (= (arrayCountValidKeys!0 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3985 newMap!16) #b00000000000000000000000000000000 (size!2155 (_keys!3985 newMap!16))) #b00000000000000000000000000000001)))))

(assert (= (and d!22027 res!43852) b!85089))

(assert (= (and b!85089 res!43854) b!85090))

(assert (= (and b!85090 res!43855) b!85091))

(assert (= (and d!22027 res!43853) b!85092))

(declare-fun m!89281 () Bool)

(assert (=> b!85089 m!89281))

(assert (=> b!85089 m!89281))

(declare-fun m!89283 () Bool)

(assert (=> b!85089 m!89283))

(assert (=> d!22027 m!85591))

(declare-fun m!89285 () Bool)

(assert (=> d!22027 m!89285))

(assert (=> b!85090 m!85591))

(assert (=> b!85090 m!85787))

(assert (=> b!85092 m!86179))

(assert (=> b!85092 m!86177))

(assert (=> b!85092 m!85701))

(assert (=> d!20931 d!22027))

(declare-fun d!22029 () Bool)

(declare-fun res!43857 () Bool)

(declare-fun e!55487 () Bool)

(assert (=> d!22029 (=> res!43857 e!55487)))

(assert (=> d!22029 (= res!43857 (bvsge lt!39168 (size!2155 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))))))))

(assert (=> d!22029 (= (arrayNoDuplicates!0 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) lt!39168 lt!39190) e!55487)))

(declare-fun b!85093 () Bool)

(declare-fun e!55488 () Bool)

(assert (=> b!85093 (= e!55487 e!55488)))

(declare-fun res!43856 () Bool)

(assert (=> b!85093 (=> (not res!43856) (not e!55488))))

(declare-fun e!55486 () Bool)

(assert (=> b!85093 (= res!43856 (not e!55486))))

(declare-fun res!43858 () Bool)

(assert (=> b!85093 (=> (not res!43858) (not e!55486))))

(assert (=> b!85093 (= res!43858 (validKeyInArray!0 (select (arr!1912 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16)))) lt!39168)))))

(declare-fun b!85094 () Bool)

(declare-fun e!55485 () Bool)

(declare-fun call!8027 () Bool)

(assert (=> b!85094 (= e!55485 call!8027)))

(declare-fun bm!8024 () Bool)

(declare-fun c!13801 () Bool)

(assert (=> bm!8024 (= call!8027 (arrayNoDuplicates!0 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) (bvadd lt!39168 #b00000000000000000000000000000001) (ite c!13801 (Cons!1544 (select (arr!1912 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16)))) lt!39168) lt!39190) lt!39190)))))

(declare-fun b!85095 () Bool)

(assert (=> b!85095 (= e!55488 e!55485)))

(assert (=> b!85095 (= c!13801 (validKeyInArray!0 (select (arr!1912 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16)))) lt!39168)))))

(declare-fun b!85096 () Bool)

(assert (=> b!85096 (= e!55486 (contains!759 lt!39190 (select (arr!1912 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16)))) lt!39168)))))

(declare-fun b!85097 () Bool)

(assert (=> b!85097 (= e!55485 call!8027)))

(assert (= (and d!22029 (not res!43857)) b!85093))

(assert (= (and b!85093 res!43858) b!85096))

(assert (= (and b!85093 res!43856) b!85095))

(assert (= (and b!85095 c!13801) b!85094))

(assert (= (and b!85095 (not c!13801)) b!85097))

(assert (= (or b!85094 b!85097) bm!8024))

(declare-fun m!89287 () Bool)

(assert (=> b!85093 m!89287))

(assert (=> b!85093 m!89287))

(declare-fun m!89289 () Bool)

(assert (=> b!85093 m!89289))

(assert (=> bm!8024 m!89287))

(declare-fun m!89291 () Bool)

(assert (=> bm!8024 m!89291))

(assert (=> b!85095 m!89287))

(assert (=> b!85095 m!89287))

(assert (=> b!85095 m!89289))

(assert (=> b!85096 m!89287))

(assert (=> b!85096 m!89287))

(declare-fun m!89293 () Bool)

(assert (=> b!85096 m!89293))

(assert (=> d!20931 d!22029))

(declare-fun d!22031 () Bool)

(declare-fun e!55491 () Bool)

(assert (=> d!22031 e!55491))

(declare-fun res!43861 () Bool)

(assert (=> d!22031 (=> (not res!43861) (not e!55491))))

(assert (=> d!22031 (= res!43861 (and (bvsge (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) #b00000000000000000000000000000000) (bvslt (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (size!2155 (_keys!3985 newMap!16)))))))

(declare-fun lt!40056 () Unit!2445)

(declare-fun choose!102 ((_ BitVec 64) array!4014 (_ BitVec 32) (_ BitVec 32)) Unit!2445)

(assert (=> d!22031 (= lt!40056 (choose!102 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (_keys!3985 newMap!16) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (mask!6335 newMap!16)))))

(assert (=> d!22031 (validMask!0 (mask!6335 newMap!16))))

(assert (=> d!22031 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (_keys!3985 newMap!16) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (mask!6335 newMap!16)) lt!40056)))

(declare-fun b!85100 () Bool)

(assert (=> b!85100 (= e!55491 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4015 (store (arr!1912 (_keys!3985 newMap!16)) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) (size!2155 (_keys!3985 newMap!16))) (mask!6335 newMap!16)))))

(assert (= (and d!22031 res!43861) b!85100))

(assert (=> d!22031 m!85591))

(declare-fun m!89295 () Bool)

(assert (=> d!22031 m!89295))

(assert (=> d!22031 m!86023))

(assert (=> b!85100 m!86179))

(assert (=> b!85100 m!86191))

(assert (=> d!20931 d!22031))

(declare-fun d!22033 () Bool)

(assert (=> d!22033 (arrayContainsKey!0 lt!39182 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!40057 () Unit!2445)

(assert (=> d!22033 (= lt!40057 (choose!13 lt!39182 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899))))))

(assert (=> d!22033 (bvsge (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) #b00000000000000000000000000000000)))

(assert (=> d!22033 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!39182 (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899))) lt!40057)))

(declare-fun bs!3590 () Bool)

(assert (= bs!3590 d!22033))

(assert (=> bs!3590 m!85591))

(assert (=> bs!3590 m!86183))

(assert (=> bs!3590 m!85591))

(declare-fun m!89297 () Bool)

(assert (=> bs!3590 m!89297))

(assert (=> d!20931 d!22033))

(declare-fun d!22035 () Bool)

(assert (=> d!22035 (= (arrayCountValidKeys!0 lt!39174 (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (bvadd (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!40060 () Unit!2445)

(declare-fun choose!2 (array!4014 (_ BitVec 32)) Unit!2445)

(assert (=> d!22035 (= lt!40060 (choose!2 lt!39174 (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899))))))

(declare-fun e!55494 () Bool)

(assert (=> d!22035 e!55494))

(declare-fun res!43866 () Bool)

(assert (=> d!22035 (=> (not res!43866) (not e!55494))))

(assert (=> d!22035 (= res!43866 (and (bvsge (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) #b00000000000000000000000000000000) (bvslt (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (size!2155 lt!39174))))))

(assert (=> d!22035 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!39174 (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899))) lt!40060)))

(declare-fun b!85105 () Bool)

(declare-fun res!43867 () Bool)

(assert (=> b!85105 (=> (not res!43867) (not e!55494))))

(assert (=> b!85105 (= res!43867 (validKeyInArray!0 (select (arr!1912 lt!39174) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)))))))

(declare-fun b!85106 () Bool)

(assert (=> b!85106 (= e!55494 (bvslt (size!2155 lt!39174) #b01111111111111111111111111111111))))

(assert (= (and d!22035 res!43866) b!85105))

(assert (= (and b!85105 res!43867) b!85106))

(assert (=> d!22035 m!86165))

(declare-fun m!89299 () Bool)

(assert (=> d!22035 m!89299))

(declare-fun m!89301 () Bool)

(assert (=> b!85105 m!89301))

(assert (=> b!85105 m!89301))

(declare-fun m!89303 () Bool)

(assert (=> b!85105 m!89303))

(assert (=> d!20931 d!22035))

(declare-fun b!85107 () Bool)

(declare-fun e!55496 () (_ BitVec 32))

(assert (=> b!85107 (= e!55496 #b00000000000000000000000000000000)))

(declare-fun call!8028 () (_ BitVec 32))

(declare-fun bm!8025 () Bool)

(assert (=> bm!8025 (= call!8028 (arrayCountValidKeys!0 lt!39174 (bvadd (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) #b00000000000000000000000000000001) (bvadd (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) #b00000000000000000000000000000001)))))

(declare-fun lt!40061 () (_ BitVec 32))

(declare-fun d!22037 () Bool)

(assert (=> d!22037 (and (bvsge lt!40061 #b00000000000000000000000000000000) (bvsle lt!40061 (bvsub (size!2155 lt!39174) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)))))))

(assert (=> d!22037 (= lt!40061 e!55496)))

(declare-fun c!13802 () Bool)

(assert (=> d!22037 (= c!13802 (bvsge (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (bvadd (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) #b00000000000000000000000000000001)))))

(assert (=> d!22037 (and (bvsle (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (bvadd (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) #b00000000000000000000000000000001)) (bvsge (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) #b00000000000000000000000000000001) (size!2155 lt!39174)))))

(assert (=> d!22037 (= (arrayCountValidKeys!0 lt!39174 (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) (bvadd (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)) #b00000000000000000000000000000001)) lt!40061)))

(declare-fun b!85108 () Bool)

(declare-fun e!55495 () (_ BitVec 32))

(assert (=> b!85108 (= e!55495 (bvadd #b00000000000000000000000000000001 call!8028))))

(declare-fun b!85109 () Bool)

(assert (=> b!85109 (= e!55496 e!55495)))

(declare-fun c!13803 () Bool)

(assert (=> b!85109 (= c!13803 (validKeyInArray!0 (select (arr!1912 lt!39174) (ite c!13214 (index!3147 lt!38899) (index!3144 lt!38899)))))))

(declare-fun b!85110 () Bool)

(assert (=> b!85110 (= e!55495 call!8028)))

(assert (= (and d!22037 c!13802) b!85107))

(assert (= (and d!22037 (not c!13802)) b!85109))

(assert (= (and b!85109 c!13803) b!85108))

(assert (= (and b!85109 (not c!13803)) b!85110))

(assert (= (or b!85108 b!85110) bm!8025))

(declare-fun m!89305 () Bool)

(assert (=> bm!8025 m!89305))

(assert (=> b!85109 m!89301))

(assert (=> b!85109 m!89301))

(assert (=> b!85109 m!89303))

(assert (=> d!20931 d!22037))

(assert (=> b!83432 d!21737))

(assert (=> b!83432 d!21739))

(assert (=> b!83702 d!21843))

(declare-fun d!22039 () Bool)

(assert (=> d!22039 (= (get!1209 (getValueByKey!138 (toList!756 lt!38974) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2636 (getValueByKey!138 (toList!756 lt!38974) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!21113 d!22039))

(assert (=> d!21113 d!21435))

(declare-fun d!22041 () Bool)

(assert (=> d!22041 (= (apply!81 lt!39083 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1209 (getValueByKey!138 (toList!756 lt!39083) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3591 () Bool)

(assert (= bs!3591 d!22041))

(assert (=> bs!3591 m!86953))

(assert (=> bs!3591 m!86953))

(declare-fun m!89307 () Bool)

(assert (=> bs!3591 m!89307))

(assert (=> b!83245 d!22041))

(declare-fun d!22043 () Bool)

(declare-fun res!43868 () Bool)

(declare-fun e!55497 () Bool)

(assert (=> d!22043 (=> res!43868 e!55497)))

(assert (=> d!22043 (= res!43868 (and ((_ is Cons!1543) (toList!756 lt!39033)) (= (_1!1120 (h!2133 (toList!756 lt!39033))) (_1!1120 lt!38760))))))

(assert (=> d!22043 (= (containsKey!142 (toList!756 lt!39033) (_1!1120 lt!38760)) e!55497)))

(declare-fun b!85111 () Bool)

(declare-fun e!55498 () Bool)

(assert (=> b!85111 (= e!55497 e!55498)))

(declare-fun res!43869 () Bool)

(assert (=> b!85111 (=> (not res!43869) (not e!55498))))

(assert (=> b!85111 (= res!43869 (and (or (not ((_ is Cons!1543) (toList!756 lt!39033))) (bvsle (_1!1120 (h!2133 (toList!756 lt!39033))) (_1!1120 lt!38760))) ((_ is Cons!1543) (toList!756 lt!39033)) (bvslt (_1!1120 (h!2133 (toList!756 lt!39033))) (_1!1120 lt!38760))))))

(declare-fun b!85112 () Bool)

(assert (=> b!85112 (= e!55498 (containsKey!142 (t!5251 (toList!756 lt!39033)) (_1!1120 lt!38760)))))

(assert (= (and d!22043 (not res!43868)) b!85111))

(assert (= (and b!85111 res!43869) b!85112))

(declare-fun m!89309 () Bool)

(assert (=> b!85112 m!89309))

(assert (=> d!20949 d!22043))

(declare-fun bm!8026 () Bool)

(declare-fun call!8030 () List!1547)

(declare-fun call!8029 () List!1547)

(assert (=> bm!8026 (= call!8030 call!8029)))

(declare-fun b!85113 () Bool)

(declare-fun e!55502 () List!1547)

(assert (=> b!85113 (= e!55502 call!8030)))

(declare-fun b!85114 () Bool)

(declare-fun e!55501 () List!1547)

(declare-fun call!8031 () List!1547)

(assert (=> b!85114 (= e!55501 call!8031)))

(declare-fun b!85115 () Bool)

(declare-fun e!55500 () List!1547)

(assert (=> b!85115 (= e!55500 (insertStrictlySorted!59 (t!5251 (t!5251 (toList!756 lt!38751))) (_1!1120 lt!38747) (_2!1120 lt!38747)))))

(declare-fun b!85116 () Bool)

(assert (=> b!85116 (= e!55501 call!8031)))

(declare-fun b!85117 () Bool)

(declare-fun res!43870 () Bool)

(declare-fun e!55503 () Bool)

(assert (=> b!85117 (=> (not res!43870) (not e!55503))))

(declare-fun lt!40062 () List!1547)

(assert (=> b!85117 (= res!43870 (containsKey!142 lt!40062 (_1!1120 lt!38747)))))

(declare-fun d!22045 () Bool)

(assert (=> d!22045 e!55503))

(declare-fun res!43871 () Bool)

(assert (=> d!22045 (=> (not res!43871) (not e!55503))))

(assert (=> d!22045 (= res!43871 (isStrictlySorted!292 lt!40062))))

(declare-fun e!55499 () List!1547)

(assert (=> d!22045 (= lt!40062 e!55499)))

(declare-fun c!13805 () Bool)

(assert (=> d!22045 (= c!13805 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38751))) (bvslt (_1!1120 (h!2133 (t!5251 (toList!756 lt!38751)))) (_1!1120 lt!38747))))))

(assert (=> d!22045 (isStrictlySorted!292 (t!5251 (toList!756 lt!38751)))))

(assert (=> d!22045 (= (insertStrictlySorted!59 (t!5251 (toList!756 lt!38751)) (_1!1120 lt!38747) (_2!1120 lt!38747)) lt!40062)))

(declare-fun b!85118 () Bool)

(assert (=> b!85118 (= e!55503 (contains!760 lt!40062 (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747))))))

(declare-fun b!85119 () Bool)

(assert (=> b!85119 (= e!55499 e!55502)))

(declare-fun c!13804 () Bool)

(assert (=> b!85119 (= c!13804 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38751))) (= (_1!1120 (h!2133 (t!5251 (toList!756 lt!38751)))) (_1!1120 lt!38747))))))

(declare-fun b!85120 () Bool)

(declare-fun c!13807 () Bool)

(assert (=> b!85120 (= e!55500 (ite c!13804 (t!5251 (t!5251 (toList!756 lt!38751))) (ite c!13807 (Cons!1543 (h!2133 (t!5251 (toList!756 lt!38751))) (t!5251 (t!5251 (toList!756 lt!38751)))) Nil!1544)))))

(declare-fun b!85121 () Bool)

(assert (=> b!85121 (= c!13807 (and ((_ is Cons!1543) (t!5251 (toList!756 lt!38751))) (bvsgt (_1!1120 (h!2133 (t!5251 (toList!756 lt!38751)))) (_1!1120 lt!38747))))))

(assert (=> b!85121 (= e!55502 e!55501)))

(declare-fun bm!8027 () Bool)

(assert (=> bm!8027 (= call!8029 ($colon$colon!70 e!55500 (ite c!13805 (h!2133 (t!5251 (toList!756 lt!38751))) (tuple2!2221 (_1!1120 lt!38747) (_2!1120 lt!38747)))))))

(declare-fun c!13806 () Bool)

(assert (=> bm!8027 (= c!13806 c!13805)))

(declare-fun b!85122 () Bool)

(assert (=> b!85122 (= e!55499 call!8029)))

(declare-fun bm!8028 () Bool)

(assert (=> bm!8028 (= call!8031 call!8030)))

(assert (= (and d!22045 c!13805) b!85122))

(assert (= (and d!22045 (not c!13805)) b!85119))

(assert (= (and b!85119 c!13804) b!85113))

(assert (= (and b!85119 (not c!13804)) b!85121))

(assert (= (and b!85121 c!13807) b!85116))

(assert (= (and b!85121 (not c!13807)) b!85114))

(assert (= (or b!85116 b!85114) bm!8028))

(assert (= (or b!85113 bm!8028) bm!8026))

(assert (= (or b!85122 bm!8026) bm!8027))

(assert (= (and bm!8027 c!13806) b!85115))

(assert (= (and bm!8027 (not c!13806)) b!85120))

(assert (= (and d!22045 res!43871) b!85117))

(assert (= (and b!85117 res!43870) b!85118))

(declare-fun m!89311 () Bool)

(assert (=> d!22045 m!89311))

(assert (=> d!22045 m!88523))

(declare-fun m!89313 () Bool)

(assert (=> b!85115 m!89313))

(declare-fun m!89315 () Bool)

(assert (=> b!85118 m!89315))

(declare-fun m!89317 () Bool)

(assert (=> bm!8027 m!89317))

(declare-fun m!89319 () Bool)

(assert (=> b!85117 m!89319))

(assert (=> b!83444 d!22045))

(declare-fun d!22047 () Bool)

(assert (=> d!22047 (isDefined!92 (getValueByKey!138 (toList!756 call!7759) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun lt!40063 () Unit!2445)

(assert (=> d!22047 (= lt!40063 (choose!496 (toList!756 call!7759) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(declare-fun e!55504 () Bool)

(assert (=> d!22047 e!55504))

(declare-fun res!43872 () Bool)

(assert (=> d!22047 (=> (not res!43872) (not e!55504))))

(assert (=> d!22047 (= res!43872 (isStrictlySorted!292 (toList!756 call!7759)))))

(assert (=> d!22047 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 call!7759) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)) lt!40063)))

(declare-fun b!85123 () Bool)

(assert (=> b!85123 (= e!55504 (containsKey!142 (toList!756 call!7759) (select (arr!1912 (_keys!3985 (v!2632 (underlying!290 thiss!992)))) from!355)))))

(assert (= (and d!22047 res!43872) b!85123))

(assert (=> d!22047 m!85591))

(assert (=> d!22047 m!86133))

(assert (=> d!22047 m!86133))

(assert (=> d!22047 m!86135))

(assert (=> d!22047 m!85591))

(declare-fun m!89321 () Bool)

(assert (=> d!22047 m!89321))

(declare-fun m!89323 () Bool)

(assert (=> d!22047 m!89323))

(assert (=> b!85123 m!85591))

(assert (=> b!85123 m!86129))

(assert (=> b!83257 d!22047))

(assert (=> b!83257 d!21351))

(assert (=> b!83257 d!21353))

(declare-fun d!22049 () Bool)

(assert (=> d!22049 (= (inRange!0 (ite c!13285 (index!3145 lt!39167) (ite c!13287 (index!3144 lt!39176) (index!3147 lt!39176))) (mask!6335 newMap!16)) (and (bvsge (ite c!13285 (index!3145 lt!39167) (ite c!13287 (index!3144 lt!39176) (index!3147 lt!39176))) #b00000000000000000000000000000000) (bvslt (ite c!13285 (index!3145 lt!39167) (ite c!13287 (index!3144 lt!39176) (index!3147 lt!39176))) (bvadd (mask!6335 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7823 d!22049))

(declare-fun d!22051 () Bool)

(declare-fun lt!40064 () Bool)

(assert (=> d!22051 (= lt!40064 (select (content!87 (t!5251 (toList!756 lt!39037))) lt!38760))))

(declare-fun e!55505 () Bool)

(assert (=> d!22051 (= lt!40064 e!55505)))

(declare-fun res!43873 () Bool)

(assert (=> d!22051 (=> (not res!43873) (not e!55505))))

(assert (=> d!22051 (= res!43873 ((_ is Cons!1543) (t!5251 (toList!756 lt!39037))))))

(assert (=> d!22051 (= (contains!760 (t!5251 (toList!756 lt!39037)) lt!38760) lt!40064)))

(declare-fun b!85124 () Bool)

(declare-fun e!55506 () Bool)

(assert (=> b!85124 (= e!55505 e!55506)))

(declare-fun res!43874 () Bool)

(assert (=> b!85124 (=> res!43874 e!55506)))

(assert (=> b!85124 (= res!43874 (= (h!2133 (t!5251 (toList!756 lt!39037))) lt!38760))))

(declare-fun b!85125 () Bool)

(assert (=> b!85125 (= e!55506 (contains!760 (t!5251 (t!5251 (toList!756 lt!39037))) lt!38760))))

(assert (= (and d!22051 res!43873) b!85124))

(assert (= (and b!85124 (not res!43874)) b!85125))

(assert (=> d!22051 m!87211))

(declare-fun m!89325 () Bool)

(assert (=> d!22051 m!89325))

(declare-fun m!89327 () Bool)

(assert (=> b!85125 m!89327))

(assert (=> b!83553 d!22051))

(assert (=> b!83512 d!21181))

(assert (=> bm!7880 d!20989))

(declare-fun d!22053 () Bool)

(declare-fun res!43875 () Bool)

(declare-fun e!55507 () Bool)

(assert (=> d!22053 (=> res!43875 e!55507)))

(assert (=> d!22053 (= res!43875 (or ((_ is Nil!1544) lt!39211) ((_ is Nil!1544) (t!5251 lt!39211))))))

(assert (=> d!22053 (= (isStrictlySorted!292 lt!39211) e!55507)))

(declare-fun b!85126 () Bool)

(declare-fun e!55508 () Bool)

(assert (=> b!85126 (= e!55507 e!55508)))

(declare-fun res!43876 () Bool)

(assert (=> b!85126 (=> (not res!43876) (not e!55508))))

(assert (=> b!85126 (= res!43876 (bvslt (_1!1120 (h!2133 lt!39211)) (_1!1120 (h!2133 (t!5251 lt!39211)))))))

(declare-fun b!85127 () Bool)

(assert (=> b!85127 (= e!55508 (isStrictlySorted!292 (t!5251 lt!39211)))))

(assert (= (and d!22053 (not res!43875)) b!85126))

(assert (= (and b!85126 res!43876) b!85127))

(declare-fun m!89329 () Bool)

(assert (=> b!85127 m!89329))

(assert (=> d!20947 d!22053))

(assert (=> d!20947 d!21587))

(assert (=> b!83533 d!21767))

(assert (=> b!83533 d!21769))

(declare-fun d!22055 () Bool)

(assert (=> d!22055 (contains!757 (getCurrentListMap!440 (_keys!3985 newMap!16) lt!38887 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2317 newMap!16)) (select (arr!1912 (_keys!3985 newMap!16)) (index!3145 lt!38899)))))

(assert (=> d!22055 true))

(declare-fun _$16!105 () Unit!2445)

(assert (=> d!22055 (= (choose!493 (_keys!3985 newMap!16) lt!38887 (mask!6335 newMap!16) (extraKeys!2160 newMap!16) (zeroValue!2211 newMap!16) (minValue!2211 newMap!16) (index!3145 lt!38899) (defaultEntry!2317 newMap!16)) _$16!105)))

(declare-fun bs!3592 () Bool)

(assert (= bs!3592 d!22055))

(assert (=> bs!3592 m!86025))

(assert (=> bs!3592 m!85769))

(assert (=> bs!3592 m!86025))

(assert (=> bs!3592 m!85769))

(assert (=> bs!3592 m!86027))

(assert (=> d!20911 d!22055))

(assert (=> d!20911 d!21219))

(assert (=> b!83254 d!21759))

(assert (=> b!83254 d!21761))

(assert (=> bm!7807 d!21877))

(declare-fun lt!40065 () Bool)

(declare-fun d!22057 () Bool)

(assert (=> d!22057 (= lt!40065 (select (content!87 (toList!756 lt!39251)) (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun e!55509 () Bool)

(assert (=> d!22057 (= lt!40065 e!55509)))

(declare-fun res!43877 () Bool)

(assert (=> d!22057 (=> (not res!43877) (not e!55509))))

(assert (=> d!22057 (= res!43877 ((_ is Cons!1543) (toList!756 lt!39251)))))

(assert (=> d!22057 (= (contains!760 (toList!756 lt!39251) (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!40065)))

(declare-fun b!85128 () Bool)

(declare-fun e!55510 () Bool)

(assert (=> b!85128 (= e!55509 e!55510)))

(declare-fun res!43878 () Bool)

(assert (=> b!85128 (=> res!43878 e!55510)))

(assert (=> b!85128 (= res!43878 (= (h!2133 (toList!756 lt!39251)) (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(declare-fun b!85129 () Bool)

(assert (=> b!85129 (= e!55510 (contains!760 (t!5251 (toList!756 lt!39251)) (tuple2!2221 lt!38981 (minValue!2211 (v!2632 (underlying!290 thiss!992))))))))

(assert (= (and d!22057 res!43877) b!85128))

(assert (= (and b!85128 (not res!43878)) b!85129))

(declare-fun m!89331 () Bool)

(assert (=> d!22057 m!89331))

(declare-fun m!89333 () Bool)

(assert (=> d!22057 m!89333))

(declare-fun m!89335 () Bool)

(assert (=> b!85129 m!89335))

(assert (=> b!83486 d!22057))

(assert (=> d!21013 d!21011))

(assert (=> d!21013 d!21015))

(declare-fun d!22059 () Bool)

(assert (=> d!22059 (contains!757 (+!114 lt!38975 (tuple2!2221 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))))) lt!38972)))

(assert (=> d!22059 true))

(declare-fun _$35!327 () Unit!2445)

(assert (=> d!22059 (= (choose!498 lt!38975 lt!38968 (zeroValue!2211 (v!2632 (underlying!290 thiss!992))) lt!38972) _$35!327)))

(declare-fun bs!3593 () Bool)

(assert (= bs!3593 d!22059))

(assert (=> bs!3593 m!85807))

(assert (=> bs!3593 m!85807))

(assert (=> bs!3593 m!85819))

(assert (=> d!21013 d!22059))

(declare-fun d!22061 () Bool)

(declare-fun e!55511 () Bool)

(assert (=> d!22061 e!55511))

(declare-fun res!43879 () Bool)

(assert (=> d!22061 (=> res!43879 e!55511)))

(declare-fun lt!40066 () Bool)

(assert (=> d!22061 (= res!43879 (not lt!40066))))

(declare-fun lt!40068 () Bool)

(assert (=> d!22061 (= lt!40066 lt!40068)))

(declare-fun lt!40069 () Unit!2445)

(declare-fun e!55512 () Unit!2445)

(assert (=> d!22061 (= lt!40069 e!55512)))

(declare-fun c!13808 () Bool)

(assert (=> d!22061 (= c!13808 lt!40068)))

(assert (=> d!22061 (= lt!40068 (containsKey!142 (toList!756 lt!38975) lt!38972))))

(assert (=> d!22061 (= (contains!757 lt!38975 lt!38972) lt!40066)))

(declare-fun b!85131 () Bool)

(declare-fun lt!40067 () Unit!2445)

(assert (=> b!85131 (= e!55512 lt!40067)))

(assert (=> b!85131 (= lt!40067 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!756 lt!38975) lt!38972))))

(assert (=> b!85131 (isDefined!92 (getValueByKey!138 (toList!756 lt!38975) lt!38972))))

(declare-fun b!85132 () Bool)

(declare-fun Unit!2528 () Unit!2445)

(assert (=> b!85132 (= e!55512 Unit!2528)))

(declare-fun b!85133 () Bool)

(assert (=> b!85133 (= e!55511 (isDefined!92 (getValueByKey!138 (toList!756 lt!38975) lt!38972)))))

(assert (= (and d!22061 c!13808) b!85131))

(assert (= (and d!22061 (not c!13808)) b!85132))

(assert (= (and d!22061 (not res!43879)) b!85133))

(declare-fun m!89337 () Bool)

(assert (=> d!22061 m!89337))

(declare-fun m!89339 () Bool)

(assert (=> b!85131 m!89339))

(declare-fun m!89341 () Bool)

(assert (=> b!85131 m!89341))

(assert (=> b!85131 m!89341))

(declare-fun m!89343 () Bool)

(assert (=> b!85131 m!89343))

(assert (=> b!85133 m!89341))

(assert (=> b!85133 m!89341))

(assert (=> b!85133 m!89343))

(assert (=> d!21013 d!22061))

(declare-fun mapNonEmpty!3387 () Bool)

(declare-fun mapRes!3387 () Bool)

(declare-fun tp!8913 () Bool)

(declare-fun e!55514 () Bool)

(assert (=> mapNonEmpty!3387 (= mapRes!3387 (and tp!8913 e!55514))))

(declare-fun mapValue!3387 () ValueCell!921)

(declare-fun mapKey!3387 () (_ BitVec 32))

(declare-fun mapRest!3387 () (Array (_ BitVec 32) ValueCell!921))

(assert (=> mapNonEmpty!3387 (= mapRest!3385 (store mapRest!3387 mapKey!3387 mapValue!3387))))

(declare-fun b!85134 () Bool)

(assert (=> b!85134 (= e!55514 tp_is_empty!2529)))

(declare-fun mapIsEmpty!3387 () Bool)

(assert (=> mapIsEmpty!3387 mapRes!3387))

(declare-fun condMapEmpty!3387 () Bool)

(declare-fun mapDefault!3387 () ValueCell!921)

(assert (=> mapNonEmpty!3385 (= condMapEmpty!3387 (= mapRest!3385 ((as const (Array (_ BitVec 32) ValueCell!921)) mapDefault!3387)))))

(declare-fun e!55513 () Bool)

(assert (=> mapNonEmpty!3385 (= tp!8911 (and e!55513 mapRes!3387))))

(declare-fun b!85135 () Bool)

(assert (=> b!85135 (= e!55513 tp_is_empty!2529)))

(assert (= (and mapNonEmpty!3385 condMapEmpty!3387) mapIsEmpty!3387))

(assert (= (and mapNonEmpty!3385 (not condMapEmpty!3387)) mapNonEmpty!3387))

(assert (= (and mapNonEmpty!3387 ((_ is ValueCellFull!921) mapValue!3387)) b!85134))

(assert (= (and mapNonEmpty!3385 ((_ is ValueCellFull!921) mapDefault!3387)) b!85135))

(declare-fun m!89345 () Bool)

(assert (=> mapNonEmpty!3387 m!89345))

(declare-fun mapNonEmpty!3388 () Bool)

(declare-fun mapRes!3388 () Bool)

(declare-fun tp!8914 () Bool)

(declare-fun e!55516 () Bool)

(assert (=> mapNonEmpty!3388 (= mapRes!3388 (and tp!8914 e!55516))))

(declare-fun mapRest!3388 () (Array (_ BitVec 32) ValueCell!921))

(declare-fun mapKey!3388 () (_ BitVec 32))

(declare-fun mapValue!3388 () ValueCell!921)

(assert (=> mapNonEmpty!3388 (= mapRest!3386 (store mapRest!3388 mapKey!3388 mapValue!3388))))

(declare-fun b!85136 () Bool)

(assert (=> b!85136 (= e!55516 tp_is_empty!2529)))

(declare-fun mapIsEmpty!3388 () Bool)

(assert (=> mapIsEmpty!3388 mapRes!3388))

(declare-fun condMapEmpty!3388 () Bool)

(declare-fun mapDefault!3388 () ValueCell!921)

(assert (=> mapNonEmpty!3386 (= condMapEmpty!3388 (= mapRest!3386 ((as const (Array (_ BitVec 32) ValueCell!921)) mapDefault!3388)))))

(declare-fun e!55515 () Bool)

(assert (=> mapNonEmpty!3386 (= tp!8912 (and e!55515 mapRes!3388))))

(declare-fun b!85137 () Bool)

(assert (=> b!85137 (= e!55515 tp_is_empty!2529)))

(assert (= (and mapNonEmpty!3386 condMapEmpty!3388) mapIsEmpty!3388))

(assert (= (and mapNonEmpty!3386 (not condMapEmpty!3388)) mapNonEmpty!3388))

(assert (= (and mapNonEmpty!3388 ((_ is ValueCellFull!921) mapValue!3388)) b!85136))

(assert (= (and mapNonEmpty!3386 ((_ is ValueCellFull!921) mapDefault!3388)) b!85137))

(declare-fun m!89347 () Bool)

(assert (=> mapNonEmpty!3388 m!89347))

(declare-fun b_lambda!3761 () Bool)

(assert (= b_lambda!3731 (or (and b!82830 b_free!2225 (= (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) (defaultEntry!2317 newMap!16))) (and b!82846 b_free!2227) b_lambda!3761)))

(declare-fun b_lambda!3763 () Bool)

(assert (= b_lambda!3753 (or (and b!82830 b_free!2225 (= (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) (defaultEntry!2317 newMap!16))) (and b!82846 b_free!2227) b_lambda!3763)))

(declare-fun b_lambda!3765 () Bool)

(assert (= b_lambda!3747 (or (and b!82830 b_free!2225 (= (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) (defaultEntry!2317 newMap!16))) (and b!82846 b_free!2227) b_lambda!3765)))

(declare-fun b_lambda!3767 () Bool)

(assert (= b_lambda!3739 (or (and b!82830 b_free!2225 (= (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) (defaultEntry!2317 newMap!16))) (and b!82846 b_free!2227) b_lambda!3767)))

(declare-fun b_lambda!3769 () Bool)

(assert (= b_lambda!3741 (or (and b!82830 b_free!2225 (= (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) (defaultEntry!2317 newMap!16))) (and b!82846 b_free!2227) b_lambda!3769)))

(declare-fun b_lambda!3771 () Bool)

(assert (= b_lambda!3749 (or (and b!82830 b_free!2225 (= (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) (defaultEntry!2317 newMap!16))) (and b!82846 b_free!2227) b_lambda!3771)))

(declare-fun b_lambda!3773 () Bool)

(assert (= b_lambda!3757 (or (and b!82830 b_free!2225 (= (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) (defaultEntry!2317 newMap!16))) (and b!82846 b_free!2227) b_lambda!3773)))

(declare-fun b_lambda!3775 () Bool)

(assert (= b_lambda!3735 (or (and b!82830 b_free!2225) (and b!82846 b_free!2227 (= (defaultEntry!2317 newMap!16) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))))) b_lambda!3775)))

(declare-fun b_lambda!3777 () Bool)

(assert (= b_lambda!3751 (or (and b!82830 b_free!2225 (= (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) (defaultEntry!2317 newMap!16))) (and b!82846 b_free!2227) b_lambda!3777)))

(declare-fun b_lambda!3779 () Bool)

(assert (= b_lambda!3733 (or (and b!82830 b_free!2225 (= (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) (defaultEntry!2317 newMap!16))) (and b!82846 b_free!2227) b_lambda!3779)))

(declare-fun b_lambda!3781 () Bool)

(assert (= b_lambda!3755 (or (and b!82830 b_free!2225 (= (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) (defaultEntry!2317 newMap!16))) (and b!82846 b_free!2227) b_lambda!3781)))

(declare-fun b_lambda!3783 () Bool)

(assert (= b_lambda!3745 (or (and b!82830 b_free!2225 (= (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) (defaultEntry!2317 newMap!16))) (and b!82846 b_free!2227) b_lambda!3783)))

(declare-fun b_lambda!3785 () Bool)

(assert (= b_lambda!3759 (or (and b!82830 b_free!2225 (= (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))) (defaultEntry!2317 newMap!16))) (and b!82846 b_free!2227) b_lambda!3785)))

(declare-fun b_lambda!3787 () Bool)

(assert (= b_lambda!3737 (or (and b!82830 b_free!2225) (and b!82846 b_free!2227 (= (defaultEntry!2317 newMap!16) (defaultEntry!2317 (v!2632 (underlying!290 thiss!992))))) b_lambda!3787)))

(check-sat (not d!21821) (not b!84188) (not d!21901) (not b!83915) (not d!21993) (not b!84221) (not b!84514) (not b!84269) (not b!84804) (not b!83956) (not b!84054) (not d!21341) (not b!83912) (not b!84958) (not b!83924) (not d!21295) (not b!84367) (not b!84029) (not b!84634) b_and!5141 (not b!83777) (not b!84026) (not b!84697) (not b!84365) (not b!83771) (not b_lambda!3787) (not b!84872) (not bm!8025) (not b!84109) (not b!84777) (not d!21423) (not d!21261) (not d!22033) (not d!21277) (not b!84898) (not b!83951) (not d!21441) (not b!84076) (not b!85065) (not b!84407) (not b!85043) (not bm!7889) (not b!84870) (not bm!8011) (not b!84520) (not b_lambda!3767) (not b!84355) (not b!84884) (not b!84921) (not b!84576) (not b!84915) (not b!84505) (not d!21823) (not b!83906) (not b!84858) (not b!84443) (not b!85011) (not bm!7952) (not b!84162) (not b!84674) (not b!84695) (not b!84144) (not b!84464) (not b!85000) (not bm!7970) (not b!84757) (not d!21753) (not d!21827) (not b!84553) (not b!83909) (not b!84971) (not b!84702) (not b!84243) (not b!83798) (not b!84401) (not bm!7974) (not b!84625) (not b_lambda!3765) (not b!84998) (not b!84924) (not d!22059) (not b!84881) (not d!21935) (not b!84918) (not b!84831) (not b!83875) (not b_lambda!3773) (not b!85105) (not b_lambda!3761) (not b!83788) (not b!84771) (not d!21259) (not b!84473) (not b!84255) (not b!84963) (not b!84843) (not b!84526) (not b!84808) (not b!84073) (not d!21953) (not b!84823) (not mapNonEmpty!3388) (not d!21549) (not b!84416) (not b_lambda!3769) (not b!84696) (not b!84516) (not b!84119) (not b!83913) (not d!21615) (not b!84820) (not d!22011) (not bm!8024) (not d!21307) (not b!84454) (not d!21575) (not b!84531) (not b!83824) (not b!83878) (not d!21791) (not b!84274) (not b!83886) (not d!21449) (not b!85002) (not b!84204) (not d!21593) (not b!83914) (not b_lambda!3705) (not b!84497) b_and!5143 (not b!84585) (not b!84847) (not b!84699) (not bm!7996) (not d!21637) (not b!84594) (not b!83775) (not b_lambda!3707) (not d!21957) (not d!21825) (not b!84525) (not b!84883) (not d!21193) (not d!21805) (not b!83816) (not b!83804) (not b!84438) (not b!84763) (not b!83954) (not b!84969) (not d!21573) (not b!84865) (not d!21437) (not d!21871) (not d!21301) (not b!84326) (not b!84579) (not b!83796) (not bm!7894) (not b!84043) (not b!84174) (not d!21799) (not d!21467) (not bm!7918) (not b!84815) (not b!85123) (not b!83934) (not b!84343) (not b!84310) (not d!21457) (not b!84723) (not b!84302) (not b!83997) (not d!21287) (not b!84816) (not b!84839) (not d!21195) (not b!84750) (not d!21807) (not b!84854) (not bm!7899) (not d!21275) (not b!83811) (not b!84504) (not bm!7937) (not b!84774) (not bm!7945) (not b!84349) (not d!21379) (not b!84191) (not d!21685) (not d!21183) (not b!83918) (not d!21239) (not b!84212) (not d!21829) (not d!21905) (not b!84533) (not d!21859) (not d!21203) (not b!84305) (not b!83872) (not d!22005) (not b_lambda!3725) (not b!83977) (not b!83868) (not b!84561) (not b!84552) (not d!21161) (not b!84542) (not d!21413) (not b!83861) (not d!21973) (not b!85117) (not b!83820) (not b!84692) (not b!84433) (not b!84787) (not b!85125) (not b_lambda!3783) (not d!21763) (not d!21487) (not bm!8023) (not b!83845) (not d!21241) (not b!83889) (not d!21883) (not d!21469) (not d!21433) (not b!83855) (not d!21647) (not d!21431) (not d!21833) (not b!83830) (not b!84247) (not bm!8006) (not b!84400) (not b!85048) (not b!84489) (not b!84844) (not b!84035) (not d!21499) (not d!21483) (not b!84602) (not b!84453) (not b!84507) (not b!84988) (not b!84135) (not b!84052) (not b!85008) (not d!21335) (not b!84722) (not b!84836) (not b!84113) (not b!84673) (not b!85129) (not bm!7915) (not b!84094) (not b!84392) (not d!21659) (not d!22047) (not d!21997) (not b_lambda!3729) (not b!83780) (not d!21451) (not b!84776) (not b!84833) (not b!84801) (not b!84720) (not b!84975) (not b!84747) (not b!84225) (not b!84122) (not b!84253) (not d!21529) (not b!84825) (not b!84260) (not b!84146) (not b!84179) (not b!84413) (not d!21517) (not b!84896) (not b!84246) (not b!84636) (not d!21163) (not b!84840) (not d!21817) (not b!84363) (not b!83831) (not b!84336) (not b!83942) (not b!84639) (not b!83859) (not bm!7925) (not b!83910) (not bm!7972) (not b!83968) (not d!21937) (not b!84929) (not b!84171) (not b!85118) (not b!84176) (not d!21765) (not b!84708) (not b!84539) (not b!85131) (not bm!8013) (not b!84164) (not b!83972) (not b!84457) (not b!83773) (not b!84093) tp_is_empty!2529 (not b!85022) (not b!84087) (not d!21835) (not b!84878) (not d!21693) (not b!84629) (not b!84890) (not b!84222) (not d!21375) (not b!84320) (not b!84467) (not b!84359) (not bm!7989) (not b!84800) (not bm!7959) (not b!84966) (not b!84824) (not b!84902) (not b!84395) (not b!84849) (not d!22019) (not b!84595) (not d!21389) (not mapNonEmpty!3387) (not d!21171) (not b!84380) (not d!21661) (not b!84147) (not b!84294) (not bm!8019) (not d!21351) (not b!84617) (not bm!8010) (not b!84581) (not bm!7903) (not b!83989) (not b!84803) (not d!22057) (not b!84419) (not b!85025) (not b!84912) (not b!84439) (not bm!7957) (not b!85095) (not d!21889) (not b!84875) (not b!84257) (not b!84794) (not d!21497) (not d!21315) (not b!84748) (not d!21867) (not b!84805) (not b!83856) (not b!84303) (not b!83828) (not b!84980) (not b!84965) (not b!84535) (not b!85051) (not b_lambda!3781) (not d!21759) (not b!84647) (not b!83844) (not b!84190) (not d!21537) (not bm!7905) (not b!85115) (not b!84891) (not d!21329) (not d!21417) (not b!84930) (not b!84088) (not b!84470) (not d!21991) (not d!21539) (not b!85062) (not b!85079) (not d!21407) (not d!21633) (not d!22007) (not b!83957) (not b!84810) (not d!22035) (not b!83871) (not d!21629) (not b!83931) (not d!22015) (not b!83900) (not b!84341) (not bm!7991) (not b!85069) (not b!84587) (not bm!7985) (not b_next!2225) (not b!84288) (not d!21591) (not d!21373) (not bm!8027) (not d!21493) (not bm!8008) (not d!21941) (not b!84991) (not d!21523) (not d!21269) (not b!84665) (not b!84726) (not d!21477) (not b!84690) (not d!21589) (not d!21475) (not b!84927) (not d!21461) (not d!21947) (not d!21227) (not d!21621) (not b!84684) (not b!84082) (not b!84350) (not b!85076) (not d!21857) (not b!84317) (not b!84483) (not b!83842) (not b!84236) (not b_lambda!3697) (not d!21535) (not b!84434) (not d!21969) (not b!84091) (not b!84347) (not b!84056) (not b!84219) (not d!21757) (not bm!7886) (not d!21663) (not bm!7934) (not bm!7897) (not d!21839) (not d!21403) (not b!84079) (not b!83897) (not b!84732) (not d!21205) (not b!84182) (not b!84159) (not b!85013) (not b!84425) (not d!21555) (not d!21581) (not b!84622) (not b!84105) (not b!84115) (not b!84268) (not b!84139) (not b!84845) (not b!84620) (not d!22061) (not bm!7950) (not b_lambda!3777) (not d!21909) (not b!85055) (not b!83833) (not b!84389) (not d!21465) (not b!84284) (not d!21381) (not d!21245) (not bm!7884) (not b!84754) (not b!83911) (not b!84659) (not d!21267) (not b!84142) (not d!21767) (not b!84498) (not b!83993) (not b!85127) (not b!84738) (not bm!7913) (not b!84899) (not b!83839) (not b!84283) (not b!84746) (not b!84387) (not b!85014) (not d!21737) (not bm!7982) (not b!84024) (not b!84044) (not b!84287) (not d!21229) (not b!84418) (not b!84491) (not b!84227) (not b!84383) (not d!21967) (not d!21881) (not d!21533) (not bm!8003) (not b!84264) (not bm!7932) (not b!84484) (not b!83891) (not d!21841) (not d!21333) (not b!84983) (not d!21369) (not d!21735) (not b!84466) (not d!21479) (not b!84459) (not b!84046) (not b!83950) (not b!83783) (not b!84788) (not d!21339) (not d!21963) (not d!21167) (not d!21247) (not b!83818) (not d!21811) (not d!21595) (not b!83948) (not b!84332) (not b!84656) (not b!83945) (not b!84411) (not d!22051) (not b!84751) (not d!21217) (not b!84770) (not b!84550) (not d!21387) (not b!84228) (not d!21485) (not d!21679) (not b!84244) (not b!84486) (not d!21279) (not d!22031) (not b!83858) (not b!84599) (not b!84214) (not d!21365) (not d!21945) (not d!22027) (not d!21671) (not b!84185) (not d!21355) (not b!83892) (not b!83976) (not b!84278) (not d!21617) (not d!21385) (not b!85064) (not b!84821) (not b!84687) (not b!83810) (not b!84183) (not b!84080) (not d!21313) (not b!84023) (not b!84743) (not d!22045) (not bm!7892) (not d!21415) (not d!21605) (not d!21207) (not b!84167) (not b!84792) (not b_lambda!3743) (not b!83822) (not b!84495) (not b!83873) (not b!83927) (not bm!7939) (not b!83864) (not b!84527) (not b!84759) (not d!21311) (not b!84031) (not d!22017) (not b!84564) (not b!83979) (not b!84573) (not b_lambda!3785) (not b!84077) (not b!85089) (not b!83851) (not d!21481) (not d!21979) (not bm!7904) (not bm!7912) (not b!84905) (not d!21707) (not d!21851) (not b!83965) (not b!84378) (not b!84745) (not b!84309) (not b!84851) (not b!84194) (not b!84668) (not b!84632) (not bm!7943) (not d!21815) (not d!21521) (not b!84335) (not d!21917) (not d!21169) (not b!84717) (not b!84369) (not b!84705) (not b!85044) (not b!84866) (not b!84130) (not b!83907) (not bm!7980) (not b!85093) (not b!84813) (not b!83813) (not bm!7888) (not b!84740) (not b_next!2227) (not d!21299) (not b!83990) (not b!85027) (not b!85133) (not b!84131) (not b!83853) (not b!84209) (not d!21803) (not b!84241) (not b!84300) (not d!21359) (not d!21779) (not b!83902) (not bm!7923) (not b!84660) (not b!84409) (not b!85096) (not d!21283) (not d!21201) (not bm!7947) (not d!22041) (not d!21627) (not b!85034) (not d!21609) (not b_lambda!3721) (not b!84662) (not b!84679) (not d!21875) (not d!21715) (not bm!7964) (not b!84582) (not d!22055) (not d!21249) (not b!83806) (not b_lambda!3771) (not d!21221) (not d!21471) (not b!84450) (not d!21179) (not d!21849) (not d!21861) (not b!84196) (not b!84133) (not b!83882) (not b!83794) (not b!84518) (not b!84271) (not b!84868) (not d!21877) (not b!83865) (not bm!7922) (not b!84472) (not b!84140) (not b!84719) (not d!21613) (not b!84508) (not d!21153) (not d!21325) (not b!84588) (not b!84117) (not b!85039) (not bm!7882) (not d!21187) (not b!84386) (not d!21173) (not b!84923) (not b!84818) (not b!84523) (not d!21319) (not d!21631) (not d!21971) (not bm!7891) (not b!84394) (not b!84642) (not d!21813) (not d!21755) (not b!83981) (not b!83904) (not b!83963) (not b!84729) (not d!21865) (not d!21749) (not d!21921) (not b!83921) (not d!21273) (not b!84136) (not b!84323) (not d!21719) (not d!21777) (not d!21545) (not b!85059) (not b!84784) (not b!83836) (not d!22001) (not b!84482) (not b!84251) (not d!21317) (not b!84364) (not d!21669) (not d!21553) (not bm!8017) (not b!84607) (not b!85090) (not b!84049) (not b!84492) (not b!85074) (not d!21439) (not b!84785) (not d!21383) (not d!21191) (not b!84338) (not b!83987) (not d!21927) (not b!85100) (not b_lambda!3727) (not b!84877) (not b!84357) (not b!84165) (not b_lambda!3723) (not d!21409) (not bm!8012) (not b!85021) (not d!21897) (not b!85041) (not d!21863) (not b!84806) (not b!84735) (not b!83962) (not d!21697) (not b!84869) (not b_lambda!3763) (not d!21603) (not b!84612) (not b!85112) (not b!84398) (not b!83940) (not d!21427) (not b_lambda!3709) (not d!21899) (not d!21649) (not bm!7961) (not d!21399) (not b!84667) (not b!84977) (not b!83786) (not b!84710) (not d!21689) (not b!84765) (not b!84372) (not b!84085) (not b!84671) (not bm!7938) (not d!21569) (not b!84446) (not bm!7993) (not b!84422) (not d!21855) (not b!84207) (not d!21873) (not b!84511) (not d!21297) (not b!84830) (not d!21809) (not b!85071) (not b!84292) (not b!83838) (not b!84037) (not b!84567) (not bm!8001) (not d!21635) (not bm!7977) (not d!21463) (not d!21733) (not b!85068) (not b!84344) (not b!84968) (not b!84546) (not b!84916) (not d!21215) (not b_lambda!3779) (not d!21869) (not b!84216) (not b!84293) (not d!21853) (not bm!7936) (not b!84197) (not b!84755) (not bm!7951) (not b!84559) (not d!21931) (not b!84817) (not d!21787) (not b!83815) (not b!84313) (not b!84286) (not d!21281) (not d!21745) (not b!84382) (not b!84333) (not d!21507) (not b!83982) (not bm!7987) (not b!84436) (not b!85060) (not b_lambda!3775) (not b!84990) (not b!84860) (not d!21879) (not d!21665) (not d!21459) (not b!83808) (not d!21625) (not b!84609) (not b!84761) (not d!21357) (not bm!7902) (not d!21747) (not b!84863) (not d!21525) (not b!84704) (not b!83995) (not b!85038) (not b!84239) (not b!84574) (not b!84461) (not d!21505) (not b!84156) (not d!21289) (not b!84537) (not b!83943) (not b!83789) (not d!21429) (not d!21473) (not b!84985) (not b!84654) (not d!21453) (not b!84126) (not b!84566) (not d!21795) (not b!84415) (not bm!7953) (not b!83827) (not b!84760) (not bm!7893) (not b!84150) (not b!84101) (not b!84711) (not b!84694) (not b!84893) (not d!21959) (not d!21781) (not b!85092) (not bm!8020) (not b!84362) (not d!21651) (not bm!8018) (not d!21197) (not d!21785) (not b!83825) (not b!84420) (not b!84768) (not b!84904) (not d!21831) (not b!84789) (not d!21687) (not b!84280) (not b!85007) (not bm!7920) (not b!84619) (not b!84682) (not bm!7999) (not b!84529) (not b!84650) (not b!84962) (not d!21819) (not b!84828) (not d!21547) (not d!21223) (not b!84361) (not b!83854) (not bm!7929) (not b!84291) (not bm!7967) (not b!84605) (not d!22013) (not d!21155) (not b!84739) (not d!21253) (not b!84282) (not b!84297) (not b!83823) (not b!84753) (not b!85005) (not b!84795) (not b!84233) (not b!84160) (not b!85109) (not b!84641) (not bm!7924) (not b!84032) (not b!84038) (not b!84741) (not b!84479) (not b!84657) (not b!83887) (not b!84375) (not d!21695) (not b!84206) (not d!22021) (not b!84307) (not b!84429) (not d!21175) (not b!84615) (not bm!7983) (not b!84273) (not b!85030) (not b!84972))
(check-sat b_and!5141 b_and!5143 (not b_next!2225) (not b_next!2227))
