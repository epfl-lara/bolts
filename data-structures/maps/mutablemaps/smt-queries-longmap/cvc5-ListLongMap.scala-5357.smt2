; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!71752 () Bool)

(assert start!71752)

(declare-fun res!567057 () Bool)

(declare-fun e!465239 () Bool)

(assert (=> start!71752 (=> (not res!567057) (not e!465239))))

(declare-fun oldMask!5 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!71752 (= res!567057 (validMask!0 oldMask!5))))

(assert (=> start!71752 e!465239))

(assert (=> start!71752 true))

(declare-fun b!833830 () Bool)

(declare-fun res!567058 () Bool)

(assert (=> b!833830 (=> (not res!567058) (not e!465239))))

(declare-fun m!52 () (_ BitVec 32))

(declare-fun _vacant!10 () (_ BitVec 32))

(declare-fun _size!10 () (_ BitVec 32))

(assert (=> b!833830 (= res!567058 (and (bvsge _size!10 #b00000000000000000000000000000000) (bvsle _size!10 (bvadd #b00000000000000000000000000000001 oldMask!5)) (bvsge _vacant!10 #b00000000000000000000000000000000) (bvsgt m!52 #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 _size!10) m!52) (bvsge (bvadd #b00000000000000000000000000000001 (bvand (bvashr m!52 #b00000000000000000000000000000001) #b00111111111111111111111111111111)) _size!10) (bvsgt (bvlshr m!52 #b00000000000000000000000000000001) #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 _size!10) (bvlshr m!52 #b00000000000000000000000000000001)) (bvsge (bvadd #b00000000000000000000000000000001 (bvand (bvashr (bvlshr m!52 #b00000000000000000000000000000001) #b00000000000000000000000000000001) #b00111111111111111111111111111111)) _size!10)))))

(declare-fun b!833831 () Bool)

(declare-datatypes ((Unit!28625 0))(
  ( (Unit!28626) )
))
(declare-datatypes ((tuple2!10208 0))(
  ( (tuple2!10209 (_1!5114 Unit!28625) (_2!5114 (_ BitVec 32))) )
))
(declare-fun lt!378675 () tuple2!10208)

(assert (=> b!833831 (= e!465239 (and (bvsgt (_2!5114 lt!378675) #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 _size!10) (_2!5114 lt!378675)) (bvsge (bvadd #b00000000000000000000000000000001 (bvand (bvashr (_2!5114 lt!378675) #b00000000000000000000000000000001) #b00111111111111111111111111111111)) _size!10)))))

(declare-fun computeNewMaskWhile!20 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) tuple2!10208)

(assert (=> b!833831 (= lt!378675 (computeNewMaskWhile!20 _size!10 _vacant!10 oldMask!5 (bvlshr m!52 #b00000000000000000000000000000001)))))

(assert (= (and start!71752 res!567057) b!833830))

(assert (= (and b!833830 res!567058) b!833831))

(declare-fun m!778870 () Bool)

(assert (=> start!71752 m!778870))

(declare-fun m!778872 () Bool)

(assert (=> b!833831 m!778872))

(push 1)

(assert (not start!71752))

(assert (not b!833831))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!107369 () Bool)

(assert (=> d!107369 (= (validMask!0 oldMask!5) (and (or (= oldMask!5 #b00000000000000000000000000000111) (= oldMask!5 #b00000000000000000000000000001111) (= oldMask!5 #b00000000000000000000000000011111) (= oldMask!5 #b00000000000000000000000000111111) (= oldMask!5 #b00000000000000000000000001111111) (= oldMask!5 #b00000000000000000000000011111111) (= oldMask!5 #b00000000000000000000000111111111) (= oldMask!5 #b00000000000000000000001111111111) (= oldMask!5 #b00000000000000000000011111111111) (= oldMask!5 #b00000000000000000000111111111111) (= oldMask!5 #b00000000000000000001111111111111) (= oldMask!5 #b00000000000000000011111111111111) (= oldMask!5 #b00000000000000000111111111111111) (= oldMask!5 #b00000000000000001111111111111111) (= oldMask!5 #b00000000000000011111111111111111) (= oldMask!5 #b00000000000000111111111111111111) (= oldMask!5 #b00000000000001111111111111111111) (= oldMask!5 #b00000000000011111111111111111111) (= oldMask!5 #b00000000000111111111111111111111) (= oldMask!5 #b00000000001111111111111111111111) (= oldMask!5 #b00000000011111111111111111111111) (= oldMask!5 #b00000000111111111111111111111111) (= oldMask!5 #b00000001111111111111111111111111) (= oldMask!5 #b00000011111111111111111111111111) (= oldMask!5 #b00000111111111111111111111111111) (= oldMask!5 #b00001111111111111111111111111111) (= oldMask!5 #b00011111111111111111111111111111) (= oldMask!5 #b00111111111111111111111111111111)) (bvsle oldMask!5 #b00111111111111111111111111111111)))))

(assert (=> start!71752 d!107369))

(declare-fun d!107373 () Bool)

(declare-fun lt!378698 () tuple2!10208)

(assert (=> d!107373 (or (bvsle (_2!5114 lt!378698) #b00000000000000000000000000001000) (bvsge (bvmul #b00000000000000000000000000001000 _size!10) (_2!5114 lt!378698)) (bvslt (bvadd (bvand (bvashr (_2!5114 lt!378698) #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) _size!10))))

(declare-fun e!465254 () tuple2!10208)

(assert (=> d!107373 (= lt!378698 e!465254)))

(declare-fun c!90790 () Bool)

(declare-fun lt!378699 () (_ BitVec 32))

(assert (=> d!107373 (= c!90790 (and (bvsgt lt!378699 #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 _size!10) lt!378699) (bvsge (bvadd (bvand (bvashr lt!378699 #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) _size!10)))))

(assert (=> d!107373 (= lt!378699 (bvlshr (bvlshr m!52 #b00000000000000000000000000000001) #b00000000000000000000000000000001))))

(assert (=> d!107373 (and (bvsgt (bvlshr m!52 #b00000000000000000000000000000001) #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 _size!10) (bvlshr m!52 #b00000000000000000000000000000001)) (bvsge (bvadd (bvand (bvashr (bvlshr m!52 #b00000000000000000000000000000001) #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) _size!10))))

(assert (=> d!107373 (= (computeNewMaskWhile!20 _size!10 _vacant!10 oldMask!5 (bvlshr m!52 #b00000000000000000000000000000001)) lt!378698)))

(declare-fun b!833860 () Bool)

(assert (=> b!833860 (= e!465254 (computeNewMaskWhile!20 _size!10 _vacant!10 oldMask!5 lt!378699))))

(declare-fun b!833861 () Bool)

(declare-fun Unit!28632 () Unit!28625)

(assert (=> b!833861 (= e!465254 (tuple2!10209 Unit!28632 lt!378699))))

(assert (= (and d!107373 c!90790) b!833860))

(assert (= (and d!107373 (not c!90790)) b!833861))

(declare-fun m!778889 () Bool)

(assert (=> b!833860 m!778889))

(assert (=> b!833831 d!107373))

(push 1)

(assert (not b!833860))

(check-sat)

