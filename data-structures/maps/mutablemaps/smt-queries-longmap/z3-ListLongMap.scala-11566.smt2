; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!134780 () Bool)

(assert start!134780)

(declare-fun res!1073794 () Bool)

(declare-fun e!876281 () Bool)

(assert (=> start!134780 (=> (not res!1073794) (not e!876281))))

(declare-fun mask!889 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!134780 (= res!1073794 (validMask!0 mask!889))))

(assert (=> start!134780 e!876281))

(assert (=> start!134780 true))

(declare-datatypes ((array!104862 0))(
  ( (array!104863 (arr!50600 (Array (_ BitVec 32) (_ BitVec 64))) (size!51151 (_ BitVec 32))) )
))
(declare-fun _keys!600 () array!104862)

(declare-fun array_inv!39245 (array!104862) Bool)

(assert (=> start!134780 (array_inv!39245 _keys!600)))

(declare-fun b!1571544 () Bool)

(declare-fun res!1073795 () Bool)

(assert (=> b!1571544 (=> (not res!1073795) (not e!876281))))

(assert (=> b!1571544 (= res!1073795 (= (size!51151 _keys!600) (bvadd #b00000000000000000000000000000001 mask!889)))))

(declare-fun b!1571545 () Bool)

(declare-fun res!1073793 () Bool)

(assert (=> b!1571545 (=> (not res!1073793) (not e!876281))))

(declare-fun k0!754 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!1571545 (= res!1073793 (validKeyInArray!0 k0!754))))

(declare-fun b!1571546 () Bool)

(assert (=> b!1571546 (= e!876281 (bvslt mask!889 #b00000000000000000000000000000000))))

(declare-fun lt!673588 () (_ BitVec 32))

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!1571546 (= lt!673588 (toIndex!0 k0!754 mask!889))))

(assert (= (and start!134780 res!1073794) b!1571544))

(assert (= (and b!1571544 res!1073795) b!1571545))

(assert (= (and b!1571545 res!1073793) b!1571546))

(declare-fun m!1445481 () Bool)

(assert (=> start!134780 m!1445481))

(declare-fun m!1445483 () Bool)

(assert (=> start!134780 m!1445483))

(declare-fun m!1445485 () Bool)

(assert (=> b!1571545 m!1445485))

(declare-fun m!1445487 () Bool)

(assert (=> b!1571546 m!1445487))

(check-sat (not b!1571545) (not b!1571546) (not start!134780))
(check-sat)
(get-model)

(declare-fun d!164523 () Bool)

(assert (=> d!164523 (= (validKeyInArray!0 k0!754) (and (not (= k0!754 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k0!754 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!1571545 d!164523))

(declare-fun d!164525 () Bool)

(declare-fun lt!673597 () (_ BitVec 32))

(declare-fun lt!673596 () (_ BitVec 32))

(assert (=> d!164525 (= lt!673597 (bvmul (bvxor lt!673596 (bvlshr lt!673596 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!164525 (= lt!673596 ((_ extract 31 0) (bvand (bvxor k0!754 (bvlshr k0!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!164525 (and (bvsge mask!889 #b00000000000000000000000000000000) (let ((res!1073805 (let ((h!38366 ((_ extract 31 0) (bvand (bvxor k0!754 (bvlshr k0!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!141298 (bvmul (bvxor h!38366 (bvlshr h!38366 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!141298 (bvlshr x!141298 #b00000000000000000000000000001101)) mask!889))))) (and (bvslt res!1073805 (bvadd mask!889 #b00000000000000000000000000000001)) (bvsge res!1073805 #b00000000000000000000000000000000))))))

(assert (=> d!164525 (= (toIndex!0 k0!754 mask!889) (bvand (bvxor lt!673597 (bvlshr lt!673597 #b00000000000000000000000000001101)) mask!889))))

(assert (=> b!1571546 d!164525))

(declare-fun d!164531 () Bool)

(assert (=> d!164531 (= (validMask!0 mask!889) (and (or (= mask!889 #b00000000000000000000000000000111) (= mask!889 #b00000000000000000000000000001111) (= mask!889 #b00000000000000000000000000011111) (= mask!889 #b00000000000000000000000000111111) (= mask!889 #b00000000000000000000000001111111) (= mask!889 #b00000000000000000000000011111111) (= mask!889 #b00000000000000000000000111111111) (= mask!889 #b00000000000000000000001111111111) (= mask!889 #b00000000000000000000011111111111) (= mask!889 #b00000000000000000000111111111111) (= mask!889 #b00000000000000000001111111111111) (= mask!889 #b00000000000000000011111111111111) (= mask!889 #b00000000000000000111111111111111) (= mask!889 #b00000000000000001111111111111111) (= mask!889 #b00000000000000011111111111111111) (= mask!889 #b00000000000000111111111111111111) (= mask!889 #b00000000000001111111111111111111) (= mask!889 #b00000000000011111111111111111111) (= mask!889 #b00000000000111111111111111111111) (= mask!889 #b00000000001111111111111111111111) (= mask!889 #b00000000011111111111111111111111) (= mask!889 #b00000000111111111111111111111111) (= mask!889 #b00000001111111111111111111111111) (= mask!889 #b00000011111111111111111111111111) (= mask!889 #b00000111111111111111111111111111) (= mask!889 #b00001111111111111111111111111111) (= mask!889 #b00011111111111111111111111111111) (= mask!889 #b00111111111111111111111111111111)) (bvsle mask!889 #b00111111111111111111111111111111)))))

(assert (=> start!134780 d!164531))

(declare-fun d!164545 () Bool)

(assert (=> d!164545 (= (array_inv!39245 _keys!600) (bvsge (size!51151 _keys!600) #b00000000000000000000000000000000))))

(assert (=> start!134780 d!164545))

(check-sat)
