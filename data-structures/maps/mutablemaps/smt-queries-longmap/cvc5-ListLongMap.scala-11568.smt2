; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!134814 () Bool)

(assert start!134814)

(declare-fun res!1073843 () Bool)

(declare-fun e!876311 () Bool)

(assert (=> start!134814 (=> (not res!1073843) (not e!876311))))

(declare-fun mask!889 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!134814 (= res!1073843 (validMask!0 mask!889))))

(assert (=> start!134814 e!876311))

(assert (=> start!134814 true))

(declare-datatypes ((array!104875 0))(
  ( (array!104876 (arr!50605 (Array (_ BitVec 32) (_ BitVec 64))) (size!51156 (_ BitVec 32))) )
))
(declare-fun _keys!600 () array!104875)

(declare-fun array_inv!39250 (array!104875) Bool)

(assert (=> start!134814 (array_inv!39250 _keys!600)))

(declare-fun b!1571589 () Bool)

(declare-fun res!1073842 () Bool)

(assert (=> b!1571589 (=> (not res!1073842) (not e!876311))))

(assert (=> b!1571589 (= res!1073842 (= (size!51156 _keys!600) (bvadd #b00000000000000000000000000000001 mask!889)))))

(declare-fun b!1571590 () Bool)

(declare-fun res!1073841 () Bool)

(assert (=> b!1571590 (=> (not res!1073841) (not e!876311))))

(declare-fun k!754 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!1571590 (= res!1073841 (validKeyInArray!0 k!754))))

(declare-fun b!1571591 () Bool)

(declare-fun lt!673621 () (_ BitVec 32))

(assert (=> b!1571591 (= e!876311 (and (bvsge mask!889 #b00000000000000000000000000000000) (or (bvslt lt!673621 #b00000000000000000000000000000000) (bvsge lt!673621 (bvadd #b00000000000000000000000000000001 mask!889)))))))

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!1571591 (= lt!673621 (toIndex!0 k!754 mask!889))))

(assert (= (and start!134814 res!1073843) b!1571589))

(assert (= (and b!1571589 res!1073842) b!1571590))

(assert (= (and b!1571590 res!1073841) b!1571591))

(declare-fun m!1445521 () Bool)

(assert (=> start!134814 m!1445521))

(declare-fun m!1445523 () Bool)

(assert (=> start!134814 m!1445523))

(declare-fun m!1445525 () Bool)

(assert (=> b!1571590 m!1445525))

(declare-fun m!1445527 () Bool)

(assert (=> b!1571591 m!1445527))

(push 1)

(assert (not start!134814))

(assert (not b!1571590))

(assert (not b!1571591))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!164555 () Bool)

(assert (=> d!164555 (= (validMask!0 mask!889) (and (or (= mask!889 #b00000000000000000000000000000111) (= mask!889 #b00000000000000000000000000001111) (= mask!889 #b00000000000000000000000000011111) (= mask!889 #b00000000000000000000000000111111) (= mask!889 #b00000000000000000000000001111111) (= mask!889 #b00000000000000000000000011111111) (= mask!889 #b00000000000000000000000111111111) (= mask!889 #b00000000000000000000001111111111) (= mask!889 #b00000000000000000000011111111111) (= mask!889 #b00000000000000000000111111111111) (= mask!889 #b00000000000000000001111111111111) (= mask!889 #b00000000000000000011111111111111) (= mask!889 #b00000000000000000111111111111111) (= mask!889 #b00000000000000001111111111111111) (= mask!889 #b00000000000000011111111111111111) (= mask!889 #b00000000000000111111111111111111) (= mask!889 #b00000000000001111111111111111111) (= mask!889 #b00000000000011111111111111111111) (= mask!889 #b00000000000111111111111111111111) (= mask!889 #b00000000001111111111111111111111) (= mask!889 #b00000000011111111111111111111111) (= mask!889 #b00000000111111111111111111111111) (= mask!889 #b00000001111111111111111111111111) (= mask!889 #b00000011111111111111111111111111) (= mask!889 #b00000111111111111111111111111111) (= mask!889 #b00001111111111111111111111111111) (= mask!889 #b00011111111111111111111111111111) (= mask!889 #b00111111111111111111111111111111)) (bvsle mask!889 #b00111111111111111111111111111111)))))

(assert (=> start!134814 d!164555))

(declare-fun d!164561 () Bool)

(assert (=> d!164561 (= (array_inv!39250 _keys!600) (bvsge (size!51156 _keys!600) #b00000000000000000000000000000000))))

(assert (=> start!134814 d!164561))

(declare-fun d!164563 () Bool)

(assert (=> d!164563 (= (validKeyInArray!0 k!754) (and (not (= k!754 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k!754 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!1571590 d!164563))

(declare-fun d!164565 () Bool)

(declare-fun lt!673639 () (_ BitVec 32))

(declare-fun lt!673638 () (_ BitVec 32))

(assert (=> d!164565 (= lt!673639 (bvmul (bvxor lt!673638 (bvlshr lt!673638 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!164565 (= lt!673638 ((_ extract 31 0) (bvand (bvxor k!754 (bvlshr k!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!164565 (and (bvsge mask!889 #b00000000000000000000000000000000) (let ((res!1073863 (let ((h!38370 ((_ extract 31 0) (bvand (bvxor k!754 (bvlshr k!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!141318 (bvmul (bvxor h!38370 (bvlshr h!38370 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!141318 (bvlshr x!141318 #b00000000000000000000000000001101)) mask!889))))) (and (bvslt res!1073863 (bvadd mask!889 #b00000000000000000000000000000001)) (bvsge res!1073863 #b00000000000000000000000000000000))))))

(assert (=> d!164565 (= (toIndex!0 k!754 mask!889) (bvand (bvxor lt!673639 (bvlshr lt!673639 #b00000000000000000000000000001101)) mask!889))))

(assert (=> b!1571591 d!164565))

(push 1)

(check-sat)

