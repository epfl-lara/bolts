; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!9766 () Bool)

(assert start!9766)

(declare-fun b!72889 () Bool)

(declare-fun b_free!2117 () Bool)

(declare-fun b_next!2117 () Bool)

(assert (=> b!72889 (= b_free!2117 (not b_next!2117))))

(declare-fun tp!8529 () Bool)

(declare-fun b_and!4473 () Bool)

(assert (=> b!72889 (= tp!8529 b_and!4473)))

(declare-fun b!72885 () Bool)

(declare-fun b_free!2119 () Bool)

(declare-fun b_next!2119 () Bool)

(assert (=> b!72885 (= b_free!2119 (not b_next!2119))))

(declare-fun tp!8527 () Bool)

(declare-fun b_and!4475 () Bool)

(assert (=> b!72885 (= tp!8527 b_and!4475)))

(declare-fun b!72875 () Bool)

(declare-fun e!47694 () Bool)

(declare-fun tp_is_empty!2475 () Bool)

(assert (=> b!72875 (= e!47694 tp_is_empty!2475)))

(declare-fun b!72876 () Bool)

(declare-fun e!47698 () Bool)

(declare-fun e!47693 () Bool)

(assert (=> b!72876 (= e!47698 (not e!47693))))

(declare-fun res!38695 () Bool)

(assert (=> b!72876 (=> res!38695 e!47693)))

(declare-datatypes ((V!2947 0))(
  ( (V!2948 (val!1282 Int)) )
))
(declare-datatypes ((array!3894 0))(
  ( (array!3895 (arr!1858 (Array (_ BitVec 32) (_ BitVec 64))) (size!2096 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!894 0))(
  ( (ValueCellFull!894 (v!2532 V!2947)) (EmptyCell!894) )
))
(declare-datatypes ((array!3896 0))(
  ( (array!3897 (arr!1859 (Array (_ BitVec 32) ValueCell!894)) (size!2097 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!696 0))(
  ( (LongMapFixedSize!697 (defaultEntry!2213 Int) (mask!6180 (_ BitVec 32)) (extraKeys!2072 (_ BitVec 32)) (zeroValue!2115 V!2947) (minValue!2115 V!2947) (_size!397 (_ BitVec 32)) (_keys!3865 array!3894) (_values!2196 array!3896) (_vacant!397 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!506 0))(
  ( (Cell!507 (v!2533 LongMapFixedSize!696)) )
))
(declare-datatypes ((LongMap!506 0))(
  ( (LongMap!507 (underlying!264 Cell!506)) )
))
(declare-fun thiss!992 () LongMap!506)

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!72876 (= res!38695 (not (validMask!0 (mask!6180 (v!2533 (underlying!264 thiss!992))))))))

(declare-datatypes ((tuple2!2146 0))(
  ( (tuple2!2147 (_1!1083 (_ BitVec 64)) (_2!1083 V!2947)) )
))
(declare-datatypes ((List!1507 0))(
  ( (Nil!1504) (Cons!1503 (h!2090 tuple2!2146) (t!5068 List!1507)) )
))
(declare-datatypes ((ListLongMap!1439 0))(
  ( (ListLongMap!1440 (toList!735 List!1507)) )
))
(declare-fun lt!32476 () ListLongMap!1439)

(declare-fun lt!32472 () tuple2!2146)

(declare-fun lt!32482 () tuple2!2146)

(declare-fun +!98 (ListLongMap!1439 tuple2!2146) ListLongMap!1439)

(assert (=> b!72876 (= (+!98 (+!98 lt!32476 lt!32472) lt!32482) (+!98 (+!98 lt!32476 lt!32482) lt!32472))))

(assert (=> b!72876 (= lt!32482 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun lt!32481 () V!2947)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!72876 (= lt!32472 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))

(declare-datatypes ((Unit!2086 0))(
  ( (Unit!2087) )
))
(declare-fun lt!32477 () Unit!2086)

(declare-fun addCommutativeForDiffKeys!17 (ListLongMap!1439 (_ BitVec 64) V!2947 (_ BitVec 64) V!2947) Unit!2086)

(assert (=> b!72876 (= lt!32477 (addCommutativeForDiffKeys!17 lt!32476 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!62 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 32) Int) ListLongMap!1439)

(assert (=> b!72876 (= lt!32476 (getCurrentListMapNoExtraKeys!62 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun b!72877 () Bool)

(declare-fun e!47700 () Bool)

(declare-fun e!47703 () Bool)

(assert (=> b!72877 (= e!47700 e!47703)))

(declare-fun b!72878 () Bool)

(declare-fun e!47697 () Unit!2086)

(declare-fun Unit!2088 () Unit!2086)

(assert (=> b!72878 (= e!47697 Unit!2088)))

(declare-fun b!72879 () Bool)

(declare-fun e!47689 () Bool)

(assert (=> b!72879 (= e!47703 e!47689)))

(declare-fun b!72880 () Bool)

(declare-fun e!47687 () Bool)

(assert (=> b!72880 (= e!47687 tp_is_empty!2475)))

(declare-fun b!72881 () Bool)

(assert (=> b!72881 (= e!47693 (or (not (= (size!2097 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6180 (v!2533 (underlying!264 thiss!992)))))) (not (= (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (size!2097 (_values!2196 (v!2533 (underlying!264 thiss!992)))))) (bvslt (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000000) (bvslt (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000011)))))

(declare-fun mapNonEmpty!3171 () Bool)

(declare-fun mapRes!3172 () Bool)

(declare-fun tp!8528 () Bool)

(assert (=> mapNonEmpty!3171 (= mapRes!3172 (and tp!8528 e!47687))))

(declare-fun mapRest!3171 () (Array (_ BitVec 32) ValueCell!894))

(declare-fun mapKey!3171 () (_ BitVec 32))

(declare-fun mapValue!3172 () ValueCell!894)

(assert (=> mapNonEmpty!3171 (= (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (store mapRest!3171 mapKey!3171 mapValue!3172))))

(declare-fun res!38690 () Bool)

(declare-fun e!47692 () Bool)

(assert (=> start!9766 (=> (not res!38690) (not e!47692))))

(declare-fun valid!291 (LongMap!506) Bool)

(assert (=> start!9766 (= res!38690 (valid!291 thiss!992))))

(assert (=> start!9766 e!47692))

(assert (=> start!9766 e!47700))

(assert (=> start!9766 true))

(declare-fun e!47702 () Bool)

(assert (=> start!9766 e!47702))

(declare-fun b!72882 () Bool)

(declare-fun res!38691 () Bool)

(assert (=> b!72882 (=> (not res!38691) (not e!47692))))

(declare-fun newMap!16 () LongMapFixedSize!696)

(assert (=> b!72882 (= res!38691 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6180 newMap!16)) (_size!397 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun b!72883 () Bool)

(declare-fun e!47701 () Bool)

(assert (=> b!72883 (= e!47701 e!47698)))

(declare-fun res!38696 () Bool)

(assert (=> b!72883 (=> (not res!38696) (not e!47698))))

(declare-datatypes ((tuple2!2148 0))(
  ( (tuple2!2149 (_1!1084 Bool) (_2!1084 LongMapFixedSize!696)) )
))
(declare-fun lt!32474 () tuple2!2148)

(assert (=> b!72883 (= res!38696 (and (_1!1084 lt!32474) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!32473 () Unit!2086)

(assert (=> b!72883 (= lt!32473 e!47697)))

(declare-fun c!10795 () Bool)

(declare-fun lt!32480 () ListLongMap!1439)

(declare-fun contains!729 (ListLongMap!1439 (_ BitVec 64)) Bool)

(assert (=> b!72883 (= c!10795 (contains!729 lt!32480 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun update!103 (LongMapFixedSize!696 (_ BitVec 64) V!2947) tuple2!2148)

(assert (=> b!72883 (= lt!32474 (update!103 newMap!16 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))

(declare-fun b!72884 () Bool)

(declare-fun e!47691 () Bool)

(assert (=> b!72884 (= e!47691 (and e!47694 mapRes!3172))))

(declare-fun condMapEmpty!3172 () Bool)

(declare-fun mapDefault!3171 () ValueCell!894)

(assert (=> b!72884 (= condMapEmpty!3172 (= (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!894)) mapDefault!3171)))))

(declare-fun mapIsEmpty!3171 () Bool)

(assert (=> mapIsEmpty!3171 mapRes!3172))

(declare-fun e!47695 () Bool)

(declare-fun array_inv!1101 (array!3894) Bool)

(declare-fun array_inv!1102 (array!3896) Bool)

(assert (=> b!72885 (= e!47702 (and tp!8527 tp_is_empty!2475 (array_inv!1101 (_keys!3865 newMap!16)) (array_inv!1102 (_values!2196 newMap!16)) e!47695))))

(declare-fun b!72886 () Bool)

(declare-fun e!47690 () Bool)

(assert (=> b!72886 (= e!47690 e!47701)))

(declare-fun res!38692 () Bool)

(assert (=> b!72886 (=> (not res!38692) (not e!47701))))

(assert (=> b!72886 (= res!38692 (and (not (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1154 (ValueCell!894 V!2947) V!2947)

(declare-fun dynLambda!334 (Int (_ BitVec 64)) V!2947)

(assert (=> b!72886 (= lt!32481 (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) from!355) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun mapNonEmpty!3172 () Bool)

(declare-fun mapRes!3171 () Bool)

(declare-fun tp!8530 () Bool)

(declare-fun e!47696 () Bool)

(assert (=> mapNonEmpty!3172 (= mapRes!3171 (and tp!8530 e!47696))))

(declare-fun mapValue!3171 () ValueCell!894)

(declare-fun mapRest!3172 () (Array (_ BitVec 32) ValueCell!894))

(declare-fun mapKey!3172 () (_ BitVec 32))

(assert (=> mapNonEmpty!3172 (= (arr!1859 (_values!2196 newMap!16)) (store mapRest!3172 mapKey!3172 mapValue!3171))))

(declare-fun b!72887 () Bool)

(declare-fun res!38693 () Bool)

(assert (=> b!72887 (=> (not res!38693) (not e!47692))))

(declare-fun valid!292 (LongMapFixedSize!696) Bool)

(assert (=> b!72887 (= res!38693 (valid!292 newMap!16))))

(declare-fun b!72888 () Bool)

(declare-fun Unit!2089 () Unit!2086)

(assert (=> b!72888 (= e!47697 Unit!2089)))

(declare-fun lt!32471 () Unit!2086)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!51 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 64) (_ BitVec 32) Int) Unit!2086)

(assert (=> b!72888 (= lt!32471 (lemmaListMapContainsThenArrayContainsFrom!51 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3894 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!72888 (arrayContainsKey!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!32479 () Unit!2086)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3894 (_ BitVec 32) (_ BitVec 32)) Unit!2086)

(assert (=> b!72888 (= lt!32479 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1508 0))(
  ( (Nil!1505) (Cons!1504 (h!2091 (_ BitVec 64)) (t!5069 List!1508)) )
))
(declare-fun arrayNoDuplicates!0 (array!3894 (_ BitVec 32) List!1508) Bool)

(assert (=> b!72888 (arrayNoDuplicates!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) from!355 Nil!1505)))

(declare-fun lt!32478 () Unit!2086)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3894 (_ BitVec 32) (_ BitVec 64) List!1508) Unit!2086)

(assert (=> b!72888 (= lt!32478 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505)))))

(assert (=> b!72888 false))

(assert (=> b!72889 (= e!47689 (and tp!8529 tp_is_empty!2475 (array_inv!1101 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (array_inv!1102 (_values!2196 (v!2533 (underlying!264 thiss!992)))) e!47691))))

(declare-fun b!72890 () Bool)

(assert (=> b!72890 (= e!47692 e!47690)))

(declare-fun res!38694 () Bool)

(assert (=> b!72890 (=> (not res!38694) (not e!47690))))

(declare-fun lt!32475 () ListLongMap!1439)

(assert (=> b!72890 (= res!38694 (= lt!32475 lt!32480))))

(declare-fun map!1158 (LongMapFixedSize!696) ListLongMap!1439)

(assert (=> b!72890 (= lt!32480 (map!1158 newMap!16))))

(declare-fun getCurrentListMap!426 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 32) Int) ListLongMap!1439)

(assert (=> b!72890 (= lt!32475 (getCurrentListMap!426 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun b!72891 () Bool)

(declare-fun e!47704 () Bool)

(assert (=> b!72891 (= e!47704 tp_is_empty!2475)))

(declare-fun b!72892 () Bool)

(assert (=> b!72892 (= e!47696 tp_is_empty!2475)))

(declare-fun b!72893 () Bool)

(declare-fun res!38689 () Bool)

(assert (=> b!72893 (=> (not res!38689) (not e!47692))))

(assert (=> b!72893 (= res!38689 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!72894 () Bool)

(assert (=> b!72894 (= e!47695 (and e!47704 mapRes!3171))))

(declare-fun condMapEmpty!3171 () Bool)

(declare-fun mapDefault!3172 () ValueCell!894)

(assert (=> b!72894 (= condMapEmpty!3171 (= (arr!1859 (_values!2196 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!894)) mapDefault!3172)))))

(declare-fun mapIsEmpty!3172 () Bool)

(assert (=> mapIsEmpty!3172 mapRes!3171))

(assert (= (and start!9766 res!38690) b!72893))

(assert (= (and b!72893 res!38689) b!72887))

(assert (= (and b!72887 res!38693) b!72882))

(assert (= (and b!72882 res!38691) b!72890))

(assert (= (and b!72890 res!38694) b!72886))

(assert (= (and b!72886 res!38692) b!72883))

(assert (= (and b!72883 c!10795) b!72888))

(assert (= (and b!72883 (not c!10795)) b!72878))

(assert (= (and b!72883 res!38696) b!72876))

(assert (= (and b!72876 (not res!38695)) b!72881))

(assert (= (and b!72884 condMapEmpty!3172) mapIsEmpty!3171))

(assert (= (and b!72884 (not condMapEmpty!3172)) mapNonEmpty!3171))

(get-info :version)

(assert (= (and mapNonEmpty!3171 ((_ is ValueCellFull!894) mapValue!3172)) b!72880))

(assert (= (and b!72884 ((_ is ValueCellFull!894) mapDefault!3171)) b!72875))

(assert (= b!72889 b!72884))

(assert (= b!72879 b!72889))

(assert (= b!72877 b!72879))

(assert (= start!9766 b!72877))

(assert (= (and b!72894 condMapEmpty!3171) mapIsEmpty!3172))

(assert (= (and b!72894 (not condMapEmpty!3171)) mapNonEmpty!3172))

(assert (= (and mapNonEmpty!3172 ((_ is ValueCellFull!894) mapValue!3171)) b!72892))

(assert (= (and b!72894 ((_ is ValueCellFull!894) mapDefault!3172)) b!72891))

(assert (= b!72885 b!72894))

(assert (= start!9766 b!72885))

(declare-fun b_lambda!3285 () Bool)

(assert (=> (not b_lambda!3285) (not b!72886)))

(declare-fun t!5065 () Bool)

(declare-fun tb!1533 () Bool)

(assert (=> (and b!72889 (= (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))) t!5065) tb!1533))

(declare-fun result!2683 () Bool)

(assert (=> tb!1533 (= result!2683 tp_is_empty!2475)))

(assert (=> b!72886 t!5065))

(declare-fun b_and!4477 () Bool)

(assert (= b_and!4473 (and (=> t!5065 result!2683) b_and!4477)))

(declare-fun tb!1535 () Bool)

(declare-fun t!5067 () Bool)

(assert (=> (and b!72885 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))) t!5067) tb!1535))

(declare-fun result!2687 () Bool)

(assert (= result!2687 result!2683))

(assert (=> b!72886 t!5067))

(declare-fun b_and!4479 () Bool)

(assert (= b_and!4475 (and (=> t!5067 result!2687) b_and!4479)))

(declare-fun m!71045 () Bool)

(assert (=> b!72887 m!71045))

(declare-fun m!71047 () Bool)

(assert (=> start!9766 m!71047))

(declare-fun m!71049 () Bool)

(assert (=> b!72888 m!71049))

(declare-fun m!71051 () Bool)

(assert (=> b!72888 m!71051))

(declare-fun m!71053 () Bool)

(assert (=> b!72888 m!71053))

(declare-fun m!71055 () Bool)

(assert (=> b!72888 m!71055))

(assert (=> b!72888 m!71053))

(assert (=> b!72888 m!71053))

(declare-fun m!71057 () Bool)

(assert (=> b!72888 m!71057))

(assert (=> b!72888 m!71053))

(declare-fun m!71059 () Bool)

(assert (=> b!72888 m!71059))

(declare-fun m!71061 () Bool)

(assert (=> b!72885 m!71061))

(declare-fun m!71063 () Bool)

(assert (=> b!72885 m!71063))

(assert (=> b!72883 m!71053))

(assert (=> b!72883 m!71053))

(declare-fun m!71065 () Bool)

(assert (=> b!72883 m!71065))

(assert (=> b!72883 m!71053))

(declare-fun m!71067 () Bool)

(assert (=> b!72883 m!71067))

(declare-fun m!71069 () Bool)

(assert (=> mapNonEmpty!3172 m!71069))

(declare-fun m!71071 () Bool)

(assert (=> b!72890 m!71071))

(declare-fun m!71073 () Bool)

(assert (=> b!72890 m!71073))

(declare-fun m!71075 () Bool)

(assert (=> mapNonEmpty!3171 m!71075))

(declare-fun m!71077 () Bool)

(assert (=> b!72889 m!71077))

(declare-fun m!71079 () Bool)

(assert (=> b!72889 m!71079))

(assert (=> b!72886 m!71053))

(declare-fun m!71081 () Bool)

(assert (=> b!72886 m!71081))

(declare-fun m!71083 () Bool)

(assert (=> b!72886 m!71083))

(assert (=> b!72886 m!71081))

(assert (=> b!72886 m!71083))

(declare-fun m!71085 () Bool)

(assert (=> b!72886 m!71085))

(declare-fun m!71087 () Bool)

(assert (=> b!72876 m!71087))

(declare-fun m!71089 () Bool)

(assert (=> b!72876 m!71089))

(assert (=> b!72876 m!71053))

(declare-fun m!71091 () Bool)

(assert (=> b!72876 m!71091))

(declare-fun m!71093 () Bool)

(assert (=> b!72876 m!71093))

(assert (=> b!72876 m!71053))

(declare-fun m!71095 () Bool)

(assert (=> b!72876 m!71095))

(assert (=> b!72876 m!71087))

(assert (=> b!72876 m!71095))

(declare-fun m!71097 () Bool)

(assert (=> b!72876 m!71097))

(declare-fun m!71099 () Bool)

(assert (=> b!72876 m!71099))

(check-sat (not b!72876) (not b!72888) (not b!72889) (not b_next!2119) (not b!72886) (not b_next!2117) tp_is_empty!2475 (not b_lambda!3285) (not start!9766) (not b!72883) (not b!72887) b_and!4479 (not mapNonEmpty!3172) (not mapNonEmpty!3171) (not b!72890) b_and!4477 (not b!72885))
(check-sat b_and!4477 b_and!4479 (not b_next!2117) (not b_next!2119))
(get-model)

(declare-fun b_lambda!3289 () Bool)

(assert (= b_lambda!3285 (or (and b!72889 b_free!2117) (and b!72885 b_free!2119 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))))) b_lambda!3289)))

(check-sat (not b!72888) (not b!72889) (not b_next!2119) (not b!72886) (not b_next!2117) tp_is_empty!2475 (not start!9766) (not b!72883) (not b!72887) (not b_lambda!3289) (not b!72876) b_and!4479 (not mapNonEmpty!3172) (not mapNonEmpty!3171) (not b!72890) b_and!4477 (not b!72885))
(check-sat b_and!4477 b_and!4479 (not b_next!2117) (not b_next!2119))
(get-model)

(declare-fun d!16797 () Bool)

(declare-fun e!47764 () Bool)

(assert (=> d!16797 e!47764))

(declare-fun res!38723 () Bool)

(assert (=> d!16797 (=> res!38723 e!47764)))

(declare-fun lt!32529 () Bool)

(assert (=> d!16797 (= res!38723 (not lt!32529))))

(declare-fun lt!32527 () Bool)

(assert (=> d!16797 (= lt!32529 lt!32527)))

(declare-fun lt!32528 () Unit!2086)

(declare-fun e!47763 () Unit!2086)

(assert (=> d!16797 (= lt!32528 e!47763)))

(declare-fun c!10801 () Bool)

(assert (=> d!16797 (= c!10801 lt!32527)))

(declare-fun containsKey!136 (List!1507 (_ BitVec 64)) Bool)

(assert (=> d!16797 (= lt!32527 (containsKey!136 (toList!735 lt!32480) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> d!16797 (= (contains!729 lt!32480 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) lt!32529)))

(declare-fun b!72965 () Bool)

(declare-fun lt!32530 () Unit!2086)

(assert (=> b!72965 (= e!47763 lt!32530)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!85 (List!1507 (_ BitVec 64)) Unit!2086)

(assert (=> b!72965 (= lt!32530 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32480) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-datatypes ((Option!138 0))(
  ( (Some!137 (v!2537 V!2947)) (None!136) )
))
(declare-fun isDefined!86 (Option!138) Bool)

(declare-fun getValueByKey!132 (List!1507 (_ BitVec 64)) Option!138)

(assert (=> b!72965 (isDefined!86 (getValueByKey!132 (toList!735 lt!32480) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun b!72966 () Bool)

(declare-fun Unit!2094 () Unit!2086)

(assert (=> b!72966 (= e!47763 Unit!2094)))

(declare-fun b!72967 () Bool)

(assert (=> b!72967 (= e!47764 (isDefined!86 (getValueByKey!132 (toList!735 lt!32480) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))))

(assert (= (and d!16797 c!10801) b!72965))

(assert (= (and d!16797 (not c!10801)) b!72966))

(assert (= (and d!16797 (not res!38723)) b!72967))

(assert (=> d!16797 m!71053))

(declare-fun m!71157 () Bool)

(assert (=> d!16797 m!71157))

(assert (=> b!72965 m!71053))

(declare-fun m!71159 () Bool)

(assert (=> b!72965 m!71159))

(assert (=> b!72965 m!71053))

(declare-fun m!71161 () Bool)

(assert (=> b!72965 m!71161))

(assert (=> b!72965 m!71161))

(declare-fun m!71163 () Bool)

(assert (=> b!72965 m!71163))

(assert (=> b!72967 m!71053))

(assert (=> b!72967 m!71161))

(assert (=> b!72967 m!71161))

(assert (=> b!72967 m!71163))

(assert (=> b!72883 d!16797))

(declare-fun b!73049 () Bool)

(declare-fun c!10828 () Bool)

(declare-datatypes ((SeekEntryResult!246 0))(
  ( (MissingZero!246 (index!3115 (_ BitVec 32))) (Found!246 (index!3116 (_ BitVec 32))) (Intermediate!246 (undefined!1058 Bool) (index!3117 (_ BitVec 32)) (x!11162 (_ BitVec 32))) (Undefined!246) (MissingVacant!246 (index!3118 (_ BitVec 32))) )
))
(declare-fun lt!32593 () SeekEntryResult!246)

(assert (=> b!73049 (= c!10828 ((_ is MissingVacant!246) lt!32593))))

(declare-fun e!47809 () tuple2!2148)

(declare-fun e!47821 () tuple2!2148)

(assert (=> b!73049 (= e!47809 e!47821)))

(declare-fun b!73050 () Bool)

(declare-fun e!47813 () Bool)

(declare-fun e!47826 () Bool)

(assert (=> b!73050 (= e!47813 e!47826)))

(declare-fun res!38763 () Bool)

(declare-fun call!6400 () Bool)

(assert (=> b!73050 (= res!38763 call!6400)))

(assert (=> b!73050 (=> (not res!38763) (not e!47826))))

(declare-fun bm!6391 () Bool)

(declare-fun call!6413 () Bool)

(declare-fun call!6397 () Bool)

(assert (=> bm!6391 (= call!6413 call!6397)))

(declare-fun bm!6392 () Bool)

(declare-fun call!6402 () ListLongMap!1439)

(declare-fun call!6396 () ListLongMap!1439)

(assert (=> bm!6392 (= call!6402 call!6396)))

(declare-fun bm!6393 () Bool)

(declare-fun c!10830 () Bool)

(declare-fun call!6405 () ListLongMap!1439)

(assert (=> bm!6393 (= call!6405 (getCurrentListMap!426 (_keys!3865 newMap!16) (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun bm!6394 () Bool)

(declare-fun call!6401 () SeekEntryResult!246)

(declare-fun call!6399 () SeekEntryResult!246)

(assert (=> bm!6394 (= call!6401 call!6399)))

(declare-fun bm!6395 () Bool)

(declare-fun call!6417 () Bool)

(declare-fun call!6415 () Bool)

(assert (=> bm!6395 (= call!6417 call!6415)))

(declare-fun bm!6396 () Bool)

(assert (=> bm!6396 (= call!6396 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun call!6408 () Unit!2086)

(declare-fun bm!6397 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!24 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 64) Int) Unit!2086)

(assert (=> bm!6397 (= call!6408 (lemmaInListMapThenSeekEntryOrOpenFindsIt!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)))))

(declare-fun c!10829 () Bool)

(declare-fun lt!32608 () array!3896)

(declare-fun lt!32600 () (_ BitVec 32))

(declare-fun lt!32610 () (_ BitVec 32))

(declare-fun bm!6398 () Bool)

(declare-fun call!6416 () ListLongMap!1439)

(declare-fun c!10836 () Bool)

(assert (=> bm!6398 (= call!6416 (getCurrentListMap!426 (_keys!3865 newMap!16) (ite c!10836 (_values!2196 newMap!16) lt!32608) (mask!6180 newMap!16) (ite c!10836 (ite c!10829 lt!32610 lt!32600) (extraKeys!2072 newMap!16)) (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)) (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun d!16799 () Bool)

(declare-fun e!47812 () Bool)

(assert (=> d!16799 e!47812))

(declare-fun res!38752 () Bool)

(assert (=> d!16799 (=> (not res!38752) (not e!47812))))

(declare-fun lt!32604 () tuple2!2148)

(assert (=> d!16799 (= res!38752 (valid!292 (_2!1084 lt!32604)))))

(declare-fun e!47819 () tuple2!2148)

(assert (=> d!16799 (= lt!32604 e!47819)))

(assert (=> d!16799 (= c!10836 (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvneg (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))))

(assert (=> d!16799 (valid!292 newMap!16)))

(assert (=> d!16799 (= (update!103 newMap!16 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481) lt!32604)))

(declare-fun b!73048 () Bool)

(declare-fun e!47814 () Bool)

(declare-fun e!47815 () Bool)

(assert (=> b!73048 (= e!47814 e!47815)))

(declare-fun res!38764 () Bool)

(assert (=> b!73048 (= res!38764 call!6417)))

(assert (=> b!73048 (=> (not res!38764) (not e!47815))))

(declare-fun b!73051 () Bool)

(declare-fun e!47810 () Bool)

(declare-fun e!47817 () Bool)

(assert (=> b!73051 (= e!47810 e!47817)))

(declare-fun res!38757 () Bool)

(declare-fun call!6409 () ListLongMap!1439)

(assert (=> b!73051 (= res!38757 (contains!729 call!6409 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> b!73051 (=> (not res!38757) (not e!47817))))

(declare-fun b!73052 () Bool)

(declare-fun e!47825 () Bool)

(declare-fun call!6407 () Bool)

(assert (=> b!73052 (= e!47825 (not call!6407))))

(declare-fun bm!6399 () Bool)

(declare-fun call!6395 () ListLongMap!1439)

(assert (=> bm!6399 (= call!6395 (+!98 (ite c!10836 call!6402 call!6396) (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun bm!6400 () Bool)

(assert (=> bm!6400 (= call!6415 call!6397)))

(declare-fun b!73053 () Bool)

(assert (=> b!73053 (= e!47815 (not call!6407))))

(declare-fun b!73054 () Bool)

(declare-fun c!10833 () Bool)

(declare-fun lt!32606 () SeekEntryResult!246)

(assert (=> b!73054 (= c!10833 ((_ is MissingVacant!246) lt!32606))))

(declare-fun e!47827 () Bool)

(assert (=> b!73054 (= e!47827 e!47813)))

(declare-fun bm!6401 () Bool)

(declare-fun call!6404 () tuple2!2148)

(declare-fun updateHelperNewKey!24 (LongMapFixedSize!696 (_ BitVec 64) V!2947 (_ BitVec 32)) tuple2!2148)

(assert (=> bm!6401 (= call!6404 (updateHelperNewKey!24 newMap!16 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481 (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593))))))

(declare-fun bm!6402 () Bool)

(declare-fun call!6403 () ListLongMap!1439)

(assert (=> bm!6402 (= call!6403 call!6395)))

(declare-fun b!73055 () Bool)

(declare-fun lt!32611 () SeekEntryResult!246)

(assert (=> b!73055 (= e!47814 ((_ is Undefined!246) lt!32611))))

(declare-fun b!73056 () Bool)

(declare-fun c!10832 () Bool)

(assert (=> b!73056 (= c!10832 ((_ is MissingVacant!246) lt!32611))))

(declare-fun e!47820 () Bool)

(assert (=> b!73056 (= e!47820 e!47814)))

(declare-fun b!73057 () Bool)

(declare-fun res!38759 () Bool)

(declare-fun e!47824 () Bool)

(assert (=> b!73057 (=> (not res!38759) (not e!47824))))

(assert (=> b!73057 (= res!38759 call!6400)))

(assert (=> b!73057 (= e!47827 e!47824)))

(declare-fun lt!32599 () SeekEntryResult!246)

(declare-fun b!73058 () Bool)

(declare-fun e!47818 () Bool)

(assert (=> b!73058 (= e!47818 (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32599)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun b!73059 () Bool)

(declare-fun e!47811 () tuple2!2148)

(assert (=> b!73059 (= e!47821 e!47811)))

(declare-fun c!10838 () Bool)

(assert (=> b!73059 (= c!10838 ((_ is MissingZero!246) lt!32593))))

(declare-fun bm!6403 () Bool)

(declare-fun call!6394 () SeekEntryResult!246)

(assert (=> bm!6403 (= call!6394 call!6399)))

(declare-fun b!73060 () Bool)

(assert (=> b!73060 (= e!47813 ((_ is Undefined!246) lt!32606))))

(declare-fun b!73061 () Bool)

(declare-fun lt!32590 () Unit!2086)

(declare-fun lt!32609 () Unit!2086)

(assert (=> b!73061 (= lt!32590 lt!32609)))

(declare-fun call!6412 () ListLongMap!1439)

(assert (=> b!73061 (= call!6403 call!6412)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!24 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 V!2947 Int) Unit!2086)

(assert (=> b!73061 (= lt!32609 (lemmaChangeLongMinValueKeyThenAddPairToListMap!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) lt!32600 (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) lt!32481 (defaultEntry!2213 newMap!16)))))

(assert (=> b!73061 (= lt!32600 (bvor (extraKeys!2072 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!47816 () tuple2!2148)

(assert (=> b!73061 (= e!47816 (tuple2!2149 true (LongMapFixedSize!697 (defaultEntry!2213 newMap!16) (mask!6180 newMap!16) (bvor (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) (zeroValue!2115 newMap!16) lt!32481 (_size!397 newMap!16) (_keys!3865 newMap!16) (_values!2196 newMap!16) (_vacant!397 newMap!16))))))

(declare-fun b!73062 () Bool)

(declare-fun res!38754 () Bool)

(assert (=> b!73062 (= res!38754 call!6413)))

(declare-fun e!47822 () Bool)

(assert (=> b!73062 (=> (not res!38754) (not e!47822))))

(declare-fun b!73063 () Bool)

(declare-fun call!6410 () Bool)

(assert (=> b!73063 (= e!47824 (not call!6410))))

(declare-fun bm!6404 () Bool)

(assert (=> bm!6404 (= call!6412 call!6416)))

(declare-fun b!73064 () Bool)

(assert (=> b!73064 (= e!47819 e!47816)))

(assert (=> b!73064 (= c!10829 (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73065 () Bool)

(declare-fun res!38756 () Bool)

(assert (=> b!73065 (=> (not res!38756) (not e!47824))))

(assert (=> b!73065 (= res!38756 (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3115 lt!32606)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6405 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3894 (_ BitVec 32)) SeekEntryResult!246)

(assert (=> bm!6405 (= call!6399 (seekEntryOrOpen!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun bm!6406 () Bool)

(assert (=> bm!6406 (= call!6400 call!6413)))

(declare-fun bm!6407 () Bool)

(declare-fun call!6414 () ListLongMap!1439)

(assert (=> bm!6407 (= call!6414 (map!1158 newMap!16))))

(declare-fun b!73066 () Bool)

(assert (=> b!73066 (= e!47826 (not call!6410))))

(declare-fun b!73067 () Bool)

(declare-fun res!38755 () Bool)

(assert (=> b!73067 (= res!38755 (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3118 lt!32611)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73067 (=> (not res!38755) (not e!47815))))

(declare-fun b!73068 () Bool)

(declare-fun e!47808 () ListLongMap!1439)

(assert (=> b!73068 (= e!47808 call!6405)))

(declare-fun call!6406 () Unit!2086)

(declare-fun bm!6408 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!24 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 64) Int) Unit!2086)

(assert (=> bm!6408 (= call!6406 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)))))

(declare-fun b!73069 () Bool)

(declare-fun res!38760 () Bool)

(assert (=> b!73069 (=> (not res!38760) (not e!47825))))

(assert (=> b!73069 (= res!38760 (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3115 lt!32611)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6409 () Bool)

(declare-fun call!6411 () Bool)

(assert (=> bm!6409 (= call!6407 call!6411)))

(declare-fun b!73070 () Bool)

(assert (=> b!73070 (= e!47817 (= call!6409 (+!98 call!6414 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun b!73071 () Bool)

(assert (=> b!73071 (= e!47808 call!6416)))

(declare-fun b!73072 () Bool)

(assert (=> b!73072 (= e!47810 (= call!6409 call!6414))))

(declare-fun bm!6410 () Bool)

(declare-fun c!10834 () Bool)

(declare-fun lt!32592 () SeekEntryResult!246)

(declare-fun c!10837 () Bool)

(declare-fun c!10835 () Bool)

(declare-fun c!10839 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!6410 (= call!6397 (inRange!0 (ite c!10830 (ite c!10835 (index!3116 lt!32592) (ite c!10834 (index!3115 lt!32606) (index!3118 lt!32606))) (ite c!10837 (index!3116 lt!32599) (ite c!10839 (index!3115 lt!32611) (index!3118 lt!32611)))) (mask!6180 newMap!16)))))

(declare-fun bm!6411 () Bool)

(assert (=> bm!6411 (= call!6409 (map!1158 (_2!1084 lt!32604)))))

(declare-fun b!73073 () Bool)

(declare-fun e!47823 () Unit!2086)

(declare-fun lt!32597 () Unit!2086)

(assert (=> b!73073 (= e!47823 lt!32597)))

(assert (=> b!73073 (= lt!32597 call!6406)))

(assert (=> b!73073 (= lt!32606 call!6394)))

(assert (=> b!73073 (= c!10834 ((_ is MissingZero!246) lt!32606))))

(assert (=> b!73073 e!47827))

(declare-fun b!73074 () Bool)

(declare-fun e!47807 () Unit!2086)

(declare-fun lt!32588 () Unit!2086)

(assert (=> b!73074 (= e!47807 lt!32588)))

(assert (=> b!73074 (= lt!32588 call!6408)))

(assert (=> b!73074 (= lt!32599 call!6401)))

(declare-fun res!38761 () Bool)

(assert (=> b!73074 (= res!38761 ((_ is Found!246) lt!32599))))

(assert (=> b!73074 (=> (not res!38761) (not e!47818))))

(assert (=> b!73074 e!47818))

(declare-fun b!73075 () Bool)

(declare-fun res!38762 () Bool)

(assert (=> b!73075 (=> (not res!38762) (not e!47825))))

(assert (=> b!73075 (= res!38762 call!6417)))

(assert (=> b!73075 (= e!47820 e!47825)))

(declare-fun b!73076 () Bool)

(assert (=> b!73076 (= e!47822 (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32592)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun b!73077 () Bool)

(assert (=> b!73077 (= e!47812 e!47810)))

(declare-fun c!10831 () Bool)

(assert (=> b!73077 (= c!10831 (_1!1084 lt!32604))))

(declare-fun b!73078 () Bool)

(declare-fun res!38765 () Bool)

(assert (=> b!73078 (= res!38765 call!6415)))

(assert (=> b!73078 (=> (not res!38765) (not e!47818))))

(declare-fun bm!6412 () Bool)

(declare-fun c!10840 () Bool)

(assert (=> bm!6412 (= c!10840 c!10830)))

(declare-fun call!6398 () Bool)

(assert (=> bm!6412 (= call!6398 (contains!729 e!47808 (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593)))))))

(declare-fun b!73079 () Bool)

(declare-fun Unit!2095 () Unit!2086)

(assert (=> b!73079 (= e!47807 Unit!2095)))

(declare-fun lt!32607 () Unit!2086)

(assert (=> b!73079 (= lt!32607 call!6406)))

(assert (=> b!73079 (= lt!32611 call!6401)))

(assert (=> b!73079 (= c!10839 ((_ is MissingZero!246) lt!32611))))

(assert (=> b!73079 e!47820))

(declare-fun lt!32603 () Unit!2086)

(assert (=> b!73079 (= lt!32603 lt!32607)))

(assert (=> b!73079 false))

(declare-fun b!73080 () Bool)

(declare-fun res!38753 () Bool)

(assert (=> b!73080 (= res!38753 (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3118 lt!32606)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73080 (=> (not res!38753) (not e!47826))))

(declare-fun bm!6413 () Bool)

(assert (=> bm!6413 (= call!6410 call!6411)))

(declare-fun b!73081 () Bool)

(declare-fun lt!32585 () Unit!2086)

(assert (=> b!73081 (= lt!32585 e!47823)))

(assert (=> b!73081 (= c!10835 call!6398)))

(assert (=> b!73081 (= e!47809 (tuple2!2149 false newMap!16))))

(declare-fun b!73082 () Bool)

(declare-fun lt!32602 () tuple2!2148)

(assert (=> b!73082 (= lt!32602 call!6404)))

(assert (=> b!73082 (= e!47811 (tuple2!2149 (_1!1084 lt!32602) (_2!1084 lt!32602)))))

(declare-fun b!73083 () Bool)

(assert (=> b!73083 (= e!47819 e!47809)))

(assert (=> b!73083 (= lt!32593 (seekEntryOrOpen!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(assert (=> b!73083 (= c!10830 ((_ is Undefined!246) lt!32593))))

(declare-fun b!73084 () Bool)

(declare-fun lt!32596 () Unit!2086)

(declare-fun lt!32595 () Unit!2086)

(assert (=> b!73084 (= lt!32596 lt!32595)))

(assert (=> b!73084 call!6398))

(declare-fun lemmaValidKeyInArrayIsInListMap!82 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 32) Int) Unit!2086)

(assert (=> b!73084 (= lt!32595 (lemmaValidKeyInArrayIsInListMap!82 (_keys!3865 newMap!16) lt!32608 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (index!3116 lt!32593) (defaultEntry!2213 newMap!16)))))

(assert (=> b!73084 (= lt!32608 (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))))))

(declare-fun lt!32594 () Unit!2086)

(declare-fun lt!32598 () Unit!2086)

(assert (=> b!73084 (= lt!32594 lt!32598)))

(assert (=> b!73084 (= call!6395 call!6405)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!24 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 32) (_ BitVec 64) V!2947 Int) Unit!2086)

(assert (=> b!73084 (= lt!32598 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (index!3116 lt!32593) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32605 () Unit!2086)

(assert (=> b!73084 (= lt!32605 e!47807)))

(assert (=> b!73084 (= c!10837 (contains!729 call!6396 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> b!73084 (= e!47811 (tuple2!2149 true (LongMapFixedSize!697 (defaultEntry!2213 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (_size!397 newMap!16) (_keys!3865 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))) (_vacant!397 newMap!16))))))

(declare-fun b!73085 () Bool)

(declare-fun lt!32589 () tuple2!2148)

(assert (=> b!73085 (= e!47821 (tuple2!2149 (_1!1084 lt!32589) (_2!1084 lt!32589)))))

(assert (=> b!73085 (= lt!32589 call!6404)))

(declare-fun b!73086 () Bool)

(declare-fun lt!32591 () Unit!2086)

(declare-fun lt!32587 () Unit!2086)

(assert (=> b!73086 (= lt!32591 lt!32587)))

(assert (=> b!73086 (= call!6403 call!6412)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!24 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 V!2947 Int) Unit!2086)

(assert (=> b!73086 (= lt!32587 (lemmaChangeZeroKeyThenAddPairToListMap!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) lt!32610 (zeroValue!2115 newMap!16) lt!32481 (minValue!2115 newMap!16) (defaultEntry!2213 newMap!16)))))

(assert (=> b!73086 (= lt!32610 (bvor (extraKeys!2072 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!73086 (= e!47816 (tuple2!2149 true (LongMapFixedSize!697 (defaultEntry!2213 newMap!16) (mask!6180 newMap!16) (bvor (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) lt!32481 (minValue!2115 newMap!16) (_size!397 newMap!16) (_keys!3865 newMap!16) (_values!2196 newMap!16) (_vacant!397 newMap!16))))))

(declare-fun bm!6414 () Bool)

(assert (=> bm!6414 (= call!6411 (arrayContainsKey!0 (_keys!3865 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!73087 () Bool)

(declare-fun Unit!2096 () Unit!2086)

(assert (=> b!73087 (= e!47823 Unit!2096)))

(declare-fun lt!32586 () Unit!2086)

(assert (=> b!73087 (= lt!32586 call!6408)))

(assert (=> b!73087 (= lt!32592 call!6394)))

(declare-fun res!38758 () Bool)

(assert (=> b!73087 (= res!38758 ((_ is Found!246) lt!32592))))

(assert (=> b!73087 (=> (not res!38758) (not e!47822))))

(assert (=> b!73087 e!47822))

(declare-fun lt!32601 () Unit!2086)

(assert (=> b!73087 (= lt!32601 lt!32586)))

(assert (=> b!73087 false))

(assert (= (and d!16799 c!10836) b!73064))

(assert (= (and d!16799 (not c!10836)) b!73083))

(assert (= (and b!73064 c!10829) b!73086))

(assert (= (and b!73064 (not c!10829)) b!73061))

(assert (= (or b!73086 b!73061) bm!6404))

(assert (= (or b!73086 b!73061) bm!6392))

(assert (= (or b!73086 b!73061) bm!6402))

(assert (= (and b!73083 c!10830) b!73081))

(assert (= (and b!73083 (not c!10830)) b!73049))

(assert (= (and b!73081 c!10835) b!73087))

(assert (= (and b!73081 (not c!10835)) b!73073))

(assert (= (and b!73087 res!38758) b!73062))

(assert (= (and b!73062 res!38754) b!73076))

(assert (= (and b!73073 c!10834) b!73057))

(assert (= (and b!73073 (not c!10834)) b!73054))

(assert (= (and b!73057 res!38759) b!73065))

(assert (= (and b!73065 res!38756) b!73063))

(assert (= (and b!73054 c!10833) b!73050))

(assert (= (and b!73054 (not c!10833)) b!73060))

(assert (= (and b!73050 res!38763) b!73080))

(assert (= (and b!73080 res!38753) b!73066))

(assert (= (or b!73057 b!73050) bm!6406))

(assert (= (or b!73063 b!73066) bm!6413))

(assert (= (or b!73062 bm!6406) bm!6391))

(assert (= (or b!73087 b!73073) bm!6403))

(assert (= (and b!73049 c!10828) b!73085))

(assert (= (and b!73049 (not c!10828)) b!73059))

(assert (= (and b!73059 c!10838) b!73082))

(assert (= (and b!73059 (not c!10838)) b!73084))

(assert (= (and b!73084 c!10837) b!73074))

(assert (= (and b!73084 (not c!10837)) b!73079))

(assert (= (and b!73074 res!38761) b!73078))

(assert (= (and b!73078 res!38765) b!73058))

(assert (= (and b!73079 c!10839) b!73075))

(assert (= (and b!73079 (not c!10839)) b!73056))

(assert (= (and b!73075 res!38762) b!73069))

(assert (= (and b!73069 res!38760) b!73052))

(assert (= (and b!73056 c!10832) b!73048))

(assert (= (and b!73056 (not c!10832)) b!73055))

(assert (= (and b!73048 res!38764) b!73067))

(assert (= (and b!73067 res!38755) b!73053))

(assert (= (or b!73075 b!73048) bm!6395))

(assert (= (or b!73052 b!73053) bm!6409))

(assert (= (or b!73078 bm!6395) bm!6400))

(assert (= (or b!73074 b!73079) bm!6394))

(assert (= (or b!73085 b!73082) bm!6401))

(assert (= (or bm!6413 bm!6409) bm!6414))

(assert (= (or bm!6403 bm!6394) bm!6405))

(assert (= (or b!73073 b!73079) bm!6408))

(assert (= (or bm!6391 bm!6400) bm!6410))

(assert (= (or b!73081 b!73084) bm!6393))

(assert (= (or b!73087 b!73074) bm!6397))

(assert (= (or b!73081 b!73084) bm!6412))

(assert (= (and bm!6412 c!10840) b!73068))

(assert (= (and bm!6412 (not c!10840)) b!73071))

(assert (= (or bm!6404 b!73071) bm!6398))

(assert (= (or bm!6392 b!73084) bm!6396))

(assert (= (or bm!6402 b!73084) bm!6399))

(assert (= (and d!16799 res!38752) b!73077))

(assert (= (and b!73077 c!10831) b!73051))

(assert (= (and b!73077 (not c!10831)) b!73072))

(assert (= (and b!73051 res!38757) b!73070))

(assert (= (or b!73070 b!73072) bm!6407))

(assert (= (or b!73051 b!73070 b!73072) bm!6411))

(declare-fun m!71165 () Bool)

(assert (=> b!73084 m!71165))

(declare-fun m!71167 () Bool)

(assert (=> b!73084 m!71167))

(assert (=> b!73084 m!71053))

(declare-fun m!71169 () Bool)

(assert (=> b!73084 m!71169))

(assert (=> b!73084 m!71053))

(declare-fun m!71171 () Bool)

(assert (=> b!73084 m!71171))

(declare-fun m!71173 () Bool)

(assert (=> bm!6411 m!71173))

(declare-fun m!71175 () Bool)

(assert (=> bm!6410 m!71175))

(declare-fun m!71177 () Bool)

(assert (=> b!73076 m!71177))

(declare-fun m!71179 () Bool)

(assert (=> b!73061 m!71179))

(assert (=> bm!6408 m!71053))

(declare-fun m!71181 () Bool)

(assert (=> bm!6408 m!71181))

(declare-fun m!71183 () Bool)

(assert (=> b!73080 m!71183))

(declare-fun m!71185 () Bool)

(assert (=> b!73065 m!71185))

(declare-fun m!71187 () Bool)

(assert (=> b!73070 m!71187))

(declare-fun m!71189 () Bool)

(assert (=> b!73069 m!71189))

(declare-fun m!71191 () Bool)

(assert (=> bm!6396 m!71191))

(assert (=> bm!6393 m!71167))

(declare-fun m!71193 () Bool)

(assert (=> bm!6393 m!71193))

(assert (=> bm!6414 m!71053))

(declare-fun m!71195 () Bool)

(assert (=> bm!6414 m!71195))

(assert (=> b!73051 m!71053))

(declare-fun m!71197 () Bool)

(assert (=> b!73051 m!71197))

(declare-fun m!71199 () Bool)

(assert (=> d!16799 m!71199))

(assert (=> d!16799 m!71045))

(declare-fun m!71201 () Bool)

(assert (=> bm!6399 m!71201))

(assert (=> bm!6405 m!71053))

(declare-fun m!71203 () Bool)

(assert (=> bm!6405 m!71203))

(assert (=> bm!6407 m!71071))

(declare-fun m!71205 () Bool)

(assert (=> bm!6398 m!71205))

(declare-fun m!71207 () Bool)

(assert (=> b!73067 m!71207))

(declare-fun m!71209 () Bool)

(assert (=> b!73086 m!71209))

(assert (=> bm!6401 m!71053))

(declare-fun m!71211 () Bool)

(assert (=> bm!6401 m!71211))

(declare-fun m!71213 () Bool)

(assert (=> b!73058 m!71213))

(assert (=> b!73083 m!71053))

(assert (=> b!73083 m!71203))

(assert (=> bm!6397 m!71053))

(declare-fun m!71215 () Bool)

(assert (=> bm!6397 m!71215))

(declare-fun m!71217 () Bool)

(assert (=> bm!6412 m!71217))

(declare-fun m!71219 () Bool)

(assert (=> bm!6412 m!71219))

(assert (=> b!72883 d!16799))

(declare-fun d!16801 () Bool)

(assert (=> d!16801 (= (valid!291 thiss!992) (valid!292 (v!2533 (underlying!264 thiss!992))))))

(declare-fun bs!3131 () Bool)

(assert (= bs!3131 d!16801))

(declare-fun m!71221 () Bool)

(assert (=> bs!3131 m!71221))

(assert (=> start!9766 d!16801))

(declare-fun d!16803 () Bool)

(assert (=> d!16803 (= (map!1158 newMap!16) (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun bs!3132 () Bool)

(assert (= bs!3132 d!16803))

(assert (=> bs!3132 m!71191))

(assert (=> b!72890 d!16803))

(declare-fun b!73130 () Bool)

(declare-fun e!47855 () Bool)

(declare-fun e!47858 () Bool)

(assert (=> b!73130 (= e!47855 e!47858)))

(declare-fun res!38789 () Bool)

(declare-fun call!6437 () Bool)

(assert (=> b!73130 (= res!38789 call!6437)))

(assert (=> b!73130 (=> (not res!38789) (not e!47858))))

(declare-fun b!73131 () Bool)

(declare-fun e!47862 () ListLongMap!1439)

(declare-fun call!6432 () ListLongMap!1439)

(assert (=> b!73131 (= e!47862 call!6432)))

(declare-fun b!73132 () Bool)

(declare-fun call!6433 () ListLongMap!1439)

(assert (=> b!73132 (= e!47862 call!6433)))

(declare-fun bm!6429 () Bool)

(declare-fun lt!32666 () ListLongMap!1439)

(assert (=> bm!6429 (= call!6437 (contains!729 lt!32666 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73133 () Bool)

(declare-fun e!47854 () Bool)

(declare-fun e!47860 () Bool)

(assert (=> b!73133 (= e!47854 e!47860)))

(declare-fun res!38787 () Bool)

(assert (=> b!73133 (=> (not res!38787) (not e!47860))))

(assert (=> b!73133 (= res!38787 (contains!729 lt!32666 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73133 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!73134 () Bool)

(declare-fun e!47856 () Unit!2086)

(declare-fun Unit!2097 () Unit!2086)

(assert (=> b!73134 (= e!47856 Unit!2097)))

(declare-fun bm!6430 () Bool)

(declare-fun call!6434 () ListLongMap!1439)

(assert (=> bm!6430 (= call!6432 call!6434)))

(declare-fun bm!6431 () Bool)

(declare-fun call!6438 () ListLongMap!1439)

(assert (=> bm!6431 (= call!6438 (getCurrentListMapNoExtraKeys!62 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun b!73136 () Bool)

(declare-fun lt!32656 () Unit!2086)

(assert (=> b!73136 (= e!47856 lt!32656)))

(declare-fun lt!32677 () ListLongMap!1439)

(assert (=> b!73136 (= lt!32677 (getCurrentListMapNoExtraKeys!62 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun lt!32671 () (_ BitVec 64))

(assert (=> b!73136 (= lt!32671 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32662 () (_ BitVec 64))

(assert (=> b!73136 (= lt!32662 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!32659 () Unit!2086)

(declare-fun addStillContains!51 (ListLongMap!1439 (_ BitVec 64) V!2947 (_ BitVec 64)) Unit!2086)

(assert (=> b!73136 (= lt!32659 (addStillContains!51 lt!32677 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) lt!32662))))

(assert (=> b!73136 (contains!729 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32662)))

(declare-fun lt!32673 () Unit!2086)

(assert (=> b!73136 (= lt!32673 lt!32659)))

(declare-fun lt!32664 () ListLongMap!1439)

(assert (=> b!73136 (= lt!32664 (getCurrentListMapNoExtraKeys!62 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun lt!32674 () (_ BitVec 64))

(assert (=> b!73136 (= lt!32674 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32672 () (_ BitVec 64))

(assert (=> b!73136 (= lt!32672 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!32676 () Unit!2086)

(declare-fun addApplyDifferent!51 (ListLongMap!1439 (_ BitVec 64) V!2947 (_ BitVec 64)) Unit!2086)

(assert (=> b!73136 (= lt!32676 (addApplyDifferent!51 lt!32664 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))) lt!32672))))

(declare-fun apply!75 (ListLongMap!1439 (_ BitVec 64)) V!2947)

(assert (=> b!73136 (= (apply!75 (+!98 lt!32664 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32672) (apply!75 lt!32664 lt!32672))))

(declare-fun lt!32661 () Unit!2086)

(assert (=> b!73136 (= lt!32661 lt!32676)))

(declare-fun lt!32675 () ListLongMap!1439)

(assert (=> b!73136 (= lt!32675 (getCurrentListMapNoExtraKeys!62 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun lt!32665 () (_ BitVec 64))

(assert (=> b!73136 (= lt!32665 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32657 () (_ BitVec 64))

(assert (=> b!73136 (= lt!32657 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!32663 () Unit!2086)

(assert (=> b!73136 (= lt!32663 (addApplyDifferent!51 lt!32675 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) lt!32657))))

(assert (=> b!73136 (= (apply!75 (+!98 lt!32675 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32657) (apply!75 lt!32675 lt!32657))))

(declare-fun lt!32667 () Unit!2086)

(assert (=> b!73136 (= lt!32667 lt!32663)))

(declare-fun lt!32670 () ListLongMap!1439)

(assert (=> b!73136 (= lt!32670 (getCurrentListMapNoExtraKeys!62 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun lt!32660 () (_ BitVec 64))

(assert (=> b!73136 (= lt!32660 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32658 () (_ BitVec 64))

(assert (=> b!73136 (= lt!32658 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!73136 (= lt!32656 (addApplyDifferent!51 lt!32670 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))) lt!32658))))

(assert (=> b!73136 (= (apply!75 (+!98 lt!32670 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32658) (apply!75 lt!32670 lt!32658))))

(declare-fun b!73137 () Bool)

(assert (=> b!73137 (= e!47855 (not call!6437))))

(declare-fun b!73138 () Bool)

(declare-fun res!38788 () Bool)

(declare-fun e!47865 () Bool)

(assert (=> b!73138 (=> (not res!38788) (not e!47865))))

(assert (=> b!73138 (= res!38788 e!47855)))

(declare-fun c!10853 () Bool)

(assert (=> b!73138 (= c!10853 (not (= (bvand (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!73139 () Bool)

(declare-fun e!47859 () ListLongMap!1439)

(declare-fun e!47866 () ListLongMap!1439)

(assert (=> b!73139 (= e!47859 e!47866)))

(declare-fun c!10855 () Bool)

(assert (=> b!73139 (= c!10855 (and (not (= (bvand (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73140 () Bool)

(declare-fun e!47861 () Bool)

(declare-fun e!47857 () Bool)

(assert (=> b!73140 (= e!47861 e!47857)))

(declare-fun res!38792 () Bool)

(declare-fun call!6435 () Bool)

(assert (=> b!73140 (= res!38792 call!6435)))

(assert (=> b!73140 (=> (not res!38792) (not e!47857))))

(declare-fun bm!6432 () Bool)

(assert (=> bm!6432 (= call!6434 call!6438)))

(declare-fun bm!6433 () Bool)

(declare-fun call!6436 () ListLongMap!1439)

(assert (=> bm!6433 (= call!6433 call!6436)))

(declare-fun b!73141 () Bool)

(assert (=> b!73141 (= e!47861 (not call!6435))))

(declare-fun b!73142 () Bool)

(declare-fun res!38785 () Bool)

(assert (=> b!73142 (=> (not res!38785) (not e!47865))))

(assert (=> b!73142 (= res!38785 e!47854)))

(declare-fun res!38784 () Bool)

(assert (=> b!73142 (=> res!38784 e!47854)))

(declare-fun e!47863 () Bool)

(assert (=> b!73142 (= res!38784 (not e!47863))))

(declare-fun res!38786 () Bool)

(assert (=> b!73142 (=> (not res!38786) (not e!47863))))

(assert (=> b!73142 (= res!38786 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!73143 () Bool)

(assert (=> b!73143 (= e!47865 e!47861)))

(declare-fun c!10857 () Bool)

(assert (=> b!73143 (= c!10857 (not (= (bvand (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73144 () Bool)

(assert (=> b!73144 (= e!47857 (= (apply!75 lt!32666 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun b!73145 () Bool)

(assert (=> b!73145 (= e!47866 call!6433)))

(declare-fun bm!6434 () Bool)

(assert (=> bm!6434 (= call!6435 (contains!729 lt!32666 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!16805 () Bool)

(assert (=> d!16805 e!47865))

(declare-fun res!38790 () Bool)

(assert (=> d!16805 (=> (not res!38790) (not e!47865))))

(assert (=> d!16805 (= res!38790 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun lt!32668 () ListLongMap!1439)

(assert (=> d!16805 (= lt!32666 lt!32668)))

(declare-fun lt!32669 () Unit!2086)

(assert (=> d!16805 (= lt!32669 e!47856)))

(declare-fun c!10856 () Bool)

(declare-fun e!47864 () Bool)

(assert (=> d!16805 (= c!10856 e!47864)))

(declare-fun res!38791 () Bool)

(assert (=> d!16805 (=> (not res!38791) (not e!47864))))

(assert (=> d!16805 (= res!38791 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(assert (=> d!16805 (= lt!32668 e!47859)))

(declare-fun c!10854 () Bool)

(assert (=> d!16805 (= c!10854 (and (not (= (bvand (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16805 (validMask!0 (mask!6180 (v!2533 (underlying!264 thiss!992))))))

(assert (=> d!16805 (= (getCurrentListMap!426 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))) lt!32666)))

(declare-fun b!73135 () Bool)

(assert (=> b!73135 (= e!47858 (= (apply!75 lt!32666 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun b!73146 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!73146 (= e!47863 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!73147 () Bool)

(declare-fun c!10858 () Bool)

(assert (=> b!73147 (= c!10858 (and (not (= (bvand (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!73147 (= e!47866 e!47862)))

(declare-fun b!73148 () Bool)

(assert (=> b!73148 (= e!47864 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!73149 () Bool)

(assert (=> b!73149 (= e!47860 (= (apply!75 lt!32666 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73149 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2097 (_values!2196 (v!2533 (underlying!264 thiss!992))))))))

(assert (=> b!73149 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun bm!6435 () Bool)

(assert (=> bm!6435 (= call!6436 (+!98 (ite c!10854 call!6438 (ite c!10855 call!6434 call!6432)) (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!73150 () Bool)

(assert (=> b!73150 (= e!47859 (+!98 call!6436 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(assert (= (and d!16805 c!10854) b!73150))

(assert (= (and d!16805 (not c!10854)) b!73139))

(assert (= (and b!73139 c!10855) b!73145))

(assert (= (and b!73139 (not c!10855)) b!73147))

(assert (= (and b!73147 c!10858) b!73132))

(assert (= (and b!73147 (not c!10858)) b!73131))

(assert (= (or b!73132 b!73131) bm!6430))

(assert (= (or b!73145 bm!6430) bm!6432))

(assert (= (or b!73145 b!73132) bm!6433))

(assert (= (or b!73150 bm!6432) bm!6431))

(assert (= (or b!73150 bm!6433) bm!6435))

(assert (= (and d!16805 res!38791) b!73148))

(assert (= (and d!16805 c!10856) b!73136))

(assert (= (and d!16805 (not c!10856)) b!73134))

(assert (= (and d!16805 res!38790) b!73142))

(assert (= (and b!73142 res!38786) b!73146))

(assert (= (and b!73142 (not res!38784)) b!73133))

(assert (= (and b!73133 res!38787) b!73149))

(assert (= (and b!73142 res!38785) b!73138))

(assert (= (and b!73138 c!10853) b!73130))

(assert (= (and b!73138 (not c!10853)) b!73137))

(assert (= (and b!73130 res!38789) b!73135))

(assert (= (or b!73130 b!73137) bm!6429))

(assert (= (and b!73138 res!38788) b!73143))

(assert (= (and b!73143 c!10857) b!73140))

(assert (= (and b!73143 (not c!10857)) b!73141))

(assert (= (and b!73140 res!38792) b!73144))

(assert (= (or b!73140 b!73141) bm!6434))

(declare-fun b_lambda!3291 () Bool)

(assert (=> (not b_lambda!3291) (not b!73149)))

(assert (=> b!73149 t!5065))

(declare-fun b_and!4489 () Bool)

(assert (= b_and!4477 (and (=> t!5065 result!2683) b_and!4489)))

(assert (=> b!73149 t!5067))

(declare-fun b_and!4491 () Bool)

(assert (= b_and!4479 (and (=> t!5067 result!2687) b_and!4491)))

(declare-fun m!71223 () Bool)

(assert (=> bm!6435 m!71223))

(declare-fun m!71225 () Bool)

(assert (=> b!73135 m!71225))

(assert (=> bm!6431 m!71099))

(declare-fun m!71227 () Bool)

(assert (=> b!73146 m!71227))

(assert (=> b!73146 m!71227))

(declare-fun m!71229 () Bool)

(assert (=> b!73146 m!71229))

(declare-fun m!71231 () Bool)

(assert (=> b!73150 m!71231))

(declare-fun m!71233 () Bool)

(assert (=> bm!6429 m!71233))

(declare-fun m!71235 () Bool)

(assert (=> b!73136 m!71235))

(declare-fun m!71237 () Bool)

(assert (=> b!73136 m!71237))

(declare-fun m!71239 () Bool)

(assert (=> b!73136 m!71239))

(assert (=> b!73136 m!71227))

(declare-fun m!71241 () Bool)

(assert (=> b!73136 m!71241))

(declare-fun m!71243 () Bool)

(assert (=> b!73136 m!71243))

(declare-fun m!71245 () Bool)

(assert (=> b!73136 m!71245))

(assert (=> b!73136 m!71241))

(declare-fun m!71247 () Bool)

(assert (=> b!73136 m!71247))

(assert (=> b!73136 m!71099))

(declare-fun m!71249 () Bool)

(assert (=> b!73136 m!71249))

(assert (=> b!73136 m!71237))

(declare-fun m!71251 () Bool)

(assert (=> b!73136 m!71251))

(assert (=> b!73136 m!71235))

(declare-fun m!71253 () Bool)

(assert (=> b!73136 m!71253))

(declare-fun m!71255 () Bool)

(assert (=> b!73136 m!71255))

(assert (=> b!73136 m!71239))

(declare-fun m!71257 () Bool)

(assert (=> b!73136 m!71257))

(declare-fun m!71259 () Bool)

(assert (=> b!73136 m!71259))

(declare-fun m!71261 () Bool)

(assert (=> b!73136 m!71261))

(declare-fun m!71263 () Bool)

(assert (=> b!73136 m!71263))

(assert (=> b!73133 m!71227))

(assert (=> b!73133 m!71227))

(declare-fun m!71265 () Bool)

(assert (=> b!73133 m!71265))

(declare-fun m!71267 () Bool)

(assert (=> bm!6434 m!71267))

(assert (=> b!73149 m!71227))

(assert (=> b!73149 m!71227))

(declare-fun m!71269 () Bool)

(assert (=> b!73149 m!71269))

(assert (=> b!73149 m!71083))

(declare-fun m!71271 () Bool)

(assert (=> b!73149 m!71271))

(assert (=> b!73149 m!71271))

(assert (=> b!73149 m!71083))

(declare-fun m!71273 () Bool)

(assert (=> b!73149 m!71273))

(assert (=> b!73148 m!71227))

(assert (=> b!73148 m!71227))

(assert (=> b!73148 m!71229))

(declare-fun m!71275 () Bool)

(assert (=> b!73144 m!71275))

(assert (=> d!16805 m!71093))

(assert (=> b!72890 d!16805))

(declare-fun d!16807 () Bool)

(declare-fun c!10861 () Bool)

(assert (=> d!16807 (= c!10861 ((_ is ValueCellFull!894) (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun e!47869 () V!2947)

(assert (=> d!16807 (= (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) from!355) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47869)))

(declare-fun b!73155 () Bool)

(declare-fun get!1156 (ValueCell!894 V!2947) V!2947)

(assert (=> b!73155 (= e!47869 (get!1156 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) from!355) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73156 () Bool)

(declare-fun get!1157 (ValueCell!894 V!2947) V!2947)

(assert (=> b!73156 (= e!47869 (get!1157 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) from!355) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16807 c!10861) b!73155))

(assert (= (and d!16807 (not c!10861)) b!73156))

(assert (=> b!73155 m!71081))

(assert (=> b!73155 m!71083))

(declare-fun m!71277 () Bool)

(assert (=> b!73155 m!71277))

(assert (=> b!73156 m!71081))

(assert (=> b!73156 m!71083))

(declare-fun m!71279 () Bool)

(assert (=> b!73156 m!71279))

(assert (=> b!72886 d!16807))

(declare-fun d!16809 () Bool)

(assert (=> d!16809 (= (array_inv!1101 (_keys!3865 newMap!16)) (bvsge (size!2096 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72885 d!16809))

(declare-fun d!16811 () Bool)

(assert (=> d!16811 (= (array_inv!1102 (_values!2196 newMap!16)) (bvsge (size!2097 (_values!2196 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72885 d!16811))

(declare-fun b!73181 () Bool)

(declare-fun res!38801 () Bool)

(declare-fun e!47886 () Bool)

(assert (=> b!73181 (=> (not res!38801) (not e!47886))))

(declare-fun lt!32694 () ListLongMap!1439)

(assert (=> b!73181 (= res!38801 (not (contains!729 lt!32694 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73182 () Bool)

(declare-fun e!47884 () Bool)

(assert (=> b!73182 (= e!47884 (= lt!32694 (getCurrentListMapNoExtraKeys!62 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!73183 () Bool)

(declare-fun e!47887 () Bool)

(assert (=> b!73183 (= e!47887 e!47884)))

(declare-fun c!10871 () Bool)

(assert (=> b!73183 (= c!10871 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!73184 () Bool)

(assert (=> b!73184 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(assert (=> b!73184 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2097 (_values!2196 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun e!47888 () Bool)

(assert (=> b!73184 (= e!47888 (= (apply!75 lt!32694 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!73185 () Bool)

(declare-fun e!47889 () ListLongMap!1439)

(declare-fun call!6441 () ListLongMap!1439)

(assert (=> b!73185 (= e!47889 call!6441)))

(declare-fun b!73186 () Bool)

(declare-fun e!47890 () ListLongMap!1439)

(assert (=> b!73186 (= e!47890 (ListLongMap!1440 Nil!1504))))

(declare-fun b!73187 () Bool)

(declare-fun isEmpty!321 (ListLongMap!1439) Bool)

(assert (=> b!73187 (= e!47884 (isEmpty!321 lt!32694))))

(declare-fun d!16813 () Bool)

(assert (=> d!16813 e!47886))

(declare-fun res!38803 () Bool)

(assert (=> d!16813 (=> (not res!38803) (not e!47886))))

(assert (=> d!16813 (= res!38803 (not (contains!729 lt!32694 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16813 (= lt!32694 e!47890)))

(declare-fun c!10870 () Bool)

(assert (=> d!16813 (= c!10870 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(assert (=> d!16813 (validMask!0 (mask!6180 (v!2533 (underlying!264 thiss!992))))))

(assert (=> d!16813 (= (getCurrentListMapNoExtraKeys!62 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))) lt!32694)))

(declare-fun b!73188 () Bool)

(assert (=> b!73188 (= e!47890 e!47889)))

(declare-fun c!10873 () Bool)

(assert (=> b!73188 (= c!10873 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!73189 () Bool)

(assert (=> b!73189 (= e!47886 e!47887)))

(declare-fun c!10872 () Bool)

(declare-fun e!47885 () Bool)

(assert (=> b!73189 (= c!10872 e!47885)))

(declare-fun res!38804 () Bool)

(assert (=> b!73189 (=> (not res!38804) (not e!47885))))

(assert (=> b!73189 (= res!38804 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun bm!6438 () Bool)

(assert (=> bm!6438 (= call!6441 (getCurrentListMapNoExtraKeys!62 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun b!73190 () Bool)

(assert (=> b!73190 (= e!47887 e!47888)))

(assert (=> b!73190 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun res!38802 () Bool)

(assert (=> b!73190 (= res!38802 (contains!729 lt!32694 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73190 (=> (not res!38802) (not e!47888))))

(declare-fun b!73191 () Bool)

(assert (=> b!73191 (= e!47885 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73191 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!73192 () Bool)

(declare-fun lt!32697 () Unit!2086)

(declare-fun lt!32695 () Unit!2086)

(assert (=> b!73192 (= lt!32697 lt!32695)))

(declare-fun lt!32698 () (_ BitVec 64))

(declare-fun lt!32696 () (_ BitVec 64))

(declare-fun lt!32692 () ListLongMap!1439)

(declare-fun lt!32693 () V!2947)

(assert (=> b!73192 (not (contains!729 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693)) lt!32696))))

(declare-fun addStillNotContains!26 (ListLongMap!1439 (_ BitVec 64) V!2947 (_ BitVec 64)) Unit!2086)

(assert (=> b!73192 (= lt!32695 (addStillNotContains!26 lt!32692 lt!32698 lt!32693 lt!32696))))

(assert (=> b!73192 (= lt!32696 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!73192 (= lt!32693 (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!73192 (= lt!32698 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!73192 (= lt!32692 call!6441)))

(assert (=> b!73192 (= e!47889 (+!98 call!6441 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!16813 c!10870) b!73186))

(assert (= (and d!16813 (not c!10870)) b!73188))

(assert (= (and b!73188 c!10873) b!73192))

(assert (= (and b!73188 (not c!10873)) b!73185))

(assert (= (or b!73192 b!73185) bm!6438))

(assert (= (and d!16813 res!38803) b!73181))

(assert (= (and b!73181 res!38801) b!73189))

(assert (= (and b!73189 res!38804) b!73191))

(assert (= (and b!73189 c!10872) b!73190))

(assert (= (and b!73189 (not c!10872)) b!73183))

(assert (= (and b!73190 res!38802) b!73184))

(assert (= (and b!73183 c!10871) b!73182))

(assert (= (and b!73183 (not c!10871)) b!73187))

(declare-fun b_lambda!3293 () Bool)

(assert (=> (not b_lambda!3293) (not b!73184)))

(assert (=> b!73184 t!5065))

(declare-fun b_and!4493 () Bool)

(assert (= b_and!4489 (and (=> t!5065 result!2683) b_and!4493)))

(assert (=> b!73184 t!5067))

(declare-fun b_and!4495 () Bool)

(assert (= b_and!4491 (and (=> t!5067 result!2687) b_and!4495)))

(declare-fun b_lambda!3295 () Bool)

(assert (=> (not b_lambda!3295) (not b!73192)))

(assert (=> b!73192 t!5065))

(declare-fun b_and!4497 () Bool)

(assert (= b_and!4493 (and (=> t!5065 result!2683) b_and!4497)))

(assert (=> b!73192 t!5067))

(declare-fun b_and!4499 () Bool)

(assert (= b_and!4495 (and (=> t!5067 result!2687) b_and!4499)))

(assert (=> b!73191 m!71227))

(assert (=> b!73191 m!71227))

(assert (=> b!73191 m!71229))

(declare-fun m!71281 () Bool)

(assert (=> d!16813 m!71281))

(assert (=> d!16813 m!71093))

(declare-fun m!71283 () Bool)

(assert (=> b!73181 m!71283))

(assert (=> b!73192 m!71083))

(declare-fun m!71285 () Bool)

(assert (=> b!73192 m!71285))

(assert (=> b!73192 m!71271))

(assert (=> b!73192 m!71083))

(assert (=> b!73192 m!71273))

(assert (=> b!73192 m!71227))

(declare-fun m!71287 () Bool)

(assert (=> b!73192 m!71287))

(assert (=> b!73192 m!71287))

(declare-fun m!71289 () Bool)

(assert (=> b!73192 m!71289))

(declare-fun m!71291 () Bool)

(assert (=> b!73192 m!71291))

(assert (=> b!73192 m!71271))

(assert (=> b!73190 m!71227))

(assert (=> b!73190 m!71227))

(declare-fun m!71293 () Bool)

(assert (=> b!73190 m!71293))

(assert (=> b!73188 m!71227))

(assert (=> b!73188 m!71227))

(assert (=> b!73188 m!71229))

(declare-fun m!71295 () Bool)

(assert (=> bm!6438 m!71295))

(assert (=> b!73184 m!71227))

(declare-fun m!71297 () Bool)

(assert (=> b!73184 m!71297))

(assert (=> b!73184 m!71083))

(assert (=> b!73184 m!71271))

(assert (=> b!73184 m!71083))

(assert (=> b!73184 m!71273))

(assert (=> b!73184 m!71227))

(assert (=> b!73184 m!71271))

(assert (=> b!73182 m!71295))

(declare-fun m!71299 () Bool)

(assert (=> b!73187 m!71299))

(assert (=> b!72876 d!16813))

(declare-fun d!16815 () Bool)

(declare-fun e!47893 () Bool)

(assert (=> d!16815 e!47893))

(declare-fun res!38809 () Bool)

(assert (=> d!16815 (=> (not res!38809) (not e!47893))))

(declare-fun lt!32710 () ListLongMap!1439)

(assert (=> d!16815 (= res!38809 (contains!729 lt!32710 (_1!1083 lt!32482)))))

(declare-fun lt!32709 () List!1507)

(assert (=> d!16815 (= lt!32710 (ListLongMap!1440 lt!32709))))

(declare-fun lt!32707 () Unit!2086)

(declare-fun lt!32708 () Unit!2086)

(assert (=> d!16815 (= lt!32707 lt!32708)))

(assert (=> d!16815 (= (getValueByKey!132 lt!32709 (_1!1083 lt!32482)) (Some!137 (_2!1083 lt!32482)))))

(declare-fun lemmaContainsTupThenGetReturnValue!51 (List!1507 (_ BitVec 64) V!2947) Unit!2086)

(assert (=> d!16815 (= lt!32708 (lemmaContainsTupThenGetReturnValue!51 lt!32709 (_1!1083 lt!32482) (_2!1083 lt!32482)))))

(declare-fun insertStrictlySorted!53 (List!1507 (_ BitVec 64) V!2947) List!1507)

(assert (=> d!16815 (= lt!32709 (insertStrictlySorted!53 (toList!735 lt!32476) (_1!1083 lt!32482) (_2!1083 lt!32482)))))

(assert (=> d!16815 (= (+!98 lt!32476 lt!32482) lt!32710)))

(declare-fun b!73197 () Bool)

(declare-fun res!38810 () Bool)

(assert (=> b!73197 (=> (not res!38810) (not e!47893))))

(assert (=> b!73197 (= res!38810 (= (getValueByKey!132 (toList!735 lt!32710) (_1!1083 lt!32482)) (Some!137 (_2!1083 lt!32482))))))

(declare-fun b!73198 () Bool)

(declare-fun contains!730 (List!1507 tuple2!2146) Bool)

(assert (=> b!73198 (= e!47893 (contains!730 (toList!735 lt!32710) lt!32482))))

(assert (= (and d!16815 res!38809) b!73197))

(assert (= (and b!73197 res!38810) b!73198))

(declare-fun m!71301 () Bool)

(assert (=> d!16815 m!71301))

(declare-fun m!71303 () Bool)

(assert (=> d!16815 m!71303))

(declare-fun m!71305 () Bool)

(assert (=> d!16815 m!71305))

(declare-fun m!71307 () Bool)

(assert (=> d!16815 m!71307))

(declare-fun m!71309 () Bool)

(assert (=> b!73197 m!71309))

(declare-fun m!71311 () Bool)

(assert (=> b!73198 m!71311))

(assert (=> b!72876 d!16815))

(declare-fun d!16817 () Bool)

(assert (=> d!16817 (= (+!98 (+!98 lt!32476 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (+!98 (+!98 lt!32476 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))

(declare-fun lt!32713 () Unit!2086)

(declare-fun choose!418 (ListLongMap!1439 (_ BitVec 64) V!2947 (_ BitVec 64) V!2947) Unit!2086)

(assert (=> d!16817 (= lt!32713 (choose!418 lt!32476 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))

(assert (=> d!16817 (not (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16817 (= (addCommutativeForDiffKeys!17 lt!32476 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) lt!32713)))

(declare-fun bs!3133 () Bool)

(assert (= bs!3133 d!16817))

(assert (=> bs!3133 m!71053))

(declare-fun m!71313 () Bool)

(assert (=> bs!3133 m!71313))

(declare-fun m!71315 () Bool)

(assert (=> bs!3133 m!71315))

(assert (=> bs!3133 m!71315))

(declare-fun m!71317 () Bool)

(assert (=> bs!3133 m!71317))

(declare-fun m!71319 () Bool)

(assert (=> bs!3133 m!71319))

(assert (=> bs!3133 m!71319))

(declare-fun m!71321 () Bool)

(assert (=> bs!3133 m!71321))

(assert (=> b!72876 d!16817))

(declare-fun d!16819 () Bool)

(declare-fun e!47894 () Bool)

(assert (=> d!16819 e!47894))

(declare-fun res!38811 () Bool)

(assert (=> d!16819 (=> (not res!38811) (not e!47894))))

(declare-fun lt!32717 () ListLongMap!1439)

(assert (=> d!16819 (= res!38811 (contains!729 lt!32717 (_1!1083 lt!32482)))))

(declare-fun lt!32716 () List!1507)

(assert (=> d!16819 (= lt!32717 (ListLongMap!1440 lt!32716))))

(declare-fun lt!32714 () Unit!2086)

(declare-fun lt!32715 () Unit!2086)

(assert (=> d!16819 (= lt!32714 lt!32715)))

(assert (=> d!16819 (= (getValueByKey!132 lt!32716 (_1!1083 lt!32482)) (Some!137 (_2!1083 lt!32482)))))

(assert (=> d!16819 (= lt!32715 (lemmaContainsTupThenGetReturnValue!51 lt!32716 (_1!1083 lt!32482) (_2!1083 lt!32482)))))

(assert (=> d!16819 (= lt!32716 (insertStrictlySorted!53 (toList!735 (+!98 lt!32476 lt!32472)) (_1!1083 lt!32482) (_2!1083 lt!32482)))))

(assert (=> d!16819 (= (+!98 (+!98 lt!32476 lt!32472) lt!32482) lt!32717)))

(declare-fun b!73199 () Bool)

(declare-fun res!38812 () Bool)

(assert (=> b!73199 (=> (not res!38812) (not e!47894))))

(assert (=> b!73199 (= res!38812 (= (getValueByKey!132 (toList!735 lt!32717) (_1!1083 lt!32482)) (Some!137 (_2!1083 lt!32482))))))

(declare-fun b!73200 () Bool)

(assert (=> b!73200 (= e!47894 (contains!730 (toList!735 lt!32717) lt!32482))))

(assert (= (and d!16819 res!38811) b!73199))

(assert (= (and b!73199 res!38812) b!73200))

(declare-fun m!71323 () Bool)

(assert (=> d!16819 m!71323))

(declare-fun m!71325 () Bool)

(assert (=> d!16819 m!71325))

(declare-fun m!71327 () Bool)

(assert (=> d!16819 m!71327))

(declare-fun m!71329 () Bool)

(assert (=> d!16819 m!71329))

(declare-fun m!71331 () Bool)

(assert (=> b!73199 m!71331))

(declare-fun m!71333 () Bool)

(assert (=> b!73200 m!71333))

(assert (=> b!72876 d!16819))

(declare-fun d!16821 () Bool)

(assert (=> d!16821 (= (validMask!0 (mask!6180 (v!2533 (underlying!264 thiss!992)))) (and (or (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000001111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000011111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000001111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000011111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000001111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000011111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000111111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000000001111111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000000011111111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000000111111111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000001111111111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000011111111111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000111111111111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000001111111111111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000011111111111111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000111111111111111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000001111111111111111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000011111111111111111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000111111111111111111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000001111111111111111111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000011111111111111111111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000111111111111111111111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00001111111111111111111111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00011111111111111111111111111111) (= (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!72876 d!16821))

(declare-fun d!16823 () Bool)

(declare-fun e!47895 () Bool)

(assert (=> d!16823 e!47895))

(declare-fun res!38813 () Bool)

(assert (=> d!16823 (=> (not res!38813) (not e!47895))))

(declare-fun lt!32721 () ListLongMap!1439)

(assert (=> d!16823 (= res!38813 (contains!729 lt!32721 (_1!1083 lt!32472)))))

(declare-fun lt!32720 () List!1507)

(assert (=> d!16823 (= lt!32721 (ListLongMap!1440 lt!32720))))

(declare-fun lt!32718 () Unit!2086)

(declare-fun lt!32719 () Unit!2086)

(assert (=> d!16823 (= lt!32718 lt!32719)))

(assert (=> d!16823 (= (getValueByKey!132 lt!32720 (_1!1083 lt!32472)) (Some!137 (_2!1083 lt!32472)))))

(assert (=> d!16823 (= lt!32719 (lemmaContainsTupThenGetReturnValue!51 lt!32720 (_1!1083 lt!32472) (_2!1083 lt!32472)))))

(assert (=> d!16823 (= lt!32720 (insertStrictlySorted!53 (toList!735 (+!98 lt!32476 lt!32482)) (_1!1083 lt!32472) (_2!1083 lt!32472)))))

(assert (=> d!16823 (= (+!98 (+!98 lt!32476 lt!32482) lt!32472) lt!32721)))

(declare-fun b!73201 () Bool)

(declare-fun res!38814 () Bool)

(assert (=> b!73201 (=> (not res!38814) (not e!47895))))

(assert (=> b!73201 (= res!38814 (= (getValueByKey!132 (toList!735 lt!32721) (_1!1083 lt!32472)) (Some!137 (_2!1083 lt!32472))))))

(declare-fun b!73202 () Bool)

(assert (=> b!73202 (= e!47895 (contains!730 (toList!735 lt!32721) lt!32472))))

(assert (= (and d!16823 res!38813) b!73201))

(assert (= (and b!73201 res!38814) b!73202))

(declare-fun m!71335 () Bool)

(assert (=> d!16823 m!71335))

(declare-fun m!71337 () Bool)

(assert (=> d!16823 m!71337))

(declare-fun m!71339 () Bool)

(assert (=> d!16823 m!71339))

(declare-fun m!71341 () Bool)

(assert (=> d!16823 m!71341))

(declare-fun m!71343 () Bool)

(assert (=> b!73201 m!71343))

(declare-fun m!71345 () Bool)

(assert (=> b!73202 m!71345))

(assert (=> b!72876 d!16823))

(declare-fun d!16825 () Bool)

(declare-fun e!47896 () Bool)

(assert (=> d!16825 e!47896))

(declare-fun res!38815 () Bool)

(assert (=> d!16825 (=> (not res!38815) (not e!47896))))

(declare-fun lt!32725 () ListLongMap!1439)

(assert (=> d!16825 (= res!38815 (contains!729 lt!32725 (_1!1083 lt!32472)))))

(declare-fun lt!32724 () List!1507)

(assert (=> d!16825 (= lt!32725 (ListLongMap!1440 lt!32724))))

(declare-fun lt!32722 () Unit!2086)

(declare-fun lt!32723 () Unit!2086)

(assert (=> d!16825 (= lt!32722 lt!32723)))

(assert (=> d!16825 (= (getValueByKey!132 lt!32724 (_1!1083 lt!32472)) (Some!137 (_2!1083 lt!32472)))))

(assert (=> d!16825 (= lt!32723 (lemmaContainsTupThenGetReturnValue!51 lt!32724 (_1!1083 lt!32472) (_2!1083 lt!32472)))))

(assert (=> d!16825 (= lt!32724 (insertStrictlySorted!53 (toList!735 lt!32476) (_1!1083 lt!32472) (_2!1083 lt!32472)))))

(assert (=> d!16825 (= (+!98 lt!32476 lt!32472) lt!32725)))

(declare-fun b!73203 () Bool)

(declare-fun res!38816 () Bool)

(assert (=> b!73203 (=> (not res!38816) (not e!47896))))

(assert (=> b!73203 (= res!38816 (= (getValueByKey!132 (toList!735 lt!32725) (_1!1083 lt!32472)) (Some!137 (_2!1083 lt!32472))))))

(declare-fun b!73204 () Bool)

(assert (=> b!73204 (= e!47896 (contains!730 (toList!735 lt!32725) lt!32472))))

(assert (= (and d!16825 res!38815) b!73203))

(assert (= (and b!73203 res!38816) b!73204))

(declare-fun m!71347 () Bool)

(assert (=> d!16825 m!71347))

(declare-fun m!71349 () Bool)

(assert (=> d!16825 m!71349))

(declare-fun m!71351 () Bool)

(assert (=> d!16825 m!71351))

(declare-fun m!71353 () Bool)

(assert (=> d!16825 m!71353))

(declare-fun m!71355 () Bool)

(assert (=> b!73203 m!71355))

(declare-fun m!71357 () Bool)

(assert (=> b!73204 m!71357))

(assert (=> b!72876 d!16825))

(declare-fun d!16827 () Bool)

(assert (=> d!16827 (= (array_inv!1101 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvsge (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!72889 d!16827))

(declare-fun d!16829 () Bool)

(assert (=> d!16829 (= (array_inv!1102 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvsge (size!2097 (_values!2196 (v!2533 (underlying!264 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!72889 d!16829))

(declare-fun d!16831 () Bool)

(assert (=> d!16831 (not (arrayContainsKey!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!32728 () Unit!2086)

(declare-fun choose!68 (array!3894 (_ BitVec 32) (_ BitVec 64) List!1508) Unit!2086)

(assert (=> d!16831 (= lt!32728 (choose!68 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505)))))

(assert (=> d!16831 (bvslt (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!16831 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505)) lt!32728)))

(declare-fun bs!3134 () Bool)

(assert (= bs!3134 d!16831))

(assert (=> bs!3134 m!71053))

(assert (=> bs!3134 m!71057))

(assert (=> bs!3134 m!71053))

(declare-fun m!71359 () Bool)

(assert (=> bs!3134 m!71359))

(assert (=> b!72888 d!16831))

(declare-fun d!16833 () Bool)

(assert (=> d!16833 (arrayNoDuplicates!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) from!355 Nil!1505)))

(declare-fun lt!32731 () Unit!2086)

(declare-fun choose!39 (array!3894 (_ BitVec 32) (_ BitVec 32)) Unit!2086)

(assert (=> d!16833 (= lt!32731 (choose!39 (_keys!3865 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!16833 (bvslt (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!16833 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000000 from!355) lt!32731)))

(declare-fun bs!3135 () Bool)

(assert (= bs!3135 d!16833))

(assert (=> bs!3135 m!71051))

(declare-fun m!71361 () Bool)

(assert (=> bs!3135 m!71361))

(assert (=> b!72888 d!16833))

(declare-fun d!16835 () Bool)

(declare-fun res!38821 () Bool)

(declare-fun e!47901 () Bool)

(assert (=> d!16835 (=> res!38821 e!47901)))

(assert (=> d!16835 (= res!38821 (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> d!16835 (= (arrayContainsKey!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!47901)))

(declare-fun b!73209 () Bool)

(declare-fun e!47902 () Bool)

(assert (=> b!73209 (= e!47901 e!47902)))

(declare-fun res!38822 () Bool)

(assert (=> b!73209 (=> (not res!38822) (not e!47902))))

(assert (=> b!73209 (= res!38822 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!73210 () Bool)

(assert (=> b!73210 (= e!47902 (arrayContainsKey!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!16835 (not res!38821)) b!73209))

(assert (= (and b!73209 res!38822) b!73210))

(assert (=> d!16835 m!71227))

(assert (=> b!73210 m!71053))

(declare-fun m!71363 () Bool)

(assert (=> b!73210 m!71363))

(assert (=> b!72888 d!16835))

(declare-fun d!16837 () Bool)

(declare-fun e!47905 () Bool)

(assert (=> d!16837 e!47905))

(declare-fun c!10876 () Bool)

(assert (=> d!16837 (= c!10876 (and (not (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!32734 () Unit!2086)

(declare-fun choose!419 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 64) (_ BitVec 32) Int) Unit!2086)

(assert (=> d!16837 (= lt!32734 (choose!419 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))))))

(assert (=> d!16837 (validMask!0 (mask!6180 (v!2533 (underlying!264 thiss!992))))))

(assert (=> d!16837 (= (lemmaListMapContainsThenArrayContainsFrom!51 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))) lt!32734)))

(declare-fun b!73215 () Bool)

(assert (=> b!73215 (= e!47905 (arrayContainsKey!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!73216 () Bool)

(assert (=> b!73216 (= e!47905 (ite (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!16837 c!10876) b!73215))

(assert (= (and d!16837 (not c!10876)) b!73216))

(assert (=> d!16837 m!71053))

(declare-fun m!71365 () Bool)

(assert (=> d!16837 m!71365))

(assert (=> d!16837 m!71093))

(assert (=> b!73215 m!71053))

(assert (=> b!73215 m!71057))

(assert (=> b!72888 d!16837))

(declare-fun b!73227 () Bool)

(declare-fun e!47914 () Bool)

(declare-fun e!47916 () Bool)

(assert (=> b!73227 (= e!47914 e!47916)))

(declare-fun res!38831 () Bool)

(assert (=> b!73227 (=> (not res!38831) (not e!47916))))

(declare-fun e!47915 () Bool)

(assert (=> b!73227 (= res!38831 (not e!47915))))

(declare-fun res!38829 () Bool)

(assert (=> b!73227 (=> (not res!38829) (not e!47915))))

(assert (=> b!73227 (= res!38829 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun b!73228 () Bool)

(declare-fun e!47917 () Bool)

(declare-fun call!6444 () Bool)

(assert (=> b!73228 (= e!47917 call!6444)))

(declare-fun b!73229 () Bool)

(assert (=> b!73229 (= e!47917 call!6444)))

(declare-fun b!73230 () Bool)

(declare-fun contains!731 (List!1508 (_ BitVec 64)) Bool)

(assert (=> b!73230 (= e!47915 (contains!731 Nil!1505 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun b!73231 () Bool)

(assert (=> b!73231 (= e!47916 e!47917)))

(declare-fun c!10879 () Bool)

(assert (=> b!73231 (= c!10879 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun bm!6441 () Bool)

(assert (=> bm!6441 (= call!6444 (arrayNoDuplicates!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!10879 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505) Nil!1505)))))

(declare-fun d!16839 () Bool)

(declare-fun res!38830 () Bool)

(assert (=> d!16839 (=> res!38830 e!47914)))

(assert (=> d!16839 (= res!38830 (bvsge from!355 (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(assert (=> d!16839 (= (arrayNoDuplicates!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) from!355 Nil!1505) e!47914)))

(assert (= (and d!16839 (not res!38830)) b!73227))

(assert (= (and b!73227 res!38829) b!73230))

(assert (= (and b!73227 res!38831) b!73231))

(assert (= (and b!73231 c!10879) b!73228))

(assert (= (and b!73231 (not c!10879)) b!73229))

(assert (= (or b!73228 b!73229) bm!6441))

(assert (=> b!73227 m!71053))

(assert (=> b!73227 m!71053))

(declare-fun m!71367 () Bool)

(assert (=> b!73227 m!71367))

(assert (=> b!73230 m!71053))

(assert (=> b!73230 m!71053))

(declare-fun m!71369 () Bool)

(assert (=> b!73230 m!71369))

(assert (=> b!73231 m!71053))

(assert (=> b!73231 m!71053))

(assert (=> b!73231 m!71367))

(assert (=> bm!6441 m!71053))

(declare-fun m!71371 () Bool)

(assert (=> bm!6441 m!71371))

(assert (=> b!72888 d!16839))

(declare-fun d!16841 () Bool)

(declare-fun res!38838 () Bool)

(declare-fun e!47920 () Bool)

(assert (=> d!16841 (=> (not res!38838) (not e!47920))))

(declare-fun simpleValid!50 (LongMapFixedSize!696) Bool)

(assert (=> d!16841 (= res!38838 (simpleValid!50 newMap!16))))

(assert (=> d!16841 (= (valid!292 newMap!16) e!47920)))

(declare-fun b!73238 () Bool)

(declare-fun res!38839 () Bool)

(assert (=> b!73238 (=> (not res!38839) (not e!47920))))

(declare-fun arrayCountValidKeys!0 (array!3894 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!73238 (= res!38839 (= (arrayCountValidKeys!0 (_keys!3865 newMap!16) #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))) (_size!397 newMap!16)))))

(declare-fun b!73239 () Bool)

(declare-fun res!38840 () Bool)

(assert (=> b!73239 (=> (not res!38840) (not e!47920))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3894 (_ BitVec 32)) Bool)

(assert (=> b!73239 (= res!38840 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun b!73240 () Bool)

(assert (=> b!73240 (= e!47920 (arrayNoDuplicates!0 (_keys!3865 newMap!16) #b00000000000000000000000000000000 Nil!1505))))

(assert (= (and d!16841 res!38838) b!73238))

(assert (= (and b!73238 res!38839) b!73239))

(assert (= (and b!73239 res!38840) b!73240))

(declare-fun m!71373 () Bool)

(assert (=> d!16841 m!71373))

(declare-fun m!71375 () Bool)

(assert (=> b!73238 m!71375))

(declare-fun m!71377 () Bool)

(assert (=> b!73239 m!71377))

(declare-fun m!71379 () Bool)

(assert (=> b!73240 m!71379))

(assert (=> b!72887 d!16841))

(declare-fun condMapEmpty!3181 () Bool)

(declare-fun mapDefault!3181 () ValueCell!894)

(assert (=> mapNonEmpty!3172 (= condMapEmpty!3181 (= mapRest!3172 ((as const (Array (_ BitVec 32) ValueCell!894)) mapDefault!3181)))))

(declare-fun e!47925 () Bool)

(declare-fun mapRes!3181 () Bool)

(assert (=> mapNonEmpty!3172 (= tp!8530 (and e!47925 mapRes!3181))))

(declare-fun mapNonEmpty!3181 () Bool)

(declare-fun tp!8545 () Bool)

(declare-fun e!47926 () Bool)

(assert (=> mapNonEmpty!3181 (= mapRes!3181 (and tp!8545 e!47926))))

(declare-fun mapKey!3181 () (_ BitVec 32))

(declare-fun mapRest!3181 () (Array (_ BitVec 32) ValueCell!894))

(declare-fun mapValue!3181 () ValueCell!894)

(assert (=> mapNonEmpty!3181 (= mapRest!3172 (store mapRest!3181 mapKey!3181 mapValue!3181))))

(declare-fun b!73248 () Bool)

(assert (=> b!73248 (= e!47925 tp_is_empty!2475)))

(declare-fun b!73247 () Bool)

(assert (=> b!73247 (= e!47926 tp_is_empty!2475)))

(declare-fun mapIsEmpty!3181 () Bool)

(assert (=> mapIsEmpty!3181 mapRes!3181))

(assert (= (and mapNonEmpty!3172 condMapEmpty!3181) mapIsEmpty!3181))

(assert (= (and mapNonEmpty!3172 (not condMapEmpty!3181)) mapNonEmpty!3181))

(assert (= (and mapNonEmpty!3181 ((_ is ValueCellFull!894) mapValue!3181)) b!73247))

(assert (= (and mapNonEmpty!3172 ((_ is ValueCellFull!894) mapDefault!3181)) b!73248))

(declare-fun m!71381 () Bool)

(assert (=> mapNonEmpty!3181 m!71381))

(declare-fun condMapEmpty!3182 () Bool)

(declare-fun mapDefault!3182 () ValueCell!894)

(assert (=> mapNonEmpty!3171 (= condMapEmpty!3182 (= mapRest!3171 ((as const (Array (_ BitVec 32) ValueCell!894)) mapDefault!3182)))))

(declare-fun e!47927 () Bool)

(declare-fun mapRes!3182 () Bool)

(assert (=> mapNonEmpty!3171 (= tp!8528 (and e!47927 mapRes!3182))))

(declare-fun mapNonEmpty!3182 () Bool)

(declare-fun tp!8546 () Bool)

(declare-fun e!47928 () Bool)

(assert (=> mapNonEmpty!3182 (= mapRes!3182 (and tp!8546 e!47928))))

(declare-fun mapValue!3182 () ValueCell!894)

(declare-fun mapKey!3182 () (_ BitVec 32))

(declare-fun mapRest!3182 () (Array (_ BitVec 32) ValueCell!894))

(assert (=> mapNonEmpty!3182 (= mapRest!3171 (store mapRest!3182 mapKey!3182 mapValue!3182))))

(declare-fun b!73250 () Bool)

(assert (=> b!73250 (= e!47927 tp_is_empty!2475)))

(declare-fun b!73249 () Bool)

(assert (=> b!73249 (= e!47928 tp_is_empty!2475)))

(declare-fun mapIsEmpty!3182 () Bool)

(assert (=> mapIsEmpty!3182 mapRes!3182))

(assert (= (and mapNonEmpty!3171 condMapEmpty!3182) mapIsEmpty!3182))

(assert (= (and mapNonEmpty!3171 (not condMapEmpty!3182)) mapNonEmpty!3182))

(assert (= (and mapNonEmpty!3182 ((_ is ValueCellFull!894) mapValue!3182)) b!73249))

(assert (= (and mapNonEmpty!3171 ((_ is ValueCellFull!894) mapDefault!3182)) b!73250))

(declare-fun m!71383 () Bool)

(assert (=> mapNonEmpty!3182 m!71383))

(declare-fun b_lambda!3297 () Bool)

(assert (= b_lambda!3295 (or (and b!72889 b_free!2117) (and b!72885 b_free!2119 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))))) b_lambda!3297)))

(declare-fun b_lambda!3299 () Bool)

(assert (= b_lambda!3293 (or (and b!72889 b_free!2117) (and b!72885 b_free!2119 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))))) b_lambda!3299)))

(declare-fun b_lambda!3301 () Bool)

(assert (= b_lambda!3291 (or (and b!72889 b_free!2117) (and b!72885 b_free!2119 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))))) b_lambda!3301)))

(check-sat (not b!73199) (not b!73155) (not b!73204) (not b!73231) (not bm!6408) (not b!73146) (not d!16797) (not b_lambda!3289) (not b!73227) (not b!73181) (not b!73191) (not b!73148) (not b!73202) (not b!73197) (not b_lambda!3301) (not d!16799) (not bm!6411) (not d!16823) (not bm!6414) (not bm!6405) (not b!73190) (not d!16831) (not b!73192) (not bm!6397) (not b_next!2119) (not b!73215) (not d!16825) (not b!73136) (not bm!6398) (not b!73230) (not d!16819) (not b!73051) (not b_next!2117) (not b!73135) (not bm!6396) tp_is_empty!2475 (not b!73187) (not b!73083) (not bm!6429) (not b!73144) (not b!73070) (not bm!6393) (not bm!6435) (not b!73200) (not b!72965) (not b_lambda!3297) (not b!73198) (not b!73149) (not b_lambda!3299) (not bm!6407) (not d!16817) (not b!73203) (not bm!6438) (not b!73061) (not bm!6441) (not bm!6434) (not b!73210) (not mapNonEmpty!3182) (not b!73084) (not b!73188) (not b!73086) (not bm!6399) (not d!16805) (not b!73182) (not b!72967) (not d!16815) (not b!73201) (not b!73238) (not b!73150) (not b!73240) (not b!73156) (not b!73239) (not d!16801) (not bm!6431) b_and!4497 (not bm!6401) b_and!4499 (not bm!6412) (not d!16841) (not d!16803) (not b!73184) (not d!16833) (not mapNonEmpty!3181) (not bm!6410) (not d!16837) (not b!73133) (not d!16813))
(check-sat b_and!4497 b_and!4499 (not b_next!2117) (not b_next!2119))
(get-model)

(declare-fun d!16843 () Bool)

(declare-fun e!47929 () Bool)

(assert (=> d!16843 e!47929))

(declare-fun res!38841 () Bool)

(assert (=> d!16843 (=> (not res!38841) (not e!47929))))

(declare-fun lt!32738 () ListLongMap!1439)

(assert (=> d!16843 (= res!38841 (contains!729 lt!32738 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun lt!32737 () List!1507)

(assert (=> d!16843 (= lt!32738 (ListLongMap!1440 lt!32737))))

(declare-fun lt!32735 () Unit!2086)

(declare-fun lt!32736 () Unit!2086)

(assert (=> d!16843 (= lt!32735 lt!32736)))

(assert (=> d!16843 (= (getValueByKey!132 lt!32737 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (Some!137 (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!16843 (= lt!32736 (lemmaContainsTupThenGetReturnValue!51 lt!32737 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!16843 (= lt!32737 (insertStrictlySorted!53 (toList!735 call!6414) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!16843 (= (+!98 call!6414 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) lt!32738)))

(declare-fun b!73251 () Bool)

(declare-fun res!38842 () Bool)

(assert (=> b!73251 (=> (not res!38842) (not e!47929))))

(assert (=> b!73251 (= res!38842 (= (getValueByKey!132 (toList!735 lt!32738) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (Some!137 (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(declare-fun b!73252 () Bool)

(assert (=> b!73252 (= e!47929 (contains!730 (toList!735 lt!32738) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))

(assert (= (and d!16843 res!38841) b!73251))

(assert (= (and b!73251 res!38842) b!73252))

(declare-fun m!71385 () Bool)

(assert (=> d!16843 m!71385))

(declare-fun m!71387 () Bool)

(assert (=> d!16843 m!71387))

(declare-fun m!71389 () Bool)

(assert (=> d!16843 m!71389))

(declare-fun m!71391 () Bool)

(assert (=> d!16843 m!71391))

(declare-fun m!71393 () Bool)

(assert (=> b!73251 m!71393))

(declare-fun m!71395 () Bool)

(assert (=> b!73252 m!71395))

(assert (=> b!73070 d!16843))

(assert (=> b!73215 d!16835))

(assert (=> bm!6431 d!16813))

(declare-fun d!16845 () Bool)

(declare-fun res!38843 () Bool)

(declare-fun e!47930 () Bool)

(assert (=> d!16845 (=> res!38843 e!47930)))

(assert (=> d!16845 (= res!38843 (= (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> d!16845 (= (arrayContainsKey!0 (_keys!3865 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b00000000000000000000000000000000) e!47930)))

(declare-fun b!73253 () Bool)

(declare-fun e!47931 () Bool)

(assert (=> b!73253 (= e!47930 e!47931)))

(declare-fun res!38844 () Bool)

(assert (=> b!73253 (=> (not res!38844) (not e!47931))))

(assert (=> b!73253 (= res!38844 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!73254 () Bool)

(assert (=> b!73254 (= e!47931 (arrayContainsKey!0 (_keys!3865 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!16845 (not res!38843)) b!73253))

(assert (= (and b!73253 res!38844) b!73254))

(declare-fun m!71397 () Bool)

(assert (=> d!16845 m!71397))

(assert (=> b!73254 m!71053))

(declare-fun m!71399 () Bool)

(assert (=> b!73254 m!71399))

(assert (=> bm!6414 d!16845))

(declare-fun b!73266 () Bool)

(declare-fun e!47937 () Option!138)

(assert (=> b!73266 (= e!47937 None!136)))

(declare-fun b!73264 () Bool)

(declare-fun e!47936 () Option!138)

(assert (=> b!73264 (= e!47936 e!47937)))

(declare-fun c!10885 () Bool)

(assert (=> b!73264 (= c!10885 (and ((_ is Cons!1503) (toList!735 lt!32717)) (not (= (_1!1083 (h!2090 (toList!735 lt!32717))) (_1!1083 lt!32482)))))))

(declare-fun b!73263 () Bool)

(assert (=> b!73263 (= e!47936 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32717)))))))

(declare-fun d!16847 () Bool)

(declare-fun c!10884 () Bool)

(assert (=> d!16847 (= c!10884 (and ((_ is Cons!1503) (toList!735 lt!32717)) (= (_1!1083 (h!2090 (toList!735 lt!32717))) (_1!1083 lt!32482))))))

(assert (=> d!16847 (= (getValueByKey!132 (toList!735 lt!32717) (_1!1083 lt!32482)) e!47936)))

(declare-fun b!73265 () Bool)

(assert (=> b!73265 (= e!47937 (getValueByKey!132 (t!5068 (toList!735 lt!32717)) (_1!1083 lt!32482)))))

(assert (= (and d!16847 c!10884) b!73263))

(assert (= (and d!16847 (not c!10884)) b!73264))

(assert (= (and b!73264 c!10885) b!73265))

(assert (= (and b!73264 (not c!10885)) b!73266))

(declare-fun m!71401 () Bool)

(assert (=> b!73265 m!71401))

(assert (=> b!73199 d!16847))

(declare-fun bm!6444 () Bool)

(declare-fun call!6447 () Bool)

(assert (=> bm!6444 (= call!6447 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun b!73275 () Bool)

(declare-fun e!47946 () Bool)

(declare-fun e!47944 () Bool)

(assert (=> b!73275 (= e!47946 e!47944)))

(declare-fun lt!32745 () (_ BitVec 64))

(assert (=> b!73275 (= lt!32745 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32747 () Unit!2086)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3894 (_ BitVec 64) (_ BitVec 32)) Unit!2086)

(assert (=> b!73275 (= lt!32747 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3865 newMap!16) lt!32745 #b00000000000000000000000000000000))))

(assert (=> b!73275 (arrayContainsKey!0 (_keys!3865 newMap!16) lt!32745 #b00000000000000000000000000000000)))

(declare-fun lt!32746 () Unit!2086)

(assert (=> b!73275 (= lt!32746 lt!32747)))

(declare-fun res!38850 () Bool)

(assert (=> b!73275 (= res!38850 (= (seekEntryOrOpen!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) (_keys!3865 newMap!16) (mask!6180 newMap!16)) (Found!246 #b00000000000000000000000000000000)))))

(assert (=> b!73275 (=> (not res!38850) (not e!47944))))

(declare-fun b!73277 () Bool)

(assert (=> b!73277 (= e!47946 call!6447)))

(declare-fun b!73278 () Bool)

(assert (=> b!73278 (= e!47944 call!6447)))

(declare-fun b!73276 () Bool)

(declare-fun e!47945 () Bool)

(assert (=> b!73276 (= e!47945 e!47946)))

(declare-fun c!10888 () Bool)

(assert (=> b!73276 (= c!10888 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!16849 () Bool)

(declare-fun res!38849 () Bool)

(assert (=> d!16849 (=> res!38849 e!47945)))

(assert (=> d!16849 (= res!38849 (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!16849 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3865 newMap!16) (mask!6180 newMap!16)) e!47945)))

(assert (= (and d!16849 (not res!38849)) b!73276))

(assert (= (and b!73276 c!10888) b!73275))

(assert (= (and b!73276 (not c!10888)) b!73277))

(assert (= (and b!73275 res!38850) b!73278))

(assert (= (or b!73278 b!73277) bm!6444))

(declare-fun m!71403 () Bool)

(assert (=> bm!6444 m!71403))

(assert (=> b!73275 m!71397))

(declare-fun m!71405 () Bool)

(assert (=> b!73275 m!71405))

(declare-fun m!71407 () Bool)

(assert (=> b!73275 m!71407))

(assert (=> b!73275 m!71397))

(declare-fun m!71409 () Bool)

(assert (=> b!73275 m!71409))

(assert (=> b!73276 m!71397))

(assert (=> b!73276 m!71397))

(declare-fun m!71411 () Bool)

(assert (=> b!73276 m!71411))

(assert (=> b!73239 d!16849))

(declare-fun d!16851 () Bool)

(declare-fun res!38851 () Bool)

(declare-fun e!47947 () Bool)

(assert (=> d!16851 (=> (not res!38851) (not e!47947))))

(assert (=> d!16851 (= res!38851 (simpleValid!50 (_2!1084 lt!32604)))))

(assert (=> d!16851 (= (valid!292 (_2!1084 lt!32604)) e!47947)))

(declare-fun b!73279 () Bool)

(declare-fun res!38852 () Bool)

(assert (=> b!73279 (=> (not res!38852) (not e!47947))))

(assert (=> b!73279 (= res!38852 (= (arrayCountValidKeys!0 (_keys!3865 (_2!1084 lt!32604)) #b00000000000000000000000000000000 (size!2096 (_keys!3865 (_2!1084 lt!32604)))) (_size!397 (_2!1084 lt!32604))))))

(declare-fun b!73280 () Bool)

(declare-fun res!38853 () Bool)

(assert (=> b!73280 (=> (not res!38853) (not e!47947))))

(assert (=> b!73280 (= res!38853 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3865 (_2!1084 lt!32604)) (mask!6180 (_2!1084 lt!32604))))))

(declare-fun b!73281 () Bool)

(assert (=> b!73281 (= e!47947 (arrayNoDuplicates!0 (_keys!3865 (_2!1084 lt!32604)) #b00000000000000000000000000000000 Nil!1505))))

(assert (= (and d!16851 res!38851) b!73279))

(assert (= (and b!73279 res!38852) b!73280))

(assert (= (and b!73280 res!38853) b!73281))

(declare-fun m!71413 () Bool)

(assert (=> d!16851 m!71413))

(declare-fun m!71415 () Bool)

(assert (=> b!73279 m!71415))

(declare-fun m!71417 () Bool)

(assert (=> b!73280 m!71417))

(declare-fun m!71419 () Bool)

(assert (=> b!73281 m!71419))

(assert (=> d!16799 d!16851))

(assert (=> d!16799 d!16841))

(declare-fun b!73291 () Bool)

(declare-fun res!38865 () Bool)

(declare-fun e!47950 () Bool)

(assert (=> b!73291 (=> (not res!38865) (not e!47950))))

(declare-fun size!2100 (LongMapFixedSize!696) (_ BitVec 32))

(assert (=> b!73291 (= res!38865 (bvsge (size!2100 newMap!16) (_size!397 newMap!16)))))

(declare-fun b!73290 () Bool)

(declare-fun res!38863 () Bool)

(assert (=> b!73290 (=> (not res!38863) (not e!47950))))

(assert (=> b!73290 (= res!38863 (and (= (size!2097 (_values!2196 newMap!16)) (bvadd (mask!6180 newMap!16) #b00000000000000000000000000000001)) (= (size!2096 (_keys!3865 newMap!16)) (size!2097 (_values!2196 newMap!16))) (bvsge (_size!397 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!397 newMap!16) (bvadd (mask!6180 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!73292 () Bool)

(declare-fun res!38862 () Bool)

(assert (=> b!73292 (=> (not res!38862) (not e!47950))))

(assert (=> b!73292 (= res!38862 (= (size!2100 newMap!16) (bvadd (_size!397 newMap!16) (bvsdiv (bvadd (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!73293 () Bool)

(assert (=> b!73293 (= e!47950 (and (bvsge (extraKeys!2072 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2072 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!397 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun d!16853 () Bool)

(declare-fun res!38864 () Bool)

(assert (=> d!16853 (=> (not res!38864) (not e!47950))))

(assert (=> d!16853 (= res!38864 (validMask!0 (mask!6180 newMap!16)))))

(assert (=> d!16853 (= (simpleValid!50 newMap!16) e!47950)))

(assert (= (and d!16853 res!38864) b!73290))

(assert (= (and b!73290 res!38863) b!73291))

(assert (= (and b!73291 res!38865) b!73292))

(assert (= (and b!73292 res!38862) b!73293))

(declare-fun m!71421 () Bool)

(assert (=> b!73291 m!71421))

(assert (=> b!73292 m!71421))

(declare-fun m!71423 () Bool)

(assert (=> d!16853 m!71423))

(assert (=> d!16841 d!16853))

(assert (=> d!16833 d!16839))

(declare-fun d!16855 () Bool)

(assert (=> d!16855 (arrayNoDuplicates!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) from!355 Nil!1505)))

(assert (=> d!16855 true))

(declare-fun _$71!96 () Unit!2086)

(assert (=> d!16855 (= (choose!39 (_keys!3865 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!96)))

(declare-fun bs!3136 () Bool)

(assert (= bs!3136 d!16855))

(assert (=> bs!3136 m!71051))

(assert (=> d!16833 d!16855))

(declare-fun d!16857 () Bool)

(declare-fun e!47951 () Bool)

(assert (=> d!16857 e!47951))

(declare-fun res!38866 () Bool)

(assert (=> d!16857 (=> (not res!38866) (not e!47951))))

(declare-fun lt!32751 () ListLongMap!1439)

(assert (=> d!16857 (= res!38866 (contains!729 lt!32751 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun lt!32750 () List!1507)

(assert (=> d!16857 (= lt!32751 (ListLongMap!1440 lt!32750))))

(declare-fun lt!32748 () Unit!2086)

(declare-fun lt!32749 () Unit!2086)

(assert (=> d!16857 (= lt!32748 lt!32749)))

(assert (=> d!16857 (= (getValueByKey!132 lt!32750 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16857 (= lt!32749 (lemmaContainsTupThenGetReturnValue!51 lt!32750 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16857 (= lt!32750 (insertStrictlySorted!53 (toList!735 call!6436) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16857 (= (+!98 call!6436 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32751)))

(declare-fun b!73294 () Bool)

(declare-fun res!38867 () Bool)

(assert (=> b!73294 (=> (not res!38867) (not e!47951))))

(assert (=> b!73294 (= res!38867 (= (getValueByKey!132 (toList!735 lt!32751) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun b!73295 () Bool)

(assert (=> b!73295 (= e!47951 (contains!730 (toList!735 lt!32751) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(assert (= (and d!16857 res!38866) b!73294))

(assert (= (and b!73294 res!38867) b!73295))

(declare-fun m!71425 () Bool)

(assert (=> d!16857 m!71425))

(declare-fun m!71427 () Bool)

(assert (=> d!16857 m!71427))

(declare-fun m!71429 () Bool)

(assert (=> d!16857 m!71429))

(declare-fun m!71431 () Bool)

(assert (=> d!16857 m!71431))

(declare-fun m!71433 () Bool)

(assert (=> b!73294 m!71433))

(declare-fun m!71435 () Bool)

(assert (=> b!73295 m!71435))

(assert (=> b!73150 d!16857))

(declare-fun b!73299 () Bool)

(declare-fun e!47953 () Option!138)

(assert (=> b!73299 (= e!47953 None!136)))

(declare-fun b!73297 () Bool)

(declare-fun e!47952 () Option!138)

(assert (=> b!73297 (= e!47952 e!47953)))

(declare-fun c!10890 () Bool)

(assert (=> b!73297 (= c!10890 (and ((_ is Cons!1503) (toList!735 lt!32710)) (not (= (_1!1083 (h!2090 (toList!735 lt!32710))) (_1!1083 lt!32482)))))))

(declare-fun b!73296 () Bool)

(assert (=> b!73296 (= e!47952 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32710)))))))

(declare-fun d!16859 () Bool)

(declare-fun c!10889 () Bool)

(assert (=> d!16859 (= c!10889 (and ((_ is Cons!1503) (toList!735 lt!32710)) (= (_1!1083 (h!2090 (toList!735 lt!32710))) (_1!1083 lt!32482))))))

(assert (=> d!16859 (= (getValueByKey!132 (toList!735 lt!32710) (_1!1083 lt!32482)) e!47952)))

(declare-fun b!73298 () Bool)

(assert (=> b!73298 (= e!47953 (getValueByKey!132 (t!5068 (toList!735 lt!32710)) (_1!1083 lt!32482)))))

(assert (= (and d!16859 c!10889) b!73296))

(assert (= (and d!16859 (not c!10889)) b!73297))

(assert (= (and b!73297 c!10890) b!73298))

(assert (= (and b!73297 (not c!10890)) b!73299))

(declare-fun m!71437 () Bool)

(assert (=> b!73298 m!71437))

(assert (=> b!73197 d!16859))

(declare-fun d!16861 () Bool)

(declare-fun get!1158 (Option!138) V!2947)

(assert (=> d!16861 (= (apply!75 lt!32666 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1158 (getValueByKey!132 (toList!735 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3137 () Bool)

(assert (= bs!3137 d!16861))

(declare-fun m!71439 () Bool)

(assert (=> bs!3137 m!71439))

(assert (=> bs!3137 m!71439))

(declare-fun m!71441 () Bool)

(assert (=> bs!3137 m!71441))

(assert (=> b!73135 d!16861))

(declare-fun d!16863 () Bool)

(declare-fun e!47955 () Bool)

(assert (=> d!16863 e!47955))

(declare-fun res!38868 () Bool)

(assert (=> d!16863 (=> res!38868 e!47955)))

(declare-fun lt!32754 () Bool)

(assert (=> d!16863 (= res!38868 (not lt!32754))))

(declare-fun lt!32752 () Bool)

(assert (=> d!16863 (= lt!32754 lt!32752)))

(declare-fun lt!32753 () Unit!2086)

(declare-fun e!47954 () Unit!2086)

(assert (=> d!16863 (= lt!32753 e!47954)))

(declare-fun c!10891 () Bool)

(assert (=> d!16863 (= c!10891 lt!32752)))

(assert (=> d!16863 (= lt!32752 (containsKey!136 (toList!735 lt!32694) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16863 (= (contains!729 lt!32694 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32754)))

(declare-fun b!73300 () Bool)

(declare-fun lt!32755 () Unit!2086)

(assert (=> b!73300 (= e!47954 lt!32755)))

(assert (=> b!73300 (= lt!32755 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32694) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73300 (isDefined!86 (getValueByKey!132 (toList!735 lt!32694) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73301 () Bool)

(declare-fun Unit!2098 () Unit!2086)

(assert (=> b!73301 (= e!47954 Unit!2098)))

(declare-fun b!73302 () Bool)

(assert (=> b!73302 (= e!47955 (isDefined!86 (getValueByKey!132 (toList!735 lt!32694) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16863 c!10891) b!73300))

(assert (= (and d!16863 (not c!10891)) b!73301))

(assert (= (and d!16863 (not res!38868)) b!73302))

(declare-fun m!71443 () Bool)

(assert (=> d!16863 m!71443))

(declare-fun m!71445 () Bool)

(assert (=> b!73300 m!71445))

(declare-fun m!71447 () Bool)

(assert (=> b!73300 m!71447))

(assert (=> b!73300 m!71447))

(declare-fun m!71449 () Bool)

(assert (=> b!73300 m!71449))

(assert (=> b!73302 m!71447))

(assert (=> b!73302 m!71447))

(assert (=> b!73302 m!71449))

(assert (=> b!73181 d!16863))

(declare-fun d!16865 () Bool)

(assert (=> d!16865 (= (+!98 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32600 (zeroValue!2115 newMap!16) lt!32481 #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32758 () Unit!2086)

(declare-fun choose!420 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 V!2947 Int) Unit!2086)

(assert (=> d!16865 (= lt!32758 (choose!420 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) lt!32600 (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) lt!32481 (defaultEntry!2213 newMap!16)))))

(assert (=> d!16865 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!16865 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) lt!32600 (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) lt!32481 (defaultEntry!2213 newMap!16)) lt!32758)))

(declare-fun bs!3138 () Bool)

(assert (= bs!3138 d!16865))

(declare-fun m!71451 () Bool)

(assert (=> bs!3138 m!71451))

(declare-fun m!71453 () Bool)

(assert (=> bs!3138 m!71453))

(assert (=> bs!3138 m!71423))

(assert (=> bs!3138 m!71191))

(declare-fun m!71455 () Bool)

(assert (=> bs!3138 m!71455))

(assert (=> bs!3138 m!71191))

(assert (=> b!73061 d!16865))

(declare-fun b!73303 () Bool)

(declare-fun e!47956 () Bool)

(declare-fun e!47958 () Bool)

(assert (=> b!73303 (= e!47956 e!47958)))

(declare-fun res!38871 () Bool)

(assert (=> b!73303 (=> (not res!38871) (not e!47958))))

(declare-fun e!47957 () Bool)

(assert (=> b!73303 (= res!38871 (not e!47957))))

(declare-fun res!38869 () Bool)

(assert (=> b!73303 (=> (not res!38869) (not e!47957))))

(assert (=> b!73303 (= res!38869 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!73304 () Bool)

(declare-fun e!47959 () Bool)

(declare-fun call!6448 () Bool)

(assert (=> b!73304 (= e!47959 call!6448)))

(declare-fun b!73305 () Bool)

(assert (=> b!73305 (= e!47959 call!6448)))

(declare-fun b!73306 () Bool)

(assert (=> b!73306 (= e!47957 (contains!731 (ite c!10879 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505) Nil!1505) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!73307 () Bool)

(assert (=> b!73307 (= e!47958 e!47959)))

(declare-fun c!10892 () Bool)

(assert (=> b!73307 (= c!10892 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!6445 () Bool)

(assert (=> bm!6445 (= call!6448 (arrayNoDuplicates!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10892 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10879 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505) Nil!1505)) (ite c!10879 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505) Nil!1505))))))

(declare-fun d!16867 () Bool)

(declare-fun res!38870 () Bool)

(assert (=> d!16867 (=> res!38870 e!47956)))

(assert (=> d!16867 (= res!38870 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(assert (=> d!16867 (= (arrayNoDuplicates!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!10879 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505) Nil!1505)) e!47956)))

(assert (= (and d!16867 (not res!38870)) b!73303))

(assert (= (and b!73303 res!38869) b!73306))

(assert (= (and b!73303 res!38871) b!73307))

(assert (= (and b!73307 c!10892) b!73304))

(assert (= (and b!73307 (not c!10892)) b!73305))

(assert (= (or b!73304 b!73305) bm!6445))

(declare-fun m!71457 () Bool)

(assert (=> b!73303 m!71457))

(assert (=> b!73303 m!71457))

(declare-fun m!71459 () Bool)

(assert (=> b!73303 m!71459))

(assert (=> b!73306 m!71457))

(assert (=> b!73306 m!71457))

(declare-fun m!71461 () Bool)

(assert (=> b!73306 m!71461))

(assert (=> b!73307 m!71457))

(assert (=> b!73307 m!71457))

(assert (=> b!73307 m!71459))

(assert (=> bm!6445 m!71457))

(declare-fun m!71463 () Bool)

(assert (=> bm!6445 m!71463))

(assert (=> bm!6441 d!16867))

(declare-fun d!16869 () Bool)

(assert (=> d!16869 (= (map!1158 (_2!1084 lt!32604)) (getCurrentListMap!426 (_keys!3865 (_2!1084 lt!32604)) (_values!2196 (_2!1084 lt!32604)) (mask!6180 (_2!1084 lt!32604)) (extraKeys!2072 (_2!1084 lt!32604)) (zeroValue!2115 (_2!1084 lt!32604)) (minValue!2115 (_2!1084 lt!32604)) #b00000000000000000000000000000000 (defaultEntry!2213 (_2!1084 lt!32604))))))

(declare-fun bs!3139 () Bool)

(assert (= bs!3139 d!16869))

(declare-fun m!71465 () Bool)

(assert (=> bs!3139 m!71465))

(assert (=> bm!6411 d!16869))

(declare-fun d!16871 () Bool)

(declare-fun e!47961 () Bool)

(assert (=> d!16871 e!47961))

(declare-fun res!38872 () Bool)

(assert (=> d!16871 (=> res!38872 e!47961)))

(declare-fun lt!32761 () Bool)

(assert (=> d!16871 (= res!38872 (not lt!32761))))

(declare-fun lt!32759 () Bool)

(assert (=> d!16871 (= lt!32761 lt!32759)))

(declare-fun lt!32760 () Unit!2086)

(declare-fun e!47960 () Unit!2086)

(assert (=> d!16871 (= lt!32760 e!47960)))

(declare-fun c!10893 () Bool)

(assert (=> d!16871 (= c!10893 lt!32759)))

(assert (=> d!16871 (= lt!32759 (containsKey!136 (toList!735 lt!32694) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16871 (= (contains!729 lt!32694 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32761)))

(declare-fun b!73308 () Bool)

(declare-fun lt!32762 () Unit!2086)

(assert (=> b!73308 (= e!47960 lt!32762)))

(assert (=> b!73308 (= lt!32762 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32694) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73308 (isDefined!86 (getValueByKey!132 (toList!735 lt!32694) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73309 () Bool)

(declare-fun Unit!2099 () Unit!2086)

(assert (=> b!73309 (= e!47960 Unit!2099)))

(declare-fun b!73310 () Bool)

(assert (=> b!73310 (= e!47961 (isDefined!86 (getValueByKey!132 (toList!735 lt!32694) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16871 c!10893) b!73308))

(assert (= (and d!16871 (not c!10893)) b!73309))

(assert (= (and d!16871 (not res!38872)) b!73310))

(declare-fun m!71467 () Bool)

(assert (=> d!16871 m!71467))

(declare-fun m!71469 () Bool)

(assert (=> b!73308 m!71469))

(declare-fun m!71471 () Bool)

(assert (=> b!73308 m!71471))

(assert (=> b!73308 m!71471))

(declare-fun m!71473 () Bool)

(assert (=> b!73308 m!71473))

(assert (=> b!73310 m!71471))

(assert (=> b!73310 m!71471))

(assert (=> b!73310 m!71473))

(assert (=> d!16813 d!16871))

(assert (=> d!16813 d!16821))

(declare-fun b!73311 () Bool)

(declare-fun e!47963 () Bool)

(declare-fun e!47966 () Bool)

(assert (=> b!73311 (= e!47963 e!47966)))

(declare-fun res!38878 () Bool)

(declare-fun call!6454 () Bool)

(assert (=> b!73311 (= res!38878 call!6454)))

(assert (=> b!73311 (=> (not res!38878) (not e!47966))))

(declare-fun b!73312 () Bool)

(declare-fun e!47970 () ListLongMap!1439)

(declare-fun call!6449 () ListLongMap!1439)

(assert (=> b!73312 (= e!47970 call!6449)))

(declare-fun b!73313 () Bool)

(declare-fun call!6450 () ListLongMap!1439)

(assert (=> b!73313 (= e!47970 call!6450)))

(declare-fun bm!6446 () Bool)

(declare-fun lt!32773 () ListLongMap!1439)

(assert (=> bm!6446 (= call!6454 (contains!729 lt!32773 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73314 () Bool)

(declare-fun e!47962 () Bool)

(declare-fun e!47968 () Bool)

(assert (=> b!73314 (= e!47962 e!47968)))

(declare-fun res!38876 () Bool)

(assert (=> b!73314 (=> (not res!38876) (not e!47968))))

(assert (=> b!73314 (= res!38876 (contains!729 lt!32773 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73314 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!73315 () Bool)

(declare-fun e!47964 () Unit!2086)

(declare-fun Unit!2100 () Unit!2086)

(assert (=> b!73315 (= e!47964 Unit!2100)))

(declare-fun bm!6447 () Bool)

(declare-fun call!6451 () ListLongMap!1439)

(assert (=> bm!6447 (= call!6449 call!6451)))

(declare-fun bm!6448 () Bool)

(declare-fun call!6455 () ListLongMap!1439)

(assert (=> bm!6448 (= call!6455 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!73317 () Bool)

(declare-fun lt!32763 () Unit!2086)

(assert (=> b!73317 (= e!47964 lt!32763)))

(declare-fun lt!32784 () ListLongMap!1439)

(assert (=> b!73317 (= lt!32784 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32778 () (_ BitVec 64))

(assert (=> b!73317 (= lt!32778 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32769 () (_ BitVec 64))

(assert (=> b!73317 (= lt!32769 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32766 () Unit!2086)

(assert (=> b!73317 (= lt!32766 (addStillContains!51 lt!32784 lt!32778 (zeroValue!2115 newMap!16) lt!32769))))

(assert (=> b!73317 (contains!729 (+!98 lt!32784 (tuple2!2147 lt!32778 (zeroValue!2115 newMap!16))) lt!32769)))

(declare-fun lt!32780 () Unit!2086)

(assert (=> b!73317 (= lt!32780 lt!32766)))

(declare-fun lt!32771 () ListLongMap!1439)

(assert (=> b!73317 (= lt!32771 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32781 () (_ BitVec 64))

(assert (=> b!73317 (= lt!32781 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32779 () (_ BitVec 64))

(assert (=> b!73317 (= lt!32779 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32783 () Unit!2086)

(assert (=> b!73317 (= lt!32783 (addApplyDifferent!51 lt!32771 lt!32781 (minValue!2115 newMap!16) lt!32779))))

(assert (=> b!73317 (= (apply!75 (+!98 lt!32771 (tuple2!2147 lt!32781 (minValue!2115 newMap!16))) lt!32779) (apply!75 lt!32771 lt!32779))))

(declare-fun lt!32768 () Unit!2086)

(assert (=> b!73317 (= lt!32768 lt!32783)))

(declare-fun lt!32782 () ListLongMap!1439)

(assert (=> b!73317 (= lt!32782 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32772 () (_ BitVec 64))

(assert (=> b!73317 (= lt!32772 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32764 () (_ BitVec 64))

(assert (=> b!73317 (= lt!32764 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32770 () Unit!2086)

(assert (=> b!73317 (= lt!32770 (addApplyDifferent!51 lt!32782 lt!32772 (zeroValue!2115 newMap!16) lt!32764))))

(assert (=> b!73317 (= (apply!75 (+!98 lt!32782 (tuple2!2147 lt!32772 (zeroValue!2115 newMap!16))) lt!32764) (apply!75 lt!32782 lt!32764))))

(declare-fun lt!32774 () Unit!2086)

(assert (=> b!73317 (= lt!32774 lt!32770)))

(declare-fun lt!32777 () ListLongMap!1439)

(assert (=> b!73317 (= lt!32777 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32767 () (_ BitVec 64))

(assert (=> b!73317 (= lt!32767 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32765 () (_ BitVec 64))

(assert (=> b!73317 (= lt!32765 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73317 (= lt!32763 (addApplyDifferent!51 lt!32777 lt!32767 (minValue!2115 newMap!16) lt!32765))))

(assert (=> b!73317 (= (apply!75 (+!98 lt!32777 (tuple2!2147 lt!32767 (minValue!2115 newMap!16))) lt!32765) (apply!75 lt!32777 lt!32765))))

(declare-fun b!73318 () Bool)

(assert (=> b!73318 (= e!47963 (not call!6454))))

(declare-fun b!73319 () Bool)

(declare-fun res!38877 () Bool)

(declare-fun e!47973 () Bool)

(assert (=> b!73319 (=> (not res!38877) (not e!47973))))

(assert (=> b!73319 (= res!38877 e!47963)))

(declare-fun c!10894 () Bool)

(assert (=> b!73319 (= c!10894 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!73320 () Bool)

(declare-fun e!47967 () ListLongMap!1439)

(declare-fun e!47974 () ListLongMap!1439)

(assert (=> b!73320 (= e!47967 e!47974)))

(declare-fun c!10896 () Bool)

(assert (=> b!73320 (= c!10896 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73321 () Bool)

(declare-fun e!47969 () Bool)

(declare-fun e!47965 () Bool)

(assert (=> b!73321 (= e!47969 e!47965)))

(declare-fun res!38881 () Bool)

(declare-fun call!6452 () Bool)

(assert (=> b!73321 (= res!38881 call!6452)))

(assert (=> b!73321 (=> (not res!38881) (not e!47965))))

(declare-fun bm!6449 () Bool)

(assert (=> bm!6449 (= call!6451 call!6455)))

(declare-fun bm!6450 () Bool)

(declare-fun call!6453 () ListLongMap!1439)

(assert (=> bm!6450 (= call!6450 call!6453)))

(declare-fun b!73322 () Bool)

(assert (=> b!73322 (= e!47969 (not call!6452))))

(declare-fun b!73323 () Bool)

(declare-fun res!38874 () Bool)

(assert (=> b!73323 (=> (not res!38874) (not e!47973))))

(assert (=> b!73323 (= res!38874 e!47962)))

(declare-fun res!38873 () Bool)

(assert (=> b!73323 (=> res!38873 e!47962)))

(declare-fun e!47971 () Bool)

(assert (=> b!73323 (= res!38873 (not e!47971))))

(declare-fun res!38875 () Bool)

(assert (=> b!73323 (=> (not res!38875) (not e!47971))))

(assert (=> b!73323 (= res!38875 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!73324 () Bool)

(assert (=> b!73324 (= e!47973 e!47969)))

(declare-fun c!10898 () Bool)

(assert (=> b!73324 (= c!10898 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73325 () Bool)

(assert (=> b!73325 (= e!47965 (= (apply!75 lt!32773 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2115 newMap!16)))))

(declare-fun b!73326 () Bool)

(assert (=> b!73326 (= e!47974 call!6450)))

(declare-fun bm!6451 () Bool)

(assert (=> bm!6451 (= call!6452 (contains!729 lt!32773 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!16873 () Bool)

(assert (=> d!16873 e!47973))

(declare-fun res!38879 () Bool)

(assert (=> d!16873 (=> (not res!38879) (not e!47973))))

(assert (=> d!16873 (= res!38879 (or (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))))

(declare-fun lt!32775 () ListLongMap!1439)

(assert (=> d!16873 (= lt!32773 lt!32775)))

(declare-fun lt!32776 () Unit!2086)

(assert (=> d!16873 (= lt!32776 e!47964)))

(declare-fun c!10897 () Bool)

(declare-fun e!47972 () Bool)

(assert (=> d!16873 (= c!10897 e!47972)))

(declare-fun res!38880 () Bool)

(assert (=> d!16873 (=> (not res!38880) (not e!47972))))

(assert (=> d!16873 (= res!38880 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!16873 (= lt!32775 e!47967)))

(declare-fun c!10895 () Bool)

(assert (=> d!16873 (= c!10895 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16873 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!16873 (= (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!32773)))

(declare-fun b!73316 () Bool)

(assert (=> b!73316 (= e!47966 (= (apply!75 lt!32773 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2115 newMap!16)))))

(declare-fun b!73327 () Bool)

(assert (=> b!73327 (= e!47971 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73328 () Bool)

(declare-fun c!10899 () Bool)

(assert (=> b!73328 (= c!10899 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!73328 (= e!47974 e!47970)))

(declare-fun b!73329 () Bool)

(assert (=> b!73329 (= e!47972 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73330 () Bool)

(assert (=> b!73330 (= e!47968 (= (apply!75 lt!32773 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1154 (select (arr!1859 (_values!2196 newMap!16)) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73330 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_values!2196 newMap!16))))))

(assert (=> b!73330 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun bm!6452 () Bool)

(assert (=> bm!6452 (= call!6453 (+!98 (ite c!10895 call!6455 (ite c!10896 call!6451 call!6449)) (ite (or c!10895 c!10896) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(declare-fun b!73331 () Bool)

(assert (=> b!73331 (= e!47967 (+!98 call!6453 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))

(assert (= (and d!16873 c!10895) b!73331))

(assert (= (and d!16873 (not c!10895)) b!73320))

(assert (= (and b!73320 c!10896) b!73326))

(assert (= (and b!73320 (not c!10896)) b!73328))

(assert (= (and b!73328 c!10899) b!73313))

(assert (= (and b!73328 (not c!10899)) b!73312))

(assert (= (or b!73313 b!73312) bm!6447))

(assert (= (or b!73326 bm!6447) bm!6449))

(assert (= (or b!73326 b!73313) bm!6450))

(assert (= (or b!73331 bm!6449) bm!6448))

(assert (= (or b!73331 bm!6450) bm!6452))

(assert (= (and d!16873 res!38880) b!73329))

(assert (= (and d!16873 c!10897) b!73317))

(assert (= (and d!16873 (not c!10897)) b!73315))

(assert (= (and d!16873 res!38879) b!73323))

(assert (= (and b!73323 res!38875) b!73327))

(assert (= (and b!73323 (not res!38873)) b!73314))

(assert (= (and b!73314 res!38876) b!73330))

(assert (= (and b!73323 res!38874) b!73319))

(assert (= (and b!73319 c!10894) b!73311))

(assert (= (and b!73319 (not c!10894)) b!73318))

(assert (= (and b!73311 res!38878) b!73316))

(assert (= (or b!73311 b!73318) bm!6446))

(assert (= (and b!73319 res!38877) b!73324))

(assert (= (and b!73324 c!10898) b!73321))

(assert (= (and b!73324 (not c!10898)) b!73322))

(assert (= (and b!73321 res!38881) b!73325))

(assert (= (or b!73321 b!73322) bm!6451))

(declare-fun b_lambda!3303 () Bool)

(assert (=> (not b_lambda!3303) (not b!73330)))

(declare-fun tb!1541 () Bool)

(declare-fun t!5077 () Bool)

(assert (=> (and b!72889 (= (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) (defaultEntry!2213 newMap!16)) t!5077) tb!1541))

(declare-fun result!2697 () Bool)

(assert (=> tb!1541 (= result!2697 tp_is_empty!2475)))

(assert (=> b!73330 t!5077))

(declare-fun b_and!4501 () Bool)

(assert (= b_and!4497 (and (=> t!5077 result!2697) b_and!4501)))

(declare-fun t!5079 () Bool)

(declare-fun tb!1543 () Bool)

(assert (=> (and b!72885 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 newMap!16)) t!5079) tb!1543))

(declare-fun result!2699 () Bool)

(assert (= result!2699 result!2697))

(assert (=> b!73330 t!5079))

(declare-fun b_and!4503 () Bool)

(assert (= b_and!4499 (and (=> t!5079 result!2699) b_and!4503)))

(declare-fun m!71475 () Bool)

(assert (=> bm!6452 m!71475))

(declare-fun m!71477 () Bool)

(assert (=> b!73316 m!71477))

(declare-fun m!71479 () Bool)

(assert (=> bm!6448 m!71479))

(assert (=> b!73327 m!71397))

(assert (=> b!73327 m!71397))

(assert (=> b!73327 m!71411))

(declare-fun m!71481 () Bool)

(assert (=> b!73331 m!71481))

(declare-fun m!71483 () Bool)

(assert (=> bm!6446 m!71483))

(declare-fun m!71485 () Bool)

(assert (=> b!73317 m!71485))

(declare-fun m!71487 () Bool)

(assert (=> b!73317 m!71487))

(declare-fun m!71489 () Bool)

(assert (=> b!73317 m!71489))

(assert (=> b!73317 m!71397))

(declare-fun m!71491 () Bool)

(assert (=> b!73317 m!71491))

(declare-fun m!71493 () Bool)

(assert (=> b!73317 m!71493))

(declare-fun m!71495 () Bool)

(assert (=> b!73317 m!71495))

(assert (=> b!73317 m!71491))

(declare-fun m!71497 () Bool)

(assert (=> b!73317 m!71497))

(assert (=> b!73317 m!71479))

(declare-fun m!71499 () Bool)

(assert (=> b!73317 m!71499))

(assert (=> b!73317 m!71487))

(declare-fun m!71501 () Bool)

(assert (=> b!73317 m!71501))

(assert (=> b!73317 m!71485))

(declare-fun m!71503 () Bool)

(assert (=> b!73317 m!71503))

(declare-fun m!71505 () Bool)

(assert (=> b!73317 m!71505))

(assert (=> b!73317 m!71489))

(declare-fun m!71507 () Bool)

(assert (=> b!73317 m!71507))

(declare-fun m!71509 () Bool)

(assert (=> b!73317 m!71509))

(declare-fun m!71511 () Bool)

(assert (=> b!73317 m!71511))

(declare-fun m!71513 () Bool)

(assert (=> b!73317 m!71513))

(assert (=> b!73314 m!71397))

(assert (=> b!73314 m!71397))

(declare-fun m!71515 () Bool)

(assert (=> b!73314 m!71515))

(declare-fun m!71517 () Bool)

(assert (=> bm!6451 m!71517))

(assert (=> b!73330 m!71397))

(assert (=> b!73330 m!71397))

(declare-fun m!71519 () Bool)

(assert (=> b!73330 m!71519))

(declare-fun m!71521 () Bool)

(assert (=> b!73330 m!71521))

(declare-fun m!71523 () Bool)

(assert (=> b!73330 m!71523))

(assert (=> b!73330 m!71523))

(assert (=> b!73330 m!71521))

(declare-fun m!71525 () Bool)

(assert (=> b!73330 m!71525))

(assert (=> b!73329 m!71397))

(assert (=> b!73329 m!71397))

(assert (=> b!73329 m!71411))

(declare-fun m!71527 () Bool)

(assert (=> b!73325 m!71527))

(assert (=> d!16873 m!71423))

(assert (=> d!16803 d!16873))

(declare-fun d!16875 () Bool)

(assert (=> d!16875 (= (+!98 (+!98 lt!32476 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (+!98 (+!98 lt!32476 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))

(assert (=> d!16875 true))

(declare-fun _$28!121 () Unit!2086)

(assert (=> d!16875 (= (choose!418 lt!32476 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) _$28!121)))

(declare-fun bs!3140 () Bool)

(assert (= bs!3140 d!16875))

(assert (=> bs!3140 m!71315))

(assert (=> bs!3140 m!71315))

(assert (=> bs!3140 m!71317))

(assert (=> bs!3140 m!71319))

(assert (=> bs!3140 m!71319))

(assert (=> bs!3140 m!71321))

(assert (=> d!16817 d!16875))

(declare-fun d!16877 () Bool)

(declare-fun e!47975 () Bool)

(assert (=> d!16877 e!47975))

(declare-fun res!38882 () Bool)

(assert (=> d!16877 (=> (not res!38882) (not e!47975))))

(declare-fun lt!32788 () ListLongMap!1439)

(assert (=> d!16877 (= res!38882 (contains!729 lt!32788 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun lt!32787 () List!1507)

(assert (=> d!16877 (= lt!32788 (ListLongMap!1440 lt!32787))))

(declare-fun lt!32785 () Unit!2086)

(declare-fun lt!32786 () Unit!2086)

(assert (=> d!16877 (= lt!32785 lt!32786)))

(assert (=> d!16877 (= (getValueByKey!132 lt!32787 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16877 (= lt!32786 (lemmaContainsTupThenGetReturnValue!51 lt!32787 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16877 (= lt!32787 (insertStrictlySorted!53 (toList!735 lt!32476) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16877 (= (+!98 lt!32476 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32788)))

(declare-fun b!73332 () Bool)

(declare-fun res!38883 () Bool)

(assert (=> b!73332 (=> (not res!38883) (not e!47975))))

(assert (=> b!73332 (= res!38883 (= (getValueByKey!132 (toList!735 lt!32788) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun b!73333 () Bool)

(assert (=> b!73333 (= e!47975 (contains!730 (toList!735 lt!32788) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(assert (= (and d!16877 res!38882) b!73332))

(assert (= (and b!73332 res!38883) b!73333))

(declare-fun m!71529 () Bool)

(assert (=> d!16877 m!71529))

(declare-fun m!71531 () Bool)

(assert (=> d!16877 m!71531))

(declare-fun m!71533 () Bool)

(assert (=> d!16877 m!71533))

(declare-fun m!71535 () Bool)

(assert (=> d!16877 m!71535))

(declare-fun m!71537 () Bool)

(assert (=> b!73332 m!71537))

(declare-fun m!71539 () Bool)

(assert (=> b!73333 m!71539))

(assert (=> d!16817 d!16877))

(declare-fun d!16879 () Bool)

(declare-fun e!47976 () Bool)

(assert (=> d!16879 e!47976))

(declare-fun res!38884 () Bool)

(assert (=> d!16879 (=> (not res!38884) (not e!47976))))

(declare-fun lt!32792 () ListLongMap!1439)

(assert (=> d!16879 (= res!38884 (contains!729 lt!32792 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun lt!32791 () List!1507)

(assert (=> d!16879 (= lt!32792 (ListLongMap!1440 lt!32791))))

(declare-fun lt!32789 () Unit!2086)

(declare-fun lt!32790 () Unit!2086)

(assert (=> d!16879 (= lt!32789 lt!32790)))

(assert (=> d!16879 (= (getValueByKey!132 lt!32791 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (Some!137 (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!16879 (= lt!32790 (lemmaContainsTupThenGetReturnValue!51 lt!32791 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!16879 (= lt!32791 (insertStrictlySorted!53 (toList!735 lt!32476) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!16879 (= (+!98 lt!32476 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) lt!32792)))

(declare-fun b!73334 () Bool)

(declare-fun res!38885 () Bool)

(assert (=> b!73334 (=> (not res!38885) (not e!47976))))

(assert (=> b!73334 (= res!38885 (= (getValueByKey!132 (toList!735 lt!32792) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (Some!137 (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(declare-fun b!73335 () Bool)

(assert (=> b!73335 (= e!47976 (contains!730 (toList!735 lt!32792) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))

(assert (= (and d!16879 res!38884) b!73334))

(assert (= (and b!73334 res!38885) b!73335))

(declare-fun m!71541 () Bool)

(assert (=> d!16879 m!71541))

(declare-fun m!71543 () Bool)

(assert (=> d!16879 m!71543))

(declare-fun m!71545 () Bool)

(assert (=> d!16879 m!71545))

(declare-fun m!71547 () Bool)

(assert (=> d!16879 m!71547))

(declare-fun m!71549 () Bool)

(assert (=> b!73334 m!71549))

(declare-fun m!71551 () Bool)

(assert (=> b!73335 m!71551))

(assert (=> d!16817 d!16879))

(declare-fun d!16881 () Bool)

(declare-fun e!47977 () Bool)

(assert (=> d!16881 e!47977))

(declare-fun res!38886 () Bool)

(assert (=> d!16881 (=> (not res!38886) (not e!47977))))

(declare-fun lt!32796 () ListLongMap!1439)

(assert (=> d!16881 (= res!38886 (contains!729 lt!32796 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun lt!32795 () List!1507)

(assert (=> d!16881 (= lt!32796 (ListLongMap!1440 lt!32795))))

(declare-fun lt!32793 () Unit!2086)

(declare-fun lt!32794 () Unit!2086)

(assert (=> d!16881 (= lt!32793 lt!32794)))

(assert (=> d!16881 (= (getValueByKey!132 lt!32795 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16881 (= lt!32794 (lemmaContainsTupThenGetReturnValue!51 lt!32795 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16881 (= lt!32795 (insertStrictlySorted!53 (toList!735 (+!98 lt!32476 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16881 (= (+!98 (+!98 lt!32476 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32796)))

(declare-fun b!73336 () Bool)

(declare-fun res!38887 () Bool)

(assert (=> b!73336 (=> (not res!38887) (not e!47977))))

(assert (=> b!73336 (= res!38887 (= (getValueByKey!132 (toList!735 lt!32796) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun b!73337 () Bool)

(assert (=> b!73337 (= e!47977 (contains!730 (toList!735 lt!32796) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(assert (= (and d!16881 res!38886) b!73336))

(assert (= (and b!73336 res!38887) b!73337))

(declare-fun m!71553 () Bool)

(assert (=> d!16881 m!71553))

(declare-fun m!71555 () Bool)

(assert (=> d!16881 m!71555))

(declare-fun m!71557 () Bool)

(assert (=> d!16881 m!71557))

(declare-fun m!71559 () Bool)

(assert (=> d!16881 m!71559))

(declare-fun m!71561 () Bool)

(assert (=> b!73336 m!71561))

(declare-fun m!71563 () Bool)

(assert (=> b!73337 m!71563))

(assert (=> d!16817 d!16881))

(declare-fun d!16883 () Bool)

(declare-fun e!47978 () Bool)

(assert (=> d!16883 e!47978))

(declare-fun res!38888 () Bool)

(assert (=> d!16883 (=> (not res!38888) (not e!47978))))

(declare-fun lt!32800 () ListLongMap!1439)

(assert (=> d!16883 (= res!38888 (contains!729 lt!32800 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun lt!32799 () List!1507)

(assert (=> d!16883 (= lt!32800 (ListLongMap!1440 lt!32799))))

(declare-fun lt!32797 () Unit!2086)

(declare-fun lt!32798 () Unit!2086)

(assert (=> d!16883 (= lt!32797 lt!32798)))

(assert (=> d!16883 (= (getValueByKey!132 lt!32799 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (Some!137 (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!16883 (= lt!32798 (lemmaContainsTupThenGetReturnValue!51 lt!32799 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!16883 (= lt!32799 (insertStrictlySorted!53 (toList!735 (+!98 lt!32476 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!16883 (= (+!98 (+!98 lt!32476 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) lt!32800)))

(declare-fun b!73338 () Bool)

(declare-fun res!38889 () Bool)

(assert (=> b!73338 (=> (not res!38889) (not e!47978))))

(assert (=> b!73338 (= res!38889 (= (getValueByKey!132 (toList!735 lt!32800) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (Some!137 (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(declare-fun b!73339 () Bool)

(assert (=> b!73339 (= e!47978 (contains!730 (toList!735 lt!32800) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))

(assert (= (and d!16883 res!38888) b!73338))

(assert (= (and b!73338 res!38889) b!73339))

(declare-fun m!71565 () Bool)

(assert (=> d!16883 m!71565))

(declare-fun m!71567 () Bool)

(assert (=> d!16883 m!71567))

(declare-fun m!71569 () Bool)

(assert (=> d!16883 m!71569))

(declare-fun m!71571 () Bool)

(assert (=> d!16883 m!71571))

(declare-fun m!71573 () Bool)

(assert (=> b!73338 m!71573))

(declare-fun m!71575 () Bool)

(assert (=> b!73339 m!71575))

(assert (=> d!16817 d!16883))

(declare-fun d!16885 () Bool)

(declare-fun e!47980 () Bool)

(assert (=> d!16885 e!47980))

(declare-fun res!38890 () Bool)

(assert (=> d!16885 (=> res!38890 e!47980)))

(declare-fun lt!32803 () Bool)

(assert (=> d!16885 (= res!38890 (not lt!32803))))

(declare-fun lt!32801 () Bool)

(assert (=> d!16885 (= lt!32803 lt!32801)))

(declare-fun lt!32802 () Unit!2086)

(declare-fun e!47979 () Unit!2086)

(assert (=> d!16885 (= lt!32802 e!47979)))

(declare-fun c!10900 () Bool)

(assert (=> d!16885 (= c!10900 lt!32801)))

(assert (=> d!16885 (= lt!32801 (containsKey!136 (toList!735 e!47808) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593)))))))

(assert (=> d!16885 (= (contains!729 e!47808 (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593)))) lt!32803)))

(declare-fun b!73340 () Bool)

(declare-fun lt!32804 () Unit!2086)

(assert (=> b!73340 (= e!47979 lt!32804)))

(assert (=> b!73340 (= lt!32804 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 e!47808) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593)))))))

(assert (=> b!73340 (isDefined!86 (getValueByKey!132 (toList!735 e!47808) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593)))))))

(declare-fun b!73341 () Bool)

(declare-fun Unit!2101 () Unit!2086)

(assert (=> b!73341 (= e!47979 Unit!2101)))

(declare-fun b!73342 () Bool)

(assert (=> b!73342 (= e!47980 (isDefined!86 (getValueByKey!132 (toList!735 e!47808) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593))))))))

(assert (= (and d!16885 c!10900) b!73340))

(assert (= (and d!16885 (not c!10900)) b!73341))

(assert (= (and d!16885 (not res!38890)) b!73342))

(declare-fun m!71577 () Bool)

(assert (=> d!16885 m!71577))

(declare-fun m!71579 () Bool)

(assert (=> b!73340 m!71579))

(declare-fun m!71581 () Bool)

(assert (=> b!73340 m!71581))

(assert (=> b!73340 m!71581))

(declare-fun m!71583 () Bool)

(assert (=> b!73340 m!71583))

(assert (=> b!73342 m!71581))

(assert (=> b!73342 m!71581))

(assert (=> b!73342 m!71583))

(assert (=> bm!6412 d!16885))

(declare-fun d!16887 () Bool)

(declare-fun e!47982 () Bool)

(assert (=> d!16887 e!47982))

(declare-fun res!38891 () Bool)

(assert (=> d!16887 (=> res!38891 e!47982)))

(declare-fun lt!32807 () Bool)

(assert (=> d!16887 (= res!38891 (not lt!32807))))

(declare-fun lt!32805 () Bool)

(assert (=> d!16887 (= lt!32807 lt!32805)))

(declare-fun lt!32806 () Unit!2086)

(declare-fun e!47981 () Unit!2086)

(assert (=> d!16887 (= lt!32806 e!47981)))

(declare-fun c!10901 () Bool)

(assert (=> d!16887 (= c!10901 lt!32805)))

(assert (=> d!16887 (= lt!32805 (containsKey!136 (toList!735 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16887 (= (contains!729 lt!32666 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32807)))

(declare-fun b!73343 () Bool)

(declare-fun lt!32808 () Unit!2086)

(assert (=> b!73343 (= e!47981 lt!32808)))

(assert (=> b!73343 (= lt!32808 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73343 (isDefined!86 (getValueByKey!132 (toList!735 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73344 () Bool)

(declare-fun Unit!2102 () Unit!2086)

(assert (=> b!73344 (= e!47981 Unit!2102)))

(declare-fun b!73345 () Bool)

(assert (=> b!73345 (= e!47982 (isDefined!86 (getValueByKey!132 (toList!735 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16887 c!10901) b!73343))

(assert (= (and d!16887 (not c!10901)) b!73344))

(assert (= (and d!16887 (not res!38891)) b!73345))

(declare-fun m!71585 () Bool)

(assert (=> d!16887 m!71585))

(declare-fun m!71587 () Bool)

(assert (=> b!73343 m!71587))

(declare-fun m!71589 () Bool)

(assert (=> b!73343 m!71589))

(assert (=> b!73343 m!71589))

(declare-fun m!71591 () Bool)

(assert (=> b!73343 m!71591))

(assert (=> b!73345 m!71589))

(assert (=> b!73345 m!71589))

(assert (=> b!73345 m!71591))

(assert (=> bm!6434 d!16887))

(declare-fun b!73346 () Bool)

(declare-fun e!47984 () Bool)

(declare-fun e!47987 () Bool)

(assert (=> b!73346 (= e!47984 e!47987)))

(declare-fun res!38897 () Bool)

(declare-fun call!6461 () Bool)

(assert (=> b!73346 (= res!38897 call!6461)))

(assert (=> b!73346 (=> (not res!38897) (not e!47987))))

(declare-fun b!73347 () Bool)

(declare-fun e!47991 () ListLongMap!1439)

(declare-fun call!6456 () ListLongMap!1439)

(assert (=> b!73347 (= e!47991 call!6456)))

(declare-fun b!73348 () Bool)

(declare-fun call!6457 () ListLongMap!1439)

(assert (=> b!73348 (= e!47991 call!6457)))

(declare-fun bm!6453 () Bool)

(declare-fun lt!32819 () ListLongMap!1439)

(assert (=> bm!6453 (= call!6461 (contains!729 lt!32819 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73349 () Bool)

(declare-fun e!47983 () Bool)

(declare-fun e!47989 () Bool)

(assert (=> b!73349 (= e!47983 e!47989)))

(declare-fun res!38895 () Bool)

(assert (=> b!73349 (=> (not res!38895) (not e!47989))))

(assert (=> b!73349 (= res!38895 (contains!729 lt!32819 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73349 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!73350 () Bool)

(declare-fun e!47985 () Unit!2086)

(declare-fun Unit!2103 () Unit!2086)

(assert (=> b!73350 (= e!47985 Unit!2103)))

(declare-fun bm!6454 () Bool)

(declare-fun call!6458 () ListLongMap!1439)

(assert (=> bm!6454 (= call!6456 call!6458)))

(declare-fun bm!6455 () Bool)

(declare-fun call!6462 () ListLongMap!1439)

(assert (=> bm!6455 (= call!6462 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (ite c!10836 (_values!2196 newMap!16) lt!32608) (mask!6180 newMap!16) (ite c!10836 (ite c!10829 lt!32610 lt!32600) (extraKeys!2072 newMap!16)) (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)) (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!73352 () Bool)

(declare-fun lt!32809 () Unit!2086)

(assert (=> b!73352 (= e!47985 lt!32809)))

(declare-fun lt!32830 () ListLongMap!1439)

(assert (=> b!73352 (= lt!32830 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (ite c!10836 (_values!2196 newMap!16) lt!32608) (mask!6180 newMap!16) (ite c!10836 (ite c!10829 lt!32610 lt!32600) (extraKeys!2072 newMap!16)) (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)) (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32824 () (_ BitVec 64))

(assert (=> b!73352 (= lt!32824 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32815 () (_ BitVec 64))

(assert (=> b!73352 (= lt!32815 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32812 () Unit!2086)

(assert (=> b!73352 (= lt!32812 (addStillContains!51 lt!32830 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)) lt!32815))))

(assert (=> b!73352 (contains!729 (+!98 lt!32830 (tuple2!2147 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)))) lt!32815)))

(declare-fun lt!32826 () Unit!2086)

(assert (=> b!73352 (= lt!32826 lt!32812)))

(declare-fun lt!32817 () ListLongMap!1439)

(assert (=> b!73352 (= lt!32817 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (ite c!10836 (_values!2196 newMap!16) lt!32608) (mask!6180 newMap!16) (ite c!10836 (ite c!10829 lt!32610 lt!32600) (extraKeys!2072 newMap!16)) (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)) (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32827 () (_ BitVec 64))

(assert (=> b!73352 (= lt!32827 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32825 () (_ BitVec 64))

(assert (=> b!73352 (= lt!32825 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32829 () Unit!2086)

(assert (=> b!73352 (= lt!32829 (addApplyDifferent!51 lt!32817 lt!32827 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)) lt!32825))))

(assert (=> b!73352 (= (apply!75 (+!98 lt!32817 (tuple2!2147 lt!32827 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))) lt!32825) (apply!75 lt!32817 lt!32825))))

(declare-fun lt!32814 () Unit!2086)

(assert (=> b!73352 (= lt!32814 lt!32829)))

(declare-fun lt!32828 () ListLongMap!1439)

(assert (=> b!73352 (= lt!32828 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (ite c!10836 (_values!2196 newMap!16) lt!32608) (mask!6180 newMap!16) (ite c!10836 (ite c!10829 lt!32610 lt!32600) (extraKeys!2072 newMap!16)) (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)) (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32818 () (_ BitVec 64))

(assert (=> b!73352 (= lt!32818 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32810 () (_ BitVec 64))

(assert (=> b!73352 (= lt!32810 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32816 () Unit!2086)

(assert (=> b!73352 (= lt!32816 (addApplyDifferent!51 lt!32828 lt!32818 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)) lt!32810))))

(assert (=> b!73352 (= (apply!75 (+!98 lt!32828 (tuple2!2147 lt!32818 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)))) lt!32810) (apply!75 lt!32828 lt!32810))))

(declare-fun lt!32820 () Unit!2086)

(assert (=> b!73352 (= lt!32820 lt!32816)))

(declare-fun lt!32823 () ListLongMap!1439)

(assert (=> b!73352 (= lt!32823 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (ite c!10836 (_values!2196 newMap!16) lt!32608) (mask!6180 newMap!16) (ite c!10836 (ite c!10829 lt!32610 lt!32600) (extraKeys!2072 newMap!16)) (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)) (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32813 () (_ BitVec 64))

(assert (=> b!73352 (= lt!32813 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32811 () (_ BitVec 64))

(assert (=> b!73352 (= lt!32811 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73352 (= lt!32809 (addApplyDifferent!51 lt!32823 lt!32813 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)) lt!32811))))

(assert (=> b!73352 (= (apply!75 (+!98 lt!32823 (tuple2!2147 lt!32813 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))) lt!32811) (apply!75 lt!32823 lt!32811))))

(declare-fun b!73353 () Bool)

(assert (=> b!73353 (= e!47984 (not call!6461))))

(declare-fun b!73354 () Bool)

(declare-fun res!38896 () Bool)

(declare-fun e!47994 () Bool)

(assert (=> b!73354 (=> (not res!38896) (not e!47994))))

(assert (=> b!73354 (= res!38896 e!47984)))

(declare-fun c!10902 () Bool)

(assert (=> b!73354 (= c!10902 (not (= (bvand (ite c!10836 (ite c!10829 lt!32610 lt!32600) (extraKeys!2072 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!73355 () Bool)

(declare-fun e!47988 () ListLongMap!1439)

(declare-fun e!47995 () ListLongMap!1439)

(assert (=> b!73355 (= e!47988 e!47995)))

(declare-fun c!10904 () Bool)

(assert (=> b!73355 (= c!10904 (and (not (= (bvand (ite c!10836 (ite c!10829 lt!32610 lt!32600) (extraKeys!2072 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!10836 (ite c!10829 lt!32610 lt!32600) (extraKeys!2072 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73356 () Bool)

(declare-fun e!47990 () Bool)

(declare-fun e!47986 () Bool)

(assert (=> b!73356 (= e!47990 e!47986)))

(declare-fun res!38900 () Bool)

(declare-fun call!6459 () Bool)

(assert (=> b!73356 (= res!38900 call!6459)))

(assert (=> b!73356 (=> (not res!38900) (not e!47986))))

(declare-fun bm!6456 () Bool)

(assert (=> bm!6456 (= call!6458 call!6462)))

(declare-fun bm!6457 () Bool)

(declare-fun call!6460 () ListLongMap!1439)

(assert (=> bm!6457 (= call!6457 call!6460)))

(declare-fun b!73357 () Bool)

(assert (=> b!73357 (= e!47990 (not call!6459))))

(declare-fun b!73358 () Bool)

(declare-fun res!38893 () Bool)

(assert (=> b!73358 (=> (not res!38893) (not e!47994))))

(assert (=> b!73358 (= res!38893 e!47983)))

(declare-fun res!38892 () Bool)

(assert (=> b!73358 (=> res!38892 e!47983)))

(declare-fun e!47992 () Bool)

(assert (=> b!73358 (= res!38892 (not e!47992))))

(declare-fun res!38894 () Bool)

(assert (=> b!73358 (=> (not res!38894) (not e!47992))))

(assert (=> b!73358 (= res!38894 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!73359 () Bool)

(assert (=> b!73359 (= e!47994 e!47990)))

(declare-fun c!10906 () Bool)

(assert (=> b!73359 (= c!10906 (not (= (bvand (ite c!10836 (ite c!10829 lt!32610 lt!32600) (extraKeys!2072 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73360 () Bool)

(assert (=> b!73360 (= e!47986 (= (apply!75 lt!32819 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))))

(declare-fun b!73361 () Bool)

(assert (=> b!73361 (= e!47995 call!6457)))

(declare-fun bm!6458 () Bool)

(assert (=> bm!6458 (= call!6459 (contains!729 lt!32819 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!16889 () Bool)

(assert (=> d!16889 e!47994))

(declare-fun res!38898 () Bool)

(assert (=> d!16889 (=> (not res!38898) (not e!47994))))

(assert (=> d!16889 (= res!38898 (or (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))))

(declare-fun lt!32821 () ListLongMap!1439)

(assert (=> d!16889 (= lt!32819 lt!32821)))

(declare-fun lt!32822 () Unit!2086)

(assert (=> d!16889 (= lt!32822 e!47985)))

(declare-fun c!10905 () Bool)

(declare-fun e!47993 () Bool)

(assert (=> d!16889 (= c!10905 e!47993)))

(declare-fun res!38899 () Bool)

(assert (=> d!16889 (=> (not res!38899) (not e!47993))))

(assert (=> d!16889 (= res!38899 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!16889 (= lt!32821 e!47988)))

(declare-fun c!10903 () Bool)

(assert (=> d!16889 (= c!10903 (and (not (= (bvand (ite c!10836 (ite c!10829 lt!32610 lt!32600) (extraKeys!2072 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!10836 (ite c!10829 lt!32610 lt!32600) (extraKeys!2072 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16889 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!16889 (= (getCurrentListMap!426 (_keys!3865 newMap!16) (ite c!10836 (_values!2196 newMap!16) lt!32608) (mask!6180 newMap!16) (ite c!10836 (ite c!10829 lt!32610 lt!32600) (extraKeys!2072 newMap!16)) (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)) (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!32819)))

(declare-fun b!73351 () Bool)

(assert (=> b!73351 (= e!47987 (= (apply!75 lt!32819 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))))))

(declare-fun b!73362 () Bool)

(assert (=> b!73362 (= e!47992 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73363 () Bool)

(declare-fun c!10907 () Bool)

(assert (=> b!73363 (= c!10907 (and (not (= (bvand (ite c!10836 (ite c!10829 lt!32610 lt!32600) (extraKeys!2072 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!10836 (ite c!10829 lt!32610 lt!32600) (extraKeys!2072 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!73363 (= e!47995 e!47991)))

(declare-fun b!73364 () Bool)

(assert (=> b!73364 (= e!47993 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73365 () Bool)

(assert (=> b!73365 (= e!47989 (= (apply!75 lt!32819 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1154 (select (arr!1859 (ite c!10836 (_values!2196 newMap!16) lt!32608)) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73365 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (ite c!10836 (_values!2196 newMap!16) lt!32608))))))

(assert (=> b!73365 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun bm!6459 () Bool)

(assert (=> bm!6459 (= call!6460 (+!98 (ite c!10903 call!6462 (ite c!10904 call!6458 call!6456)) (ite (or c!10903 c!10904) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))))))

(declare-fun b!73366 () Bool)

(assert (=> b!73366 (= e!47988 (+!98 call!6460 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))))))

(assert (= (and d!16889 c!10903) b!73366))

(assert (= (and d!16889 (not c!10903)) b!73355))

(assert (= (and b!73355 c!10904) b!73361))

(assert (= (and b!73355 (not c!10904)) b!73363))

(assert (= (and b!73363 c!10907) b!73348))

(assert (= (and b!73363 (not c!10907)) b!73347))

(assert (= (or b!73348 b!73347) bm!6454))

(assert (= (or b!73361 bm!6454) bm!6456))

(assert (= (or b!73361 b!73348) bm!6457))

(assert (= (or b!73366 bm!6456) bm!6455))

(assert (= (or b!73366 bm!6457) bm!6459))

(assert (= (and d!16889 res!38899) b!73364))

(assert (= (and d!16889 c!10905) b!73352))

(assert (= (and d!16889 (not c!10905)) b!73350))

(assert (= (and d!16889 res!38898) b!73358))

(assert (= (and b!73358 res!38894) b!73362))

(assert (= (and b!73358 (not res!38892)) b!73349))

(assert (= (and b!73349 res!38895) b!73365))

(assert (= (and b!73358 res!38893) b!73354))

(assert (= (and b!73354 c!10902) b!73346))

(assert (= (and b!73354 (not c!10902)) b!73353))

(assert (= (and b!73346 res!38897) b!73351))

(assert (= (or b!73346 b!73353) bm!6453))

(assert (= (and b!73354 res!38896) b!73359))

(assert (= (and b!73359 c!10906) b!73356))

(assert (= (and b!73359 (not c!10906)) b!73357))

(assert (= (and b!73356 res!38900) b!73360))

(assert (= (or b!73356 b!73357) bm!6458))

(declare-fun b_lambda!3305 () Bool)

(assert (=> (not b_lambda!3305) (not b!73365)))

(assert (=> b!73365 t!5077))

(declare-fun b_and!4505 () Bool)

(assert (= b_and!4501 (and (=> t!5077 result!2697) b_and!4505)))

(assert (=> b!73365 t!5079))

(declare-fun b_and!4507 () Bool)

(assert (= b_and!4503 (and (=> t!5079 result!2699) b_and!4507)))

(declare-fun m!71593 () Bool)

(assert (=> bm!6459 m!71593))

(declare-fun m!71595 () Bool)

(assert (=> b!73351 m!71595))

(declare-fun m!71597 () Bool)

(assert (=> bm!6455 m!71597))

(assert (=> b!73362 m!71397))

(assert (=> b!73362 m!71397))

(assert (=> b!73362 m!71411))

(declare-fun m!71599 () Bool)

(assert (=> b!73366 m!71599))

(declare-fun m!71601 () Bool)

(assert (=> bm!6453 m!71601))

(declare-fun m!71603 () Bool)

(assert (=> b!73352 m!71603))

(declare-fun m!71605 () Bool)

(assert (=> b!73352 m!71605))

(declare-fun m!71607 () Bool)

(assert (=> b!73352 m!71607))

(assert (=> b!73352 m!71397))

(declare-fun m!71609 () Bool)

(assert (=> b!73352 m!71609))

(declare-fun m!71611 () Bool)

(assert (=> b!73352 m!71611))

(declare-fun m!71613 () Bool)

(assert (=> b!73352 m!71613))

(assert (=> b!73352 m!71609))

(declare-fun m!71615 () Bool)

(assert (=> b!73352 m!71615))

(assert (=> b!73352 m!71597))

(declare-fun m!71617 () Bool)

(assert (=> b!73352 m!71617))

(assert (=> b!73352 m!71605))

(declare-fun m!71619 () Bool)

(assert (=> b!73352 m!71619))

(assert (=> b!73352 m!71603))

(declare-fun m!71621 () Bool)

(assert (=> b!73352 m!71621))

(declare-fun m!71623 () Bool)

(assert (=> b!73352 m!71623))

(assert (=> b!73352 m!71607))

(declare-fun m!71625 () Bool)

(assert (=> b!73352 m!71625))

(declare-fun m!71627 () Bool)

(assert (=> b!73352 m!71627))

(declare-fun m!71629 () Bool)

(assert (=> b!73352 m!71629))

(declare-fun m!71631 () Bool)

(assert (=> b!73352 m!71631))

(assert (=> b!73349 m!71397))

(assert (=> b!73349 m!71397))

(declare-fun m!71633 () Bool)

(assert (=> b!73349 m!71633))

(declare-fun m!71635 () Bool)

(assert (=> bm!6458 m!71635))

(assert (=> b!73365 m!71397))

(assert (=> b!73365 m!71397))

(declare-fun m!71637 () Bool)

(assert (=> b!73365 m!71637))

(assert (=> b!73365 m!71521))

(declare-fun m!71639 () Bool)

(assert (=> b!73365 m!71639))

(assert (=> b!73365 m!71639))

(assert (=> b!73365 m!71521))

(declare-fun m!71641 () Bool)

(assert (=> b!73365 m!71641))

(assert (=> b!73364 m!71397))

(assert (=> b!73364 m!71397))

(assert (=> b!73364 m!71411))

(declare-fun m!71643 () Bool)

(assert (=> b!73360 m!71643))

(assert (=> d!16889 m!71423))

(assert (=> bm!6398 d!16889))

(declare-fun d!16891 () Bool)

(assert (=> d!16891 (= (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (and (not (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73231 d!16891))

(declare-fun d!16893 () Bool)

(assert (=> d!16893 (= (apply!75 lt!32666 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1158 (getValueByKey!132 (toList!735 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3141 () Bool)

(assert (= bs!3141 d!16893))

(assert (=> bs!3141 m!71589))

(assert (=> bs!3141 m!71589))

(declare-fun m!71645 () Bool)

(assert (=> bs!3141 m!71645))

(assert (=> b!73144 d!16893))

(assert (=> bm!6396 d!16873))

(declare-fun d!16895 () Bool)

(assert (=> d!16895 (= (get!1157 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) from!355) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73156 d!16895))

(declare-fun d!16897 () Bool)

(declare-fun isEmpty!322 (Option!138) Bool)

(assert (=> d!16897 (= (isDefined!86 (getValueByKey!132 (toList!735 lt!32480) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))) (not (isEmpty!322 (getValueByKey!132 (toList!735 lt!32480) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))))

(declare-fun bs!3142 () Bool)

(assert (= bs!3142 d!16897))

(assert (=> bs!3142 m!71161))

(declare-fun m!71647 () Bool)

(assert (=> bs!3142 m!71647))

(assert (=> b!72967 d!16897))

(declare-fun b!73370 () Bool)

(declare-fun e!47997 () Option!138)

(assert (=> b!73370 (= e!47997 None!136)))

(declare-fun b!73368 () Bool)

(declare-fun e!47996 () Option!138)

(assert (=> b!73368 (= e!47996 e!47997)))

(declare-fun c!10909 () Bool)

(assert (=> b!73368 (= c!10909 (and ((_ is Cons!1503) (toList!735 lt!32480)) (not (= (_1!1083 (h!2090 (toList!735 lt!32480))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))))

(declare-fun b!73367 () Bool)

(assert (=> b!73367 (= e!47996 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32480)))))))

(declare-fun c!10908 () Bool)

(declare-fun d!16899 () Bool)

(assert (=> d!16899 (= c!10908 (and ((_ is Cons!1503) (toList!735 lt!32480)) (= (_1!1083 (h!2090 (toList!735 lt!32480))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))))

(assert (=> d!16899 (= (getValueByKey!132 (toList!735 lt!32480) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) e!47996)))

(declare-fun b!73369 () Bool)

(assert (=> b!73369 (= e!47997 (getValueByKey!132 (t!5068 (toList!735 lt!32480)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (= (and d!16899 c!10908) b!73367))

(assert (= (and d!16899 (not c!10908)) b!73368))

(assert (= (and b!73368 c!10909) b!73369))

(assert (= (and b!73368 (not c!10909)) b!73370))

(assert (=> b!73369 m!71053))

(declare-fun m!71649 () Bool)

(assert (=> b!73369 m!71649))

(assert (=> b!72967 d!16899))

(declare-fun d!16901 () Bool)

(assert (=> d!16901 (= (apply!75 lt!32694 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1158 (getValueByKey!132 (toList!735 lt!32694) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3143 () Bool)

(assert (= bs!3143 d!16901))

(assert (=> bs!3143 m!71227))

(declare-fun m!71651 () Bool)

(assert (=> bs!3143 m!71651))

(assert (=> bs!3143 m!71651))

(declare-fun m!71653 () Bool)

(assert (=> bs!3143 m!71653))

(assert (=> b!73184 d!16901))

(declare-fun d!16903 () Bool)

(declare-fun c!10910 () Bool)

(assert (=> d!16903 (= c!10910 ((_ is ValueCellFull!894) (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!47998 () V!2947)

(assert (=> d!16903 (= (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47998)))

(declare-fun b!73371 () Bool)

(assert (=> b!73371 (= e!47998 (get!1156 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73372 () Bool)

(assert (=> b!73372 (= e!47998 (get!1157 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16903 c!10910) b!73371))

(assert (= (and d!16903 (not c!10910)) b!73372))

(assert (=> b!73371 m!71271))

(assert (=> b!73371 m!71083))

(declare-fun m!71655 () Bool)

(assert (=> b!73371 m!71655))

(assert (=> b!73372 m!71271))

(assert (=> b!73372 m!71083))

(declare-fun m!71657 () Bool)

(assert (=> b!73372 m!71657))

(assert (=> b!73184 d!16903))

(declare-fun d!16905 () Bool)

(assert (=> d!16905 (isDefined!86 (getValueByKey!132 (toList!735 lt!32480) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun lt!32833 () Unit!2086)

(declare-fun choose!421 (List!1507 (_ BitVec 64)) Unit!2086)

(assert (=> d!16905 (= lt!32833 (choose!421 (toList!735 lt!32480) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun e!48001 () Bool)

(assert (=> d!16905 e!48001))

(declare-fun res!38903 () Bool)

(assert (=> d!16905 (=> (not res!38903) (not e!48001))))

(declare-fun isStrictlySorted!287 (List!1507) Bool)

(assert (=> d!16905 (= res!38903 (isStrictlySorted!287 (toList!735 lt!32480)))))

(assert (=> d!16905 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32480) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) lt!32833)))

(declare-fun b!73375 () Bool)

(assert (=> b!73375 (= e!48001 (containsKey!136 (toList!735 lt!32480) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (= (and d!16905 res!38903) b!73375))

(assert (=> d!16905 m!71053))

(assert (=> d!16905 m!71161))

(assert (=> d!16905 m!71161))

(assert (=> d!16905 m!71163))

(assert (=> d!16905 m!71053))

(declare-fun m!71659 () Bool)

(assert (=> d!16905 m!71659))

(declare-fun m!71661 () Bool)

(assert (=> d!16905 m!71661))

(assert (=> b!73375 m!71053))

(assert (=> b!73375 m!71157))

(assert (=> b!72965 d!16905))

(assert (=> b!72965 d!16897))

(assert (=> b!72965 d!16899))

(declare-fun b!73379 () Bool)

(declare-fun e!48003 () Option!138)

(assert (=> b!73379 (= e!48003 None!136)))

(declare-fun b!73377 () Bool)

(declare-fun e!48002 () Option!138)

(assert (=> b!73377 (= e!48002 e!48003)))

(declare-fun c!10912 () Bool)

(assert (=> b!73377 (= c!10912 (and ((_ is Cons!1503) (toList!735 lt!32725)) (not (= (_1!1083 (h!2090 (toList!735 lt!32725))) (_1!1083 lt!32472)))))))

(declare-fun b!73376 () Bool)

(assert (=> b!73376 (= e!48002 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32725)))))))

(declare-fun d!16907 () Bool)

(declare-fun c!10911 () Bool)

(assert (=> d!16907 (= c!10911 (and ((_ is Cons!1503) (toList!735 lt!32725)) (= (_1!1083 (h!2090 (toList!735 lt!32725))) (_1!1083 lt!32472))))))

(assert (=> d!16907 (= (getValueByKey!132 (toList!735 lt!32725) (_1!1083 lt!32472)) e!48002)))

(declare-fun b!73378 () Bool)

(assert (=> b!73378 (= e!48003 (getValueByKey!132 (t!5068 (toList!735 lt!32725)) (_1!1083 lt!32472)))))

(assert (= (and d!16907 c!10911) b!73376))

(assert (= (and d!16907 (not c!10911)) b!73377))

(assert (= (and b!73377 c!10912) b!73378))

(assert (= (and b!73377 (not c!10912)) b!73379))

(declare-fun m!71663 () Bool)

(assert (=> b!73378 m!71663))

(assert (=> b!73203 d!16907))

(assert (=> b!73227 d!16891))

(declare-fun d!16909 () Bool)

(assert (=> d!16909 (= (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73191 d!16909))

(declare-fun d!16911 () Bool)

(declare-fun e!48005 () Bool)

(assert (=> d!16911 e!48005))

(declare-fun res!38904 () Bool)

(assert (=> d!16911 (=> res!38904 e!48005)))

(declare-fun lt!32836 () Bool)

(assert (=> d!16911 (= res!38904 (not lt!32836))))

(declare-fun lt!32834 () Bool)

(assert (=> d!16911 (= lt!32836 lt!32834)))

(declare-fun lt!32835 () Unit!2086)

(declare-fun e!48004 () Unit!2086)

(assert (=> d!16911 (= lt!32835 e!48004)))

(declare-fun c!10913 () Bool)

(assert (=> d!16911 (= c!10913 lt!32834)))

(assert (=> d!16911 (= lt!32834 (containsKey!136 (toList!735 lt!32666) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!16911 (= (contains!729 lt!32666 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!32836)))

(declare-fun b!73380 () Bool)

(declare-fun lt!32837 () Unit!2086)

(assert (=> b!73380 (= e!48004 lt!32837)))

(assert (=> b!73380 (= lt!32837 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32666) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73380 (isDefined!86 (getValueByKey!132 (toList!735 lt!32666) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!73381 () Bool)

(declare-fun Unit!2104 () Unit!2086)

(assert (=> b!73381 (= e!48004 Unit!2104)))

(declare-fun b!73382 () Bool)

(assert (=> b!73382 (= e!48005 (isDefined!86 (getValueByKey!132 (toList!735 lt!32666) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!16911 c!10913) b!73380))

(assert (= (and d!16911 (not c!10913)) b!73381))

(assert (= (and d!16911 (not res!38904)) b!73382))

(assert (=> d!16911 m!71227))

(declare-fun m!71665 () Bool)

(assert (=> d!16911 m!71665))

(assert (=> b!73380 m!71227))

(declare-fun m!71667 () Bool)

(assert (=> b!73380 m!71667))

(assert (=> b!73380 m!71227))

(declare-fun m!71669 () Bool)

(assert (=> b!73380 m!71669))

(assert (=> b!73380 m!71669))

(declare-fun m!71671 () Bool)

(assert (=> b!73380 m!71671))

(assert (=> b!73382 m!71227))

(assert (=> b!73382 m!71669))

(assert (=> b!73382 m!71669))

(assert (=> b!73382 m!71671))

(assert (=> b!73133 d!16911))

(declare-fun d!16913 () Bool)

(declare-fun res!38905 () Bool)

(declare-fun e!48006 () Bool)

(assert (=> d!16913 (=> (not res!38905) (not e!48006))))

(assert (=> d!16913 (= res!38905 (simpleValid!50 (v!2533 (underlying!264 thiss!992))))))

(assert (=> d!16913 (= (valid!292 (v!2533 (underlying!264 thiss!992))) e!48006)))

(declare-fun b!73383 () Bool)

(declare-fun res!38906 () Bool)

(assert (=> b!73383 (=> (not res!38906) (not e!48006))))

(assert (=> b!73383 (= res!38906 (= (arrayCountValidKeys!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000000 (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))) (_size!397 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun b!73384 () Bool)

(declare-fun res!38907 () Bool)

(assert (=> b!73384 (=> (not res!38907) (not e!48006))))

(assert (=> b!73384 (= res!38907 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun b!73385 () Bool)

(assert (=> b!73385 (= e!48006 (arrayNoDuplicates!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000000 Nil!1505))))

(assert (= (and d!16913 res!38905) b!73383))

(assert (= (and b!73383 res!38906) b!73384))

(assert (= (and b!73384 res!38907) b!73385))

(declare-fun m!71673 () Bool)

(assert (=> d!16913 m!71673))

(declare-fun m!71675 () Bool)

(assert (=> b!73383 m!71675))

(declare-fun m!71677 () Bool)

(assert (=> b!73384 m!71677))

(declare-fun m!71679 () Bool)

(assert (=> b!73385 m!71679))

(assert (=> d!16801 d!16913))

(declare-fun b!73398 () Bool)

(declare-fun e!48013 () SeekEntryResult!246)

(declare-fun lt!32845 () SeekEntryResult!246)

(assert (=> b!73398 (= e!48013 (Found!246 (index!3117 lt!32845)))))

(declare-fun b!73399 () Bool)

(declare-fun e!48014 () SeekEntryResult!246)

(assert (=> b!73399 (= e!48014 (MissingZero!246 (index!3117 lt!32845)))))

(declare-fun b!73400 () Bool)

(declare-fun c!10922 () Bool)

(declare-fun lt!32844 () (_ BitVec 64))

(assert (=> b!73400 (= c!10922 (= lt!32844 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73400 (= e!48013 e!48014)))

(declare-fun lt!32846 () SeekEntryResult!246)

(declare-fun d!16915 () Bool)

(assert (=> d!16915 (and (or ((_ is Undefined!246) lt!32846) (not ((_ is Found!246) lt!32846)) (and (bvsge (index!3116 lt!32846) #b00000000000000000000000000000000) (bvslt (index!3116 lt!32846) (size!2096 (_keys!3865 newMap!16))))) (or ((_ is Undefined!246) lt!32846) ((_ is Found!246) lt!32846) (not ((_ is MissingZero!246) lt!32846)) (and (bvsge (index!3115 lt!32846) #b00000000000000000000000000000000) (bvslt (index!3115 lt!32846) (size!2096 (_keys!3865 newMap!16))))) (or ((_ is Undefined!246) lt!32846) ((_ is Found!246) lt!32846) ((_ is MissingZero!246) lt!32846) (not ((_ is MissingVacant!246) lt!32846)) (and (bvsge (index!3118 lt!32846) #b00000000000000000000000000000000) (bvslt (index!3118 lt!32846) (size!2096 (_keys!3865 newMap!16))))) (or ((_ is Undefined!246) lt!32846) (ite ((_ is Found!246) lt!32846) (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32846)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (ite ((_ is MissingZero!246) lt!32846) (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3115 lt!32846)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!246) lt!32846) (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3118 lt!32846)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!48015 () SeekEntryResult!246)

(assert (=> d!16915 (= lt!32846 e!48015)))

(declare-fun c!10921 () Bool)

(assert (=> d!16915 (= c!10921 (and ((_ is Intermediate!246) lt!32845) (undefined!1058 lt!32845)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3894 (_ BitVec 32)) SeekEntryResult!246)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!16915 (= lt!32845 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (mask!6180 newMap!16)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(assert (=> d!16915 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!16915 (= (seekEntryOrOpen!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)) lt!32846)))

(declare-fun b!73401 () Bool)

(assert (=> b!73401 (= e!48015 Undefined!246)))

(declare-fun b!73402 () Bool)

(assert (=> b!73402 (= e!48015 e!48013)))

(assert (=> b!73402 (= lt!32844 (select (arr!1858 (_keys!3865 newMap!16)) (index!3117 lt!32845)))))

(declare-fun c!10920 () Bool)

(assert (=> b!73402 (= c!10920 (= lt!32844 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun b!73403 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3894 (_ BitVec 32)) SeekEntryResult!246)

(assert (=> b!73403 (= e!48014 (seekKeyOrZeroReturnVacant!0 (x!11162 lt!32845) (index!3117 lt!32845) (index!3117 lt!32845) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(assert (= (and d!16915 c!10921) b!73401))

(assert (= (and d!16915 (not c!10921)) b!73402))

(assert (= (and b!73402 c!10920) b!73398))

(assert (= (and b!73402 (not c!10920)) b!73400))

(assert (= (and b!73400 c!10922) b!73399))

(assert (= (and b!73400 (not c!10922)) b!73403))

(declare-fun m!71681 () Bool)

(assert (=> d!16915 m!71681))

(assert (=> d!16915 m!71053))

(declare-fun m!71683 () Bool)

(assert (=> d!16915 m!71683))

(declare-fun m!71685 () Bool)

(assert (=> d!16915 m!71685))

(assert (=> d!16915 m!71683))

(assert (=> d!16915 m!71053))

(declare-fun m!71687 () Bool)

(assert (=> d!16915 m!71687))

(declare-fun m!71689 () Bool)

(assert (=> d!16915 m!71689))

(assert (=> d!16915 m!71423))

(declare-fun m!71691 () Bool)

(assert (=> b!73402 m!71691))

(assert (=> b!73403 m!71053))

(declare-fun m!71693 () Bool)

(assert (=> b!73403 m!71693))

(assert (=> b!73083 d!16915))

(declare-fun d!16917 () Bool)

(declare-fun e!48018 () Bool)

(assert (=> d!16917 e!48018))

(declare-fun c!10925 () Bool)

(assert (=> d!16917 (= c!10925 (and (not (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!16917 true))

(declare-fun _$29!90 () Unit!2086)

(assert (=> d!16917 (= (choose!419 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))) _$29!90)))

(declare-fun b!73408 () Bool)

(assert (=> b!73408 (= e!48018 (arrayContainsKey!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!73409 () Bool)

(assert (=> b!73409 (= e!48018 (ite (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!16917 c!10925) b!73408))

(assert (= (and d!16917 (not c!10925)) b!73409))

(assert (=> b!73408 m!71053))

(assert (=> b!73408 m!71057))

(assert (=> d!16837 d!16917))

(assert (=> d!16837 d!16821))

(declare-fun d!16919 () Bool)

(assert (=> d!16919 (= (apply!75 lt!32666 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1158 (getValueByKey!132 (toList!735 lt!32666) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3144 () Bool)

(assert (= bs!3144 d!16919))

(assert (=> bs!3144 m!71227))

(assert (=> bs!3144 m!71669))

(assert (=> bs!3144 m!71669))

(declare-fun m!71695 () Bool)

(assert (=> bs!3144 m!71695))

(assert (=> b!73149 d!16919))

(assert (=> b!73149 d!16903))

(declare-fun b!73410 () Bool)

(declare-fun res!38908 () Bool)

(declare-fun e!48021 () Bool)

(assert (=> b!73410 (=> (not res!38908) (not e!48021))))

(declare-fun lt!32849 () ListLongMap!1439)

(assert (=> b!73410 (= res!38908 (not (contains!729 lt!32849 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73411 () Bool)

(declare-fun e!48019 () Bool)

(assert (=> b!73411 (= e!48019 (= lt!32849 (getCurrentListMapNoExtraKeys!62 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!73412 () Bool)

(declare-fun e!48022 () Bool)

(assert (=> b!73412 (= e!48022 e!48019)))

(declare-fun c!10927 () Bool)

(assert (=> b!73412 (= c!10927 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!73413 () Bool)

(assert (=> b!73413 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(assert (=> b!73413 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2097 (_values!2196 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun e!48023 () Bool)

(assert (=> b!73413 (= e!48023 (= (apply!75 lt!32849 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!73414 () Bool)

(declare-fun e!48024 () ListLongMap!1439)

(declare-fun call!6463 () ListLongMap!1439)

(assert (=> b!73414 (= e!48024 call!6463)))

(declare-fun b!73415 () Bool)

(declare-fun e!48025 () ListLongMap!1439)

(assert (=> b!73415 (= e!48025 (ListLongMap!1440 Nil!1504))))

(declare-fun b!73416 () Bool)

(assert (=> b!73416 (= e!48019 (isEmpty!321 lt!32849))))

(declare-fun d!16921 () Bool)

(assert (=> d!16921 e!48021))

(declare-fun res!38910 () Bool)

(assert (=> d!16921 (=> (not res!38910) (not e!48021))))

(assert (=> d!16921 (= res!38910 (not (contains!729 lt!32849 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16921 (= lt!32849 e!48025)))

(declare-fun c!10926 () Bool)

(assert (=> d!16921 (= c!10926 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(assert (=> d!16921 (validMask!0 (mask!6180 (v!2533 (underlying!264 thiss!992))))))

(assert (=> d!16921 (= (getCurrentListMapNoExtraKeys!62 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))) lt!32849)))

(declare-fun b!73417 () Bool)

(assert (=> b!73417 (= e!48025 e!48024)))

(declare-fun c!10929 () Bool)

(assert (=> b!73417 (= c!10929 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!73418 () Bool)

(assert (=> b!73418 (= e!48021 e!48022)))

(declare-fun c!10928 () Bool)

(declare-fun e!48020 () Bool)

(assert (=> b!73418 (= c!10928 e!48020)))

(declare-fun res!38911 () Bool)

(assert (=> b!73418 (=> (not res!38911) (not e!48020))))

(assert (=> b!73418 (= res!38911 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun bm!6460 () Bool)

(assert (=> bm!6460 (= call!6463 (getCurrentListMapNoExtraKeys!62 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun b!73419 () Bool)

(assert (=> b!73419 (= e!48022 e!48023)))

(assert (=> b!73419 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun res!38909 () Bool)

(assert (=> b!73419 (= res!38909 (contains!729 lt!32849 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!73419 (=> (not res!38909) (not e!48023))))

(declare-fun b!73420 () Bool)

(assert (=> b!73420 (= e!48020 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!73420 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!73421 () Bool)

(declare-fun lt!32852 () Unit!2086)

(declare-fun lt!32850 () Unit!2086)

(assert (=> b!73421 (= lt!32852 lt!32850)))

(declare-fun lt!32848 () V!2947)

(declare-fun lt!32853 () (_ BitVec 64))

(declare-fun lt!32847 () ListLongMap!1439)

(declare-fun lt!32851 () (_ BitVec 64))

(assert (=> b!73421 (not (contains!729 (+!98 lt!32847 (tuple2!2147 lt!32853 lt!32848)) lt!32851))))

(assert (=> b!73421 (= lt!32850 (addStillNotContains!26 lt!32847 lt!32853 lt!32848 lt!32851))))

(assert (=> b!73421 (= lt!32851 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!73421 (= lt!32848 (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!73421 (= lt!32853 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!73421 (= lt!32847 call!6463)))

(assert (=> b!73421 (= e!48024 (+!98 call!6463 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!16921 c!10926) b!73415))

(assert (= (and d!16921 (not c!10926)) b!73417))

(assert (= (and b!73417 c!10929) b!73421))

(assert (= (and b!73417 (not c!10929)) b!73414))

(assert (= (or b!73421 b!73414) bm!6460))

(assert (= (and d!16921 res!38910) b!73410))

(assert (= (and b!73410 res!38908) b!73418))

(assert (= (and b!73418 res!38911) b!73420))

(assert (= (and b!73418 c!10928) b!73419))

(assert (= (and b!73418 (not c!10928)) b!73412))

(assert (= (and b!73419 res!38909) b!73413))

(assert (= (and b!73412 c!10927) b!73411))

(assert (= (and b!73412 (not c!10927)) b!73416))

(declare-fun b_lambda!3307 () Bool)

(assert (=> (not b_lambda!3307) (not b!73413)))

(assert (=> b!73413 t!5065))

(declare-fun b_and!4509 () Bool)

(assert (= b_and!4505 (and (=> t!5065 result!2683) b_and!4509)))

(assert (=> b!73413 t!5067))

(declare-fun b_and!4511 () Bool)

(assert (= b_and!4507 (and (=> t!5067 result!2687) b_and!4511)))

(declare-fun b_lambda!3309 () Bool)

(assert (=> (not b_lambda!3309) (not b!73421)))

(assert (=> b!73421 t!5065))

(declare-fun b_and!4513 () Bool)

(assert (= b_and!4509 (and (=> t!5065 result!2683) b_and!4513)))

(assert (=> b!73421 t!5067))

(declare-fun b_and!4515 () Bool)

(assert (= b_and!4511 (and (=> t!5067 result!2687) b_and!4515)))

(declare-fun m!71697 () Bool)

(assert (=> b!73420 m!71697))

(assert (=> b!73420 m!71697))

(declare-fun m!71699 () Bool)

(assert (=> b!73420 m!71699))

(declare-fun m!71701 () Bool)

(assert (=> d!16921 m!71701))

(assert (=> d!16921 m!71093))

(declare-fun m!71703 () Bool)

(assert (=> b!73410 m!71703))

(assert (=> b!73421 m!71083))

(declare-fun m!71705 () Bool)

(assert (=> b!73421 m!71705))

(declare-fun m!71707 () Bool)

(assert (=> b!73421 m!71707))

(assert (=> b!73421 m!71083))

(declare-fun m!71709 () Bool)

(assert (=> b!73421 m!71709))

(assert (=> b!73421 m!71697))

(declare-fun m!71711 () Bool)

(assert (=> b!73421 m!71711))

(assert (=> b!73421 m!71711))

(declare-fun m!71713 () Bool)

(assert (=> b!73421 m!71713))

(declare-fun m!71715 () Bool)

(assert (=> b!73421 m!71715))

(assert (=> b!73421 m!71707))

(assert (=> b!73419 m!71697))

(assert (=> b!73419 m!71697))

(declare-fun m!71717 () Bool)

(assert (=> b!73419 m!71717))

(assert (=> b!73417 m!71697))

(assert (=> b!73417 m!71697))

(assert (=> b!73417 m!71699))

(declare-fun m!71719 () Bool)

(assert (=> bm!6460 m!71719))

(assert (=> b!73413 m!71697))

(declare-fun m!71721 () Bool)

(assert (=> b!73413 m!71721))

(assert (=> b!73413 m!71083))

(assert (=> b!73413 m!71707))

(assert (=> b!73413 m!71083))

(assert (=> b!73413 m!71709))

(assert (=> b!73413 m!71697))

(assert (=> b!73413 m!71707))

(assert (=> b!73411 m!71719))

(declare-fun m!71723 () Bool)

(assert (=> b!73416 m!71723))

(assert (=> bm!6438 d!16921))

(assert (=> b!73188 d!16909))

(declare-fun d!16923 () Bool)

(declare-fun res!38912 () Bool)

(declare-fun e!48026 () Bool)

(assert (=> d!16923 (=> res!38912 e!48026)))

(assert (=> d!16923 (= res!38912 (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> d!16923 (= (arrayContainsKey!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!48026)))

(declare-fun b!73422 () Bool)

(declare-fun e!48027 () Bool)

(assert (=> b!73422 (= e!48026 e!48027)))

(declare-fun res!38913 () Bool)

(assert (=> b!73422 (=> (not res!38913) (not e!48027))))

(assert (=> b!73422 (= res!38913 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!73423 () Bool)

(assert (=> b!73423 (= e!48027 (arrayContainsKey!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!16923 (not res!38912)) b!73422))

(assert (= (and b!73422 res!38913) b!73423))

(assert (=> d!16923 m!71697))

(assert (=> b!73423 m!71053))

(declare-fun m!71725 () Bool)

(assert (=> b!73423 m!71725))

(assert (=> b!73210 d!16923))

(declare-fun d!16925 () Bool)

(declare-fun e!48029 () Bool)

(assert (=> d!16925 e!48029))

(declare-fun res!38914 () Bool)

(assert (=> d!16925 (=> res!38914 e!48029)))

(declare-fun lt!32856 () Bool)

(assert (=> d!16925 (= res!38914 (not lt!32856))))

(declare-fun lt!32854 () Bool)

(assert (=> d!16925 (= lt!32856 lt!32854)))

(declare-fun lt!32855 () Unit!2086)

(declare-fun e!48028 () Unit!2086)

(assert (=> d!16925 (= lt!32855 e!48028)))

(declare-fun c!10930 () Bool)

(assert (=> d!16925 (= c!10930 lt!32854)))

(assert (=> d!16925 (= lt!32854 (containsKey!136 (toList!735 lt!32717) (_1!1083 lt!32482)))))

(assert (=> d!16925 (= (contains!729 lt!32717 (_1!1083 lt!32482)) lt!32856)))

(declare-fun b!73424 () Bool)

(declare-fun lt!32857 () Unit!2086)

(assert (=> b!73424 (= e!48028 lt!32857)))

(assert (=> b!73424 (= lt!32857 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32717) (_1!1083 lt!32482)))))

(assert (=> b!73424 (isDefined!86 (getValueByKey!132 (toList!735 lt!32717) (_1!1083 lt!32482)))))

(declare-fun b!73425 () Bool)

(declare-fun Unit!2105 () Unit!2086)

(assert (=> b!73425 (= e!48028 Unit!2105)))

(declare-fun b!73426 () Bool)

(assert (=> b!73426 (= e!48029 (isDefined!86 (getValueByKey!132 (toList!735 lt!32717) (_1!1083 lt!32482))))))

(assert (= (and d!16925 c!10930) b!73424))

(assert (= (and d!16925 (not c!10930)) b!73425))

(assert (= (and d!16925 (not res!38914)) b!73426))

(declare-fun m!71727 () Bool)

(assert (=> d!16925 m!71727))

(declare-fun m!71729 () Bool)

(assert (=> b!73424 m!71729))

(assert (=> b!73424 m!71331))

(assert (=> b!73424 m!71331))

(declare-fun m!71731 () Bool)

(assert (=> b!73424 m!71731))

(assert (=> b!73426 m!71331))

(assert (=> b!73426 m!71331))

(assert (=> b!73426 m!71731))

(assert (=> d!16819 d!16925))

(declare-fun b!73430 () Bool)

(declare-fun e!48031 () Option!138)

(assert (=> b!73430 (= e!48031 None!136)))

(declare-fun b!73428 () Bool)

(declare-fun e!48030 () Option!138)

(assert (=> b!73428 (= e!48030 e!48031)))

(declare-fun c!10932 () Bool)

(assert (=> b!73428 (= c!10932 (and ((_ is Cons!1503) lt!32716) (not (= (_1!1083 (h!2090 lt!32716)) (_1!1083 lt!32482)))))))

(declare-fun b!73427 () Bool)

(assert (=> b!73427 (= e!48030 (Some!137 (_2!1083 (h!2090 lt!32716))))))

(declare-fun d!16927 () Bool)

(declare-fun c!10931 () Bool)

(assert (=> d!16927 (= c!10931 (and ((_ is Cons!1503) lt!32716) (= (_1!1083 (h!2090 lt!32716)) (_1!1083 lt!32482))))))

(assert (=> d!16927 (= (getValueByKey!132 lt!32716 (_1!1083 lt!32482)) e!48030)))

(declare-fun b!73429 () Bool)

(assert (=> b!73429 (= e!48031 (getValueByKey!132 (t!5068 lt!32716) (_1!1083 lt!32482)))))

(assert (= (and d!16927 c!10931) b!73427))

(assert (= (and d!16927 (not c!10931)) b!73428))

(assert (= (and b!73428 c!10932) b!73429))

(assert (= (and b!73428 (not c!10932)) b!73430))

(declare-fun m!71733 () Bool)

(assert (=> b!73429 m!71733))

(assert (=> d!16819 d!16927))

(declare-fun d!16929 () Bool)

(assert (=> d!16929 (= (getValueByKey!132 lt!32716 (_1!1083 lt!32482)) (Some!137 (_2!1083 lt!32482)))))

(declare-fun lt!32860 () Unit!2086)

(declare-fun choose!422 (List!1507 (_ BitVec 64) V!2947) Unit!2086)

(assert (=> d!16929 (= lt!32860 (choose!422 lt!32716 (_1!1083 lt!32482) (_2!1083 lt!32482)))))

(declare-fun e!48034 () Bool)

(assert (=> d!16929 e!48034))

(declare-fun res!38919 () Bool)

(assert (=> d!16929 (=> (not res!38919) (not e!48034))))

(assert (=> d!16929 (= res!38919 (isStrictlySorted!287 lt!32716))))

(assert (=> d!16929 (= (lemmaContainsTupThenGetReturnValue!51 lt!32716 (_1!1083 lt!32482) (_2!1083 lt!32482)) lt!32860)))

(declare-fun b!73435 () Bool)

(declare-fun res!38920 () Bool)

(assert (=> b!73435 (=> (not res!38920) (not e!48034))))

(assert (=> b!73435 (= res!38920 (containsKey!136 lt!32716 (_1!1083 lt!32482)))))

(declare-fun b!73436 () Bool)

(assert (=> b!73436 (= e!48034 (contains!730 lt!32716 (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))))))

(assert (= (and d!16929 res!38919) b!73435))

(assert (= (and b!73435 res!38920) b!73436))

(assert (=> d!16929 m!71325))

(declare-fun m!71735 () Bool)

(assert (=> d!16929 m!71735))

(declare-fun m!71737 () Bool)

(assert (=> d!16929 m!71737))

(declare-fun m!71739 () Bool)

(assert (=> b!73435 m!71739))

(declare-fun m!71741 () Bool)

(assert (=> b!73436 m!71741))

(assert (=> d!16819 d!16929))

(declare-fun b!73457 () Bool)

(declare-fun e!48045 () List!1507)

(declare-fun call!6471 () List!1507)

(assert (=> b!73457 (= e!48045 call!6471)))

(declare-fun b!73458 () Bool)

(declare-fun e!48047 () List!1507)

(declare-fun call!6470 () List!1507)

(assert (=> b!73458 (= e!48047 call!6470)))

(declare-fun c!10942 () Bool)

(declare-fun e!48048 () List!1507)

(declare-fun bm!6467 () Bool)

(declare-fun call!6472 () List!1507)

(declare-fun $colon$colon!65 (List!1507 tuple2!2146) List!1507)

(assert (=> bm!6467 (= call!6472 ($colon$colon!65 e!48048 (ite c!10942 (h!2090 (toList!735 (+!98 lt!32476 lt!32472))) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482)))))))

(declare-fun c!10943 () Bool)

(assert (=> bm!6467 (= c!10943 c!10942)))

(declare-fun b!73460 () Bool)

(declare-fun res!38926 () Bool)

(declare-fun e!48046 () Bool)

(assert (=> b!73460 (=> (not res!38926) (not e!48046))))

(declare-fun lt!32863 () List!1507)

(assert (=> b!73460 (= res!38926 (containsKey!136 lt!32863 (_1!1083 lt!32482)))))

(declare-fun b!73461 () Bool)

(declare-fun e!48049 () List!1507)

(assert (=> b!73461 (= e!48049 call!6472)))

(declare-fun b!73462 () Bool)

(declare-fun c!10941 () Bool)

(declare-fun c!10944 () Bool)

(assert (=> b!73462 (= e!48048 (ite c!10944 (t!5068 (toList!735 (+!98 lt!32476 lt!32472))) (ite c!10941 (Cons!1503 (h!2090 (toList!735 (+!98 lt!32476 lt!32472))) (t!5068 (toList!735 (+!98 lt!32476 lt!32472)))) Nil!1504)))))

(declare-fun b!73463 () Bool)

(assert (=> b!73463 (= e!48048 (insertStrictlySorted!53 (t!5068 (toList!735 (+!98 lt!32476 lt!32472))) (_1!1083 lt!32482) (_2!1083 lt!32482)))))

(declare-fun b!73464 () Bool)

(assert (=> b!73464 (= e!48046 (contains!730 lt!32863 (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))))))

(declare-fun bm!6468 () Bool)

(assert (=> bm!6468 (= call!6471 call!6472)))

(declare-fun b!73465 () Bool)

(assert (=> b!73465 (= e!48049 e!48045)))

(assert (=> b!73465 (= c!10944 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32476 lt!32472))) (= (_1!1083 (h!2090 (toList!735 (+!98 lt!32476 lt!32472)))) (_1!1083 lt!32482))))))

(declare-fun b!73459 () Bool)

(assert (=> b!73459 (= c!10941 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32476 lt!32472))) (bvsgt (_1!1083 (h!2090 (toList!735 (+!98 lt!32476 lt!32472)))) (_1!1083 lt!32482))))))

(assert (=> b!73459 (= e!48045 e!48047)))

(declare-fun d!16931 () Bool)

(assert (=> d!16931 e!48046))

(declare-fun res!38925 () Bool)

(assert (=> d!16931 (=> (not res!38925) (not e!48046))))

(assert (=> d!16931 (= res!38925 (isStrictlySorted!287 lt!32863))))

(assert (=> d!16931 (= lt!32863 e!48049)))

(assert (=> d!16931 (= c!10942 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32476 lt!32472))) (bvslt (_1!1083 (h!2090 (toList!735 (+!98 lt!32476 lt!32472)))) (_1!1083 lt!32482))))))

(assert (=> d!16931 (isStrictlySorted!287 (toList!735 (+!98 lt!32476 lt!32472)))))

(assert (=> d!16931 (= (insertStrictlySorted!53 (toList!735 (+!98 lt!32476 lt!32472)) (_1!1083 lt!32482) (_2!1083 lt!32482)) lt!32863)))

(declare-fun b!73466 () Bool)

(assert (=> b!73466 (= e!48047 call!6470)))

(declare-fun bm!6469 () Bool)

(assert (=> bm!6469 (= call!6470 call!6471)))

(assert (= (and d!16931 c!10942) b!73461))

(assert (= (and d!16931 (not c!10942)) b!73465))

(assert (= (and b!73465 c!10944) b!73457))

(assert (= (and b!73465 (not c!10944)) b!73459))

(assert (= (and b!73459 c!10941) b!73466))

(assert (= (and b!73459 (not c!10941)) b!73458))

(assert (= (or b!73466 b!73458) bm!6469))

(assert (= (or b!73457 bm!6469) bm!6468))

(assert (= (or b!73461 bm!6468) bm!6467))

(assert (= (and bm!6467 c!10943) b!73463))

(assert (= (and bm!6467 (not c!10943)) b!73462))

(assert (= (and d!16931 res!38925) b!73460))

(assert (= (and b!73460 res!38926) b!73464))

(declare-fun m!71743 () Bool)

(assert (=> b!73460 m!71743))

(declare-fun m!71745 () Bool)

(assert (=> d!16931 m!71745))

(declare-fun m!71747 () Bool)

(assert (=> d!16931 m!71747))

(declare-fun m!71749 () Bool)

(assert (=> b!73463 m!71749))

(declare-fun m!71751 () Bool)

(assert (=> b!73464 m!71751))

(declare-fun m!71753 () Bool)

(assert (=> bm!6467 m!71753))

(assert (=> d!16819 d!16931))

(declare-fun d!16933 () Bool)

(declare-fun lt!32866 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!76 (List!1507) (InoxSet tuple2!2146))

(assert (=> d!16933 (= lt!32866 (select (content!76 (toList!735 lt!32717)) lt!32482))))

(declare-fun e!48054 () Bool)

(assert (=> d!16933 (= lt!32866 e!48054)))

(declare-fun res!38932 () Bool)

(assert (=> d!16933 (=> (not res!38932) (not e!48054))))

(assert (=> d!16933 (= res!38932 ((_ is Cons!1503) (toList!735 lt!32717)))))

(assert (=> d!16933 (= (contains!730 (toList!735 lt!32717) lt!32482) lt!32866)))

(declare-fun b!73471 () Bool)

(declare-fun e!48055 () Bool)

(assert (=> b!73471 (= e!48054 e!48055)))

(declare-fun res!38931 () Bool)

(assert (=> b!73471 (=> res!38931 e!48055)))

(assert (=> b!73471 (= res!38931 (= (h!2090 (toList!735 lt!32717)) lt!32482))))

(declare-fun b!73472 () Bool)

(assert (=> b!73472 (= e!48055 (contains!730 (t!5068 (toList!735 lt!32717)) lt!32482))))

(assert (= (and d!16933 res!38932) b!73471))

(assert (= (and b!73471 (not res!38931)) b!73472))

(declare-fun m!71755 () Bool)

(assert (=> d!16933 m!71755))

(declare-fun m!71757 () Bool)

(assert (=> d!16933 m!71757))

(declare-fun m!71759 () Bool)

(assert (=> b!73472 m!71759))

(assert (=> b!73200 d!16933))

(declare-fun b!73473 () Bool)

(declare-fun e!48056 () Bool)

(declare-fun e!48058 () Bool)

(assert (=> b!73473 (= e!48056 e!48058)))

(declare-fun res!38935 () Bool)

(assert (=> b!73473 (=> (not res!38935) (not e!48058))))

(declare-fun e!48057 () Bool)

(assert (=> b!73473 (= res!38935 (not e!48057))))

(declare-fun res!38933 () Bool)

(assert (=> b!73473 (=> (not res!38933) (not e!48057))))

(assert (=> b!73473 (= res!38933 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73474 () Bool)

(declare-fun e!48059 () Bool)

(declare-fun call!6473 () Bool)

(assert (=> b!73474 (= e!48059 call!6473)))

(declare-fun b!73475 () Bool)

(assert (=> b!73475 (= e!48059 call!6473)))

(declare-fun b!73476 () Bool)

(assert (=> b!73476 (= e!48057 (contains!731 Nil!1505 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73477 () Bool)

(assert (=> b!73477 (= e!48058 e!48059)))

(declare-fun c!10945 () Bool)

(assert (=> b!73477 (= c!10945 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6470 () Bool)

(assert (=> bm!6470 (= call!6473 (arrayNoDuplicates!0 (_keys!3865 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10945 (Cons!1504 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) Nil!1505) Nil!1505)))))

(declare-fun d!16935 () Bool)

(declare-fun res!38934 () Bool)

(assert (=> d!16935 (=> res!38934 e!48056)))

(assert (=> d!16935 (= res!38934 (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!16935 (= (arrayNoDuplicates!0 (_keys!3865 newMap!16) #b00000000000000000000000000000000 Nil!1505) e!48056)))

(assert (= (and d!16935 (not res!38934)) b!73473))

(assert (= (and b!73473 res!38933) b!73476))

(assert (= (and b!73473 res!38935) b!73477))

(assert (= (and b!73477 c!10945) b!73474))

(assert (= (and b!73477 (not c!10945)) b!73475))

(assert (= (or b!73474 b!73475) bm!6470))

(assert (=> b!73473 m!71397))

(assert (=> b!73473 m!71397))

(assert (=> b!73473 m!71411))

(assert (=> b!73476 m!71397))

(assert (=> b!73476 m!71397))

(declare-fun m!71761 () Bool)

(assert (=> b!73476 m!71761))

(assert (=> b!73477 m!71397))

(assert (=> b!73477 m!71397))

(assert (=> b!73477 m!71411))

(assert (=> bm!6470 m!71397))

(declare-fun m!71763 () Bool)

(assert (=> bm!6470 m!71763))

(assert (=> b!73240 d!16935))

(declare-fun b!73486 () Bool)

(declare-fun e!48064 () (_ BitVec 32))

(declare-fun call!6476 () (_ BitVec 32))

(assert (=> b!73486 (= e!48064 call!6476)))

(declare-fun b!73487 () Bool)

(declare-fun e!48065 () (_ BitVec 32))

(assert (=> b!73487 (= e!48065 e!48064)))

(declare-fun c!10950 () Bool)

(assert (=> b!73487 (= c!10950 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6473 () Bool)

(assert (=> bm!6473 (= call!6476 (arrayCountValidKeys!0 (_keys!3865 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!73488 () Bool)

(assert (=> b!73488 (= e!48065 #b00000000000000000000000000000000)))

(declare-fun b!73489 () Bool)

(assert (=> b!73489 (= e!48064 (bvadd #b00000000000000000000000000000001 call!6476))))

(declare-fun d!16937 () Bool)

(declare-fun lt!32869 () (_ BitVec 32))

(assert (=> d!16937 (and (bvsge lt!32869 #b00000000000000000000000000000000) (bvsle lt!32869 (bvsub (size!2096 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!16937 (= lt!32869 e!48065)))

(declare-fun c!10951 () Bool)

(assert (=> d!16937 (= c!10951 (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!16937 (and (bvsle #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2096 (_keys!3865 newMap!16)) (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!16937 (= (arrayCountValidKeys!0 (_keys!3865 newMap!16) #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))) lt!32869)))

(assert (= (and d!16937 c!10951) b!73488))

(assert (= (and d!16937 (not c!10951)) b!73487))

(assert (= (and b!73487 c!10950) b!73489))

(assert (= (and b!73487 (not c!10950)) b!73486))

(assert (= (or b!73489 b!73486) bm!6473))

(assert (=> b!73487 m!71397))

(assert (=> b!73487 m!71397))

(assert (=> b!73487 m!71411))

(declare-fun m!71765 () Bool)

(assert (=> bm!6473 m!71765))

(assert (=> b!73238 d!16937))

(declare-fun d!16939 () Bool)

(assert (=> d!16939 (= (+!98 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32610 lt!32481 (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32872 () Unit!2086)

(declare-fun choose!423 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 V!2947 Int) Unit!2086)

(assert (=> d!16939 (= lt!32872 (choose!423 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) lt!32610 (zeroValue!2115 newMap!16) lt!32481 (minValue!2115 newMap!16) (defaultEntry!2213 newMap!16)))))

(assert (=> d!16939 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!16939 (= (lemmaChangeZeroKeyThenAddPairToListMap!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) lt!32610 (zeroValue!2115 newMap!16) lt!32481 (minValue!2115 newMap!16) (defaultEntry!2213 newMap!16)) lt!32872)))

(declare-fun bs!3145 () Bool)

(assert (= bs!3145 d!16939))

(declare-fun m!71767 () Bool)

(assert (=> bs!3145 m!71767))

(assert (=> bs!3145 m!71191))

(assert (=> bs!3145 m!71191))

(declare-fun m!71769 () Bool)

(assert (=> bs!3145 m!71769))

(declare-fun m!71771 () Bool)

(assert (=> bs!3145 m!71771))

(assert (=> bs!3145 m!71423))

(assert (=> b!73086 d!16939))

(declare-fun d!16941 () Bool)

(declare-fun e!48067 () Bool)

(assert (=> d!16941 e!48067))

(declare-fun res!38936 () Bool)

(assert (=> d!16941 (=> res!38936 e!48067)))

(declare-fun lt!32875 () Bool)

(assert (=> d!16941 (= res!38936 (not lt!32875))))

(declare-fun lt!32873 () Bool)

(assert (=> d!16941 (= lt!32875 lt!32873)))

(declare-fun lt!32874 () Unit!2086)

(declare-fun e!48066 () Unit!2086)

(assert (=> d!16941 (= lt!32874 e!48066)))

(declare-fun c!10952 () Bool)

(assert (=> d!16941 (= c!10952 lt!32873)))

(assert (=> d!16941 (= lt!32873 (containsKey!136 (toList!735 lt!32725) (_1!1083 lt!32472)))))

(assert (=> d!16941 (= (contains!729 lt!32725 (_1!1083 lt!32472)) lt!32875)))

(declare-fun b!73490 () Bool)

(declare-fun lt!32876 () Unit!2086)

(assert (=> b!73490 (= e!48066 lt!32876)))

(assert (=> b!73490 (= lt!32876 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32725) (_1!1083 lt!32472)))))

(assert (=> b!73490 (isDefined!86 (getValueByKey!132 (toList!735 lt!32725) (_1!1083 lt!32472)))))

(declare-fun b!73491 () Bool)

(declare-fun Unit!2106 () Unit!2086)

(assert (=> b!73491 (= e!48066 Unit!2106)))

(declare-fun b!73492 () Bool)

(assert (=> b!73492 (= e!48067 (isDefined!86 (getValueByKey!132 (toList!735 lt!32725) (_1!1083 lt!32472))))))

(assert (= (and d!16941 c!10952) b!73490))

(assert (= (and d!16941 (not c!10952)) b!73491))

(assert (= (and d!16941 (not res!38936)) b!73492))

(declare-fun m!71773 () Bool)

(assert (=> d!16941 m!71773))

(declare-fun m!71775 () Bool)

(assert (=> b!73490 m!71775))

(assert (=> b!73490 m!71355))

(assert (=> b!73490 m!71355))

(declare-fun m!71777 () Bool)

(assert (=> b!73490 m!71777))

(assert (=> b!73492 m!71355))

(assert (=> b!73492 m!71355))

(assert (=> b!73492 m!71777))

(assert (=> d!16825 d!16941))

(declare-fun b!73496 () Bool)

(declare-fun e!48069 () Option!138)

(assert (=> b!73496 (= e!48069 None!136)))

(declare-fun b!73494 () Bool)

(declare-fun e!48068 () Option!138)

(assert (=> b!73494 (= e!48068 e!48069)))

(declare-fun c!10954 () Bool)

(assert (=> b!73494 (= c!10954 (and ((_ is Cons!1503) lt!32724) (not (= (_1!1083 (h!2090 lt!32724)) (_1!1083 lt!32472)))))))

(declare-fun b!73493 () Bool)

(assert (=> b!73493 (= e!48068 (Some!137 (_2!1083 (h!2090 lt!32724))))))

(declare-fun d!16943 () Bool)

(declare-fun c!10953 () Bool)

(assert (=> d!16943 (= c!10953 (and ((_ is Cons!1503) lt!32724) (= (_1!1083 (h!2090 lt!32724)) (_1!1083 lt!32472))))))

(assert (=> d!16943 (= (getValueByKey!132 lt!32724 (_1!1083 lt!32472)) e!48068)))

(declare-fun b!73495 () Bool)

(assert (=> b!73495 (= e!48069 (getValueByKey!132 (t!5068 lt!32724) (_1!1083 lt!32472)))))

(assert (= (and d!16943 c!10953) b!73493))

(assert (= (and d!16943 (not c!10953)) b!73494))

(assert (= (and b!73494 c!10954) b!73495))

(assert (= (and b!73494 (not c!10954)) b!73496))

(declare-fun m!71779 () Bool)

(assert (=> b!73495 m!71779))

(assert (=> d!16825 d!16943))

(declare-fun d!16945 () Bool)

(assert (=> d!16945 (= (getValueByKey!132 lt!32724 (_1!1083 lt!32472)) (Some!137 (_2!1083 lt!32472)))))

(declare-fun lt!32877 () Unit!2086)

(assert (=> d!16945 (= lt!32877 (choose!422 lt!32724 (_1!1083 lt!32472) (_2!1083 lt!32472)))))

(declare-fun e!48070 () Bool)

(assert (=> d!16945 e!48070))

(declare-fun res!38937 () Bool)

(assert (=> d!16945 (=> (not res!38937) (not e!48070))))

(assert (=> d!16945 (= res!38937 (isStrictlySorted!287 lt!32724))))

(assert (=> d!16945 (= (lemmaContainsTupThenGetReturnValue!51 lt!32724 (_1!1083 lt!32472) (_2!1083 lt!32472)) lt!32877)))

(declare-fun b!73497 () Bool)

(declare-fun res!38938 () Bool)

(assert (=> b!73497 (=> (not res!38938) (not e!48070))))

(assert (=> b!73497 (= res!38938 (containsKey!136 lt!32724 (_1!1083 lt!32472)))))

(declare-fun b!73498 () Bool)

(assert (=> b!73498 (= e!48070 (contains!730 lt!32724 (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))))))

(assert (= (and d!16945 res!38937) b!73497))

(assert (= (and b!73497 res!38938) b!73498))

(assert (=> d!16945 m!71349))

(declare-fun m!71781 () Bool)

(assert (=> d!16945 m!71781))

(declare-fun m!71783 () Bool)

(assert (=> d!16945 m!71783))

(declare-fun m!71785 () Bool)

(assert (=> b!73497 m!71785))

(declare-fun m!71787 () Bool)

(assert (=> b!73498 m!71787))

(assert (=> d!16825 d!16945))

(declare-fun b!73499 () Bool)

(declare-fun e!48071 () List!1507)

(declare-fun call!6478 () List!1507)

(assert (=> b!73499 (= e!48071 call!6478)))

(declare-fun b!73500 () Bool)

(declare-fun e!48073 () List!1507)

(declare-fun call!6477 () List!1507)

(assert (=> b!73500 (= e!48073 call!6477)))

(declare-fun c!10956 () Bool)

(declare-fun bm!6474 () Bool)

(declare-fun e!48074 () List!1507)

(declare-fun call!6479 () List!1507)

(assert (=> bm!6474 (= call!6479 ($colon$colon!65 e!48074 (ite c!10956 (h!2090 (toList!735 lt!32476)) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472)))))))

(declare-fun c!10957 () Bool)

(assert (=> bm!6474 (= c!10957 c!10956)))

(declare-fun b!73502 () Bool)

(declare-fun res!38940 () Bool)

(declare-fun e!48072 () Bool)

(assert (=> b!73502 (=> (not res!38940) (not e!48072))))

(declare-fun lt!32878 () List!1507)

(assert (=> b!73502 (= res!38940 (containsKey!136 lt!32878 (_1!1083 lt!32472)))))

(declare-fun b!73503 () Bool)

(declare-fun e!48075 () List!1507)

(assert (=> b!73503 (= e!48075 call!6479)))

(declare-fun c!10958 () Bool)

(declare-fun b!73504 () Bool)

(declare-fun c!10955 () Bool)

(assert (=> b!73504 (= e!48074 (ite c!10958 (t!5068 (toList!735 lt!32476)) (ite c!10955 (Cons!1503 (h!2090 (toList!735 lt!32476)) (t!5068 (toList!735 lt!32476))) Nil!1504)))))

(declare-fun b!73505 () Bool)

(assert (=> b!73505 (= e!48074 (insertStrictlySorted!53 (t!5068 (toList!735 lt!32476)) (_1!1083 lt!32472) (_2!1083 lt!32472)))))

(declare-fun b!73506 () Bool)

(assert (=> b!73506 (= e!48072 (contains!730 lt!32878 (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))))))

(declare-fun bm!6475 () Bool)

(assert (=> bm!6475 (= call!6478 call!6479)))

(declare-fun b!73507 () Bool)

(assert (=> b!73507 (= e!48075 e!48071)))

(assert (=> b!73507 (= c!10958 (and ((_ is Cons!1503) (toList!735 lt!32476)) (= (_1!1083 (h!2090 (toList!735 lt!32476))) (_1!1083 lt!32472))))))

(declare-fun b!73501 () Bool)

(assert (=> b!73501 (= c!10955 (and ((_ is Cons!1503) (toList!735 lt!32476)) (bvsgt (_1!1083 (h!2090 (toList!735 lt!32476))) (_1!1083 lt!32472))))))

(assert (=> b!73501 (= e!48071 e!48073)))

(declare-fun d!16947 () Bool)

(assert (=> d!16947 e!48072))

(declare-fun res!38939 () Bool)

(assert (=> d!16947 (=> (not res!38939) (not e!48072))))

(assert (=> d!16947 (= res!38939 (isStrictlySorted!287 lt!32878))))

(assert (=> d!16947 (= lt!32878 e!48075)))

(assert (=> d!16947 (= c!10956 (and ((_ is Cons!1503) (toList!735 lt!32476)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32476))) (_1!1083 lt!32472))))))

(assert (=> d!16947 (isStrictlySorted!287 (toList!735 lt!32476))))

(assert (=> d!16947 (= (insertStrictlySorted!53 (toList!735 lt!32476) (_1!1083 lt!32472) (_2!1083 lt!32472)) lt!32878)))

(declare-fun b!73508 () Bool)

(assert (=> b!73508 (= e!48073 call!6477)))

(declare-fun bm!6476 () Bool)

(assert (=> bm!6476 (= call!6477 call!6478)))

(assert (= (and d!16947 c!10956) b!73503))

(assert (= (and d!16947 (not c!10956)) b!73507))

(assert (= (and b!73507 c!10958) b!73499))

(assert (= (and b!73507 (not c!10958)) b!73501))

(assert (= (and b!73501 c!10955) b!73508))

(assert (= (and b!73501 (not c!10955)) b!73500))

(assert (= (or b!73508 b!73500) bm!6476))

(assert (= (or b!73499 bm!6476) bm!6475))

(assert (= (or b!73503 bm!6475) bm!6474))

(assert (= (and bm!6474 c!10957) b!73505))

(assert (= (and bm!6474 (not c!10957)) b!73504))

(assert (= (and d!16947 res!38939) b!73502))

(assert (= (and b!73502 res!38940) b!73506))

(declare-fun m!71789 () Bool)

(assert (=> b!73502 m!71789))

(declare-fun m!71791 () Bool)

(assert (=> d!16947 m!71791))

(declare-fun m!71793 () Bool)

(assert (=> d!16947 m!71793))

(declare-fun m!71795 () Bool)

(assert (=> b!73505 m!71795))

(declare-fun m!71797 () Bool)

(assert (=> b!73506 m!71797))

(declare-fun m!71799 () Bool)

(assert (=> bm!6474 m!71799))

(assert (=> d!16825 d!16947))

(declare-fun d!16949 () Bool)

(assert (=> d!16949 (= (apply!75 (+!98 lt!32670 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32658) (apply!75 lt!32670 lt!32658))))

(declare-fun lt!32881 () Unit!2086)

(declare-fun choose!424 (ListLongMap!1439 (_ BitVec 64) V!2947 (_ BitVec 64)) Unit!2086)

(assert (=> d!16949 (= lt!32881 (choose!424 lt!32670 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))) lt!32658))))

(declare-fun e!48078 () Bool)

(assert (=> d!16949 e!48078))

(declare-fun res!38943 () Bool)

(assert (=> d!16949 (=> (not res!38943) (not e!48078))))

(assert (=> d!16949 (= res!38943 (contains!729 lt!32670 lt!32658))))

(assert (=> d!16949 (= (addApplyDifferent!51 lt!32670 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))) lt!32658) lt!32881)))

(declare-fun b!73512 () Bool)

(assert (=> b!73512 (= e!48078 (not (= lt!32658 lt!32660)))))

(assert (= (and d!16949 res!38943) b!73512))

(assert (=> d!16949 m!71237))

(assert (=> d!16949 m!71237))

(assert (=> d!16949 m!71251))

(assert (=> d!16949 m!71255))

(declare-fun m!71801 () Bool)

(assert (=> d!16949 m!71801))

(declare-fun m!71803 () Bool)

(assert (=> d!16949 m!71803))

(assert (=> b!73136 d!16949))

(declare-fun d!16951 () Bool)

(assert (=> d!16951 (= (apply!75 lt!32670 lt!32658) (get!1158 (getValueByKey!132 (toList!735 lt!32670) lt!32658)))))

(declare-fun bs!3146 () Bool)

(assert (= bs!3146 d!16951))

(declare-fun m!71805 () Bool)

(assert (=> bs!3146 m!71805))

(assert (=> bs!3146 m!71805))

(declare-fun m!71807 () Bool)

(assert (=> bs!3146 m!71807))

(assert (=> b!73136 d!16951))

(declare-fun d!16953 () Bool)

(assert (=> d!16953 (= (apply!75 (+!98 lt!32664 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32672) (apply!75 lt!32664 lt!32672))))

(declare-fun lt!32882 () Unit!2086)

(assert (=> d!16953 (= lt!32882 (choose!424 lt!32664 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))) lt!32672))))

(declare-fun e!48079 () Bool)

(assert (=> d!16953 e!48079))

(declare-fun res!38944 () Bool)

(assert (=> d!16953 (=> (not res!38944) (not e!48079))))

(assert (=> d!16953 (= res!38944 (contains!729 lt!32664 lt!32672))))

(assert (=> d!16953 (= (addApplyDifferent!51 lt!32664 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))) lt!32672) lt!32882)))

(declare-fun b!73513 () Bool)

(assert (=> b!73513 (= e!48079 (not (= lt!32672 lt!32674)))))

(assert (= (and d!16953 res!38944) b!73513))

(assert (=> d!16953 m!71235))

(assert (=> d!16953 m!71235))

(assert (=> d!16953 m!71253))

(assert (=> d!16953 m!71243))

(declare-fun m!71809 () Bool)

(assert (=> d!16953 m!71809))

(declare-fun m!71811 () Bool)

(assert (=> d!16953 m!71811))

(assert (=> b!73136 d!16953))

(assert (=> b!73136 d!16813))

(declare-fun d!16955 () Bool)

(assert (=> d!16955 (= (apply!75 (+!98 lt!32675 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32657) (apply!75 lt!32675 lt!32657))))

(declare-fun lt!32883 () Unit!2086)

(assert (=> d!16955 (= lt!32883 (choose!424 lt!32675 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) lt!32657))))

(declare-fun e!48080 () Bool)

(assert (=> d!16955 e!48080))

(declare-fun res!38945 () Bool)

(assert (=> d!16955 (=> (not res!38945) (not e!48080))))

(assert (=> d!16955 (= res!38945 (contains!729 lt!32675 lt!32657))))

(assert (=> d!16955 (= (addApplyDifferent!51 lt!32675 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) lt!32657) lt!32883)))

(declare-fun b!73514 () Bool)

(assert (=> b!73514 (= e!48080 (not (= lt!32657 lt!32665)))))

(assert (= (and d!16955 res!38945) b!73514))

(assert (=> d!16955 m!71239))

(assert (=> d!16955 m!71239))

(assert (=> d!16955 m!71257))

(assert (=> d!16955 m!71261))

(declare-fun m!71813 () Bool)

(assert (=> d!16955 m!71813))

(declare-fun m!71815 () Bool)

(assert (=> d!16955 m!71815))

(assert (=> b!73136 d!16955))

(declare-fun d!16957 () Bool)

(declare-fun e!48081 () Bool)

(assert (=> d!16957 e!48081))

(declare-fun res!38946 () Bool)

(assert (=> d!16957 (=> (not res!38946) (not e!48081))))

(declare-fun lt!32887 () ListLongMap!1439)

(assert (=> d!16957 (= res!38946 (contains!729 lt!32887 (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun lt!32886 () List!1507)

(assert (=> d!16957 (= lt!32887 (ListLongMap!1440 lt!32886))))

(declare-fun lt!32884 () Unit!2086)

(declare-fun lt!32885 () Unit!2086)

(assert (=> d!16957 (= lt!32884 lt!32885)))

(assert (=> d!16957 (= (getValueByKey!132 lt!32886 (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16957 (= lt!32885 (lemmaContainsTupThenGetReturnValue!51 lt!32886 (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16957 (= lt!32886 (insertStrictlySorted!53 (toList!735 lt!32677) (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16957 (= (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32887)))

(declare-fun b!73515 () Bool)

(declare-fun res!38947 () Bool)

(assert (=> b!73515 (=> (not res!38947) (not e!48081))))

(assert (=> b!73515 (= res!38947 (= (getValueByKey!132 (toList!735 lt!32887) (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun b!73516 () Bool)

(assert (=> b!73516 (= e!48081 (contains!730 (toList!735 lt!32887) (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(assert (= (and d!16957 res!38946) b!73515))

(assert (= (and b!73515 res!38947) b!73516))

(declare-fun m!71817 () Bool)

(assert (=> d!16957 m!71817))

(declare-fun m!71819 () Bool)

(assert (=> d!16957 m!71819))

(declare-fun m!71821 () Bool)

(assert (=> d!16957 m!71821))

(declare-fun m!71823 () Bool)

(assert (=> d!16957 m!71823))

(declare-fun m!71825 () Bool)

(assert (=> b!73515 m!71825))

(declare-fun m!71827 () Bool)

(assert (=> b!73516 m!71827))

(assert (=> b!73136 d!16957))

(declare-fun d!16959 () Bool)

(assert (=> d!16959 (= (apply!75 (+!98 lt!32670 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32658) (get!1158 (getValueByKey!132 (toList!735 (+!98 lt!32670 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32658)))))

(declare-fun bs!3147 () Bool)

(assert (= bs!3147 d!16959))

(declare-fun m!71829 () Bool)

(assert (=> bs!3147 m!71829))

(assert (=> bs!3147 m!71829))

(declare-fun m!71831 () Bool)

(assert (=> bs!3147 m!71831))

(assert (=> b!73136 d!16959))

(declare-fun d!16961 () Bool)

(assert (=> d!16961 (= (apply!75 lt!32664 lt!32672) (get!1158 (getValueByKey!132 (toList!735 lt!32664) lt!32672)))))

(declare-fun bs!3148 () Bool)

(assert (= bs!3148 d!16961))

(declare-fun m!71833 () Bool)

(assert (=> bs!3148 m!71833))

(assert (=> bs!3148 m!71833))

(declare-fun m!71835 () Bool)

(assert (=> bs!3148 m!71835))

(assert (=> b!73136 d!16961))

(declare-fun d!16963 () Bool)

(assert (=> d!16963 (= (apply!75 (+!98 lt!32675 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32657) (get!1158 (getValueByKey!132 (toList!735 (+!98 lt!32675 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32657)))))

(declare-fun bs!3149 () Bool)

(assert (= bs!3149 d!16963))

(declare-fun m!71837 () Bool)

(assert (=> bs!3149 m!71837))

(assert (=> bs!3149 m!71837))

(declare-fun m!71839 () Bool)

(assert (=> bs!3149 m!71839))

(assert (=> b!73136 d!16963))

(declare-fun d!16965 () Bool)

(declare-fun e!48083 () Bool)

(assert (=> d!16965 e!48083))

(declare-fun res!38948 () Bool)

(assert (=> d!16965 (=> res!38948 e!48083)))

(declare-fun lt!32890 () Bool)

(assert (=> d!16965 (= res!38948 (not lt!32890))))

(declare-fun lt!32888 () Bool)

(assert (=> d!16965 (= lt!32890 lt!32888)))

(declare-fun lt!32889 () Unit!2086)

(declare-fun e!48082 () Unit!2086)

(assert (=> d!16965 (= lt!32889 e!48082)))

(declare-fun c!10959 () Bool)

(assert (=> d!16965 (= c!10959 lt!32888)))

(assert (=> d!16965 (= lt!32888 (containsKey!136 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32662))))

(assert (=> d!16965 (= (contains!729 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32662) lt!32890)))

(declare-fun b!73517 () Bool)

(declare-fun lt!32891 () Unit!2086)

(assert (=> b!73517 (= e!48082 lt!32891)))

(assert (=> b!73517 (= lt!32891 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32662))))

(assert (=> b!73517 (isDefined!86 (getValueByKey!132 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32662))))

(declare-fun b!73518 () Bool)

(declare-fun Unit!2107 () Unit!2086)

(assert (=> b!73518 (= e!48082 Unit!2107)))

(declare-fun b!73519 () Bool)

(assert (=> b!73519 (= e!48083 (isDefined!86 (getValueByKey!132 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32662)))))

(assert (= (and d!16965 c!10959) b!73517))

(assert (= (and d!16965 (not c!10959)) b!73518))

(assert (= (and d!16965 (not res!38948)) b!73519))

(declare-fun m!71841 () Bool)

(assert (=> d!16965 m!71841))

(declare-fun m!71843 () Bool)

(assert (=> b!73517 m!71843))

(declare-fun m!71845 () Bool)

(assert (=> b!73517 m!71845))

(assert (=> b!73517 m!71845))

(declare-fun m!71847 () Bool)

(assert (=> b!73517 m!71847))

(assert (=> b!73519 m!71845))

(assert (=> b!73519 m!71845))

(assert (=> b!73519 m!71847))

(assert (=> b!73136 d!16965))

(declare-fun d!16967 () Bool)

(assert (=> d!16967 (= (apply!75 (+!98 lt!32664 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32672) (get!1158 (getValueByKey!132 (toList!735 (+!98 lt!32664 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32672)))))

(declare-fun bs!3150 () Bool)

(assert (= bs!3150 d!16967))

(declare-fun m!71849 () Bool)

(assert (=> bs!3150 m!71849))

(assert (=> bs!3150 m!71849))

(declare-fun m!71851 () Bool)

(assert (=> bs!3150 m!71851))

(assert (=> b!73136 d!16967))

(declare-fun d!16969 () Bool)

(declare-fun e!48084 () Bool)

(assert (=> d!16969 e!48084))

(declare-fun res!38949 () Bool)

(assert (=> d!16969 (=> (not res!38949) (not e!48084))))

(declare-fun lt!32895 () ListLongMap!1439)

(assert (=> d!16969 (= res!38949 (contains!729 lt!32895 (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun lt!32894 () List!1507)

(assert (=> d!16969 (= lt!32895 (ListLongMap!1440 lt!32894))))

(declare-fun lt!32892 () Unit!2086)

(declare-fun lt!32893 () Unit!2086)

(assert (=> d!16969 (= lt!32892 lt!32893)))

(assert (=> d!16969 (= (getValueByKey!132 lt!32894 (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16969 (= lt!32893 (lemmaContainsTupThenGetReturnValue!51 lt!32894 (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16969 (= lt!32894 (insertStrictlySorted!53 (toList!735 lt!32664) (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16969 (= (+!98 lt!32664 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32895)))

(declare-fun b!73520 () Bool)

(declare-fun res!38950 () Bool)

(assert (=> b!73520 (=> (not res!38950) (not e!48084))))

(assert (=> b!73520 (= res!38950 (= (getValueByKey!132 (toList!735 lt!32895) (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun b!73521 () Bool)

(assert (=> b!73521 (= e!48084 (contains!730 (toList!735 lt!32895) (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(assert (= (and d!16969 res!38949) b!73520))

(assert (= (and b!73520 res!38950) b!73521))

(declare-fun m!71853 () Bool)

(assert (=> d!16969 m!71853))

(declare-fun m!71855 () Bool)

(assert (=> d!16969 m!71855))

(declare-fun m!71857 () Bool)

(assert (=> d!16969 m!71857))

(declare-fun m!71859 () Bool)

(assert (=> d!16969 m!71859))

(declare-fun m!71861 () Bool)

(assert (=> b!73520 m!71861))

(declare-fun m!71863 () Bool)

(assert (=> b!73521 m!71863))

(assert (=> b!73136 d!16969))

(declare-fun d!16971 () Bool)

(assert (=> d!16971 (= (apply!75 lt!32675 lt!32657) (get!1158 (getValueByKey!132 (toList!735 lt!32675) lt!32657)))))

(declare-fun bs!3151 () Bool)

(assert (= bs!3151 d!16971))

(declare-fun m!71865 () Bool)

(assert (=> bs!3151 m!71865))

(assert (=> bs!3151 m!71865))

(declare-fun m!71867 () Bool)

(assert (=> bs!3151 m!71867))

(assert (=> b!73136 d!16971))

(declare-fun d!16973 () Bool)

(declare-fun e!48085 () Bool)

(assert (=> d!16973 e!48085))

(declare-fun res!38951 () Bool)

(assert (=> d!16973 (=> (not res!38951) (not e!48085))))

(declare-fun lt!32899 () ListLongMap!1439)

(assert (=> d!16973 (= res!38951 (contains!729 lt!32899 (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun lt!32898 () List!1507)

(assert (=> d!16973 (= lt!32899 (ListLongMap!1440 lt!32898))))

(declare-fun lt!32896 () Unit!2086)

(declare-fun lt!32897 () Unit!2086)

(assert (=> d!16973 (= lt!32896 lt!32897)))

(assert (=> d!16973 (= (getValueByKey!132 lt!32898 (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16973 (= lt!32897 (lemmaContainsTupThenGetReturnValue!51 lt!32898 (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16973 (= lt!32898 (insertStrictlySorted!53 (toList!735 lt!32670) (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16973 (= (+!98 lt!32670 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32899)))

(declare-fun b!73522 () Bool)

(declare-fun res!38952 () Bool)

(assert (=> b!73522 (=> (not res!38952) (not e!48085))))

(assert (=> b!73522 (= res!38952 (= (getValueByKey!132 (toList!735 lt!32899) (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun b!73523 () Bool)

(assert (=> b!73523 (= e!48085 (contains!730 (toList!735 lt!32899) (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(assert (= (and d!16973 res!38951) b!73522))

(assert (= (and b!73522 res!38952) b!73523))

(declare-fun m!71869 () Bool)

(assert (=> d!16973 m!71869))

(declare-fun m!71871 () Bool)

(assert (=> d!16973 m!71871))

(declare-fun m!71873 () Bool)

(assert (=> d!16973 m!71873))

(declare-fun m!71875 () Bool)

(assert (=> d!16973 m!71875))

(declare-fun m!71877 () Bool)

(assert (=> b!73522 m!71877))

(declare-fun m!71879 () Bool)

(assert (=> b!73523 m!71879))

(assert (=> b!73136 d!16973))

(declare-fun d!16975 () Bool)

(declare-fun e!48086 () Bool)

(assert (=> d!16975 e!48086))

(declare-fun res!38953 () Bool)

(assert (=> d!16975 (=> (not res!38953) (not e!48086))))

(declare-fun lt!32903 () ListLongMap!1439)

(assert (=> d!16975 (= res!38953 (contains!729 lt!32903 (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun lt!32902 () List!1507)

(assert (=> d!16975 (= lt!32903 (ListLongMap!1440 lt!32902))))

(declare-fun lt!32900 () Unit!2086)

(declare-fun lt!32901 () Unit!2086)

(assert (=> d!16975 (= lt!32900 lt!32901)))

(assert (=> d!16975 (= (getValueByKey!132 lt!32902 (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16975 (= lt!32901 (lemmaContainsTupThenGetReturnValue!51 lt!32902 (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16975 (= lt!32902 (insertStrictlySorted!53 (toList!735 lt!32675) (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!16975 (= (+!98 lt!32675 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32903)))

(declare-fun b!73524 () Bool)

(declare-fun res!38954 () Bool)

(assert (=> b!73524 (=> (not res!38954) (not e!48086))))

(assert (=> b!73524 (= res!38954 (= (getValueByKey!132 (toList!735 lt!32903) (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun b!73525 () Bool)

(assert (=> b!73525 (= e!48086 (contains!730 (toList!735 lt!32903) (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(assert (= (and d!16975 res!38953) b!73524))

(assert (= (and b!73524 res!38954) b!73525))

(declare-fun m!71881 () Bool)

(assert (=> d!16975 m!71881))

(declare-fun m!71883 () Bool)

(assert (=> d!16975 m!71883))

(declare-fun m!71885 () Bool)

(assert (=> d!16975 m!71885))

(declare-fun m!71887 () Bool)

(assert (=> d!16975 m!71887))

(declare-fun m!71889 () Bool)

(assert (=> b!73524 m!71889))

(declare-fun m!71891 () Bool)

(assert (=> b!73525 m!71891))

(assert (=> b!73136 d!16975))

(declare-fun d!16977 () Bool)

(assert (=> d!16977 (contains!729 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32662)))

(declare-fun lt!32906 () Unit!2086)

(declare-fun choose!425 (ListLongMap!1439 (_ BitVec 64) V!2947 (_ BitVec 64)) Unit!2086)

(assert (=> d!16977 (= lt!32906 (choose!425 lt!32677 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) lt!32662))))

(assert (=> d!16977 (contains!729 lt!32677 lt!32662)))

(assert (=> d!16977 (= (addStillContains!51 lt!32677 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) lt!32662) lt!32906)))

(declare-fun bs!3152 () Bool)

(assert (= bs!3152 d!16977))

(assert (=> bs!3152 m!71241))

(assert (=> bs!3152 m!71241))

(assert (=> bs!3152 m!71247))

(declare-fun m!71893 () Bool)

(assert (=> bs!3152 m!71893))

(declare-fun m!71895 () Bool)

(assert (=> bs!3152 m!71895))

(assert (=> b!73136 d!16977))

(declare-fun b!73561 () Bool)

(declare-fun c!10970 () Bool)

(declare-fun lt!32994 () SeekEntryResult!246)

(assert (=> b!73561 (= c!10970 ((_ is MissingVacant!246) lt!32994))))

(declare-fun e!48108 () Bool)

(declare-fun e!48106 () Bool)

(assert (=> b!73561 (= e!48108 e!48106)))

(declare-fun b!73562 () Bool)

(declare-fun res!38974 () Bool)

(assert (=> b!73562 (= res!38974 (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3118 lt!32994)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48105 () Bool)

(assert (=> b!73562 (=> (not res!38974) (not e!48105))))

(declare-fun c!10971 () Bool)

(declare-fun lt!32986 () SeekEntryResult!246)

(declare-fun bm!6485 () Bool)

(declare-fun c!10969 () Bool)

(declare-fun call!6490 () Bool)

(assert (=> bm!6485 (= call!6490 (inRange!0 (ite c!10971 (index!3116 lt!32986) (ite c!10969 (index!3115 lt!32994) (index!3118 lt!32994))) (mask!6180 newMap!16)))))

(declare-fun b!73564 () Bool)

(declare-fun res!38981 () Bool)

(declare-fun e!48107 () Bool)

(assert (=> b!73564 (=> (not res!38981) (not e!48107))))

(assert (=> b!73564 (= res!38981 (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3115 lt!32994)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73565 () Bool)

(declare-fun e!48103 () Unit!2086)

(declare-fun Unit!2108 () Unit!2086)

(assert (=> b!73565 (= e!48103 Unit!2108)))

(declare-fun lt!32981 () Unit!2086)

(assert (=> b!73565 (= lt!32981 (lemmaInListMapThenSeekEntryOrOpenFindsIt!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)))))

(declare-fun call!6489 () SeekEntryResult!246)

(assert (=> b!73565 (= lt!32986 call!6489)))

(declare-fun res!38973 () Bool)

(assert (=> b!73565 (= res!38973 ((_ is Found!246) lt!32986))))

(declare-fun e!48104 () Bool)

(assert (=> b!73565 (=> (not res!38973) (not e!48104))))

(assert (=> b!73565 e!48104))

(declare-fun lt!32987 () Unit!2086)

(assert (=> b!73565 (= lt!32987 lt!32981)))

(assert (=> b!73565 false))

(declare-fun b!73566 () Bool)

(declare-fun e!48109 () Unit!2086)

(declare-fun Unit!2109 () Unit!2086)

(assert (=> b!73566 (= e!48109 Unit!2109)))

(declare-fun b!73567 () Bool)

(declare-fun res!38977 () Bool)

(declare-fun e!48110 () Bool)

(assert (=> b!73567 (=> (not res!38977) (not e!48110))))

(declare-fun lt!32995 () tuple2!2148)

(assert (=> b!73567 (= res!38977 (contains!729 (map!1158 (_2!1084 lt!32995)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun b!73568 () Bool)

(declare-fun res!38975 () Bool)

(assert (=> b!73568 (=> (not res!38975) (not e!48107))))

(declare-fun call!6491 () Bool)

(assert (=> b!73568 (= res!38975 call!6491)))

(assert (=> b!73568 (= e!48108 e!48107)))

(declare-fun b!73569 () Bool)

(declare-fun call!6488 () Bool)

(assert (=> b!73569 (= e!48105 (not call!6488))))

(declare-fun bm!6486 () Bool)

(assert (=> bm!6486 (= call!6488 (arrayContainsKey!0 (_keys!3865 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!6487 () Bool)

(assert (=> bm!6487 (= call!6489 (seekEntryOrOpen!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun b!73570 () Bool)

(assert (=> b!73570 (= e!48110 (= (map!1158 (_2!1084 lt!32995)) (+!98 (map!1158 newMap!16) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun b!73571 () Bool)

(declare-fun res!38979 () Bool)

(assert (=> b!73571 (=> (not res!38979) (not e!48110))))

(assert (=> b!73571 (= res!38979 (valid!292 (_2!1084 lt!32995)))))

(declare-fun b!73572 () Bool)

(assert (=> b!73572 (= e!48106 ((_ is Undefined!246) lt!32994))))

(declare-fun b!73573 () Bool)

(assert (=> b!73573 (= e!48106 e!48105)))

(declare-fun res!38978 () Bool)

(assert (=> b!73573 (= res!38978 call!6491)))

(assert (=> b!73573 (=> (not res!38978) (not e!48105))))

(declare-fun bm!6488 () Bool)

(assert (=> bm!6488 (= call!6491 call!6490)))

(declare-fun d!16979 () Bool)

(assert (=> d!16979 e!48110))

(declare-fun res!38980 () Bool)

(assert (=> d!16979 (=> (not res!38980) (not e!48110))))

(assert (=> d!16979 (= res!38980 (_1!1084 lt!32995))))

(assert (=> d!16979 (= lt!32995 (tuple2!2149 true (LongMapFixedSize!697 (defaultEntry!2213 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (bvadd (_size!397 newMap!16) #b00000000000000000000000000000001) (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))) (_vacant!397 newMap!16))))))

(declare-fun lt!32996 () Unit!2086)

(declare-fun lt!32983 () Unit!2086)

(assert (=> d!16979 (= lt!32996 lt!32983)))

(declare-fun lt!32968 () array!3894)

(declare-fun lt!32992 () array!3896)

(assert (=> d!16979 (contains!729 (getCurrentListMap!426 lt!32968 lt!32992 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593))))))

(assert (=> d!16979 (= lt!32983 (lemmaValidKeyInArrayIsInListMap!82 lt!32968 lt!32992 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (defaultEntry!2213 newMap!16)))))

(assert (=> d!16979 (= lt!32992 (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))))))

(assert (=> d!16979 (= lt!32968 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))))))

(declare-fun lt!32993 () Unit!2086)

(declare-fun lt!32970 () Unit!2086)

(assert (=> d!16979 (= lt!32993 lt!32970)))

(declare-fun lt!32979 () array!3894)

(assert (=> d!16979 (= (arrayCountValidKeys!0 lt!32979 (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (bvadd (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3894 (_ BitVec 32)) Unit!2086)

(assert (=> d!16979 (= lt!32970 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!32979 (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593))))))

(assert (=> d!16979 (= lt!32979 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))))))

(declare-fun lt!32980 () Unit!2086)

(declare-fun lt!32985 () Unit!2086)

(assert (=> d!16979 (= lt!32980 lt!32985)))

(declare-fun lt!32989 () array!3894)

(assert (=> d!16979 (arrayContainsKey!0 lt!32989 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!16979 (= lt!32985 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!32989 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593))))))

(assert (=> d!16979 (= lt!32989 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))))))

(declare-fun lt!32969 () Unit!2086)

(declare-fun lt!32976 () Unit!2086)

(assert (=> d!16979 (= lt!32969 lt!32976)))

(assert (=> d!16979 (= (+!98 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (getCurrentListMap!426 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!13 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 32) (_ BitVec 64) V!2947 Int) Unit!2086)

(assert (=> d!16979 (= lt!32976 (lemmaAddValidKeyToArrayThenAddPairToListMap!13 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!32978 () Unit!2086)

(declare-fun lt!32967 () Unit!2086)

(assert (=> d!16979 (= lt!32978 lt!32967)))

(assert (=> d!16979 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) (mask!6180 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3894 (_ BitVec 32) (_ BitVec 32)) Unit!2086)

(assert (=> d!16979 (= lt!32967 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (_keys!3865 newMap!16) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (mask!6180 newMap!16)))))

(declare-fun lt!32991 () Unit!2086)

(declare-fun lt!32974 () Unit!2086)

(assert (=> d!16979 (= lt!32991 lt!32974)))

(assert (=> d!16979 (= (arrayCountValidKeys!0 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3865 newMap!16) #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3894 (_ BitVec 32) (_ BitVec 64)) Unit!2086)

(assert (=> d!16979 (= lt!32974 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3865 newMap!16) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun lt!32990 () Unit!2086)

(declare-fun lt!32977 () Unit!2086)

(assert (=> d!16979 (= lt!32990 lt!32977)))

(declare-fun lt!32973 () List!1508)

(declare-fun lt!32971 () (_ BitVec 32))

(assert (=> d!16979 (arrayNoDuplicates!0 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) lt!32971 lt!32973)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3894 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1508) Unit!2086)

(assert (=> d!16979 (= lt!32977 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3865 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) lt!32971 lt!32973))))

(assert (=> d!16979 (= lt!32973 Nil!1505)))

(assert (=> d!16979 (= lt!32971 #b00000000000000000000000000000000)))

(declare-fun lt!32988 () Unit!2086)

(assert (=> d!16979 (= lt!32988 e!48109)))

(declare-fun c!10968 () Bool)

(assert (=> d!16979 (= c!10968 (arrayContainsKey!0 (_keys!3865 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!32984 () Unit!2086)

(assert (=> d!16979 (= lt!32984 e!48103)))

(assert (=> d!16979 (= c!10971 (contains!729 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> d!16979 (valid!292 newMap!16)))

(assert (=> d!16979 (= (updateHelperNewKey!24 newMap!16 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481 (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593))) lt!32995)))

(declare-fun b!73563 () Bool)

(assert (=> b!73563 (= e!48104 (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32986)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun b!73574 () Bool)

(declare-fun lt!32982 () Unit!2086)

(assert (=> b!73574 (= e!48103 lt!32982)))

(assert (=> b!73574 (= lt!32982 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)))))

(assert (=> b!73574 (= lt!32994 call!6489)))

(assert (=> b!73574 (= c!10969 ((_ is MissingZero!246) lt!32994))))

(assert (=> b!73574 e!48108))

(declare-fun b!73575 () Bool)

(declare-fun Unit!2110 () Unit!2086)

(assert (=> b!73575 (= e!48109 Unit!2110)))

(declare-fun lt!32972 () Unit!2086)

(declare-fun lemmaArrayContainsKeyThenInListMap!13 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 64) (_ BitVec 32) Int) Unit!2086)

(assert (=> b!73575 (= lt!32972 (lemmaArrayContainsKeyThenInListMap!13 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(assert (=> b!73575 (contains!729 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))

(declare-fun lt!32975 () Unit!2086)

(assert (=> b!73575 (= lt!32975 lt!32972)))

(assert (=> b!73575 false))

(declare-fun b!73576 () Bool)

(declare-fun res!38976 () Bool)

(assert (=> b!73576 (= res!38976 call!6490)))

(assert (=> b!73576 (=> (not res!38976) (not e!48104))))

(declare-fun b!73577 () Bool)

(assert (=> b!73577 (= e!48107 (not call!6488))))

(assert (= (and d!16979 c!10971) b!73565))

(assert (= (and d!16979 (not c!10971)) b!73574))

(assert (= (and b!73565 res!38973) b!73576))

(assert (= (and b!73576 res!38976) b!73563))

(assert (= (and b!73574 c!10969) b!73568))

(assert (= (and b!73574 (not c!10969)) b!73561))

(assert (= (and b!73568 res!38975) b!73564))

(assert (= (and b!73564 res!38981) b!73577))

(assert (= (and b!73561 c!10970) b!73573))

(assert (= (and b!73561 (not c!10970)) b!73572))

(assert (= (and b!73573 res!38978) b!73562))

(assert (= (and b!73562 res!38974) b!73569))

(assert (= (or b!73568 b!73573) bm!6488))

(assert (= (or b!73577 b!73569) bm!6486))

(assert (= (or b!73576 bm!6488) bm!6485))

(assert (= (or b!73565 b!73574) bm!6487))

(assert (= (and d!16979 c!10968) b!73575))

(assert (= (and d!16979 (not c!10968)) b!73566))

(assert (= (and d!16979 res!38980) b!73571))

(assert (= (and b!73571 res!38979) b!73567))

(assert (= (and b!73567 res!38977) b!73570))

(declare-fun m!71897 () Bool)

(assert (=> b!73570 m!71897))

(assert (=> b!73570 m!71071))

(assert (=> b!73570 m!71071))

(declare-fun m!71899 () Bool)

(assert (=> b!73570 m!71899))

(assert (=> bm!6487 m!71053))

(assert (=> bm!6487 m!71203))

(declare-fun m!71901 () Bool)

(assert (=> d!16979 m!71901))

(declare-fun m!71903 () Bool)

(assert (=> d!16979 m!71903))

(declare-fun m!71905 () Bool)

(assert (=> d!16979 m!71905))

(assert (=> d!16979 m!71903))

(assert (=> d!16979 m!71053))

(declare-fun m!71907 () Bool)

(assert (=> d!16979 m!71907))

(declare-fun m!71909 () Bool)

(assert (=> d!16979 m!71909))

(declare-fun m!71911 () Bool)

(assert (=> d!16979 m!71911))

(assert (=> d!16979 m!71191))

(declare-fun m!71913 () Bool)

(assert (=> d!16979 m!71913))

(declare-fun m!71915 () Bool)

(assert (=> d!16979 m!71915))

(declare-fun m!71917 () Bool)

(assert (=> d!16979 m!71917))

(assert (=> d!16979 m!71053))

(assert (=> d!16979 m!71195))

(assert (=> d!16979 m!71191))

(assert (=> d!16979 m!71053))

(declare-fun m!71919 () Bool)

(assert (=> d!16979 m!71919))

(assert (=> d!16979 m!71901))

(assert (=> d!16979 m!71053))

(declare-fun m!71921 () Bool)

(assert (=> d!16979 m!71921))

(declare-fun m!71923 () Bool)

(assert (=> d!16979 m!71923))

(assert (=> d!16979 m!71053))

(declare-fun m!71925 () Bool)

(assert (=> d!16979 m!71925))

(declare-fun m!71927 () Bool)

(assert (=> d!16979 m!71927))

(assert (=> d!16979 m!71191))

(declare-fun m!71929 () Bool)

(assert (=> d!16979 m!71929))

(assert (=> d!16979 m!71053))

(declare-fun m!71931 () Bool)

(assert (=> d!16979 m!71931))

(declare-fun m!71933 () Bool)

(assert (=> d!16979 m!71933))

(assert (=> d!16979 m!71375))

(assert (=> d!16979 m!71053))

(declare-fun m!71935 () Bool)

(assert (=> d!16979 m!71935))

(assert (=> d!16979 m!71053))

(declare-fun m!71937 () Bool)

(assert (=> d!16979 m!71937))

(declare-fun m!71939 () Bool)

(assert (=> d!16979 m!71939))

(assert (=> d!16979 m!71045))

(assert (=> b!73567 m!71897))

(assert (=> b!73567 m!71897))

(assert (=> b!73567 m!71053))

(declare-fun m!71941 () Bool)

(assert (=> b!73567 m!71941))

(declare-fun m!71943 () Bool)

(assert (=> b!73563 m!71943))

(declare-fun m!71945 () Bool)

(assert (=> bm!6485 m!71945))

(assert (=> b!73574 m!71053))

(assert (=> b!73574 m!71181))

(declare-fun m!71947 () Bool)

(assert (=> b!73571 m!71947))

(declare-fun m!71949 () Bool)

(assert (=> b!73564 m!71949))

(assert (=> b!73575 m!71053))

(declare-fun m!71951 () Bool)

(assert (=> b!73575 m!71951))

(assert (=> b!73575 m!71191))

(assert (=> b!73575 m!71191))

(assert (=> b!73575 m!71053))

(assert (=> b!73575 m!71919))

(assert (=> bm!6486 m!71053))

(assert (=> bm!6486 m!71195))

(assert (=> b!73565 m!71053))

(assert (=> b!73565 m!71215))

(declare-fun m!71953 () Bool)

(assert (=> b!73562 m!71953))

(assert (=> bm!6401 d!16979))

(declare-fun d!16981 () Bool)

(declare-fun e!48112 () Bool)

(assert (=> d!16981 e!48112))

(declare-fun res!38982 () Bool)

(assert (=> d!16981 (=> res!38982 e!48112)))

(declare-fun lt!32999 () Bool)

(assert (=> d!16981 (= res!38982 (not lt!32999))))

(declare-fun lt!32997 () Bool)

(assert (=> d!16981 (= lt!32999 lt!32997)))

(declare-fun lt!32998 () Unit!2086)

(declare-fun e!48111 () Unit!2086)

(assert (=> d!16981 (= lt!32998 e!48111)))

(declare-fun c!10972 () Bool)

(assert (=> d!16981 (= c!10972 lt!32997)))

(assert (=> d!16981 (= lt!32997 (containsKey!136 (toList!735 lt!32721) (_1!1083 lt!32472)))))

(assert (=> d!16981 (= (contains!729 lt!32721 (_1!1083 lt!32472)) lt!32999)))

(declare-fun b!73578 () Bool)

(declare-fun lt!33000 () Unit!2086)

(assert (=> b!73578 (= e!48111 lt!33000)))

(assert (=> b!73578 (= lt!33000 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32721) (_1!1083 lt!32472)))))

(assert (=> b!73578 (isDefined!86 (getValueByKey!132 (toList!735 lt!32721) (_1!1083 lt!32472)))))

(declare-fun b!73579 () Bool)

(declare-fun Unit!2111 () Unit!2086)

(assert (=> b!73579 (= e!48111 Unit!2111)))

(declare-fun b!73580 () Bool)

(assert (=> b!73580 (= e!48112 (isDefined!86 (getValueByKey!132 (toList!735 lt!32721) (_1!1083 lt!32472))))))

(assert (= (and d!16981 c!10972) b!73578))

(assert (= (and d!16981 (not c!10972)) b!73579))

(assert (= (and d!16981 (not res!38982)) b!73580))

(declare-fun m!71955 () Bool)

(assert (=> d!16981 m!71955))

(declare-fun m!71957 () Bool)

(assert (=> b!73578 m!71957))

(assert (=> b!73578 m!71343))

(assert (=> b!73578 m!71343))

(declare-fun m!71959 () Bool)

(assert (=> b!73578 m!71959))

(assert (=> b!73580 m!71343))

(assert (=> b!73580 m!71343))

(assert (=> b!73580 m!71959))

(assert (=> d!16823 d!16981))

(declare-fun b!73584 () Bool)

(declare-fun e!48114 () Option!138)

(assert (=> b!73584 (= e!48114 None!136)))

(declare-fun b!73582 () Bool)

(declare-fun e!48113 () Option!138)

(assert (=> b!73582 (= e!48113 e!48114)))

(declare-fun c!10974 () Bool)

(assert (=> b!73582 (= c!10974 (and ((_ is Cons!1503) lt!32720) (not (= (_1!1083 (h!2090 lt!32720)) (_1!1083 lt!32472)))))))

(declare-fun b!73581 () Bool)

(assert (=> b!73581 (= e!48113 (Some!137 (_2!1083 (h!2090 lt!32720))))))

(declare-fun d!16983 () Bool)

(declare-fun c!10973 () Bool)

(assert (=> d!16983 (= c!10973 (and ((_ is Cons!1503) lt!32720) (= (_1!1083 (h!2090 lt!32720)) (_1!1083 lt!32472))))))

(assert (=> d!16983 (= (getValueByKey!132 lt!32720 (_1!1083 lt!32472)) e!48113)))

(declare-fun b!73583 () Bool)

(assert (=> b!73583 (= e!48114 (getValueByKey!132 (t!5068 lt!32720) (_1!1083 lt!32472)))))

(assert (= (and d!16983 c!10973) b!73581))

(assert (= (and d!16983 (not c!10973)) b!73582))

(assert (= (and b!73582 c!10974) b!73583))

(assert (= (and b!73582 (not c!10974)) b!73584))

(declare-fun m!71961 () Bool)

(assert (=> b!73583 m!71961))

(assert (=> d!16823 d!16983))

(declare-fun d!16985 () Bool)

(assert (=> d!16985 (= (getValueByKey!132 lt!32720 (_1!1083 lt!32472)) (Some!137 (_2!1083 lt!32472)))))

(declare-fun lt!33001 () Unit!2086)

(assert (=> d!16985 (= lt!33001 (choose!422 lt!32720 (_1!1083 lt!32472) (_2!1083 lt!32472)))))

(declare-fun e!48115 () Bool)

(assert (=> d!16985 e!48115))

(declare-fun res!38983 () Bool)

(assert (=> d!16985 (=> (not res!38983) (not e!48115))))

(assert (=> d!16985 (= res!38983 (isStrictlySorted!287 lt!32720))))

(assert (=> d!16985 (= (lemmaContainsTupThenGetReturnValue!51 lt!32720 (_1!1083 lt!32472) (_2!1083 lt!32472)) lt!33001)))

(declare-fun b!73585 () Bool)

(declare-fun res!38984 () Bool)

(assert (=> b!73585 (=> (not res!38984) (not e!48115))))

(assert (=> b!73585 (= res!38984 (containsKey!136 lt!32720 (_1!1083 lt!32472)))))

(declare-fun b!73586 () Bool)

(assert (=> b!73586 (= e!48115 (contains!730 lt!32720 (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))))))

(assert (= (and d!16985 res!38983) b!73585))

(assert (= (and b!73585 res!38984) b!73586))

(assert (=> d!16985 m!71337))

(declare-fun m!71963 () Bool)

(assert (=> d!16985 m!71963))

(declare-fun m!71965 () Bool)

(assert (=> d!16985 m!71965))

(declare-fun m!71967 () Bool)

(assert (=> b!73585 m!71967))

(declare-fun m!71969 () Bool)

(assert (=> b!73586 m!71969))

(assert (=> d!16823 d!16985))

(declare-fun b!73587 () Bool)

(declare-fun e!48116 () List!1507)

(declare-fun call!6493 () List!1507)

(assert (=> b!73587 (= e!48116 call!6493)))

(declare-fun b!73588 () Bool)

(declare-fun e!48118 () List!1507)

(declare-fun call!6492 () List!1507)

(assert (=> b!73588 (= e!48118 call!6492)))

(declare-fun c!10976 () Bool)

(declare-fun e!48119 () List!1507)

(declare-fun bm!6489 () Bool)

(declare-fun call!6494 () List!1507)

(assert (=> bm!6489 (= call!6494 ($colon$colon!65 e!48119 (ite c!10976 (h!2090 (toList!735 (+!98 lt!32476 lt!32482))) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472)))))))

(declare-fun c!10977 () Bool)

(assert (=> bm!6489 (= c!10977 c!10976)))

(declare-fun b!73590 () Bool)

(declare-fun res!38986 () Bool)

(declare-fun e!48117 () Bool)

(assert (=> b!73590 (=> (not res!38986) (not e!48117))))

(declare-fun lt!33002 () List!1507)

(assert (=> b!73590 (= res!38986 (containsKey!136 lt!33002 (_1!1083 lt!32472)))))

(declare-fun b!73591 () Bool)

(declare-fun e!48120 () List!1507)

(assert (=> b!73591 (= e!48120 call!6494)))

(declare-fun b!73592 () Bool)

(declare-fun c!10975 () Bool)

(declare-fun c!10978 () Bool)

(assert (=> b!73592 (= e!48119 (ite c!10978 (t!5068 (toList!735 (+!98 lt!32476 lt!32482))) (ite c!10975 (Cons!1503 (h!2090 (toList!735 (+!98 lt!32476 lt!32482))) (t!5068 (toList!735 (+!98 lt!32476 lt!32482)))) Nil!1504)))))

(declare-fun b!73593 () Bool)

(assert (=> b!73593 (= e!48119 (insertStrictlySorted!53 (t!5068 (toList!735 (+!98 lt!32476 lt!32482))) (_1!1083 lt!32472) (_2!1083 lt!32472)))))

(declare-fun b!73594 () Bool)

(assert (=> b!73594 (= e!48117 (contains!730 lt!33002 (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))))))

(declare-fun bm!6490 () Bool)

(assert (=> bm!6490 (= call!6493 call!6494)))

(declare-fun b!73595 () Bool)

(assert (=> b!73595 (= e!48120 e!48116)))

(assert (=> b!73595 (= c!10978 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32476 lt!32482))) (= (_1!1083 (h!2090 (toList!735 (+!98 lt!32476 lt!32482)))) (_1!1083 lt!32472))))))

(declare-fun b!73589 () Bool)

(assert (=> b!73589 (= c!10975 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32476 lt!32482))) (bvsgt (_1!1083 (h!2090 (toList!735 (+!98 lt!32476 lt!32482)))) (_1!1083 lt!32472))))))

(assert (=> b!73589 (= e!48116 e!48118)))

(declare-fun d!16987 () Bool)

(assert (=> d!16987 e!48117))

(declare-fun res!38985 () Bool)

(assert (=> d!16987 (=> (not res!38985) (not e!48117))))

(assert (=> d!16987 (= res!38985 (isStrictlySorted!287 lt!33002))))

(assert (=> d!16987 (= lt!33002 e!48120)))

(assert (=> d!16987 (= c!10976 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32476 lt!32482))) (bvslt (_1!1083 (h!2090 (toList!735 (+!98 lt!32476 lt!32482)))) (_1!1083 lt!32472))))))

(assert (=> d!16987 (isStrictlySorted!287 (toList!735 (+!98 lt!32476 lt!32482)))))

(assert (=> d!16987 (= (insertStrictlySorted!53 (toList!735 (+!98 lt!32476 lt!32482)) (_1!1083 lt!32472) (_2!1083 lt!32472)) lt!33002)))

(declare-fun b!73596 () Bool)

(assert (=> b!73596 (= e!48118 call!6492)))

(declare-fun bm!6491 () Bool)

(assert (=> bm!6491 (= call!6492 call!6493)))

(assert (= (and d!16987 c!10976) b!73591))

(assert (= (and d!16987 (not c!10976)) b!73595))

(assert (= (and b!73595 c!10978) b!73587))

(assert (= (and b!73595 (not c!10978)) b!73589))

(assert (= (and b!73589 c!10975) b!73596))

(assert (= (and b!73589 (not c!10975)) b!73588))

(assert (= (or b!73596 b!73588) bm!6491))

(assert (= (or b!73587 bm!6491) bm!6490))

(assert (= (or b!73591 bm!6490) bm!6489))

(assert (= (and bm!6489 c!10977) b!73593))

(assert (= (and bm!6489 (not c!10977)) b!73592))

(assert (= (and d!16987 res!38985) b!73590))

(assert (= (and b!73590 res!38986) b!73594))

(declare-fun m!71971 () Bool)

(assert (=> b!73590 m!71971))

(declare-fun m!71973 () Bool)

(assert (=> d!16987 m!71973))

(declare-fun m!71975 () Bool)

(assert (=> d!16987 m!71975))

(declare-fun m!71977 () Bool)

(assert (=> b!73593 m!71977))

(declare-fun m!71979 () Bool)

(assert (=> b!73594 m!71979))

(declare-fun m!71981 () Bool)

(assert (=> bm!6489 m!71981))

(assert (=> d!16823 d!16987))

(declare-fun d!16989 () Bool)

(declare-fun e!48121 () Bool)

(assert (=> d!16989 e!48121))

(declare-fun res!38987 () Bool)

(assert (=> d!16989 (=> (not res!38987) (not e!48121))))

(declare-fun lt!33006 () ListLongMap!1439)

(assert (=> d!16989 (= res!38987 (contains!729 lt!33006 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!33005 () List!1507)

(assert (=> d!16989 (= lt!33006 (ListLongMap!1440 lt!33005))))

(declare-fun lt!33003 () Unit!2086)

(declare-fun lt!33004 () Unit!2086)

(assert (=> d!16989 (= lt!33003 lt!33004)))

(assert (=> d!16989 (= (getValueByKey!132 lt!33005 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!137 (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16989 (= lt!33004 (lemmaContainsTupThenGetReturnValue!51 lt!33005 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16989 (= lt!33005 (insertStrictlySorted!53 (toList!735 call!6441) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16989 (= (+!98 call!6441 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!33006)))

(declare-fun b!73597 () Bool)

(declare-fun res!38988 () Bool)

(assert (=> b!73597 (=> (not res!38988) (not e!48121))))

(assert (=> b!73597 (= res!38988 (= (getValueByKey!132 (toList!735 lt!33006) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!137 (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!73598 () Bool)

(assert (=> b!73598 (= e!48121 (contains!730 (toList!735 lt!33006) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!16989 res!38987) b!73597))

(assert (= (and b!73597 res!38988) b!73598))

(declare-fun m!71983 () Bool)

(assert (=> d!16989 m!71983))

(declare-fun m!71985 () Bool)

(assert (=> d!16989 m!71985))

(declare-fun m!71987 () Bool)

(assert (=> d!16989 m!71987))

(declare-fun m!71989 () Bool)

(assert (=> d!16989 m!71989))

(declare-fun m!71991 () Bool)

(assert (=> b!73597 m!71991))

(declare-fun m!71993 () Bool)

(assert (=> b!73598 m!71993))

(assert (=> b!73192 d!16989))

(assert (=> b!73192 d!16903))

(declare-fun d!16991 () Bool)

(declare-fun e!48123 () Bool)

(assert (=> d!16991 e!48123))

(declare-fun res!38989 () Bool)

(assert (=> d!16991 (=> res!38989 e!48123)))

(declare-fun lt!33009 () Bool)

(assert (=> d!16991 (= res!38989 (not lt!33009))))

(declare-fun lt!33007 () Bool)

(assert (=> d!16991 (= lt!33009 lt!33007)))

(declare-fun lt!33008 () Unit!2086)

(declare-fun e!48122 () Unit!2086)

(assert (=> d!16991 (= lt!33008 e!48122)))

(declare-fun c!10979 () Bool)

(assert (=> d!16991 (= c!10979 lt!33007)))

(assert (=> d!16991 (= lt!33007 (containsKey!136 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693))) lt!32696))))

(assert (=> d!16991 (= (contains!729 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693)) lt!32696) lt!33009)))

(declare-fun b!73599 () Bool)

(declare-fun lt!33010 () Unit!2086)

(assert (=> b!73599 (= e!48122 lt!33010)))

(assert (=> b!73599 (= lt!33010 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693))) lt!32696))))

(assert (=> b!73599 (isDefined!86 (getValueByKey!132 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693))) lt!32696))))

(declare-fun b!73600 () Bool)

(declare-fun Unit!2112 () Unit!2086)

(assert (=> b!73600 (= e!48122 Unit!2112)))

(declare-fun b!73601 () Bool)

(assert (=> b!73601 (= e!48123 (isDefined!86 (getValueByKey!132 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693))) lt!32696)))))

(assert (= (and d!16991 c!10979) b!73599))

(assert (= (and d!16991 (not c!10979)) b!73600))

(assert (= (and d!16991 (not res!38989)) b!73601))

(declare-fun m!71995 () Bool)

(assert (=> d!16991 m!71995))

(declare-fun m!71997 () Bool)

(assert (=> b!73599 m!71997))

(declare-fun m!71999 () Bool)

(assert (=> b!73599 m!71999))

(assert (=> b!73599 m!71999))

(declare-fun m!72001 () Bool)

(assert (=> b!73599 m!72001))

(assert (=> b!73601 m!71999))

(assert (=> b!73601 m!71999))

(assert (=> b!73601 m!72001))

(assert (=> b!73192 d!16991))

(declare-fun d!16993 () Bool)

(declare-fun e!48124 () Bool)

(assert (=> d!16993 e!48124))

(declare-fun res!38990 () Bool)

(assert (=> d!16993 (=> (not res!38990) (not e!48124))))

(declare-fun lt!33014 () ListLongMap!1439)

(assert (=> d!16993 (= res!38990 (contains!729 lt!33014 (_1!1083 (tuple2!2147 lt!32698 lt!32693))))))

(declare-fun lt!33013 () List!1507)

(assert (=> d!16993 (= lt!33014 (ListLongMap!1440 lt!33013))))

(declare-fun lt!33011 () Unit!2086)

(declare-fun lt!33012 () Unit!2086)

(assert (=> d!16993 (= lt!33011 lt!33012)))

(assert (=> d!16993 (= (getValueByKey!132 lt!33013 (_1!1083 (tuple2!2147 lt!32698 lt!32693))) (Some!137 (_2!1083 (tuple2!2147 lt!32698 lt!32693))))))

(assert (=> d!16993 (= lt!33012 (lemmaContainsTupThenGetReturnValue!51 lt!33013 (_1!1083 (tuple2!2147 lt!32698 lt!32693)) (_2!1083 (tuple2!2147 lt!32698 lt!32693))))))

(assert (=> d!16993 (= lt!33013 (insertStrictlySorted!53 (toList!735 lt!32692) (_1!1083 (tuple2!2147 lt!32698 lt!32693)) (_2!1083 (tuple2!2147 lt!32698 lt!32693))))))

(assert (=> d!16993 (= (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693)) lt!33014)))

(declare-fun b!73602 () Bool)

(declare-fun res!38991 () Bool)

(assert (=> b!73602 (=> (not res!38991) (not e!48124))))

(assert (=> b!73602 (= res!38991 (= (getValueByKey!132 (toList!735 lt!33014) (_1!1083 (tuple2!2147 lt!32698 lt!32693))) (Some!137 (_2!1083 (tuple2!2147 lt!32698 lt!32693)))))))

(declare-fun b!73603 () Bool)

(assert (=> b!73603 (= e!48124 (contains!730 (toList!735 lt!33014) (tuple2!2147 lt!32698 lt!32693)))))

(assert (= (and d!16993 res!38990) b!73602))

(assert (= (and b!73602 res!38991) b!73603))

(declare-fun m!72003 () Bool)

(assert (=> d!16993 m!72003))

(declare-fun m!72005 () Bool)

(assert (=> d!16993 m!72005))

(declare-fun m!72007 () Bool)

(assert (=> d!16993 m!72007))

(declare-fun m!72009 () Bool)

(assert (=> d!16993 m!72009))

(declare-fun m!72011 () Bool)

(assert (=> b!73602 m!72011))

(declare-fun m!72013 () Bool)

(assert (=> b!73603 m!72013))

(assert (=> b!73192 d!16993))

(declare-fun d!16995 () Bool)

(assert (=> d!16995 (not (contains!729 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693)) lt!32696))))

(declare-fun lt!33017 () Unit!2086)

(declare-fun choose!426 (ListLongMap!1439 (_ BitVec 64) V!2947 (_ BitVec 64)) Unit!2086)

(assert (=> d!16995 (= lt!33017 (choose!426 lt!32692 lt!32698 lt!32693 lt!32696))))

(declare-fun e!48127 () Bool)

(assert (=> d!16995 e!48127))

(declare-fun res!38994 () Bool)

(assert (=> d!16995 (=> (not res!38994) (not e!48127))))

(assert (=> d!16995 (= res!38994 (not (contains!729 lt!32692 lt!32696)))))

(assert (=> d!16995 (= (addStillNotContains!26 lt!32692 lt!32698 lt!32693 lt!32696) lt!33017)))

(declare-fun b!73607 () Bool)

(assert (=> b!73607 (= e!48127 (not (= lt!32698 lt!32696)))))

(assert (= (and d!16995 res!38994) b!73607))

(assert (=> d!16995 m!71287))

(assert (=> d!16995 m!71287))

(assert (=> d!16995 m!71289))

(declare-fun m!72015 () Bool)

(assert (=> d!16995 m!72015))

(declare-fun m!72017 () Bool)

(assert (=> d!16995 m!72017))

(assert (=> b!73192 d!16995))

(declare-fun d!16997 () Bool)

(declare-fun lt!33018 () Bool)

(assert (=> d!16997 (= lt!33018 (select (content!76 (toList!735 lt!32710)) lt!32482))))

(declare-fun e!48128 () Bool)

(assert (=> d!16997 (= lt!33018 e!48128)))

(declare-fun res!38996 () Bool)

(assert (=> d!16997 (=> (not res!38996) (not e!48128))))

(assert (=> d!16997 (= res!38996 ((_ is Cons!1503) (toList!735 lt!32710)))))

(assert (=> d!16997 (= (contains!730 (toList!735 lt!32710) lt!32482) lt!33018)))

(declare-fun b!73608 () Bool)

(declare-fun e!48129 () Bool)

(assert (=> b!73608 (= e!48128 e!48129)))

(declare-fun res!38995 () Bool)

(assert (=> b!73608 (=> res!38995 e!48129)))

(assert (=> b!73608 (= res!38995 (= (h!2090 (toList!735 lt!32710)) lt!32482))))

(declare-fun b!73609 () Bool)

(assert (=> b!73609 (= e!48129 (contains!730 (t!5068 (toList!735 lt!32710)) lt!32482))))

(assert (= (and d!16997 res!38996) b!73608))

(assert (= (and b!73608 (not res!38995)) b!73609))

(declare-fun m!72019 () Bool)

(assert (=> d!16997 m!72019))

(declare-fun m!72021 () Bool)

(assert (=> d!16997 m!72021))

(declare-fun m!72023 () Bool)

(assert (=> b!73609 m!72023))

(assert (=> b!73198 d!16997))

(declare-fun b!73626 () Bool)

(declare-fun lt!33023 () SeekEntryResult!246)

(assert (=> b!73626 (and (bvsge (index!3115 lt!33023) #b00000000000000000000000000000000) (bvslt (index!3115 lt!33023) (size!2096 (_keys!3865 newMap!16))))))

(declare-fun res!39008 () Bool)

(assert (=> b!73626 (= res!39008 (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3115 lt!33023)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48140 () Bool)

(assert (=> b!73626 (=> (not res!39008) (not e!48140))))

(declare-fun b!73627 () Bool)

(declare-fun res!39006 () Bool)

(declare-fun e!48139 () Bool)

(assert (=> b!73627 (=> (not res!39006) (not e!48139))))

(declare-fun call!6499 () Bool)

(assert (=> b!73627 (= res!39006 call!6499)))

(declare-fun e!48141 () Bool)

(assert (=> b!73627 (= e!48141 e!48139)))

(declare-fun b!73628 () Bool)

(assert (=> b!73628 (= e!48141 ((_ is Undefined!246) lt!33023))))

(declare-fun b!73629 () Bool)

(declare-fun call!6500 () Bool)

(assert (=> b!73629 (= e!48140 (not call!6500))))

(declare-fun b!73631 () Bool)

(declare-fun e!48138 () Bool)

(assert (=> b!73631 (= e!48138 e!48140)))

(declare-fun res!39005 () Bool)

(assert (=> b!73631 (= res!39005 call!6499)))

(assert (=> b!73631 (=> (not res!39005) (not e!48140))))

(declare-fun bm!6496 () Bool)

(assert (=> bm!6496 (= call!6500 (arrayContainsKey!0 (_keys!3865 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!6497 () Bool)

(declare-fun c!10985 () Bool)

(assert (=> bm!6497 (= call!6499 (inRange!0 (ite c!10985 (index!3115 lt!33023) (index!3118 lt!33023)) (mask!6180 newMap!16)))))

(declare-fun b!73630 () Bool)

(assert (=> b!73630 (= e!48139 (not call!6500))))

(declare-fun d!16999 () Bool)

(assert (=> d!16999 e!48138))

(assert (=> d!16999 (= c!10985 ((_ is MissingZero!246) lt!33023))))

(assert (=> d!16999 (= lt!33023 (seekEntryOrOpen!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun lt!33024 () Unit!2086)

(declare-fun choose!427 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 64) Int) Unit!2086)

(assert (=> d!16999 (= lt!33024 (choose!427 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)))))

(assert (=> d!16999 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!16999 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)) lt!33024)))

(declare-fun b!73632 () Bool)

(assert (=> b!73632 (= e!48138 e!48141)))

(declare-fun c!10984 () Bool)

(assert (=> b!73632 (= c!10984 ((_ is MissingVacant!246) lt!33023))))

(declare-fun b!73633 () Bool)

(declare-fun res!39007 () Bool)

(assert (=> b!73633 (=> (not res!39007) (not e!48139))))

(assert (=> b!73633 (= res!39007 (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3118 lt!33023)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73633 (and (bvsge (index!3118 lt!33023) #b00000000000000000000000000000000) (bvslt (index!3118 lt!33023) (size!2096 (_keys!3865 newMap!16))))))

(assert (= (and d!16999 c!10985) b!73631))

(assert (= (and d!16999 (not c!10985)) b!73632))

(assert (= (and b!73631 res!39005) b!73626))

(assert (= (and b!73626 res!39008) b!73629))

(assert (= (and b!73632 c!10984) b!73627))

(assert (= (and b!73632 (not c!10984)) b!73628))

(assert (= (and b!73627 res!39006) b!73633))

(assert (= (and b!73633 res!39007) b!73630))

(assert (= (or b!73631 b!73627) bm!6497))

(assert (= (or b!73629 b!73630) bm!6496))

(declare-fun m!72025 () Bool)

(assert (=> bm!6497 m!72025))

(assert (=> bm!6496 m!71053))

(assert (=> bm!6496 m!71195))

(declare-fun m!72027 () Bool)

(assert (=> b!73626 m!72027))

(assert (=> d!16999 m!71053))

(assert (=> d!16999 m!71203))

(assert (=> d!16999 m!71053))

(declare-fun m!72029 () Bool)

(assert (=> d!16999 m!72029))

(assert (=> d!16999 m!71423))

(declare-fun m!72031 () Bool)

(assert (=> b!73633 m!72031))

(assert (=> bm!6408 d!16999))

(declare-fun d!17001 () Bool)

(declare-fun e!48144 () Bool)

(assert (=> d!17001 e!48144))

(declare-fun res!39011 () Bool)

(assert (=> d!17001 (=> (not res!39011) (not e!48144))))

(assert (=> d!17001 (= res!39011 (and (bvsge (index!3116 lt!32593) #b00000000000000000000000000000000) (bvslt (index!3116 lt!32593) (size!2096 (_keys!3865 newMap!16)))))))

(declare-fun lt!33027 () Unit!2086)

(declare-fun choose!428 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 32) Int) Unit!2086)

(assert (=> d!17001 (= lt!33027 (choose!428 (_keys!3865 newMap!16) lt!32608 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (index!3116 lt!32593) (defaultEntry!2213 newMap!16)))))

(assert (=> d!17001 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17001 (= (lemmaValidKeyInArrayIsInListMap!82 (_keys!3865 newMap!16) lt!32608 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (index!3116 lt!32593) (defaultEntry!2213 newMap!16)) lt!33027)))

(declare-fun b!73636 () Bool)

(assert (=> b!73636 (= e!48144 (contains!729 (getCurrentListMap!426 (_keys!3865 newMap!16) lt!32608 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593))))))

(assert (= (and d!17001 res!39011) b!73636))

(declare-fun m!72033 () Bool)

(assert (=> d!17001 m!72033))

(assert (=> d!17001 m!71423))

(declare-fun m!72035 () Bool)

(assert (=> b!73636 m!72035))

(assert (=> b!73636 m!71217))

(assert (=> b!73636 m!72035))

(assert (=> b!73636 m!71217))

(declare-fun m!72037 () Bool)

(assert (=> b!73636 m!72037))

(assert (=> b!73084 d!17001))

(declare-fun d!17003 () Bool)

(declare-fun e!48147 () Bool)

(assert (=> d!17003 e!48147))

(declare-fun res!39014 () Bool)

(assert (=> d!17003 (=> (not res!39014) (not e!48147))))

(assert (=> d!17003 (= res!39014 (and (bvsge (index!3116 lt!32593) #b00000000000000000000000000000000) (bvslt (index!3116 lt!32593) (size!2097 (_values!2196 newMap!16)))))))

(declare-fun lt!33030 () Unit!2086)

(declare-fun choose!429 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 32) (_ BitVec 64) V!2947 Int) Unit!2086)

(assert (=> d!17003 (= lt!33030 (choose!429 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (index!3116 lt!32593) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481 (defaultEntry!2213 newMap!16)))))

(assert (=> d!17003 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17003 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (index!3116 lt!32593) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481 (defaultEntry!2213 newMap!16)) lt!33030)))

(declare-fun b!73639 () Bool)

(assert (=> b!73639 (= e!48147 (= (+!98 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (getCurrentListMap!426 (_keys!3865 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))))))

(assert (= (and d!17003 res!39014) b!73639))

(assert (=> d!17003 m!71053))

(declare-fun m!72039 () Bool)

(assert (=> d!17003 m!72039))

(assert (=> d!17003 m!71423))

(assert (=> b!73639 m!71191))

(assert (=> b!73639 m!71191))

(assert (=> b!73639 m!71929))

(assert (=> b!73639 m!71167))

(declare-fun m!72041 () Bool)

(assert (=> b!73639 m!72041))

(assert (=> b!73084 d!17003))

(declare-fun d!17005 () Bool)

(declare-fun e!48149 () Bool)

(assert (=> d!17005 e!48149))

(declare-fun res!39015 () Bool)

(assert (=> d!17005 (=> res!39015 e!48149)))

(declare-fun lt!33033 () Bool)

(assert (=> d!17005 (= res!39015 (not lt!33033))))

(declare-fun lt!33031 () Bool)

(assert (=> d!17005 (= lt!33033 lt!33031)))

(declare-fun lt!33032 () Unit!2086)

(declare-fun e!48148 () Unit!2086)

(assert (=> d!17005 (= lt!33032 e!48148)))

(declare-fun c!10986 () Bool)

(assert (=> d!17005 (= c!10986 lt!33031)))

(assert (=> d!17005 (= lt!33031 (containsKey!136 (toList!735 call!6396) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> d!17005 (= (contains!729 call!6396 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) lt!33033)))

(declare-fun b!73640 () Bool)

(declare-fun lt!33034 () Unit!2086)

(assert (=> b!73640 (= e!48148 lt!33034)))

(assert (=> b!73640 (= lt!33034 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 call!6396) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> b!73640 (isDefined!86 (getValueByKey!132 (toList!735 call!6396) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun b!73641 () Bool)

(declare-fun Unit!2113 () Unit!2086)

(assert (=> b!73641 (= e!48148 Unit!2113)))

(declare-fun b!73642 () Bool)

(assert (=> b!73642 (= e!48149 (isDefined!86 (getValueByKey!132 (toList!735 call!6396) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))))

(assert (= (and d!17005 c!10986) b!73640))

(assert (= (and d!17005 (not c!10986)) b!73641))

(assert (= (and d!17005 (not res!39015)) b!73642))

(assert (=> d!17005 m!71053))

(declare-fun m!72043 () Bool)

(assert (=> d!17005 m!72043))

(assert (=> b!73640 m!71053))

(declare-fun m!72045 () Bool)

(assert (=> b!73640 m!72045))

(assert (=> b!73640 m!71053))

(declare-fun m!72047 () Bool)

(assert (=> b!73640 m!72047))

(assert (=> b!73640 m!72047))

(declare-fun m!72049 () Bool)

(assert (=> b!73640 m!72049))

(assert (=> b!73642 m!71053))

(assert (=> b!73642 m!72047))

(assert (=> b!73642 m!72047))

(assert (=> b!73642 m!72049))

(assert (=> b!73084 d!17005))

(assert (=> d!16831 d!16835))

(declare-fun d!17007 () Bool)

(assert (=> d!17007 (not (arrayContainsKey!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!17007 true))

(declare-fun _$68!55 () Unit!2086)

(assert (=> d!17007 (= (choose!68 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505)) _$68!55)))

(declare-fun bs!3153 () Bool)

(assert (= bs!3153 d!17007))

(assert (=> bs!3153 m!71053))

(assert (=> bs!3153 m!71057))

(assert (=> d!16831 d!17007))

(assert (=> b!73182 d!16921))

(declare-fun b!73646 () Bool)

(declare-fun e!48151 () Option!138)

(assert (=> b!73646 (= e!48151 None!136)))

(declare-fun b!73644 () Bool)

(declare-fun e!48150 () Option!138)

(assert (=> b!73644 (= e!48150 e!48151)))

(declare-fun c!10988 () Bool)

(assert (=> b!73644 (= c!10988 (and ((_ is Cons!1503) (toList!735 lt!32721)) (not (= (_1!1083 (h!2090 (toList!735 lt!32721))) (_1!1083 lt!32472)))))))

(declare-fun b!73643 () Bool)

(assert (=> b!73643 (= e!48150 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32721)))))))

(declare-fun d!17009 () Bool)

(declare-fun c!10987 () Bool)

(assert (=> d!17009 (= c!10987 (and ((_ is Cons!1503) (toList!735 lt!32721)) (= (_1!1083 (h!2090 (toList!735 lt!32721))) (_1!1083 lt!32472))))))

(assert (=> d!17009 (= (getValueByKey!132 (toList!735 lt!32721) (_1!1083 lt!32472)) e!48150)))

(declare-fun b!73645 () Bool)

(assert (=> b!73645 (= e!48151 (getValueByKey!132 (t!5068 (toList!735 lt!32721)) (_1!1083 lt!32472)))))

(assert (= (and d!17009 c!10987) b!73643))

(assert (= (and d!17009 (not c!10987)) b!73644))

(assert (= (and b!73644 c!10988) b!73645))

(assert (= (and b!73644 (not c!10988)) b!73646))

(declare-fun m!72051 () Bool)

(assert (=> b!73645 m!72051))

(assert (=> b!73201 d!17009))

(declare-fun d!17011 () Bool)

(assert (=> d!17011 (= (inRange!0 (ite c!10830 (ite c!10835 (index!3116 lt!32592) (ite c!10834 (index!3115 lt!32606) (index!3118 lt!32606))) (ite c!10837 (index!3116 lt!32599) (ite c!10839 (index!3115 lt!32611) (index!3118 lt!32611)))) (mask!6180 newMap!16)) (and (bvsge (ite c!10830 (ite c!10835 (index!3116 lt!32592) (ite c!10834 (index!3115 lt!32606) (index!3118 lt!32606))) (ite c!10837 (index!3116 lt!32599) (ite c!10839 (index!3115 lt!32611) (index!3118 lt!32611)))) #b00000000000000000000000000000000) (bvslt (ite c!10830 (ite c!10835 (index!3116 lt!32592) (ite c!10834 (index!3115 lt!32606) (index!3118 lt!32606))) (ite c!10837 (index!3116 lt!32599) (ite c!10839 (index!3115 lt!32611) (index!3118 lt!32611)))) (bvadd (mask!6180 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6410 d!17011))

(declare-fun d!17013 () Bool)

(declare-fun e!48154 () Bool)

(assert (=> d!17013 e!48154))

(declare-fun res!39020 () Bool)

(assert (=> d!17013 (=> (not res!39020) (not e!48154))))

(declare-fun lt!33040 () SeekEntryResult!246)

(assert (=> d!17013 (= res!39020 ((_ is Found!246) lt!33040))))

(assert (=> d!17013 (= lt!33040 (seekEntryOrOpen!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun lt!33039 () Unit!2086)

(declare-fun choose!430 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 64) Int) Unit!2086)

(assert (=> d!17013 (= lt!33039 (choose!430 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)))))

(assert (=> d!17013 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17013 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!24 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)) lt!33039)))

(declare-fun b!73651 () Bool)

(declare-fun res!39021 () Bool)

(assert (=> b!73651 (=> (not res!39021) (not e!48154))))

(assert (=> b!73651 (= res!39021 (inRange!0 (index!3116 lt!33040) (mask!6180 newMap!16)))))

(declare-fun b!73652 () Bool)

(assert (=> b!73652 (= e!48154 (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!33040)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> b!73652 (and (bvsge (index!3116 lt!33040) #b00000000000000000000000000000000) (bvslt (index!3116 lt!33040) (size!2096 (_keys!3865 newMap!16))))))

(assert (= (and d!17013 res!39020) b!73651))

(assert (= (and b!73651 res!39021) b!73652))

(assert (=> d!17013 m!71053))

(assert (=> d!17013 m!71203))

(assert (=> d!17013 m!71053))

(declare-fun m!72053 () Bool)

(assert (=> d!17013 m!72053))

(assert (=> d!17013 m!71423))

(declare-fun m!72055 () Bool)

(assert (=> b!73651 m!72055))

(declare-fun m!72057 () Bool)

(assert (=> b!73652 m!72057))

(assert (=> bm!6397 d!17013))

(declare-fun d!17015 () Bool)

(declare-fun isEmpty!323 (List!1507) Bool)

(assert (=> d!17015 (= (isEmpty!321 lt!32694) (isEmpty!323 (toList!735 lt!32694)))))

(declare-fun bs!3154 () Bool)

(assert (= bs!3154 d!17015))

(declare-fun m!72059 () Bool)

(assert (=> bs!3154 m!72059))

(assert (=> b!73187 d!17015))

(declare-fun d!17017 () Bool)

(assert (=> d!17017 (= (get!1156 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) from!355) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2532 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> b!73155 d!17017))

(declare-fun d!17019 () Bool)

(declare-fun lt!33043 () Bool)

(declare-fun content!77 (List!1508) (InoxSet (_ BitVec 64)))

(assert (=> d!17019 (= lt!33043 (select (content!77 Nil!1505) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun e!48160 () Bool)

(assert (=> d!17019 (= lt!33043 e!48160)))

(declare-fun res!39027 () Bool)

(assert (=> d!17019 (=> (not res!39027) (not e!48160))))

(assert (=> d!17019 (= res!39027 ((_ is Cons!1504) Nil!1505))))

(assert (=> d!17019 (= (contains!731 Nil!1505 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) lt!33043)))

(declare-fun b!73657 () Bool)

(declare-fun e!48159 () Bool)

(assert (=> b!73657 (= e!48160 e!48159)))

(declare-fun res!39026 () Bool)

(assert (=> b!73657 (=> res!39026 e!48159)))

(assert (=> b!73657 (= res!39026 (= (h!2091 Nil!1505) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun b!73658 () Bool)

(assert (=> b!73658 (= e!48159 (contains!731 (t!5069 Nil!1505) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (= (and d!17019 res!39027) b!73657))

(assert (= (and b!73657 (not res!39026)) b!73658))

(declare-fun m!72061 () Bool)

(assert (=> d!17019 m!72061))

(assert (=> d!17019 m!71053))

(declare-fun m!72063 () Bool)

(assert (=> d!17019 m!72063))

(assert (=> b!73658 m!71053))

(declare-fun m!72065 () Bool)

(assert (=> b!73658 m!72065))

(assert (=> b!73230 d!17019))

(declare-fun d!17021 () Bool)

(declare-fun lt!33044 () Bool)

(assert (=> d!17021 (= lt!33044 (select (content!76 (toList!735 lt!32725)) lt!32472))))

(declare-fun e!48161 () Bool)

(assert (=> d!17021 (= lt!33044 e!48161)))

(declare-fun res!39029 () Bool)

(assert (=> d!17021 (=> (not res!39029) (not e!48161))))

(assert (=> d!17021 (= res!39029 ((_ is Cons!1503) (toList!735 lt!32725)))))

(assert (=> d!17021 (= (contains!730 (toList!735 lt!32725) lt!32472) lt!33044)))

(declare-fun b!73659 () Bool)

(declare-fun e!48162 () Bool)

(assert (=> b!73659 (= e!48161 e!48162)))

(declare-fun res!39028 () Bool)

(assert (=> b!73659 (=> res!39028 e!48162)))

(assert (=> b!73659 (= res!39028 (= (h!2090 (toList!735 lt!32725)) lt!32472))))

(declare-fun b!73660 () Bool)

(assert (=> b!73660 (= e!48162 (contains!730 (t!5068 (toList!735 lt!32725)) lt!32472))))

(assert (= (and d!17021 res!39029) b!73659))

(assert (= (and b!73659 (not res!39028)) b!73660))

(declare-fun m!72067 () Bool)

(assert (=> d!17021 m!72067))

(declare-fun m!72069 () Bool)

(assert (=> d!17021 m!72069))

(declare-fun m!72071 () Bool)

(assert (=> b!73660 m!72071))

(assert (=> b!73204 d!17021))

(declare-fun d!17023 () Bool)

(declare-fun e!48164 () Bool)

(assert (=> d!17023 e!48164))

(declare-fun res!39030 () Bool)

(assert (=> d!17023 (=> res!39030 e!48164)))

(declare-fun lt!33047 () Bool)

(assert (=> d!17023 (= res!39030 (not lt!33047))))

(declare-fun lt!33045 () Bool)

(assert (=> d!17023 (= lt!33047 lt!33045)))

(declare-fun lt!33046 () Unit!2086)

(declare-fun e!48163 () Unit!2086)

(assert (=> d!17023 (= lt!33046 e!48163)))

(declare-fun c!10989 () Bool)

(assert (=> d!17023 (= c!10989 lt!33045)))

(assert (=> d!17023 (= lt!33045 (containsKey!136 (toList!735 lt!32710) (_1!1083 lt!32482)))))

(assert (=> d!17023 (= (contains!729 lt!32710 (_1!1083 lt!32482)) lt!33047)))

(declare-fun b!73661 () Bool)

(declare-fun lt!33048 () Unit!2086)

(assert (=> b!73661 (= e!48163 lt!33048)))

(assert (=> b!73661 (= lt!33048 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32710) (_1!1083 lt!32482)))))

(assert (=> b!73661 (isDefined!86 (getValueByKey!132 (toList!735 lt!32710) (_1!1083 lt!32482)))))

(declare-fun b!73662 () Bool)

(declare-fun Unit!2114 () Unit!2086)

(assert (=> b!73662 (= e!48163 Unit!2114)))

(declare-fun b!73663 () Bool)

(assert (=> b!73663 (= e!48164 (isDefined!86 (getValueByKey!132 (toList!735 lt!32710) (_1!1083 lt!32482))))))

(assert (= (and d!17023 c!10989) b!73661))

(assert (= (and d!17023 (not c!10989)) b!73662))

(assert (= (and d!17023 (not res!39030)) b!73663))

(declare-fun m!72073 () Bool)

(assert (=> d!17023 m!72073))

(declare-fun m!72075 () Bool)

(assert (=> b!73661 m!72075))

(assert (=> b!73661 m!71309))

(assert (=> b!73661 m!71309))

(declare-fun m!72077 () Bool)

(assert (=> b!73661 m!72077))

(assert (=> b!73663 m!71309))

(assert (=> b!73663 m!71309))

(assert (=> b!73663 m!72077))

(assert (=> d!16815 d!17023))

(declare-fun b!73667 () Bool)

(declare-fun e!48166 () Option!138)

(assert (=> b!73667 (= e!48166 None!136)))

(declare-fun b!73665 () Bool)

(declare-fun e!48165 () Option!138)

(assert (=> b!73665 (= e!48165 e!48166)))

(declare-fun c!10991 () Bool)

(assert (=> b!73665 (= c!10991 (and ((_ is Cons!1503) lt!32709) (not (= (_1!1083 (h!2090 lt!32709)) (_1!1083 lt!32482)))))))

(declare-fun b!73664 () Bool)

(assert (=> b!73664 (= e!48165 (Some!137 (_2!1083 (h!2090 lt!32709))))))

(declare-fun d!17025 () Bool)

(declare-fun c!10990 () Bool)

(assert (=> d!17025 (= c!10990 (and ((_ is Cons!1503) lt!32709) (= (_1!1083 (h!2090 lt!32709)) (_1!1083 lt!32482))))))

(assert (=> d!17025 (= (getValueByKey!132 lt!32709 (_1!1083 lt!32482)) e!48165)))

(declare-fun b!73666 () Bool)

(assert (=> b!73666 (= e!48166 (getValueByKey!132 (t!5068 lt!32709) (_1!1083 lt!32482)))))

(assert (= (and d!17025 c!10990) b!73664))

(assert (= (and d!17025 (not c!10990)) b!73665))

(assert (= (and b!73665 c!10991) b!73666))

(assert (= (and b!73665 (not c!10991)) b!73667))

(declare-fun m!72079 () Bool)

(assert (=> b!73666 m!72079))

(assert (=> d!16815 d!17025))

(declare-fun d!17027 () Bool)

(assert (=> d!17027 (= (getValueByKey!132 lt!32709 (_1!1083 lt!32482)) (Some!137 (_2!1083 lt!32482)))))

(declare-fun lt!33049 () Unit!2086)

(assert (=> d!17027 (= lt!33049 (choose!422 lt!32709 (_1!1083 lt!32482) (_2!1083 lt!32482)))))

(declare-fun e!48167 () Bool)

(assert (=> d!17027 e!48167))

(declare-fun res!39031 () Bool)

(assert (=> d!17027 (=> (not res!39031) (not e!48167))))

(assert (=> d!17027 (= res!39031 (isStrictlySorted!287 lt!32709))))

(assert (=> d!17027 (= (lemmaContainsTupThenGetReturnValue!51 lt!32709 (_1!1083 lt!32482) (_2!1083 lt!32482)) lt!33049)))

(declare-fun b!73668 () Bool)

(declare-fun res!39032 () Bool)

(assert (=> b!73668 (=> (not res!39032) (not e!48167))))

(assert (=> b!73668 (= res!39032 (containsKey!136 lt!32709 (_1!1083 lt!32482)))))

(declare-fun b!73669 () Bool)

(assert (=> b!73669 (= e!48167 (contains!730 lt!32709 (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))))))

(assert (= (and d!17027 res!39031) b!73668))

(assert (= (and b!73668 res!39032) b!73669))

(assert (=> d!17027 m!71303))

(declare-fun m!72081 () Bool)

(assert (=> d!17027 m!72081))

(declare-fun m!72083 () Bool)

(assert (=> d!17027 m!72083))

(declare-fun m!72085 () Bool)

(assert (=> b!73668 m!72085))

(declare-fun m!72087 () Bool)

(assert (=> b!73669 m!72087))

(assert (=> d!16815 d!17027))

(declare-fun b!73670 () Bool)

(declare-fun e!48168 () List!1507)

(declare-fun call!6502 () List!1507)

(assert (=> b!73670 (= e!48168 call!6502)))

(declare-fun b!73671 () Bool)

(declare-fun e!48170 () List!1507)

(declare-fun call!6501 () List!1507)

(assert (=> b!73671 (= e!48170 call!6501)))

(declare-fun e!48171 () List!1507)

(declare-fun call!6503 () List!1507)

(declare-fun bm!6498 () Bool)

(declare-fun c!10993 () Bool)

(assert (=> bm!6498 (= call!6503 ($colon$colon!65 e!48171 (ite c!10993 (h!2090 (toList!735 lt!32476)) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482)))))))

(declare-fun c!10994 () Bool)

(assert (=> bm!6498 (= c!10994 c!10993)))

(declare-fun b!73673 () Bool)

(declare-fun res!39034 () Bool)

(declare-fun e!48169 () Bool)

(assert (=> b!73673 (=> (not res!39034) (not e!48169))))

(declare-fun lt!33050 () List!1507)

(assert (=> b!73673 (= res!39034 (containsKey!136 lt!33050 (_1!1083 lt!32482)))))

(declare-fun b!73674 () Bool)

(declare-fun e!48172 () List!1507)

(assert (=> b!73674 (= e!48172 call!6503)))

(declare-fun b!73675 () Bool)

(declare-fun c!10992 () Bool)

(declare-fun c!10995 () Bool)

(assert (=> b!73675 (= e!48171 (ite c!10995 (t!5068 (toList!735 lt!32476)) (ite c!10992 (Cons!1503 (h!2090 (toList!735 lt!32476)) (t!5068 (toList!735 lt!32476))) Nil!1504)))))

(declare-fun b!73676 () Bool)

(assert (=> b!73676 (= e!48171 (insertStrictlySorted!53 (t!5068 (toList!735 lt!32476)) (_1!1083 lt!32482) (_2!1083 lt!32482)))))

(declare-fun b!73677 () Bool)

(assert (=> b!73677 (= e!48169 (contains!730 lt!33050 (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))))))

(declare-fun bm!6499 () Bool)

(assert (=> bm!6499 (= call!6502 call!6503)))

(declare-fun b!73678 () Bool)

(assert (=> b!73678 (= e!48172 e!48168)))

(assert (=> b!73678 (= c!10995 (and ((_ is Cons!1503) (toList!735 lt!32476)) (= (_1!1083 (h!2090 (toList!735 lt!32476))) (_1!1083 lt!32482))))))

(declare-fun b!73672 () Bool)

(assert (=> b!73672 (= c!10992 (and ((_ is Cons!1503) (toList!735 lt!32476)) (bvsgt (_1!1083 (h!2090 (toList!735 lt!32476))) (_1!1083 lt!32482))))))

(assert (=> b!73672 (= e!48168 e!48170)))

(declare-fun d!17029 () Bool)

(assert (=> d!17029 e!48169))

(declare-fun res!39033 () Bool)

(assert (=> d!17029 (=> (not res!39033) (not e!48169))))

(assert (=> d!17029 (= res!39033 (isStrictlySorted!287 lt!33050))))

(assert (=> d!17029 (= lt!33050 e!48172)))

(assert (=> d!17029 (= c!10993 (and ((_ is Cons!1503) (toList!735 lt!32476)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32476))) (_1!1083 lt!32482))))))

(assert (=> d!17029 (isStrictlySorted!287 (toList!735 lt!32476))))

(assert (=> d!17029 (= (insertStrictlySorted!53 (toList!735 lt!32476) (_1!1083 lt!32482) (_2!1083 lt!32482)) lt!33050)))

(declare-fun b!73679 () Bool)

(assert (=> b!73679 (= e!48170 call!6501)))

(declare-fun bm!6500 () Bool)

(assert (=> bm!6500 (= call!6501 call!6502)))

(assert (= (and d!17029 c!10993) b!73674))

(assert (= (and d!17029 (not c!10993)) b!73678))

(assert (= (and b!73678 c!10995) b!73670))

(assert (= (and b!73678 (not c!10995)) b!73672))

(assert (= (and b!73672 c!10992) b!73679))

(assert (= (and b!73672 (not c!10992)) b!73671))

(assert (= (or b!73679 b!73671) bm!6500))

(assert (= (or b!73670 bm!6500) bm!6499))

(assert (= (or b!73674 bm!6499) bm!6498))

(assert (= (and bm!6498 c!10994) b!73676))

(assert (= (and bm!6498 (not c!10994)) b!73675))

(assert (= (and d!17029 res!39033) b!73673))

(assert (= (and b!73673 res!39034) b!73677))

(declare-fun m!72089 () Bool)

(assert (=> b!73673 m!72089))

(declare-fun m!72091 () Bool)

(assert (=> d!17029 m!72091))

(assert (=> d!17029 m!71793))

(declare-fun m!72093 () Bool)

(assert (=> b!73676 m!72093))

(declare-fun m!72095 () Bool)

(assert (=> b!73677 m!72095))

(declare-fun m!72097 () Bool)

(assert (=> bm!6498 m!72097))

(assert (=> d!16815 d!17029))

(assert (=> d!16805 d!16821))

(declare-fun d!17031 () Bool)

(declare-fun lt!33051 () Bool)

(assert (=> d!17031 (= lt!33051 (select (content!76 (toList!735 lt!32721)) lt!32472))))

(declare-fun e!48173 () Bool)

(assert (=> d!17031 (= lt!33051 e!48173)))

(declare-fun res!39036 () Bool)

(assert (=> d!17031 (=> (not res!39036) (not e!48173))))

(assert (=> d!17031 (= res!39036 ((_ is Cons!1503) (toList!735 lt!32721)))))

(assert (=> d!17031 (= (contains!730 (toList!735 lt!32721) lt!32472) lt!33051)))

(declare-fun b!73680 () Bool)

(declare-fun e!48174 () Bool)

(assert (=> b!73680 (= e!48173 e!48174)))

(declare-fun res!39035 () Bool)

(assert (=> b!73680 (=> res!39035 e!48174)))

(assert (=> b!73680 (= res!39035 (= (h!2090 (toList!735 lt!32721)) lt!32472))))

(declare-fun b!73681 () Bool)

(assert (=> b!73681 (= e!48174 (contains!730 (t!5068 (toList!735 lt!32721)) lt!32472))))

(assert (= (and d!17031 res!39036) b!73680))

(assert (= (and b!73680 (not res!39035)) b!73681))

(declare-fun m!72099 () Bool)

(assert (=> d!17031 m!72099))

(declare-fun m!72101 () Bool)

(assert (=> d!17031 m!72101))

(declare-fun m!72103 () Bool)

(assert (=> b!73681 m!72103))

(assert (=> b!73202 d!17031))

(declare-fun b!73682 () Bool)

(declare-fun e!48176 () Bool)

(declare-fun e!48179 () Bool)

(assert (=> b!73682 (= e!48176 e!48179)))

(declare-fun res!39042 () Bool)

(declare-fun call!6509 () Bool)

(assert (=> b!73682 (= res!39042 call!6509)))

(assert (=> b!73682 (=> (not res!39042) (not e!48179))))

(declare-fun b!73683 () Bool)

(declare-fun e!48183 () ListLongMap!1439)

(declare-fun call!6504 () ListLongMap!1439)

(assert (=> b!73683 (= e!48183 call!6504)))

(declare-fun b!73684 () Bool)

(declare-fun call!6505 () ListLongMap!1439)

(assert (=> b!73684 (= e!48183 call!6505)))

(declare-fun bm!6501 () Bool)

(declare-fun lt!33062 () ListLongMap!1439)

(assert (=> bm!6501 (= call!6509 (contains!729 lt!33062 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73685 () Bool)

(declare-fun e!48175 () Bool)

(declare-fun e!48181 () Bool)

(assert (=> b!73685 (= e!48175 e!48181)))

(declare-fun res!39040 () Bool)

(assert (=> b!73685 (=> (not res!39040) (not e!48181))))

(assert (=> b!73685 (= res!39040 (contains!729 lt!33062 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73685 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!73686 () Bool)

(declare-fun e!48177 () Unit!2086)

(declare-fun Unit!2115 () Unit!2086)

(assert (=> b!73686 (= e!48177 Unit!2115)))

(declare-fun bm!6502 () Bool)

(declare-fun call!6506 () ListLongMap!1439)

(assert (=> bm!6502 (= call!6504 call!6506)))

(declare-fun call!6510 () ListLongMap!1439)

(declare-fun bm!6503 () Bool)

(assert (=> bm!6503 (= call!6510 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!73688 () Bool)

(declare-fun lt!33052 () Unit!2086)

(assert (=> b!73688 (= e!48177 lt!33052)))

(declare-fun lt!33073 () ListLongMap!1439)

(assert (=> b!73688 (= lt!33073 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33067 () (_ BitVec 64))

(assert (=> b!73688 (= lt!33067 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33058 () (_ BitVec 64))

(assert (=> b!73688 (= lt!33058 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33055 () Unit!2086)

(assert (=> b!73688 (= lt!33055 (addStillContains!51 lt!33073 lt!33067 (zeroValue!2115 newMap!16) lt!33058))))

(assert (=> b!73688 (contains!729 (+!98 lt!33073 (tuple2!2147 lt!33067 (zeroValue!2115 newMap!16))) lt!33058)))

(declare-fun lt!33069 () Unit!2086)

(assert (=> b!73688 (= lt!33069 lt!33055)))

(declare-fun lt!33060 () ListLongMap!1439)

(assert (=> b!73688 (= lt!33060 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33070 () (_ BitVec 64))

(assert (=> b!73688 (= lt!33070 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33068 () (_ BitVec 64))

(assert (=> b!73688 (= lt!33068 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33072 () Unit!2086)

(assert (=> b!73688 (= lt!33072 (addApplyDifferent!51 lt!33060 lt!33070 (minValue!2115 newMap!16) lt!33068))))

(assert (=> b!73688 (= (apply!75 (+!98 lt!33060 (tuple2!2147 lt!33070 (minValue!2115 newMap!16))) lt!33068) (apply!75 lt!33060 lt!33068))))

(declare-fun lt!33057 () Unit!2086)

(assert (=> b!73688 (= lt!33057 lt!33072)))

(declare-fun lt!33071 () ListLongMap!1439)

(assert (=> b!73688 (= lt!33071 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33061 () (_ BitVec 64))

(assert (=> b!73688 (= lt!33061 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33053 () (_ BitVec 64))

(assert (=> b!73688 (= lt!33053 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33059 () Unit!2086)

(assert (=> b!73688 (= lt!33059 (addApplyDifferent!51 lt!33071 lt!33061 (zeroValue!2115 newMap!16) lt!33053))))

(assert (=> b!73688 (= (apply!75 (+!98 lt!33071 (tuple2!2147 lt!33061 (zeroValue!2115 newMap!16))) lt!33053) (apply!75 lt!33071 lt!33053))))

(declare-fun lt!33063 () Unit!2086)

(assert (=> b!73688 (= lt!33063 lt!33059)))

(declare-fun lt!33066 () ListLongMap!1439)

(assert (=> b!73688 (= lt!33066 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33056 () (_ BitVec 64))

(assert (=> b!73688 (= lt!33056 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33054 () (_ BitVec 64))

(assert (=> b!73688 (= lt!33054 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73688 (= lt!33052 (addApplyDifferent!51 lt!33066 lt!33056 (minValue!2115 newMap!16) lt!33054))))

(assert (=> b!73688 (= (apply!75 (+!98 lt!33066 (tuple2!2147 lt!33056 (minValue!2115 newMap!16))) lt!33054) (apply!75 lt!33066 lt!33054))))

(declare-fun b!73689 () Bool)

(assert (=> b!73689 (= e!48176 (not call!6509))))

(declare-fun b!73690 () Bool)

(declare-fun res!39041 () Bool)

(declare-fun e!48186 () Bool)

(assert (=> b!73690 (=> (not res!39041) (not e!48186))))

(assert (=> b!73690 (= res!39041 e!48176)))

(declare-fun c!10996 () Bool)

(assert (=> b!73690 (= c!10996 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!73691 () Bool)

(declare-fun e!48180 () ListLongMap!1439)

(declare-fun e!48187 () ListLongMap!1439)

(assert (=> b!73691 (= e!48180 e!48187)))

(declare-fun c!10998 () Bool)

(assert (=> b!73691 (= c!10998 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73692 () Bool)

(declare-fun e!48182 () Bool)

(declare-fun e!48178 () Bool)

(assert (=> b!73692 (= e!48182 e!48178)))

(declare-fun res!39045 () Bool)

(declare-fun call!6507 () Bool)

(assert (=> b!73692 (= res!39045 call!6507)))

(assert (=> b!73692 (=> (not res!39045) (not e!48178))))

(declare-fun bm!6504 () Bool)

(assert (=> bm!6504 (= call!6506 call!6510)))

(declare-fun bm!6505 () Bool)

(declare-fun call!6508 () ListLongMap!1439)

(assert (=> bm!6505 (= call!6505 call!6508)))

(declare-fun b!73693 () Bool)

(assert (=> b!73693 (= e!48182 (not call!6507))))

(declare-fun b!73694 () Bool)

(declare-fun res!39038 () Bool)

(assert (=> b!73694 (=> (not res!39038) (not e!48186))))

(assert (=> b!73694 (= res!39038 e!48175)))

(declare-fun res!39037 () Bool)

(assert (=> b!73694 (=> res!39037 e!48175)))

(declare-fun e!48184 () Bool)

(assert (=> b!73694 (= res!39037 (not e!48184))))

(declare-fun res!39039 () Bool)

(assert (=> b!73694 (=> (not res!39039) (not e!48184))))

(assert (=> b!73694 (= res!39039 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!73695 () Bool)

(assert (=> b!73695 (= e!48186 e!48182)))

(declare-fun c!11000 () Bool)

(assert (=> b!73695 (= c!11000 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73696 () Bool)

(assert (=> b!73696 (= e!48178 (= (apply!75 lt!33062 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2115 newMap!16)))))

(declare-fun b!73697 () Bool)

(assert (=> b!73697 (= e!48187 call!6505)))

(declare-fun bm!6506 () Bool)

(assert (=> bm!6506 (= call!6507 (contains!729 lt!33062 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17033 () Bool)

(assert (=> d!17033 e!48186))

(declare-fun res!39043 () Bool)

(assert (=> d!17033 (=> (not res!39043) (not e!48186))))

(assert (=> d!17033 (= res!39043 (or (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))))

(declare-fun lt!33064 () ListLongMap!1439)

(assert (=> d!17033 (= lt!33062 lt!33064)))

(declare-fun lt!33065 () Unit!2086)

(assert (=> d!17033 (= lt!33065 e!48177)))

(declare-fun c!10999 () Bool)

(declare-fun e!48185 () Bool)

(assert (=> d!17033 (= c!10999 e!48185)))

(declare-fun res!39044 () Bool)

(assert (=> d!17033 (=> (not res!39044) (not e!48185))))

(assert (=> d!17033 (= res!39044 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!17033 (= lt!33064 e!48180)))

(declare-fun c!10997 () Bool)

(assert (=> d!17033 (= c!10997 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17033 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17033 (= (getCurrentListMap!426 (_keys!3865 newMap!16) (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33062)))

(declare-fun b!73687 () Bool)

(assert (=> b!73687 (= e!48179 (= (apply!75 lt!33062 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2115 newMap!16)))))

(declare-fun b!73698 () Bool)

(assert (=> b!73698 (= e!48184 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73699 () Bool)

(declare-fun c!11001 () Bool)

(assert (=> b!73699 (= c!11001 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!73699 (= e!48187 e!48183)))

(declare-fun b!73700 () Bool)

(assert (=> b!73700 (= e!48185 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73701 () Bool)

(assert (=> b!73701 (= e!48181 (= (apply!75 lt!33062 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1154 (select (arr!1859 (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73701 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16)))))))))

(assert (=> b!73701 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun bm!6507 () Bool)

(assert (=> bm!6507 (= call!6508 (+!98 (ite c!10997 call!6510 (ite c!10998 call!6506 call!6504)) (ite (or c!10997 c!10998) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(declare-fun b!73702 () Bool)

(assert (=> b!73702 (= e!48180 (+!98 call!6508 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))

(assert (= (and d!17033 c!10997) b!73702))

(assert (= (and d!17033 (not c!10997)) b!73691))

(assert (= (and b!73691 c!10998) b!73697))

(assert (= (and b!73691 (not c!10998)) b!73699))

(assert (= (and b!73699 c!11001) b!73684))

(assert (= (and b!73699 (not c!11001)) b!73683))

(assert (= (or b!73684 b!73683) bm!6502))

(assert (= (or b!73697 bm!6502) bm!6504))

(assert (= (or b!73697 b!73684) bm!6505))

(assert (= (or b!73702 bm!6504) bm!6503))

(assert (= (or b!73702 bm!6505) bm!6507))

(assert (= (and d!17033 res!39044) b!73700))

(assert (= (and d!17033 c!10999) b!73688))

(assert (= (and d!17033 (not c!10999)) b!73686))

(assert (= (and d!17033 res!39043) b!73694))

(assert (= (and b!73694 res!39039) b!73698))

(assert (= (and b!73694 (not res!39037)) b!73685))

(assert (= (and b!73685 res!39040) b!73701))

(assert (= (and b!73694 res!39038) b!73690))

(assert (= (and b!73690 c!10996) b!73682))

(assert (= (and b!73690 (not c!10996)) b!73689))

(assert (= (and b!73682 res!39042) b!73687))

(assert (= (or b!73682 b!73689) bm!6501))

(assert (= (and b!73690 res!39041) b!73695))

(assert (= (and b!73695 c!11000) b!73692))

(assert (= (and b!73695 (not c!11000)) b!73693))

(assert (= (and b!73692 res!39045) b!73696))

(assert (= (or b!73692 b!73693) bm!6506))

(declare-fun b_lambda!3311 () Bool)

(assert (=> (not b_lambda!3311) (not b!73701)))

(assert (=> b!73701 t!5077))

(declare-fun b_and!4517 () Bool)

(assert (= b_and!4513 (and (=> t!5077 result!2697) b_and!4517)))

(assert (=> b!73701 t!5079))

(declare-fun b_and!4519 () Bool)

(assert (= b_and!4515 (and (=> t!5079 result!2699) b_and!4519)))

(declare-fun m!72105 () Bool)

(assert (=> bm!6507 m!72105))

(declare-fun m!72107 () Bool)

(assert (=> b!73687 m!72107))

(declare-fun m!72109 () Bool)

(assert (=> bm!6503 m!72109))

(assert (=> b!73698 m!71397))

(assert (=> b!73698 m!71397))

(assert (=> b!73698 m!71411))

(declare-fun m!72111 () Bool)

(assert (=> b!73702 m!72111))

(declare-fun m!72113 () Bool)

(assert (=> bm!6501 m!72113))

(declare-fun m!72115 () Bool)

(assert (=> b!73688 m!72115))

(declare-fun m!72117 () Bool)

(assert (=> b!73688 m!72117))

(declare-fun m!72119 () Bool)

(assert (=> b!73688 m!72119))

(assert (=> b!73688 m!71397))

(declare-fun m!72121 () Bool)

(assert (=> b!73688 m!72121))

(declare-fun m!72123 () Bool)

(assert (=> b!73688 m!72123))

(declare-fun m!72125 () Bool)

(assert (=> b!73688 m!72125))

(assert (=> b!73688 m!72121))

(declare-fun m!72127 () Bool)

(assert (=> b!73688 m!72127))

(assert (=> b!73688 m!72109))

(declare-fun m!72129 () Bool)

(assert (=> b!73688 m!72129))

(assert (=> b!73688 m!72117))

(declare-fun m!72131 () Bool)

(assert (=> b!73688 m!72131))

(assert (=> b!73688 m!72115))

(declare-fun m!72133 () Bool)

(assert (=> b!73688 m!72133))

(declare-fun m!72135 () Bool)

(assert (=> b!73688 m!72135))

(assert (=> b!73688 m!72119))

(declare-fun m!72137 () Bool)

(assert (=> b!73688 m!72137))

(declare-fun m!72139 () Bool)

(assert (=> b!73688 m!72139))

(declare-fun m!72141 () Bool)

(assert (=> b!73688 m!72141))

(declare-fun m!72143 () Bool)

(assert (=> b!73688 m!72143))

(assert (=> b!73685 m!71397))

(assert (=> b!73685 m!71397))

(declare-fun m!72145 () Bool)

(assert (=> b!73685 m!72145))

(declare-fun m!72147 () Bool)

(assert (=> bm!6506 m!72147))

(assert (=> b!73701 m!71397))

(assert (=> b!73701 m!71397))

(declare-fun m!72149 () Bool)

(assert (=> b!73701 m!72149))

(assert (=> b!73701 m!71521))

(declare-fun m!72151 () Bool)

(assert (=> b!73701 m!72151))

(assert (=> b!73701 m!72151))

(assert (=> b!73701 m!71521))

(declare-fun m!72153 () Bool)

(assert (=> b!73701 m!72153))

(assert (=> b!73700 m!71397))

(assert (=> b!73700 m!71397))

(assert (=> b!73700 m!71411))

(declare-fun m!72155 () Bool)

(assert (=> b!73696 m!72155))

(assert (=> d!17033 m!71423))

(assert (=> bm!6393 d!17033))

(declare-fun d!17035 () Bool)

(declare-fun e!48188 () Bool)

(assert (=> d!17035 e!48188))

(declare-fun res!39046 () Bool)

(assert (=> d!17035 (=> (not res!39046) (not e!48188))))

(declare-fun lt!33077 () ListLongMap!1439)

(assert (=> d!17035 (= res!39046 (contains!729 lt!33077 (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun lt!33076 () List!1507)

(assert (=> d!17035 (= lt!33077 (ListLongMap!1440 lt!33076))))

(declare-fun lt!33074 () Unit!2086)

(declare-fun lt!33075 () Unit!2086)

(assert (=> d!17035 (= lt!33074 lt!33075)))

(assert (=> d!17035 (= (getValueByKey!132 lt!33076 (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))) (Some!137 (_2!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17035 (= lt!33075 (lemmaContainsTupThenGetReturnValue!51 lt!33076 (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) (_2!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17035 (= lt!33076 (insertStrictlySorted!53 (toList!735 (ite c!10854 call!6438 (ite c!10855 call!6434 call!6432))) (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) (_2!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17035 (= (+!98 (ite c!10854 call!6438 (ite c!10855 call!6434 call!6432)) (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33077)))

(declare-fun b!73703 () Bool)

(declare-fun res!39047 () Bool)

(assert (=> b!73703 (=> (not res!39047) (not e!48188))))

(assert (=> b!73703 (= res!39047 (= (getValueByKey!132 (toList!735 lt!33077) (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))) (Some!137 (_2!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun b!73704 () Bool)

(assert (=> b!73704 (= e!48188 (contains!730 (toList!735 lt!33077) (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (= (and d!17035 res!39046) b!73703))

(assert (= (and b!73703 res!39047) b!73704))

(declare-fun m!72157 () Bool)

(assert (=> d!17035 m!72157))

(declare-fun m!72159 () Bool)

(assert (=> d!17035 m!72159))

(declare-fun m!72161 () Bool)

(assert (=> d!17035 m!72161))

(declare-fun m!72163 () Bool)

(assert (=> d!17035 m!72163))

(declare-fun m!72165 () Bool)

(assert (=> b!73703 m!72165))

(declare-fun m!72167 () Bool)

(assert (=> b!73704 m!72167))

(assert (=> bm!6435 d!17035))

(declare-fun d!17037 () Bool)

(declare-fun e!48190 () Bool)

(assert (=> d!17037 e!48190))

(declare-fun res!39048 () Bool)

(assert (=> d!17037 (=> res!39048 e!48190)))

(declare-fun lt!33080 () Bool)

(assert (=> d!17037 (= res!39048 (not lt!33080))))

(declare-fun lt!33078 () Bool)

(assert (=> d!17037 (= lt!33080 lt!33078)))

(declare-fun lt!33079 () Unit!2086)

(declare-fun e!48189 () Unit!2086)

(assert (=> d!17037 (= lt!33079 e!48189)))

(declare-fun c!11002 () Bool)

(assert (=> d!17037 (= c!11002 lt!33078)))

(assert (=> d!17037 (= lt!33078 (containsKey!136 (toList!735 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17037 (= (contains!729 lt!32666 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33080)))

(declare-fun b!73705 () Bool)

(declare-fun lt!33081 () Unit!2086)

(assert (=> b!73705 (= e!48189 lt!33081)))

(assert (=> b!73705 (= lt!33081 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73705 (isDefined!86 (getValueByKey!132 (toList!735 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73706 () Bool)

(declare-fun Unit!2116 () Unit!2086)

(assert (=> b!73706 (= e!48189 Unit!2116)))

(declare-fun b!73707 () Bool)

(assert (=> b!73707 (= e!48190 (isDefined!86 (getValueByKey!132 (toList!735 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17037 c!11002) b!73705))

(assert (= (and d!17037 (not c!11002)) b!73706))

(assert (= (and d!17037 (not res!39048)) b!73707))

(declare-fun m!72169 () Bool)

(assert (=> d!17037 m!72169))

(declare-fun m!72171 () Bool)

(assert (=> b!73705 m!72171))

(assert (=> b!73705 m!71439))

(assert (=> b!73705 m!71439))

(declare-fun m!72173 () Bool)

(assert (=> b!73705 m!72173))

(assert (=> b!73707 m!71439))

(assert (=> b!73707 m!71439))

(assert (=> b!73707 m!72173))

(assert (=> bm!6429 d!17037))

(assert (=> b!73148 d!16909))

(declare-fun d!17039 () Bool)

(declare-fun e!48191 () Bool)

(assert (=> d!17039 e!48191))

(declare-fun res!39049 () Bool)

(assert (=> d!17039 (=> (not res!39049) (not e!48191))))

(declare-fun lt!33085 () ListLongMap!1439)

(assert (=> d!17039 (= res!39049 (contains!729 lt!33085 (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(declare-fun lt!33084 () List!1507)

(assert (=> d!17039 (= lt!33085 (ListLongMap!1440 lt!33084))))

(declare-fun lt!33082 () Unit!2086)

(declare-fun lt!33083 () Unit!2086)

(assert (=> d!17039 (= lt!33082 lt!33083)))

(assert (=> d!17039 (= (getValueByKey!132 lt!33084 (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))) (Some!137 (_2!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (=> d!17039 (= lt!33083 (lemmaContainsTupThenGetReturnValue!51 lt!33084 (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (_2!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (=> d!17039 (= lt!33084 (insertStrictlySorted!53 (toList!735 (ite c!10836 call!6402 call!6396)) (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (_2!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (=> d!17039 (= (+!98 (ite c!10836 call!6402 call!6396) (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) lt!33085)))

(declare-fun b!73708 () Bool)

(declare-fun res!39050 () Bool)

(assert (=> b!73708 (=> (not res!39050) (not e!48191))))

(assert (=> b!73708 (= res!39050 (= (getValueByKey!132 (toList!735 lt!33085) (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))) (Some!137 (_2!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))))

(declare-fun b!73709 () Bool)

(assert (=> b!73709 (= e!48191 (contains!730 (toList!735 lt!33085) (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (= (and d!17039 res!39049) b!73708))

(assert (= (and b!73708 res!39050) b!73709))

(declare-fun m!72175 () Bool)

(assert (=> d!17039 m!72175))

(declare-fun m!72177 () Bool)

(assert (=> d!17039 m!72177))

(declare-fun m!72179 () Bool)

(assert (=> d!17039 m!72179))

(declare-fun m!72181 () Bool)

(assert (=> d!17039 m!72181))

(declare-fun m!72183 () Bool)

(assert (=> b!73708 m!72183))

(declare-fun m!72185 () Bool)

(assert (=> b!73709 m!72185))

(assert (=> bm!6399 d!17039))

(declare-fun d!17041 () Bool)

(declare-fun e!48193 () Bool)

(assert (=> d!17041 e!48193))

(declare-fun res!39051 () Bool)

(assert (=> d!17041 (=> res!39051 e!48193)))

(declare-fun lt!33088 () Bool)

(assert (=> d!17041 (= res!39051 (not lt!33088))))

(declare-fun lt!33086 () Bool)

(assert (=> d!17041 (= lt!33088 lt!33086)))

(declare-fun lt!33087 () Unit!2086)

(declare-fun e!48192 () Unit!2086)

(assert (=> d!17041 (= lt!33087 e!48192)))

(declare-fun c!11003 () Bool)

(assert (=> d!17041 (= c!11003 lt!33086)))

(assert (=> d!17041 (= lt!33086 (containsKey!136 (toList!735 lt!32694) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!17041 (= (contains!729 lt!32694 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!33088)))

(declare-fun b!73710 () Bool)

(declare-fun lt!33089 () Unit!2086)

(assert (=> b!73710 (= e!48192 lt!33089)))

(assert (=> b!73710 (= lt!33089 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32694) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73710 (isDefined!86 (getValueByKey!132 (toList!735 lt!32694) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!73711 () Bool)

(declare-fun Unit!2117 () Unit!2086)

(assert (=> b!73711 (= e!48192 Unit!2117)))

(declare-fun b!73712 () Bool)

(assert (=> b!73712 (= e!48193 (isDefined!86 (getValueByKey!132 (toList!735 lt!32694) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!17041 c!11003) b!73710))

(assert (= (and d!17041 (not c!11003)) b!73711))

(assert (= (and d!17041 (not res!39051)) b!73712))

(assert (=> d!17041 m!71227))

(declare-fun m!72187 () Bool)

(assert (=> d!17041 m!72187))

(assert (=> b!73710 m!71227))

(declare-fun m!72189 () Bool)

(assert (=> b!73710 m!72189))

(assert (=> b!73710 m!71227))

(assert (=> b!73710 m!71651))

(assert (=> b!73710 m!71651))

(declare-fun m!72191 () Bool)

(assert (=> b!73710 m!72191))

(assert (=> b!73712 m!71227))

(assert (=> b!73712 m!71651))

(assert (=> b!73712 m!71651))

(assert (=> b!73712 m!72191))

(assert (=> b!73190 d!17041))

(declare-fun d!17043 () Bool)

(declare-fun res!39056 () Bool)

(declare-fun e!48198 () Bool)

(assert (=> d!17043 (=> res!39056 e!48198)))

(assert (=> d!17043 (= res!39056 (and ((_ is Cons!1503) (toList!735 lt!32480)) (= (_1!1083 (h!2090 (toList!735 lt!32480))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))))

(assert (=> d!17043 (= (containsKey!136 (toList!735 lt!32480) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) e!48198)))

(declare-fun b!73717 () Bool)

(declare-fun e!48199 () Bool)

(assert (=> b!73717 (= e!48198 e!48199)))

(declare-fun res!39057 () Bool)

(assert (=> b!73717 (=> (not res!39057) (not e!48199))))

(assert (=> b!73717 (= res!39057 (and (or (not ((_ is Cons!1503) (toList!735 lt!32480))) (bvsle (_1!1083 (h!2090 (toList!735 lt!32480))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))) ((_ is Cons!1503) (toList!735 lt!32480)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32480))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))))

(declare-fun b!73718 () Bool)

(assert (=> b!73718 (= e!48199 (containsKey!136 (t!5068 (toList!735 lt!32480)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (= (and d!17043 (not res!39056)) b!73717))

(assert (= (and b!73717 res!39057) b!73718))

(assert (=> b!73718 m!71053))

(declare-fun m!72193 () Bool)

(assert (=> b!73718 m!72193))

(assert (=> d!16797 d!17043))

(assert (=> bm!6407 d!16803))

(assert (=> bm!6405 d!16915))

(assert (=> b!73146 d!16909))

(declare-fun d!17045 () Bool)

(declare-fun e!48201 () Bool)

(assert (=> d!17045 e!48201))

(declare-fun res!39058 () Bool)

(assert (=> d!17045 (=> res!39058 e!48201)))

(declare-fun lt!33092 () Bool)

(assert (=> d!17045 (= res!39058 (not lt!33092))))

(declare-fun lt!33090 () Bool)

(assert (=> d!17045 (= lt!33092 lt!33090)))

(declare-fun lt!33091 () Unit!2086)

(declare-fun e!48200 () Unit!2086)

(assert (=> d!17045 (= lt!33091 e!48200)))

(declare-fun c!11004 () Bool)

(assert (=> d!17045 (= c!11004 lt!33090)))

(assert (=> d!17045 (= lt!33090 (containsKey!136 (toList!735 call!6409) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> d!17045 (= (contains!729 call!6409 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) lt!33092)))

(declare-fun b!73719 () Bool)

(declare-fun lt!33093 () Unit!2086)

(assert (=> b!73719 (= e!48200 lt!33093)))

(assert (=> b!73719 (= lt!33093 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 call!6409) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> b!73719 (isDefined!86 (getValueByKey!132 (toList!735 call!6409) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun b!73720 () Bool)

(declare-fun Unit!2118 () Unit!2086)

(assert (=> b!73720 (= e!48200 Unit!2118)))

(declare-fun b!73721 () Bool)

(assert (=> b!73721 (= e!48201 (isDefined!86 (getValueByKey!132 (toList!735 call!6409) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))))

(assert (= (and d!17045 c!11004) b!73719))

(assert (= (and d!17045 (not c!11004)) b!73720))

(assert (= (and d!17045 (not res!39058)) b!73721))

(assert (=> d!17045 m!71053))

(declare-fun m!72195 () Bool)

(assert (=> d!17045 m!72195))

(assert (=> b!73719 m!71053))

(declare-fun m!72197 () Bool)

(assert (=> b!73719 m!72197))

(assert (=> b!73719 m!71053))

(declare-fun m!72199 () Bool)

(assert (=> b!73719 m!72199))

(assert (=> b!73719 m!72199))

(declare-fun m!72201 () Bool)

(assert (=> b!73719 m!72201))

(assert (=> b!73721 m!71053))

(assert (=> b!73721 m!72199))

(assert (=> b!73721 m!72199))

(assert (=> b!73721 m!72201))

(assert (=> b!73051 d!17045))

(declare-fun condMapEmpty!3183 () Bool)

(declare-fun mapDefault!3183 () ValueCell!894)

(assert (=> mapNonEmpty!3182 (= condMapEmpty!3183 (= mapRest!3182 ((as const (Array (_ BitVec 32) ValueCell!894)) mapDefault!3183)))))

(declare-fun e!48202 () Bool)

(declare-fun mapRes!3183 () Bool)

(assert (=> mapNonEmpty!3182 (= tp!8546 (and e!48202 mapRes!3183))))

(declare-fun mapNonEmpty!3183 () Bool)

(declare-fun tp!8547 () Bool)

(declare-fun e!48203 () Bool)

(assert (=> mapNonEmpty!3183 (= mapRes!3183 (and tp!8547 e!48203))))

(declare-fun mapValue!3183 () ValueCell!894)

(declare-fun mapRest!3183 () (Array (_ BitVec 32) ValueCell!894))

(declare-fun mapKey!3183 () (_ BitVec 32))

(assert (=> mapNonEmpty!3183 (= mapRest!3182 (store mapRest!3183 mapKey!3183 mapValue!3183))))

(declare-fun b!73723 () Bool)

(assert (=> b!73723 (= e!48202 tp_is_empty!2475)))

(declare-fun b!73722 () Bool)

(assert (=> b!73722 (= e!48203 tp_is_empty!2475)))

(declare-fun mapIsEmpty!3183 () Bool)

(assert (=> mapIsEmpty!3183 mapRes!3183))

(assert (= (and mapNonEmpty!3182 condMapEmpty!3183) mapIsEmpty!3183))

(assert (= (and mapNonEmpty!3182 (not condMapEmpty!3183)) mapNonEmpty!3183))

(assert (= (and mapNonEmpty!3183 ((_ is ValueCellFull!894) mapValue!3183)) b!73722))

(assert (= (and mapNonEmpty!3182 ((_ is ValueCellFull!894) mapDefault!3183)) b!73723))

(declare-fun m!72203 () Bool)

(assert (=> mapNonEmpty!3183 m!72203))

(declare-fun condMapEmpty!3184 () Bool)

(declare-fun mapDefault!3184 () ValueCell!894)

(assert (=> mapNonEmpty!3181 (= condMapEmpty!3184 (= mapRest!3181 ((as const (Array (_ BitVec 32) ValueCell!894)) mapDefault!3184)))))

(declare-fun e!48204 () Bool)

(declare-fun mapRes!3184 () Bool)

(assert (=> mapNonEmpty!3181 (= tp!8545 (and e!48204 mapRes!3184))))

(declare-fun mapNonEmpty!3184 () Bool)

(declare-fun tp!8548 () Bool)

(declare-fun e!48205 () Bool)

(assert (=> mapNonEmpty!3184 (= mapRes!3184 (and tp!8548 e!48205))))

(declare-fun mapRest!3184 () (Array (_ BitVec 32) ValueCell!894))

(declare-fun mapValue!3184 () ValueCell!894)

(declare-fun mapKey!3184 () (_ BitVec 32))

(assert (=> mapNonEmpty!3184 (= mapRest!3181 (store mapRest!3184 mapKey!3184 mapValue!3184))))

(declare-fun b!73725 () Bool)

(assert (=> b!73725 (= e!48204 tp_is_empty!2475)))

(declare-fun b!73724 () Bool)

(assert (=> b!73724 (= e!48205 tp_is_empty!2475)))

(declare-fun mapIsEmpty!3184 () Bool)

(assert (=> mapIsEmpty!3184 mapRes!3184))

(assert (= (and mapNonEmpty!3181 condMapEmpty!3184) mapIsEmpty!3184))

(assert (= (and mapNonEmpty!3181 (not condMapEmpty!3184)) mapNonEmpty!3184))

(assert (= (and mapNonEmpty!3184 ((_ is ValueCellFull!894) mapValue!3184)) b!73724))

(assert (= (and mapNonEmpty!3181 ((_ is ValueCellFull!894) mapDefault!3184)) b!73725))

(declare-fun m!72205 () Bool)

(assert (=> mapNonEmpty!3184 m!72205))

(declare-fun b_lambda!3313 () Bool)

(assert (= b_lambda!3303 (or (and b!72889 b_free!2117 (= (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72885 b_free!2119) b_lambda!3313)))

(declare-fun b_lambda!3315 () Bool)

(assert (= b_lambda!3311 (or (and b!72889 b_free!2117 (= (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72885 b_free!2119) b_lambda!3315)))

(declare-fun b_lambda!3317 () Bool)

(assert (= b_lambda!3305 (or (and b!72889 b_free!2117 (= (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72885 b_free!2119) b_lambda!3317)))

(declare-fun b_lambda!3319 () Bool)

(assert (= b_lambda!3307 (or (and b!72889 b_free!2117) (and b!72885 b_free!2119 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))))) b_lambda!3319)))

(declare-fun b_lambda!3321 () Bool)

(assert (= b_lambda!3309 (or (and b!72889 b_free!2117) (and b!72885 b_free!2119 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))))) b_lambda!3321)))

(check-sat (not d!16929) (not b!73520) (not b!73384) (not b!73252) (not d!17019) (not b!73636) (not d!16951) (not b_lambda!3289) (not b!73668) (not d!16977) (not d!16965) (not b!73521) (not d!17037) (not d!16969) (not d!16865) (not b!73602) (not d!16925) b_and!4517 (not d!16901) (not b!73375) (not d!17005) (not b!73336) (not b!73505) (not b!73372) (not b!73603) (not b_lambda!3301) (not b!73382) (not b!73696) (not b!73339) (not b!73308) (not bm!6485) (not d!17027) (not d!16971) (not d!17007) (not b!73719) (not bm!6445) (not d!16959) (not b!73597) (not bm!6473) (not b!73435) (not b!73316) (not b!73525) (not b!73590) (not bm!6496) (not b!73658) (not b!73524) (not b!73463) (not bm!6458) (not d!16933) (not b!73413) (not bm!6497) (not b!73718) (not b!73342) (not b!73492) (not b!73333) (not b!73366) (not b!73517) (not mapNonEmpty!3183) (not b!73291) (not b!73522) (not b!73464) (not b!73565) (not b!73502) (not b!73698) (not d!17013) (not b_next!2119) (not b!73472) (not b!73473) (not b!73669) (not b!73294) (not b!73705) (not d!16967) (not b!73681) (not b!73335) (not b!73506) (not b!73687) (not d!16947) (not b!73330) (not b!73721) (not bm!6503) (not b!73360) (not b!73332) (not b!73497) (not b!73307) (not d!16857) (not b!73337) (not b!73334) (not b_next!2117) (not b!73460) (not b!73340) (not b!73477) (not b!73275) (not d!16957) (not d!16931) (not b!73663) (not b!73351) (not d!16897) (not d!16999) tp_is_empty!2475 (not b!73567) (not d!16863) (not bm!6498) (not d!16953) (not d!16945) (not bm!6453) (not d!16973) (not d!17035) (not b!73410) (not bm!6507) (not b!73365) (not b!73583) (not b!73598) (not b!73362) (not d!16987) (not d!16941) (not b!73676) (not b!73640) (not b!73599) (not d!17029) (not b!73378) (not bm!6489) (not b!73383) (not b!73645) (not d!16869) (not b!73702) (not b!73364) (not d!16889) (not b!73487) (not d!16885) (not d!16979) (not d!16887) (not d!16871) (not bm!6486) (not d!16905) (not bm!6448) (not d!16911) (not bm!6455) (not b!73310) (not b!73419) (not b!73265) (not b!73338) (not d!16949) (not b!73421) (not b!73490) (not d!16919) (not d!17021) (not b!73371) (not d!16939) (not b!73585) (not b!73642) (not d!17001) (not b_lambda!3297) (not b!73420) (not d!17031) (not b!73601) (not d!16995) (not b!73498) (not mapNonEmpty!3184) (not b_lambda!3299) (not d!16893) (not b!73578) (not d!16877) (not b!73408) (not b_lambda!3321) (not b!73710) (not b!73651) (not b!73704) (not b!73436) (not d!16955) (not b!73700) (not b!73495) (not d!16989) (not b!73570) (not d!16981) (not d!16913) (not b!73661) (not d!16855) (not b!73369) (not b!73345) (not b!73325) (not b!73317) (not bm!6459) (not d!16883) (not d!16963) (not d!17023) (not d!16993) (not b!73251) (not d!17015) (not b!73673) b_and!4519 (not b!73295) (not b!73660) (not d!16843) (not b_lambda!3313) (not b!73712) (not b!73519) (not bm!6506) (not bm!6460) (not b!73254) (not b!73276) (not b!73331) (not b!73329) (not d!16873) (not d!16879) (not d!17033) (not d!17045) (not bm!6444) (not b!73352) (not b!73403) (not b!73586) (not d!16961) (not bm!6451) (not bm!6487) (not b!73300) (not b!73417) (not d!16991) (not b!73314) (not b!73476) (not b!73298) (not d!16921) (not d!16975) (not b!73327) (not b!73303) (not d!16861) (not b!73343) (not b!73609) (not bm!6452) (not d!16881) (not b!73424) (not b!73574) (not bm!6446) (not b!73349) (not d!16985) (not bm!6470) (not b_lambda!3315) (not bm!6501) (not b!73703) (not b_lambda!3319) (not b!73279) (not d!16851) (not d!16853) (not b!73416) (not d!16997) (not d!16915) (not b!73302) (not b!73426) (not d!17003) (not b!73666) (not bm!6467) (not b!73281) (not b_lambda!3317) (not bm!6474) (not b!73677) (not d!17039) (not b!73575) (not b!73701) (not b!73594) (not d!16875) (not b!73639) (not b!73688) (not b!73292) (not b!73571) (not b!73380) (not b!73423) (not b!73280) (not b!73411) (not b!73685) (not b!73707) (not b!73580) (not b!73593) (not d!17041) (not b!73429) (not b!73306) (not b!73523) (not b!73516) (not b!73709) (not b!73515) (not b!73708) (not b!73385))
(check-sat b_and!4517 b_and!4519 (not b_next!2117) (not b_next!2119))
(get-model)

(declare-fun d!17047 () Bool)

(assert (=> d!17047 (contains!729 (+!98 lt!32784 (tuple2!2147 lt!32778 (zeroValue!2115 newMap!16))) lt!32769)))

(declare-fun lt!33094 () Unit!2086)

(assert (=> d!17047 (= lt!33094 (choose!425 lt!32784 lt!32778 (zeroValue!2115 newMap!16) lt!32769))))

(assert (=> d!17047 (contains!729 lt!32784 lt!32769)))

(assert (=> d!17047 (= (addStillContains!51 lt!32784 lt!32778 (zeroValue!2115 newMap!16) lt!32769) lt!33094)))

(declare-fun bs!3155 () Bool)

(assert (= bs!3155 d!17047))

(assert (=> bs!3155 m!71491))

(assert (=> bs!3155 m!71491))

(assert (=> bs!3155 m!71497))

(declare-fun m!72207 () Bool)

(assert (=> bs!3155 m!72207))

(declare-fun m!72209 () Bool)

(assert (=> bs!3155 m!72209))

(assert (=> b!73317 d!17047))

(declare-fun d!17049 () Bool)

(assert (=> d!17049 (= (apply!75 (+!98 lt!32771 (tuple2!2147 lt!32781 (minValue!2115 newMap!16))) lt!32779) (apply!75 lt!32771 lt!32779))))

(declare-fun lt!33095 () Unit!2086)

(assert (=> d!17049 (= lt!33095 (choose!424 lt!32771 lt!32781 (minValue!2115 newMap!16) lt!32779))))

(declare-fun e!48206 () Bool)

(assert (=> d!17049 e!48206))

(declare-fun res!39059 () Bool)

(assert (=> d!17049 (=> (not res!39059) (not e!48206))))

(assert (=> d!17049 (= res!39059 (contains!729 lt!32771 lt!32779))))

(assert (=> d!17049 (= (addApplyDifferent!51 lt!32771 lt!32781 (minValue!2115 newMap!16) lt!32779) lt!33095)))

(declare-fun b!73726 () Bool)

(assert (=> b!73726 (= e!48206 (not (= lt!32779 lt!32781)))))

(assert (= (and d!17049 res!39059) b!73726))

(assert (=> d!17049 m!71485))

(assert (=> d!17049 m!71485))

(assert (=> d!17049 m!71503))

(assert (=> d!17049 m!71493))

(declare-fun m!72211 () Bool)

(assert (=> d!17049 m!72211))

(declare-fun m!72213 () Bool)

(assert (=> d!17049 m!72213))

(assert (=> b!73317 d!17049))

(declare-fun d!17051 () Bool)

(assert (=> d!17051 (= (apply!75 (+!98 lt!32777 (tuple2!2147 lt!32767 (minValue!2115 newMap!16))) lt!32765) (get!1158 (getValueByKey!132 (toList!735 (+!98 lt!32777 (tuple2!2147 lt!32767 (minValue!2115 newMap!16)))) lt!32765)))))

(declare-fun bs!3156 () Bool)

(assert (= bs!3156 d!17051))

(declare-fun m!72215 () Bool)

(assert (=> bs!3156 m!72215))

(assert (=> bs!3156 m!72215))

(declare-fun m!72217 () Bool)

(assert (=> bs!3156 m!72217))

(assert (=> b!73317 d!17051))

(declare-fun d!17053 () Bool)

(assert (=> d!17053 (= (apply!75 (+!98 lt!32771 (tuple2!2147 lt!32781 (minValue!2115 newMap!16))) lt!32779) (get!1158 (getValueByKey!132 (toList!735 (+!98 lt!32771 (tuple2!2147 lt!32781 (minValue!2115 newMap!16)))) lt!32779)))))

(declare-fun bs!3157 () Bool)

(assert (= bs!3157 d!17053))

(declare-fun m!72219 () Bool)

(assert (=> bs!3157 m!72219))

(assert (=> bs!3157 m!72219))

(declare-fun m!72221 () Bool)

(assert (=> bs!3157 m!72221))

(assert (=> b!73317 d!17053))

(declare-fun d!17055 () Bool)

(assert (=> d!17055 (= (apply!75 lt!32771 lt!32779) (get!1158 (getValueByKey!132 (toList!735 lt!32771) lt!32779)))))

(declare-fun bs!3158 () Bool)

(assert (= bs!3158 d!17055))

(declare-fun m!72223 () Bool)

(assert (=> bs!3158 m!72223))

(assert (=> bs!3158 m!72223))

(declare-fun m!72225 () Bool)

(assert (=> bs!3158 m!72225))

(assert (=> b!73317 d!17055))

(declare-fun d!17057 () Bool)

(assert (=> d!17057 (= (apply!75 (+!98 lt!32782 (tuple2!2147 lt!32772 (zeroValue!2115 newMap!16))) lt!32764) (apply!75 lt!32782 lt!32764))))

(declare-fun lt!33096 () Unit!2086)

(assert (=> d!17057 (= lt!33096 (choose!424 lt!32782 lt!32772 (zeroValue!2115 newMap!16) lt!32764))))

(declare-fun e!48207 () Bool)

(assert (=> d!17057 e!48207))

(declare-fun res!39060 () Bool)

(assert (=> d!17057 (=> (not res!39060) (not e!48207))))

(assert (=> d!17057 (= res!39060 (contains!729 lt!32782 lt!32764))))

(assert (=> d!17057 (= (addApplyDifferent!51 lt!32782 lt!32772 (zeroValue!2115 newMap!16) lt!32764) lt!33096)))

(declare-fun b!73727 () Bool)

(assert (=> b!73727 (= e!48207 (not (= lt!32764 lt!32772)))))

(assert (= (and d!17057 res!39060) b!73727))

(assert (=> d!17057 m!71489))

(assert (=> d!17057 m!71489))

(assert (=> d!17057 m!71507))

(assert (=> d!17057 m!71511))

(declare-fun m!72227 () Bool)

(assert (=> d!17057 m!72227))

(declare-fun m!72229 () Bool)

(assert (=> d!17057 m!72229))

(assert (=> b!73317 d!17057))

(declare-fun d!17059 () Bool)

(assert (=> d!17059 (= (apply!75 (+!98 lt!32782 (tuple2!2147 lt!32772 (zeroValue!2115 newMap!16))) lt!32764) (get!1158 (getValueByKey!132 (toList!735 (+!98 lt!32782 (tuple2!2147 lt!32772 (zeroValue!2115 newMap!16)))) lt!32764)))))

(declare-fun bs!3159 () Bool)

(assert (= bs!3159 d!17059))

(declare-fun m!72231 () Bool)

(assert (=> bs!3159 m!72231))

(assert (=> bs!3159 m!72231))

(declare-fun m!72233 () Bool)

(assert (=> bs!3159 m!72233))

(assert (=> b!73317 d!17059))

(declare-fun d!17061 () Bool)

(assert (=> d!17061 (= (apply!75 lt!32782 lt!32764) (get!1158 (getValueByKey!132 (toList!735 lt!32782) lt!32764)))))

(declare-fun bs!3160 () Bool)

(assert (= bs!3160 d!17061))

(declare-fun m!72235 () Bool)

(assert (=> bs!3160 m!72235))

(assert (=> bs!3160 m!72235))

(declare-fun m!72237 () Bool)

(assert (=> bs!3160 m!72237))

(assert (=> b!73317 d!17061))

(declare-fun d!17063 () Bool)

(declare-fun e!48208 () Bool)

(assert (=> d!17063 e!48208))

(declare-fun res!39061 () Bool)

(assert (=> d!17063 (=> (not res!39061) (not e!48208))))

(declare-fun lt!33100 () ListLongMap!1439)

(assert (=> d!17063 (= res!39061 (contains!729 lt!33100 (_1!1083 (tuple2!2147 lt!32781 (minValue!2115 newMap!16)))))))

(declare-fun lt!33099 () List!1507)

(assert (=> d!17063 (= lt!33100 (ListLongMap!1440 lt!33099))))

(declare-fun lt!33097 () Unit!2086)

(declare-fun lt!33098 () Unit!2086)

(assert (=> d!17063 (= lt!33097 lt!33098)))

(assert (=> d!17063 (= (getValueByKey!132 lt!33099 (_1!1083 (tuple2!2147 lt!32781 (minValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 lt!32781 (minValue!2115 newMap!16)))))))

(assert (=> d!17063 (= lt!33098 (lemmaContainsTupThenGetReturnValue!51 lt!33099 (_1!1083 (tuple2!2147 lt!32781 (minValue!2115 newMap!16))) (_2!1083 (tuple2!2147 lt!32781 (minValue!2115 newMap!16)))))))

(assert (=> d!17063 (= lt!33099 (insertStrictlySorted!53 (toList!735 lt!32771) (_1!1083 (tuple2!2147 lt!32781 (minValue!2115 newMap!16))) (_2!1083 (tuple2!2147 lt!32781 (minValue!2115 newMap!16)))))))

(assert (=> d!17063 (= (+!98 lt!32771 (tuple2!2147 lt!32781 (minValue!2115 newMap!16))) lt!33100)))

(declare-fun b!73728 () Bool)

(declare-fun res!39062 () Bool)

(assert (=> b!73728 (=> (not res!39062) (not e!48208))))

(assert (=> b!73728 (= res!39062 (= (getValueByKey!132 (toList!735 lt!33100) (_1!1083 (tuple2!2147 lt!32781 (minValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 lt!32781 (minValue!2115 newMap!16))))))))

(declare-fun b!73729 () Bool)

(assert (=> b!73729 (= e!48208 (contains!730 (toList!735 lt!33100) (tuple2!2147 lt!32781 (minValue!2115 newMap!16))))))

(assert (= (and d!17063 res!39061) b!73728))

(assert (= (and b!73728 res!39062) b!73729))

(declare-fun m!72239 () Bool)

(assert (=> d!17063 m!72239))

(declare-fun m!72241 () Bool)

(assert (=> d!17063 m!72241))

(declare-fun m!72243 () Bool)

(assert (=> d!17063 m!72243))

(declare-fun m!72245 () Bool)

(assert (=> d!17063 m!72245))

(declare-fun m!72247 () Bool)

(assert (=> b!73728 m!72247))

(declare-fun m!72249 () Bool)

(assert (=> b!73729 m!72249))

(assert (=> b!73317 d!17063))

(declare-fun d!17065 () Bool)

(declare-fun e!48210 () Bool)

(assert (=> d!17065 e!48210))

(declare-fun res!39063 () Bool)

(assert (=> d!17065 (=> res!39063 e!48210)))

(declare-fun lt!33103 () Bool)

(assert (=> d!17065 (= res!39063 (not lt!33103))))

(declare-fun lt!33101 () Bool)

(assert (=> d!17065 (= lt!33103 lt!33101)))

(declare-fun lt!33102 () Unit!2086)

(declare-fun e!48209 () Unit!2086)

(assert (=> d!17065 (= lt!33102 e!48209)))

(declare-fun c!11005 () Bool)

(assert (=> d!17065 (= c!11005 lt!33101)))

(assert (=> d!17065 (= lt!33101 (containsKey!136 (toList!735 (+!98 lt!32784 (tuple2!2147 lt!32778 (zeroValue!2115 newMap!16)))) lt!32769))))

(assert (=> d!17065 (= (contains!729 (+!98 lt!32784 (tuple2!2147 lt!32778 (zeroValue!2115 newMap!16))) lt!32769) lt!33103)))

(declare-fun b!73730 () Bool)

(declare-fun lt!33104 () Unit!2086)

(assert (=> b!73730 (= e!48209 lt!33104)))

(assert (=> b!73730 (= lt!33104 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 (+!98 lt!32784 (tuple2!2147 lt!32778 (zeroValue!2115 newMap!16)))) lt!32769))))

(assert (=> b!73730 (isDefined!86 (getValueByKey!132 (toList!735 (+!98 lt!32784 (tuple2!2147 lt!32778 (zeroValue!2115 newMap!16)))) lt!32769))))

(declare-fun b!73731 () Bool)

(declare-fun Unit!2119 () Unit!2086)

(assert (=> b!73731 (= e!48209 Unit!2119)))

(declare-fun b!73732 () Bool)

(assert (=> b!73732 (= e!48210 (isDefined!86 (getValueByKey!132 (toList!735 (+!98 lt!32784 (tuple2!2147 lt!32778 (zeroValue!2115 newMap!16)))) lt!32769)))))

(assert (= (and d!17065 c!11005) b!73730))

(assert (= (and d!17065 (not c!11005)) b!73731))

(assert (= (and d!17065 (not res!39063)) b!73732))

(declare-fun m!72251 () Bool)

(assert (=> d!17065 m!72251))

(declare-fun m!72253 () Bool)

(assert (=> b!73730 m!72253))

(declare-fun m!72255 () Bool)

(assert (=> b!73730 m!72255))

(assert (=> b!73730 m!72255))

(declare-fun m!72257 () Bool)

(assert (=> b!73730 m!72257))

(assert (=> b!73732 m!72255))

(assert (=> b!73732 m!72255))

(assert (=> b!73732 m!72257))

(assert (=> b!73317 d!17065))

(declare-fun d!17067 () Bool)

(declare-fun e!48211 () Bool)

(assert (=> d!17067 e!48211))

(declare-fun res!39064 () Bool)

(assert (=> d!17067 (=> (not res!39064) (not e!48211))))

(declare-fun lt!33108 () ListLongMap!1439)

(assert (=> d!17067 (= res!39064 (contains!729 lt!33108 (_1!1083 (tuple2!2147 lt!32778 (zeroValue!2115 newMap!16)))))))

(declare-fun lt!33107 () List!1507)

(assert (=> d!17067 (= lt!33108 (ListLongMap!1440 lt!33107))))

(declare-fun lt!33105 () Unit!2086)

(declare-fun lt!33106 () Unit!2086)

(assert (=> d!17067 (= lt!33105 lt!33106)))

(assert (=> d!17067 (= (getValueByKey!132 lt!33107 (_1!1083 (tuple2!2147 lt!32778 (zeroValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 lt!32778 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17067 (= lt!33106 (lemmaContainsTupThenGetReturnValue!51 lt!33107 (_1!1083 (tuple2!2147 lt!32778 (zeroValue!2115 newMap!16))) (_2!1083 (tuple2!2147 lt!32778 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17067 (= lt!33107 (insertStrictlySorted!53 (toList!735 lt!32784) (_1!1083 (tuple2!2147 lt!32778 (zeroValue!2115 newMap!16))) (_2!1083 (tuple2!2147 lt!32778 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17067 (= (+!98 lt!32784 (tuple2!2147 lt!32778 (zeroValue!2115 newMap!16))) lt!33108)))

(declare-fun b!73733 () Bool)

(declare-fun res!39065 () Bool)

(assert (=> b!73733 (=> (not res!39065) (not e!48211))))

(assert (=> b!73733 (= res!39065 (= (getValueByKey!132 (toList!735 lt!33108) (_1!1083 (tuple2!2147 lt!32778 (zeroValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 lt!32778 (zeroValue!2115 newMap!16))))))))

(declare-fun b!73734 () Bool)

(assert (=> b!73734 (= e!48211 (contains!730 (toList!735 lt!33108) (tuple2!2147 lt!32778 (zeroValue!2115 newMap!16))))))

(assert (= (and d!17067 res!39064) b!73733))

(assert (= (and b!73733 res!39065) b!73734))

(declare-fun m!72259 () Bool)

(assert (=> d!17067 m!72259))

(declare-fun m!72261 () Bool)

(assert (=> d!17067 m!72261))

(declare-fun m!72263 () Bool)

(assert (=> d!17067 m!72263))

(declare-fun m!72265 () Bool)

(assert (=> d!17067 m!72265))

(declare-fun m!72267 () Bool)

(assert (=> b!73733 m!72267))

(declare-fun m!72269 () Bool)

(assert (=> b!73734 m!72269))

(assert (=> b!73317 d!17067))

(declare-fun d!17069 () Bool)

(assert (=> d!17069 (= (apply!75 lt!32777 lt!32765) (get!1158 (getValueByKey!132 (toList!735 lt!32777) lt!32765)))))

(declare-fun bs!3161 () Bool)

(assert (= bs!3161 d!17069))

(declare-fun m!72271 () Bool)

(assert (=> bs!3161 m!72271))

(assert (=> bs!3161 m!72271))

(declare-fun m!72273 () Bool)

(assert (=> bs!3161 m!72273))

(assert (=> b!73317 d!17069))

(declare-fun d!17071 () Bool)

(assert (=> d!17071 (= (apply!75 (+!98 lt!32777 (tuple2!2147 lt!32767 (minValue!2115 newMap!16))) lt!32765) (apply!75 lt!32777 lt!32765))))

(declare-fun lt!33109 () Unit!2086)

(assert (=> d!17071 (= lt!33109 (choose!424 lt!32777 lt!32767 (minValue!2115 newMap!16) lt!32765))))

(declare-fun e!48212 () Bool)

(assert (=> d!17071 e!48212))

(declare-fun res!39066 () Bool)

(assert (=> d!17071 (=> (not res!39066) (not e!48212))))

(assert (=> d!17071 (= res!39066 (contains!729 lt!32777 lt!32765))))

(assert (=> d!17071 (= (addApplyDifferent!51 lt!32777 lt!32767 (minValue!2115 newMap!16) lt!32765) lt!33109)))

(declare-fun b!73735 () Bool)

(assert (=> b!73735 (= e!48212 (not (= lt!32765 lt!32767)))))

(assert (= (and d!17071 res!39066) b!73735))

(assert (=> d!17071 m!71487))

(assert (=> d!17071 m!71487))

(assert (=> d!17071 m!71501))

(assert (=> d!17071 m!71505))

(declare-fun m!72275 () Bool)

(assert (=> d!17071 m!72275))

(declare-fun m!72277 () Bool)

(assert (=> d!17071 m!72277))

(assert (=> b!73317 d!17071))

(declare-fun d!17073 () Bool)

(declare-fun e!48213 () Bool)

(assert (=> d!17073 e!48213))

(declare-fun res!39067 () Bool)

(assert (=> d!17073 (=> (not res!39067) (not e!48213))))

(declare-fun lt!33113 () ListLongMap!1439)

(assert (=> d!17073 (= res!39067 (contains!729 lt!33113 (_1!1083 (tuple2!2147 lt!32767 (minValue!2115 newMap!16)))))))

(declare-fun lt!33112 () List!1507)

(assert (=> d!17073 (= lt!33113 (ListLongMap!1440 lt!33112))))

(declare-fun lt!33110 () Unit!2086)

(declare-fun lt!33111 () Unit!2086)

(assert (=> d!17073 (= lt!33110 lt!33111)))

(assert (=> d!17073 (= (getValueByKey!132 lt!33112 (_1!1083 (tuple2!2147 lt!32767 (minValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 lt!32767 (minValue!2115 newMap!16)))))))

(assert (=> d!17073 (= lt!33111 (lemmaContainsTupThenGetReturnValue!51 lt!33112 (_1!1083 (tuple2!2147 lt!32767 (minValue!2115 newMap!16))) (_2!1083 (tuple2!2147 lt!32767 (minValue!2115 newMap!16)))))))

(assert (=> d!17073 (= lt!33112 (insertStrictlySorted!53 (toList!735 lt!32777) (_1!1083 (tuple2!2147 lt!32767 (minValue!2115 newMap!16))) (_2!1083 (tuple2!2147 lt!32767 (minValue!2115 newMap!16)))))))

(assert (=> d!17073 (= (+!98 lt!32777 (tuple2!2147 lt!32767 (minValue!2115 newMap!16))) lt!33113)))

(declare-fun b!73736 () Bool)

(declare-fun res!39068 () Bool)

(assert (=> b!73736 (=> (not res!39068) (not e!48213))))

(assert (=> b!73736 (= res!39068 (= (getValueByKey!132 (toList!735 lt!33113) (_1!1083 (tuple2!2147 lt!32767 (minValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 lt!32767 (minValue!2115 newMap!16))))))))

(declare-fun b!73737 () Bool)

(assert (=> b!73737 (= e!48213 (contains!730 (toList!735 lt!33113) (tuple2!2147 lt!32767 (minValue!2115 newMap!16))))))

(assert (= (and d!17073 res!39067) b!73736))

(assert (= (and b!73736 res!39068) b!73737))

(declare-fun m!72279 () Bool)

(assert (=> d!17073 m!72279))

(declare-fun m!72281 () Bool)

(assert (=> d!17073 m!72281))

(declare-fun m!72283 () Bool)

(assert (=> d!17073 m!72283))

(declare-fun m!72285 () Bool)

(assert (=> d!17073 m!72285))

(declare-fun m!72287 () Bool)

(assert (=> b!73736 m!72287))

(declare-fun m!72289 () Bool)

(assert (=> b!73737 m!72289))

(assert (=> b!73317 d!17073))

(declare-fun d!17075 () Bool)

(declare-fun e!48214 () Bool)

(assert (=> d!17075 e!48214))

(declare-fun res!39069 () Bool)

(assert (=> d!17075 (=> (not res!39069) (not e!48214))))

(declare-fun lt!33117 () ListLongMap!1439)

(assert (=> d!17075 (= res!39069 (contains!729 lt!33117 (_1!1083 (tuple2!2147 lt!32772 (zeroValue!2115 newMap!16)))))))

(declare-fun lt!33116 () List!1507)

(assert (=> d!17075 (= lt!33117 (ListLongMap!1440 lt!33116))))

(declare-fun lt!33114 () Unit!2086)

(declare-fun lt!33115 () Unit!2086)

(assert (=> d!17075 (= lt!33114 lt!33115)))

(assert (=> d!17075 (= (getValueByKey!132 lt!33116 (_1!1083 (tuple2!2147 lt!32772 (zeroValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 lt!32772 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17075 (= lt!33115 (lemmaContainsTupThenGetReturnValue!51 lt!33116 (_1!1083 (tuple2!2147 lt!32772 (zeroValue!2115 newMap!16))) (_2!1083 (tuple2!2147 lt!32772 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17075 (= lt!33116 (insertStrictlySorted!53 (toList!735 lt!32782) (_1!1083 (tuple2!2147 lt!32772 (zeroValue!2115 newMap!16))) (_2!1083 (tuple2!2147 lt!32772 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17075 (= (+!98 lt!32782 (tuple2!2147 lt!32772 (zeroValue!2115 newMap!16))) lt!33117)))

(declare-fun b!73738 () Bool)

(declare-fun res!39070 () Bool)

(assert (=> b!73738 (=> (not res!39070) (not e!48214))))

(assert (=> b!73738 (= res!39070 (= (getValueByKey!132 (toList!735 lt!33117) (_1!1083 (tuple2!2147 lt!32772 (zeroValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 lt!32772 (zeroValue!2115 newMap!16))))))))

(declare-fun b!73739 () Bool)

(assert (=> b!73739 (= e!48214 (contains!730 (toList!735 lt!33117) (tuple2!2147 lt!32772 (zeroValue!2115 newMap!16))))))

(assert (= (and d!17075 res!39069) b!73738))

(assert (= (and b!73738 res!39070) b!73739))

(declare-fun m!72291 () Bool)

(assert (=> d!17075 m!72291))

(declare-fun m!72293 () Bool)

(assert (=> d!17075 m!72293))

(declare-fun m!72295 () Bool)

(assert (=> d!17075 m!72295))

(declare-fun m!72297 () Bool)

(assert (=> d!17075 m!72297))

(declare-fun m!72299 () Bool)

(assert (=> b!73738 m!72299))

(declare-fun m!72301 () Bool)

(assert (=> b!73739 m!72301))

(assert (=> b!73317 d!17075))

(declare-fun b!73740 () Bool)

(declare-fun res!39071 () Bool)

(declare-fun e!48217 () Bool)

(assert (=> b!73740 (=> (not res!39071) (not e!48217))))

(declare-fun lt!33120 () ListLongMap!1439)

(assert (=> b!73740 (= res!39071 (not (contains!729 lt!33120 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73741 () Bool)

(declare-fun e!48215 () Bool)

(assert (=> b!73741 (= e!48215 (= lt!33120 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2213 newMap!16))))))

(declare-fun b!73742 () Bool)

(declare-fun e!48218 () Bool)

(assert (=> b!73742 (= e!48218 e!48215)))

(declare-fun c!11007 () Bool)

(assert (=> b!73742 (= c!11007 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!73743 () Bool)

(assert (=> b!73743 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(assert (=> b!73743 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_values!2196 newMap!16))))))

(declare-fun e!48219 () Bool)

(assert (=> b!73743 (= e!48219 (= (apply!75 lt!33120 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1154 (select (arr!1859 (_values!2196 newMap!16)) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!73744 () Bool)

(declare-fun e!48220 () ListLongMap!1439)

(declare-fun call!6511 () ListLongMap!1439)

(assert (=> b!73744 (= e!48220 call!6511)))

(declare-fun b!73745 () Bool)

(declare-fun e!48221 () ListLongMap!1439)

(assert (=> b!73745 (= e!48221 (ListLongMap!1440 Nil!1504))))

(declare-fun b!73746 () Bool)

(assert (=> b!73746 (= e!48215 (isEmpty!321 lt!33120))))

(declare-fun d!17077 () Bool)

(assert (=> d!17077 e!48217))

(declare-fun res!39073 () Bool)

(assert (=> d!17077 (=> (not res!39073) (not e!48217))))

(assert (=> d!17077 (= res!39073 (not (contains!729 lt!33120 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17077 (= lt!33120 e!48221)))

(declare-fun c!11006 () Bool)

(assert (=> d!17077 (= c!11006 (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!17077 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17077 (= (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33120)))

(declare-fun b!73747 () Bool)

(assert (=> b!73747 (= e!48221 e!48220)))

(declare-fun c!11009 () Bool)

(assert (=> b!73747 (= c!11009 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73748 () Bool)

(assert (=> b!73748 (= e!48217 e!48218)))

(declare-fun c!11008 () Bool)

(declare-fun e!48216 () Bool)

(assert (=> b!73748 (= c!11008 e!48216)))

(declare-fun res!39074 () Bool)

(assert (=> b!73748 (=> (not res!39074) (not e!48216))))

(assert (=> b!73748 (= res!39074 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun bm!6508 () Bool)

(assert (=> bm!6508 (= call!6511 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2213 newMap!16)))))

(declare-fun b!73749 () Bool)

(assert (=> b!73749 (= e!48218 e!48219)))

(assert (=> b!73749 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun res!39072 () Bool)

(assert (=> b!73749 (= res!39072 (contains!729 lt!33120 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73749 (=> (not res!39072) (not e!48219))))

(declare-fun b!73750 () Bool)

(assert (=> b!73750 (= e!48216 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73750 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!73751 () Bool)

(declare-fun lt!33123 () Unit!2086)

(declare-fun lt!33121 () Unit!2086)

(assert (=> b!73751 (= lt!33123 lt!33121)))

(declare-fun lt!33118 () ListLongMap!1439)

(declare-fun lt!33119 () V!2947)

(declare-fun lt!33122 () (_ BitVec 64))

(declare-fun lt!33124 () (_ BitVec 64))

(assert (=> b!73751 (not (contains!729 (+!98 lt!33118 (tuple2!2147 lt!33124 lt!33119)) lt!33122))))

(assert (=> b!73751 (= lt!33121 (addStillNotContains!26 lt!33118 lt!33124 lt!33119 lt!33122))))

(assert (=> b!73751 (= lt!33122 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!73751 (= lt!33119 (get!1154 (select (arr!1859 (_values!2196 newMap!16)) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!73751 (= lt!33124 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73751 (= lt!33118 call!6511)))

(assert (=> b!73751 (= e!48220 (+!98 call!6511 (tuple2!2147 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) (get!1154 (select (arr!1859 (_values!2196 newMap!16)) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!17077 c!11006) b!73745))

(assert (= (and d!17077 (not c!11006)) b!73747))

(assert (= (and b!73747 c!11009) b!73751))

(assert (= (and b!73747 (not c!11009)) b!73744))

(assert (= (or b!73751 b!73744) bm!6508))

(assert (= (and d!17077 res!39073) b!73740))

(assert (= (and b!73740 res!39071) b!73748))

(assert (= (and b!73748 res!39074) b!73750))

(assert (= (and b!73748 c!11008) b!73749))

(assert (= (and b!73748 (not c!11008)) b!73742))

(assert (= (and b!73749 res!39072) b!73743))

(assert (= (and b!73742 c!11007) b!73741))

(assert (= (and b!73742 (not c!11007)) b!73746))

(declare-fun b_lambda!3323 () Bool)

(assert (=> (not b_lambda!3323) (not b!73743)))

(assert (=> b!73743 t!5077))

(declare-fun b_and!4521 () Bool)

(assert (= b_and!4517 (and (=> t!5077 result!2697) b_and!4521)))

(assert (=> b!73743 t!5079))

(declare-fun b_and!4523 () Bool)

(assert (= b_and!4519 (and (=> t!5079 result!2699) b_and!4523)))

(declare-fun b_lambda!3325 () Bool)

(assert (=> (not b_lambda!3325) (not b!73751)))

(assert (=> b!73751 t!5077))

(declare-fun b_and!4525 () Bool)

(assert (= b_and!4521 (and (=> t!5077 result!2697) b_and!4525)))

(assert (=> b!73751 t!5079))

(declare-fun b_and!4527 () Bool)

(assert (= b_and!4523 (and (=> t!5079 result!2699) b_and!4527)))

(assert (=> b!73750 m!71397))

(assert (=> b!73750 m!71397))

(assert (=> b!73750 m!71411))

(declare-fun m!72303 () Bool)

(assert (=> d!17077 m!72303))

(assert (=> d!17077 m!71423))

(declare-fun m!72305 () Bool)

(assert (=> b!73740 m!72305))

(assert (=> b!73751 m!71521))

(declare-fun m!72307 () Bool)

(assert (=> b!73751 m!72307))

(assert (=> b!73751 m!71523))

(assert (=> b!73751 m!71521))

(assert (=> b!73751 m!71525))

(assert (=> b!73751 m!71397))

(declare-fun m!72309 () Bool)

(assert (=> b!73751 m!72309))

(assert (=> b!73751 m!72309))

(declare-fun m!72311 () Bool)

(assert (=> b!73751 m!72311))

(declare-fun m!72313 () Bool)

(assert (=> b!73751 m!72313))

(assert (=> b!73751 m!71523))

(assert (=> b!73749 m!71397))

(assert (=> b!73749 m!71397))

(declare-fun m!72315 () Bool)

(assert (=> b!73749 m!72315))

(assert (=> b!73747 m!71397))

(assert (=> b!73747 m!71397))

(assert (=> b!73747 m!71411))

(declare-fun m!72317 () Bool)

(assert (=> bm!6508 m!72317))

(assert (=> b!73743 m!71397))

(declare-fun m!72319 () Bool)

(assert (=> b!73743 m!72319))

(assert (=> b!73743 m!71521))

(assert (=> b!73743 m!71523))

(assert (=> b!73743 m!71521))

(assert (=> b!73743 m!71525))

(assert (=> b!73743 m!71397))

(assert (=> b!73743 m!71523))

(assert (=> b!73741 m!72317))

(declare-fun m!72321 () Bool)

(assert (=> b!73746 m!72321))

(assert (=> b!73317 d!17077))

(declare-fun d!17079 () Bool)

(declare-fun res!39079 () Bool)

(declare-fun e!48226 () Bool)

(assert (=> d!17079 (=> res!39079 e!48226)))

(assert (=> d!17079 (= res!39079 (or ((_ is Nil!1504) lt!33050) ((_ is Nil!1504) (t!5068 lt!33050))))))

(assert (=> d!17079 (= (isStrictlySorted!287 lt!33050) e!48226)))

(declare-fun b!73756 () Bool)

(declare-fun e!48227 () Bool)

(assert (=> b!73756 (= e!48226 e!48227)))

(declare-fun res!39080 () Bool)

(assert (=> b!73756 (=> (not res!39080) (not e!48227))))

(assert (=> b!73756 (= res!39080 (bvslt (_1!1083 (h!2090 lt!33050)) (_1!1083 (h!2090 (t!5068 lt!33050)))))))

(declare-fun b!73757 () Bool)

(assert (=> b!73757 (= e!48227 (isStrictlySorted!287 (t!5068 lt!33050)))))

(assert (= (and d!17079 (not res!39079)) b!73756))

(assert (= (and b!73756 res!39080) b!73757))

(declare-fun m!72323 () Bool)

(assert (=> b!73757 m!72323))

(assert (=> d!17029 d!17079))

(declare-fun d!17081 () Bool)

(declare-fun res!39081 () Bool)

(declare-fun e!48228 () Bool)

(assert (=> d!17081 (=> res!39081 e!48228)))

(assert (=> d!17081 (= res!39081 (or ((_ is Nil!1504) (toList!735 lt!32476)) ((_ is Nil!1504) (t!5068 (toList!735 lt!32476)))))))

(assert (=> d!17081 (= (isStrictlySorted!287 (toList!735 lt!32476)) e!48228)))

(declare-fun b!73758 () Bool)

(declare-fun e!48229 () Bool)

(assert (=> b!73758 (= e!48228 e!48229)))

(declare-fun res!39082 () Bool)

(assert (=> b!73758 (=> (not res!39082) (not e!48229))))

(assert (=> b!73758 (= res!39082 (bvslt (_1!1083 (h!2090 (toList!735 lt!32476))) (_1!1083 (h!2090 (t!5068 (toList!735 lt!32476))))))))

(declare-fun b!73759 () Bool)

(assert (=> b!73759 (= e!48229 (isStrictlySorted!287 (t!5068 (toList!735 lt!32476))))))

(assert (= (and d!17081 (not res!39081)) b!73758))

(assert (= (and b!73758 res!39082) b!73759))

(declare-fun m!72325 () Bool)

(assert (=> b!73759 m!72325))

(assert (=> d!17029 d!17081))

(declare-fun d!17083 () Bool)

(assert (=> d!17083 (= (isDefined!86 (getValueByKey!132 (toList!735 lt!32694) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!322 (getValueByKey!132 (toList!735 lt!32694) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3162 () Bool)

(assert (= bs!3162 d!17083))

(assert (=> bs!3162 m!71447))

(declare-fun m!72327 () Bool)

(assert (=> bs!3162 m!72327))

(assert (=> b!73302 d!17083))

(declare-fun b!73763 () Bool)

(declare-fun e!48231 () Option!138)

(assert (=> b!73763 (= e!48231 None!136)))

(declare-fun b!73761 () Bool)

(declare-fun e!48230 () Option!138)

(assert (=> b!73761 (= e!48230 e!48231)))

(declare-fun c!11011 () Bool)

(assert (=> b!73761 (= c!11011 (and ((_ is Cons!1503) (toList!735 lt!32694)) (not (= (_1!1083 (h!2090 (toList!735 lt!32694))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!73760 () Bool)

(assert (=> b!73760 (= e!48230 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32694)))))))

(declare-fun d!17085 () Bool)

(declare-fun c!11010 () Bool)

(assert (=> d!17085 (= c!11010 (and ((_ is Cons!1503) (toList!735 lt!32694)) (= (_1!1083 (h!2090 (toList!735 lt!32694))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17085 (= (getValueByKey!132 (toList!735 lt!32694) #b1000000000000000000000000000000000000000000000000000000000000000) e!48230)))

(declare-fun b!73762 () Bool)

(assert (=> b!73762 (= e!48231 (getValueByKey!132 (t!5068 (toList!735 lt!32694)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17085 c!11010) b!73760))

(assert (= (and d!17085 (not c!11010)) b!73761))

(assert (= (and b!73761 c!11011) b!73762))

(assert (= (and b!73761 (not c!11011)) b!73763))

(declare-fun m!72329 () Bool)

(assert (=> b!73762 m!72329))

(assert (=> b!73302 d!17085))

(declare-fun d!17087 () Bool)

(assert (=> d!17087 (= (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73362 d!17087))

(declare-fun d!17089 () Bool)

(declare-fun lt!33125 () Bool)

(assert (=> d!17089 (= lt!33125 (select (content!76 lt!32724) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))))))

(declare-fun e!48232 () Bool)

(assert (=> d!17089 (= lt!33125 e!48232)))

(declare-fun res!39084 () Bool)

(assert (=> d!17089 (=> (not res!39084) (not e!48232))))

(assert (=> d!17089 (= res!39084 ((_ is Cons!1503) lt!32724))))

(assert (=> d!17089 (= (contains!730 lt!32724 (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))) lt!33125)))

(declare-fun b!73764 () Bool)

(declare-fun e!48233 () Bool)

(assert (=> b!73764 (= e!48232 e!48233)))

(declare-fun res!39083 () Bool)

(assert (=> b!73764 (=> res!39083 e!48233)))

(assert (=> b!73764 (= res!39083 (= (h!2090 lt!32724) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))))))

(declare-fun b!73765 () Bool)

(assert (=> b!73765 (= e!48233 (contains!730 (t!5068 lt!32724) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))))))

(assert (= (and d!17089 res!39084) b!73764))

(assert (= (and b!73764 (not res!39083)) b!73765))

(declare-fun m!72331 () Bool)

(assert (=> d!17089 m!72331))

(declare-fun m!72333 () Bool)

(assert (=> d!17089 m!72333))

(declare-fun m!72335 () Bool)

(assert (=> b!73765 m!72335))

(assert (=> b!73498 d!17089))

(declare-fun d!17091 () Bool)

(assert (=> d!17091 (= (validMask!0 (mask!6180 newMap!16)) (and (or (= (mask!6180 newMap!16) #b00000000000000000000000000000111) (= (mask!6180 newMap!16) #b00000000000000000000000000001111) (= (mask!6180 newMap!16) #b00000000000000000000000000011111) (= (mask!6180 newMap!16) #b00000000000000000000000000111111) (= (mask!6180 newMap!16) #b00000000000000000000000001111111) (= (mask!6180 newMap!16) #b00000000000000000000000011111111) (= (mask!6180 newMap!16) #b00000000000000000000000111111111) (= (mask!6180 newMap!16) #b00000000000000000000001111111111) (= (mask!6180 newMap!16) #b00000000000000000000011111111111) (= (mask!6180 newMap!16) #b00000000000000000000111111111111) (= (mask!6180 newMap!16) #b00000000000000000001111111111111) (= (mask!6180 newMap!16) #b00000000000000000011111111111111) (= (mask!6180 newMap!16) #b00000000000000000111111111111111) (= (mask!6180 newMap!16) #b00000000000000001111111111111111) (= (mask!6180 newMap!16) #b00000000000000011111111111111111) (= (mask!6180 newMap!16) #b00000000000000111111111111111111) (= (mask!6180 newMap!16) #b00000000000001111111111111111111) (= (mask!6180 newMap!16) #b00000000000011111111111111111111) (= (mask!6180 newMap!16) #b00000000000111111111111111111111) (= (mask!6180 newMap!16) #b00000000001111111111111111111111) (= (mask!6180 newMap!16) #b00000000011111111111111111111111) (= (mask!6180 newMap!16) #b00000000111111111111111111111111) (= (mask!6180 newMap!16) #b00000001111111111111111111111111) (= (mask!6180 newMap!16) #b00000011111111111111111111111111) (= (mask!6180 newMap!16) #b00000111111111111111111111111111) (= (mask!6180 newMap!16) #b00001111111111111111111111111111) (= (mask!6180 newMap!16) #b00011111111111111111111111111111) (= (mask!6180 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6180 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!16873 d!17091))

(declare-fun d!17093 () Bool)

(assert (=> d!17093 (= (isEmpty!323 (toList!735 lt!32694)) ((_ is Nil!1504) (toList!735 lt!32694)))))

(assert (=> d!17015 d!17093))

(declare-fun d!17095 () Bool)

(declare-fun e!48234 () Bool)

(assert (=> d!17095 e!48234))

(declare-fun res!39085 () Bool)

(assert (=> d!17095 (=> (not res!39085) (not e!48234))))

(declare-fun lt!33129 () ListLongMap!1439)

(assert (=> d!17095 (= res!39085 (contains!729 lt!33129 (_1!1083 (ite (or c!10895 c!10896) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(declare-fun lt!33128 () List!1507)

(assert (=> d!17095 (= lt!33129 (ListLongMap!1440 lt!33128))))

(declare-fun lt!33126 () Unit!2086)

(declare-fun lt!33127 () Unit!2086)

(assert (=> d!17095 (= lt!33126 lt!33127)))

(assert (=> d!17095 (= (getValueByKey!132 lt!33128 (_1!1083 (ite (or c!10895 c!10896) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))) (Some!137 (_2!1083 (ite (or c!10895 c!10896) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(assert (=> d!17095 (= lt!33127 (lemmaContainsTupThenGetReturnValue!51 lt!33128 (_1!1083 (ite (or c!10895 c!10896) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) (_2!1083 (ite (or c!10895 c!10896) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(assert (=> d!17095 (= lt!33128 (insertStrictlySorted!53 (toList!735 (ite c!10895 call!6455 (ite c!10896 call!6451 call!6449))) (_1!1083 (ite (or c!10895 c!10896) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) (_2!1083 (ite (or c!10895 c!10896) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(assert (=> d!17095 (= (+!98 (ite c!10895 call!6455 (ite c!10896 call!6451 call!6449)) (ite (or c!10895 c!10896) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) lt!33129)))

(declare-fun b!73766 () Bool)

(declare-fun res!39086 () Bool)

(assert (=> b!73766 (=> (not res!39086) (not e!48234))))

(assert (=> b!73766 (= res!39086 (= (getValueByKey!132 (toList!735 lt!33129) (_1!1083 (ite (or c!10895 c!10896) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))) (Some!137 (_2!1083 (ite (or c!10895 c!10896) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))))

(declare-fun b!73767 () Bool)

(assert (=> b!73767 (= e!48234 (contains!730 (toList!735 lt!33129) (ite (or c!10895 c!10896) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(assert (= (and d!17095 res!39085) b!73766))

(assert (= (and b!73766 res!39086) b!73767))

(declare-fun m!72337 () Bool)

(assert (=> d!17095 m!72337))

(declare-fun m!72339 () Bool)

(assert (=> d!17095 m!72339))

(declare-fun m!72341 () Bool)

(assert (=> d!17095 m!72341))

(declare-fun m!72343 () Bool)

(assert (=> d!17095 m!72343))

(declare-fun m!72345 () Bool)

(assert (=> b!73766 m!72345))

(declare-fun m!72347 () Bool)

(assert (=> b!73767 m!72347))

(assert (=> bm!6452 d!17095))

(declare-fun d!17097 () Bool)

(assert (=> d!17097 (= (get!1158 (getValueByKey!132 (toList!735 (+!98 lt!32670 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32658)) (v!2537 (getValueByKey!132 (toList!735 (+!98 lt!32670 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32658)))))

(assert (=> d!16959 d!17097))

(declare-fun b!73771 () Bool)

(declare-fun e!48236 () Option!138)

(assert (=> b!73771 (= e!48236 None!136)))

(declare-fun b!73769 () Bool)

(declare-fun e!48235 () Option!138)

(assert (=> b!73769 (= e!48235 e!48236)))

(declare-fun c!11013 () Bool)

(assert (=> b!73769 (= c!11013 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32670 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))) (not (= (_1!1083 (h!2090 (toList!735 (+!98 lt!32670 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))) lt!32658))))))

(declare-fun b!73768 () Bool)

(assert (=> b!73768 (= e!48235 (Some!137 (_2!1083 (h!2090 (toList!735 (+!98 lt!32670 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))))

(declare-fun d!17099 () Bool)

(declare-fun c!11012 () Bool)

(assert (=> d!17099 (= c!11012 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32670 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))) (= (_1!1083 (h!2090 (toList!735 (+!98 lt!32670 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))) lt!32658)))))

(assert (=> d!17099 (= (getValueByKey!132 (toList!735 (+!98 lt!32670 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32658) e!48235)))

(declare-fun b!73770 () Bool)

(assert (=> b!73770 (= e!48236 (getValueByKey!132 (t!5068 (toList!735 (+!98 lt!32670 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))) lt!32658))))

(assert (= (and d!17099 c!11012) b!73768))

(assert (= (and d!17099 (not c!11012)) b!73769))

(assert (= (and b!73769 c!11013) b!73770))

(assert (= (and b!73769 (not c!11013)) b!73771))

(declare-fun m!72349 () Bool)

(assert (=> b!73770 m!72349))

(assert (=> d!16959 d!17099))

(declare-fun b!73772 () Bool)

(declare-fun res!39087 () Bool)

(declare-fun e!48239 () Bool)

(assert (=> b!73772 (=> (not res!39087) (not e!48239))))

(declare-fun lt!33132 () ListLongMap!1439)

(assert (=> b!73772 (= res!39087 (not (contains!729 lt!33132 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!48237 () Bool)

(declare-fun b!73773 () Bool)

(assert (=> b!73773 (= e!48237 (= lt!33132 (getCurrentListMapNoExtraKeys!62 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!73774 () Bool)

(declare-fun e!48240 () Bool)

(assert (=> b!73774 (= e!48240 e!48237)))

(declare-fun c!11015 () Bool)

(assert (=> b!73774 (= c!11015 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!73775 () Bool)

(assert (=> b!73775 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(assert (=> b!73775 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2097 (_values!2196 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun e!48241 () Bool)

(assert (=> b!73775 (= e!48241 (= (apply!75 lt!33132 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!73776 () Bool)

(declare-fun e!48242 () ListLongMap!1439)

(declare-fun call!6512 () ListLongMap!1439)

(assert (=> b!73776 (= e!48242 call!6512)))

(declare-fun b!73777 () Bool)

(declare-fun e!48243 () ListLongMap!1439)

(assert (=> b!73777 (= e!48243 (ListLongMap!1440 Nil!1504))))

(declare-fun b!73778 () Bool)

(assert (=> b!73778 (= e!48237 (isEmpty!321 lt!33132))))

(declare-fun d!17101 () Bool)

(assert (=> d!17101 e!48239))

(declare-fun res!39089 () Bool)

(assert (=> d!17101 (=> (not res!39089) (not e!48239))))

(assert (=> d!17101 (= res!39089 (not (contains!729 lt!33132 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17101 (= lt!33132 e!48243)))

(declare-fun c!11014 () Bool)

(assert (=> d!17101 (= c!11014 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(assert (=> d!17101 (validMask!0 (mask!6180 (v!2533 (underlying!264 thiss!992))))))

(assert (=> d!17101 (= (getCurrentListMapNoExtraKeys!62 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))) lt!33132)))

(declare-fun b!73779 () Bool)

(assert (=> b!73779 (= e!48243 e!48242)))

(declare-fun c!11017 () Bool)

(assert (=> b!73779 (= c!11017 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!73780 () Bool)

(assert (=> b!73780 (= e!48239 e!48240)))

(declare-fun c!11016 () Bool)

(declare-fun e!48238 () Bool)

(assert (=> b!73780 (= c!11016 e!48238)))

(declare-fun res!39090 () Bool)

(assert (=> b!73780 (=> (not res!39090) (not e!48238))))

(assert (=> b!73780 (= res!39090 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun bm!6509 () Bool)

(assert (=> bm!6509 (= call!6512 (getCurrentListMapNoExtraKeys!62 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (_values!2196 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992))) (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) (minValue!2115 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun b!73781 () Bool)

(assert (=> b!73781 (= e!48240 e!48241)))

(assert (=> b!73781 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun res!39088 () Bool)

(assert (=> b!73781 (= res!39088 (contains!729 lt!33132 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!73781 (=> (not res!39088) (not e!48241))))

(declare-fun b!73782 () Bool)

(assert (=> b!73782 (= e!48238 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!73782 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!73783 () Bool)

(declare-fun lt!33135 () Unit!2086)

(declare-fun lt!33133 () Unit!2086)

(assert (=> b!73783 (= lt!33135 lt!33133)))

(declare-fun lt!33130 () ListLongMap!1439)

(declare-fun lt!33136 () (_ BitVec 64))

(declare-fun lt!33131 () V!2947)

(declare-fun lt!33134 () (_ BitVec 64))

(assert (=> b!73783 (not (contains!729 (+!98 lt!33130 (tuple2!2147 lt!33136 lt!33131)) lt!33134))))

(assert (=> b!73783 (= lt!33133 (addStillNotContains!26 lt!33130 lt!33136 lt!33131 lt!33134))))

(assert (=> b!73783 (= lt!33134 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!73783 (= lt!33131 (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!73783 (= lt!33136 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!73783 (= lt!33130 call!6512)))

(assert (=> b!73783 (= e!48242 (+!98 call!6512 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!17101 c!11014) b!73777))

(assert (= (and d!17101 (not c!11014)) b!73779))

(assert (= (and b!73779 c!11017) b!73783))

(assert (= (and b!73779 (not c!11017)) b!73776))

(assert (= (or b!73783 b!73776) bm!6509))

(assert (= (and d!17101 res!39089) b!73772))

(assert (= (and b!73772 res!39087) b!73780))

(assert (= (and b!73780 res!39090) b!73782))

(assert (= (and b!73780 c!11016) b!73781))

(assert (= (and b!73780 (not c!11016)) b!73774))

(assert (= (and b!73781 res!39088) b!73775))

(assert (= (and b!73774 c!11015) b!73773))

(assert (= (and b!73774 (not c!11015)) b!73778))

(declare-fun b_lambda!3327 () Bool)

(assert (=> (not b_lambda!3327) (not b!73775)))

(assert (=> b!73775 t!5065))

(declare-fun b_and!4529 () Bool)

(assert (= b_and!4525 (and (=> t!5065 result!2683) b_and!4529)))

(assert (=> b!73775 t!5067))

(declare-fun b_and!4531 () Bool)

(assert (= b_and!4527 (and (=> t!5067 result!2687) b_and!4531)))

(declare-fun b_lambda!3329 () Bool)

(assert (=> (not b_lambda!3329) (not b!73783)))

(assert (=> b!73783 t!5065))

(declare-fun b_and!4533 () Bool)

(assert (= b_and!4529 (and (=> t!5065 result!2683) b_and!4533)))

(assert (=> b!73783 t!5067))

(declare-fun b_and!4535 () Bool)

(assert (= b_and!4531 (and (=> t!5067 result!2687) b_and!4535)))

(declare-fun m!72351 () Bool)

(assert (=> b!73782 m!72351))

(assert (=> b!73782 m!72351))

(declare-fun m!72353 () Bool)

(assert (=> b!73782 m!72353))

(declare-fun m!72355 () Bool)

(assert (=> d!17101 m!72355))

(assert (=> d!17101 m!71093))

(declare-fun m!72357 () Bool)

(assert (=> b!73772 m!72357))

(assert (=> b!73783 m!71083))

(declare-fun m!72359 () Bool)

(assert (=> b!73783 m!72359))

(declare-fun m!72361 () Bool)

(assert (=> b!73783 m!72361))

(assert (=> b!73783 m!71083))

(declare-fun m!72363 () Bool)

(assert (=> b!73783 m!72363))

(assert (=> b!73783 m!72351))

(declare-fun m!72365 () Bool)

(assert (=> b!73783 m!72365))

(assert (=> b!73783 m!72365))

(declare-fun m!72367 () Bool)

(assert (=> b!73783 m!72367))

(declare-fun m!72369 () Bool)

(assert (=> b!73783 m!72369))

(assert (=> b!73783 m!72361))

(assert (=> b!73781 m!72351))

(assert (=> b!73781 m!72351))

(declare-fun m!72371 () Bool)

(assert (=> b!73781 m!72371))

(assert (=> b!73779 m!72351))

(assert (=> b!73779 m!72351))

(assert (=> b!73779 m!72353))

(declare-fun m!72373 () Bool)

(assert (=> bm!6509 m!72373))

(assert (=> b!73775 m!72351))

(declare-fun m!72375 () Bool)

(assert (=> b!73775 m!72375))

(assert (=> b!73775 m!71083))

(assert (=> b!73775 m!72361))

(assert (=> b!73775 m!71083))

(assert (=> b!73775 m!72363))

(assert (=> b!73775 m!72351))

(assert (=> b!73775 m!72361))

(assert (=> b!73773 m!72373))

(declare-fun m!72377 () Bool)

(assert (=> b!73778 m!72377))

(assert (=> b!73411 d!17101))

(declare-fun d!17103 () Bool)

(assert (=> d!17103 (isDefined!86 (getValueByKey!132 (toList!735 call!6409) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun lt!33137 () Unit!2086)

(assert (=> d!17103 (= lt!33137 (choose!421 (toList!735 call!6409) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun e!48244 () Bool)

(assert (=> d!17103 e!48244))

(declare-fun res!39091 () Bool)

(assert (=> d!17103 (=> (not res!39091) (not e!48244))))

(assert (=> d!17103 (= res!39091 (isStrictlySorted!287 (toList!735 call!6409)))))

(assert (=> d!17103 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 call!6409) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) lt!33137)))

(declare-fun b!73784 () Bool)

(assert (=> b!73784 (= e!48244 (containsKey!136 (toList!735 call!6409) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (= (and d!17103 res!39091) b!73784))

(assert (=> d!17103 m!71053))

(assert (=> d!17103 m!72199))

(assert (=> d!17103 m!72199))

(assert (=> d!17103 m!72201))

(assert (=> d!17103 m!71053))

(declare-fun m!72379 () Bool)

(assert (=> d!17103 m!72379))

(declare-fun m!72381 () Bool)

(assert (=> d!17103 m!72381))

(assert (=> b!73784 m!71053))

(assert (=> b!73784 m!72195))

(assert (=> b!73719 d!17103))

(declare-fun d!17105 () Bool)

(assert (=> d!17105 (= (isDefined!86 (getValueByKey!132 (toList!735 call!6409) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))) (not (isEmpty!322 (getValueByKey!132 (toList!735 call!6409) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))))

(declare-fun bs!3163 () Bool)

(assert (= bs!3163 d!17105))

(assert (=> bs!3163 m!72199))

(declare-fun m!72383 () Bool)

(assert (=> bs!3163 m!72383))

(assert (=> b!73719 d!17105))

(declare-fun b!73788 () Bool)

(declare-fun e!48246 () Option!138)

(assert (=> b!73788 (= e!48246 None!136)))

(declare-fun b!73786 () Bool)

(declare-fun e!48245 () Option!138)

(assert (=> b!73786 (= e!48245 e!48246)))

(declare-fun c!11019 () Bool)

(assert (=> b!73786 (= c!11019 (and ((_ is Cons!1503) (toList!735 call!6409)) (not (= (_1!1083 (h!2090 (toList!735 call!6409))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))))

(declare-fun b!73785 () Bool)

(assert (=> b!73785 (= e!48245 (Some!137 (_2!1083 (h!2090 (toList!735 call!6409)))))))

(declare-fun c!11018 () Bool)

(declare-fun d!17107 () Bool)

(assert (=> d!17107 (= c!11018 (and ((_ is Cons!1503) (toList!735 call!6409)) (= (_1!1083 (h!2090 (toList!735 call!6409))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))))

(assert (=> d!17107 (= (getValueByKey!132 (toList!735 call!6409) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) e!48245)))

(declare-fun b!73787 () Bool)

(assert (=> b!73787 (= e!48246 (getValueByKey!132 (t!5068 (toList!735 call!6409)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (= (and d!17107 c!11018) b!73785))

(assert (= (and d!17107 (not c!11018)) b!73786))

(assert (= (and b!73786 c!11019) b!73787))

(assert (= (and b!73786 (not c!11019)) b!73788))

(assert (=> b!73787 m!71053))

(declare-fun m!72385 () Bool)

(assert (=> b!73787 m!72385))

(assert (=> b!73719 d!17107))

(declare-fun d!17109 () Bool)

(declare-fun lt!33138 () Bool)

(assert (=> d!17109 (= lt!33138 (select (content!77 Nil!1505) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!48248 () Bool)

(assert (=> d!17109 (= lt!33138 e!48248)))

(declare-fun res!39093 () Bool)

(assert (=> d!17109 (=> (not res!39093) (not e!48248))))

(assert (=> d!17109 (= res!39093 ((_ is Cons!1504) Nil!1505))))

(assert (=> d!17109 (= (contains!731 Nil!1505 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) lt!33138)))

(declare-fun b!73789 () Bool)

(declare-fun e!48247 () Bool)

(assert (=> b!73789 (= e!48248 e!48247)))

(declare-fun res!39092 () Bool)

(assert (=> b!73789 (=> res!39092 e!48247)))

(assert (=> b!73789 (= res!39092 (= (h!2091 Nil!1505) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73790 () Bool)

(assert (=> b!73790 (= e!48247 (contains!731 (t!5069 Nil!1505) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!17109 res!39093) b!73789))

(assert (= (and b!73789 (not res!39092)) b!73790))

(assert (=> d!17109 m!72061))

(assert (=> d!17109 m!71397))

(declare-fun m!72387 () Bool)

(assert (=> d!17109 m!72387))

(assert (=> b!73790 m!71397))

(declare-fun m!72389 () Bool)

(assert (=> b!73790 m!72389))

(assert (=> b!73476 d!17109))

(declare-fun d!17111 () Bool)

(assert (=> d!17111 (= (get!1158 (getValueByKey!132 (toList!735 (+!98 lt!32664 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32672)) (v!2537 (getValueByKey!132 (toList!735 (+!98 lt!32664 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32672)))))

(assert (=> d!16967 d!17111))

(declare-fun b!73794 () Bool)

(declare-fun e!48250 () Option!138)

(assert (=> b!73794 (= e!48250 None!136)))

(declare-fun b!73792 () Bool)

(declare-fun e!48249 () Option!138)

(assert (=> b!73792 (= e!48249 e!48250)))

(declare-fun c!11021 () Bool)

(assert (=> b!73792 (= c!11021 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32664 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))) (not (= (_1!1083 (h!2090 (toList!735 (+!98 lt!32664 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))) lt!32672))))))

(declare-fun b!73791 () Bool)

(assert (=> b!73791 (= e!48249 (Some!137 (_2!1083 (h!2090 (toList!735 (+!98 lt!32664 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))))

(declare-fun d!17113 () Bool)

(declare-fun c!11020 () Bool)

(assert (=> d!17113 (= c!11020 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32664 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))) (= (_1!1083 (h!2090 (toList!735 (+!98 lt!32664 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))) lt!32672)))))

(assert (=> d!17113 (= (getValueByKey!132 (toList!735 (+!98 lt!32664 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32672) e!48249)))

(declare-fun b!73793 () Bool)

(assert (=> b!73793 (= e!48250 (getValueByKey!132 (t!5068 (toList!735 (+!98 lt!32664 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))) lt!32672))))

(assert (= (and d!17113 c!11020) b!73791))

(assert (= (and d!17113 (not c!11020)) b!73792))

(assert (= (and b!73792 c!11021) b!73793))

(assert (= (and b!73792 (not c!11021)) b!73794))

(declare-fun m!72391 () Bool)

(assert (=> b!73793 m!72391))

(assert (=> d!16967 d!17113))

(assert (=> b!73487 d!17087))

(declare-fun d!17115 () Bool)

(declare-fun e!48252 () Bool)

(assert (=> d!17115 e!48252))

(declare-fun res!39094 () Bool)

(assert (=> d!17115 (=> res!39094 e!48252)))

(declare-fun lt!33141 () Bool)

(assert (=> d!17115 (= res!39094 (not lt!33141))))

(declare-fun lt!33139 () Bool)

(assert (=> d!17115 (= lt!33141 lt!33139)))

(declare-fun lt!33140 () Unit!2086)

(declare-fun e!48251 () Unit!2086)

(assert (=> d!17115 (= lt!33140 e!48251)))

(declare-fun c!11022 () Bool)

(assert (=> d!17115 (= c!11022 lt!33139)))

(assert (=> d!17115 (= lt!33139 (containsKey!136 (toList!735 lt!33062) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17115 (= (contains!729 lt!33062 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33141)))

(declare-fun b!73795 () Bool)

(declare-fun lt!33142 () Unit!2086)

(assert (=> b!73795 (= e!48251 lt!33142)))

(assert (=> b!73795 (= lt!33142 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!33062) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73795 (isDefined!86 (getValueByKey!132 (toList!735 lt!33062) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73796 () Bool)

(declare-fun Unit!2120 () Unit!2086)

(assert (=> b!73796 (= e!48251 Unit!2120)))

(declare-fun b!73797 () Bool)

(assert (=> b!73797 (= e!48252 (isDefined!86 (getValueByKey!132 (toList!735 lt!33062) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17115 c!11022) b!73795))

(assert (= (and d!17115 (not c!11022)) b!73796))

(assert (= (and d!17115 (not res!39094)) b!73797))

(declare-fun m!72393 () Bool)

(assert (=> d!17115 m!72393))

(declare-fun m!72395 () Bool)

(assert (=> b!73795 m!72395))

(declare-fun m!72397 () Bool)

(assert (=> b!73795 m!72397))

(assert (=> b!73795 m!72397))

(declare-fun m!72399 () Bool)

(assert (=> b!73795 m!72399))

(assert (=> b!73797 m!72397))

(assert (=> b!73797 m!72397))

(assert (=> b!73797 m!72399))

(assert (=> bm!6506 d!17115))

(assert (=> bm!6460 d!17101))

(declare-fun d!17117 () Bool)

(declare-fun res!39095 () Bool)

(declare-fun e!48253 () Bool)

(assert (=> d!17117 (=> res!39095 e!48253)))

(assert (=> d!17117 (= res!39095 (and ((_ is Cons!1503) (toList!735 lt!32666)) (= (_1!1083 (h!2090 (toList!735 lt!32666))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17117 (= (containsKey!136 (toList!735 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000) e!48253)))

(declare-fun b!73798 () Bool)

(declare-fun e!48254 () Bool)

(assert (=> b!73798 (= e!48253 e!48254)))

(declare-fun res!39096 () Bool)

(assert (=> b!73798 (=> (not res!39096) (not e!48254))))

(assert (=> b!73798 (= res!39096 (and (or (not ((_ is Cons!1503) (toList!735 lt!32666))) (bvsle (_1!1083 (h!2090 (toList!735 lt!32666))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1503) (toList!735 lt!32666)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32666))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73799 () Bool)

(assert (=> b!73799 (= e!48254 (containsKey!136 (t!5068 (toList!735 lt!32666)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17117 (not res!39095)) b!73798))

(assert (= (and b!73798 res!39096) b!73799))

(declare-fun m!72401 () Bool)

(assert (=> b!73799 m!72401))

(assert (=> d!16887 d!17117))

(assert (=> b!73375 d!17043))

(declare-fun d!17119 () Bool)

(declare-fun e!48256 () Bool)

(assert (=> d!17119 e!48256))

(declare-fun res!39097 () Bool)

(assert (=> d!17119 (=> res!39097 e!48256)))

(declare-fun lt!33145 () Bool)

(assert (=> d!17119 (= res!39097 (not lt!33145))))

(declare-fun lt!33143 () Bool)

(assert (=> d!17119 (= lt!33145 lt!33143)))

(declare-fun lt!33144 () Unit!2086)

(declare-fun e!48255 () Unit!2086)

(assert (=> d!17119 (= lt!33144 e!48255)))

(declare-fun c!11023 () Bool)

(assert (=> d!17119 (= c!11023 lt!33143)))

(assert (=> d!17119 (= lt!33143 (containsKey!136 (toList!735 lt!32796) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!17119 (= (contains!729 lt!32796 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33145)))

(declare-fun b!73800 () Bool)

(declare-fun lt!33146 () Unit!2086)

(assert (=> b!73800 (= e!48255 lt!33146)))

(assert (=> b!73800 (= lt!33146 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32796) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> b!73800 (isDefined!86 (getValueByKey!132 (toList!735 lt!32796) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!73801 () Bool)

(declare-fun Unit!2121 () Unit!2086)

(assert (=> b!73801 (= e!48255 Unit!2121)))

(declare-fun b!73802 () Bool)

(assert (=> b!73802 (= e!48256 (isDefined!86 (getValueByKey!132 (toList!735 lt!32796) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (= (and d!17119 c!11023) b!73800))

(assert (= (and d!17119 (not c!11023)) b!73801))

(assert (= (and d!17119 (not res!39097)) b!73802))

(declare-fun m!72403 () Bool)

(assert (=> d!17119 m!72403))

(declare-fun m!72405 () Bool)

(assert (=> b!73800 m!72405))

(assert (=> b!73800 m!71561))

(assert (=> b!73800 m!71561))

(declare-fun m!72407 () Bool)

(assert (=> b!73800 m!72407))

(assert (=> b!73802 m!71561))

(assert (=> b!73802 m!71561))

(assert (=> b!73802 m!72407))

(assert (=> d!16881 d!17119))

(declare-fun b!73806 () Bool)

(declare-fun e!48258 () Option!138)

(assert (=> b!73806 (= e!48258 None!136)))

(declare-fun b!73804 () Bool)

(declare-fun e!48257 () Option!138)

(assert (=> b!73804 (= e!48257 e!48258)))

(declare-fun c!11025 () Bool)

(assert (=> b!73804 (= c!11025 (and ((_ is Cons!1503) lt!32795) (not (= (_1!1083 (h!2090 lt!32795)) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun b!73803 () Bool)

(assert (=> b!73803 (= e!48257 (Some!137 (_2!1083 (h!2090 lt!32795))))))

(declare-fun d!17121 () Bool)

(declare-fun c!11024 () Bool)

(assert (=> d!17121 (= c!11024 (and ((_ is Cons!1503) lt!32795) (= (_1!1083 (h!2090 lt!32795)) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17121 (= (getValueByKey!132 lt!32795 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) e!48257)))

(declare-fun b!73805 () Bool)

(assert (=> b!73805 (= e!48258 (getValueByKey!132 (t!5068 lt!32795) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (= (and d!17121 c!11024) b!73803))

(assert (= (and d!17121 (not c!11024)) b!73804))

(assert (= (and b!73804 c!11025) b!73805))

(assert (= (and b!73804 (not c!11025)) b!73806))

(declare-fun m!72409 () Bool)

(assert (=> b!73805 m!72409))

(assert (=> d!16881 d!17121))

(declare-fun d!17123 () Bool)

(assert (=> d!17123 (= (getValueByKey!132 lt!32795 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun lt!33147 () Unit!2086)

(assert (=> d!17123 (= lt!33147 (choose!422 lt!32795 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun e!48259 () Bool)

(assert (=> d!17123 e!48259))

(declare-fun res!39098 () Bool)

(assert (=> d!17123 (=> (not res!39098) (not e!48259))))

(assert (=> d!17123 (= res!39098 (isStrictlySorted!287 lt!32795))))

(assert (=> d!17123 (= (lemmaContainsTupThenGetReturnValue!51 lt!32795 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33147)))

(declare-fun b!73807 () Bool)

(declare-fun res!39099 () Bool)

(assert (=> b!73807 (=> (not res!39099) (not e!48259))))

(assert (=> b!73807 (= res!39099 (containsKey!136 lt!32795 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!73808 () Bool)

(assert (=> b!73808 (= e!48259 (contains!730 lt!32795 (tuple2!2147 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (= (and d!17123 res!39098) b!73807))

(assert (= (and b!73807 res!39099) b!73808))

(assert (=> d!17123 m!71555))

(declare-fun m!72411 () Bool)

(assert (=> d!17123 m!72411))

(declare-fun m!72413 () Bool)

(assert (=> d!17123 m!72413))

(declare-fun m!72415 () Bool)

(assert (=> b!73807 m!72415))

(declare-fun m!72417 () Bool)

(assert (=> b!73808 m!72417))

(assert (=> d!16881 d!17123))

(declare-fun b!73809 () Bool)

(declare-fun e!48260 () List!1507)

(declare-fun call!6514 () List!1507)

(assert (=> b!73809 (= e!48260 call!6514)))

(declare-fun b!73810 () Bool)

(declare-fun e!48262 () List!1507)

(declare-fun call!6513 () List!1507)

(assert (=> b!73810 (= e!48262 call!6513)))

(declare-fun c!11027 () Bool)

(declare-fun call!6515 () List!1507)

(declare-fun bm!6510 () Bool)

(declare-fun e!48263 () List!1507)

(assert (=> bm!6510 (= call!6515 ($colon$colon!65 e!48263 (ite c!11027 (h!2090 (toList!735 (+!98 lt!32476 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))) (tuple2!2147 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun c!11028 () Bool)

(assert (=> bm!6510 (= c!11028 c!11027)))

(declare-fun b!73812 () Bool)

(declare-fun res!39101 () Bool)

(declare-fun e!48261 () Bool)

(assert (=> b!73812 (=> (not res!39101) (not e!48261))))

(declare-fun lt!33148 () List!1507)

(assert (=> b!73812 (= res!39101 (containsKey!136 lt!33148 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!73813 () Bool)

(declare-fun e!48264 () List!1507)

(assert (=> b!73813 (= e!48264 call!6515)))

(declare-fun c!11029 () Bool)

(declare-fun c!11026 () Bool)

(declare-fun b!73814 () Bool)

(assert (=> b!73814 (= e!48263 (ite c!11029 (t!5068 (toList!735 (+!98 lt!32476 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))) (ite c!11026 (Cons!1503 (h!2090 (toList!735 (+!98 lt!32476 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))) (t!5068 (toList!735 (+!98 lt!32476 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))) Nil!1504)))))

(declare-fun b!73815 () Bool)

(assert (=> b!73815 (= e!48263 (insertStrictlySorted!53 (t!5068 (toList!735 (+!98 lt!32476 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!73816 () Bool)

(assert (=> b!73816 (= e!48261 (contains!730 lt!33148 (tuple2!2147 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun bm!6511 () Bool)

(assert (=> bm!6511 (= call!6514 call!6515)))

(declare-fun b!73817 () Bool)

(assert (=> b!73817 (= e!48264 e!48260)))

(assert (=> b!73817 (= c!11029 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32476 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))) (= (_1!1083 (h!2090 (toList!735 (+!98 lt!32476 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun b!73811 () Bool)

(assert (=> b!73811 (= c!11026 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32476 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))) (bvsgt (_1!1083 (h!2090 (toList!735 (+!98 lt!32476 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> b!73811 (= e!48260 e!48262)))

(declare-fun d!17125 () Bool)

(assert (=> d!17125 e!48261))

(declare-fun res!39100 () Bool)

(assert (=> d!17125 (=> (not res!39100) (not e!48261))))

(assert (=> d!17125 (= res!39100 (isStrictlySorted!287 lt!33148))))

(assert (=> d!17125 (= lt!33148 e!48264)))

(assert (=> d!17125 (= c!11027 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32476 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))) (bvslt (_1!1083 (h!2090 (toList!735 (+!98 lt!32476 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17125 (isStrictlySorted!287 (toList!735 (+!98 lt!32476 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!17125 (= (insertStrictlySorted!53 (toList!735 (+!98 lt!32476 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33148)))

(declare-fun b!73818 () Bool)

(assert (=> b!73818 (= e!48262 call!6513)))

(declare-fun bm!6512 () Bool)

(assert (=> bm!6512 (= call!6513 call!6514)))

(assert (= (and d!17125 c!11027) b!73813))

(assert (= (and d!17125 (not c!11027)) b!73817))

(assert (= (and b!73817 c!11029) b!73809))

(assert (= (and b!73817 (not c!11029)) b!73811))

(assert (= (and b!73811 c!11026) b!73818))

(assert (= (and b!73811 (not c!11026)) b!73810))

(assert (= (or b!73818 b!73810) bm!6512))

(assert (= (or b!73809 bm!6512) bm!6511))

(assert (= (or b!73813 bm!6511) bm!6510))

(assert (= (and bm!6510 c!11028) b!73815))

(assert (= (and bm!6510 (not c!11028)) b!73814))

(assert (= (and d!17125 res!39100) b!73812))

(assert (= (and b!73812 res!39101) b!73816))

(declare-fun m!72419 () Bool)

(assert (=> b!73812 m!72419))

(declare-fun m!72421 () Bool)

(assert (=> d!17125 m!72421))

(declare-fun m!72423 () Bool)

(assert (=> d!17125 m!72423))

(declare-fun m!72425 () Bool)

(assert (=> b!73815 m!72425))

(declare-fun m!72427 () Bool)

(assert (=> b!73816 m!72427))

(declare-fun m!72429 () Bool)

(assert (=> bm!6510 m!72429))

(assert (=> d!16881 d!17125))

(declare-fun d!17127 () Bool)

(declare-fun lt!33149 () Bool)

(assert (=> d!17127 (= lt!33149 (select (content!76 (toList!735 lt!32796)) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun e!48265 () Bool)

(assert (=> d!17127 (= lt!33149 e!48265)))

(declare-fun res!39103 () Bool)

(assert (=> d!17127 (=> (not res!39103) (not e!48265))))

(assert (=> d!17127 (= res!39103 ((_ is Cons!1503) (toList!735 lt!32796)))))

(assert (=> d!17127 (= (contains!730 (toList!735 lt!32796) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!33149)))

(declare-fun b!73819 () Bool)

(declare-fun e!48266 () Bool)

(assert (=> b!73819 (= e!48265 e!48266)))

(declare-fun res!39102 () Bool)

(assert (=> b!73819 (=> res!39102 e!48266)))

(assert (=> b!73819 (= res!39102 (= (h!2090 (toList!735 lt!32796)) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!73820 () Bool)

(assert (=> b!73820 (= e!48266 (contains!730 (t!5068 (toList!735 lt!32796)) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(assert (= (and d!17127 res!39103) b!73819))

(assert (= (and b!73819 (not res!39102)) b!73820))

(declare-fun m!72431 () Bool)

(assert (=> d!17127 m!72431))

(declare-fun m!72433 () Bool)

(assert (=> d!17127 m!72433))

(declare-fun m!72435 () Bool)

(assert (=> b!73820 m!72435))

(assert (=> b!73337 d!17127))

(assert (=> d!16999 d!16915))

(declare-fun b!73837 () Bool)

(declare-fun e!48276 () Bool)

(declare-fun lt!33152 () SeekEntryResult!246)

(assert (=> b!73837 (= e!48276 ((_ is Undefined!246) lt!33152))))

(declare-fun b!73839 () Bool)

(declare-fun res!39113 () Bool)

(declare-fun e!48278 () Bool)

(assert (=> b!73839 (=> (not res!39113) (not e!48278))))

(assert (=> b!73839 (= res!39113 (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3118 lt!33152)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73840 () Bool)

(declare-fun res!39112 () Bool)

(assert (=> b!73840 (= res!39112 (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3115 lt!33152)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48275 () Bool)

(assert (=> b!73840 (=> (not res!39112) (not e!48275))))

(declare-fun b!73841 () Bool)

(declare-fun e!48277 () Bool)

(assert (=> b!73841 (= e!48277 e!48276)))

(declare-fun c!11034 () Bool)

(assert (=> b!73841 (= c!11034 ((_ is MissingVacant!246) lt!33152))))

(declare-fun c!11035 () Bool)

(declare-fun call!6520 () Bool)

(declare-fun bm!6517 () Bool)

(assert (=> bm!6517 (= call!6520 (inRange!0 (ite c!11035 (index!3115 lt!33152) (index!3118 lt!33152)) (mask!6180 newMap!16)))))

(declare-fun d!17129 () Bool)

(assert (=> d!17129 e!48277))

(assert (=> d!17129 (= c!11035 ((_ is MissingZero!246) lt!33152))))

(assert (=> d!17129 (= lt!33152 (seekEntryOrOpen!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(assert (=> d!17129 true))

(declare-fun _$34!807 () Unit!2086)

(assert (=> d!17129 (= (choose!427 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)) _$34!807)))

(declare-fun b!73838 () Bool)

(declare-fun call!6521 () Bool)

(assert (=> b!73838 (= e!48278 (not call!6521))))

(declare-fun b!73842 () Bool)

(assert (=> b!73842 (= e!48275 (not call!6521))))

(declare-fun b!73843 () Bool)

(assert (=> b!73843 (= e!48277 e!48275)))

(declare-fun res!39114 () Bool)

(assert (=> b!73843 (= res!39114 call!6520)))

(assert (=> b!73843 (=> (not res!39114) (not e!48275))))

(declare-fun bm!6518 () Bool)

(assert (=> bm!6518 (= call!6521 (arrayContainsKey!0 (_keys!3865 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!73844 () Bool)

(declare-fun res!39115 () Bool)

(assert (=> b!73844 (=> (not res!39115) (not e!48278))))

(assert (=> b!73844 (= res!39115 call!6520)))

(assert (=> b!73844 (= e!48276 e!48278)))

(assert (= (and d!17129 c!11035) b!73843))

(assert (= (and d!17129 (not c!11035)) b!73841))

(assert (= (and b!73843 res!39114) b!73840))

(assert (= (and b!73840 res!39112) b!73842))

(assert (= (and b!73841 c!11034) b!73844))

(assert (= (and b!73841 (not c!11034)) b!73837))

(assert (= (and b!73844 res!39115) b!73839))

(assert (= (and b!73839 res!39113) b!73838))

(assert (= (or b!73843 b!73844) bm!6517))

(assert (= (or b!73842 b!73838) bm!6518))

(assert (=> d!17129 m!71053))

(assert (=> d!17129 m!71203))

(declare-fun m!72437 () Bool)

(assert (=> bm!6517 m!72437))

(declare-fun m!72439 () Bool)

(assert (=> b!73839 m!72439))

(assert (=> bm!6518 m!71053))

(assert (=> bm!6518 m!71195))

(declare-fun m!72441 () Bool)

(assert (=> b!73840 m!72441))

(assert (=> d!16999 d!17129))

(assert (=> d!16999 d!17091))

(declare-fun b!73848 () Bool)

(declare-fun e!48280 () Option!138)

(assert (=> b!73848 (= e!48280 None!136)))

(declare-fun b!73846 () Bool)

(declare-fun e!48279 () Option!138)

(assert (=> b!73846 (= e!48279 e!48280)))

(declare-fun c!11037 () Bool)

(assert (=> b!73846 (= c!11037 (and ((_ is Cons!1503) (t!5068 (toList!735 lt!32721))) (not (= (_1!1083 (h!2090 (t!5068 (toList!735 lt!32721)))) (_1!1083 lt!32472)))))))

(declare-fun b!73845 () Bool)

(assert (=> b!73845 (= e!48279 (Some!137 (_2!1083 (h!2090 (t!5068 (toList!735 lt!32721))))))))

(declare-fun d!17131 () Bool)

(declare-fun c!11036 () Bool)

(assert (=> d!17131 (= c!11036 (and ((_ is Cons!1503) (t!5068 (toList!735 lt!32721))) (= (_1!1083 (h!2090 (t!5068 (toList!735 lt!32721)))) (_1!1083 lt!32472))))))

(assert (=> d!17131 (= (getValueByKey!132 (t!5068 (toList!735 lt!32721)) (_1!1083 lt!32472)) e!48279)))

(declare-fun b!73847 () Bool)

(assert (=> b!73847 (= e!48280 (getValueByKey!132 (t!5068 (t!5068 (toList!735 lt!32721))) (_1!1083 lt!32472)))))

(assert (= (and d!17131 c!11036) b!73845))

(assert (= (and d!17131 (not c!11036)) b!73846))

(assert (= (and b!73846 c!11037) b!73847))

(assert (= (and b!73846 (not c!11037)) b!73848))

(declare-fun m!72443 () Bool)

(assert (=> b!73847 m!72443))

(assert (=> b!73645 d!17131))

(assert (=> d!16905 d!16897))

(assert (=> d!16905 d!16899))

(declare-fun d!17133 () Bool)

(assert (=> d!17133 (isDefined!86 (getValueByKey!132 (toList!735 lt!32480) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> d!17133 true))

(declare-fun _$12!323 () Unit!2086)

(assert (=> d!17133 (= (choose!421 (toList!735 lt!32480) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) _$12!323)))

(declare-fun bs!3164 () Bool)

(assert (= bs!3164 d!17133))

(assert (=> bs!3164 m!71053))

(assert (=> bs!3164 m!71161))

(assert (=> bs!3164 m!71161))

(assert (=> bs!3164 m!71163))

(assert (=> d!16905 d!17133))

(declare-fun d!17135 () Bool)

(declare-fun res!39116 () Bool)

(declare-fun e!48281 () Bool)

(assert (=> d!17135 (=> res!39116 e!48281)))

(assert (=> d!17135 (= res!39116 (or ((_ is Nil!1504) (toList!735 lt!32480)) ((_ is Nil!1504) (t!5068 (toList!735 lt!32480)))))))

(assert (=> d!17135 (= (isStrictlySorted!287 (toList!735 lt!32480)) e!48281)))

(declare-fun b!73849 () Bool)

(declare-fun e!48282 () Bool)

(assert (=> b!73849 (= e!48281 e!48282)))

(declare-fun res!39117 () Bool)

(assert (=> b!73849 (=> (not res!39117) (not e!48282))))

(assert (=> b!73849 (= res!39117 (bvslt (_1!1083 (h!2090 (toList!735 lt!32480))) (_1!1083 (h!2090 (t!5068 (toList!735 lt!32480))))))))

(declare-fun b!73850 () Bool)

(assert (=> b!73850 (= e!48282 (isStrictlySorted!287 (t!5068 (toList!735 lt!32480))))))

(assert (= (and d!17135 (not res!39116)) b!73849))

(assert (= (and b!73849 res!39117) b!73850))

(declare-fun m!72445 () Bool)

(assert (=> b!73850 m!72445))

(assert (=> d!16905 d!17135))

(declare-fun d!17137 () Bool)

(declare-fun e!48284 () Bool)

(assert (=> d!17137 e!48284))

(declare-fun res!39118 () Bool)

(assert (=> d!17137 (=> res!39118 e!48284)))

(declare-fun lt!33155 () Bool)

(assert (=> d!17137 (= res!39118 (not lt!33155))))

(declare-fun lt!33153 () Bool)

(assert (=> d!17137 (= lt!33155 lt!33153)))

(declare-fun lt!33154 () Unit!2086)

(declare-fun e!48283 () Unit!2086)

(assert (=> d!17137 (= lt!33154 e!48283)))

(declare-fun c!11038 () Bool)

(assert (=> d!17137 (= c!11038 lt!33153)))

(assert (=> d!17137 (= lt!33153 (containsKey!136 (toList!735 lt!32849) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!17137 (= (contains!729 lt!32849 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!33155)))

(declare-fun b!73851 () Bool)

(declare-fun lt!33156 () Unit!2086)

(assert (=> b!73851 (= e!48283 lt!33156)))

(assert (=> b!73851 (= lt!33156 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32849) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!73851 (isDefined!86 (getValueByKey!132 (toList!735 lt!32849) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!73852 () Bool)

(declare-fun Unit!2122 () Unit!2086)

(assert (=> b!73852 (= e!48283 Unit!2122)))

(declare-fun b!73853 () Bool)

(assert (=> b!73853 (= e!48284 (isDefined!86 (getValueByKey!132 (toList!735 lt!32849) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!17137 c!11038) b!73851))

(assert (= (and d!17137 (not c!11038)) b!73852))

(assert (= (and d!17137 (not res!39118)) b!73853))

(assert (=> d!17137 m!71697))

(declare-fun m!72447 () Bool)

(assert (=> d!17137 m!72447))

(assert (=> b!73851 m!71697))

(declare-fun m!72449 () Bool)

(assert (=> b!73851 m!72449))

(assert (=> b!73851 m!71697))

(declare-fun m!72451 () Bool)

(assert (=> b!73851 m!72451))

(assert (=> b!73851 m!72451))

(declare-fun m!72453 () Bool)

(assert (=> b!73851 m!72453))

(assert (=> b!73853 m!71697))

(assert (=> b!73853 m!72451))

(assert (=> b!73853 m!72451))

(assert (=> b!73853 m!72453))

(assert (=> b!73419 d!17137))

(declare-fun d!17139 () Bool)

(assert (=> d!17139 (= (size!2100 newMap!16) (bvadd (_size!397 newMap!16) (bvsdiv (bvadd (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!73292 d!17139))

(assert (=> d!16955 d!16971))

(declare-fun d!17141 () Bool)

(declare-fun e!48286 () Bool)

(assert (=> d!17141 e!48286))

(declare-fun res!39119 () Bool)

(assert (=> d!17141 (=> res!39119 e!48286)))

(declare-fun lt!33159 () Bool)

(assert (=> d!17141 (= res!39119 (not lt!33159))))

(declare-fun lt!33157 () Bool)

(assert (=> d!17141 (= lt!33159 lt!33157)))

(declare-fun lt!33158 () Unit!2086)

(declare-fun e!48285 () Unit!2086)

(assert (=> d!17141 (= lt!33158 e!48285)))

(declare-fun c!11039 () Bool)

(assert (=> d!17141 (= c!11039 lt!33157)))

(assert (=> d!17141 (= lt!33157 (containsKey!136 (toList!735 lt!32675) lt!32657))))

(assert (=> d!17141 (= (contains!729 lt!32675 lt!32657) lt!33159)))

(declare-fun b!73854 () Bool)

(declare-fun lt!33160 () Unit!2086)

(assert (=> b!73854 (= e!48285 lt!33160)))

(assert (=> b!73854 (= lt!33160 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32675) lt!32657))))

(assert (=> b!73854 (isDefined!86 (getValueByKey!132 (toList!735 lt!32675) lt!32657))))

(declare-fun b!73855 () Bool)

(declare-fun Unit!2123 () Unit!2086)

(assert (=> b!73855 (= e!48285 Unit!2123)))

(declare-fun b!73856 () Bool)

(assert (=> b!73856 (= e!48286 (isDefined!86 (getValueByKey!132 (toList!735 lt!32675) lt!32657)))))

(assert (= (and d!17141 c!11039) b!73854))

(assert (= (and d!17141 (not c!11039)) b!73855))

(assert (= (and d!17141 (not res!39119)) b!73856))

(declare-fun m!72455 () Bool)

(assert (=> d!17141 m!72455))

(declare-fun m!72457 () Bool)

(assert (=> b!73854 m!72457))

(assert (=> b!73854 m!71865))

(assert (=> b!73854 m!71865))

(declare-fun m!72459 () Bool)

(assert (=> b!73854 m!72459))

(assert (=> b!73856 m!71865))

(assert (=> b!73856 m!71865))

(assert (=> b!73856 m!72459))

(assert (=> d!16955 d!17141))

(declare-fun d!17143 () Bool)

(assert (=> d!17143 (= (apply!75 (+!98 lt!32675 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32657) (apply!75 lt!32675 lt!32657))))

(assert (=> d!17143 true))

(declare-fun _$34!810 () Unit!2086)

(assert (=> d!17143 (= (choose!424 lt!32675 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) lt!32657) _$34!810)))

(declare-fun bs!3165 () Bool)

(assert (= bs!3165 d!17143))

(assert (=> bs!3165 m!71239))

(assert (=> bs!3165 m!71239))

(assert (=> bs!3165 m!71257))

(assert (=> bs!3165 m!71261))

(assert (=> d!16955 d!17143))

(assert (=> d!16955 d!16975))

(assert (=> d!16955 d!16963))

(assert (=> b!73408 d!16835))

(declare-fun d!17145 () Bool)

(declare-fun res!39120 () Bool)

(declare-fun e!48287 () Bool)

(assert (=> d!17145 (=> res!39120 e!48287)))

(assert (=> d!17145 (= res!39120 (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> d!17145 (= (arrayContainsKey!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!48287)))

(declare-fun b!73858 () Bool)

(declare-fun e!48288 () Bool)

(assert (=> b!73858 (= e!48287 e!48288)))

(declare-fun res!39121 () Bool)

(assert (=> b!73858 (=> (not res!39121) (not e!48288))))

(assert (=> b!73858 (= res!39121 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!73859 () Bool)

(assert (=> b!73859 (= e!48288 (arrayContainsKey!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!17145 (not res!39120)) b!73858))

(assert (= (and b!73858 res!39121) b!73859))

(assert (=> d!17145 m!72351))

(assert (=> b!73859 m!71053))

(declare-fun m!72461 () Bool)

(assert (=> b!73859 m!72461))

(assert (=> b!73423 d!17145))

(declare-fun d!17147 () Bool)

(assert (=> d!17147 (= (get!1158 (getValueByKey!132 (toList!735 lt!32694) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2537 (getValueByKey!132 (toList!735 lt!32694) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16901 d!17147))

(declare-fun b!73863 () Bool)

(declare-fun e!48290 () Option!138)

(assert (=> b!73863 (= e!48290 None!136)))

(declare-fun b!73861 () Bool)

(declare-fun e!48289 () Option!138)

(assert (=> b!73861 (= e!48289 e!48290)))

(declare-fun c!11041 () Bool)

(assert (=> b!73861 (= c!11041 (and ((_ is Cons!1503) (toList!735 lt!32694)) (not (= (_1!1083 (h!2090 (toList!735 lt!32694))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!73860 () Bool)

(assert (=> b!73860 (= e!48289 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32694)))))))

(declare-fun c!11040 () Bool)

(declare-fun d!17149 () Bool)

(assert (=> d!17149 (= c!11040 (and ((_ is Cons!1503) (toList!735 lt!32694)) (= (_1!1083 (h!2090 (toList!735 lt!32694))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!17149 (= (getValueByKey!132 (toList!735 lt!32694) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!48289)))

(declare-fun b!73862 () Bool)

(assert (=> b!73862 (= e!48290 (getValueByKey!132 (t!5068 (toList!735 lt!32694)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!17149 c!11040) b!73860))

(assert (= (and d!17149 (not c!11040)) b!73861))

(assert (= (and b!73861 c!11041) b!73862))

(assert (= (and b!73861 (not c!11041)) b!73863))

(assert (=> b!73862 m!71227))

(declare-fun m!72463 () Bool)

(assert (=> b!73862 m!72463))

(assert (=> d!16901 d!17149))

(declare-fun d!17151 () Bool)

(declare-fun e!48292 () Bool)

(assert (=> d!17151 e!48292))

(declare-fun res!39122 () Bool)

(assert (=> d!17151 (=> res!39122 e!48292)))

(declare-fun lt!33163 () Bool)

(assert (=> d!17151 (= res!39122 (not lt!33163))))

(declare-fun lt!33161 () Bool)

(assert (=> d!17151 (= lt!33163 lt!33161)))

(declare-fun lt!33162 () Unit!2086)

(declare-fun e!48291 () Unit!2086)

(assert (=> d!17151 (= lt!33162 e!48291)))

(declare-fun c!11042 () Bool)

(assert (=> d!17151 (= c!11042 lt!33161)))

(assert (=> d!17151 (= lt!33161 (containsKey!136 (toList!735 lt!32849) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17151 (= (contains!729 lt!32849 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33163)))

(declare-fun b!73864 () Bool)

(declare-fun lt!33164 () Unit!2086)

(assert (=> b!73864 (= e!48291 lt!33164)))

(assert (=> b!73864 (= lt!33164 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32849) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73864 (isDefined!86 (getValueByKey!132 (toList!735 lt!32849) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73865 () Bool)

(declare-fun Unit!2124 () Unit!2086)

(assert (=> b!73865 (= e!48291 Unit!2124)))

(declare-fun b!73866 () Bool)

(assert (=> b!73866 (= e!48292 (isDefined!86 (getValueByKey!132 (toList!735 lt!32849) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17151 c!11042) b!73864))

(assert (= (and d!17151 (not c!11042)) b!73865))

(assert (= (and d!17151 (not res!39122)) b!73866))

(declare-fun m!72465 () Bool)

(assert (=> d!17151 m!72465))

(declare-fun m!72467 () Bool)

(assert (=> b!73864 m!72467))

(declare-fun m!72469 () Bool)

(assert (=> b!73864 m!72469))

(assert (=> b!73864 m!72469))

(declare-fun m!72471 () Bool)

(assert (=> b!73864 m!72471))

(assert (=> b!73866 m!72469))

(assert (=> b!73866 m!72469))

(assert (=> b!73866 m!72471))

(assert (=> d!16921 d!17151))

(assert (=> d!16921 d!16821))

(declare-fun d!17153 () Bool)

(assert (=> d!17153 (contains!729 (getCurrentListMap!426 (_keys!3865 newMap!16) lt!32608 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593)))))

(assert (=> d!17153 true))

(declare-fun _$16!96 () Unit!2086)

(assert (=> d!17153 (= (choose!428 (_keys!3865 newMap!16) lt!32608 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (index!3116 lt!32593) (defaultEntry!2213 newMap!16)) _$16!96)))

(declare-fun bs!3166 () Bool)

(assert (= bs!3166 d!17153))

(assert (=> bs!3166 m!72035))

(assert (=> bs!3166 m!71217))

(assert (=> bs!3166 m!72035))

(assert (=> bs!3166 m!71217))

(assert (=> bs!3166 m!72037))

(assert (=> d!17001 d!17153))

(assert (=> d!17001 d!17091))

(declare-fun d!17155 () Bool)

(declare-fun lt!33165 () Bool)

(assert (=> d!17155 (= lt!33165 (select (content!76 lt!32878) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))))))

(declare-fun e!48293 () Bool)

(assert (=> d!17155 (= lt!33165 e!48293)))

(declare-fun res!39124 () Bool)

(assert (=> d!17155 (=> (not res!39124) (not e!48293))))

(assert (=> d!17155 (= res!39124 ((_ is Cons!1503) lt!32878))))

(assert (=> d!17155 (= (contains!730 lt!32878 (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))) lt!33165)))

(declare-fun b!73867 () Bool)

(declare-fun e!48294 () Bool)

(assert (=> b!73867 (= e!48293 e!48294)))

(declare-fun res!39123 () Bool)

(assert (=> b!73867 (=> res!39123 e!48294)))

(assert (=> b!73867 (= res!39123 (= (h!2090 lt!32878) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))))))

(declare-fun b!73868 () Bool)

(assert (=> b!73868 (= e!48294 (contains!730 (t!5068 lt!32878) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))))))

(assert (= (and d!17155 res!39124) b!73867))

(assert (= (and b!73867 (not res!39123)) b!73868))

(declare-fun m!72473 () Bool)

(assert (=> d!17155 m!72473))

(declare-fun m!72475 () Bool)

(assert (=> d!17155 m!72475))

(declare-fun m!72477 () Bool)

(assert (=> b!73868 m!72477))

(assert (=> b!73506 d!17155))

(declare-fun d!17157 () Bool)

(assert (=> d!17157 (isDefined!86 (getValueByKey!132 (toList!735 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!33166 () Unit!2086)

(assert (=> d!17157 (= lt!33166 (choose!421 (toList!735 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48295 () Bool)

(assert (=> d!17157 e!48295))

(declare-fun res!39125 () Bool)

(assert (=> d!17157 (=> (not res!39125) (not e!48295))))

(assert (=> d!17157 (= res!39125 (isStrictlySorted!287 (toList!735 lt!32666)))))

(assert (=> d!17157 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000) lt!33166)))

(declare-fun b!73869 () Bool)

(assert (=> b!73869 (= e!48295 (containsKey!136 (toList!735 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17157 res!39125) b!73869))

(assert (=> d!17157 m!71589))

(assert (=> d!17157 m!71589))

(assert (=> d!17157 m!71591))

(declare-fun m!72479 () Bool)

(assert (=> d!17157 m!72479))

(declare-fun m!72481 () Bool)

(assert (=> d!17157 m!72481))

(assert (=> b!73869 m!71585))

(assert (=> b!73343 d!17157))

(declare-fun d!17159 () Bool)

(assert (=> d!17159 (= (isDefined!86 (getValueByKey!132 (toList!735 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!322 (getValueByKey!132 (toList!735 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3167 () Bool)

(assert (= bs!3167 d!17159))

(assert (=> bs!3167 m!71589))

(declare-fun m!72483 () Bool)

(assert (=> bs!3167 m!72483))

(assert (=> b!73343 d!17159))

(declare-fun b!73873 () Bool)

(declare-fun e!48297 () Option!138)

(assert (=> b!73873 (= e!48297 None!136)))

(declare-fun b!73871 () Bool)

(declare-fun e!48296 () Option!138)

(assert (=> b!73871 (= e!48296 e!48297)))

(declare-fun c!11044 () Bool)

(assert (=> b!73871 (= c!11044 (and ((_ is Cons!1503) (toList!735 lt!32666)) (not (= (_1!1083 (h!2090 (toList!735 lt!32666))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!73870 () Bool)

(assert (=> b!73870 (= e!48296 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32666)))))))

(declare-fun d!17161 () Bool)

(declare-fun c!11043 () Bool)

(assert (=> d!17161 (= c!11043 (and ((_ is Cons!1503) (toList!735 lt!32666)) (= (_1!1083 (h!2090 (toList!735 lt!32666))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17161 (= (getValueByKey!132 (toList!735 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000) e!48296)))

(declare-fun b!73872 () Bool)

(assert (=> b!73872 (= e!48297 (getValueByKey!132 (t!5068 (toList!735 lt!32666)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17161 c!11043) b!73870))

(assert (= (and d!17161 (not c!11043)) b!73871))

(assert (= (and b!73871 c!11044) b!73872))

(assert (= (and b!73871 (not c!11044)) b!73873))

(declare-fun m!72485 () Bool)

(assert (=> b!73872 m!72485))

(assert (=> b!73343 d!17161))

(declare-fun d!17163 () Bool)

(assert (=> d!17163 (= (get!1158 (getValueByKey!132 (toList!735 lt!32670) lt!32658)) (v!2537 (getValueByKey!132 (toList!735 lt!32670) lt!32658)))))

(assert (=> d!16951 d!17163))

(declare-fun b!73877 () Bool)

(declare-fun e!48299 () Option!138)

(assert (=> b!73877 (= e!48299 None!136)))

(declare-fun b!73875 () Bool)

(declare-fun e!48298 () Option!138)

(assert (=> b!73875 (= e!48298 e!48299)))

(declare-fun c!11046 () Bool)

(assert (=> b!73875 (= c!11046 (and ((_ is Cons!1503) (toList!735 lt!32670)) (not (= (_1!1083 (h!2090 (toList!735 lt!32670))) lt!32658))))))

(declare-fun b!73874 () Bool)

(assert (=> b!73874 (= e!48298 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32670)))))))

(declare-fun d!17165 () Bool)

(declare-fun c!11045 () Bool)

(assert (=> d!17165 (= c!11045 (and ((_ is Cons!1503) (toList!735 lt!32670)) (= (_1!1083 (h!2090 (toList!735 lt!32670))) lt!32658)))))

(assert (=> d!17165 (= (getValueByKey!132 (toList!735 lt!32670) lt!32658) e!48298)))

(declare-fun b!73876 () Bool)

(assert (=> b!73876 (= e!48299 (getValueByKey!132 (t!5068 (toList!735 lt!32670)) lt!32658))))

(assert (= (and d!17165 c!11045) b!73874))

(assert (= (and d!17165 (not c!11045)) b!73875))

(assert (= (and b!73875 c!11046) b!73876))

(assert (= (and b!73875 (not c!11046)) b!73877))

(declare-fun m!72487 () Bool)

(assert (=> b!73876 m!72487))

(assert (=> d!16951 d!17165))

(assert (=> b!73477 d!17087))

(declare-fun b!73878 () Bool)

(declare-fun e!48300 () Bool)

(declare-fun e!48302 () Bool)

(assert (=> b!73878 (= e!48300 e!48302)))

(declare-fun res!39128 () Bool)

(assert (=> b!73878 (=> (not res!39128) (not e!48302))))

(declare-fun e!48301 () Bool)

(assert (=> b!73878 (= res!39128 (not e!48301))))

(declare-fun res!39126 () Bool)

(assert (=> b!73878 (=> (not res!39126) (not e!48301))))

(assert (=> b!73878 (= res!39126 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!73879 () Bool)

(declare-fun e!48303 () Bool)

(declare-fun call!6522 () Bool)

(assert (=> b!73879 (= e!48303 call!6522)))

(declare-fun b!73880 () Bool)

(assert (=> b!73880 (= e!48303 call!6522)))

(declare-fun b!73881 () Bool)

(assert (=> b!73881 (= e!48301 (contains!731 (ite c!10892 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10879 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505) Nil!1505)) (ite c!10879 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505) Nil!1505)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!73882 () Bool)

(assert (=> b!73882 (= e!48302 e!48303)))

(declare-fun c!11047 () Bool)

(assert (=> b!73882 (= c!11047 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!6519 () Bool)

(assert (=> bm!6519 (= call!6522 (arrayNoDuplicates!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!11047 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!10892 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10879 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505) Nil!1505)) (ite c!10879 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505) Nil!1505))) (ite c!10892 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10879 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505) Nil!1505)) (ite c!10879 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505) Nil!1505)))))))

(declare-fun d!17167 () Bool)

(declare-fun res!39127 () Bool)

(assert (=> d!17167 (=> res!39127 e!48300)))

(assert (=> d!17167 (= res!39127 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(assert (=> d!17167 (= (arrayNoDuplicates!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10892 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10879 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505) Nil!1505)) (ite c!10879 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505) Nil!1505))) e!48300)))

(assert (= (and d!17167 (not res!39127)) b!73878))

(assert (= (and b!73878 res!39126) b!73881))

(assert (= (and b!73878 res!39128) b!73882))

(assert (= (and b!73882 c!11047) b!73879))

(assert (= (and b!73882 (not c!11047)) b!73880))

(assert (= (or b!73879 b!73880) bm!6519))

(declare-fun m!72489 () Bool)

(assert (=> b!73878 m!72489))

(assert (=> b!73878 m!72489))

(declare-fun m!72491 () Bool)

(assert (=> b!73878 m!72491))

(assert (=> b!73881 m!72489))

(assert (=> b!73881 m!72489))

(declare-fun m!72493 () Bool)

(assert (=> b!73881 m!72493))

(assert (=> b!73882 m!72489))

(assert (=> b!73882 m!72489))

(assert (=> b!73882 m!72491))

(assert (=> bm!6519 m!72489))

(declare-fun m!72495 () Bool)

(assert (=> bm!6519 m!72495))

(assert (=> bm!6445 d!17167))

(declare-fun d!17169 () Bool)

(declare-fun res!39129 () Bool)

(declare-fun e!48304 () Bool)

(assert (=> d!17169 (=> res!39129 e!48304)))

(assert (=> d!17169 (= res!39129 (and ((_ is Cons!1503) lt!32720) (= (_1!1083 (h!2090 lt!32720)) (_1!1083 lt!32472))))))

(assert (=> d!17169 (= (containsKey!136 lt!32720 (_1!1083 lt!32472)) e!48304)))

(declare-fun b!73883 () Bool)

(declare-fun e!48305 () Bool)

(assert (=> b!73883 (= e!48304 e!48305)))

(declare-fun res!39130 () Bool)

(assert (=> b!73883 (=> (not res!39130) (not e!48305))))

(assert (=> b!73883 (= res!39130 (and (or (not ((_ is Cons!1503) lt!32720)) (bvsle (_1!1083 (h!2090 lt!32720)) (_1!1083 lt!32472))) ((_ is Cons!1503) lt!32720) (bvslt (_1!1083 (h!2090 lt!32720)) (_1!1083 lt!32472))))))

(declare-fun b!73884 () Bool)

(assert (=> b!73884 (= e!48305 (containsKey!136 (t!5068 lt!32720) (_1!1083 lt!32472)))))

(assert (= (and d!17169 (not res!39129)) b!73883))

(assert (= (and b!73883 res!39130) b!73884))

(declare-fun m!72497 () Bool)

(assert (=> b!73884 m!72497))

(assert (=> b!73585 d!17169))

(declare-fun b!73885 () Bool)

(declare-fun e!48306 () List!1507)

(declare-fun call!6524 () List!1507)

(assert (=> b!73885 (= e!48306 call!6524)))

(declare-fun b!73886 () Bool)

(declare-fun e!48308 () List!1507)

(declare-fun call!6523 () List!1507)

(assert (=> b!73886 (= e!48308 call!6523)))

(declare-fun call!6525 () List!1507)

(declare-fun bm!6520 () Bool)

(declare-fun c!11049 () Bool)

(declare-fun e!48309 () List!1507)

(assert (=> bm!6520 (= call!6525 ($colon$colon!65 e!48309 (ite c!11049 (h!2090 (t!5068 (toList!735 (+!98 lt!32476 lt!32472)))) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482)))))))

(declare-fun c!11050 () Bool)

(assert (=> bm!6520 (= c!11050 c!11049)))

(declare-fun b!73888 () Bool)

(declare-fun res!39132 () Bool)

(declare-fun e!48307 () Bool)

(assert (=> b!73888 (=> (not res!39132) (not e!48307))))

(declare-fun lt!33167 () List!1507)

(assert (=> b!73888 (= res!39132 (containsKey!136 lt!33167 (_1!1083 lt!32482)))))

(declare-fun b!73889 () Bool)

(declare-fun e!48310 () List!1507)

(assert (=> b!73889 (= e!48310 call!6525)))

(declare-fun c!11048 () Bool)

(declare-fun b!73890 () Bool)

(declare-fun c!11051 () Bool)

(assert (=> b!73890 (= e!48309 (ite c!11051 (t!5068 (t!5068 (toList!735 (+!98 lt!32476 lt!32472)))) (ite c!11048 (Cons!1503 (h!2090 (t!5068 (toList!735 (+!98 lt!32476 lt!32472)))) (t!5068 (t!5068 (toList!735 (+!98 lt!32476 lt!32472))))) Nil!1504)))))

(declare-fun b!73891 () Bool)

(assert (=> b!73891 (= e!48309 (insertStrictlySorted!53 (t!5068 (t!5068 (toList!735 (+!98 lt!32476 lt!32472)))) (_1!1083 lt!32482) (_2!1083 lt!32482)))))

(declare-fun b!73892 () Bool)

(assert (=> b!73892 (= e!48307 (contains!730 lt!33167 (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))))))

(declare-fun bm!6521 () Bool)

(assert (=> bm!6521 (= call!6524 call!6525)))

(declare-fun b!73893 () Bool)

(assert (=> b!73893 (= e!48310 e!48306)))

(assert (=> b!73893 (= c!11051 (and ((_ is Cons!1503) (t!5068 (toList!735 (+!98 lt!32476 lt!32472)))) (= (_1!1083 (h!2090 (t!5068 (toList!735 (+!98 lt!32476 lt!32472))))) (_1!1083 lt!32482))))))

(declare-fun b!73887 () Bool)

(assert (=> b!73887 (= c!11048 (and ((_ is Cons!1503) (t!5068 (toList!735 (+!98 lt!32476 lt!32472)))) (bvsgt (_1!1083 (h!2090 (t!5068 (toList!735 (+!98 lt!32476 lt!32472))))) (_1!1083 lt!32482))))))

(assert (=> b!73887 (= e!48306 e!48308)))

(declare-fun d!17171 () Bool)

(assert (=> d!17171 e!48307))

(declare-fun res!39131 () Bool)

(assert (=> d!17171 (=> (not res!39131) (not e!48307))))

(assert (=> d!17171 (= res!39131 (isStrictlySorted!287 lt!33167))))

(assert (=> d!17171 (= lt!33167 e!48310)))

(assert (=> d!17171 (= c!11049 (and ((_ is Cons!1503) (t!5068 (toList!735 (+!98 lt!32476 lt!32472)))) (bvslt (_1!1083 (h!2090 (t!5068 (toList!735 (+!98 lt!32476 lt!32472))))) (_1!1083 lt!32482))))))

(assert (=> d!17171 (isStrictlySorted!287 (t!5068 (toList!735 (+!98 lt!32476 lt!32472))))))

(assert (=> d!17171 (= (insertStrictlySorted!53 (t!5068 (toList!735 (+!98 lt!32476 lt!32472))) (_1!1083 lt!32482) (_2!1083 lt!32482)) lt!33167)))

(declare-fun b!73894 () Bool)

(assert (=> b!73894 (= e!48308 call!6523)))

(declare-fun bm!6522 () Bool)

(assert (=> bm!6522 (= call!6523 call!6524)))

(assert (= (and d!17171 c!11049) b!73889))

(assert (= (and d!17171 (not c!11049)) b!73893))

(assert (= (and b!73893 c!11051) b!73885))

(assert (= (and b!73893 (not c!11051)) b!73887))

(assert (= (and b!73887 c!11048) b!73894))

(assert (= (and b!73887 (not c!11048)) b!73886))

(assert (= (or b!73894 b!73886) bm!6522))

(assert (= (or b!73885 bm!6522) bm!6521))

(assert (= (or b!73889 bm!6521) bm!6520))

(assert (= (and bm!6520 c!11050) b!73891))

(assert (= (and bm!6520 (not c!11050)) b!73890))

(assert (= (and d!17171 res!39131) b!73888))

(assert (= (and b!73888 res!39132) b!73892))

(declare-fun m!72499 () Bool)

(assert (=> b!73888 m!72499))

(declare-fun m!72501 () Bool)

(assert (=> d!17171 m!72501))

(declare-fun m!72503 () Bool)

(assert (=> d!17171 m!72503))

(declare-fun m!72505 () Bool)

(assert (=> b!73891 m!72505))

(declare-fun m!72507 () Bool)

(assert (=> b!73892 m!72507))

(declare-fun m!72509 () Bool)

(assert (=> bm!6520 m!72509))

(assert (=> b!73463 d!17171))

(declare-fun d!17173 () Bool)

(assert (=> d!17173 (= (isDefined!86 (getValueByKey!132 (toList!735 lt!32721) (_1!1083 lt!32472))) (not (isEmpty!322 (getValueByKey!132 (toList!735 lt!32721) (_1!1083 lt!32472)))))))

(declare-fun bs!3168 () Bool)

(assert (= bs!3168 d!17173))

(assert (=> bs!3168 m!71343))

(declare-fun m!72511 () Bool)

(assert (=> bs!3168 m!72511))

(assert (=> b!73580 d!17173))

(assert (=> b!73580 d!17009))

(declare-fun b!73895 () Bool)

(declare-fun e!48311 () (_ BitVec 32))

(declare-fun call!6526 () (_ BitVec 32))

(assert (=> b!73895 (= e!48311 call!6526)))

(declare-fun b!73896 () Bool)

(declare-fun e!48312 () (_ BitVec 32))

(assert (=> b!73896 (= e!48312 e!48311)))

(declare-fun c!11052 () Bool)

(assert (=> b!73896 (= c!11052 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!6523 () Bool)

(assert (=> bm!6523 (= call!6526 (arrayCountValidKeys!0 (_keys!3865 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!73897 () Bool)

(assert (=> b!73897 (= e!48312 #b00000000000000000000000000000000)))

(declare-fun b!73898 () Bool)

(assert (=> b!73898 (= e!48311 (bvadd #b00000000000000000000000000000001 call!6526))))

(declare-fun d!17175 () Bool)

(declare-fun lt!33168 () (_ BitVec 32))

(assert (=> d!17175 (and (bvsge lt!33168 #b00000000000000000000000000000000) (bvsle lt!33168 (bvsub (size!2096 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!17175 (= lt!33168 e!48312)))

(declare-fun c!11053 () Bool)

(assert (=> d!17175 (= c!11053 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!17175 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2096 (_keys!3865 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2096 (_keys!3865 newMap!16)) (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!17175 (= (arrayCountValidKeys!0 (_keys!3865 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2096 (_keys!3865 newMap!16))) lt!33168)))

(assert (= (and d!17175 c!11053) b!73897))

(assert (= (and d!17175 (not c!11053)) b!73896))

(assert (= (and b!73896 c!11052) b!73898))

(assert (= (and b!73896 (not c!11052)) b!73895))

(assert (= (or b!73898 b!73895) bm!6523))

(declare-fun m!72513 () Bool)

(assert (=> b!73896 m!72513))

(assert (=> b!73896 m!72513))

(declare-fun m!72515 () Bool)

(assert (=> b!73896 m!72515))

(declare-fun m!72517 () Bool)

(assert (=> bm!6523 m!72517))

(assert (=> bm!6473 d!17175))

(declare-fun d!17177 () Bool)

(declare-fun e!48313 () Bool)

(assert (=> d!17177 e!48313))

(declare-fun res!39133 () Bool)

(assert (=> d!17177 (=> (not res!39133) (not e!48313))))

(declare-fun lt!33172 () ListLongMap!1439)

(assert (=> d!17177 (= res!39133 (contains!729 lt!33172 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(declare-fun lt!33171 () List!1507)

(assert (=> d!17177 (= lt!33172 (ListLongMap!1440 lt!33171))))

(declare-fun lt!33169 () Unit!2086)

(declare-fun lt!33170 () Unit!2086)

(assert (=> d!17177 (= lt!33169 lt!33170)))

(assert (=> d!17177 (= (getValueByKey!132 lt!33171 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(assert (=> d!17177 (= lt!33170 (lemmaContainsTupThenGetReturnValue!51 lt!33171 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))) (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(assert (=> d!17177 (= lt!33171 (insertStrictlySorted!53 (toList!735 call!6453) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))) (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(assert (=> d!17177 (= (+!98 call!6453 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))) lt!33172)))

(declare-fun b!73899 () Bool)

(declare-fun res!39134 () Bool)

(assert (=> b!73899 (=> (not res!39134) (not e!48313))))

(assert (=> b!73899 (= res!39134 (= (getValueByKey!132 (toList!735 lt!33172) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(declare-fun b!73900 () Bool)

(assert (=> b!73900 (= e!48313 (contains!730 (toList!735 lt!33172) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))

(assert (= (and d!17177 res!39133) b!73899))

(assert (= (and b!73899 res!39134) b!73900))

(declare-fun m!72519 () Bool)

(assert (=> d!17177 m!72519))

(declare-fun m!72521 () Bool)

(assert (=> d!17177 m!72521))

(declare-fun m!72523 () Bool)

(assert (=> d!17177 m!72523))

(declare-fun m!72525 () Bool)

(assert (=> d!17177 m!72525))

(declare-fun m!72527 () Bool)

(assert (=> b!73899 m!72527))

(declare-fun m!72529 () Bool)

(assert (=> b!73900 m!72529))

(assert (=> b!73331 d!17177))

(declare-fun d!17179 () Bool)

(declare-fun res!39135 () Bool)

(declare-fun e!48314 () Bool)

(assert (=> d!17179 (=> res!39135 e!48314)))

(assert (=> d!17179 (= res!39135 (or ((_ is Nil!1504) lt!32863) ((_ is Nil!1504) (t!5068 lt!32863))))))

(assert (=> d!17179 (= (isStrictlySorted!287 lt!32863) e!48314)))

(declare-fun b!73901 () Bool)

(declare-fun e!48315 () Bool)

(assert (=> b!73901 (= e!48314 e!48315)))

(declare-fun res!39136 () Bool)

(assert (=> b!73901 (=> (not res!39136) (not e!48315))))

(assert (=> b!73901 (= res!39136 (bvslt (_1!1083 (h!2090 lt!32863)) (_1!1083 (h!2090 (t!5068 lt!32863)))))))

(declare-fun b!73902 () Bool)

(assert (=> b!73902 (= e!48315 (isStrictlySorted!287 (t!5068 lt!32863)))))

(assert (= (and d!17179 (not res!39135)) b!73901))

(assert (= (and b!73901 res!39136) b!73902))

(declare-fun m!72531 () Bool)

(assert (=> b!73902 m!72531))

(assert (=> d!16931 d!17179))

(declare-fun d!17181 () Bool)

(declare-fun res!39137 () Bool)

(declare-fun e!48316 () Bool)

(assert (=> d!17181 (=> res!39137 e!48316)))

(assert (=> d!17181 (= res!39137 (or ((_ is Nil!1504) (toList!735 (+!98 lt!32476 lt!32472))) ((_ is Nil!1504) (t!5068 (toList!735 (+!98 lt!32476 lt!32472))))))))

(assert (=> d!17181 (= (isStrictlySorted!287 (toList!735 (+!98 lt!32476 lt!32472))) e!48316)))

(declare-fun b!73903 () Bool)

(declare-fun e!48317 () Bool)

(assert (=> b!73903 (= e!48316 e!48317)))

(declare-fun res!39138 () Bool)

(assert (=> b!73903 (=> (not res!39138) (not e!48317))))

(assert (=> b!73903 (= res!39138 (bvslt (_1!1083 (h!2090 (toList!735 (+!98 lt!32476 lt!32472)))) (_1!1083 (h!2090 (t!5068 (toList!735 (+!98 lt!32476 lt!32472)))))))))

(declare-fun b!73904 () Bool)

(assert (=> b!73904 (= e!48317 (isStrictlySorted!287 (t!5068 (toList!735 (+!98 lt!32476 lt!32472)))))))

(assert (= (and d!17181 (not res!39137)) b!73903))

(assert (= (and b!73903 res!39138) b!73904))

(assert (=> b!73904 m!72503))

(assert (=> d!16931 d!17181))

(declare-fun d!17183 () Bool)

(declare-fun e!48319 () Bool)

(assert (=> d!17183 e!48319))

(declare-fun res!39139 () Bool)

(assert (=> d!17183 (=> res!39139 e!48319)))

(declare-fun lt!33175 () Bool)

(assert (=> d!17183 (= res!39139 (not lt!33175))))

(declare-fun lt!33173 () Bool)

(assert (=> d!17183 (= lt!33175 lt!33173)))

(declare-fun lt!33174 () Unit!2086)

(declare-fun e!48318 () Unit!2086)

(assert (=> d!17183 (= lt!33174 e!48318)))

(declare-fun c!11054 () Bool)

(assert (=> d!17183 (= c!11054 lt!33173)))

(assert (=> d!17183 (= lt!33173 (containsKey!136 (toList!735 (map!1158 (_2!1084 lt!32995))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> d!17183 (= (contains!729 (map!1158 (_2!1084 lt!32995)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) lt!33175)))

(declare-fun b!73905 () Bool)

(declare-fun lt!33176 () Unit!2086)

(assert (=> b!73905 (= e!48318 lt!33176)))

(assert (=> b!73905 (= lt!33176 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 (map!1158 (_2!1084 lt!32995))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> b!73905 (isDefined!86 (getValueByKey!132 (toList!735 (map!1158 (_2!1084 lt!32995))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun b!73906 () Bool)

(declare-fun Unit!2125 () Unit!2086)

(assert (=> b!73906 (= e!48318 Unit!2125)))

(declare-fun b!73907 () Bool)

(assert (=> b!73907 (= e!48319 (isDefined!86 (getValueByKey!132 (toList!735 (map!1158 (_2!1084 lt!32995))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))))

(assert (= (and d!17183 c!11054) b!73905))

(assert (= (and d!17183 (not c!11054)) b!73906))

(assert (= (and d!17183 (not res!39139)) b!73907))

(assert (=> d!17183 m!71053))

(declare-fun m!72533 () Bool)

(assert (=> d!17183 m!72533))

(assert (=> b!73905 m!71053))

(declare-fun m!72535 () Bool)

(assert (=> b!73905 m!72535))

(assert (=> b!73905 m!71053))

(declare-fun m!72537 () Bool)

(assert (=> b!73905 m!72537))

(assert (=> b!73905 m!72537))

(declare-fun m!72539 () Bool)

(assert (=> b!73905 m!72539))

(assert (=> b!73907 m!71053))

(assert (=> b!73907 m!72537))

(assert (=> b!73907 m!72537))

(assert (=> b!73907 m!72539))

(assert (=> b!73567 d!17183))

(declare-fun d!17185 () Bool)

(assert (=> d!17185 (= (map!1158 (_2!1084 lt!32995)) (getCurrentListMap!426 (_keys!3865 (_2!1084 lt!32995)) (_values!2196 (_2!1084 lt!32995)) (mask!6180 (_2!1084 lt!32995)) (extraKeys!2072 (_2!1084 lt!32995)) (zeroValue!2115 (_2!1084 lt!32995)) (minValue!2115 (_2!1084 lt!32995)) #b00000000000000000000000000000000 (defaultEntry!2213 (_2!1084 lt!32995))))))

(declare-fun bs!3169 () Bool)

(assert (= bs!3169 d!17185))

(declare-fun m!72541 () Bool)

(assert (=> bs!3169 m!72541))

(assert (=> b!73567 d!17185))

(assert (=> d!17027 d!17025))

(declare-fun d!17187 () Bool)

(assert (=> d!17187 (= (getValueByKey!132 lt!32709 (_1!1083 lt!32482)) (Some!137 (_2!1083 lt!32482)))))

(assert (=> d!17187 true))

(declare-fun _$22!385 () Unit!2086)

(assert (=> d!17187 (= (choose!422 lt!32709 (_1!1083 lt!32482) (_2!1083 lt!32482)) _$22!385)))

(declare-fun bs!3170 () Bool)

(assert (= bs!3170 d!17187))

(assert (=> bs!3170 m!71303))

(assert (=> d!17027 d!17187))

(declare-fun d!17189 () Bool)

(declare-fun res!39140 () Bool)

(declare-fun e!48320 () Bool)

(assert (=> d!17189 (=> res!39140 e!48320)))

(assert (=> d!17189 (= res!39140 (or ((_ is Nil!1504) lt!32709) ((_ is Nil!1504) (t!5068 lt!32709))))))

(assert (=> d!17189 (= (isStrictlySorted!287 lt!32709) e!48320)))

(declare-fun b!73908 () Bool)

(declare-fun e!48321 () Bool)

(assert (=> b!73908 (= e!48320 e!48321)))

(declare-fun res!39141 () Bool)

(assert (=> b!73908 (=> (not res!39141) (not e!48321))))

(assert (=> b!73908 (= res!39141 (bvslt (_1!1083 (h!2090 lt!32709)) (_1!1083 (h!2090 (t!5068 lt!32709)))))))

(declare-fun b!73909 () Bool)

(assert (=> b!73909 (= e!48321 (isStrictlySorted!287 (t!5068 lt!32709)))))

(assert (= (and d!17189 (not res!39140)) b!73908))

(assert (= (and b!73908 res!39141) b!73909))

(declare-fun m!72543 () Bool)

(assert (=> b!73909 m!72543))

(assert (=> d!17027 d!17189))

(assert (=> b!73698 d!17087))

(declare-fun d!17191 () Bool)

(assert (=> d!17191 (= (apply!75 lt!32819 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1158 (getValueByKey!132 (toList!735 lt!32819) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3171 () Bool)

(assert (= bs!3171 d!17191))

(declare-fun m!72545 () Bool)

(assert (=> bs!3171 m!72545))

(assert (=> bs!3171 m!72545))

(declare-fun m!72547 () Bool)

(assert (=> bs!3171 m!72547))

(assert (=> b!73351 d!17191))

(declare-fun b!73913 () Bool)

(declare-fun e!48323 () Option!138)

(assert (=> b!73913 (= e!48323 None!136)))

(declare-fun b!73911 () Bool)

(declare-fun e!48322 () Option!138)

(assert (=> b!73911 (= e!48322 e!48323)))

(declare-fun c!11056 () Bool)

(assert (=> b!73911 (= c!11056 (and ((_ is Cons!1503) (toList!735 lt!32903)) (not (= (_1!1083 (h!2090 (toList!735 lt!32903))) (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun b!73910 () Bool)

(assert (=> b!73910 (= e!48322 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32903)))))))

(declare-fun d!17193 () Bool)

(declare-fun c!11055 () Bool)

(assert (=> d!17193 (= c!11055 (and ((_ is Cons!1503) (toList!735 lt!32903)) (= (_1!1083 (h!2090 (toList!735 lt!32903))) (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17193 (= (getValueByKey!132 (toList!735 lt!32903) (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) e!48322)))

(declare-fun b!73912 () Bool)

(assert (=> b!73912 (= e!48323 (getValueByKey!132 (t!5068 (toList!735 lt!32903)) (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (= (and d!17193 c!11055) b!73910))

(assert (= (and d!17193 (not c!11055)) b!73911))

(assert (= (and b!73911 c!11056) b!73912))

(assert (= (and b!73911 (not c!11056)) b!73913))

(declare-fun m!72549 () Bool)

(assert (=> b!73912 m!72549))

(assert (=> b!73524 d!17193))

(declare-fun d!17195 () Bool)

(declare-fun lt!33177 () Bool)

(assert (=> d!17195 (= lt!33177 (select (content!76 (t!5068 (toList!735 lt!32710))) lt!32482))))

(declare-fun e!48324 () Bool)

(assert (=> d!17195 (= lt!33177 e!48324)))

(declare-fun res!39143 () Bool)

(assert (=> d!17195 (=> (not res!39143) (not e!48324))))

(assert (=> d!17195 (= res!39143 ((_ is Cons!1503) (t!5068 (toList!735 lt!32710))))))

(assert (=> d!17195 (= (contains!730 (t!5068 (toList!735 lt!32710)) lt!32482) lt!33177)))

(declare-fun b!73914 () Bool)

(declare-fun e!48325 () Bool)

(assert (=> b!73914 (= e!48324 e!48325)))

(declare-fun res!39142 () Bool)

(assert (=> b!73914 (=> res!39142 e!48325)))

(assert (=> b!73914 (= res!39142 (= (h!2090 (t!5068 (toList!735 lt!32710))) lt!32482))))

(declare-fun b!73915 () Bool)

(assert (=> b!73915 (= e!48325 (contains!730 (t!5068 (t!5068 (toList!735 lt!32710))) lt!32482))))

(assert (= (and d!17195 res!39143) b!73914))

(assert (= (and b!73914 (not res!39142)) b!73915))

(declare-fun m!72551 () Bool)

(assert (=> d!17195 m!72551))

(declare-fun m!72553 () Bool)

(assert (=> d!17195 m!72553))

(declare-fun m!72555 () Bool)

(assert (=> b!73915 m!72555))

(assert (=> b!73609 d!17195))

(declare-fun b!73916 () Bool)

(declare-fun e!48326 () (_ BitVec 32))

(declare-fun call!6527 () (_ BitVec 32))

(assert (=> b!73916 (= e!48326 call!6527)))

(declare-fun b!73917 () Bool)

(declare-fun e!48327 () (_ BitVec 32))

(assert (=> b!73917 (= e!48327 e!48326)))

(declare-fun c!11057 () Bool)

(assert (=> b!73917 (= c!11057 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (_2!1084 lt!32604))) #b00000000000000000000000000000000)))))

(declare-fun bm!6524 () Bool)

(assert (=> bm!6524 (= call!6527 (arrayCountValidKeys!0 (_keys!3865 (_2!1084 lt!32604)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2096 (_keys!3865 (_2!1084 lt!32604)))))))

(declare-fun b!73918 () Bool)

(assert (=> b!73918 (= e!48327 #b00000000000000000000000000000000)))

(declare-fun b!73919 () Bool)

(assert (=> b!73919 (= e!48326 (bvadd #b00000000000000000000000000000001 call!6527))))

(declare-fun d!17197 () Bool)

(declare-fun lt!33178 () (_ BitVec 32))

(assert (=> d!17197 (and (bvsge lt!33178 #b00000000000000000000000000000000) (bvsle lt!33178 (bvsub (size!2096 (_keys!3865 (_2!1084 lt!32604))) #b00000000000000000000000000000000)))))

(assert (=> d!17197 (= lt!33178 e!48327)))

(declare-fun c!11058 () Bool)

(assert (=> d!17197 (= c!11058 (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 (_2!1084 lt!32604)))))))

(assert (=> d!17197 (and (bvsle #b00000000000000000000000000000000 (size!2096 (_keys!3865 (_2!1084 lt!32604)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2096 (_keys!3865 (_2!1084 lt!32604))) (size!2096 (_keys!3865 (_2!1084 lt!32604)))))))

(assert (=> d!17197 (= (arrayCountValidKeys!0 (_keys!3865 (_2!1084 lt!32604)) #b00000000000000000000000000000000 (size!2096 (_keys!3865 (_2!1084 lt!32604)))) lt!33178)))

(assert (= (and d!17197 c!11058) b!73918))

(assert (= (and d!17197 (not c!11058)) b!73917))

(assert (= (and b!73917 c!11057) b!73919))

(assert (= (and b!73917 (not c!11057)) b!73916))

(assert (= (or b!73919 b!73916) bm!6524))

(declare-fun m!72557 () Bool)

(assert (=> b!73917 m!72557))

(assert (=> b!73917 m!72557))

(declare-fun m!72559 () Bool)

(assert (=> b!73917 m!72559))

(declare-fun m!72561 () Bool)

(assert (=> bm!6524 m!72561))

(assert (=> b!73279 d!17197))

(declare-fun d!17199 () Bool)

(declare-fun res!39144 () Bool)

(declare-fun e!48328 () Bool)

(assert (=> d!17199 (=> res!39144 e!48328)))

(assert (=> d!17199 (= res!39144 (or ((_ is Nil!1504) lt!32878) ((_ is Nil!1504) (t!5068 lt!32878))))))

(assert (=> d!17199 (= (isStrictlySorted!287 lt!32878) e!48328)))

(declare-fun b!73920 () Bool)

(declare-fun e!48329 () Bool)

(assert (=> b!73920 (= e!48328 e!48329)))

(declare-fun res!39145 () Bool)

(assert (=> b!73920 (=> (not res!39145) (not e!48329))))

(assert (=> b!73920 (= res!39145 (bvslt (_1!1083 (h!2090 lt!32878)) (_1!1083 (h!2090 (t!5068 lt!32878)))))))

(declare-fun b!73921 () Bool)

(assert (=> b!73921 (= e!48329 (isStrictlySorted!287 (t!5068 lt!32878)))))

(assert (= (and d!17199 (not res!39144)) b!73920))

(assert (= (and b!73920 res!39145) b!73921))

(declare-fun m!72563 () Bool)

(assert (=> b!73921 m!72563))

(assert (=> d!16947 d!17199))

(assert (=> d!16947 d!17081))

(assert (=> d!16949 d!16973))

(assert (=> d!16949 d!16951))

(declare-fun d!17201 () Bool)

(declare-fun e!48331 () Bool)

(assert (=> d!17201 e!48331))

(declare-fun res!39146 () Bool)

(assert (=> d!17201 (=> res!39146 e!48331)))

(declare-fun lt!33181 () Bool)

(assert (=> d!17201 (= res!39146 (not lt!33181))))

(declare-fun lt!33179 () Bool)

(assert (=> d!17201 (= lt!33181 lt!33179)))

(declare-fun lt!33180 () Unit!2086)

(declare-fun e!48330 () Unit!2086)

(assert (=> d!17201 (= lt!33180 e!48330)))

(declare-fun c!11059 () Bool)

(assert (=> d!17201 (= c!11059 lt!33179)))

(assert (=> d!17201 (= lt!33179 (containsKey!136 (toList!735 lt!32670) lt!32658))))

(assert (=> d!17201 (= (contains!729 lt!32670 lt!32658) lt!33181)))

(declare-fun b!73922 () Bool)

(declare-fun lt!33182 () Unit!2086)

(assert (=> b!73922 (= e!48330 lt!33182)))

(assert (=> b!73922 (= lt!33182 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32670) lt!32658))))

(assert (=> b!73922 (isDefined!86 (getValueByKey!132 (toList!735 lt!32670) lt!32658))))

(declare-fun b!73923 () Bool)

(declare-fun Unit!2126 () Unit!2086)

(assert (=> b!73923 (= e!48330 Unit!2126)))

(declare-fun b!73924 () Bool)

(assert (=> b!73924 (= e!48331 (isDefined!86 (getValueByKey!132 (toList!735 lt!32670) lt!32658)))))

(assert (= (and d!17201 c!11059) b!73922))

(assert (= (and d!17201 (not c!11059)) b!73923))

(assert (= (and d!17201 (not res!39146)) b!73924))

(declare-fun m!72565 () Bool)

(assert (=> d!17201 m!72565))

(declare-fun m!72567 () Bool)

(assert (=> b!73922 m!72567))

(assert (=> b!73922 m!71805))

(assert (=> b!73922 m!71805))

(declare-fun m!72569 () Bool)

(assert (=> b!73922 m!72569))

(assert (=> b!73924 m!71805))

(assert (=> b!73924 m!71805))

(assert (=> b!73924 m!72569))

(assert (=> d!16949 d!17201))

(assert (=> d!16949 d!16959))

(declare-fun d!17203 () Bool)

(assert (=> d!17203 (= (apply!75 (+!98 lt!32670 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32658) (apply!75 lt!32670 lt!32658))))

(assert (=> d!17203 true))

(declare-fun _$34!811 () Unit!2086)

(assert (=> d!17203 (= (choose!424 lt!32670 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))) lt!32658) _$34!811)))

(declare-fun bs!3172 () Bool)

(assert (= bs!3172 d!17203))

(assert (=> bs!3172 m!71237))

(assert (=> bs!3172 m!71237))

(assert (=> bs!3172 m!71251))

(assert (=> bs!3172 m!71255))

(assert (=> d!16949 d!17203))

(declare-fun b!73937 () Bool)

(declare-fun e!48338 () SeekEntryResult!246)

(assert (=> b!73937 (= e!48338 (Found!246 (index!3117 lt!32845)))))

(declare-fun b!73938 () Bool)

(declare-fun e!48340 () SeekEntryResult!246)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!73938 (= e!48340 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11162 lt!32845) #b00000000000000000000000000000001) (nextIndex!0 (index!3117 lt!32845) (x!11162 lt!32845) (mask!6180 newMap!16)) (index!3117 lt!32845) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun b!73940 () Bool)

(assert (=> b!73940 (= e!48340 (MissingVacant!246 (index!3117 lt!32845)))))

(declare-fun b!73941 () Bool)

(declare-fun e!48339 () SeekEntryResult!246)

(assert (=> b!73941 (= e!48339 e!48338)))

(declare-fun c!11068 () Bool)

(declare-fun lt!33187 () (_ BitVec 64))

(assert (=> b!73941 (= c!11068 (= lt!33187 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun b!73942 () Bool)

(assert (=> b!73942 (= e!48339 Undefined!246)))

(declare-fun b!73939 () Bool)

(declare-fun c!11066 () Bool)

(assert (=> b!73939 (= c!11066 (= lt!33187 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73939 (= e!48338 e!48340)))

(declare-fun lt!33188 () SeekEntryResult!246)

(declare-fun d!17205 () Bool)

(assert (=> d!17205 (and (or ((_ is Undefined!246) lt!33188) (not ((_ is Found!246) lt!33188)) (and (bvsge (index!3116 lt!33188) #b00000000000000000000000000000000) (bvslt (index!3116 lt!33188) (size!2096 (_keys!3865 newMap!16))))) (or ((_ is Undefined!246) lt!33188) ((_ is Found!246) lt!33188) (not ((_ is MissingVacant!246) lt!33188)) (not (= (index!3118 lt!33188) (index!3117 lt!32845))) (and (bvsge (index!3118 lt!33188) #b00000000000000000000000000000000) (bvslt (index!3118 lt!33188) (size!2096 (_keys!3865 newMap!16))))) (or ((_ is Undefined!246) lt!33188) (ite ((_ is Found!246) lt!33188) (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!33188)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (and ((_ is MissingVacant!246) lt!33188) (= (index!3118 lt!33188) (index!3117 lt!32845)) (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3118 lt!33188)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!17205 (= lt!33188 e!48339)))

(declare-fun c!11067 () Bool)

(assert (=> d!17205 (= c!11067 (bvsge (x!11162 lt!32845) #b01111111111111111111111111111110))))

(assert (=> d!17205 (= lt!33187 (select (arr!1858 (_keys!3865 newMap!16)) (index!3117 lt!32845)))))

(assert (=> d!17205 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17205 (= (seekKeyOrZeroReturnVacant!0 (x!11162 lt!32845) (index!3117 lt!32845) (index!3117 lt!32845) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)) lt!33188)))

(assert (= (and d!17205 c!11067) b!73942))

(assert (= (and d!17205 (not c!11067)) b!73941))

(assert (= (and b!73941 c!11068) b!73937))

(assert (= (and b!73941 (not c!11068)) b!73939))

(assert (= (and b!73939 c!11066) b!73940))

(assert (= (and b!73939 (not c!11066)) b!73938))

(declare-fun m!72571 () Bool)

(assert (=> b!73938 m!72571))

(assert (=> b!73938 m!72571))

(assert (=> b!73938 m!71053))

(declare-fun m!72573 () Bool)

(assert (=> b!73938 m!72573))

(declare-fun m!72575 () Bool)

(assert (=> d!17205 m!72575))

(declare-fun m!72577 () Bool)

(assert (=> d!17205 m!72577))

(assert (=> d!17205 m!71691))

(assert (=> d!17205 m!71423))

(assert (=> b!73403 d!17205))

(declare-fun d!17207 () Bool)

(assert (=> d!17207 (= (apply!75 lt!33062 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1158 (getValueByKey!132 (toList!735 lt!33062) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3173 () Bool)

(assert (= bs!3173 d!17207))

(declare-fun m!72579 () Bool)

(assert (=> bs!3173 m!72579))

(assert (=> bs!3173 m!72579))

(declare-fun m!72581 () Bool)

(assert (=> bs!3173 m!72581))

(assert (=> b!73687 d!17207))

(declare-fun d!17209 () Bool)

(assert (=> d!17209 (= (apply!75 lt!32773 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1158 (getValueByKey!132 (toList!735 lt!32773) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3174 () Bool)

(assert (= bs!3174 d!17209))

(declare-fun m!72583 () Bool)

(assert (=> bs!3174 m!72583))

(assert (=> bs!3174 m!72583))

(declare-fun m!72585 () Bool)

(assert (=> bs!3174 m!72585))

(assert (=> b!73325 d!17209))

(declare-fun b!73946 () Bool)

(declare-fun e!48342 () Option!138)

(assert (=> b!73946 (= e!48342 None!136)))

(declare-fun b!73944 () Bool)

(declare-fun e!48341 () Option!138)

(assert (=> b!73944 (= e!48341 e!48342)))

(declare-fun c!11070 () Bool)

(assert (=> b!73944 (= c!11070 (and ((_ is Cons!1503) (toList!735 lt!32792)) (not (= (_1!1083 (h!2090 (toList!735 lt!32792))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))))

(declare-fun b!73943 () Bool)

(assert (=> b!73943 (= e!48341 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32792)))))))

(declare-fun c!11069 () Bool)

(declare-fun d!17211 () Bool)

(assert (=> d!17211 (= c!11069 (and ((_ is Cons!1503) (toList!735 lt!32792)) (= (_1!1083 (h!2090 (toList!735 lt!32792))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (=> d!17211 (= (getValueByKey!132 (toList!735 lt!32792) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) e!48341)))

(declare-fun b!73945 () Bool)

(assert (=> b!73945 (= e!48342 (getValueByKey!132 (t!5068 (toList!735 lt!32792)) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (= (and d!17211 c!11069) b!73943))

(assert (= (and d!17211 (not c!11069)) b!73944))

(assert (= (and b!73944 c!11070) b!73945))

(assert (= (and b!73944 (not c!11070)) b!73946))

(declare-fun m!72587 () Bool)

(assert (=> b!73945 m!72587))

(assert (=> b!73334 d!17211))

(assert (=> d!16865 d!16873))

(declare-fun d!17213 () Bool)

(assert (=> d!17213 (= (+!98 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32600 (zeroValue!2115 newMap!16) lt!32481 #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(assert (=> d!17213 true))

(declare-fun _$8!64 () Unit!2086)

(assert (=> d!17213 (= (choose!420 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) lt!32600 (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) lt!32481 (defaultEntry!2213 newMap!16)) _$8!64)))

(declare-fun bs!3175 () Bool)

(assert (= bs!3175 d!17213))

(assert (=> bs!3175 m!71191))

(assert (=> bs!3175 m!71191))

(assert (=> bs!3175 m!71455))

(assert (=> bs!3175 m!71451))

(assert (=> d!16865 d!17213))

(assert (=> d!16865 d!17091))

(declare-fun b!73947 () Bool)

(declare-fun e!48344 () Bool)

(declare-fun e!48347 () Bool)

(assert (=> b!73947 (= e!48344 e!48347)))

(declare-fun res!39152 () Bool)

(declare-fun call!6533 () Bool)

(assert (=> b!73947 (= res!39152 call!6533)))

(assert (=> b!73947 (=> (not res!39152) (not e!48347))))

(declare-fun b!73948 () Bool)

(declare-fun e!48351 () ListLongMap!1439)

(declare-fun call!6528 () ListLongMap!1439)

(assert (=> b!73948 (= e!48351 call!6528)))

(declare-fun b!73949 () Bool)

(declare-fun call!6529 () ListLongMap!1439)

(assert (=> b!73949 (= e!48351 call!6529)))

(declare-fun bm!6525 () Bool)

(declare-fun lt!33199 () ListLongMap!1439)

(assert (=> bm!6525 (= call!6533 (contains!729 lt!33199 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73950 () Bool)

(declare-fun e!48343 () Bool)

(declare-fun e!48349 () Bool)

(assert (=> b!73950 (= e!48343 e!48349)))

(declare-fun res!39150 () Bool)

(assert (=> b!73950 (=> (not res!39150) (not e!48349))))

(assert (=> b!73950 (= res!39150 (contains!729 lt!33199 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73950 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!73951 () Bool)

(declare-fun e!48345 () Unit!2086)

(declare-fun Unit!2127 () Unit!2086)

(assert (=> b!73951 (= e!48345 Unit!2127)))

(declare-fun bm!6526 () Bool)

(declare-fun call!6530 () ListLongMap!1439)

(assert (=> bm!6526 (= call!6528 call!6530)))

(declare-fun bm!6527 () Bool)

(declare-fun call!6534 () ListLongMap!1439)

(assert (=> bm!6527 (= call!6534 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32600 (zeroValue!2115 newMap!16) lt!32481 #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!73953 () Bool)

(declare-fun lt!33189 () Unit!2086)

(assert (=> b!73953 (= e!48345 lt!33189)))

(declare-fun lt!33210 () ListLongMap!1439)

(assert (=> b!73953 (= lt!33210 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32600 (zeroValue!2115 newMap!16) lt!32481 #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33204 () (_ BitVec 64))

(assert (=> b!73953 (= lt!33204 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33195 () (_ BitVec 64))

(assert (=> b!73953 (= lt!33195 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33192 () Unit!2086)

(assert (=> b!73953 (= lt!33192 (addStillContains!51 lt!33210 lt!33204 (zeroValue!2115 newMap!16) lt!33195))))

(assert (=> b!73953 (contains!729 (+!98 lt!33210 (tuple2!2147 lt!33204 (zeroValue!2115 newMap!16))) lt!33195)))

(declare-fun lt!33206 () Unit!2086)

(assert (=> b!73953 (= lt!33206 lt!33192)))

(declare-fun lt!33197 () ListLongMap!1439)

(assert (=> b!73953 (= lt!33197 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32600 (zeroValue!2115 newMap!16) lt!32481 #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33207 () (_ BitVec 64))

(assert (=> b!73953 (= lt!33207 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33205 () (_ BitVec 64))

(assert (=> b!73953 (= lt!33205 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33209 () Unit!2086)

(assert (=> b!73953 (= lt!33209 (addApplyDifferent!51 lt!33197 lt!33207 lt!32481 lt!33205))))

(assert (=> b!73953 (= (apply!75 (+!98 lt!33197 (tuple2!2147 lt!33207 lt!32481)) lt!33205) (apply!75 lt!33197 lt!33205))))

(declare-fun lt!33194 () Unit!2086)

(assert (=> b!73953 (= lt!33194 lt!33209)))

(declare-fun lt!33208 () ListLongMap!1439)

(assert (=> b!73953 (= lt!33208 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32600 (zeroValue!2115 newMap!16) lt!32481 #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33198 () (_ BitVec 64))

(assert (=> b!73953 (= lt!33198 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33190 () (_ BitVec 64))

(assert (=> b!73953 (= lt!33190 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33196 () Unit!2086)

(assert (=> b!73953 (= lt!33196 (addApplyDifferent!51 lt!33208 lt!33198 (zeroValue!2115 newMap!16) lt!33190))))

(assert (=> b!73953 (= (apply!75 (+!98 lt!33208 (tuple2!2147 lt!33198 (zeroValue!2115 newMap!16))) lt!33190) (apply!75 lt!33208 lt!33190))))

(declare-fun lt!33200 () Unit!2086)

(assert (=> b!73953 (= lt!33200 lt!33196)))

(declare-fun lt!33203 () ListLongMap!1439)

(assert (=> b!73953 (= lt!33203 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32600 (zeroValue!2115 newMap!16) lt!32481 #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33193 () (_ BitVec 64))

(assert (=> b!73953 (= lt!33193 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33191 () (_ BitVec 64))

(assert (=> b!73953 (= lt!33191 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73953 (= lt!33189 (addApplyDifferent!51 lt!33203 lt!33193 lt!32481 lt!33191))))

(assert (=> b!73953 (= (apply!75 (+!98 lt!33203 (tuple2!2147 lt!33193 lt!32481)) lt!33191) (apply!75 lt!33203 lt!33191))))

(declare-fun b!73954 () Bool)

(assert (=> b!73954 (= e!48344 (not call!6533))))

(declare-fun b!73955 () Bool)

(declare-fun res!39151 () Bool)

(declare-fun e!48354 () Bool)

(assert (=> b!73955 (=> (not res!39151) (not e!48354))))

(assert (=> b!73955 (= res!39151 e!48344)))

(declare-fun c!11071 () Bool)

(assert (=> b!73955 (= c!11071 (not (= (bvand lt!32600 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!73956 () Bool)

(declare-fun e!48348 () ListLongMap!1439)

(declare-fun e!48355 () ListLongMap!1439)

(assert (=> b!73956 (= e!48348 e!48355)))

(declare-fun c!11073 () Bool)

(assert (=> b!73956 (= c!11073 (and (not (= (bvand lt!32600 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!32600 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73957 () Bool)

(declare-fun e!48350 () Bool)

(declare-fun e!48346 () Bool)

(assert (=> b!73957 (= e!48350 e!48346)))

(declare-fun res!39155 () Bool)

(declare-fun call!6531 () Bool)

(assert (=> b!73957 (= res!39155 call!6531)))

(assert (=> b!73957 (=> (not res!39155) (not e!48346))))

(declare-fun bm!6528 () Bool)

(assert (=> bm!6528 (= call!6530 call!6534)))

(declare-fun bm!6529 () Bool)

(declare-fun call!6532 () ListLongMap!1439)

(assert (=> bm!6529 (= call!6529 call!6532)))

(declare-fun b!73958 () Bool)

(assert (=> b!73958 (= e!48350 (not call!6531))))

(declare-fun b!73959 () Bool)

(declare-fun res!39148 () Bool)

(assert (=> b!73959 (=> (not res!39148) (not e!48354))))

(assert (=> b!73959 (= res!39148 e!48343)))

(declare-fun res!39147 () Bool)

(assert (=> b!73959 (=> res!39147 e!48343)))

(declare-fun e!48352 () Bool)

(assert (=> b!73959 (= res!39147 (not e!48352))))

(declare-fun res!39149 () Bool)

(assert (=> b!73959 (=> (not res!39149) (not e!48352))))

(assert (=> b!73959 (= res!39149 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!73960 () Bool)

(assert (=> b!73960 (= e!48354 e!48350)))

(declare-fun c!11075 () Bool)

(assert (=> b!73960 (= c!11075 (not (= (bvand lt!32600 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73961 () Bool)

(assert (=> b!73961 (= e!48346 (= (apply!75 lt!33199 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32481))))

(declare-fun b!73962 () Bool)

(assert (=> b!73962 (= e!48355 call!6529)))

(declare-fun bm!6530 () Bool)

(assert (=> bm!6530 (= call!6531 (contains!729 lt!33199 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17215 () Bool)

(assert (=> d!17215 e!48354))

(declare-fun res!39153 () Bool)

(assert (=> d!17215 (=> (not res!39153) (not e!48354))))

(assert (=> d!17215 (= res!39153 (or (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))))

(declare-fun lt!33201 () ListLongMap!1439)

(assert (=> d!17215 (= lt!33199 lt!33201)))

(declare-fun lt!33202 () Unit!2086)

(assert (=> d!17215 (= lt!33202 e!48345)))

(declare-fun c!11074 () Bool)

(declare-fun e!48353 () Bool)

(assert (=> d!17215 (= c!11074 e!48353)))

(declare-fun res!39154 () Bool)

(assert (=> d!17215 (=> (not res!39154) (not e!48353))))

(assert (=> d!17215 (= res!39154 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!17215 (= lt!33201 e!48348)))

(declare-fun c!11072 () Bool)

(assert (=> d!17215 (= c!11072 (and (not (= (bvand lt!32600 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!32600 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17215 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17215 (= (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32600 (zeroValue!2115 newMap!16) lt!32481 #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33199)))

(declare-fun b!73952 () Bool)

(assert (=> b!73952 (= e!48347 (= (apply!75 lt!33199 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2115 newMap!16)))))

(declare-fun b!73963 () Bool)

(assert (=> b!73963 (= e!48352 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73964 () Bool)

(declare-fun c!11076 () Bool)

(assert (=> b!73964 (= c!11076 (and (not (= (bvand lt!32600 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!32600 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!73964 (= e!48355 e!48351)))

(declare-fun b!73965 () Bool)

(assert (=> b!73965 (= e!48353 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73966 () Bool)

(assert (=> b!73966 (= e!48349 (= (apply!75 lt!33199 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1154 (select (arr!1859 (_values!2196 newMap!16)) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73966 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_values!2196 newMap!16))))))

(assert (=> b!73966 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun bm!6531 () Bool)

(assert (=> bm!6531 (= call!6532 (+!98 (ite c!11072 call!6534 (ite c!11073 call!6530 call!6528)) (ite (or c!11072 c!11073) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481))))))

(declare-fun b!73967 () Bool)

(assert (=> b!73967 (= e!48348 (+!98 call!6532 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)))))

(assert (= (and d!17215 c!11072) b!73967))

(assert (= (and d!17215 (not c!11072)) b!73956))

(assert (= (and b!73956 c!11073) b!73962))

(assert (= (and b!73956 (not c!11073)) b!73964))

(assert (= (and b!73964 c!11076) b!73949))

(assert (= (and b!73964 (not c!11076)) b!73948))

(assert (= (or b!73949 b!73948) bm!6526))

(assert (= (or b!73962 bm!6526) bm!6528))

(assert (= (or b!73962 b!73949) bm!6529))

(assert (= (or b!73967 bm!6528) bm!6527))

(assert (= (or b!73967 bm!6529) bm!6531))

(assert (= (and d!17215 res!39154) b!73965))

(assert (= (and d!17215 c!11074) b!73953))

(assert (= (and d!17215 (not c!11074)) b!73951))

(assert (= (and d!17215 res!39153) b!73959))

(assert (= (and b!73959 res!39149) b!73963))

(assert (= (and b!73959 (not res!39147)) b!73950))

(assert (= (and b!73950 res!39150) b!73966))

(assert (= (and b!73959 res!39148) b!73955))

(assert (= (and b!73955 c!11071) b!73947))

(assert (= (and b!73955 (not c!11071)) b!73954))

(assert (= (and b!73947 res!39152) b!73952))

(assert (= (or b!73947 b!73954) bm!6525))

(assert (= (and b!73955 res!39151) b!73960))

(assert (= (and b!73960 c!11075) b!73957))

(assert (= (and b!73960 (not c!11075)) b!73958))

(assert (= (and b!73957 res!39155) b!73961))

(assert (= (or b!73957 b!73958) bm!6530))

(declare-fun b_lambda!3331 () Bool)

(assert (=> (not b_lambda!3331) (not b!73966)))

(assert (=> b!73966 t!5077))

(declare-fun b_and!4537 () Bool)

(assert (= b_and!4533 (and (=> t!5077 result!2697) b_and!4537)))

(assert (=> b!73966 t!5079))

(declare-fun b_and!4539 () Bool)

(assert (= b_and!4535 (and (=> t!5079 result!2699) b_and!4539)))

(declare-fun m!72589 () Bool)

(assert (=> bm!6531 m!72589))

(declare-fun m!72591 () Bool)

(assert (=> b!73952 m!72591))

(declare-fun m!72593 () Bool)

(assert (=> bm!6527 m!72593))

(assert (=> b!73963 m!71397))

(assert (=> b!73963 m!71397))

(assert (=> b!73963 m!71411))

(declare-fun m!72595 () Bool)

(assert (=> b!73967 m!72595))

(declare-fun m!72597 () Bool)

(assert (=> bm!6525 m!72597))

(declare-fun m!72599 () Bool)

(assert (=> b!73953 m!72599))

(declare-fun m!72601 () Bool)

(assert (=> b!73953 m!72601))

(declare-fun m!72603 () Bool)

(assert (=> b!73953 m!72603))

(assert (=> b!73953 m!71397))

(declare-fun m!72605 () Bool)

(assert (=> b!73953 m!72605))

(declare-fun m!72607 () Bool)

(assert (=> b!73953 m!72607))

(declare-fun m!72609 () Bool)

(assert (=> b!73953 m!72609))

(assert (=> b!73953 m!72605))

(declare-fun m!72611 () Bool)

(assert (=> b!73953 m!72611))

(assert (=> b!73953 m!72593))

(declare-fun m!72613 () Bool)

(assert (=> b!73953 m!72613))

(assert (=> b!73953 m!72601))

(declare-fun m!72615 () Bool)

(assert (=> b!73953 m!72615))

(assert (=> b!73953 m!72599))

(declare-fun m!72617 () Bool)

(assert (=> b!73953 m!72617))

(declare-fun m!72619 () Bool)

(assert (=> b!73953 m!72619))

(assert (=> b!73953 m!72603))

(declare-fun m!72621 () Bool)

(assert (=> b!73953 m!72621))

(declare-fun m!72623 () Bool)

(assert (=> b!73953 m!72623))

(declare-fun m!72625 () Bool)

(assert (=> b!73953 m!72625))

(declare-fun m!72627 () Bool)

(assert (=> b!73953 m!72627))

(assert (=> b!73950 m!71397))

(assert (=> b!73950 m!71397))

(declare-fun m!72629 () Bool)

(assert (=> b!73950 m!72629))

(declare-fun m!72631 () Bool)

(assert (=> bm!6530 m!72631))

(assert (=> b!73966 m!71397))

(assert (=> b!73966 m!71397))

(declare-fun m!72633 () Bool)

(assert (=> b!73966 m!72633))

(assert (=> b!73966 m!71521))

(assert (=> b!73966 m!71523))

(assert (=> b!73966 m!71523))

(assert (=> b!73966 m!71521))

(assert (=> b!73966 m!71525))

(assert (=> b!73965 m!71397))

(assert (=> b!73965 m!71397))

(assert (=> b!73965 m!71411))

(declare-fun m!72635 () Bool)

(assert (=> b!73961 m!72635))

(assert (=> d!17215 m!71423))

(assert (=> d!16865 d!17215))

(declare-fun d!17217 () Bool)

(declare-fun e!48356 () Bool)

(assert (=> d!17217 e!48356))

(declare-fun res!39156 () Bool)

(assert (=> d!17217 (=> (not res!39156) (not e!48356))))

(declare-fun lt!33214 () ListLongMap!1439)

(assert (=> d!17217 (= res!39156 (contains!729 lt!33214 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481))))))

(declare-fun lt!33213 () List!1507)

(assert (=> d!17217 (= lt!33214 (ListLongMap!1440 lt!33213))))

(declare-fun lt!33211 () Unit!2086)

(declare-fun lt!33212 () Unit!2086)

(assert (=> d!17217 (= lt!33211 lt!33212)))

(assert (=> d!17217 (= (getValueByKey!132 lt!33213 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481))) (Some!137 (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481))))))

(assert (=> d!17217 (= lt!33212 (lemmaContainsTupThenGetReturnValue!51 lt!33213 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481))))))

(assert (=> d!17217 (= lt!33213 (insertStrictlySorted!53 (toList!735 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481))))))

(assert (=> d!17217 (= (+!98 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) lt!33214)))

(declare-fun b!73968 () Bool)

(declare-fun res!39157 () Bool)

(assert (=> b!73968 (=> (not res!39157) (not e!48356))))

(assert (=> b!73968 (= res!39157 (= (getValueByKey!132 (toList!735 lt!33214) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481))) (Some!137 (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)))))))

(declare-fun b!73969 () Bool)

(assert (=> b!73969 (= e!48356 (contains!730 (toList!735 lt!33214) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)))))

(assert (= (and d!17217 res!39156) b!73968))

(assert (= (and b!73968 res!39157) b!73969))

(declare-fun m!72637 () Bool)

(assert (=> d!17217 m!72637))

(declare-fun m!72639 () Bool)

(assert (=> d!17217 m!72639))

(declare-fun m!72641 () Bool)

(assert (=> d!17217 m!72641))

(declare-fun m!72643 () Bool)

(assert (=> d!17217 m!72643))

(declare-fun m!72645 () Bool)

(assert (=> b!73968 m!72645))

(declare-fun m!72647 () Bool)

(assert (=> b!73969 m!72647))

(assert (=> d!16865 d!17217))

(assert (=> d!16929 d!16927))

(declare-fun d!17219 () Bool)

(assert (=> d!17219 (= (getValueByKey!132 lt!32716 (_1!1083 lt!32482)) (Some!137 (_2!1083 lt!32482)))))

(assert (=> d!17219 true))

(declare-fun _$22!386 () Unit!2086)

(assert (=> d!17219 (= (choose!422 lt!32716 (_1!1083 lt!32482) (_2!1083 lt!32482)) _$22!386)))

(declare-fun bs!3176 () Bool)

(assert (= bs!3176 d!17219))

(assert (=> bs!3176 m!71325))

(assert (=> d!16929 d!17219))

(declare-fun d!17221 () Bool)

(declare-fun res!39158 () Bool)

(declare-fun e!48357 () Bool)

(assert (=> d!17221 (=> res!39158 e!48357)))

(assert (=> d!17221 (= res!39158 (or ((_ is Nil!1504) lt!32716) ((_ is Nil!1504) (t!5068 lt!32716))))))

(assert (=> d!17221 (= (isStrictlySorted!287 lt!32716) e!48357)))

(declare-fun b!73970 () Bool)

(declare-fun e!48358 () Bool)

(assert (=> b!73970 (= e!48357 e!48358)))

(declare-fun res!39159 () Bool)

(assert (=> b!73970 (=> (not res!39159) (not e!48358))))

(assert (=> b!73970 (= res!39159 (bvslt (_1!1083 (h!2090 lt!32716)) (_1!1083 (h!2090 (t!5068 lt!32716)))))))

(declare-fun b!73971 () Bool)

(assert (=> b!73971 (= e!48358 (isStrictlySorted!287 (t!5068 lt!32716)))))

(assert (= (and d!17221 (not res!39158)) b!73970))

(assert (= (and b!73970 res!39159) b!73971))

(declare-fun m!72649 () Bool)

(assert (=> b!73971 m!72649))

(assert (=> d!16929 d!17221))

(declare-fun d!17223 () Bool)

(assert (=> d!17223 (= (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73420 d!17223))

(declare-fun d!17225 () Bool)

(declare-fun e!48360 () Bool)

(assert (=> d!17225 e!48360))

(declare-fun res!39160 () Bool)

(assert (=> d!17225 (=> res!39160 e!48360)))

(declare-fun lt!33217 () Bool)

(assert (=> d!17225 (= res!39160 (not lt!33217))))

(declare-fun lt!33215 () Bool)

(assert (=> d!17225 (= lt!33217 lt!33215)))

(declare-fun lt!33216 () Unit!2086)

(declare-fun e!48359 () Unit!2086)

(assert (=> d!17225 (= lt!33216 e!48359)))

(declare-fun c!11077 () Bool)

(assert (=> d!17225 (= c!11077 lt!33215)))

(assert (=> d!17225 (= lt!33215 (containsKey!136 (toList!735 lt!32903) (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!17225 (= (contains!729 lt!32903 (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33217)))

(declare-fun b!73972 () Bool)

(declare-fun lt!33218 () Unit!2086)

(assert (=> b!73972 (= e!48359 lt!33218)))

(assert (=> b!73972 (= lt!33218 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32903) (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> b!73972 (isDefined!86 (getValueByKey!132 (toList!735 lt!32903) (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!73973 () Bool)

(declare-fun Unit!2128 () Unit!2086)

(assert (=> b!73973 (= e!48359 Unit!2128)))

(declare-fun b!73974 () Bool)

(assert (=> b!73974 (= e!48360 (isDefined!86 (getValueByKey!132 (toList!735 lt!32903) (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (= (and d!17225 c!11077) b!73972))

(assert (= (and d!17225 (not c!11077)) b!73973))

(assert (= (and d!17225 (not res!39160)) b!73974))

(declare-fun m!72651 () Bool)

(assert (=> d!17225 m!72651))

(declare-fun m!72653 () Bool)

(assert (=> b!73972 m!72653))

(assert (=> b!73972 m!71889))

(assert (=> b!73972 m!71889))

(declare-fun m!72655 () Bool)

(assert (=> b!73972 m!72655))

(assert (=> b!73974 m!71889))

(assert (=> b!73974 m!71889))

(assert (=> b!73974 m!72655))

(assert (=> d!16975 d!17225))

(declare-fun b!73978 () Bool)

(declare-fun e!48362 () Option!138)

(assert (=> b!73978 (= e!48362 None!136)))

(declare-fun b!73976 () Bool)

(declare-fun e!48361 () Option!138)

(assert (=> b!73976 (= e!48361 e!48362)))

(declare-fun c!11079 () Bool)

(assert (=> b!73976 (= c!11079 (and ((_ is Cons!1503) lt!32902) (not (= (_1!1083 (h!2090 lt!32902)) (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun b!73975 () Bool)

(assert (=> b!73975 (= e!48361 (Some!137 (_2!1083 (h!2090 lt!32902))))))

(declare-fun c!11078 () Bool)

(declare-fun d!17227 () Bool)

(assert (=> d!17227 (= c!11078 (and ((_ is Cons!1503) lt!32902) (= (_1!1083 (h!2090 lt!32902)) (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17227 (= (getValueByKey!132 lt!32902 (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) e!48361)))

(declare-fun b!73977 () Bool)

(assert (=> b!73977 (= e!48362 (getValueByKey!132 (t!5068 lt!32902) (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (= (and d!17227 c!11078) b!73975))

(assert (= (and d!17227 (not c!11078)) b!73976))

(assert (= (and b!73976 c!11079) b!73977))

(assert (= (and b!73976 (not c!11079)) b!73978))

(declare-fun m!72657 () Bool)

(assert (=> b!73977 m!72657))

(assert (=> d!16975 d!17227))

(declare-fun d!17229 () Bool)

(assert (=> d!17229 (= (getValueByKey!132 lt!32902 (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun lt!33219 () Unit!2086)

(assert (=> d!17229 (= lt!33219 (choose!422 lt!32902 (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun e!48363 () Bool)

(assert (=> d!17229 e!48363))

(declare-fun res!39161 () Bool)

(assert (=> d!17229 (=> (not res!39161) (not e!48363))))

(assert (=> d!17229 (= res!39161 (isStrictlySorted!287 lt!32902))))

(assert (=> d!17229 (= (lemmaContainsTupThenGetReturnValue!51 lt!32902 (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33219)))

(declare-fun b!73979 () Bool)

(declare-fun res!39162 () Bool)

(assert (=> b!73979 (=> (not res!39162) (not e!48363))))

(assert (=> b!73979 (= res!39162 (containsKey!136 lt!32902 (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!73980 () Bool)

(assert (=> b!73980 (= e!48363 (contains!730 lt!32902 (tuple2!2147 (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (= (and d!17229 res!39161) b!73979))

(assert (= (and b!73979 res!39162) b!73980))

(assert (=> d!17229 m!71883))

(declare-fun m!72659 () Bool)

(assert (=> d!17229 m!72659))

(declare-fun m!72661 () Bool)

(assert (=> d!17229 m!72661))

(declare-fun m!72663 () Bool)

(assert (=> b!73979 m!72663))

(declare-fun m!72665 () Bool)

(assert (=> b!73980 m!72665))

(assert (=> d!16975 d!17229))

(declare-fun b!73981 () Bool)

(declare-fun e!48364 () List!1507)

(declare-fun call!6536 () List!1507)

(assert (=> b!73981 (= e!48364 call!6536)))

(declare-fun b!73982 () Bool)

(declare-fun e!48366 () List!1507)

(declare-fun call!6535 () List!1507)

(assert (=> b!73982 (= e!48366 call!6535)))

(declare-fun c!11081 () Bool)

(declare-fun bm!6532 () Bool)

(declare-fun call!6537 () List!1507)

(declare-fun e!48367 () List!1507)

(assert (=> bm!6532 (= call!6537 ($colon$colon!65 e!48367 (ite c!11081 (h!2090 (toList!735 lt!32675)) (tuple2!2147 (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun c!11082 () Bool)

(assert (=> bm!6532 (= c!11082 c!11081)))

(declare-fun b!73984 () Bool)

(declare-fun res!39164 () Bool)

(declare-fun e!48365 () Bool)

(assert (=> b!73984 (=> (not res!39164) (not e!48365))))

(declare-fun lt!33220 () List!1507)

(assert (=> b!73984 (= res!39164 (containsKey!136 lt!33220 (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!73985 () Bool)

(declare-fun e!48368 () List!1507)

(assert (=> b!73985 (= e!48368 call!6537)))

(declare-fun c!11083 () Bool)

(declare-fun b!73986 () Bool)

(declare-fun c!11080 () Bool)

(assert (=> b!73986 (= e!48367 (ite c!11083 (t!5068 (toList!735 lt!32675)) (ite c!11080 (Cons!1503 (h!2090 (toList!735 lt!32675)) (t!5068 (toList!735 lt!32675))) Nil!1504)))))

(declare-fun b!73987 () Bool)

(assert (=> b!73987 (= e!48367 (insertStrictlySorted!53 (t!5068 (toList!735 lt!32675)) (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!73988 () Bool)

(assert (=> b!73988 (= e!48365 (contains!730 lt!33220 (tuple2!2147 (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun bm!6533 () Bool)

(assert (=> bm!6533 (= call!6536 call!6537)))

(declare-fun b!73989 () Bool)

(assert (=> b!73989 (= e!48368 e!48364)))

(assert (=> b!73989 (= c!11083 (and ((_ is Cons!1503) (toList!735 lt!32675)) (= (_1!1083 (h!2090 (toList!735 lt!32675))) (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun b!73983 () Bool)

(assert (=> b!73983 (= c!11080 (and ((_ is Cons!1503) (toList!735 lt!32675)) (bvsgt (_1!1083 (h!2090 (toList!735 lt!32675))) (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> b!73983 (= e!48364 e!48366)))

(declare-fun d!17231 () Bool)

(assert (=> d!17231 e!48365))

(declare-fun res!39163 () Bool)

(assert (=> d!17231 (=> (not res!39163) (not e!48365))))

(assert (=> d!17231 (= res!39163 (isStrictlySorted!287 lt!33220))))

(assert (=> d!17231 (= lt!33220 e!48368)))

(assert (=> d!17231 (= c!11081 (and ((_ is Cons!1503) (toList!735 lt!32675)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32675))) (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17231 (isStrictlySorted!287 (toList!735 lt!32675))))

(assert (=> d!17231 (= (insertStrictlySorted!53 (toList!735 lt!32675) (_1!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33220)))

(declare-fun b!73990 () Bool)

(assert (=> b!73990 (= e!48366 call!6535)))

(declare-fun bm!6534 () Bool)

(assert (=> bm!6534 (= call!6535 call!6536)))

(assert (= (and d!17231 c!11081) b!73985))

(assert (= (and d!17231 (not c!11081)) b!73989))

(assert (= (and b!73989 c!11083) b!73981))

(assert (= (and b!73989 (not c!11083)) b!73983))

(assert (= (and b!73983 c!11080) b!73990))

(assert (= (and b!73983 (not c!11080)) b!73982))

(assert (= (or b!73990 b!73982) bm!6534))

(assert (= (or b!73981 bm!6534) bm!6533))

(assert (= (or b!73985 bm!6533) bm!6532))

(assert (= (and bm!6532 c!11082) b!73987))

(assert (= (and bm!6532 (not c!11082)) b!73986))

(assert (= (and d!17231 res!39163) b!73984))

(assert (= (and b!73984 res!39164) b!73988))

(declare-fun m!72667 () Bool)

(assert (=> b!73984 m!72667))

(declare-fun m!72669 () Bool)

(assert (=> d!17231 m!72669))

(declare-fun m!72671 () Bool)

(assert (=> d!17231 m!72671))

(declare-fun m!72673 () Bool)

(assert (=> b!73987 m!72673))

(declare-fun m!72675 () Bool)

(assert (=> b!73988 m!72675))

(declare-fun m!72677 () Bool)

(assert (=> bm!6532 m!72677))

(assert (=> d!16975 d!17231))

(declare-fun d!17233 () Bool)

(assert (=> d!17233 (= ($colon$colon!65 e!48171 (ite c!10993 (h!2090 (toList!735 lt!32476)) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482)))) (Cons!1503 (ite c!10993 (h!2090 (toList!735 lt!32476)) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))) e!48171))))

(assert (=> bm!6498 d!17233))

(declare-fun b!73991 () Bool)

(declare-fun e!48369 () List!1507)

(declare-fun call!6539 () List!1507)

(assert (=> b!73991 (= e!48369 call!6539)))

(declare-fun b!73992 () Bool)

(declare-fun e!48371 () List!1507)

(declare-fun call!6538 () List!1507)

(assert (=> b!73992 (= e!48371 call!6538)))

(declare-fun call!6540 () List!1507)

(declare-fun bm!6535 () Bool)

(declare-fun e!48372 () List!1507)

(declare-fun c!11085 () Bool)

(assert (=> bm!6535 (= call!6540 ($colon$colon!65 e!48372 (ite c!11085 (h!2090 (t!5068 (toList!735 (+!98 lt!32476 lt!32482)))) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472)))))))

(declare-fun c!11086 () Bool)

(assert (=> bm!6535 (= c!11086 c!11085)))

(declare-fun b!73994 () Bool)

(declare-fun res!39166 () Bool)

(declare-fun e!48370 () Bool)

(assert (=> b!73994 (=> (not res!39166) (not e!48370))))

(declare-fun lt!33221 () List!1507)

(assert (=> b!73994 (= res!39166 (containsKey!136 lt!33221 (_1!1083 lt!32472)))))

(declare-fun b!73995 () Bool)

(declare-fun e!48373 () List!1507)

(assert (=> b!73995 (= e!48373 call!6540)))

(declare-fun c!11087 () Bool)

(declare-fun c!11084 () Bool)

(declare-fun b!73996 () Bool)

(assert (=> b!73996 (= e!48372 (ite c!11087 (t!5068 (t!5068 (toList!735 (+!98 lt!32476 lt!32482)))) (ite c!11084 (Cons!1503 (h!2090 (t!5068 (toList!735 (+!98 lt!32476 lt!32482)))) (t!5068 (t!5068 (toList!735 (+!98 lt!32476 lt!32482))))) Nil!1504)))))

(declare-fun b!73997 () Bool)

(assert (=> b!73997 (= e!48372 (insertStrictlySorted!53 (t!5068 (t!5068 (toList!735 (+!98 lt!32476 lt!32482)))) (_1!1083 lt!32472) (_2!1083 lt!32472)))))

(declare-fun b!73998 () Bool)

(assert (=> b!73998 (= e!48370 (contains!730 lt!33221 (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))))))

(declare-fun bm!6536 () Bool)

(assert (=> bm!6536 (= call!6539 call!6540)))

(declare-fun b!73999 () Bool)

(assert (=> b!73999 (= e!48373 e!48369)))

(assert (=> b!73999 (= c!11087 (and ((_ is Cons!1503) (t!5068 (toList!735 (+!98 lt!32476 lt!32482)))) (= (_1!1083 (h!2090 (t!5068 (toList!735 (+!98 lt!32476 lt!32482))))) (_1!1083 lt!32472))))))

(declare-fun b!73993 () Bool)

(assert (=> b!73993 (= c!11084 (and ((_ is Cons!1503) (t!5068 (toList!735 (+!98 lt!32476 lt!32482)))) (bvsgt (_1!1083 (h!2090 (t!5068 (toList!735 (+!98 lt!32476 lt!32482))))) (_1!1083 lt!32472))))))

(assert (=> b!73993 (= e!48369 e!48371)))

(declare-fun d!17235 () Bool)

(assert (=> d!17235 e!48370))

(declare-fun res!39165 () Bool)

(assert (=> d!17235 (=> (not res!39165) (not e!48370))))

(assert (=> d!17235 (= res!39165 (isStrictlySorted!287 lt!33221))))

(assert (=> d!17235 (= lt!33221 e!48373)))

(assert (=> d!17235 (= c!11085 (and ((_ is Cons!1503) (t!5068 (toList!735 (+!98 lt!32476 lt!32482)))) (bvslt (_1!1083 (h!2090 (t!5068 (toList!735 (+!98 lt!32476 lt!32482))))) (_1!1083 lt!32472))))))

(assert (=> d!17235 (isStrictlySorted!287 (t!5068 (toList!735 (+!98 lt!32476 lt!32482))))))

(assert (=> d!17235 (= (insertStrictlySorted!53 (t!5068 (toList!735 (+!98 lt!32476 lt!32482))) (_1!1083 lt!32472) (_2!1083 lt!32472)) lt!33221)))

(declare-fun b!74000 () Bool)

(assert (=> b!74000 (= e!48371 call!6538)))

(declare-fun bm!6537 () Bool)

(assert (=> bm!6537 (= call!6538 call!6539)))

(assert (= (and d!17235 c!11085) b!73995))

(assert (= (and d!17235 (not c!11085)) b!73999))

(assert (= (and b!73999 c!11087) b!73991))

(assert (= (and b!73999 (not c!11087)) b!73993))

(assert (= (and b!73993 c!11084) b!74000))

(assert (= (and b!73993 (not c!11084)) b!73992))

(assert (= (or b!74000 b!73992) bm!6537))

(assert (= (or b!73991 bm!6537) bm!6536))

(assert (= (or b!73995 bm!6536) bm!6535))

(assert (= (and bm!6535 c!11086) b!73997))

(assert (= (and bm!6535 (not c!11086)) b!73996))

(assert (= (and d!17235 res!39165) b!73994))

(assert (= (and b!73994 res!39166) b!73998))

(declare-fun m!72679 () Bool)

(assert (=> b!73994 m!72679))

(declare-fun m!72681 () Bool)

(assert (=> d!17235 m!72681))

(declare-fun m!72683 () Bool)

(assert (=> d!17235 m!72683))

(declare-fun m!72685 () Bool)

(assert (=> b!73997 m!72685))

(declare-fun m!72687 () Bool)

(assert (=> b!73998 m!72687))

(declare-fun m!72689 () Bool)

(assert (=> bm!6535 m!72689))

(assert (=> b!73593 d!17235))

(declare-fun b!74004 () Bool)

(declare-fun e!48375 () Option!138)

(assert (=> b!74004 (= e!48375 None!136)))

(declare-fun b!74002 () Bool)

(declare-fun e!48374 () Option!138)

(assert (=> b!74002 (= e!48374 e!48375)))

(declare-fun c!11089 () Bool)

(assert (=> b!74002 (= c!11089 (and ((_ is Cons!1503) (toList!735 lt!32751)) (not (= (_1!1083 (h!2090 (toList!735 lt!32751))) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun b!74001 () Bool)

(assert (=> b!74001 (= e!48374 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32751)))))))

(declare-fun d!17237 () Bool)

(declare-fun c!11088 () Bool)

(assert (=> d!17237 (= c!11088 (and ((_ is Cons!1503) (toList!735 lt!32751)) (= (_1!1083 (h!2090 (toList!735 lt!32751))) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17237 (= (getValueByKey!132 (toList!735 lt!32751) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) e!48374)))

(declare-fun b!74003 () Bool)

(assert (=> b!74003 (= e!48375 (getValueByKey!132 (t!5068 (toList!735 lt!32751)) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (= (and d!17237 c!11088) b!74001))

(assert (= (and d!17237 (not c!11088)) b!74002))

(assert (= (and b!74002 c!11089) b!74003))

(assert (= (and b!74002 (not c!11089)) b!74004))

(declare-fun m!72691 () Bool)

(assert (=> b!74003 m!72691))

(assert (=> b!73294 d!17237))

(declare-fun d!17239 () Bool)

(declare-fun res!39167 () Bool)

(declare-fun e!48376 () Bool)

(assert (=> d!17239 (=> res!39167 e!48376)))

(assert (=> d!17239 (= res!39167 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693)))) (= (_1!1083 (h!2090 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693))))) lt!32696)))))

(assert (=> d!17239 (= (containsKey!136 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693))) lt!32696) e!48376)))

(declare-fun b!74005 () Bool)

(declare-fun e!48377 () Bool)

(assert (=> b!74005 (= e!48376 e!48377)))

(declare-fun res!39168 () Bool)

(assert (=> b!74005 (=> (not res!39168) (not e!48377))))

(assert (=> b!74005 (= res!39168 (and (or (not ((_ is Cons!1503) (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693))))) (bvsle (_1!1083 (h!2090 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693))))) lt!32696)) ((_ is Cons!1503) (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693)))) (bvslt (_1!1083 (h!2090 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693))))) lt!32696)))))

(declare-fun b!74006 () Bool)

(assert (=> b!74006 (= e!48377 (containsKey!136 (t!5068 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693)))) lt!32696))))

(assert (= (and d!17239 (not res!39167)) b!74005))

(assert (= (and b!74005 res!39168) b!74006))

(declare-fun m!72693 () Bool)

(assert (=> b!74006 m!72693))

(assert (=> d!16991 d!17239))

(declare-fun b!74010 () Bool)

(declare-fun e!48379 () Option!138)

(assert (=> b!74010 (= e!48379 None!136)))

(declare-fun b!74008 () Bool)

(declare-fun e!48378 () Option!138)

(assert (=> b!74008 (= e!48378 e!48379)))

(declare-fun c!11091 () Bool)

(assert (=> b!74008 (= c!11091 (and ((_ is Cons!1503) (toList!735 lt!32738)) (not (= (_1!1083 (h!2090 (toList!735 lt!32738))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))))

(declare-fun b!74007 () Bool)

(assert (=> b!74007 (= e!48378 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32738)))))))

(declare-fun c!11090 () Bool)

(declare-fun d!17241 () Bool)

(assert (=> d!17241 (= c!11090 (and ((_ is Cons!1503) (toList!735 lt!32738)) (= (_1!1083 (h!2090 (toList!735 lt!32738))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (=> d!17241 (= (getValueByKey!132 (toList!735 lt!32738) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) e!48378)))

(declare-fun b!74009 () Bool)

(assert (=> b!74009 (= e!48379 (getValueByKey!132 (t!5068 (toList!735 lt!32738)) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (= (and d!17241 c!11090) b!74007))

(assert (= (and d!17241 (not c!11090)) b!74008))

(assert (= (and b!74008 c!11091) b!74009))

(assert (= (and b!74008 (not c!11091)) b!74010))

(declare-fun m!72695 () Bool)

(assert (=> b!74009 m!72695))

(assert (=> b!73251 d!17241))

(declare-fun d!17243 () Bool)

(assert (=> d!17243 (= (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73303 d!17243))

(declare-fun d!17245 () Bool)

(declare-fun e!48381 () Bool)

(assert (=> d!17245 e!48381))

(declare-fun res!39169 () Bool)

(assert (=> d!17245 (=> res!39169 e!48381)))

(declare-fun lt!33224 () Bool)

(assert (=> d!17245 (= res!39169 (not lt!33224))))

(declare-fun lt!33222 () Bool)

(assert (=> d!17245 (= lt!33224 lt!33222)))

(declare-fun lt!33223 () Unit!2086)

(declare-fun e!48380 () Unit!2086)

(assert (=> d!17245 (= lt!33223 e!48380)))

(declare-fun c!11092 () Bool)

(assert (=> d!17245 (= c!11092 lt!33222)))

(assert (=> d!17245 (= lt!33222 (containsKey!136 (toList!735 lt!32792) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!17245 (= (contains!729 lt!32792 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) lt!33224)))

(declare-fun b!74011 () Bool)

(declare-fun lt!33225 () Unit!2086)

(assert (=> b!74011 (= e!48380 lt!33225)))

(assert (=> b!74011 (= lt!33225 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32792) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> b!74011 (isDefined!86 (getValueByKey!132 (toList!735 lt!32792) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun b!74012 () Bool)

(declare-fun Unit!2129 () Unit!2086)

(assert (=> b!74012 (= e!48380 Unit!2129)))

(declare-fun b!74013 () Bool)

(assert (=> b!74013 (= e!48381 (isDefined!86 (getValueByKey!132 (toList!735 lt!32792) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (= (and d!17245 c!11092) b!74011))

(assert (= (and d!17245 (not c!11092)) b!74012))

(assert (= (and d!17245 (not res!39169)) b!74013))

(declare-fun m!72697 () Bool)

(assert (=> d!17245 m!72697))

(declare-fun m!72699 () Bool)

(assert (=> b!74011 m!72699))

(assert (=> b!74011 m!71549))

(assert (=> b!74011 m!71549))

(declare-fun m!72701 () Bool)

(assert (=> b!74011 m!72701))

(assert (=> b!74013 m!71549))

(assert (=> b!74013 m!71549))

(assert (=> b!74013 m!72701))

(assert (=> d!16879 d!17245))

(declare-fun b!74017 () Bool)

(declare-fun e!48383 () Option!138)

(assert (=> b!74017 (= e!48383 None!136)))

(declare-fun b!74015 () Bool)

(declare-fun e!48382 () Option!138)

(assert (=> b!74015 (= e!48382 e!48383)))

(declare-fun c!11094 () Bool)

(assert (=> b!74015 (= c!11094 (and ((_ is Cons!1503) lt!32791) (not (= (_1!1083 (h!2090 lt!32791)) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))))

(declare-fun b!74014 () Bool)

(assert (=> b!74014 (= e!48382 (Some!137 (_2!1083 (h!2090 lt!32791))))))

(declare-fun d!17247 () Bool)

(declare-fun c!11093 () Bool)

(assert (=> d!17247 (= c!11093 (and ((_ is Cons!1503) lt!32791) (= (_1!1083 (h!2090 lt!32791)) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (=> d!17247 (= (getValueByKey!132 lt!32791 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) e!48382)))

(declare-fun b!74016 () Bool)

(assert (=> b!74016 (= e!48383 (getValueByKey!132 (t!5068 lt!32791) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (= (and d!17247 c!11093) b!74014))

(assert (= (and d!17247 (not c!11093)) b!74015))

(assert (= (and b!74015 c!11094) b!74016))

(assert (= (and b!74015 (not c!11094)) b!74017))

(declare-fun m!72703 () Bool)

(assert (=> b!74016 m!72703))

(assert (=> d!16879 d!17247))

(declare-fun d!17249 () Bool)

(assert (=> d!17249 (= (getValueByKey!132 lt!32791 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (Some!137 (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun lt!33226 () Unit!2086)

(assert (=> d!17249 (= lt!33226 (choose!422 lt!32791 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun e!48384 () Bool)

(assert (=> d!17249 e!48384))

(declare-fun res!39170 () Bool)

(assert (=> d!17249 (=> (not res!39170) (not e!48384))))

(assert (=> d!17249 (= res!39170 (isStrictlySorted!287 lt!32791))))

(assert (=> d!17249 (= (lemmaContainsTupThenGetReturnValue!51 lt!32791 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) lt!33226)))

(declare-fun b!74018 () Bool)

(declare-fun res!39171 () Bool)

(assert (=> b!74018 (=> (not res!39171) (not e!48384))))

(assert (=> b!74018 (= res!39171 (containsKey!136 lt!32791 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun b!74019 () Bool)

(assert (=> b!74019 (= e!48384 (contains!730 lt!32791 (tuple2!2147 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (= (and d!17249 res!39170) b!74018))

(assert (= (and b!74018 res!39171) b!74019))

(assert (=> d!17249 m!71543))

(declare-fun m!72705 () Bool)

(assert (=> d!17249 m!72705))

(declare-fun m!72707 () Bool)

(assert (=> d!17249 m!72707))

(declare-fun m!72709 () Bool)

(assert (=> b!74018 m!72709))

(declare-fun m!72711 () Bool)

(assert (=> b!74019 m!72711))

(assert (=> d!16879 d!17249))

(declare-fun b!74020 () Bool)

(declare-fun e!48385 () List!1507)

(declare-fun call!6542 () List!1507)

(assert (=> b!74020 (= e!48385 call!6542)))

(declare-fun b!74021 () Bool)

(declare-fun e!48387 () List!1507)

(declare-fun call!6541 () List!1507)

(assert (=> b!74021 (= e!48387 call!6541)))

(declare-fun c!11096 () Bool)

(declare-fun bm!6538 () Bool)

(declare-fun e!48388 () List!1507)

(declare-fun call!6543 () List!1507)

(assert (=> bm!6538 (= call!6543 ($colon$colon!65 e!48388 (ite c!11096 (h!2090 (toList!735 lt!32476)) (tuple2!2147 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))))

(declare-fun c!11097 () Bool)

(assert (=> bm!6538 (= c!11097 c!11096)))

(declare-fun b!74023 () Bool)

(declare-fun res!39173 () Bool)

(declare-fun e!48386 () Bool)

(assert (=> b!74023 (=> (not res!39173) (not e!48386))))

(declare-fun lt!33227 () List!1507)

(assert (=> b!74023 (= res!39173 (containsKey!136 lt!33227 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun b!74024 () Bool)

(declare-fun e!48389 () List!1507)

(assert (=> b!74024 (= e!48389 call!6543)))

(declare-fun c!11098 () Bool)

(declare-fun c!11095 () Bool)

(declare-fun b!74025 () Bool)

(assert (=> b!74025 (= e!48388 (ite c!11098 (t!5068 (toList!735 lt!32476)) (ite c!11095 (Cons!1503 (h!2090 (toList!735 lt!32476)) (t!5068 (toList!735 lt!32476))) Nil!1504)))))

(declare-fun b!74026 () Bool)

(assert (=> b!74026 (= e!48388 (insertStrictlySorted!53 (t!5068 (toList!735 lt!32476)) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun b!74027 () Bool)

(assert (=> b!74027 (= e!48386 (contains!730 lt!33227 (tuple2!2147 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(declare-fun bm!6539 () Bool)

(assert (=> bm!6539 (= call!6542 call!6543)))

(declare-fun b!74028 () Bool)

(assert (=> b!74028 (= e!48389 e!48385)))

(assert (=> b!74028 (= c!11098 (and ((_ is Cons!1503) (toList!735 lt!32476)) (= (_1!1083 (h!2090 (toList!735 lt!32476))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(declare-fun b!74022 () Bool)

(assert (=> b!74022 (= c!11095 (and ((_ is Cons!1503) (toList!735 lt!32476)) (bvsgt (_1!1083 (h!2090 (toList!735 lt!32476))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (=> b!74022 (= e!48385 e!48387)))

(declare-fun d!17251 () Bool)

(assert (=> d!17251 e!48386))

(declare-fun res!39172 () Bool)

(assert (=> d!17251 (=> (not res!39172) (not e!48386))))

(assert (=> d!17251 (= res!39172 (isStrictlySorted!287 lt!33227))))

(assert (=> d!17251 (= lt!33227 e!48389)))

(assert (=> d!17251 (= c!11096 (and ((_ is Cons!1503) (toList!735 lt!32476)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32476))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (=> d!17251 (isStrictlySorted!287 (toList!735 lt!32476))))

(assert (=> d!17251 (= (insertStrictlySorted!53 (toList!735 lt!32476) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) lt!33227)))

(declare-fun b!74029 () Bool)

(assert (=> b!74029 (= e!48387 call!6541)))

(declare-fun bm!6540 () Bool)

(assert (=> bm!6540 (= call!6541 call!6542)))

(assert (= (and d!17251 c!11096) b!74024))

(assert (= (and d!17251 (not c!11096)) b!74028))

(assert (= (and b!74028 c!11098) b!74020))

(assert (= (and b!74028 (not c!11098)) b!74022))

(assert (= (and b!74022 c!11095) b!74029))

(assert (= (and b!74022 (not c!11095)) b!74021))

(assert (= (or b!74029 b!74021) bm!6540))

(assert (= (or b!74020 bm!6540) bm!6539))

(assert (= (or b!74024 bm!6539) bm!6538))

(assert (= (and bm!6538 c!11097) b!74026))

(assert (= (and bm!6538 (not c!11097)) b!74025))

(assert (= (and d!17251 res!39172) b!74023))

(assert (= (and b!74023 res!39173) b!74027))

(declare-fun m!72713 () Bool)

(assert (=> b!74023 m!72713))

(declare-fun m!72715 () Bool)

(assert (=> d!17251 m!72715))

(assert (=> d!17251 m!71793))

(declare-fun m!72717 () Bool)

(assert (=> b!74026 m!72717))

(declare-fun m!72719 () Bool)

(assert (=> b!74027 m!72719))

(declare-fun m!72721 () Bool)

(assert (=> bm!6538 m!72721))

(assert (=> d!16879 d!17251))

(declare-fun d!17253 () Bool)

(assert (=> d!17253 (isDefined!86 (getValueByKey!132 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693))) lt!32696))))

(declare-fun lt!33228 () Unit!2086)

(assert (=> d!17253 (= lt!33228 (choose!421 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693))) lt!32696))))

(declare-fun e!48390 () Bool)

(assert (=> d!17253 e!48390))

(declare-fun res!39174 () Bool)

(assert (=> d!17253 (=> (not res!39174) (not e!48390))))

(assert (=> d!17253 (= res!39174 (isStrictlySorted!287 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693)))))))

(assert (=> d!17253 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693))) lt!32696) lt!33228)))

(declare-fun b!74030 () Bool)

(assert (=> b!74030 (= e!48390 (containsKey!136 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693))) lt!32696))))

(assert (= (and d!17253 res!39174) b!74030))

(assert (=> d!17253 m!71999))

(assert (=> d!17253 m!71999))

(assert (=> d!17253 m!72001))

(declare-fun m!72723 () Bool)

(assert (=> d!17253 m!72723))

(declare-fun m!72725 () Bool)

(assert (=> d!17253 m!72725))

(assert (=> b!74030 m!71995))

(assert (=> b!73599 d!17253))

(declare-fun d!17255 () Bool)

(assert (=> d!17255 (= (isDefined!86 (getValueByKey!132 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693))) lt!32696)) (not (isEmpty!322 (getValueByKey!132 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693))) lt!32696))))))

(declare-fun bs!3177 () Bool)

(assert (= bs!3177 d!17255))

(assert (=> bs!3177 m!71999))

(declare-fun m!72727 () Bool)

(assert (=> bs!3177 m!72727))

(assert (=> b!73599 d!17255))

(declare-fun b!74034 () Bool)

(declare-fun e!48392 () Option!138)

(assert (=> b!74034 (= e!48392 None!136)))

(declare-fun b!74032 () Bool)

(declare-fun e!48391 () Option!138)

(assert (=> b!74032 (= e!48391 e!48392)))

(declare-fun c!11100 () Bool)

(assert (=> b!74032 (= c!11100 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693)))) (not (= (_1!1083 (h!2090 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693))))) lt!32696))))))

(declare-fun b!74031 () Bool)

(assert (=> b!74031 (= e!48391 (Some!137 (_2!1083 (h!2090 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693)))))))))

(declare-fun d!17257 () Bool)

(declare-fun c!11099 () Bool)

(assert (=> d!17257 (= c!11099 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693)))) (= (_1!1083 (h!2090 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693))))) lt!32696)))))

(assert (=> d!17257 (= (getValueByKey!132 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693))) lt!32696) e!48391)))

(declare-fun b!74033 () Bool)

(assert (=> b!74033 (= e!48392 (getValueByKey!132 (t!5068 (toList!735 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693)))) lt!32696))))

(assert (= (and d!17257 c!11099) b!74031))

(assert (= (and d!17257 (not c!11099)) b!74032))

(assert (= (and b!74032 c!11100) b!74033))

(assert (= (and b!74032 (not c!11100)) b!74034))

(declare-fun m!72729 () Bool)

(assert (=> b!74033 m!72729))

(assert (=> b!73599 d!17257))

(declare-fun d!17259 () Bool)

(declare-fun lt!33229 () Bool)

(assert (=> d!17259 (= lt!33229 (select (content!76 lt!32720) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))))))

(declare-fun e!48393 () Bool)

(assert (=> d!17259 (= lt!33229 e!48393)))

(declare-fun res!39176 () Bool)

(assert (=> d!17259 (=> (not res!39176) (not e!48393))))

(assert (=> d!17259 (= res!39176 ((_ is Cons!1503) lt!32720))))

(assert (=> d!17259 (= (contains!730 lt!32720 (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))) lt!33229)))

(declare-fun b!74035 () Bool)

(declare-fun e!48394 () Bool)

(assert (=> b!74035 (= e!48393 e!48394)))

(declare-fun res!39175 () Bool)

(assert (=> b!74035 (=> res!39175 e!48394)))

(assert (=> b!74035 (= res!39175 (= (h!2090 lt!32720) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))))))

(declare-fun b!74036 () Bool)

(assert (=> b!74036 (= e!48394 (contains!730 (t!5068 lt!32720) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))))))

(assert (= (and d!17259 res!39176) b!74035))

(assert (= (and b!74035 (not res!39175)) b!74036))

(declare-fun m!72731 () Bool)

(assert (=> d!17259 m!72731))

(declare-fun m!72733 () Bool)

(assert (=> d!17259 m!72733))

(declare-fun m!72735 () Bool)

(assert (=> b!74036 m!72735))

(assert (=> b!73586 d!17259))

(declare-fun d!17261 () Bool)

(assert (=> d!17261 (= (apply!75 lt!32849 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1158 (getValueByKey!132 (toList!735 lt!32849) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3178 () Bool)

(assert (= bs!3178 d!17261))

(assert (=> bs!3178 m!71697))

(assert (=> bs!3178 m!72451))

(assert (=> bs!3178 m!72451))

(declare-fun m!72737 () Bool)

(assert (=> bs!3178 m!72737))

(assert (=> b!73413 d!17261))

(declare-fun d!17263 () Bool)

(declare-fun c!11101 () Bool)

(assert (=> d!17263 (= c!11101 ((_ is ValueCellFull!894) (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!48395 () V!2947)

(assert (=> d!17263 (= (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!48395)))

(declare-fun b!74037 () Bool)

(assert (=> b!74037 (= e!48395 (get!1156 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74038 () Bool)

(assert (=> b!74038 (= e!48395 (get!1157 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17263 c!11101) b!74037))

(assert (= (and d!17263 (not c!11101)) b!74038))

(assert (=> b!74037 m!71707))

(assert (=> b!74037 m!71083))

(declare-fun m!72739 () Bool)

(assert (=> b!74037 m!72739))

(assert (=> b!74038 m!71707))

(assert (=> b!74038 m!71083))

(declare-fun m!72741 () Bool)

(assert (=> b!74038 m!72741))

(assert (=> b!73413 d!17263))

(assert (=> b!73721 d!17105))

(assert (=> b!73721 d!17107))

(declare-fun d!17265 () Bool)

(declare-fun lt!33230 () Bool)

(assert (=> d!17265 (= lt!33230 (select (content!76 lt!32863) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))))))

(declare-fun e!48396 () Bool)

(assert (=> d!17265 (= lt!33230 e!48396)))

(declare-fun res!39178 () Bool)

(assert (=> d!17265 (=> (not res!39178) (not e!48396))))

(assert (=> d!17265 (= res!39178 ((_ is Cons!1503) lt!32863))))

(assert (=> d!17265 (= (contains!730 lt!32863 (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))) lt!33230)))

(declare-fun b!74039 () Bool)

(declare-fun e!48397 () Bool)

(assert (=> b!74039 (= e!48396 e!48397)))

(declare-fun res!39177 () Bool)

(assert (=> b!74039 (=> res!39177 e!48397)))

(assert (=> b!74039 (= res!39177 (= (h!2090 lt!32863) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))))))

(declare-fun b!74040 () Bool)

(assert (=> b!74040 (= e!48397 (contains!730 (t!5068 lt!32863) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))))))

(assert (= (and d!17265 res!39178) b!74039))

(assert (= (and b!74039 (not res!39177)) b!74040))

(declare-fun m!72743 () Bool)

(assert (=> d!17265 m!72743))

(declare-fun m!72745 () Bool)

(assert (=> d!17265 m!72745))

(declare-fun m!72747 () Bool)

(assert (=> b!74040 m!72747))

(assert (=> b!73464 d!17265))

(declare-fun d!17267 () Bool)

(declare-fun e!48399 () Bool)

(assert (=> d!17267 e!48399))

(declare-fun res!39179 () Bool)

(assert (=> d!17267 (=> res!39179 e!48399)))

(declare-fun lt!33233 () Bool)

(assert (=> d!17267 (= res!39179 (not lt!33233))))

(declare-fun lt!33231 () Bool)

(assert (=> d!17267 (= lt!33233 lt!33231)))

(declare-fun lt!33232 () Unit!2086)

(declare-fun e!48398 () Unit!2086)

(assert (=> d!17267 (= lt!33232 e!48398)))

(declare-fun c!11102 () Bool)

(assert (=> d!17267 (= c!11102 lt!33231)))

(assert (=> d!17267 (= lt!33231 (containsKey!136 (toList!735 lt!32887) (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!17267 (= (contains!729 lt!32887 (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33233)))

(declare-fun b!74041 () Bool)

(declare-fun lt!33234 () Unit!2086)

(assert (=> b!74041 (= e!48398 lt!33234)))

(assert (=> b!74041 (= lt!33234 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32887) (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> b!74041 (isDefined!86 (getValueByKey!132 (toList!735 lt!32887) (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74042 () Bool)

(declare-fun Unit!2130 () Unit!2086)

(assert (=> b!74042 (= e!48398 Unit!2130)))

(declare-fun b!74043 () Bool)

(assert (=> b!74043 (= e!48399 (isDefined!86 (getValueByKey!132 (toList!735 lt!32887) (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (= (and d!17267 c!11102) b!74041))

(assert (= (and d!17267 (not c!11102)) b!74042))

(assert (= (and d!17267 (not res!39179)) b!74043))

(declare-fun m!72749 () Bool)

(assert (=> d!17267 m!72749))

(declare-fun m!72751 () Bool)

(assert (=> b!74041 m!72751))

(assert (=> b!74041 m!71825))

(assert (=> b!74041 m!71825))

(declare-fun m!72753 () Bool)

(assert (=> b!74041 m!72753))

(assert (=> b!74043 m!71825))

(assert (=> b!74043 m!71825))

(assert (=> b!74043 m!72753))

(assert (=> d!16957 d!17267))

(declare-fun b!74047 () Bool)

(declare-fun e!48401 () Option!138)

(assert (=> b!74047 (= e!48401 None!136)))

(declare-fun b!74045 () Bool)

(declare-fun e!48400 () Option!138)

(assert (=> b!74045 (= e!48400 e!48401)))

(declare-fun c!11104 () Bool)

(assert (=> b!74045 (= c!11104 (and ((_ is Cons!1503) lt!32886) (not (= (_1!1083 (h!2090 lt!32886)) (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun b!74044 () Bool)

(assert (=> b!74044 (= e!48400 (Some!137 (_2!1083 (h!2090 lt!32886))))))

(declare-fun d!17269 () Bool)

(declare-fun c!11103 () Bool)

(assert (=> d!17269 (= c!11103 (and ((_ is Cons!1503) lt!32886) (= (_1!1083 (h!2090 lt!32886)) (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17269 (= (getValueByKey!132 lt!32886 (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) e!48400)))

(declare-fun b!74046 () Bool)

(assert (=> b!74046 (= e!48401 (getValueByKey!132 (t!5068 lt!32886) (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (= (and d!17269 c!11103) b!74044))

(assert (= (and d!17269 (not c!11103)) b!74045))

(assert (= (and b!74045 c!11104) b!74046))

(assert (= (and b!74045 (not c!11104)) b!74047))

(declare-fun m!72755 () Bool)

(assert (=> b!74046 m!72755))

(assert (=> d!16957 d!17269))

(declare-fun d!17271 () Bool)

(assert (=> d!17271 (= (getValueByKey!132 lt!32886 (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun lt!33235 () Unit!2086)

(assert (=> d!17271 (= lt!33235 (choose!422 lt!32886 (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun e!48402 () Bool)

(assert (=> d!17271 e!48402))

(declare-fun res!39180 () Bool)

(assert (=> d!17271 (=> (not res!39180) (not e!48402))))

(assert (=> d!17271 (= res!39180 (isStrictlySorted!287 lt!32886))))

(assert (=> d!17271 (= (lemmaContainsTupThenGetReturnValue!51 lt!32886 (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33235)))

(declare-fun b!74048 () Bool)

(declare-fun res!39181 () Bool)

(assert (=> b!74048 (=> (not res!39181) (not e!48402))))

(assert (=> b!74048 (= res!39181 (containsKey!136 lt!32886 (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74049 () Bool)

(assert (=> b!74049 (= e!48402 (contains!730 lt!32886 (tuple2!2147 (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (= (and d!17271 res!39180) b!74048))

(assert (= (and b!74048 res!39181) b!74049))

(assert (=> d!17271 m!71819))

(declare-fun m!72757 () Bool)

(assert (=> d!17271 m!72757))

(declare-fun m!72759 () Bool)

(assert (=> d!17271 m!72759))

(declare-fun m!72761 () Bool)

(assert (=> b!74048 m!72761))

(declare-fun m!72763 () Bool)

(assert (=> b!74049 m!72763))

(assert (=> d!16957 d!17271))

(declare-fun b!74050 () Bool)

(declare-fun e!48403 () List!1507)

(declare-fun call!6545 () List!1507)

(assert (=> b!74050 (= e!48403 call!6545)))

(declare-fun b!74051 () Bool)

(declare-fun e!48405 () List!1507)

(declare-fun call!6544 () List!1507)

(assert (=> b!74051 (= e!48405 call!6544)))

(declare-fun bm!6541 () Bool)

(declare-fun e!48406 () List!1507)

(declare-fun c!11106 () Bool)

(declare-fun call!6546 () List!1507)

(assert (=> bm!6541 (= call!6546 ($colon$colon!65 e!48406 (ite c!11106 (h!2090 (toList!735 lt!32677)) (tuple2!2147 (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun c!11107 () Bool)

(assert (=> bm!6541 (= c!11107 c!11106)))

(declare-fun b!74053 () Bool)

(declare-fun res!39183 () Bool)

(declare-fun e!48404 () Bool)

(assert (=> b!74053 (=> (not res!39183) (not e!48404))))

(declare-fun lt!33236 () List!1507)

(assert (=> b!74053 (= res!39183 (containsKey!136 lt!33236 (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74054 () Bool)

(declare-fun e!48407 () List!1507)

(assert (=> b!74054 (= e!48407 call!6546)))

(declare-fun b!74055 () Bool)

(declare-fun c!11108 () Bool)

(declare-fun c!11105 () Bool)

(assert (=> b!74055 (= e!48406 (ite c!11108 (t!5068 (toList!735 lt!32677)) (ite c!11105 (Cons!1503 (h!2090 (toList!735 lt!32677)) (t!5068 (toList!735 lt!32677))) Nil!1504)))))

(declare-fun b!74056 () Bool)

(assert (=> b!74056 (= e!48406 (insertStrictlySorted!53 (t!5068 (toList!735 lt!32677)) (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74057 () Bool)

(assert (=> b!74057 (= e!48404 (contains!730 lt!33236 (tuple2!2147 (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun bm!6542 () Bool)

(assert (=> bm!6542 (= call!6545 call!6546)))

(declare-fun b!74058 () Bool)

(assert (=> b!74058 (= e!48407 e!48403)))

(assert (=> b!74058 (= c!11108 (and ((_ is Cons!1503) (toList!735 lt!32677)) (= (_1!1083 (h!2090 (toList!735 lt!32677))) (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun b!74052 () Bool)

(assert (=> b!74052 (= c!11105 (and ((_ is Cons!1503) (toList!735 lt!32677)) (bvsgt (_1!1083 (h!2090 (toList!735 lt!32677))) (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> b!74052 (= e!48403 e!48405)))

(declare-fun d!17273 () Bool)

(assert (=> d!17273 e!48404))

(declare-fun res!39182 () Bool)

(assert (=> d!17273 (=> (not res!39182) (not e!48404))))

(assert (=> d!17273 (= res!39182 (isStrictlySorted!287 lt!33236))))

(assert (=> d!17273 (= lt!33236 e!48407)))

(assert (=> d!17273 (= c!11106 (and ((_ is Cons!1503) (toList!735 lt!32677)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32677))) (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17273 (isStrictlySorted!287 (toList!735 lt!32677))))

(assert (=> d!17273 (= (insertStrictlySorted!53 (toList!735 lt!32677) (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33236)))

(declare-fun b!74059 () Bool)

(assert (=> b!74059 (= e!48405 call!6544)))

(declare-fun bm!6543 () Bool)

(assert (=> bm!6543 (= call!6544 call!6545)))

(assert (= (and d!17273 c!11106) b!74054))

(assert (= (and d!17273 (not c!11106)) b!74058))

(assert (= (and b!74058 c!11108) b!74050))

(assert (= (and b!74058 (not c!11108)) b!74052))

(assert (= (and b!74052 c!11105) b!74059))

(assert (= (and b!74052 (not c!11105)) b!74051))

(assert (= (or b!74059 b!74051) bm!6543))

(assert (= (or b!74050 bm!6543) bm!6542))

(assert (= (or b!74054 bm!6542) bm!6541))

(assert (= (and bm!6541 c!11107) b!74056))

(assert (= (and bm!6541 (not c!11107)) b!74055))

(assert (= (and d!17273 res!39182) b!74053))

(assert (= (and b!74053 res!39183) b!74057))

(declare-fun m!72765 () Bool)

(assert (=> b!74053 m!72765))

(declare-fun m!72767 () Bool)

(assert (=> d!17273 m!72767))

(declare-fun m!72769 () Bool)

(assert (=> d!17273 m!72769))

(declare-fun m!72771 () Bool)

(assert (=> b!74056 m!72771))

(declare-fun m!72773 () Bool)

(assert (=> b!74057 m!72773))

(declare-fun m!72775 () Bool)

(assert (=> bm!6541 m!72775))

(assert (=> d!16957 d!17273))

(declare-fun d!17275 () Bool)

(declare-fun e!48409 () Bool)

(assert (=> d!17275 e!48409))

(declare-fun res!39184 () Bool)

(assert (=> d!17275 (=> res!39184 e!48409)))

(declare-fun lt!33239 () Bool)

(assert (=> d!17275 (= res!39184 (not lt!33239))))

(declare-fun lt!33237 () Bool)

(assert (=> d!17275 (= lt!33239 lt!33237)))

(declare-fun lt!33238 () Unit!2086)

(declare-fun e!48408 () Unit!2086)

(assert (=> d!17275 (= lt!33238 e!48408)))

(declare-fun c!11109 () Bool)

(assert (=> d!17275 (= c!11109 lt!33237)))

(assert (=> d!17275 (= lt!33237 (containsKey!136 (toList!735 lt!32751) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!17275 (= (contains!729 lt!32751 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33239)))

(declare-fun b!74060 () Bool)

(declare-fun lt!33240 () Unit!2086)

(assert (=> b!74060 (= e!48408 lt!33240)))

(assert (=> b!74060 (= lt!33240 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32751) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> b!74060 (isDefined!86 (getValueByKey!132 (toList!735 lt!32751) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74061 () Bool)

(declare-fun Unit!2131 () Unit!2086)

(assert (=> b!74061 (= e!48408 Unit!2131)))

(declare-fun b!74062 () Bool)

(assert (=> b!74062 (= e!48409 (isDefined!86 (getValueByKey!132 (toList!735 lt!32751) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (= (and d!17275 c!11109) b!74060))

(assert (= (and d!17275 (not c!11109)) b!74061))

(assert (= (and d!17275 (not res!39184)) b!74062))

(declare-fun m!72777 () Bool)

(assert (=> d!17275 m!72777))

(declare-fun m!72779 () Bool)

(assert (=> b!74060 m!72779))

(assert (=> b!74060 m!71433))

(assert (=> b!74060 m!71433))

(declare-fun m!72781 () Bool)

(assert (=> b!74060 m!72781))

(assert (=> b!74062 m!71433))

(assert (=> b!74062 m!71433))

(assert (=> b!74062 m!72781))

(assert (=> d!16857 d!17275))

(declare-fun b!74066 () Bool)

(declare-fun e!48411 () Option!138)

(assert (=> b!74066 (= e!48411 None!136)))

(declare-fun b!74064 () Bool)

(declare-fun e!48410 () Option!138)

(assert (=> b!74064 (= e!48410 e!48411)))

(declare-fun c!11111 () Bool)

(assert (=> b!74064 (= c!11111 (and ((_ is Cons!1503) lt!32750) (not (= (_1!1083 (h!2090 lt!32750)) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun b!74063 () Bool)

(assert (=> b!74063 (= e!48410 (Some!137 (_2!1083 (h!2090 lt!32750))))))

(declare-fun d!17277 () Bool)

(declare-fun c!11110 () Bool)

(assert (=> d!17277 (= c!11110 (and ((_ is Cons!1503) lt!32750) (= (_1!1083 (h!2090 lt!32750)) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17277 (= (getValueByKey!132 lt!32750 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) e!48410)))

(declare-fun b!74065 () Bool)

(assert (=> b!74065 (= e!48411 (getValueByKey!132 (t!5068 lt!32750) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (= (and d!17277 c!11110) b!74063))

(assert (= (and d!17277 (not c!11110)) b!74064))

(assert (= (and b!74064 c!11111) b!74065))

(assert (= (and b!74064 (not c!11111)) b!74066))

(declare-fun m!72783 () Bool)

(assert (=> b!74065 m!72783))

(assert (=> d!16857 d!17277))

(declare-fun d!17279 () Bool)

(assert (=> d!17279 (= (getValueByKey!132 lt!32750 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun lt!33241 () Unit!2086)

(assert (=> d!17279 (= lt!33241 (choose!422 lt!32750 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun e!48412 () Bool)

(assert (=> d!17279 e!48412))

(declare-fun res!39185 () Bool)

(assert (=> d!17279 (=> (not res!39185) (not e!48412))))

(assert (=> d!17279 (= res!39185 (isStrictlySorted!287 lt!32750))))

(assert (=> d!17279 (= (lemmaContainsTupThenGetReturnValue!51 lt!32750 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33241)))

(declare-fun b!74067 () Bool)

(declare-fun res!39186 () Bool)

(assert (=> b!74067 (=> (not res!39186) (not e!48412))))

(assert (=> b!74067 (= res!39186 (containsKey!136 lt!32750 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74068 () Bool)

(assert (=> b!74068 (= e!48412 (contains!730 lt!32750 (tuple2!2147 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (= (and d!17279 res!39185) b!74067))

(assert (= (and b!74067 res!39186) b!74068))

(assert (=> d!17279 m!71427))

(declare-fun m!72785 () Bool)

(assert (=> d!17279 m!72785))

(declare-fun m!72787 () Bool)

(assert (=> d!17279 m!72787))

(declare-fun m!72789 () Bool)

(assert (=> b!74067 m!72789))

(declare-fun m!72791 () Bool)

(assert (=> b!74068 m!72791))

(assert (=> d!16857 d!17279))

(declare-fun b!74069 () Bool)

(declare-fun e!48413 () List!1507)

(declare-fun call!6548 () List!1507)

(assert (=> b!74069 (= e!48413 call!6548)))

(declare-fun b!74070 () Bool)

(declare-fun e!48415 () List!1507)

(declare-fun call!6547 () List!1507)

(assert (=> b!74070 (= e!48415 call!6547)))

(declare-fun bm!6544 () Bool)

(declare-fun call!6549 () List!1507)

(declare-fun c!11113 () Bool)

(declare-fun e!48416 () List!1507)

(assert (=> bm!6544 (= call!6549 ($colon$colon!65 e!48416 (ite c!11113 (h!2090 (toList!735 call!6436)) (tuple2!2147 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun c!11114 () Bool)

(assert (=> bm!6544 (= c!11114 c!11113)))

(declare-fun b!74072 () Bool)

(declare-fun res!39188 () Bool)

(declare-fun e!48414 () Bool)

(assert (=> b!74072 (=> (not res!39188) (not e!48414))))

(declare-fun lt!33242 () List!1507)

(assert (=> b!74072 (= res!39188 (containsKey!136 lt!33242 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74073 () Bool)

(declare-fun e!48417 () List!1507)

(assert (=> b!74073 (= e!48417 call!6549)))

(declare-fun c!11115 () Bool)

(declare-fun b!74074 () Bool)

(declare-fun c!11112 () Bool)

(assert (=> b!74074 (= e!48416 (ite c!11115 (t!5068 (toList!735 call!6436)) (ite c!11112 (Cons!1503 (h!2090 (toList!735 call!6436)) (t!5068 (toList!735 call!6436))) Nil!1504)))))

(declare-fun b!74075 () Bool)

(assert (=> b!74075 (= e!48416 (insertStrictlySorted!53 (t!5068 (toList!735 call!6436)) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74076 () Bool)

(assert (=> b!74076 (= e!48414 (contains!730 lt!33242 (tuple2!2147 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun bm!6545 () Bool)

(assert (=> bm!6545 (= call!6548 call!6549)))

(declare-fun b!74077 () Bool)

(assert (=> b!74077 (= e!48417 e!48413)))

(assert (=> b!74077 (= c!11115 (and ((_ is Cons!1503) (toList!735 call!6436)) (= (_1!1083 (h!2090 (toList!735 call!6436))) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun b!74071 () Bool)

(assert (=> b!74071 (= c!11112 (and ((_ is Cons!1503) (toList!735 call!6436)) (bvsgt (_1!1083 (h!2090 (toList!735 call!6436))) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> b!74071 (= e!48413 e!48415)))

(declare-fun d!17281 () Bool)

(assert (=> d!17281 e!48414))

(declare-fun res!39187 () Bool)

(assert (=> d!17281 (=> (not res!39187) (not e!48414))))

(assert (=> d!17281 (= res!39187 (isStrictlySorted!287 lt!33242))))

(assert (=> d!17281 (= lt!33242 e!48417)))

(assert (=> d!17281 (= c!11113 (and ((_ is Cons!1503) (toList!735 call!6436)) (bvslt (_1!1083 (h!2090 (toList!735 call!6436))) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17281 (isStrictlySorted!287 (toList!735 call!6436))))

(assert (=> d!17281 (= (insertStrictlySorted!53 (toList!735 call!6436) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33242)))

(declare-fun b!74078 () Bool)

(assert (=> b!74078 (= e!48415 call!6547)))

(declare-fun bm!6546 () Bool)

(assert (=> bm!6546 (= call!6547 call!6548)))

(assert (= (and d!17281 c!11113) b!74073))

(assert (= (and d!17281 (not c!11113)) b!74077))

(assert (= (and b!74077 c!11115) b!74069))

(assert (= (and b!74077 (not c!11115)) b!74071))

(assert (= (and b!74071 c!11112) b!74078))

(assert (= (and b!74071 (not c!11112)) b!74070))

(assert (= (or b!74078 b!74070) bm!6546))

(assert (= (or b!74069 bm!6546) bm!6545))

(assert (= (or b!74073 bm!6545) bm!6544))

(assert (= (and bm!6544 c!11114) b!74075))

(assert (= (and bm!6544 (not c!11114)) b!74074))

(assert (= (and d!17281 res!39187) b!74072))

(assert (= (and b!74072 res!39188) b!74076))

(declare-fun m!72793 () Bool)

(assert (=> b!74072 m!72793))

(declare-fun m!72795 () Bool)

(assert (=> d!17281 m!72795))

(declare-fun m!72797 () Bool)

(assert (=> d!17281 m!72797))

(declare-fun m!72799 () Bool)

(assert (=> b!74075 m!72799))

(declare-fun m!72801 () Bool)

(assert (=> b!74076 m!72801))

(declare-fun m!72803 () Bool)

(assert (=> bm!6544 m!72803))

(assert (=> d!16857 d!17281))

(declare-fun b!74082 () Bool)

(declare-fun e!48419 () Option!138)

(assert (=> b!74082 (= e!48419 None!136)))

(declare-fun b!74080 () Bool)

(declare-fun e!48418 () Option!138)

(assert (=> b!74080 (= e!48418 e!48419)))

(declare-fun c!11117 () Bool)

(assert (=> b!74080 (= c!11117 (and ((_ is Cons!1503) (toList!735 lt!32887)) (not (= (_1!1083 (h!2090 (toList!735 lt!32887))) (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun b!74079 () Bool)

(assert (=> b!74079 (= e!48418 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32887)))))))

(declare-fun d!17283 () Bool)

(declare-fun c!11116 () Bool)

(assert (=> d!17283 (= c!11116 (and ((_ is Cons!1503) (toList!735 lt!32887)) (= (_1!1083 (h!2090 (toList!735 lt!32887))) (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17283 (= (getValueByKey!132 (toList!735 lt!32887) (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) e!48418)))

(declare-fun b!74081 () Bool)

(assert (=> b!74081 (= e!48419 (getValueByKey!132 (t!5068 (toList!735 lt!32887)) (_1!1083 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (= (and d!17283 c!11116) b!74079))

(assert (= (and d!17283 (not c!11116)) b!74080))

(assert (= (and b!74080 c!11117) b!74081))

(assert (= (and b!74080 (not c!11117)) b!74082))

(declare-fun m!72805 () Bool)

(assert (=> b!74081 m!72805))

(assert (=> b!73515 d!17283))

(declare-fun d!17285 () Bool)

(declare-fun e!48421 () Bool)

(assert (=> d!17285 e!48421))

(declare-fun res!39189 () Bool)

(assert (=> d!17285 (=> res!39189 e!48421)))

(declare-fun lt!33245 () Bool)

(assert (=> d!17285 (= res!39189 (not lt!33245))))

(declare-fun lt!33243 () Bool)

(assert (=> d!17285 (= lt!33245 lt!33243)))

(declare-fun lt!33244 () Unit!2086)

(declare-fun e!48420 () Unit!2086)

(assert (=> d!17285 (= lt!33244 e!48420)))

(declare-fun c!11118 () Bool)

(assert (=> d!17285 (= c!11118 lt!33243)))

(assert (=> d!17285 (= lt!33243 (containsKey!136 (toList!735 lt!32738) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!17285 (= (contains!729 lt!32738 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) lt!33245)))

(declare-fun b!74083 () Bool)

(declare-fun lt!33246 () Unit!2086)

(assert (=> b!74083 (= e!48420 lt!33246)))

(assert (=> b!74083 (= lt!33246 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32738) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> b!74083 (isDefined!86 (getValueByKey!132 (toList!735 lt!32738) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun b!74084 () Bool)

(declare-fun Unit!2132 () Unit!2086)

(assert (=> b!74084 (= e!48420 Unit!2132)))

(declare-fun b!74085 () Bool)

(assert (=> b!74085 (= e!48421 (isDefined!86 (getValueByKey!132 (toList!735 lt!32738) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (= (and d!17285 c!11118) b!74083))

(assert (= (and d!17285 (not c!11118)) b!74084))

(assert (= (and d!17285 (not res!39189)) b!74085))

(declare-fun m!72807 () Bool)

(assert (=> d!17285 m!72807))

(declare-fun m!72809 () Bool)

(assert (=> b!74083 m!72809))

(assert (=> b!74083 m!71393))

(assert (=> b!74083 m!71393))

(declare-fun m!72811 () Bool)

(assert (=> b!74083 m!72811))

(assert (=> b!74085 m!71393))

(assert (=> b!74085 m!71393))

(assert (=> b!74085 m!72811))

(assert (=> d!16843 d!17285))

(declare-fun b!74089 () Bool)

(declare-fun e!48423 () Option!138)

(assert (=> b!74089 (= e!48423 None!136)))

(declare-fun b!74087 () Bool)

(declare-fun e!48422 () Option!138)

(assert (=> b!74087 (= e!48422 e!48423)))

(declare-fun c!11120 () Bool)

(assert (=> b!74087 (= c!11120 (and ((_ is Cons!1503) lt!32737) (not (= (_1!1083 (h!2090 lt!32737)) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))))

(declare-fun b!74086 () Bool)

(assert (=> b!74086 (= e!48422 (Some!137 (_2!1083 (h!2090 lt!32737))))))

(declare-fun c!11119 () Bool)

(declare-fun d!17287 () Bool)

(assert (=> d!17287 (= c!11119 (and ((_ is Cons!1503) lt!32737) (= (_1!1083 (h!2090 lt!32737)) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (=> d!17287 (= (getValueByKey!132 lt!32737 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) e!48422)))

(declare-fun b!74088 () Bool)

(assert (=> b!74088 (= e!48423 (getValueByKey!132 (t!5068 lt!32737) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (= (and d!17287 c!11119) b!74086))

(assert (= (and d!17287 (not c!11119)) b!74087))

(assert (= (and b!74087 c!11120) b!74088))

(assert (= (and b!74087 (not c!11120)) b!74089))

(declare-fun m!72813 () Bool)

(assert (=> b!74088 m!72813))

(assert (=> d!16843 d!17287))

(declare-fun d!17289 () Bool)

(assert (=> d!17289 (= (getValueByKey!132 lt!32737 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (Some!137 (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun lt!33247 () Unit!2086)

(assert (=> d!17289 (= lt!33247 (choose!422 lt!32737 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun e!48424 () Bool)

(assert (=> d!17289 e!48424))

(declare-fun res!39190 () Bool)

(assert (=> d!17289 (=> (not res!39190) (not e!48424))))

(assert (=> d!17289 (= res!39190 (isStrictlySorted!287 lt!32737))))

(assert (=> d!17289 (= (lemmaContainsTupThenGetReturnValue!51 lt!32737 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) lt!33247)))

(declare-fun b!74090 () Bool)

(declare-fun res!39191 () Bool)

(assert (=> b!74090 (=> (not res!39191) (not e!48424))))

(assert (=> b!74090 (= res!39191 (containsKey!136 lt!32737 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun b!74091 () Bool)

(assert (=> b!74091 (= e!48424 (contains!730 lt!32737 (tuple2!2147 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (= (and d!17289 res!39190) b!74090))

(assert (= (and b!74090 res!39191) b!74091))

(assert (=> d!17289 m!71387))

(declare-fun m!72815 () Bool)

(assert (=> d!17289 m!72815))

(declare-fun m!72817 () Bool)

(assert (=> d!17289 m!72817))

(declare-fun m!72819 () Bool)

(assert (=> b!74090 m!72819))

(declare-fun m!72821 () Bool)

(assert (=> b!74091 m!72821))

(assert (=> d!16843 d!17289))

(declare-fun b!74092 () Bool)

(declare-fun e!48425 () List!1507)

(declare-fun call!6551 () List!1507)

(assert (=> b!74092 (= e!48425 call!6551)))

(declare-fun b!74093 () Bool)

(declare-fun e!48427 () List!1507)

(declare-fun call!6550 () List!1507)

(assert (=> b!74093 (= e!48427 call!6550)))

(declare-fun c!11122 () Bool)

(declare-fun bm!6547 () Bool)

(declare-fun call!6552 () List!1507)

(declare-fun e!48428 () List!1507)

(assert (=> bm!6547 (= call!6552 ($colon$colon!65 e!48428 (ite c!11122 (h!2090 (toList!735 call!6414)) (tuple2!2147 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))))

(declare-fun c!11123 () Bool)

(assert (=> bm!6547 (= c!11123 c!11122)))

(declare-fun b!74095 () Bool)

(declare-fun res!39193 () Bool)

(declare-fun e!48426 () Bool)

(assert (=> b!74095 (=> (not res!39193) (not e!48426))))

(declare-fun lt!33248 () List!1507)

(assert (=> b!74095 (= res!39193 (containsKey!136 lt!33248 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun b!74096 () Bool)

(declare-fun e!48429 () List!1507)

(assert (=> b!74096 (= e!48429 call!6552)))

(declare-fun b!74097 () Bool)

(declare-fun c!11121 () Bool)

(declare-fun c!11124 () Bool)

(assert (=> b!74097 (= e!48428 (ite c!11124 (t!5068 (toList!735 call!6414)) (ite c!11121 (Cons!1503 (h!2090 (toList!735 call!6414)) (t!5068 (toList!735 call!6414))) Nil!1504)))))

(declare-fun b!74098 () Bool)

(assert (=> b!74098 (= e!48428 (insertStrictlySorted!53 (t!5068 (toList!735 call!6414)) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun b!74099 () Bool)

(assert (=> b!74099 (= e!48426 (contains!730 lt!33248 (tuple2!2147 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(declare-fun bm!6548 () Bool)

(assert (=> bm!6548 (= call!6551 call!6552)))

(declare-fun b!74100 () Bool)

(assert (=> b!74100 (= e!48429 e!48425)))

(assert (=> b!74100 (= c!11124 (and ((_ is Cons!1503) (toList!735 call!6414)) (= (_1!1083 (h!2090 (toList!735 call!6414))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(declare-fun b!74094 () Bool)

(assert (=> b!74094 (= c!11121 (and ((_ is Cons!1503) (toList!735 call!6414)) (bvsgt (_1!1083 (h!2090 (toList!735 call!6414))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (=> b!74094 (= e!48425 e!48427)))

(declare-fun d!17291 () Bool)

(assert (=> d!17291 e!48426))

(declare-fun res!39192 () Bool)

(assert (=> d!17291 (=> (not res!39192) (not e!48426))))

(assert (=> d!17291 (= res!39192 (isStrictlySorted!287 lt!33248))))

(assert (=> d!17291 (= lt!33248 e!48429)))

(assert (=> d!17291 (= c!11122 (and ((_ is Cons!1503) (toList!735 call!6414)) (bvslt (_1!1083 (h!2090 (toList!735 call!6414))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (=> d!17291 (isStrictlySorted!287 (toList!735 call!6414))))

(assert (=> d!17291 (= (insertStrictlySorted!53 (toList!735 call!6414) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) lt!33248)))

(declare-fun b!74101 () Bool)

(assert (=> b!74101 (= e!48427 call!6550)))

(declare-fun bm!6549 () Bool)

(assert (=> bm!6549 (= call!6550 call!6551)))

(assert (= (and d!17291 c!11122) b!74096))

(assert (= (and d!17291 (not c!11122)) b!74100))

(assert (= (and b!74100 c!11124) b!74092))

(assert (= (and b!74100 (not c!11124)) b!74094))

(assert (= (and b!74094 c!11121) b!74101))

(assert (= (and b!74094 (not c!11121)) b!74093))

(assert (= (or b!74101 b!74093) bm!6549))

(assert (= (or b!74092 bm!6549) bm!6548))

(assert (= (or b!74096 bm!6548) bm!6547))

(assert (= (and bm!6547 c!11123) b!74098))

(assert (= (and bm!6547 (not c!11123)) b!74097))

(assert (= (and d!17291 res!39192) b!74095))

(assert (= (and b!74095 res!39193) b!74099))

(declare-fun m!72823 () Bool)

(assert (=> b!74095 m!72823))

(declare-fun m!72825 () Bool)

(assert (=> d!17291 m!72825))

(declare-fun m!72827 () Bool)

(assert (=> d!17291 m!72827))

(declare-fun m!72829 () Bool)

(assert (=> b!74098 m!72829))

(declare-fun m!72831 () Bool)

(assert (=> b!74099 m!72831))

(declare-fun m!72833 () Bool)

(assert (=> bm!6547 m!72833))

(assert (=> d!16843 d!17291))

(declare-fun d!17293 () Bool)

(assert (=> d!17293 (= (get!1156 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2532 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73371 d!17293))

(assert (=> b!73364 d!17087))

(declare-fun lt!33249 () Bool)

(declare-fun d!17295 () Bool)

(assert (=> d!17295 (= lt!33249 (select (content!76 (toList!735 lt!32903)) (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun e!48430 () Bool)

(assert (=> d!17295 (= lt!33249 e!48430)))

(declare-fun res!39195 () Bool)

(assert (=> d!17295 (=> (not res!39195) (not e!48430))))

(assert (=> d!17295 (= res!39195 ((_ is Cons!1503) (toList!735 lt!32903)))))

(assert (=> d!17295 (= (contains!730 (toList!735 lt!32903) (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!33249)))

(declare-fun b!74102 () Bool)

(declare-fun e!48431 () Bool)

(assert (=> b!74102 (= e!48430 e!48431)))

(declare-fun res!39194 () Bool)

(assert (=> b!74102 (=> res!39194 e!48431)))

(assert (=> b!74102 (= res!39194 (= (h!2090 (toList!735 lt!32903)) (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!74103 () Bool)

(assert (=> b!74103 (= e!48431 (contains!730 (t!5068 (toList!735 lt!32903)) (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(assert (= (and d!17295 res!39195) b!74102))

(assert (= (and b!74102 (not res!39194)) b!74103))

(declare-fun m!72835 () Bool)

(assert (=> d!17295 m!72835))

(declare-fun m!72837 () Bool)

(assert (=> d!17295 m!72837))

(declare-fun m!72839 () Bool)

(assert (=> b!74103 m!72839))

(assert (=> b!73525 d!17295))

(declare-fun bm!6550 () Bool)

(declare-fun call!6553 () Bool)

(assert (=> bm!6550 (= call!6553 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3865 (_2!1084 lt!32604)) (mask!6180 (_2!1084 lt!32604))))))

(declare-fun b!74104 () Bool)

(declare-fun e!48434 () Bool)

(declare-fun e!48432 () Bool)

(assert (=> b!74104 (= e!48434 e!48432)))

(declare-fun lt!33250 () (_ BitVec 64))

(assert (=> b!74104 (= lt!33250 (select (arr!1858 (_keys!3865 (_2!1084 lt!32604))) #b00000000000000000000000000000000))))

(declare-fun lt!33252 () Unit!2086)

(assert (=> b!74104 (= lt!33252 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3865 (_2!1084 lt!32604)) lt!33250 #b00000000000000000000000000000000))))

(assert (=> b!74104 (arrayContainsKey!0 (_keys!3865 (_2!1084 lt!32604)) lt!33250 #b00000000000000000000000000000000)))

(declare-fun lt!33251 () Unit!2086)

(assert (=> b!74104 (= lt!33251 lt!33252)))

(declare-fun res!39197 () Bool)

(assert (=> b!74104 (= res!39197 (= (seekEntryOrOpen!0 (select (arr!1858 (_keys!3865 (_2!1084 lt!32604))) #b00000000000000000000000000000000) (_keys!3865 (_2!1084 lt!32604)) (mask!6180 (_2!1084 lt!32604))) (Found!246 #b00000000000000000000000000000000)))))

(assert (=> b!74104 (=> (not res!39197) (not e!48432))))

(declare-fun b!74106 () Bool)

(assert (=> b!74106 (= e!48434 call!6553)))

(declare-fun b!74107 () Bool)

(assert (=> b!74107 (= e!48432 call!6553)))

(declare-fun b!74105 () Bool)

(declare-fun e!48433 () Bool)

(assert (=> b!74105 (= e!48433 e!48434)))

(declare-fun c!11125 () Bool)

(assert (=> b!74105 (= c!11125 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (_2!1084 lt!32604))) #b00000000000000000000000000000000)))))

(declare-fun d!17297 () Bool)

(declare-fun res!39196 () Bool)

(assert (=> d!17297 (=> res!39196 e!48433)))

(assert (=> d!17297 (= res!39196 (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 (_2!1084 lt!32604)))))))

(assert (=> d!17297 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3865 (_2!1084 lt!32604)) (mask!6180 (_2!1084 lt!32604))) e!48433)))

(assert (= (and d!17297 (not res!39196)) b!74105))

(assert (= (and b!74105 c!11125) b!74104))

(assert (= (and b!74105 (not c!11125)) b!74106))

(assert (= (and b!74104 res!39197) b!74107))

(assert (= (or b!74107 b!74106) bm!6550))

(declare-fun m!72841 () Bool)

(assert (=> bm!6550 m!72841))

(assert (=> b!74104 m!72557))

(declare-fun m!72843 () Bool)

(assert (=> b!74104 m!72843))

(declare-fun m!72845 () Bool)

(assert (=> b!74104 m!72845))

(assert (=> b!74104 m!72557))

(declare-fun m!72847 () Bool)

(assert (=> b!74104 m!72847))

(assert (=> b!74105 m!72557))

(assert (=> b!74105 m!72557))

(assert (=> b!74105 m!72559))

(assert (=> b!73280 d!17297))

(declare-fun d!17299 () Bool)

(assert (=> d!17299 (not (contains!729 (+!98 lt!32847 (tuple2!2147 lt!32853 lt!32848)) lt!32851))))

(declare-fun lt!33253 () Unit!2086)

(assert (=> d!17299 (= lt!33253 (choose!426 lt!32847 lt!32853 lt!32848 lt!32851))))

(declare-fun e!48435 () Bool)

(assert (=> d!17299 e!48435))

(declare-fun res!39198 () Bool)

(assert (=> d!17299 (=> (not res!39198) (not e!48435))))

(assert (=> d!17299 (= res!39198 (not (contains!729 lt!32847 lt!32851)))))

(assert (=> d!17299 (= (addStillNotContains!26 lt!32847 lt!32853 lt!32848 lt!32851) lt!33253)))

(declare-fun b!74108 () Bool)

(assert (=> b!74108 (= e!48435 (not (= lt!32853 lt!32851)))))

(assert (= (and d!17299 res!39198) b!74108))

(assert (=> d!17299 m!71711))

(assert (=> d!17299 m!71711))

(assert (=> d!17299 m!71713))

(declare-fun m!72849 () Bool)

(assert (=> d!17299 m!72849))

(declare-fun m!72851 () Bool)

(assert (=> d!17299 m!72851))

(assert (=> b!73421 d!17299))

(assert (=> b!73421 d!17263))

(declare-fun d!17301 () Bool)

(declare-fun e!48436 () Bool)

(assert (=> d!17301 e!48436))

(declare-fun res!39199 () Bool)

(assert (=> d!17301 (=> (not res!39199) (not e!48436))))

(declare-fun lt!33257 () ListLongMap!1439)

(assert (=> d!17301 (= res!39199 (contains!729 lt!33257 (_1!1083 (tuple2!2147 lt!32853 lt!32848))))))

(declare-fun lt!33256 () List!1507)

(assert (=> d!17301 (= lt!33257 (ListLongMap!1440 lt!33256))))

(declare-fun lt!33254 () Unit!2086)

(declare-fun lt!33255 () Unit!2086)

(assert (=> d!17301 (= lt!33254 lt!33255)))

(assert (=> d!17301 (= (getValueByKey!132 lt!33256 (_1!1083 (tuple2!2147 lt!32853 lt!32848))) (Some!137 (_2!1083 (tuple2!2147 lt!32853 lt!32848))))))

(assert (=> d!17301 (= lt!33255 (lemmaContainsTupThenGetReturnValue!51 lt!33256 (_1!1083 (tuple2!2147 lt!32853 lt!32848)) (_2!1083 (tuple2!2147 lt!32853 lt!32848))))))

(assert (=> d!17301 (= lt!33256 (insertStrictlySorted!53 (toList!735 lt!32847) (_1!1083 (tuple2!2147 lt!32853 lt!32848)) (_2!1083 (tuple2!2147 lt!32853 lt!32848))))))

(assert (=> d!17301 (= (+!98 lt!32847 (tuple2!2147 lt!32853 lt!32848)) lt!33257)))

(declare-fun b!74109 () Bool)

(declare-fun res!39200 () Bool)

(assert (=> b!74109 (=> (not res!39200) (not e!48436))))

(assert (=> b!74109 (= res!39200 (= (getValueByKey!132 (toList!735 lt!33257) (_1!1083 (tuple2!2147 lt!32853 lt!32848))) (Some!137 (_2!1083 (tuple2!2147 lt!32853 lt!32848)))))))

(declare-fun b!74110 () Bool)

(assert (=> b!74110 (= e!48436 (contains!730 (toList!735 lt!33257) (tuple2!2147 lt!32853 lt!32848)))))

(assert (= (and d!17301 res!39199) b!74109))

(assert (= (and b!74109 res!39200) b!74110))

(declare-fun m!72853 () Bool)

(assert (=> d!17301 m!72853))

(declare-fun m!72855 () Bool)

(assert (=> d!17301 m!72855))

(declare-fun m!72857 () Bool)

(assert (=> d!17301 m!72857))

(declare-fun m!72859 () Bool)

(assert (=> d!17301 m!72859))

(declare-fun m!72861 () Bool)

(assert (=> b!74109 m!72861))

(declare-fun m!72863 () Bool)

(assert (=> b!74110 m!72863))

(assert (=> b!73421 d!17301))

(declare-fun d!17303 () Bool)

(declare-fun e!48437 () Bool)

(assert (=> d!17303 e!48437))

(declare-fun res!39201 () Bool)

(assert (=> d!17303 (=> (not res!39201) (not e!48437))))

(declare-fun lt!33261 () ListLongMap!1439)

(assert (=> d!17303 (= res!39201 (contains!729 lt!33261 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!33260 () List!1507)

(assert (=> d!17303 (= lt!33261 (ListLongMap!1440 lt!33260))))

(declare-fun lt!33258 () Unit!2086)

(declare-fun lt!33259 () Unit!2086)

(assert (=> d!17303 (= lt!33258 lt!33259)))

(assert (=> d!17303 (= (getValueByKey!132 lt!33260 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!137 (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!17303 (= lt!33259 (lemmaContainsTupThenGetReturnValue!51 lt!33260 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!17303 (= lt!33260 (insertStrictlySorted!53 (toList!735 call!6463) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!17303 (= (+!98 call!6463 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!33261)))

(declare-fun b!74111 () Bool)

(declare-fun res!39202 () Bool)

(assert (=> b!74111 (=> (not res!39202) (not e!48437))))

(assert (=> b!74111 (= res!39202 (= (getValueByKey!132 (toList!735 lt!33261) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!137 (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!74112 () Bool)

(assert (=> b!74112 (= e!48437 (contains!730 (toList!735 lt!33261) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!17303 res!39201) b!74111))

(assert (= (and b!74111 res!39202) b!74112))

(declare-fun m!72865 () Bool)

(assert (=> d!17303 m!72865))

(declare-fun m!72867 () Bool)

(assert (=> d!17303 m!72867))

(declare-fun m!72869 () Bool)

(assert (=> d!17303 m!72869))

(declare-fun m!72871 () Bool)

(assert (=> d!17303 m!72871))

(declare-fun m!72873 () Bool)

(assert (=> b!74111 m!72873))

(declare-fun m!72875 () Bool)

(assert (=> b!74112 m!72875))

(assert (=> b!73421 d!17303))

(declare-fun d!17305 () Bool)

(declare-fun e!48439 () Bool)

(assert (=> d!17305 e!48439))

(declare-fun res!39203 () Bool)

(assert (=> d!17305 (=> res!39203 e!48439)))

(declare-fun lt!33264 () Bool)

(assert (=> d!17305 (= res!39203 (not lt!33264))))

(declare-fun lt!33262 () Bool)

(assert (=> d!17305 (= lt!33264 lt!33262)))

(declare-fun lt!33263 () Unit!2086)

(declare-fun e!48438 () Unit!2086)

(assert (=> d!17305 (= lt!33263 e!48438)))

(declare-fun c!11126 () Bool)

(assert (=> d!17305 (= c!11126 lt!33262)))

(assert (=> d!17305 (= lt!33262 (containsKey!136 (toList!735 (+!98 lt!32847 (tuple2!2147 lt!32853 lt!32848))) lt!32851))))

(assert (=> d!17305 (= (contains!729 (+!98 lt!32847 (tuple2!2147 lt!32853 lt!32848)) lt!32851) lt!33264)))

(declare-fun b!74113 () Bool)

(declare-fun lt!33265 () Unit!2086)

(assert (=> b!74113 (= e!48438 lt!33265)))

(assert (=> b!74113 (= lt!33265 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 (+!98 lt!32847 (tuple2!2147 lt!32853 lt!32848))) lt!32851))))

(assert (=> b!74113 (isDefined!86 (getValueByKey!132 (toList!735 (+!98 lt!32847 (tuple2!2147 lt!32853 lt!32848))) lt!32851))))

(declare-fun b!74114 () Bool)

(declare-fun Unit!2133 () Unit!2086)

(assert (=> b!74114 (= e!48438 Unit!2133)))

(declare-fun b!74115 () Bool)

(assert (=> b!74115 (= e!48439 (isDefined!86 (getValueByKey!132 (toList!735 (+!98 lt!32847 (tuple2!2147 lt!32853 lt!32848))) lt!32851)))))

(assert (= (and d!17305 c!11126) b!74113))

(assert (= (and d!17305 (not c!11126)) b!74114))

(assert (= (and d!17305 (not res!39203)) b!74115))

(declare-fun m!72877 () Bool)

(assert (=> d!17305 m!72877))

(declare-fun m!72879 () Bool)

(assert (=> b!74113 m!72879))

(declare-fun m!72881 () Bool)

(assert (=> b!74113 m!72881))

(assert (=> b!74113 m!72881))

(declare-fun m!72883 () Bool)

(assert (=> b!74113 m!72883))

(assert (=> b!74115 m!72881))

(assert (=> b!74115 m!72881))

(assert (=> b!74115 m!72883))

(assert (=> b!73421 d!17305))

(declare-fun lt!33266 () Bool)

(declare-fun d!17307 () Bool)

(assert (=> d!17307 (= lt!33266 (select (content!76 (toList!735 lt!32792)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))

(declare-fun e!48440 () Bool)

(assert (=> d!17307 (= lt!33266 e!48440)))

(declare-fun res!39205 () Bool)

(assert (=> d!17307 (=> (not res!39205) (not e!48440))))

(assert (=> d!17307 (= res!39205 ((_ is Cons!1503) (toList!735 lt!32792)))))

(assert (=> d!17307 (= (contains!730 (toList!735 lt!32792) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) lt!33266)))

(declare-fun b!74116 () Bool)

(declare-fun e!48441 () Bool)

(assert (=> b!74116 (= e!48440 e!48441)))

(declare-fun res!39204 () Bool)

(assert (=> b!74116 (=> res!39204 e!48441)))

(assert (=> b!74116 (= res!39204 (= (h!2090 (toList!735 lt!32792)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))

(declare-fun b!74117 () Bool)

(assert (=> b!74117 (= e!48441 (contains!730 (t!5068 (toList!735 lt!32792)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))

(assert (= (and d!17307 res!39205) b!74116))

(assert (= (and b!74116 (not res!39204)) b!74117))

(declare-fun m!72885 () Bool)

(assert (=> d!17307 m!72885))

(declare-fun m!72887 () Bool)

(assert (=> d!17307 m!72887))

(declare-fun m!72889 () Bool)

(assert (=> b!74117 m!72889))

(assert (=> b!73335 d!17307))

(assert (=> b!73574 d!16999))

(declare-fun d!17309 () Bool)

(assert (=> d!17309 (= ($colon$colon!65 e!48074 (ite c!10956 (h!2090 (toList!735 lt!32476)) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472)))) (Cons!1503 (ite c!10956 (h!2090 (toList!735 lt!32476)) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))) e!48074))))

(assert (=> bm!6474 d!17309))

(declare-fun b!74118 () Bool)

(declare-fun res!39206 () Bool)

(declare-fun e!48444 () Bool)

(assert (=> b!74118 (=> (not res!39206) (not e!48444))))

(declare-fun lt!33269 () ListLongMap!1439)

(assert (=> b!74118 (= res!39206 (not (contains!729 lt!33269 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!48442 () Bool)

(declare-fun b!74119 () Bool)

(assert (=> b!74119 (= e!48442 (= lt!33269 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (ite c!10836 (_values!2196 newMap!16) lt!32608) (mask!6180 newMap!16) (ite c!10836 (ite c!10829 lt!32610 lt!32600) (extraKeys!2072 newMap!16)) (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)) (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2213 newMap!16))))))

(declare-fun b!74120 () Bool)

(declare-fun e!48445 () Bool)

(assert (=> b!74120 (= e!48445 e!48442)))

(declare-fun c!11128 () Bool)

(assert (=> b!74120 (= c!11128 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!74121 () Bool)

(assert (=> b!74121 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(assert (=> b!74121 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (ite c!10836 (_values!2196 newMap!16) lt!32608))))))

(declare-fun e!48446 () Bool)

(assert (=> b!74121 (= e!48446 (= (apply!75 lt!33269 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1154 (select (arr!1859 (ite c!10836 (_values!2196 newMap!16) lt!32608)) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!74122 () Bool)

(declare-fun e!48447 () ListLongMap!1439)

(declare-fun call!6554 () ListLongMap!1439)

(assert (=> b!74122 (= e!48447 call!6554)))

(declare-fun b!74123 () Bool)

(declare-fun e!48448 () ListLongMap!1439)

(assert (=> b!74123 (= e!48448 (ListLongMap!1440 Nil!1504))))

(declare-fun b!74124 () Bool)

(assert (=> b!74124 (= e!48442 (isEmpty!321 lt!33269))))

(declare-fun d!17311 () Bool)

(assert (=> d!17311 e!48444))

(declare-fun res!39208 () Bool)

(assert (=> d!17311 (=> (not res!39208) (not e!48444))))

(assert (=> d!17311 (= res!39208 (not (contains!729 lt!33269 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17311 (= lt!33269 e!48448)))

(declare-fun c!11127 () Bool)

(assert (=> d!17311 (= c!11127 (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!17311 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17311 (= (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (ite c!10836 (_values!2196 newMap!16) lt!32608) (mask!6180 newMap!16) (ite c!10836 (ite c!10829 lt!32610 lt!32600) (extraKeys!2072 newMap!16)) (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)) (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33269)))

(declare-fun b!74125 () Bool)

(assert (=> b!74125 (= e!48448 e!48447)))

(declare-fun c!11130 () Bool)

(assert (=> b!74125 (= c!11130 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74126 () Bool)

(assert (=> b!74126 (= e!48444 e!48445)))

(declare-fun c!11129 () Bool)

(declare-fun e!48443 () Bool)

(assert (=> b!74126 (= c!11129 e!48443)))

(declare-fun res!39209 () Bool)

(assert (=> b!74126 (=> (not res!39209) (not e!48443))))

(assert (=> b!74126 (= res!39209 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun bm!6551 () Bool)

(assert (=> bm!6551 (= call!6554 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (ite c!10836 (_values!2196 newMap!16) lt!32608) (mask!6180 newMap!16) (ite c!10836 (ite c!10829 lt!32610 lt!32600) (extraKeys!2072 newMap!16)) (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)) (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2213 newMap!16)))))

(declare-fun b!74127 () Bool)

(assert (=> b!74127 (= e!48445 e!48446)))

(assert (=> b!74127 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun res!39207 () Bool)

(assert (=> b!74127 (= res!39207 (contains!729 lt!33269 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74127 (=> (not res!39207) (not e!48446))))

(declare-fun b!74128 () Bool)

(assert (=> b!74128 (= e!48443 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74128 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!74129 () Bool)

(declare-fun lt!33272 () Unit!2086)

(declare-fun lt!33270 () Unit!2086)

(assert (=> b!74129 (= lt!33272 lt!33270)))

(declare-fun lt!33267 () ListLongMap!1439)

(declare-fun lt!33268 () V!2947)

(declare-fun lt!33273 () (_ BitVec 64))

(declare-fun lt!33271 () (_ BitVec 64))

(assert (=> b!74129 (not (contains!729 (+!98 lt!33267 (tuple2!2147 lt!33273 lt!33268)) lt!33271))))

(assert (=> b!74129 (= lt!33270 (addStillNotContains!26 lt!33267 lt!33273 lt!33268 lt!33271))))

(assert (=> b!74129 (= lt!33271 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!74129 (= lt!33268 (get!1154 (select (arr!1859 (ite c!10836 (_values!2196 newMap!16) lt!32608)) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!74129 (= lt!33273 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74129 (= lt!33267 call!6554)))

(assert (=> b!74129 (= e!48447 (+!98 call!6554 (tuple2!2147 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) (get!1154 (select (arr!1859 (ite c!10836 (_values!2196 newMap!16) lt!32608)) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!17311 c!11127) b!74123))

(assert (= (and d!17311 (not c!11127)) b!74125))

(assert (= (and b!74125 c!11130) b!74129))

(assert (= (and b!74125 (not c!11130)) b!74122))

(assert (= (or b!74129 b!74122) bm!6551))

(assert (= (and d!17311 res!39208) b!74118))

(assert (= (and b!74118 res!39206) b!74126))

(assert (= (and b!74126 res!39209) b!74128))

(assert (= (and b!74126 c!11129) b!74127))

(assert (= (and b!74126 (not c!11129)) b!74120))

(assert (= (and b!74127 res!39207) b!74121))

(assert (= (and b!74120 c!11128) b!74119))

(assert (= (and b!74120 (not c!11128)) b!74124))

(declare-fun b_lambda!3333 () Bool)

(assert (=> (not b_lambda!3333) (not b!74121)))

(assert (=> b!74121 t!5077))

(declare-fun b_and!4541 () Bool)

(assert (= b_and!4537 (and (=> t!5077 result!2697) b_and!4541)))

(assert (=> b!74121 t!5079))

(declare-fun b_and!4543 () Bool)

(assert (= b_and!4539 (and (=> t!5079 result!2699) b_and!4543)))

(declare-fun b_lambda!3335 () Bool)

(assert (=> (not b_lambda!3335) (not b!74129)))

(assert (=> b!74129 t!5077))

(declare-fun b_and!4545 () Bool)

(assert (= b_and!4541 (and (=> t!5077 result!2697) b_and!4545)))

(assert (=> b!74129 t!5079))

(declare-fun b_and!4547 () Bool)

(assert (= b_and!4543 (and (=> t!5079 result!2699) b_and!4547)))

(assert (=> b!74128 m!71397))

(assert (=> b!74128 m!71397))

(assert (=> b!74128 m!71411))

(declare-fun m!72891 () Bool)

(assert (=> d!17311 m!72891))

(assert (=> d!17311 m!71423))

(declare-fun m!72893 () Bool)

(assert (=> b!74118 m!72893))

(assert (=> b!74129 m!71521))

(declare-fun m!72895 () Bool)

(assert (=> b!74129 m!72895))

(assert (=> b!74129 m!71639))

(assert (=> b!74129 m!71521))

(assert (=> b!74129 m!71641))

(assert (=> b!74129 m!71397))

(declare-fun m!72897 () Bool)

(assert (=> b!74129 m!72897))

(assert (=> b!74129 m!72897))

(declare-fun m!72899 () Bool)

(assert (=> b!74129 m!72899))

(declare-fun m!72901 () Bool)

(assert (=> b!74129 m!72901))

(assert (=> b!74129 m!71639))

(assert (=> b!74127 m!71397))

(assert (=> b!74127 m!71397))

(declare-fun m!72903 () Bool)

(assert (=> b!74127 m!72903))

(assert (=> b!74125 m!71397))

(assert (=> b!74125 m!71397))

(assert (=> b!74125 m!71411))

(declare-fun m!72905 () Bool)

(assert (=> bm!6551 m!72905))

(assert (=> b!74121 m!71397))

(declare-fun m!72907 () Bool)

(assert (=> b!74121 m!72907))

(assert (=> b!74121 m!71521))

(assert (=> b!74121 m!71639))

(assert (=> b!74121 m!71521))

(assert (=> b!74121 m!71641))

(assert (=> b!74121 m!71397))

(assert (=> b!74121 m!71639))

(assert (=> b!74119 m!72905))

(declare-fun m!72909 () Bool)

(assert (=> b!74124 m!72909))

(assert (=> bm!6455 d!17311))

(assert (=> b!73700 d!17087))

(assert (=> b!73345 d!17159))

(assert (=> b!73345 d!17161))

(assert (=> d!16945 d!16943))

(declare-fun d!17313 () Bool)

(assert (=> d!17313 (= (getValueByKey!132 lt!32724 (_1!1083 lt!32472)) (Some!137 (_2!1083 lt!32472)))))

(assert (=> d!17313 true))

(declare-fun _$22!387 () Unit!2086)

(assert (=> d!17313 (= (choose!422 lt!32724 (_1!1083 lt!32472) (_2!1083 lt!32472)) _$22!387)))

(declare-fun bs!3179 () Bool)

(assert (= bs!3179 d!17313))

(assert (=> bs!3179 m!71349))

(assert (=> d!16945 d!17313))

(declare-fun d!17315 () Bool)

(declare-fun res!39210 () Bool)

(declare-fun e!48449 () Bool)

(assert (=> d!17315 (=> res!39210 e!48449)))

(assert (=> d!17315 (= res!39210 (or ((_ is Nil!1504) lt!32724) ((_ is Nil!1504) (t!5068 lt!32724))))))

(assert (=> d!17315 (= (isStrictlySorted!287 lt!32724) e!48449)))

(declare-fun b!74130 () Bool)

(declare-fun e!48450 () Bool)

(assert (=> b!74130 (= e!48449 e!48450)))

(declare-fun res!39211 () Bool)

(assert (=> b!74130 (=> (not res!39211) (not e!48450))))

(assert (=> b!74130 (= res!39211 (bvslt (_1!1083 (h!2090 lt!32724)) (_1!1083 (h!2090 (t!5068 lt!32724)))))))

(declare-fun b!74131 () Bool)

(assert (=> b!74131 (= e!48450 (isStrictlySorted!287 (t!5068 lt!32724)))))

(assert (= (and d!17315 (not res!39210)) b!74130))

(assert (= (and b!74130 res!39211) b!74131))

(declare-fun m!72911 () Bool)

(assert (=> b!74131 m!72911))

(assert (=> d!16945 d!17315))

(declare-fun d!17317 () Bool)

(declare-fun lt!33274 () Bool)

(assert (=> d!17317 (= lt!33274 (select (content!76 (toList!735 lt!32751)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun e!48451 () Bool)

(assert (=> d!17317 (= lt!33274 e!48451)))

(declare-fun res!39213 () Bool)

(assert (=> d!17317 (=> (not res!39213) (not e!48451))))

(assert (=> d!17317 (= res!39213 ((_ is Cons!1503) (toList!735 lt!32751)))))

(assert (=> d!17317 (= (contains!730 (toList!735 lt!32751) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!33274)))

(declare-fun b!74132 () Bool)

(declare-fun e!48452 () Bool)

(assert (=> b!74132 (= e!48451 e!48452)))

(declare-fun res!39212 () Bool)

(assert (=> b!74132 (=> res!39212 e!48452)))

(assert (=> b!74132 (= res!39212 (= (h!2090 (toList!735 lt!32751)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!74133 () Bool)

(assert (=> b!74133 (= e!48452 (contains!730 (t!5068 (toList!735 lt!32751)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(assert (= (and d!17317 res!39213) b!74132))

(assert (= (and b!74132 (not res!39212)) b!74133))

(declare-fun m!72913 () Bool)

(assert (=> d!17317 m!72913))

(declare-fun m!72915 () Bool)

(assert (=> d!17317 m!72915))

(declare-fun m!72917 () Bool)

(assert (=> b!74133 m!72917))

(assert (=> b!73295 d!17317))

(declare-fun d!17319 () Bool)

(declare-fun c!11133 () Bool)

(assert (=> d!17319 (= c!11133 ((_ is Nil!1504) (toList!735 lt!32710)))))

(declare-fun e!48455 () (InoxSet tuple2!2146))

(assert (=> d!17319 (= (content!76 (toList!735 lt!32710)) e!48455)))

(declare-fun b!74138 () Bool)

(assert (=> b!74138 (= e!48455 ((as const (Array tuple2!2146 Bool)) false))))

(declare-fun b!74139 () Bool)

(assert (=> b!74139 (= e!48455 ((_ map or) (store ((as const (Array tuple2!2146 Bool)) false) (h!2090 (toList!735 lt!32710)) true) (content!76 (t!5068 (toList!735 lt!32710)))))))

(assert (= (and d!17319 c!11133) b!74138))

(assert (= (and d!17319 (not c!11133)) b!74139))

(declare-fun m!72919 () Bool)

(assert (=> b!74139 m!72919))

(assert (=> b!74139 m!72551))

(assert (=> d!16997 d!17319))

(declare-fun d!17321 () Bool)

(declare-fun e!48457 () Bool)

(assert (=> d!17321 e!48457))

(declare-fun res!39214 () Bool)

(assert (=> d!17321 (=> res!39214 e!48457)))

(declare-fun lt!33277 () Bool)

(assert (=> d!17321 (= res!39214 (not lt!33277))))

(declare-fun lt!33275 () Bool)

(assert (=> d!17321 (= lt!33277 lt!33275)))

(declare-fun lt!33276 () Unit!2086)

(declare-fun e!48456 () Unit!2086)

(assert (=> d!17321 (= lt!33276 e!48456)))

(declare-fun c!11134 () Bool)

(assert (=> d!17321 (= c!11134 lt!33275)))

(assert (=> d!17321 (= lt!33275 (containsKey!136 (toList!735 lt!32773) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17321 (= (contains!729 lt!32773 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33277)))

(declare-fun b!74140 () Bool)

(declare-fun lt!33278 () Unit!2086)

(assert (=> b!74140 (= e!48456 lt!33278)))

(assert (=> b!74140 (= lt!33278 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32773) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74140 (isDefined!86 (getValueByKey!132 (toList!735 lt!32773) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74141 () Bool)

(declare-fun Unit!2134 () Unit!2086)

(assert (=> b!74141 (= e!48456 Unit!2134)))

(declare-fun b!74142 () Bool)

(assert (=> b!74142 (= e!48457 (isDefined!86 (getValueByKey!132 (toList!735 lt!32773) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17321 c!11134) b!74140))

(assert (= (and d!17321 (not c!11134)) b!74141))

(assert (= (and d!17321 (not res!39214)) b!74142))

(declare-fun m!72921 () Bool)

(assert (=> d!17321 m!72921))

(declare-fun m!72923 () Bool)

(assert (=> b!74140 m!72923))

(declare-fun m!72925 () Bool)

(assert (=> b!74140 m!72925))

(assert (=> b!74140 m!72925))

(declare-fun m!72927 () Bool)

(assert (=> b!74140 m!72927))

(assert (=> b!74142 m!72925))

(assert (=> b!74142 m!72925))

(assert (=> b!74142 m!72927))

(assert (=> bm!6446 d!17321))

(declare-fun lt!33279 () Bool)

(declare-fun d!17323 () Bool)

(assert (=> d!17323 (= lt!33279 (select (content!76 (toList!735 lt!32738)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))

(declare-fun e!48458 () Bool)

(assert (=> d!17323 (= lt!33279 e!48458)))

(declare-fun res!39216 () Bool)

(assert (=> d!17323 (=> (not res!39216) (not e!48458))))

(assert (=> d!17323 (= res!39216 ((_ is Cons!1503) (toList!735 lt!32738)))))

(assert (=> d!17323 (= (contains!730 (toList!735 lt!32738) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) lt!33279)))

(declare-fun b!74143 () Bool)

(declare-fun e!48459 () Bool)

(assert (=> b!74143 (= e!48458 e!48459)))

(declare-fun res!39215 () Bool)

(assert (=> b!74143 (=> res!39215 e!48459)))

(assert (=> b!74143 (= res!39215 (= (h!2090 (toList!735 lt!32738)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))

(declare-fun b!74144 () Bool)

(assert (=> b!74144 (= e!48459 (contains!730 (t!5068 (toList!735 lt!32738)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))

(assert (= (and d!17323 res!39216) b!74143))

(assert (= (and b!74143 (not res!39215)) b!74144))

(declare-fun m!72929 () Bool)

(assert (=> d!17323 m!72929))

(declare-fun m!72931 () Bool)

(assert (=> d!17323 m!72931))

(declare-fun m!72933 () Bool)

(assert (=> b!74144 m!72933))

(assert (=> b!73252 d!17323))

(declare-fun d!17325 () Bool)

(declare-fun res!39217 () Bool)

(declare-fun e!48460 () Bool)

(assert (=> d!17325 (=> res!39217 e!48460)))

(assert (=> d!17325 (= res!39217 (and ((_ is Cons!1503) (toList!735 call!6396)) (= (_1!1083 (h!2090 (toList!735 call!6396))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))))

(assert (=> d!17325 (= (containsKey!136 (toList!735 call!6396) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) e!48460)))

(declare-fun b!74145 () Bool)

(declare-fun e!48461 () Bool)

(assert (=> b!74145 (= e!48460 e!48461)))

(declare-fun res!39218 () Bool)

(assert (=> b!74145 (=> (not res!39218) (not e!48461))))

(assert (=> b!74145 (= res!39218 (and (or (not ((_ is Cons!1503) (toList!735 call!6396))) (bvsle (_1!1083 (h!2090 (toList!735 call!6396))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))) ((_ is Cons!1503) (toList!735 call!6396)) (bvslt (_1!1083 (h!2090 (toList!735 call!6396))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))))

(declare-fun b!74146 () Bool)

(assert (=> b!74146 (= e!48461 (containsKey!136 (t!5068 (toList!735 call!6396)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (= (and d!17325 (not res!39217)) b!74145))

(assert (= (and b!74145 res!39218) b!74146))

(assert (=> b!74146 m!71053))

(declare-fun m!72935 () Bool)

(assert (=> b!74146 m!72935))

(assert (=> d!17005 d!17325))

(declare-fun d!17327 () Bool)

(declare-fun lt!33280 () Bool)

(assert (=> d!17327 (= lt!33280 (select (content!76 lt!33002) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))))))

(declare-fun e!48462 () Bool)

(assert (=> d!17327 (= lt!33280 e!48462)))

(declare-fun res!39220 () Bool)

(assert (=> d!17327 (=> (not res!39220) (not e!48462))))

(assert (=> d!17327 (= res!39220 ((_ is Cons!1503) lt!33002))))

(assert (=> d!17327 (= (contains!730 lt!33002 (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))) lt!33280)))

(declare-fun b!74147 () Bool)

(declare-fun e!48463 () Bool)

(assert (=> b!74147 (= e!48462 e!48463)))

(declare-fun res!39219 () Bool)

(assert (=> b!74147 (=> res!39219 e!48463)))

(assert (=> b!74147 (= res!39219 (= (h!2090 lt!33002) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))))))

(declare-fun b!74148 () Bool)

(assert (=> b!74148 (= e!48463 (contains!730 (t!5068 lt!33002) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))))))

(assert (= (and d!17327 res!39220) b!74147))

(assert (= (and b!74147 (not res!39219)) b!74148))

(declare-fun m!72937 () Bool)

(assert (=> d!17327 m!72937))

(declare-fun m!72939 () Bool)

(assert (=> d!17327 m!72939))

(declare-fun m!72941 () Bool)

(assert (=> b!74148 m!72941))

(assert (=> b!73594 d!17327))

(declare-fun d!17329 () Bool)

(assert (=> d!17329 (isDefined!86 (getValueByKey!132 (toList!735 call!6396) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun lt!33281 () Unit!2086)

(assert (=> d!17329 (= lt!33281 (choose!421 (toList!735 call!6396) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun e!48464 () Bool)

(assert (=> d!17329 e!48464))

(declare-fun res!39221 () Bool)

(assert (=> d!17329 (=> (not res!39221) (not e!48464))))

(assert (=> d!17329 (= res!39221 (isStrictlySorted!287 (toList!735 call!6396)))))

(assert (=> d!17329 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 call!6396) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) lt!33281)))

(declare-fun b!74149 () Bool)

(assert (=> b!74149 (= e!48464 (containsKey!136 (toList!735 call!6396) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (= (and d!17329 res!39221) b!74149))

(assert (=> d!17329 m!71053))

(assert (=> d!17329 m!72047))

(assert (=> d!17329 m!72047))

(assert (=> d!17329 m!72049))

(assert (=> d!17329 m!71053))

(declare-fun m!72943 () Bool)

(assert (=> d!17329 m!72943))

(declare-fun m!72945 () Bool)

(assert (=> d!17329 m!72945))

(assert (=> b!74149 m!71053))

(assert (=> b!74149 m!72043))

(assert (=> b!73640 d!17329))

(declare-fun d!17331 () Bool)

(assert (=> d!17331 (= (isDefined!86 (getValueByKey!132 (toList!735 call!6396) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))) (not (isEmpty!322 (getValueByKey!132 (toList!735 call!6396) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))))

(declare-fun bs!3180 () Bool)

(assert (= bs!3180 d!17331))

(assert (=> bs!3180 m!72047))

(declare-fun m!72947 () Bool)

(assert (=> bs!3180 m!72947))

(assert (=> b!73640 d!17331))

(declare-fun b!74153 () Bool)

(declare-fun e!48466 () Option!138)

(assert (=> b!74153 (= e!48466 None!136)))

(declare-fun b!74151 () Bool)

(declare-fun e!48465 () Option!138)

(assert (=> b!74151 (= e!48465 e!48466)))

(declare-fun c!11136 () Bool)

(assert (=> b!74151 (= c!11136 (and ((_ is Cons!1503) (toList!735 call!6396)) (not (= (_1!1083 (h!2090 (toList!735 call!6396))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))))

(declare-fun b!74150 () Bool)

(assert (=> b!74150 (= e!48465 (Some!137 (_2!1083 (h!2090 (toList!735 call!6396)))))))

(declare-fun c!11135 () Bool)

(declare-fun d!17333 () Bool)

(assert (=> d!17333 (= c!11135 (and ((_ is Cons!1503) (toList!735 call!6396)) (= (_1!1083 (h!2090 (toList!735 call!6396))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))))

(assert (=> d!17333 (= (getValueByKey!132 (toList!735 call!6396) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) e!48465)))

(declare-fun b!74152 () Bool)

(assert (=> b!74152 (= e!48466 (getValueByKey!132 (t!5068 (toList!735 call!6396)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (= (and d!17333 c!11135) b!74150))

(assert (= (and d!17333 (not c!11135)) b!74151))

(assert (= (and b!74151 c!11136) b!74152))

(assert (= (and b!74151 (not c!11136)) b!74153))

(assert (=> b!74152 m!71053))

(declare-fun m!72949 () Bool)

(assert (=> b!74152 m!72949))

(assert (=> b!73640 d!17333))

(declare-fun b!74157 () Bool)

(declare-fun e!48468 () Option!138)

(assert (=> b!74157 (= e!48468 None!136)))

(declare-fun b!74155 () Bool)

(declare-fun e!48467 () Option!138)

(assert (=> b!74155 (= e!48467 e!48468)))

(declare-fun c!11138 () Bool)

(assert (=> b!74155 (= c!11138 (and ((_ is Cons!1503) (toList!735 lt!32899)) (not (= (_1!1083 (h!2090 (toList!735 lt!32899))) (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun b!74154 () Bool)

(assert (=> b!74154 (= e!48467 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32899)))))))

(declare-fun c!11137 () Bool)

(declare-fun d!17335 () Bool)

(assert (=> d!17335 (= c!11137 (and ((_ is Cons!1503) (toList!735 lt!32899)) (= (_1!1083 (h!2090 (toList!735 lt!32899))) (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17335 (= (getValueByKey!132 (toList!735 lt!32899) (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) e!48467)))

(declare-fun b!74156 () Bool)

(assert (=> b!74156 (= e!48468 (getValueByKey!132 (t!5068 (toList!735 lt!32899)) (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (= (and d!17335 c!11137) b!74154))

(assert (= (and d!17335 (not c!11137)) b!74155))

(assert (= (and b!74155 c!11138) b!74156))

(assert (= (and b!74155 (not c!11138)) b!74157))

(declare-fun m!72951 () Bool)

(assert (=> b!74156 m!72951))

(assert (=> b!73522 d!17335))

(assert (=> d!17013 d!16915))

(declare-fun d!17337 () Bool)

(declare-fun e!48471 () Bool)

(assert (=> d!17337 e!48471))

(declare-fun res!39226 () Bool)

(assert (=> d!17337 (=> (not res!39226) (not e!48471))))

(declare-fun lt!33284 () SeekEntryResult!246)

(assert (=> d!17337 (= res!39226 ((_ is Found!246) lt!33284))))

(assert (=> d!17337 (= lt!33284 (seekEntryOrOpen!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(assert (=> d!17337 true))

(declare-fun _$33!60 () Unit!2086)

(assert (=> d!17337 (= (choose!430 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (defaultEntry!2213 newMap!16)) _$33!60)))

(declare-fun b!74162 () Bool)

(declare-fun res!39227 () Bool)

(assert (=> b!74162 (=> (not res!39227) (not e!48471))))

(assert (=> b!74162 (= res!39227 (inRange!0 (index!3116 lt!33284) (mask!6180 newMap!16)))))

(declare-fun b!74163 () Bool)

(assert (=> b!74163 (= e!48471 (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!33284)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (= (and d!17337 res!39226) b!74162))

(assert (= (and b!74162 res!39227) b!74163))

(assert (=> d!17337 m!71053))

(assert (=> d!17337 m!71203))

(declare-fun m!72953 () Bool)

(assert (=> b!74162 m!72953))

(declare-fun m!72955 () Bool)

(assert (=> b!74163 m!72955))

(assert (=> d!17013 d!17337))

(assert (=> d!17013 d!17091))

(declare-fun b!74167 () Bool)

(declare-fun e!48473 () Option!138)

(assert (=> b!74167 (= e!48473 None!136)))

(declare-fun b!74165 () Bool)

(declare-fun e!48472 () Option!138)

(assert (=> b!74165 (= e!48472 e!48473)))

(declare-fun c!11140 () Bool)

(assert (=> b!74165 (= c!11140 (and ((_ is Cons!1503) (toList!735 lt!33006)) (not (= (_1!1083 (h!2090 (toList!735 lt!33006))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!74164 () Bool)

(assert (=> b!74164 (= e!48472 (Some!137 (_2!1083 (h!2090 (toList!735 lt!33006)))))))

(declare-fun c!11139 () Bool)

(declare-fun d!17339 () Bool)

(assert (=> d!17339 (= c!11139 (and ((_ is Cons!1503) (toList!735 lt!33006)) (= (_1!1083 (h!2090 (toList!735 lt!33006))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!17339 (= (getValueByKey!132 (toList!735 lt!33006) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!48472)))

(declare-fun b!74166 () Bool)

(assert (=> b!74166 (= e!48473 (getValueByKey!132 (t!5068 (toList!735 lt!33006)) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!17339 c!11139) b!74164))

(assert (= (and d!17339 (not c!11139)) b!74165))

(assert (= (and b!74165 c!11140) b!74166))

(assert (= (and b!74165 (not c!11140)) b!74167))

(declare-fun m!72957 () Bool)

(assert (=> b!74166 m!72957))

(assert (=> b!73597 d!17339))

(declare-fun d!17341 () Bool)

(assert (=> d!17341 (= (get!1158 (getValueByKey!132 (toList!735 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2537 (getValueByKey!132 (toList!735 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16861 d!17341))

(declare-fun b!74171 () Bool)

(declare-fun e!48475 () Option!138)

(assert (=> b!74171 (= e!48475 None!136)))

(declare-fun b!74169 () Bool)

(declare-fun e!48474 () Option!138)

(assert (=> b!74169 (= e!48474 e!48475)))

(declare-fun c!11142 () Bool)

(assert (=> b!74169 (= c!11142 (and ((_ is Cons!1503) (toList!735 lt!32666)) (not (= (_1!1083 (h!2090 (toList!735 lt!32666))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!74168 () Bool)

(assert (=> b!74168 (= e!48474 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32666)))))))

(declare-fun d!17343 () Bool)

(declare-fun c!11141 () Bool)

(assert (=> d!17343 (= c!11141 (and ((_ is Cons!1503) (toList!735 lt!32666)) (= (_1!1083 (h!2090 (toList!735 lt!32666))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17343 (= (getValueByKey!132 (toList!735 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000) e!48474)))

(declare-fun b!74170 () Bool)

(assert (=> b!74170 (= e!48475 (getValueByKey!132 (t!5068 (toList!735 lt!32666)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17343 c!11141) b!74168))

(assert (= (and d!17343 (not c!11141)) b!74169))

(assert (= (and b!74169 c!11142) b!74170))

(assert (= (and b!74169 (not c!11142)) b!74171))

(declare-fun m!72959 () Bool)

(assert (=> b!74170 m!72959))

(assert (=> d!16861 d!17343))

(declare-fun d!17345 () Bool)

(declare-fun lt!33285 () Bool)

(assert (=> d!17345 (= lt!33285 (select (content!76 (t!5068 (toList!735 lt!32717))) lt!32482))))

(declare-fun e!48476 () Bool)

(assert (=> d!17345 (= lt!33285 e!48476)))

(declare-fun res!39229 () Bool)

(assert (=> d!17345 (=> (not res!39229) (not e!48476))))

(assert (=> d!17345 (= res!39229 ((_ is Cons!1503) (t!5068 (toList!735 lt!32717))))))

(assert (=> d!17345 (= (contains!730 (t!5068 (toList!735 lt!32717)) lt!32482) lt!33285)))

(declare-fun b!74172 () Bool)

(declare-fun e!48477 () Bool)

(assert (=> b!74172 (= e!48476 e!48477)))

(declare-fun res!39228 () Bool)

(assert (=> b!74172 (=> res!39228 e!48477)))

(assert (=> b!74172 (= res!39228 (= (h!2090 (t!5068 (toList!735 lt!32717))) lt!32482))))

(declare-fun b!74173 () Bool)

(assert (=> b!74173 (= e!48477 (contains!730 (t!5068 (t!5068 (toList!735 lt!32717))) lt!32482))))

(assert (= (and d!17345 res!39229) b!74172))

(assert (= (and b!74172 (not res!39228)) b!74173))

(declare-fun m!72961 () Bool)

(assert (=> d!17345 m!72961))

(declare-fun m!72963 () Bool)

(assert (=> d!17345 m!72963))

(declare-fun m!72965 () Bool)

(assert (=> b!74173 m!72965))

(assert (=> b!73472 d!17345))

(declare-fun d!17347 () Bool)

(declare-fun res!39230 () Bool)

(declare-fun e!48478 () Bool)

(assert (=> d!17347 (=> res!39230 e!48478)))

(assert (=> d!17347 (= res!39230 (and ((_ is Cons!1503) lt!33050) (= (_1!1083 (h!2090 lt!33050)) (_1!1083 lt!32482))))))

(assert (=> d!17347 (= (containsKey!136 lt!33050 (_1!1083 lt!32482)) e!48478)))

(declare-fun b!74174 () Bool)

(declare-fun e!48479 () Bool)

(assert (=> b!74174 (= e!48478 e!48479)))

(declare-fun res!39231 () Bool)

(assert (=> b!74174 (=> (not res!39231) (not e!48479))))

(assert (=> b!74174 (= res!39231 (and (or (not ((_ is Cons!1503) lt!33050)) (bvsle (_1!1083 (h!2090 lt!33050)) (_1!1083 lt!32482))) ((_ is Cons!1503) lt!33050) (bvslt (_1!1083 (h!2090 lt!33050)) (_1!1083 lt!32482))))))

(declare-fun b!74175 () Bool)

(assert (=> b!74175 (= e!48479 (containsKey!136 (t!5068 lt!33050) (_1!1083 lt!32482)))))

(assert (= (and d!17347 (not res!39230)) b!74174))

(assert (= (and b!74174 res!39231) b!74175))

(declare-fun m!72967 () Bool)

(assert (=> b!74175 m!72967))

(assert (=> b!73673 d!17347))

(declare-fun d!17349 () Bool)

(assert (=> d!17349 (= (get!1158 (getValueByKey!132 (toList!735 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2537 (getValueByKey!132 (toList!735 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16893 d!17349))

(assert (=> d!16893 d!17161))

(declare-fun d!17351 () Bool)

(declare-fun res!39232 () Bool)

(declare-fun e!48480 () Bool)

(assert (=> d!17351 (=> res!39232 e!48480)))

(assert (=> d!17351 (= res!39232 (and ((_ is Cons!1503) (toList!735 lt!32666)) (= (_1!1083 (h!2090 (toList!735 lt!32666))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!17351 (= (containsKey!136 (toList!735 lt!32666) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!48480)))

(declare-fun b!74176 () Bool)

(declare-fun e!48481 () Bool)

(assert (=> b!74176 (= e!48480 e!48481)))

(declare-fun res!39233 () Bool)

(assert (=> b!74176 (=> (not res!39233) (not e!48481))))

(assert (=> b!74176 (= res!39233 (and (or (not ((_ is Cons!1503) (toList!735 lt!32666))) (bvsle (_1!1083 (h!2090 (toList!735 lt!32666))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1503) (toList!735 lt!32666)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32666))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!74177 () Bool)

(assert (=> b!74177 (= e!48481 (containsKey!136 (t!5068 (toList!735 lt!32666)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!17351 (not res!39232)) b!74176))

(assert (= (and b!74176 res!39233) b!74177))

(assert (=> b!74177 m!71227))

(declare-fun m!72969 () Bool)

(assert (=> b!74177 m!72969))

(assert (=> d!16911 d!17351))

(declare-fun d!17353 () Bool)

(assert (=> d!17353 (= (get!1157 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73372 d!17353))

(declare-fun d!17355 () Bool)

(declare-fun lt!33286 () Bool)

(assert (=> d!17355 (= lt!33286 (select (content!76 (toList!735 lt!32887)) (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun e!48482 () Bool)

(assert (=> d!17355 (= lt!33286 e!48482)))

(declare-fun res!39235 () Bool)

(assert (=> d!17355 (=> (not res!39235) (not e!48482))))

(assert (=> d!17355 (= res!39235 ((_ is Cons!1503) (toList!735 lt!32887)))))

(assert (=> d!17355 (= (contains!730 (toList!735 lt!32887) (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!33286)))

(declare-fun b!74178 () Bool)

(declare-fun e!48483 () Bool)

(assert (=> b!74178 (= e!48482 e!48483)))

(declare-fun res!39234 () Bool)

(assert (=> b!74178 (=> res!39234 e!48483)))

(assert (=> b!74178 (= res!39234 (= (h!2090 (toList!735 lt!32887)) (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!74179 () Bool)

(assert (=> b!74179 (= e!48483 (contains!730 (t!5068 (toList!735 lt!32887)) (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(assert (= (and d!17355 res!39235) b!74178))

(assert (= (and b!74178 (not res!39234)) b!74179))

(declare-fun m!72971 () Bool)

(assert (=> d!17355 m!72971))

(declare-fun m!72973 () Bool)

(assert (=> d!17355 m!72973))

(declare-fun m!72975 () Bool)

(assert (=> b!74179 m!72975))

(assert (=> b!73516 d!17355))

(declare-fun d!17357 () Bool)

(assert (=> d!17357 (= (apply!75 lt!32819 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1158 (getValueByKey!132 (toList!735 lt!32819) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3181 () Bool)

(assert (= bs!3181 d!17357))

(assert (=> bs!3181 m!71397))

(declare-fun m!72977 () Bool)

(assert (=> bs!3181 m!72977))

(assert (=> bs!3181 m!72977))

(declare-fun m!72979 () Bool)

(assert (=> bs!3181 m!72979))

(assert (=> b!73365 d!17357))

(declare-fun d!17359 () Bool)

(declare-fun c!11143 () Bool)

(assert (=> d!17359 (= c!11143 ((_ is ValueCellFull!894) (select (arr!1859 (ite c!10836 (_values!2196 newMap!16) lt!32608)) #b00000000000000000000000000000000)))))

(declare-fun e!48484 () V!2947)

(assert (=> d!17359 (= (get!1154 (select (arr!1859 (ite c!10836 (_values!2196 newMap!16) lt!32608)) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!48484)))

(declare-fun b!74180 () Bool)

(assert (=> b!74180 (= e!48484 (get!1156 (select (arr!1859 (ite c!10836 (_values!2196 newMap!16) lt!32608)) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74181 () Bool)

(assert (=> b!74181 (= e!48484 (get!1157 (select (arr!1859 (ite c!10836 (_values!2196 newMap!16) lt!32608)) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17359 c!11143) b!74180))

(assert (= (and d!17359 (not c!11143)) b!74181))

(assert (=> b!74180 m!71639))

(assert (=> b!74180 m!71521))

(declare-fun m!72981 () Bool)

(assert (=> b!74180 m!72981))

(assert (=> b!74181 m!71639))

(assert (=> b!74181 m!71521))

(declare-fun m!72983 () Bool)

(assert (=> b!74181 m!72983))

(assert (=> b!73365 d!17359))

(declare-fun d!17361 () Bool)

(declare-fun e!48486 () Bool)

(assert (=> d!17361 e!48486))

(declare-fun res!39236 () Bool)

(assert (=> d!17361 (=> res!39236 e!48486)))

(declare-fun lt!33289 () Bool)

(assert (=> d!17361 (= res!39236 (not lt!33289))))

(declare-fun lt!33287 () Bool)

(assert (=> d!17361 (= lt!33289 lt!33287)))

(declare-fun lt!33288 () Unit!2086)

(declare-fun e!48485 () Unit!2086)

(assert (=> d!17361 (= lt!33288 e!48485)))

(declare-fun c!11144 () Bool)

(assert (=> d!17361 (= c!11144 lt!33287)))

(assert (=> d!17361 (= lt!33287 (containsKey!136 (toList!735 lt!33006) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!17361 (= (contains!729 lt!33006 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!33289)))

(declare-fun b!74182 () Bool)

(declare-fun lt!33290 () Unit!2086)

(assert (=> b!74182 (= e!48485 lt!33290)))

(assert (=> b!74182 (= lt!33290 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!33006) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!74182 (isDefined!86 (getValueByKey!132 (toList!735 lt!33006) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!74183 () Bool)

(declare-fun Unit!2135 () Unit!2086)

(assert (=> b!74183 (= e!48485 Unit!2135)))

(declare-fun b!74184 () Bool)

(assert (=> b!74184 (= e!48486 (isDefined!86 (getValueByKey!132 (toList!735 lt!33006) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!17361 c!11144) b!74182))

(assert (= (and d!17361 (not c!11144)) b!74183))

(assert (= (and d!17361 (not res!39236)) b!74184))

(declare-fun m!72985 () Bool)

(assert (=> d!17361 m!72985))

(declare-fun m!72987 () Bool)

(assert (=> b!74182 m!72987))

(assert (=> b!74182 m!71991))

(assert (=> b!74182 m!71991))

(declare-fun m!72989 () Bool)

(assert (=> b!74182 m!72989))

(assert (=> b!74184 m!71991))

(assert (=> b!74184 m!71991))

(assert (=> b!74184 m!72989))

(assert (=> d!16989 d!17361))

(declare-fun b!74188 () Bool)

(declare-fun e!48488 () Option!138)

(assert (=> b!74188 (= e!48488 None!136)))

(declare-fun b!74186 () Bool)

(declare-fun e!48487 () Option!138)

(assert (=> b!74186 (= e!48487 e!48488)))

(declare-fun c!11146 () Bool)

(assert (=> b!74186 (= c!11146 (and ((_ is Cons!1503) lt!33005) (not (= (_1!1083 (h!2090 lt!33005)) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!74185 () Bool)

(assert (=> b!74185 (= e!48487 (Some!137 (_2!1083 (h!2090 lt!33005))))))

(declare-fun d!17363 () Bool)

(declare-fun c!11145 () Bool)

(assert (=> d!17363 (= c!11145 (and ((_ is Cons!1503) lt!33005) (= (_1!1083 (h!2090 lt!33005)) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!17363 (= (getValueByKey!132 lt!33005 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!48487)))

(declare-fun b!74187 () Bool)

(assert (=> b!74187 (= e!48488 (getValueByKey!132 (t!5068 lt!33005) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!17363 c!11145) b!74185))

(assert (= (and d!17363 (not c!11145)) b!74186))

(assert (= (and b!74186 c!11146) b!74187))

(assert (= (and b!74186 (not c!11146)) b!74188))

(declare-fun m!72991 () Bool)

(assert (=> b!74187 m!72991))

(assert (=> d!16989 d!17363))

(declare-fun d!17365 () Bool)

(assert (=> d!17365 (= (getValueByKey!132 lt!33005 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!137 (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!33291 () Unit!2086)

(assert (=> d!17365 (= lt!33291 (choose!422 lt!33005 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!48489 () Bool)

(assert (=> d!17365 e!48489))

(declare-fun res!39237 () Bool)

(assert (=> d!17365 (=> (not res!39237) (not e!48489))))

(assert (=> d!17365 (= res!39237 (isStrictlySorted!287 lt!33005))))

(assert (=> d!17365 (= (lemmaContainsTupThenGetReturnValue!51 lt!33005 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!33291)))

(declare-fun b!74189 () Bool)

(declare-fun res!39238 () Bool)

(assert (=> b!74189 (=> (not res!39238) (not e!48489))))

(assert (=> b!74189 (= res!39238 (containsKey!136 lt!33005 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!74190 () Bool)

(assert (=> b!74190 (= e!48489 (contains!730 lt!33005 (tuple2!2147 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!17365 res!39237) b!74189))

(assert (= (and b!74189 res!39238) b!74190))

(assert (=> d!17365 m!71985))

(declare-fun m!72993 () Bool)

(assert (=> d!17365 m!72993))

(declare-fun m!72995 () Bool)

(assert (=> d!17365 m!72995))

(declare-fun m!72997 () Bool)

(assert (=> b!74189 m!72997))

(declare-fun m!72999 () Bool)

(assert (=> b!74190 m!72999))

(assert (=> d!16989 d!17365))

(declare-fun b!74191 () Bool)

(declare-fun e!48490 () List!1507)

(declare-fun call!6556 () List!1507)

(assert (=> b!74191 (= e!48490 call!6556)))

(declare-fun b!74192 () Bool)

(declare-fun e!48492 () List!1507)

(declare-fun call!6555 () List!1507)

(assert (=> b!74192 (= e!48492 call!6555)))

(declare-fun bm!6552 () Bool)

(declare-fun call!6557 () List!1507)

(declare-fun c!11148 () Bool)

(declare-fun e!48493 () List!1507)

(assert (=> bm!6552 (= call!6557 ($colon$colon!65 e!48493 (ite c!11148 (h!2090 (toList!735 call!6441)) (tuple2!2147 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!11149 () Bool)

(assert (=> bm!6552 (= c!11149 c!11148)))

(declare-fun b!74194 () Bool)

(declare-fun res!39240 () Bool)

(declare-fun e!48491 () Bool)

(assert (=> b!74194 (=> (not res!39240) (not e!48491))))

(declare-fun lt!33292 () List!1507)

(assert (=> b!74194 (= res!39240 (containsKey!136 lt!33292 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!74195 () Bool)

(declare-fun e!48494 () List!1507)

(assert (=> b!74195 (= e!48494 call!6557)))

(declare-fun b!74196 () Bool)

(declare-fun c!11147 () Bool)

(declare-fun c!11150 () Bool)

(assert (=> b!74196 (= e!48493 (ite c!11150 (t!5068 (toList!735 call!6441)) (ite c!11147 (Cons!1503 (h!2090 (toList!735 call!6441)) (t!5068 (toList!735 call!6441))) Nil!1504)))))

(declare-fun b!74197 () Bool)

(assert (=> b!74197 (= e!48493 (insertStrictlySorted!53 (t!5068 (toList!735 call!6441)) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!74198 () Bool)

(assert (=> b!74198 (= e!48491 (contains!730 lt!33292 (tuple2!2147 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!6553 () Bool)

(assert (=> bm!6553 (= call!6556 call!6557)))

(declare-fun b!74199 () Bool)

(assert (=> b!74199 (= e!48494 e!48490)))

(assert (=> b!74199 (= c!11150 (and ((_ is Cons!1503) (toList!735 call!6441)) (= (_1!1083 (h!2090 (toList!735 call!6441))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!74193 () Bool)

(assert (=> b!74193 (= c!11147 (and ((_ is Cons!1503) (toList!735 call!6441)) (bvsgt (_1!1083 (h!2090 (toList!735 call!6441))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!74193 (= e!48490 e!48492)))

(declare-fun d!17367 () Bool)

(assert (=> d!17367 e!48491))

(declare-fun res!39239 () Bool)

(assert (=> d!17367 (=> (not res!39239) (not e!48491))))

(assert (=> d!17367 (= res!39239 (isStrictlySorted!287 lt!33292))))

(assert (=> d!17367 (= lt!33292 e!48494)))

(assert (=> d!17367 (= c!11148 (and ((_ is Cons!1503) (toList!735 call!6441)) (bvslt (_1!1083 (h!2090 (toList!735 call!6441))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!17367 (isStrictlySorted!287 (toList!735 call!6441))))

(assert (=> d!17367 (= (insertStrictlySorted!53 (toList!735 call!6441) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!33292)))

(declare-fun b!74200 () Bool)

(assert (=> b!74200 (= e!48492 call!6555)))

(declare-fun bm!6554 () Bool)

(assert (=> bm!6554 (= call!6555 call!6556)))

(assert (= (and d!17367 c!11148) b!74195))

(assert (= (and d!17367 (not c!11148)) b!74199))

(assert (= (and b!74199 c!11150) b!74191))

(assert (= (and b!74199 (not c!11150)) b!74193))

(assert (= (and b!74193 c!11147) b!74200))

(assert (= (and b!74193 (not c!11147)) b!74192))

(assert (= (or b!74200 b!74192) bm!6554))

(assert (= (or b!74191 bm!6554) bm!6553))

(assert (= (or b!74195 bm!6553) bm!6552))

(assert (= (and bm!6552 c!11149) b!74197))

(assert (= (and bm!6552 (not c!11149)) b!74196))

(assert (= (and d!17367 res!39239) b!74194))

(assert (= (and b!74194 res!39240) b!74198))

(declare-fun m!73001 () Bool)

(assert (=> b!74194 m!73001))

(declare-fun m!73003 () Bool)

(assert (=> d!17367 m!73003))

(declare-fun m!73005 () Bool)

(assert (=> d!17367 m!73005))

(declare-fun m!73007 () Bool)

(assert (=> b!74197 m!73007))

(declare-fun m!73009 () Bool)

(assert (=> b!74198 m!73009))

(declare-fun m!73011 () Bool)

(assert (=> bm!6552 m!73011))

(assert (=> d!16989 d!17367))

(declare-fun b!74204 () Bool)

(declare-fun e!48496 () Option!138)

(assert (=> b!74204 (= e!48496 None!136)))

(declare-fun b!74202 () Bool)

(declare-fun e!48495 () Option!138)

(assert (=> b!74202 (= e!48495 e!48496)))

(declare-fun c!11152 () Bool)

(assert (=> b!74202 (= c!11152 (and ((_ is Cons!1503) (t!5068 (toList!735 lt!32480))) (not (= (_1!1083 (h!2090 (t!5068 (toList!735 lt!32480)))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))))

(declare-fun b!74201 () Bool)

(assert (=> b!74201 (= e!48495 (Some!137 (_2!1083 (h!2090 (t!5068 (toList!735 lt!32480))))))))

(declare-fun c!11151 () Bool)

(declare-fun d!17369 () Bool)

(assert (=> d!17369 (= c!11151 (and ((_ is Cons!1503) (t!5068 (toList!735 lt!32480))) (= (_1!1083 (h!2090 (t!5068 (toList!735 lt!32480)))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))))

(assert (=> d!17369 (= (getValueByKey!132 (t!5068 (toList!735 lt!32480)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) e!48495)))

(declare-fun b!74203 () Bool)

(assert (=> b!74203 (= e!48496 (getValueByKey!132 (t!5068 (t!5068 (toList!735 lt!32480))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (= (and d!17369 c!11151) b!74201))

(assert (= (and d!17369 (not c!11151)) b!74202))

(assert (= (and b!74202 c!11152) b!74203))

(assert (= (and b!74202 (not c!11152)) b!74204))

(assert (=> b!74203 m!71053))

(declare-fun m!73013 () Bool)

(assert (=> b!74203 m!73013))

(assert (=> b!73369 d!17369))

(declare-fun d!17371 () Bool)

(assert (=> d!17371 (= (get!1158 (getValueByKey!132 (toList!735 lt!32666) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2537 (getValueByKey!132 (toList!735 lt!32666) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16919 d!17371))

(declare-fun b!74208 () Bool)

(declare-fun e!48498 () Option!138)

(assert (=> b!74208 (= e!48498 None!136)))

(declare-fun b!74206 () Bool)

(declare-fun e!48497 () Option!138)

(assert (=> b!74206 (= e!48497 e!48498)))

(declare-fun c!11154 () Bool)

(assert (=> b!74206 (= c!11154 (and ((_ is Cons!1503) (toList!735 lt!32666)) (not (= (_1!1083 (h!2090 (toList!735 lt!32666))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!74205 () Bool)

(assert (=> b!74205 (= e!48497 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32666)))))))

(declare-fun d!17373 () Bool)

(declare-fun c!11153 () Bool)

(assert (=> d!17373 (= c!11153 (and ((_ is Cons!1503) (toList!735 lt!32666)) (= (_1!1083 (h!2090 (toList!735 lt!32666))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!17373 (= (getValueByKey!132 (toList!735 lt!32666) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!48497)))

(declare-fun b!74207 () Bool)

(assert (=> b!74207 (= e!48498 (getValueByKey!132 (t!5068 (toList!735 lt!32666)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!17373 c!11153) b!74205))

(assert (= (and d!17373 (not c!11153)) b!74206))

(assert (= (and b!74206 c!11154) b!74207))

(assert (= (and b!74206 (not c!11154)) b!74208))

(assert (=> b!74207 m!71227))

(declare-fun m!73015 () Bool)

(assert (=> b!74207 m!73015))

(assert (=> d!16919 d!17373))

(declare-fun d!17375 () Bool)

(declare-fun res!39241 () Bool)

(declare-fun e!48499 () Bool)

(assert (=> d!17375 (=> res!39241 e!48499)))

(assert (=> d!17375 (= res!39241 (or ((_ is Nil!1504) lt!33002) ((_ is Nil!1504) (t!5068 lt!33002))))))

(assert (=> d!17375 (= (isStrictlySorted!287 lt!33002) e!48499)))

(declare-fun b!74209 () Bool)

(declare-fun e!48500 () Bool)

(assert (=> b!74209 (= e!48499 e!48500)))

(declare-fun res!39242 () Bool)

(assert (=> b!74209 (=> (not res!39242) (not e!48500))))

(assert (=> b!74209 (= res!39242 (bvslt (_1!1083 (h!2090 lt!33002)) (_1!1083 (h!2090 (t!5068 lt!33002)))))))

(declare-fun b!74210 () Bool)

(assert (=> b!74210 (= e!48500 (isStrictlySorted!287 (t!5068 lt!33002)))))

(assert (= (and d!17375 (not res!39241)) b!74209))

(assert (= (and b!74209 res!39242) b!74210))

(declare-fun m!73017 () Bool)

(assert (=> b!74210 m!73017))

(assert (=> d!16987 d!17375))

(declare-fun d!17377 () Bool)

(declare-fun res!39243 () Bool)

(declare-fun e!48501 () Bool)

(assert (=> d!17377 (=> res!39243 e!48501)))

(assert (=> d!17377 (= res!39243 (or ((_ is Nil!1504) (toList!735 (+!98 lt!32476 lt!32482))) ((_ is Nil!1504) (t!5068 (toList!735 (+!98 lt!32476 lt!32482))))))))

(assert (=> d!17377 (= (isStrictlySorted!287 (toList!735 (+!98 lt!32476 lt!32482))) e!48501)))

(declare-fun b!74211 () Bool)

(declare-fun e!48502 () Bool)

(assert (=> b!74211 (= e!48501 e!48502)))

(declare-fun res!39244 () Bool)

(assert (=> b!74211 (=> (not res!39244) (not e!48502))))

(assert (=> b!74211 (= res!39244 (bvslt (_1!1083 (h!2090 (toList!735 (+!98 lt!32476 lt!32482)))) (_1!1083 (h!2090 (t!5068 (toList!735 (+!98 lt!32476 lt!32482)))))))))

(declare-fun b!74212 () Bool)

(assert (=> b!74212 (= e!48502 (isStrictlySorted!287 (t!5068 (toList!735 (+!98 lt!32476 lt!32482)))))))

(assert (= (and d!17377 (not res!39243)) b!74211))

(assert (= (and b!74211 res!39244) b!74212))

(assert (=> b!74212 m!72683))

(assert (=> d!16987 d!17377))

(declare-fun b!74216 () Bool)

(declare-fun e!48504 () Option!138)

(assert (=> b!74216 (= e!48504 None!136)))

(declare-fun b!74214 () Bool)

(declare-fun e!48503 () Option!138)

(assert (=> b!74214 (= e!48503 e!48504)))

(declare-fun c!11156 () Bool)

(assert (=> b!74214 (= c!11156 (and ((_ is Cons!1503) (toList!735 lt!32788)) (not (= (_1!1083 (h!2090 (toList!735 lt!32788))) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun b!74213 () Bool)

(assert (=> b!74213 (= e!48503 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32788)))))))

(declare-fun d!17379 () Bool)

(declare-fun c!11155 () Bool)

(assert (=> d!17379 (= c!11155 (and ((_ is Cons!1503) (toList!735 lt!32788)) (= (_1!1083 (h!2090 (toList!735 lt!32788))) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17379 (= (getValueByKey!132 (toList!735 lt!32788) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) e!48503)))

(declare-fun b!74215 () Bool)

(assert (=> b!74215 (= e!48504 (getValueByKey!132 (t!5068 (toList!735 lt!32788)) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (= (and d!17379 c!11155) b!74213))

(assert (= (and d!17379 (not c!11155)) b!74214))

(assert (= (and b!74214 c!11156) b!74215))

(assert (= (and b!74214 (not c!11156)) b!74216))

(declare-fun m!73019 () Bool)

(assert (=> b!74215 m!73019))

(assert (=> b!73332 d!17379))

(declare-fun d!17381 () Bool)

(assert (=> d!17381 (contains!729 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))

(declare-fun lt!33295 () Unit!2086)

(declare-fun choose!431 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 64) (_ BitVec 32) Int) Unit!2086)

(assert (=> d!17381 (= lt!33295 (choose!431 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(assert (=> d!17381 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17381 (= (lemmaArrayContainsKeyThenInListMap!13 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33295)))

(declare-fun bs!3182 () Bool)

(assert (= bs!3182 d!17381))

(assert (=> bs!3182 m!71191))

(assert (=> bs!3182 m!71191))

(assert (=> bs!3182 m!71053))

(assert (=> bs!3182 m!71919))

(assert (=> bs!3182 m!71053))

(declare-fun m!73021 () Bool)

(assert (=> bs!3182 m!73021))

(assert (=> bs!3182 m!71423))

(assert (=> b!73575 d!17381))

(declare-fun d!17383 () Bool)

(declare-fun e!48506 () Bool)

(assert (=> d!17383 e!48506))

(declare-fun res!39245 () Bool)

(assert (=> d!17383 (=> res!39245 e!48506)))

(declare-fun lt!33298 () Bool)

(assert (=> d!17383 (= res!39245 (not lt!33298))))

(declare-fun lt!33296 () Bool)

(assert (=> d!17383 (= lt!33298 lt!33296)))

(declare-fun lt!33297 () Unit!2086)

(declare-fun e!48505 () Unit!2086)

(assert (=> d!17383 (= lt!33297 e!48505)))

(declare-fun c!11157 () Bool)

(assert (=> d!17383 (= c!11157 lt!33296)))

(assert (=> d!17383 (= lt!33296 (containsKey!136 (toList!735 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> d!17383 (= (contains!729 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) lt!33298)))

(declare-fun b!74217 () Bool)

(declare-fun lt!33299 () Unit!2086)

(assert (=> b!74217 (= e!48505 lt!33299)))

(assert (=> b!74217 (= lt!33299 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> b!74217 (isDefined!86 (getValueByKey!132 (toList!735 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun b!74218 () Bool)

(declare-fun Unit!2136 () Unit!2086)

(assert (=> b!74218 (= e!48505 Unit!2136)))

(declare-fun b!74219 () Bool)

(assert (=> b!74219 (= e!48506 (isDefined!86 (getValueByKey!132 (toList!735 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))))

(assert (= (and d!17383 c!11157) b!74217))

(assert (= (and d!17383 (not c!11157)) b!74218))

(assert (= (and d!17383 (not res!39245)) b!74219))

(assert (=> d!17383 m!71053))

(declare-fun m!73023 () Bool)

(assert (=> d!17383 m!73023))

(assert (=> b!74217 m!71053))

(declare-fun m!73025 () Bool)

(assert (=> b!74217 m!73025))

(assert (=> b!74217 m!71053))

(declare-fun m!73027 () Bool)

(assert (=> b!74217 m!73027))

(assert (=> b!74217 m!73027))

(declare-fun m!73029 () Bool)

(assert (=> b!74217 m!73029))

(assert (=> b!74219 m!71053))

(assert (=> b!74219 m!73027))

(assert (=> b!74219 m!73027))

(assert (=> b!74219 m!73029))

(assert (=> b!73575 d!17383))

(assert (=> b!73575 d!16873))

(declare-fun b!74220 () Bool)

(declare-fun e!48507 () (_ BitVec 32))

(declare-fun call!6558 () (_ BitVec 32))

(assert (=> b!74220 (= e!48507 call!6558)))

(declare-fun b!74221 () Bool)

(declare-fun e!48508 () (_ BitVec 32))

(assert (=> b!74221 (= e!48508 e!48507)))

(declare-fun c!11158 () Bool)

(assert (=> b!74221 (= c!11158 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6555 () Bool)

(assert (=> bm!6555 (= call!6558 (arrayCountValidKeys!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!74222 () Bool)

(assert (=> b!74222 (= e!48508 #b00000000000000000000000000000000)))

(declare-fun b!74223 () Bool)

(assert (=> b!74223 (= e!48507 (bvadd #b00000000000000000000000000000001 call!6558))))

(declare-fun d!17385 () Bool)

(declare-fun lt!33300 () (_ BitVec 32))

(assert (=> d!17385 (and (bvsge lt!33300 #b00000000000000000000000000000000) (bvsle lt!33300 (bvsub (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!17385 (= lt!33300 e!48508)))

(declare-fun c!11159 () Bool)

(assert (=> d!17385 (= c!11159 (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(assert (=> d!17385 (and (bvsle #b00000000000000000000000000000000 (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(assert (=> d!17385 (= (arrayCountValidKeys!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000000 (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))) lt!33300)))

(assert (= (and d!17385 c!11159) b!74222))

(assert (= (and d!17385 (not c!11159)) b!74221))

(assert (= (and b!74221 c!11158) b!74223))

(assert (= (and b!74221 (not c!11158)) b!74220))

(assert (= (or b!74223 b!74220) bm!6555))

(declare-fun m!73031 () Bool)

(assert (=> b!74221 m!73031))

(assert (=> b!74221 m!73031))

(declare-fun m!73033 () Bool)

(assert (=> b!74221 m!73033))

(declare-fun m!73035 () Bool)

(assert (=> bm!6555 m!73035))

(assert (=> b!73383 d!17385))

(declare-fun d!17387 () Bool)

(assert (=> d!17387 (= (apply!75 lt!33062 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1158 (getValueByKey!132 (toList!735 lt!33062) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3183 () Bool)

(assert (= bs!3183 d!17387))

(assert (=> bs!3183 m!71397))

(declare-fun m!73037 () Bool)

(assert (=> bs!3183 m!73037))

(assert (=> bs!3183 m!73037))

(declare-fun m!73039 () Bool)

(assert (=> bs!3183 m!73039))

(assert (=> b!73701 d!17387))

(declare-fun c!11160 () Bool)

(declare-fun d!17389 () Bool)

(assert (=> d!17389 (= c!11160 ((_ is ValueCellFull!894) (select (arr!1859 (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!48509 () V!2947)

(assert (=> d!17389 (= (get!1154 (select (arr!1859 (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!48509)))

(declare-fun b!74224 () Bool)

(assert (=> b!74224 (= e!48509 (get!1156 (select (arr!1859 (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74225 () Bool)

(assert (=> b!74225 (= e!48509 (get!1157 (select (arr!1859 (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17389 c!11160) b!74224))

(assert (= (and d!17389 (not c!11160)) b!74225))

(assert (=> b!74224 m!72151))

(assert (=> b!74224 m!71521))

(declare-fun m!73041 () Bool)

(assert (=> b!74224 m!73041))

(assert (=> b!74225 m!72151))

(assert (=> b!74225 m!71521))

(declare-fun m!73043 () Bool)

(assert (=> b!74225 m!73043))

(assert (=> b!73701 d!17389))

(declare-fun d!17391 () Bool)

(declare-fun lt!33301 () Bool)

(assert (=> d!17391 (= lt!33301 (select (content!76 (t!5068 (toList!735 lt!32725))) lt!32472))))

(declare-fun e!48510 () Bool)

(assert (=> d!17391 (= lt!33301 e!48510)))

(declare-fun res!39247 () Bool)

(assert (=> d!17391 (=> (not res!39247) (not e!48510))))

(assert (=> d!17391 (= res!39247 ((_ is Cons!1503) (t!5068 (toList!735 lt!32725))))))

(assert (=> d!17391 (= (contains!730 (t!5068 (toList!735 lt!32725)) lt!32472) lt!33301)))

(declare-fun b!74226 () Bool)

(declare-fun e!48511 () Bool)

(assert (=> b!74226 (= e!48510 e!48511)))

(declare-fun res!39246 () Bool)

(assert (=> b!74226 (=> res!39246 e!48511)))

(assert (=> b!74226 (= res!39246 (= (h!2090 (t!5068 (toList!735 lt!32725))) lt!32472))))

(declare-fun b!74227 () Bool)

(assert (=> b!74227 (= e!48511 (contains!730 (t!5068 (t!5068 (toList!735 lt!32725))) lt!32472))))

(assert (= (and d!17391 res!39247) b!74226))

(assert (= (and b!74226 (not res!39246)) b!74227))

(declare-fun m!73045 () Bool)

(assert (=> d!17391 m!73045))

(declare-fun m!73047 () Bool)

(assert (=> d!17391 m!73047))

(declare-fun m!73049 () Bool)

(assert (=> b!74227 m!73049))

(assert (=> b!73660 d!17391))

(declare-fun d!17393 () Bool)

(declare-fun e!48512 () Bool)

(assert (=> d!17393 e!48512))

(declare-fun res!39248 () Bool)

(assert (=> d!17393 (=> (not res!39248) (not e!48512))))

(declare-fun lt!33305 () ListLongMap!1439)

(assert (=> d!17393 (= res!39248 (contains!729 lt!33305 (_1!1083 (tuple2!2147 lt!32827 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))))))

(declare-fun lt!33304 () List!1507)

(assert (=> d!17393 (= lt!33305 (ListLongMap!1440 lt!33304))))

(declare-fun lt!33302 () Unit!2086)

(declare-fun lt!33303 () Unit!2086)

(assert (=> d!17393 (= lt!33302 lt!33303)))

(assert (=> d!17393 (= (getValueByKey!132 lt!33304 (_1!1083 (tuple2!2147 lt!32827 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))) (Some!137 (_2!1083 (tuple2!2147 lt!32827 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))))))

(assert (=> d!17393 (= lt!33303 (lemmaContainsTupThenGetReturnValue!51 lt!33304 (_1!1083 (tuple2!2147 lt!32827 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))) (_2!1083 (tuple2!2147 lt!32827 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))))))

(assert (=> d!17393 (= lt!33304 (insertStrictlySorted!53 (toList!735 lt!32817) (_1!1083 (tuple2!2147 lt!32827 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))) (_2!1083 (tuple2!2147 lt!32827 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))))))

(assert (=> d!17393 (= (+!98 lt!32817 (tuple2!2147 lt!32827 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))) lt!33305)))

(declare-fun b!74228 () Bool)

(declare-fun res!39249 () Bool)

(assert (=> b!74228 (=> (not res!39249) (not e!48512))))

(assert (=> b!74228 (= res!39249 (= (getValueByKey!132 (toList!735 lt!33305) (_1!1083 (tuple2!2147 lt!32827 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))) (Some!137 (_2!1083 (tuple2!2147 lt!32827 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))))))))

(declare-fun b!74229 () Bool)

(assert (=> b!74229 (= e!48512 (contains!730 (toList!735 lt!33305) (tuple2!2147 lt!32827 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))))))

(assert (= (and d!17393 res!39248) b!74228))

(assert (= (and b!74228 res!39249) b!74229))

(declare-fun m!73051 () Bool)

(assert (=> d!17393 m!73051))

(declare-fun m!73053 () Bool)

(assert (=> d!17393 m!73053))

(declare-fun m!73055 () Bool)

(assert (=> d!17393 m!73055))

(declare-fun m!73057 () Bool)

(assert (=> d!17393 m!73057))

(declare-fun m!73059 () Bool)

(assert (=> b!74228 m!73059))

(declare-fun m!73061 () Bool)

(assert (=> b!74229 m!73061))

(assert (=> b!73352 d!17393))

(declare-fun d!17395 () Bool)

(assert (=> d!17395 (= (apply!75 lt!32817 lt!32825) (get!1158 (getValueByKey!132 (toList!735 lt!32817) lt!32825)))))

(declare-fun bs!3184 () Bool)

(assert (= bs!3184 d!17395))

(declare-fun m!73063 () Bool)

(assert (=> bs!3184 m!73063))

(assert (=> bs!3184 m!73063))

(declare-fun m!73065 () Bool)

(assert (=> bs!3184 m!73065))

(assert (=> b!73352 d!17395))

(declare-fun d!17397 () Bool)

(assert (=> d!17397 (contains!729 (+!98 lt!32830 (tuple2!2147 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)))) lt!32815)))

(declare-fun lt!33306 () Unit!2086)

(assert (=> d!17397 (= lt!33306 (choose!425 lt!32830 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)) lt!32815))))

(assert (=> d!17397 (contains!729 lt!32830 lt!32815)))

(assert (=> d!17397 (= (addStillContains!51 lt!32830 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)) lt!32815) lt!33306)))

(declare-fun bs!3185 () Bool)

(assert (= bs!3185 d!17397))

(assert (=> bs!3185 m!71609))

(assert (=> bs!3185 m!71609))

(assert (=> bs!3185 m!71615))

(declare-fun m!73067 () Bool)

(assert (=> bs!3185 m!73067))

(declare-fun m!73069 () Bool)

(assert (=> bs!3185 m!73069))

(assert (=> b!73352 d!17397))

(declare-fun d!17399 () Bool)

(declare-fun e!48513 () Bool)

(assert (=> d!17399 e!48513))

(declare-fun res!39250 () Bool)

(assert (=> d!17399 (=> (not res!39250) (not e!48513))))

(declare-fun lt!33310 () ListLongMap!1439)

(assert (=> d!17399 (= res!39250 (contains!729 lt!33310 (_1!1083 (tuple2!2147 lt!32813 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))))))

(declare-fun lt!33309 () List!1507)

(assert (=> d!17399 (= lt!33310 (ListLongMap!1440 lt!33309))))

(declare-fun lt!33307 () Unit!2086)

(declare-fun lt!33308 () Unit!2086)

(assert (=> d!17399 (= lt!33307 lt!33308)))

(assert (=> d!17399 (= (getValueByKey!132 lt!33309 (_1!1083 (tuple2!2147 lt!32813 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))) (Some!137 (_2!1083 (tuple2!2147 lt!32813 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))))))

(assert (=> d!17399 (= lt!33308 (lemmaContainsTupThenGetReturnValue!51 lt!33309 (_1!1083 (tuple2!2147 lt!32813 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))) (_2!1083 (tuple2!2147 lt!32813 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))))))

(assert (=> d!17399 (= lt!33309 (insertStrictlySorted!53 (toList!735 lt!32823) (_1!1083 (tuple2!2147 lt!32813 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))) (_2!1083 (tuple2!2147 lt!32813 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))))))

(assert (=> d!17399 (= (+!98 lt!32823 (tuple2!2147 lt!32813 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))) lt!33310)))

(declare-fun b!74230 () Bool)

(declare-fun res!39251 () Bool)

(assert (=> b!74230 (=> (not res!39251) (not e!48513))))

(assert (=> b!74230 (= res!39251 (= (getValueByKey!132 (toList!735 lt!33310) (_1!1083 (tuple2!2147 lt!32813 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))) (Some!137 (_2!1083 (tuple2!2147 lt!32813 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))))))))

(declare-fun b!74231 () Bool)

(assert (=> b!74231 (= e!48513 (contains!730 (toList!735 lt!33310) (tuple2!2147 lt!32813 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))))))

(assert (= (and d!17399 res!39250) b!74230))

(assert (= (and b!74230 res!39251) b!74231))

(declare-fun m!73071 () Bool)

(assert (=> d!17399 m!73071))

(declare-fun m!73073 () Bool)

(assert (=> d!17399 m!73073))

(declare-fun m!73075 () Bool)

(assert (=> d!17399 m!73075))

(declare-fun m!73077 () Bool)

(assert (=> d!17399 m!73077))

(declare-fun m!73079 () Bool)

(assert (=> b!74230 m!73079))

(declare-fun m!73081 () Bool)

(assert (=> b!74231 m!73081))

(assert (=> b!73352 d!17399))

(declare-fun d!17401 () Bool)

(assert (=> d!17401 (= (apply!75 (+!98 lt!32817 (tuple2!2147 lt!32827 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))) lt!32825) (get!1158 (getValueByKey!132 (toList!735 (+!98 lt!32817 (tuple2!2147 lt!32827 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))) lt!32825)))))

(declare-fun bs!3186 () Bool)

(assert (= bs!3186 d!17401))

(declare-fun m!73083 () Bool)

(assert (=> bs!3186 m!73083))

(assert (=> bs!3186 m!73083))

(declare-fun m!73085 () Bool)

(assert (=> bs!3186 m!73085))

(assert (=> b!73352 d!17401))

(declare-fun d!17403 () Bool)

(assert (=> d!17403 (= (apply!75 (+!98 lt!32823 (tuple2!2147 lt!32813 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))) lt!32811) (get!1158 (getValueByKey!132 (toList!735 (+!98 lt!32823 (tuple2!2147 lt!32813 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))) lt!32811)))))

(declare-fun bs!3187 () Bool)

(assert (= bs!3187 d!17403))

(declare-fun m!73087 () Bool)

(assert (=> bs!3187 m!73087))

(assert (=> bs!3187 m!73087))

(declare-fun m!73089 () Bool)

(assert (=> bs!3187 m!73089))

(assert (=> b!73352 d!17403))

(declare-fun d!17405 () Bool)

(assert (=> d!17405 (= (apply!75 lt!32823 lt!32811) (get!1158 (getValueByKey!132 (toList!735 lt!32823) lt!32811)))))

(declare-fun bs!3188 () Bool)

(assert (= bs!3188 d!17405))

(declare-fun m!73091 () Bool)

(assert (=> bs!3188 m!73091))

(assert (=> bs!3188 m!73091))

(declare-fun m!73093 () Bool)

(assert (=> bs!3188 m!73093))

(assert (=> b!73352 d!17405))

(declare-fun d!17407 () Bool)

(declare-fun e!48515 () Bool)

(assert (=> d!17407 e!48515))

(declare-fun res!39252 () Bool)

(assert (=> d!17407 (=> res!39252 e!48515)))

(declare-fun lt!33313 () Bool)

(assert (=> d!17407 (= res!39252 (not lt!33313))))

(declare-fun lt!33311 () Bool)

(assert (=> d!17407 (= lt!33313 lt!33311)))

(declare-fun lt!33312 () Unit!2086)

(declare-fun e!48514 () Unit!2086)

(assert (=> d!17407 (= lt!33312 e!48514)))

(declare-fun c!11161 () Bool)

(assert (=> d!17407 (= c!11161 lt!33311)))

(assert (=> d!17407 (= lt!33311 (containsKey!136 (toList!735 (+!98 lt!32830 (tuple2!2147 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))))) lt!32815))))

(assert (=> d!17407 (= (contains!729 (+!98 lt!32830 (tuple2!2147 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)))) lt!32815) lt!33313)))

(declare-fun b!74232 () Bool)

(declare-fun lt!33314 () Unit!2086)

(assert (=> b!74232 (= e!48514 lt!33314)))

(assert (=> b!74232 (= lt!33314 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 (+!98 lt!32830 (tuple2!2147 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))))) lt!32815))))

(assert (=> b!74232 (isDefined!86 (getValueByKey!132 (toList!735 (+!98 lt!32830 (tuple2!2147 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))))) lt!32815))))

(declare-fun b!74233 () Bool)

(declare-fun Unit!2137 () Unit!2086)

(assert (=> b!74233 (= e!48514 Unit!2137)))

(declare-fun b!74234 () Bool)

(assert (=> b!74234 (= e!48515 (isDefined!86 (getValueByKey!132 (toList!735 (+!98 lt!32830 (tuple2!2147 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))))) lt!32815)))))

(assert (= (and d!17407 c!11161) b!74232))

(assert (= (and d!17407 (not c!11161)) b!74233))

(assert (= (and d!17407 (not res!39252)) b!74234))

(declare-fun m!73095 () Bool)

(assert (=> d!17407 m!73095))

(declare-fun m!73097 () Bool)

(assert (=> b!74232 m!73097))

(declare-fun m!73099 () Bool)

(assert (=> b!74232 m!73099))

(assert (=> b!74232 m!73099))

(declare-fun m!73101 () Bool)

(assert (=> b!74232 m!73101))

(assert (=> b!74234 m!73099))

(assert (=> b!74234 m!73099))

(assert (=> b!74234 m!73101))

(assert (=> b!73352 d!17407))

(declare-fun d!17409 () Bool)

(assert (=> d!17409 (= (apply!75 (+!98 lt!32828 (tuple2!2147 lt!32818 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)))) lt!32810) (apply!75 lt!32828 lt!32810))))

(declare-fun lt!33315 () Unit!2086)

(assert (=> d!17409 (= lt!33315 (choose!424 lt!32828 lt!32818 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)) lt!32810))))

(declare-fun e!48516 () Bool)

(assert (=> d!17409 e!48516))

(declare-fun res!39253 () Bool)

(assert (=> d!17409 (=> (not res!39253) (not e!48516))))

(assert (=> d!17409 (= res!39253 (contains!729 lt!32828 lt!32810))))

(assert (=> d!17409 (= (addApplyDifferent!51 lt!32828 lt!32818 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)) lt!32810) lt!33315)))

(declare-fun b!74235 () Bool)

(assert (=> b!74235 (= e!48516 (not (= lt!32810 lt!32818)))))

(assert (= (and d!17409 res!39253) b!74235))

(assert (=> d!17409 m!71607))

(assert (=> d!17409 m!71607))

(assert (=> d!17409 m!71625))

(assert (=> d!17409 m!71629))

(declare-fun m!73103 () Bool)

(assert (=> d!17409 m!73103))

(declare-fun m!73105 () Bool)

(assert (=> d!17409 m!73105))

(assert (=> b!73352 d!17409))

(declare-fun d!17411 () Bool)

(assert (=> d!17411 (= (apply!75 (+!98 lt!32828 (tuple2!2147 lt!32818 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)))) lt!32810) (get!1158 (getValueByKey!132 (toList!735 (+!98 lt!32828 (tuple2!2147 lt!32818 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))))) lt!32810)))))

(declare-fun bs!3189 () Bool)

(assert (= bs!3189 d!17411))

(declare-fun m!73107 () Bool)

(assert (=> bs!3189 m!73107))

(assert (=> bs!3189 m!73107))

(declare-fun m!73109 () Bool)

(assert (=> bs!3189 m!73109))

(assert (=> b!73352 d!17411))

(declare-fun d!17413 () Bool)

(declare-fun e!48517 () Bool)

(assert (=> d!17413 e!48517))

(declare-fun res!39254 () Bool)

(assert (=> d!17413 (=> (not res!39254) (not e!48517))))

(declare-fun lt!33319 () ListLongMap!1439)

(assert (=> d!17413 (= res!39254 (contains!729 lt!33319 (_1!1083 (tuple2!2147 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))))))))

(declare-fun lt!33318 () List!1507)

(assert (=> d!17413 (= lt!33319 (ListLongMap!1440 lt!33318))))

(declare-fun lt!33316 () Unit!2086)

(declare-fun lt!33317 () Unit!2086)

(assert (=> d!17413 (= lt!33316 lt!33317)))

(assert (=> d!17413 (= (getValueByKey!132 lt!33318 (_1!1083 (tuple2!2147 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))))) (Some!137 (_2!1083 (tuple2!2147 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))))))))

(assert (=> d!17413 (= lt!33317 (lemmaContainsTupThenGetReturnValue!51 lt!33318 (_1!1083 (tuple2!2147 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)))) (_2!1083 (tuple2!2147 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))))))))

(assert (=> d!17413 (= lt!33318 (insertStrictlySorted!53 (toList!735 lt!32830) (_1!1083 (tuple2!2147 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)))) (_2!1083 (tuple2!2147 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))))))))

(assert (=> d!17413 (= (+!98 lt!32830 (tuple2!2147 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)))) lt!33319)))

(declare-fun b!74236 () Bool)

(declare-fun res!39255 () Bool)

(assert (=> b!74236 (=> (not res!39255) (not e!48517))))

(assert (=> b!74236 (= res!39255 (= (getValueByKey!132 (toList!735 lt!33319) (_1!1083 (tuple2!2147 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))))) (Some!137 (_2!1083 (tuple2!2147 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)))))))))

(declare-fun b!74237 () Bool)

(assert (=> b!74237 (= e!48517 (contains!730 (toList!735 lt!33319) (tuple2!2147 lt!32824 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)))))))

(assert (= (and d!17413 res!39254) b!74236))

(assert (= (and b!74236 res!39255) b!74237))

(declare-fun m!73111 () Bool)

(assert (=> d!17413 m!73111))

(declare-fun m!73113 () Bool)

(assert (=> d!17413 m!73113))

(declare-fun m!73115 () Bool)

(assert (=> d!17413 m!73115))

(declare-fun m!73117 () Bool)

(assert (=> d!17413 m!73117))

(declare-fun m!73119 () Bool)

(assert (=> b!74236 m!73119))

(declare-fun m!73121 () Bool)

(assert (=> b!74237 m!73121))

(assert (=> b!73352 d!17413))

(declare-fun d!17415 () Bool)

(assert (=> d!17415 (= (apply!75 (+!98 lt!32823 (tuple2!2147 lt!32813 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))) lt!32811) (apply!75 lt!32823 lt!32811))))

(declare-fun lt!33320 () Unit!2086)

(assert (=> d!17415 (= lt!33320 (choose!424 lt!32823 lt!32813 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)) lt!32811))))

(declare-fun e!48518 () Bool)

(assert (=> d!17415 e!48518))

(declare-fun res!39256 () Bool)

(assert (=> d!17415 (=> (not res!39256) (not e!48518))))

(assert (=> d!17415 (= res!39256 (contains!729 lt!32823 lt!32811))))

(assert (=> d!17415 (= (addApplyDifferent!51 lt!32823 lt!32813 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)) lt!32811) lt!33320)))

(declare-fun b!74238 () Bool)

(assert (=> b!74238 (= e!48518 (not (= lt!32811 lt!32813)))))

(assert (= (and d!17415 res!39256) b!74238))

(assert (=> d!17415 m!71605))

(assert (=> d!17415 m!71605))

(assert (=> d!17415 m!71619))

(assert (=> d!17415 m!71623))

(declare-fun m!73123 () Bool)

(assert (=> d!17415 m!73123))

(declare-fun m!73125 () Bool)

(assert (=> d!17415 m!73125))

(assert (=> b!73352 d!17415))

(declare-fun d!17417 () Bool)

(assert (=> d!17417 (= (apply!75 (+!98 lt!32817 (tuple2!2147 lt!32827 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))) lt!32825) (apply!75 lt!32817 lt!32825))))

(declare-fun lt!33321 () Unit!2086)

(assert (=> d!17417 (= lt!33321 (choose!424 lt!32817 lt!32827 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)) lt!32825))))

(declare-fun e!48519 () Bool)

(assert (=> d!17417 e!48519))

(declare-fun res!39257 () Bool)

(assert (=> d!17417 (=> (not res!39257) (not e!48519))))

(assert (=> d!17417 (= res!39257 (contains!729 lt!32817 lt!32825))))

(assert (=> d!17417 (= (addApplyDifferent!51 lt!32817 lt!32827 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)) lt!32825) lt!33321)))

(declare-fun b!74239 () Bool)

(assert (=> b!74239 (= e!48519 (not (= lt!32825 lt!32827)))))

(assert (= (and d!17417 res!39257) b!74239))

(assert (=> d!17417 m!71603))

(assert (=> d!17417 m!71603))

(assert (=> d!17417 m!71621))

(assert (=> d!17417 m!71611))

(declare-fun m!73127 () Bool)

(assert (=> d!17417 m!73127))

(declare-fun m!73129 () Bool)

(assert (=> d!17417 m!73129))

(assert (=> b!73352 d!17417))

(declare-fun d!17419 () Bool)

(assert (=> d!17419 (= (apply!75 lt!32828 lt!32810) (get!1158 (getValueByKey!132 (toList!735 lt!32828) lt!32810)))))

(declare-fun bs!3190 () Bool)

(assert (= bs!3190 d!17419))

(declare-fun m!73131 () Bool)

(assert (=> bs!3190 m!73131))

(assert (=> bs!3190 m!73131))

(declare-fun m!73133 () Bool)

(assert (=> bs!3190 m!73133))

(assert (=> b!73352 d!17419))

(declare-fun d!17421 () Bool)

(declare-fun e!48520 () Bool)

(assert (=> d!17421 e!48520))

(declare-fun res!39258 () Bool)

(assert (=> d!17421 (=> (not res!39258) (not e!48520))))

(declare-fun lt!33325 () ListLongMap!1439)

(assert (=> d!17421 (= res!39258 (contains!729 lt!33325 (_1!1083 (tuple2!2147 lt!32818 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))))))))

(declare-fun lt!33324 () List!1507)

(assert (=> d!17421 (= lt!33325 (ListLongMap!1440 lt!33324))))

(declare-fun lt!33322 () Unit!2086)

(declare-fun lt!33323 () Unit!2086)

(assert (=> d!17421 (= lt!33322 lt!33323)))

(assert (=> d!17421 (= (getValueByKey!132 lt!33324 (_1!1083 (tuple2!2147 lt!32818 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))))) (Some!137 (_2!1083 (tuple2!2147 lt!32818 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))))))))

(assert (=> d!17421 (= lt!33323 (lemmaContainsTupThenGetReturnValue!51 lt!33324 (_1!1083 (tuple2!2147 lt!32818 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)))) (_2!1083 (tuple2!2147 lt!32818 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))))))))

(assert (=> d!17421 (= lt!33324 (insertStrictlySorted!53 (toList!735 lt!32828) (_1!1083 (tuple2!2147 lt!32818 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)))) (_2!1083 (tuple2!2147 lt!32818 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))))))))

(assert (=> d!17421 (= (+!98 lt!32828 (tuple2!2147 lt!32818 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)))) lt!33325)))

(declare-fun b!74240 () Bool)

(declare-fun res!39259 () Bool)

(assert (=> b!74240 (=> (not res!39259) (not e!48520))))

(assert (=> b!74240 (= res!39259 (= (getValueByKey!132 (toList!735 lt!33325) (_1!1083 (tuple2!2147 lt!32818 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))))) (Some!137 (_2!1083 (tuple2!2147 lt!32818 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)))))))))

(declare-fun b!74241 () Bool)

(assert (=> b!74241 (= e!48520 (contains!730 (toList!735 lt!33325) (tuple2!2147 lt!32818 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16)))))))

(assert (= (and d!17421 res!39258) b!74240))

(assert (= (and b!74240 res!39259) b!74241))

(declare-fun m!73135 () Bool)

(assert (=> d!17421 m!73135))

(declare-fun m!73137 () Bool)

(assert (=> d!17421 m!73137))

(declare-fun m!73139 () Bool)

(assert (=> d!17421 m!73139))

(declare-fun m!73141 () Bool)

(assert (=> d!17421 m!73141))

(declare-fun m!73143 () Bool)

(assert (=> b!74240 m!73143))

(declare-fun m!73145 () Bool)

(assert (=> b!74241 m!73145))

(assert (=> b!73352 d!17421))

(assert (=> b!73352 d!17311))

(declare-fun d!17423 () Bool)

(declare-fun e!48522 () Bool)

(assert (=> d!17423 e!48522))

(declare-fun res!39260 () Bool)

(assert (=> d!17423 (=> res!39260 e!48522)))

(declare-fun lt!33328 () Bool)

(assert (=> d!17423 (= res!39260 (not lt!33328))))

(declare-fun lt!33326 () Bool)

(assert (=> d!17423 (= lt!33328 lt!33326)))

(declare-fun lt!33327 () Unit!2086)

(declare-fun e!48521 () Unit!2086)

(assert (=> d!17423 (= lt!33327 e!48521)))

(declare-fun c!11162 () Bool)

(assert (=> d!17423 (= c!11162 lt!33326)))

(assert (=> d!17423 (= lt!33326 (containsKey!136 (toList!735 lt!32773) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!17423 (= (contains!729 lt!32773 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) lt!33328)))

(declare-fun b!74242 () Bool)

(declare-fun lt!33329 () Unit!2086)

(assert (=> b!74242 (= e!48521 lt!33329)))

(assert (=> b!74242 (= lt!33329 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32773) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74242 (isDefined!86 (getValueByKey!132 (toList!735 lt!32773) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74243 () Bool)

(declare-fun Unit!2138 () Unit!2086)

(assert (=> b!74243 (= e!48521 Unit!2138)))

(declare-fun b!74244 () Bool)

(assert (=> b!74244 (= e!48522 (isDefined!86 (getValueByKey!132 (toList!735 lt!32773) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!17423 c!11162) b!74242))

(assert (= (and d!17423 (not c!11162)) b!74243))

(assert (= (and d!17423 (not res!39260)) b!74244))

(assert (=> d!17423 m!71397))

(declare-fun m!73147 () Bool)

(assert (=> d!17423 m!73147))

(assert (=> b!74242 m!71397))

(declare-fun m!73149 () Bool)

(assert (=> b!74242 m!73149))

(assert (=> b!74242 m!71397))

(declare-fun m!73151 () Bool)

(assert (=> b!74242 m!73151))

(assert (=> b!74242 m!73151))

(declare-fun m!73153 () Bool)

(assert (=> b!74242 m!73153))

(assert (=> b!74244 m!71397))

(assert (=> b!74244 m!73151))

(assert (=> b!74244 m!73151))

(assert (=> b!74244 m!73153))

(assert (=> b!73314 d!17423))

(declare-fun d!17425 () Bool)

(declare-fun c!11163 () Bool)

(assert (=> d!17425 (= c!11163 ((_ is Nil!1504) (toList!735 lt!32717)))))

(declare-fun e!48523 () (InoxSet tuple2!2146))

(assert (=> d!17425 (= (content!76 (toList!735 lt!32717)) e!48523)))

(declare-fun b!74245 () Bool)

(assert (=> b!74245 (= e!48523 ((as const (Array tuple2!2146 Bool)) false))))

(declare-fun b!74246 () Bool)

(assert (=> b!74246 (= e!48523 ((_ map or) (store ((as const (Array tuple2!2146 Bool)) false) (h!2090 (toList!735 lt!32717)) true) (content!76 (t!5068 (toList!735 lt!32717)))))))

(assert (= (and d!17425 c!11163) b!74245))

(assert (= (and d!17425 (not c!11163)) b!74246))

(declare-fun m!73155 () Bool)

(assert (=> b!74246 m!73155))

(assert (=> b!74246 m!72961))

(assert (=> d!16933 d!17425))

(declare-fun d!17427 () Bool)

(declare-fun res!39261 () Bool)

(declare-fun e!48524 () Bool)

(assert (=> d!17427 (=> res!39261 e!48524)))

(assert (=> d!17427 (= res!39261 (and ((_ is Cons!1503) (toList!735 lt!32710)) (= (_1!1083 (h!2090 (toList!735 lt!32710))) (_1!1083 lt!32482))))))

(assert (=> d!17427 (= (containsKey!136 (toList!735 lt!32710) (_1!1083 lt!32482)) e!48524)))

(declare-fun b!74247 () Bool)

(declare-fun e!48525 () Bool)

(assert (=> b!74247 (= e!48524 e!48525)))

(declare-fun res!39262 () Bool)

(assert (=> b!74247 (=> (not res!39262) (not e!48525))))

(assert (=> b!74247 (= res!39262 (and (or (not ((_ is Cons!1503) (toList!735 lt!32710))) (bvsle (_1!1083 (h!2090 (toList!735 lt!32710))) (_1!1083 lt!32482))) ((_ is Cons!1503) (toList!735 lt!32710)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32710))) (_1!1083 lt!32482))))))

(declare-fun b!74248 () Bool)

(assert (=> b!74248 (= e!48525 (containsKey!136 (t!5068 (toList!735 lt!32710)) (_1!1083 lt!32482)))))

(assert (= (and d!17427 (not res!39261)) b!74247))

(assert (= (and b!74247 res!39262) b!74248))

(declare-fun m!73157 () Bool)

(assert (=> b!74248 m!73157))

(assert (=> d!17023 d!17427))

(declare-fun d!17429 () Bool)

(assert (=> d!17429 (isDefined!86 (getValueByKey!132 (toList!735 lt!32666) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!33330 () Unit!2086)

(assert (=> d!17429 (= lt!33330 (choose!421 (toList!735 lt!32666) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!48526 () Bool)

(assert (=> d!17429 e!48526))

(declare-fun res!39263 () Bool)

(assert (=> d!17429 (=> (not res!39263) (not e!48526))))

(assert (=> d!17429 (= res!39263 (isStrictlySorted!287 (toList!735 lt!32666)))))

(assert (=> d!17429 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32666) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!33330)))

(declare-fun b!74249 () Bool)

(assert (=> b!74249 (= e!48526 (containsKey!136 (toList!735 lt!32666) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!17429 res!39263) b!74249))

(assert (=> d!17429 m!71227))

(assert (=> d!17429 m!71669))

(assert (=> d!17429 m!71669))

(assert (=> d!17429 m!71671))

(assert (=> d!17429 m!71227))

(declare-fun m!73159 () Bool)

(assert (=> d!17429 m!73159))

(assert (=> d!17429 m!72481))

(assert (=> b!74249 m!71227))

(assert (=> b!74249 m!71665))

(assert (=> b!73380 d!17429))

(declare-fun d!17431 () Bool)

(assert (=> d!17431 (= (isDefined!86 (getValueByKey!132 (toList!735 lt!32666) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!322 (getValueByKey!132 (toList!735 lt!32666) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3191 () Bool)

(assert (= bs!3191 d!17431))

(assert (=> bs!3191 m!71669))

(declare-fun m!73161 () Bool)

(assert (=> bs!3191 m!73161))

(assert (=> b!73380 d!17431))

(assert (=> b!73380 d!17373))

(declare-fun d!17433 () Bool)

(declare-fun e!48528 () Bool)

(assert (=> d!17433 e!48528))

(declare-fun res!39264 () Bool)

(assert (=> d!17433 (=> res!39264 e!48528)))

(declare-fun lt!33333 () Bool)

(assert (=> d!17433 (= res!39264 (not lt!33333))))

(declare-fun lt!33331 () Bool)

(assert (=> d!17433 (= lt!33333 lt!33331)))

(declare-fun lt!33332 () Unit!2086)

(declare-fun e!48527 () Unit!2086)

(assert (=> d!17433 (= lt!33332 e!48527)))

(declare-fun c!11164 () Bool)

(assert (=> d!17433 (= c!11164 lt!33331)))

(assert (=> d!17433 (= lt!33331 (containsKey!136 (toList!735 lt!32773) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17433 (= (contains!729 lt!32773 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33333)))

(declare-fun b!74250 () Bool)

(declare-fun lt!33334 () Unit!2086)

(assert (=> b!74250 (= e!48527 lt!33334)))

(assert (=> b!74250 (= lt!33334 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32773) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74250 (isDefined!86 (getValueByKey!132 (toList!735 lt!32773) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74251 () Bool)

(declare-fun Unit!2139 () Unit!2086)

(assert (=> b!74251 (= e!48527 Unit!2139)))

(declare-fun b!74252 () Bool)

(assert (=> b!74252 (= e!48528 (isDefined!86 (getValueByKey!132 (toList!735 lt!32773) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17433 c!11164) b!74250))

(assert (= (and d!17433 (not c!11164)) b!74251))

(assert (= (and d!17433 (not res!39264)) b!74252))

(declare-fun m!73163 () Bool)

(assert (=> d!17433 m!73163))

(declare-fun m!73165 () Bool)

(assert (=> b!74250 m!73165))

(assert (=> b!74250 m!72583))

(assert (=> b!74250 m!72583))

(declare-fun m!73167 () Bool)

(assert (=> b!74250 m!73167))

(assert (=> b!74252 m!72583))

(assert (=> b!74252 m!72583))

(assert (=> b!74252 m!73167))

(assert (=> bm!6451 d!17433))

(declare-fun b!74253 () Bool)

(declare-fun e!48529 () Bool)

(declare-fun e!48531 () Bool)

(assert (=> b!74253 (= e!48529 e!48531)))

(declare-fun res!39267 () Bool)

(assert (=> b!74253 (=> (not res!39267) (not e!48531))))

(declare-fun e!48530 () Bool)

(assert (=> b!74253 (= res!39267 (not e!48530))))

(declare-fun res!39265 () Bool)

(assert (=> b!74253 (=> (not res!39265) (not e!48530))))

(assert (=> b!74253 (= res!39265 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (_2!1084 lt!32604))) #b00000000000000000000000000000000)))))

(declare-fun b!74254 () Bool)

(declare-fun e!48532 () Bool)

(declare-fun call!6559 () Bool)

(assert (=> b!74254 (= e!48532 call!6559)))

(declare-fun b!74255 () Bool)

(assert (=> b!74255 (= e!48532 call!6559)))

(declare-fun b!74256 () Bool)

(assert (=> b!74256 (= e!48530 (contains!731 Nil!1505 (select (arr!1858 (_keys!3865 (_2!1084 lt!32604))) #b00000000000000000000000000000000)))))

(declare-fun b!74257 () Bool)

(assert (=> b!74257 (= e!48531 e!48532)))

(declare-fun c!11165 () Bool)

(assert (=> b!74257 (= c!11165 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (_2!1084 lt!32604))) #b00000000000000000000000000000000)))))

(declare-fun bm!6556 () Bool)

(assert (=> bm!6556 (= call!6559 (arrayNoDuplicates!0 (_keys!3865 (_2!1084 lt!32604)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!11165 (Cons!1504 (select (arr!1858 (_keys!3865 (_2!1084 lt!32604))) #b00000000000000000000000000000000) Nil!1505) Nil!1505)))))

(declare-fun d!17435 () Bool)

(declare-fun res!39266 () Bool)

(assert (=> d!17435 (=> res!39266 e!48529)))

(assert (=> d!17435 (= res!39266 (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 (_2!1084 lt!32604)))))))

(assert (=> d!17435 (= (arrayNoDuplicates!0 (_keys!3865 (_2!1084 lt!32604)) #b00000000000000000000000000000000 Nil!1505) e!48529)))

(assert (= (and d!17435 (not res!39266)) b!74253))

(assert (= (and b!74253 res!39265) b!74256))

(assert (= (and b!74253 res!39267) b!74257))

(assert (= (and b!74257 c!11165) b!74254))

(assert (= (and b!74257 (not c!11165)) b!74255))

(assert (= (or b!74254 b!74255) bm!6556))

(assert (=> b!74253 m!72557))

(assert (=> b!74253 m!72557))

(assert (=> b!74253 m!72559))

(assert (=> b!74256 m!72557))

(assert (=> b!74256 m!72557))

(declare-fun m!73169 () Bool)

(assert (=> b!74256 m!73169))

(assert (=> b!74257 m!72557))

(assert (=> b!74257 m!72557))

(assert (=> b!74257 m!72559))

(assert (=> bm!6556 m!72557))

(declare-fun m!73171 () Bool)

(assert (=> bm!6556 m!73171))

(assert (=> b!73281 d!17435))

(declare-fun b!74258 () Bool)

(declare-fun res!39268 () Bool)

(declare-fun e!48535 () Bool)

(assert (=> b!74258 (=> (not res!39268) (not e!48535))))

(declare-fun lt!33337 () ListLongMap!1439)

(assert (=> b!74258 (= res!39268 (not (contains!729 lt!33337 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!48533 () Bool)

(declare-fun b!74259 () Bool)

(assert (=> b!74259 (= e!48533 (= lt!33337 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2213 newMap!16))))))

(declare-fun b!74260 () Bool)

(declare-fun e!48536 () Bool)

(assert (=> b!74260 (= e!48536 e!48533)))

(declare-fun c!11167 () Bool)

(assert (=> b!74260 (= c!11167 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!74261 () Bool)

(assert (=> b!74261 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(assert (=> b!74261 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16)))))))))

(declare-fun e!48537 () Bool)

(assert (=> b!74261 (= e!48537 (= (apply!75 lt!33337 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1154 (select (arr!1859 (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!74262 () Bool)

(declare-fun e!48538 () ListLongMap!1439)

(declare-fun call!6560 () ListLongMap!1439)

(assert (=> b!74262 (= e!48538 call!6560)))

(declare-fun b!74263 () Bool)

(declare-fun e!48539 () ListLongMap!1439)

(assert (=> b!74263 (= e!48539 (ListLongMap!1440 Nil!1504))))

(declare-fun b!74264 () Bool)

(assert (=> b!74264 (= e!48533 (isEmpty!321 lt!33337))))

(declare-fun d!17437 () Bool)

(assert (=> d!17437 e!48535))

(declare-fun res!39270 () Bool)

(assert (=> d!17437 (=> (not res!39270) (not e!48535))))

(assert (=> d!17437 (= res!39270 (not (contains!729 lt!33337 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17437 (= lt!33337 e!48539)))

(declare-fun c!11166 () Bool)

(assert (=> d!17437 (= c!11166 (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!17437 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17437 (= (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33337)))

(declare-fun b!74265 () Bool)

(assert (=> b!74265 (= e!48539 e!48538)))

(declare-fun c!11169 () Bool)

(assert (=> b!74265 (= c!11169 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74266 () Bool)

(assert (=> b!74266 (= e!48535 e!48536)))

(declare-fun c!11168 () Bool)

(declare-fun e!48534 () Bool)

(assert (=> b!74266 (= c!11168 e!48534)))

(declare-fun res!39271 () Bool)

(assert (=> b!74266 (=> (not res!39271) (not e!48534))))

(assert (=> b!74266 (= res!39271 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun bm!6557 () Bool)

(assert (=> bm!6557 (= call!6560 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16)))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2213 newMap!16)))))

(declare-fun b!74267 () Bool)

(assert (=> b!74267 (= e!48536 e!48537)))

(assert (=> b!74267 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun res!39269 () Bool)

(assert (=> b!74267 (= res!39269 (contains!729 lt!33337 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74267 (=> (not res!39269) (not e!48537))))

(declare-fun b!74268 () Bool)

(assert (=> b!74268 (= e!48534 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74268 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!74269 () Bool)

(declare-fun lt!33340 () Unit!2086)

(declare-fun lt!33338 () Unit!2086)

(assert (=> b!74269 (= lt!33340 lt!33338)))

(declare-fun lt!33341 () (_ BitVec 64))

(declare-fun lt!33339 () (_ BitVec 64))

(declare-fun lt!33335 () ListLongMap!1439)

(declare-fun lt!33336 () V!2947)

(assert (=> b!74269 (not (contains!729 (+!98 lt!33335 (tuple2!2147 lt!33341 lt!33336)) lt!33339))))

(assert (=> b!74269 (= lt!33338 (addStillNotContains!26 lt!33335 lt!33341 lt!33336 lt!33339))))

(assert (=> b!74269 (= lt!33339 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!74269 (= lt!33336 (get!1154 (select (arr!1859 (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!74269 (= lt!33341 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74269 (= lt!33335 call!6560)))

(assert (=> b!74269 (= e!48538 (+!98 call!6560 (tuple2!2147 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) (get!1154 (select (arr!1859 (ite c!10830 (_values!2196 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!17437 c!11166) b!74263))

(assert (= (and d!17437 (not c!11166)) b!74265))

(assert (= (and b!74265 c!11169) b!74269))

(assert (= (and b!74265 (not c!11169)) b!74262))

(assert (= (or b!74269 b!74262) bm!6557))

(assert (= (and d!17437 res!39270) b!74258))

(assert (= (and b!74258 res!39268) b!74266))

(assert (= (and b!74266 res!39271) b!74268))

(assert (= (and b!74266 c!11168) b!74267))

(assert (= (and b!74266 (not c!11168)) b!74260))

(assert (= (and b!74267 res!39269) b!74261))

(assert (= (and b!74260 c!11167) b!74259))

(assert (= (and b!74260 (not c!11167)) b!74264))

(declare-fun b_lambda!3337 () Bool)

(assert (=> (not b_lambda!3337) (not b!74261)))

(assert (=> b!74261 t!5077))

(declare-fun b_and!4549 () Bool)

(assert (= b_and!4545 (and (=> t!5077 result!2697) b_and!4549)))

(assert (=> b!74261 t!5079))

(declare-fun b_and!4551 () Bool)

(assert (= b_and!4547 (and (=> t!5079 result!2699) b_and!4551)))

(declare-fun b_lambda!3339 () Bool)

(assert (=> (not b_lambda!3339) (not b!74269)))

(assert (=> b!74269 t!5077))

(declare-fun b_and!4553 () Bool)

(assert (= b_and!4549 (and (=> t!5077 result!2697) b_and!4553)))

(assert (=> b!74269 t!5079))

(declare-fun b_and!4555 () Bool)

(assert (= b_and!4551 (and (=> t!5079 result!2699) b_and!4555)))

(assert (=> b!74268 m!71397))

(assert (=> b!74268 m!71397))

(assert (=> b!74268 m!71411))

(declare-fun m!73173 () Bool)

(assert (=> d!17437 m!73173))

(assert (=> d!17437 m!71423))

(declare-fun m!73175 () Bool)

(assert (=> b!74258 m!73175))

(assert (=> b!74269 m!71521))

(declare-fun m!73177 () Bool)

(assert (=> b!74269 m!73177))

(assert (=> b!74269 m!72151))

(assert (=> b!74269 m!71521))

(assert (=> b!74269 m!72153))

(assert (=> b!74269 m!71397))

(declare-fun m!73179 () Bool)

(assert (=> b!74269 m!73179))

(assert (=> b!74269 m!73179))

(declare-fun m!73181 () Bool)

(assert (=> b!74269 m!73181))

(declare-fun m!73183 () Bool)

(assert (=> b!74269 m!73183))

(assert (=> b!74269 m!72151))

(assert (=> b!74267 m!71397))

(assert (=> b!74267 m!71397))

(declare-fun m!73185 () Bool)

(assert (=> b!74267 m!73185))

(assert (=> b!74265 m!71397))

(assert (=> b!74265 m!71397))

(assert (=> b!74265 m!71411))

(declare-fun m!73187 () Bool)

(assert (=> bm!6557 m!73187))

(assert (=> b!74261 m!71397))

(declare-fun m!73189 () Bool)

(assert (=> b!74261 m!73189))

(assert (=> b!74261 m!71521))

(assert (=> b!74261 m!72151))

(assert (=> b!74261 m!71521))

(assert (=> b!74261 m!72153))

(assert (=> b!74261 m!71397))

(assert (=> b!74261 m!72151))

(assert (=> b!74259 m!73187))

(declare-fun m!73191 () Bool)

(assert (=> b!74264 m!73191))

(assert (=> bm!6503 d!17437))

(assert (=> d!16995 d!16991))

(assert (=> d!16995 d!16993))

(declare-fun d!17439 () Bool)

(assert (=> d!17439 (not (contains!729 (+!98 lt!32692 (tuple2!2147 lt!32698 lt!32693)) lt!32696))))

(assert (=> d!17439 true))

(declare-fun _$36!301 () Unit!2086)

(assert (=> d!17439 (= (choose!426 lt!32692 lt!32698 lt!32693 lt!32696) _$36!301)))

(declare-fun bs!3192 () Bool)

(assert (= bs!3192 d!17439))

(assert (=> bs!3192 m!71287))

(assert (=> bs!3192 m!71287))

(assert (=> bs!3192 m!71289))

(assert (=> d!16995 d!17439))

(declare-fun d!17441 () Bool)

(declare-fun e!48541 () Bool)

(assert (=> d!17441 e!48541))

(declare-fun res!39272 () Bool)

(assert (=> d!17441 (=> res!39272 e!48541)))

(declare-fun lt!33344 () Bool)

(assert (=> d!17441 (= res!39272 (not lt!33344))))

(declare-fun lt!33342 () Bool)

(assert (=> d!17441 (= lt!33344 lt!33342)))

(declare-fun lt!33343 () Unit!2086)

(declare-fun e!48540 () Unit!2086)

(assert (=> d!17441 (= lt!33343 e!48540)))

(declare-fun c!11170 () Bool)

(assert (=> d!17441 (= c!11170 lt!33342)))

(assert (=> d!17441 (= lt!33342 (containsKey!136 (toList!735 lt!32692) lt!32696))))

(assert (=> d!17441 (= (contains!729 lt!32692 lt!32696) lt!33344)))

(declare-fun b!74271 () Bool)

(declare-fun lt!33345 () Unit!2086)

(assert (=> b!74271 (= e!48540 lt!33345)))

(assert (=> b!74271 (= lt!33345 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32692) lt!32696))))

(assert (=> b!74271 (isDefined!86 (getValueByKey!132 (toList!735 lt!32692) lt!32696))))

(declare-fun b!74272 () Bool)

(declare-fun Unit!2140 () Unit!2086)

(assert (=> b!74272 (= e!48540 Unit!2140)))

(declare-fun b!74273 () Bool)

(assert (=> b!74273 (= e!48541 (isDefined!86 (getValueByKey!132 (toList!735 lt!32692) lt!32696)))))

(assert (= (and d!17441 c!11170) b!74271))

(assert (= (and d!17441 (not c!11170)) b!74272))

(assert (= (and d!17441 (not res!39272)) b!74273))

(declare-fun m!73193 () Bool)

(assert (=> d!17441 m!73193))

(declare-fun m!73195 () Bool)

(assert (=> b!74271 m!73195))

(declare-fun m!73197 () Bool)

(assert (=> b!74271 m!73197))

(assert (=> b!74271 m!73197))

(declare-fun m!73199 () Bool)

(assert (=> b!74271 m!73199))

(assert (=> b!74273 m!73197))

(assert (=> b!74273 m!73197))

(assert (=> b!74273 m!73199))

(assert (=> d!16995 d!17441))

(declare-fun d!17443 () Bool)

(declare-fun e!48543 () Bool)

(assert (=> d!17443 e!48543))

(declare-fun res!39273 () Bool)

(assert (=> d!17443 (=> res!39273 e!48543)))

(declare-fun lt!33348 () Bool)

(assert (=> d!17443 (= res!39273 (not lt!33348))))

(declare-fun lt!33346 () Bool)

(assert (=> d!17443 (= lt!33348 lt!33346)))

(declare-fun lt!33347 () Unit!2086)

(declare-fun e!48542 () Unit!2086)

(assert (=> d!17443 (= lt!33347 e!48542)))

(declare-fun c!11171 () Bool)

(assert (=> d!17443 (= c!11171 lt!33346)))

(assert (=> d!17443 (= lt!33346 (containsKey!136 (toList!735 lt!32899) (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!17443 (= (contains!729 lt!32899 (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33348)))

(declare-fun b!74274 () Bool)

(declare-fun lt!33349 () Unit!2086)

(assert (=> b!74274 (= e!48542 lt!33349)))

(assert (=> b!74274 (= lt!33349 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32899) (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> b!74274 (isDefined!86 (getValueByKey!132 (toList!735 lt!32899) (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74275 () Bool)

(declare-fun Unit!2141 () Unit!2086)

(assert (=> b!74275 (= e!48542 Unit!2141)))

(declare-fun b!74276 () Bool)

(assert (=> b!74276 (= e!48543 (isDefined!86 (getValueByKey!132 (toList!735 lt!32899) (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (= (and d!17443 c!11171) b!74274))

(assert (= (and d!17443 (not c!11171)) b!74275))

(assert (= (and d!17443 (not res!39273)) b!74276))

(declare-fun m!73201 () Bool)

(assert (=> d!17443 m!73201))

(declare-fun m!73203 () Bool)

(assert (=> b!74274 m!73203))

(assert (=> b!74274 m!71877))

(assert (=> b!74274 m!71877))

(declare-fun m!73205 () Bool)

(assert (=> b!74274 m!73205))

(assert (=> b!74276 m!71877))

(assert (=> b!74276 m!71877))

(assert (=> b!74276 m!73205))

(assert (=> d!16973 d!17443))

(declare-fun b!74280 () Bool)

(declare-fun e!48545 () Option!138)

(assert (=> b!74280 (= e!48545 None!136)))

(declare-fun b!74278 () Bool)

(declare-fun e!48544 () Option!138)

(assert (=> b!74278 (= e!48544 e!48545)))

(declare-fun c!11173 () Bool)

(assert (=> b!74278 (= c!11173 (and ((_ is Cons!1503) lt!32898) (not (= (_1!1083 (h!2090 lt!32898)) (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun b!74277 () Bool)

(assert (=> b!74277 (= e!48544 (Some!137 (_2!1083 (h!2090 lt!32898))))))

(declare-fun c!11172 () Bool)

(declare-fun d!17445 () Bool)

(assert (=> d!17445 (= c!11172 (and ((_ is Cons!1503) lt!32898) (= (_1!1083 (h!2090 lt!32898)) (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17445 (= (getValueByKey!132 lt!32898 (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) e!48544)))

(declare-fun b!74279 () Bool)

(assert (=> b!74279 (= e!48545 (getValueByKey!132 (t!5068 lt!32898) (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (= (and d!17445 c!11172) b!74277))

(assert (= (and d!17445 (not c!11172)) b!74278))

(assert (= (and b!74278 c!11173) b!74279))

(assert (= (and b!74278 (not c!11173)) b!74280))

(declare-fun m!73207 () Bool)

(assert (=> b!74279 m!73207))

(assert (=> d!16973 d!17445))

(declare-fun d!17447 () Bool)

(assert (=> d!17447 (= (getValueByKey!132 lt!32898 (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun lt!33350 () Unit!2086)

(assert (=> d!17447 (= lt!33350 (choose!422 lt!32898 (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun e!48546 () Bool)

(assert (=> d!17447 e!48546))

(declare-fun res!39274 () Bool)

(assert (=> d!17447 (=> (not res!39274) (not e!48546))))

(assert (=> d!17447 (= res!39274 (isStrictlySorted!287 lt!32898))))

(assert (=> d!17447 (= (lemmaContainsTupThenGetReturnValue!51 lt!32898 (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33350)))

(declare-fun b!74281 () Bool)

(declare-fun res!39275 () Bool)

(assert (=> b!74281 (=> (not res!39275) (not e!48546))))

(assert (=> b!74281 (= res!39275 (containsKey!136 lt!32898 (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74282 () Bool)

(assert (=> b!74282 (= e!48546 (contains!730 lt!32898 (tuple2!2147 (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (= (and d!17447 res!39274) b!74281))

(assert (= (and b!74281 res!39275) b!74282))

(assert (=> d!17447 m!71871))

(declare-fun m!73209 () Bool)

(assert (=> d!17447 m!73209))

(declare-fun m!73211 () Bool)

(assert (=> d!17447 m!73211))

(declare-fun m!73213 () Bool)

(assert (=> b!74281 m!73213))

(declare-fun m!73215 () Bool)

(assert (=> b!74282 m!73215))

(assert (=> d!16973 d!17447))

(declare-fun b!74283 () Bool)

(declare-fun e!48547 () List!1507)

(declare-fun call!6562 () List!1507)

(assert (=> b!74283 (= e!48547 call!6562)))

(declare-fun b!74284 () Bool)

(declare-fun e!48549 () List!1507)

(declare-fun call!6561 () List!1507)

(assert (=> b!74284 (= e!48549 call!6561)))

(declare-fun e!48550 () List!1507)

(declare-fun bm!6558 () Bool)

(declare-fun c!11175 () Bool)

(declare-fun call!6563 () List!1507)

(assert (=> bm!6558 (= call!6563 ($colon$colon!65 e!48550 (ite c!11175 (h!2090 (toList!735 lt!32670)) (tuple2!2147 (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun c!11176 () Bool)

(assert (=> bm!6558 (= c!11176 c!11175)))

(declare-fun b!74286 () Bool)

(declare-fun res!39277 () Bool)

(declare-fun e!48548 () Bool)

(assert (=> b!74286 (=> (not res!39277) (not e!48548))))

(declare-fun lt!33351 () List!1507)

(assert (=> b!74286 (= res!39277 (containsKey!136 lt!33351 (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74287 () Bool)

(declare-fun e!48551 () List!1507)

(assert (=> b!74287 (= e!48551 call!6563)))

(declare-fun c!11174 () Bool)

(declare-fun c!11177 () Bool)

(declare-fun b!74288 () Bool)

(assert (=> b!74288 (= e!48550 (ite c!11177 (t!5068 (toList!735 lt!32670)) (ite c!11174 (Cons!1503 (h!2090 (toList!735 lt!32670)) (t!5068 (toList!735 lt!32670))) Nil!1504)))))

(declare-fun b!74289 () Bool)

(assert (=> b!74289 (= e!48550 (insertStrictlySorted!53 (t!5068 (toList!735 lt!32670)) (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74290 () Bool)

(assert (=> b!74290 (= e!48548 (contains!730 lt!33351 (tuple2!2147 (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun bm!6559 () Bool)

(assert (=> bm!6559 (= call!6562 call!6563)))

(declare-fun b!74291 () Bool)

(assert (=> b!74291 (= e!48551 e!48547)))

(assert (=> b!74291 (= c!11177 (and ((_ is Cons!1503) (toList!735 lt!32670)) (= (_1!1083 (h!2090 (toList!735 lt!32670))) (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun b!74285 () Bool)

(assert (=> b!74285 (= c!11174 (and ((_ is Cons!1503) (toList!735 lt!32670)) (bvsgt (_1!1083 (h!2090 (toList!735 lt!32670))) (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> b!74285 (= e!48547 e!48549)))

(declare-fun d!17449 () Bool)

(assert (=> d!17449 e!48548))

(declare-fun res!39276 () Bool)

(assert (=> d!17449 (=> (not res!39276) (not e!48548))))

(assert (=> d!17449 (= res!39276 (isStrictlySorted!287 lt!33351))))

(assert (=> d!17449 (= lt!33351 e!48551)))

(assert (=> d!17449 (= c!11175 (and ((_ is Cons!1503) (toList!735 lt!32670)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32670))) (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17449 (isStrictlySorted!287 (toList!735 lt!32670))))

(assert (=> d!17449 (= (insertStrictlySorted!53 (toList!735 lt!32670) (_1!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33351)))

(declare-fun b!74292 () Bool)

(assert (=> b!74292 (= e!48549 call!6561)))

(declare-fun bm!6560 () Bool)

(assert (=> bm!6560 (= call!6561 call!6562)))

(assert (= (and d!17449 c!11175) b!74287))

(assert (= (and d!17449 (not c!11175)) b!74291))

(assert (= (and b!74291 c!11177) b!74283))

(assert (= (and b!74291 (not c!11177)) b!74285))

(assert (= (and b!74285 c!11174) b!74292))

(assert (= (and b!74285 (not c!11174)) b!74284))

(assert (= (or b!74292 b!74284) bm!6560))

(assert (= (or b!74283 bm!6560) bm!6559))

(assert (= (or b!74287 bm!6559) bm!6558))

(assert (= (and bm!6558 c!11176) b!74289))

(assert (= (and bm!6558 (not c!11176)) b!74288))

(assert (= (and d!17449 res!39276) b!74286))

(assert (= (and b!74286 res!39277) b!74290))

(declare-fun m!73217 () Bool)

(assert (=> b!74286 m!73217))

(declare-fun m!73219 () Bool)

(assert (=> d!17449 m!73219))

(declare-fun m!73221 () Bool)

(assert (=> d!17449 m!73221))

(declare-fun m!73223 () Bool)

(assert (=> b!74289 m!73223))

(declare-fun m!73225 () Bool)

(assert (=> b!74290 m!73225))

(declare-fun m!73227 () Bool)

(assert (=> bm!6558 m!73227))

(assert (=> d!16973 d!17449))

(declare-fun b!74296 () Bool)

(declare-fun e!48553 () Option!138)

(assert (=> b!74296 (= e!48553 None!136)))

(declare-fun b!74294 () Bool)

(declare-fun e!48552 () Option!138)

(assert (=> b!74294 (= e!48552 e!48553)))

(declare-fun c!11179 () Bool)

(assert (=> b!74294 (= c!11179 (and ((_ is Cons!1503) (t!5068 lt!32709)) (not (= (_1!1083 (h!2090 (t!5068 lt!32709))) (_1!1083 lt!32482)))))))

(declare-fun b!74293 () Bool)

(assert (=> b!74293 (= e!48552 (Some!137 (_2!1083 (h!2090 (t!5068 lt!32709)))))))

(declare-fun d!17451 () Bool)

(declare-fun c!11178 () Bool)

(assert (=> d!17451 (= c!11178 (and ((_ is Cons!1503) (t!5068 lt!32709)) (= (_1!1083 (h!2090 (t!5068 lt!32709))) (_1!1083 lt!32482))))))

(assert (=> d!17451 (= (getValueByKey!132 (t!5068 lt!32709) (_1!1083 lt!32482)) e!48552)))

(declare-fun b!74295 () Bool)

(assert (=> b!74295 (= e!48553 (getValueByKey!132 (t!5068 (t!5068 lt!32709)) (_1!1083 lt!32482)))))

(assert (= (and d!17451 c!11178) b!74293))

(assert (= (and d!17451 (not c!11178)) b!74294))

(assert (= (and b!74294 c!11179) b!74295))

(assert (= (and b!74294 (not c!11179)) b!74296))

(declare-fun m!73229 () Bool)

(assert (=> b!74295 m!73229))

(assert (=> b!73666 d!17451))

(declare-fun d!17453 () Bool)

(declare-fun e!48555 () Bool)

(assert (=> d!17453 e!48555))

(declare-fun res!39278 () Bool)

(assert (=> d!17453 (=> res!39278 e!48555)))

(declare-fun lt!33354 () Bool)

(assert (=> d!17453 (= res!39278 (not lt!33354))))

(declare-fun lt!33352 () Bool)

(assert (=> d!17453 (= lt!33354 lt!33352)))

(declare-fun lt!33353 () Unit!2086)

(declare-fun e!48554 () Unit!2086)

(assert (=> d!17453 (= lt!33353 e!48554)))

(declare-fun c!11180 () Bool)

(assert (=> d!17453 (= c!11180 lt!33352)))

(assert (=> d!17453 (= lt!33352 (containsKey!136 (toList!735 lt!32788) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!17453 (= (contains!729 lt!32788 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33354)))

(declare-fun b!74297 () Bool)

(declare-fun lt!33355 () Unit!2086)

(assert (=> b!74297 (= e!48554 lt!33355)))

(assert (=> b!74297 (= lt!33355 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32788) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> b!74297 (isDefined!86 (getValueByKey!132 (toList!735 lt!32788) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74298 () Bool)

(declare-fun Unit!2142 () Unit!2086)

(assert (=> b!74298 (= e!48554 Unit!2142)))

(declare-fun b!74299 () Bool)

(assert (=> b!74299 (= e!48555 (isDefined!86 (getValueByKey!132 (toList!735 lt!32788) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (= (and d!17453 c!11180) b!74297))

(assert (= (and d!17453 (not c!11180)) b!74298))

(assert (= (and d!17453 (not res!39278)) b!74299))

(declare-fun m!73231 () Bool)

(assert (=> d!17453 m!73231))

(declare-fun m!73233 () Bool)

(assert (=> b!74297 m!73233))

(assert (=> b!74297 m!71537))

(assert (=> b!74297 m!71537))

(declare-fun m!73235 () Bool)

(assert (=> b!74297 m!73235))

(assert (=> b!74299 m!71537))

(assert (=> b!74299 m!71537))

(assert (=> b!74299 m!73235))

(assert (=> d!16877 d!17453))

(declare-fun b!74303 () Bool)

(declare-fun e!48557 () Option!138)

(assert (=> b!74303 (= e!48557 None!136)))

(declare-fun b!74301 () Bool)

(declare-fun e!48556 () Option!138)

(assert (=> b!74301 (= e!48556 e!48557)))

(declare-fun c!11182 () Bool)

(assert (=> b!74301 (= c!11182 (and ((_ is Cons!1503) lt!32787) (not (= (_1!1083 (h!2090 lt!32787)) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun b!74300 () Bool)

(assert (=> b!74300 (= e!48556 (Some!137 (_2!1083 (h!2090 lt!32787))))))

(declare-fun d!17455 () Bool)

(declare-fun c!11181 () Bool)

(assert (=> d!17455 (= c!11181 (and ((_ is Cons!1503) lt!32787) (= (_1!1083 (h!2090 lt!32787)) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17455 (= (getValueByKey!132 lt!32787 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) e!48556)))

(declare-fun b!74302 () Bool)

(assert (=> b!74302 (= e!48557 (getValueByKey!132 (t!5068 lt!32787) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (= (and d!17455 c!11181) b!74300))

(assert (= (and d!17455 (not c!11181)) b!74301))

(assert (= (and b!74301 c!11182) b!74302))

(assert (= (and b!74301 (not c!11182)) b!74303))

(declare-fun m!73237 () Bool)

(assert (=> b!74302 m!73237))

(assert (=> d!16877 d!17455))

(declare-fun d!17457 () Bool)

(assert (=> d!17457 (= (getValueByKey!132 lt!32787 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun lt!33356 () Unit!2086)

(assert (=> d!17457 (= lt!33356 (choose!422 lt!32787 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun e!48558 () Bool)

(assert (=> d!17457 e!48558))

(declare-fun res!39279 () Bool)

(assert (=> d!17457 (=> (not res!39279) (not e!48558))))

(assert (=> d!17457 (= res!39279 (isStrictlySorted!287 lt!32787))))

(assert (=> d!17457 (= (lemmaContainsTupThenGetReturnValue!51 lt!32787 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33356)))

(declare-fun b!74304 () Bool)

(declare-fun res!39280 () Bool)

(assert (=> b!74304 (=> (not res!39280) (not e!48558))))

(assert (=> b!74304 (= res!39280 (containsKey!136 lt!32787 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74305 () Bool)

(assert (=> b!74305 (= e!48558 (contains!730 lt!32787 (tuple2!2147 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (= (and d!17457 res!39279) b!74304))

(assert (= (and b!74304 res!39280) b!74305))

(assert (=> d!17457 m!71531))

(declare-fun m!73239 () Bool)

(assert (=> d!17457 m!73239))

(declare-fun m!73241 () Bool)

(assert (=> d!17457 m!73241))

(declare-fun m!73243 () Bool)

(assert (=> b!74304 m!73243))

(declare-fun m!73245 () Bool)

(assert (=> b!74305 m!73245))

(assert (=> d!16877 d!17457))

(declare-fun b!74306 () Bool)

(declare-fun e!48559 () List!1507)

(declare-fun call!6565 () List!1507)

(assert (=> b!74306 (= e!48559 call!6565)))

(declare-fun b!74307 () Bool)

(declare-fun e!48561 () List!1507)

(declare-fun call!6564 () List!1507)

(assert (=> b!74307 (= e!48561 call!6564)))

(declare-fun c!11184 () Bool)

(declare-fun call!6566 () List!1507)

(declare-fun e!48562 () List!1507)

(declare-fun bm!6561 () Bool)

(assert (=> bm!6561 (= call!6566 ($colon$colon!65 e!48562 (ite c!11184 (h!2090 (toList!735 lt!32476)) (tuple2!2147 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun c!11185 () Bool)

(assert (=> bm!6561 (= c!11185 c!11184)))

(declare-fun b!74309 () Bool)

(declare-fun res!39282 () Bool)

(declare-fun e!48560 () Bool)

(assert (=> b!74309 (=> (not res!39282) (not e!48560))))

(declare-fun lt!33357 () List!1507)

(assert (=> b!74309 (= res!39282 (containsKey!136 lt!33357 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74310 () Bool)

(declare-fun e!48563 () List!1507)

(assert (=> b!74310 (= e!48563 call!6566)))

(declare-fun c!11186 () Bool)

(declare-fun c!11183 () Bool)

(declare-fun b!74311 () Bool)

(assert (=> b!74311 (= e!48562 (ite c!11186 (t!5068 (toList!735 lt!32476)) (ite c!11183 (Cons!1503 (h!2090 (toList!735 lt!32476)) (t!5068 (toList!735 lt!32476))) Nil!1504)))))

(declare-fun b!74312 () Bool)

(assert (=> b!74312 (= e!48562 (insertStrictlySorted!53 (t!5068 (toList!735 lt!32476)) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74313 () Bool)

(assert (=> b!74313 (= e!48560 (contains!730 lt!33357 (tuple2!2147 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun bm!6562 () Bool)

(assert (=> bm!6562 (= call!6565 call!6566)))

(declare-fun b!74314 () Bool)

(assert (=> b!74314 (= e!48563 e!48559)))

(assert (=> b!74314 (= c!11186 (and ((_ is Cons!1503) (toList!735 lt!32476)) (= (_1!1083 (h!2090 (toList!735 lt!32476))) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun b!74308 () Bool)

(assert (=> b!74308 (= c!11183 (and ((_ is Cons!1503) (toList!735 lt!32476)) (bvsgt (_1!1083 (h!2090 (toList!735 lt!32476))) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> b!74308 (= e!48559 e!48561)))

(declare-fun d!17459 () Bool)

(assert (=> d!17459 e!48560))

(declare-fun res!39281 () Bool)

(assert (=> d!17459 (=> (not res!39281) (not e!48560))))

(assert (=> d!17459 (= res!39281 (isStrictlySorted!287 lt!33357))))

(assert (=> d!17459 (= lt!33357 e!48563)))

(assert (=> d!17459 (= c!11184 (and ((_ is Cons!1503) (toList!735 lt!32476)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32476))) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17459 (isStrictlySorted!287 (toList!735 lt!32476))))

(assert (=> d!17459 (= (insertStrictlySorted!53 (toList!735 lt!32476) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33357)))

(declare-fun b!74315 () Bool)

(assert (=> b!74315 (= e!48561 call!6564)))

(declare-fun bm!6563 () Bool)

(assert (=> bm!6563 (= call!6564 call!6565)))

(assert (= (and d!17459 c!11184) b!74310))

(assert (= (and d!17459 (not c!11184)) b!74314))

(assert (= (and b!74314 c!11186) b!74306))

(assert (= (and b!74314 (not c!11186)) b!74308))

(assert (= (and b!74308 c!11183) b!74315))

(assert (= (and b!74308 (not c!11183)) b!74307))

(assert (= (or b!74315 b!74307) bm!6563))

(assert (= (or b!74306 bm!6563) bm!6562))

(assert (= (or b!74310 bm!6562) bm!6561))

(assert (= (and bm!6561 c!11185) b!74312))

(assert (= (and bm!6561 (not c!11185)) b!74311))

(assert (= (and d!17459 res!39281) b!74309))

(assert (= (and b!74309 res!39282) b!74313))

(declare-fun m!73247 () Bool)

(assert (=> b!74309 m!73247))

(declare-fun m!73249 () Bool)

(assert (=> d!17459 m!73249))

(assert (=> d!17459 m!71793))

(declare-fun m!73251 () Bool)

(assert (=> b!74312 m!73251))

(declare-fun m!73253 () Bool)

(assert (=> b!74313 m!73253))

(declare-fun m!73255 () Bool)

(assert (=> bm!6561 m!73255))

(assert (=> d!16877 d!17459))

(declare-fun d!17461 () Bool)

(declare-fun lt!33358 () Bool)

(assert (=> d!17461 (= lt!33358 (select (content!76 (toList!735 lt!32899)) (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun e!48564 () Bool)

(assert (=> d!17461 (= lt!33358 e!48564)))

(declare-fun res!39284 () Bool)

(assert (=> d!17461 (=> (not res!39284) (not e!48564))))

(assert (=> d!17461 (= res!39284 ((_ is Cons!1503) (toList!735 lt!32899)))))

(assert (=> d!17461 (= (contains!730 (toList!735 lt!32899) (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!33358)))

(declare-fun b!74316 () Bool)

(declare-fun e!48565 () Bool)

(assert (=> b!74316 (= e!48564 e!48565)))

(declare-fun res!39283 () Bool)

(assert (=> b!74316 (=> res!39283 e!48565)))

(assert (=> b!74316 (= res!39283 (= (h!2090 (toList!735 lt!32899)) (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!74317 () Bool)

(assert (=> b!74317 (= e!48565 (contains!730 (t!5068 (toList!735 lt!32899)) (tuple2!2147 lt!32660 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(assert (= (and d!17461 res!39284) b!74316))

(assert (= (and b!74316 (not res!39283)) b!74317))

(declare-fun m!73257 () Bool)

(assert (=> d!17461 m!73257))

(declare-fun m!73259 () Bool)

(assert (=> d!17461 m!73259))

(declare-fun m!73261 () Bool)

(assert (=> b!74317 m!73261))

(assert (=> b!73523 d!17461))

(assert (=> bm!6486 d!16845))

(declare-fun b!74321 () Bool)

(declare-fun e!48567 () Option!138)

(assert (=> b!74321 (= e!48567 None!136)))

(declare-fun b!74319 () Bool)

(declare-fun e!48566 () Option!138)

(assert (=> b!74319 (= e!48566 e!48567)))

(declare-fun c!11188 () Bool)

(assert (=> b!74319 (= c!11188 (and ((_ is Cons!1503) (t!5068 (toList!735 lt!32725))) (not (= (_1!1083 (h!2090 (t!5068 (toList!735 lt!32725)))) (_1!1083 lt!32472)))))))

(declare-fun b!74318 () Bool)

(assert (=> b!74318 (= e!48566 (Some!137 (_2!1083 (h!2090 (t!5068 (toList!735 lt!32725))))))))

(declare-fun d!17463 () Bool)

(declare-fun c!11187 () Bool)

(assert (=> d!17463 (= c!11187 (and ((_ is Cons!1503) (t!5068 (toList!735 lt!32725))) (= (_1!1083 (h!2090 (t!5068 (toList!735 lt!32725)))) (_1!1083 lt!32472))))))

(assert (=> d!17463 (= (getValueByKey!132 (t!5068 (toList!735 lt!32725)) (_1!1083 lt!32472)) e!48566)))

(declare-fun b!74320 () Bool)

(assert (=> b!74320 (= e!48567 (getValueByKey!132 (t!5068 (t!5068 (toList!735 lt!32725))) (_1!1083 lt!32472)))))

(assert (= (and d!17463 c!11187) b!74318))

(assert (= (and d!17463 (not c!11187)) b!74319))

(assert (= (and b!74319 c!11188) b!74320))

(assert (= (and b!74319 (not c!11188)) b!74321))

(declare-fun m!73263 () Bool)

(assert (=> b!74320 m!73263))

(assert (=> b!73378 d!17463))

(declare-fun d!17465 () Bool)

(declare-fun res!39285 () Bool)

(declare-fun e!48568 () Bool)

(assert (=> d!17465 (=> res!39285 e!48568)))

(assert (=> d!17465 (= res!39285 (and ((_ is Cons!1503) (toList!735 lt!32694)) (= (_1!1083 (h!2090 (toList!735 lt!32694))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17465 (= (containsKey!136 (toList!735 lt!32694) #b0000000000000000000000000000000000000000000000000000000000000000) e!48568)))

(declare-fun b!74322 () Bool)

(declare-fun e!48569 () Bool)

(assert (=> b!74322 (= e!48568 e!48569)))

(declare-fun res!39286 () Bool)

(assert (=> b!74322 (=> (not res!39286) (not e!48569))))

(assert (=> b!74322 (= res!39286 (and (or (not ((_ is Cons!1503) (toList!735 lt!32694))) (bvsle (_1!1083 (h!2090 (toList!735 lt!32694))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1503) (toList!735 lt!32694)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32694))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74323 () Bool)

(assert (=> b!74323 (= e!48569 (containsKey!136 (t!5068 (toList!735 lt!32694)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17465 (not res!39285)) b!74322))

(assert (= (and b!74322 res!39286) b!74323))

(declare-fun m!73265 () Bool)

(assert (=> b!74323 m!73265))

(assert (=> d!16871 d!17465))

(declare-fun d!17467 () Bool)

(declare-fun lt!33359 () Bool)

(assert (=> d!17467 (= lt!33359 (select (content!76 (toList!735 lt!33006)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!48570 () Bool)

(assert (=> d!17467 (= lt!33359 e!48570)))

(declare-fun res!39288 () Bool)

(assert (=> d!17467 (=> (not res!39288) (not e!48570))))

(assert (=> d!17467 (= res!39288 ((_ is Cons!1503) (toList!735 lt!33006)))))

(assert (=> d!17467 (= (contains!730 (toList!735 lt!33006) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!33359)))

(declare-fun b!74324 () Bool)

(declare-fun e!48571 () Bool)

(assert (=> b!74324 (= e!48570 e!48571)))

(declare-fun res!39287 () Bool)

(assert (=> b!74324 (=> res!39287 e!48571)))

(assert (=> b!74324 (= res!39287 (= (h!2090 (toList!735 lt!33006)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!74325 () Bool)

(assert (=> b!74325 (= e!48571 (contains!730 (t!5068 (toList!735 lt!33006)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1154 (select (arr!1859 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!334 (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!17467 res!39288) b!74324))

(assert (= (and b!74324 (not res!39287)) b!74325))

(declare-fun m!73267 () Bool)

(assert (=> d!17467 m!73267))

(declare-fun m!73269 () Bool)

(assert (=> d!17467 m!73269))

(declare-fun m!73271 () Bool)

(assert (=> b!74325 m!73271))

(assert (=> b!73598 d!17467))

(declare-fun d!17469 () Bool)

(declare-fun res!39289 () Bool)

(declare-fun e!48572 () Bool)

(assert (=> d!17469 (=> res!39289 e!48572)))

(assert (=> d!17469 (= res!39289 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))) (= (_1!1083 (h!2090 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))) lt!32662)))))

(assert (=> d!17469 (= (containsKey!136 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32662) e!48572)))

(declare-fun b!74326 () Bool)

(declare-fun e!48573 () Bool)

(assert (=> b!74326 (= e!48572 e!48573)))

(declare-fun res!39290 () Bool)

(assert (=> b!74326 (=> (not res!39290) (not e!48573))))

(assert (=> b!74326 (= res!39290 (and (or (not ((_ is Cons!1503) (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))) (bvsle (_1!1083 (h!2090 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))) lt!32662)) ((_ is Cons!1503) (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))) (bvslt (_1!1083 (h!2090 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))) lt!32662)))))

(declare-fun b!74327 () Bool)

(assert (=> b!74327 (= e!48573 (containsKey!136 (t!5068 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))) lt!32662))))

(assert (= (and d!17469 (not res!39289)) b!74326))

(assert (= (and b!74326 res!39290) b!74327))

(declare-fun m!73273 () Bool)

(assert (=> b!74327 m!73273))

(assert (=> d!16965 d!17469))

(declare-fun d!17471 () Bool)

(declare-fun res!39291 () Bool)

(declare-fun e!48574 () Bool)

(assert (=> d!17471 (=> res!39291 e!48574)))

(assert (=> d!17471 (= res!39291 (and ((_ is Cons!1503) (toList!735 lt!32717)) (= (_1!1083 (h!2090 (toList!735 lt!32717))) (_1!1083 lt!32482))))))

(assert (=> d!17471 (= (containsKey!136 (toList!735 lt!32717) (_1!1083 lt!32482)) e!48574)))

(declare-fun b!74328 () Bool)

(declare-fun e!48575 () Bool)

(assert (=> b!74328 (= e!48574 e!48575)))

(declare-fun res!39292 () Bool)

(assert (=> b!74328 (=> (not res!39292) (not e!48575))))

(assert (=> b!74328 (= res!39292 (and (or (not ((_ is Cons!1503) (toList!735 lt!32717))) (bvsle (_1!1083 (h!2090 (toList!735 lt!32717))) (_1!1083 lt!32482))) ((_ is Cons!1503) (toList!735 lt!32717)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32717))) (_1!1083 lt!32482))))))

(declare-fun b!74329 () Bool)

(assert (=> b!74329 (= e!48575 (containsKey!136 (t!5068 (toList!735 lt!32717)) (_1!1083 lt!32482)))))

(assert (= (and d!17471 (not res!39291)) b!74328))

(assert (= (and b!74328 res!39292) b!74329))

(declare-fun m!73275 () Bool)

(assert (=> b!74329 m!73275))

(assert (=> d!16925 d!17471))

(declare-fun d!17473 () Bool)

(declare-fun res!39293 () Bool)

(declare-fun e!48576 () Bool)

(assert (=> d!17473 (=> res!39293 e!48576)))

(assert (=> d!17473 (= res!39293 (and ((_ is Cons!1503) (toList!735 e!47808)) (= (_1!1083 (h!2090 (toList!735 e!47808))) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593))))))))

(assert (=> d!17473 (= (containsKey!136 (toList!735 e!47808) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593)))) e!48576)))

(declare-fun b!74330 () Bool)

(declare-fun e!48577 () Bool)

(assert (=> b!74330 (= e!48576 e!48577)))

(declare-fun res!39294 () Bool)

(assert (=> b!74330 (=> (not res!39294) (not e!48577))))

(assert (=> b!74330 (= res!39294 (and (or (not ((_ is Cons!1503) (toList!735 e!47808))) (bvsle (_1!1083 (h!2090 (toList!735 e!47808))) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593))))) ((_ is Cons!1503) (toList!735 e!47808)) (bvslt (_1!1083 (h!2090 (toList!735 e!47808))) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593))))))))

(declare-fun b!74331 () Bool)

(assert (=> b!74331 (= e!48577 (containsKey!136 (t!5068 (toList!735 e!47808)) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593)))))))

(assert (= (and d!17473 (not res!39293)) b!74330))

(assert (= (and b!74330 res!39294) b!74331))

(declare-fun m!73277 () Bool)

(assert (=> b!74331 m!73277))

(assert (=> d!16885 d!17473))

(declare-fun d!17475 () Bool)

(declare-fun res!39295 () Bool)

(declare-fun e!48578 () Bool)

(assert (=> d!17475 (=> res!39295 e!48578)))

(assert (=> d!17475 (= res!39295 (and ((_ is Cons!1503) (t!5068 (toList!735 lt!32480))) (= (_1!1083 (h!2090 (t!5068 (toList!735 lt!32480)))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))))

(assert (=> d!17475 (= (containsKey!136 (t!5068 (toList!735 lt!32480)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) e!48578)))

(declare-fun b!74332 () Bool)

(declare-fun e!48579 () Bool)

(assert (=> b!74332 (= e!48578 e!48579)))

(declare-fun res!39296 () Bool)

(assert (=> b!74332 (=> (not res!39296) (not e!48579))))

(assert (=> b!74332 (= res!39296 (and (or (not ((_ is Cons!1503) (t!5068 (toList!735 lt!32480)))) (bvsle (_1!1083 (h!2090 (t!5068 (toList!735 lt!32480)))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))) ((_ is Cons!1503) (t!5068 (toList!735 lt!32480))) (bvslt (_1!1083 (h!2090 (t!5068 (toList!735 lt!32480)))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))))

(declare-fun b!74333 () Bool)

(assert (=> b!74333 (= e!48579 (containsKey!136 (t!5068 (t!5068 (toList!735 lt!32480))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (= (and d!17475 (not res!39295)) b!74332))

(assert (= (and b!74332 res!39296) b!74333))

(assert (=> b!74333 m!71053))

(declare-fun m!73279 () Bool)

(assert (=> b!74333 m!73279))

(assert (=> b!73718 d!17475))

(assert (=> d!16889 d!17091))

(declare-fun d!17477 () Bool)

(declare-fun e!48580 () Bool)

(assert (=> d!17477 e!48580))

(declare-fun res!39297 () Bool)

(assert (=> d!17477 (=> (not res!39297) (not e!48580))))

(declare-fun lt!33363 () ListLongMap!1439)

(assert (=> d!17477 (= res!39297 (contains!729 lt!33363 (_1!1083 (ite (or c!10903 c!10904) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))))))))

(declare-fun lt!33362 () List!1507)

(assert (=> d!17477 (= lt!33363 (ListLongMap!1440 lt!33362))))

(declare-fun lt!33360 () Unit!2086)

(declare-fun lt!33361 () Unit!2086)

(assert (=> d!17477 (= lt!33360 lt!33361)))

(assert (=> d!17477 (= (getValueByKey!132 lt!33362 (_1!1083 (ite (or c!10903 c!10904) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))))) (Some!137 (_2!1083 (ite (or c!10903 c!10904) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))))))))

(assert (=> d!17477 (= lt!33361 (lemmaContainsTupThenGetReturnValue!51 lt!33362 (_1!1083 (ite (or c!10903 c!10904) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))) (_2!1083 (ite (or c!10903 c!10904) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))))))))

(assert (=> d!17477 (= lt!33362 (insertStrictlySorted!53 (toList!735 (ite c!10903 call!6462 (ite c!10904 call!6458 call!6456))) (_1!1083 (ite (or c!10903 c!10904) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))) (_2!1083 (ite (or c!10903 c!10904) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))))))))

(assert (=> d!17477 (= (+!98 (ite c!10903 call!6462 (ite c!10904 call!6458 call!6456)) (ite (or c!10903 c!10904) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))) lt!33363)))

(declare-fun b!74334 () Bool)

(declare-fun res!39298 () Bool)

(assert (=> b!74334 (=> (not res!39298) (not e!48580))))

(assert (=> b!74334 (= res!39298 (= (getValueByKey!132 (toList!735 lt!33363) (_1!1083 (ite (or c!10903 c!10904) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))))) (Some!137 (_2!1083 (ite (or c!10903 c!10904) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))))))))

(declare-fun b!74335 () Bool)

(assert (=> b!74335 (= e!48580 (contains!730 (toList!735 lt!33363) (ite (or c!10903 c!10904) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10836 c!10829) lt!32481 (zeroValue!2115 newMap!16))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))))))

(assert (= (and d!17477 res!39297) b!74334))

(assert (= (and b!74334 res!39298) b!74335))

(declare-fun m!73281 () Bool)

(assert (=> d!17477 m!73281))

(declare-fun m!73283 () Bool)

(assert (=> d!17477 m!73283))

(declare-fun m!73285 () Bool)

(assert (=> d!17477 m!73285))

(declare-fun m!73287 () Bool)

(assert (=> d!17477 m!73287))

(declare-fun m!73289 () Bool)

(assert (=> b!74334 m!73289))

(declare-fun m!73291 () Bool)

(assert (=> b!74335 m!73291))

(assert (=> bm!6459 d!17477))

(assert (=> b!73601 d!17255))

(assert (=> b!73601 d!17257))

(assert (=> bm!6496 d!16845))

(declare-fun d!17479 () Bool)

(assert (=> d!17479 (isDefined!86 (getValueByKey!132 (toList!735 lt!32710) (_1!1083 lt!32482)))))

(declare-fun lt!33364 () Unit!2086)

(assert (=> d!17479 (= lt!33364 (choose!421 (toList!735 lt!32710) (_1!1083 lt!32482)))))

(declare-fun e!48581 () Bool)

(assert (=> d!17479 e!48581))

(declare-fun res!39299 () Bool)

(assert (=> d!17479 (=> (not res!39299) (not e!48581))))

(assert (=> d!17479 (= res!39299 (isStrictlySorted!287 (toList!735 lt!32710)))))

(assert (=> d!17479 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32710) (_1!1083 lt!32482)) lt!33364)))

(declare-fun b!74336 () Bool)

(assert (=> b!74336 (= e!48581 (containsKey!136 (toList!735 lt!32710) (_1!1083 lt!32482)))))

(assert (= (and d!17479 res!39299) b!74336))

(assert (=> d!17479 m!71309))

(assert (=> d!17479 m!71309))

(assert (=> d!17479 m!72077))

(declare-fun m!73293 () Bool)

(assert (=> d!17479 m!73293))

(declare-fun m!73295 () Bool)

(assert (=> d!17479 m!73295))

(assert (=> b!74336 m!72073))

(assert (=> b!73661 d!17479))

(declare-fun d!17481 () Bool)

(assert (=> d!17481 (= (isDefined!86 (getValueByKey!132 (toList!735 lt!32710) (_1!1083 lt!32482))) (not (isEmpty!322 (getValueByKey!132 (toList!735 lt!32710) (_1!1083 lt!32482)))))))

(declare-fun bs!3193 () Bool)

(assert (= bs!3193 d!17481))

(assert (=> bs!3193 m!71309))

(declare-fun m!73297 () Bool)

(assert (=> bs!3193 m!73297))

(assert (=> b!73661 d!17481))

(assert (=> b!73661 d!16859))

(declare-fun d!17483 () Bool)

(declare-fun e!48582 () Bool)

(assert (=> d!17483 e!48582))

(declare-fun res!39300 () Bool)

(assert (=> d!17483 (=> (not res!39300) (not e!48582))))

(declare-fun lt!33368 () ListLongMap!1439)

(assert (=> d!17483 (= res!39300 (contains!729 lt!33368 (_1!1083 (ite (or c!10997 c!10998) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(declare-fun lt!33367 () List!1507)

(assert (=> d!17483 (= lt!33368 (ListLongMap!1440 lt!33367))))

(declare-fun lt!33365 () Unit!2086)

(declare-fun lt!33366 () Unit!2086)

(assert (=> d!17483 (= lt!33365 lt!33366)))

(assert (=> d!17483 (= (getValueByKey!132 lt!33367 (_1!1083 (ite (or c!10997 c!10998) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))) (Some!137 (_2!1083 (ite (or c!10997 c!10998) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(assert (=> d!17483 (= lt!33366 (lemmaContainsTupThenGetReturnValue!51 lt!33367 (_1!1083 (ite (or c!10997 c!10998) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) (_2!1083 (ite (or c!10997 c!10998) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(assert (=> d!17483 (= lt!33367 (insertStrictlySorted!53 (toList!735 (ite c!10997 call!6510 (ite c!10998 call!6506 call!6504))) (_1!1083 (ite (or c!10997 c!10998) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) (_2!1083 (ite (or c!10997 c!10998) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(assert (=> d!17483 (= (+!98 (ite c!10997 call!6510 (ite c!10998 call!6506 call!6504)) (ite (or c!10997 c!10998) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) lt!33368)))

(declare-fun b!74337 () Bool)

(declare-fun res!39301 () Bool)

(assert (=> b!74337 (=> (not res!39301) (not e!48582))))

(assert (=> b!74337 (= res!39301 (= (getValueByKey!132 (toList!735 lt!33368) (_1!1083 (ite (or c!10997 c!10998) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))) (Some!137 (_2!1083 (ite (or c!10997 c!10998) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))))

(declare-fun b!74338 () Bool)

(assert (=> b!74338 (= e!48582 (contains!730 (toList!735 lt!33368) (ite (or c!10997 c!10998) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(assert (= (and d!17483 res!39300) b!74337))

(assert (= (and b!74337 res!39301) b!74338))

(declare-fun m!73299 () Bool)

(assert (=> d!17483 m!73299))

(declare-fun m!73301 () Bool)

(assert (=> d!17483 m!73301))

(declare-fun m!73303 () Bool)

(assert (=> d!17483 m!73303))

(declare-fun m!73305 () Bool)

(assert (=> d!17483 m!73305))

(declare-fun m!73307 () Bool)

(assert (=> b!74337 m!73307))

(declare-fun m!73309 () Bool)

(assert (=> b!74338 m!73309))

(assert (=> bm!6507 d!17483))

(declare-fun bm!6564 () Bool)

(declare-fun call!6567 () Bool)

(assert (=> bm!6564 (= call!6567 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3865 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun b!74339 () Bool)

(declare-fun e!48585 () Bool)

(declare-fun e!48583 () Bool)

(assert (=> b!74339 (= e!48585 e!48583)))

(declare-fun lt!33369 () (_ BitVec 64))

(assert (=> b!74339 (= lt!33369 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!33371 () Unit!2086)

(assert (=> b!74339 (= lt!33371 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) lt!33369 #b00000000000000000000000000000000))))

(assert (=> b!74339 (arrayContainsKey!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) lt!33369 #b00000000000000000000000000000000)))

(declare-fun lt!33370 () Unit!2086)

(assert (=> b!74339 (= lt!33370 lt!33371)))

(declare-fun res!39303 () Bool)

(assert (=> b!74339 (= res!39303 (= (seekEntryOrOpen!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) #b00000000000000000000000000000000) (_keys!3865 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992)))) (Found!246 #b00000000000000000000000000000000)))))

(assert (=> b!74339 (=> (not res!39303) (not e!48583))))

(declare-fun b!74341 () Bool)

(assert (=> b!74341 (= e!48585 call!6567)))

(declare-fun b!74342 () Bool)

(assert (=> b!74342 (= e!48583 call!6567)))

(declare-fun b!74340 () Bool)

(declare-fun e!48584 () Bool)

(assert (=> b!74340 (= e!48584 e!48585)))

(declare-fun c!11189 () Bool)

(assert (=> b!74340 (= c!11189 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!17485 () Bool)

(declare-fun res!39302 () Bool)

(assert (=> d!17485 (=> res!39302 e!48584)))

(assert (=> d!17485 (= res!39302 (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(assert (=> d!17485 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (mask!6180 (v!2533 (underlying!264 thiss!992)))) e!48584)))

(assert (= (and d!17485 (not res!39302)) b!74340))

(assert (= (and b!74340 c!11189) b!74339))

(assert (= (and b!74340 (not c!11189)) b!74341))

(assert (= (and b!74339 res!39303) b!74342))

(assert (= (or b!74342 b!74341) bm!6564))

(declare-fun m!73311 () Bool)

(assert (=> bm!6564 m!73311))

(assert (=> b!74339 m!73031))

(declare-fun m!73313 () Bool)

(assert (=> b!74339 m!73313))

(declare-fun m!73315 () Bool)

(assert (=> b!74339 m!73315))

(assert (=> b!74339 m!73031))

(declare-fun m!73317 () Bool)

(assert (=> b!74339 m!73317))

(assert (=> b!74340 m!73031))

(assert (=> b!74340 m!73031))

(assert (=> b!74340 m!73033))

(assert (=> b!73384 d!17485))

(assert (=> d!17033 d!17091))

(declare-fun d!17487 () Bool)

(declare-fun e!48586 () Bool)

(assert (=> d!17487 e!48586))

(declare-fun res!39304 () Bool)

(assert (=> d!17487 (=> (not res!39304) (not e!48586))))

(declare-fun lt!33375 () ListLongMap!1439)

(assert (=> d!17487 (= res!39304 (contains!729 lt!33375 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun lt!33374 () List!1507)

(assert (=> d!17487 (= lt!33375 (ListLongMap!1440 lt!33374))))

(declare-fun lt!33372 () Unit!2086)

(declare-fun lt!33373 () Unit!2086)

(assert (=> d!17487 (= lt!33372 lt!33373)))

(assert (=> d!17487 (= (getValueByKey!132 lt!33374 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (Some!137 (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!17487 (= lt!33373 (lemmaContainsTupThenGetReturnValue!51 lt!33374 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!17487 (= lt!33374 (insertStrictlySorted!53 (toList!735 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!17487 (= (+!98 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) lt!33375)))

(declare-fun b!74343 () Bool)

(declare-fun res!39305 () Bool)

(assert (=> b!74343 (=> (not res!39305) (not e!48586))))

(assert (=> b!74343 (= res!39305 (= (getValueByKey!132 (toList!735 lt!33375) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (Some!137 (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(declare-fun b!74344 () Bool)

(assert (=> b!74344 (= e!48586 (contains!730 (toList!735 lt!33375) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))

(assert (= (and d!17487 res!39304) b!74343))

(assert (= (and b!74343 res!39305) b!74344))

(declare-fun m!73319 () Bool)

(assert (=> d!17487 m!73319))

(declare-fun m!73321 () Bool)

(assert (=> d!17487 m!73321))

(declare-fun m!73323 () Bool)

(assert (=> d!17487 m!73323))

(declare-fun m!73325 () Bool)

(assert (=> d!17487 m!73325))

(declare-fun m!73327 () Bool)

(assert (=> b!74343 m!73327))

(declare-fun m!73329 () Bool)

(assert (=> b!74344 m!73329))

(assert (=> b!73639 d!17487))

(assert (=> b!73639 d!16873))

(declare-fun b!74345 () Bool)

(declare-fun e!48588 () Bool)

(declare-fun e!48591 () Bool)

(assert (=> b!74345 (= e!48588 e!48591)))

(declare-fun res!39311 () Bool)

(declare-fun call!6573 () Bool)

(assert (=> b!74345 (= res!39311 call!6573)))

(assert (=> b!74345 (=> (not res!39311) (not e!48591))))

(declare-fun b!74346 () Bool)

(declare-fun e!48595 () ListLongMap!1439)

(declare-fun call!6568 () ListLongMap!1439)

(assert (=> b!74346 (= e!48595 call!6568)))

(declare-fun b!74347 () Bool)

(declare-fun call!6569 () ListLongMap!1439)

(assert (=> b!74347 (= e!48595 call!6569)))

(declare-fun bm!6565 () Bool)

(declare-fun lt!33386 () ListLongMap!1439)

(assert (=> bm!6565 (= call!6573 (contains!729 lt!33386 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74348 () Bool)

(declare-fun e!48587 () Bool)

(declare-fun e!48593 () Bool)

(assert (=> b!74348 (= e!48587 e!48593)))

(declare-fun res!39309 () Bool)

(assert (=> b!74348 (=> (not res!39309) (not e!48593))))

(assert (=> b!74348 (= res!39309 (contains!729 lt!33386 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74348 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!74349 () Bool)

(declare-fun e!48589 () Unit!2086)

(declare-fun Unit!2143 () Unit!2086)

(assert (=> b!74349 (= e!48589 Unit!2143)))

(declare-fun bm!6566 () Bool)

(declare-fun call!6570 () ListLongMap!1439)

(assert (=> bm!6566 (= call!6568 call!6570)))

(declare-fun bm!6567 () Bool)

(declare-fun call!6574 () ListLongMap!1439)

(assert (=> bm!6567 (= call!6574 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!74351 () Bool)

(declare-fun lt!33376 () Unit!2086)

(assert (=> b!74351 (= e!48589 lt!33376)))

(declare-fun lt!33397 () ListLongMap!1439)

(assert (=> b!74351 (= lt!33397 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33391 () (_ BitVec 64))

(assert (=> b!74351 (= lt!33391 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33382 () (_ BitVec 64))

(assert (=> b!74351 (= lt!33382 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33379 () Unit!2086)

(assert (=> b!74351 (= lt!33379 (addStillContains!51 lt!33397 lt!33391 (zeroValue!2115 newMap!16) lt!33382))))

(assert (=> b!74351 (contains!729 (+!98 lt!33397 (tuple2!2147 lt!33391 (zeroValue!2115 newMap!16))) lt!33382)))

(declare-fun lt!33393 () Unit!2086)

(assert (=> b!74351 (= lt!33393 lt!33379)))

(declare-fun lt!33384 () ListLongMap!1439)

(assert (=> b!74351 (= lt!33384 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33394 () (_ BitVec 64))

(assert (=> b!74351 (= lt!33394 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33392 () (_ BitVec 64))

(assert (=> b!74351 (= lt!33392 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33396 () Unit!2086)

(assert (=> b!74351 (= lt!33396 (addApplyDifferent!51 lt!33384 lt!33394 (minValue!2115 newMap!16) lt!33392))))

(assert (=> b!74351 (= (apply!75 (+!98 lt!33384 (tuple2!2147 lt!33394 (minValue!2115 newMap!16))) lt!33392) (apply!75 lt!33384 lt!33392))))

(declare-fun lt!33381 () Unit!2086)

(assert (=> b!74351 (= lt!33381 lt!33396)))

(declare-fun lt!33395 () ListLongMap!1439)

(assert (=> b!74351 (= lt!33395 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33385 () (_ BitVec 64))

(assert (=> b!74351 (= lt!33385 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33377 () (_ BitVec 64))

(assert (=> b!74351 (= lt!33377 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33383 () Unit!2086)

(assert (=> b!74351 (= lt!33383 (addApplyDifferent!51 lt!33395 lt!33385 (zeroValue!2115 newMap!16) lt!33377))))

(assert (=> b!74351 (= (apply!75 (+!98 lt!33395 (tuple2!2147 lt!33385 (zeroValue!2115 newMap!16))) lt!33377) (apply!75 lt!33395 lt!33377))))

(declare-fun lt!33387 () Unit!2086)

(assert (=> b!74351 (= lt!33387 lt!33383)))

(declare-fun lt!33390 () ListLongMap!1439)

(assert (=> b!74351 (= lt!33390 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33380 () (_ BitVec 64))

(assert (=> b!74351 (= lt!33380 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33378 () (_ BitVec 64))

(assert (=> b!74351 (= lt!33378 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74351 (= lt!33376 (addApplyDifferent!51 lt!33390 lt!33380 (minValue!2115 newMap!16) lt!33378))))

(assert (=> b!74351 (= (apply!75 (+!98 lt!33390 (tuple2!2147 lt!33380 (minValue!2115 newMap!16))) lt!33378) (apply!75 lt!33390 lt!33378))))

(declare-fun b!74352 () Bool)

(assert (=> b!74352 (= e!48588 (not call!6573))))

(declare-fun b!74353 () Bool)

(declare-fun res!39310 () Bool)

(declare-fun e!48598 () Bool)

(assert (=> b!74353 (=> (not res!39310) (not e!48598))))

(assert (=> b!74353 (= res!39310 e!48588)))

(declare-fun c!11190 () Bool)

(assert (=> b!74353 (= c!11190 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!74354 () Bool)

(declare-fun e!48592 () ListLongMap!1439)

(declare-fun e!48599 () ListLongMap!1439)

(assert (=> b!74354 (= e!48592 e!48599)))

(declare-fun c!11192 () Bool)

(assert (=> b!74354 (= c!11192 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74355 () Bool)

(declare-fun e!48594 () Bool)

(declare-fun e!48590 () Bool)

(assert (=> b!74355 (= e!48594 e!48590)))

(declare-fun res!39314 () Bool)

(declare-fun call!6571 () Bool)

(assert (=> b!74355 (= res!39314 call!6571)))

(assert (=> b!74355 (=> (not res!39314) (not e!48590))))

(declare-fun bm!6568 () Bool)

(assert (=> bm!6568 (= call!6570 call!6574)))

(declare-fun bm!6569 () Bool)

(declare-fun call!6572 () ListLongMap!1439)

(assert (=> bm!6569 (= call!6569 call!6572)))

(declare-fun b!74356 () Bool)

(assert (=> b!74356 (= e!48594 (not call!6571))))

(declare-fun b!74357 () Bool)

(declare-fun res!39307 () Bool)

(assert (=> b!74357 (=> (not res!39307) (not e!48598))))

(assert (=> b!74357 (= res!39307 e!48587)))

(declare-fun res!39306 () Bool)

(assert (=> b!74357 (=> res!39306 e!48587)))

(declare-fun e!48596 () Bool)

(assert (=> b!74357 (= res!39306 (not e!48596))))

(declare-fun res!39308 () Bool)

(assert (=> b!74357 (=> (not res!39308) (not e!48596))))

(assert (=> b!74357 (= res!39308 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!74358 () Bool)

(assert (=> b!74358 (= e!48598 e!48594)))

(declare-fun c!11194 () Bool)

(assert (=> b!74358 (= c!11194 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74359 () Bool)

(assert (=> b!74359 (= e!48590 (= (apply!75 lt!33386 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2115 newMap!16)))))

(declare-fun b!74360 () Bool)

(assert (=> b!74360 (= e!48599 call!6569)))

(declare-fun bm!6570 () Bool)

(assert (=> bm!6570 (= call!6571 (contains!729 lt!33386 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17489 () Bool)

(assert (=> d!17489 e!48598))

(declare-fun res!39312 () Bool)

(assert (=> d!17489 (=> (not res!39312) (not e!48598))))

(assert (=> d!17489 (= res!39312 (or (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))))

(declare-fun lt!33388 () ListLongMap!1439)

(assert (=> d!17489 (= lt!33386 lt!33388)))

(declare-fun lt!33389 () Unit!2086)

(assert (=> d!17489 (= lt!33389 e!48589)))

(declare-fun c!11193 () Bool)

(declare-fun e!48597 () Bool)

(assert (=> d!17489 (= c!11193 e!48597)))

(declare-fun res!39313 () Bool)

(assert (=> d!17489 (=> (not res!39313) (not e!48597))))

(assert (=> d!17489 (= res!39313 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!17489 (= lt!33388 e!48592)))

(declare-fun c!11191 () Bool)

(assert (=> d!17489 (= c!11191 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17489 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17489 (= (getCurrentListMap!426 (_keys!3865 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33386)))

(declare-fun b!74350 () Bool)

(assert (=> b!74350 (= e!48591 (= (apply!75 lt!33386 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2115 newMap!16)))))

(declare-fun b!74361 () Bool)

(assert (=> b!74361 (= e!48596 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74362 () Bool)

(declare-fun c!11195 () Bool)

(assert (=> b!74362 (= c!11195 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!74362 (= e!48599 e!48595)))

(declare-fun b!74363 () Bool)

(assert (=> b!74363 (= e!48597 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74364 () Bool)

(assert (=> b!74364 (= e!48593 (= (apply!75 lt!33386 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1154 (select (arr!1859 (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74364 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))))))))

(assert (=> b!74364 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun bm!6571 () Bool)

(assert (=> bm!6571 (= call!6572 (+!98 (ite c!11191 call!6574 (ite c!11192 call!6570 call!6568)) (ite (or c!11191 c!11192) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(declare-fun b!74365 () Bool)

(assert (=> b!74365 (= e!48592 (+!98 call!6572 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))

(assert (= (and d!17489 c!11191) b!74365))

(assert (= (and d!17489 (not c!11191)) b!74354))

(assert (= (and b!74354 c!11192) b!74360))

(assert (= (and b!74354 (not c!11192)) b!74362))

(assert (= (and b!74362 c!11195) b!74347))

(assert (= (and b!74362 (not c!11195)) b!74346))

(assert (= (or b!74347 b!74346) bm!6566))

(assert (= (or b!74360 bm!6566) bm!6568))

(assert (= (or b!74360 b!74347) bm!6569))

(assert (= (or b!74365 bm!6568) bm!6567))

(assert (= (or b!74365 bm!6569) bm!6571))

(assert (= (and d!17489 res!39313) b!74363))

(assert (= (and d!17489 c!11193) b!74351))

(assert (= (and d!17489 (not c!11193)) b!74349))

(assert (= (and d!17489 res!39312) b!74357))

(assert (= (and b!74357 res!39308) b!74361))

(assert (= (and b!74357 (not res!39306)) b!74348))

(assert (= (and b!74348 res!39309) b!74364))

(assert (= (and b!74357 res!39307) b!74353))

(assert (= (and b!74353 c!11190) b!74345))

(assert (= (and b!74353 (not c!11190)) b!74352))

(assert (= (and b!74345 res!39311) b!74350))

(assert (= (or b!74345 b!74352) bm!6565))

(assert (= (and b!74353 res!39310) b!74358))

(assert (= (and b!74358 c!11194) b!74355))

(assert (= (and b!74358 (not c!11194)) b!74356))

(assert (= (and b!74355 res!39314) b!74359))

(assert (= (or b!74355 b!74356) bm!6570))

(declare-fun b_lambda!3341 () Bool)

(assert (=> (not b_lambda!3341) (not b!74364)))

(assert (=> b!74364 t!5077))

(declare-fun b_and!4557 () Bool)

(assert (= b_and!4553 (and (=> t!5077 result!2697) b_and!4557)))

(assert (=> b!74364 t!5079))

(declare-fun b_and!4559 () Bool)

(assert (= b_and!4555 (and (=> t!5079 result!2699) b_and!4559)))

(declare-fun m!73331 () Bool)

(assert (=> bm!6571 m!73331))

(declare-fun m!73333 () Bool)

(assert (=> b!74350 m!73333))

(declare-fun m!73335 () Bool)

(assert (=> bm!6567 m!73335))

(assert (=> b!74361 m!71397))

(assert (=> b!74361 m!71397))

(assert (=> b!74361 m!71411))

(declare-fun m!73337 () Bool)

(assert (=> b!74365 m!73337))

(declare-fun m!73339 () Bool)

(assert (=> bm!6565 m!73339))

(declare-fun m!73341 () Bool)

(assert (=> b!74351 m!73341))

(declare-fun m!73343 () Bool)

(assert (=> b!74351 m!73343))

(declare-fun m!73345 () Bool)

(assert (=> b!74351 m!73345))

(assert (=> b!74351 m!71397))

(declare-fun m!73347 () Bool)

(assert (=> b!74351 m!73347))

(declare-fun m!73349 () Bool)

(assert (=> b!74351 m!73349))

(declare-fun m!73351 () Bool)

(assert (=> b!74351 m!73351))

(assert (=> b!74351 m!73347))

(declare-fun m!73353 () Bool)

(assert (=> b!74351 m!73353))

(assert (=> b!74351 m!73335))

(declare-fun m!73355 () Bool)

(assert (=> b!74351 m!73355))

(assert (=> b!74351 m!73343))

(declare-fun m!73357 () Bool)

(assert (=> b!74351 m!73357))

(assert (=> b!74351 m!73341))

(declare-fun m!73359 () Bool)

(assert (=> b!74351 m!73359))

(declare-fun m!73361 () Bool)

(assert (=> b!74351 m!73361))

(assert (=> b!74351 m!73345))

(declare-fun m!73363 () Bool)

(assert (=> b!74351 m!73363))

(declare-fun m!73365 () Bool)

(assert (=> b!74351 m!73365))

(declare-fun m!73367 () Bool)

(assert (=> b!74351 m!73367))

(declare-fun m!73369 () Bool)

(assert (=> b!74351 m!73369))

(assert (=> b!74348 m!71397))

(assert (=> b!74348 m!71397))

(declare-fun m!73371 () Bool)

(assert (=> b!74348 m!73371))

(declare-fun m!73373 () Bool)

(assert (=> bm!6570 m!73373))

(assert (=> b!74364 m!71397))

(assert (=> b!74364 m!71397))

(declare-fun m!73375 () Bool)

(assert (=> b!74364 m!73375))

(assert (=> b!74364 m!71521))

(declare-fun m!73377 () Bool)

(assert (=> b!74364 m!73377))

(assert (=> b!74364 m!73377))

(assert (=> b!74364 m!71521))

(declare-fun m!73379 () Bool)

(assert (=> b!74364 m!73379))

(assert (=> b!74363 m!71397))

(assert (=> b!74363 m!71397))

(assert (=> b!74363 m!71411))

(declare-fun m!73381 () Bool)

(assert (=> b!74359 m!73381))

(assert (=> d!17489 m!71423))

(assert (=> b!73639 d!17489))

(declare-fun d!17491 () Bool)

(assert (=> d!17491 (= ($colon$colon!65 e!48119 (ite c!10976 (h!2090 (toList!735 (+!98 lt!32476 lt!32482))) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472)))) (Cons!1503 (ite c!10976 (h!2090 (toList!735 (+!98 lt!32476 lt!32482))) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))) e!48119))))

(assert (=> bm!6489 d!17491))

(declare-fun d!17493 () Bool)

(assert (=> d!17493 (isDefined!86 (getValueByKey!132 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32662))))

(declare-fun lt!33398 () Unit!2086)

(assert (=> d!17493 (= lt!33398 (choose!421 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32662))))

(declare-fun e!48600 () Bool)

(assert (=> d!17493 e!48600))

(declare-fun res!39315 () Bool)

(assert (=> d!17493 (=> (not res!39315) (not e!48600))))

(assert (=> d!17493 (= res!39315 (isStrictlySorted!287 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17493 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32662) lt!33398)))

(declare-fun b!74366 () Bool)

(assert (=> b!74366 (= e!48600 (containsKey!136 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32662))))

(assert (= (and d!17493 res!39315) b!74366))

(assert (=> d!17493 m!71845))

(assert (=> d!17493 m!71845))

(assert (=> d!17493 m!71847))

(declare-fun m!73383 () Bool)

(assert (=> d!17493 m!73383))

(declare-fun m!73385 () Bool)

(assert (=> d!17493 m!73385))

(assert (=> b!74366 m!71841))

(assert (=> b!73517 d!17493))

(declare-fun d!17495 () Bool)

(assert (=> d!17495 (= (isDefined!86 (getValueByKey!132 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32662)) (not (isEmpty!322 (getValueByKey!132 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32662))))))

(declare-fun bs!3194 () Bool)

(assert (= bs!3194 d!17495))

(assert (=> bs!3194 m!71845))

(declare-fun m!73387 () Bool)

(assert (=> bs!3194 m!73387))

(assert (=> b!73517 d!17495))

(declare-fun b!74370 () Bool)

(declare-fun e!48602 () Option!138)

(assert (=> b!74370 (= e!48602 None!136)))

(declare-fun b!74368 () Bool)

(declare-fun e!48601 () Option!138)

(assert (=> b!74368 (= e!48601 e!48602)))

(declare-fun c!11197 () Bool)

(assert (=> b!74368 (= c!11197 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))) (not (= (_1!1083 (h!2090 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))) lt!32662))))))

(declare-fun b!74367 () Bool)

(assert (=> b!74367 (= e!48601 (Some!137 (_2!1083 (h!2090 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))))

(declare-fun c!11196 () Bool)

(declare-fun d!17497 () Bool)

(assert (=> d!17497 (= c!11196 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))) (= (_1!1083 (h!2090 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))) lt!32662)))))

(assert (=> d!17497 (= (getValueByKey!132 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32662) e!48601)))

(declare-fun b!74369 () Bool)

(assert (=> b!74369 (= e!48602 (getValueByKey!132 (t!5068 (toList!735 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))) lt!32662))))

(assert (= (and d!17497 c!11196) b!74367))

(assert (= (and d!17497 (not c!11196)) b!74368))

(assert (= (and b!74368 c!11197) b!74369))

(assert (= (and b!74368 (not c!11197)) b!74370))

(declare-fun m!73389 () Bool)

(assert (=> b!74369 m!73389))

(assert (=> b!73517 d!17497))

(declare-fun d!17499 () Bool)

(assert (=> d!17499 (isDefined!86 (getValueByKey!132 (toList!735 lt!32694) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!33399 () Unit!2086)

(assert (=> d!17499 (= lt!33399 (choose!421 (toList!735 lt!32694) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48603 () Bool)

(assert (=> d!17499 e!48603))

(declare-fun res!39316 () Bool)

(assert (=> d!17499 (=> (not res!39316) (not e!48603))))

(assert (=> d!17499 (= res!39316 (isStrictlySorted!287 (toList!735 lt!32694)))))

(assert (=> d!17499 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32694) #b0000000000000000000000000000000000000000000000000000000000000000) lt!33399)))

(declare-fun b!74371 () Bool)

(assert (=> b!74371 (= e!48603 (containsKey!136 (toList!735 lt!32694) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17499 res!39316) b!74371))

(assert (=> d!17499 m!71471))

(assert (=> d!17499 m!71471))

(assert (=> d!17499 m!71473))

(declare-fun m!73391 () Bool)

(assert (=> d!17499 m!73391))

(declare-fun m!73393 () Bool)

(assert (=> d!17499 m!73393))

(assert (=> b!74371 m!71467))

(assert (=> b!73308 d!17499))

(declare-fun d!17501 () Bool)

(assert (=> d!17501 (= (isDefined!86 (getValueByKey!132 (toList!735 lt!32694) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!322 (getValueByKey!132 (toList!735 lt!32694) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3195 () Bool)

(assert (= bs!3195 d!17501))

(assert (=> bs!3195 m!71471))

(declare-fun m!73395 () Bool)

(assert (=> bs!3195 m!73395))

(assert (=> b!73308 d!17501))

(declare-fun b!74375 () Bool)

(declare-fun e!48605 () Option!138)

(assert (=> b!74375 (= e!48605 None!136)))

(declare-fun b!74373 () Bool)

(declare-fun e!48604 () Option!138)

(assert (=> b!74373 (= e!48604 e!48605)))

(declare-fun c!11199 () Bool)

(assert (=> b!74373 (= c!11199 (and ((_ is Cons!1503) (toList!735 lt!32694)) (not (= (_1!1083 (h!2090 (toList!735 lt!32694))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!74372 () Bool)

(assert (=> b!74372 (= e!48604 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32694)))))))

(declare-fun d!17503 () Bool)

(declare-fun c!11198 () Bool)

(assert (=> d!17503 (= c!11198 (and ((_ is Cons!1503) (toList!735 lt!32694)) (= (_1!1083 (h!2090 (toList!735 lt!32694))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17503 (= (getValueByKey!132 (toList!735 lt!32694) #b0000000000000000000000000000000000000000000000000000000000000000) e!48604)))

(declare-fun b!74374 () Bool)

(assert (=> b!74374 (= e!48605 (getValueByKey!132 (t!5068 (toList!735 lt!32694)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17503 c!11198) b!74372))

(assert (= (and d!17503 (not c!11198)) b!74373))

(assert (= (and b!74373 c!11199) b!74374))

(assert (= (and b!74373 (not c!11199)) b!74375))

(declare-fun m!73397 () Bool)

(assert (=> b!74374 m!73397))

(assert (=> b!73308 d!17503))

(declare-fun d!17505 () Bool)

(declare-fun res!39317 () Bool)

(declare-fun e!48606 () Bool)

(assert (=> d!17505 (=> res!39317 e!48606)))

(assert (=> d!17505 (= res!39317 (and ((_ is Cons!1503) lt!32878) (= (_1!1083 (h!2090 lt!32878)) (_1!1083 lt!32472))))))

(assert (=> d!17505 (= (containsKey!136 lt!32878 (_1!1083 lt!32472)) e!48606)))

(declare-fun b!74376 () Bool)

(declare-fun e!48607 () Bool)

(assert (=> b!74376 (= e!48606 e!48607)))

(declare-fun res!39318 () Bool)

(assert (=> b!74376 (=> (not res!39318) (not e!48607))))

(assert (=> b!74376 (= res!39318 (and (or (not ((_ is Cons!1503) lt!32878)) (bvsle (_1!1083 (h!2090 lt!32878)) (_1!1083 lt!32472))) ((_ is Cons!1503) lt!32878) (bvslt (_1!1083 (h!2090 lt!32878)) (_1!1083 lt!32472))))))

(declare-fun b!74377 () Bool)

(assert (=> b!74377 (= e!48607 (containsKey!136 (t!5068 lt!32878) (_1!1083 lt!32472)))))

(assert (= (and d!17505 (not res!39317)) b!74376))

(assert (= (and b!74376 res!39318) b!74377))

(declare-fun m!73399 () Bool)

(assert (=> b!74377 m!73399))

(assert (=> b!73502 d!17505))

(declare-fun d!17507 () Bool)

(declare-fun res!39319 () Bool)

(declare-fun e!48608 () Bool)

(assert (=> d!17507 (=> res!39319 e!48608)))

(assert (=> d!17507 (= res!39319 (and ((_ is Cons!1503) (toList!735 lt!32666)) (= (_1!1083 (h!2090 (toList!735 lt!32666))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17507 (= (containsKey!136 (toList!735 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000) e!48608)))

(declare-fun b!74378 () Bool)

(declare-fun e!48609 () Bool)

(assert (=> b!74378 (= e!48608 e!48609)))

(declare-fun res!39320 () Bool)

(assert (=> b!74378 (=> (not res!39320) (not e!48609))))

(assert (=> b!74378 (= res!39320 (and (or (not ((_ is Cons!1503) (toList!735 lt!32666))) (bvsle (_1!1083 (h!2090 (toList!735 lt!32666))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1503) (toList!735 lt!32666)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32666))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74379 () Bool)

(assert (=> b!74379 (= e!48609 (containsKey!136 (t!5068 (toList!735 lt!32666)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17507 (not res!39319)) b!74378))

(assert (= (and b!74378 res!39320) b!74379))

(declare-fun m!73401 () Bool)

(assert (=> b!74379 m!73401))

(assert (=> d!17037 d!17507))

(declare-fun d!17509 () Bool)

(declare-fun res!39321 () Bool)

(declare-fun e!48610 () Bool)

(assert (=> d!17509 (=> res!39321 e!48610)))

(assert (=> d!17509 (= res!39321 (and ((_ is Cons!1503) (toList!735 lt!32694)) (= (_1!1083 (h!2090 (toList!735 lt!32694))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!17509 (= (containsKey!136 (toList!735 lt!32694) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!48610)))

(declare-fun b!74380 () Bool)

(declare-fun e!48611 () Bool)

(assert (=> b!74380 (= e!48610 e!48611)))

(declare-fun res!39322 () Bool)

(assert (=> b!74380 (=> (not res!39322) (not e!48611))))

(assert (=> b!74380 (= res!39322 (and (or (not ((_ is Cons!1503) (toList!735 lt!32694))) (bvsle (_1!1083 (h!2090 (toList!735 lt!32694))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1503) (toList!735 lt!32694)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32694))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!74381 () Bool)

(assert (=> b!74381 (= e!48611 (containsKey!136 (t!5068 (toList!735 lt!32694)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!17509 (not res!39321)) b!74380))

(assert (= (and b!74380 res!39322) b!74381))

(assert (=> b!74381 m!71227))

(declare-fun m!73403 () Bool)

(assert (=> b!74381 m!73403))

(assert (=> d!17041 d!17509))

(declare-fun d!17511 () Bool)

(declare-fun lt!33400 () Bool)

(assert (=> d!17511 (= lt!33400 (select (content!76 (toList!735 lt!32788)) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun e!48612 () Bool)

(assert (=> d!17511 (= lt!33400 e!48612)))

(declare-fun res!39324 () Bool)

(assert (=> d!17511 (=> (not res!39324) (not e!48612))))

(assert (=> d!17511 (= res!39324 ((_ is Cons!1503) (toList!735 lt!32788)))))

(assert (=> d!17511 (= (contains!730 (toList!735 lt!32788) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!33400)))

(declare-fun b!74382 () Bool)

(declare-fun e!48613 () Bool)

(assert (=> b!74382 (= e!48612 e!48613)))

(declare-fun res!39323 () Bool)

(assert (=> b!74382 (=> res!39323 e!48613)))

(assert (=> b!74382 (= res!39323 (= (h!2090 (toList!735 lt!32788)) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!74383 () Bool)

(assert (=> b!74383 (= e!48613 (contains!730 (t!5068 (toList!735 lt!32788)) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(assert (= (and d!17511 res!39324) b!74382))

(assert (= (and b!74382 (not res!39323)) b!74383))

(declare-fun m!73405 () Bool)

(assert (=> d!17511 m!73405))

(declare-fun m!73407 () Bool)

(assert (=> d!17511 m!73407))

(declare-fun m!73409 () Bool)

(assert (=> b!74383 m!73409))

(assert (=> b!73333 d!17511))

(declare-fun b!74384 () Bool)

(declare-fun e!48614 () Bool)

(declare-fun e!48616 () Bool)

(assert (=> b!74384 (= e!48614 e!48616)))

(declare-fun res!39327 () Bool)

(assert (=> b!74384 (=> (not res!39327) (not e!48616))))

(declare-fun e!48615 () Bool)

(assert (=> b!74384 (= res!39327 (not e!48615))))

(declare-fun res!39325 () Bool)

(assert (=> b!74384 (=> (not res!39325) (not e!48615))))

(assert (=> b!74384 (= res!39325 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!74385 () Bool)

(declare-fun e!48617 () Bool)

(declare-fun call!6575 () Bool)

(assert (=> b!74385 (= e!48617 call!6575)))

(declare-fun b!74386 () Bool)

(assert (=> b!74386 (= e!48617 call!6575)))

(declare-fun b!74387 () Bool)

(assert (=> b!74387 (= e!48615 (contains!731 (ite c!10945 (Cons!1504 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) Nil!1505) Nil!1505) (select (arr!1858 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!74388 () Bool)

(assert (=> b!74388 (= e!48616 e!48617)))

(declare-fun c!11200 () Bool)

(assert (=> b!74388 (= c!11200 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!6572 () Bool)

(assert (=> bm!6572 (= call!6575 (arrayNoDuplicates!0 (_keys!3865 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!11200 (Cons!1504 (select (arr!1858 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!10945 (Cons!1504 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) Nil!1505) Nil!1505)) (ite c!10945 (Cons!1504 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) Nil!1505) Nil!1505))))))

(declare-fun d!17513 () Bool)

(declare-fun res!39326 () Bool)

(assert (=> d!17513 (=> res!39326 e!48614)))

(assert (=> d!17513 (= res!39326 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!17513 (= (arrayNoDuplicates!0 (_keys!3865 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10945 (Cons!1504 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) Nil!1505) Nil!1505)) e!48614)))

(assert (= (and d!17513 (not res!39326)) b!74384))

(assert (= (and b!74384 res!39325) b!74387))

(assert (= (and b!74384 res!39327) b!74388))

(assert (= (and b!74388 c!11200) b!74385))

(assert (= (and b!74388 (not c!11200)) b!74386))

(assert (= (or b!74385 b!74386) bm!6572))

(assert (=> b!74384 m!72513))

(assert (=> b!74384 m!72513))

(assert (=> b!74384 m!72515))

(assert (=> b!74387 m!72513))

(assert (=> b!74387 m!72513))

(declare-fun m!73411 () Bool)

(assert (=> b!74387 m!73411))

(assert (=> b!74388 m!72513))

(assert (=> b!74388 m!72513))

(assert (=> b!74388 m!72515))

(assert (=> bm!6572 m!72513))

(declare-fun m!73413 () Bool)

(assert (=> bm!6572 m!73413))

(assert (=> bm!6470 d!17513))

(assert (=> d!16985 d!16983))

(declare-fun d!17515 () Bool)

(assert (=> d!17515 (= (getValueByKey!132 lt!32720 (_1!1083 lt!32472)) (Some!137 (_2!1083 lt!32472)))))

(assert (=> d!17515 true))

(declare-fun _$22!388 () Unit!2086)

(assert (=> d!17515 (= (choose!422 lt!32720 (_1!1083 lt!32472) (_2!1083 lt!32472)) _$22!388)))

(declare-fun bs!3196 () Bool)

(assert (= bs!3196 d!17515))

(assert (=> bs!3196 m!71337))

(assert (=> d!16985 d!17515))

(declare-fun d!17517 () Bool)

(declare-fun res!39328 () Bool)

(declare-fun e!48618 () Bool)

(assert (=> d!17517 (=> res!39328 e!48618)))

(assert (=> d!17517 (= res!39328 (or ((_ is Nil!1504) lt!32720) ((_ is Nil!1504) (t!5068 lt!32720))))))

(assert (=> d!17517 (= (isStrictlySorted!287 lt!32720) e!48618)))

(declare-fun b!74389 () Bool)

(declare-fun e!48619 () Bool)

(assert (=> b!74389 (= e!48618 e!48619)))

(declare-fun res!39329 () Bool)

(assert (=> b!74389 (=> (not res!39329) (not e!48619))))

(assert (=> b!74389 (= res!39329 (bvslt (_1!1083 (h!2090 lt!32720)) (_1!1083 (h!2090 (t!5068 lt!32720)))))))

(declare-fun b!74390 () Bool)

(assert (=> b!74390 (= e!48619 (isStrictlySorted!287 (t!5068 lt!32720)))))

(assert (= (and d!17517 (not res!39328)) b!74389))

(assert (= (and b!74389 res!39329) b!74390))

(declare-fun m!73415 () Bool)

(assert (=> b!74390 m!73415))

(assert (=> d!16985 d!17517))

(assert (=> b!73327 d!17087))

(declare-fun d!17519 () Bool)

(assert (=> d!17519 (= ($colon$colon!65 e!48048 (ite c!10942 (h!2090 (toList!735 (+!98 lt!32476 lt!32472))) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482)))) (Cons!1503 (ite c!10942 (h!2090 (toList!735 (+!98 lt!32476 lt!32472))) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))) e!48048))))

(assert (=> bm!6467 d!17519))

(declare-fun d!17521 () Bool)

(assert (=> d!17521 (isDefined!86 (getValueByKey!132 (toList!735 e!47808) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593)))))))

(declare-fun lt!33401 () Unit!2086)

(assert (=> d!17521 (= lt!33401 (choose!421 (toList!735 e!47808) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593)))))))

(declare-fun e!48620 () Bool)

(assert (=> d!17521 e!48620))

(declare-fun res!39330 () Bool)

(assert (=> d!17521 (=> (not res!39330) (not e!48620))))

(assert (=> d!17521 (= res!39330 (isStrictlySorted!287 (toList!735 e!47808)))))

(assert (=> d!17521 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 e!47808) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593)))) lt!33401)))

(declare-fun b!74391 () Bool)

(assert (=> b!74391 (= e!48620 (containsKey!136 (toList!735 e!47808) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593)))))))

(assert (= (and d!17521 res!39330) b!74391))

(assert (=> d!17521 m!71581))

(assert (=> d!17521 m!71581))

(assert (=> d!17521 m!71583))

(declare-fun m!73417 () Bool)

(assert (=> d!17521 m!73417))

(declare-fun m!73419 () Bool)

(assert (=> d!17521 m!73419))

(assert (=> b!74391 m!71577))

(assert (=> b!73340 d!17521))

(declare-fun d!17523 () Bool)

(assert (=> d!17523 (= (isDefined!86 (getValueByKey!132 (toList!735 e!47808) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593))))) (not (isEmpty!322 (getValueByKey!132 (toList!735 e!47808) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593)))))))))

(declare-fun bs!3197 () Bool)

(assert (= bs!3197 d!17523))

(assert (=> bs!3197 m!71581))

(declare-fun m!73421 () Bool)

(assert (=> bs!3197 m!73421))

(assert (=> b!73340 d!17523))

(declare-fun b!74395 () Bool)

(declare-fun e!48622 () Option!138)

(assert (=> b!74395 (= e!48622 None!136)))

(declare-fun b!74393 () Bool)

(declare-fun e!48621 () Option!138)

(assert (=> b!74393 (= e!48621 e!48622)))

(declare-fun c!11202 () Bool)

(assert (=> b!74393 (= c!11202 (and ((_ is Cons!1503) (toList!735 e!47808)) (not (= (_1!1083 (h!2090 (toList!735 e!47808))) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593)))))))))

(declare-fun b!74392 () Bool)

(assert (=> b!74392 (= e!48621 (Some!137 (_2!1083 (h!2090 (toList!735 e!47808)))))))

(declare-fun d!17525 () Bool)

(declare-fun c!11201 () Bool)

(assert (=> d!17525 (= c!11201 (and ((_ is Cons!1503) (toList!735 e!47808)) (= (_1!1083 (h!2090 (toList!735 e!47808))) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593))))))))

(assert (=> d!17525 (= (getValueByKey!132 (toList!735 e!47808) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593)))) e!48621)))

(declare-fun b!74394 () Bool)

(assert (=> b!74394 (= e!48622 (getValueByKey!132 (t!5068 (toList!735 e!47808)) (ite c!10830 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593)))))))

(assert (= (and d!17525 c!11201) b!74392))

(assert (= (and d!17525 (not c!11201)) b!74393))

(assert (= (and b!74393 c!11202) b!74394))

(assert (= (and b!74393 (not c!11202)) b!74395))

(declare-fun m!73423 () Bool)

(assert (=> b!74394 m!73423))

(assert (=> b!73340 d!17525))

(declare-fun d!17527 () Bool)

(assert (=> d!17527 (= (inRange!0 (ite c!10971 (index!3116 lt!32986) (ite c!10969 (index!3115 lt!32994) (index!3118 lt!32994))) (mask!6180 newMap!16)) (and (bvsge (ite c!10971 (index!3116 lt!32986) (ite c!10969 (index!3115 lt!32994) (index!3118 lt!32994))) #b00000000000000000000000000000000) (bvslt (ite c!10971 (index!3116 lt!32986) (ite c!10969 (index!3115 lt!32994) (index!3118 lt!32994))) (bvadd (mask!6180 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6485 d!17527))

(declare-fun d!17529 () Bool)

(assert (=> d!17529 (= (apply!75 (+!98 lt!33071 (tuple2!2147 lt!33061 (zeroValue!2115 newMap!16))) lt!33053) (get!1158 (getValueByKey!132 (toList!735 (+!98 lt!33071 (tuple2!2147 lt!33061 (zeroValue!2115 newMap!16)))) lt!33053)))))

(declare-fun bs!3198 () Bool)

(assert (= bs!3198 d!17529))

(declare-fun m!73425 () Bool)

(assert (=> bs!3198 m!73425))

(assert (=> bs!3198 m!73425))

(declare-fun m!73427 () Bool)

(assert (=> bs!3198 m!73427))

(assert (=> b!73688 d!17529))

(declare-fun d!17531 () Bool)

(assert (=> d!17531 (= (apply!75 (+!98 lt!33060 (tuple2!2147 lt!33070 (minValue!2115 newMap!16))) lt!33068) (apply!75 lt!33060 lt!33068))))

(declare-fun lt!33402 () Unit!2086)

(assert (=> d!17531 (= lt!33402 (choose!424 lt!33060 lt!33070 (minValue!2115 newMap!16) lt!33068))))

(declare-fun e!48623 () Bool)

(assert (=> d!17531 e!48623))

(declare-fun res!39331 () Bool)

(assert (=> d!17531 (=> (not res!39331) (not e!48623))))

(assert (=> d!17531 (= res!39331 (contains!729 lt!33060 lt!33068))))

(assert (=> d!17531 (= (addApplyDifferent!51 lt!33060 lt!33070 (minValue!2115 newMap!16) lt!33068) lt!33402)))

(declare-fun b!74396 () Bool)

(assert (=> b!74396 (= e!48623 (not (= lt!33068 lt!33070)))))

(assert (= (and d!17531 res!39331) b!74396))

(assert (=> d!17531 m!72115))

(assert (=> d!17531 m!72115))

(assert (=> d!17531 m!72133))

(assert (=> d!17531 m!72123))

(declare-fun m!73429 () Bool)

(assert (=> d!17531 m!73429))

(declare-fun m!73431 () Bool)

(assert (=> d!17531 m!73431))

(assert (=> b!73688 d!17531))

(declare-fun d!17533 () Bool)

(assert (=> d!17533 (= (apply!75 (+!98 lt!33071 (tuple2!2147 lt!33061 (zeroValue!2115 newMap!16))) lt!33053) (apply!75 lt!33071 lt!33053))))

(declare-fun lt!33403 () Unit!2086)

(assert (=> d!17533 (= lt!33403 (choose!424 lt!33071 lt!33061 (zeroValue!2115 newMap!16) lt!33053))))

(declare-fun e!48624 () Bool)

(assert (=> d!17533 e!48624))

(declare-fun res!39332 () Bool)

(assert (=> d!17533 (=> (not res!39332) (not e!48624))))

(assert (=> d!17533 (= res!39332 (contains!729 lt!33071 lt!33053))))

(assert (=> d!17533 (= (addApplyDifferent!51 lt!33071 lt!33061 (zeroValue!2115 newMap!16) lt!33053) lt!33403)))

(declare-fun b!74397 () Bool)

(assert (=> b!74397 (= e!48624 (not (= lt!33053 lt!33061)))))

(assert (= (and d!17533 res!39332) b!74397))

(assert (=> d!17533 m!72119))

(assert (=> d!17533 m!72119))

(assert (=> d!17533 m!72137))

(assert (=> d!17533 m!72141))

(declare-fun m!73433 () Bool)

(assert (=> d!17533 m!73433))

(declare-fun m!73435 () Bool)

(assert (=> d!17533 m!73435))

(assert (=> b!73688 d!17533))

(declare-fun d!17535 () Bool)

(declare-fun e!48625 () Bool)

(assert (=> d!17535 e!48625))

(declare-fun res!39333 () Bool)

(assert (=> d!17535 (=> (not res!39333) (not e!48625))))

(declare-fun lt!33407 () ListLongMap!1439)

(assert (=> d!17535 (= res!39333 (contains!729 lt!33407 (_1!1083 (tuple2!2147 lt!33070 (minValue!2115 newMap!16)))))))

(declare-fun lt!33406 () List!1507)

(assert (=> d!17535 (= lt!33407 (ListLongMap!1440 lt!33406))))

(declare-fun lt!33404 () Unit!2086)

(declare-fun lt!33405 () Unit!2086)

(assert (=> d!17535 (= lt!33404 lt!33405)))

(assert (=> d!17535 (= (getValueByKey!132 lt!33406 (_1!1083 (tuple2!2147 lt!33070 (minValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 lt!33070 (minValue!2115 newMap!16)))))))

(assert (=> d!17535 (= lt!33405 (lemmaContainsTupThenGetReturnValue!51 lt!33406 (_1!1083 (tuple2!2147 lt!33070 (minValue!2115 newMap!16))) (_2!1083 (tuple2!2147 lt!33070 (minValue!2115 newMap!16)))))))

(assert (=> d!17535 (= lt!33406 (insertStrictlySorted!53 (toList!735 lt!33060) (_1!1083 (tuple2!2147 lt!33070 (minValue!2115 newMap!16))) (_2!1083 (tuple2!2147 lt!33070 (minValue!2115 newMap!16)))))))

(assert (=> d!17535 (= (+!98 lt!33060 (tuple2!2147 lt!33070 (minValue!2115 newMap!16))) lt!33407)))

(declare-fun b!74398 () Bool)

(declare-fun res!39334 () Bool)

(assert (=> b!74398 (=> (not res!39334) (not e!48625))))

(assert (=> b!74398 (= res!39334 (= (getValueByKey!132 (toList!735 lt!33407) (_1!1083 (tuple2!2147 lt!33070 (minValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 lt!33070 (minValue!2115 newMap!16))))))))

(declare-fun b!74399 () Bool)

(assert (=> b!74399 (= e!48625 (contains!730 (toList!735 lt!33407) (tuple2!2147 lt!33070 (minValue!2115 newMap!16))))))

(assert (= (and d!17535 res!39333) b!74398))

(assert (= (and b!74398 res!39334) b!74399))

(declare-fun m!73437 () Bool)

(assert (=> d!17535 m!73437))

(declare-fun m!73439 () Bool)

(assert (=> d!17535 m!73439))

(declare-fun m!73441 () Bool)

(assert (=> d!17535 m!73441))

(declare-fun m!73443 () Bool)

(assert (=> d!17535 m!73443))

(declare-fun m!73445 () Bool)

(assert (=> b!74398 m!73445))

(declare-fun m!73447 () Bool)

(assert (=> b!74399 m!73447))

(assert (=> b!73688 d!17535))

(declare-fun d!17537 () Bool)

(assert (=> d!17537 (= (apply!75 (+!98 lt!33066 (tuple2!2147 lt!33056 (minValue!2115 newMap!16))) lt!33054) (apply!75 lt!33066 lt!33054))))

(declare-fun lt!33408 () Unit!2086)

(assert (=> d!17537 (= lt!33408 (choose!424 lt!33066 lt!33056 (minValue!2115 newMap!16) lt!33054))))

(declare-fun e!48626 () Bool)

(assert (=> d!17537 e!48626))

(declare-fun res!39335 () Bool)

(assert (=> d!17537 (=> (not res!39335) (not e!48626))))

(assert (=> d!17537 (= res!39335 (contains!729 lt!33066 lt!33054))))

(assert (=> d!17537 (= (addApplyDifferent!51 lt!33066 lt!33056 (minValue!2115 newMap!16) lt!33054) lt!33408)))

(declare-fun b!74400 () Bool)

(assert (=> b!74400 (= e!48626 (not (= lt!33054 lt!33056)))))

(assert (= (and d!17537 res!39335) b!74400))

(assert (=> d!17537 m!72117))

(assert (=> d!17537 m!72117))

(assert (=> d!17537 m!72131))

(assert (=> d!17537 m!72135))

(declare-fun m!73449 () Bool)

(assert (=> d!17537 m!73449))

(declare-fun m!73451 () Bool)

(assert (=> d!17537 m!73451))

(assert (=> b!73688 d!17537))

(declare-fun d!17539 () Bool)

(assert (=> d!17539 (= (apply!75 (+!98 lt!33066 (tuple2!2147 lt!33056 (minValue!2115 newMap!16))) lt!33054) (get!1158 (getValueByKey!132 (toList!735 (+!98 lt!33066 (tuple2!2147 lt!33056 (minValue!2115 newMap!16)))) lt!33054)))))

(declare-fun bs!3199 () Bool)

(assert (= bs!3199 d!17539))

(declare-fun m!73453 () Bool)

(assert (=> bs!3199 m!73453))

(assert (=> bs!3199 m!73453))

(declare-fun m!73455 () Bool)

(assert (=> bs!3199 m!73455))

(assert (=> b!73688 d!17539))

(declare-fun d!17541 () Bool)

(declare-fun e!48627 () Bool)

(assert (=> d!17541 e!48627))

(declare-fun res!39336 () Bool)

(assert (=> d!17541 (=> (not res!39336) (not e!48627))))

(declare-fun lt!33412 () ListLongMap!1439)

(assert (=> d!17541 (= res!39336 (contains!729 lt!33412 (_1!1083 (tuple2!2147 lt!33061 (zeroValue!2115 newMap!16)))))))

(declare-fun lt!33411 () List!1507)

(assert (=> d!17541 (= lt!33412 (ListLongMap!1440 lt!33411))))

(declare-fun lt!33409 () Unit!2086)

(declare-fun lt!33410 () Unit!2086)

(assert (=> d!17541 (= lt!33409 lt!33410)))

(assert (=> d!17541 (= (getValueByKey!132 lt!33411 (_1!1083 (tuple2!2147 lt!33061 (zeroValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 lt!33061 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17541 (= lt!33410 (lemmaContainsTupThenGetReturnValue!51 lt!33411 (_1!1083 (tuple2!2147 lt!33061 (zeroValue!2115 newMap!16))) (_2!1083 (tuple2!2147 lt!33061 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17541 (= lt!33411 (insertStrictlySorted!53 (toList!735 lt!33071) (_1!1083 (tuple2!2147 lt!33061 (zeroValue!2115 newMap!16))) (_2!1083 (tuple2!2147 lt!33061 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17541 (= (+!98 lt!33071 (tuple2!2147 lt!33061 (zeroValue!2115 newMap!16))) lt!33412)))

(declare-fun b!74401 () Bool)

(declare-fun res!39337 () Bool)

(assert (=> b!74401 (=> (not res!39337) (not e!48627))))

(assert (=> b!74401 (= res!39337 (= (getValueByKey!132 (toList!735 lt!33412) (_1!1083 (tuple2!2147 lt!33061 (zeroValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 lt!33061 (zeroValue!2115 newMap!16))))))))

(declare-fun b!74402 () Bool)

(assert (=> b!74402 (= e!48627 (contains!730 (toList!735 lt!33412) (tuple2!2147 lt!33061 (zeroValue!2115 newMap!16))))))

(assert (= (and d!17541 res!39336) b!74401))

(assert (= (and b!74401 res!39337) b!74402))

(declare-fun m!73457 () Bool)

(assert (=> d!17541 m!73457))

(declare-fun m!73459 () Bool)

(assert (=> d!17541 m!73459))

(declare-fun m!73461 () Bool)

(assert (=> d!17541 m!73461))

(declare-fun m!73463 () Bool)

(assert (=> d!17541 m!73463))

(declare-fun m!73465 () Bool)

(assert (=> b!74401 m!73465))

(declare-fun m!73467 () Bool)

(assert (=> b!74402 m!73467))

(assert (=> b!73688 d!17541))

(declare-fun d!17543 () Bool)

(assert (=> d!17543 (= (apply!75 lt!33071 lt!33053) (get!1158 (getValueByKey!132 (toList!735 lt!33071) lt!33053)))))

(declare-fun bs!3200 () Bool)

(assert (= bs!3200 d!17543))

(declare-fun m!73469 () Bool)

(assert (=> bs!3200 m!73469))

(assert (=> bs!3200 m!73469))

(declare-fun m!73471 () Bool)

(assert (=> bs!3200 m!73471))

(assert (=> b!73688 d!17543))

(declare-fun d!17545 () Bool)

(assert (=> d!17545 (= (apply!75 (+!98 lt!33060 (tuple2!2147 lt!33070 (minValue!2115 newMap!16))) lt!33068) (get!1158 (getValueByKey!132 (toList!735 (+!98 lt!33060 (tuple2!2147 lt!33070 (minValue!2115 newMap!16)))) lt!33068)))))

(declare-fun bs!3201 () Bool)

(assert (= bs!3201 d!17545))

(declare-fun m!73473 () Bool)

(assert (=> bs!3201 m!73473))

(assert (=> bs!3201 m!73473))

(declare-fun m!73475 () Bool)

(assert (=> bs!3201 m!73475))

(assert (=> b!73688 d!17545))

(declare-fun d!17547 () Bool)

(declare-fun e!48628 () Bool)

(assert (=> d!17547 e!48628))

(declare-fun res!39338 () Bool)

(assert (=> d!17547 (=> (not res!39338) (not e!48628))))

(declare-fun lt!33416 () ListLongMap!1439)

(assert (=> d!17547 (= res!39338 (contains!729 lt!33416 (_1!1083 (tuple2!2147 lt!33067 (zeroValue!2115 newMap!16)))))))

(declare-fun lt!33415 () List!1507)

(assert (=> d!17547 (= lt!33416 (ListLongMap!1440 lt!33415))))

(declare-fun lt!33413 () Unit!2086)

(declare-fun lt!33414 () Unit!2086)

(assert (=> d!17547 (= lt!33413 lt!33414)))

(assert (=> d!17547 (= (getValueByKey!132 lt!33415 (_1!1083 (tuple2!2147 lt!33067 (zeroValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 lt!33067 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17547 (= lt!33414 (lemmaContainsTupThenGetReturnValue!51 lt!33415 (_1!1083 (tuple2!2147 lt!33067 (zeroValue!2115 newMap!16))) (_2!1083 (tuple2!2147 lt!33067 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17547 (= lt!33415 (insertStrictlySorted!53 (toList!735 lt!33073) (_1!1083 (tuple2!2147 lt!33067 (zeroValue!2115 newMap!16))) (_2!1083 (tuple2!2147 lt!33067 (zeroValue!2115 newMap!16)))))))

(assert (=> d!17547 (= (+!98 lt!33073 (tuple2!2147 lt!33067 (zeroValue!2115 newMap!16))) lt!33416)))

(declare-fun b!74403 () Bool)

(declare-fun res!39339 () Bool)

(assert (=> b!74403 (=> (not res!39339) (not e!48628))))

(assert (=> b!74403 (= res!39339 (= (getValueByKey!132 (toList!735 lt!33416) (_1!1083 (tuple2!2147 lt!33067 (zeroValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 lt!33067 (zeroValue!2115 newMap!16))))))))

(declare-fun b!74404 () Bool)

(assert (=> b!74404 (= e!48628 (contains!730 (toList!735 lt!33416) (tuple2!2147 lt!33067 (zeroValue!2115 newMap!16))))))

(assert (= (and d!17547 res!39338) b!74403))

(assert (= (and b!74403 res!39339) b!74404))

(declare-fun m!73477 () Bool)

(assert (=> d!17547 m!73477))

(declare-fun m!73479 () Bool)

(assert (=> d!17547 m!73479))

(declare-fun m!73481 () Bool)

(assert (=> d!17547 m!73481))

(declare-fun m!73483 () Bool)

(assert (=> d!17547 m!73483))

(declare-fun m!73485 () Bool)

(assert (=> b!74403 m!73485))

(declare-fun m!73487 () Bool)

(assert (=> b!74404 m!73487))

(assert (=> b!73688 d!17547))

(declare-fun d!17549 () Bool)

(assert (=> d!17549 (= (apply!75 lt!33060 lt!33068) (get!1158 (getValueByKey!132 (toList!735 lt!33060) lt!33068)))))

(declare-fun bs!3202 () Bool)

(assert (= bs!3202 d!17549))

(declare-fun m!73489 () Bool)

(assert (=> bs!3202 m!73489))

(assert (=> bs!3202 m!73489))

(declare-fun m!73491 () Bool)

(assert (=> bs!3202 m!73491))

(assert (=> b!73688 d!17549))

(declare-fun d!17551 () Bool)

(declare-fun e!48630 () Bool)

(assert (=> d!17551 e!48630))

(declare-fun res!39340 () Bool)

(assert (=> d!17551 (=> res!39340 e!48630)))

(declare-fun lt!33419 () Bool)

(assert (=> d!17551 (= res!39340 (not lt!33419))))

(declare-fun lt!33417 () Bool)

(assert (=> d!17551 (= lt!33419 lt!33417)))

(declare-fun lt!33418 () Unit!2086)

(declare-fun e!48629 () Unit!2086)

(assert (=> d!17551 (= lt!33418 e!48629)))

(declare-fun c!11203 () Bool)

(assert (=> d!17551 (= c!11203 lt!33417)))

(assert (=> d!17551 (= lt!33417 (containsKey!136 (toList!735 (+!98 lt!33073 (tuple2!2147 lt!33067 (zeroValue!2115 newMap!16)))) lt!33058))))

(assert (=> d!17551 (= (contains!729 (+!98 lt!33073 (tuple2!2147 lt!33067 (zeroValue!2115 newMap!16))) lt!33058) lt!33419)))

(declare-fun b!74405 () Bool)

(declare-fun lt!33420 () Unit!2086)

(assert (=> b!74405 (= e!48629 lt!33420)))

(assert (=> b!74405 (= lt!33420 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 (+!98 lt!33073 (tuple2!2147 lt!33067 (zeroValue!2115 newMap!16)))) lt!33058))))

(assert (=> b!74405 (isDefined!86 (getValueByKey!132 (toList!735 (+!98 lt!33073 (tuple2!2147 lt!33067 (zeroValue!2115 newMap!16)))) lt!33058))))

(declare-fun b!74406 () Bool)

(declare-fun Unit!2144 () Unit!2086)

(assert (=> b!74406 (= e!48629 Unit!2144)))

(declare-fun b!74407 () Bool)

(assert (=> b!74407 (= e!48630 (isDefined!86 (getValueByKey!132 (toList!735 (+!98 lt!33073 (tuple2!2147 lt!33067 (zeroValue!2115 newMap!16)))) lt!33058)))))

(assert (= (and d!17551 c!11203) b!74405))

(assert (= (and d!17551 (not c!11203)) b!74406))

(assert (= (and d!17551 (not res!39340)) b!74407))

(declare-fun m!73493 () Bool)

(assert (=> d!17551 m!73493))

(declare-fun m!73495 () Bool)

(assert (=> b!74405 m!73495))

(declare-fun m!73497 () Bool)

(assert (=> b!74405 m!73497))

(assert (=> b!74405 m!73497))

(declare-fun m!73499 () Bool)

(assert (=> b!74405 m!73499))

(assert (=> b!74407 m!73497))

(assert (=> b!74407 m!73497))

(assert (=> b!74407 m!73499))

(assert (=> b!73688 d!17551))

(declare-fun d!17553 () Bool)

(assert (=> d!17553 (contains!729 (+!98 lt!33073 (tuple2!2147 lt!33067 (zeroValue!2115 newMap!16))) lt!33058)))

(declare-fun lt!33421 () Unit!2086)

(assert (=> d!17553 (= lt!33421 (choose!425 lt!33073 lt!33067 (zeroValue!2115 newMap!16) lt!33058))))

(assert (=> d!17553 (contains!729 lt!33073 lt!33058)))

(assert (=> d!17553 (= (addStillContains!51 lt!33073 lt!33067 (zeroValue!2115 newMap!16) lt!33058) lt!33421)))

(declare-fun bs!3203 () Bool)

(assert (= bs!3203 d!17553))

(assert (=> bs!3203 m!72121))

(assert (=> bs!3203 m!72121))

(assert (=> bs!3203 m!72127))

(declare-fun m!73501 () Bool)

(assert (=> bs!3203 m!73501))

(declare-fun m!73503 () Bool)

(assert (=> bs!3203 m!73503))

(assert (=> b!73688 d!17553))

(declare-fun d!17555 () Bool)

(assert (=> d!17555 (= (apply!75 lt!33066 lt!33054) (get!1158 (getValueByKey!132 (toList!735 lt!33066) lt!33054)))))

(declare-fun bs!3204 () Bool)

(assert (= bs!3204 d!17555))

(declare-fun m!73505 () Bool)

(assert (=> bs!3204 m!73505))

(assert (=> bs!3204 m!73505))

(declare-fun m!73507 () Bool)

(assert (=> bs!3204 m!73507))

(assert (=> b!73688 d!17555))

(declare-fun d!17557 () Bool)

(declare-fun e!48631 () Bool)

(assert (=> d!17557 e!48631))

(declare-fun res!39341 () Bool)

(assert (=> d!17557 (=> (not res!39341) (not e!48631))))

(declare-fun lt!33425 () ListLongMap!1439)

(assert (=> d!17557 (= res!39341 (contains!729 lt!33425 (_1!1083 (tuple2!2147 lt!33056 (minValue!2115 newMap!16)))))))

(declare-fun lt!33424 () List!1507)

(assert (=> d!17557 (= lt!33425 (ListLongMap!1440 lt!33424))))

(declare-fun lt!33422 () Unit!2086)

(declare-fun lt!33423 () Unit!2086)

(assert (=> d!17557 (= lt!33422 lt!33423)))

(assert (=> d!17557 (= (getValueByKey!132 lt!33424 (_1!1083 (tuple2!2147 lt!33056 (minValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 lt!33056 (minValue!2115 newMap!16)))))))

(assert (=> d!17557 (= lt!33423 (lemmaContainsTupThenGetReturnValue!51 lt!33424 (_1!1083 (tuple2!2147 lt!33056 (minValue!2115 newMap!16))) (_2!1083 (tuple2!2147 lt!33056 (minValue!2115 newMap!16)))))))

(assert (=> d!17557 (= lt!33424 (insertStrictlySorted!53 (toList!735 lt!33066) (_1!1083 (tuple2!2147 lt!33056 (minValue!2115 newMap!16))) (_2!1083 (tuple2!2147 lt!33056 (minValue!2115 newMap!16)))))))

(assert (=> d!17557 (= (+!98 lt!33066 (tuple2!2147 lt!33056 (minValue!2115 newMap!16))) lt!33425)))

(declare-fun b!74408 () Bool)

(declare-fun res!39342 () Bool)

(assert (=> b!74408 (=> (not res!39342) (not e!48631))))

(assert (=> b!74408 (= res!39342 (= (getValueByKey!132 (toList!735 lt!33425) (_1!1083 (tuple2!2147 lt!33056 (minValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 lt!33056 (minValue!2115 newMap!16))))))))

(declare-fun b!74409 () Bool)

(assert (=> b!74409 (= e!48631 (contains!730 (toList!735 lt!33425) (tuple2!2147 lt!33056 (minValue!2115 newMap!16))))))

(assert (= (and d!17557 res!39341) b!74408))

(assert (= (and b!74408 res!39342) b!74409))

(declare-fun m!73509 () Bool)

(assert (=> d!17557 m!73509))

(declare-fun m!73511 () Bool)

(assert (=> d!17557 m!73511))

(declare-fun m!73513 () Bool)

(assert (=> d!17557 m!73513))

(declare-fun m!73515 () Bool)

(assert (=> d!17557 m!73515))

(declare-fun m!73517 () Bool)

(assert (=> b!74408 m!73517))

(declare-fun m!73519 () Bool)

(assert (=> b!74409 m!73519))

(assert (=> b!73688 d!17557))

(assert (=> b!73688 d!17437))

(declare-fun d!17559 () Bool)

(declare-fun c!11204 () Bool)

(assert (=> d!17559 (= c!11204 ((_ is Nil!1504) (toList!735 lt!32725)))))

(declare-fun e!48632 () (InoxSet tuple2!2146))

(assert (=> d!17559 (= (content!76 (toList!735 lt!32725)) e!48632)))

(declare-fun b!74410 () Bool)

(assert (=> b!74410 (= e!48632 ((as const (Array tuple2!2146 Bool)) false))))

(declare-fun b!74411 () Bool)

(assert (=> b!74411 (= e!48632 ((_ map or) (store ((as const (Array tuple2!2146 Bool)) false) (h!2090 (toList!735 lt!32725)) true) (content!76 (t!5068 (toList!735 lt!32725)))))))

(assert (= (and d!17559 c!11204) b!74410))

(assert (= (and d!17559 (not c!11204)) b!74411))

(declare-fun m!73521 () Bool)

(assert (=> b!74411 m!73521))

(assert (=> b!74411 m!73045))

(assert (=> d!17021 d!17559))

(declare-fun d!17561 () Bool)

(assert (=> d!17561 (= (apply!75 lt!32773 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1158 (getValueByKey!132 (toList!735 lt!32773) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3205 () Bool)

(assert (= bs!3205 d!17561))

(assert (=> bs!3205 m!72925))

(assert (=> bs!3205 m!72925))

(declare-fun m!73523 () Bool)

(assert (=> bs!3205 m!73523))

(assert (=> b!73316 d!17561))

(declare-fun d!17563 () Bool)

(assert (=> d!17563 (isDefined!86 (getValueByKey!132 (toList!735 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!33426 () Unit!2086)

(assert (=> d!17563 (= lt!33426 (choose!421 (toList!735 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48633 () Bool)

(assert (=> d!17563 e!48633))

(declare-fun res!39343 () Bool)

(assert (=> d!17563 (=> (not res!39343) (not e!48633))))

(assert (=> d!17563 (= res!39343 (isStrictlySorted!287 (toList!735 lt!32666)))))

(assert (=> d!17563 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000) lt!33426)))

(declare-fun b!74412 () Bool)

(assert (=> b!74412 (= e!48633 (containsKey!136 (toList!735 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17563 res!39343) b!74412))

(assert (=> d!17563 m!71439))

(assert (=> d!17563 m!71439))

(assert (=> d!17563 m!72173))

(declare-fun m!73525 () Bool)

(assert (=> d!17563 m!73525))

(assert (=> d!17563 m!72481))

(assert (=> b!74412 m!72169))

(assert (=> b!73705 d!17563))

(declare-fun d!17565 () Bool)

(assert (=> d!17565 (= (isDefined!86 (getValueByKey!132 (toList!735 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!322 (getValueByKey!132 (toList!735 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3206 () Bool)

(assert (= bs!3206 d!17565))

(assert (=> bs!3206 m!71439))

(declare-fun m!73527 () Bool)

(assert (=> bs!3206 m!73527))

(assert (=> b!73705 d!17565))

(assert (=> b!73705 d!17343))

(declare-fun d!17567 () Bool)

(assert (=> d!17567 (= (apply!75 lt!32819 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1158 (getValueByKey!132 (toList!735 lt!32819) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3207 () Bool)

(assert (= bs!3207 d!17567))

(declare-fun m!73529 () Bool)

(assert (=> bs!3207 m!73529))

(assert (=> bs!3207 m!73529))

(declare-fun m!73531 () Bool)

(assert (=> bs!3207 m!73531))

(assert (=> b!73360 d!17567))

(declare-fun b!74416 () Bool)

(declare-fun e!48635 () Option!138)

(assert (=> b!74416 (= e!48635 None!136)))

(declare-fun b!74414 () Bool)

(declare-fun e!48634 () Option!138)

(assert (=> b!74414 (= e!48634 e!48635)))

(declare-fun c!11206 () Bool)

(assert (=> b!74414 (= c!11206 (and ((_ is Cons!1503) (toList!735 lt!33014)) (not (= (_1!1083 (h!2090 (toList!735 lt!33014))) (_1!1083 (tuple2!2147 lt!32698 lt!32693))))))))

(declare-fun b!74413 () Bool)

(assert (=> b!74413 (= e!48634 (Some!137 (_2!1083 (h!2090 (toList!735 lt!33014)))))))

(declare-fun c!11205 () Bool)

(declare-fun d!17569 () Bool)

(assert (=> d!17569 (= c!11205 (and ((_ is Cons!1503) (toList!735 lt!33014)) (= (_1!1083 (h!2090 (toList!735 lt!33014))) (_1!1083 (tuple2!2147 lt!32698 lt!32693)))))))

(assert (=> d!17569 (= (getValueByKey!132 (toList!735 lt!33014) (_1!1083 (tuple2!2147 lt!32698 lt!32693))) e!48634)))

(declare-fun b!74415 () Bool)

(assert (=> b!74415 (= e!48635 (getValueByKey!132 (t!5068 (toList!735 lt!33014)) (_1!1083 (tuple2!2147 lt!32698 lt!32693))))))

(assert (= (and d!17569 c!11205) b!74413))

(assert (= (and d!17569 (not c!11205)) b!74414))

(assert (= (and b!74414 c!11206) b!74415))

(assert (= (and b!74414 (not c!11206)) b!74416))

(declare-fun m!73533 () Bool)

(assert (=> b!74415 m!73533))

(assert (=> b!73602 d!17569))

(declare-fun b!74418 () Bool)

(declare-fun res!39347 () Bool)

(declare-fun e!48636 () Bool)

(assert (=> b!74418 (=> (not res!39347) (not e!48636))))

(assert (=> b!74418 (= res!39347 (bvsge (size!2100 (_2!1084 lt!32604)) (_size!397 (_2!1084 lt!32604))))))

(declare-fun b!74417 () Bool)

(declare-fun res!39345 () Bool)

(assert (=> b!74417 (=> (not res!39345) (not e!48636))))

(assert (=> b!74417 (= res!39345 (and (= (size!2097 (_values!2196 (_2!1084 lt!32604))) (bvadd (mask!6180 (_2!1084 lt!32604)) #b00000000000000000000000000000001)) (= (size!2096 (_keys!3865 (_2!1084 lt!32604))) (size!2097 (_values!2196 (_2!1084 lt!32604)))) (bvsge (_size!397 (_2!1084 lt!32604)) #b00000000000000000000000000000000) (bvsle (_size!397 (_2!1084 lt!32604)) (bvadd (mask!6180 (_2!1084 lt!32604)) #b00000000000000000000000000000001))))))

(declare-fun b!74419 () Bool)

(declare-fun res!39344 () Bool)

(assert (=> b!74419 (=> (not res!39344) (not e!48636))))

(assert (=> b!74419 (= res!39344 (= (size!2100 (_2!1084 lt!32604)) (bvadd (_size!397 (_2!1084 lt!32604)) (bvsdiv (bvadd (extraKeys!2072 (_2!1084 lt!32604)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!74420 () Bool)

(assert (=> b!74420 (= e!48636 (and (bvsge (extraKeys!2072 (_2!1084 lt!32604)) #b00000000000000000000000000000000) (bvsle (extraKeys!2072 (_2!1084 lt!32604)) #b00000000000000000000000000000011) (bvsge (_vacant!397 (_2!1084 lt!32604)) #b00000000000000000000000000000000)))))

(declare-fun d!17571 () Bool)

(declare-fun res!39346 () Bool)

(assert (=> d!17571 (=> (not res!39346) (not e!48636))))

(assert (=> d!17571 (= res!39346 (validMask!0 (mask!6180 (_2!1084 lt!32604))))))

(assert (=> d!17571 (= (simpleValid!50 (_2!1084 lt!32604)) e!48636)))

(assert (= (and d!17571 res!39346) b!74417))

(assert (= (and b!74417 res!39345) b!74418))

(assert (= (and b!74418 res!39347) b!74419))

(assert (= (and b!74419 res!39344) b!74420))

(declare-fun m!73535 () Bool)

(assert (=> b!74418 m!73535))

(assert (=> b!74419 m!73535))

(declare-fun m!73537 () Bool)

(assert (=> d!17571 m!73537))

(assert (=> d!16851 d!17571))

(declare-fun d!17573 () Bool)

(assert (=> d!17573 (= (inRange!0 (ite c!10985 (index!3115 lt!33023) (index!3118 lt!33023)) (mask!6180 newMap!16)) (and (bvsge (ite c!10985 (index!3115 lt!33023) (index!3118 lt!33023)) #b00000000000000000000000000000000) (bvslt (ite c!10985 (index!3115 lt!33023) (index!3118 lt!33023)) (bvadd (mask!6180 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6497 d!17573))

(declare-fun d!17575 () Bool)

(assert (=> d!17575 (= (get!1158 (getValueByKey!132 (toList!735 lt!32675) lt!32657)) (v!2537 (getValueByKey!132 (toList!735 lt!32675) lt!32657)))))

(assert (=> d!16971 d!17575))

(declare-fun b!74424 () Bool)

(declare-fun e!48638 () Option!138)

(assert (=> b!74424 (= e!48638 None!136)))

(declare-fun b!74422 () Bool)

(declare-fun e!48637 () Option!138)

(assert (=> b!74422 (= e!48637 e!48638)))

(declare-fun c!11208 () Bool)

(assert (=> b!74422 (= c!11208 (and ((_ is Cons!1503) (toList!735 lt!32675)) (not (= (_1!1083 (h!2090 (toList!735 lt!32675))) lt!32657))))))

(declare-fun b!74421 () Bool)

(assert (=> b!74421 (= e!48637 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32675)))))))

(declare-fun d!17577 () Bool)

(declare-fun c!11207 () Bool)

(assert (=> d!17577 (= c!11207 (and ((_ is Cons!1503) (toList!735 lt!32675)) (= (_1!1083 (h!2090 (toList!735 lt!32675))) lt!32657)))))

(assert (=> d!17577 (= (getValueByKey!132 (toList!735 lt!32675) lt!32657) e!48637)))

(declare-fun b!74423 () Bool)

(assert (=> b!74423 (= e!48638 (getValueByKey!132 (t!5068 (toList!735 lt!32675)) lt!32657))))

(assert (= (and d!17577 c!11207) b!74421))

(assert (= (and d!17577 (not c!11207)) b!74422))

(assert (= (and b!74422 c!11208) b!74423))

(assert (= (and b!74422 (not c!11208)) b!74424))

(declare-fun m!73539 () Bool)

(assert (=> b!74423 m!73539))

(assert (=> d!16971 d!17577))

(declare-fun d!17579 () Bool)

(assert (=> d!17579 (isDefined!86 (getValueByKey!132 (toList!735 lt!32717) (_1!1083 lt!32482)))))

(declare-fun lt!33427 () Unit!2086)

(assert (=> d!17579 (= lt!33427 (choose!421 (toList!735 lt!32717) (_1!1083 lt!32482)))))

(declare-fun e!48639 () Bool)

(assert (=> d!17579 e!48639))

(declare-fun res!39348 () Bool)

(assert (=> d!17579 (=> (not res!39348) (not e!48639))))

(assert (=> d!17579 (= res!39348 (isStrictlySorted!287 (toList!735 lt!32717)))))

(assert (=> d!17579 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32717) (_1!1083 lt!32482)) lt!33427)))

(declare-fun b!74425 () Bool)

(assert (=> b!74425 (= e!48639 (containsKey!136 (toList!735 lt!32717) (_1!1083 lt!32482)))))

(assert (= (and d!17579 res!39348) b!74425))

(assert (=> d!17579 m!71331))

(assert (=> d!17579 m!71331))

(assert (=> d!17579 m!71731))

(declare-fun m!73541 () Bool)

(assert (=> d!17579 m!73541))

(declare-fun m!73543 () Bool)

(assert (=> d!17579 m!73543))

(assert (=> b!74425 m!71727))

(assert (=> b!73424 d!17579))

(declare-fun d!17581 () Bool)

(assert (=> d!17581 (= (isDefined!86 (getValueByKey!132 (toList!735 lt!32717) (_1!1083 lt!32482))) (not (isEmpty!322 (getValueByKey!132 (toList!735 lt!32717) (_1!1083 lt!32482)))))))

(declare-fun bs!3208 () Bool)

(assert (= bs!3208 d!17581))

(assert (=> bs!3208 m!71331))

(declare-fun m!73545 () Bool)

(assert (=> bs!3208 m!73545))

(assert (=> b!73424 d!17581))

(assert (=> b!73424 d!16847))

(declare-fun d!17583 () Bool)

(declare-fun e!48640 () Bool)

(assert (=> d!17583 e!48640))

(declare-fun res!39349 () Bool)

(assert (=> d!17583 (=> (not res!39349) (not e!48640))))

(declare-fun lt!33431 () ListLongMap!1439)

(assert (=> d!17583 (= res!39349 (contains!729 lt!33431 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))))))

(declare-fun lt!33430 () List!1507)

(assert (=> d!17583 (= lt!33431 (ListLongMap!1440 lt!33430))))

(declare-fun lt!33428 () Unit!2086)

(declare-fun lt!33429 () Unit!2086)

(assert (=> d!17583 (= lt!33428 lt!33429)))

(assert (=> d!17583 (= (getValueByKey!132 lt!33430 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))) (Some!137 (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))))))

(assert (=> d!17583 (= lt!33429 (lemmaContainsTupThenGetReturnValue!51 lt!33430 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))) (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))))))

(assert (=> d!17583 (= lt!33430 (insertStrictlySorted!53 (toList!735 call!6460) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))) (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))))))

(assert (=> d!17583 (= (+!98 call!6460 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))) lt!33431)))

(declare-fun b!74426 () Bool)

(declare-fun res!39350 () Bool)

(assert (=> b!74426 (=> (not res!39350) (not e!48640))))

(assert (=> b!74426 (= res!39350 (= (getValueByKey!132 (toList!735 lt!33431) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16))))) (Some!137 (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))))))))

(declare-fun b!74427 () Bool)

(assert (=> b!74427 (= e!48640 (contains!730 (toList!735 lt!33431) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10836 (ite c!10829 (minValue!2115 newMap!16) lt!32481) (minValue!2115 newMap!16)))))))

(assert (= (and d!17583 res!39349) b!74426))

(assert (= (and b!74426 res!39350) b!74427))

(declare-fun m!73547 () Bool)

(assert (=> d!17583 m!73547))

(declare-fun m!73549 () Bool)

(assert (=> d!17583 m!73549))

(declare-fun m!73551 () Bool)

(assert (=> d!17583 m!73551))

(declare-fun m!73553 () Bool)

(assert (=> d!17583 m!73553))

(declare-fun m!73555 () Bool)

(assert (=> b!74426 m!73555))

(declare-fun m!73557 () Bool)

(assert (=> b!74427 m!73557))

(assert (=> b!73366 d!17583))

(declare-fun d!17585 () Bool)

(declare-fun res!39351 () Bool)

(declare-fun e!48641 () Bool)

(assert (=> d!17585 (=> res!39351 e!48641)))

(assert (=> d!17585 (= res!39351 (and ((_ is Cons!1503) (toList!735 lt!32725)) (= (_1!1083 (h!2090 (toList!735 lt!32725))) (_1!1083 lt!32472))))))

(assert (=> d!17585 (= (containsKey!136 (toList!735 lt!32725) (_1!1083 lt!32472)) e!48641)))

(declare-fun b!74428 () Bool)

(declare-fun e!48642 () Bool)

(assert (=> b!74428 (= e!48641 e!48642)))

(declare-fun res!39352 () Bool)

(assert (=> b!74428 (=> (not res!39352) (not e!48642))))

(assert (=> b!74428 (= res!39352 (and (or (not ((_ is Cons!1503) (toList!735 lt!32725))) (bvsle (_1!1083 (h!2090 (toList!735 lt!32725))) (_1!1083 lt!32472))) ((_ is Cons!1503) (toList!735 lt!32725)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32725))) (_1!1083 lt!32472))))))

(declare-fun b!74429 () Bool)

(assert (=> b!74429 (= e!48642 (containsKey!136 (t!5068 (toList!735 lt!32725)) (_1!1083 lt!32472)))))

(assert (= (and d!17585 (not res!39351)) b!74428))

(assert (= (and b!74428 res!39352) b!74429))

(declare-fun m!73559 () Bool)

(assert (=> b!74429 m!73559))

(assert (=> d!16941 d!17585))

(declare-fun b!74433 () Bool)

(declare-fun e!48644 () Option!138)

(assert (=> b!74433 (= e!48644 None!136)))

(declare-fun b!74431 () Bool)

(declare-fun e!48643 () Option!138)

(assert (=> b!74431 (= e!48643 e!48644)))

(declare-fun c!11210 () Bool)

(assert (=> b!74431 (= c!11210 (and ((_ is Cons!1503) (t!5068 (toList!735 lt!32717))) (not (= (_1!1083 (h!2090 (t!5068 (toList!735 lt!32717)))) (_1!1083 lt!32482)))))))

(declare-fun b!74430 () Bool)

(assert (=> b!74430 (= e!48643 (Some!137 (_2!1083 (h!2090 (t!5068 (toList!735 lt!32717))))))))

(declare-fun d!17587 () Bool)

(declare-fun c!11209 () Bool)

(assert (=> d!17587 (= c!11209 (and ((_ is Cons!1503) (t!5068 (toList!735 lt!32717))) (= (_1!1083 (h!2090 (t!5068 (toList!735 lt!32717)))) (_1!1083 lt!32482))))))

(assert (=> d!17587 (= (getValueByKey!132 (t!5068 (toList!735 lt!32717)) (_1!1083 lt!32482)) e!48643)))

(declare-fun b!74432 () Bool)

(assert (=> b!74432 (= e!48644 (getValueByKey!132 (t!5068 (t!5068 (toList!735 lt!32717))) (_1!1083 lt!32482)))))

(assert (= (and d!17587 c!11209) b!74430))

(assert (= (and d!17587 (not c!11209)) b!74431))

(assert (= (and b!74431 c!11210) b!74432))

(assert (= (and b!74431 (not c!11210)) b!74433))

(declare-fun m!73561 () Bool)

(assert (=> b!74432 m!73561))

(assert (=> b!73265 d!17587))

(declare-fun d!17589 () Bool)

(declare-fun lt!33432 () Bool)

(assert (=> d!17589 (= lt!33432 (select (content!77 (ite c!10879 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505) Nil!1505)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!48646 () Bool)

(assert (=> d!17589 (= lt!33432 e!48646)))

(declare-fun res!39354 () Bool)

(assert (=> d!17589 (=> (not res!39354) (not e!48646))))

(assert (=> d!17589 (= res!39354 ((_ is Cons!1504) (ite c!10879 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505) Nil!1505)))))

(assert (=> d!17589 (= (contains!731 (ite c!10879 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505) Nil!1505) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!33432)))

(declare-fun b!74434 () Bool)

(declare-fun e!48645 () Bool)

(assert (=> b!74434 (= e!48646 e!48645)))

(declare-fun res!39353 () Bool)

(assert (=> b!74434 (=> res!39353 e!48645)))

(assert (=> b!74434 (= res!39353 (= (h!2091 (ite c!10879 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505) Nil!1505)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!74435 () Bool)

(assert (=> b!74435 (= e!48645 (contains!731 (t!5069 (ite c!10879 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) Nil!1505) Nil!1505)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!17589 res!39354) b!74434))

(assert (= (and b!74434 (not res!39353)) b!74435))

(declare-fun m!73563 () Bool)

(assert (=> d!17589 m!73563))

(assert (=> d!17589 m!71457))

(declare-fun m!73565 () Bool)

(assert (=> d!17589 m!73565))

(assert (=> b!74435 m!71457))

(declare-fun m!73567 () Bool)

(assert (=> b!74435 m!73567))

(assert (=> b!73306 d!17589))

(declare-fun b!74439 () Bool)

(declare-fun e!48648 () Option!138)

(assert (=> b!74439 (= e!48648 None!136)))

(declare-fun b!74437 () Bool)

(declare-fun e!48647 () Option!138)

(assert (=> b!74437 (= e!48647 e!48648)))

(declare-fun c!11212 () Bool)

(assert (=> b!74437 (= c!11212 (and ((_ is Cons!1503) (t!5068 lt!32716)) (not (= (_1!1083 (h!2090 (t!5068 lt!32716))) (_1!1083 lt!32482)))))))

(declare-fun b!74436 () Bool)

(assert (=> b!74436 (= e!48647 (Some!137 (_2!1083 (h!2090 (t!5068 lt!32716)))))))

(declare-fun d!17591 () Bool)

(declare-fun c!11211 () Bool)

(assert (=> d!17591 (= c!11211 (and ((_ is Cons!1503) (t!5068 lt!32716)) (= (_1!1083 (h!2090 (t!5068 lt!32716))) (_1!1083 lt!32482))))))

(assert (=> d!17591 (= (getValueByKey!132 (t!5068 lt!32716) (_1!1083 lt!32482)) e!48647)))

(declare-fun b!74438 () Bool)

(assert (=> b!74438 (= e!48648 (getValueByKey!132 (t!5068 (t!5068 lt!32716)) (_1!1083 lt!32482)))))

(assert (= (and d!17591 c!11211) b!74436))

(assert (= (and d!17591 (not c!11211)) b!74437))

(assert (= (and b!74437 c!11212) b!74438))

(assert (= (and b!74437 (not c!11212)) b!74439))

(declare-fun m!73569 () Bool)

(assert (=> b!74438 m!73569))

(assert (=> b!73429 d!17591))

(assert (=> bm!6487 d!16915))

(assert (=> d!16853 d!17091))

(declare-fun d!17593 () Bool)

(declare-fun lt!33433 () Bool)

(assert (=> d!17593 (= lt!33433 (select (content!76 (t!5068 (toList!735 lt!32721))) lt!32472))))

(declare-fun e!48649 () Bool)

(assert (=> d!17593 (= lt!33433 e!48649)))

(declare-fun res!39356 () Bool)

(assert (=> d!17593 (=> (not res!39356) (not e!48649))))

(assert (=> d!17593 (= res!39356 ((_ is Cons!1503) (t!5068 (toList!735 lt!32721))))))

(assert (=> d!17593 (= (contains!730 (t!5068 (toList!735 lt!32721)) lt!32472) lt!33433)))

(declare-fun b!74440 () Bool)

(declare-fun e!48650 () Bool)

(assert (=> b!74440 (= e!48649 e!48650)))

(declare-fun res!39355 () Bool)

(assert (=> b!74440 (=> res!39355 e!48650)))

(assert (=> b!74440 (= res!39355 (= (h!2090 (t!5068 (toList!735 lt!32721))) lt!32472))))

(declare-fun b!74441 () Bool)

(assert (=> b!74441 (= e!48650 (contains!730 (t!5068 (t!5068 (toList!735 lt!32721))) lt!32472))))

(assert (= (and d!17593 res!39356) b!74440))

(assert (= (and b!74440 (not res!39355)) b!74441))

(declare-fun m!73571 () Bool)

(assert (=> d!17593 m!73571))

(declare-fun m!73573 () Bool)

(assert (=> d!17593 m!73573))

(declare-fun m!73575 () Bool)

(assert (=> b!74441 m!73575))

(assert (=> b!73681 d!17593))

(declare-fun d!17595 () Bool)

(assert (=> d!17595 (= (isEmpty!321 lt!32849) (isEmpty!323 (toList!735 lt!32849)))))

(declare-fun bs!3209 () Bool)

(assert (= bs!3209 d!17595))

(declare-fun m!73577 () Bool)

(assert (=> bs!3209 m!73577))

(assert (=> b!73416 d!17595))

(declare-fun d!17597 () Bool)

(assert (=> d!17597 (= (+!98 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (getCurrentListMap!426 (_keys!3865 newMap!16) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (index!3116 lt!32593) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(assert (=> d!17597 true))

(declare-fun _$5!80 () Unit!2086)

(assert (=> d!17597 (= (choose!429 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (index!3116 lt!32593) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481 (defaultEntry!2213 newMap!16)) _$5!80)))

(declare-fun bs!3210 () Bool)

(assert (= bs!3210 d!17597))

(assert (=> bs!3210 m!71191))

(assert (=> bs!3210 m!71191))

(assert (=> bs!3210 m!71929))

(assert (=> bs!3210 m!71167))

(assert (=> bs!3210 m!72041))

(assert (=> d!17003 d!17597))

(assert (=> d!17003 d!17091))

(assert (=> b!73642 d!17331))

(assert (=> b!73642 d!17333))

(declare-fun bm!6573 () Bool)

(declare-fun call!6576 () Bool)

(assert (=> bm!6573 (= call!6576 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun b!74442 () Bool)

(declare-fun e!48653 () Bool)

(declare-fun e!48651 () Bool)

(assert (=> b!74442 (= e!48653 e!48651)))

(declare-fun lt!33434 () (_ BitVec 64))

(assert (=> b!74442 (= lt!33434 (select (arr!1858 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!33436 () Unit!2086)

(assert (=> b!74442 (= lt!33436 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3865 newMap!16) lt!33434 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!74442 (arrayContainsKey!0 (_keys!3865 newMap!16) lt!33434 #b00000000000000000000000000000000)))

(declare-fun lt!33435 () Unit!2086)

(assert (=> b!74442 (= lt!33435 lt!33436)))

(declare-fun res!39358 () Bool)

(assert (=> b!74442 (= res!39358 (= (seekEntryOrOpen!0 (select (arr!1858 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3865 newMap!16) (mask!6180 newMap!16)) (Found!246 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!74442 (=> (not res!39358) (not e!48651))))

(declare-fun b!74444 () Bool)

(assert (=> b!74444 (= e!48653 call!6576)))

(declare-fun b!74445 () Bool)

(assert (=> b!74445 (= e!48651 call!6576)))

(declare-fun b!74443 () Bool)

(declare-fun e!48652 () Bool)

(assert (=> b!74443 (= e!48652 e!48653)))

(declare-fun c!11213 () Bool)

(assert (=> b!74443 (= c!11213 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!17599 () Bool)

(declare-fun res!39357 () Bool)

(assert (=> d!17599 (=> res!39357 e!48652)))

(assert (=> d!17599 (= res!39357 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!17599 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3865 newMap!16) (mask!6180 newMap!16)) e!48652)))

(assert (= (and d!17599 (not res!39357)) b!74443))

(assert (= (and b!74443 c!11213) b!74442))

(assert (= (and b!74443 (not c!11213)) b!74444))

(assert (= (and b!74442 res!39358) b!74445))

(assert (= (or b!74445 b!74444) bm!6573))

(declare-fun m!73579 () Bool)

(assert (=> bm!6573 m!73579))

(assert (=> b!74442 m!72513))

(declare-fun m!73581 () Bool)

(assert (=> b!74442 m!73581))

(declare-fun m!73583 () Bool)

(assert (=> b!74442 m!73583))

(assert (=> b!74442 m!72513))

(declare-fun m!73585 () Bool)

(assert (=> b!74442 m!73585))

(assert (=> b!74443 m!72513))

(assert (=> b!74443 m!72513))

(assert (=> b!74443 m!72515))

(assert (=> bm!6444 d!17599))

(declare-fun d!17601 () Bool)

(declare-fun res!39359 () Bool)

(declare-fun e!48654 () Bool)

(assert (=> d!17601 (=> res!39359 e!48654)))

(assert (=> d!17601 (= res!39359 (and ((_ is Cons!1503) lt!32709) (= (_1!1083 (h!2090 lt!32709)) (_1!1083 lt!32482))))))

(assert (=> d!17601 (= (containsKey!136 lt!32709 (_1!1083 lt!32482)) e!48654)))

(declare-fun b!74446 () Bool)

(declare-fun e!48655 () Bool)

(assert (=> b!74446 (= e!48654 e!48655)))

(declare-fun res!39360 () Bool)

(assert (=> b!74446 (=> (not res!39360) (not e!48655))))

(assert (=> b!74446 (= res!39360 (and (or (not ((_ is Cons!1503) lt!32709)) (bvsle (_1!1083 (h!2090 lt!32709)) (_1!1083 lt!32482))) ((_ is Cons!1503) lt!32709) (bvslt (_1!1083 (h!2090 lt!32709)) (_1!1083 lt!32482))))))

(declare-fun b!74447 () Bool)

(assert (=> b!74447 (= e!48655 (containsKey!136 (t!5068 lt!32709) (_1!1083 lt!32482)))))

(assert (= (and d!17601 (not res!39359)) b!74446))

(assert (= (and b!74446 res!39360) b!74447))

(declare-fun m!73587 () Bool)

(assert (=> b!74447 m!73587))

(assert (=> b!73668 d!17601))

(declare-fun b!74451 () Bool)

(declare-fun e!48657 () Option!138)

(assert (=> b!74451 (= e!48657 None!136)))

(declare-fun b!74449 () Bool)

(declare-fun e!48656 () Option!138)

(assert (=> b!74449 (= e!48656 e!48657)))

(declare-fun c!11215 () Bool)

(assert (=> b!74449 (= c!11215 (and ((_ is Cons!1503) (toList!735 lt!32800)) (not (= (_1!1083 (h!2090 (toList!735 lt!32800))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))))

(declare-fun b!74448 () Bool)

(assert (=> b!74448 (= e!48656 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32800)))))))

(declare-fun c!11214 () Bool)

(declare-fun d!17603 () Bool)

(assert (=> d!17603 (= c!11214 (and ((_ is Cons!1503) (toList!735 lt!32800)) (= (_1!1083 (h!2090 (toList!735 lt!32800))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (=> d!17603 (= (getValueByKey!132 (toList!735 lt!32800) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) e!48656)))

(declare-fun b!74450 () Bool)

(assert (=> b!74450 (= e!48657 (getValueByKey!132 (t!5068 (toList!735 lt!32800)) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (= (and d!17603 c!11214) b!74448))

(assert (= (and d!17603 (not c!11214)) b!74449))

(assert (= (and b!74449 c!11215) b!74450))

(assert (= (and b!74449 (not c!11215)) b!74451))

(declare-fun m!73589 () Bool)

(assert (=> b!74450 m!73589))

(assert (=> b!73338 d!17603))

(declare-fun d!17605 () Bool)

(declare-fun e!48659 () Bool)

(assert (=> d!17605 e!48659))

(declare-fun res!39361 () Bool)

(assert (=> d!17605 (=> res!39361 e!48659)))

(declare-fun lt!33439 () Bool)

(assert (=> d!17605 (= res!39361 (not lt!33439))))

(declare-fun lt!33437 () Bool)

(assert (=> d!17605 (= lt!33439 lt!33437)))

(declare-fun lt!33438 () Unit!2086)

(declare-fun e!48658 () Unit!2086)

(assert (=> d!17605 (= lt!33438 e!48658)))

(declare-fun c!11216 () Bool)

(assert (=> d!17605 (= c!11216 lt!33437)))

(assert (=> d!17605 (= lt!33437 (containsKey!136 (toList!735 lt!33014) (_1!1083 (tuple2!2147 lt!32698 lt!32693))))))

(assert (=> d!17605 (= (contains!729 lt!33014 (_1!1083 (tuple2!2147 lt!32698 lt!32693))) lt!33439)))

(declare-fun b!74452 () Bool)

(declare-fun lt!33440 () Unit!2086)

(assert (=> b!74452 (= e!48658 lt!33440)))

(assert (=> b!74452 (= lt!33440 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!33014) (_1!1083 (tuple2!2147 lt!32698 lt!32693))))))

(assert (=> b!74452 (isDefined!86 (getValueByKey!132 (toList!735 lt!33014) (_1!1083 (tuple2!2147 lt!32698 lt!32693))))))

(declare-fun b!74453 () Bool)

(declare-fun Unit!2145 () Unit!2086)

(assert (=> b!74453 (= e!48658 Unit!2145)))

(declare-fun b!74454 () Bool)

(assert (=> b!74454 (= e!48659 (isDefined!86 (getValueByKey!132 (toList!735 lt!33014) (_1!1083 (tuple2!2147 lt!32698 lt!32693)))))))

(assert (= (and d!17605 c!11216) b!74452))

(assert (= (and d!17605 (not c!11216)) b!74453))

(assert (= (and d!17605 (not res!39361)) b!74454))

(declare-fun m!73591 () Bool)

(assert (=> d!17605 m!73591))

(declare-fun m!73593 () Bool)

(assert (=> b!74452 m!73593))

(assert (=> b!74452 m!72011))

(assert (=> b!74452 m!72011))

(declare-fun m!73595 () Bool)

(assert (=> b!74452 m!73595))

(assert (=> b!74454 m!72011))

(assert (=> b!74454 m!72011))

(assert (=> b!74454 m!73595))

(assert (=> d!16993 d!17605))

(declare-fun b!74458 () Bool)

(declare-fun e!48661 () Option!138)

(assert (=> b!74458 (= e!48661 None!136)))

(declare-fun b!74456 () Bool)

(declare-fun e!48660 () Option!138)

(assert (=> b!74456 (= e!48660 e!48661)))

(declare-fun c!11218 () Bool)

(assert (=> b!74456 (= c!11218 (and ((_ is Cons!1503) lt!33013) (not (= (_1!1083 (h!2090 lt!33013)) (_1!1083 (tuple2!2147 lt!32698 lt!32693))))))))

(declare-fun b!74455 () Bool)

(assert (=> b!74455 (= e!48660 (Some!137 (_2!1083 (h!2090 lt!33013))))))

(declare-fun d!17607 () Bool)

(declare-fun c!11217 () Bool)

(assert (=> d!17607 (= c!11217 (and ((_ is Cons!1503) lt!33013) (= (_1!1083 (h!2090 lt!33013)) (_1!1083 (tuple2!2147 lt!32698 lt!32693)))))))

(assert (=> d!17607 (= (getValueByKey!132 lt!33013 (_1!1083 (tuple2!2147 lt!32698 lt!32693))) e!48660)))

(declare-fun b!74457 () Bool)

(assert (=> b!74457 (= e!48661 (getValueByKey!132 (t!5068 lt!33013) (_1!1083 (tuple2!2147 lt!32698 lt!32693))))))

(assert (= (and d!17607 c!11217) b!74455))

(assert (= (and d!17607 (not c!11217)) b!74456))

(assert (= (and b!74456 c!11218) b!74457))

(assert (= (and b!74456 (not c!11218)) b!74458))

(declare-fun m!73597 () Bool)

(assert (=> b!74457 m!73597))

(assert (=> d!16993 d!17607))

(declare-fun d!17609 () Bool)

(assert (=> d!17609 (= (getValueByKey!132 lt!33013 (_1!1083 (tuple2!2147 lt!32698 lt!32693))) (Some!137 (_2!1083 (tuple2!2147 lt!32698 lt!32693))))))

(declare-fun lt!33441 () Unit!2086)

(assert (=> d!17609 (= lt!33441 (choose!422 lt!33013 (_1!1083 (tuple2!2147 lt!32698 lt!32693)) (_2!1083 (tuple2!2147 lt!32698 lt!32693))))))

(declare-fun e!48662 () Bool)

(assert (=> d!17609 e!48662))

(declare-fun res!39362 () Bool)

(assert (=> d!17609 (=> (not res!39362) (not e!48662))))

(assert (=> d!17609 (= res!39362 (isStrictlySorted!287 lt!33013))))

(assert (=> d!17609 (= (lemmaContainsTupThenGetReturnValue!51 lt!33013 (_1!1083 (tuple2!2147 lt!32698 lt!32693)) (_2!1083 (tuple2!2147 lt!32698 lt!32693))) lt!33441)))

(declare-fun b!74459 () Bool)

(declare-fun res!39363 () Bool)

(assert (=> b!74459 (=> (not res!39363) (not e!48662))))

(assert (=> b!74459 (= res!39363 (containsKey!136 lt!33013 (_1!1083 (tuple2!2147 lt!32698 lt!32693))))))

(declare-fun b!74460 () Bool)

(assert (=> b!74460 (= e!48662 (contains!730 lt!33013 (tuple2!2147 (_1!1083 (tuple2!2147 lt!32698 lt!32693)) (_2!1083 (tuple2!2147 lt!32698 lt!32693)))))))

(assert (= (and d!17609 res!39362) b!74459))

(assert (= (and b!74459 res!39363) b!74460))

(assert (=> d!17609 m!72005))

(declare-fun m!73599 () Bool)

(assert (=> d!17609 m!73599))

(declare-fun m!73601 () Bool)

(assert (=> d!17609 m!73601))

(declare-fun m!73603 () Bool)

(assert (=> b!74459 m!73603))

(declare-fun m!73605 () Bool)

(assert (=> b!74460 m!73605))

(assert (=> d!16993 d!17609))

(declare-fun b!74461 () Bool)

(declare-fun e!48663 () List!1507)

(declare-fun call!6578 () List!1507)

(assert (=> b!74461 (= e!48663 call!6578)))

(declare-fun b!74462 () Bool)

(declare-fun e!48665 () List!1507)

(declare-fun call!6577 () List!1507)

(assert (=> b!74462 (= e!48665 call!6577)))

(declare-fun call!6579 () List!1507)

(declare-fun e!48666 () List!1507)

(declare-fun bm!6574 () Bool)

(declare-fun c!11220 () Bool)

(assert (=> bm!6574 (= call!6579 ($colon$colon!65 e!48666 (ite c!11220 (h!2090 (toList!735 lt!32692)) (tuple2!2147 (_1!1083 (tuple2!2147 lt!32698 lt!32693)) (_2!1083 (tuple2!2147 lt!32698 lt!32693))))))))

(declare-fun c!11221 () Bool)

(assert (=> bm!6574 (= c!11221 c!11220)))

(declare-fun b!74464 () Bool)

(declare-fun res!39365 () Bool)

(declare-fun e!48664 () Bool)

(assert (=> b!74464 (=> (not res!39365) (not e!48664))))

(declare-fun lt!33442 () List!1507)

(assert (=> b!74464 (= res!39365 (containsKey!136 lt!33442 (_1!1083 (tuple2!2147 lt!32698 lt!32693))))))

(declare-fun b!74465 () Bool)

(declare-fun e!48667 () List!1507)

(assert (=> b!74465 (= e!48667 call!6579)))

(declare-fun c!11222 () Bool)

(declare-fun b!74466 () Bool)

(declare-fun c!11219 () Bool)

(assert (=> b!74466 (= e!48666 (ite c!11222 (t!5068 (toList!735 lt!32692)) (ite c!11219 (Cons!1503 (h!2090 (toList!735 lt!32692)) (t!5068 (toList!735 lt!32692))) Nil!1504)))))

(declare-fun b!74467 () Bool)

(assert (=> b!74467 (= e!48666 (insertStrictlySorted!53 (t!5068 (toList!735 lt!32692)) (_1!1083 (tuple2!2147 lt!32698 lt!32693)) (_2!1083 (tuple2!2147 lt!32698 lt!32693))))))

(declare-fun b!74468 () Bool)

(assert (=> b!74468 (= e!48664 (contains!730 lt!33442 (tuple2!2147 (_1!1083 (tuple2!2147 lt!32698 lt!32693)) (_2!1083 (tuple2!2147 lt!32698 lt!32693)))))))

(declare-fun bm!6575 () Bool)

(assert (=> bm!6575 (= call!6578 call!6579)))

(declare-fun b!74469 () Bool)

(assert (=> b!74469 (= e!48667 e!48663)))

(assert (=> b!74469 (= c!11222 (and ((_ is Cons!1503) (toList!735 lt!32692)) (= (_1!1083 (h!2090 (toList!735 lt!32692))) (_1!1083 (tuple2!2147 lt!32698 lt!32693)))))))

(declare-fun b!74463 () Bool)

(assert (=> b!74463 (= c!11219 (and ((_ is Cons!1503) (toList!735 lt!32692)) (bvsgt (_1!1083 (h!2090 (toList!735 lt!32692))) (_1!1083 (tuple2!2147 lt!32698 lt!32693)))))))

(assert (=> b!74463 (= e!48663 e!48665)))

(declare-fun d!17611 () Bool)

(assert (=> d!17611 e!48664))

(declare-fun res!39364 () Bool)

(assert (=> d!17611 (=> (not res!39364) (not e!48664))))

(assert (=> d!17611 (= res!39364 (isStrictlySorted!287 lt!33442))))

(assert (=> d!17611 (= lt!33442 e!48667)))

(assert (=> d!17611 (= c!11220 (and ((_ is Cons!1503) (toList!735 lt!32692)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32692))) (_1!1083 (tuple2!2147 lt!32698 lt!32693)))))))

(assert (=> d!17611 (isStrictlySorted!287 (toList!735 lt!32692))))

(assert (=> d!17611 (= (insertStrictlySorted!53 (toList!735 lt!32692) (_1!1083 (tuple2!2147 lt!32698 lt!32693)) (_2!1083 (tuple2!2147 lt!32698 lt!32693))) lt!33442)))

(declare-fun b!74470 () Bool)

(assert (=> b!74470 (= e!48665 call!6577)))

(declare-fun bm!6576 () Bool)

(assert (=> bm!6576 (= call!6577 call!6578)))

(assert (= (and d!17611 c!11220) b!74465))

(assert (= (and d!17611 (not c!11220)) b!74469))

(assert (= (and b!74469 c!11222) b!74461))

(assert (= (and b!74469 (not c!11222)) b!74463))

(assert (= (and b!74463 c!11219) b!74470))

(assert (= (and b!74463 (not c!11219)) b!74462))

(assert (= (or b!74470 b!74462) bm!6576))

(assert (= (or b!74461 bm!6576) bm!6575))

(assert (= (or b!74465 bm!6575) bm!6574))

(assert (= (and bm!6574 c!11221) b!74467))

(assert (= (and bm!6574 (not c!11221)) b!74466))

(assert (= (and d!17611 res!39364) b!74464))

(assert (= (and b!74464 res!39365) b!74468))

(declare-fun m!73607 () Bool)

(assert (=> b!74464 m!73607))

(declare-fun m!73609 () Bool)

(assert (=> d!17611 m!73609))

(declare-fun m!73611 () Bool)

(assert (=> d!17611 m!73611))

(declare-fun m!73613 () Bool)

(assert (=> b!74467 m!73613))

(declare-fun m!73615 () Bool)

(assert (=> b!74468 m!73615))

(declare-fun m!73617 () Bool)

(assert (=> bm!6574 m!73617))

(assert (=> d!16993 d!17611))

(declare-fun d!17613 () Bool)

(assert (=> d!17613 (= (content!77 Nil!1505) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!17019 d!17613))

(declare-fun b!74474 () Bool)

(declare-fun e!48669 () Option!138)

(assert (=> b!74474 (= e!48669 None!136)))

(declare-fun b!74472 () Bool)

(declare-fun e!48668 () Option!138)

(assert (=> b!74472 (= e!48668 e!48669)))

(declare-fun c!11224 () Bool)

(assert (=> b!74472 (= c!11224 (and ((_ is Cons!1503) (t!5068 lt!32724)) (not (= (_1!1083 (h!2090 (t!5068 lt!32724))) (_1!1083 lt!32472)))))))

(declare-fun b!74471 () Bool)

(assert (=> b!74471 (= e!48668 (Some!137 (_2!1083 (h!2090 (t!5068 lt!32724)))))))

(declare-fun d!17615 () Bool)

(declare-fun c!11223 () Bool)

(assert (=> d!17615 (= c!11223 (and ((_ is Cons!1503) (t!5068 lt!32724)) (= (_1!1083 (h!2090 (t!5068 lt!32724))) (_1!1083 lt!32472))))))

(assert (=> d!17615 (= (getValueByKey!132 (t!5068 lt!32724) (_1!1083 lt!32472)) e!48668)))

(declare-fun b!74473 () Bool)

(assert (=> b!74473 (= e!48669 (getValueByKey!132 (t!5068 (t!5068 lt!32724)) (_1!1083 lt!32472)))))

(assert (= (and d!17615 c!11223) b!74471))

(assert (= (and d!17615 (not c!11223)) b!74472))

(assert (= (and b!74472 c!11224) b!74473))

(assert (= (and b!74472 (not c!11224)) b!74474))

(declare-fun m!73619 () Bool)

(assert (=> b!74473 m!73619))

(assert (=> b!73495 d!17615))

(declare-fun b!74475 () Bool)

(declare-fun e!48670 () Bool)

(declare-fun e!48672 () Bool)

(assert (=> b!74475 (= e!48670 e!48672)))

(declare-fun res!39368 () Bool)

(assert (=> b!74475 (=> (not res!39368) (not e!48672))))

(declare-fun e!48671 () Bool)

(assert (=> b!74475 (= res!39368 (not e!48671))))

(declare-fun res!39366 () Bool)

(assert (=> b!74475 (=> (not res!39366) (not e!48671))))

(assert (=> b!74475 (= res!39366 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!74476 () Bool)

(declare-fun e!48673 () Bool)

(declare-fun call!6580 () Bool)

(assert (=> b!74476 (= e!48673 call!6580)))

(declare-fun b!74477 () Bool)

(assert (=> b!74477 (= e!48673 call!6580)))

(declare-fun b!74478 () Bool)

(assert (=> b!74478 (= e!48671 (contains!731 Nil!1505 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!74479 () Bool)

(assert (=> b!74479 (= e!48672 e!48673)))

(declare-fun c!11225 () Bool)

(assert (=> b!74479 (= c!11225 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6577 () Bool)

(assert (=> bm!6577 (= call!6580 (arrayNoDuplicates!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!11225 (Cons!1504 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) #b00000000000000000000000000000000) Nil!1505) Nil!1505)))))

(declare-fun d!17617 () Bool)

(declare-fun res!39367 () Bool)

(assert (=> d!17617 (=> res!39367 e!48670)))

(assert (=> d!17617 (= res!39367 (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992))))))))

(assert (=> d!17617 (= (arrayNoDuplicates!0 (_keys!3865 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000000 Nil!1505) e!48670)))

(assert (= (and d!17617 (not res!39367)) b!74475))

(assert (= (and b!74475 res!39366) b!74478))

(assert (= (and b!74475 res!39368) b!74479))

(assert (= (and b!74479 c!11225) b!74476))

(assert (= (and b!74479 (not c!11225)) b!74477))

(assert (= (or b!74476 b!74477) bm!6577))

(assert (=> b!74475 m!73031))

(assert (=> b!74475 m!73031))

(assert (=> b!74475 m!73033))

(assert (=> b!74478 m!73031))

(assert (=> b!74478 m!73031))

(declare-fun m!73621 () Bool)

(assert (=> b!74478 m!73621))

(assert (=> b!74479 m!73031))

(assert (=> b!74479 m!73031))

(assert (=> b!74479 m!73033))

(assert (=> bm!6577 m!73031))

(declare-fun m!73623 () Bool)

(assert (=> bm!6577 m!73623))

(assert (=> b!73385 d!17617))

(declare-fun d!17619 () Bool)

(declare-fun e!48674 () Bool)

(assert (=> d!17619 e!48674))

(declare-fun res!39369 () Bool)

(assert (=> d!17619 (=> (not res!39369) (not e!48674))))

(declare-fun lt!33446 () ListLongMap!1439)

(assert (=> d!17619 (= res!39369 (contains!729 lt!33446 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(declare-fun lt!33445 () List!1507)

(assert (=> d!17619 (= lt!33446 (ListLongMap!1440 lt!33445))))

(declare-fun lt!33443 () Unit!2086)

(declare-fun lt!33444 () Unit!2086)

(assert (=> d!17619 (= lt!33443 lt!33444)))

(assert (=> d!17619 (= (getValueByKey!132 lt!33445 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(assert (=> d!17619 (= lt!33444 (lemmaContainsTupThenGetReturnValue!51 lt!33445 (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))) (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(assert (=> d!17619 (= lt!33445 (insertStrictlySorted!53 (toList!735 call!6508) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))) (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(assert (=> d!17619 (= (+!98 call!6508 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))) lt!33446)))

(declare-fun b!74480 () Bool)

(declare-fun res!39370 () Bool)

(assert (=> b!74480 (=> (not res!39370) (not e!48674))))

(assert (=> b!74480 (= res!39370 (= (getValueByKey!132 (toList!735 lt!33446) (_1!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))) (Some!137 (_2!1083 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))))

(declare-fun b!74481 () Bool)

(assert (=> b!74481 (= e!48674 (contains!730 (toList!735 lt!33446) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))

(assert (= (and d!17619 res!39369) b!74480))

(assert (= (and b!74480 res!39370) b!74481))

(declare-fun m!73625 () Bool)

(assert (=> d!17619 m!73625))

(declare-fun m!73627 () Bool)

(assert (=> d!17619 m!73627))

(declare-fun m!73629 () Bool)

(assert (=> d!17619 m!73629))

(declare-fun m!73631 () Bool)

(assert (=> d!17619 m!73631))

(declare-fun m!73633 () Bool)

(assert (=> b!74480 m!73633))

(declare-fun m!73635 () Bool)

(assert (=> b!74481 m!73635))

(assert (=> b!73702 d!17619))

(declare-fun d!17621 () Bool)

(declare-fun res!39371 () Bool)

(declare-fun e!48675 () Bool)

(assert (=> d!17621 (=> res!39371 e!48675)))

(assert (=> d!17621 (= res!39371 (and ((_ is Cons!1503) (toList!735 lt!32694)) (= (_1!1083 (h!2090 (toList!735 lt!32694))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17621 (= (containsKey!136 (toList!735 lt!32694) #b1000000000000000000000000000000000000000000000000000000000000000) e!48675)))

(declare-fun b!74482 () Bool)

(declare-fun e!48676 () Bool)

(assert (=> b!74482 (= e!48675 e!48676)))

(declare-fun res!39372 () Bool)

(assert (=> b!74482 (=> (not res!39372) (not e!48676))))

(assert (=> b!74482 (= res!39372 (and (or (not ((_ is Cons!1503) (toList!735 lt!32694))) (bvsle (_1!1083 (h!2090 (toList!735 lt!32694))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1503) (toList!735 lt!32694)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32694))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74483 () Bool)

(assert (=> b!74483 (= e!48676 (containsKey!136 (t!5068 (toList!735 lt!32694)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17621 (not res!39371)) b!74482))

(assert (= (and b!74482 res!39372) b!74483))

(declare-fun m!73637 () Bool)

(assert (=> b!74483 m!73637))

(assert (=> d!16863 d!17621))

(declare-fun d!17623 () Bool)

(assert (=> d!17623 (= (isEmpty!322 (getValueByKey!132 (toList!735 lt!32480) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))) (not ((_ is Some!137) (getValueByKey!132 (toList!735 lt!32480) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))))

(assert (=> d!16897 d!17623))

(declare-fun d!17625 () Bool)

(assert (=> d!17625 (isDefined!86 (getValueByKey!132 (toList!735 lt!32725) (_1!1083 lt!32472)))))

(declare-fun lt!33447 () Unit!2086)

(assert (=> d!17625 (= lt!33447 (choose!421 (toList!735 lt!32725) (_1!1083 lt!32472)))))

(declare-fun e!48677 () Bool)

(assert (=> d!17625 e!48677))

(declare-fun res!39373 () Bool)

(assert (=> d!17625 (=> (not res!39373) (not e!48677))))

(assert (=> d!17625 (= res!39373 (isStrictlySorted!287 (toList!735 lt!32725)))))

(assert (=> d!17625 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32725) (_1!1083 lt!32472)) lt!33447)))

(declare-fun b!74484 () Bool)

(assert (=> b!74484 (= e!48677 (containsKey!136 (toList!735 lt!32725) (_1!1083 lt!32472)))))

(assert (= (and d!17625 res!39373) b!74484))

(assert (=> d!17625 m!71355))

(assert (=> d!17625 m!71355))

(assert (=> d!17625 m!71777))

(declare-fun m!73639 () Bool)

(assert (=> d!17625 m!73639))

(declare-fun m!73641 () Bool)

(assert (=> d!17625 m!73641))

(assert (=> b!74484 m!71773))

(assert (=> b!73490 d!17625))

(declare-fun d!17627 () Bool)

(assert (=> d!17627 (= (isDefined!86 (getValueByKey!132 (toList!735 lt!32725) (_1!1083 lt!32472))) (not (isEmpty!322 (getValueByKey!132 (toList!735 lt!32725) (_1!1083 lt!32472)))))))

(declare-fun bs!3211 () Bool)

(assert (= bs!3211 d!17627))

(assert (=> bs!3211 m!71355))

(declare-fun m!73643 () Bool)

(assert (=> bs!3211 m!73643))

(assert (=> b!73490 d!17627))

(assert (=> b!73490 d!16907))

(assert (=> b!73382 d!17431))

(assert (=> b!73382 d!17373))

(declare-fun d!17629 () Bool)

(assert (=> d!17629 (isDefined!86 (getValueByKey!132 (toList!735 lt!32694) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!33448 () Unit!2086)

(assert (=> d!17629 (= lt!33448 (choose!421 (toList!735 lt!32694) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!48678 () Bool)

(assert (=> d!17629 e!48678))

(declare-fun res!39374 () Bool)

(assert (=> d!17629 (=> (not res!39374) (not e!48678))))

(assert (=> d!17629 (= res!39374 (isStrictlySorted!287 (toList!735 lt!32694)))))

(assert (=> d!17629 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32694) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!33448)))

(declare-fun b!74485 () Bool)

(assert (=> b!74485 (= e!48678 (containsKey!136 (toList!735 lt!32694) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!17629 res!39374) b!74485))

(assert (=> d!17629 m!71227))

(assert (=> d!17629 m!71651))

(assert (=> d!17629 m!71651))

(assert (=> d!17629 m!72191))

(assert (=> d!17629 m!71227))

(declare-fun m!73645 () Bool)

(assert (=> d!17629 m!73645))

(assert (=> d!17629 m!73393))

(assert (=> b!74485 m!71227))

(assert (=> b!74485 m!72187))

(assert (=> b!73710 d!17629))

(declare-fun d!17631 () Bool)

(assert (=> d!17631 (= (isDefined!86 (getValueByKey!132 (toList!735 lt!32694) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!322 (getValueByKey!132 (toList!735 lt!32694) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3212 () Bool)

(assert (= bs!3212 d!17631))

(assert (=> bs!3212 m!71651))

(declare-fun m!73647 () Bool)

(assert (=> bs!3212 m!73647))

(assert (=> b!73710 d!17631))

(assert (=> b!73710 d!17149))

(declare-fun d!17633 () Bool)

(declare-fun e!48680 () Bool)

(assert (=> d!17633 e!48680))

(declare-fun res!39375 () Bool)

(assert (=> d!17633 (=> res!39375 e!48680)))

(declare-fun lt!33451 () Bool)

(assert (=> d!17633 (= res!39375 (not lt!33451))))

(declare-fun lt!33449 () Bool)

(assert (=> d!17633 (= lt!33451 lt!33449)))

(declare-fun lt!33450 () Unit!2086)

(declare-fun e!48679 () Unit!2086)

(assert (=> d!17633 (= lt!33450 e!48679)))

(declare-fun c!11226 () Bool)

(assert (=> d!17633 (= c!11226 lt!33449)))

(assert (=> d!17633 (= lt!33449 (containsKey!136 (toList!735 (getCurrentListMap!426 (_keys!3865 newMap!16) lt!32608 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593))))))

(assert (=> d!17633 (= (contains!729 (getCurrentListMap!426 (_keys!3865 newMap!16) lt!32608 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593))) lt!33451)))

(declare-fun b!74486 () Bool)

(declare-fun lt!33452 () Unit!2086)

(assert (=> b!74486 (= e!48679 lt!33452)))

(assert (=> b!74486 (= lt!33452 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 (getCurrentListMap!426 (_keys!3865 newMap!16) lt!32608 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593))))))

(assert (=> b!74486 (isDefined!86 (getValueByKey!132 (toList!735 (getCurrentListMap!426 (_keys!3865 newMap!16) lt!32608 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593))))))

(declare-fun b!74487 () Bool)

(declare-fun Unit!2146 () Unit!2086)

(assert (=> b!74487 (= e!48679 Unit!2146)))

(declare-fun b!74488 () Bool)

(assert (=> b!74488 (= e!48680 (isDefined!86 (getValueByKey!132 (toList!735 (getCurrentListMap!426 (_keys!3865 newMap!16) lt!32608 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!32593)))))))

(assert (= (and d!17633 c!11226) b!74486))

(assert (= (and d!17633 (not c!11226)) b!74487))

(assert (= (and d!17633 (not res!39375)) b!74488))

(assert (=> d!17633 m!71217))

(declare-fun m!73649 () Bool)

(assert (=> d!17633 m!73649))

(assert (=> b!74486 m!71217))

(declare-fun m!73651 () Bool)

(assert (=> b!74486 m!73651))

(assert (=> b!74486 m!71217))

(declare-fun m!73653 () Bool)

(assert (=> b!74486 m!73653))

(assert (=> b!74486 m!73653))

(declare-fun m!73655 () Bool)

(assert (=> b!74486 m!73655))

(assert (=> b!74488 m!71217))

(assert (=> b!74488 m!73653))

(assert (=> b!74488 m!73653))

(assert (=> b!74488 m!73655))

(assert (=> b!73636 d!17633))

(declare-fun b!74489 () Bool)

(declare-fun e!48682 () Bool)

(declare-fun e!48685 () Bool)

(assert (=> b!74489 (= e!48682 e!48685)))

(declare-fun res!39381 () Bool)

(declare-fun call!6586 () Bool)

(assert (=> b!74489 (= res!39381 call!6586)))

(assert (=> b!74489 (=> (not res!39381) (not e!48685))))

(declare-fun b!74490 () Bool)

(declare-fun e!48689 () ListLongMap!1439)

(declare-fun call!6581 () ListLongMap!1439)

(assert (=> b!74490 (= e!48689 call!6581)))

(declare-fun b!74491 () Bool)

(declare-fun call!6582 () ListLongMap!1439)

(assert (=> b!74491 (= e!48689 call!6582)))

(declare-fun bm!6578 () Bool)

(declare-fun lt!33463 () ListLongMap!1439)

(assert (=> bm!6578 (= call!6586 (contains!729 lt!33463 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74492 () Bool)

(declare-fun e!48681 () Bool)

(declare-fun e!48687 () Bool)

(assert (=> b!74492 (= e!48681 e!48687)))

(declare-fun res!39379 () Bool)

(assert (=> b!74492 (=> (not res!39379) (not e!48687))))

(assert (=> b!74492 (= res!39379 (contains!729 lt!33463 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74492 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!74493 () Bool)

(declare-fun e!48683 () Unit!2086)

(declare-fun Unit!2147 () Unit!2086)

(assert (=> b!74493 (= e!48683 Unit!2147)))

(declare-fun bm!6579 () Bool)

(declare-fun call!6583 () ListLongMap!1439)

(assert (=> bm!6579 (= call!6581 call!6583)))

(declare-fun bm!6580 () Bool)

(declare-fun call!6587 () ListLongMap!1439)

(assert (=> bm!6580 (= call!6587 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) lt!32608 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!74495 () Bool)

(declare-fun lt!33453 () Unit!2086)

(assert (=> b!74495 (= e!48683 lt!33453)))

(declare-fun lt!33474 () ListLongMap!1439)

(assert (=> b!74495 (= lt!33474 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) lt!32608 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33468 () (_ BitVec 64))

(assert (=> b!74495 (= lt!33468 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33459 () (_ BitVec 64))

(assert (=> b!74495 (= lt!33459 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33456 () Unit!2086)

(assert (=> b!74495 (= lt!33456 (addStillContains!51 lt!33474 lt!33468 (zeroValue!2115 newMap!16) lt!33459))))

(assert (=> b!74495 (contains!729 (+!98 lt!33474 (tuple2!2147 lt!33468 (zeroValue!2115 newMap!16))) lt!33459)))

(declare-fun lt!33470 () Unit!2086)

(assert (=> b!74495 (= lt!33470 lt!33456)))

(declare-fun lt!33461 () ListLongMap!1439)

(assert (=> b!74495 (= lt!33461 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) lt!32608 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33471 () (_ BitVec 64))

(assert (=> b!74495 (= lt!33471 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33469 () (_ BitVec 64))

(assert (=> b!74495 (= lt!33469 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33473 () Unit!2086)

(assert (=> b!74495 (= lt!33473 (addApplyDifferent!51 lt!33461 lt!33471 (minValue!2115 newMap!16) lt!33469))))

(assert (=> b!74495 (= (apply!75 (+!98 lt!33461 (tuple2!2147 lt!33471 (minValue!2115 newMap!16))) lt!33469) (apply!75 lt!33461 lt!33469))))

(declare-fun lt!33458 () Unit!2086)

(assert (=> b!74495 (= lt!33458 lt!33473)))

(declare-fun lt!33472 () ListLongMap!1439)

(assert (=> b!74495 (= lt!33472 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) lt!32608 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33462 () (_ BitVec 64))

(assert (=> b!74495 (= lt!33462 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33454 () (_ BitVec 64))

(assert (=> b!74495 (= lt!33454 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33460 () Unit!2086)

(assert (=> b!74495 (= lt!33460 (addApplyDifferent!51 lt!33472 lt!33462 (zeroValue!2115 newMap!16) lt!33454))))

(assert (=> b!74495 (= (apply!75 (+!98 lt!33472 (tuple2!2147 lt!33462 (zeroValue!2115 newMap!16))) lt!33454) (apply!75 lt!33472 lt!33454))))

(declare-fun lt!33464 () Unit!2086)

(assert (=> b!74495 (= lt!33464 lt!33460)))

(declare-fun lt!33467 () ListLongMap!1439)

(assert (=> b!74495 (= lt!33467 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) lt!32608 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33457 () (_ BitVec 64))

(assert (=> b!74495 (= lt!33457 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33455 () (_ BitVec 64))

(assert (=> b!74495 (= lt!33455 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74495 (= lt!33453 (addApplyDifferent!51 lt!33467 lt!33457 (minValue!2115 newMap!16) lt!33455))))

(assert (=> b!74495 (= (apply!75 (+!98 lt!33467 (tuple2!2147 lt!33457 (minValue!2115 newMap!16))) lt!33455) (apply!75 lt!33467 lt!33455))))

(declare-fun b!74496 () Bool)

(assert (=> b!74496 (= e!48682 (not call!6586))))

(declare-fun b!74497 () Bool)

(declare-fun res!39380 () Bool)

(declare-fun e!48692 () Bool)

(assert (=> b!74497 (=> (not res!39380) (not e!48692))))

(assert (=> b!74497 (= res!39380 e!48682)))

(declare-fun c!11227 () Bool)

(assert (=> b!74497 (= c!11227 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!74498 () Bool)

(declare-fun e!48686 () ListLongMap!1439)

(declare-fun e!48693 () ListLongMap!1439)

(assert (=> b!74498 (= e!48686 e!48693)))

(declare-fun c!11229 () Bool)

(assert (=> b!74498 (= c!11229 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74499 () Bool)

(declare-fun e!48688 () Bool)

(declare-fun e!48684 () Bool)

(assert (=> b!74499 (= e!48688 e!48684)))

(declare-fun res!39384 () Bool)

(declare-fun call!6584 () Bool)

(assert (=> b!74499 (= res!39384 call!6584)))

(assert (=> b!74499 (=> (not res!39384) (not e!48684))))

(declare-fun bm!6581 () Bool)

(assert (=> bm!6581 (= call!6583 call!6587)))

(declare-fun bm!6582 () Bool)

(declare-fun call!6585 () ListLongMap!1439)

(assert (=> bm!6582 (= call!6582 call!6585)))

(declare-fun b!74500 () Bool)

(assert (=> b!74500 (= e!48688 (not call!6584))))

(declare-fun b!74501 () Bool)

(declare-fun res!39377 () Bool)

(assert (=> b!74501 (=> (not res!39377) (not e!48692))))

(assert (=> b!74501 (= res!39377 e!48681)))

(declare-fun res!39376 () Bool)

(assert (=> b!74501 (=> res!39376 e!48681)))

(declare-fun e!48690 () Bool)

(assert (=> b!74501 (= res!39376 (not e!48690))))

(declare-fun res!39378 () Bool)

(assert (=> b!74501 (=> (not res!39378) (not e!48690))))

(assert (=> b!74501 (= res!39378 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!74502 () Bool)

(assert (=> b!74502 (= e!48692 e!48688)))

(declare-fun c!11231 () Bool)

(assert (=> b!74502 (= c!11231 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74503 () Bool)

(assert (=> b!74503 (= e!48684 (= (apply!75 lt!33463 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2115 newMap!16)))))

(declare-fun b!74504 () Bool)

(assert (=> b!74504 (= e!48693 call!6582)))

(declare-fun bm!6583 () Bool)

(assert (=> bm!6583 (= call!6584 (contains!729 lt!33463 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17635 () Bool)

(assert (=> d!17635 e!48692))

(declare-fun res!39382 () Bool)

(assert (=> d!17635 (=> (not res!39382) (not e!48692))))

(assert (=> d!17635 (= res!39382 (or (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))))

(declare-fun lt!33465 () ListLongMap!1439)

(assert (=> d!17635 (= lt!33463 lt!33465)))

(declare-fun lt!33466 () Unit!2086)

(assert (=> d!17635 (= lt!33466 e!48683)))

(declare-fun c!11230 () Bool)

(declare-fun e!48691 () Bool)

(assert (=> d!17635 (= c!11230 e!48691)))

(declare-fun res!39383 () Bool)

(assert (=> d!17635 (=> (not res!39383) (not e!48691))))

(assert (=> d!17635 (= res!39383 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!17635 (= lt!33465 e!48686)))

(declare-fun c!11228 () Bool)

(assert (=> d!17635 (= c!11228 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17635 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17635 (= (getCurrentListMap!426 (_keys!3865 newMap!16) lt!32608 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33463)))

(declare-fun b!74494 () Bool)

(assert (=> b!74494 (= e!48685 (= (apply!75 lt!33463 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2115 newMap!16)))))

(declare-fun b!74505 () Bool)

(assert (=> b!74505 (= e!48690 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74506 () Bool)

(declare-fun c!11232 () Bool)

(assert (=> b!74506 (= c!11232 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!74506 (= e!48693 e!48689)))

(declare-fun b!74507 () Bool)

(assert (=> b!74507 (= e!48691 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74508 () Bool)

(assert (=> b!74508 (= e!48687 (= (apply!75 lt!33463 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1154 (select (arr!1859 lt!32608) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74508 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 lt!32608)))))

(assert (=> b!74508 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun bm!6584 () Bool)

(assert (=> bm!6584 (= call!6585 (+!98 (ite c!11228 call!6587 (ite c!11229 call!6583 call!6581)) (ite (or c!11228 c!11229) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(declare-fun b!74509 () Bool)

(assert (=> b!74509 (= e!48686 (+!98 call!6585 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))

(assert (= (and d!17635 c!11228) b!74509))

(assert (= (and d!17635 (not c!11228)) b!74498))

(assert (= (and b!74498 c!11229) b!74504))

(assert (= (and b!74498 (not c!11229)) b!74506))

(assert (= (and b!74506 c!11232) b!74491))

(assert (= (and b!74506 (not c!11232)) b!74490))

(assert (= (or b!74491 b!74490) bm!6579))

(assert (= (or b!74504 bm!6579) bm!6581))

(assert (= (or b!74504 b!74491) bm!6582))

(assert (= (or b!74509 bm!6581) bm!6580))

(assert (= (or b!74509 bm!6582) bm!6584))

(assert (= (and d!17635 res!39383) b!74507))

(assert (= (and d!17635 c!11230) b!74495))

(assert (= (and d!17635 (not c!11230)) b!74493))

(assert (= (and d!17635 res!39382) b!74501))

(assert (= (and b!74501 res!39378) b!74505))

(assert (= (and b!74501 (not res!39376)) b!74492))

(assert (= (and b!74492 res!39379) b!74508))

(assert (= (and b!74501 res!39377) b!74497))

(assert (= (and b!74497 c!11227) b!74489))

(assert (= (and b!74497 (not c!11227)) b!74496))

(assert (= (and b!74489 res!39381) b!74494))

(assert (= (or b!74489 b!74496) bm!6578))

(assert (= (and b!74497 res!39380) b!74502))

(assert (= (and b!74502 c!11231) b!74499))

(assert (= (and b!74502 (not c!11231)) b!74500))

(assert (= (and b!74499 res!39384) b!74503))

(assert (= (or b!74499 b!74500) bm!6583))

(declare-fun b_lambda!3343 () Bool)

(assert (=> (not b_lambda!3343) (not b!74508)))

(assert (=> b!74508 t!5077))

(declare-fun b_and!4561 () Bool)

(assert (= b_and!4557 (and (=> t!5077 result!2697) b_and!4561)))

(assert (=> b!74508 t!5079))

(declare-fun b_and!4563 () Bool)

(assert (= b_and!4559 (and (=> t!5079 result!2699) b_and!4563)))

(declare-fun m!73657 () Bool)

(assert (=> bm!6584 m!73657))

(declare-fun m!73659 () Bool)

(assert (=> b!74494 m!73659))

(declare-fun m!73661 () Bool)

(assert (=> bm!6580 m!73661))

(assert (=> b!74505 m!71397))

(assert (=> b!74505 m!71397))

(assert (=> b!74505 m!71411))

(declare-fun m!73663 () Bool)

(assert (=> b!74509 m!73663))

(declare-fun m!73665 () Bool)

(assert (=> bm!6578 m!73665))

(declare-fun m!73667 () Bool)

(assert (=> b!74495 m!73667))

(declare-fun m!73669 () Bool)

(assert (=> b!74495 m!73669))

(declare-fun m!73671 () Bool)

(assert (=> b!74495 m!73671))

(assert (=> b!74495 m!71397))

(declare-fun m!73673 () Bool)

(assert (=> b!74495 m!73673))

(declare-fun m!73675 () Bool)

(assert (=> b!74495 m!73675))

(declare-fun m!73677 () Bool)

(assert (=> b!74495 m!73677))

(assert (=> b!74495 m!73673))

(declare-fun m!73679 () Bool)

(assert (=> b!74495 m!73679))

(assert (=> b!74495 m!73661))

(declare-fun m!73681 () Bool)

(assert (=> b!74495 m!73681))

(assert (=> b!74495 m!73669))

(declare-fun m!73683 () Bool)

(assert (=> b!74495 m!73683))

(assert (=> b!74495 m!73667))

(declare-fun m!73685 () Bool)

(assert (=> b!74495 m!73685))

(declare-fun m!73687 () Bool)

(assert (=> b!74495 m!73687))

(assert (=> b!74495 m!73671))

(declare-fun m!73689 () Bool)

(assert (=> b!74495 m!73689))

(declare-fun m!73691 () Bool)

(assert (=> b!74495 m!73691))

(declare-fun m!73693 () Bool)

(assert (=> b!74495 m!73693))

(declare-fun m!73695 () Bool)

(assert (=> b!74495 m!73695))

(assert (=> b!74492 m!71397))

(assert (=> b!74492 m!71397))

(declare-fun m!73697 () Bool)

(assert (=> b!74492 m!73697))

(declare-fun m!73699 () Bool)

(assert (=> bm!6583 m!73699))

(assert (=> b!74508 m!71397))

(assert (=> b!74508 m!71397))

(declare-fun m!73701 () Bool)

(assert (=> b!74508 m!73701))

(assert (=> b!74508 m!71521))

(declare-fun m!73703 () Bool)

(assert (=> b!74508 m!73703))

(assert (=> b!74508 m!73703))

(assert (=> b!74508 m!71521))

(declare-fun m!73705 () Bool)

(assert (=> b!74508 m!73705))

(assert (=> b!74507 m!71397))

(assert (=> b!74507 m!71397))

(assert (=> b!74507 m!71411))

(declare-fun m!73707 () Bool)

(assert (=> b!74503 m!73707))

(assert (=> d!17635 m!71423))

(assert (=> b!73636 d!17635))

(assert (=> b!73473 d!17087))

(declare-fun d!17637 () Bool)

(assert (=> d!17637 (= (get!1158 (getValueByKey!132 (toList!735 (+!98 lt!32675 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32657)) (v!2537 (getValueByKey!132 (toList!735 (+!98 lt!32675 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32657)))))

(assert (=> d!16963 d!17637))

(declare-fun b!74513 () Bool)

(declare-fun e!48695 () Option!138)

(assert (=> b!74513 (= e!48695 None!136)))

(declare-fun b!74511 () Bool)

(declare-fun e!48694 () Option!138)

(assert (=> b!74511 (= e!48694 e!48695)))

(declare-fun c!11234 () Bool)

(assert (=> b!74511 (= c!11234 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32675 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))) (not (= (_1!1083 (h!2090 (toList!735 (+!98 lt!32675 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))) lt!32657))))))

(declare-fun b!74510 () Bool)

(assert (=> b!74510 (= e!48694 (Some!137 (_2!1083 (h!2090 (toList!735 (+!98 lt!32675 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))))

(declare-fun d!17639 () Bool)

(declare-fun c!11233 () Bool)

(assert (=> d!17639 (= c!11233 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32675 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))) (= (_1!1083 (h!2090 (toList!735 (+!98 lt!32675 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))) lt!32657)))))

(assert (=> d!17639 (= (getValueByKey!132 (toList!735 (+!98 lt!32675 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!32657) e!48694)))

(declare-fun b!74512 () Bool)

(assert (=> b!74512 (= e!48695 (getValueByKey!132 (t!5068 (toList!735 (+!98 lt!32675 (tuple2!2147 lt!32665 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))) lt!32657))))

(assert (= (and d!17639 c!11233) b!74510))

(assert (= (and d!17639 (not c!11233)) b!74511))

(assert (= (and b!74511 c!11234) b!74512))

(assert (= (and b!74511 (not c!11234)) b!74513))

(declare-fun m!73709 () Bool)

(assert (=> b!74512 m!73709))

(assert (=> d!16963 d!17639))

(declare-fun d!17641 () Bool)

(declare-fun res!39385 () Bool)

(declare-fun e!48696 () Bool)

(assert (=> d!17641 (=> res!39385 e!48696)))

(assert (=> d!17641 (= res!39385 (= (select (arr!1858 (_keys!3865 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> d!17641 (= (arrayContainsKey!0 (_keys!3865 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!48696)))

(declare-fun b!74514 () Bool)

(declare-fun e!48697 () Bool)

(assert (=> b!74514 (= e!48696 e!48697)))

(declare-fun res!39386 () Bool)

(assert (=> b!74514 (=> (not res!39386) (not e!48697))))

(assert (=> b!74514 (= res!39386 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!74515 () Bool)

(assert (=> b!74515 (= e!48697 (arrayContainsKey!0 (_keys!3865 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!17641 (not res!39385)) b!74514))

(assert (= (and b!74514 res!39386) b!74515))

(assert (=> d!17641 m!72513))

(assert (=> b!74515 m!71053))

(declare-fun m!73711 () Bool)

(assert (=> b!74515 m!73711))

(assert (=> b!73254 d!17641))

(declare-fun d!17643 () Bool)

(assert (not d!17643))

(assert (=> b!73658 d!17643))

(declare-fun d!17645 () Bool)

(declare-fun lt!33475 () Bool)

(assert (=> d!17645 (= lt!33475 (select (content!76 (toList!735 lt!33014)) (tuple2!2147 lt!32698 lt!32693)))))

(declare-fun e!48698 () Bool)

(assert (=> d!17645 (= lt!33475 e!48698)))

(declare-fun res!39388 () Bool)

(assert (=> d!17645 (=> (not res!39388) (not e!48698))))

(assert (=> d!17645 (= res!39388 ((_ is Cons!1503) (toList!735 lt!33014)))))

(assert (=> d!17645 (= (contains!730 (toList!735 lt!33014) (tuple2!2147 lt!32698 lt!32693)) lt!33475)))

(declare-fun b!74516 () Bool)

(declare-fun e!48699 () Bool)

(assert (=> b!74516 (= e!48698 e!48699)))

(declare-fun res!39387 () Bool)

(assert (=> b!74516 (=> res!39387 e!48699)))

(assert (=> b!74516 (= res!39387 (= (h!2090 (toList!735 lt!33014)) (tuple2!2147 lt!32698 lt!32693)))))

(declare-fun b!74517 () Bool)

(assert (=> b!74517 (= e!48699 (contains!730 (t!5068 (toList!735 lt!33014)) (tuple2!2147 lt!32698 lt!32693)))))

(assert (= (and d!17645 res!39388) b!74516))

(assert (= (and b!74516 (not res!39387)) b!74517))

(declare-fun m!73713 () Bool)

(assert (=> d!17645 m!73713))

(declare-fun m!73715 () Bool)

(assert (=> d!17645 m!73715))

(declare-fun m!73717 () Bool)

(assert (=> b!74517 m!73717))

(assert (=> b!73603 d!17645))

(declare-fun b!74518 () Bool)

(declare-fun e!48700 () List!1507)

(declare-fun call!6589 () List!1507)

(assert (=> b!74518 (= e!48700 call!6589)))

(declare-fun b!74519 () Bool)

(declare-fun e!48702 () List!1507)

(declare-fun call!6588 () List!1507)

(assert (=> b!74519 (= e!48702 call!6588)))

(declare-fun bm!6585 () Bool)

(declare-fun call!6590 () List!1507)

(declare-fun c!11236 () Bool)

(declare-fun e!48703 () List!1507)

(assert (=> bm!6585 (= call!6590 ($colon$colon!65 e!48703 (ite c!11236 (h!2090 (t!5068 (toList!735 lt!32476))) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482)))))))

(declare-fun c!11237 () Bool)

(assert (=> bm!6585 (= c!11237 c!11236)))

(declare-fun b!74521 () Bool)

(declare-fun res!39390 () Bool)

(declare-fun e!48701 () Bool)

(assert (=> b!74521 (=> (not res!39390) (not e!48701))))

(declare-fun lt!33476 () List!1507)

(assert (=> b!74521 (= res!39390 (containsKey!136 lt!33476 (_1!1083 lt!32482)))))

(declare-fun b!74522 () Bool)

(declare-fun e!48704 () List!1507)

(assert (=> b!74522 (= e!48704 call!6590)))

(declare-fun c!11238 () Bool)

(declare-fun b!74523 () Bool)

(declare-fun c!11235 () Bool)

(assert (=> b!74523 (= e!48703 (ite c!11238 (t!5068 (t!5068 (toList!735 lt!32476))) (ite c!11235 (Cons!1503 (h!2090 (t!5068 (toList!735 lt!32476))) (t!5068 (t!5068 (toList!735 lt!32476)))) Nil!1504)))))

(declare-fun b!74524 () Bool)

(assert (=> b!74524 (= e!48703 (insertStrictlySorted!53 (t!5068 (t!5068 (toList!735 lt!32476))) (_1!1083 lt!32482) (_2!1083 lt!32482)))))

(declare-fun b!74525 () Bool)

(assert (=> b!74525 (= e!48701 (contains!730 lt!33476 (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))))))

(declare-fun bm!6586 () Bool)

(assert (=> bm!6586 (= call!6589 call!6590)))

(declare-fun b!74526 () Bool)

(assert (=> b!74526 (= e!48704 e!48700)))

(assert (=> b!74526 (= c!11238 (and ((_ is Cons!1503) (t!5068 (toList!735 lt!32476))) (= (_1!1083 (h!2090 (t!5068 (toList!735 lt!32476)))) (_1!1083 lt!32482))))))

(declare-fun b!74520 () Bool)

(assert (=> b!74520 (= c!11235 (and ((_ is Cons!1503) (t!5068 (toList!735 lt!32476))) (bvsgt (_1!1083 (h!2090 (t!5068 (toList!735 lt!32476)))) (_1!1083 lt!32482))))))

(assert (=> b!74520 (= e!48700 e!48702)))

(declare-fun d!17647 () Bool)

(assert (=> d!17647 e!48701))

(declare-fun res!39389 () Bool)

(assert (=> d!17647 (=> (not res!39389) (not e!48701))))

(assert (=> d!17647 (= res!39389 (isStrictlySorted!287 lt!33476))))

(assert (=> d!17647 (= lt!33476 e!48704)))

(assert (=> d!17647 (= c!11236 (and ((_ is Cons!1503) (t!5068 (toList!735 lt!32476))) (bvslt (_1!1083 (h!2090 (t!5068 (toList!735 lt!32476)))) (_1!1083 lt!32482))))))

(assert (=> d!17647 (isStrictlySorted!287 (t!5068 (toList!735 lt!32476)))))

(assert (=> d!17647 (= (insertStrictlySorted!53 (t!5068 (toList!735 lt!32476)) (_1!1083 lt!32482) (_2!1083 lt!32482)) lt!33476)))

(declare-fun b!74527 () Bool)

(assert (=> b!74527 (= e!48702 call!6588)))

(declare-fun bm!6587 () Bool)

(assert (=> bm!6587 (= call!6588 call!6589)))

(assert (= (and d!17647 c!11236) b!74522))

(assert (= (and d!17647 (not c!11236)) b!74526))

(assert (= (and b!74526 c!11238) b!74518))

(assert (= (and b!74526 (not c!11238)) b!74520))

(assert (= (and b!74520 c!11235) b!74527))

(assert (= (and b!74520 (not c!11235)) b!74519))

(assert (= (or b!74527 b!74519) bm!6587))

(assert (= (or b!74518 bm!6587) bm!6586))

(assert (= (or b!74522 bm!6586) bm!6585))

(assert (= (and bm!6585 c!11237) b!74524))

(assert (= (and bm!6585 (not c!11237)) b!74523))

(assert (= (and d!17647 res!39389) b!74521))

(assert (= (and b!74521 res!39390) b!74525))

(declare-fun m!73719 () Bool)

(assert (=> b!74521 m!73719))

(declare-fun m!73721 () Bool)

(assert (=> d!17647 m!73721))

(assert (=> d!17647 m!72325))

(declare-fun m!73723 () Bool)

(assert (=> b!74524 m!73723))

(declare-fun m!73725 () Bool)

(assert (=> b!74525 m!73725))

(declare-fun m!73727 () Bool)

(assert (=> bm!6585 m!73727))

(assert (=> b!73676 d!17647))

(declare-fun d!17649 () Bool)

(declare-fun c!11239 () Bool)

(assert (=> d!17649 (= c!11239 ((_ is Nil!1504) (toList!735 lt!32721)))))

(declare-fun e!48705 () (InoxSet tuple2!2146))

(assert (=> d!17649 (= (content!76 (toList!735 lt!32721)) e!48705)))

(declare-fun b!74528 () Bool)

(assert (=> b!74528 (= e!48705 ((as const (Array tuple2!2146 Bool)) false))))

(declare-fun b!74529 () Bool)

(assert (=> b!74529 (= e!48705 ((_ map or) (store ((as const (Array tuple2!2146 Bool)) false) (h!2090 (toList!735 lt!32721)) true) (content!76 (t!5068 (toList!735 lt!32721)))))))

(assert (= (and d!17649 c!11239) b!74528))

(assert (= (and d!17649 (not c!11239)) b!74529))

(declare-fun m!73729 () Bool)

(assert (=> b!74529 m!73729))

(assert (=> b!74529 m!73571))

(assert (=> d!17031 d!17649))

(declare-fun d!17651 () Bool)

(assert (=> d!17651 (isDefined!86 (getValueByKey!132 (toList!735 lt!32694) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!33477 () Unit!2086)

(assert (=> d!17651 (= lt!33477 (choose!421 (toList!735 lt!32694) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48706 () Bool)

(assert (=> d!17651 e!48706))

(declare-fun res!39391 () Bool)

(assert (=> d!17651 (=> (not res!39391) (not e!48706))))

(assert (=> d!17651 (= res!39391 (isStrictlySorted!287 (toList!735 lt!32694)))))

(assert (=> d!17651 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32694) #b1000000000000000000000000000000000000000000000000000000000000000) lt!33477)))

(declare-fun b!74530 () Bool)

(assert (=> b!74530 (= e!48706 (containsKey!136 (toList!735 lt!32694) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17651 res!39391) b!74530))

(assert (=> d!17651 m!71447))

(assert (=> d!17651 m!71447))

(assert (=> d!17651 m!71449))

(declare-fun m!73731 () Bool)

(assert (=> d!17651 m!73731))

(assert (=> d!17651 m!73393))

(assert (=> b!74530 m!71443))

(assert (=> b!73300 d!17651))

(assert (=> b!73300 d!17083))

(assert (=> b!73300 d!17085))

(assert (=> b!73417 d!17223))

(assert (=> b!73307 d!17243))

(assert (=> b!73663 d!17481))

(assert (=> b!73663 d!16859))

(declare-fun d!17653 () Bool)

(declare-fun e!48708 () Bool)

(assert (=> d!17653 e!48708))

(declare-fun res!39392 () Bool)

(assert (=> d!17653 (=> res!39392 e!48708)))

(declare-fun lt!33480 () Bool)

(assert (=> d!17653 (= res!39392 (not lt!33480))))

(declare-fun lt!33478 () Bool)

(assert (=> d!17653 (= lt!33480 lt!33478)))

(declare-fun lt!33479 () Unit!2086)

(declare-fun e!48707 () Unit!2086)

(assert (=> d!17653 (= lt!33479 e!48707)))

(declare-fun c!11240 () Bool)

(assert (=> d!17653 (= c!11240 lt!33478)))

(assert (=> d!17653 (= lt!33478 (containsKey!136 (toList!735 lt!32800) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!17653 (= (contains!729 lt!32800 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) lt!33480)))

(declare-fun b!74531 () Bool)

(declare-fun lt!33481 () Unit!2086)

(assert (=> b!74531 (= e!48707 lt!33481)))

(assert (=> b!74531 (= lt!33481 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32800) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> b!74531 (isDefined!86 (getValueByKey!132 (toList!735 lt!32800) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun b!74532 () Bool)

(declare-fun Unit!2148 () Unit!2086)

(assert (=> b!74532 (= e!48707 Unit!2148)))

(declare-fun b!74533 () Bool)

(assert (=> b!74533 (= e!48708 (isDefined!86 (getValueByKey!132 (toList!735 lt!32800) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (= (and d!17653 c!11240) b!74531))

(assert (= (and d!17653 (not c!11240)) b!74532))

(assert (= (and d!17653 (not res!39392)) b!74533))

(declare-fun m!73733 () Bool)

(assert (=> d!17653 m!73733))

(declare-fun m!73735 () Bool)

(assert (=> b!74531 m!73735))

(assert (=> b!74531 m!71573))

(assert (=> b!74531 m!71573))

(declare-fun m!73737 () Bool)

(assert (=> b!74531 m!73737))

(assert (=> b!74533 m!71573))

(assert (=> b!74533 m!71573))

(assert (=> b!74533 m!73737))

(assert (=> d!16883 d!17653))

(declare-fun b!74537 () Bool)

(declare-fun e!48710 () Option!138)

(assert (=> b!74537 (= e!48710 None!136)))

(declare-fun b!74535 () Bool)

(declare-fun e!48709 () Option!138)

(assert (=> b!74535 (= e!48709 e!48710)))

(declare-fun c!11242 () Bool)

(assert (=> b!74535 (= c!11242 (and ((_ is Cons!1503) lt!32799) (not (= (_1!1083 (h!2090 lt!32799)) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))))

(declare-fun b!74534 () Bool)

(assert (=> b!74534 (= e!48709 (Some!137 (_2!1083 (h!2090 lt!32799))))))

(declare-fun d!17655 () Bool)

(declare-fun c!11241 () Bool)

(assert (=> d!17655 (= c!11241 (and ((_ is Cons!1503) lt!32799) (= (_1!1083 (h!2090 lt!32799)) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (=> d!17655 (= (getValueByKey!132 lt!32799 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) e!48709)))

(declare-fun b!74536 () Bool)

(assert (=> b!74536 (= e!48710 (getValueByKey!132 (t!5068 lt!32799) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (= (and d!17655 c!11241) b!74534))

(assert (= (and d!17655 (not c!11241)) b!74535))

(assert (= (and b!74535 c!11242) b!74536))

(assert (= (and b!74535 (not c!11242)) b!74537))

(declare-fun m!73739 () Bool)

(assert (=> b!74536 m!73739))

(assert (=> d!16883 d!17655))

(declare-fun d!17657 () Bool)

(assert (=> d!17657 (= (getValueByKey!132 lt!32799 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (Some!137 (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun lt!33482 () Unit!2086)

(assert (=> d!17657 (= lt!33482 (choose!422 lt!32799 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun e!48711 () Bool)

(assert (=> d!17657 e!48711))

(declare-fun res!39393 () Bool)

(assert (=> d!17657 (=> (not res!39393) (not e!48711))))

(assert (=> d!17657 (= res!39393 (isStrictlySorted!287 lt!32799))))

(assert (=> d!17657 (= (lemmaContainsTupThenGetReturnValue!51 lt!32799 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) lt!33482)))

(declare-fun b!74538 () Bool)

(declare-fun res!39394 () Bool)

(assert (=> b!74538 (=> (not res!39394) (not e!48711))))

(assert (=> b!74538 (= res!39394 (containsKey!136 lt!32799 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun b!74539 () Bool)

(assert (=> b!74539 (= e!48711 (contains!730 lt!32799 (tuple2!2147 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (= (and d!17657 res!39393) b!74538))

(assert (= (and b!74538 res!39394) b!74539))

(assert (=> d!17657 m!71567))

(declare-fun m!73741 () Bool)

(assert (=> d!17657 m!73741))

(declare-fun m!73743 () Bool)

(assert (=> d!17657 m!73743))

(declare-fun m!73745 () Bool)

(assert (=> b!74538 m!73745))

(declare-fun m!73747 () Bool)

(assert (=> b!74539 m!73747))

(assert (=> d!16883 d!17657))

(declare-fun b!74540 () Bool)

(declare-fun e!48712 () List!1507)

(declare-fun call!6592 () List!1507)

(assert (=> b!74540 (= e!48712 call!6592)))

(declare-fun b!74541 () Bool)

(declare-fun e!48714 () List!1507)

(declare-fun call!6591 () List!1507)

(assert (=> b!74541 (= e!48714 call!6591)))

(declare-fun e!48715 () List!1507)

(declare-fun c!11244 () Bool)

(declare-fun call!6593 () List!1507)

(declare-fun bm!6588 () Bool)

(assert (=> bm!6588 (= call!6593 ($colon$colon!65 e!48715 (ite c!11244 (h!2090 (toList!735 (+!98 lt!32476 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))) (tuple2!2147 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))))

(declare-fun c!11245 () Bool)

(assert (=> bm!6588 (= c!11245 c!11244)))

(declare-fun b!74543 () Bool)

(declare-fun res!39396 () Bool)

(declare-fun e!48713 () Bool)

(assert (=> b!74543 (=> (not res!39396) (not e!48713))))

(declare-fun lt!33483 () List!1507)

(assert (=> b!74543 (= res!39396 (containsKey!136 lt!33483 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun b!74544 () Bool)

(declare-fun e!48716 () List!1507)

(assert (=> b!74544 (= e!48716 call!6593)))

(declare-fun c!11246 () Bool)

(declare-fun c!11243 () Bool)

(declare-fun b!74545 () Bool)

(assert (=> b!74545 (= e!48715 (ite c!11246 (t!5068 (toList!735 (+!98 lt!32476 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))) (ite c!11243 (Cons!1503 (h!2090 (toList!735 (+!98 lt!32476 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))) (t!5068 (toList!735 (+!98 lt!32476 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))) Nil!1504)))))

(declare-fun b!74546 () Bool)

(assert (=> b!74546 (= e!48715 (insertStrictlySorted!53 (t!5068 (toList!735 (+!98 lt!32476 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun b!74547 () Bool)

(assert (=> b!74547 (= e!48713 (contains!730 lt!33483 (tuple2!2147 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(declare-fun bm!6589 () Bool)

(assert (=> bm!6589 (= call!6592 call!6593)))

(declare-fun b!74548 () Bool)

(assert (=> b!74548 (= e!48716 e!48712)))

(assert (=> b!74548 (= c!11246 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32476 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))) (= (_1!1083 (h!2090 (toList!735 (+!98 lt!32476 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(declare-fun b!74542 () Bool)

(assert (=> b!74542 (= c!11243 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32476 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))) (bvsgt (_1!1083 (h!2090 (toList!735 (+!98 lt!32476 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (=> b!74542 (= e!48712 e!48714)))

(declare-fun d!17659 () Bool)

(assert (=> d!17659 e!48713))

(declare-fun res!39395 () Bool)

(assert (=> d!17659 (=> (not res!39395) (not e!48713))))

(assert (=> d!17659 (= res!39395 (isStrictlySorted!287 lt!33483))))

(assert (=> d!17659 (= lt!33483 e!48716)))

(assert (=> d!17659 (= c!11244 (and ((_ is Cons!1503) (toList!735 (+!98 lt!32476 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))) (bvslt (_1!1083 (h!2090 (toList!735 (+!98 lt!32476 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (=> d!17659 (isStrictlySorted!287 (toList!735 (+!98 lt!32476 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!17659 (= (insertStrictlySorted!53 (toList!735 (+!98 lt!32476 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) lt!33483)))

(declare-fun b!74549 () Bool)

(assert (=> b!74549 (= e!48714 call!6591)))

(declare-fun bm!6590 () Bool)

(assert (=> bm!6590 (= call!6591 call!6592)))

(assert (= (and d!17659 c!11244) b!74544))

(assert (= (and d!17659 (not c!11244)) b!74548))

(assert (= (and b!74548 c!11246) b!74540))

(assert (= (and b!74548 (not c!11246)) b!74542))

(assert (= (and b!74542 c!11243) b!74549))

(assert (= (and b!74542 (not c!11243)) b!74541))

(assert (= (or b!74549 b!74541) bm!6590))

(assert (= (or b!74540 bm!6590) bm!6589))

(assert (= (or b!74544 bm!6589) bm!6588))

(assert (= (and bm!6588 c!11245) b!74546))

(assert (= (and bm!6588 (not c!11245)) b!74545))

(assert (= (and d!17659 res!39395) b!74543))

(assert (= (and b!74543 res!39396) b!74547))

(declare-fun m!73749 () Bool)

(assert (=> b!74543 m!73749))

(declare-fun m!73751 () Bool)

(assert (=> d!17659 m!73751))

(declare-fun m!73753 () Bool)

(assert (=> d!17659 m!73753))

(declare-fun m!73755 () Bool)

(assert (=> b!74546 m!73755))

(declare-fun m!73757 () Bool)

(assert (=> b!74547 m!73757))

(declare-fun m!73759 () Bool)

(assert (=> bm!6588 m!73759))

(assert (=> d!16883 d!17659))

(declare-fun d!17661 () Bool)

(declare-fun e!48718 () Bool)

(assert (=> d!17661 e!48718))

(declare-fun res!39397 () Bool)

(assert (=> d!17661 (=> res!39397 e!48718)))

(declare-fun lt!33486 () Bool)

(assert (=> d!17661 (= res!39397 (not lt!33486))))

(declare-fun lt!33484 () Bool)

(assert (=> d!17661 (= lt!33486 lt!33484)))

(declare-fun lt!33485 () Unit!2086)

(declare-fun e!48717 () Unit!2086)

(assert (=> d!17661 (= lt!33485 e!48717)))

(declare-fun c!11247 () Bool)

(assert (=> d!17661 (= c!11247 lt!33484)))

(assert (=> d!17661 (= lt!33484 (containsKey!136 (toList!735 lt!32819) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17661 (= (contains!729 lt!32819 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33486)))

(declare-fun b!74550 () Bool)

(declare-fun lt!33487 () Unit!2086)

(assert (=> b!74550 (= e!48717 lt!33487)))

(assert (=> b!74550 (= lt!33487 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32819) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74550 (isDefined!86 (getValueByKey!132 (toList!735 lt!32819) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74551 () Bool)

(declare-fun Unit!2149 () Unit!2086)

(assert (=> b!74551 (= e!48717 Unit!2149)))

(declare-fun b!74552 () Bool)

(assert (=> b!74552 (= e!48718 (isDefined!86 (getValueByKey!132 (toList!735 lt!32819) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17661 c!11247) b!74550))

(assert (= (and d!17661 (not c!11247)) b!74551))

(assert (= (and d!17661 (not res!39397)) b!74552))

(declare-fun m!73761 () Bool)

(assert (=> d!17661 m!73761))

(declare-fun m!73763 () Bool)

(assert (=> b!74550 m!73763))

(assert (=> b!74550 m!72545))

(assert (=> b!74550 m!72545))

(declare-fun m!73765 () Bool)

(assert (=> b!74550 m!73765))

(assert (=> b!74552 m!72545))

(assert (=> b!74552 m!72545))

(assert (=> b!74552 m!73765))

(assert (=> bm!6453 d!17661))

(assert (=> b!73570 d!17185))

(declare-fun d!17663 () Bool)

(declare-fun e!48719 () Bool)

(assert (=> d!17663 e!48719))

(declare-fun res!39398 () Bool)

(assert (=> d!17663 (=> (not res!39398) (not e!48719))))

(declare-fun lt!33491 () ListLongMap!1439)

(assert (=> d!17663 (= res!39398 (contains!729 lt!33491 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun lt!33490 () List!1507)

(assert (=> d!17663 (= lt!33491 (ListLongMap!1440 lt!33490))))

(declare-fun lt!33488 () Unit!2086)

(declare-fun lt!33489 () Unit!2086)

(assert (=> d!17663 (= lt!33488 lt!33489)))

(assert (=> d!17663 (= (getValueByKey!132 lt!33490 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (Some!137 (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!17663 (= lt!33489 (lemmaContainsTupThenGetReturnValue!51 lt!33490 (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!17663 (= lt!33490 (insertStrictlySorted!53 (toList!735 (map!1158 newMap!16)) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (=> d!17663 (= (+!98 (map!1158 newMap!16) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) lt!33491)))

(declare-fun b!74553 () Bool)

(declare-fun res!39399 () Bool)

(assert (=> b!74553 (=> (not res!39399) (not e!48719))))

(assert (=> b!74553 (= res!39399 (= (getValueByKey!132 (toList!735 lt!33491) (_1!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (Some!137 (_2!1083 (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(declare-fun b!74554 () Bool)

(assert (=> b!74554 (= e!48719 (contains!730 (toList!735 lt!33491) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))

(assert (= (and d!17663 res!39398) b!74553))

(assert (= (and b!74553 res!39399) b!74554))

(declare-fun m!73767 () Bool)

(assert (=> d!17663 m!73767))

(declare-fun m!73769 () Bool)

(assert (=> d!17663 m!73769))

(declare-fun m!73771 () Bool)

(assert (=> d!17663 m!73771))

(declare-fun m!73773 () Bool)

(assert (=> d!17663 m!73773))

(declare-fun m!73775 () Bool)

(assert (=> b!74553 m!73775))

(declare-fun m!73777 () Bool)

(assert (=> b!74554 m!73777))

(assert (=> b!73570 d!17663))

(assert (=> b!73570 d!16803))

(declare-fun d!17665 () Bool)

(assert (=> d!17665 (= (apply!75 lt!33062 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1158 (getValueByKey!132 (toList!735 lt!33062) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3213 () Bool)

(assert (= bs!3213 d!17665))

(assert (=> bs!3213 m!72397))

(assert (=> bs!3213 m!72397))

(declare-fun m!73779 () Bool)

(assert (=> bs!3213 m!73779))

(assert (=> b!73696 d!17665))

(declare-fun d!17667 () Bool)

(declare-fun lt!33492 () Bool)

(assert (=> d!17667 (= lt!33492 (select (content!76 lt!32709) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))))))

(declare-fun e!48720 () Bool)

(assert (=> d!17667 (= lt!33492 e!48720)))

(declare-fun res!39401 () Bool)

(assert (=> d!17667 (=> (not res!39401) (not e!48720))))

(assert (=> d!17667 (= res!39401 ((_ is Cons!1503) lt!32709))))

(assert (=> d!17667 (= (contains!730 lt!32709 (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))) lt!33492)))

(declare-fun b!74555 () Bool)

(declare-fun e!48721 () Bool)

(assert (=> b!74555 (= e!48720 e!48721)))

(declare-fun res!39400 () Bool)

(assert (=> b!74555 (=> res!39400 e!48721)))

(assert (=> b!74555 (= res!39400 (= (h!2090 lt!32709) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))))))

(declare-fun b!74556 () Bool)

(assert (=> b!74556 (= e!48721 (contains!730 (t!5068 lt!32709) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))))))

(assert (= (and d!17667 res!39401) b!74555))

(assert (= (and b!74555 (not res!39400)) b!74556))

(declare-fun m!73781 () Bool)

(assert (=> d!17667 m!73781))

(declare-fun m!73783 () Bool)

(assert (=> d!17667 m!73783))

(declare-fun m!73785 () Bool)

(assert (=> b!74556 m!73785))

(assert (=> b!73669 d!17667))

(declare-fun d!17669 () Bool)

(declare-fun res!39402 () Bool)

(declare-fun e!48722 () Bool)

(assert (=> d!17669 (=> res!39402 e!48722)))

(assert (=> d!17669 (= res!39402 (and ((_ is Cons!1503) lt!33002) (= (_1!1083 (h!2090 lt!33002)) (_1!1083 lt!32472))))))

(assert (=> d!17669 (= (containsKey!136 lt!33002 (_1!1083 lt!32472)) e!48722)))

(declare-fun b!74557 () Bool)

(declare-fun e!48723 () Bool)

(assert (=> b!74557 (= e!48722 e!48723)))

(declare-fun res!39403 () Bool)

(assert (=> b!74557 (=> (not res!39403) (not e!48723))))

(assert (=> b!74557 (= res!39403 (and (or (not ((_ is Cons!1503) lt!33002)) (bvsle (_1!1083 (h!2090 lt!33002)) (_1!1083 lt!32472))) ((_ is Cons!1503) lt!33002) (bvslt (_1!1083 (h!2090 lt!33002)) (_1!1083 lt!32472))))))

(declare-fun b!74558 () Bool)

(assert (=> b!74558 (= e!48723 (containsKey!136 (t!5068 lt!33002) (_1!1083 lt!32472)))))

(assert (= (and d!17669 (not res!39402)) b!74557))

(assert (= (and b!74557 res!39403) b!74558))

(declare-fun m!73787 () Bool)

(assert (=> b!74558 m!73787))

(assert (=> b!73590 d!17669))

(declare-fun bm!6591 () Bool)

(declare-fun call!6594 () Bool)

(assert (=> bm!6591 (= call!6594 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) (mask!6180 newMap!16)))))

(declare-fun b!74559 () Bool)

(declare-fun e!48726 () Bool)

(declare-fun e!48724 () Bool)

(assert (=> b!74559 (= e!48726 e!48724)))

(declare-fun lt!33493 () (_ BitVec 64))

(assert (=> b!74559 (= lt!33493 (select (arr!1858 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!33495 () Unit!2086)

(assert (=> b!74559 (= lt!33495 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) lt!33493 #b00000000000000000000000000000000))))

(assert (=> b!74559 (arrayContainsKey!0 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) lt!33493 #b00000000000000000000000000000000)))

(declare-fun lt!33494 () Unit!2086)

(assert (=> b!74559 (= lt!33494 lt!33495)))

(declare-fun res!39405 () Bool)

(assert (=> b!74559 (= res!39405 (= (seekEntryOrOpen!0 (select (arr!1858 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000) (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) (mask!6180 newMap!16)) (Found!246 #b00000000000000000000000000000000)))))

(assert (=> b!74559 (=> (not res!39405) (not e!48724))))

(declare-fun b!74561 () Bool)

(assert (=> b!74561 (= e!48726 call!6594)))

(declare-fun b!74562 () Bool)

(assert (=> b!74562 (= e!48724 call!6594)))

(declare-fun b!74560 () Bool)

(declare-fun e!48725 () Bool)

(assert (=> b!74560 (= e!48725 e!48726)))

(declare-fun c!11248 () Bool)

(assert (=> b!74560 (= c!11248 (validKeyInArray!0 (select (arr!1858 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!17671 () Bool)

(declare-fun res!39404 () Bool)

(assert (=> d!17671 (=> res!39404 e!48725)))

(assert (=> d!17671 (= res!39404 (bvsge #b00000000000000000000000000000000 (size!2096 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))))))))

(assert (=> d!17671 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) (mask!6180 newMap!16)) e!48725)))

(assert (= (and d!17671 (not res!39404)) b!74560))

(assert (= (and b!74560 c!11248) b!74559))

(assert (= (and b!74560 (not c!11248)) b!74561))

(assert (= (and b!74559 res!39405) b!74562))

(assert (= (or b!74562 b!74561) bm!6591))

(declare-fun m!73789 () Bool)

(assert (=> bm!6591 m!73789))

(declare-fun m!73791 () Bool)

(assert (=> b!74559 m!73791))

(declare-fun m!73793 () Bool)

(assert (=> b!74559 m!73793))

(declare-fun m!73795 () Bool)

(assert (=> b!74559 m!73795))

(assert (=> b!74559 m!73791))

(declare-fun m!73797 () Bool)

(assert (=> b!74559 m!73797))

(assert (=> b!74560 m!73791))

(assert (=> b!74560 m!73791))

(declare-fun m!73799 () Bool)

(assert (=> b!74560 m!73799))

(assert (=> d!16979 d!17671))

(declare-fun d!17673 () Bool)

(declare-fun e!48731 () Bool)

(assert (=> d!17673 e!48731))

(declare-fun res!39415 () Bool)

(assert (=> d!17673 (=> (not res!39415) (not e!48731))))

(assert (=> d!17673 (= res!39415 (and (bvsge (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) #b00000000000000000000000000000000) (bvslt (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (size!2096 (_keys!3865 newMap!16)))))))

(declare-fun lt!33498 () Unit!2086)

(declare-fun choose!1 (array!3894 (_ BitVec 32) (_ BitVec 64)) Unit!2086)

(assert (=> d!17673 (= lt!33498 (choose!1 (_keys!3865 newMap!16) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun e!48732 () Bool)

(assert (=> d!17673 e!48732))

(declare-fun res!39414 () Bool)

(assert (=> d!17673 (=> (not res!39414) (not e!48732))))

(assert (=> d!17673 (= res!39414 (and (bvsge (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) #b00000000000000000000000000000000) (bvslt (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (size!2096 (_keys!3865 newMap!16)))))))

(assert (=> d!17673 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3865 newMap!16) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) lt!33498)))

(declare-fun b!74574 () Bool)

(assert (=> b!74574 (= e!48731 (= (arrayCountValidKeys!0 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3865 newMap!16) #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!74571 () Bool)

(declare-fun res!39416 () Bool)

(assert (=> b!74571 (=> (not res!39416) (not e!48732))))

(assert (=> b!74571 (= res!39416 (not (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593))))))))

(declare-fun b!74572 () Bool)

(declare-fun res!39417 () Bool)

(assert (=> b!74572 (=> (not res!39417) (not e!48732))))

(assert (=> b!74572 (= res!39417 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(declare-fun b!74573 () Bool)

(assert (=> b!74573 (= e!48732 (bvslt (size!2096 (_keys!3865 newMap!16)) #b01111111111111111111111111111111))))

(assert (= (and d!17673 res!39414) b!74571))

(assert (= (and b!74571 res!39416) b!74572))

(assert (= (and b!74572 res!39417) b!74573))

(assert (= (and d!17673 res!39415) b!74574))

(assert (=> d!17673 m!71053))

(declare-fun m!73801 () Bool)

(assert (=> d!17673 m!73801))

(assert (=> b!74574 m!71933))

(assert (=> b!74574 m!71911))

(assert (=> b!74574 m!71375))

(declare-fun m!73803 () Bool)

(assert (=> b!74571 m!73803))

(assert (=> b!74571 m!73803))

(declare-fun m!73805 () Bool)

(assert (=> b!74571 m!73805))

(assert (=> b!74572 m!71053))

(assert (=> b!74572 m!71367))

(assert (=> d!16979 d!17673))

(declare-fun d!17675 () Bool)

(declare-fun e!48735 () Bool)

(assert (=> d!17675 e!48735))

(declare-fun res!39420 () Bool)

(assert (=> d!17675 (=> (not res!39420) (not e!48735))))

(assert (=> d!17675 (= res!39420 (and (bvsge (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) #b00000000000000000000000000000000) (bvslt (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (size!2096 (_keys!3865 newMap!16))) (bvslt (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (size!2097 (_values!2196 newMap!16)))))))

(declare-fun lt!33501 () Unit!2086)

(declare-fun choose!432 (array!3894 array!3896 (_ BitVec 32) (_ BitVec 32) V!2947 V!2947 (_ BitVec 32) (_ BitVec 64) V!2947 Int) Unit!2086)

(assert (=> d!17675 (= lt!33501 (choose!432 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481 (defaultEntry!2213 newMap!16)))))

(assert (=> d!17675 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17675 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!13 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481 (defaultEntry!2213 newMap!16)) lt!33501)))

(declare-fun b!74577 () Bool)

(assert (=> b!74577 (= e!48735 (= (+!98 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) (getCurrentListMap!426 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))))))

(assert (= (and d!17675 res!39420) b!74577))

(assert (=> d!17675 m!71053))

(declare-fun m!73807 () Bool)

(assert (=> d!17675 m!73807))

(assert (=> d!17675 m!71423))

(assert (=> b!74577 m!71191))

(assert (=> b!74577 m!71913))

(assert (=> b!74577 m!71933))

(assert (=> b!74577 m!71191))

(assert (=> b!74577 m!71929))

(assert (=> b!74577 m!71915))

(assert (=> d!16979 d!17675))

(declare-fun b!74578 () Bool)

(declare-fun e!48737 () Bool)

(declare-fun e!48740 () Bool)

(assert (=> b!74578 (= e!48737 e!48740)))

(declare-fun res!39426 () Bool)

(declare-fun call!6600 () Bool)

(assert (=> b!74578 (= res!39426 call!6600)))

(assert (=> b!74578 (=> (not res!39426) (not e!48740))))

(declare-fun b!74579 () Bool)

(declare-fun e!48744 () ListLongMap!1439)

(declare-fun call!6595 () ListLongMap!1439)

(assert (=> b!74579 (= e!48744 call!6595)))

(declare-fun b!74580 () Bool)

(declare-fun call!6596 () ListLongMap!1439)

(assert (=> b!74580 (= e!48744 call!6596)))

(declare-fun bm!6592 () Bool)

(declare-fun lt!33512 () ListLongMap!1439)

(assert (=> bm!6592 (= call!6600 (contains!729 lt!33512 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74581 () Bool)

(declare-fun e!48736 () Bool)

(declare-fun e!48742 () Bool)

(assert (=> b!74581 (= e!48736 e!48742)))

(declare-fun res!39424 () Bool)

(assert (=> b!74581 (=> (not res!39424) (not e!48742))))

(assert (=> b!74581 (= res!39424 (contains!729 lt!33512 (select (arr!1858 lt!32968) #b00000000000000000000000000000000)))))

(assert (=> b!74581 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 lt!32968)))))

(declare-fun b!74582 () Bool)

(declare-fun e!48738 () Unit!2086)

(declare-fun Unit!2150 () Unit!2086)

(assert (=> b!74582 (= e!48738 Unit!2150)))

(declare-fun bm!6593 () Bool)

(declare-fun call!6597 () ListLongMap!1439)

(assert (=> bm!6593 (= call!6595 call!6597)))

(declare-fun call!6601 () ListLongMap!1439)

(declare-fun bm!6594 () Bool)

(assert (=> bm!6594 (= call!6601 (getCurrentListMapNoExtraKeys!62 lt!32968 lt!32992 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!74584 () Bool)

(declare-fun lt!33502 () Unit!2086)

(assert (=> b!74584 (= e!48738 lt!33502)))

(declare-fun lt!33523 () ListLongMap!1439)

(assert (=> b!74584 (= lt!33523 (getCurrentListMapNoExtraKeys!62 lt!32968 lt!32992 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33517 () (_ BitVec 64))

(assert (=> b!74584 (= lt!33517 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33508 () (_ BitVec 64))

(assert (=> b!74584 (= lt!33508 (select (arr!1858 lt!32968) #b00000000000000000000000000000000))))

(declare-fun lt!33505 () Unit!2086)

(assert (=> b!74584 (= lt!33505 (addStillContains!51 lt!33523 lt!33517 (zeroValue!2115 newMap!16) lt!33508))))

(assert (=> b!74584 (contains!729 (+!98 lt!33523 (tuple2!2147 lt!33517 (zeroValue!2115 newMap!16))) lt!33508)))

(declare-fun lt!33519 () Unit!2086)

(assert (=> b!74584 (= lt!33519 lt!33505)))

(declare-fun lt!33510 () ListLongMap!1439)

(assert (=> b!74584 (= lt!33510 (getCurrentListMapNoExtraKeys!62 lt!32968 lt!32992 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33520 () (_ BitVec 64))

(assert (=> b!74584 (= lt!33520 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33518 () (_ BitVec 64))

(assert (=> b!74584 (= lt!33518 (select (arr!1858 lt!32968) #b00000000000000000000000000000000))))

(declare-fun lt!33522 () Unit!2086)

(assert (=> b!74584 (= lt!33522 (addApplyDifferent!51 lt!33510 lt!33520 (minValue!2115 newMap!16) lt!33518))))

(assert (=> b!74584 (= (apply!75 (+!98 lt!33510 (tuple2!2147 lt!33520 (minValue!2115 newMap!16))) lt!33518) (apply!75 lt!33510 lt!33518))))

(declare-fun lt!33507 () Unit!2086)

(assert (=> b!74584 (= lt!33507 lt!33522)))

(declare-fun lt!33521 () ListLongMap!1439)

(assert (=> b!74584 (= lt!33521 (getCurrentListMapNoExtraKeys!62 lt!32968 lt!32992 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33511 () (_ BitVec 64))

(assert (=> b!74584 (= lt!33511 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33503 () (_ BitVec 64))

(assert (=> b!74584 (= lt!33503 (select (arr!1858 lt!32968) #b00000000000000000000000000000000))))

(declare-fun lt!33509 () Unit!2086)

(assert (=> b!74584 (= lt!33509 (addApplyDifferent!51 lt!33521 lt!33511 (zeroValue!2115 newMap!16) lt!33503))))

(assert (=> b!74584 (= (apply!75 (+!98 lt!33521 (tuple2!2147 lt!33511 (zeroValue!2115 newMap!16))) lt!33503) (apply!75 lt!33521 lt!33503))))

(declare-fun lt!33513 () Unit!2086)

(assert (=> b!74584 (= lt!33513 lt!33509)))

(declare-fun lt!33516 () ListLongMap!1439)

(assert (=> b!74584 (= lt!33516 (getCurrentListMapNoExtraKeys!62 lt!32968 lt!32992 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33506 () (_ BitVec 64))

(assert (=> b!74584 (= lt!33506 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33504 () (_ BitVec 64))

(assert (=> b!74584 (= lt!33504 (select (arr!1858 lt!32968) #b00000000000000000000000000000000))))

(assert (=> b!74584 (= lt!33502 (addApplyDifferent!51 lt!33516 lt!33506 (minValue!2115 newMap!16) lt!33504))))

(assert (=> b!74584 (= (apply!75 (+!98 lt!33516 (tuple2!2147 lt!33506 (minValue!2115 newMap!16))) lt!33504) (apply!75 lt!33516 lt!33504))))

(declare-fun b!74585 () Bool)

(assert (=> b!74585 (= e!48737 (not call!6600))))

(declare-fun b!74586 () Bool)

(declare-fun res!39425 () Bool)

(declare-fun e!48747 () Bool)

(assert (=> b!74586 (=> (not res!39425) (not e!48747))))

(assert (=> b!74586 (= res!39425 e!48737)))

(declare-fun c!11249 () Bool)

(assert (=> b!74586 (= c!11249 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!74587 () Bool)

(declare-fun e!48741 () ListLongMap!1439)

(declare-fun e!48748 () ListLongMap!1439)

(assert (=> b!74587 (= e!48741 e!48748)))

(declare-fun c!11251 () Bool)

(assert (=> b!74587 (= c!11251 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74588 () Bool)

(declare-fun e!48743 () Bool)

(declare-fun e!48739 () Bool)

(assert (=> b!74588 (= e!48743 e!48739)))

(declare-fun res!39429 () Bool)

(declare-fun call!6598 () Bool)

(assert (=> b!74588 (= res!39429 call!6598)))

(assert (=> b!74588 (=> (not res!39429) (not e!48739))))

(declare-fun bm!6595 () Bool)

(assert (=> bm!6595 (= call!6597 call!6601)))

(declare-fun bm!6596 () Bool)

(declare-fun call!6599 () ListLongMap!1439)

(assert (=> bm!6596 (= call!6596 call!6599)))

(declare-fun b!74589 () Bool)

(assert (=> b!74589 (= e!48743 (not call!6598))))

(declare-fun b!74590 () Bool)

(declare-fun res!39422 () Bool)

(assert (=> b!74590 (=> (not res!39422) (not e!48747))))

(assert (=> b!74590 (= res!39422 e!48736)))

(declare-fun res!39421 () Bool)

(assert (=> b!74590 (=> res!39421 e!48736)))

(declare-fun e!48745 () Bool)

(assert (=> b!74590 (= res!39421 (not e!48745))))

(declare-fun res!39423 () Bool)

(assert (=> b!74590 (=> (not res!39423) (not e!48745))))

(assert (=> b!74590 (= res!39423 (bvslt #b00000000000000000000000000000000 (size!2096 lt!32968)))))

(declare-fun b!74591 () Bool)

(assert (=> b!74591 (= e!48747 e!48743)))

(declare-fun c!11253 () Bool)

(assert (=> b!74591 (= c!11253 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74592 () Bool)

(assert (=> b!74592 (= e!48739 (= (apply!75 lt!33512 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2115 newMap!16)))))

(declare-fun b!74593 () Bool)

(assert (=> b!74593 (= e!48748 call!6596)))

(declare-fun bm!6597 () Bool)

(assert (=> bm!6597 (= call!6598 (contains!729 lt!33512 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17677 () Bool)

(assert (=> d!17677 e!48747))

(declare-fun res!39427 () Bool)

(assert (=> d!17677 (=> (not res!39427) (not e!48747))))

(assert (=> d!17677 (= res!39427 (or (bvsge #b00000000000000000000000000000000 (size!2096 lt!32968)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 lt!32968)))))))

(declare-fun lt!33514 () ListLongMap!1439)

(assert (=> d!17677 (= lt!33512 lt!33514)))

(declare-fun lt!33515 () Unit!2086)

(assert (=> d!17677 (= lt!33515 e!48738)))

(declare-fun c!11252 () Bool)

(declare-fun e!48746 () Bool)

(assert (=> d!17677 (= c!11252 e!48746)))

(declare-fun res!39428 () Bool)

(assert (=> d!17677 (=> (not res!39428) (not e!48746))))

(assert (=> d!17677 (= res!39428 (bvslt #b00000000000000000000000000000000 (size!2096 lt!32968)))))

(assert (=> d!17677 (= lt!33514 e!48741)))

(declare-fun c!11250 () Bool)

(assert (=> d!17677 (= c!11250 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17677 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17677 (= (getCurrentListMap!426 lt!32968 lt!32992 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33512)))

(declare-fun b!74583 () Bool)

(assert (=> b!74583 (= e!48740 (= (apply!75 lt!33512 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2115 newMap!16)))))

(declare-fun b!74594 () Bool)

(assert (=> b!74594 (= e!48745 (validKeyInArray!0 (select (arr!1858 lt!32968) #b00000000000000000000000000000000)))))

(declare-fun b!74595 () Bool)

(declare-fun c!11254 () Bool)

(assert (=> b!74595 (= c!11254 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!74595 (= e!48748 e!48744)))

(declare-fun b!74596 () Bool)

(assert (=> b!74596 (= e!48746 (validKeyInArray!0 (select (arr!1858 lt!32968) #b00000000000000000000000000000000)))))

(declare-fun b!74597 () Bool)

(assert (=> b!74597 (= e!48742 (= (apply!75 lt!33512 (select (arr!1858 lt!32968) #b00000000000000000000000000000000)) (get!1154 (select (arr!1859 lt!32992) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74597 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 lt!32992)))))

(assert (=> b!74597 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 lt!32968)))))

(declare-fun bm!6598 () Bool)

(assert (=> bm!6598 (= call!6599 (+!98 (ite c!11250 call!6601 (ite c!11251 call!6597 call!6595)) (ite (or c!11250 c!11251) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(declare-fun b!74598 () Bool)

(assert (=> b!74598 (= e!48741 (+!98 call!6599 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))

(assert (= (and d!17677 c!11250) b!74598))

(assert (= (and d!17677 (not c!11250)) b!74587))

(assert (= (and b!74587 c!11251) b!74593))

(assert (= (and b!74587 (not c!11251)) b!74595))

(assert (= (and b!74595 c!11254) b!74580))

(assert (= (and b!74595 (not c!11254)) b!74579))

(assert (= (or b!74580 b!74579) bm!6593))

(assert (= (or b!74593 bm!6593) bm!6595))

(assert (= (or b!74593 b!74580) bm!6596))

(assert (= (or b!74598 bm!6595) bm!6594))

(assert (= (or b!74598 bm!6596) bm!6598))

(assert (= (and d!17677 res!39428) b!74596))

(assert (= (and d!17677 c!11252) b!74584))

(assert (= (and d!17677 (not c!11252)) b!74582))

(assert (= (and d!17677 res!39427) b!74590))

(assert (= (and b!74590 res!39423) b!74594))

(assert (= (and b!74590 (not res!39421)) b!74581))

(assert (= (and b!74581 res!39424) b!74597))

(assert (= (and b!74590 res!39422) b!74586))

(assert (= (and b!74586 c!11249) b!74578))

(assert (= (and b!74586 (not c!11249)) b!74585))

(assert (= (and b!74578 res!39426) b!74583))

(assert (= (or b!74578 b!74585) bm!6592))

(assert (= (and b!74586 res!39425) b!74591))

(assert (= (and b!74591 c!11253) b!74588))

(assert (= (and b!74591 (not c!11253)) b!74589))

(assert (= (and b!74588 res!39429) b!74592))

(assert (= (or b!74588 b!74589) bm!6597))

(declare-fun b_lambda!3345 () Bool)

(assert (=> (not b_lambda!3345) (not b!74597)))

(assert (=> b!74597 t!5077))

(declare-fun b_and!4565 () Bool)

(assert (= b_and!4561 (and (=> t!5077 result!2697) b_and!4565)))

(assert (=> b!74597 t!5079))

(declare-fun b_and!4567 () Bool)

(assert (= b_and!4563 (and (=> t!5079 result!2699) b_and!4567)))

(declare-fun m!73809 () Bool)

(assert (=> bm!6598 m!73809))

(declare-fun m!73811 () Bool)

(assert (=> b!74583 m!73811))

(declare-fun m!73813 () Bool)

(assert (=> bm!6594 m!73813))

(declare-fun m!73815 () Bool)

(assert (=> b!74594 m!73815))

(assert (=> b!74594 m!73815))

(declare-fun m!73817 () Bool)

(assert (=> b!74594 m!73817))

(declare-fun m!73819 () Bool)

(assert (=> b!74598 m!73819))

(declare-fun m!73821 () Bool)

(assert (=> bm!6592 m!73821))

(declare-fun m!73823 () Bool)

(assert (=> b!74584 m!73823))

(declare-fun m!73825 () Bool)

(assert (=> b!74584 m!73825))

(declare-fun m!73827 () Bool)

(assert (=> b!74584 m!73827))

(assert (=> b!74584 m!73815))

(declare-fun m!73829 () Bool)

(assert (=> b!74584 m!73829))

(declare-fun m!73831 () Bool)

(assert (=> b!74584 m!73831))

(declare-fun m!73833 () Bool)

(assert (=> b!74584 m!73833))

(assert (=> b!74584 m!73829))

(declare-fun m!73835 () Bool)

(assert (=> b!74584 m!73835))

(assert (=> b!74584 m!73813))

(declare-fun m!73837 () Bool)

(assert (=> b!74584 m!73837))

(assert (=> b!74584 m!73825))

(declare-fun m!73839 () Bool)

(assert (=> b!74584 m!73839))

(assert (=> b!74584 m!73823))

(declare-fun m!73841 () Bool)

(assert (=> b!74584 m!73841))

(declare-fun m!73843 () Bool)

(assert (=> b!74584 m!73843))

(assert (=> b!74584 m!73827))

(declare-fun m!73845 () Bool)

(assert (=> b!74584 m!73845))

(declare-fun m!73847 () Bool)

(assert (=> b!74584 m!73847))

(declare-fun m!73849 () Bool)

(assert (=> b!74584 m!73849))

(declare-fun m!73851 () Bool)

(assert (=> b!74584 m!73851))

(assert (=> b!74581 m!73815))

(assert (=> b!74581 m!73815))

(declare-fun m!73853 () Bool)

(assert (=> b!74581 m!73853))

(declare-fun m!73855 () Bool)

(assert (=> bm!6597 m!73855))

(assert (=> b!74597 m!73815))

(assert (=> b!74597 m!73815))

(declare-fun m!73857 () Bool)

(assert (=> b!74597 m!73857))

(assert (=> b!74597 m!71521))

(declare-fun m!73859 () Bool)

(assert (=> b!74597 m!73859))

(assert (=> b!74597 m!73859))

(assert (=> b!74597 m!71521))

(declare-fun m!73861 () Bool)

(assert (=> b!74597 m!73861))

(assert (=> b!74596 m!73815))

(assert (=> b!74596 m!73815))

(assert (=> b!74596 m!73817))

(declare-fun m!73863 () Bool)

(assert (=> b!74592 m!73863))

(assert (=> d!17677 m!71423))

(assert (=> d!16979 d!17677))

(assert (=> d!16979 d!17383))

(assert (=> d!16979 d!16873))

(assert (=> d!16979 d!16841))

(assert (=> d!16979 d!16845))

(declare-fun b!74599 () Bool)

(declare-fun e!48749 () (_ BitVec 32))

(declare-fun call!6602 () (_ BitVec 32))

(assert (=> b!74599 (= e!48749 call!6602)))

(declare-fun b!74600 () Bool)

(declare-fun e!48750 () (_ BitVec 32))

(assert (=> b!74600 (= e!48750 e!48749)))

(declare-fun c!11255 () Bool)

(assert (=> b!74600 (= c!11255 (validKeyInArray!0 (select (arr!1858 lt!32979) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)))))))

(declare-fun bm!6599 () Bool)

(assert (=> bm!6599 (= call!6602 (arrayCountValidKeys!0 lt!32979 (bvadd (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) #b00000000000000000000000000000001) (bvadd (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) #b00000000000000000000000000000001)))))

(declare-fun b!74601 () Bool)

(assert (=> b!74601 (= e!48750 #b00000000000000000000000000000000)))

(declare-fun b!74602 () Bool)

(assert (=> b!74602 (= e!48749 (bvadd #b00000000000000000000000000000001 call!6602))))

(declare-fun d!17679 () Bool)

(declare-fun lt!33524 () (_ BitVec 32))

(assert (=> d!17679 (and (bvsge lt!33524 #b00000000000000000000000000000000) (bvsle lt!33524 (bvsub (size!2096 lt!32979) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)))))))

(assert (=> d!17679 (= lt!33524 e!48750)))

(declare-fun c!11256 () Bool)

(assert (=> d!17679 (= c!11256 (bvsge (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (bvadd (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) #b00000000000000000000000000000001)))))

(assert (=> d!17679 (and (bvsle (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (bvadd (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) #b00000000000000000000000000000001)) (bvsge (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) #b00000000000000000000000000000001) (size!2096 lt!32979)))))

(assert (=> d!17679 (= (arrayCountValidKeys!0 lt!32979 (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (bvadd (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) #b00000000000000000000000000000001)) lt!33524)))

(assert (= (and d!17679 c!11256) b!74601))

(assert (= (and d!17679 (not c!11256)) b!74600))

(assert (= (and b!74600 c!11255) b!74602))

(assert (= (and b!74600 (not c!11255)) b!74599))

(assert (= (or b!74602 b!74599) bm!6599))

(declare-fun m!73865 () Bool)

(assert (=> b!74600 m!73865))

(assert (=> b!74600 m!73865))

(declare-fun m!73867 () Bool)

(assert (=> b!74600 m!73867))

(declare-fun m!73869 () Bool)

(assert (=> bm!6599 m!73869))

(assert (=> d!16979 d!17679))

(assert (=> d!16979 d!16937))

(declare-fun d!17681 () Bool)

(declare-fun e!48753 () Bool)

(assert (=> d!17681 e!48753))

(declare-fun res!39432 () Bool)

(assert (=> d!17681 (=> (not res!39432) (not e!48753))))

(assert (=> d!17681 (= res!39432 (and (bvsge (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) #b00000000000000000000000000000000) (bvslt (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (size!2096 (_keys!3865 newMap!16)))))))

(declare-fun lt!33527 () Unit!2086)

(declare-fun choose!102 ((_ BitVec 64) array!3894 (_ BitVec 32) (_ BitVec 32)) Unit!2086)

(assert (=> d!17681 (= lt!33527 (choose!102 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (_keys!3865 newMap!16) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (mask!6180 newMap!16)))))

(assert (=> d!17681 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17681 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (_keys!3865 newMap!16) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (mask!6180 newMap!16)) lt!33527)))

(declare-fun b!74605 () Bool)

(assert (=> b!74605 (= e!48753 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) (mask!6180 newMap!16)))))

(assert (= (and d!17681 res!39432) b!74605))

(assert (=> d!17681 m!71053))

(declare-fun m!73871 () Bool)

(assert (=> d!17681 m!73871))

(assert (=> d!17681 m!71423))

(assert (=> b!74605 m!71933))

(assert (=> b!74605 m!71917))

(assert (=> d!16979 d!17681))

(declare-fun b!74606 () Bool)

(declare-fun e!48755 () Bool)

(declare-fun e!48758 () Bool)

(assert (=> b!74606 (= e!48755 e!48758)))

(declare-fun res!39438 () Bool)

(declare-fun call!6608 () Bool)

(assert (=> b!74606 (= res!39438 call!6608)))

(assert (=> b!74606 (=> (not res!39438) (not e!48758))))

(declare-fun b!74607 () Bool)

(declare-fun e!48762 () ListLongMap!1439)

(declare-fun call!6603 () ListLongMap!1439)

(assert (=> b!74607 (= e!48762 call!6603)))

(declare-fun b!74608 () Bool)

(declare-fun call!6604 () ListLongMap!1439)

(assert (=> b!74608 (= e!48762 call!6604)))

(declare-fun bm!6600 () Bool)

(declare-fun lt!33538 () ListLongMap!1439)

(assert (=> bm!6600 (= call!6608 (contains!729 lt!33538 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74609 () Bool)

(declare-fun e!48754 () Bool)

(declare-fun e!48760 () Bool)

(assert (=> b!74609 (= e!48754 e!48760)))

(declare-fun res!39436 () Bool)

(assert (=> b!74609 (=> (not res!39436) (not e!48760))))

(assert (=> b!74609 (= res!39436 (contains!729 lt!33538 (select (arr!1858 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!74609 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))))))))

(declare-fun b!74610 () Bool)

(declare-fun e!48756 () Unit!2086)

(declare-fun Unit!2151 () Unit!2086)

(assert (=> b!74610 (= e!48756 Unit!2151)))

(declare-fun bm!6601 () Bool)

(declare-fun call!6605 () ListLongMap!1439)

(assert (=> bm!6601 (= call!6603 call!6605)))

(declare-fun call!6609 () ListLongMap!1439)

(declare-fun bm!6602 () Bool)

(assert (=> bm!6602 (= call!6609 (getCurrentListMapNoExtraKeys!62 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!74612 () Bool)

(declare-fun lt!33528 () Unit!2086)

(assert (=> b!74612 (= e!48756 lt!33528)))

(declare-fun lt!33549 () ListLongMap!1439)

(assert (=> b!74612 (= lt!33549 (getCurrentListMapNoExtraKeys!62 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33543 () (_ BitVec 64))

(assert (=> b!74612 (= lt!33543 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33534 () (_ BitVec 64))

(assert (=> b!74612 (= lt!33534 (select (arr!1858 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!33531 () Unit!2086)

(assert (=> b!74612 (= lt!33531 (addStillContains!51 lt!33549 lt!33543 (zeroValue!2115 newMap!16) lt!33534))))

(assert (=> b!74612 (contains!729 (+!98 lt!33549 (tuple2!2147 lt!33543 (zeroValue!2115 newMap!16))) lt!33534)))

(declare-fun lt!33545 () Unit!2086)

(assert (=> b!74612 (= lt!33545 lt!33531)))

(declare-fun lt!33536 () ListLongMap!1439)

(assert (=> b!74612 (= lt!33536 (getCurrentListMapNoExtraKeys!62 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33546 () (_ BitVec 64))

(assert (=> b!74612 (= lt!33546 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33544 () (_ BitVec 64))

(assert (=> b!74612 (= lt!33544 (select (arr!1858 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!33548 () Unit!2086)

(assert (=> b!74612 (= lt!33548 (addApplyDifferent!51 lt!33536 lt!33546 (minValue!2115 newMap!16) lt!33544))))

(assert (=> b!74612 (= (apply!75 (+!98 lt!33536 (tuple2!2147 lt!33546 (minValue!2115 newMap!16))) lt!33544) (apply!75 lt!33536 lt!33544))))

(declare-fun lt!33533 () Unit!2086)

(assert (=> b!74612 (= lt!33533 lt!33548)))

(declare-fun lt!33547 () ListLongMap!1439)

(assert (=> b!74612 (= lt!33547 (getCurrentListMapNoExtraKeys!62 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33537 () (_ BitVec 64))

(assert (=> b!74612 (= lt!33537 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33529 () (_ BitVec 64))

(assert (=> b!74612 (= lt!33529 (select (arr!1858 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!33535 () Unit!2086)

(assert (=> b!74612 (= lt!33535 (addApplyDifferent!51 lt!33547 lt!33537 (zeroValue!2115 newMap!16) lt!33529))))

(assert (=> b!74612 (= (apply!75 (+!98 lt!33547 (tuple2!2147 lt!33537 (zeroValue!2115 newMap!16))) lt!33529) (apply!75 lt!33547 lt!33529))))

(declare-fun lt!33539 () Unit!2086)

(assert (=> b!74612 (= lt!33539 lt!33535)))

(declare-fun lt!33542 () ListLongMap!1439)

(assert (=> b!74612 (= lt!33542 (getCurrentListMapNoExtraKeys!62 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33532 () (_ BitVec 64))

(assert (=> b!74612 (= lt!33532 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33530 () (_ BitVec 64))

(assert (=> b!74612 (= lt!33530 (select (arr!1858 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!74612 (= lt!33528 (addApplyDifferent!51 lt!33542 lt!33532 (minValue!2115 newMap!16) lt!33530))))

(assert (=> b!74612 (= (apply!75 (+!98 lt!33542 (tuple2!2147 lt!33532 (minValue!2115 newMap!16))) lt!33530) (apply!75 lt!33542 lt!33530))))

(declare-fun b!74613 () Bool)

(assert (=> b!74613 (= e!48755 (not call!6608))))

(declare-fun b!74614 () Bool)

(declare-fun res!39437 () Bool)

(declare-fun e!48765 () Bool)

(assert (=> b!74614 (=> (not res!39437) (not e!48765))))

(assert (=> b!74614 (= res!39437 e!48755)))

(declare-fun c!11257 () Bool)

(assert (=> b!74614 (= c!11257 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!74615 () Bool)

(declare-fun e!48759 () ListLongMap!1439)

(declare-fun e!48766 () ListLongMap!1439)

(assert (=> b!74615 (= e!48759 e!48766)))

(declare-fun c!11259 () Bool)

(assert (=> b!74615 (= c!11259 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74616 () Bool)

(declare-fun e!48761 () Bool)

(declare-fun e!48757 () Bool)

(assert (=> b!74616 (= e!48761 e!48757)))

(declare-fun res!39441 () Bool)

(declare-fun call!6606 () Bool)

(assert (=> b!74616 (= res!39441 call!6606)))

(assert (=> b!74616 (=> (not res!39441) (not e!48757))))

(declare-fun bm!6603 () Bool)

(assert (=> bm!6603 (= call!6605 call!6609)))

(declare-fun bm!6604 () Bool)

(declare-fun call!6607 () ListLongMap!1439)

(assert (=> bm!6604 (= call!6604 call!6607)))

(declare-fun b!74617 () Bool)

(assert (=> b!74617 (= e!48761 (not call!6606))))

(declare-fun b!74618 () Bool)

(declare-fun res!39434 () Bool)

(assert (=> b!74618 (=> (not res!39434) (not e!48765))))

(assert (=> b!74618 (= res!39434 e!48754)))

(declare-fun res!39433 () Bool)

(assert (=> b!74618 (=> res!39433 e!48754)))

(declare-fun e!48763 () Bool)

(assert (=> b!74618 (= res!39433 (not e!48763))))

(declare-fun res!39435 () Bool)

(assert (=> b!74618 (=> (not res!39435) (not e!48763))))

(assert (=> b!74618 (= res!39435 (bvslt #b00000000000000000000000000000000 (size!2096 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))))))))

(declare-fun b!74619 () Bool)

(assert (=> b!74619 (= e!48765 e!48761)))

(declare-fun c!11261 () Bool)

(assert (=> b!74619 (= c!11261 (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74620 () Bool)

(assert (=> b!74620 (= e!48757 (= (apply!75 lt!33538 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2115 newMap!16)))))

(declare-fun b!74621 () Bool)

(assert (=> b!74621 (= e!48766 call!6604)))

(declare-fun bm!6605 () Bool)

(assert (=> bm!6605 (= call!6606 (contains!729 lt!33538 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17683 () Bool)

(assert (=> d!17683 e!48765))

(declare-fun res!39439 () Bool)

(assert (=> d!17683 (=> (not res!39439) (not e!48765))))

(assert (=> d!17683 (= res!39439 (or (bvsge #b00000000000000000000000000000000 (size!2096 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))))))))))

(declare-fun lt!33540 () ListLongMap!1439)

(assert (=> d!17683 (= lt!33538 lt!33540)))

(declare-fun lt!33541 () Unit!2086)

(assert (=> d!17683 (= lt!33541 e!48756)))

(declare-fun c!11260 () Bool)

(declare-fun e!48764 () Bool)

(assert (=> d!17683 (= c!11260 e!48764)))

(declare-fun res!39440 () Bool)

(assert (=> d!17683 (=> (not res!39440) (not e!48764))))

(assert (=> d!17683 (= res!39440 (bvslt #b00000000000000000000000000000000 (size!2096 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))))))))

(assert (=> d!17683 (= lt!33540 e!48759)))

(declare-fun c!11258 () Bool)

(assert (=> d!17683 (= c!11258 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17683 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17683 (= (getCurrentListMap!426 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33538)))

(declare-fun b!74611 () Bool)

(assert (=> b!74611 (= e!48758 (= (apply!75 lt!33538 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2115 newMap!16)))))

(declare-fun b!74622 () Bool)

(assert (=> b!74622 (= e!48763 (validKeyInArray!0 (select (arr!1858 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!74623 () Bool)

(declare-fun c!11262 () Bool)

(assert (=> b!74623 (= c!11262 (and (not (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!74623 (= e!48766 e!48762)))

(declare-fun b!74624 () Bool)

(assert (=> b!74624 (= e!48764 (validKeyInArray!0 (select (arr!1858 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!74625 () Bool)

(assert (=> b!74625 (= e!48760 (= (apply!75 lt!33538 (select (arr!1858 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000)) (get!1154 (select (arr!1859 (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74625 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (array!3897 (store (arr!1859 (_values!2196 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (ValueCellFull!894 lt!32481)) (size!2097 (_values!2196 newMap!16))))))))

(assert (=> b!74625 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))))))))

(declare-fun bm!6606 () Bool)

(assert (=> bm!6606 (= call!6607 (+!98 (ite c!11258 call!6609 (ite c!11259 call!6605 call!6603)) (ite (or c!11258 c!11259) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 newMap!16)) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(declare-fun b!74626 () Bool)

(assert (=> b!74626 (= e!48759 (+!98 call!6607 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))

(assert (= (and d!17683 c!11258) b!74626))

(assert (= (and d!17683 (not c!11258)) b!74615))

(assert (= (and b!74615 c!11259) b!74621))

(assert (= (and b!74615 (not c!11259)) b!74623))

(assert (= (and b!74623 c!11262) b!74608))

(assert (= (and b!74623 (not c!11262)) b!74607))

(assert (= (or b!74608 b!74607) bm!6601))

(assert (= (or b!74621 bm!6601) bm!6603))

(assert (= (or b!74621 b!74608) bm!6604))

(assert (= (or b!74626 bm!6603) bm!6602))

(assert (= (or b!74626 bm!6604) bm!6606))

(assert (= (and d!17683 res!39440) b!74624))

(assert (= (and d!17683 c!11260) b!74612))

(assert (= (and d!17683 (not c!11260)) b!74610))

(assert (= (and d!17683 res!39439) b!74618))

(assert (= (and b!74618 res!39435) b!74622))

(assert (= (and b!74618 (not res!39433)) b!74609))

(assert (= (and b!74609 res!39436) b!74625))

(assert (= (and b!74618 res!39434) b!74614))

(assert (= (and b!74614 c!11257) b!74606))

(assert (= (and b!74614 (not c!11257)) b!74613))

(assert (= (and b!74606 res!39438) b!74611))

(assert (= (or b!74606 b!74613) bm!6600))

(assert (= (and b!74614 res!39437) b!74619))

(assert (= (and b!74619 c!11261) b!74616))

(assert (= (and b!74619 (not c!11261)) b!74617))

(assert (= (and b!74616 res!39441) b!74620))

(assert (= (or b!74616 b!74617) bm!6605))

(declare-fun b_lambda!3347 () Bool)

(assert (=> (not b_lambda!3347) (not b!74625)))

(assert (=> b!74625 t!5077))

(declare-fun b_and!4569 () Bool)

(assert (= b_and!4565 (and (=> t!5077 result!2697) b_and!4569)))

(assert (=> b!74625 t!5079))

(declare-fun b_and!4571 () Bool)

(assert (= b_and!4567 (and (=> t!5079 result!2699) b_and!4571)))

(declare-fun m!73873 () Bool)

(assert (=> bm!6606 m!73873))

(declare-fun m!73875 () Bool)

(assert (=> b!74611 m!73875))

(declare-fun m!73877 () Bool)

(assert (=> bm!6602 m!73877))

(assert (=> b!74622 m!73791))

(assert (=> b!74622 m!73791))

(assert (=> b!74622 m!73799))

(declare-fun m!73879 () Bool)

(assert (=> b!74626 m!73879))

(declare-fun m!73881 () Bool)

(assert (=> bm!6600 m!73881))

(declare-fun m!73883 () Bool)

(assert (=> b!74612 m!73883))

(declare-fun m!73885 () Bool)

(assert (=> b!74612 m!73885))

(declare-fun m!73887 () Bool)

(assert (=> b!74612 m!73887))

(assert (=> b!74612 m!73791))

(declare-fun m!73889 () Bool)

(assert (=> b!74612 m!73889))

(declare-fun m!73891 () Bool)

(assert (=> b!74612 m!73891))

(declare-fun m!73893 () Bool)

(assert (=> b!74612 m!73893))

(assert (=> b!74612 m!73889))

(declare-fun m!73895 () Bool)

(assert (=> b!74612 m!73895))

(assert (=> b!74612 m!73877))

(declare-fun m!73897 () Bool)

(assert (=> b!74612 m!73897))

(assert (=> b!74612 m!73885))

(declare-fun m!73899 () Bool)

(assert (=> b!74612 m!73899))

(assert (=> b!74612 m!73883))

(declare-fun m!73901 () Bool)

(assert (=> b!74612 m!73901))

(declare-fun m!73903 () Bool)

(assert (=> b!74612 m!73903))

(assert (=> b!74612 m!73887))

(declare-fun m!73905 () Bool)

(assert (=> b!74612 m!73905))

(declare-fun m!73907 () Bool)

(assert (=> b!74612 m!73907))

(declare-fun m!73909 () Bool)

(assert (=> b!74612 m!73909))

(declare-fun m!73911 () Bool)

(assert (=> b!74612 m!73911))

(assert (=> b!74609 m!73791))

(assert (=> b!74609 m!73791))

(declare-fun m!73913 () Bool)

(assert (=> b!74609 m!73913))

(declare-fun m!73915 () Bool)

(assert (=> bm!6605 m!73915))

(assert (=> b!74625 m!73791))

(assert (=> b!74625 m!73791))

(declare-fun m!73917 () Bool)

(assert (=> b!74625 m!73917))

(assert (=> b!74625 m!71521))

(declare-fun m!73919 () Bool)

(assert (=> b!74625 m!73919))

(assert (=> b!74625 m!73919))

(assert (=> b!74625 m!71521))

(declare-fun m!73921 () Bool)

(assert (=> b!74625 m!73921))

(assert (=> b!74624 m!73791))

(assert (=> b!74624 m!73791))

(assert (=> b!74624 m!73799))

(declare-fun m!73923 () Bool)

(assert (=> b!74620 m!73923))

(assert (=> d!17683 m!71423))

(assert (=> d!16979 d!17683))

(declare-fun b!74627 () Bool)

(declare-fun e!48767 () (_ BitVec 32))

(declare-fun call!6610 () (_ BitVec 32))

(assert (=> b!74627 (= e!48767 call!6610)))

(declare-fun b!74628 () Bool)

(declare-fun e!48768 () (_ BitVec 32))

(assert (=> b!74628 (= e!48768 e!48767)))

(declare-fun c!11263 () Bool)

(assert (=> b!74628 (= c!11263 (validKeyInArray!0 (select (arr!1858 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6607 () Bool)

(assert (=> bm!6607 (= call!6610 (arrayCountValidKeys!0 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!74629 () Bool)

(assert (=> b!74629 (= e!48768 #b00000000000000000000000000000000)))

(declare-fun b!74630 () Bool)

(assert (=> b!74630 (= e!48767 (bvadd #b00000000000000000000000000000001 call!6610))))

(declare-fun lt!33550 () (_ BitVec 32))

(declare-fun d!17685 () Bool)

(assert (=> d!17685 (and (bvsge lt!33550 #b00000000000000000000000000000000) (bvsle lt!33550 (bvsub (size!2096 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!17685 (= lt!33550 e!48768)))

(declare-fun c!11264 () Bool)

(assert (=> d!17685 (= c!11264 (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!17685 (and (bvsle #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2096 (_keys!3865 newMap!16)) (size!2096 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))))))))

(assert (=> d!17685 (= (arrayCountValidKeys!0 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))) lt!33550)))

(assert (= (and d!17685 c!11264) b!74629))

(assert (= (and d!17685 (not c!11264)) b!74628))

(assert (= (and b!74628 c!11263) b!74630))

(assert (= (and b!74628 (not c!11263)) b!74627))

(assert (= (or b!74630 b!74627) bm!6607))

(assert (=> b!74628 m!73791))

(assert (=> b!74628 m!73791))

(assert (=> b!74628 m!73799))

(declare-fun m!73925 () Bool)

(assert (=> bm!6607 m!73925))

(assert (=> d!16979 d!17685))

(declare-fun d!17687 () Bool)

(declare-fun e!48771 () Bool)

(assert (=> d!17687 e!48771))

(declare-fun res!39444 () Bool)

(assert (=> d!17687 (=> (not res!39444) (not e!48771))))

(assert (=> d!17687 (= res!39444 (and (bvsge (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) #b00000000000000000000000000000000) (bvslt (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (size!2096 (_keys!3865 newMap!16)))))))

(declare-fun lt!33553 () Unit!2086)

(declare-fun choose!41 (array!3894 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1508) Unit!2086)

(assert (=> d!17687 (= lt!33553 (choose!41 (_keys!3865 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) lt!32971 lt!32973))))

(assert (=> d!17687 (bvslt (size!2096 (_keys!3865 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!17687 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3865 newMap!16) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) lt!32971 lt!32973) lt!33553)))

(declare-fun b!74633 () Bool)

(assert (=> b!74633 (= e!48771 (arrayNoDuplicates!0 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) lt!32971 lt!32973))))

(assert (= (and d!17687 res!39444) b!74633))

(assert (=> d!17687 m!71053))

(declare-fun m!73927 () Bool)

(assert (=> d!17687 m!73927))

(assert (=> b!74633 m!71933))

(assert (=> b!74633 m!71923))

(assert (=> d!16979 d!17687))

(declare-fun d!17689 () Bool)

(declare-fun res!39445 () Bool)

(declare-fun e!48772 () Bool)

(assert (=> d!17689 (=> res!39445 e!48772)))

(assert (=> d!17689 (= res!39445 (= (select (arr!1858 lt!32989) #b00000000000000000000000000000000) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> d!17689 (= (arrayContainsKey!0 lt!32989 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b00000000000000000000000000000000) e!48772)))

(declare-fun b!74634 () Bool)

(declare-fun e!48773 () Bool)

(assert (=> b!74634 (= e!48772 e!48773)))

(declare-fun res!39446 () Bool)

(assert (=> b!74634 (=> (not res!39446) (not e!48773))))

(assert (=> b!74634 (= res!39446 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2096 lt!32989)))))

(declare-fun b!74635 () Bool)

(assert (=> b!74635 (= e!48773 (arrayContainsKey!0 lt!32989 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!17689 (not res!39445)) b!74634))

(assert (= (and b!74634 res!39446) b!74635))

(declare-fun m!73929 () Bool)

(assert (=> d!17689 m!73929))

(assert (=> b!74635 m!71053))

(declare-fun m!73931 () Bool)

(assert (=> b!74635 m!73931))

(assert (=> d!16979 d!17689))

(declare-fun d!17691 () Bool)

(assert (=> d!17691 (arrayContainsKey!0 lt!32989 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!33556 () Unit!2086)

(declare-fun choose!13 (array!3894 (_ BitVec 64) (_ BitVec 32)) Unit!2086)

(assert (=> d!17691 (= lt!33556 (choose!13 lt!32989 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593))))))

(assert (=> d!17691 (bvsge (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) #b00000000000000000000000000000000)))

(assert (=> d!17691 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!32989 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593))) lt!33556)))

(declare-fun bs!3214 () Bool)

(assert (= bs!3214 d!17691))

(assert (=> bs!3214 m!71053))

(assert (=> bs!3214 m!71935))

(assert (=> bs!3214 m!71053))

(declare-fun m!73933 () Bool)

(assert (=> bs!3214 m!73933))

(assert (=> d!16979 d!17691))

(declare-fun d!17693 () Bool)

(assert (=> d!17693 (= (arrayCountValidKeys!0 lt!32979 (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (bvadd (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!33559 () Unit!2086)

(declare-fun choose!2 (array!3894 (_ BitVec 32)) Unit!2086)

(assert (=> d!17693 (= lt!33559 (choose!2 lt!32979 (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593))))))

(declare-fun e!48776 () Bool)

(assert (=> d!17693 e!48776))

(declare-fun res!39451 () Bool)

(assert (=> d!17693 (=> (not res!39451) (not e!48776))))

(assert (=> d!17693 (= res!39451 (and (bvsge (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) #b00000000000000000000000000000000) (bvslt (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (size!2096 lt!32979))))))

(assert (=> d!17693 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!32979 (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593))) lt!33559)))

(declare-fun b!74640 () Bool)

(declare-fun res!39452 () Bool)

(assert (=> b!74640 (=> (not res!39452) (not e!48776))))

(assert (=> b!74640 (= res!39452 (validKeyInArray!0 (select (arr!1858 lt!32979) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)))))))

(declare-fun b!74641 () Bool)

(assert (=> b!74641 (= e!48776 (bvslt (size!2096 lt!32979) #b01111111111111111111111111111111))))

(assert (= (and d!17693 res!39451) b!74640))

(assert (= (and b!74640 res!39452) b!74641))

(assert (=> d!17693 m!71927))

(declare-fun m!73935 () Bool)

(assert (=> d!17693 m!73935))

(assert (=> b!74640 m!73865))

(assert (=> b!74640 m!73865))

(assert (=> b!74640 m!73867))

(assert (=> d!16979 d!17693))

(declare-fun b!74642 () Bool)

(declare-fun e!48777 () Bool)

(declare-fun e!48779 () Bool)

(assert (=> b!74642 (= e!48777 e!48779)))

(declare-fun res!39455 () Bool)

(assert (=> b!74642 (=> (not res!39455) (not e!48779))))

(declare-fun e!48778 () Bool)

(assert (=> b!74642 (= res!39455 (not e!48778))))

(declare-fun res!39453 () Bool)

(assert (=> b!74642 (=> (not res!39453) (not e!48778))))

(assert (=> b!74642 (= res!39453 (validKeyInArray!0 (select (arr!1858 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16)))) lt!32971)))))

(declare-fun b!74643 () Bool)

(declare-fun e!48780 () Bool)

(declare-fun call!6611 () Bool)

(assert (=> b!74643 (= e!48780 call!6611)))

(declare-fun b!74644 () Bool)

(assert (=> b!74644 (= e!48780 call!6611)))

(declare-fun b!74645 () Bool)

(assert (=> b!74645 (= e!48778 (contains!731 lt!32973 (select (arr!1858 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16)))) lt!32971)))))

(declare-fun b!74646 () Bool)

(assert (=> b!74646 (= e!48779 e!48780)))

(declare-fun c!11265 () Bool)

(assert (=> b!74646 (= c!11265 (validKeyInArray!0 (select (arr!1858 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16)))) lt!32971)))))

(declare-fun bm!6608 () Bool)

(assert (=> bm!6608 (= call!6611 (arrayNoDuplicates!0 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) (bvadd lt!32971 #b00000000000000000000000000000001) (ite c!11265 (Cons!1504 (select (arr!1858 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16)))) lt!32971) lt!32973) lt!32973)))))

(declare-fun d!17695 () Bool)

(declare-fun res!39454 () Bool)

(assert (=> d!17695 (=> res!39454 e!48777)))

(assert (=> d!17695 (= res!39454 (bvsge lt!32971 (size!2096 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))))))))

(assert (=> d!17695 (= (arrayNoDuplicates!0 (array!3895 (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (size!2096 (_keys!3865 newMap!16))) lt!32971 lt!32973) e!48777)))

(assert (= (and d!17695 (not res!39454)) b!74642))

(assert (= (and b!74642 res!39453) b!74645))

(assert (= (and b!74642 res!39455) b!74646))

(assert (= (and b!74646 c!11265) b!74643))

(assert (= (and b!74646 (not c!11265)) b!74644))

(assert (= (or b!74643 b!74644) bm!6608))

(declare-fun m!73937 () Bool)

(assert (=> b!74642 m!73937))

(assert (=> b!74642 m!73937))

(declare-fun m!73939 () Bool)

(assert (=> b!74642 m!73939))

(assert (=> b!74645 m!73937))

(assert (=> b!74645 m!73937))

(declare-fun m!73941 () Bool)

(assert (=> b!74645 m!73941))

(assert (=> b!74646 m!73937))

(assert (=> b!74646 m!73937))

(assert (=> b!74646 m!73939))

(assert (=> bm!6608 m!73937))

(declare-fun m!73943 () Bool)

(assert (=> bm!6608 m!73943))

(assert (=> d!16979 d!17695))

(declare-fun d!17697 () Bool)

(declare-fun e!48781 () Bool)

(assert (=> d!17697 e!48781))

(declare-fun res!39456 () Bool)

(assert (=> d!17697 (=> (not res!39456) (not e!48781))))

(assert (=> d!17697 (= res!39456 (and (bvsge (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) #b00000000000000000000000000000000) (bvslt (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (size!2096 lt!32968))))))

(declare-fun lt!33560 () Unit!2086)

(assert (=> d!17697 (= lt!33560 (choose!428 lt!32968 lt!32992 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (defaultEntry!2213 newMap!16)))))

(assert (=> d!17697 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17697 (= (lemmaValidKeyInArrayIsInListMap!82 lt!32968 lt!32992 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (defaultEntry!2213 newMap!16)) lt!33560)))

(declare-fun b!74647 () Bool)

(assert (=> b!74647 (= e!48781 (contains!729 (getCurrentListMap!426 lt!32968 lt!32992 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (arr!1858 lt!32968) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)))))))

(assert (= (and d!17697 res!39456) b!74647))

(declare-fun m!73945 () Bool)

(assert (=> d!17697 m!73945))

(assert (=> d!17697 m!71423))

(assert (=> b!74647 m!71901))

(declare-fun m!73947 () Bool)

(assert (=> b!74647 m!73947))

(assert (=> b!74647 m!71901))

(assert (=> b!74647 m!73947))

(declare-fun m!73949 () Bool)

(assert (=> b!74647 m!73949))

(assert (=> d!16979 d!17697))

(declare-fun d!17699 () Bool)

(declare-fun e!48783 () Bool)

(assert (=> d!17699 e!48783))

(declare-fun res!39457 () Bool)

(assert (=> d!17699 (=> res!39457 e!48783)))

(declare-fun lt!33563 () Bool)

(assert (=> d!17699 (= res!39457 (not lt!33563))))

(declare-fun lt!33561 () Bool)

(assert (=> d!17699 (= lt!33563 lt!33561)))

(declare-fun lt!33562 () Unit!2086)

(declare-fun e!48782 () Unit!2086)

(assert (=> d!17699 (= lt!33562 e!48782)))

(declare-fun c!11266 () Bool)

(assert (=> d!17699 (= c!11266 lt!33561)))

(assert (=> d!17699 (= lt!33561 (containsKey!136 (toList!735 (getCurrentListMap!426 lt!32968 lt!32992 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)))))))

(assert (=> d!17699 (= (contains!729 (getCurrentListMap!426 lt!32968 lt!32992 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (select (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)))) lt!33563)))

(declare-fun b!74648 () Bool)

(declare-fun lt!33564 () Unit!2086)

(assert (=> b!74648 (= e!48782 lt!33564)))

(assert (=> b!74648 (= lt!33564 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 (getCurrentListMap!426 lt!32968 lt!32992 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)))))))

(assert (=> b!74648 (isDefined!86 (getValueByKey!132 (toList!735 (getCurrentListMap!426 lt!32968 lt!32992 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)))))))

(declare-fun b!74649 () Bool)

(declare-fun Unit!2152 () Unit!2086)

(assert (=> b!74649 (= e!48782 Unit!2152)))

(declare-fun b!74650 () Bool)

(assert (=> b!74650 (= e!48783 (isDefined!86 (getValueByKey!132 (toList!735 (getCurrentListMap!426 lt!32968 lt!32992 (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (select (store (arr!1858 (_keys!3865 newMap!16)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (ite c!10828 (index!3118 lt!32593) (index!3115 lt!32593))))))))

(assert (= (and d!17699 c!11266) b!74648))

(assert (= (and d!17699 (not c!11266)) b!74649))

(assert (= (and d!17699 (not res!39457)) b!74650))

(assert (=> d!17699 m!71903))

(declare-fun m!73951 () Bool)

(assert (=> d!17699 m!73951))

(assert (=> b!74648 m!71903))

(declare-fun m!73953 () Bool)

(assert (=> b!74648 m!73953))

(assert (=> b!74648 m!71903))

(declare-fun m!73955 () Bool)

(assert (=> b!74648 m!73955))

(assert (=> b!74648 m!73955))

(declare-fun m!73957 () Bool)

(assert (=> b!74648 m!73957))

(assert (=> b!74650 m!71903))

(assert (=> b!74650 m!73955))

(assert (=> b!74650 m!73955))

(assert (=> b!74650 m!73957))

(assert (=> d!16979 d!17699))

(assert (=> d!16979 d!17487))

(declare-fun d!17701 () Bool)

(declare-fun res!39458 () Bool)

(declare-fun e!48784 () Bool)

(assert (=> d!17701 (=> res!39458 e!48784)))

(assert (=> d!17701 (= res!39458 (and ((_ is Cons!1503) lt!32716) (= (_1!1083 (h!2090 lt!32716)) (_1!1083 lt!32482))))))

(assert (=> d!17701 (= (containsKey!136 lt!32716 (_1!1083 lt!32482)) e!48784)))

(declare-fun b!74651 () Bool)

(declare-fun e!48785 () Bool)

(assert (=> b!74651 (= e!48784 e!48785)))

(declare-fun res!39459 () Bool)

(assert (=> b!74651 (=> (not res!39459) (not e!48785))))

(assert (=> b!74651 (= res!39459 (and (or (not ((_ is Cons!1503) lt!32716)) (bvsle (_1!1083 (h!2090 lt!32716)) (_1!1083 lt!32482))) ((_ is Cons!1503) lt!32716) (bvslt (_1!1083 (h!2090 lt!32716)) (_1!1083 lt!32482))))))

(declare-fun b!74652 () Bool)

(assert (=> b!74652 (= e!48785 (containsKey!136 (t!5068 lt!32716) (_1!1083 lt!32482)))))

(assert (= (and d!17701 (not res!39458)) b!74651))

(assert (= (and b!74651 res!39459) b!74652))

(declare-fun m!73959 () Bool)

(assert (=> b!74652 m!73959))

(assert (=> b!73435 d!17701))

(assert (=> b!73310 d!17501))

(assert (=> b!73310 d!17503))

(declare-fun d!17703 () Bool)

(declare-fun res!39460 () Bool)

(declare-fun e!48786 () Bool)

(assert (=> d!17703 (=> res!39460 e!48786)))

(assert (=> d!17703 (= res!39460 (and ((_ is Cons!1503) (toList!735 lt!32721)) (= (_1!1083 (h!2090 (toList!735 lt!32721))) (_1!1083 lt!32472))))))

(assert (=> d!17703 (= (containsKey!136 (toList!735 lt!32721) (_1!1083 lt!32472)) e!48786)))

(declare-fun b!74653 () Bool)

(declare-fun e!48787 () Bool)

(assert (=> b!74653 (= e!48786 e!48787)))

(declare-fun res!39461 () Bool)

(assert (=> b!74653 (=> (not res!39461) (not e!48787))))

(assert (=> b!74653 (= res!39461 (and (or (not ((_ is Cons!1503) (toList!735 lt!32721))) (bvsle (_1!1083 (h!2090 (toList!735 lt!32721))) (_1!1083 lt!32472))) ((_ is Cons!1503) (toList!735 lt!32721)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32721))) (_1!1083 lt!32472))))))

(declare-fun b!74654 () Bool)

(assert (=> b!74654 (= e!48787 (containsKey!136 (t!5068 (toList!735 lt!32721)) (_1!1083 lt!32472)))))

(assert (= (and d!17703 (not res!39460)) b!74653))

(assert (= (and b!74653 res!39461) b!74654))

(declare-fun m!73961 () Bool)

(assert (=> b!74654 m!73961))

(assert (=> d!16981 d!17703))

(declare-fun d!17705 () Bool)

(declare-fun e!48789 () Bool)

(assert (=> d!17705 e!48789))

(declare-fun res!39462 () Bool)

(assert (=> d!17705 (=> res!39462 e!48789)))

(declare-fun lt!33567 () Bool)

(assert (=> d!17705 (= res!39462 (not lt!33567))))

(declare-fun lt!33565 () Bool)

(assert (=> d!17705 (= lt!33567 lt!33565)))

(declare-fun lt!33566 () Unit!2086)

(declare-fun e!48788 () Unit!2086)

(assert (=> d!17705 (= lt!33566 e!48788)))

(declare-fun c!11267 () Bool)

(assert (=> d!17705 (= c!11267 lt!33565)))

(assert (=> d!17705 (= lt!33565 (containsKey!136 (toList!735 lt!33077) (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17705 (= (contains!729 lt!33077 (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))) lt!33567)))

(declare-fun b!74655 () Bool)

(declare-fun lt!33568 () Unit!2086)

(assert (=> b!74655 (= e!48788 lt!33568)))

(assert (=> b!74655 (= lt!33568 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!33077) (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> b!74655 (isDefined!86 (getValueByKey!132 (toList!735 lt!33077) (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun b!74656 () Bool)

(declare-fun Unit!2153 () Unit!2086)

(assert (=> b!74656 (= e!48788 Unit!2153)))

(declare-fun b!74657 () Bool)

(assert (=> b!74657 (= e!48789 (isDefined!86 (getValueByKey!132 (toList!735 lt!33077) (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(assert (= (and d!17705 c!11267) b!74655))

(assert (= (and d!17705 (not c!11267)) b!74656))

(assert (= (and d!17705 (not res!39462)) b!74657))

(declare-fun m!73963 () Bool)

(assert (=> d!17705 m!73963))

(declare-fun m!73965 () Bool)

(assert (=> b!74655 m!73965))

(assert (=> b!74655 m!72165))

(assert (=> b!74655 m!72165))

(declare-fun m!73967 () Bool)

(assert (=> b!74655 m!73967))

(assert (=> b!74657 m!72165))

(assert (=> b!74657 m!72165))

(assert (=> b!74657 m!73967))

(assert (=> d!17035 d!17705))

(declare-fun b!74661 () Bool)

(declare-fun e!48791 () Option!138)

(assert (=> b!74661 (= e!48791 None!136)))

(declare-fun b!74659 () Bool)

(declare-fun e!48790 () Option!138)

(assert (=> b!74659 (= e!48790 e!48791)))

(declare-fun c!11269 () Bool)

(assert (=> b!74659 (= c!11269 (and ((_ is Cons!1503) lt!33076) (not (= (_1!1083 (h!2090 lt!33076)) (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))))

(declare-fun b!74658 () Bool)

(assert (=> b!74658 (= e!48790 (Some!137 (_2!1083 (h!2090 lt!33076))))))

(declare-fun c!11268 () Bool)

(declare-fun d!17707 () Bool)

(assert (=> d!17707 (= c!11268 (and ((_ is Cons!1503) lt!33076) (= (_1!1083 (h!2090 lt!33076)) (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(assert (=> d!17707 (= (getValueByKey!132 lt!33076 (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))) e!48790)))

(declare-fun b!74660 () Bool)

(assert (=> b!74660 (= e!48791 (getValueByKey!132 (t!5068 lt!33076) (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (= (and d!17707 c!11268) b!74658))

(assert (= (and d!17707 (not c!11268)) b!74659))

(assert (= (and b!74659 c!11269) b!74660))

(assert (= (and b!74659 (not c!11269)) b!74661))

(declare-fun m!73969 () Bool)

(assert (=> b!74660 m!73969))

(assert (=> d!17035 d!17707))

(declare-fun d!17709 () Bool)

(assert (=> d!17709 (= (getValueByKey!132 lt!33076 (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))) (Some!137 (_2!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun lt!33569 () Unit!2086)

(assert (=> d!17709 (= lt!33569 (choose!422 lt!33076 (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) (_2!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun e!48792 () Bool)

(assert (=> d!17709 e!48792))

(declare-fun res!39463 () Bool)

(assert (=> d!17709 (=> (not res!39463) (not e!48792))))

(assert (=> d!17709 (= res!39463 (isStrictlySorted!287 lt!33076))))

(assert (=> d!17709 (= (lemmaContainsTupThenGetReturnValue!51 lt!33076 (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) (_2!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))) lt!33569)))

(declare-fun b!74662 () Bool)

(declare-fun res!39464 () Bool)

(assert (=> b!74662 (=> (not res!39464) (not e!48792))))

(assert (=> b!74662 (= res!39464 (containsKey!136 lt!33076 (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun b!74663 () Bool)

(assert (=> b!74663 (= e!48792 (contains!730 lt!33076 (tuple2!2147 (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) (_2!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(assert (= (and d!17709 res!39463) b!74662))

(assert (= (and b!74662 res!39464) b!74663))

(assert (=> d!17709 m!72159))

(declare-fun m!73971 () Bool)

(assert (=> d!17709 m!73971))

(declare-fun m!73973 () Bool)

(assert (=> d!17709 m!73973))

(declare-fun m!73975 () Bool)

(assert (=> b!74662 m!73975))

(declare-fun m!73977 () Bool)

(assert (=> b!74663 m!73977))

(assert (=> d!17035 d!17709))

(declare-fun b!74664 () Bool)

(declare-fun e!48793 () List!1507)

(declare-fun call!6613 () List!1507)

(assert (=> b!74664 (= e!48793 call!6613)))

(declare-fun b!74665 () Bool)

(declare-fun e!48795 () List!1507)

(declare-fun call!6612 () List!1507)

(assert (=> b!74665 (= e!48795 call!6612)))

(declare-fun call!6614 () List!1507)

(declare-fun bm!6609 () Bool)

(declare-fun e!48796 () List!1507)

(declare-fun c!11271 () Bool)

(assert (=> bm!6609 (= call!6614 ($colon$colon!65 e!48796 (ite c!11271 (h!2090 (toList!735 (ite c!10854 call!6438 (ite c!10855 call!6434 call!6432)))) (tuple2!2147 (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) (_2!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))))

(declare-fun c!11272 () Bool)

(assert (=> bm!6609 (= c!11272 c!11271)))

(declare-fun b!74667 () Bool)

(declare-fun res!39466 () Bool)

(declare-fun e!48794 () Bool)

(assert (=> b!74667 (=> (not res!39466) (not e!48794))))

(declare-fun lt!33570 () List!1507)

(assert (=> b!74667 (= res!39466 (containsKey!136 lt!33570 (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun b!74668 () Bool)

(declare-fun e!48797 () List!1507)

(assert (=> b!74668 (= e!48797 call!6614)))

(declare-fun c!11273 () Bool)

(declare-fun b!74669 () Bool)

(declare-fun c!11270 () Bool)

(assert (=> b!74669 (= e!48796 (ite c!11273 (t!5068 (toList!735 (ite c!10854 call!6438 (ite c!10855 call!6434 call!6432)))) (ite c!11270 (Cons!1503 (h!2090 (toList!735 (ite c!10854 call!6438 (ite c!10855 call!6434 call!6432)))) (t!5068 (toList!735 (ite c!10854 call!6438 (ite c!10855 call!6434 call!6432))))) Nil!1504)))))

(declare-fun b!74670 () Bool)

(assert (=> b!74670 (= e!48796 (insertStrictlySorted!53 (t!5068 (toList!735 (ite c!10854 call!6438 (ite c!10855 call!6434 call!6432)))) (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) (_2!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun b!74671 () Bool)

(assert (=> b!74671 (= e!48794 (contains!730 lt!33570 (tuple2!2147 (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) (_2!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun bm!6610 () Bool)

(assert (=> bm!6610 (= call!6613 call!6614)))

(declare-fun b!74672 () Bool)

(assert (=> b!74672 (= e!48797 e!48793)))

(assert (=> b!74672 (= c!11273 (and ((_ is Cons!1503) (toList!735 (ite c!10854 call!6438 (ite c!10855 call!6434 call!6432)))) (= (_1!1083 (h!2090 (toList!735 (ite c!10854 call!6438 (ite c!10855 call!6434 call!6432))))) (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun b!74666 () Bool)

(assert (=> b!74666 (= c!11270 (and ((_ is Cons!1503) (toList!735 (ite c!10854 call!6438 (ite c!10855 call!6434 call!6432)))) (bvsgt (_1!1083 (h!2090 (toList!735 (ite c!10854 call!6438 (ite c!10855 call!6434 call!6432))))) (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(assert (=> b!74666 (= e!48793 e!48795)))

(declare-fun d!17711 () Bool)

(assert (=> d!17711 e!48794))

(declare-fun res!39465 () Bool)

(assert (=> d!17711 (=> (not res!39465) (not e!48794))))

(assert (=> d!17711 (= res!39465 (isStrictlySorted!287 lt!33570))))

(assert (=> d!17711 (= lt!33570 e!48797)))

(assert (=> d!17711 (= c!11271 (and ((_ is Cons!1503) (toList!735 (ite c!10854 call!6438 (ite c!10855 call!6434 call!6432)))) (bvslt (_1!1083 (h!2090 (toList!735 (ite c!10854 call!6438 (ite c!10855 call!6434 call!6432))))) (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(assert (=> d!17711 (isStrictlySorted!287 (toList!735 (ite c!10854 call!6438 (ite c!10855 call!6434 call!6432))))))

(assert (=> d!17711 (= (insertStrictlySorted!53 (toList!735 (ite c!10854 call!6438 (ite c!10855 call!6434 call!6432))) (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) (_2!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))) lt!33570)))

(declare-fun b!74673 () Bool)

(assert (=> b!74673 (= e!48795 call!6612)))

(declare-fun bm!6611 () Bool)

(assert (=> bm!6611 (= call!6612 call!6613)))

(assert (= (and d!17711 c!11271) b!74668))

(assert (= (and d!17711 (not c!11271)) b!74672))

(assert (= (and b!74672 c!11273) b!74664))

(assert (= (and b!74672 (not c!11273)) b!74666))

(assert (= (and b!74666 c!11270) b!74673))

(assert (= (and b!74666 (not c!11270)) b!74665))

(assert (= (or b!74673 b!74665) bm!6611))

(assert (= (or b!74664 bm!6611) bm!6610))

(assert (= (or b!74668 bm!6610) bm!6609))

(assert (= (and bm!6609 c!11272) b!74670))

(assert (= (and bm!6609 (not c!11272)) b!74669))

(assert (= (and d!17711 res!39465) b!74667))

(assert (= (and b!74667 res!39466) b!74671))

(declare-fun m!73979 () Bool)

(assert (=> b!74667 m!73979))

(declare-fun m!73981 () Bool)

(assert (=> d!17711 m!73981))

(declare-fun m!73983 () Bool)

(assert (=> d!17711 m!73983))

(declare-fun m!73985 () Bool)

(assert (=> b!74670 m!73985))

(declare-fun m!73987 () Bool)

(assert (=> b!74671 m!73987))

(declare-fun m!73989 () Bool)

(assert (=> bm!6609 m!73989))

(assert (=> d!17035 d!17711))

(assert (=> b!73519 d!17495))

(assert (=> b!73519 d!17497))

(assert (=> b!73426 d!17581))

(assert (=> b!73426 d!16847))

(declare-fun d!17713 () Bool)

(declare-fun e!48799 () Bool)

(assert (=> d!17713 e!48799))

(declare-fun res!39467 () Bool)

(assert (=> d!17713 (=> res!39467 e!48799)))

(declare-fun lt!33573 () Bool)

(assert (=> d!17713 (= res!39467 (not lt!33573))))

(declare-fun lt!33571 () Bool)

(assert (=> d!17713 (= lt!33573 lt!33571)))

(declare-fun lt!33572 () Unit!2086)

(declare-fun e!48798 () Unit!2086)

(assert (=> d!17713 (= lt!33572 e!48798)))

(declare-fun c!11274 () Bool)

(assert (=> d!17713 (= c!11274 lt!33571)))

(assert (=> d!17713 (= lt!33571 (containsKey!136 (toList!735 lt!33062) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17713 (= (contains!729 lt!33062 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33573)))

(declare-fun b!74674 () Bool)

(declare-fun lt!33574 () Unit!2086)

(assert (=> b!74674 (= e!48798 lt!33574)))

(assert (=> b!74674 (= lt!33574 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!33062) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74674 (isDefined!86 (getValueByKey!132 (toList!735 lt!33062) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74675 () Bool)

(declare-fun Unit!2154 () Unit!2086)

(assert (=> b!74675 (= e!48798 Unit!2154)))

(declare-fun b!74676 () Bool)

(assert (=> b!74676 (= e!48799 (isDefined!86 (getValueByKey!132 (toList!735 lt!33062) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17713 c!11274) b!74674))

(assert (= (and d!17713 (not c!11274)) b!74675))

(assert (= (and d!17713 (not res!39467)) b!74676))

(declare-fun m!73991 () Bool)

(assert (=> d!17713 m!73991))

(declare-fun m!73993 () Bool)

(assert (=> b!74674 m!73993))

(assert (=> b!74674 m!72579))

(assert (=> b!74674 m!72579))

(declare-fun m!73995 () Bool)

(assert (=> b!74674 m!73995))

(assert (=> b!74676 m!72579))

(assert (=> b!74676 m!72579))

(assert (=> b!74676 m!73995))

(assert (=> bm!6501 d!17713))

(assert (=> b!73342 d!17523))

(assert (=> b!73342 d!17525))

(declare-fun b!74680 () Bool)

(declare-fun e!48801 () Option!138)

(assert (=> b!74680 (= e!48801 None!136)))

(declare-fun b!74678 () Bool)

(declare-fun e!48800 () Option!138)

(assert (=> b!74678 (= e!48800 e!48801)))

(declare-fun c!11276 () Bool)

(assert (=> b!74678 (= c!11276 (and ((_ is Cons!1503) (toList!735 lt!33077)) (not (= (_1!1083 (h!2090 (toList!735 lt!33077))) (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))))

(declare-fun b!74677 () Bool)

(assert (=> b!74677 (= e!48800 (Some!137 (_2!1083 (h!2090 (toList!735 lt!33077)))))))

(declare-fun c!11275 () Bool)

(declare-fun d!17715 () Bool)

(assert (=> d!17715 (= c!11275 (and ((_ is Cons!1503) (toList!735 lt!33077)) (= (_1!1083 (h!2090 (toList!735 lt!33077))) (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(assert (=> d!17715 (= (getValueByKey!132 (toList!735 lt!33077) (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))) e!48800)))

(declare-fun b!74679 () Bool)

(assert (=> b!74679 (= e!48801 (getValueByKey!132 (t!5068 (toList!735 lt!33077)) (_1!1083 (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (= (and d!17715 c!11275) b!74677))

(assert (= (and d!17715 (not c!11275)) b!74678))

(assert (= (and b!74678 c!11276) b!74679))

(assert (= (and b!74678 (not c!11276)) b!74680))

(declare-fun m!73997 () Bool)

(assert (=> b!74679 m!73997))

(assert (=> b!73703 d!17715))

(assert (=> b!73329 d!17087))

(declare-fun b!74684 () Bool)

(declare-fun e!48803 () Option!138)

(assert (=> b!74684 (= e!48803 None!136)))

(declare-fun b!74682 () Bool)

(declare-fun e!48802 () Option!138)

(assert (=> b!74682 (= e!48802 e!48803)))

(declare-fun c!11278 () Bool)

(assert (=> b!74682 (= c!11278 (and ((_ is Cons!1503) (toList!735 lt!32895)) (not (= (_1!1083 (h!2090 (toList!735 lt!32895))) (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun b!74681 () Bool)

(assert (=> b!74681 (= e!48802 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32895)))))))

(declare-fun d!17717 () Bool)

(declare-fun c!11277 () Bool)

(assert (=> d!17717 (= c!11277 (and ((_ is Cons!1503) (toList!735 lt!32895)) (= (_1!1083 (h!2090 (toList!735 lt!32895))) (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17717 (= (getValueByKey!132 (toList!735 lt!32895) (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) e!48802)))

(declare-fun b!74683 () Bool)

(assert (=> b!74683 (= e!48803 (getValueByKey!132 (t!5068 (toList!735 lt!32895)) (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (= (and d!17717 c!11277) b!74681))

(assert (= (and d!17717 (not c!11277)) b!74682))

(assert (= (and b!74682 c!11278) b!74683))

(assert (= (and b!74682 (not c!11278)) b!74684))

(declare-fun m!73999 () Bool)

(assert (=> b!74683 m!73999))

(assert (=> b!73520 d!17717))

(assert (=> d!17007 d!16835))

(declare-fun b!74688 () Bool)

(declare-fun e!48805 () Option!138)

(assert (=> b!74688 (= e!48805 None!136)))

(declare-fun b!74686 () Bool)

(declare-fun e!48804 () Option!138)

(assert (=> b!74686 (= e!48804 e!48805)))

(declare-fun c!11280 () Bool)

(assert (=> b!74686 (= c!11280 (and ((_ is Cons!1503) (t!5068 (toList!735 lt!32710))) (not (= (_1!1083 (h!2090 (t!5068 (toList!735 lt!32710)))) (_1!1083 lt!32482)))))))

(declare-fun b!74685 () Bool)

(assert (=> b!74685 (= e!48804 (Some!137 (_2!1083 (h!2090 (t!5068 (toList!735 lt!32710))))))))

(declare-fun d!17719 () Bool)

(declare-fun c!11279 () Bool)

(assert (=> d!17719 (= c!11279 (and ((_ is Cons!1503) (t!5068 (toList!735 lt!32710))) (= (_1!1083 (h!2090 (t!5068 (toList!735 lt!32710)))) (_1!1083 lt!32482))))))

(assert (=> d!17719 (= (getValueByKey!132 (t!5068 (toList!735 lt!32710)) (_1!1083 lt!32482)) e!48804)))

(declare-fun b!74687 () Bool)

(assert (=> b!74687 (= e!48805 (getValueByKey!132 (t!5068 (t!5068 (toList!735 lt!32710))) (_1!1083 lt!32482)))))

(assert (= (and d!17719 c!11279) b!74685))

(assert (= (and d!17719 (not c!11279)) b!74686))

(assert (= (and b!74686 c!11280) b!74687))

(assert (= (and b!74686 (not c!11280)) b!74688))

(declare-fun m!74001 () Bool)

(assert (=> b!74687 m!74001))

(assert (=> b!73298 d!17719))

(declare-fun d!17721 () Bool)

(assert (=> d!17721 (arrayContainsKey!0 (_keys!3865 newMap!16) lt!32745 #b00000000000000000000000000000000)))

(declare-fun lt!33575 () Unit!2086)

(assert (=> d!17721 (= lt!33575 (choose!13 (_keys!3865 newMap!16) lt!32745 #b00000000000000000000000000000000))))

(assert (=> d!17721 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!17721 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3865 newMap!16) lt!32745 #b00000000000000000000000000000000) lt!33575)))

(declare-fun bs!3215 () Bool)

(assert (= bs!3215 d!17721))

(assert (=> bs!3215 m!71407))

(declare-fun m!74003 () Bool)

(assert (=> bs!3215 m!74003))

(assert (=> b!73275 d!17721))

(declare-fun d!17723 () Bool)

(declare-fun res!39468 () Bool)

(declare-fun e!48806 () Bool)

(assert (=> d!17723 (=> res!39468 e!48806)))

(assert (=> d!17723 (= res!39468 (= (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) lt!32745))))

(assert (=> d!17723 (= (arrayContainsKey!0 (_keys!3865 newMap!16) lt!32745 #b00000000000000000000000000000000) e!48806)))

(declare-fun b!74689 () Bool)

(declare-fun e!48807 () Bool)

(assert (=> b!74689 (= e!48806 e!48807)))

(declare-fun res!39469 () Bool)

(assert (=> b!74689 (=> (not res!39469) (not e!48807))))

(assert (=> b!74689 (= res!39469 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!74690 () Bool)

(assert (=> b!74690 (= e!48807 (arrayContainsKey!0 (_keys!3865 newMap!16) lt!32745 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!17723 (not res!39468)) b!74689))

(assert (= (and b!74689 res!39469) b!74690))

(assert (=> d!17723 m!71397))

(declare-fun m!74005 () Bool)

(assert (=> b!74690 m!74005))

(assert (=> b!73275 d!17723))

(declare-fun b!74691 () Bool)

(declare-fun e!48808 () SeekEntryResult!246)

(declare-fun lt!33577 () SeekEntryResult!246)

(assert (=> b!74691 (= e!48808 (Found!246 (index!3117 lt!33577)))))

(declare-fun b!74692 () Bool)

(declare-fun e!48809 () SeekEntryResult!246)

(assert (=> b!74692 (= e!48809 (MissingZero!246 (index!3117 lt!33577)))))

(declare-fun b!74693 () Bool)

(declare-fun c!11283 () Bool)

(declare-fun lt!33576 () (_ BitVec 64))

(assert (=> b!74693 (= c!11283 (= lt!33576 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74693 (= e!48808 e!48809)))

(declare-fun d!17725 () Bool)

(declare-fun lt!33578 () SeekEntryResult!246)

(assert (=> d!17725 (and (or ((_ is Undefined!246) lt!33578) (not ((_ is Found!246) lt!33578)) (and (bvsge (index!3116 lt!33578) #b00000000000000000000000000000000) (bvslt (index!3116 lt!33578) (size!2096 (_keys!3865 newMap!16))))) (or ((_ is Undefined!246) lt!33578) ((_ is Found!246) lt!33578) (not ((_ is MissingZero!246) lt!33578)) (and (bvsge (index!3115 lt!33578) #b00000000000000000000000000000000) (bvslt (index!3115 lt!33578) (size!2096 (_keys!3865 newMap!16))))) (or ((_ is Undefined!246) lt!33578) ((_ is Found!246) lt!33578) ((_ is MissingZero!246) lt!33578) (not ((_ is MissingVacant!246) lt!33578)) (and (bvsge (index!3118 lt!33578) #b00000000000000000000000000000000) (bvslt (index!3118 lt!33578) (size!2096 (_keys!3865 newMap!16))))) (or ((_ is Undefined!246) lt!33578) (ite ((_ is Found!246) lt!33578) (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3116 lt!33578)) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!246) lt!33578) (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3115 lt!33578)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!246) lt!33578) (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3118 lt!33578)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!48810 () SeekEntryResult!246)

(assert (=> d!17725 (= lt!33578 e!48810)))

(declare-fun c!11282 () Bool)

(assert (=> d!17725 (= c!11282 (and ((_ is Intermediate!246) lt!33577) (undefined!1058 lt!33577)))))

(assert (=> d!17725 (= lt!33577 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) (mask!6180 newMap!16)) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(assert (=> d!17725 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17725 (= (seekEntryOrOpen!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) (_keys!3865 newMap!16) (mask!6180 newMap!16)) lt!33578)))

(declare-fun b!74694 () Bool)

(assert (=> b!74694 (= e!48810 Undefined!246)))

(declare-fun b!74695 () Bool)

(assert (=> b!74695 (= e!48810 e!48808)))

(assert (=> b!74695 (= lt!33576 (select (arr!1858 (_keys!3865 newMap!16)) (index!3117 lt!33577)))))

(declare-fun c!11281 () Bool)

(assert (=> b!74695 (= c!11281 (= lt!33576 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74696 () Bool)

(assert (=> b!74696 (= e!48809 (seekKeyOrZeroReturnVacant!0 (x!11162 lt!33577) (index!3117 lt!33577) (index!3117 lt!33577) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(assert (= (and d!17725 c!11282) b!74694))

(assert (= (and d!17725 (not c!11282)) b!74695))

(assert (= (and b!74695 c!11281) b!74691))

(assert (= (and b!74695 (not c!11281)) b!74693))

(assert (= (and b!74693 c!11283) b!74692))

(assert (= (and b!74693 (not c!11283)) b!74696))

(declare-fun m!74007 () Bool)

(assert (=> d!17725 m!74007))

(assert (=> d!17725 m!71397))

(declare-fun m!74009 () Bool)

(assert (=> d!17725 m!74009))

(declare-fun m!74011 () Bool)

(assert (=> d!17725 m!74011))

(assert (=> d!17725 m!74009))

(assert (=> d!17725 m!71397))

(declare-fun m!74013 () Bool)

(assert (=> d!17725 m!74013))

(declare-fun m!74015 () Bool)

(assert (=> d!17725 m!74015))

(assert (=> d!17725 m!71423))

(declare-fun m!74017 () Bool)

(assert (=> b!74695 m!74017))

(assert (=> b!74696 m!71397))

(declare-fun m!74019 () Bool)

(assert (=> b!74696 m!74019))

(assert (=> b!73275 d!17725))

(declare-fun d!17727 () Bool)

(declare-fun res!39470 () Bool)

(declare-fun e!48811 () Bool)

(assert (=> d!17727 (=> res!39470 e!48811)))

(assert (=> d!17727 (= res!39470 (and ((_ is Cons!1503) lt!32863) (= (_1!1083 (h!2090 lt!32863)) (_1!1083 lt!32482))))))

(assert (=> d!17727 (= (containsKey!136 lt!32863 (_1!1083 lt!32482)) e!48811)))

(declare-fun b!74697 () Bool)

(declare-fun e!48812 () Bool)

(assert (=> b!74697 (= e!48811 e!48812)))

(declare-fun res!39471 () Bool)

(assert (=> b!74697 (=> (not res!39471) (not e!48812))))

(assert (=> b!74697 (= res!39471 (and (or (not ((_ is Cons!1503) lt!32863)) (bvsle (_1!1083 (h!2090 lt!32863)) (_1!1083 lt!32482))) ((_ is Cons!1503) lt!32863) (bvslt (_1!1083 (h!2090 lt!32863)) (_1!1083 lt!32482))))))

(declare-fun b!74698 () Bool)

(assert (=> b!74698 (= e!48812 (containsKey!136 (t!5068 lt!32863) (_1!1083 lt!32482)))))

(assert (= (and d!17727 (not res!39470)) b!74697))

(assert (= (and b!74697 res!39471) b!74698))

(declare-fun m!74021 () Bool)

(assert (=> b!74698 m!74021))

(assert (=> b!73460 d!17727))

(declare-fun b!74702 () Bool)

(declare-fun e!48814 () Option!138)

(assert (=> b!74702 (= e!48814 None!136)))

(declare-fun b!74700 () Bool)

(declare-fun e!48813 () Option!138)

(assert (=> b!74700 (= e!48813 e!48814)))

(declare-fun c!11285 () Bool)

(assert (=> b!74700 (= c!11285 (and ((_ is Cons!1503) (toList!735 lt!33085)) (not (= (_1!1083 (h!2090 (toList!735 lt!33085))) (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))))

(declare-fun b!74699 () Bool)

(assert (=> b!74699 (= e!48813 (Some!137 (_2!1083 (h!2090 (toList!735 lt!33085)))))))

(declare-fun d!17729 () Bool)

(declare-fun c!11284 () Bool)

(assert (=> d!17729 (= c!11284 (and ((_ is Cons!1503) (toList!735 lt!33085)) (= (_1!1083 (h!2090 (toList!735 lt!33085))) (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))))

(assert (=> d!17729 (= (getValueByKey!132 (toList!735 lt!33085) (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))) e!48813)))

(declare-fun b!74701 () Bool)

(assert (=> b!74701 (= e!48814 (getValueByKey!132 (t!5068 (toList!735 lt!33085)) (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (= (and d!17729 c!11284) b!74699))

(assert (= (and d!17729 (not c!11284)) b!74700))

(assert (= (and b!74700 c!11285) b!74701))

(assert (= (and b!74700 (not c!11285)) b!74702))

(declare-fun m!74023 () Bool)

(assert (=> b!74701 m!74023))

(assert (=> b!73708 d!17729))

(declare-fun lt!33579 () Bool)

(declare-fun d!17731 () Bool)

(assert (=> d!17731 (= lt!33579 (select (content!76 (toList!735 lt!32800)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))

(declare-fun e!48815 () Bool)

(assert (=> d!17731 (= lt!33579 e!48815)))

(declare-fun res!39473 () Bool)

(assert (=> d!17731 (=> (not res!39473) (not e!48815))))

(assert (=> d!17731 (= res!39473 ((_ is Cons!1503) (toList!735 lt!32800)))))

(assert (=> d!17731 (= (contains!730 (toList!735 lt!32800) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)) lt!33579)))

(declare-fun b!74703 () Bool)

(declare-fun e!48816 () Bool)

(assert (=> b!74703 (= e!48815 e!48816)))

(declare-fun res!39472 () Bool)

(assert (=> b!74703 (=> res!39472 e!48816)))

(assert (=> b!74703 (= res!39472 (= (h!2090 (toList!735 lt!32800)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))

(declare-fun b!74704 () Bool)

(assert (=> b!74704 (= e!48816 (contains!730 (t!5068 (toList!735 lt!32800)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))

(assert (= (and d!17731 res!39473) b!74703))

(assert (= (and b!74703 (not res!39472)) b!74704))

(declare-fun m!74025 () Bool)

(assert (=> d!17731 m!74025))

(declare-fun m!74027 () Bool)

(assert (=> d!17731 m!74027))

(declare-fun m!74029 () Bool)

(assert (=> b!74704 m!74029))

(assert (=> b!73339 d!17731))

(declare-fun d!17733 () Bool)

(declare-fun res!39474 () Bool)

(declare-fun e!48817 () Bool)

(assert (=> d!17733 (=> res!39474 e!48817)))

(assert (=> d!17733 (= res!39474 (and ((_ is Cons!1503) lt!32724) (= (_1!1083 (h!2090 lt!32724)) (_1!1083 lt!32472))))))

(assert (=> d!17733 (= (containsKey!136 lt!32724 (_1!1083 lt!32472)) e!48817)))

(declare-fun b!74705 () Bool)

(declare-fun e!48818 () Bool)

(assert (=> b!74705 (= e!48817 e!48818)))

(declare-fun res!39475 () Bool)

(assert (=> b!74705 (=> (not res!39475) (not e!48818))))

(assert (=> b!74705 (= res!39475 (and (or (not ((_ is Cons!1503) lt!32724)) (bvsle (_1!1083 (h!2090 lt!32724)) (_1!1083 lt!32472))) ((_ is Cons!1503) lt!32724) (bvslt (_1!1083 (h!2090 lt!32724)) (_1!1083 lt!32472))))))

(declare-fun b!74706 () Bool)

(assert (=> b!74706 (= e!48818 (containsKey!136 (t!5068 lt!32724) (_1!1083 lt!32472)))))

(assert (= (and d!17733 (not res!39474)) b!74705))

(assert (= (and b!74705 res!39475) b!74706))

(declare-fun m!74031 () Bool)

(assert (=> b!74706 m!74031))

(assert (=> b!73497 d!17733))

(declare-fun b!74725 () Bool)

(declare-fun e!48829 () SeekEntryResult!246)

(assert (=> b!74725 (= e!48829 (Intermediate!246 false (toIndex!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (mask!6180 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun d!17735 () Bool)

(declare-fun e!48832 () Bool)

(assert (=> d!17735 e!48832))

(declare-fun c!11294 () Bool)

(declare-fun lt!33584 () SeekEntryResult!246)

(assert (=> d!17735 (= c!11294 (and ((_ is Intermediate!246) lt!33584) (undefined!1058 lt!33584)))))

(declare-fun e!48831 () SeekEntryResult!246)

(assert (=> d!17735 (= lt!33584 e!48831)))

(declare-fun c!11293 () Bool)

(assert (=> d!17735 (= c!11293 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!33585 () (_ BitVec 64))

(assert (=> d!17735 (= lt!33585 (select (arr!1858 (_keys!3865 newMap!16)) (toIndex!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (mask!6180 newMap!16))))))

(assert (=> d!17735 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17735 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (mask!6180 newMap!16)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)) lt!33584)))

(declare-fun b!74726 () Bool)

(assert (=> b!74726 (= e!48831 (Intermediate!246 true (toIndex!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (mask!6180 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!74727 () Bool)

(assert (=> b!74727 (= e!48832 (bvsge (x!11162 lt!33584) #b01111111111111111111111111111110))))

(declare-fun b!74728 () Bool)

(assert (=> b!74728 (= e!48829 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (mask!6180 newMap!16)) #b00000000000000000000000000000000 (mask!6180 newMap!16)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (_keys!3865 newMap!16) (mask!6180 newMap!16)))))

(declare-fun b!74729 () Bool)

(assert (=> b!74729 (and (bvsge (index!3117 lt!33584) #b00000000000000000000000000000000) (bvslt (index!3117 lt!33584) (size!2096 (_keys!3865 newMap!16))))))

(declare-fun res!39484 () Bool)

(assert (=> b!74729 (= res!39484 (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3117 lt!33584)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48830 () Bool)

(assert (=> b!74729 (=> res!39484 e!48830)))

(declare-fun b!74730 () Bool)

(assert (=> b!74730 (and (bvsge (index!3117 lt!33584) #b00000000000000000000000000000000) (bvslt (index!3117 lt!33584) (size!2096 (_keys!3865 newMap!16))))))

(assert (=> b!74730 (= e!48830 (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3117 lt!33584)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74731 () Bool)

(declare-fun e!48833 () Bool)

(assert (=> b!74731 (= e!48832 e!48833)))

(declare-fun res!39483 () Bool)

(assert (=> b!74731 (= res!39483 (and ((_ is Intermediate!246) lt!33584) (not (undefined!1058 lt!33584)) (bvslt (x!11162 lt!33584) #b01111111111111111111111111111110) (bvsge (x!11162 lt!33584) #b00000000000000000000000000000000) (bvsge (x!11162 lt!33584) #b00000000000000000000000000000000)))))

(assert (=> b!74731 (=> (not res!39483) (not e!48833))))

(declare-fun b!74732 () Bool)

(assert (=> b!74732 (and (bvsge (index!3117 lt!33584) #b00000000000000000000000000000000) (bvslt (index!3117 lt!33584) (size!2096 (_keys!3865 newMap!16))))))

(declare-fun res!39482 () Bool)

(assert (=> b!74732 (= res!39482 (= (select (arr!1858 (_keys!3865 newMap!16)) (index!3117 lt!33584)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (=> b!74732 (=> res!39482 e!48830)))

(assert (=> b!74732 (= e!48833 e!48830)))

(declare-fun b!74733 () Bool)

(assert (=> b!74733 (= e!48831 e!48829)))

(declare-fun c!11292 () Bool)

(assert (=> b!74733 (= c!11292 (or (= lt!33585 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) (= (bvadd lt!33585 lt!33585) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17735 c!11293) b!74726))

(assert (= (and d!17735 (not c!11293)) b!74733))

(assert (= (and b!74733 c!11292) b!74725))

(assert (= (and b!74733 (not c!11292)) b!74728))

(assert (= (and d!17735 c!11294) b!74727))

(assert (= (and d!17735 (not c!11294)) b!74731))

(assert (= (and b!74731 res!39483) b!74732))

(assert (= (and b!74732 (not res!39482)) b!74729))

(assert (= (and b!74729 (not res!39484)) b!74730))

(assert (=> d!17735 m!71683))

(declare-fun m!74033 () Bool)

(assert (=> d!17735 m!74033))

(assert (=> d!17735 m!71423))

(declare-fun m!74035 () Bool)

(assert (=> b!74732 m!74035))

(assert (=> b!74729 m!74035))

(assert (=> b!74728 m!71683))

(declare-fun m!74037 () Bool)

(assert (=> b!74728 m!74037))

(assert (=> b!74728 m!74037))

(assert (=> b!74728 m!71053))

(declare-fun m!74039 () Bool)

(assert (=> b!74728 m!74039))

(assert (=> b!74730 m!74035))

(assert (=> d!16915 d!17735))

(declare-fun d!17737 () Bool)

(declare-fun lt!33591 () (_ BitVec 32))

(declare-fun lt!33590 () (_ BitVec 32))

(assert (=> d!17737 (= lt!33591 (bvmul (bvxor lt!33590 (bvlshr lt!33590 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!17737 (= lt!33590 ((_ extract 31 0) (bvand (bvxor (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvlshr (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!17737 (and (bvsge (mask!6180 newMap!16) #b00000000000000000000000000000000) (let ((res!39485 (let ((h!2094 ((_ extract 31 0) (bvand (bvxor (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (bvlshr (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11265 (bvmul (bvxor h!2094 (bvlshr h!2094 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11265 (bvlshr x!11265 #b00000000000000000000000000001101)) (mask!6180 newMap!16)))))) (and (bvslt res!39485 (bvadd (mask!6180 newMap!16) #b00000000000000000000000000000001)) (bvsge res!39485 #b00000000000000000000000000000000))))))

(assert (=> d!17737 (= (toIndex!0 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) (mask!6180 newMap!16)) (bvand (bvxor lt!33591 (bvlshr lt!33591 #b00000000000000000000000000001101)) (mask!6180 newMap!16)))))

(assert (=> d!16915 d!17737))

(assert (=> d!16915 d!17091))

(assert (=> bm!6448 d!17077))

(declare-fun d!17739 () Bool)

(declare-fun e!48835 () Bool)

(assert (=> d!17739 e!48835))

(declare-fun res!39486 () Bool)

(assert (=> d!17739 (=> res!39486 e!48835)))

(declare-fun lt!33594 () Bool)

(assert (=> d!17739 (= res!39486 (not lt!33594))))

(declare-fun lt!33592 () Bool)

(assert (=> d!17739 (= lt!33594 lt!33592)))

(declare-fun lt!33593 () Unit!2086)

(declare-fun e!48834 () Unit!2086)

(assert (=> d!17739 (= lt!33593 e!48834)))

(declare-fun c!11295 () Bool)

(assert (=> d!17739 (= c!11295 lt!33592)))

(assert (=> d!17739 (= lt!33592 (containsKey!136 (toList!735 lt!32819) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17739 (= (contains!729 lt!32819 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33594)))

(declare-fun b!74734 () Bool)

(declare-fun lt!33595 () Unit!2086)

(assert (=> b!74734 (= e!48834 lt!33595)))

(assert (=> b!74734 (= lt!33595 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32819) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74734 (isDefined!86 (getValueByKey!132 (toList!735 lt!32819) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74735 () Bool)

(declare-fun Unit!2155 () Unit!2086)

(assert (=> b!74735 (= e!48834 Unit!2155)))

(declare-fun b!74736 () Bool)

(assert (=> b!74736 (= e!48835 (isDefined!86 (getValueByKey!132 (toList!735 lt!32819) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17739 c!11295) b!74734))

(assert (= (and d!17739 (not c!11295)) b!74735))

(assert (= (and d!17739 (not res!39486)) b!74736))

(declare-fun m!74041 () Bool)

(assert (=> d!17739 m!74041))

(declare-fun m!74043 () Bool)

(assert (=> b!74734 m!74043))

(assert (=> b!74734 m!73529))

(assert (=> b!74734 m!73529))

(declare-fun m!74045 () Bool)

(assert (=> b!74734 m!74045))

(assert (=> b!74736 m!73529))

(assert (=> b!74736 m!73529))

(assert (=> b!74736 m!74045))

(assert (=> bm!6458 d!17739))

(declare-fun d!17741 () Bool)

(assert (=> d!17741 (= (apply!75 (+!98 lt!32664 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32672) (apply!75 lt!32664 lt!32672))))

(assert (=> d!17741 true))

(declare-fun _$34!812 () Unit!2086)

(assert (=> d!17741 (= (choose!424 lt!32664 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))) lt!32672) _$34!812)))

(declare-fun bs!3216 () Bool)

(assert (= bs!3216 d!17741))

(assert (=> bs!3216 m!71235))

(assert (=> bs!3216 m!71235))

(assert (=> bs!3216 m!71253))

(assert (=> bs!3216 m!71243))

(assert (=> d!16953 d!17741))

(assert (=> d!16953 d!16961))

(declare-fun d!17743 () Bool)

(declare-fun e!48837 () Bool)

(assert (=> d!17743 e!48837))

(declare-fun res!39487 () Bool)

(assert (=> d!17743 (=> res!39487 e!48837)))

(declare-fun lt!33598 () Bool)

(assert (=> d!17743 (= res!39487 (not lt!33598))))

(declare-fun lt!33596 () Bool)

(assert (=> d!17743 (= lt!33598 lt!33596)))

(declare-fun lt!33597 () Unit!2086)

(declare-fun e!48836 () Unit!2086)

(assert (=> d!17743 (= lt!33597 e!48836)))

(declare-fun c!11296 () Bool)

(assert (=> d!17743 (= c!11296 lt!33596)))

(assert (=> d!17743 (= lt!33596 (containsKey!136 (toList!735 lt!32664) lt!32672))))

(assert (=> d!17743 (= (contains!729 lt!32664 lt!32672) lt!33598)))

(declare-fun b!74737 () Bool)

(declare-fun lt!33599 () Unit!2086)

(assert (=> b!74737 (= e!48836 lt!33599)))

(assert (=> b!74737 (= lt!33599 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32664) lt!32672))))

(assert (=> b!74737 (isDefined!86 (getValueByKey!132 (toList!735 lt!32664) lt!32672))))

(declare-fun b!74738 () Bool)

(declare-fun Unit!2156 () Unit!2086)

(assert (=> b!74738 (= e!48836 Unit!2156)))

(declare-fun b!74739 () Bool)

(assert (=> b!74739 (= e!48837 (isDefined!86 (getValueByKey!132 (toList!735 lt!32664) lt!32672)))))

(assert (= (and d!17743 c!11296) b!74737))

(assert (= (and d!17743 (not c!11296)) b!74738))

(assert (= (and d!17743 (not res!39487)) b!74739))

(declare-fun m!74047 () Bool)

(assert (=> d!17743 m!74047))

(declare-fun m!74049 () Bool)

(assert (=> b!74737 m!74049))

(assert (=> b!74737 m!71833))

(assert (=> b!74737 m!71833))

(declare-fun m!74051 () Bool)

(assert (=> b!74737 m!74051))

(assert (=> b!74739 m!71833))

(assert (=> b!74739 m!71833))

(assert (=> b!74739 m!74051))

(assert (=> d!16953 d!17743))

(assert (=> d!16953 d!16967))

(assert (=> d!16953 d!16969))

(assert (=> b!73707 d!17565))

(assert (=> b!73707 d!17343))

(declare-fun d!17745 () Bool)

(declare-fun e!48839 () Bool)

(assert (=> d!17745 e!48839))

(declare-fun res!39488 () Bool)

(assert (=> d!17745 (=> res!39488 e!48839)))

(declare-fun lt!33602 () Bool)

(assert (=> d!17745 (= res!39488 (not lt!33602))))

(declare-fun lt!33600 () Bool)

(assert (=> d!17745 (= lt!33602 lt!33600)))

(declare-fun lt!33601 () Unit!2086)

(declare-fun e!48838 () Unit!2086)

(assert (=> d!17745 (= lt!33601 e!48838)))

(declare-fun c!11297 () Bool)

(assert (=> d!17745 (= c!11297 lt!33600)))

(assert (=> d!17745 (= lt!33600 (containsKey!136 (toList!735 lt!32849) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17745 (= (contains!729 lt!32849 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33602)))

(declare-fun b!74740 () Bool)

(declare-fun lt!33603 () Unit!2086)

(assert (=> b!74740 (= e!48838 lt!33603)))

(assert (=> b!74740 (= lt!33603 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32849) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74740 (isDefined!86 (getValueByKey!132 (toList!735 lt!32849) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74741 () Bool)

(declare-fun Unit!2157 () Unit!2086)

(assert (=> b!74741 (= e!48838 Unit!2157)))

(declare-fun b!74742 () Bool)

(assert (=> b!74742 (= e!48839 (isDefined!86 (getValueByKey!132 (toList!735 lt!32849) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17745 c!11297) b!74740))

(assert (= (and d!17745 (not c!11297)) b!74741))

(assert (= (and d!17745 (not res!39488)) b!74742))

(declare-fun m!74053 () Bool)

(assert (=> d!17745 m!74053))

(declare-fun m!74055 () Bool)

(assert (=> b!74740 m!74055))

(declare-fun m!74057 () Bool)

(assert (=> b!74740 m!74057))

(assert (=> b!74740 m!74057))

(declare-fun m!74059 () Bool)

(assert (=> b!74740 m!74059))

(assert (=> b!74742 m!74057))

(assert (=> b!74742 m!74057))

(assert (=> b!74742 m!74059))

(assert (=> b!73410 d!17745))

(assert (=> b!73712 d!17631))

(assert (=> b!73712 d!17149))

(declare-fun d!17747 () Bool)

(declare-fun e!48841 () Bool)

(assert (=> d!17747 e!48841))

(declare-fun res!39489 () Bool)

(assert (=> d!17747 (=> res!39489 e!48841)))

(declare-fun lt!33606 () Bool)

(assert (=> d!17747 (= res!39489 (not lt!33606))))

(declare-fun lt!33604 () Bool)

(assert (=> d!17747 (= lt!33606 lt!33604)))

(declare-fun lt!33605 () Unit!2086)

(declare-fun e!48840 () Unit!2086)

(assert (=> d!17747 (= lt!33605 e!48840)))

(declare-fun c!11298 () Bool)

(assert (=> d!17747 (= c!11298 lt!33604)))

(assert (=> d!17747 (= lt!33604 (containsKey!136 (toList!735 lt!32895) (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> d!17747 (= (contains!729 lt!32895 (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33606)))

(declare-fun b!74743 () Bool)

(declare-fun lt!33607 () Unit!2086)

(assert (=> b!74743 (= e!48840 lt!33607)))

(assert (=> b!74743 (= lt!33607 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32895) (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (=> b!74743 (isDefined!86 (getValueByKey!132 (toList!735 lt!32895) (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74744 () Bool)

(declare-fun Unit!2158 () Unit!2086)

(assert (=> b!74744 (= e!48840 Unit!2158)))

(declare-fun b!74745 () Bool)

(assert (=> b!74745 (= e!48841 (isDefined!86 (getValueByKey!132 (toList!735 lt!32895) (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (= (and d!17747 c!11298) b!74743))

(assert (= (and d!17747 (not c!11298)) b!74744))

(assert (= (and d!17747 (not res!39489)) b!74745))

(declare-fun m!74061 () Bool)

(assert (=> d!17747 m!74061))

(declare-fun m!74063 () Bool)

(assert (=> b!74743 m!74063))

(assert (=> b!74743 m!71861))

(assert (=> b!74743 m!71861))

(declare-fun m!74065 () Bool)

(assert (=> b!74743 m!74065))

(assert (=> b!74745 m!71861))

(assert (=> b!74745 m!71861))

(assert (=> b!74745 m!74065))

(assert (=> d!16969 d!17747))

(declare-fun b!74749 () Bool)

(declare-fun e!48843 () Option!138)

(assert (=> b!74749 (= e!48843 None!136)))

(declare-fun b!74747 () Bool)

(declare-fun e!48842 () Option!138)

(assert (=> b!74747 (= e!48842 e!48843)))

(declare-fun c!11300 () Bool)

(assert (=> b!74747 (= c!11300 (and ((_ is Cons!1503) lt!32894) (not (= (_1!1083 (h!2090 lt!32894)) (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun b!74746 () Bool)

(assert (=> b!74746 (= e!48842 (Some!137 (_2!1083 (h!2090 lt!32894))))))

(declare-fun c!11299 () Bool)

(declare-fun d!17749 () Bool)

(assert (=> d!17749 (= c!11299 (and ((_ is Cons!1503) lt!32894) (= (_1!1083 (h!2090 lt!32894)) (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17749 (= (getValueByKey!132 lt!32894 (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) e!48842)))

(declare-fun b!74748 () Bool)

(assert (=> b!74748 (= e!48843 (getValueByKey!132 (t!5068 lt!32894) (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (= (and d!17749 c!11299) b!74746))

(assert (= (and d!17749 (not c!11299)) b!74747))

(assert (= (and b!74747 c!11300) b!74748))

(assert (= (and b!74747 (not c!11300)) b!74749))

(declare-fun m!74067 () Bool)

(assert (=> b!74748 m!74067))

(assert (=> d!16969 d!17749))

(declare-fun d!17751 () Bool)

(assert (=> d!17751 (= (getValueByKey!132 lt!32894 (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) (Some!137 (_2!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun lt!33608 () Unit!2086)

(assert (=> d!17751 (= lt!33608 (choose!422 lt!32894 (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun e!48844 () Bool)

(assert (=> d!17751 e!48844))

(declare-fun res!39490 () Bool)

(assert (=> d!17751 (=> (not res!39490) (not e!48844))))

(assert (=> d!17751 (= res!39490 (isStrictlySorted!287 lt!32894))))

(assert (=> d!17751 (= (lemmaContainsTupThenGetReturnValue!51 lt!32894 (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33608)))

(declare-fun b!74750 () Bool)

(declare-fun res!39491 () Bool)

(assert (=> b!74750 (=> (not res!39491) (not e!48844))))

(assert (=> b!74750 (= res!39491 (containsKey!136 lt!32894 (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74751 () Bool)

(assert (=> b!74751 (= e!48844 (contains!730 lt!32894 (tuple2!2147 (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (= (and d!17751 res!39490) b!74750))

(assert (= (and b!74750 res!39491) b!74751))

(assert (=> d!17751 m!71855))

(declare-fun m!74069 () Bool)

(assert (=> d!17751 m!74069))

(declare-fun m!74071 () Bool)

(assert (=> d!17751 m!74071))

(declare-fun m!74073 () Bool)

(assert (=> b!74750 m!74073))

(declare-fun m!74075 () Bool)

(assert (=> b!74751 m!74075))

(assert (=> d!16969 d!17751))

(declare-fun b!74752 () Bool)

(declare-fun e!48845 () List!1507)

(declare-fun call!6616 () List!1507)

(assert (=> b!74752 (= e!48845 call!6616)))

(declare-fun b!74753 () Bool)

(declare-fun e!48847 () List!1507)

(declare-fun call!6615 () List!1507)

(assert (=> b!74753 (= e!48847 call!6615)))

(declare-fun call!6617 () List!1507)

(declare-fun c!11302 () Bool)

(declare-fun bm!6612 () Bool)

(declare-fun e!48848 () List!1507)

(assert (=> bm!6612 (= call!6617 ($colon$colon!65 e!48848 (ite c!11302 (h!2090 (toList!735 lt!32664)) (tuple2!2147 (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun c!11303 () Bool)

(assert (=> bm!6612 (= c!11303 c!11302)))

(declare-fun b!74755 () Bool)

(declare-fun res!39493 () Bool)

(declare-fun e!48846 () Bool)

(assert (=> b!74755 (=> (not res!39493) (not e!48846))))

(declare-fun lt!33609 () List!1507)

(assert (=> b!74755 (= res!39493 (containsKey!136 lt!33609 (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74756 () Bool)

(declare-fun e!48849 () List!1507)

(assert (=> b!74756 (= e!48849 call!6617)))

(declare-fun c!11301 () Bool)

(declare-fun c!11304 () Bool)

(declare-fun b!74757 () Bool)

(assert (=> b!74757 (= e!48848 (ite c!11304 (t!5068 (toList!735 lt!32664)) (ite c!11301 (Cons!1503 (h!2090 (toList!735 lt!32664)) (t!5068 (toList!735 lt!32664))) Nil!1504)))))

(declare-fun b!74758 () Bool)

(assert (=> b!74758 (= e!48848 (insertStrictlySorted!53 (t!5068 (toList!735 lt!32664)) (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74759 () Bool)

(assert (=> b!74759 (= e!48846 (contains!730 lt!33609 (tuple2!2147 (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun bm!6613 () Bool)

(assert (=> bm!6613 (= call!6616 call!6617)))

(declare-fun b!74760 () Bool)

(assert (=> b!74760 (= e!48849 e!48845)))

(assert (=> b!74760 (= c!11304 (and ((_ is Cons!1503) (toList!735 lt!32664)) (= (_1!1083 (h!2090 (toList!735 lt!32664))) (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(declare-fun b!74754 () Bool)

(assert (=> b!74754 (= c!11301 (and ((_ is Cons!1503) (toList!735 lt!32664)) (bvsgt (_1!1083 (h!2090 (toList!735 lt!32664))) (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> b!74754 (= e!48845 e!48847)))

(declare-fun d!17753 () Bool)

(assert (=> d!17753 e!48846))

(declare-fun res!39492 () Bool)

(assert (=> d!17753 (=> (not res!39492) (not e!48846))))

(assert (=> d!17753 (= res!39492 (isStrictlySorted!287 lt!33609))))

(assert (=> d!17753 (= lt!33609 e!48849)))

(assert (=> d!17753 (= c!11302 (and ((_ is Cons!1503) (toList!735 lt!32664)) (bvslt (_1!1083 (h!2090 (toList!735 lt!32664))) (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17753 (isStrictlySorted!287 (toList!735 lt!32664))))

(assert (=> d!17753 (= (insertStrictlySorted!53 (toList!735 lt!32664) (_1!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) (_2!1083 (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33609)))

(declare-fun b!74761 () Bool)

(assert (=> b!74761 (= e!48847 call!6615)))

(declare-fun bm!6614 () Bool)

(assert (=> bm!6614 (= call!6615 call!6616)))

(assert (= (and d!17753 c!11302) b!74756))

(assert (= (and d!17753 (not c!11302)) b!74760))

(assert (= (and b!74760 c!11304) b!74752))

(assert (= (and b!74760 (not c!11304)) b!74754))

(assert (= (and b!74754 c!11301) b!74761))

(assert (= (and b!74754 (not c!11301)) b!74753))

(assert (= (or b!74761 b!74753) bm!6614))

(assert (= (or b!74752 bm!6614) bm!6613))

(assert (= (or b!74756 bm!6613) bm!6612))

(assert (= (and bm!6612 c!11303) b!74758))

(assert (= (and bm!6612 (not c!11303)) b!74757))

(assert (= (and d!17753 res!39492) b!74755))

(assert (= (and b!74755 res!39493) b!74759))

(declare-fun m!74077 () Bool)

(assert (=> b!74755 m!74077))

(declare-fun m!74079 () Bool)

(assert (=> d!17753 m!74079))

(declare-fun m!74081 () Bool)

(assert (=> d!17753 m!74081))

(declare-fun m!74083 () Bool)

(assert (=> b!74758 m!74083))

(declare-fun m!74085 () Bool)

(assert (=> b!74759 m!74085))

(declare-fun m!74087 () Bool)

(assert (=> bm!6612 m!74087))

(assert (=> d!16969 d!17753))

(declare-fun d!17755 () Bool)

(declare-fun e!48850 () Bool)

(assert (=> d!17755 e!48850))

(declare-fun res!39494 () Bool)

(assert (=> d!17755 (=> (not res!39494) (not e!48850))))

(declare-fun lt!33613 () ListLongMap!1439)

(assert (=> d!17755 (= res!39494 (contains!729 lt!33613 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481))))))

(declare-fun lt!33612 () List!1507)

(assert (=> d!17755 (= lt!33613 (ListLongMap!1440 lt!33612))))

(declare-fun lt!33610 () Unit!2086)

(declare-fun lt!33611 () Unit!2086)

(assert (=> d!17755 (= lt!33610 lt!33611)))

(assert (=> d!17755 (= (getValueByKey!132 lt!33612 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481))) (Some!137 (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481))))))

(assert (=> d!17755 (= lt!33611 (lemmaContainsTupThenGetReturnValue!51 lt!33612 (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481))))))

(assert (=> d!17755 (= lt!33612 (insertStrictlySorted!53 (toList!735 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16))) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481))))))

(assert (=> d!17755 (= (+!98 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481)) lt!33613)))

(declare-fun b!74762 () Bool)

(declare-fun res!39495 () Bool)

(assert (=> b!74762 (=> (not res!39495) (not e!48850))))

(assert (=> b!74762 (= res!39495 (= (getValueByKey!132 (toList!735 lt!33613) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481))) (Some!137 (_2!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481)))))))

(declare-fun b!74763 () Bool)

(assert (=> b!74763 (= e!48850 (contains!730 (toList!735 lt!33613) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481)))))

(assert (= (and d!17755 res!39494) b!74762))

(assert (= (and b!74762 res!39495) b!74763))

(declare-fun m!74089 () Bool)

(assert (=> d!17755 m!74089))

(declare-fun m!74091 () Bool)

(assert (=> d!17755 m!74091))

(declare-fun m!74093 () Bool)

(assert (=> d!17755 m!74093))

(declare-fun m!74095 () Bool)

(assert (=> d!17755 m!74095))

(declare-fun m!74097 () Bool)

(assert (=> b!74762 m!74097))

(declare-fun m!74099 () Bool)

(assert (=> b!74763 m!74099))

(assert (=> d!16939 d!17755))

(assert (=> d!16939 d!16873))

(assert (=> d!16939 d!17091))

(declare-fun b!74764 () Bool)

(declare-fun e!48852 () Bool)

(declare-fun e!48855 () Bool)

(assert (=> b!74764 (= e!48852 e!48855)))

(declare-fun res!39501 () Bool)

(declare-fun call!6623 () Bool)

(assert (=> b!74764 (= res!39501 call!6623)))

(assert (=> b!74764 (=> (not res!39501) (not e!48855))))

(declare-fun b!74765 () Bool)

(declare-fun e!48859 () ListLongMap!1439)

(declare-fun call!6618 () ListLongMap!1439)

(assert (=> b!74765 (= e!48859 call!6618)))

(declare-fun b!74766 () Bool)

(declare-fun call!6619 () ListLongMap!1439)

(assert (=> b!74766 (= e!48859 call!6619)))

(declare-fun bm!6615 () Bool)

(declare-fun lt!33624 () ListLongMap!1439)

(assert (=> bm!6615 (= call!6623 (contains!729 lt!33624 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74767 () Bool)

(declare-fun e!48851 () Bool)

(declare-fun e!48857 () Bool)

(assert (=> b!74767 (= e!48851 e!48857)))

(declare-fun res!39499 () Bool)

(assert (=> b!74767 (=> (not res!39499) (not e!48857))))

(assert (=> b!74767 (= res!39499 (contains!729 lt!33624 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74767 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!74768 () Bool)

(declare-fun e!48853 () Unit!2086)

(declare-fun Unit!2159 () Unit!2086)

(assert (=> b!74768 (= e!48853 Unit!2159)))

(declare-fun bm!6616 () Bool)

(declare-fun call!6620 () ListLongMap!1439)

(assert (=> bm!6616 (= call!6618 call!6620)))

(declare-fun bm!6617 () Bool)

(declare-fun call!6624 () ListLongMap!1439)

(assert (=> bm!6617 (= call!6624 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32610 lt!32481 (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun b!74770 () Bool)

(declare-fun lt!33614 () Unit!2086)

(assert (=> b!74770 (= e!48853 lt!33614)))

(declare-fun lt!33635 () ListLongMap!1439)

(assert (=> b!74770 (= lt!33635 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32610 lt!32481 (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33629 () (_ BitVec 64))

(assert (=> b!74770 (= lt!33629 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33620 () (_ BitVec 64))

(assert (=> b!74770 (= lt!33620 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33617 () Unit!2086)

(assert (=> b!74770 (= lt!33617 (addStillContains!51 lt!33635 lt!33629 lt!32481 lt!33620))))

(assert (=> b!74770 (contains!729 (+!98 lt!33635 (tuple2!2147 lt!33629 lt!32481)) lt!33620)))

(declare-fun lt!33631 () Unit!2086)

(assert (=> b!74770 (= lt!33631 lt!33617)))

(declare-fun lt!33622 () ListLongMap!1439)

(assert (=> b!74770 (= lt!33622 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32610 lt!32481 (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33632 () (_ BitVec 64))

(assert (=> b!74770 (= lt!33632 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33630 () (_ BitVec 64))

(assert (=> b!74770 (= lt!33630 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33634 () Unit!2086)

(assert (=> b!74770 (= lt!33634 (addApplyDifferent!51 lt!33622 lt!33632 (minValue!2115 newMap!16) lt!33630))))

(assert (=> b!74770 (= (apply!75 (+!98 lt!33622 (tuple2!2147 lt!33632 (minValue!2115 newMap!16))) lt!33630) (apply!75 lt!33622 lt!33630))))

(declare-fun lt!33619 () Unit!2086)

(assert (=> b!74770 (= lt!33619 lt!33634)))

(declare-fun lt!33633 () ListLongMap!1439)

(assert (=> b!74770 (= lt!33633 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32610 lt!32481 (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33623 () (_ BitVec 64))

(assert (=> b!74770 (= lt!33623 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33615 () (_ BitVec 64))

(assert (=> b!74770 (= lt!33615 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33621 () Unit!2086)

(assert (=> b!74770 (= lt!33621 (addApplyDifferent!51 lt!33633 lt!33623 lt!32481 lt!33615))))

(assert (=> b!74770 (= (apply!75 (+!98 lt!33633 (tuple2!2147 lt!33623 lt!32481)) lt!33615) (apply!75 lt!33633 lt!33615))))

(declare-fun lt!33625 () Unit!2086)

(assert (=> b!74770 (= lt!33625 lt!33621)))

(declare-fun lt!33628 () ListLongMap!1439)

(assert (=> b!74770 (= lt!33628 (getCurrentListMapNoExtraKeys!62 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32610 lt!32481 (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(declare-fun lt!33618 () (_ BitVec 64))

(assert (=> b!74770 (= lt!33618 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33616 () (_ BitVec 64))

(assert (=> b!74770 (= lt!33616 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74770 (= lt!33614 (addApplyDifferent!51 lt!33628 lt!33618 (minValue!2115 newMap!16) lt!33616))))

(assert (=> b!74770 (= (apply!75 (+!98 lt!33628 (tuple2!2147 lt!33618 (minValue!2115 newMap!16))) lt!33616) (apply!75 lt!33628 lt!33616))))

(declare-fun b!74771 () Bool)

(assert (=> b!74771 (= e!48852 (not call!6623))))

(declare-fun b!74772 () Bool)

(declare-fun res!39500 () Bool)

(declare-fun e!48862 () Bool)

(assert (=> b!74772 (=> (not res!39500) (not e!48862))))

(assert (=> b!74772 (= res!39500 e!48852)))

(declare-fun c!11305 () Bool)

(assert (=> b!74772 (= c!11305 (not (= (bvand lt!32610 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!74773 () Bool)

(declare-fun e!48856 () ListLongMap!1439)

(declare-fun e!48863 () ListLongMap!1439)

(assert (=> b!74773 (= e!48856 e!48863)))

(declare-fun c!11307 () Bool)

(assert (=> b!74773 (= c!11307 (and (not (= (bvand lt!32610 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!32610 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74774 () Bool)

(declare-fun e!48858 () Bool)

(declare-fun e!48854 () Bool)

(assert (=> b!74774 (= e!48858 e!48854)))

(declare-fun res!39504 () Bool)

(declare-fun call!6621 () Bool)

(assert (=> b!74774 (= res!39504 call!6621)))

(assert (=> b!74774 (=> (not res!39504) (not e!48854))))

(declare-fun bm!6618 () Bool)

(assert (=> bm!6618 (= call!6620 call!6624)))

(declare-fun bm!6619 () Bool)

(declare-fun call!6622 () ListLongMap!1439)

(assert (=> bm!6619 (= call!6619 call!6622)))

(declare-fun b!74775 () Bool)

(assert (=> b!74775 (= e!48858 (not call!6621))))

(declare-fun b!74776 () Bool)

(declare-fun res!39497 () Bool)

(assert (=> b!74776 (=> (not res!39497) (not e!48862))))

(assert (=> b!74776 (= res!39497 e!48851)))

(declare-fun res!39496 () Bool)

(assert (=> b!74776 (=> res!39496 e!48851)))

(declare-fun e!48860 () Bool)

(assert (=> b!74776 (= res!39496 (not e!48860))))

(declare-fun res!39498 () Bool)

(assert (=> b!74776 (=> (not res!39498) (not e!48860))))

(assert (=> b!74776 (= res!39498 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun b!74777 () Bool)

(assert (=> b!74777 (= e!48862 e!48858)))

(declare-fun c!11309 () Bool)

(assert (=> b!74777 (= c!11309 (not (= (bvand lt!32610 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74778 () Bool)

(assert (=> b!74778 (= e!48854 (= (apply!75 lt!33624 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2115 newMap!16)))))

(declare-fun b!74779 () Bool)

(assert (=> b!74779 (= e!48863 call!6619)))

(declare-fun bm!6620 () Bool)

(assert (=> bm!6620 (= call!6621 (contains!729 lt!33624 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17757 () Bool)

(assert (=> d!17757 e!48862))

(declare-fun res!39502 () Bool)

(assert (=> d!17757 (=> (not res!39502) (not e!48862))))

(assert (=> d!17757 (= res!39502 (or (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))))

(declare-fun lt!33626 () ListLongMap!1439)

(assert (=> d!17757 (= lt!33624 lt!33626)))

(declare-fun lt!33627 () Unit!2086)

(assert (=> d!17757 (= lt!33627 e!48853)))

(declare-fun c!11308 () Bool)

(declare-fun e!48861 () Bool)

(assert (=> d!17757 (= c!11308 e!48861)))

(declare-fun res!39503 () Bool)

(assert (=> d!17757 (=> (not res!39503) (not e!48861))))

(assert (=> d!17757 (= res!39503 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(assert (=> d!17757 (= lt!33626 e!48856)))

(declare-fun c!11306 () Bool)

(assert (=> d!17757 (= c!11306 (and (not (= (bvand lt!32610 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!32610 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17757 (validMask!0 (mask!6180 newMap!16))))

(assert (=> d!17757 (= (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32610 lt!32481 (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) lt!33624)))

(declare-fun b!74769 () Bool)

(assert (=> b!74769 (= e!48855 (= (apply!75 lt!33624 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32481))))

(declare-fun b!74780 () Bool)

(assert (=> b!74780 (= e!48860 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74781 () Bool)

(declare-fun c!11310 () Bool)

(assert (=> b!74781 (= c!11310 (and (not (= (bvand lt!32610 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!32610 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!74781 (= e!48863 e!48859)))

(declare-fun b!74782 () Bool)

(assert (=> b!74782 (= e!48861 (validKeyInArray!0 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74783 () Bool)

(assert (=> b!74783 (= e!48857 (= (apply!75 lt!33624 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1154 (select (arr!1859 (_values!2196 newMap!16)) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74783 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_values!2196 newMap!16))))))

(assert (=> b!74783 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 newMap!16))))))

(declare-fun bm!6621 () Bool)

(assert (=> bm!6621 (= call!6622 (+!98 (ite c!11306 call!6624 (ite c!11307 call!6620 call!6618)) (ite (or c!11306 c!11307) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16)))))))

(declare-fun b!74784 () Bool)

(assert (=> b!74784 (= e!48856 (+!98 call!6622 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 newMap!16))))))

(assert (= (and d!17757 c!11306) b!74784))

(assert (= (and d!17757 (not c!11306)) b!74773))

(assert (= (and b!74773 c!11307) b!74779))

(assert (= (and b!74773 (not c!11307)) b!74781))

(assert (= (and b!74781 c!11310) b!74766))

(assert (= (and b!74781 (not c!11310)) b!74765))

(assert (= (or b!74766 b!74765) bm!6616))

(assert (= (or b!74779 bm!6616) bm!6618))

(assert (= (or b!74779 b!74766) bm!6619))

(assert (= (or b!74784 bm!6618) bm!6617))

(assert (= (or b!74784 bm!6619) bm!6621))

(assert (= (and d!17757 res!39503) b!74782))

(assert (= (and d!17757 c!11308) b!74770))

(assert (= (and d!17757 (not c!11308)) b!74768))

(assert (= (and d!17757 res!39502) b!74776))

(assert (= (and b!74776 res!39498) b!74780))

(assert (= (and b!74776 (not res!39496)) b!74767))

(assert (= (and b!74767 res!39499) b!74783))

(assert (= (and b!74776 res!39497) b!74772))

(assert (= (and b!74772 c!11305) b!74764))

(assert (= (and b!74772 (not c!11305)) b!74771))

(assert (= (and b!74764 res!39501) b!74769))

(assert (= (or b!74764 b!74771) bm!6615))

(assert (= (and b!74772 res!39500) b!74777))

(assert (= (and b!74777 c!11309) b!74774))

(assert (= (and b!74777 (not c!11309)) b!74775))

(assert (= (and b!74774 res!39504) b!74778))

(assert (= (or b!74774 b!74775) bm!6620))

(declare-fun b_lambda!3349 () Bool)

(assert (=> (not b_lambda!3349) (not b!74783)))

(assert (=> b!74783 t!5077))

(declare-fun b_and!4573 () Bool)

(assert (= b_and!4569 (and (=> t!5077 result!2697) b_and!4573)))

(assert (=> b!74783 t!5079))

(declare-fun b_and!4575 () Bool)

(assert (= b_and!4571 (and (=> t!5079 result!2699) b_and!4575)))

(declare-fun m!74101 () Bool)

(assert (=> bm!6621 m!74101))

(declare-fun m!74103 () Bool)

(assert (=> b!74769 m!74103))

(declare-fun m!74105 () Bool)

(assert (=> bm!6617 m!74105))

(assert (=> b!74780 m!71397))

(assert (=> b!74780 m!71397))

(assert (=> b!74780 m!71411))

(declare-fun m!74107 () Bool)

(assert (=> b!74784 m!74107))

(declare-fun m!74109 () Bool)

(assert (=> bm!6615 m!74109))

(declare-fun m!74111 () Bool)

(assert (=> b!74770 m!74111))

(declare-fun m!74113 () Bool)

(assert (=> b!74770 m!74113))

(declare-fun m!74115 () Bool)

(assert (=> b!74770 m!74115))

(assert (=> b!74770 m!71397))

(declare-fun m!74117 () Bool)

(assert (=> b!74770 m!74117))

(declare-fun m!74119 () Bool)

(assert (=> b!74770 m!74119))

(declare-fun m!74121 () Bool)

(assert (=> b!74770 m!74121))

(assert (=> b!74770 m!74117))

(declare-fun m!74123 () Bool)

(assert (=> b!74770 m!74123))

(assert (=> b!74770 m!74105))

(declare-fun m!74125 () Bool)

(assert (=> b!74770 m!74125))

(assert (=> b!74770 m!74113))

(declare-fun m!74127 () Bool)

(assert (=> b!74770 m!74127))

(assert (=> b!74770 m!74111))

(declare-fun m!74129 () Bool)

(assert (=> b!74770 m!74129))

(declare-fun m!74131 () Bool)

(assert (=> b!74770 m!74131))

(assert (=> b!74770 m!74115))

(declare-fun m!74133 () Bool)

(assert (=> b!74770 m!74133))

(declare-fun m!74135 () Bool)

(assert (=> b!74770 m!74135))

(declare-fun m!74137 () Bool)

(assert (=> b!74770 m!74137))

(declare-fun m!74139 () Bool)

(assert (=> b!74770 m!74139))

(assert (=> b!74767 m!71397))

(assert (=> b!74767 m!71397))

(declare-fun m!74141 () Bool)

(assert (=> b!74767 m!74141))

(declare-fun m!74143 () Bool)

(assert (=> bm!6620 m!74143))

(assert (=> b!74783 m!71397))

(assert (=> b!74783 m!71397))

(declare-fun m!74145 () Bool)

(assert (=> b!74783 m!74145))

(assert (=> b!74783 m!71521))

(assert (=> b!74783 m!71523))

(assert (=> b!74783 m!71523))

(assert (=> b!74783 m!71521))

(assert (=> b!74783 m!71525))

(assert (=> b!74782 m!71397))

(assert (=> b!74782 m!71397))

(assert (=> b!74782 m!71411))

(declare-fun m!74147 () Bool)

(assert (=> b!74778 m!74147))

(assert (=> d!17757 m!71423))

(assert (=> d!16939 d!17757))

(declare-fun d!17759 () Bool)

(assert (=> d!17759 (= (+!98 (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) (zeroValue!2115 newMap!16) (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (getCurrentListMap!426 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) lt!32610 lt!32481 (minValue!2115 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2213 newMap!16)))))

(assert (=> d!17759 true))

(declare-fun _$7!62 () Unit!2086)

(assert (=> d!17759 (= (choose!423 (_keys!3865 newMap!16) (_values!2196 newMap!16) (mask!6180 newMap!16) (extraKeys!2072 newMap!16) lt!32610 (zeroValue!2115 newMap!16) lt!32481 (minValue!2115 newMap!16) (defaultEntry!2213 newMap!16)) _$7!62)))

(declare-fun bs!3217 () Bool)

(assert (= bs!3217 d!17759))

(assert (=> bs!3217 m!71191))

(assert (=> bs!3217 m!71191))

(assert (=> bs!3217 m!71769))

(assert (=> bs!3217 m!71767))

(assert (=> d!16939 d!17759))

(declare-fun d!17761 () Bool)

(declare-fun e!48865 () Bool)

(assert (=> d!17761 e!48865))

(declare-fun res!39505 () Bool)

(assert (=> d!17761 (=> res!39505 e!48865)))

(declare-fun lt!33638 () Bool)

(assert (=> d!17761 (= res!39505 (not lt!33638))))

(declare-fun lt!33636 () Bool)

(assert (=> d!17761 (= lt!33638 lt!33636)))

(declare-fun lt!33637 () Unit!2086)

(declare-fun e!48864 () Unit!2086)

(assert (=> d!17761 (= lt!33637 e!48864)))

(declare-fun c!11311 () Bool)

(assert (=> d!17761 (= c!11311 lt!33636)))

(assert (=> d!17761 (= lt!33636 (containsKey!136 (toList!735 lt!33085) (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (=> d!17761 (= (contains!729 lt!33085 (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))) lt!33638)))

(declare-fun b!74785 () Bool)

(declare-fun lt!33639 () Unit!2086)

(assert (=> b!74785 (= e!48864 lt!33639)))

(assert (=> b!74785 (= lt!33639 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!33085) (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (=> b!74785 (isDefined!86 (getValueByKey!132 (toList!735 lt!33085) (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(declare-fun b!74786 () Bool)

(declare-fun Unit!2160 () Unit!2086)

(assert (=> b!74786 (= e!48864 Unit!2160)))

(declare-fun b!74787 () Bool)

(assert (=> b!74787 (= e!48865 (isDefined!86 (getValueByKey!132 (toList!735 lt!33085) (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))))

(assert (= (and d!17761 c!11311) b!74785))

(assert (= (and d!17761 (not c!11311)) b!74786))

(assert (= (and d!17761 (not res!39505)) b!74787))

(declare-fun m!74149 () Bool)

(assert (=> d!17761 m!74149))

(declare-fun m!74151 () Bool)

(assert (=> b!74785 m!74151))

(assert (=> b!74785 m!72183))

(assert (=> b!74785 m!72183))

(declare-fun m!74153 () Bool)

(assert (=> b!74785 m!74153))

(assert (=> b!74787 m!72183))

(assert (=> b!74787 m!72183))

(assert (=> b!74787 m!74153))

(assert (=> d!17039 d!17761))

(declare-fun b!74791 () Bool)

(declare-fun e!48867 () Option!138)

(assert (=> b!74791 (= e!48867 None!136)))

(declare-fun b!74789 () Bool)

(declare-fun e!48866 () Option!138)

(assert (=> b!74789 (= e!48866 e!48867)))

(declare-fun c!11313 () Bool)

(assert (=> b!74789 (= c!11313 (and ((_ is Cons!1503) lt!33084) (not (= (_1!1083 (h!2090 lt!33084)) (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))))

(declare-fun b!74788 () Bool)

(assert (=> b!74788 (= e!48866 (Some!137 (_2!1083 (h!2090 lt!33084))))))

(declare-fun c!11312 () Bool)

(declare-fun d!17763 () Bool)

(assert (=> d!17763 (= c!11312 (and ((_ is Cons!1503) lt!33084) (= (_1!1083 (h!2090 lt!33084)) (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))))

(assert (=> d!17763 (= (getValueByKey!132 lt!33084 (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))) e!48866)))

(declare-fun b!74790 () Bool)

(assert (=> b!74790 (= e!48867 (getValueByKey!132 (t!5068 lt!33084) (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(assert (= (and d!17763 c!11312) b!74788))

(assert (= (and d!17763 (not c!11312)) b!74789))

(assert (= (and b!74789 c!11313) b!74790))

(assert (= (and b!74789 (not c!11313)) b!74791))

(declare-fun m!74155 () Bool)

(assert (=> b!74790 m!74155))

(assert (=> d!17039 d!17763))

(declare-fun d!17765 () Bool)

(assert (=> d!17765 (= (getValueByKey!132 lt!33084 (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))) (Some!137 (_2!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(declare-fun lt!33640 () Unit!2086)

(assert (=> d!17765 (= lt!33640 (choose!422 lt!33084 (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (_2!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(declare-fun e!48868 () Bool)

(assert (=> d!17765 e!48868))

(declare-fun res!39506 () Bool)

(assert (=> d!17765 (=> (not res!39506) (not e!48868))))

(assert (=> d!17765 (= res!39506 (isStrictlySorted!287 lt!33084))))

(assert (=> d!17765 (= (lemmaContainsTupThenGetReturnValue!51 lt!33084 (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (_2!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))) lt!33640)))

(declare-fun b!74792 () Bool)

(declare-fun res!39507 () Bool)

(assert (=> b!74792 (=> (not res!39507) (not e!48868))))

(assert (=> b!74792 (= res!39507 (containsKey!136 lt!33084 (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(declare-fun b!74793 () Bool)

(assert (=> b!74793 (= e!48868 (contains!730 lt!33084 (tuple2!2147 (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (_2!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))))

(assert (= (and d!17765 res!39506) b!74792))

(assert (= (and b!74792 res!39507) b!74793))

(assert (=> d!17765 m!72177))

(declare-fun m!74157 () Bool)

(assert (=> d!17765 m!74157))

(declare-fun m!74159 () Bool)

(assert (=> d!17765 m!74159))

(declare-fun m!74161 () Bool)

(assert (=> b!74792 m!74161))

(declare-fun m!74163 () Bool)

(assert (=> b!74793 m!74163))

(assert (=> d!17039 d!17765))

(declare-fun b!74794 () Bool)

(declare-fun e!48869 () List!1507)

(declare-fun call!6626 () List!1507)

(assert (=> b!74794 (= e!48869 call!6626)))

(declare-fun b!74795 () Bool)

(declare-fun e!48871 () List!1507)

(declare-fun call!6625 () List!1507)

(assert (=> b!74795 (= e!48871 call!6625)))

(declare-fun c!11315 () Bool)

(declare-fun call!6627 () List!1507)

(declare-fun bm!6622 () Bool)

(declare-fun e!48872 () List!1507)

(assert (=> bm!6622 (= call!6627 ($colon$colon!65 e!48872 (ite c!11315 (h!2090 (toList!735 (ite c!10836 call!6402 call!6396))) (tuple2!2147 (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (_2!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))))

(declare-fun c!11316 () Bool)

(assert (=> bm!6622 (= c!11316 c!11315)))

(declare-fun b!74797 () Bool)

(declare-fun res!39509 () Bool)

(declare-fun e!48870 () Bool)

(assert (=> b!74797 (=> (not res!39509) (not e!48870))))

(declare-fun lt!33641 () List!1507)

(assert (=> b!74797 (= res!39509 (containsKey!136 lt!33641 (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(declare-fun b!74798 () Bool)

(declare-fun e!48873 () List!1507)

(assert (=> b!74798 (= e!48873 call!6627)))

(declare-fun b!74799 () Bool)

(declare-fun c!11314 () Bool)

(declare-fun c!11317 () Bool)

(assert (=> b!74799 (= e!48872 (ite c!11317 (t!5068 (toList!735 (ite c!10836 call!6402 call!6396))) (ite c!11314 (Cons!1503 (h!2090 (toList!735 (ite c!10836 call!6402 call!6396))) (t!5068 (toList!735 (ite c!10836 call!6402 call!6396)))) Nil!1504)))))

(declare-fun b!74800 () Bool)

(assert (=> b!74800 (= e!48872 (insertStrictlySorted!53 (t!5068 (toList!735 (ite c!10836 call!6402 call!6396))) (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (_2!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))))))

(declare-fun b!74801 () Bool)

(assert (=> b!74801 (= e!48870 (contains!730 lt!33641 (tuple2!2147 (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (_2!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))))

(declare-fun bm!6623 () Bool)

(assert (=> bm!6623 (= call!6626 call!6627)))

(declare-fun b!74802 () Bool)

(assert (=> b!74802 (= e!48873 e!48869)))

(assert (=> b!74802 (= c!11317 (and ((_ is Cons!1503) (toList!735 (ite c!10836 call!6402 call!6396))) (= (_1!1083 (h!2090 (toList!735 (ite c!10836 call!6402 call!6396)))) (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))))

(declare-fun b!74796 () Bool)

(assert (=> b!74796 (= c!11314 (and ((_ is Cons!1503) (toList!735 (ite c!10836 call!6402 call!6396))) (bvsgt (_1!1083 (h!2090 (toList!735 (ite c!10836 call!6402 call!6396)))) (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))))

(assert (=> b!74796 (= e!48869 e!48871)))

(declare-fun d!17767 () Bool)

(assert (=> d!17767 e!48870))

(declare-fun res!39508 () Bool)

(assert (=> d!17767 (=> (not res!39508) (not e!48870))))

(assert (=> d!17767 (= res!39508 (isStrictlySorted!287 lt!33641))))

(assert (=> d!17767 (= lt!33641 e!48873)))

(assert (=> d!17767 (= c!11315 (and ((_ is Cons!1503) (toList!735 (ite c!10836 call!6402 call!6396))) (bvslt (_1!1083 (h!2090 (toList!735 (ite c!10836 call!6402 call!6396)))) (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))))

(assert (=> d!17767 (isStrictlySorted!287 (toList!735 (ite c!10836 call!6402 call!6396)))))

(assert (=> d!17767 (= (insertStrictlySorted!53 (toList!735 (ite c!10836 call!6402 call!6396)) (_1!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) (_2!1083 (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481)))) lt!33641)))

(declare-fun b!74803 () Bool)

(assert (=> b!74803 (= e!48871 call!6625)))

(declare-fun bm!6624 () Bool)

(assert (=> bm!6624 (= call!6625 call!6626)))

(assert (= (and d!17767 c!11315) b!74798))

(assert (= (and d!17767 (not c!11315)) b!74802))

(assert (= (and b!74802 c!11317) b!74794))

(assert (= (and b!74802 (not c!11317)) b!74796))

(assert (= (and b!74796 c!11314) b!74803))

(assert (= (and b!74796 (not c!11314)) b!74795))

(assert (= (or b!74803 b!74795) bm!6624))

(assert (= (or b!74794 bm!6624) bm!6623))

(assert (= (or b!74798 bm!6623) bm!6622))

(assert (= (and bm!6622 c!11316) b!74800))

(assert (= (and bm!6622 (not c!11316)) b!74799))

(assert (= (and d!17767 res!39508) b!74797))

(assert (= (and b!74797 res!39509) b!74801))

(declare-fun m!74165 () Bool)

(assert (=> b!74797 m!74165))

(declare-fun m!74167 () Bool)

(assert (=> d!17767 m!74167))

(declare-fun m!74169 () Bool)

(assert (=> d!17767 m!74169))

(declare-fun m!74171 () Bool)

(assert (=> b!74800 m!74171))

(declare-fun m!74173 () Bool)

(assert (=> b!74801 m!74173))

(declare-fun m!74175 () Bool)

(assert (=> bm!6622 m!74175))

(assert (=> d!17039 d!17767))

(declare-fun d!17769 () Bool)

(assert (=> d!17769 (= (get!1158 (getValueByKey!132 (toList!735 lt!32664) lt!32672)) (v!2537 (getValueByKey!132 (toList!735 lt!32664) lt!32672)))))

(assert (=> d!16961 d!17769))

(declare-fun b!74807 () Bool)

(declare-fun e!48875 () Option!138)

(assert (=> b!74807 (= e!48875 None!136)))

(declare-fun b!74805 () Bool)

(declare-fun e!48874 () Option!138)

(assert (=> b!74805 (= e!48874 e!48875)))

(declare-fun c!11319 () Bool)

(assert (=> b!74805 (= c!11319 (and ((_ is Cons!1503) (toList!735 lt!32664)) (not (= (_1!1083 (h!2090 (toList!735 lt!32664))) lt!32672))))))

(declare-fun b!74804 () Bool)

(assert (=> b!74804 (= e!48874 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32664)))))))

(declare-fun d!17771 () Bool)

(declare-fun c!11318 () Bool)

(assert (=> d!17771 (= c!11318 (and ((_ is Cons!1503) (toList!735 lt!32664)) (= (_1!1083 (h!2090 (toList!735 lt!32664))) lt!32672)))))

(assert (=> d!17771 (= (getValueByKey!132 (toList!735 lt!32664) lt!32672) e!48874)))

(declare-fun b!74806 () Bool)

(assert (=> b!74806 (= e!48875 (getValueByKey!132 (t!5068 (toList!735 lt!32664)) lt!32672))))

(assert (= (and d!17771 c!11318) b!74804))

(assert (= (and d!17771 (not c!11318)) b!74805))

(assert (= (and b!74805 c!11319) b!74806))

(assert (= (and b!74805 (not c!11319)) b!74807))

(declare-fun m!74177 () Bool)

(assert (=> b!74806 m!74177))

(assert (=> d!16961 d!17771))

(declare-fun d!17773 () Bool)

(declare-fun e!48877 () Bool)

(assert (=> d!17773 e!48877))

(declare-fun res!39510 () Bool)

(assert (=> d!17773 (=> res!39510 e!48877)))

(declare-fun lt!33644 () Bool)

(assert (=> d!17773 (= res!39510 (not lt!33644))))

(declare-fun lt!33642 () Bool)

(assert (=> d!17773 (= lt!33644 lt!33642)))

(declare-fun lt!33643 () Unit!2086)

(declare-fun e!48876 () Unit!2086)

(assert (=> d!17773 (= lt!33643 e!48876)))

(declare-fun c!11320 () Bool)

(assert (=> d!17773 (= c!11320 lt!33642)))

(assert (=> d!17773 (= lt!33642 (containsKey!136 (toList!735 lt!32819) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!17773 (= (contains!729 lt!32819 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) lt!33644)))

(declare-fun b!74808 () Bool)

(declare-fun lt!33645 () Unit!2086)

(assert (=> b!74808 (= e!48876 lt!33645)))

(assert (=> b!74808 (= lt!33645 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32819) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74808 (isDefined!86 (getValueByKey!132 (toList!735 lt!32819) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74809 () Bool)

(declare-fun Unit!2161 () Unit!2086)

(assert (=> b!74809 (= e!48876 Unit!2161)))

(declare-fun b!74810 () Bool)

(assert (=> b!74810 (= e!48877 (isDefined!86 (getValueByKey!132 (toList!735 lt!32819) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!17773 c!11320) b!74808))

(assert (= (and d!17773 (not c!11320)) b!74809))

(assert (= (and d!17773 (not res!39510)) b!74810))

(assert (=> d!17773 m!71397))

(declare-fun m!74179 () Bool)

(assert (=> d!17773 m!74179))

(assert (=> b!74808 m!71397))

(declare-fun m!74181 () Bool)

(assert (=> b!74808 m!74181))

(assert (=> b!74808 m!71397))

(assert (=> b!74808 m!72977))

(assert (=> b!74808 m!72977))

(declare-fun m!74183 () Bool)

(assert (=> b!74808 m!74183))

(assert (=> b!74810 m!71397))

(assert (=> b!74810 m!72977))

(assert (=> b!74810 m!72977))

(assert (=> b!74810 m!74183))

(assert (=> b!73349 d!17773))

(declare-fun d!17775 () Bool)

(declare-fun lt!33646 () Bool)

(assert (=> d!17775 (= lt!33646 (select (content!76 lt!33050) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))))))

(declare-fun e!48878 () Bool)

(assert (=> d!17775 (= lt!33646 e!48878)))

(declare-fun res!39512 () Bool)

(assert (=> d!17775 (=> (not res!39512) (not e!48878))))

(assert (=> d!17775 (= res!39512 ((_ is Cons!1503) lt!33050))))

(assert (=> d!17775 (= (contains!730 lt!33050 (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))) lt!33646)))

(declare-fun b!74811 () Bool)

(declare-fun e!48879 () Bool)

(assert (=> b!74811 (= e!48878 e!48879)))

(declare-fun res!39511 () Bool)

(assert (=> b!74811 (=> res!39511 e!48879)))

(assert (=> b!74811 (= res!39511 (= (h!2090 lt!33050) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))))))

(declare-fun b!74812 () Bool)

(assert (=> b!74812 (= e!48879 (contains!730 (t!5068 lt!33050) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))))))

(assert (= (and d!17775 res!39512) b!74811))

(assert (= (and b!74811 (not res!39511)) b!74812))

(declare-fun m!74185 () Bool)

(assert (=> d!17775 m!74185))

(declare-fun m!74187 () Bool)

(assert (=> d!17775 m!74187))

(declare-fun m!74189 () Bool)

(assert (=> b!74812 m!74189))

(assert (=> b!73677 d!17775))

(declare-fun b!74814 () Bool)

(declare-fun res!39516 () Bool)

(declare-fun e!48880 () Bool)

(assert (=> b!74814 (=> (not res!39516) (not e!48880))))

(assert (=> b!74814 (= res!39516 (bvsge (size!2100 (v!2533 (underlying!264 thiss!992))) (_size!397 (v!2533 (underlying!264 thiss!992)))))))

(declare-fun b!74813 () Bool)

(declare-fun res!39514 () Bool)

(assert (=> b!74813 (=> (not res!39514) (not e!48880))))

(assert (=> b!74813 (= res!39514 (and (= (size!2097 (_values!2196 (v!2533 (underlying!264 thiss!992)))) (bvadd (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000001)) (= (size!2096 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) (size!2097 (_values!2196 (v!2533 (underlying!264 thiss!992))))) (bvsge (_size!397 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!397 (v!2533 (underlying!264 thiss!992))) (bvadd (mask!6180 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!74815 () Bool)

(declare-fun res!39513 () Bool)

(assert (=> b!74815 (=> (not res!39513) (not e!48880))))

(assert (=> b!74815 (= res!39513 (= (size!2100 (v!2533 (underlying!264 thiss!992))) (bvadd (_size!397 (v!2533 (underlying!264 thiss!992))) (bvsdiv (bvadd (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!74816 () Bool)

(assert (=> b!74816 (= e!48880 (and (bvsge (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2072 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!397 (v!2533 (underlying!264 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun d!17777 () Bool)

(declare-fun res!39515 () Bool)

(assert (=> d!17777 (=> (not res!39515) (not e!48880))))

(assert (=> d!17777 (= res!39515 (validMask!0 (mask!6180 (v!2533 (underlying!264 thiss!992)))))))

(assert (=> d!17777 (= (simpleValid!50 (v!2533 (underlying!264 thiss!992))) e!48880)))

(assert (= (and d!17777 res!39515) b!74813))

(assert (= (and b!74813 res!39514) b!74814))

(assert (= (and b!74814 res!39516) b!74815))

(assert (= (and b!74815 res!39513) b!74816))

(declare-fun m!74191 () Bool)

(assert (=> b!74814 m!74191))

(assert (=> b!74815 m!74191))

(assert (=> d!17777 m!71093))

(assert (=> d!16913 d!17777))

(declare-fun d!17779 () Bool)

(declare-fun res!39517 () Bool)

(declare-fun e!48881 () Bool)

(assert (=> d!17779 (=> (not res!39517) (not e!48881))))

(assert (=> d!17779 (= res!39517 (simpleValid!50 (_2!1084 lt!32995)))))

(assert (=> d!17779 (= (valid!292 (_2!1084 lt!32995)) e!48881)))

(declare-fun b!74817 () Bool)

(declare-fun res!39518 () Bool)

(assert (=> b!74817 (=> (not res!39518) (not e!48881))))

(assert (=> b!74817 (= res!39518 (= (arrayCountValidKeys!0 (_keys!3865 (_2!1084 lt!32995)) #b00000000000000000000000000000000 (size!2096 (_keys!3865 (_2!1084 lt!32995)))) (_size!397 (_2!1084 lt!32995))))))

(declare-fun b!74818 () Bool)

(declare-fun res!39519 () Bool)

(assert (=> b!74818 (=> (not res!39519) (not e!48881))))

(assert (=> b!74818 (= res!39519 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3865 (_2!1084 lt!32995)) (mask!6180 (_2!1084 lt!32995))))))

(declare-fun b!74819 () Bool)

(assert (=> b!74819 (= e!48881 (arrayNoDuplicates!0 (_keys!3865 (_2!1084 lt!32995)) #b00000000000000000000000000000000 Nil!1505))))

(assert (= (and d!17779 res!39517) b!74817))

(assert (= (and b!74817 res!39518) b!74818))

(assert (= (and b!74818 res!39519) b!74819))

(declare-fun m!74193 () Bool)

(assert (=> d!17779 m!74193))

(declare-fun m!74195 () Bool)

(assert (=> b!74817 m!74195))

(declare-fun m!74197 () Bool)

(assert (=> b!74818 m!74197))

(declare-fun m!74199 () Bool)

(assert (=> b!74819 m!74199))

(assert (=> b!73571 d!17779))

(declare-fun d!17781 () Bool)

(declare-fun res!39520 () Bool)

(declare-fun e!48882 () Bool)

(assert (=> d!17781 (=> res!39520 e!48882)))

(assert (=> d!17781 (= res!39520 (and ((_ is Cons!1503) (toList!735 call!6409)) (= (_1!1083 (h!2090 (toList!735 call!6409))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))))

(assert (=> d!17781 (= (containsKey!136 (toList!735 call!6409) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)) e!48882)))

(declare-fun b!74820 () Bool)

(declare-fun e!48883 () Bool)

(assert (=> b!74820 (= e!48882 e!48883)))

(declare-fun res!39521 () Bool)

(assert (=> b!74820 (=> (not res!39521) (not e!48883))))

(assert (=> b!74820 (= res!39521 (and (or (not ((_ is Cons!1503) (toList!735 call!6409))) (bvsle (_1!1083 (h!2090 (toList!735 call!6409))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))) ((_ is Cons!1503) (toList!735 call!6409)) (bvslt (_1!1083 (h!2090 (toList!735 call!6409))) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355))))))

(declare-fun b!74821 () Bool)

(assert (=> b!74821 (= e!48883 (containsKey!136 (t!5068 (toList!735 call!6409)) (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355)))))

(assert (= (and d!17781 (not res!39520)) b!74820))

(assert (= (and b!74820 res!39521) b!74821))

(assert (=> b!74821 m!71053))

(declare-fun m!74201 () Bool)

(assert (=> b!74821 m!74201))

(assert (=> d!17045 d!17781))

(declare-fun d!17783 () Bool)

(declare-fun e!48885 () Bool)

(assert (=> d!17783 e!48885))

(declare-fun res!39522 () Bool)

(assert (=> d!17783 (=> res!39522 e!48885)))

(declare-fun lt!33649 () Bool)

(assert (=> d!17783 (= res!39522 (not lt!33649))))

(declare-fun lt!33647 () Bool)

(assert (=> d!17783 (= lt!33649 lt!33647)))

(declare-fun lt!33648 () Unit!2086)

(declare-fun e!48884 () Unit!2086)

(assert (=> d!17783 (= lt!33648 e!48884)))

(declare-fun c!11321 () Bool)

(assert (=> d!17783 (= c!11321 lt!33647)))

(assert (=> d!17783 (= lt!33647 (containsKey!136 (toList!735 lt!33062) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!17783 (= (contains!729 lt!33062 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) lt!33649)))

(declare-fun b!74822 () Bool)

(declare-fun lt!33650 () Unit!2086)

(assert (=> b!74822 (= e!48884 lt!33650)))

(assert (=> b!74822 (= lt!33650 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!33062) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74822 (isDefined!86 (getValueByKey!132 (toList!735 lt!33062) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74823 () Bool)

(declare-fun Unit!2162 () Unit!2086)

(assert (=> b!74823 (= e!48884 Unit!2162)))

(declare-fun b!74824 () Bool)

(assert (=> b!74824 (= e!48885 (isDefined!86 (getValueByKey!132 (toList!735 lt!33062) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!17783 c!11321) b!74822))

(assert (= (and d!17783 (not c!11321)) b!74823))

(assert (= (and d!17783 (not res!39522)) b!74824))

(assert (=> d!17783 m!71397))

(declare-fun m!74203 () Bool)

(assert (=> d!17783 m!74203))

(assert (=> b!74822 m!71397))

(declare-fun m!74205 () Bool)

(assert (=> b!74822 m!74205))

(assert (=> b!74822 m!71397))

(assert (=> b!74822 m!73037))

(assert (=> b!74822 m!73037))

(declare-fun m!74207 () Bool)

(assert (=> b!74822 m!74207))

(assert (=> b!74824 m!71397))

(assert (=> b!74824 m!73037))

(assert (=> b!74824 m!73037))

(assert (=> b!74824 m!74207))

(assert (=> b!73685 d!17783))

(declare-fun b!74828 () Bool)

(declare-fun e!48887 () Option!138)

(assert (=> b!74828 (= e!48887 None!136)))

(declare-fun b!74826 () Bool)

(declare-fun e!48886 () Option!138)

(assert (=> b!74826 (= e!48886 e!48887)))

(declare-fun c!11323 () Bool)

(assert (=> b!74826 (= c!11323 (and ((_ is Cons!1503) (t!5068 lt!32720)) (not (= (_1!1083 (h!2090 (t!5068 lt!32720))) (_1!1083 lt!32472)))))))

(declare-fun b!74825 () Bool)

(assert (=> b!74825 (= e!48886 (Some!137 (_2!1083 (h!2090 (t!5068 lt!32720)))))))

(declare-fun d!17785 () Bool)

(declare-fun c!11322 () Bool)

(assert (=> d!17785 (= c!11322 (and ((_ is Cons!1503) (t!5068 lt!32720)) (= (_1!1083 (h!2090 (t!5068 lt!32720))) (_1!1083 lt!32472))))))

(assert (=> d!17785 (= (getValueByKey!132 (t!5068 lt!32720) (_1!1083 lt!32472)) e!48886)))

(declare-fun b!74827 () Bool)

(assert (=> b!74827 (= e!48887 (getValueByKey!132 (t!5068 (t!5068 lt!32720)) (_1!1083 lt!32472)))))

(assert (= (and d!17785 c!11322) b!74825))

(assert (= (and d!17785 (not c!11322)) b!74826))

(assert (= (and b!74826 c!11323) b!74827))

(assert (= (and b!74826 (not c!11323)) b!74828))

(declare-fun m!74209 () Bool)

(assert (=> b!74827 m!74209))

(assert (=> b!73583 d!17785))

(declare-fun b!74832 () Bool)

(declare-fun e!48889 () Option!138)

(assert (=> b!74832 (= e!48889 None!136)))

(declare-fun b!74830 () Bool)

(declare-fun e!48888 () Option!138)

(assert (=> b!74830 (= e!48888 e!48889)))

(declare-fun c!11325 () Bool)

(assert (=> b!74830 (= c!11325 (and ((_ is Cons!1503) (toList!735 lt!32796)) (not (= (_1!1083 (h!2090 (toList!735 lt!32796))) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))))

(declare-fun b!74829 () Bool)

(assert (=> b!74829 (= e!48888 (Some!137 (_2!1083 (h!2090 (toList!735 lt!32796)))))))

(declare-fun d!17787 () Bool)

(declare-fun c!11324 () Bool)

(assert (=> d!17787 (= c!11324 (and ((_ is Cons!1503) (toList!735 lt!32796)) (= (_1!1083 (h!2090 (toList!735 lt!32796))) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))))))))

(assert (=> d!17787 (= (getValueByKey!132 (toList!735 lt!32796) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))) e!48888)))

(declare-fun b!74831 () Bool)

(assert (=> b!74831 (= e!48889 (getValueByKey!132 (t!5068 (toList!735 lt!32796)) (_1!1083 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (= (and d!17787 c!11324) b!74829))

(assert (= (and d!17787 (not c!11324)) b!74830))

(assert (= (and b!74830 c!11325) b!74831))

(assert (= (and b!74830 (not c!11325)) b!74832))

(declare-fun m!74211 () Bool)

(assert (=> b!74831 m!74211))

(assert (=> b!73336 d!17787))

(assert (=> b!73291 d!17139))

(assert (=> d!16875 d!16881))

(assert (=> d!16875 d!16879))

(assert (=> d!16875 d!16883))

(assert (=> d!16875 d!16877))

(declare-fun d!17789 () Bool)

(declare-fun lt!33651 () Bool)

(assert (=> d!17789 (= lt!33651 (select (content!76 lt!32716) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))))))

(declare-fun e!48890 () Bool)

(assert (=> d!17789 (= lt!33651 e!48890)))

(declare-fun res!39524 () Bool)

(assert (=> d!17789 (=> (not res!39524) (not e!48890))))

(assert (=> d!17789 (= res!39524 ((_ is Cons!1503) lt!32716))))

(assert (=> d!17789 (= (contains!730 lt!32716 (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))) lt!33651)))

(declare-fun b!74833 () Bool)

(declare-fun e!48891 () Bool)

(assert (=> b!74833 (= e!48890 e!48891)))

(declare-fun res!39523 () Bool)

(assert (=> b!74833 (=> res!39523 e!48891)))

(assert (=> b!74833 (= res!39523 (= (h!2090 lt!32716) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))))))

(declare-fun b!74834 () Bool)

(assert (=> b!74834 (= e!48891 (contains!730 (t!5068 lt!32716) (tuple2!2147 (_1!1083 lt!32482) (_2!1083 lt!32482))))))

(assert (= (and d!17789 res!39524) b!74833))

(assert (= (and b!74833 (not res!39523)) b!74834))

(declare-fun m!74213 () Bool)

(assert (=> d!17789 m!74213))

(declare-fun m!74215 () Bool)

(assert (=> d!17789 m!74215))

(declare-fun m!74217 () Bool)

(assert (=> b!74834 m!74217))

(assert (=> b!73436 d!17789))

(declare-fun d!17791 () Bool)

(assert (=> d!17791 (= (inRange!0 (index!3116 lt!33040) (mask!6180 newMap!16)) (and (bvsge (index!3116 lt!33040) #b00000000000000000000000000000000) (bvslt (index!3116 lt!33040) (bvadd (mask!6180 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!73651 d!17791))

(assert (=> d!16855 d!16839))

(declare-fun d!17793 () Bool)

(declare-fun lt!33652 () Bool)

(assert (=> d!17793 (= lt!33652 (select (content!76 (toList!735 lt!33085)) (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun e!48892 () Bool)

(assert (=> d!17793 (= lt!33652 e!48892)))

(declare-fun res!39526 () Bool)

(assert (=> d!17793 (=> (not res!39526) (not e!48892))))

(assert (=> d!17793 (= res!39526 ((_ is Cons!1503) (toList!735 lt!33085)))))

(assert (=> d!17793 (= (contains!730 (toList!735 lt!33085) (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))) lt!33652)))

(declare-fun b!74835 () Bool)

(declare-fun e!48893 () Bool)

(assert (=> b!74835 (= e!48892 e!48893)))

(declare-fun res!39525 () Bool)

(assert (=> b!74835 (=> res!39525 e!48893)))

(assert (=> b!74835 (= res!39525 (= (h!2090 (toList!735 lt!33085)) (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(declare-fun b!74836 () Bool)

(assert (=> b!74836 (= e!48893 (contains!730 (t!5068 (toList!735 lt!33085)) (ite c!10836 (ite c!10829 (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32481) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32481)) (tuple2!2147 (select (arr!1858 (_keys!3865 (v!2533 (underlying!264 thiss!992)))) from!355) lt!32481))))))

(assert (= (and d!17793 res!39526) b!74835))

(assert (= (and b!74835 (not res!39525)) b!74836))

(declare-fun m!74219 () Bool)

(assert (=> d!17793 m!74219))

(declare-fun m!74221 () Bool)

(assert (=> d!17793 m!74221))

(declare-fun m!74223 () Bool)

(assert (=> b!74836 m!74223))

(assert (=> b!73709 d!17793))

(declare-fun d!17795 () Bool)

(assert (=> d!17795 (= (apply!75 lt!32773 (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000)) (get!1158 (getValueByKey!132 (toList!735 lt!32773) (select (arr!1858 (_keys!3865 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3218 () Bool)

(assert (= bs!3218 d!17795))

(assert (=> bs!3218 m!71397))

(assert (=> bs!3218 m!73151))

(assert (=> bs!3218 m!73151))

(declare-fun m!74225 () Bool)

(assert (=> bs!3218 m!74225))

(assert (=> b!73330 d!17795))

(declare-fun d!17797 () Bool)

(declare-fun c!11326 () Bool)

(assert (=> d!17797 (= c!11326 ((_ is ValueCellFull!894) (select (arr!1859 (_values!2196 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!48894 () V!2947)

(assert (=> d!17797 (= (get!1154 (select (arr!1859 (_values!2196 newMap!16)) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!48894)))

(declare-fun b!74837 () Bool)

(assert (=> b!74837 (= e!48894 (get!1156 (select (arr!1859 (_values!2196 newMap!16)) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74838 () Bool)

(assert (=> b!74838 (= e!48894 (get!1157 (select (arr!1859 (_values!2196 newMap!16)) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17797 c!11326) b!74837))

(assert (= (and d!17797 (not c!11326)) b!74838))

(assert (=> b!74837 m!71523))

(assert (=> b!74837 m!71521))

(declare-fun m!74227 () Bool)

(assert (=> b!74837 m!74227))

(assert (=> b!74838 m!71523))

(assert (=> b!74838 m!71521))

(declare-fun m!74229 () Bool)

(assert (=> b!74838 m!74229))

(assert (=> b!73330 d!17797))

(declare-fun d!17799 () Bool)

(assert (=> d!17799 (isDefined!86 (getValueByKey!132 (toList!735 lt!32721) (_1!1083 lt!32472)))))

(declare-fun lt!33653 () Unit!2086)

(assert (=> d!17799 (= lt!33653 (choose!421 (toList!735 lt!32721) (_1!1083 lt!32472)))))

(declare-fun e!48895 () Bool)

(assert (=> d!17799 e!48895))

(declare-fun res!39527 () Bool)

(assert (=> d!17799 (=> (not res!39527) (not e!48895))))

(assert (=> d!17799 (= res!39527 (isStrictlySorted!287 (toList!735 lt!32721)))))

(assert (=> d!17799 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32721) (_1!1083 lt!32472)) lt!33653)))

(declare-fun b!74839 () Bool)

(assert (=> b!74839 (= e!48895 (containsKey!136 (toList!735 lt!32721) (_1!1083 lt!32472)))))

(assert (= (and d!17799 res!39527) b!74839))

(assert (=> d!17799 m!71343))

(assert (=> d!17799 m!71343))

(assert (=> d!17799 m!71959))

(declare-fun m!74231 () Bool)

(assert (=> d!17799 m!74231))

(declare-fun m!74233 () Bool)

(assert (=> d!17799 m!74233))

(assert (=> b!74839 m!71955))

(assert (=> b!73578 d!17799))

(assert (=> b!73578 d!17173))

(assert (=> b!73578 d!17009))

(assert (=> b!73565 d!17013))

(assert (=> b!73492 d!17627))

(assert (=> b!73492 d!16907))

(assert (=> d!16977 d!16965))

(assert (=> d!16977 d!16957))

(declare-fun d!17801 () Bool)

(assert (=> d!17801 (contains!729 (+!98 lt!32677 (tuple2!2147 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!32662)))

(assert (=> d!17801 true))

(declare-fun _$35!318 () Unit!2086)

(assert (=> d!17801 (= (choose!425 lt!32677 lt!32671 (zeroValue!2115 (v!2533 (underlying!264 thiss!992))) lt!32662) _$35!318)))

(declare-fun bs!3219 () Bool)

(assert (= bs!3219 d!17801))

(assert (=> bs!3219 m!71241))

(assert (=> bs!3219 m!71241))

(assert (=> bs!3219 m!71247))

(assert (=> d!16977 d!17801))

(declare-fun d!17803 () Bool)

(declare-fun e!48897 () Bool)

(assert (=> d!17803 e!48897))

(declare-fun res!39528 () Bool)

(assert (=> d!17803 (=> res!39528 e!48897)))

(declare-fun lt!33656 () Bool)

(assert (=> d!17803 (= res!39528 (not lt!33656))))

(declare-fun lt!33654 () Bool)

(assert (=> d!17803 (= lt!33656 lt!33654)))

(declare-fun lt!33655 () Unit!2086)

(declare-fun e!48896 () Unit!2086)

(assert (=> d!17803 (= lt!33655 e!48896)))

(declare-fun c!11327 () Bool)

(assert (=> d!17803 (= c!11327 lt!33654)))

(assert (=> d!17803 (= lt!33654 (containsKey!136 (toList!735 lt!32677) lt!32662))))

(assert (=> d!17803 (= (contains!729 lt!32677 lt!32662) lt!33656)))

(declare-fun b!74841 () Bool)

(declare-fun lt!33657 () Unit!2086)

(assert (=> b!74841 (= e!48896 lt!33657)))

(assert (=> b!74841 (= lt!33657 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!735 lt!32677) lt!32662))))

(assert (=> b!74841 (isDefined!86 (getValueByKey!132 (toList!735 lt!32677) lt!32662))))

(declare-fun b!74842 () Bool)

(declare-fun Unit!2163 () Unit!2086)

(assert (=> b!74842 (= e!48896 Unit!2163)))

(declare-fun b!74843 () Bool)

(assert (=> b!74843 (= e!48897 (isDefined!86 (getValueByKey!132 (toList!735 lt!32677) lt!32662)))))

(assert (= (and d!17803 c!11327) b!74841))

(assert (= (and d!17803 (not c!11327)) b!74842))

(assert (= (and d!17803 (not res!39528)) b!74843))

(declare-fun m!74235 () Bool)

(assert (=> d!17803 m!74235))

(declare-fun m!74237 () Bool)

(assert (=> b!74841 m!74237))

(declare-fun m!74239 () Bool)

(assert (=> b!74841 m!74239))

(assert (=> b!74841 m!74239))

(declare-fun m!74241 () Bool)

(assert (=> b!74841 m!74241))

(assert (=> b!74843 m!74239))

(assert (=> b!74843 m!74239))

(assert (=> b!74843 m!74241))

(assert (=> d!16977 d!17803))

(declare-fun d!17805 () Bool)

(declare-fun lt!33658 () Bool)

(assert (=> d!17805 (= lt!33658 (select (content!76 (toList!735 lt!33077)) (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun e!48898 () Bool)

(assert (=> d!17805 (= lt!33658 e!48898)))

(declare-fun res!39530 () Bool)

(assert (=> d!17805 (=> (not res!39530) (not e!48898))))

(assert (=> d!17805 (= res!39530 ((_ is Cons!1503) (toList!735 lt!33077)))))

(assert (=> d!17805 (= (contains!730 (toList!735 lt!33077) (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))) lt!33658)))

(declare-fun b!74844 () Bool)

(declare-fun e!48899 () Bool)

(assert (=> b!74844 (= e!48898 e!48899)))

(declare-fun res!39529 () Bool)

(assert (=> b!74844 (=> res!39529 e!48899)))

(assert (=> b!74844 (= res!39529 (= (h!2090 (toList!735 lt!33077)) (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(declare-fun b!74845 () Bool)

(assert (=> b!74845 (= e!48899 (contains!730 (t!5068 (toList!735 lt!33077)) (ite (or c!10854 c!10855) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (v!2533 (underlying!264 thiss!992)))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (v!2533 (underlying!264 thiss!992)))))))))

(assert (= (and d!17805 res!39530) b!74844))

(assert (= (and b!74844 (not res!39529)) b!74845))

(declare-fun m!74243 () Bool)

(assert (=> d!17805 m!74243))

(declare-fun m!74245 () Bool)

(assert (=> d!17805 m!74245))

(declare-fun m!74247 () Bool)

(assert (=> b!74845 m!74247))

(assert (=> b!73704 d!17805))

(declare-fun b!74846 () Bool)

(declare-fun e!48901 () Bool)

(declare-fun e!48904 () Bool)

(assert (=> b!74846 (= e!48901 e!48904)))

(declare-fun res!39536 () Bool)

(declare-fun call!6633 () Bool)

(assert (=> b!74846 (= res!39536 call!6633)))

(assert (=> b!74846 (=> (not res!39536) (not e!48904))))

(declare-fun b!74847 () Bool)

(declare-fun e!48908 () ListLongMap!1439)

(declare-fun call!6628 () ListLongMap!1439)

(assert (=> b!74847 (= e!48908 call!6628)))

(declare-fun b!74848 () Bool)

(declare-fun call!6629 () ListLongMap!1439)

(assert (=> b!74848 (= e!48908 call!6629)))

(declare-fun bm!6625 () Bool)

(declare-fun lt!33669 () ListLongMap!1439)

(assert (=> bm!6625 (= call!6633 (contains!729 lt!33669 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74849 () Bool)

(declare-fun e!48900 () Bool)

(declare-fun e!48906 () Bool)

(assert (=> b!74849 (= e!48900 e!48906)))

(declare-fun res!39534 () Bool)

(assert (=> b!74849 (=> (not res!39534) (not e!48906))))

(assert (=> b!74849 (= res!39534 (contains!729 lt!33669 (select (arr!1858 (_keys!3865 (_2!1084 lt!32604))) #b00000000000000000000000000000000)))))

(assert (=> b!74849 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 (_2!1084 lt!32604)))))))

(declare-fun b!74850 () Bool)

(declare-fun e!48902 () Unit!2086)

(declare-fun Unit!2164 () Unit!2086)

(assert (=> b!74850 (= e!48902 Unit!2164)))

(declare-fun bm!6626 () Bool)

(declare-fun call!6630 () ListLongMap!1439)

(assert (=> bm!6626 (= call!6628 call!6630)))

(declare-fun bm!6627 () Bool)

(declare-fun call!6634 () ListLongMap!1439)

(assert (=> bm!6627 (= call!6634 (getCurrentListMapNoExtraKeys!62 (_keys!3865 (_2!1084 lt!32604)) (_values!2196 (_2!1084 lt!32604)) (mask!6180 (_2!1084 lt!32604)) (extraKeys!2072 (_2!1084 lt!32604)) (zeroValue!2115 (_2!1084 lt!32604)) (minValue!2115 (_2!1084 lt!32604)) #b00000000000000000000000000000000 (defaultEntry!2213 (_2!1084 lt!32604))))))

(declare-fun b!74852 () Bool)

(declare-fun lt!33659 () Unit!2086)

(assert (=> b!74852 (= e!48902 lt!33659)))

(declare-fun lt!33680 () ListLongMap!1439)

(assert (=> b!74852 (= lt!33680 (getCurrentListMapNoExtraKeys!62 (_keys!3865 (_2!1084 lt!32604)) (_values!2196 (_2!1084 lt!32604)) (mask!6180 (_2!1084 lt!32604)) (extraKeys!2072 (_2!1084 lt!32604)) (zeroValue!2115 (_2!1084 lt!32604)) (minValue!2115 (_2!1084 lt!32604)) #b00000000000000000000000000000000 (defaultEntry!2213 (_2!1084 lt!32604))))))

(declare-fun lt!33674 () (_ BitVec 64))

(assert (=> b!74852 (= lt!33674 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33665 () (_ BitVec 64))

(assert (=> b!74852 (= lt!33665 (select (arr!1858 (_keys!3865 (_2!1084 lt!32604))) #b00000000000000000000000000000000))))

(declare-fun lt!33662 () Unit!2086)

(assert (=> b!74852 (= lt!33662 (addStillContains!51 lt!33680 lt!33674 (zeroValue!2115 (_2!1084 lt!32604)) lt!33665))))

(assert (=> b!74852 (contains!729 (+!98 lt!33680 (tuple2!2147 lt!33674 (zeroValue!2115 (_2!1084 lt!32604)))) lt!33665)))

(declare-fun lt!33676 () Unit!2086)

(assert (=> b!74852 (= lt!33676 lt!33662)))

(declare-fun lt!33667 () ListLongMap!1439)

(assert (=> b!74852 (= lt!33667 (getCurrentListMapNoExtraKeys!62 (_keys!3865 (_2!1084 lt!32604)) (_values!2196 (_2!1084 lt!32604)) (mask!6180 (_2!1084 lt!32604)) (extraKeys!2072 (_2!1084 lt!32604)) (zeroValue!2115 (_2!1084 lt!32604)) (minValue!2115 (_2!1084 lt!32604)) #b00000000000000000000000000000000 (defaultEntry!2213 (_2!1084 lt!32604))))))

(declare-fun lt!33677 () (_ BitVec 64))

(assert (=> b!74852 (= lt!33677 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33675 () (_ BitVec 64))

(assert (=> b!74852 (= lt!33675 (select (arr!1858 (_keys!3865 (_2!1084 lt!32604))) #b00000000000000000000000000000000))))

(declare-fun lt!33679 () Unit!2086)

(assert (=> b!74852 (= lt!33679 (addApplyDifferent!51 lt!33667 lt!33677 (minValue!2115 (_2!1084 lt!32604)) lt!33675))))

(assert (=> b!74852 (= (apply!75 (+!98 lt!33667 (tuple2!2147 lt!33677 (minValue!2115 (_2!1084 lt!32604)))) lt!33675) (apply!75 lt!33667 lt!33675))))

(declare-fun lt!33664 () Unit!2086)

(assert (=> b!74852 (= lt!33664 lt!33679)))

(declare-fun lt!33678 () ListLongMap!1439)

(assert (=> b!74852 (= lt!33678 (getCurrentListMapNoExtraKeys!62 (_keys!3865 (_2!1084 lt!32604)) (_values!2196 (_2!1084 lt!32604)) (mask!6180 (_2!1084 lt!32604)) (extraKeys!2072 (_2!1084 lt!32604)) (zeroValue!2115 (_2!1084 lt!32604)) (minValue!2115 (_2!1084 lt!32604)) #b00000000000000000000000000000000 (defaultEntry!2213 (_2!1084 lt!32604))))))

(declare-fun lt!33668 () (_ BitVec 64))

(assert (=> b!74852 (= lt!33668 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33660 () (_ BitVec 64))

(assert (=> b!74852 (= lt!33660 (select (arr!1858 (_keys!3865 (_2!1084 lt!32604))) #b00000000000000000000000000000000))))

(declare-fun lt!33666 () Unit!2086)

(assert (=> b!74852 (= lt!33666 (addApplyDifferent!51 lt!33678 lt!33668 (zeroValue!2115 (_2!1084 lt!32604)) lt!33660))))

(assert (=> b!74852 (= (apply!75 (+!98 lt!33678 (tuple2!2147 lt!33668 (zeroValue!2115 (_2!1084 lt!32604)))) lt!33660) (apply!75 lt!33678 lt!33660))))

(declare-fun lt!33670 () Unit!2086)

(assert (=> b!74852 (= lt!33670 lt!33666)))

(declare-fun lt!33673 () ListLongMap!1439)

(assert (=> b!74852 (= lt!33673 (getCurrentListMapNoExtraKeys!62 (_keys!3865 (_2!1084 lt!32604)) (_values!2196 (_2!1084 lt!32604)) (mask!6180 (_2!1084 lt!32604)) (extraKeys!2072 (_2!1084 lt!32604)) (zeroValue!2115 (_2!1084 lt!32604)) (minValue!2115 (_2!1084 lt!32604)) #b00000000000000000000000000000000 (defaultEntry!2213 (_2!1084 lt!32604))))))

(declare-fun lt!33663 () (_ BitVec 64))

(assert (=> b!74852 (= lt!33663 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33661 () (_ BitVec 64))

(assert (=> b!74852 (= lt!33661 (select (arr!1858 (_keys!3865 (_2!1084 lt!32604))) #b00000000000000000000000000000000))))

(assert (=> b!74852 (= lt!33659 (addApplyDifferent!51 lt!33673 lt!33663 (minValue!2115 (_2!1084 lt!32604)) lt!33661))))

(assert (=> b!74852 (= (apply!75 (+!98 lt!33673 (tuple2!2147 lt!33663 (minValue!2115 (_2!1084 lt!32604)))) lt!33661) (apply!75 lt!33673 lt!33661))))

(declare-fun b!74853 () Bool)

(assert (=> b!74853 (= e!48901 (not call!6633))))

(declare-fun b!74854 () Bool)

(declare-fun res!39535 () Bool)

(declare-fun e!48911 () Bool)

(assert (=> b!74854 (=> (not res!39535) (not e!48911))))

(assert (=> b!74854 (= res!39535 e!48901)))

(declare-fun c!11328 () Bool)

(assert (=> b!74854 (= c!11328 (not (= (bvand (extraKeys!2072 (_2!1084 lt!32604)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!74855 () Bool)

(declare-fun e!48905 () ListLongMap!1439)

(declare-fun e!48912 () ListLongMap!1439)

(assert (=> b!74855 (= e!48905 e!48912)))

(declare-fun c!11330 () Bool)

(assert (=> b!74855 (= c!11330 (and (not (= (bvand (extraKeys!2072 (_2!1084 lt!32604)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 (_2!1084 lt!32604)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74856 () Bool)

(declare-fun e!48907 () Bool)

(declare-fun e!48903 () Bool)

(assert (=> b!74856 (= e!48907 e!48903)))

(declare-fun res!39539 () Bool)

(declare-fun call!6631 () Bool)

(assert (=> b!74856 (= res!39539 call!6631)))

(assert (=> b!74856 (=> (not res!39539) (not e!48903))))

(declare-fun bm!6628 () Bool)

(assert (=> bm!6628 (= call!6630 call!6634)))

(declare-fun bm!6629 () Bool)

(declare-fun call!6632 () ListLongMap!1439)

(assert (=> bm!6629 (= call!6629 call!6632)))

(declare-fun b!74857 () Bool)

(assert (=> b!74857 (= e!48907 (not call!6631))))

(declare-fun b!74858 () Bool)

(declare-fun res!39532 () Bool)

(assert (=> b!74858 (=> (not res!39532) (not e!48911))))

(assert (=> b!74858 (= res!39532 e!48900)))

(declare-fun res!39531 () Bool)

(assert (=> b!74858 (=> res!39531 e!48900)))

(declare-fun e!48909 () Bool)

(assert (=> b!74858 (= res!39531 (not e!48909))))

(declare-fun res!39533 () Bool)

(assert (=> b!74858 (=> (not res!39533) (not e!48909))))

(assert (=> b!74858 (= res!39533 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 (_2!1084 lt!32604)))))))

(declare-fun b!74859 () Bool)

(assert (=> b!74859 (= e!48911 e!48907)))

(declare-fun c!11332 () Bool)

(assert (=> b!74859 (= c!11332 (not (= (bvand (extraKeys!2072 (_2!1084 lt!32604)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74860 () Bool)

(assert (=> b!74860 (= e!48903 (= (apply!75 lt!33669 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2115 (_2!1084 lt!32604))))))

(declare-fun b!74861 () Bool)

(assert (=> b!74861 (= e!48912 call!6629)))

(declare-fun bm!6630 () Bool)

(assert (=> bm!6630 (= call!6631 (contains!729 lt!33669 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17807 () Bool)

(assert (=> d!17807 e!48911))

(declare-fun res!39537 () Bool)

(assert (=> d!17807 (=> (not res!39537) (not e!48911))))

(assert (=> d!17807 (= res!39537 (or (bvsge #b00000000000000000000000000000000 (size!2096 (_keys!3865 (_2!1084 lt!32604)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 (_2!1084 lt!32604)))))))))

(declare-fun lt!33671 () ListLongMap!1439)

(assert (=> d!17807 (= lt!33669 lt!33671)))

(declare-fun lt!33672 () Unit!2086)

(assert (=> d!17807 (= lt!33672 e!48902)))

(declare-fun c!11331 () Bool)

(declare-fun e!48910 () Bool)

(assert (=> d!17807 (= c!11331 e!48910)))

(declare-fun res!39538 () Bool)

(assert (=> d!17807 (=> (not res!39538) (not e!48910))))

(assert (=> d!17807 (= res!39538 (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 (_2!1084 lt!32604)))))))

(assert (=> d!17807 (= lt!33671 e!48905)))

(declare-fun c!11329 () Bool)

(assert (=> d!17807 (= c!11329 (and (not (= (bvand (extraKeys!2072 (_2!1084 lt!32604)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2072 (_2!1084 lt!32604)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17807 (validMask!0 (mask!6180 (_2!1084 lt!32604)))))

(assert (=> d!17807 (= (getCurrentListMap!426 (_keys!3865 (_2!1084 lt!32604)) (_values!2196 (_2!1084 lt!32604)) (mask!6180 (_2!1084 lt!32604)) (extraKeys!2072 (_2!1084 lt!32604)) (zeroValue!2115 (_2!1084 lt!32604)) (minValue!2115 (_2!1084 lt!32604)) #b00000000000000000000000000000000 (defaultEntry!2213 (_2!1084 lt!32604))) lt!33669)))

(declare-fun b!74851 () Bool)

(assert (=> b!74851 (= e!48904 (= (apply!75 lt!33669 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2115 (_2!1084 lt!32604))))))

(declare-fun b!74862 () Bool)

(assert (=> b!74862 (= e!48909 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (_2!1084 lt!32604))) #b00000000000000000000000000000000)))))

(declare-fun b!74863 () Bool)

(declare-fun c!11333 () Bool)

(assert (=> b!74863 (= c!11333 (and (not (= (bvand (extraKeys!2072 (_2!1084 lt!32604)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2072 (_2!1084 lt!32604)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!74863 (= e!48912 e!48908)))

(declare-fun b!74864 () Bool)

(assert (=> b!74864 (= e!48910 (validKeyInArray!0 (select (arr!1858 (_keys!3865 (_2!1084 lt!32604))) #b00000000000000000000000000000000)))))

(declare-fun b!74865 () Bool)

(assert (=> b!74865 (= e!48906 (= (apply!75 lt!33669 (select (arr!1858 (_keys!3865 (_2!1084 lt!32604))) #b00000000000000000000000000000000)) (get!1154 (select (arr!1859 (_values!2196 (_2!1084 lt!32604))) #b00000000000000000000000000000000) (dynLambda!334 (defaultEntry!2213 (_2!1084 lt!32604)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74865 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2097 (_values!2196 (_2!1084 lt!32604)))))))

(assert (=> b!74865 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2096 (_keys!3865 (_2!1084 lt!32604)))))))

(declare-fun bm!6631 () Bool)

(assert (=> bm!6631 (= call!6632 (+!98 (ite c!11329 call!6634 (ite c!11330 call!6630 call!6628)) (ite (or c!11329 c!11330) (tuple2!2147 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2115 (_2!1084 lt!32604))) (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (_2!1084 lt!32604))))))))

(declare-fun b!74866 () Bool)

(assert (=> b!74866 (= e!48905 (+!98 call!6632 (tuple2!2147 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2115 (_2!1084 lt!32604)))))))

(assert (= (and d!17807 c!11329) b!74866))

(assert (= (and d!17807 (not c!11329)) b!74855))

(assert (= (and b!74855 c!11330) b!74861))

(assert (= (and b!74855 (not c!11330)) b!74863))

(assert (= (and b!74863 c!11333) b!74848))

(assert (= (and b!74863 (not c!11333)) b!74847))

(assert (= (or b!74848 b!74847) bm!6626))

(assert (= (or b!74861 bm!6626) bm!6628))

(assert (= (or b!74861 b!74848) bm!6629))

(assert (= (or b!74866 bm!6628) bm!6627))

(assert (= (or b!74866 bm!6629) bm!6631))

(assert (= (and d!17807 res!39538) b!74864))

(assert (= (and d!17807 c!11331) b!74852))

(assert (= (and d!17807 (not c!11331)) b!74850))

(assert (= (and d!17807 res!39537) b!74858))

(assert (= (and b!74858 res!39533) b!74862))

(assert (= (and b!74858 (not res!39531)) b!74849))

(assert (= (and b!74849 res!39534) b!74865))

(assert (= (and b!74858 res!39532) b!74854))

(assert (= (and b!74854 c!11328) b!74846))

(assert (= (and b!74854 (not c!11328)) b!74853))

(assert (= (and b!74846 res!39536) b!74851))

(assert (= (or b!74846 b!74853) bm!6625))

(assert (= (and b!74854 res!39535) b!74859))

(assert (= (and b!74859 c!11332) b!74856))

(assert (= (and b!74859 (not c!11332)) b!74857))

(assert (= (and b!74856 res!39539) b!74860))

(assert (= (or b!74856 b!74857) bm!6630))

(declare-fun b_lambda!3351 () Bool)

(assert (=> (not b_lambda!3351) (not b!74865)))

(declare-fun tb!1545 () Bool)

(declare-fun t!5082 () Bool)

(assert (=> (and b!72889 (= (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) (defaultEntry!2213 (_2!1084 lt!32604))) t!5082) tb!1545))

(declare-fun result!2701 () Bool)

(assert (=> tb!1545 (= result!2701 tp_is_empty!2475)))

(assert (=> b!74865 t!5082))

(declare-fun b_and!4577 () Bool)

(assert (= b_and!4573 (and (=> t!5082 result!2701) b_and!4577)))

(declare-fun tb!1547 () Bool)

(declare-fun t!5084 () Bool)

(assert (=> (and b!72885 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (_2!1084 lt!32604))) t!5084) tb!1547))

(declare-fun result!2703 () Bool)

(assert (= result!2703 result!2701))

(assert (=> b!74865 t!5084))

(declare-fun b_and!4579 () Bool)

(assert (= b_and!4575 (and (=> t!5084 result!2703) b_and!4579)))

(declare-fun m!74249 () Bool)

(assert (=> bm!6631 m!74249))

(declare-fun m!74251 () Bool)

(assert (=> b!74851 m!74251))

(declare-fun m!74253 () Bool)

(assert (=> bm!6627 m!74253))

(assert (=> b!74862 m!72557))

(assert (=> b!74862 m!72557))

(assert (=> b!74862 m!72559))

(declare-fun m!74255 () Bool)

(assert (=> b!74866 m!74255))

(declare-fun m!74257 () Bool)

(assert (=> bm!6625 m!74257))

(declare-fun m!74259 () Bool)

(assert (=> b!74852 m!74259))

(declare-fun m!74261 () Bool)

(assert (=> b!74852 m!74261))

(declare-fun m!74263 () Bool)

(assert (=> b!74852 m!74263))

(assert (=> b!74852 m!72557))

(declare-fun m!74265 () Bool)

(assert (=> b!74852 m!74265))

(declare-fun m!74267 () Bool)

(assert (=> b!74852 m!74267))

(declare-fun m!74269 () Bool)

(assert (=> b!74852 m!74269))

(assert (=> b!74852 m!74265))

(declare-fun m!74271 () Bool)

(assert (=> b!74852 m!74271))

(assert (=> b!74852 m!74253))

(declare-fun m!74273 () Bool)

(assert (=> b!74852 m!74273))

(assert (=> b!74852 m!74261))

(declare-fun m!74275 () Bool)

(assert (=> b!74852 m!74275))

(assert (=> b!74852 m!74259))

(declare-fun m!74277 () Bool)

(assert (=> b!74852 m!74277))

(declare-fun m!74279 () Bool)

(assert (=> b!74852 m!74279))

(assert (=> b!74852 m!74263))

(declare-fun m!74281 () Bool)

(assert (=> b!74852 m!74281))

(declare-fun m!74283 () Bool)

(assert (=> b!74852 m!74283))

(declare-fun m!74285 () Bool)

(assert (=> b!74852 m!74285))

(declare-fun m!74287 () Bool)

(assert (=> b!74852 m!74287))

(assert (=> b!74849 m!72557))

(assert (=> b!74849 m!72557))

(declare-fun m!74289 () Bool)

(assert (=> b!74849 m!74289))

(declare-fun m!74291 () Bool)

(assert (=> bm!6630 m!74291))

(assert (=> b!74865 m!72557))

(assert (=> b!74865 m!72557))

(declare-fun m!74293 () Bool)

(assert (=> b!74865 m!74293))

(declare-fun m!74295 () Bool)

(assert (=> b!74865 m!74295))

(declare-fun m!74297 () Bool)

(assert (=> b!74865 m!74297))

(assert (=> b!74865 m!74297))

(assert (=> b!74865 m!74295))

(declare-fun m!74299 () Bool)

(assert (=> b!74865 m!74299))

(assert (=> b!74864 m!72557))

(assert (=> b!74864 m!72557))

(assert (=> b!74864 m!72559))

(declare-fun m!74301 () Bool)

(assert (=> b!74860 m!74301))

(assert (=> d!17807 m!73537))

(assert (=> d!16869 d!17807))

(declare-fun b!74867 () Bool)

(declare-fun e!48913 () List!1507)

(declare-fun call!6636 () List!1507)

(assert (=> b!74867 (= e!48913 call!6636)))

(declare-fun b!74868 () Bool)

(declare-fun e!48915 () List!1507)

(declare-fun call!6635 () List!1507)

(assert (=> b!74868 (= e!48915 call!6635)))

(declare-fun bm!6632 () Bool)

(declare-fun e!48916 () List!1507)

(declare-fun c!11335 () Bool)

(declare-fun call!6637 () List!1507)

(assert (=> bm!6632 (= call!6637 ($colon$colon!65 e!48916 (ite c!11335 (h!2090 (t!5068 (toList!735 lt!32476))) (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472)))))))

(declare-fun c!11336 () Bool)

(assert (=> bm!6632 (= c!11336 c!11335)))

(declare-fun b!74870 () Bool)

(declare-fun res!39541 () Bool)

(declare-fun e!48914 () Bool)

(assert (=> b!74870 (=> (not res!39541) (not e!48914))))

(declare-fun lt!33681 () List!1507)

(assert (=> b!74870 (= res!39541 (containsKey!136 lt!33681 (_1!1083 lt!32472)))))

(declare-fun b!74871 () Bool)

(declare-fun e!48917 () List!1507)

(assert (=> b!74871 (= e!48917 call!6637)))

(declare-fun b!74872 () Bool)

(declare-fun c!11337 () Bool)

(declare-fun c!11334 () Bool)

(assert (=> b!74872 (= e!48916 (ite c!11337 (t!5068 (t!5068 (toList!735 lt!32476))) (ite c!11334 (Cons!1503 (h!2090 (t!5068 (toList!735 lt!32476))) (t!5068 (t!5068 (toList!735 lt!32476)))) Nil!1504)))))

(declare-fun b!74873 () Bool)

(assert (=> b!74873 (= e!48916 (insertStrictlySorted!53 (t!5068 (t!5068 (toList!735 lt!32476))) (_1!1083 lt!32472) (_2!1083 lt!32472)))))

(declare-fun b!74874 () Bool)

(assert (=> b!74874 (= e!48914 (contains!730 lt!33681 (tuple2!2147 (_1!1083 lt!32472) (_2!1083 lt!32472))))))

(declare-fun bm!6633 () Bool)

(assert (=> bm!6633 (= call!6636 call!6637)))

(declare-fun b!74875 () Bool)

(assert (=> b!74875 (= e!48917 e!48913)))

(assert (=> b!74875 (= c!11337 (and ((_ is Cons!1503) (t!5068 (toList!735 lt!32476))) (= (_1!1083 (h!2090 (t!5068 (toList!735 lt!32476)))) (_1!1083 lt!32472))))))

(declare-fun b!74869 () Bool)

(assert (=> b!74869 (= c!11334 (and ((_ is Cons!1503) (t!5068 (toList!735 lt!32476))) (bvsgt (_1!1083 (h!2090 (t!5068 (toList!735 lt!32476)))) (_1!1083 lt!32472))))))

(assert (=> b!74869 (= e!48913 e!48915)))

(declare-fun d!17809 () Bool)

(assert (=> d!17809 e!48914))

(declare-fun res!39540 () Bool)

(assert (=> d!17809 (=> (not res!39540) (not e!48914))))

(assert (=> d!17809 (= res!39540 (isStrictlySorted!287 lt!33681))))

(assert (=> d!17809 (= lt!33681 e!48917)))

(assert (=> d!17809 (= c!11335 (and ((_ is Cons!1503) (t!5068 (toList!735 lt!32476))) (bvslt (_1!1083 (h!2090 (t!5068 (toList!735 lt!32476)))) (_1!1083 lt!32472))))))

(assert (=> d!17809 (isStrictlySorted!287 (t!5068 (toList!735 lt!32476)))))

(assert (=> d!17809 (= (insertStrictlySorted!53 (t!5068 (toList!735 lt!32476)) (_1!1083 lt!32472) (_2!1083 lt!32472)) lt!33681)))

(declare-fun b!74876 () Bool)

(assert (=> b!74876 (= e!48915 call!6635)))

(declare-fun bm!6634 () Bool)

(assert (=> bm!6634 (= call!6635 call!6636)))

(assert (= (and d!17809 c!11335) b!74871))

(assert (= (and d!17809 (not c!11335)) b!74875))

(assert (= (and b!74875 c!11337) b!74867))

(assert (= (and b!74875 (not c!11337)) b!74869))

(assert (= (and b!74869 c!11334) b!74876))

(assert (= (and b!74869 (not c!11334)) b!74868))

(assert (= (or b!74876 b!74868) bm!6634))

(assert (= (or b!74867 bm!6634) bm!6633))

(assert (= (or b!74871 bm!6633) bm!6632))

(assert (= (and bm!6632 c!11336) b!74873))

(assert (= (and bm!6632 (not c!11336)) b!74872))

(assert (= (and d!17809 res!39540) b!74870))

(assert (= (and b!74870 res!39541) b!74874))

(declare-fun m!74303 () Bool)

(assert (=> b!74870 m!74303))

(declare-fun m!74305 () Bool)

(assert (=> d!17809 m!74305))

(assert (=> d!17809 m!72325))

(declare-fun m!74307 () Bool)

(assert (=> b!74873 m!74307))

(declare-fun m!74309 () Bool)

(assert (=> b!74874 m!74309))

(declare-fun m!74311 () Bool)

(assert (=> bm!6632 m!74311))

(assert (=> b!73505 d!17809))

(declare-fun lt!33682 () Bool)

(declare-fun d!17811 () Bool)

(assert (=> d!17811 (= lt!33682 (select (content!76 (toList!735 lt!32895)) (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun e!48918 () Bool)

(assert (=> d!17811 (= lt!33682 e!48918)))

(declare-fun res!39543 () Bool)

(assert (=> d!17811 (=> (not res!39543) (not e!48918))))

(assert (=> d!17811 (= res!39543 ((_ is Cons!1503) (toList!735 lt!32895)))))

(assert (=> d!17811 (= (contains!730 (toList!735 lt!32895) (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))) lt!33682)))

(declare-fun b!74877 () Bool)

(declare-fun e!48919 () Bool)

(assert (=> b!74877 (= e!48918 e!48919)))

(declare-fun res!39542 () Bool)

(assert (=> b!74877 (=> res!39542 e!48919)))

(assert (=> b!74877 (= res!39542 (= (h!2090 (toList!735 lt!32895)) (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(declare-fun b!74878 () Bool)

(assert (=> b!74878 (= e!48919 (contains!730 (t!5068 (toList!735 lt!32895)) (tuple2!2147 lt!32674 (minValue!2115 (v!2533 (underlying!264 thiss!992))))))))

(assert (= (and d!17811 res!39543) b!74877))

(assert (= (and b!74877 (not res!39542)) b!74878))

(declare-fun m!74313 () Bool)

(assert (=> d!17811 m!74313))

(declare-fun m!74315 () Bool)

(assert (=> d!17811 m!74315))

(declare-fun m!74317 () Bool)

(assert (=> b!74878 m!74317))

(assert (=> b!73521 d!17811))

(assert (=> b!73276 d!17087))

(declare-fun condMapEmpty!3185 () Bool)

(declare-fun mapDefault!3185 () ValueCell!894)

(assert (=> mapNonEmpty!3184 (= condMapEmpty!3185 (= mapRest!3184 ((as const (Array (_ BitVec 32) ValueCell!894)) mapDefault!3185)))))

(declare-fun e!48920 () Bool)

(declare-fun mapRes!3185 () Bool)

(assert (=> mapNonEmpty!3184 (= tp!8548 (and e!48920 mapRes!3185))))

(declare-fun mapNonEmpty!3185 () Bool)

(declare-fun tp!8549 () Bool)

(declare-fun e!48921 () Bool)

(assert (=> mapNonEmpty!3185 (= mapRes!3185 (and tp!8549 e!48921))))

(declare-fun mapRest!3185 () (Array (_ BitVec 32) ValueCell!894))

(declare-fun mapValue!3185 () ValueCell!894)

(declare-fun mapKey!3185 () (_ BitVec 32))

(assert (=> mapNonEmpty!3185 (= mapRest!3184 (store mapRest!3185 mapKey!3185 mapValue!3185))))

(declare-fun b!74880 () Bool)

(assert (=> b!74880 (= e!48920 tp_is_empty!2475)))

(declare-fun b!74879 () Bool)

(assert (=> b!74879 (= e!48921 tp_is_empty!2475)))

(declare-fun mapIsEmpty!3185 () Bool)

(assert (=> mapIsEmpty!3185 mapRes!3185))

(assert (= (and mapNonEmpty!3184 condMapEmpty!3185) mapIsEmpty!3185))

(assert (= (and mapNonEmpty!3184 (not condMapEmpty!3185)) mapNonEmpty!3185))

(assert (= (and mapNonEmpty!3185 ((_ is ValueCellFull!894) mapValue!3185)) b!74879))

(assert (= (and mapNonEmpty!3184 ((_ is ValueCellFull!894) mapDefault!3185)) b!74880))

(declare-fun m!74319 () Bool)

(assert (=> mapNonEmpty!3185 m!74319))

(declare-fun condMapEmpty!3186 () Bool)

(declare-fun mapDefault!3186 () ValueCell!894)

(assert (=> mapNonEmpty!3183 (= condMapEmpty!3186 (= mapRest!3183 ((as const (Array (_ BitVec 32) ValueCell!894)) mapDefault!3186)))))

(declare-fun e!48922 () Bool)

(declare-fun mapRes!3186 () Bool)

(assert (=> mapNonEmpty!3183 (= tp!8547 (and e!48922 mapRes!3186))))

(declare-fun mapNonEmpty!3186 () Bool)

(declare-fun tp!8550 () Bool)

(declare-fun e!48923 () Bool)

(assert (=> mapNonEmpty!3186 (= mapRes!3186 (and tp!8550 e!48923))))

(declare-fun mapValue!3186 () ValueCell!894)

(declare-fun mapKey!3186 () (_ BitVec 32))

(declare-fun mapRest!3186 () (Array (_ BitVec 32) ValueCell!894))

(assert (=> mapNonEmpty!3186 (= mapRest!3183 (store mapRest!3186 mapKey!3186 mapValue!3186))))

(declare-fun b!74882 () Bool)

(assert (=> b!74882 (= e!48922 tp_is_empty!2475)))

(declare-fun b!74881 () Bool)

(assert (=> b!74881 (= e!48923 tp_is_empty!2475)))

(declare-fun mapIsEmpty!3186 () Bool)

(assert (=> mapIsEmpty!3186 mapRes!3186))

(assert (= (and mapNonEmpty!3183 condMapEmpty!3186) mapIsEmpty!3186))

(assert (= (and mapNonEmpty!3183 (not condMapEmpty!3186)) mapNonEmpty!3186))

(assert (= (and mapNonEmpty!3186 ((_ is ValueCellFull!894) mapValue!3186)) b!74881))

(assert (= (and mapNonEmpty!3183 ((_ is ValueCellFull!894) mapDefault!3186)) b!74882))

(declare-fun m!74321 () Bool)

(assert (=> mapNonEmpty!3186 m!74321))

(declare-fun b_lambda!3353 () Bool)

(assert (= b_lambda!3339 (or (and b!72889 b_free!2117 (= (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72885 b_free!2119) b_lambda!3353)))

(declare-fun b_lambda!3355 () Bool)

(assert (= b_lambda!3345 (or (and b!72889 b_free!2117 (= (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72885 b_free!2119) b_lambda!3355)))

(declare-fun b_lambda!3357 () Bool)

(assert (= b_lambda!3331 (or (and b!72889 b_free!2117 (= (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72885 b_free!2119) b_lambda!3357)))

(declare-fun b_lambda!3359 () Bool)

(assert (= b_lambda!3335 (or (and b!72889 b_free!2117 (= (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72885 b_free!2119) b_lambda!3359)))

(declare-fun b_lambda!3361 () Bool)

(assert (= b_lambda!3349 (or (and b!72889 b_free!2117 (= (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72885 b_free!2119) b_lambda!3361)))

(declare-fun b_lambda!3363 () Bool)

(assert (= b_lambda!3343 (or (and b!72889 b_free!2117 (= (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72885 b_free!2119) b_lambda!3363)))

(declare-fun b_lambda!3365 () Bool)

(assert (= b_lambda!3329 (or (and b!72889 b_free!2117) (and b!72885 b_free!2119 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))))) b_lambda!3365)))

(declare-fun b_lambda!3367 () Bool)

(assert (= b_lambda!3337 (or (and b!72889 b_free!2117 (= (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72885 b_free!2119) b_lambda!3367)))

(declare-fun b_lambda!3369 () Bool)

(assert (= b_lambda!3327 (or (and b!72889 b_free!2117) (and b!72885 b_free!2119 (= (defaultEntry!2213 newMap!16) (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))))) b_lambda!3369)))

(declare-fun b_lambda!3371 () Bool)

(assert (= b_lambda!3333 (or (and b!72889 b_free!2117 (= (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72885 b_free!2119) b_lambda!3371)))

(declare-fun b_lambda!3373 () Bool)

(assert (= b_lambda!3347 (or (and b!72889 b_free!2117 (= (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72885 b_free!2119) b_lambda!3373)))

(declare-fun b_lambda!3375 () Bool)

(assert (= b_lambda!3325 (or (and b!72889 b_free!2117 (= (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72885 b_free!2119) b_lambda!3375)))

(declare-fun b_lambda!3377 () Bool)

(assert (= b_lambda!3341 (or (and b!72889 b_free!2117 (= (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72885 b_free!2119) b_lambda!3377)))

(declare-fun b_lambda!3379 () Bool)

(assert (= b_lambda!3323 (or (and b!72889 b_free!2117 (= (defaultEntry!2213 (v!2533 (underlying!264 thiss!992))) (defaultEntry!2213 newMap!16))) (and b!72885 b_free!2119) b_lambda!3379)))

(check-sat (not b!74865) (not b!74750) (not b_lambda!3289) (not b!74873) (not b!73924) (not d!17645) (not b!73740) (not d!17515) (not b!74118) (not b!74146) (not b!73782) (not b!74274) (not d!17393) (not b_lambda!3355) (not d!17583) (not b!74843) (not bm!6551) (not b!73854) (not b!74026) (not d!17541) (not d!17403) (not d!17203) (not b_lambda!3353) (not b!73765) (not d!17109) (not b!74515) (not b!73869) (not d!17777) (not b!74225) (not d!17523) (not b!73728) (not b!73921) (not bm!6632) (not b!74852) (not d!17775) (not d!17311) (not b!74212) (not d!17289) (not bm!6524) (not b!73988) (not d!17229) (not d!17553) (not b!74110) (not b!74334) (not b!74340) (not b!74299) (not d!17521) (not b!74046) (not b!74521) (not b!74366) (not d!17783) (not d!17067) (not b!74480) (not b!74325) (not d!17365) (not b!74252) (not b!74539) (not bm!6520) (not b!74751) (not b!74495) (not d!17367) (not b!74105) (not b!74019) (not d!17071) (not b!74742) (not d!17751) (not b!74633) (not b!74244) (not b!74190) (not b!74625) (not d!17725) (not d!17801) (not bm!6580) (not b!73963) (not b!74536) (not b_lambda!3301) (not b!74018) (not b!74543) (not b!73888) (not b!74062) (not bm!6594) (not b!74763) (not b!74426) (not b!73793) (not b!74429) (not d!17489) (not d!17155) (not d!17811) (not b!74427) (not b!73953) (not d!17407) (not b!74152) (not b!74271) (not b!74800) (not b_lambda!3365) (not b!74040) (not bm!6550) (not b!74745) (not b!74864) (not b!74286) (not d!17281) (not b!74609) (not d!17337) (not d!17747) (not d!17461) (not d!17687) (not b!74387) (not b!74121) (not b!73847) (not b!74530) (not b!74267) (not d!17547) (not bm!6625) (not b!74279) (not b!74289) (not d!17115) (not b!74348) (not d!17759) (not b!74743) (not b!74531) (not b!74156) (not b!74571) (not b!74189) (not b!74547) (not bm!6567) (not b!74180) (not d!17417) (not b!74797) (not d!17159) (not b!74696) (not d!17531) (not bm!6584) (not b!74824) (not b!74312) (not d!17697) (not b!74210) (not b!74478) (not b!74179) (not b!73749) (not b!74556) (not b!74403) (not b!74085) (not d!17809) (not d!17549) (not b!73767) (not d!17683) (not d!17765) (not d!17449) (not b!74173) (not b!73851) (not b!74687) (not b!74838) (not b!74295) (not d!17709) (not d!17611) (not bm!6617) (not d!17271) (not b!74127) (not b!73787) (not b!74305) (not b!74425) (not b!74827) (not d!17061) (not d!17327) (not b!73907) (not d!17183) (not b!74304) (not b!74650) (not d!17355) (not b!74234) (not b!73781) (not d!17065) (not b!73797) b_and!4579 (not b!74698) (not b!74819) (not d!17467) (not b!74144) (not b!74770) (not b!73979) (not b!74027) (not b!74327) (not b!74533) (not d!17053) (not d!17545) (not d!17731) (not b!74230) (not b!73815) (not d!17201) (not bm!6588) (not b_lambda!3371) (not bm!6606) (not b!74648) (not b!74834) (not b!73743) (not b!74261) (not b_next!2119) (not d!17331) (not b!74149) (not b!74177) (not d!17431) (not b!73762) (not d!17291) (not bm!6508) (not b!73850) (not b!74778) (not b!74783) (not d!17673) (not b!74762) (not b!73966) (not d!17345) (not b!74033) (not b!74560) (not b!74780) (not b!74221) (not b!74485) (not b!74197) (not bm!6572) (not b!74060) (not b!74215) (not b!73799) (not b!74407) (not bm!6556) (not b!73737) (not b!73779) (not b!74849) (not b!74635) (not b!74626) (not b!74090) (not b_next!2117) (not d!17391) (not b!74624) (not d!17173) (not d!17303) (not b!74667) (not b!74508) (not b!74423) (not b!74851) (not b!73859) (not b!74671) (not b!73773) (not d!17803) (not d!17299) (not d!17069) (not b!73802) (not b!74628) (not d!17543) (not d!17063) (not d!17387) (not b!74552) (not d!17267) (not b!73876) (not d!17177) (not b!74529) (not b!74435) (not bm!6531) (not d!17761) (not b!73812) (not d!17429) (not b!74598) (not d!17105) tp_is_empty!2475 (not b!74175) (not bm!6541) (not b!74207) (not b!73912) (not d!17301) (not b!74646) (not b!74104) (not d!17767) (not d!17631) (not b!74438) (not b!74605) (not d!17049) (not b!73984) (not b!74056) (not b!73896) (not d!17441) (not b!73808) (not bm!6573) (not d!17479) (not b!74839) (not d!17409) (not d!17625) (not d!17055) (not b!73736) (not b!74241) (not b!73807) (not d!17633) (not b!74647) (not bm!6607) (not b!73766) (not b!74785) (not b!74036) (not b!74317) (not b!74290) (not b!74412) (not b!74142) (not d!17207) (not d!17153) (not bm!6612) (not d!17151) (not d!17329) (not d!17653) (not b!73891) (not b!73884) (not d!17555) (not b!74479) (not b!74507) (not d!17171) (not d!17361) (not d!17495) (not b!74837) (not d!17493) (not b!74620) (not d!17663) (not b!74642) (not b!73775) (not b!74581) (not d!17411) (not b!73732) (not b!74512) (not b!74363) (not d!17629) (not d!17357) (not b!73998) (not b!73900) (not b!74232) (not b!74140) (not b!74767) (not b!73987) (not d!17415) (not d!17137) (not d!17567) (not d!17595) (not d!17537) (not b!73741) (not b!74095) (not b!74454) (not b!74467) (not b!74337) (not b!74049) (not b!74194) (not d!17255) (not d!17447) (not b!74224) (not d!17745) (not b!74257) (not b!74053) (not b!73866) (not bm!6605) (not b!74187) (not b!74812) (not bm!6552) (not b!74013) (not d!17419) (not b!74583) (not d!17481) (not b!74098) (not d!17651) (not b!74814) (not b!74592) (not b!74048) (not b!74250) (not b!74457) (not b!74679) (not d!17713) (not b!74203) (not bm!6518) (not b!74057) (not d!17219) (not b!74572) (not b!74782) (not b!74817) (not b!74402) (not b!74690) (not b!74276) (not d!17711) (not d!17275) (not b!74806) (not b!74612) (not bm!6525) (not bm!6600) (not d!17557) (not b!73816) (not d!17477) (not d!17605) (not b!74273) (not b!74704) (not b!74821) (not d!17691) (not d!17143) (not d!17215) (not b_lambda!3377) (not b!73759) (not d!17251) (not b!74419) (not b!73882) (not d!17699) (not b!74269) (not d!17245) (not d!17399) (not d!17721) (not b!74546) (not d!17579) (not b!73750) (not b!74415) (not bm!6602) (not b!73878) (not b!73795) (not bm!6615) (not b!74399) (not b!74558) (not b!74550) (not b_lambda!3357) (not b!73805) (not d!17443) (not b_lambda!3297) (not b!74574) (not bm!6523) (not d!17459) (not bm!6558) (not b!74769) (not d!17059) b_and!4577 (not b!73729) (not bm!6538) (not bm!6509) (not d!17755) (not d!17773) (not b!74377) (not b!73772) (not b!74338) (not b!74041) (not b!74822) (not d!17735) (not b!74674) (not b!73820) (not d!17741) (not b_lambda!3373) (not d!17593) (not b!74862) (not b!74464) (not d!17565) (not b!73905) (not b!74228) (not mapNonEmpty!3186) (not bm!6519) (not b_lambda!3321) (not bm!6544) (not b!73747) (not d!17779) (not b_lambda!3299) (not b!74808) (not b!74117) (not b!74240) (not d!17657) (not d!17217) (not b!74217) (not b!74259) (not b!74874) (not d!17119) (not d!17561) (not d!17405) (not b!74148) (not mapNonEmpty!3185) (not b!74748) (not bm!6592) (not b!74640) (not d!17609) (not d!17571) (not d!17213) (not b!74411) (not b!74335) (not b!74441) (not b!74792) (not b!74383) (not b!74133) (not b!74670) (not d!17705) (not b!73971) (not b!74088) (not b!73872) (not b!74043) (not d!17195) (not b!74401) (not d!17265) (not b!74253) (not d!17185) (not b!73730) (not d!17597) (not d!17231) (not d!17789) (not b!73853) (not d!17627) (not bm!6577) (not d!17675) (not b!74408) (not bm!6565) (not d!17795) (not b!74081) (not d!17225) (not b!74758) (not b!74265) (not b!74662) (not d!17259) (not b!74067) (not bm!6591) (not b!73968) (not b!73922) (not d!17321) (not d!17535) (not d!17681) (not b!74237) (not b!74379) (not b!73945) (not b!74652) (not b!74443) (not d!17295) (not bm!6547) (not b!74683) (not b!74384) (not d!17401) (not b!73864) (not d!17453) (not b!74166) (not bm!6631) (not b!74109) (not bm!6585) (not d!17313) (not b!74597) (not b!74452) (not b!74584) (not d!17129) (not b!74065) (not b!74371) (not b!74351) (not d!17249) (not bm!6608) (not bm!6609) (not b!73790) (not bm!6627) (not d!17381) (not d!17051) (not bm!6557) (not d!17083) (not b!74343) (not d!17661) (not bm!6598) (not b!74728) (not b_lambda!3313) (not b!74229) (not b!74242) (not b!74870) (not b!74374) (not b!73757) (not b!74023) (not b!73980) (not b!74759) (not b!74483) (not b!74484) (not bm!6599) (not b!74281) (not d!17077) (not d!17793) (not b!74381) (not b!73784) (not d!17089) (not d!17123) (not d!17439) (not b!73950) (not d!17317) (not d!17253) (not bm!6517) (not b!74554) (not b!74663) (not b!74866) (not bm!6578) (not d!17423) (not b!74181) (not b!74359) (not b_lambda!3367) (not b!74329) (not b!74131) (not b!74654) (not b!74655) (not b_lambda!3351) (not b!74068) (not b!74038) (not b!73770) (not b!74236) (not b!74486) (not b!74302) (not d!17395) (not d!17511) (not d!17483) (not b!74657) (not b!73738) (not b!74016) (not b_lambda!3379) (not b!74112) (not b!74182) (not b!74003) (not b!74091) (not b!74525) (not b!74553) (not bm!6571) (not b!74815) (not b!74460) (not d!17667) (not d!17057) (not b!74793) (not b!73969) (not b!74398) (not b!74139) (not b!74517) (not d!17805) (not d!17125) (not b!74475) (not b!74676) (not d!17433) (not b!74009) (not b!74559) (not b!74394) (not d!17133) (not b!74364) (not b!73899) (not b!74524) (not b!73856) (not b!74037) (not d!17421) (not bm!6620) (not b!73915) (not b!73952) (not b!74831) (not d!17635) (not bm!6535) (not b!73904) (not b!73974) (not b!73800) (not b!73734) (not b!74860) (not b!74505) (not d!17659) (not b!74447) (not b!74219) (not b!74128) (not b!74432) (not b!74162) (not b!74488) (not b!74006) (not bm!6561) (not d!17677) (not d!17323) (not d!17487) (not b!74113) (not b!74030) (not b!74836) (not b!74391) (not b!74409) (not b!74755) (not b_lambda!3375) (not b!74473) (not b!74701) (not b!74405) (not bm!6527) (not b!74170) (not d!17141) (not d!17279) (not d!17753) (not b!74323) (not b!73778) (not b!74246) (not b!74103) (not bm!6597) (not b!74611) (not b!74645) (not b!74706) (not b!74336) (not d!17397) (not b!74596) (not d!17647) (not b!74339) (not b!74509) (not b!74660) (not b!73972) (not b!74538) (not b!74468) (not b!74600) (not b!74878) (not b!74331) (not b!74845) (not b!73862) (not d!17191) (not b!73739) (not b!74099) (not b!74388) (not b!74369) (not b!74258) (not bm!6574) (not b_lambda!3315) (not b_lambda!3363) (not d!17437) (not b!74350) (not b!73902) (not b!74736) (not d!17285) (not b!74365) (not b!74577) (not d!17529) (not b!73751) (not b!73746) (not b!74119) (not b!74083) (not b!73977) (not b!73965) (not b!73994) (not b!73909) (not b!73892) (not d!17101) (not d!17457) (not d!17073) (not b_lambda!3319) (not b!74268) (not b!74790) (not d!17757) (not bm!6630) (not b!74622) (not bm!6510) (not b!74264) (not d!17743) (not d!17209) (not b!73881) (not b!74418) (not bm!6570) (not b!74494) (not d!17563) (not b!73868) (not b!74784) (not b!74198) (not b!74129) (not b!74072) (not b!74313) (not b!74459) (not bm!6564) (not d!17533) (not b!74810) (not b!74320) (not b!73967) (not bm!6530) (not d!17807) (not d!17665) (not b!74124) (not b!74737) (not b!74740) (not b!74125) (not b_lambda!3361) (not b!74361) (not b_lambda!3317) (not b!74344) (not b!74248) (not d!17127) (not d!17589) (not b!74231) (not b!74011) (not bm!6583) (not bm!6621) (not b!74801) (not d!17205) (not bm!6555) (not b!73783) (not d!17693) (not d!17413) (not b!74492) (not d!17075) (not b!73938) (not d!17539) (not d!17551) (not b!74734) (not d!17103) (not d!17305) (not b!74594) (not b!74115) (not d!17235) (not d!17383) (not b!74481) (not d!17187) (not bm!6532) (not b!74256) (not bm!6622) (not b!74841) (not d!17157) (not b!74249) (not d!17619) (not b!74075) (not b!74076) (not d!17499) (not b!74309) (not d!17273) (not b!74503) (not b!74297) (not b!74442) (not d!17799) (not d!17739) (not b_lambda!3369) (not d!17261) (not d!17047) (not d!17095) (not b!74787) (not b!74282) (not d!17307) (not b!73917) (not b!74450) (not b!74111) (not d!17501) (not b!73997) (not b!74404) (not b!74184) (not b!74739) (not b!74390) (not b!74227) (not b!73961) (not b!74818) (not b_lambda!3359) (not d!17581) (not b!74333) (not b!73733))
(check-sat b_and!4577 b_and!4579 (not b_next!2117) (not b_next!2119))
