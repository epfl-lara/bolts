; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!12202 () Bool)

(assert start!12202)

(declare-fun b!103261 () Bool)

(declare-fun b_free!2513 () Bool)

(declare-fun b_next!2513 () Bool)

(assert (=> b!103261 (= b_free!2513 (not b_next!2513))))

(declare-fun tp!9856 () Bool)

(declare-fun b_and!6397 () Bool)

(assert (=> b!103261 (= tp!9856 b_and!6397)))

(declare-fun b!103249 () Bool)

(declare-fun b_free!2515 () Bool)

(declare-fun b_next!2515 () Bool)

(assert (=> b!103249 (= b_free!2515 (not b_next!2515))))

(declare-fun tp!9854 () Bool)

(declare-fun b_and!6399 () Bool)

(assert (=> b!103249 (= tp!9854 b_and!6399)))

(declare-fun b!103244 () Bool)

(declare-fun e!67276 () Bool)

(declare-fun tp_is_empty!2673 () Bool)

(assert (=> b!103244 (= e!67276 tp_is_empty!2673)))

(declare-fun b!103245 () Bool)

(declare-fun e!67279 () Bool)

(declare-fun e!67275 () Bool)

(assert (=> b!103245 (= e!67279 e!67275)))

(declare-fun res!51559 () Bool)

(assert (=> b!103245 (=> (not res!51559) (not e!67275))))

(declare-datatypes ((V!3211 0))(
  ( (V!3212 (val!1381 Int)) )
))
(declare-datatypes ((array!4334 0))(
  ( (array!4335 (arr!2056 (Array (_ BitVec 32) (_ BitVec 64))) (size!2310 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!993 0))(
  ( (ValueCellFull!993 (v!2875 V!3211)) (EmptyCell!993) )
))
(declare-datatypes ((array!4336 0))(
  ( (array!4337 (arr!2057 (Array (_ BitVec 32) ValueCell!993)) (size!2311 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!894 0))(
  ( (LongMapFixedSize!895 (defaultEntry!2561 Int) (mask!6697 (_ BitVec 32)) (extraKeys!2370 (_ BitVec 32)) (zeroValue!2438 V!3211) (minValue!2438 V!3211) (_size!496 (_ BitVec 32)) (_keys!4263 array!4334) (_values!2544 array!4336) (_vacant!496 (_ BitVec 32))) )
))
(declare-datatypes ((tuple2!2400 0))(
  ( (tuple2!2401 (_1!1210 Bool) (_2!1210 LongMapFixedSize!894)) )
))
(declare-fun lt!52552 () tuple2!2400)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!103245 (= res!51559 (and (_1!1210 lt!52552) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-datatypes ((Unit!3170 0))(
  ( (Unit!3171) )
))
(declare-fun lt!52544 () Unit!3170)

(declare-fun e!67278 () Unit!3170)

(assert (=> b!103245 (= lt!52544 e!67278)))

(declare-datatypes ((Cell!696 0))(
  ( (Cell!697 (v!2876 LongMapFixedSize!894)) )
))
(declare-datatypes ((LongMap!696 0))(
  ( (LongMap!697 (underlying!359 Cell!696)) )
))
(declare-fun thiss!992 () LongMap!696)

(declare-fun c!17771 () Bool)

(declare-datatypes ((tuple2!2402 0))(
  ( (tuple2!2403 (_1!1211 (_ BitVec 64)) (_2!1211 V!3211)) )
))
(declare-datatypes ((List!1637 0))(
  ( (Nil!1634) (Cons!1633 (h!2229 tuple2!2402) (t!5711 List!1637)) )
))
(declare-datatypes ((ListLongMap!1579 0))(
  ( (ListLongMap!1580 (toList!805 List!1637)) )
))
(declare-fun lt!52550 () ListLongMap!1579)

(declare-fun contains!825 (ListLongMap!1579 (_ BitVec 64)) Bool)

(assert (=> b!103245 (= c!17771 (contains!825 lt!52550 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun newMap!16 () LongMapFixedSize!894)

(declare-fun lt!52546 () V!3211)

(declare-fun update!156 (LongMapFixedSize!894 (_ BitVec 64) V!3211) tuple2!2400)

(assert (=> b!103245 (= lt!52552 (update!156 newMap!16 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))

(declare-fun b!103246 () Bool)

(declare-fun Unit!3172 () Unit!3170)

(assert (=> b!103246 (= e!67278 Unit!3172)))

(declare-fun lt!52549 () Unit!3170)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!110 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 64) (_ BitVec 32) Int) Unit!3170)

(assert (=> b!103246 (= lt!52549 (lemmaListMapContainsThenArrayContainsFrom!110 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4334 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!103246 (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!52553 () Unit!3170)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4334 (_ BitVec 32) (_ BitVec 32)) Unit!3170)

(assert (=> b!103246 (= lt!52553 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1638 0))(
  ( (Nil!1635) (Cons!1634 (h!2230 (_ BitVec 64)) (t!5712 List!1638)) )
))
(declare-fun arrayNoDuplicates!0 (array!4334 (_ BitVec 32) List!1638) Bool)

(assert (=> b!103246 (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) from!355 Nil!1635)))

(declare-fun lt!52543 () Unit!3170)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4334 (_ BitVec 32) (_ BitVec 64) List!1638) Unit!3170)

(assert (=> b!103246 (= lt!52543 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635)))))

(assert (=> b!103246 false))

(declare-fun b!103248 () Bool)

(declare-fun e!67285 () Bool)

(assert (=> b!103248 (= e!67285 tp_is_empty!2673)))

(declare-fun e!67282 () Bool)

(declare-fun e!67281 () Bool)

(declare-fun array_inv!1237 (array!4334) Bool)

(declare-fun array_inv!1238 (array!4336) Bool)

(assert (=> b!103249 (= e!67282 (and tp!9854 tp_is_empty!2673 (array_inv!1237 (_keys!4263 newMap!16)) (array_inv!1238 (_values!2544 newMap!16)) e!67281))))

(declare-fun b!103250 () Bool)

(declare-fun e!67284 () Bool)

(assert (=> b!103250 (= e!67284 (= (size!2311 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6697 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun mapIsEmpty!3903 () Bool)

(declare-fun mapRes!3903 () Bool)

(assert (=> mapIsEmpty!3903 mapRes!3903))

(declare-fun b!103251 () Bool)

(declare-fun e!67292 () Bool)

(declare-fun e!67287 () Bool)

(assert (=> b!103251 (= e!67292 e!67287)))

(declare-fun b!103252 () Bool)

(declare-fun e!67277 () Bool)

(assert (=> b!103252 (= e!67277 e!67292)))

(declare-fun mapNonEmpty!3903 () Bool)

(declare-fun tp!9853 () Bool)

(declare-fun e!67290 () Bool)

(assert (=> mapNonEmpty!3903 (= mapRes!3903 (and tp!9853 e!67290))))

(declare-fun mapRest!3904 () (Array (_ BitVec 32) ValueCell!993))

(declare-fun mapKey!3904 () (_ BitVec 32))

(declare-fun mapValue!3903 () ValueCell!993)

(assert (=> mapNonEmpty!3903 (= (arr!2057 (_values!2544 newMap!16)) (store mapRest!3904 mapKey!3904 mapValue!3903))))

(declare-fun b!103253 () Bool)

(declare-fun e!67286 () Bool)

(assert (=> b!103253 (= e!67286 e!67279)))

(declare-fun res!51562 () Bool)

(assert (=> b!103253 (=> (not res!51562) (not e!67279))))

(assert (=> b!103253 (= res!51562 (and (not (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1333 (ValueCell!993 V!3211) V!3211)

(declare-fun dynLambda!387 (Int (_ BitVec 64)) V!3211)

(assert (=> b!103253 (= lt!52546 (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) from!355) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!103254 () Bool)

(declare-fun e!67288 () Bool)

(declare-fun mapRes!3904 () Bool)

(assert (=> b!103254 (= e!67288 (and e!67276 mapRes!3904))))

(declare-fun condMapEmpty!3903 () Bool)

(declare-fun mapDefault!3904 () ValueCell!993)

(assert (=> b!103254 (= condMapEmpty!3903 (= (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!993)) mapDefault!3904)))))

(declare-fun b!103255 () Bool)

(declare-fun res!51560 () Bool)

(declare-fun e!67283 () Bool)

(assert (=> b!103255 (=> (not res!51560) (not e!67283))))

(declare-fun valid!405 (LongMapFixedSize!894) Bool)

(assert (=> b!103255 (= res!51560 (valid!405 newMap!16))))

(declare-fun b!103256 () Bool)

(assert (=> b!103256 (= e!67290 tp_is_empty!2673)))

(declare-fun b!103257 () Bool)

(declare-fun res!51565 () Bool)

(assert (=> b!103257 (=> (not res!51565) (not e!67283))))

(assert (=> b!103257 (= res!51565 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!103247 () Bool)

(assert (=> b!103247 (= e!67275 (not e!67284))))

(declare-fun res!51561 () Bool)

(assert (=> b!103247 (=> res!51561 e!67284)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!103247 (= res!51561 (not (validMask!0 (mask!6697 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun lt!52542 () ListLongMap!1579)

(declare-fun lt!52551 () tuple2!2402)

(declare-fun lt!52547 () tuple2!2402)

(declare-fun +!143 (ListLongMap!1579 tuple2!2402) ListLongMap!1579)

(assert (=> b!103247 (= (+!143 (+!143 lt!52542 lt!52551) lt!52547) (+!143 (+!143 lt!52542 lt!52547) lt!52551))))

(assert (=> b!103247 (= lt!52547 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))

(assert (=> b!103247 (= lt!52551 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))

(declare-fun lt!52545 () Unit!3170)

(declare-fun addCommutativeForDiffKeys!55 (ListLongMap!1579 (_ BitVec 64) V!3211 (_ BitVec 64) V!3211) Unit!3170)

(assert (=> b!103247 (= lt!52545 (addCommutativeForDiffKeys!55 lt!52542 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!110 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 32) Int) ListLongMap!1579)

(assert (=> b!103247 (= lt!52542 (getCurrentListMapNoExtraKeys!110 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))))))

(declare-fun res!51563 () Bool)

(assert (=> start!12202 (=> (not res!51563) (not e!67283))))

(declare-fun valid!406 (LongMap!696) Bool)

(assert (=> start!12202 (= res!51563 (valid!406 thiss!992))))

(assert (=> start!12202 e!67283))

(assert (=> start!12202 e!67277))

(assert (=> start!12202 true))

(assert (=> start!12202 e!67282))

(declare-fun b!103258 () Bool)

(declare-fun e!67289 () Bool)

(assert (=> b!103258 (= e!67289 tp_is_empty!2673)))

(declare-fun b!103259 () Bool)

(declare-fun Unit!3173 () Unit!3170)

(assert (=> b!103259 (= e!67278 Unit!3173)))

(declare-fun mapIsEmpty!3904 () Bool)

(assert (=> mapIsEmpty!3904 mapRes!3904))

(declare-fun b!103260 () Bool)

(declare-fun res!51564 () Bool)

(assert (=> b!103260 (=> (not res!51564) (not e!67283))))

(assert (=> b!103260 (= res!51564 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6697 newMap!16)) (_size!496 (v!2876 (underlying!359 thiss!992)))))))

(assert (=> b!103261 (= e!67287 (and tp!9856 tp_is_empty!2673 (array_inv!1237 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (array_inv!1238 (_values!2544 (v!2876 (underlying!359 thiss!992)))) e!67288))))

(declare-fun b!103262 () Bool)

(assert (=> b!103262 (= e!67283 e!67286)))

(declare-fun res!51558 () Bool)

(assert (=> b!103262 (=> (not res!51558) (not e!67286))))

(declare-fun lt!52548 () ListLongMap!1579)

(assert (=> b!103262 (= res!51558 (= lt!52548 lt!52550))))

(declare-fun map!1279 (LongMapFixedSize!894) ListLongMap!1579)

(assert (=> b!103262 (= lt!52550 (map!1279 newMap!16))))

(declare-fun getCurrentListMap!482 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 32) Int) ListLongMap!1579)

(assert (=> b!103262 (= lt!52548 (getCurrentListMap!482 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))))))

(declare-fun mapNonEmpty!3904 () Bool)

(declare-fun tp!9855 () Bool)

(assert (=> mapNonEmpty!3904 (= mapRes!3904 (and tp!9855 e!67285))))

(declare-fun mapRest!3903 () (Array (_ BitVec 32) ValueCell!993))

(declare-fun mapKey!3903 () (_ BitVec 32))

(declare-fun mapValue!3904 () ValueCell!993)

(assert (=> mapNonEmpty!3904 (= (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (store mapRest!3903 mapKey!3903 mapValue!3904))))

(declare-fun b!103263 () Bool)

(assert (=> b!103263 (= e!67281 (and e!67289 mapRes!3903))))

(declare-fun condMapEmpty!3904 () Bool)

(declare-fun mapDefault!3903 () ValueCell!993)

(assert (=> b!103263 (= condMapEmpty!3904 (= (arr!2057 (_values!2544 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!993)) mapDefault!3903)))))

(assert (= (and start!12202 res!51563) b!103257))

(assert (= (and b!103257 res!51565) b!103255))

(assert (= (and b!103255 res!51560) b!103260))

(assert (= (and b!103260 res!51564) b!103262))

(assert (= (and b!103262 res!51558) b!103253))

(assert (= (and b!103253 res!51562) b!103245))

(assert (= (and b!103245 c!17771) b!103246))

(assert (= (and b!103245 (not c!17771)) b!103259))

(assert (= (and b!103245 res!51559) b!103247))

(assert (= (and b!103247 (not res!51561)) b!103250))

(assert (= (and b!103254 condMapEmpty!3903) mapIsEmpty!3904))

(assert (= (and b!103254 (not condMapEmpty!3903)) mapNonEmpty!3904))

(get-info :version)

(assert (= (and mapNonEmpty!3904 ((_ is ValueCellFull!993) mapValue!3904)) b!103248))

(assert (= (and b!103254 ((_ is ValueCellFull!993) mapDefault!3904)) b!103244))

(assert (= b!103261 b!103254))

(assert (= b!103251 b!103261))

(assert (= b!103252 b!103251))

(assert (= start!12202 b!103252))

(assert (= (and b!103263 condMapEmpty!3904) mapIsEmpty!3903))

(assert (= (and b!103263 (not condMapEmpty!3904)) mapNonEmpty!3903))

(assert (= (and mapNonEmpty!3903 ((_ is ValueCellFull!993) mapValue!3903)) b!103256))

(assert (= (and b!103263 ((_ is ValueCellFull!993) mapDefault!3903)) b!103258))

(assert (= b!103249 b!103263))

(assert (= start!12202 b!103249))

(declare-fun b_lambda!4635 () Bool)

(assert (=> (not b_lambda!4635) (not b!103253)))

(declare-fun t!5708 () Bool)

(declare-fun tb!2041 () Bool)

(assert (=> (and b!103261 (= (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))) t!5708) tb!2041))

(declare-fun result!3433 () Bool)

(assert (=> tb!2041 (= result!3433 tp_is_empty!2673)))

(assert (=> b!103253 t!5708))

(declare-fun b_and!6401 () Bool)

(assert (= b_and!6397 (and (=> t!5708 result!3433) b_and!6401)))

(declare-fun tb!2043 () Bool)

(declare-fun t!5710 () Bool)

(assert (=> (and b!103249 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))) t!5710) tb!2043))

(declare-fun result!3437 () Bool)

(assert (= result!3437 result!3433))

(assert (=> b!103253 t!5710))

(declare-fun b_and!6403 () Bool)

(assert (= b_and!6399 (and (=> t!5710 result!3437) b_and!6403)))

(declare-fun m!114175 () Bool)

(assert (=> b!103249 m!114175))

(declare-fun m!114177 () Bool)

(assert (=> b!103249 m!114177))

(declare-fun m!114179 () Bool)

(assert (=> b!103247 m!114179))

(declare-fun m!114181 () Bool)

(assert (=> b!103247 m!114181))

(declare-fun m!114183 () Bool)

(assert (=> b!103247 m!114183))

(declare-fun m!114185 () Bool)

(assert (=> b!103247 m!114185))

(declare-fun m!114187 () Bool)

(assert (=> b!103247 m!114187))

(declare-fun m!114189 () Bool)

(assert (=> b!103247 m!114189))

(assert (=> b!103247 m!114181))

(assert (=> b!103247 m!114187))

(assert (=> b!103247 m!114179))

(declare-fun m!114191 () Bool)

(assert (=> b!103247 m!114191))

(declare-fun m!114193 () Bool)

(assert (=> b!103247 m!114193))

(declare-fun m!114195 () Bool)

(assert (=> mapNonEmpty!3903 m!114195))

(declare-fun m!114197 () Bool)

(assert (=> b!103246 m!114197))

(declare-fun m!114199 () Bool)

(assert (=> b!103246 m!114199))

(assert (=> b!103246 m!114187))

(declare-fun m!114201 () Bool)

(assert (=> b!103246 m!114201))

(assert (=> b!103246 m!114187))

(assert (=> b!103246 m!114187))

(declare-fun m!114203 () Bool)

(assert (=> b!103246 m!114203))

(assert (=> b!103246 m!114187))

(declare-fun m!114205 () Bool)

(assert (=> b!103246 m!114205))

(assert (=> b!103253 m!114187))

(declare-fun m!114207 () Bool)

(assert (=> b!103253 m!114207))

(declare-fun m!114209 () Bool)

(assert (=> b!103253 m!114209))

(assert (=> b!103253 m!114207))

(assert (=> b!103253 m!114209))

(declare-fun m!114211 () Bool)

(assert (=> b!103253 m!114211))

(declare-fun m!114213 () Bool)

(assert (=> b!103262 m!114213))

(declare-fun m!114215 () Bool)

(assert (=> b!103262 m!114215))

(declare-fun m!114217 () Bool)

(assert (=> start!12202 m!114217))

(declare-fun m!114219 () Bool)

(assert (=> b!103255 m!114219))

(declare-fun m!114221 () Bool)

(assert (=> b!103261 m!114221))

(declare-fun m!114223 () Bool)

(assert (=> b!103261 m!114223))

(assert (=> b!103245 m!114187))

(assert (=> b!103245 m!114187))

(declare-fun m!114225 () Bool)

(assert (=> b!103245 m!114225))

(assert (=> b!103245 m!114187))

(declare-fun m!114227 () Bool)

(assert (=> b!103245 m!114227))

(declare-fun m!114229 () Bool)

(assert (=> mapNonEmpty!3904 m!114229))

(check-sat b_and!6401 (not b!103249) (not mapNonEmpty!3904) (not b!103247) (not mapNonEmpty!3903) (not start!12202) tp_is_empty!2673 (not b_next!2515) (not b!103246) (not b!103253) (not b!103245) (not b!103262) b_and!6403 (not b_next!2513) (not b!103255) (not b!103261) (not b_lambda!4635))
(check-sat b_and!6401 b_and!6403 (not b_next!2513) (not b_next!2515))
(get-model)

(declare-fun b_lambda!4639 () Bool)

(assert (= b_lambda!4635 (or (and b!103261 b_free!2513) (and b!103249 b_free!2515 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))))) b_lambda!4639)))

(check-sat b_and!6401 (not b!103249) (not mapNonEmpty!3904) (not b_lambda!4639) (not b!103247) (not mapNonEmpty!3903) (not start!12202) tp_is_empty!2673 (not b_next!2515) (not b!103246) (not b!103253) (not b!103245) (not b!103262) b_and!6403 (not b_next!2513) (not b!103255) (not b!103261))
(check-sat b_and!6401 b_and!6403 (not b_next!2513) (not b_next!2515))
(get-model)

(declare-fun d!27763 () Bool)

(declare-fun e!67352 () Bool)

(assert (=> d!27763 e!67352))

(declare-fun res!51592 () Bool)

(assert (=> d!27763 (=> res!51592 e!67352)))

(declare-fun lt!52601 () Bool)

(assert (=> d!27763 (= res!51592 (not lt!52601))))

(declare-fun lt!52599 () Bool)

(assert (=> d!27763 (= lt!52601 lt!52599)))

(declare-fun lt!52598 () Unit!3170)

(declare-fun e!67351 () Unit!3170)

(assert (=> d!27763 (= lt!52598 e!67351)))

(declare-fun c!17777 () Bool)

(assert (=> d!27763 (= c!17777 lt!52599)))

(declare-fun containsKey!158 (List!1637 (_ BitVec 64)) Bool)

(assert (=> d!27763 (= lt!52599 (containsKey!158 (toList!805 lt!52550) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> d!27763 (= (contains!825 lt!52550 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) lt!52601)))

(declare-fun b!103334 () Bool)

(declare-fun lt!52600 () Unit!3170)

(assert (=> b!103334 (= e!67351 lt!52600)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!107 (List!1637 (_ BitVec 64)) Unit!3170)

(assert (=> b!103334 (= lt!52600 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52550) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-datatypes ((Option!160 0))(
  ( (Some!159 (v!2880 V!3211)) (None!158) )
))
(declare-fun isDefined!108 (Option!160) Bool)

(declare-fun getValueByKey!154 (List!1637 (_ BitVec 64)) Option!160)

(assert (=> b!103334 (isDefined!108 (getValueByKey!154 (toList!805 lt!52550) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun b!103335 () Bool)

(declare-fun Unit!3177 () Unit!3170)

(assert (=> b!103335 (= e!67351 Unit!3177)))

(declare-fun b!103336 () Bool)

(assert (=> b!103336 (= e!67352 (isDefined!108 (getValueByKey!154 (toList!805 lt!52550) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))))

(assert (= (and d!27763 c!17777) b!103334))

(assert (= (and d!27763 (not c!17777)) b!103335))

(assert (= (and d!27763 (not res!51592)) b!103336))

(assert (=> d!27763 m!114187))

(declare-fun m!114287 () Bool)

(assert (=> d!27763 m!114287))

(assert (=> b!103334 m!114187))

(declare-fun m!114289 () Bool)

(assert (=> b!103334 m!114289))

(assert (=> b!103334 m!114187))

(declare-fun m!114291 () Bool)

(assert (=> b!103334 m!114291))

(assert (=> b!103334 m!114291))

(declare-fun m!114293 () Bool)

(assert (=> b!103334 m!114293))

(assert (=> b!103336 m!114187))

(assert (=> b!103336 m!114291))

(assert (=> b!103336 m!114291))

(assert (=> b!103336 m!114293))

(assert (=> b!103245 d!27763))

(declare-fun b!103421 () Bool)

(declare-fun res!51633 () Bool)

(declare-datatypes ((SeekEntryResult!268 0))(
  ( (MissingZero!268 (index!3219 (_ BitVec 32))) (Found!268 (index!3220 (_ BitVec 32))) (Intermediate!268 (undefined!1080 Bool) (index!3221 (_ BitVec 32)) (x!13510 (_ BitVec 32))) (Undefined!268) (MissingVacant!268 (index!3222 (_ BitVec 32))) )
))
(declare-fun lt!52656 () SeekEntryResult!268)

(assert (=> b!103421 (= res!51633 (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3222 lt!52656)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!67408 () Bool)

(assert (=> b!103421 (=> (not res!51633) (not e!67408))))

(declare-fun b!103422 () Bool)

(declare-fun e!67418 () tuple2!2400)

(declare-fun lt!52677 () tuple2!2400)

(assert (=> b!103422 (= e!67418 (tuple2!2401 (_1!1210 lt!52677) (_2!1210 lt!52677)))))

(declare-fun call!10851 () tuple2!2400)

(assert (=> b!103422 (= lt!52677 call!10851)))

(declare-fun call!10849 () ListLongMap!1579)

(declare-fun bm!10828 () Bool)

(declare-fun lt!52676 () SeekEntryResult!268)

(declare-fun c!17808 () Bool)

(declare-fun c!17806 () Bool)

(declare-fun c!17814 () Bool)

(declare-fun lt!52663 () (_ BitVec 32))

(assert (=> bm!10828 (= call!10849 (getCurrentListMap!482 (_keys!4263 newMap!16) (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (ite c!17808 (ite c!17814 (extraKeys!2370 newMap!16) lt!52663) (extraKeys!2370 newMap!16)) (zeroValue!2438 newMap!16) (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun bm!10829 () Bool)

(declare-fun call!10831 () ListLongMap!1579)

(declare-fun lt!52662 () tuple2!2400)

(assert (=> bm!10829 (= call!10831 (map!1279 (_2!1210 lt!52662)))))

(declare-fun e!67406 () Bool)

(declare-fun call!10854 () ListLongMap!1579)

(declare-fun b!103423 () Bool)

(assert (=> b!103423 (= e!67406 (= call!10831 (+!143 call!10854 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun b!103424 () Bool)

(declare-fun res!51634 () Bool)

(declare-fun e!67402 () Bool)

(assert (=> b!103424 (=> (not res!51634) (not e!67402))))

(declare-fun lt!52681 () SeekEntryResult!268)

(assert (=> b!103424 (= res!51634 (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3219 lt!52681)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103425 () Bool)

(declare-fun e!67410 () ListLongMap!1579)

(declare-fun call!10835 () ListLongMap!1579)

(assert (=> b!103425 (= e!67410 call!10835)))

(declare-fun bm!10831 () Bool)

(declare-fun c!17819 () Bool)

(assert (=> bm!10831 (= c!17819 c!17806)))

(declare-fun call!10843 () Bool)

(assert (=> bm!10831 (= call!10843 (contains!825 e!67410 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun bm!10832 () Bool)

(assert (=> bm!10832 (= call!10835 call!10849)))

(declare-fun b!103426 () Bool)

(declare-fun e!67403 () tuple2!2400)

(declare-fun e!67399 () tuple2!2400)

(assert (=> b!103426 (= e!67403 e!67399)))

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4334 (_ BitVec 32)) SeekEntryResult!268)

(assert (=> b!103426 (= lt!52676 (seekEntryOrOpen!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(assert (=> b!103426 (= c!17806 ((_ is Undefined!268) lt!52676))))

(declare-fun c!17811 () Bool)

(declare-fun bm!10833 () Bool)

(declare-fun updateHelperNewKey!46 (LongMapFixedSize!894 (_ BitVec 64) V!3211 (_ BitVec 32)) tuple2!2400)

(assert (=> bm!10833 (= call!10851 (updateHelperNewKey!46 newMap!16 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546 (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676))))))

(declare-fun b!103427 () Bool)

(assert (=> b!103427 (= e!67410 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun bm!10834 () Bool)

(assert (=> bm!10834 (= call!10854 (map!1279 newMap!16))))

(declare-fun b!103428 () Bool)

(declare-fun res!51631 () Bool)

(declare-fun e!67407 () Bool)

(assert (=> b!103428 (=> (not res!51631) (not e!67407))))

(assert (=> b!103428 (= res!51631 (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3219 lt!52656)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10835 () Bool)

(declare-fun call!10847 () ListLongMap!1579)

(declare-fun call!10833 () ListLongMap!1579)

(assert (=> bm!10835 (= call!10847 call!10833)))

(declare-fun b!103429 () Bool)

(declare-fun e!67416 () Bool)

(declare-fun e!67398 () Bool)

(assert (=> b!103429 (= e!67416 e!67398)))

(declare-fun c!17807 () Bool)

(assert (=> b!103429 (= c!17807 (_1!1210 lt!52662))))

(declare-fun d!27765 () Bool)

(assert (=> d!27765 e!67416))

(declare-fun res!51626 () Bool)

(assert (=> d!27765 (=> (not res!51626) (not e!67416))))

(assert (=> d!27765 (= res!51626 (valid!405 (_2!1210 lt!52662)))))

(assert (=> d!27765 (= lt!52662 e!67403)))

(assert (=> d!27765 (= c!17808 (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvneg (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))))

(assert (=> d!27765 (valid!405 newMap!16)))

(assert (=> d!27765 (= (update!156 newMap!16 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546) lt!52662)))

(declare-fun lt!52679 () SeekEntryResult!268)

(declare-fun c!17815 () Bool)

(declare-fun c!17813 () Bool)

(declare-fun c!17818 () Bool)

(declare-fun bm!10830 () Bool)

(declare-fun call!10852 () Bool)

(declare-fun lt!52659 () SeekEntryResult!268)

(declare-fun c!17810 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!10830 (= call!10852 (inRange!0 (ite c!17806 (ite c!17813 (index!3220 lt!52679) (ite c!17818 (index!3219 lt!52656) (index!3222 lt!52656))) (ite c!17815 (index!3220 lt!52659) (ite c!17810 (index!3219 lt!52681) (index!3222 lt!52681)))) (mask!6697 newMap!16)))))

(declare-fun b!103430 () Bool)

(assert (=> b!103430 (= c!17811 ((_ is MissingVacant!268) lt!52676))))

(assert (=> b!103430 (= e!67399 e!67418)))

(declare-fun e!67417 () Bool)

(declare-fun b!103431 () Bool)

(assert (=> b!103431 (= e!67417 (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52679)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun b!103432 () Bool)

(declare-fun e!67414 () ListLongMap!1579)

(assert (=> b!103432 (= e!67414 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun bm!10836 () Bool)

(declare-fun call!10846 () SeekEntryResult!268)

(declare-fun call!10848 () SeekEntryResult!268)

(assert (=> bm!10836 (= call!10846 call!10848)))

(declare-fun b!103433 () Bool)

(declare-fun res!51628 () Bool)

(declare-fun call!10832 () Bool)

(assert (=> b!103433 (= res!51628 call!10832)))

(declare-fun e!67397 () Bool)

(assert (=> b!103433 (=> (not res!51628) (not e!67397))))

(declare-fun b!103434 () Bool)

(declare-fun call!10838 () Bool)

(assert (=> b!103434 (= e!67402 (not call!10838))))

(declare-fun b!103435 () Bool)

(declare-fun e!67401 () Bool)

(assert (=> b!103435 (= e!67401 ((_ is Undefined!268) lt!52681))))

(declare-fun bm!10837 () Bool)

(assert (=> bm!10837 (= call!10832 call!10852)))

(declare-fun b!103436 () Bool)

(declare-fun call!10845 () ListLongMap!1579)

(declare-fun call!10836 () ListLongMap!1579)

(assert (=> b!103436 (= e!67414 (ite c!17814 call!10836 call!10845))))

(declare-fun bm!10838 () Bool)

(declare-fun call!10842 () Bool)

(assert (=> bm!10838 (= call!10842 (arrayContainsKey!0 (_keys!4263 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!103437 () Bool)

(declare-fun call!10850 () Bool)

(assert (=> b!103437 (= e!67407 (not call!10850))))

(declare-fun bm!10839 () Bool)

(assert (=> bm!10839 (= call!10833 (+!143 e!67414 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun c!17809 () Bool)

(assert (=> bm!10839 (= c!17809 c!17808)))

(declare-fun b!103438 () Bool)

(declare-fun lt!52674 () Unit!3170)

(declare-fun lt!52666 () Unit!3170)

(assert (=> b!103438 (= lt!52674 lt!52666)))

(declare-fun call!10839 () ListLongMap!1579)

(assert (=> b!103438 (contains!825 call!10839 (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676)))))

(declare-fun lt!52657 () array!4336)

(declare-fun lemmaValidKeyInArrayIsInListMap!104 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 32) Int) Unit!3170)

(assert (=> b!103438 (= lt!52666 (lemmaValidKeyInArrayIsInListMap!104 (_keys!4263 newMap!16) lt!52657 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (index!3220 lt!52676) (defaultEntry!2561 newMap!16)))))

(assert (=> b!103438 (= lt!52657 (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))))))

(declare-fun lt!52678 () Unit!3170)

(declare-fun lt!52661 () Unit!3170)

(assert (=> b!103438 (= lt!52678 lt!52661)))

(assert (=> b!103438 (= call!10833 call!10835)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!46 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 32) (_ BitVec 64) V!3211 Int) Unit!3170)

(assert (=> b!103438 (= lt!52661 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (index!3220 lt!52676) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52667 () Unit!3170)

(declare-fun e!67411 () Unit!3170)

(assert (=> b!103438 (= lt!52667 e!67411)))

(assert (=> b!103438 (= c!17815 call!10843)))

(declare-fun e!67413 () tuple2!2400)

(assert (=> b!103438 (= e!67413 (tuple2!2401 true (LongMapFixedSize!895 (defaultEntry!2561 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (_size!496 newMap!16) (_keys!4263 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))) (_vacant!496 newMap!16))))))

(declare-fun b!103439 () Bool)

(declare-fun e!67409 () Unit!3170)

(declare-fun Unit!3178 () Unit!3170)

(assert (=> b!103439 (= e!67409 Unit!3178)))

(declare-fun lt!52680 () Unit!3170)

(declare-fun call!10853 () Unit!3170)

(assert (=> b!103439 (= lt!52680 call!10853)))

(assert (=> b!103439 (= lt!52679 call!10846)))

(declare-fun res!51625 () Bool)

(assert (=> b!103439 (= res!51625 ((_ is Found!268) lt!52679))))

(assert (=> b!103439 (=> (not res!51625) (not e!67417))))

(assert (=> b!103439 e!67417))

(declare-fun lt!52664 () Unit!3170)

(assert (=> b!103439 (= lt!52664 lt!52680)))

(assert (=> b!103439 false))

(declare-fun b!103440 () Bool)

(assert (=> b!103440 (= e!67398 (= call!10831 call!10854))))

(declare-fun b!103441 () Bool)

(assert (=> b!103441 (= e!67408 (not call!10850))))

(declare-fun bm!10840 () Bool)

(declare-fun call!10834 () Bool)

(assert (=> bm!10840 (= call!10834 call!10852)))

(declare-fun b!103442 () Bool)

(declare-fun e!67415 () Bool)

(assert (=> b!103442 (= e!67415 (not call!10838))))

(declare-fun bm!10841 () Bool)

(declare-fun call!10840 () Unit!3170)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!46 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 64) Int) Unit!3170)

(assert (=> bm!10841 (= call!10840 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)))))

(declare-fun bm!10842 () Bool)

(assert (=> bm!10842 (= call!10845 call!10839)))

(declare-fun b!103443 () Bool)

(declare-fun Unit!3179 () Unit!3170)

(assert (=> b!103443 (= e!67411 Unit!3179)))

(declare-fun lt!52671 () Unit!3170)

(assert (=> b!103443 (= lt!52671 call!10840)))

(declare-fun call!10841 () SeekEntryResult!268)

(assert (=> b!103443 (= lt!52681 call!10841)))

(assert (=> b!103443 (= c!17810 ((_ is MissingZero!268) lt!52681))))

(declare-fun e!67412 () Bool)

(assert (=> b!103443 e!67412))

(declare-fun lt!52660 () Unit!3170)

(assert (=> b!103443 (= lt!52660 lt!52671)))

(assert (=> b!103443 false))

(declare-fun b!103444 () Bool)

(declare-fun lt!52682 () Unit!3170)

(declare-fun lt!52670 () Unit!3170)

(assert (=> b!103444 (= lt!52682 lt!52670)))

(assert (=> b!103444 (= call!10847 call!10845)))

(declare-fun lt!52673 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!46 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 V!3211 Int) Unit!3170)

(assert (=> b!103444 (= lt!52670 (lemmaChangeZeroKeyThenAddPairToListMap!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) lt!52673 (zeroValue!2438 newMap!16) lt!52546 (minValue!2438 newMap!16) (defaultEntry!2561 newMap!16)))))

(assert (=> b!103444 (= lt!52673 (bvor (extraKeys!2370 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!67400 () tuple2!2400)

(assert (=> b!103444 (= e!67400 (tuple2!2401 true (LongMapFixedSize!895 (defaultEntry!2561 newMap!16) (mask!6697 newMap!16) (bvor (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) lt!52546 (minValue!2438 newMap!16) (_size!496 newMap!16) (_keys!4263 newMap!16) (_values!2544 newMap!16) (_vacant!496 newMap!16))))))

(declare-fun b!103445 () Bool)

(assert (=> b!103445 (= e!67403 e!67400)))

(assert (=> b!103445 (= c!17814 (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103446 () Bool)

(declare-fun res!51624 () Bool)

(assert (=> b!103446 (= res!51624 (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3222 lt!52681)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103446 (=> (not res!51624) (not e!67415))))

(declare-fun b!103447 () Bool)

(assert (=> b!103447 (= e!67418 e!67413)))

(declare-fun c!17812 () Bool)

(assert (=> b!103447 (= c!17812 ((_ is MissingZero!268) lt!52676))))

(declare-fun bm!10843 () Bool)

(assert (=> bm!10843 (= call!10848 (seekEntryOrOpen!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun b!103448 () Bool)

(declare-fun res!51621 () Bool)

(assert (=> b!103448 (=> (not res!51621) (not e!67402))))

(declare-fun call!10837 () Bool)

(assert (=> b!103448 (= res!51621 call!10837)))

(assert (=> b!103448 (= e!67412 e!67402)))

(declare-fun b!103449 () Bool)

(declare-fun c!17817 () Bool)

(assert (=> b!103449 (= c!17817 ((_ is MissingVacant!268) lt!52681))))

(assert (=> b!103449 (= e!67412 e!67401)))

(declare-fun bm!10844 () Bool)

(declare-fun call!10844 () Bool)

(assert (=> bm!10844 (= call!10844 call!10834)))

(declare-fun b!103450 () Bool)

(declare-fun e!67404 () Bool)

(assert (=> b!103450 (= e!67404 e!67408)))

(declare-fun res!51632 () Bool)

(assert (=> b!103450 (= res!51632 call!10844)))

(assert (=> b!103450 (=> (not res!51632) (not e!67408))))

(declare-fun bm!10845 () Bool)

(assert (=> bm!10845 (= call!10839 (getCurrentListMap!482 (_keys!4263 newMap!16) (ite c!17808 (_values!2544 newMap!16) lt!52657) (mask!6697 newMap!16) (ite (and c!17808 c!17814) lt!52673 (extraKeys!2370 newMap!16)) (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun bm!10846 () Bool)

(assert (=> bm!10846 (= call!10836 call!10849)))

(declare-fun b!103451 () Bool)

(declare-fun lt!52668 () Unit!3170)

(assert (=> b!103451 (= e!67411 lt!52668)))

(assert (=> b!103451 (= lt!52668 call!10853)))

(assert (=> b!103451 (= lt!52659 call!10841)))

(declare-fun res!51629 () Bool)

(assert (=> b!103451 (= res!51629 ((_ is Found!268) lt!52659))))

(assert (=> b!103451 (=> (not res!51629) (not e!67397))))

(assert (=> b!103451 e!67397))

(declare-fun b!103452 () Bool)

(assert (=> b!103452 (= e!67398 e!67406)))

(declare-fun res!51623 () Bool)

(assert (=> b!103452 (= res!51623 (contains!825 call!10831 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> b!103452 (=> (not res!51623) (not e!67406))))

(declare-fun bm!10847 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!46 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 64) Int) Unit!3170)

(assert (=> bm!10847 (= call!10853 (lemmaInListMapThenSeekEntryOrOpenFindsIt!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)))))

(declare-fun bm!10848 () Bool)

(assert (=> bm!10848 (= call!10838 call!10842)))

(declare-fun b!103453 () Bool)

(declare-fun res!51627 () Bool)

(assert (=> b!103453 (= res!51627 call!10834)))

(assert (=> b!103453 (=> (not res!51627) (not e!67417))))

(declare-fun b!103454 () Bool)

(declare-fun c!17816 () Bool)

(assert (=> b!103454 (= c!17816 ((_ is MissingVacant!268) lt!52656))))

(declare-fun e!67405 () Bool)

(assert (=> b!103454 (= e!67405 e!67404)))

(declare-fun b!103455 () Bool)

(declare-fun lt!52672 () Unit!3170)

(assert (=> b!103455 (= lt!52672 e!67409)))

(assert (=> b!103455 (= c!17813 call!10843)))

(assert (=> b!103455 (= e!67399 (tuple2!2401 false newMap!16))))

(declare-fun bm!10849 () Bool)

(assert (=> bm!10849 (= call!10837 call!10832)))

(declare-fun b!103456 () Bool)

(declare-fun lt!52675 () Unit!3170)

(assert (=> b!103456 (= e!67409 lt!52675)))

(assert (=> b!103456 (= lt!52675 call!10840)))

(assert (=> b!103456 (= lt!52656 call!10846)))

(assert (=> b!103456 (= c!17818 ((_ is MissingZero!268) lt!52656))))

(assert (=> b!103456 e!67405))

(declare-fun b!103457 () Bool)

(assert (=> b!103457 (= e!67397 (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52659)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun b!103458 () Bool)

(declare-fun lt!52669 () Unit!3170)

(declare-fun lt!52665 () Unit!3170)

(assert (=> b!103458 (= lt!52669 lt!52665)))

(assert (=> b!103458 (= call!10847 call!10836)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!46 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 V!3211 Int) Unit!3170)

(assert (=> b!103458 (= lt!52665 (lemmaChangeLongMinValueKeyThenAddPairToListMap!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) lt!52663 (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) lt!52546 (defaultEntry!2561 newMap!16)))))

(assert (=> b!103458 (= lt!52663 (bvor (extraKeys!2370 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!103458 (= e!67400 (tuple2!2401 true (LongMapFixedSize!895 (defaultEntry!2561 newMap!16) (mask!6697 newMap!16) (bvor (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) (zeroValue!2438 newMap!16) lt!52546 (_size!496 newMap!16) (_keys!4263 newMap!16) (_values!2544 newMap!16) (_vacant!496 newMap!16))))))

(declare-fun b!103459 () Bool)

(declare-fun res!51630 () Bool)

(assert (=> b!103459 (=> (not res!51630) (not e!67407))))

(assert (=> b!103459 (= res!51630 call!10844)))

(assert (=> b!103459 (= e!67405 e!67407)))

(declare-fun bm!10850 () Bool)

(assert (=> bm!10850 (= call!10841 call!10848)))

(declare-fun b!103460 () Bool)

(assert (=> b!103460 (= e!67404 ((_ is Undefined!268) lt!52656))))

(declare-fun bm!10851 () Bool)

(assert (=> bm!10851 (= call!10850 call!10842)))

(declare-fun b!103461 () Bool)

(declare-fun lt!52658 () tuple2!2400)

(assert (=> b!103461 (= lt!52658 call!10851)))

(assert (=> b!103461 (= e!67413 (tuple2!2401 (_1!1210 lt!52658) (_2!1210 lt!52658)))))

(declare-fun b!103462 () Bool)

(assert (=> b!103462 (= e!67401 e!67415)))

(declare-fun res!51622 () Bool)

(assert (=> b!103462 (= res!51622 call!10837)))

(assert (=> b!103462 (=> (not res!51622) (not e!67415))))

(assert (= (and d!27765 c!17808) b!103445))

(assert (= (and d!27765 (not c!17808)) b!103426))

(assert (= (and b!103445 c!17814) b!103444))

(assert (= (and b!103445 (not c!17814)) b!103458))

(assert (= (or b!103444 b!103458) bm!10846))

(assert (= (or b!103444 b!103458) bm!10842))

(assert (= (or b!103444 b!103458) bm!10835))

(assert (= (and b!103426 c!17806) b!103455))

(assert (= (and b!103426 (not c!17806)) b!103430))

(assert (= (and b!103455 c!17813) b!103439))

(assert (= (and b!103455 (not c!17813)) b!103456))

(assert (= (and b!103439 res!51625) b!103453))

(assert (= (and b!103453 res!51627) b!103431))

(assert (= (and b!103456 c!17818) b!103459))

(assert (= (and b!103456 (not c!17818)) b!103454))

(assert (= (and b!103459 res!51630) b!103428))

(assert (= (and b!103428 res!51631) b!103437))

(assert (= (and b!103454 c!17816) b!103450))

(assert (= (and b!103454 (not c!17816)) b!103460))

(assert (= (and b!103450 res!51632) b!103421))

(assert (= (and b!103421 res!51633) b!103441))

(assert (= (or b!103459 b!103450) bm!10844))

(assert (= (or b!103437 b!103441) bm!10851))

(assert (= (or b!103453 bm!10844) bm!10840))

(assert (= (or b!103439 b!103456) bm!10836))

(assert (= (and b!103430 c!17811) b!103422))

(assert (= (and b!103430 (not c!17811)) b!103447))

(assert (= (and b!103447 c!17812) b!103461))

(assert (= (and b!103447 (not c!17812)) b!103438))

(assert (= (and b!103438 c!17815) b!103451))

(assert (= (and b!103438 (not c!17815)) b!103443))

(assert (= (and b!103451 res!51629) b!103433))

(assert (= (and b!103433 res!51628) b!103457))

(assert (= (and b!103443 c!17810) b!103448))

(assert (= (and b!103443 (not c!17810)) b!103449))

(assert (= (and b!103448 res!51621) b!103424))

(assert (= (and b!103424 res!51634) b!103434))

(assert (= (and b!103449 c!17817) b!103462))

(assert (= (and b!103449 (not c!17817)) b!103435))

(assert (= (and b!103462 res!51622) b!103446))

(assert (= (and b!103446 res!51624) b!103442))

(assert (= (or b!103448 b!103462) bm!10849))

(assert (= (or b!103434 b!103442) bm!10848))

(assert (= (or b!103433 bm!10849) bm!10837))

(assert (= (or b!103451 b!103443) bm!10850))

(assert (= (or b!103422 b!103461) bm!10833))

(assert (= (or bm!10840 bm!10837) bm!10830))

(assert (= (or b!103455 b!103438) bm!10832))

(assert (= (or b!103439 b!103451) bm!10847))

(assert (= (or b!103456 b!103443) bm!10841))

(assert (= (or bm!10851 bm!10848) bm!10838))

(assert (= (or bm!10836 bm!10850) bm!10843))

(assert (= (or b!103455 b!103438) bm!10831))

(assert (= (and bm!10831 c!17819) b!103425))

(assert (= (and bm!10831 (not c!17819)) b!103427))

(assert (= (or bm!10846 bm!10832) bm!10828))

(assert (= (or bm!10842 b!103438) bm!10845))

(assert (= (or bm!10835 b!103438) bm!10839))

(assert (= (and bm!10839 c!17809) b!103436))

(assert (= (and bm!10839 (not c!17809)) b!103432))

(assert (= (and d!27765 res!51626) b!103429))

(assert (= (and b!103429 c!17807) b!103452))

(assert (= (and b!103429 (not c!17807)) b!103440))

(assert (= (and b!103452 res!51623) b!103423))

(assert (= (or b!103423 b!103440) bm!10834))

(assert (= (or b!103452 b!103423 b!103440) bm!10829))

(declare-fun m!114295 () Bool)

(assert (=> b!103427 m!114295))

(declare-fun m!114297 () Bool)

(assert (=> b!103457 m!114297))

(declare-fun m!114299 () Bool)

(assert (=> b!103446 m!114299))

(declare-fun m!114301 () Bool)

(assert (=> bm!10839 m!114301))

(assert (=> bm!10847 m!114187))

(declare-fun m!114303 () Bool)

(assert (=> bm!10847 m!114303))

(assert (=> b!103426 m!114187))

(declare-fun m!114305 () Bool)

(assert (=> b!103426 m!114305))

(assert (=> bm!10838 m!114187))

(declare-fun m!114307 () Bool)

(assert (=> bm!10838 m!114307))

(assert (=> bm!10833 m!114187))

(declare-fun m!114309 () Bool)

(assert (=> bm!10833 m!114309))

(assert (=> bm!10831 m!114187))

(declare-fun m!114311 () Bool)

(assert (=> bm!10831 m!114311))

(declare-fun m!114313 () Bool)

(assert (=> d!27765 m!114313))

(assert (=> d!27765 m!114219))

(declare-fun m!114315 () Bool)

(assert (=> bm!10829 m!114315))

(declare-fun m!114317 () Bool)

(assert (=> b!103444 m!114317))

(assert (=> b!103452 m!114187))

(declare-fun m!114319 () Bool)

(assert (=> b!103452 m!114319))

(declare-fun m!114321 () Bool)

(assert (=> b!103421 m!114321))

(declare-fun m!114323 () Bool)

(assert (=> b!103438 m!114323))

(assert (=> b!103438 m!114187))

(declare-fun m!114325 () Bool)

(assert (=> b!103438 m!114325))

(declare-fun m!114327 () Bool)

(assert (=> b!103438 m!114327))

(declare-fun m!114329 () Bool)

(assert (=> b!103438 m!114329))

(assert (=> b!103438 m!114327))

(declare-fun m!114331 () Bool)

(assert (=> b!103438 m!114331))

(declare-fun m!114333 () Bool)

(assert (=> bm!10830 m!114333))

(declare-fun m!114335 () Bool)

(assert (=> b!103428 m!114335))

(declare-fun m!114337 () Bool)

(assert (=> b!103423 m!114337))

(assert (=> b!103432 m!114295))

(assert (=> bm!10841 m!114187))

(declare-fun m!114339 () Bool)

(assert (=> bm!10841 m!114339))

(assert (=> bm!10834 m!114213))

(declare-fun m!114341 () Bool)

(assert (=> bm!10845 m!114341))

(assert (=> bm!10828 m!114323))

(declare-fun m!114343 () Bool)

(assert (=> bm!10828 m!114343))

(declare-fun m!114345 () Bool)

(assert (=> b!103458 m!114345))

(declare-fun m!114347 () Bool)

(assert (=> b!103424 m!114347))

(assert (=> bm!10843 m!114187))

(assert (=> bm!10843 m!114305))

(declare-fun m!114349 () Bool)

(assert (=> b!103431 m!114349))

(assert (=> b!103245 d!27765))

(declare-fun d!27767 () Bool)

(assert (=> d!27767 (not (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!52685 () Unit!3170)

(declare-fun choose!68 (array!4334 (_ BitVec 32) (_ BitVec 64) List!1638) Unit!3170)

(assert (=> d!27767 (= lt!52685 (choose!68 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635)))))

(assert (=> d!27767 (bvslt (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!27767 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635)) lt!52685)))

(declare-fun bs!4235 () Bool)

(assert (= bs!4235 d!27767))

(assert (=> bs!4235 m!114187))

(assert (=> bs!4235 m!114203))

(assert (=> bs!4235 m!114187))

(declare-fun m!114351 () Bool)

(assert (=> bs!4235 m!114351))

(assert (=> b!103246 d!27767))

(declare-fun d!27769 () Bool)

(assert (=> d!27769 (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) from!355 Nil!1635)))

(declare-fun lt!52688 () Unit!3170)

(declare-fun choose!39 (array!4334 (_ BitVec 32) (_ BitVec 32)) Unit!3170)

(assert (=> d!27769 (= lt!52688 (choose!39 (_keys!4263 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!27769 (bvslt (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!27769 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000000 from!355) lt!52688)))

(declare-fun bs!4236 () Bool)

(assert (= bs!4236 d!27769))

(assert (=> bs!4236 m!114199))

(declare-fun m!114353 () Bool)

(assert (=> bs!4236 m!114353))

(assert (=> b!103246 d!27769))

(declare-fun d!27771 () Bool)

(declare-fun res!51639 () Bool)

(declare-fun e!67423 () Bool)

(assert (=> d!27771 (=> res!51639 e!67423)))

(assert (=> d!27771 (= res!51639 (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> d!27771 (= (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!67423)))

(declare-fun b!103467 () Bool)

(declare-fun e!67424 () Bool)

(assert (=> b!103467 (= e!67423 e!67424)))

(declare-fun res!51640 () Bool)

(assert (=> b!103467 (=> (not res!51640) (not e!67424))))

(assert (=> b!103467 (= res!51640 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!103468 () Bool)

(assert (=> b!103468 (= e!67424 (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!27771 (not res!51639)) b!103467))

(assert (= (and b!103467 res!51640) b!103468))

(declare-fun m!114355 () Bool)

(assert (=> d!27771 m!114355))

(assert (=> b!103468 m!114187))

(declare-fun m!114357 () Bool)

(assert (=> b!103468 m!114357))

(assert (=> b!103246 d!27771))

(declare-fun d!27773 () Bool)

(declare-fun e!67427 () Bool)

(assert (=> d!27773 e!67427))

(declare-fun c!17822 () Bool)

(assert (=> d!27773 (= c!17822 (and (not (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!52691 () Unit!3170)

(declare-fun choose!645 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 64) (_ BitVec 32) Int) Unit!3170)

(assert (=> d!27773 (= lt!52691 (choose!645 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))))))

(assert (=> d!27773 (validMask!0 (mask!6697 (v!2876 (underlying!359 thiss!992))))))

(assert (=> d!27773 (= (lemmaListMapContainsThenArrayContainsFrom!110 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))) lt!52691)))

(declare-fun b!103473 () Bool)

(assert (=> b!103473 (= e!67427 (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!103474 () Bool)

(assert (=> b!103474 (= e!67427 (ite (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!27773 c!17822) b!103473))

(assert (= (and d!27773 (not c!17822)) b!103474))

(assert (=> d!27773 m!114187))

(declare-fun m!114359 () Bool)

(assert (=> d!27773 m!114359))

(assert (=> d!27773 m!114185))

(assert (=> b!103473 m!114187))

(assert (=> b!103473 m!114203))

(assert (=> b!103246 d!27773))

(declare-fun b!103485 () Bool)

(declare-fun e!67436 () Bool)

(declare-fun e!67439 () Bool)

(assert (=> b!103485 (= e!67436 e!67439)))

(declare-fun c!17825 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!103485 (= c!17825 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun b!103486 () Bool)

(declare-fun e!67437 () Bool)

(declare-fun contains!827 (List!1638 (_ BitVec 64)) Bool)

(assert (=> b!103486 (= e!67437 (contains!827 Nil!1635 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun b!103487 () Bool)

(declare-fun call!10857 () Bool)

(assert (=> b!103487 (= e!67439 call!10857)))

(declare-fun b!103488 () Bool)

(declare-fun e!67438 () Bool)

(assert (=> b!103488 (= e!67438 e!67436)))

(declare-fun res!51647 () Bool)

(assert (=> b!103488 (=> (not res!51647) (not e!67436))))

(assert (=> b!103488 (= res!51647 (not e!67437))))

(declare-fun res!51648 () Bool)

(assert (=> b!103488 (=> (not res!51648) (not e!67437))))

(assert (=> b!103488 (= res!51648 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun b!103489 () Bool)

(assert (=> b!103489 (= e!67439 call!10857)))

(declare-fun bm!10854 () Bool)

(assert (=> bm!10854 (= call!10857 (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!17825 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635) Nil!1635)))))

(declare-fun d!27775 () Bool)

(declare-fun res!51649 () Bool)

(assert (=> d!27775 (=> res!51649 e!67438)))

(assert (=> d!27775 (= res!51649 (bvsge from!355 (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(assert (=> d!27775 (= (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) from!355 Nil!1635) e!67438)))

(assert (= (and d!27775 (not res!51649)) b!103488))

(assert (= (and b!103488 res!51648) b!103486))

(assert (= (and b!103488 res!51647) b!103485))

(assert (= (and b!103485 c!17825) b!103487))

(assert (= (and b!103485 (not c!17825)) b!103489))

(assert (= (or b!103487 b!103489) bm!10854))

(assert (=> b!103485 m!114187))

(assert (=> b!103485 m!114187))

(declare-fun m!114361 () Bool)

(assert (=> b!103485 m!114361))

(assert (=> b!103486 m!114187))

(assert (=> b!103486 m!114187))

(declare-fun m!114363 () Bool)

(assert (=> b!103486 m!114363))

(assert (=> b!103488 m!114187))

(assert (=> b!103488 m!114187))

(assert (=> b!103488 m!114361))

(assert (=> bm!10854 m!114187))

(declare-fun m!114365 () Bool)

(assert (=> bm!10854 m!114365))

(assert (=> b!103246 d!27775))

(declare-fun d!27777 () Bool)

(assert (=> d!27777 (= (map!1279 newMap!16) (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun bs!4237 () Bool)

(assert (= bs!4237 d!27777))

(assert (=> bs!4237 m!114295))

(assert (=> b!103262 d!27777))

(declare-fun bm!10869 () Bool)

(declare-fun call!10872 () Bool)

(declare-fun lt!52753 () ListLongMap!1579)

(assert (=> bm!10869 (= call!10872 (contains!825 lt!52753 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10870 () Bool)

(declare-fun call!10874 () ListLongMap!1579)

(declare-fun call!10877 () ListLongMap!1579)

(assert (=> bm!10870 (= call!10874 call!10877)))

(declare-fun b!103532 () Bool)

(declare-fun e!67477 () Bool)

(declare-fun e!67478 () Bool)

(assert (=> b!103532 (= e!67477 e!67478)))

(declare-fun res!51672 () Bool)

(declare-fun call!10875 () Bool)

(assert (=> b!103532 (= res!51672 call!10875)))

(assert (=> b!103532 (=> (not res!51672) (not e!67478))))

(declare-fun bm!10871 () Bool)

(declare-fun call!10873 () ListLongMap!1579)

(declare-fun call!10878 () ListLongMap!1579)

(assert (=> bm!10871 (= call!10873 call!10878)))

(declare-fun b!103533 () Bool)

(declare-fun e!67467 () Bool)

(declare-fun apply!97 (ListLongMap!1579 (_ BitVec 64)) V!3211)

(assert (=> b!103533 (= e!67467 (= (apply!97 lt!52753 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))

(declare-fun b!103534 () Bool)

(declare-fun e!67471 () ListLongMap!1579)

(declare-fun e!67476 () ListLongMap!1579)

(assert (=> b!103534 (= e!67471 e!67476)))

(declare-fun c!17842 () Bool)

(assert (=> b!103534 (= c!17842 (and (not (= (bvand (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103535 () Bool)

(declare-fun res!51671 () Bool)

(declare-fun e!67469 () Bool)

(assert (=> b!103535 (=> (not res!51671) (not e!67469))))

(declare-fun e!67474 () Bool)

(assert (=> b!103535 (= res!51671 e!67474)))

(declare-fun res!51674 () Bool)

(assert (=> b!103535 (=> res!51674 e!67474)))

(declare-fun e!67466 () Bool)

(assert (=> b!103535 (= res!51674 (not e!67466))))

(declare-fun res!51673 () Bool)

(assert (=> b!103535 (=> (not res!51673) (not e!67466))))

(assert (=> b!103535 (= res!51673 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!103536 () Bool)

(declare-fun c!17843 () Bool)

(assert (=> b!103536 (= c!17843 (and (not (= (bvand (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!67473 () ListLongMap!1579)

(assert (=> b!103536 (= e!67476 e!67473)))

(declare-fun c!17839 () Bool)

(declare-fun bm!10872 () Bool)

(declare-fun call!10876 () ListLongMap!1579)

(assert (=> bm!10872 (= call!10877 (+!143 (ite c!17839 call!10876 (ite c!17842 call!10878 call!10873)) (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!103538 () Bool)

(declare-fun e!67475 () Bool)

(assert (=> b!103538 (= e!67475 (not call!10872))))

(declare-fun b!103539 () Bool)

(declare-fun e!67472 () Unit!3170)

(declare-fun Unit!3180 () Unit!3170)

(assert (=> b!103539 (= e!67472 Unit!3180)))

(declare-fun b!103540 () Bool)

(assert (=> b!103540 (= e!67466 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103541 () Bool)

(assert (=> b!103541 (= e!67473 call!10874)))

(declare-fun b!103542 () Bool)

(declare-fun e!67470 () Bool)

(assert (=> b!103542 (= e!67470 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103543 () Bool)

(declare-fun res!51670 () Bool)

(assert (=> b!103543 (=> (not res!51670) (not e!67469))))

(assert (=> b!103543 (= res!51670 e!67477)))

(declare-fun c!17841 () Bool)

(assert (=> b!103543 (= c!17841 (not (= (bvand (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!103544 () Bool)

(assert (=> b!103544 (= e!67476 call!10874)))

(declare-fun b!103545 () Bool)

(assert (=> b!103545 (= e!67473 call!10873)))

(declare-fun bm!10873 () Bool)

(assert (=> bm!10873 (= call!10878 call!10876)))

(declare-fun b!103546 () Bool)

(assert (=> b!103546 (= e!67478 (= (apply!97 lt!52753 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))

(declare-fun b!103547 () Bool)

(assert (=> b!103547 (= e!67471 (+!143 call!10877 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun bm!10874 () Bool)

(assert (=> bm!10874 (= call!10876 (getCurrentListMapNoExtraKeys!110 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))))))

(declare-fun d!27779 () Bool)

(assert (=> d!27779 e!67469))

(declare-fun res!51668 () Bool)

(assert (=> d!27779 (=> (not res!51668) (not e!67469))))

(assert (=> d!27779 (= res!51668 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun lt!52738 () ListLongMap!1579)

(assert (=> d!27779 (= lt!52753 lt!52738)))

(declare-fun lt!52737 () Unit!3170)

(assert (=> d!27779 (= lt!52737 e!67472)))

(declare-fun c!17838 () Bool)

(assert (=> d!27779 (= c!17838 e!67470)))

(declare-fun res!51676 () Bool)

(assert (=> d!27779 (=> (not res!51676) (not e!67470))))

(assert (=> d!27779 (= res!51676 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(assert (=> d!27779 (= lt!52738 e!67471)))

(assert (=> d!27779 (= c!17839 (and (not (= (bvand (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!27779 (validMask!0 (mask!6697 (v!2876 (underlying!359 thiss!992))))))

(assert (=> d!27779 (= (getCurrentListMap!482 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))) lt!52753)))

(declare-fun b!103537 () Bool)

(declare-fun e!67468 () Bool)

(assert (=> b!103537 (= e!67474 e!67468)))

(declare-fun res!51675 () Bool)

(assert (=> b!103537 (=> (not res!51675) (not e!67468))))

(assert (=> b!103537 (= res!51675 (contains!825 lt!52753 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103537 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!103548 () Bool)

(assert (=> b!103548 (= e!67469 e!67475)))

(declare-fun c!17840 () Bool)

(assert (=> b!103548 (= c!17840 (not (= (bvand (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103549 () Bool)

(assert (=> b!103549 (= e!67468 (= (apply!97 lt!52753 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103549 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2311 (_values!2544 (v!2876 (underlying!359 thiss!992))))))))

(assert (=> b!103549 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun bm!10875 () Bool)

(assert (=> bm!10875 (= call!10875 (contains!825 lt!52753 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103550 () Bool)

(declare-fun lt!52740 () Unit!3170)

(assert (=> b!103550 (= e!67472 lt!52740)))

(declare-fun lt!52746 () ListLongMap!1579)

(assert (=> b!103550 (= lt!52746 (getCurrentListMapNoExtraKeys!110 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))))))

(declare-fun lt!52741 () (_ BitVec 64))

(assert (=> b!103550 (= lt!52741 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52752 () (_ BitVec 64))

(assert (=> b!103550 (= lt!52752 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!52756 () Unit!3170)

(declare-fun addStillContains!73 (ListLongMap!1579 (_ BitVec 64) V!3211 (_ BitVec 64)) Unit!3170)

(assert (=> b!103550 (= lt!52756 (addStillContains!73 lt!52746 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) lt!52752))))

(assert (=> b!103550 (contains!825 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52752)))

(declare-fun lt!52749 () Unit!3170)

(assert (=> b!103550 (= lt!52749 lt!52756)))

(declare-fun lt!52751 () ListLongMap!1579)

(assert (=> b!103550 (= lt!52751 (getCurrentListMapNoExtraKeys!110 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))))))

(declare-fun lt!52750 () (_ BitVec 64))

(assert (=> b!103550 (= lt!52750 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52736 () (_ BitVec 64))

(assert (=> b!103550 (= lt!52736 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!52748 () Unit!3170)

(declare-fun addApplyDifferent!73 (ListLongMap!1579 (_ BitVec 64) V!3211 (_ BitVec 64)) Unit!3170)

(assert (=> b!103550 (= lt!52748 (addApplyDifferent!73 lt!52751 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))) lt!52736))))

(assert (=> b!103550 (= (apply!97 (+!143 lt!52751 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52736) (apply!97 lt!52751 lt!52736))))

(declare-fun lt!52747 () Unit!3170)

(assert (=> b!103550 (= lt!52747 lt!52748)))

(declare-fun lt!52754 () ListLongMap!1579)

(assert (=> b!103550 (= lt!52754 (getCurrentListMapNoExtraKeys!110 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))))))

(declare-fun lt!52755 () (_ BitVec 64))

(assert (=> b!103550 (= lt!52755 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52757 () (_ BitVec 64))

(assert (=> b!103550 (= lt!52757 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!52745 () Unit!3170)

(assert (=> b!103550 (= lt!52745 (addApplyDifferent!73 lt!52754 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) lt!52757))))

(assert (=> b!103550 (= (apply!97 (+!143 lt!52754 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52757) (apply!97 lt!52754 lt!52757))))

(declare-fun lt!52743 () Unit!3170)

(assert (=> b!103550 (= lt!52743 lt!52745)))

(declare-fun lt!52742 () ListLongMap!1579)

(assert (=> b!103550 (= lt!52742 (getCurrentListMapNoExtraKeys!110 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))))))

(declare-fun lt!52744 () (_ BitVec 64))

(assert (=> b!103550 (= lt!52744 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52739 () (_ BitVec 64))

(assert (=> b!103550 (= lt!52739 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!103550 (= lt!52740 (addApplyDifferent!73 lt!52742 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))) lt!52739))))

(assert (=> b!103550 (= (apply!97 (+!143 lt!52742 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52739) (apply!97 lt!52742 lt!52739))))

(declare-fun b!103551 () Bool)

(assert (=> b!103551 (= e!67475 e!67467)))

(declare-fun res!51669 () Bool)

(assert (=> b!103551 (= res!51669 call!10872)))

(assert (=> b!103551 (=> (not res!51669) (not e!67467))))

(declare-fun b!103552 () Bool)

(assert (=> b!103552 (= e!67477 (not call!10875))))

(assert (= (and d!27779 c!17839) b!103547))

(assert (= (and d!27779 (not c!17839)) b!103534))

(assert (= (and b!103534 c!17842) b!103544))

(assert (= (and b!103534 (not c!17842)) b!103536))

(assert (= (and b!103536 c!17843) b!103541))

(assert (= (and b!103536 (not c!17843)) b!103545))

(assert (= (or b!103541 b!103545) bm!10871))

(assert (= (or b!103544 bm!10871) bm!10873))

(assert (= (or b!103544 b!103541) bm!10870))

(assert (= (or b!103547 bm!10873) bm!10874))

(assert (= (or b!103547 bm!10870) bm!10872))

(assert (= (and d!27779 res!51676) b!103542))

(assert (= (and d!27779 c!17838) b!103550))

(assert (= (and d!27779 (not c!17838)) b!103539))

(assert (= (and d!27779 res!51668) b!103535))

(assert (= (and b!103535 res!51673) b!103540))

(assert (= (and b!103535 (not res!51674)) b!103537))

(assert (= (and b!103537 res!51675) b!103549))

(assert (= (and b!103535 res!51671) b!103543))

(assert (= (and b!103543 c!17841) b!103532))

(assert (= (and b!103543 (not c!17841)) b!103552))

(assert (= (and b!103532 res!51672) b!103546))

(assert (= (or b!103532 b!103552) bm!10875))

(assert (= (and b!103543 res!51670) b!103548))

(assert (= (and b!103548 c!17840) b!103551))

(assert (= (and b!103548 (not c!17840)) b!103538))

(assert (= (and b!103551 res!51669) b!103533))

(assert (= (or b!103551 b!103538) bm!10869))

(declare-fun b_lambda!4641 () Bool)

(assert (=> (not b_lambda!4641) (not b!103549)))

(assert (=> b!103549 t!5708))

(declare-fun b_and!6413 () Bool)

(assert (= b_and!6401 (and (=> t!5708 result!3433) b_and!6413)))

(assert (=> b!103549 t!5710))

(declare-fun b_and!6415 () Bool)

(assert (= b_and!6403 (and (=> t!5710 result!3437) b_and!6415)))

(declare-fun m!114367 () Bool)

(assert (=> b!103533 m!114367))

(assert (=> d!27779 m!114185))

(declare-fun m!114369 () Bool)

(assert (=> bm!10875 m!114369))

(declare-fun m!114371 () Bool)

(assert (=> bm!10872 m!114371))

(assert (=> b!103542 m!114355))

(assert (=> b!103542 m!114355))

(declare-fun m!114373 () Bool)

(assert (=> b!103542 m!114373))

(declare-fun m!114375 () Bool)

(assert (=> b!103550 m!114375))

(declare-fun m!114377 () Bool)

(assert (=> b!103550 m!114377))

(declare-fun m!114379 () Bool)

(assert (=> b!103550 m!114379))

(assert (=> b!103550 m!114193))

(declare-fun m!114381 () Bool)

(assert (=> b!103550 m!114381))

(declare-fun m!114383 () Bool)

(assert (=> b!103550 m!114383))

(declare-fun m!114385 () Bool)

(assert (=> b!103550 m!114385))

(declare-fun m!114387 () Bool)

(assert (=> b!103550 m!114387))

(assert (=> b!103550 m!114385))

(declare-fun m!114389 () Bool)

(assert (=> b!103550 m!114389))

(declare-fun m!114391 () Bool)

(assert (=> b!103550 m!114391))

(declare-fun m!114393 () Bool)

(assert (=> b!103550 m!114393))

(assert (=> b!103550 m!114355))

(assert (=> b!103550 m!114381))

(declare-fun m!114395 () Bool)

(assert (=> b!103550 m!114395))

(declare-fun m!114397 () Bool)

(assert (=> b!103550 m!114397))

(declare-fun m!114399 () Bool)

(assert (=> b!103550 m!114399))

(declare-fun m!114401 () Bool)

(assert (=> b!103550 m!114401))

(assert (=> b!103550 m!114375))

(declare-fun m!114403 () Bool)

(assert (=> b!103550 m!114403))

(assert (=> b!103550 m!114395))

(assert (=> b!103549 m!114355))

(assert (=> b!103549 m!114355))

(declare-fun m!114405 () Bool)

(assert (=> b!103549 m!114405))

(declare-fun m!114407 () Bool)

(assert (=> b!103549 m!114407))

(assert (=> b!103549 m!114209))

(declare-fun m!114409 () Bool)

(assert (=> b!103549 m!114409))

(assert (=> b!103549 m!114209))

(assert (=> b!103549 m!114407))

(declare-fun m!114411 () Bool)

(assert (=> bm!10869 m!114411))

(assert (=> bm!10874 m!114193))

(assert (=> b!103537 m!114355))

(assert (=> b!103537 m!114355))

(declare-fun m!114413 () Bool)

(assert (=> b!103537 m!114413))

(declare-fun m!114415 () Bool)

(assert (=> b!103547 m!114415))

(declare-fun m!114417 () Bool)

(assert (=> b!103546 m!114417))

(assert (=> b!103540 m!114355))

(assert (=> b!103540 m!114355))

(assert (=> b!103540 m!114373))

(assert (=> b!103262 d!27779))

(declare-fun d!27781 () Bool)

(assert (=> d!27781 (= (array_inv!1237 (_keys!4263 newMap!16)) (bvsge (size!2310 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!103249 d!27781))

(declare-fun d!27783 () Bool)

(assert (=> d!27783 (= (array_inv!1238 (_values!2544 newMap!16)) (bvsge (size!2311 (_values!2544 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!103249 d!27783))

(declare-fun d!27785 () Bool)

(declare-fun c!17846 () Bool)

(assert (=> d!27785 (= c!17846 ((_ is ValueCellFull!993) (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun e!67481 () V!3211)

(assert (=> d!27785 (= (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) from!355) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!67481)))

(declare-fun b!103557 () Bool)

(declare-fun get!1334 (ValueCell!993 V!3211) V!3211)

(assert (=> b!103557 (= e!67481 (get!1334 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) from!355) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!103558 () Bool)

(declare-fun get!1335 (ValueCell!993 V!3211) V!3211)

(assert (=> b!103558 (= e!67481 (get!1335 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) from!355) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27785 c!17846) b!103557))

(assert (= (and d!27785 (not c!17846)) b!103558))

(assert (=> b!103557 m!114207))

(assert (=> b!103557 m!114209))

(declare-fun m!114419 () Bool)

(assert (=> b!103557 m!114419))

(assert (=> b!103558 m!114207))

(assert (=> b!103558 m!114209))

(declare-fun m!114421 () Bool)

(assert (=> b!103558 m!114421))

(assert (=> b!103253 d!27785))

(declare-fun d!27787 () Bool)

(assert (=> d!27787 (= (array_inv!1237 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvsge (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!103261 d!27787))

(declare-fun d!27789 () Bool)

(assert (=> d!27789 (= (array_inv!1238 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvsge (size!2311 (_values!2544 (v!2876 (underlying!359 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!103261 d!27789))

(declare-fun d!27791 () Bool)

(declare-fun res!51683 () Bool)

(declare-fun e!67484 () Bool)

(assert (=> d!27791 (=> (not res!51683) (not e!67484))))

(declare-fun simpleValid!72 (LongMapFixedSize!894) Bool)

(assert (=> d!27791 (= res!51683 (simpleValid!72 newMap!16))))

(assert (=> d!27791 (= (valid!405 newMap!16) e!67484)))

(declare-fun b!103565 () Bool)

(declare-fun res!51684 () Bool)

(assert (=> b!103565 (=> (not res!51684) (not e!67484))))

(declare-fun arrayCountValidKeys!0 (array!4334 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!103565 (= res!51684 (= (arrayCountValidKeys!0 (_keys!4263 newMap!16) #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))) (_size!496 newMap!16)))))

(declare-fun b!103566 () Bool)

(declare-fun res!51685 () Bool)

(assert (=> b!103566 (=> (not res!51685) (not e!67484))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4334 (_ BitVec 32)) Bool)

(assert (=> b!103566 (= res!51685 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun b!103567 () Bool)

(assert (=> b!103567 (= e!67484 (arrayNoDuplicates!0 (_keys!4263 newMap!16) #b00000000000000000000000000000000 Nil!1635))))

(assert (= (and d!27791 res!51683) b!103565))

(assert (= (and b!103565 res!51684) b!103566))

(assert (= (and b!103566 res!51685) b!103567))

(declare-fun m!114423 () Bool)

(assert (=> d!27791 m!114423))

(declare-fun m!114425 () Bool)

(assert (=> b!103565 m!114425))

(declare-fun m!114427 () Bool)

(assert (=> b!103566 m!114427))

(declare-fun m!114429 () Bool)

(assert (=> b!103567 m!114429))

(assert (=> b!103255 d!27791))

(declare-fun d!27793 () Bool)

(assert (=> d!27793 (= (valid!406 thiss!992) (valid!405 (v!2876 (underlying!359 thiss!992))))))

(declare-fun bs!4238 () Bool)

(assert (= bs!4238 d!27793))

(declare-fun m!114431 () Bool)

(assert (=> bs!4238 m!114431))

(assert (=> start!12202 d!27793))

(declare-fun d!27795 () Bool)

(declare-fun e!67487 () Bool)

(assert (=> d!27795 e!67487))

(declare-fun res!51691 () Bool)

(assert (=> d!27795 (=> (not res!51691) (not e!67487))))

(declare-fun lt!52766 () ListLongMap!1579)

(assert (=> d!27795 (= res!51691 (contains!825 lt!52766 (_1!1211 lt!52547)))))

(declare-fun lt!52769 () List!1637)

(assert (=> d!27795 (= lt!52766 (ListLongMap!1580 lt!52769))))

(declare-fun lt!52768 () Unit!3170)

(declare-fun lt!52767 () Unit!3170)

(assert (=> d!27795 (= lt!52768 lt!52767)))

(assert (=> d!27795 (= (getValueByKey!154 lt!52769 (_1!1211 lt!52547)) (Some!159 (_2!1211 lt!52547)))))

(declare-fun lemmaContainsTupThenGetReturnValue!72 (List!1637 (_ BitVec 64) V!3211) Unit!3170)

(assert (=> d!27795 (= lt!52767 (lemmaContainsTupThenGetReturnValue!72 lt!52769 (_1!1211 lt!52547) (_2!1211 lt!52547)))))

(declare-fun insertStrictlySorted!74 (List!1637 (_ BitVec 64) V!3211) List!1637)

(assert (=> d!27795 (= lt!52769 (insertStrictlySorted!74 (toList!805 (+!143 lt!52542 lt!52551)) (_1!1211 lt!52547) (_2!1211 lt!52547)))))

(assert (=> d!27795 (= (+!143 (+!143 lt!52542 lt!52551) lt!52547) lt!52766)))

(declare-fun b!103572 () Bool)

(declare-fun res!51690 () Bool)

(assert (=> b!103572 (=> (not res!51690) (not e!67487))))

(assert (=> b!103572 (= res!51690 (= (getValueByKey!154 (toList!805 lt!52766) (_1!1211 lt!52547)) (Some!159 (_2!1211 lt!52547))))))

(declare-fun b!103573 () Bool)

(declare-fun contains!828 (List!1637 tuple2!2402) Bool)

(assert (=> b!103573 (= e!67487 (contains!828 (toList!805 lt!52766) lt!52547))))

(assert (= (and d!27795 res!51691) b!103572))

(assert (= (and b!103572 res!51690) b!103573))

(declare-fun m!114433 () Bool)

(assert (=> d!27795 m!114433))

(declare-fun m!114435 () Bool)

(assert (=> d!27795 m!114435))

(declare-fun m!114437 () Bool)

(assert (=> d!27795 m!114437))

(declare-fun m!114439 () Bool)

(assert (=> d!27795 m!114439))

(declare-fun m!114441 () Bool)

(assert (=> b!103572 m!114441))

(declare-fun m!114443 () Bool)

(assert (=> b!103573 m!114443))

(assert (=> b!103247 d!27795))

(declare-fun b!103598 () Bool)

(declare-fun e!67507 () ListLongMap!1579)

(assert (=> b!103598 (= e!67507 (ListLongMap!1580 Nil!1634))))

(declare-fun b!103600 () Bool)

(declare-fun e!67504 () Bool)

(declare-fun lt!52789 () ListLongMap!1579)

(declare-fun isEmpty!372 (ListLongMap!1579) Bool)

(assert (=> b!103600 (= e!67504 (isEmpty!372 lt!52789))))

(declare-fun b!103601 () Bool)

(assert (=> b!103601 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(assert (=> b!103601 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2311 (_values!2544 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun e!67508 () Bool)

(assert (=> b!103601 (= e!67508 (= (apply!97 lt!52789 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!103602 () Bool)

(declare-fun e!67502 () Bool)

(assert (=> b!103602 (= e!67502 e!67508)))

(assert (=> b!103602 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun res!51703 () Bool)

(assert (=> b!103602 (= res!51703 (contains!825 lt!52789 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103602 (=> (not res!51703) (not e!67508))))

(declare-fun b!103603 () Bool)

(declare-fun e!67503 () ListLongMap!1579)

(assert (=> b!103603 (= e!67507 e!67503)))

(declare-fun c!17855 () Bool)

(assert (=> b!103603 (= c!17855 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103604 () Bool)

(declare-fun e!67505 () Bool)

(assert (=> b!103604 (= e!67505 e!67502)))

(declare-fun c!17856 () Bool)

(declare-fun e!67506 () Bool)

(assert (=> b!103604 (= c!17856 e!67506)))

(declare-fun res!51702 () Bool)

(assert (=> b!103604 (=> (not res!51702) (not e!67506))))

(assert (=> b!103604 (= res!51702 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!103605 () Bool)

(declare-fun lt!52785 () Unit!3170)

(declare-fun lt!52788 () Unit!3170)

(assert (=> b!103605 (= lt!52785 lt!52788)))

(declare-fun lt!52790 () (_ BitVec 64))

(declare-fun lt!52787 () V!3211)

(declare-fun lt!52784 () ListLongMap!1579)

(declare-fun lt!52786 () (_ BitVec 64))

(assert (=> b!103605 (not (contains!825 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787)) lt!52786))))

(declare-fun addStillNotContains!47 (ListLongMap!1579 (_ BitVec 64) V!3211 (_ BitVec 64)) Unit!3170)

(assert (=> b!103605 (= lt!52788 (addStillNotContains!47 lt!52784 lt!52790 lt!52787 lt!52786))))

(assert (=> b!103605 (= lt!52786 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!103605 (= lt!52787 (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!103605 (= lt!52790 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!10881 () ListLongMap!1579)

(assert (=> b!103605 (= lt!52784 call!10881)))

(assert (=> b!103605 (= e!67503 (+!143 call!10881 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!10878 () Bool)

(assert (=> bm!10878 (= call!10881 (getCurrentListMapNoExtraKeys!110 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))))))

(declare-fun d!27797 () Bool)

(assert (=> d!27797 e!67505))

(declare-fun res!51700 () Bool)

(assert (=> d!27797 (=> (not res!51700) (not e!67505))))

(assert (=> d!27797 (= res!51700 (not (contains!825 lt!52789 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!27797 (= lt!52789 e!67507)))

(declare-fun c!17857 () Bool)

(assert (=> d!27797 (= c!17857 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(assert (=> d!27797 (validMask!0 (mask!6697 (v!2876 (underlying!359 thiss!992))))))

(assert (=> d!27797 (= (getCurrentListMapNoExtraKeys!110 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))) lt!52789)))

(declare-fun b!103599 () Bool)

(declare-fun res!51701 () Bool)

(assert (=> b!103599 (=> (not res!51701) (not e!67505))))

(assert (=> b!103599 (= res!51701 (not (contains!825 lt!52789 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!103606 () Bool)

(assert (=> b!103606 (= e!67502 e!67504)))

(declare-fun c!17858 () Bool)

(assert (=> b!103606 (= c!17858 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!103607 () Bool)

(assert (=> b!103607 (= e!67503 call!10881)))

(declare-fun b!103608 () Bool)

(assert (=> b!103608 (= e!67504 (= lt!52789 (getCurrentListMapNoExtraKeys!110 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!103609 () Bool)

(assert (=> b!103609 (= e!67506 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103609 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(assert (= (and d!27797 c!17857) b!103598))

(assert (= (and d!27797 (not c!17857)) b!103603))

(assert (= (and b!103603 c!17855) b!103605))

(assert (= (and b!103603 (not c!17855)) b!103607))

(assert (= (or b!103605 b!103607) bm!10878))

(assert (= (and d!27797 res!51700) b!103599))

(assert (= (and b!103599 res!51701) b!103604))

(assert (= (and b!103604 res!51702) b!103609))

(assert (= (and b!103604 c!17856) b!103602))

(assert (= (and b!103604 (not c!17856)) b!103606))

(assert (= (and b!103602 res!51703) b!103601))

(assert (= (and b!103606 c!17858) b!103608))

(assert (= (and b!103606 (not c!17858)) b!103600))

(declare-fun b_lambda!4643 () Bool)

(assert (=> (not b_lambda!4643) (not b!103601)))

(assert (=> b!103601 t!5708))

(declare-fun b_and!6417 () Bool)

(assert (= b_and!6413 (and (=> t!5708 result!3433) b_and!6417)))

(assert (=> b!103601 t!5710))

(declare-fun b_and!6419 () Bool)

(assert (= b_and!6415 (and (=> t!5710 result!3437) b_and!6419)))

(declare-fun b_lambda!4645 () Bool)

(assert (=> (not b_lambda!4645) (not b!103605)))

(assert (=> b!103605 t!5708))

(declare-fun b_and!6421 () Bool)

(assert (= b_and!6417 (and (=> t!5708 result!3433) b_and!6421)))

(assert (=> b!103605 t!5710))

(declare-fun b_and!6423 () Bool)

(assert (= b_and!6419 (and (=> t!5710 result!3437) b_and!6423)))

(declare-fun m!114445 () Bool)

(assert (=> d!27797 m!114445))

(assert (=> d!27797 m!114185))

(declare-fun m!114447 () Bool)

(assert (=> b!103608 m!114447))

(assert (=> bm!10878 m!114447))

(assert (=> b!103601 m!114407))

(assert (=> b!103601 m!114209))

(assert (=> b!103601 m!114409))

(assert (=> b!103601 m!114407))

(assert (=> b!103601 m!114355))

(assert (=> b!103601 m!114209))

(assert (=> b!103601 m!114355))

(declare-fun m!114449 () Bool)

(assert (=> b!103601 m!114449))

(assert (=> b!103605 m!114407))

(assert (=> b!103605 m!114209))

(assert (=> b!103605 m!114409))

(declare-fun m!114451 () Bool)

(assert (=> b!103605 m!114451))

(declare-fun m!114453 () Bool)

(assert (=> b!103605 m!114453))

(assert (=> b!103605 m!114451))

(declare-fun m!114455 () Bool)

(assert (=> b!103605 m!114455))

(assert (=> b!103605 m!114407))

(assert (=> b!103605 m!114355))

(assert (=> b!103605 m!114209))

(declare-fun m!114457 () Bool)

(assert (=> b!103605 m!114457))

(declare-fun m!114459 () Bool)

(assert (=> b!103599 m!114459))

(assert (=> b!103609 m!114355))

(assert (=> b!103609 m!114355))

(assert (=> b!103609 m!114373))

(declare-fun m!114461 () Bool)

(assert (=> b!103600 m!114461))

(assert (=> b!103603 m!114355))

(assert (=> b!103603 m!114355))

(assert (=> b!103603 m!114373))

(assert (=> b!103602 m!114355))

(assert (=> b!103602 m!114355))

(declare-fun m!114463 () Bool)

(assert (=> b!103602 m!114463))

(assert (=> b!103247 d!27797))

(declare-fun d!27799 () Bool)

(declare-fun e!67509 () Bool)

(assert (=> d!27799 e!67509))

(declare-fun res!51705 () Bool)

(assert (=> d!27799 (=> (not res!51705) (not e!67509))))

(declare-fun lt!52791 () ListLongMap!1579)

(assert (=> d!27799 (= res!51705 (contains!825 lt!52791 (_1!1211 lt!52547)))))

(declare-fun lt!52794 () List!1637)

(assert (=> d!27799 (= lt!52791 (ListLongMap!1580 lt!52794))))

(declare-fun lt!52793 () Unit!3170)

(declare-fun lt!52792 () Unit!3170)

(assert (=> d!27799 (= lt!52793 lt!52792)))

(assert (=> d!27799 (= (getValueByKey!154 lt!52794 (_1!1211 lt!52547)) (Some!159 (_2!1211 lt!52547)))))

(assert (=> d!27799 (= lt!52792 (lemmaContainsTupThenGetReturnValue!72 lt!52794 (_1!1211 lt!52547) (_2!1211 lt!52547)))))

(assert (=> d!27799 (= lt!52794 (insertStrictlySorted!74 (toList!805 lt!52542) (_1!1211 lt!52547) (_2!1211 lt!52547)))))

(assert (=> d!27799 (= (+!143 lt!52542 lt!52547) lt!52791)))

(declare-fun b!103610 () Bool)

(declare-fun res!51704 () Bool)

(assert (=> b!103610 (=> (not res!51704) (not e!67509))))

(assert (=> b!103610 (= res!51704 (= (getValueByKey!154 (toList!805 lt!52791) (_1!1211 lt!52547)) (Some!159 (_2!1211 lt!52547))))))

(declare-fun b!103611 () Bool)

(assert (=> b!103611 (= e!67509 (contains!828 (toList!805 lt!52791) lt!52547))))

(assert (= (and d!27799 res!51705) b!103610))

(assert (= (and b!103610 res!51704) b!103611))

(declare-fun m!114465 () Bool)

(assert (=> d!27799 m!114465))

(declare-fun m!114467 () Bool)

(assert (=> d!27799 m!114467))

(declare-fun m!114469 () Bool)

(assert (=> d!27799 m!114469))

(declare-fun m!114471 () Bool)

(assert (=> d!27799 m!114471))

(declare-fun m!114473 () Bool)

(assert (=> b!103610 m!114473))

(declare-fun m!114475 () Bool)

(assert (=> b!103611 m!114475))

(assert (=> b!103247 d!27799))

(declare-fun d!27801 () Bool)

(declare-fun e!67510 () Bool)

(assert (=> d!27801 e!67510))

(declare-fun res!51707 () Bool)

(assert (=> d!27801 (=> (not res!51707) (not e!67510))))

(declare-fun lt!52795 () ListLongMap!1579)

(assert (=> d!27801 (= res!51707 (contains!825 lt!52795 (_1!1211 lt!52551)))))

(declare-fun lt!52798 () List!1637)

(assert (=> d!27801 (= lt!52795 (ListLongMap!1580 lt!52798))))

(declare-fun lt!52797 () Unit!3170)

(declare-fun lt!52796 () Unit!3170)

(assert (=> d!27801 (= lt!52797 lt!52796)))

(assert (=> d!27801 (= (getValueByKey!154 lt!52798 (_1!1211 lt!52551)) (Some!159 (_2!1211 lt!52551)))))

(assert (=> d!27801 (= lt!52796 (lemmaContainsTupThenGetReturnValue!72 lt!52798 (_1!1211 lt!52551) (_2!1211 lt!52551)))))

(assert (=> d!27801 (= lt!52798 (insertStrictlySorted!74 (toList!805 lt!52542) (_1!1211 lt!52551) (_2!1211 lt!52551)))))

(assert (=> d!27801 (= (+!143 lt!52542 lt!52551) lt!52795)))

(declare-fun b!103612 () Bool)

(declare-fun res!51706 () Bool)

(assert (=> b!103612 (=> (not res!51706) (not e!67510))))

(assert (=> b!103612 (= res!51706 (= (getValueByKey!154 (toList!805 lt!52795) (_1!1211 lt!52551)) (Some!159 (_2!1211 lt!52551))))))

(declare-fun b!103613 () Bool)

(assert (=> b!103613 (= e!67510 (contains!828 (toList!805 lt!52795) lt!52551))))

(assert (= (and d!27801 res!51707) b!103612))

(assert (= (and b!103612 res!51706) b!103613))

(declare-fun m!114477 () Bool)

(assert (=> d!27801 m!114477))

(declare-fun m!114479 () Bool)

(assert (=> d!27801 m!114479))

(declare-fun m!114481 () Bool)

(assert (=> d!27801 m!114481))

(declare-fun m!114483 () Bool)

(assert (=> d!27801 m!114483))

(declare-fun m!114485 () Bool)

(assert (=> b!103612 m!114485))

(declare-fun m!114487 () Bool)

(assert (=> b!103613 m!114487))

(assert (=> b!103247 d!27801))

(declare-fun d!27803 () Bool)

(declare-fun e!67511 () Bool)

(assert (=> d!27803 e!67511))

(declare-fun res!51709 () Bool)

(assert (=> d!27803 (=> (not res!51709) (not e!67511))))

(declare-fun lt!52799 () ListLongMap!1579)

(assert (=> d!27803 (= res!51709 (contains!825 lt!52799 (_1!1211 lt!52551)))))

(declare-fun lt!52802 () List!1637)

(assert (=> d!27803 (= lt!52799 (ListLongMap!1580 lt!52802))))

(declare-fun lt!52801 () Unit!3170)

(declare-fun lt!52800 () Unit!3170)

(assert (=> d!27803 (= lt!52801 lt!52800)))

(assert (=> d!27803 (= (getValueByKey!154 lt!52802 (_1!1211 lt!52551)) (Some!159 (_2!1211 lt!52551)))))

(assert (=> d!27803 (= lt!52800 (lemmaContainsTupThenGetReturnValue!72 lt!52802 (_1!1211 lt!52551) (_2!1211 lt!52551)))))

(assert (=> d!27803 (= lt!52802 (insertStrictlySorted!74 (toList!805 (+!143 lt!52542 lt!52547)) (_1!1211 lt!52551) (_2!1211 lt!52551)))))

(assert (=> d!27803 (= (+!143 (+!143 lt!52542 lt!52547) lt!52551) lt!52799)))

(declare-fun b!103614 () Bool)

(declare-fun res!51708 () Bool)

(assert (=> b!103614 (=> (not res!51708) (not e!67511))))

(assert (=> b!103614 (= res!51708 (= (getValueByKey!154 (toList!805 lt!52799) (_1!1211 lt!52551)) (Some!159 (_2!1211 lt!52551))))))

(declare-fun b!103615 () Bool)

(assert (=> b!103615 (= e!67511 (contains!828 (toList!805 lt!52799) lt!52551))))

(assert (= (and d!27803 res!51709) b!103614))

(assert (= (and b!103614 res!51708) b!103615))

(declare-fun m!114489 () Bool)

(assert (=> d!27803 m!114489))

(declare-fun m!114491 () Bool)

(assert (=> d!27803 m!114491))

(declare-fun m!114493 () Bool)

(assert (=> d!27803 m!114493))

(declare-fun m!114495 () Bool)

(assert (=> d!27803 m!114495))

(declare-fun m!114497 () Bool)

(assert (=> b!103614 m!114497))

(declare-fun m!114499 () Bool)

(assert (=> b!103615 m!114499))

(assert (=> b!103247 d!27803))

(declare-fun d!27805 () Bool)

(assert (=> d!27805 (= (+!143 (+!143 lt!52542 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (+!143 (+!143 lt!52542 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))

(declare-fun lt!52805 () Unit!3170)

(declare-fun choose!646 (ListLongMap!1579 (_ BitVec 64) V!3211 (_ BitVec 64) V!3211) Unit!3170)

(assert (=> d!27805 (= lt!52805 (choose!646 lt!52542 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))

(assert (=> d!27805 (not (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27805 (= (addCommutativeForDiffKeys!55 lt!52542 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) lt!52805)))

(declare-fun bs!4239 () Bool)

(assert (= bs!4239 d!27805))

(assert (=> bs!4239 m!114187))

(declare-fun m!114501 () Bool)

(assert (=> bs!4239 m!114501))

(declare-fun m!114503 () Bool)

(assert (=> bs!4239 m!114503))

(declare-fun m!114505 () Bool)

(assert (=> bs!4239 m!114505))

(assert (=> bs!4239 m!114505))

(declare-fun m!114507 () Bool)

(assert (=> bs!4239 m!114507))

(assert (=> bs!4239 m!114503))

(declare-fun m!114509 () Bool)

(assert (=> bs!4239 m!114509))

(assert (=> b!103247 d!27805))

(declare-fun d!27807 () Bool)

(assert (=> d!27807 (= (validMask!0 (mask!6697 (v!2876 (underlying!359 thiss!992)))) (and (or (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000001111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000011111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000001111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000011111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000001111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000011111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000111111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000000000001111111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000000000011111111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000000000111111111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000000001111111111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000000011111111111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000000111111111111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000001111111111111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000011111111111111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000111111111111111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000001111111111111111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000011111111111111111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000111111111111111111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000001111111111111111111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000011111111111111111111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000111111111111111111111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00001111111111111111111111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00011111111111111111111111111111) (= (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!103247 d!27807))

(declare-fun b!103623 () Bool)

(declare-fun e!67517 () Bool)

(assert (=> b!103623 (= e!67517 tp_is_empty!2673)))

(declare-fun mapIsEmpty!3913 () Bool)

(declare-fun mapRes!3913 () Bool)

(assert (=> mapIsEmpty!3913 mapRes!3913))

(declare-fun mapNonEmpty!3913 () Bool)

(declare-fun tp!9871 () Bool)

(declare-fun e!67516 () Bool)

(assert (=> mapNonEmpty!3913 (= mapRes!3913 (and tp!9871 e!67516))))

(declare-fun mapValue!3913 () ValueCell!993)

(declare-fun mapKey!3913 () (_ BitVec 32))

(declare-fun mapRest!3913 () (Array (_ BitVec 32) ValueCell!993))

(assert (=> mapNonEmpty!3913 (= mapRest!3903 (store mapRest!3913 mapKey!3913 mapValue!3913))))

(declare-fun b!103622 () Bool)

(assert (=> b!103622 (= e!67516 tp_is_empty!2673)))

(declare-fun condMapEmpty!3913 () Bool)

(declare-fun mapDefault!3913 () ValueCell!993)

(assert (=> mapNonEmpty!3904 (= condMapEmpty!3913 (= mapRest!3903 ((as const (Array (_ BitVec 32) ValueCell!993)) mapDefault!3913)))))

(assert (=> mapNonEmpty!3904 (= tp!9855 (and e!67517 mapRes!3913))))

(assert (= (and mapNonEmpty!3904 condMapEmpty!3913) mapIsEmpty!3913))

(assert (= (and mapNonEmpty!3904 (not condMapEmpty!3913)) mapNonEmpty!3913))

(assert (= (and mapNonEmpty!3913 ((_ is ValueCellFull!993) mapValue!3913)) b!103622))

(assert (= (and mapNonEmpty!3904 ((_ is ValueCellFull!993) mapDefault!3913)) b!103623))

(declare-fun m!114511 () Bool)

(assert (=> mapNonEmpty!3913 m!114511))

(declare-fun b!103625 () Bool)

(declare-fun e!67519 () Bool)

(assert (=> b!103625 (= e!67519 tp_is_empty!2673)))

(declare-fun mapIsEmpty!3914 () Bool)

(declare-fun mapRes!3914 () Bool)

(assert (=> mapIsEmpty!3914 mapRes!3914))

(declare-fun mapNonEmpty!3914 () Bool)

(declare-fun tp!9872 () Bool)

(declare-fun e!67518 () Bool)

(assert (=> mapNonEmpty!3914 (= mapRes!3914 (and tp!9872 e!67518))))

(declare-fun mapValue!3914 () ValueCell!993)

(declare-fun mapKey!3914 () (_ BitVec 32))

(declare-fun mapRest!3914 () (Array (_ BitVec 32) ValueCell!993))

(assert (=> mapNonEmpty!3914 (= mapRest!3904 (store mapRest!3914 mapKey!3914 mapValue!3914))))

(declare-fun b!103624 () Bool)

(assert (=> b!103624 (= e!67518 tp_is_empty!2673)))

(declare-fun condMapEmpty!3914 () Bool)

(declare-fun mapDefault!3914 () ValueCell!993)

(assert (=> mapNonEmpty!3903 (= condMapEmpty!3914 (= mapRest!3904 ((as const (Array (_ BitVec 32) ValueCell!993)) mapDefault!3914)))))

(assert (=> mapNonEmpty!3903 (= tp!9853 (and e!67519 mapRes!3914))))

(assert (= (and mapNonEmpty!3903 condMapEmpty!3914) mapIsEmpty!3914))

(assert (= (and mapNonEmpty!3903 (not condMapEmpty!3914)) mapNonEmpty!3914))

(assert (= (and mapNonEmpty!3914 ((_ is ValueCellFull!993) mapValue!3914)) b!103624))

(assert (= (and mapNonEmpty!3903 ((_ is ValueCellFull!993) mapDefault!3914)) b!103625))

(declare-fun m!114513 () Bool)

(assert (=> mapNonEmpty!3914 m!114513))

(declare-fun b_lambda!4647 () Bool)

(assert (= b_lambda!4645 (or (and b!103261 b_free!2513) (and b!103249 b_free!2515 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))))) b_lambda!4647)))

(declare-fun b_lambda!4649 () Bool)

(assert (= b_lambda!4643 (or (and b!103261 b_free!2513) (and b!103249 b_free!2515 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))))) b_lambda!4649)))

(declare-fun b_lambda!4651 () Bool)

(assert (= b_lambda!4641 (or (and b!103261 b_free!2513) (and b!103249 b_free!2515 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))))) b_lambda!4651)))

(check-sat (not bm!10843) (not b!103458) b_and!6423 (not b_lambda!4639) (not b!103612) (not d!27799) (not d!27769) (not bm!10875) (not bm!10878) (not d!27805) (not b!103540) (not d!27803) (not bm!10831) (not b_lambda!4647) (not b!103572) (not b!103550) (not b!103565) (not b!103537) (not d!27779) (not bm!10829) (not b!103610) (not b!103452) (not b!103557) (not b!103615) (not bm!10839) (not bm!10834) (not b!103603) (not d!27793) (not bm!10838) (not d!27801) (not b_lambda!4651) (not bm!10847) (not b!103444) (not b_next!2513) (not b!103600) (not b!103473) (not b!103601) (not b!103488) (not bm!10869) (not b!103602) (not b!103558) (not bm!10833) (not d!27777) (not b!103426) (not b!103423) (not b!103468) tp_is_empty!2673 (not b!103485) (not mapNonEmpty!3914) (not b!103614) (not b!103613) (not bm!10828) (not bm!10854) (not b!103567) (not b_next!2515) (not bm!10872) (not b!103549) (not b!103336) (not b_lambda!4649) b_and!6421 (not b!103599) (not b!103427) (not d!27797) (not d!27773) (not b!103486) (not b!103533) (not b!103438) (not d!27795) (not d!27763) (not b!103546) (not b!103605) (not b!103611) (not b!103334) (not d!27767) (not b!103609) (not b!103608) (not bm!10845) (not b!103573) (not bm!10874) (not mapNonEmpty!3913) (not d!27791) (not bm!10841) (not d!27765) (not b!103432) (not b!103566) (not b!103542) (not bm!10830) (not b!103547))
(check-sat b_and!6421 b_and!6423 (not b_next!2513) (not b_next!2515))
(get-model)

(declare-fun d!27809 () Bool)

(assert (=> d!27809 (= (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103540 d!27809))

(declare-fun bm!10879 () Bool)

(declare-fun call!10882 () Bool)

(declare-fun lt!52823 () ListLongMap!1579)

(assert (=> bm!10879 (= call!10882 (contains!825 lt!52823 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10880 () Bool)

(declare-fun call!10884 () ListLongMap!1579)

(declare-fun call!10887 () ListLongMap!1579)

(assert (=> bm!10880 (= call!10884 call!10887)))

(declare-fun b!103626 () Bool)

(declare-fun e!67531 () Bool)

(declare-fun e!67532 () Bool)

(assert (=> b!103626 (= e!67531 e!67532)))

(declare-fun res!51714 () Bool)

(declare-fun call!10885 () Bool)

(assert (=> b!103626 (= res!51714 call!10885)))

(assert (=> b!103626 (=> (not res!51714) (not e!67532))))

(declare-fun bm!10881 () Bool)

(declare-fun call!10883 () ListLongMap!1579)

(declare-fun call!10888 () ListLongMap!1579)

(assert (=> bm!10881 (= call!10883 call!10888)))

(declare-fun b!103627 () Bool)

(declare-fun e!67521 () Bool)

(assert (=> b!103627 (= e!67521 (= (apply!97 lt!52823 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2438 newMap!16)))))

(declare-fun b!103628 () Bool)

(declare-fun e!67525 () ListLongMap!1579)

(declare-fun e!67530 () ListLongMap!1579)

(assert (=> b!103628 (= e!67525 e!67530)))

(declare-fun c!17863 () Bool)

(assert (=> b!103628 (= c!17863 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103629 () Bool)

(declare-fun res!51713 () Bool)

(declare-fun e!67523 () Bool)

(assert (=> b!103629 (=> (not res!51713) (not e!67523))))

(declare-fun e!67528 () Bool)

(assert (=> b!103629 (= res!51713 e!67528)))

(declare-fun res!51716 () Bool)

(assert (=> b!103629 (=> res!51716 e!67528)))

(declare-fun e!67520 () Bool)

(assert (=> b!103629 (= res!51716 (not e!67520))))

(declare-fun res!51715 () Bool)

(assert (=> b!103629 (=> (not res!51715) (not e!67520))))

(assert (=> b!103629 (= res!51715 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!103630 () Bool)

(declare-fun c!17864 () Bool)

(assert (=> b!103630 (= c!17864 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!67527 () ListLongMap!1579)

(assert (=> b!103630 (= e!67530 e!67527)))

(declare-fun call!10886 () ListLongMap!1579)

(declare-fun c!17860 () Bool)

(declare-fun bm!10882 () Bool)

(assert (=> bm!10882 (= call!10887 (+!143 (ite c!17860 call!10886 (ite c!17863 call!10888 call!10883)) (ite (or c!17860 c!17863) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(declare-fun b!103632 () Bool)

(declare-fun e!67529 () Bool)

(assert (=> b!103632 (= e!67529 (not call!10882))))

(declare-fun b!103633 () Bool)

(declare-fun e!67526 () Unit!3170)

(declare-fun Unit!3181 () Unit!3170)

(assert (=> b!103633 (= e!67526 Unit!3181)))

(declare-fun b!103634 () Bool)

(assert (=> b!103634 (= e!67520 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103635 () Bool)

(assert (=> b!103635 (= e!67527 call!10884)))

(declare-fun b!103636 () Bool)

(declare-fun e!67524 () Bool)

(assert (=> b!103636 (= e!67524 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103637 () Bool)

(declare-fun res!51712 () Bool)

(assert (=> b!103637 (=> (not res!51712) (not e!67523))))

(assert (=> b!103637 (= res!51712 e!67531)))

(declare-fun c!17862 () Bool)

(assert (=> b!103637 (= c!17862 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!103638 () Bool)

(assert (=> b!103638 (= e!67530 call!10884)))

(declare-fun b!103639 () Bool)

(assert (=> b!103639 (= e!67527 call!10883)))

(declare-fun bm!10883 () Bool)

(assert (=> bm!10883 (= call!10888 call!10886)))

(declare-fun b!103640 () Bool)

(assert (=> b!103640 (= e!67532 (= (apply!97 lt!52823 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2438 newMap!16)))))

(declare-fun b!103641 () Bool)

(assert (=> b!103641 (= e!67525 (+!143 call!10887 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))

(declare-fun bm!10884 () Bool)

(assert (=> bm!10884 (= call!10886 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun d!27811 () Bool)

(assert (=> d!27811 e!67523))

(declare-fun res!51710 () Bool)

(assert (=> d!27811 (=> (not res!51710) (not e!67523))))

(assert (=> d!27811 (= res!51710 (or (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))))

(declare-fun lt!52808 () ListLongMap!1579)

(assert (=> d!27811 (= lt!52823 lt!52808)))

(declare-fun lt!52807 () Unit!3170)

(assert (=> d!27811 (= lt!52807 e!67526)))

(declare-fun c!17859 () Bool)

(assert (=> d!27811 (= c!17859 e!67524)))

(declare-fun res!51718 () Bool)

(assert (=> d!27811 (=> (not res!51718) (not e!67524))))

(assert (=> d!27811 (= res!51718 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!27811 (= lt!52808 e!67525)))

(assert (=> d!27811 (= c!17860 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!27811 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!27811 (= (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!52823)))

(declare-fun b!103631 () Bool)

(declare-fun e!67522 () Bool)

(assert (=> b!103631 (= e!67528 e!67522)))

(declare-fun res!51717 () Bool)

(assert (=> b!103631 (=> (not res!51717) (not e!67522))))

(assert (=> b!103631 (= res!51717 (contains!825 lt!52823 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!103631 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!103642 () Bool)

(assert (=> b!103642 (= e!67523 e!67529)))

(declare-fun c!17861 () Bool)

(assert (=> b!103642 (= c!17861 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103643 () Bool)

(assert (=> b!103643 (= e!67522 (= (apply!97 lt!52823 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1333 (select (arr!2057 (_values!2544 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103643 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_values!2544 newMap!16))))))

(assert (=> b!103643 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun bm!10885 () Bool)

(assert (=> bm!10885 (= call!10885 (contains!825 lt!52823 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103644 () Bool)

(declare-fun lt!52810 () Unit!3170)

(assert (=> b!103644 (= e!67526 lt!52810)))

(declare-fun lt!52816 () ListLongMap!1579)

(assert (=> b!103644 (= lt!52816 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52811 () (_ BitVec 64))

(assert (=> b!103644 (= lt!52811 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52822 () (_ BitVec 64))

(assert (=> b!103644 (= lt!52822 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52826 () Unit!3170)

(assert (=> b!103644 (= lt!52826 (addStillContains!73 lt!52816 lt!52811 (zeroValue!2438 newMap!16) lt!52822))))

(assert (=> b!103644 (contains!825 (+!143 lt!52816 (tuple2!2403 lt!52811 (zeroValue!2438 newMap!16))) lt!52822)))

(declare-fun lt!52819 () Unit!3170)

(assert (=> b!103644 (= lt!52819 lt!52826)))

(declare-fun lt!52821 () ListLongMap!1579)

(assert (=> b!103644 (= lt!52821 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52820 () (_ BitVec 64))

(assert (=> b!103644 (= lt!52820 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52806 () (_ BitVec 64))

(assert (=> b!103644 (= lt!52806 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52818 () Unit!3170)

(assert (=> b!103644 (= lt!52818 (addApplyDifferent!73 lt!52821 lt!52820 (minValue!2438 newMap!16) lt!52806))))

(assert (=> b!103644 (= (apply!97 (+!143 lt!52821 (tuple2!2403 lt!52820 (minValue!2438 newMap!16))) lt!52806) (apply!97 lt!52821 lt!52806))))

(declare-fun lt!52817 () Unit!3170)

(assert (=> b!103644 (= lt!52817 lt!52818)))

(declare-fun lt!52824 () ListLongMap!1579)

(assert (=> b!103644 (= lt!52824 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52825 () (_ BitVec 64))

(assert (=> b!103644 (= lt!52825 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52827 () (_ BitVec 64))

(assert (=> b!103644 (= lt!52827 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52815 () Unit!3170)

(assert (=> b!103644 (= lt!52815 (addApplyDifferent!73 lt!52824 lt!52825 (zeroValue!2438 newMap!16) lt!52827))))

(assert (=> b!103644 (= (apply!97 (+!143 lt!52824 (tuple2!2403 lt!52825 (zeroValue!2438 newMap!16))) lt!52827) (apply!97 lt!52824 lt!52827))))

(declare-fun lt!52813 () Unit!3170)

(assert (=> b!103644 (= lt!52813 lt!52815)))

(declare-fun lt!52812 () ListLongMap!1579)

(assert (=> b!103644 (= lt!52812 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52814 () (_ BitVec 64))

(assert (=> b!103644 (= lt!52814 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52809 () (_ BitVec 64))

(assert (=> b!103644 (= lt!52809 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!103644 (= lt!52810 (addApplyDifferent!73 lt!52812 lt!52814 (minValue!2438 newMap!16) lt!52809))))

(assert (=> b!103644 (= (apply!97 (+!143 lt!52812 (tuple2!2403 lt!52814 (minValue!2438 newMap!16))) lt!52809) (apply!97 lt!52812 lt!52809))))

(declare-fun b!103645 () Bool)

(assert (=> b!103645 (= e!67529 e!67521)))

(declare-fun res!51711 () Bool)

(assert (=> b!103645 (= res!51711 call!10882)))

(assert (=> b!103645 (=> (not res!51711) (not e!67521))))

(declare-fun b!103646 () Bool)

(assert (=> b!103646 (= e!67531 (not call!10885))))

(assert (= (and d!27811 c!17860) b!103641))

(assert (= (and d!27811 (not c!17860)) b!103628))

(assert (= (and b!103628 c!17863) b!103638))

(assert (= (and b!103628 (not c!17863)) b!103630))

(assert (= (and b!103630 c!17864) b!103635))

(assert (= (and b!103630 (not c!17864)) b!103639))

(assert (= (or b!103635 b!103639) bm!10881))

(assert (= (or b!103638 bm!10881) bm!10883))

(assert (= (or b!103638 b!103635) bm!10880))

(assert (= (or b!103641 bm!10883) bm!10884))

(assert (= (or b!103641 bm!10880) bm!10882))

(assert (= (and d!27811 res!51718) b!103636))

(assert (= (and d!27811 c!17859) b!103644))

(assert (= (and d!27811 (not c!17859)) b!103633))

(assert (= (and d!27811 res!51710) b!103629))

(assert (= (and b!103629 res!51715) b!103634))

(assert (= (and b!103629 (not res!51716)) b!103631))

(assert (= (and b!103631 res!51717) b!103643))

(assert (= (and b!103629 res!51713) b!103637))

(assert (= (and b!103637 c!17862) b!103626))

(assert (= (and b!103637 (not c!17862)) b!103646))

(assert (= (and b!103626 res!51714) b!103640))

(assert (= (or b!103626 b!103646) bm!10885))

(assert (= (and b!103637 res!51712) b!103642))

(assert (= (and b!103642 c!17861) b!103645))

(assert (= (and b!103642 (not c!17861)) b!103632))

(assert (= (and b!103645 res!51711) b!103627))

(assert (= (or b!103645 b!103632) bm!10879))

(declare-fun b_lambda!4653 () Bool)

(assert (=> (not b_lambda!4653) (not b!103643)))

(declare-fun tb!2049 () Bool)

(declare-fun t!5720 () Bool)

(assert (=> (and b!103261 (= (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) (defaultEntry!2561 newMap!16)) t!5720) tb!2049))

(declare-fun result!3447 () Bool)

(assert (=> tb!2049 (= result!3447 tp_is_empty!2673)))

(assert (=> b!103643 t!5720))

(declare-fun b_and!6425 () Bool)

(assert (= b_and!6421 (and (=> t!5720 result!3447) b_and!6425)))

(declare-fun t!5722 () Bool)

(declare-fun tb!2051 () Bool)

(assert (=> (and b!103249 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 newMap!16)) t!5722) tb!2051))

(declare-fun result!3449 () Bool)

(assert (= result!3449 result!3447))

(assert (=> b!103643 t!5722))

(declare-fun b_and!6427 () Bool)

(assert (= b_and!6423 (and (=> t!5722 result!3449) b_and!6427)))

(declare-fun m!114515 () Bool)

(assert (=> b!103627 m!114515))

(declare-fun m!114517 () Bool)

(assert (=> d!27811 m!114517))

(declare-fun m!114519 () Bool)

(assert (=> bm!10885 m!114519))

(declare-fun m!114521 () Bool)

(assert (=> bm!10882 m!114521))

(declare-fun m!114523 () Bool)

(assert (=> b!103636 m!114523))

(assert (=> b!103636 m!114523))

(declare-fun m!114525 () Bool)

(assert (=> b!103636 m!114525))

(declare-fun m!114527 () Bool)

(assert (=> b!103644 m!114527))

(declare-fun m!114529 () Bool)

(assert (=> b!103644 m!114529))

(declare-fun m!114531 () Bool)

(assert (=> b!103644 m!114531))

(declare-fun m!114533 () Bool)

(assert (=> b!103644 m!114533))

(declare-fun m!114535 () Bool)

(assert (=> b!103644 m!114535))

(declare-fun m!114537 () Bool)

(assert (=> b!103644 m!114537))

(declare-fun m!114539 () Bool)

(assert (=> b!103644 m!114539))

(declare-fun m!114541 () Bool)

(assert (=> b!103644 m!114541))

(assert (=> b!103644 m!114539))

(declare-fun m!114543 () Bool)

(assert (=> b!103644 m!114543))

(declare-fun m!114545 () Bool)

(assert (=> b!103644 m!114545))

(declare-fun m!114547 () Bool)

(assert (=> b!103644 m!114547))

(assert (=> b!103644 m!114523))

(assert (=> b!103644 m!114535))

(declare-fun m!114549 () Bool)

(assert (=> b!103644 m!114549))

(declare-fun m!114551 () Bool)

(assert (=> b!103644 m!114551))

(declare-fun m!114553 () Bool)

(assert (=> b!103644 m!114553))

(declare-fun m!114555 () Bool)

(assert (=> b!103644 m!114555))

(assert (=> b!103644 m!114527))

(declare-fun m!114557 () Bool)

(assert (=> b!103644 m!114557))

(assert (=> b!103644 m!114549))

(assert (=> b!103643 m!114523))

(assert (=> b!103643 m!114523))

(declare-fun m!114559 () Bool)

(assert (=> b!103643 m!114559))

(declare-fun m!114561 () Bool)

(assert (=> b!103643 m!114561))

(declare-fun m!114563 () Bool)

(assert (=> b!103643 m!114563))

(declare-fun m!114565 () Bool)

(assert (=> b!103643 m!114565))

(assert (=> b!103643 m!114563))

(assert (=> b!103643 m!114561))

(declare-fun m!114567 () Bool)

(assert (=> bm!10879 m!114567))

(assert (=> bm!10884 m!114533))

(assert (=> b!103631 m!114523))

(assert (=> b!103631 m!114523))

(declare-fun m!114569 () Bool)

(assert (=> b!103631 m!114569))

(declare-fun m!114571 () Bool)

(assert (=> b!103641 m!114571))

(declare-fun m!114573 () Bool)

(assert (=> b!103640 m!114573))

(assert (=> b!103634 m!114523))

(assert (=> b!103634 m!114523))

(assert (=> b!103634 m!114525))

(assert (=> d!27777 d!27811))

(declare-fun b!103681 () Bool)

(declare-fun e!67555 () Bool)

(declare-fun lt!52906 () SeekEntryResult!268)

(assert (=> b!103681 (= e!67555 ((_ is Undefined!268) lt!52906))))

(declare-fun call!10897 () SeekEntryResult!268)

(declare-fun bm!10894 () Bool)

(assert (=> bm!10894 (= call!10897 (seekEntryOrOpen!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun b!103682 () Bool)

(declare-fun e!67553 () Bool)

(assert (=> b!103682 (= e!67555 e!67553)))

(declare-fun res!51741 () Bool)

(declare-fun call!10899 () Bool)

(assert (=> b!103682 (= res!51741 call!10899)))

(assert (=> b!103682 (=> (not res!51741) (not e!67553))))

(declare-fun b!103683 () Bool)

(declare-fun res!51742 () Bool)

(declare-fun call!10900 () Bool)

(assert (=> b!103683 (= res!51742 call!10900)))

(declare-fun e!67549 () Bool)

(assert (=> b!103683 (=> (not res!51742) (not e!67549))))

(declare-fun b!103684 () Bool)

(declare-fun e!67550 () Unit!3170)

(declare-fun Unit!3182 () Unit!3170)

(assert (=> b!103684 (= e!67550 Unit!3182)))

(declare-fun bm!10895 () Bool)

(declare-fun call!10898 () Bool)

(assert (=> bm!10895 (= call!10898 (arrayContainsKey!0 (_keys!4263 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!103685 () Bool)

(declare-fun res!51737 () Bool)

(assert (=> b!103685 (= res!51737 (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3222 lt!52906)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103685 (=> (not res!51737) (not e!67553))))

(declare-fun b!103686 () Bool)

(declare-fun res!51743 () Bool)

(declare-fun e!67551 () Bool)

(assert (=> b!103686 (=> (not res!51743) (not e!67551))))

(declare-fun lt!52916 () tuple2!2400)

(assert (=> b!103686 (= res!51743 (contains!825 (map!1279 (_2!1210 lt!52916)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun b!103687 () Bool)

(declare-fun res!51739 () Bool)

(assert (=> b!103687 (=> (not res!51739) (not e!67551))))

(assert (=> b!103687 (= res!51739 (valid!405 (_2!1210 lt!52916)))))

(declare-fun b!103688 () Bool)

(declare-fun e!67554 () Unit!3170)

(declare-fun lt!52898 () Unit!3170)

(assert (=> b!103688 (= e!67554 lt!52898)))

(assert (=> b!103688 (= lt!52898 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)))))

(assert (=> b!103688 (= lt!52906 call!10897)))

(declare-fun c!17876 () Bool)

(assert (=> b!103688 (= c!17876 ((_ is MissingZero!268) lt!52906))))

(declare-fun e!67552 () Bool)

(assert (=> b!103688 e!67552))

(declare-fun b!103689 () Bool)

(declare-fun res!51740 () Bool)

(declare-fun e!67556 () Bool)

(assert (=> b!103689 (=> (not res!51740) (not e!67556))))

(assert (=> b!103689 (= res!51740 call!10899)))

(assert (=> b!103689 (= e!67552 e!67556)))

(declare-fun bm!10897 () Bool)

(declare-fun c!17875 () Bool)

(declare-fun lt!52900 () SeekEntryResult!268)

(assert (=> bm!10897 (= call!10900 (inRange!0 (ite c!17875 (index!3220 lt!52900) (ite c!17876 (index!3219 lt!52906) (index!3222 lt!52906))) (mask!6697 newMap!16)))))

(declare-fun b!103690 () Bool)

(assert (=> b!103690 (= e!67553 (not call!10898))))

(declare-fun b!103691 () Bool)

(declare-fun res!51745 () Bool)

(assert (=> b!103691 (=> (not res!51745) (not e!67556))))

(assert (=> b!103691 (= res!51745 (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3219 lt!52906)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103692 () Bool)

(declare-fun Unit!3183 () Unit!3170)

(assert (=> b!103692 (= e!67550 Unit!3183)))

(declare-fun lt!52895 () Unit!3170)

(declare-fun lemmaArrayContainsKeyThenInListMap!29 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 64) (_ BitVec 32) Int) Unit!3170)

(assert (=> b!103692 (= lt!52895 (lemmaArrayContainsKeyThenInListMap!29 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(assert (=> b!103692 (contains!825 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))

(declare-fun lt!52896 () Unit!3170)

(assert (=> b!103692 (= lt!52896 lt!52895)))

(assert (=> b!103692 false))

(declare-fun b!103693 () Bool)

(declare-fun Unit!3184 () Unit!3170)

(assert (=> b!103693 (= e!67554 Unit!3184)))

(declare-fun lt!52902 () Unit!3170)

(assert (=> b!103693 (= lt!52902 (lemmaInListMapThenSeekEntryOrOpenFindsIt!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)))))

(assert (=> b!103693 (= lt!52900 call!10897)))

(declare-fun res!51738 () Bool)

(assert (=> b!103693 (= res!51738 ((_ is Found!268) lt!52900))))

(assert (=> b!103693 (=> (not res!51738) (not e!67549))))

(assert (=> b!103693 e!67549))

(declare-fun lt!52908 () Unit!3170)

(assert (=> b!103693 (= lt!52908 lt!52902)))

(assert (=> b!103693 false))

(declare-fun bm!10896 () Bool)

(assert (=> bm!10896 (= call!10899 call!10900)))

(declare-fun d!27813 () Bool)

(assert (=> d!27813 e!67551))

(declare-fun res!51744 () Bool)

(assert (=> d!27813 (=> (not res!51744) (not e!67551))))

(assert (=> d!27813 (= res!51744 (_1!1210 lt!52916))))

(assert (=> d!27813 (= lt!52916 (tuple2!2401 true (LongMapFixedSize!895 (defaultEntry!2561 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (bvadd (_size!496 newMap!16) #b00000000000000000000000000000001) (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))) (_vacant!496 newMap!16))))))

(declare-fun lt!52890 () Unit!3170)

(declare-fun lt!52909 () Unit!3170)

(assert (=> d!27813 (= lt!52890 lt!52909)))

(declare-fun lt!52915 () array!4334)

(declare-fun lt!52891 () array!4336)

(assert (=> d!27813 (contains!825 (getCurrentListMap!482 lt!52915 lt!52891 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676))))))

(assert (=> d!27813 (= lt!52909 (lemmaValidKeyInArrayIsInListMap!104 lt!52915 lt!52891 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (defaultEntry!2561 newMap!16)))))

(assert (=> d!27813 (= lt!52891 (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))))))

(assert (=> d!27813 (= lt!52915 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))))))

(declare-fun lt!52893 () Unit!3170)

(declare-fun lt!52917 () Unit!3170)

(assert (=> d!27813 (= lt!52893 lt!52917)))

(declare-fun lt!52914 () array!4334)

(assert (=> d!27813 (= (arrayCountValidKeys!0 lt!52914 (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (bvadd (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4334 (_ BitVec 32)) Unit!3170)

(assert (=> d!27813 (= lt!52917 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!52914 (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676))))))

(assert (=> d!27813 (= lt!52914 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))))))

(declare-fun lt!52897 () Unit!3170)

(declare-fun lt!52911 () Unit!3170)

(assert (=> d!27813 (= lt!52897 lt!52911)))

(declare-fun lt!52894 () array!4334)

(assert (=> d!27813 (arrayContainsKey!0 lt!52894 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4334 (_ BitVec 64) (_ BitVec 32)) Unit!3170)

(assert (=> d!27813 (= lt!52911 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!52894 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676))))))

(assert (=> d!27813 (= lt!52894 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))))))

(declare-fun lt!52899 () Unit!3170)

(declare-fun lt!52912 () Unit!3170)

(assert (=> d!27813 (= lt!52899 lt!52912)))

(assert (=> d!27813 (= (+!143 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (getCurrentListMap!482 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!29 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 32) (_ BitVec 64) V!3211 Int) Unit!3170)

(assert (=> d!27813 (= lt!52912 (lemmaAddValidKeyToArrayThenAddPairToListMap!29 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52910 () Unit!3170)

(declare-fun lt!52892 () Unit!3170)

(assert (=> d!27813 (= lt!52910 lt!52892)))

(assert (=> d!27813 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) (mask!6697 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4334 (_ BitVec 32) (_ BitVec 32)) Unit!3170)

(assert (=> d!27813 (= lt!52892 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (_keys!4263 newMap!16) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (mask!6697 newMap!16)))))

(declare-fun lt!52903 () Unit!3170)

(declare-fun lt!52905 () Unit!3170)

(assert (=> d!27813 (= lt!52903 lt!52905)))

(assert (=> d!27813 (= (arrayCountValidKeys!0 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4263 newMap!16) #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4334 (_ BitVec 32) (_ BitVec 64)) Unit!3170)

(assert (=> d!27813 (= lt!52905 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4263 newMap!16) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun lt!52907 () Unit!3170)

(declare-fun lt!52904 () Unit!3170)

(assert (=> d!27813 (= lt!52907 lt!52904)))

(declare-fun lt!52888 () (_ BitVec 32))

(declare-fun lt!52889 () List!1638)

(assert (=> d!27813 (arrayNoDuplicates!0 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) lt!52888 lt!52889)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4334 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1638) Unit!3170)

(assert (=> d!27813 (= lt!52904 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4263 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) lt!52888 lt!52889))))

(assert (=> d!27813 (= lt!52889 Nil!1635)))

(assert (=> d!27813 (= lt!52888 #b00000000000000000000000000000000)))

(declare-fun lt!52913 () Unit!3170)

(assert (=> d!27813 (= lt!52913 e!67550)))

(declare-fun c!17873 () Bool)

(assert (=> d!27813 (= c!17873 (arrayContainsKey!0 (_keys!4263 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!52901 () Unit!3170)

(assert (=> d!27813 (= lt!52901 e!67554)))

(assert (=> d!27813 (= c!17875 (contains!825 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> d!27813 (valid!405 newMap!16)))

(assert (=> d!27813 (= (updateHelperNewKey!46 newMap!16 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546 (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676))) lt!52916)))

(declare-fun b!103694 () Bool)

(declare-fun c!17874 () Bool)

(assert (=> b!103694 (= c!17874 ((_ is MissingVacant!268) lt!52906))))

(assert (=> b!103694 (= e!67552 e!67555)))

(declare-fun b!103695 () Bool)

(assert (=> b!103695 (= e!67551 (= (map!1279 (_2!1210 lt!52916)) (+!143 (map!1279 newMap!16) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun b!103696 () Bool)

(assert (=> b!103696 (= e!67556 (not call!10898))))

(declare-fun b!103697 () Bool)

(assert (=> b!103697 (= e!67549 (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52900)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (= (and d!27813 c!17875) b!103693))

(assert (= (and d!27813 (not c!17875)) b!103688))

(assert (= (and b!103693 res!51738) b!103683))

(assert (= (and b!103683 res!51742) b!103697))

(assert (= (and b!103688 c!17876) b!103689))

(assert (= (and b!103688 (not c!17876)) b!103694))

(assert (= (and b!103689 res!51740) b!103691))

(assert (= (and b!103691 res!51745) b!103696))

(assert (= (and b!103694 c!17874) b!103682))

(assert (= (and b!103694 (not c!17874)) b!103681))

(assert (= (and b!103682 res!51741) b!103685))

(assert (= (and b!103685 res!51737) b!103690))

(assert (= (or b!103689 b!103682) bm!10896))

(assert (= (or b!103696 b!103690) bm!10895))

(assert (= (or b!103683 bm!10896) bm!10897))

(assert (= (or b!103693 b!103688) bm!10894))

(assert (= (and d!27813 c!17873) b!103692))

(assert (= (and d!27813 (not c!17873)) b!103684))

(assert (= (and d!27813 res!51744) b!103687))

(assert (= (and b!103687 res!51739) b!103686))

(assert (= (and b!103686 res!51743) b!103695))

(declare-fun m!114575 () Bool)

(assert (=> b!103691 m!114575))

(declare-fun m!114577 () Bool)

(assert (=> b!103695 m!114577))

(assert (=> b!103695 m!114213))

(assert (=> b!103695 m!114213))

(declare-fun m!114579 () Bool)

(assert (=> b!103695 m!114579))

(assert (=> d!27813 m!114187))

(declare-fun m!114581 () Bool)

(assert (=> d!27813 m!114581))

(declare-fun m!114583 () Bool)

(assert (=> d!27813 m!114583))

(assert (=> d!27813 m!114187))

(declare-fun m!114585 () Bool)

(assert (=> d!27813 m!114585))

(declare-fun m!114587 () Bool)

(assert (=> d!27813 m!114587))

(declare-fun m!114589 () Bool)

(assert (=> d!27813 m!114589))

(declare-fun m!114591 () Bool)

(assert (=> d!27813 m!114591))

(assert (=> d!27813 m!114425))

(declare-fun m!114593 () Bool)

(assert (=> d!27813 m!114593))

(assert (=> d!27813 m!114187))

(assert (=> d!27813 m!114307))

(assert (=> d!27813 m!114187))

(declare-fun m!114595 () Bool)

(assert (=> d!27813 m!114595))

(declare-fun m!114597 () Bool)

(assert (=> d!27813 m!114597))

(assert (=> d!27813 m!114295))

(assert (=> d!27813 m!114187))

(declare-fun m!114599 () Bool)

(assert (=> d!27813 m!114599))

(assert (=> d!27813 m!114187))

(declare-fun m!114601 () Bool)

(assert (=> d!27813 m!114601))

(assert (=> d!27813 m!114187))

(declare-fun m!114603 () Bool)

(assert (=> d!27813 m!114603))

(assert (=> d!27813 m!114295))

(declare-fun m!114605 () Bool)

(assert (=> d!27813 m!114605))

(declare-fun m!114607 () Bool)

(assert (=> d!27813 m!114607))

(assert (=> d!27813 m!114587))

(assert (=> d!27813 m!114589))

(declare-fun m!114609 () Bool)

(assert (=> d!27813 m!114609))

(assert (=> d!27813 m!114219))

(declare-fun m!114611 () Bool)

(assert (=> d!27813 m!114611))

(assert (=> d!27813 m!114187))

(declare-fun m!114613 () Bool)

(assert (=> d!27813 m!114613))

(declare-fun m!114615 () Bool)

(assert (=> d!27813 m!114615))

(assert (=> d!27813 m!114295))

(declare-fun m!114617 () Bool)

(assert (=> d!27813 m!114617))

(declare-fun m!114619 () Bool)

(assert (=> d!27813 m!114619))

(assert (=> b!103686 m!114577))

(assert (=> b!103686 m!114577))

(assert (=> b!103686 m!114187))

(declare-fun m!114621 () Bool)

(assert (=> b!103686 m!114621))

(declare-fun m!114623 () Bool)

(assert (=> bm!10897 m!114623))

(assert (=> b!103688 m!114187))

(assert (=> b!103688 m!114339))

(assert (=> bm!10895 m!114187))

(assert (=> bm!10895 m!114307))

(assert (=> b!103692 m!114187))

(declare-fun m!114625 () Bool)

(assert (=> b!103692 m!114625))

(assert (=> b!103692 m!114295))

(assert (=> b!103692 m!114295))

(assert (=> b!103692 m!114187))

(assert (=> b!103692 m!114599))

(declare-fun m!114627 () Bool)

(assert (=> b!103697 m!114627))

(assert (=> bm!10894 m!114187))

(assert (=> bm!10894 m!114305))

(declare-fun m!114629 () Bool)

(assert (=> b!103685 m!114629))

(assert (=> b!103693 m!114187))

(assert (=> b!103693 m!114303))

(declare-fun m!114631 () Bool)

(assert (=> b!103687 m!114631))

(assert (=> bm!10833 d!27813))

(declare-fun b!103707 () Bool)

(declare-fun e!67561 () Option!160)

(declare-fun e!67562 () Option!160)

(assert (=> b!103707 (= e!67561 e!67562)))

(declare-fun c!17882 () Bool)

(assert (=> b!103707 (= c!17882 (and ((_ is Cons!1633) (toList!805 lt!52795)) (not (= (_1!1211 (h!2229 (toList!805 lt!52795))) (_1!1211 lt!52551)))))))

(declare-fun b!103706 () Bool)

(assert (=> b!103706 (= e!67561 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52795)))))))

(declare-fun b!103708 () Bool)

(assert (=> b!103708 (= e!67562 (getValueByKey!154 (t!5711 (toList!805 lt!52795)) (_1!1211 lt!52551)))))

(declare-fun d!27815 () Bool)

(declare-fun c!17881 () Bool)

(assert (=> d!27815 (= c!17881 (and ((_ is Cons!1633) (toList!805 lt!52795)) (= (_1!1211 (h!2229 (toList!805 lt!52795))) (_1!1211 lt!52551))))))

(assert (=> d!27815 (= (getValueByKey!154 (toList!805 lt!52795) (_1!1211 lt!52551)) e!67561)))

(declare-fun b!103709 () Bool)

(assert (=> b!103709 (= e!67562 None!158)))

(assert (= (and d!27815 c!17881) b!103706))

(assert (= (and d!27815 (not c!17881)) b!103707))

(assert (= (and b!103707 c!17882) b!103708))

(assert (= (and b!103707 (not c!17882)) b!103709))

(declare-fun m!114633 () Bool)

(assert (=> b!103708 m!114633))

(assert (=> b!103612 d!27815))

(assert (=> d!27769 d!27775))

(declare-fun d!27817 () Bool)

(assert (=> d!27817 (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) from!355 Nil!1635)))

(assert (=> d!27817 true))

(declare-fun _$71!144 () Unit!3170)

(assert (=> d!27817 (= (choose!39 (_keys!4263 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!144)))

(declare-fun bs!4240 () Bool)

(assert (= bs!4240 d!27817))

(assert (=> bs!4240 m!114199))

(assert (=> d!27769 d!27817))

(declare-fun b!103711 () Bool)

(declare-fun e!67563 () Option!160)

(declare-fun e!67564 () Option!160)

(assert (=> b!103711 (= e!67563 e!67564)))

(declare-fun c!17884 () Bool)

(assert (=> b!103711 (= c!17884 (and ((_ is Cons!1633) (toList!805 lt!52799)) (not (= (_1!1211 (h!2229 (toList!805 lt!52799))) (_1!1211 lt!52551)))))))

(declare-fun b!103710 () Bool)

(assert (=> b!103710 (= e!67563 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52799)))))))

(declare-fun b!103712 () Bool)

(assert (=> b!103712 (= e!67564 (getValueByKey!154 (t!5711 (toList!805 lt!52799)) (_1!1211 lt!52551)))))

(declare-fun d!27819 () Bool)

(declare-fun c!17883 () Bool)

(assert (=> d!27819 (= c!17883 (and ((_ is Cons!1633) (toList!805 lt!52799)) (= (_1!1211 (h!2229 (toList!805 lt!52799))) (_1!1211 lt!52551))))))

(assert (=> d!27819 (= (getValueByKey!154 (toList!805 lt!52799) (_1!1211 lt!52551)) e!67563)))

(declare-fun b!103713 () Bool)

(assert (=> b!103713 (= e!67564 None!158)))

(assert (= (and d!27819 c!17883) b!103710))

(assert (= (and d!27819 (not c!17883)) b!103711))

(assert (= (and b!103711 c!17884) b!103712))

(assert (= (and b!103711 (not c!17884)) b!103713))

(declare-fun m!114635 () Bool)

(assert (=> b!103712 m!114635))

(assert (=> b!103614 d!27819))

(assert (=> b!103609 d!27809))

(declare-fun d!27821 () Bool)

(declare-fun e!67567 () Bool)

(assert (=> d!27821 e!67567))

(declare-fun c!17887 () Bool)

(assert (=> d!27821 (= c!17887 (and (not (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!27821 true))

(declare-fun _$29!138 () Unit!3170)

(assert (=> d!27821 (= (choose!645 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))) _$29!138)))

(declare-fun b!103718 () Bool)

(assert (=> b!103718 (= e!67567 (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!103719 () Bool)

(assert (=> b!103719 (= e!67567 (ite (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!27821 c!17887) b!103718))

(assert (= (and d!27821 (not c!17887)) b!103719))

(assert (=> b!103718 m!114187))

(assert (=> b!103718 m!114203))

(assert (=> d!27773 d!27821))

(assert (=> d!27773 d!27807))

(declare-fun d!27823 () Bool)

(declare-fun e!67570 () Bool)

(assert (=> d!27823 e!67570))

(declare-fun res!51750 () Bool)

(assert (=> d!27823 (=> (not res!51750) (not e!67570))))

(declare-fun lt!52923 () SeekEntryResult!268)

(assert (=> d!27823 (= res!51750 ((_ is Found!268) lt!52923))))

(assert (=> d!27823 (= lt!52923 (seekEntryOrOpen!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun lt!52922 () Unit!3170)

(declare-fun choose!647 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 64) Int) Unit!3170)

(assert (=> d!27823 (= lt!52922 (choose!647 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)))))

(assert (=> d!27823 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!27823 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)) lt!52922)))

(declare-fun b!103724 () Bool)

(declare-fun res!51751 () Bool)

(assert (=> b!103724 (=> (not res!51751) (not e!67570))))

(assert (=> b!103724 (= res!51751 (inRange!0 (index!3220 lt!52923) (mask!6697 newMap!16)))))

(declare-fun b!103725 () Bool)

(assert (=> b!103725 (= e!67570 (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52923)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> b!103725 (and (bvsge (index!3220 lt!52923) #b00000000000000000000000000000000) (bvslt (index!3220 lt!52923) (size!2310 (_keys!4263 newMap!16))))))

(assert (= (and d!27823 res!51750) b!103724))

(assert (= (and b!103724 res!51751) b!103725))

(assert (=> d!27823 m!114187))

(assert (=> d!27823 m!114305))

(assert (=> d!27823 m!114187))

(declare-fun m!114637 () Bool)

(assert (=> d!27823 m!114637))

(assert (=> d!27823 m!114517))

(declare-fun m!114639 () Bool)

(assert (=> b!103724 m!114639))

(declare-fun m!114641 () Bool)

(assert (=> b!103725 m!114641))

(assert (=> bm!10847 d!27823))

(declare-fun d!27825 () Bool)

(declare-fun res!51752 () Bool)

(declare-fun e!67571 () Bool)

(assert (=> d!27825 (=> (not res!51752) (not e!67571))))

(assert (=> d!27825 (= res!51752 (simpleValid!72 (v!2876 (underlying!359 thiss!992))))))

(assert (=> d!27825 (= (valid!405 (v!2876 (underlying!359 thiss!992))) e!67571)))

(declare-fun b!103726 () Bool)

(declare-fun res!51753 () Bool)

(assert (=> b!103726 (=> (not res!51753) (not e!67571))))

(assert (=> b!103726 (= res!51753 (= (arrayCountValidKeys!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000000 (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))) (_size!496 (v!2876 (underlying!359 thiss!992)))))))

(declare-fun b!103727 () Bool)

(declare-fun res!51754 () Bool)

(assert (=> b!103727 (=> (not res!51754) (not e!67571))))

(assert (=> b!103727 (= res!51754 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992)))))))

(declare-fun b!103728 () Bool)

(assert (=> b!103728 (= e!67571 (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000000 Nil!1635))))

(assert (= (and d!27825 res!51752) b!103726))

(assert (= (and b!103726 res!51753) b!103727))

(assert (= (and b!103727 res!51754) b!103728))

(declare-fun m!114643 () Bool)

(assert (=> d!27825 m!114643))

(declare-fun m!114645 () Bool)

(assert (=> b!103726 m!114645))

(declare-fun m!114647 () Bool)

(assert (=> b!103727 m!114647))

(declare-fun m!114649 () Bool)

(assert (=> b!103728 m!114649))

(assert (=> d!27793 d!27825))

(declare-fun d!27827 () Bool)

(declare-fun e!67572 () Bool)

(assert (=> d!27827 e!67572))

(declare-fun res!51756 () Bool)

(assert (=> d!27827 (=> (not res!51756) (not e!67572))))

(declare-fun lt!52924 () ListLongMap!1579)

(assert (=> d!27827 (= res!51756 (contains!825 lt!52924 (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun lt!52927 () List!1637)

(assert (=> d!27827 (= lt!52924 (ListLongMap!1580 lt!52927))))

(declare-fun lt!52926 () Unit!3170)

(declare-fun lt!52925 () Unit!3170)

(assert (=> d!27827 (= lt!52926 lt!52925)))

(assert (=> d!27827 (= (getValueByKey!154 lt!52927 (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))) (Some!159 (_2!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (=> d!27827 (= lt!52925 (lemmaContainsTupThenGetReturnValue!72 lt!52927 (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (_2!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (=> d!27827 (= lt!52927 (insertStrictlySorted!74 (toList!805 e!67414) (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (_2!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (=> d!27827 (= (+!143 e!67414 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) lt!52924)))

(declare-fun b!103729 () Bool)

(declare-fun res!51755 () Bool)

(assert (=> b!103729 (=> (not res!51755) (not e!67572))))

(assert (=> b!103729 (= res!51755 (= (getValueByKey!154 (toList!805 lt!52924) (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))) (Some!159 (_2!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))))

(declare-fun b!103730 () Bool)

(assert (=> b!103730 (= e!67572 (contains!828 (toList!805 lt!52924) (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (= (and d!27827 res!51756) b!103729))

(assert (= (and b!103729 res!51755) b!103730))

(declare-fun m!114651 () Bool)

(assert (=> d!27827 m!114651))

(declare-fun m!114653 () Bool)

(assert (=> d!27827 m!114653))

(declare-fun m!114655 () Bool)

(assert (=> d!27827 m!114655))

(declare-fun m!114657 () Bool)

(assert (=> d!27827 m!114657))

(declare-fun m!114659 () Bool)

(assert (=> b!103729 m!114659))

(declare-fun m!114661 () Bool)

(assert (=> b!103730 m!114661))

(assert (=> bm!10839 d!27827))

(declare-fun d!27829 () Bool)

(declare-fun e!67574 () Bool)

(assert (=> d!27829 e!67574))

(declare-fun res!51757 () Bool)

(assert (=> d!27829 (=> res!51757 e!67574)))

(declare-fun lt!52931 () Bool)

(assert (=> d!27829 (= res!51757 (not lt!52931))))

(declare-fun lt!52929 () Bool)

(assert (=> d!27829 (= lt!52931 lt!52929)))

(declare-fun lt!52928 () Unit!3170)

(declare-fun e!67573 () Unit!3170)

(assert (=> d!27829 (= lt!52928 e!67573)))

(declare-fun c!17888 () Bool)

(assert (=> d!27829 (= c!17888 lt!52929)))

(assert (=> d!27829 (= lt!52929 (containsKey!158 (toList!805 lt!52753) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!27829 (= (contains!825 lt!52753 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!52931)))

(declare-fun b!103731 () Bool)

(declare-fun lt!52930 () Unit!3170)

(assert (=> b!103731 (= e!67573 lt!52930)))

(assert (=> b!103731 (= lt!52930 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52753) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103731 (isDefined!108 (getValueByKey!154 (toList!805 lt!52753) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103732 () Bool)

(declare-fun Unit!3185 () Unit!3170)

(assert (=> b!103732 (= e!67573 Unit!3185)))

(declare-fun b!103733 () Bool)

(assert (=> b!103733 (= e!67574 (isDefined!108 (getValueByKey!154 (toList!805 lt!52753) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!27829 c!17888) b!103731))

(assert (= (and d!27829 (not c!17888)) b!103732))

(assert (= (and d!27829 (not res!51757)) b!103733))

(assert (=> d!27829 m!114355))

(declare-fun m!114663 () Bool)

(assert (=> d!27829 m!114663))

(assert (=> b!103731 m!114355))

(declare-fun m!114665 () Bool)

(assert (=> b!103731 m!114665))

(assert (=> b!103731 m!114355))

(declare-fun m!114667 () Bool)

(assert (=> b!103731 m!114667))

(assert (=> b!103731 m!114667))

(declare-fun m!114669 () Bool)

(assert (=> b!103731 m!114669))

(assert (=> b!103733 m!114355))

(assert (=> b!103733 m!114667))

(assert (=> b!103733 m!114667))

(assert (=> b!103733 m!114669))

(assert (=> b!103537 d!27829))

(declare-fun b!103735 () Bool)

(declare-fun e!67575 () Option!160)

(declare-fun e!67576 () Option!160)

(assert (=> b!103735 (= e!67575 e!67576)))

(declare-fun c!17890 () Bool)

(assert (=> b!103735 (= c!17890 (and ((_ is Cons!1633) (toList!805 lt!52791)) (not (= (_1!1211 (h!2229 (toList!805 lt!52791))) (_1!1211 lt!52547)))))))

(declare-fun b!103734 () Bool)

(assert (=> b!103734 (= e!67575 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52791)))))))

(declare-fun b!103736 () Bool)

(assert (=> b!103736 (= e!67576 (getValueByKey!154 (t!5711 (toList!805 lt!52791)) (_1!1211 lt!52547)))))

(declare-fun d!27831 () Bool)

(declare-fun c!17889 () Bool)

(assert (=> d!27831 (= c!17889 (and ((_ is Cons!1633) (toList!805 lt!52791)) (= (_1!1211 (h!2229 (toList!805 lt!52791))) (_1!1211 lt!52547))))))

(assert (=> d!27831 (= (getValueByKey!154 (toList!805 lt!52791) (_1!1211 lt!52547)) e!67575)))

(declare-fun b!103737 () Bool)

(assert (=> b!103737 (= e!67576 None!158)))

(assert (= (and d!27831 c!17889) b!103734))

(assert (= (and d!27831 (not c!17889)) b!103735))

(assert (= (and b!103735 c!17890) b!103736))

(assert (= (and b!103735 (not c!17890)) b!103737))

(declare-fun m!114671 () Bool)

(assert (=> b!103736 m!114671))

(assert (=> b!103610 d!27831))

(declare-fun d!27833 () Bool)

(declare-fun e!67577 () Bool)

(assert (=> d!27833 e!67577))

(declare-fun res!51759 () Bool)

(assert (=> d!27833 (=> (not res!51759) (not e!67577))))

(declare-fun lt!52932 () ListLongMap!1579)

(assert (=> d!27833 (= res!51759 (contains!825 lt!52932 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun lt!52935 () List!1637)

(assert (=> d!27833 (= lt!52932 (ListLongMap!1580 lt!52935))))

(declare-fun lt!52934 () Unit!3170)

(declare-fun lt!52933 () Unit!3170)

(assert (=> d!27833 (= lt!52934 lt!52933)))

(assert (=> d!27833 (= (getValueByKey!154 lt!52935 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (Some!159 (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!27833 (= lt!52933 (lemmaContainsTupThenGetReturnValue!72 lt!52935 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!27833 (= lt!52935 (insertStrictlySorted!74 (toList!805 call!10854) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!27833 (= (+!143 call!10854 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) lt!52932)))

(declare-fun b!103738 () Bool)

(declare-fun res!51758 () Bool)

(assert (=> b!103738 (=> (not res!51758) (not e!67577))))

(assert (=> b!103738 (= res!51758 (= (getValueByKey!154 (toList!805 lt!52932) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (Some!159 (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun b!103739 () Bool)

(assert (=> b!103739 (= e!67577 (contains!828 (toList!805 lt!52932) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))

(assert (= (and d!27833 res!51759) b!103738))

(assert (= (and b!103738 res!51758) b!103739))

(declare-fun m!114673 () Bool)

(assert (=> d!27833 m!114673))

(declare-fun m!114675 () Bool)

(assert (=> d!27833 m!114675))

(declare-fun m!114677 () Bool)

(assert (=> d!27833 m!114677))

(declare-fun m!114679 () Bool)

(assert (=> d!27833 m!114679))

(declare-fun m!114681 () Bool)

(assert (=> b!103738 m!114681))

(declare-fun m!114683 () Bool)

(assert (=> b!103739 m!114683))

(assert (=> b!103423 d!27833))

(declare-fun d!27835 () Bool)

(assert (=> d!27835 (= (get!1335 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) from!355) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103558 d!27835))

(declare-fun d!27837 () Bool)

(declare-fun e!67578 () Bool)

(assert (=> d!27837 e!67578))

(declare-fun res!51761 () Bool)

(assert (=> d!27837 (=> (not res!51761) (not e!67578))))

(declare-fun lt!52936 () ListLongMap!1579)

(assert (=> d!27837 (= res!51761 (contains!825 lt!52936 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun lt!52939 () List!1637)

(assert (=> d!27837 (= lt!52936 (ListLongMap!1580 lt!52939))))

(declare-fun lt!52938 () Unit!3170)

(declare-fun lt!52937 () Unit!3170)

(assert (=> d!27837 (= lt!52938 lt!52937)))

(assert (=> d!27837 (= (getValueByKey!154 lt!52939 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27837 (= lt!52937 (lemmaContainsTupThenGetReturnValue!72 lt!52939 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27837 (= lt!52939 (insertStrictlySorted!74 (toList!805 lt!52542) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27837 (= (+!143 lt!52542 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52936)))

(declare-fun b!103740 () Bool)

(declare-fun res!51760 () Bool)

(assert (=> b!103740 (=> (not res!51760) (not e!67578))))

(assert (=> b!103740 (= res!51760 (= (getValueByKey!154 (toList!805 lt!52936) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!103741 () Bool)

(assert (=> b!103741 (= e!67578 (contains!828 (toList!805 lt!52936) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(assert (= (and d!27837 res!51761) b!103740))

(assert (= (and b!103740 res!51760) b!103741))

(declare-fun m!114685 () Bool)

(assert (=> d!27837 m!114685))

(declare-fun m!114687 () Bool)

(assert (=> d!27837 m!114687))

(declare-fun m!114689 () Bool)

(assert (=> d!27837 m!114689))

(declare-fun m!114691 () Bool)

(assert (=> d!27837 m!114691))

(declare-fun m!114693 () Bool)

(assert (=> b!103740 m!114693))

(declare-fun m!114695 () Bool)

(assert (=> b!103741 m!114695))

(assert (=> d!27805 d!27837))

(declare-fun d!27839 () Bool)

(declare-fun e!67579 () Bool)

(assert (=> d!27839 e!67579))

(declare-fun res!51763 () Bool)

(assert (=> d!27839 (=> (not res!51763) (not e!67579))))

(declare-fun lt!52940 () ListLongMap!1579)

(assert (=> d!27839 (= res!51763 (contains!825 lt!52940 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun lt!52943 () List!1637)

(assert (=> d!27839 (= lt!52940 (ListLongMap!1580 lt!52943))))

(declare-fun lt!52942 () Unit!3170)

(declare-fun lt!52941 () Unit!3170)

(assert (=> d!27839 (= lt!52942 lt!52941)))

(assert (=> d!27839 (= (getValueByKey!154 lt!52943 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27839 (= lt!52941 (lemmaContainsTupThenGetReturnValue!72 lt!52943 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27839 (= lt!52943 (insertStrictlySorted!74 (toList!805 (+!143 lt!52542 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27839 (= (+!143 (+!143 lt!52542 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52940)))

(declare-fun b!103742 () Bool)

(declare-fun res!51762 () Bool)

(assert (=> b!103742 (=> (not res!51762) (not e!67579))))

(assert (=> b!103742 (= res!51762 (= (getValueByKey!154 (toList!805 lt!52940) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!103743 () Bool)

(assert (=> b!103743 (= e!67579 (contains!828 (toList!805 lt!52940) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(assert (= (and d!27839 res!51763) b!103742))

(assert (= (and b!103742 res!51762) b!103743))

(declare-fun m!114697 () Bool)

(assert (=> d!27839 m!114697))

(declare-fun m!114699 () Bool)

(assert (=> d!27839 m!114699))

(declare-fun m!114701 () Bool)

(assert (=> d!27839 m!114701))

(declare-fun m!114703 () Bool)

(assert (=> d!27839 m!114703))

(declare-fun m!114705 () Bool)

(assert (=> b!103742 m!114705))

(declare-fun m!114707 () Bool)

(assert (=> b!103743 m!114707))

(assert (=> d!27805 d!27839))

(declare-fun d!27841 () Bool)

(declare-fun e!67580 () Bool)

(assert (=> d!27841 e!67580))

(declare-fun res!51765 () Bool)

(assert (=> d!27841 (=> (not res!51765) (not e!67580))))

(declare-fun lt!52944 () ListLongMap!1579)

(assert (=> d!27841 (= res!51765 (contains!825 lt!52944 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun lt!52947 () List!1637)

(assert (=> d!27841 (= lt!52944 (ListLongMap!1580 lt!52947))))

(declare-fun lt!52946 () Unit!3170)

(declare-fun lt!52945 () Unit!3170)

(assert (=> d!27841 (= lt!52946 lt!52945)))

(assert (=> d!27841 (= (getValueByKey!154 lt!52947 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (Some!159 (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!27841 (= lt!52945 (lemmaContainsTupThenGetReturnValue!72 lt!52947 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!27841 (= lt!52947 (insertStrictlySorted!74 (toList!805 lt!52542) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!27841 (= (+!143 lt!52542 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) lt!52944)))

(declare-fun b!103744 () Bool)

(declare-fun res!51764 () Bool)

(assert (=> b!103744 (=> (not res!51764) (not e!67580))))

(assert (=> b!103744 (= res!51764 (= (getValueByKey!154 (toList!805 lt!52944) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (Some!159 (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun b!103745 () Bool)

(assert (=> b!103745 (= e!67580 (contains!828 (toList!805 lt!52944) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))

(assert (= (and d!27841 res!51765) b!103744))

(assert (= (and b!103744 res!51764) b!103745))

(declare-fun m!114709 () Bool)

(assert (=> d!27841 m!114709))

(declare-fun m!114711 () Bool)

(assert (=> d!27841 m!114711))

(declare-fun m!114713 () Bool)

(assert (=> d!27841 m!114713))

(declare-fun m!114715 () Bool)

(assert (=> d!27841 m!114715))

(declare-fun m!114717 () Bool)

(assert (=> b!103744 m!114717))

(declare-fun m!114719 () Bool)

(assert (=> b!103745 m!114719))

(assert (=> d!27805 d!27841))

(declare-fun d!27843 () Bool)

(declare-fun e!67581 () Bool)

(assert (=> d!27843 e!67581))

(declare-fun res!51767 () Bool)

(assert (=> d!27843 (=> (not res!51767) (not e!67581))))

(declare-fun lt!52948 () ListLongMap!1579)

(assert (=> d!27843 (= res!51767 (contains!825 lt!52948 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun lt!52951 () List!1637)

(assert (=> d!27843 (= lt!52948 (ListLongMap!1580 lt!52951))))

(declare-fun lt!52950 () Unit!3170)

(declare-fun lt!52949 () Unit!3170)

(assert (=> d!27843 (= lt!52950 lt!52949)))

(assert (=> d!27843 (= (getValueByKey!154 lt!52951 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (Some!159 (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!27843 (= lt!52949 (lemmaContainsTupThenGetReturnValue!72 lt!52951 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!27843 (= lt!52951 (insertStrictlySorted!74 (toList!805 (+!143 lt!52542 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!27843 (= (+!143 (+!143 lt!52542 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) lt!52948)))

(declare-fun b!103746 () Bool)

(declare-fun res!51766 () Bool)

(assert (=> b!103746 (=> (not res!51766) (not e!67581))))

(assert (=> b!103746 (= res!51766 (= (getValueByKey!154 (toList!805 lt!52948) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (Some!159 (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun b!103747 () Bool)

(assert (=> b!103747 (= e!67581 (contains!828 (toList!805 lt!52948) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))

(assert (= (and d!27843 res!51767) b!103746))

(assert (= (and b!103746 res!51766) b!103747))

(declare-fun m!114721 () Bool)

(assert (=> d!27843 m!114721))

(declare-fun m!114723 () Bool)

(assert (=> d!27843 m!114723))

(declare-fun m!114725 () Bool)

(assert (=> d!27843 m!114725))

(declare-fun m!114727 () Bool)

(assert (=> d!27843 m!114727))

(declare-fun m!114729 () Bool)

(assert (=> b!103746 m!114729))

(declare-fun m!114731 () Bool)

(assert (=> b!103747 m!114731))

(assert (=> d!27805 d!27843))

(declare-fun d!27845 () Bool)

(assert (=> d!27845 (= (+!143 (+!143 lt!52542 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (+!143 (+!143 lt!52542 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))

(assert (=> d!27845 true))

(declare-fun _$28!158 () Unit!3170)

(assert (=> d!27845 (= (choose!646 lt!52542 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) _$28!158)))

(declare-fun bs!4241 () Bool)

(assert (= bs!4241 d!27845))

(assert (=> bs!4241 m!114505))

(assert (=> bs!4241 m!114505))

(assert (=> bs!4241 m!114507))

(assert (=> bs!4241 m!114503))

(assert (=> bs!4241 m!114503))

(assert (=> bs!4241 m!114509))

(assert (=> d!27805 d!27845))

(declare-fun b!103748 () Bool)

(declare-fun e!67587 () ListLongMap!1579)

(assert (=> b!103748 (= e!67587 (ListLongMap!1580 Nil!1634))))

(declare-fun b!103750 () Bool)

(declare-fun e!67584 () Bool)

(declare-fun lt!52957 () ListLongMap!1579)

(assert (=> b!103750 (= e!67584 (isEmpty!372 lt!52957))))

(declare-fun b!103751 () Bool)

(assert (=> b!103751 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(assert (=> b!103751 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2311 (_values!2544 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun e!67588 () Bool)

(assert (=> b!103751 (= e!67588 (= (apply!97 lt!52957 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!103752 () Bool)

(declare-fun e!67582 () Bool)

(assert (=> b!103752 (= e!67582 e!67588)))

(assert (=> b!103752 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun res!51771 () Bool)

(assert (=> b!103752 (= res!51771 (contains!825 lt!52957 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!103752 (=> (not res!51771) (not e!67588))))

(declare-fun b!103753 () Bool)

(declare-fun e!67583 () ListLongMap!1579)

(assert (=> b!103753 (= e!67587 e!67583)))

(declare-fun c!17891 () Bool)

(assert (=> b!103753 (= c!17891 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!103754 () Bool)

(declare-fun e!67585 () Bool)

(assert (=> b!103754 (= e!67585 e!67582)))

(declare-fun c!17892 () Bool)

(declare-fun e!67586 () Bool)

(assert (=> b!103754 (= c!17892 e!67586)))

(declare-fun res!51770 () Bool)

(assert (=> b!103754 (=> (not res!51770) (not e!67586))))

(assert (=> b!103754 (= res!51770 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!103755 () Bool)

(declare-fun lt!52953 () Unit!3170)

(declare-fun lt!52956 () Unit!3170)

(assert (=> b!103755 (= lt!52953 lt!52956)))

(declare-fun lt!52954 () (_ BitVec 64))

(declare-fun lt!52958 () (_ BitVec 64))

(declare-fun lt!52952 () ListLongMap!1579)

(declare-fun lt!52955 () V!3211)

(assert (=> b!103755 (not (contains!825 (+!143 lt!52952 (tuple2!2403 lt!52958 lt!52955)) lt!52954))))

(assert (=> b!103755 (= lt!52956 (addStillNotContains!47 lt!52952 lt!52958 lt!52955 lt!52954))))

(assert (=> b!103755 (= lt!52954 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!103755 (= lt!52955 (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!103755 (= lt!52958 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!10901 () ListLongMap!1579)

(assert (=> b!103755 (= lt!52952 call!10901)))

(assert (=> b!103755 (= e!67583 (+!143 call!10901 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!10898 () Bool)

(assert (=> bm!10898 (= call!10901 (getCurrentListMapNoExtraKeys!110 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))))))

(declare-fun d!27847 () Bool)

(assert (=> d!27847 e!67585))

(declare-fun res!51768 () Bool)

(assert (=> d!27847 (=> (not res!51768) (not e!67585))))

(assert (=> d!27847 (= res!51768 (not (contains!825 lt!52957 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!27847 (= lt!52957 e!67587)))

(declare-fun c!17893 () Bool)

(assert (=> d!27847 (= c!17893 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(assert (=> d!27847 (validMask!0 (mask!6697 (v!2876 (underlying!359 thiss!992))))))

(assert (=> d!27847 (= (getCurrentListMapNoExtraKeys!110 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))) lt!52957)))

(declare-fun b!103749 () Bool)

(declare-fun res!51769 () Bool)

(assert (=> b!103749 (=> (not res!51769) (not e!67585))))

(assert (=> b!103749 (= res!51769 (not (contains!825 lt!52957 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!103756 () Bool)

(assert (=> b!103756 (= e!67582 e!67584)))

(declare-fun c!17894 () Bool)

(assert (=> b!103756 (= c!17894 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!103757 () Bool)

(assert (=> b!103757 (= e!67583 call!10901)))

(declare-fun b!103758 () Bool)

(assert (=> b!103758 (= e!67584 (= lt!52957 (getCurrentListMapNoExtraKeys!110 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!103759 () Bool)

(assert (=> b!103759 (= e!67586 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!103759 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (= (and d!27847 c!17893) b!103748))

(assert (= (and d!27847 (not c!17893)) b!103753))

(assert (= (and b!103753 c!17891) b!103755))

(assert (= (and b!103753 (not c!17891)) b!103757))

(assert (= (or b!103755 b!103757) bm!10898))

(assert (= (and d!27847 res!51768) b!103749))

(assert (= (and b!103749 res!51769) b!103754))

(assert (= (and b!103754 res!51770) b!103759))

(assert (= (and b!103754 c!17892) b!103752))

(assert (= (and b!103754 (not c!17892)) b!103756))

(assert (= (and b!103752 res!51771) b!103751))

(assert (= (and b!103756 c!17894) b!103758))

(assert (= (and b!103756 (not c!17894)) b!103750))

(declare-fun b_lambda!4655 () Bool)

(assert (=> (not b_lambda!4655) (not b!103751)))

(assert (=> b!103751 t!5708))

(declare-fun b_and!6429 () Bool)

(assert (= b_and!6425 (and (=> t!5708 result!3433) b_and!6429)))

(assert (=> b!103751 t!5710))

(declare-fun b_and!6431 () Bool)

(assert (= b_and!6427 (and (=> t!5710 result!3437) b_and!6431)))

(declare-fun b_lambda!4657 () Bool)

(assert (=> (not b_lambda!4657) (not b!103755)))

(assert (=> b!103755 t!5708))

(declare-fun b_and!6433 () Bool)

(assert (= b_and!6429 (and (=> t!5708 result!3433) b_and!6433)))

(assert (=> b!103755 t!5710))

(declare-fun b_and!6435 () Bool)

(assert (= b_and!6431 (and (=> t!5710 result!3437) b_and!6435)))

(declare-fun m!114733 () Bool)

(assert (=> d!27847 m!114733))

(assert (=> d!27847 m!114185))

(declare-fun m!114735 () Bool)

(assert (=> b!103758 m!114735))

(assert (=> bm!10898 m!114735))

(declare-fun m!114737 () Bool)

(assert (=> b!103751 m!114737))

(assert (=> b!103751 m!114209))

(declare-fun m!114739 () Bool)

(assert (=> b!103751 m!114739))

(assert (=> b!103751 m!114737))

(declare-fun m!114741 () Bool)

(assert (=> b!103751 m!114741))

(assert (=> b!103751 m!114209))

(assert (=> b!103751 m!114741))

(declare-fun m!114743 () Bool)

(assert (=> b!103751 m!114743))

(assert (=> b!103755 m!114737))

(assert (=> b!103755 m!114209))

(assert (=> b!103755 m!114739))

(declare-fun m!114745 () Bool)

(assert (=> b!103755 m!114745))

(declare-fun m!114747 () Bool)

(assert (=> b!103755 m!114747))

(assert (=> b!103755 m!114745))

(declare-fun m!114749 () Bool)

(assert (=> b!103755 m!114749))

(assert (=> b!103755 m!114737))

(assert (=> b!103755 m!114741))

(assert (=> b!103755 m!114209))

(declare-fun m!114751 () Bool)

(assert (=> b!103755 m!114751))

(declare-fun m!114753 () Bool)

(assert (=> b!103749 m!114753))

(assert (=> b!103759 m!114741))

(assert (=> b!103759 m!114741))

(declare-fun m!114755 () Bool)

(assert (=> b!103759 m!114755))

(declare-fun m!114757 () Bool)

(assert (=> b!103750 m!114757))

(assert (=> b!103753 m!114741))

(assert (=> b!103753 m!114741))

(assert (=> b!103753 m!114755))

(assert (=> b!103752 m!114741))

(assert (=> b!103752 m!114741))

(declare-fun m!114759 () Bool)

(assert (=> b!103752 m!114759))

(assert (=> bm!10878 d!27847))

(declare-fun bm!10899 () Bool)

(declare-fun call!10902 () Bool)

(declare-fun lt!52976 () ListLongMap!1579)

(assert (=> bm!10899 (= call!10902 (contains!825 lt!52976 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10900 () Bool)

(declare-fun call!10904 () ListLongMap!1579)

(declare-fun call!10907 () ListLongMap!1579)

(assert (=> bm!10900 (= call!10904 call!10907)))

(declare-fun b!103760 () Bool)

(declare-fun e!67600 () Bool)

(declare-fun e!67601 () Bool)

(assert (=> b!103760 (= e!67600 e!67601)))

(declare-fun res!51776 () Bool)

(declare-fun call!10905 () Bool)

(assert (=> b!103760 (= res!51776 call!10905)))

(assert (=> b!103760 (=> (not res!51776) (not e!67601))))

(declare-fun bm!10901 () Bool)

(declare-fun call!10903 () ListLongMap!1579)

(declare-fun call!10908 () ListLongMap!1579)

(assert (=> bm!10901 (= call!10903 call!10908)))

(declare-fun b!103761 () Bool)

(declare-fun e!67590 () Bool)

(assert (=> b!103761 (= e!67590 (= (apply!97 lt!52976 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2438 newMap!16)))))

(declare-fun b!103762 () Bool)

(declare-fun e!67594 () ListLongMap!1579)

(declare-fun e!67599 () ListLongMap!1579)

(assert (=> b!103762 (= e!67594 e!67599)))

(declare-fun c!17899 () Bool)

(assert (=> b!103762 (= c!17899 (and (not (= (bvand (ite (and c!17808 c!17814) lt!52673 (extraKeys!2370 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!17808 c!17814) lt!52673 (extraKeys!2370 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103763 () Bool)

(declare-fun res!51775 () Bool)

(declare-fun e!67592 () Bool)

(assert (=> b!103763 (=> (not res!51775) (not e!67592))))

(declare-fun e!67597 () Bool)

(assert (=> b!103763 (= res!51775 e!67597)))

(declare-fun res!51778 () Bool)

(assert (=> b!103763 (=> res!51778 e!67597)))

(declare-fun e!67589 () Bool)

(assert (=> b!103763 (= res!51778 (not e!67589))))

(declare-fun res!51777 () Bool)

(assert (=> b!103763 (=> (not res!51777) (not e!67589))))

(assert (=> b!103763 (= res!51777 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!103764 () Bool)

(declare-fun c!17900 () Bool)

(assert (=> b!103764 (= c!17900 (and (not (= (bvand (ite (and c!17808 c!17814) lt!52673 (extraKeys!2370 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!17808 c!17814) lt!52673 (extraKeys!2370 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!67596 () ListLongMap!1579)

(assert (=> b!103764 (= e!67599 e!67596)))

(declare-fun bm!10902 () Bool)

(declare-fun c!17896 () Bool)

(declare-fun call!10906 () ListLongMap!1579)

(assert (=> bm!10902 (= call!10907 (+!143 (ite c!17896 call!10906 (ite c!17899 call!10908 call!10903)) (ite (or c!17896 c!17899) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(declare-fun b!103766 () Bool)

(declare-fun e!67598 () Bool)

(assert (=> b!103766 (= e!67598 (not call!10902))))

(declare-fun b!103767 () Bool)

(declare-fun e!67595 () Unit!3170)

(declare-fun Unit!3186 () Unit!3170)

(assert (=> b!103767 (= e!67595 Unit!3186)))

(declare-fun b!103768 () Bool)

(assert (=> b!103768 (= e!67589 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103769 () Bool)

(assert (=> b!103769 (= e!67596 call!10904)))

(declare-fun b!103770 () Bool)

(declare-fun e!67593 () Bool)

(assert (=> b!103770 (= e!67593 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103771 () Bool)

(declare-fun res!51774 () Bool)

(assert (=> b!103771 (=> (not res!51774) (not e!67592))))

(assert (=> b!103771 (= res!51774 e!67600)))

(declare-fun c!17898 () Bool)

(assert (=> b!103771 (= c!17898 (not (= (bvand (ite (and c!17808 c!17814) lt!52673 (extraKeys!2370 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!103772 () Bool)

(assert (=> b!103772 (= e!67599 call!10904)))

(declare-fun b!103773 () Bool)

(assert (=> b!103773 (= e!67596 call!10903)))

(declare-fun bm!10903 () Bool)

(assert (=> bm!10903 (= call!10908 call!10906)))

(declare-fun b!103774 () Bool)

(assert (=> b!103774 (= e!67601 (= (apply!97 lt!52976 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))))))

(declare-fun b!103775 () Bool)

(assert (=> b!103775 (= e!67594 (+!143 call!10907 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))

(declare-fun bm!10904 () Bool)

(assert (=> bm!10904 (= call!10906 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (ite c!17808 (_values!2544 newMap!16) lt!52657) (mask!6697 newMap!16) (ite (and c!17808 c!17814) lt!52673 (extraKeys!2370 newMap!16)) (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun d!27849 () Bool)

(assert (=> d!27849 e!67592))

(declare-fun res!51772 () Bool)

(assert (=> d!27849 (=> (not res!51772) (not e!67592))))

(assert (=> d!27849 (= res!51772 (or (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))))

(declare-fun lt!52961 () ListLongMap!1579)

(assert (=> d!27849 (= lt!52976 lt!52961)))

(declare-fun lt!52960 () Unit!3170)

(assert (=> d!27849 (= lt!52960 e!67595)))

(declare-fun c!17895 () Bool)

(assert (=> d!27849 (= c!17895 e!67593)))

(declare-fun res!51780 () Bool)

(assert (=> d!27849 (=> (not res!51780) (not e!67593))))

(assert (=> d!27849 (= res!51780 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!27849 (= lt!52961 e!67594)))

(assert (=> d!27849 (= c!17896 (and (not (= (bvand (ite (and c!17808 c!17814) lt!52673 (extraKeys!2370 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!17808 c!17814) lt!52673 (extraKeys!2370 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!27849 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!27849 (= (getCurrentListMap!482 (_keys!4263 newMap!16) (ite c!17808 (_values!2544 newMap!16) lt!52657) (mask!6697 newMap!16) (ite (and c!17808 c!17814) lt!52673 (extraKeys!2370 newMap!16)) (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!52976)))

(declare-fun b!103765 () Bool)

(declare-fun e!67591 () Bool)

(assert (=> b!103765 (= e!67597 e!67591)))

(declare-fun res!51779 () Bool)

(assert (=> b!103765 (=> (not res!51779) (not e!67591))))

(assert (=> b!103765 (= res!51779 (contains!825 lt!52976 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!103765 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!103776 () Bool)

(assert (=> b!103776 (= e!67592 e!67598)))

(declare-fun c!17897 () Bool)

(assert (=> b!103776 (= c!17897 (not (= (bvand (ite (and c!17808 c!17814) lt!52673 (extraKeys!2370 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103777 () Bool)

(assert (=> b!103777 (= e!67591 (= (apply!97 lt!52976 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1333 (select (arr!2057 (ite c!17808 (_values!2544 newMap!16) lt!52657)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103777 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (ite c!17808 (_values!2544 newMap!16) lt!52657))))))

(assert (=> b!103777 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun bm!10905 () Bool)

(assert (=> bm!10905 (= call!10905 (contains!825 lt!52976 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103778 () Bool)

(declare-fun lt!52963 () Unit!3170)

(assert (=> b!103778 (= e!67595 lt!52963)))

(declare-fun lt!52969 () ListLongMap!1579)

(assert (=> b!103778 (= lt!52969 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (ite c!17808 (_values!2544 newMap!16) lt!52657) (mask!6697 newMap!16) (ite (and c!17808 c!17814) lt!52673 (extraKeys!2370 newMap!16)) (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52964 () (_ BitVec 64))

(assert (=> b!103778 (= lt!52964 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52975 () (_ BitVec 64))

(assert (=> b!103778 (= lt!52975 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52979 () Unit!3170)

(assert (=> b!103778 (= lt!52979 (addStillContains!73 lt!52969 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)) lt!52975))))

(assert (=> b!103778 (contains!825 (+!143 lt!52969 (tuple2!2403 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)))) lt!52975)))

(declare-fun lt!52972 () Unit!3170)

(assert (=> b!103778 (= lt!52972 lt!52979)))

(declare-fun lt!52974 () ListLongMap!1579)

(assert (=> b!103778 (= lt!52974 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (ite c!17808 (_values!2544 newMap!16) lt!52657) (mask!6697 newMap!16) (ite (and c!17808 c!17814) lt!52673 (extraKeys!2370 newMap!16)) (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52973 () (_ BitVec 64))

(assert (=> b!103778 (= lt!52973 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52959 () (_ BitVec 64))

(assert (=> b!103778 (= lt!52959 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52971 () Unit!3170)

(assert (=> b!103778 (= lt!52971 (addApplyDifferent!73 lt!52974 lt!52973 (minValue!2438 newMap!16) lt!52959))))

(assert (=> b!103778 (= (apply!97 (+!143 lt!52974 (tuple2!2403 lt!52973 (minValue!2438 newMap!16))) lt!52959) (apply!97 lt!52974 lt!52959))))

(declare-fun lt!52970 () Unit!3170)

(assert (=> b!103778 (= lt!52970 lt!52971)))

(declare-fun lt!52977 () ListLongMap!1579)

(assert (=> b!103778 (= lt!52977 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (ite c!17808 (_values!2544 newMap!16) lt!52657) (mask!6697 newMap!16) (ite (and c!17808 c!17814) lt!52673 (extraKeys!2370 newMap!16)) (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52978 () (_ BitVec 64))

(assert (=> b!103778 (= lt!52978 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52980 () (_ BitVec 64))

(assert (=> b!103778 (= lt!52980 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52968 () Unit!3170)

(assert (=> b!103778 (= lt!52968 (addApplyDifferent!73 lt!52977 lt!52978 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)) lt!52980))))

(assert (=> b!103778 (= (apply!97 (+!143 lt!52977 (tuple2!2403 lt!52978 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)))) lt!52980) (apply!97 lt!52977 lt!52980))))

(declare-fun lt!52966 () Unit!3170)

(assert (=> b!103778 (= lt!52966 lt!52968)))

(declare-fun lt!52965 () ListLongMap!1579)

(assert (=> b!103778 (= lt!52965 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (ite c!17808 (_values!2544 newMap!16) lt!52657) (mask!6697 newMap!16) (ite (and c!17808 c!17814) lt!52673 (extraKeys!2370 newMap!16)) (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52967 () (_ BitVec 64))

(assert (=> b!103778 (= lt!52967 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52962 () (_ BitVec 64))

(assert (=> b!103778 (= lt!52962 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!103778 (= lt!52963 (addApplyDifferent!73 lt!52965 lt!52967 (minValue!2438 newMap!16) lt!52962))))

(assert (=> b!103778 (= (apply!97 (+!143 lt!52965 (tuple2!2403 lt!52967 (minValue!2438 newMap!16))) lt!52962) (apply!97 lt!52965 lt!52962))))

(declare-fun b!103779 () Bool)

(assert (=> b!103779 (= e!67598 e!67590)))

(declare-fun res!51773 () Bool)

(assert (=> b!103779 (= res!51773 call!10902)))

(assert (=> b!103779 (=> (not res!51773) (not e!67590))))

(declare-fun b!103780 () Bool)

(assert (=> b!103780 (= e!67600 (not call!10905))))

(assert (= (and d!27849 c!17896) b!103775))

(assert (= (and d!27849 (not c!17896)) b!103762))

(assert (= (and b!103762 c!17899) b!103772))

(assert (= (and b!103762 (not c!17899)) b!103764))

(assert (= (and b!103764 c!17900) b!103769))

(assert (= (and b!103764 (not c!17900)) b!103773))

(assert (= (or b!103769 b!103773) bm!10901))

(assert (= (or b!103772 bm!10901) bm!10903))

(assert (= (or b!103772 b!103769) bm!10900))

(assert (= (or b!103775 bm!10903) bm!10904))

(assert (= (or b!103775 bm!10900) bm!10902))

(assert (= (and d!27849 res!51780) b!103770))

(assert (= (and d!27849 c!17895) b!103778))

(assert (= (and d!27849 (not c!17895)) b!103767))

(assert (= (and d!27849 res!51772) b!103763))

(assert (= (and b!103763 res!51777) b!103768))

(assert (= (and b!103763 (not res!51778)) b!103765))

(assert (= (and b!103765 res!51779) b!103777))

(assert (= (and b!103763 res!51775) b!103771))

(assert (= (and b!103771 c!17898) b!103760))

(assert (= (and b!103771 (not c!17898)) b!103780))

(assert (= (and b!103760 res!51776) b!103774))

(assert (= (or b!103760 b!103780) bm!10905))

(assert (= (and b!103771 res!51774) b!103776))

(assert (= (and b!103776 c!17897) b!103779))

(assert (= (and b!103776 (not c!17897)) b!103766))

(assert (= (and b!103779 res!51773) b!103761))

(assert (= (or b!103779 b!103766) bm!10899))

(declare-fun b_lambda!4659 () Bool)

(assert (=> (not b_lambda!4659) (not b!103777)))

(assert (=> b!103777 t!5720))

(declare-fun b_and!6437 () Bool)

(assert (= b_and!6433 (and (=> t!5720 result!3447) b_and!6437)))

(assert (=> b!103777 t!5722))

(declare-fun b_and!6439 () Bool)

(assert (= b_and!6435 (and (=> t!5722 result!3449) b_and!6439)))

(declare-fun m!114761 () Bool)

(assert (=> b!103761 m!114761))

(assert (=> d!27849 m!114517))

(declare-fun m!114763 () Bool)

(assert (=> bm!10905 m!114763))

(declare-fun m!114765 () Bool)

(assert (=> bm!10902 m!114765))

(assert (=> b!103770 m!114523))

(assert (=> b!103770 m!114523))

(assert (=> b!103770 m!114525))

(declare-fun m!114767 () Bool)

(assert (=> b!103778 m!114767))

(declare-fun m!114769 () Bool)

(assert (=> b!103778 m!114769))

(declare-fun m!114771 () Bool)

(assert (=> b!103778 m!114771))

(declare-fun m!114773 () Bool)

(assert (=> b!103778 m!114773))

(declare-fun m!114775 () Bool)

(assert (=> b!103778 m!114775))

(declare-fun m!114777 () Bool)

(assert (=> b!103778 m!114777))

(declare-fun m!114779 () Bool)

(assert (=> b!103778 m!114779))

(declare-fun m!114781 () Bool)

(assert (=> b!103778 m!114781))

(assert (=> b!103778 m!114779))

(declare-fun m!114783 () Bool)

(assert (=> b!103778 m!114783))

(declare-fun m!114785 () Bool)

(assert (=> b!103778 m!114785))

(declare-fun m!114787 () Bool)

(assert (=> b!103778 m!114787))

(assert (=> b!103778 m!114523))

(assert (=> b!103778 m!114775))

(declare-fun m!114789 () Bool)

(assert (=> b!103778 m!114789))

(declare-fun m!114791 () Bool)

(assert (=> b!103778 m!114791))

(declare-fun m!114793 () Bool)

(assert (=> b!103778 m!114793))

(declare-fun m!114795 () Bool)

(assert (=> b!103778 m!114795))

(assert (=> b!103778 m!114767))

(declare-fun m!114797 () Bool)

(assert (=> b!103778 m!114797))

(assert (=> b!103778 m!114789))

(assert (=> b!103777 m!114523))

(assert (=> b!103777 m!114523))

(declare-fun m!114799 () Bool)

(assert (=> b!103777 m!114799))

(declare-fun m!114801 () Bool)

(assert (=> b!103777 m!114801))

(assert (=> b!103777 m!114563))

(declare-fun m!114803 () Bool)

(assert (=> b!103777 m!114803))

(assert (=> b!103777 m!114563))

(assert (=> b!103777 m!114801))

(declare-fun m!114805 () Bool)

(assert (=> bm!10899 m!114805))

(assert (=> bm!10904 m!114773))

(assert (=> b!103765 m!114523))

(assert (=> b!103765 m!114523))

(declare-fun m!114807 () Bool)

(assert (=> b!103765 m!114807))

(declare-fun m!114809 () Bool)

(assert (=> b!103775 m!114809))

(declare-fun m!114811 () Bool)

(assert (=> b!103774 m!114811))

(assert (=> b!103768 m!114523))

(assert (=> b!103768 m!114523))

(assert (=> b!103768 m!114525))

(assert (=> bm!10845 d!27849))

(declare-fun d!27851 () Bool)

(declare-fun res!51781 () Bool)

(declare-fun e!67602 () Bool)

(assert (=> d!27851 (=> res!51781 e!67602)))

(assert (=> d!27851 (= res!51781 (= (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> d!27851 (= (arrayContainsKey!0 (_keys!4263 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b00000000000000000000000000000000) e!67602)))

(declare-fun b!103781 () Bool)

(declare-fun e!67603 () Bool)

(assert (=> b!103781 (= e!67602 e!67603)))

(declare-fun res!51782 () Bool)

(assert (=> b!103781 (=> (not res!51782) (not e!67603))))

(assert (=> b!103781 (= res!51782 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!103782 () Bool)

(assert (=> b!103782 (= e!67603 (arrayContainsKey!0 (_keys!4263 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!27851 (not res!51781)) b!103781))

(assert (= (and b!103781 res!51782) b!103782))

(assert (=> d!27851 m!114523))

(assert (=> b!103782 m!114187))

(declare-fun m!114813 () Bool)

(assert (=> b!103782 m!114813))

(assert (=> bm!10838 d!27851))

(declare-fun d!27853 () Bool)

(declare-fun res!51787 () Bool)

(declare-fun e!67608 () Bool)

(assert (=> d!27853 (=> res!51787 e!67608)))

(assert (=> d!27853 (= res!51787 (and ((_ is Cons!1633) (toList!805 lt!52550)) (= (_1!1211 (h!2229 (toList!805 lt!52550))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))))

(assert (=> d!27853 (= (containsKey!158 (toList!805 lt!52550) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) e!67608)))

(declare-fun b!103787 () Bool)

(declare-fun e!67609 () Bool)

(assert (=> b!103787 (= e!67608 e!67609)))

(declare-fun res!51788 () Bool)

(assert (=> b!103787 (=> (not res!51788) (not e!67609))))

(assert (=> b!103787 (= res!51788 (and (or (not ((_ is Cons!1633) (toList!805 lt!52550))) (bvsle (_1!1211 (h!2229 (toList!805 lt!52550))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))) ((_ is Cons!1633) (toList!805 lt!52550)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52550))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))))

(declare-fun b!103788 () Bool)

(assert (=> b!103788 (= e!67609 (containsKey!158 (t!5711 (toList!805 lt!52550)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (= (and d!27853 (not res!51787)) b!103787))

(assert (= (and b!103787 res!51788) b!103788))

(assert (=> b!103788 m!114187))

(declare-fun m!114815 () Bool)

(assert (=> b!103788 m!114815))

(assert (=> d!27763 d!27853))

(declare-fun d!27855 () Bool)

(declare-fun res!51789 () Bool)

(declare-fun e!67610 () Bool)

(assert (=> d!27855 (=> res!51789 e!67610)))

(assert (=> d!27855 (= res!51789 (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> d!27855 (= (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!67610)))

(declare-fun b!103789 () Bool)

(declare-fun e!67611 () Bool)

(assert (=> b!103789 (= e!67610 e!67611)))

(declare-fun res!51790 () Bool)

(assert (=> b!103789 (=> (not res!51790) (not e!67611))))

(assert (=> b!103789 (= res!51790 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!103790 () Bool)

(assert (=> b!103790 (= e!67611 (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!27855 (not res!51789)) b!103789))

(assert (= (and b!103789 res!51790) b!103790))

(assert (=> d!27855 m!114741))

(assert (=> b!103790 m!114187))

(declare-fun m!114817 () Bool)

(assert (=> b!103790 m!114817))

(assert (=> b!103468 d!27855))

(declare-fun d!27857 () Bool)

(assert (=> d!27857 (= (apply!97 (+!143 lt!52742 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52739) (apply!97 lt!52742 lt!52739))))

(declare-fun lt!52983 () Unit!3170)

(declare-fun choose!648 (ListLongMap!1579 (_ BitVec 64) V!3211 (_ BitVec 64)) Unit!3170)

(assert (=> d!27857 (= lt!52983 (choose!648 lt!52742 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))) lt!52739))))

(declare-fun e!67614 () Bool)

(assert (=> d!27857 e!67614))

(declare-fun res!51793 () Bool)

(assert (=> d!27857 (=> (not res!51793) (not e!67614))))

(assert (=> d!27857 (= res!51793 (contains!825 lt!52742 lt!52739))))

(assert (=> d!27857 (= (addApplyDifferent!73 lt!52742 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))) lt!52739) lt!52983)))

(declare-fun b!103794 () Bool)

(assert (=> b!103794 (= e!67614 (not (= lt!52739 lt!52744)))))

(assert (= (and d!27857 res!51793) b!103794))

(assert (=> d!27857 m!114393))

(assert (=> d!27857 m!114395))

(declare-fun m!114819 () Bool)

(assert (=> d!27857 m!114819))

(declare-fun m!114821 () Bool)

(assert (=> d!27857 m!114821))

(assert (=> d!27857 m!114395))

(assert (=> d!27857 m!114397))

(assert (=> b!103550 d!27857))

(declare-fun d!27859 () Bool)

(declare-fun get!1336 (Option!160) V!3211)

(assert (=> d!27859 (= (apply!97 lt!52742 lt!52739) (get!1336 (getValueByKey!154 (toList!805 lt!52742) lt!52739)))))

(declare-fun bs!4242 () Bool)

(assert (= bs!4242 d!27859))

(declare-fun m!114823 () Bool)

(assert (=> bs!4242 m!114823))

(assert (=> bs!4242 m!114823))

(declare-fun m!114825 () Bool)

(assert (=> bs!4242 m!114825))

(assert (=> b!103550 d!27859))

(declare-fun d!27861 () Bool)

(assert (=> d!27861 (= (apply!97 (+!143 lt!52754 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52757) (apply!97 lt!52754 lt!52757))))

(declare-fun lt!52984 () Unit!3170)

(assert (=> d!27861 (= lt!52984 (choose!648 lt!52754 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) lt!52757))))

(declare-fun e!67615 () Bool)

(assert (=> d!27861 e!67615))

(declare-fun res!51794 () Bool)

(assert (=> d!27861 (=> (not res!51794) (not e!67615))))

(assert (=> d!27861 (= res!51794 (contains!825 lt!52754 lt!52757))))

(assert (=> d!27861 (= (addApplyDifferent!73 lt!52754 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) lt!52757) lt!52984)))

(declare-fun b!103795 () Bool)

(assert (=> b!103795 (= e!67615 (not (= lt!52757 lt!52755)))))

(assert (= (and d!27861 res!51794) b!103795))

(assert (=> d!27861 m!114387))

(assert (=> d!27861 m!114375))

(declare-fun m!114827 () Bool)

(assert (=> d!27861 m!114827))

(declare-fun m!114829 () Bool)

(assert (=> d!27861 m!114829))

(assert (=> d!27861 m!114375))

(assert (=> d!27861 m!114377))

(assert (=> b!103550 d!27861))

(declare-fun d!27863 () Bool)

(declare-fun e!67616 () Bool)

(assert (=> d!27863 e!67616))

(declare-fun res!51796 () Bool)

(assert (=> d!27863 (=> (not res!51796) (not e!67616))))

(declare-fun lt!52985 () ListLongMap!1579)

(assert (=> d!27863 (= res!51796 (contains!825 lt!52985 (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun lt!52988 () List!1637)

(assert (=> d!27863 (= lt!52985 (ListLongMap!1580 lt!52988))))

(declare-fun lt!52987 () Unit!3170)

(declare-fun lt!52986 () Unit!3170)

(assert (=> d!27863 (= lt!52987 lt!52986)))

(assert (=> d!27863 (= (getValueByKey!154 lt!52988 (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27863 (= lt!52986 (lemmaContainsTupThenGetReturnValue!72 lt!52988 (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27863 (= lt!52988 (insertStrictlySorted!74 (toList!805 lt!52754) (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27863 (= (+!143 lt!52754 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52985)))

(declare-fun b!103796 () Bool)

(declare-fun res!51795 () Bool)

(assert (=> b!103796 (=> (not res!51795) (not e!67616))))

(assert (=> b!103796 (= res!51795 (= (getValueByKey!154 (toList!805 lt!52985) (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!103797 () Bool)

(assert (=> b!103797 (= e!67616 (contains!828 (toList!805 lt!52985) (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(assert (= (and d!27863 res!51796) b!103796))

(assert (= (and b!103796 res!51795) b!103797))

(declare-fun m!114831 () Bool)

(assert (=> d!27863 m!114831))

(declare-fun m!114833 () Bool)

(assert (=> d!27863 m!114833))

(declare-fun m!114835 () Bool)

(assert (=> d!27863 m!114835))

(declare-fun m!114837 () Bool)

(assert (=> d!27863 m!114837))

(declare-fun m!114839 () Bool)

(assert (=> b!103796 m!114839))

(declare-fun m!114841 () Bool)

(assert (=> b!103797 m!114841))

(assert (=> b!103550 d!27863))

(declare-fun d!27865 () Bool)

(declare-fun e!67617 () Bool)

(assert (=> d!27865 e!67617))

(declare-fun res!51798 () Bool)

(assert (=> d!27865 (=> (not res!51798) (not e!67617))))

(declare-fun lt!52989 () ListLongMap!1579)

(assert (=> d!27865 (= res!51798 (contains!825 lt!52989 (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun lt!52992 () List!1637)

(assert (=> d!27865 (= lt!52989 (ListLongMap!1580 lt!52992))))

(declare-fun lt!52991 () Unit!3170)

(declare-fun lt!52990 () Unit!3170)

(assert (=> d!27865 (= lt!52991 lt!52990)))

(assert (=> d!27865 (= (getValueByKey!154 lt!52992 (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27865 (= lt!52990 (lemmaContainsTupThenGetReturnValue!72 lt!52992 (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27865 (= lt!52992 (insertStrictlySorted!74 (toList!805 lt!52751) (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27865 (= (+!143 lt!52751 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52989)))

(declare-fun b!103798 () Bool)

(declare-fun res!51797 () Bool)

(assert (=> b!103798 (=> (not res!51797) (not e!67617))))

(assert (=> b!103798 (= res!51797 (= (getValueByKey!154 (toList!805 lt!52989) (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!103799 () Bool)

(assert (=> b!103799 (= e!67617 (contains!828 (toList!805 lt!52989) (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(assert (= (and d!27865 res!51798) b!103798))

(assert (= (and b!103798 res!51797) b!103799))

(declare-fun m!114843 () Bool)

(assert (=> d!27865 m!114843))

(declare-fun m!114845 () Bool)

(assert (=> d!27865 m!114845))

(declare-fun m!114847 () Bool)

(assert (=> d!27865 m!114847))

(declare-fun m!114849 () Bool)

(assert (=> d!27865 m!114849))

(declare-fun m!114851 () Bool)

(assert (=> b!103798 m!114851))

(declare-fun m!114853 () Bool)

(assert (=> b!103799 m!114853))

(assert (=> b!103550 d!27865))

(declare-fun d!27867 () Bool)

(assert (=> d!27867 (= (apply!97 (+!143 lt!52751 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52736) (get!1336 (getValueByKey!154 (toList!805 (+!143 lt!52751 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52736)))))

(declare-fun bs!4243 () Bool)

(assert (= bs!4243 d!27867))

(declare-fun m!114855 () Bool)

(assert (=> bs!4243 m!114855))

(assert (=> bs!4243 m!114855))

(declare-fun m!114857 () Bool)

(assert (=> bs!4243 m!114857))

(assert (=> b!103550 d!27867))

(declare-fun d!27869 () Bool)

(declare-fun e!67618 () Bool)

(assert (=> d!27869 e!67618))

(declare-fun res!51800 () Bool)

(assert (=> d!27869 (=> (not res!51800) (not e!67618))))

(declare-fun lt!52993 () ListLongMap!1579)

(assert (=> d!27869 (= res!51800 (contains!825 lt!52993 (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun lt!52996 () List!1637)

(assert (=> d!27869 (= lt!52993 (ListLongMap!1580 lt!52996))))

(declare-fun lt!52995 () Unit!3170)

(declare-fun lt!52994 () Unit!3170)

(assert (=> d!27869 (= lt!52995 lt!52994)))

(assert (=> d!27869 (= (getValueByKey!154 lt!52996 (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27869 (= lt!52994 (lemmaContainsTupThenGetReturnValue!72 lt!52996 (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27869 (= lt!52996 (insertStrictlySorted!74 (toList!805 lt!52746) (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27869 (= (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52993)))

(declare-fun b!103800 () Bool)

(declare-fun res!51799 () Bool)

(assert (=> b!103800 (=> (not res!51799) (not e!67618))))

(assert (=> b!103800 (= res!51799 (= (getValueByKey!154 (toList!805 lt!52993) (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!103801 () Bool)

(assert (=> b!103801 (= e!67618 (contains!828 (toList!805 lt!52993) (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(assert (= (and d!27869 res!51800) b!103800))

(assert (= (and b!103800 res!51799) b!103801))

(declare-fun m!114859 () Bool)

(assert (=> d!27869 m!114859))

(declare-fun m!114861 () Bool)

(assert (=> d!27869 m!114861))

(declare-fun m!114863 () Bool)

(assert (=> d!27869 m!114863))

(declare-fun m!114865 () Bool)

(assert (=> d!27869 m!114865))

(declare-fun m!114867 () Bool)

(assert (=> b!103800 m!114867))

(declare-fun m!114869 () Bool)

(assert (=> b!103801 m!114869))

(assert (=> b!103550 d!27869))

(declare-fun d!27871 () Bool)

(declare-fun e!67619 () Bool)

(assert (=> d!27871 e!67619))

(declare-fun res!51802 () Bool)

(assert (=> d!27871 (=> (not res!51802) (not e!67619))))

(declare-fun lt!52997 () ListLongMap!1579)

(assert (=> d!27871 (= res!51802 (contains!825 lt!52997 (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun lt!53000 () List!1637)

(assert (=> d!27871 (= lt!52997 (ListLongMap!1580 lt!53000))))

(declare-fun lt!52999 () Unit!3170)

(declare-fun lt!52998 () Unit!3170)

(assert (=> d!27871 (= lt!52999 lt!52998)))

(assert (=> d!27871 (= (getValueByKey!154 lt!53000 (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27871 (= lt!52998 (lemmaContainsTupThenGetReturnValue!72 lt!53000 (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27871 (= lt!53000 (insertStrictlySorted!74 (toList!805 lt!52742) (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27871 (= (+!143 lt!52742 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52997)))

(declare-fun b!103802 () Bool)

(declare-fun res!51801 () Bool)

(assert (=> b!103802 (=> (not res!51801) (not e!67619))))

(assert (=> b!103802 (= res!51801 (= (getValueByKey!154 (toList!805 lt!52997) (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!103803 () Bool)

(assert (=> b!103803 (= e!67619 (contains!828 (toList!805 lt!52997) (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(assert (= (and d!27871 res!51802) b!103802))

(assert (= (and b!103802 res!51801) b!103803))

(declare-fun m!114871 () Bool)

(assert (=> d!27871 m!114871))

(declare-fun m!114873 () Bool)

(assert (=> d!27871 m!114873))

(declare-fun m!114875 () Bool)

(assert (=> d!27871 m!114875))

(declare-fun m!114877 () Bool)

(assert (=> d!27871 m!114877))

(declare-fun m!114879 () Bool)

(assert (=> b!103802 m!114879))

(declare-fun m!114881 () Bool)

(assert (=> b!103803 m!114881))

(assert (=> b!103550 d!27871))

(declare-fun d!27873 () Bool)

(assert (=> d!27873 (= (apply!97 lt!52751 lt!52736) (get!1336 (getValueByKey!154 (toList!805 lt!52751) lt!52736)))))

(declare-fun bs!4244 () Bool)

(assert (= bs!4244 d!27873))

(declare-fun m!114883 () Bool)

(assert (=> bs!4244 m!114883))

(assert (=> bs!4244 m!114883))

(declare-fun m!114885 () Bool)

(assert (=> bs!4244 m!114885))

(assert (=> b!103550 d!27873))

(assert (=> b!103550 d!27797))

(declare-fun d!27875 () Bool)

(assert (=> d!27875 (= (apply!97 (+!143 lt!52754 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52757) (get!1336 (getValueByKey!154 (toList!805 (+!143 lt!52754 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52757)))))

(declare-fun bs!4245 () Bool)

(assert (= bs!4245 d!27875))

(declare-fun m!114887 () Bool)

(assert (=> bs!4245 m!114887))

(assert (=> bs!4245 m!114887))

(declare-fun m!114889 () Bool)

(assert (=> bs!4245 m!114889))

(assert (=> b!103550 d!27875))

(declare-fun d!27877 () Bool)

(assert (=> d!27877 (= (apply!97 lt!52754 lt!52757) (get!1336 (getValueByKey!154 (toList!805 lt!52754) lt!52757)))))

(declare-fun bs!4246 () Bool)

(assert (= bs!4246 d!27877))

(declare-fun m!114891 () Bool)

(assert (=> bs!4246 m!114891))

(assert (=> bs!4246 m!114891))

(declare-fun m!114893 () Bool)

(assert (=> bs!4246 m!114893))

(assert (=> b!103550 d!27877))

(declare-fun d!27879 () Bool)

(assert (=> d!27879 (= (apply!97 (+!143 lt!52751 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52736) (apply!97 lt!52751 lt!52736))))

(declare-fun lt!53001 () Unit!3170)

(assert (=> d!27879 (= lt!53001 (choose!648 lt!52751 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))) lt!52736))))

(declare-fun e!67620 () Bool)

(assert (=> d!27879 e!67620))

(declare-fun res!51803 () Bool)

(assert (=> d!27879 (=> (not res!51803) (not e!67620))))

(assert (=> d!27879 (= res!51803 (contains!825 lt!52751 lt!52736))))

(assert (=> d!27879 (= (addApplyDifferent!73 lt!52751 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))) lt!52736) lt!53001)))

(declare-fun b!103804 () Bool)

(assert (=> b!103804 (= e!67620 (not (= lt!52736 lt!52750)))))

(assert (= (and d!27879 res!51803) b!103804))

(assert (=> d!27879 m!114399))

(assert (=> d!27879 m!114385))

(declare-fun m!114895 () Bool)

(assert (=> d!27879 m!114895))

(declare-fun m!114897 () Bool)

(assert (=> d!27879 m!114897))

(assert (=> d!27879 m!114385))

(assert (=> d!27879 m!114389))

(assert (=> b!103550 d!27879))

(declare-fun d!27881 () Bool)

(declare-fun e!67622 () Bool)

(assert (=> d!27881 e!67622))

(declare-fun res!51804 () Bool)

(assert (=> d!27881 (=> res!51804 e!67622)))

(declare-fun lt!53005 () Bool)

(assert (=> d!27881 (= res!51804 (not lt!53005))))

(declare-fun lt!53003 () Bool)

(assert (=> d!27881 (= lt!53005 lt!53003)))

(declare-fun lt!53002 () Unit!3170)

(declare-fun e!67621 () Unit!3170)

(assert (=> d!27881 (= lt!53002 e!67621)))

(declare-fun c!17901 () Bool)

(assert (=> d!27881 (= c!17901 lt!53003)))

(assert (=> d!27881 (= lt!53003 (containsKey!158 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52752))))

(assert (=> d!27881 (= (contains!825 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52752) lt!53005)))

(declare-fun b!103805 () Bool)

(declare-fun lt!53004 () Unit!3170)

(assert (=> b!103805 (= e!67621 lt!53004)))

(assert (=> b!103805 (= lt!53004 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52752))))

(assert (=> b!103805 (isDefined!108 (getValueByKey!154 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52752))))

(declare-fun b!103806 () Bool)

(declare-fun Unit!3187 () Unit!3170)

(assert (=> b!103806 (= e!67621 Unit!3187)))

(declare-fun b!103807 () Bool)

(assert (=> b!103807 (= e!67622 (isDefined!108 (getValueByKey!154 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52752)))))

(assert (= (and d!27881 c!17901) b!103805))

(assert (= (and d!27881 (not c!17901)) b!103806))

(assert (= (and d!27881 (not res!51804)) b!103807))

(declare-fun m!114899 () Bool)

(assert (=> d!27881 m!114899))

(declare-fun m!114901 () Bool)

(assert (=> b!103805 m!114901))

(declare-fun m!114903 () Bool)

(assert (=> b!103805 m!114903))

(assert (=> b!103805 m!114903))

(declare-fun m!114905 () Bool)

(assert (=> b!103805 m!114905))

(assert (=> b!103807 m!114903))

(assert (=> b!103807 m!114903))

(assert (=> b!103807 m!114905))

(assert (=> b!103550 d!27881))

(declare-fun d!27883 () Bool)

(assert (=> d!27883 (= (apply!97 (+!143 lt!52742 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52739) (get!1336 (getValueByKey!154 (toList!805 (+!143 lt!52742 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52739)))))

(declare-fun bs!4247 () Bool)

(assert (= bs!4247 d!27883))

(declare-fun m!114907 () Bool)

(assert (=> bs!4247 m!114907))

(assert (=> bs!4247 m!114907))

(declare-fun m!114909 () Bool)

(assert (=> bs!4247 m!114909))

(assert (=> b!103550 d!27883))

(declare-fun d!27885 () Bool)

(assert (=> d!27885 (contains!825 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52752)))

(declare-fun lt!53008 () Unit!3170)

(declare-fun choose!649 (ListLongMap!1579 (_ BitVec 64) V!3211 (_ BitVec 64)) Unit!3170)

(assert (=> d!27885 (= lt!53008 (choose!649 lt!52746 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) lt!52752))))

(assert (=> d!27885 (contains!825 lt!52746 lt!52752)))

(assert (=> d!27885 (= (addStillContains!73 lt!52746 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) lt!52752) lt!53008)))

(declare-fun bs!4248 () Bool)

(assert (= bs!4248 d!27885))

(assert (=> bs!4248 m!114381))

(assert (=> bs!4248 m!114381))

(assert (=> bs!4248 m!114383))

(declare-fun m!114911 () Bool)

(assert (=> bs!4248 m!114911))

(declare-fun m!114913 () Bool)

(assert (=> bs!4248 m!114913))

(assert (=> b!103550 d!27885))

(declare-fun d!27887 () Bool)

(assert (=> d!27887 (= (apply!97 lt!52753 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1336 (getValueByKey!154 (toList!805 lt!52753) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4249 () Bool)

(assert (= bs!4249 d!27887))

(declare-fun m!114915 () Bool)

(assert (=> bs!4249 m!114915))

(assert (=> bs!4249 m!114915))

(declare-fun m!114917 () Bool)

(assert (=> bs!4249 m!114917))

(assert (=> b!103533 d!27887))

(declare-fun b!103809 () Bool)

(declare-fun e!67623 () Bool)

(declare-fun e!67626 () Bool)

(assert (=> b!103809 (= e!67623 e!67626)))

(declare-fun c!17902 () Bool)

(assert (=> b!103809 (= c!17902 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!103810 () Bool)

(declare-fun e!67624 () Bool)

(assert (=> b!103810 (= e!67624 (contains!827 (ite c!17825 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635) Nil!1635) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!103811 () Bool)

(declare-fun call!10909 () Bool)

(assert (=> b!103811 (= e!67626 call!10909)))

(declare-fun b!103812 () Bool)

(declare-fun e!67625 () Bool)

(assert (=> b!103812 (= e!67625 e!67623)))

(declare-fun res!51805 () Bool)

(assert (=> b!103812 (=> (not res!51805) (not e!67623))))

(assert (=> b!103812 (= res!51805 (not e!67624))))

(declare-fun res!51806 () Bool)

(assert (=> b!103812 (=> (not res!51806) (not e!67624))))

(assert (=> b!103812 (= res!51806 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!103813 () Bool)

(assert (=> b!103813 (= e!67626 call!10909)))

(declare-fun bm!10906 () Bool)

(assert (=> bm!10906 (= call!10909 (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!17902 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17825 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635) Nil!1635)) (ite c!17825 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635) Nil!1635))))))

(declare-fun d!27889 () Bool)

(declare-fun res!51807 () Bool)

(assert (=> d!27889 (=> res!51807 e!67625)))

(assert (=> d!27889 (= res!51807 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(assert (=> d!27889 (= (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!17825 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635) Nil!1635)) e!67625)))

(assert (= (and d!27889 (not res!51807)) b!103812))

(assert (= (and b!103812 res!51806) b!103810))

(assert (= (and b!103812 res!51805) b!103809))

(assert (= (and b!103809 c!17902) b!103811))

(assert (= (and b!103809 (not c!17902)) b!103813))

(assert (= (or b!103811 b!103813) bm!10906))

(declare-fun m!114919 () Bool)

(assert (=> b!103809 m!114919))

(assert (=> b!103809 m!114919))

(declare-fun m!114921 () Bool)

(assert (=> b!103809 m!114921))

(assert (=> b!103810 m!114919))

(assert (=> b!103810 m!114919))

(declare-fun m!114923 () Bool)

(assert (=> b!103810 m!114923))

(assert (=> b!103812 m!114919))

(assert (=> b!103812 m!114919))

(assert (=> b!103812 m!114921))

(assert (=> bm!10906 m!114919))

(declare-fun m!114925 () Bool)

(assert (=> bm!10906 m!114925))

(assert (=> bm!10854 d!27889))

(declare-fun d!27891 () Bool)

(assert (=> d!27891 (= (map!1279 (_2!1210 lt!52662)) (getCurrentListMap!482 (_keys!4263 (_2!1210 lt!52662)) (_values!2544 (_2!1210 lt!52662)) (mask!6697 (_2!1210 lt!52662)) (extraKeys!2370 (_2!1210 lt!52662)) (zeroValue!2438 (_2!1210 lt!52662)) (minValue!2438 (_2!1210 lt!52662)) #b00000000000000000000000000000000 (defaultEntry!2561 (_2!1210 lt!52662))))))

(declare-fun bs!4250 () Bool)

(assert (= bs!4250 d!27891))

(declare-fun m!114927 () Bool)

(assert (=> bs!4250 m!114927))

(assert (=> bm!10829 d!27891))

(declare-fun d!27893 () Bool)

(declare-fun e!67628 () Bool)

(assert (=> d!27893 e!67628))

(declare-fun res!51808 () Bool)

(assert (=> d!27893 (=> res!51808 e!67628)))

(declare-fun lt!53012 () Bool)

(assert (=> d!27893 (= res!51808 (not lt!53012))))

(declare-fun lt!53010 () Bool)

(assert (=> d!27893 (= lt!53012 lt!53010)))

(declare-fun lt!53009 () Unit!3170)

(declare-fun e!67627 () Unit!3170)

(assert (=> d!27893 (= lt!53009 e!67627)))

(declare-fun c!17903 () Bool)

(assert (=> d!27893 (= c!17903 lt!53010)))

(assert (=> d!27893 (= lt!53010 (containsKey!158 (toList!805 lt!52795) (_1!1211 lt!52551)))))

(assert (=> d!27893 (= (contains!825 lt!52795 (_1!1211 lt!52551)) lt!53012)))

(declare-fun b!103814 () Bool)

(declare-fun lt!53011 () Unit!3170)

(assert (=> b!103814 (= e!67627 lt!53011)))

(assert (=> b!103814 (= lt!53011 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52795) (_1!1211 lt!52551)))))

(assert (=> b!103814 (isDefined!108 (getValueByKey!154 (toList!805 lt!52795) (_1!1211 lt!52551)))))

(declare-fun b!103815 () Bool)

(declare-fun Unit!3188 () Unit!3170)

(assert (=> b!103815 (= e!67627 Unit!3188)))

(declare-fun b!103816 () Bool)

(assert (=> b!103816 (= e!67628 (isDefined!108 (getValueByKey!154 (toList!805 lt!52795) (_1!1211 lt!52551))))))

(assert (= (and d!27893 c!17903) b!103814))

(assert (= (and d!27893 (not c!17903)) b!103815))

(assert (= (and d!27893 (not res!51808)) b!103816))

(declare-fun m!114929 () Bool)

(assert (=> d!27893 m!114929))

(declare-fun m!114931 () Bool)

(assert (=> b!103814 m!114931))

(assert (=> b!103814 m!114485))

(assert (=> b!103814 m!114485))

(declare-fun m!114933 () Bool)

(assert (=> b!103814 m!114933))

(assert (=> b!103816 m!114485))

(assert (=> b!103816 m!114485))

(assert (=> b!103816 m!114933))

(assert (=> d!27801 d!27893))

(declare-fun b!103818 () Bool)

(declare-fun e!67629 () Option!160)

(declare-fun e!67630 () Option!160)

(assert (=> b!103818 (= e!67629 e!67630)))

(declare-fun c!17905 () Bool)

(assert (=> b!103818 (= c!17905 (and ((_ is Cons!1633) lt!52798) (not (= (_1!1211 (h!2229 lt!52798)) (_1!1211 lt!52551)))))))

(declare-fun b!103817 () Bool)

(assert (=> b!103817 (= e!67629 (Some!159 (_2!1211 (h!2229 lt!52798))))))

(declare-fun b!103819 () Bool)

(assert (=> b!103819 (= e!67630 (getValueByKey!154 (t!5711 lt!52798) (_1!1211 lt!52551)))))

(declare-fun d!27895 () Bool)

(declare-fun c!17904 () Bool)

(assert (=> d!27895 (= c!17904 (and ((_ is Cons!1633) lt!52798) (= (_1!1211 (h!2229 lt!52798)) (_1!1211 lt!52551))))))

(assert (=> d!27895 (= (getValueByKey!154 lt!52798 (_1!1211 lt!52551)) e!67629)))

(declare-fun b!103820 () Bool)

(assert (=> b!103820 (= e!67630 None!158)))

(assert (= (and d!27895 c!17904) b!103817))

(assert (= (and d!27895 (not c!17904)) b!103818))

(assert (= (and b!103818 c!17905) b!103819))

(assert (= (and b!103818 (not c!17905)) b!103820))

(declare-fun m!114935 () Bool)

(assert (=> b!103819 m!114935))

(assert (=> d!27801 d!27895))

(declare-fun d!27897 () Bool)

(assert (=> d!27897 (= (getValueByKey!154 lt!52798 (_1!1211 lt!52551)) (Some!159 (_2!1211 lt!52551)))))

(declare-fun lt!53015 () Unit!3170)

(declare-fun choose!650 (List!1637 (_ BitVec 64) V!3211) Unit!3170)

(assert (=> d!27897 (= lt!53015 (choose!650 lt!52798 (_1!1211 lt!52551) (_2!1211 lt!52551)))))

(declare-fun e!67633 () Bool)

(assert (=> d!27897 e!67633))

(declare-fun res!51813 () Bool)

(assert (=> d!27897 (=> (not res!51813) (not e!67633))))

(declare-fun isStrictlySorted!303 (List!1637) Bool)

(assert (=> d!27897 (= res!51813 (isStrictlySorted!303 lt!52798))))

(assert (=> d!27897 (= (lemmaContainsTupThenGetReturnValue!72 lt!52798 (_1!1211 lt!52551) (_2!1211 lt!52551)) lt!53015)))

(declare-fun b!103825 () Bool)

(declare-fun res!51814 () Bool)

(assert (=> b!103825 (=> (not res!51814) (not e!67633))))

(assert (=> b!103825 (= res!51814 (containsKey!158 lt!52798 (_1!1211 lt!52551)))))

(declare-fun b!103826 () Bool)

(assert (=> b!103826 (= e!67633 (contains!828 lt!52798 (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))))))

(assert (= (and d!27897 res!51813) b!103825))

(assert (= (and b!103825 res!51814) b!103826))

(assert (=> d!27897 m!114479))

(declare-fun m!114937 () Bool)

(assert (=> d!27897 m!114937))

(declare-fun m!114939 () Bool)

(assert (=> d!27897 m!114939))

(declare-fun m!114941 () Bool)

(assert (=> b!103825 m!114941))

(declare-fun m!114943 () Bool)

(assert (=> b!103826 m!114943))

(assert (=> d!27801 d!27897))

(declare-fun b!103847 () Bool)

(declare-fun e!67644 () Bool)

(declare-fun lt!53018 () List!1637)

(assert (=> b!103847 (= e!67644 (contains!828 lt!53018 (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))))))

(declare-fun b!103848 () Bool)

(declare-fun e!67648 () List!1637)

(declare-fun call!10918 () List!1637)

(assert (=> b!103848 (= e!67648 call!10918)))

(declare-fun bm!10913 () Bool)

(declare-fun call!10916 () List!1637)

(declare-fun call!10917 () List!1637)

(assert (=> bm!10913 (= call!10916 call!10917)))

(declare-fun b!103849 () Bool)

(assert (=> b!103849 (= e!67648 call!10918)))

(declare-fun b!103850 () Bool)

(declare-fun c!17916 () Bool)

(assert (=> b!103850 (= c!17916 (and ((_ is Cons!1633) (toList!805 lt!52542)) (bvsgt (_1!1211 (h!2229 (toList!805 lt!52542))) (_1!1211 lt!52551))))))

(declare-fun e!67645 () List!1637)

(assert (=> b!103850 (= e!67645 e!67648)))

(declare-fun bm!10914 () Bool)

(assert (=> bm!10914 (= call!10918 call!10916)))

(declare-fun b!103851 () Bool)

(declare-fun e!67647 () List!1637)

(assert (=> b!103851 (= e!67647 (insertStrictlySorted!74 (t!5711 (toList!805 lt!52542)) (_1!1211 lt!52551) (_2!1211 lt!52551)))))

(declare-fun b!103852 () Bool)

(declare-fun res!51820 () Bool)

(assert (=> b!103852 (=> (not res!51820) (not e!67644))))

(assert (=> b!103852 (= res!51820 (containsKey!158 lt!53018 (_1!1211 lt!52551)))))

(declare-fun c!17917 () Bool)

(declare-fun bm!10915 () Bool)

(declare-fun $colon$colon!79 (List!1637 tuple2!2402) List!1637)

(assert (=> bm!10915 (= call!10917 ($colon$colon!79 e!67647 (ite c!17917 (h!2229 (toList!805 lt!52542)) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551)))))))

(declare-fun c!17915 () Bool)

(assert (=> bm!10915 (= c!17915 c!17917)))

(declare-fun d!27899 () Bool)

(assert (=> d!27899 e!67644))

(declare-fun res!51819 () Bool)

(assert (=> d!27899 (=> (not res!51819) (not e!67644))))

(assert (=> d!27899 (= res!51819 (isStrictlySorted!303 lt!53018))))

(declare-fun e!67646 () List!1637)

(assert (=> d!27899 (= lt!53018 e!67646)))

(assert (=> d!27899 (= c!17917 (and ((_ is Cons!1633) (toList!805 lt!52542)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52542))) (_1!1211 lt!52551))))))

(assert (=> d!27899 (isStrictlySorted!303 (toList!805 lt!52542))))

(assert (=> d!27899 (= (insertStrictlySorted!74 (toList!805 lt!52542) (_1!1211 lt!52551) (_2!1211 lt!52551)) lt!53018)))

(declare-fun b!103853 () Bool)

(assert (=> b!103853 (= e!67646 e!67645)))

(declare-fun c!17914 () Bool)

(assert (=> b!103853 (= c!17914 (and ((_ is Cons!1633) (toList!805 lt!52542)) (= (_1!1211 (h!2229 (toList!805 lt!52542))) (_1!1211 lt!52551))))))

(declare-fun b!103854 () Bool)

(assert (=> b!103854 (= e!67645 call!10916)))

(declare-fun b!103855 () Bool)

(assert (=> b!103855 (= e!67646 call!10917)))

(declare-fun b!103856 () Bool)

(assert (=> b!103856 (= e!67647 (ite c!17914 (t!5711 (toList!805 lt!52542)) (ite c!17916 (Cons!1633 (h!2229 (toList!805 lt!52542)) (t!5711 (toList!805 lt!52542))) Nil!1634)))))

(assert (= (and d!27899 c!17917) b!103855))

(assert (= (and d!27899 (not c!17917)) b!103853))

(assert (= (and b!103853 c!17914) b!103854))

(assert (= (and b!103853 (not c!17914)) b!103850))

(assert (= (and b!103850 c!17916) b!103849))

(assert (= (and b!103850 (not c!17916)) b!103848))

(assert (= (or b!103849 b!103848) bm!10914))

(assert (= (or b!103854 bm!10914) bm!10913))

(assert (= (or b!103855 bm!10913) bm!10915))

(assert (= (and bm!10915 c!17915) b!103851))

(assert (= (and bm!10915 (not c!17915)) b!103856))

(assert (= (and d!27899 res!51819) b!103852))

(assert (= (and b!103852 res!51820) b!103847))

(declare-fun m!114945 () Bool)

(assert (=> b!103852 m!114945))

(declare-fun m!114947 () Bool)

(assert (=> bm!10915 m!114947))

(declare-fun m!114949 () Bool)

(assert (=> d!27899 m!114949))

(declare-fun m!114951 () Bool)

(assert (=> d!27899 m!114951))

(declare-fun m!114953 () Bool)

(assert (=> b!103847 m!114953))

(declare-fun m!114955 () Bool)

(assert (=> b!103851 m!114955))

(assert (=> d!27801 d!27899))

(declare-fun d!27901 () Bool)

(assert (=> d!27901 (= (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (and (not (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103488 d!27901))

(declare-fun d!27903 () Bool)

(declare-fun e!67650 () Bool)

(assert (=> d!27903 e!67650))

(declare-fun res!51821 () Bool)

(assert (=> d!27903 (=> res!51821 e!67650)))

(declare-fun lt!53022 () Bool)

(assert (=> d!27903 (= res!51821 (not lt!53022))))

(declare-fun lt!53020 () Bool)

(assert (=> d!27903 (= lt!53022 lt!53020)))

(declare-fun lt!53019 () Unit!3170)

(declare-fun e!67649 () Unit!3170)

(assert (=> d!27903 (= lt!53019 e!67649)))

(declare-fun c!17918 () Bool)

(assert (=> d!27903 (= c!17918 lt!53020)))

(assert (=> d!27903 (= lt!53020 (containsKey!158 (toList!805 lt!52799) (_1!1211 lt!52551)))))

(assert (=> d!27903 (= (contains!825 lt!52799 (_1!1211 lt!52551)) lt!53022)))

(declare-fun b!103857 () Bool)

(declare-fun lt!53021 () Unit!3170)

(assert (=> b!103857 (= e!67649 lt!53021)))

(assert (=> b!103857 (= lt!53021 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52799) (_1!1211 lt!52551)))))

(assert (=> b!103857 (isDefined!108 (getValueByKey!154 (toList!805 lt!52799) (_1!1211 lt!52551)))))

(declare-fun b!103858 () Bool)

(declare-fun Unit!3189 () Unit!3170)

(assert (=> b!103858 (= e!67649 Unit!3189)))

(declare-fun b!103859 () Bool)

(assert (=> b!103859 (= e!67650 (isDefined!108 (getValueByKey!154 (toList!805 lt!52799) (_1!1211 lt!52551))))))

(assert (= (and d!27903 c!17918) b!103857))

(assert (= (and d!27903 (not c!17918)) b!103858))

(assert (= (and d!27903 (not res!51821)) b!103859))

(declare-fun m!114957 () Bool)

(assert (=> d!27903 m!114957))

(declare-fun m!114959 () Bool)

(assert (=> b!103857 m!114959))

(assert (=> b!103857 m!114497))

(assert (=> b!103857 m!114497))

(declare-fun m!114961 () Bool)

(assert (=> b!103857 m!114961))

(assert (=> b!103859 m!114497))

(assert (=> b!103859 m!114497))

(assert (=> b!103859 m!114961))

(assert (=> d!27803 d!27903))

(declare-fun b!103861 () Bool)

(declare-fun e!67651 () Option!160)

(declare-fun e!67652 () Option!160)

(assert (=> b!103861 (= e!67651 e!67652)))

(declare-fun c!17920 () Bool)

(assert (=> b!103861 (= c!17920 (and ((_ is Cons!1633) lt!52802) (not (= (_1!1211 (h!2229 lt!52802)) (_1!1211 lt!52551)))))))

(declare-fun b!103860 () Bool)

(assert (=> b!103860 (= e!67651 (Some!159 (_2!1211 (h!2229 lt!52802))))))

(declare-fun b!103862 () Bool)

(assert (=> b!103862 (= e!67652 (getValueByKey!154 (t!5711 lt!52802) (_1!1211 lt!52551)))))

(declare-fun d!27905 () Bool)

(declare-fun c!17919 () Bool)

(assert (=> d!27905 (= c!17919 (and ((_ is Cons!1633) lt!52802) (= (_1!1211 (h!2229 lt!52802)) (_1!1211 lt!52551))))))

(assert (=> d!27905 (= (getValueByKey!154 lt!52802 (_1!1211 lt!52551)) e!67651)))

(declare-fun b!103863 () Bool)

(assert (=> b!103863 (= e!67652 None!158)))

(assert (= (and d!27905 c!17919) b!103860))

(assert (= (and d!27905 (not c!17919)) b!103861))

(assert (= (and b!103861 c!17920) b!103862))

(assert (= (and b!103861 (not c!17920)) b!103863))

(declare-fun m!114963 () Bool)

(assert (=> b!103862 m!114963))

(assert (=> d!27803 d!27905))

(declare-fun d!27907 () Bool)

(assert (=> d!27907 (= (getValueByKey!154 lt!52802 (_1!1211 lt!52551)) (Some!159 (_2!1211 lt!52551)))))

(declare-fun lt!53023 () Unit!3170)

(assert (=> d!27907 (= lt!53023 (choose!650 lt!52802 (_1!1211 lt!52551) (_2!1211 lt!52551)))))

(declare-fun e!67653 () Bool)

(assert (=> d!27907 e!67653))

(declare-fun res!51822 () Bool)

(assert (=> d!27907 (=> (not res!51822) (not e!67653))))

(assert (=> d!27907 (= res!51822 (isStrictlySorted!303 lt!52802))))

(assert (=> d!27907 (= (lemmaContainsTupThenGetReturnValue!72 lt!52802 (_1!1211 lt!52551) (_2!1211 lt!52551)) lt!53023)))

(declare-fun b!103864 () Bool)

(declare-fun res!51823 () Bool)

(assert (=> b!103864 (=> (not res!51823) (not e!67653))))

(assert (=> b!103864 (= res!51823 (containsKey!158 lt!52802 (_1!1211 lt!52551)))))

(declare-fun b!103865 () Bool)

(assert (=> b!103865 (= e!67653 (contains!828 lt!52802 (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))))))

(assert (= (and d!27907 res!51822) b!103864))

(assert (= (and b!103864 res!51823) b!103865))

(assert (=> d!27907 m!114491))

(declare-fun m!114965 () Bool)

(assert (=> d!27907 m!114965))

(declare-fun m!114967 () Bool)

(assert (=> d!27907 m!114967))

(declare-fun m!114969 () Bool)

(assert (=> b!103864 m!114969))

(declare-fun m!114971 () Bool)

(assert (=> b!103865 m!114971))

(assert (=> d!27803 d!27907))

(declare-fun b!103866 () Bool)

(declare-fun e!67654 () Bool)

(declare-fun lt!53024 () List!1637)

(assert (=> b!103866 (= e!67654 (contains!828 lt!53024 (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))))))

(declare-fun b!103867 () Bool)

(declare-fun e!67658 () List!1637)

(declare-fun call!10921 () List!1637)

(assert (=> b!103867 (= e!67658 call!10921)))

(declare-fun bm!10916 () Bool)

(declare-fun call!10919 () List!1637)

(declare-fun call!10920 () List!1637)

(assert (=> bm!10916 (= call!10919 call!10920)))

(declare-fun b!103868 () Bool)

(assert (=> b!103868 (= e!67658 call!10921)))

(declare-fun c!17923 () Bool)

(declare-fun b!103869 () Bool)

(assert (=> b!103869 (= c!17923 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52542 lt!52547))) (bvsgt (_1!1211 (h!2229 (toList!805 (+!143 lt!52542 lt!52547)))) (_1!1211 lt!52551))))))

(declare-fun e!67655 () List!1637)

(assert (=> b!103869 (= e!67655 e!67658)))

(declare-fun bm!10917 () Bool)

(assert (=> bm!10917 (= call!10921 call!10919)))

(declare-fun e!67657 () List!1637)

(declare-fun b!103870 () Bool)

(assert (=> b!103870 (= e!67657 (insertStrictlySorted!74 (t!5711 (toList!805 (+!143 lt!52542 lt!52547))) (_1!1211 lt!52551) (_2!1211 lt!52551)))))

(declare-fun b!103871 () Bool)

(declare-fun res!51825 () Bool)

(assert (=> b!103871 (=> (not res!51825) (not e!67654))))

(assert (=> b!103871 (= res!51825 (containsKey!158 lt!53024 (_1!1211 lt!52551)))))

(declare-fun bm!10918 () Bool)

(declare-fun c!17924 () Bool)

(assert (=> bm!10918 (= call!10920 ($colon$colon!79 e!67657 (ite c!17924 (h!2229 (toList!805 (+!143 lt!52542 lt!52547))) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551)))))))

(declare-fun c!17922 () Bool)

(assert (=> bm!10918 (= c!17922 c!17924)))

(declare-fun d!27909 () Bool)

(assert (=> d!27909 e!67654))

(declare-fun res!51824 () Bool)

(assert (=> d!27909 (=> (not res!51824) (not e!67654))))

(assert (=> d!27909 (= res!51824 (isStrictlySorted!303 lt!53024))))

(declare-fun e!67656 () List!1637)

(assert (=> d!27909 (= lt!53024 e!67656)))

(assert (=> d!27909 (= c!17924 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52542 lt!52547))) (bvslt (_1!1211 (h!2229 (toList!805 (+!143 lt!52542 lt!52547)))) (_1!1211 lt!52551))))))

(assert (=> d!27909 (isStrictlySorted!303 (toList!805 (+!143 lt!52542 lt!52547)))))

(assert (=> d!27909 (= (insertStrictlySorted!74 (toList!805 (+!143 lt!52542 lt!52547)) (_1!1211 lt!52551) (_2!1211 lt!52551)) lt!53024)))

(declare-fun b!103872 () Bool)

(assert (=> b!103872 (= e!67656 e!67655)))

(declare-fun c!17921 () Bool)

(assert (=> b!103872 (= c!17921 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52542 lt!52547))) (= (_1!1211 (h!2229 (toList!805 (+!143 lt!52542 lt!52547)))) (_1!1211 lt!52551))))))

(declare-fun b!103873 () Bool)

(assert (=> b!103873 (= e!67655 call!10919)))

(declare-fun b!103874 () Bool)

(assert (=> b!103874 (= e!67656 call!10920)))

(declare-fun b!103875 () Bool)

(assert (=> b!103875 (= e!67657 (ite c!17921 (t!5711 (toList!805 (+!143 lt!52542 lt!52547))) (ite c!17923 (Cons!1633 (h!2229 (toList!805 (+!143 lt!52542 lt!52547))) (t!5711 (toList!805 (+!143 lt!52542 lt!52547)))) Nil!1634)))))

(assert (= (and d!27909 c!17924) b!103874))

(assert (= (and d!27909 (not c!17924)) b!103872))

(assert (= (and b!103872 c!17921) b!103873))

(assert (= (and b!103872 (not c!17921)) b!103869))

(assert (= (and b!103869 c!17923) b!103868))

(assert (= (and b!103869 (not c!17923)) b!103867))

(assert (= (or b!103868 b!103867) bm!10917))

(assert (= (or b!103873 bm!10917) bm!10916))

(assert (= (or b!103874 bm!10916) bm!10918))

(assert (= (and bm!10918 c!17922) b!103870))

(assert (= (and bm!10918 (not c!17922)) b!103875))

(assert (= (and d!27909 res!51824) b!103871))

(assert (= (and b!103871 res!51825) b!103866))

(declare-fun m!114973 () Bool)

(assert (=> b!103871 m!114973))

(declare-fun m!114975 () Bool)

(assert (=> bm!10918 m!114975))

(declare-fun m!114977 () Bool)

(assert (=> d!27909 m!114977))

(declare-fun m!114979 () Bool)

(assert (=> d!27909 m!114979))

(declare-fun m!114981 () Bool)

(assert (=> b!103866 m!114981))

(declare-fun m!114983 () Bool)

(assert (=> b!103870 m!114983))

(assert (=> d!27803 d!27909))

(declare-fun b!103877 () Bool)

(declare-fun e!67659 () Option!160)

(declare-fun e!67660 () Option!160)

(assert (=> b!103877 (= e!67659 e!67660)))

(declare-fun c!17926 () Bool)

(assert (=> b!103877 (= c!17926 (and ((_ is Cons!1633) (toList!805 lt!52766)) (not (= (_1!1211 (h!2229 (toList!805 lt!52766))) (_1!1211 lt!52547)))))))

(declare-fun b!103876 () Bool)

(assert (=> b!103876 (= e!67659 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52766)))))))

(declare-fun b!103878 () Bool)

(assert (=> b!103878 (= e!67660 (getValueByKey!154 (t!5711 (toList!805 lt!52766)) (_1!1211 lt!52547)))))

(declare-fun d!27911 () Bool)

(declare-fun c!17925 () Bool)

(assert (=> d!27911 (= c!17925 (and ((_ is Cons!1633) (toList!805 lt!52766)) (= (_1!1211 (h!2229 (toList!805 lt!52766))) (_1!1211 lt!52547))))))

(assert (=> d!27911 (= (getValueByKey!154 (toList!805 lt!52766) (_1!1211 lt!52547)) e!67659)))

(declare-fun b!103879 () Bool)

(assert (=> b!103879 (= e!67660 None!158)))

(assert (= (and d!27911 c!17925) b!103876))

(assert (= (and d!27911 (not c!17925)) b!103877))

(assert (= (and b!103877 c!17926) b!103878))

(assert (= (and b!103877 (not c!17926)) b!103879))

(declare-fun m!114985 () Bool)

(assert (=> b!103878 m!114985))

(assert (=> b!103572 d!27911))

(declare-fun d!27913 () Bool)

(declare-fun e!67662 () Bool)

(assert (=> d!27913 e!67662))

(declare-fun res!51826 () Bool)

(assert (=> d!27913 (=> res!51826 e!67662)))

(declare-fun lt!53028 () Bool)

(assert (=> d!27913 (= res!51826 (not lt!53028))))

(declare-fun lt!53026 () Bool)

(assert (=> d!27913 (= lt!53028 lt!53026)))

(declare-fun lt!53025 () Unit!3170)

(declare-fun e!67661 () Unit!3170)

(assert (=> d!27913 (= lt!53025 e!67661)))

(declare-fun c!17927 () Bool)

(assert (=> d!27913 (= c!17927 lt!53026)))

(assert (=> d!27913 (= lt!53026 (containsKey!158 (toList!805 lt!52789) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!27913 (= (contains!825 lt!52789 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!53028)))

(declare-fun b!103880 () Bool)

(declare-fun lt!53027 () Unit!3170)

(assert (=> b!103880 (= e!67661 lt!53027)))

(assert (=> b!103880 (= lt!53027 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52789) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103880 (isDefined!108 (getValueByKey!154 (toList!805 lt!52789) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103881 () Bool)

(declare-fun Unit!3190 () Unit!3170)

(assert (=> b!103881 (= e!67661 Unit!3190)))

(declare-fun b!103882 () Bool)

(assert (=> b!103882 (= e!67662 (isDefined!108 (getValueByKey!154 (toList!805 lt!52789) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!27913 c!17927) b!103880))

(assert (= (and d!27913 (not c!17927)) b!103881))

(assert (= (and d!27913 (not res!51826)) b!103882))

(assert (=> d!27913 m!114355))

(declare-fun m!114987 () Bool)

(assert (=> d!27913 m!114987))

(assert (=> b!103880 m!114355))

(declare-fun m!114989 () Bool)

(assert (=> b!103880 m!114989))

(assert (=> b!103880 m!114355))

(declare-fun m!114991 () Bool)

(assert (=> b!103880 m!114991))

(assert (=> b!103880 m!114991))

(declare-fun m!114993 () Bool)

(assert (=> b!103880 m!114993))

(assert (=> b!103882 m!114355))

(assert (=> b!103882 m!114991))

(assert (=> b!103882 m!114991))

(assert (=> b!103882 m!114993))

(assert (=> b!103602 d!27913))

(declare-fun d!27915 () Bool)

(assert (=> d!27915 (= (apply!97 lt!52753 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1336 (getValueByKey!154 (toList!805 lt!52753) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4251 () Bool)

(assert (= bs!4251 d!27915))

(assert (=> bs!4251 m!114355))

(assert (=> bs!4251 m!114667))

(assert (=> bs!4251 m!114667))

(declare-fun m!114995 () Bool)

(assert (=> bs!4251 m!114995))

(assert (=> b!103549 d!27915))

(declare-fun d!27917 () Bool)

(declare-fun c!17928 () Bool)

(assert (=> d!27917 (= c!17928 ((_ is ValueCellFull!993) (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!67663 () V!3211)

(assert (=> d!27917 (= (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!67663)))

(declare-fun b!103883 () Bool)

(assert (=> b!103883 (= e!67663 (get!1334 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!103884 () Bool)

(assert (=> b!103884 (= e!67663 (get!1335 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27917 c!17928) b!103883))

(assert (= (and d!27917 (not c!17928)) b!103884))

(assert (=> b!103883 m!114407))

(assert (=> b!103883 m!114209))

(declare-fun m!114997 () Bool)

(assert (=> b!103883 m!114997))

(assert (=> b!103884 m!114407))

(assert (=> b!103884 m!114209))

(declare-fun m!114999 () Bool)

(assert (=> b!103884 m!114999))

(assert (=> b!103549 d!27917))

(assert (=> bm!10874 d!27797))

(declare-fun d!27919 () Bool)

(declare-fun e!67665 () Bool)

(assert (=> d!27919 e!67665))

(declare-fun res!51827 () Bool)

(assert (=> d!27919 (=> res!51827 e!67665)))

(declare-fun lt!53032 () Bool)

(assert (=> d!27919 (= res!51827 (not lt!53032))))

(declare-fun lt!53030 () Bool)

(assert (=> d!27919 (= lt!53032 lt!53030)))

(declare-fun lt!53029 () Unit!3170)

(declare-fun e!67664 () Unit!3170)

(assert (=> d!27919 (= lt!53029 e!67664)))

(declare-fun c!17929 () Bool)

(assert (=> d!27919 (= c!17929 lt!53030)))

(assert (=> d!27919 (= lt!53030 (containsKey!158 (toList!805 lt!52753) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27919 (= (contains!825 lt!52753 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53032)))

(declare-fun b!103885 () Bool)

(declare-fun lt!53031 () Unit!3170)

(assert (=> b!103885 (= e!67664 lt!53031)))

(assert (=> b!103885 (= lt!53031 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52753) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103885 (isDefined!108 (getValueByKey!154 (toList!805 lt!52753) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103886 () Bool)

(declare-fun Unit!3191 () Unit!3170)

(assert (=> b!103886 (= e!67664 Unit!3191)))

(declare-fun b!103887 () Bool)

(assert (=> b!103887 (= e!67665 (isDefined!108 (getValueByKey!154 (toList!805 lt!52753) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27919 c!17929) b!103885))

(assert (= (and d!27919 (not c!17929)) b!103886))

(assert (= (and d!27919 (not res!51827)) b!103887))

(declare-fun m!115001 () Bool)

(assert (=> d!27919 m!115001))

(declare-fun m!115003 () Bool)

(assert (=> b!103885 m!115003))

(assert (=> b!103885 m!114915))

(assert (=> b!103885 m!114915))

(declare-fun m!115005 () Bool)

(assert (=> b!103885 m!115005))

(assert (=> b!103887 m!114915))

(assert (=> b!103887 m!114915))

(assert (=> b!103887 m!115005))

(assert (=> bm!10869 d!27919))

(declare-fun d!27921 () Bool)

(declare-fun lt!53035 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!106 (List!1638) (InoxSet (_ BitVec 64)))

(assert (=> d!27921 (= lt!53035 (select (content!106 Nil!1635) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun e!67670 () Bool)

(assert (=> d!27921 (= lt!53035 e!67670)))

(declare-fun res!51832 () Bool)

(assert (=> d!27921 (=> (not res!51832) (not e!67670))))

(assert (=> d!27921 (= res!51832 ((_ is Cons!1634) Nil!1635))))

(assert (=> d!27921 (= (contains!827 Nil!1635 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) lt!53035)))

(declare-fun b!103892 () Bool)

(declare-fun e!67671 () Bool)

(assert (=> b!103892 (= e!67670 e!67671)))

(declare-fun res!51833 () Bool)

(assert (=> b!103892 (=> res!51833 e!67671)))

(assert (=> b!103892 (= res!51833 (= (h!2230 Nil!1635) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun b!103893 () Bool)

(assert (=> b!103893 (= e!67671 (contains!827 (t!5712 Nil!1635) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (= (and d!27921 res!51832) b!103892))

(assert (= (and b!103892 (not res!51833)) b!103893))

(declare-fun m!115007 () Bool)

(assert (=> d!27921 m!115007))

(assert (=> d!27921 m!114187))

(declare-fun m!115009 () Bool)

(assert (=> d!27921 m!115009))

(assert (=> b!103893 m!114187))

(declare-fun m!115011 () Bool)

(assert (=> b!103893 m!115011))

(assert (=> b!103486 d!27921))

(declare-fun d!27923 () Bool)

(declare-fun e!67673 () Bool)

(assert (=> d!27923 e!67673))

(declare-fun res!51834 () Bool)

(assert (=> d!27923 (=> res!51834 e!67673)))

(declare-fun lt!53039 () Bool)

(assert (=> d!27923 (= res!51834 (not lt!53039))))

(declare-fun lt!53037 () Bool)

(assert (=> d!27923 (= lt!53039 lt!53037)))

(declare-fun lt!53036 () Unit!3170)

(declare-fun e!67672 () Unit!3170)

(assert (=> d!27923 (= lt!53036 e!67672)))

(declare-fun c!17930 () Bool)

(assert (=> d!27923 (= c!17930 lt!53037)))

(assert (=> d!27923 (= lt!53037 (containsKey!158 (toList!805 lt!52791) (_1!1211 lt!52547)))))

(assert (=> d!27923 (= (contains!825 lt!52791 (_1!1211 lt!52547)) lt!53039)))

(declare-fun b!103894 () Bool)

(declare-fun lt!53038 () Unit!3170)

(assert (=> b!103894 (= e!67672 lt!53038)))

(assert (=> b!103894 (= lt!53038 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52791) (_1!1211 lt!52547)))))

(assert (=> b!103894 (isDefined!108 (getValueByKey!154 (toList!805 lt!52791) (_1!1211 lt!52547)))))

(declare-fun b!103895 () Bool)

(declare-fun Unit!3192 () Unit!3170)

(assert (=> b!103895 (= e!67672 Unit!3192)))

(declare-fun b!103896 () Bool)

(assert (=> b!103896 (= e!67673 (isDefined!108 (getValueByKey!154 (toList!805 lt!52791) (_1!1211 lt!52547))))))

(assert (= (and d!27923 c!17930) b!103894))

(assert (= (and d!27923 (not c!17930)) b!103895))

(assert (= (and d!27923 (not res!51834)) b!103896))

(declare-fun m!115013 () Bool)

(assert (=> d!27923 m!115013))

(declare-fun m!115015 () Bool)

(assert (=> b!103894 m!115015))

(assert (=> b!103894 m!114473))

(assert (=> b!103894 m!114473))

(declare-fun m!115017 () Bool)

(assert (=> b!103894 m!115017))

(assert (=> b!103896 m!114473))

(assert (=> b!103896 m!114473))

(assert (=> b!103896 m!115017))

(assert (=> d!27799 d!27923))

(declare-fun b!103898 () Bool)

(declare-fun e!67674 () Option!160)

(declare-fun e!67675 () Option!160)

(assert (=> b!103898 (= e!67674 e!67675)))

(declare-fun c!17932 () Bool)

(assert (=> b!103898 (= c!17932 (and ((_ is Cons!1633) lt!52794) (not (= (_1!1211 (h!2229 lt!52794)) (_1!1211 lt!52547)))))))

(declare-fun b!103897 () Bool)

(assert (=> b!103897 (= e!67674 (Some!159 (_2!1211 (h!2229 lt!52794))))))

(declare-fun b!103899 () Bool)

(assert (=> b!103899 (= e!67675 (getValueByKey!154 (t!5711 lt!52794) (_1!1211 lt!52547)))))

(declare-fun d!27925 () Bool)

(declare-fun c!17931 () Bool)

(assert (=> d!27925 (= c!17931 (and ((_ is Cons!1633) lt!52794) (= (_1!1211 (h!2229 lt!52794)) (_1!1211 lt!52547))))))

(assert (=> d!27925 (= (getValueByKey!154 lt!52794 (_1!1211 lt!52547)) e!67674)))

(declare-fun b!103900 () Bool)

(assert (=> b!103900 (= e!67675 None!158)))

(assert (= (and d!27925 c!17931) b!103897))

(assert (= (and d!27925 (not c!17931)) b!103898))

(assert (= (and b!103898 c!17932) b!103899))

(assert (= (and b!103898 (not c!17932)) b!103900))

(declare-fun m!115019 () Bool)

(assert (=> b!103899 m!115019))

(assert (=> d!27799 d!27925))

(declare-fun d!27927 () Bool)

(assert (=> d!27927 (= (getValueByKey!154 lt!52794 (_1!1211 lt!52547)) (Some!159 (_2!1211 lt!52547)))))

(declare-fun lt!53040 () Unit!3170)

(assert (=> d!27927 (= lt!53040 (choose!650 lt!52794 (_1!1211 lt!52547) (_2!1211 lt!52547)))))

(declare-fun e!67676 () Bool)

(assert (=> d!27927 e!67676))

(declare-fun res!51835 () Bool)

(assert (=> d!27927 (=> (not res!51835) (not e!67676))))

(assert (=> d!27927 (= res!51835 (isStrictlySorted!303 lt!52794))))

(assert (=> d!27927 (= (lemmaContainsTupThenGetReturnValue!72 lt!52794 (_1!1211 lt!52547) (_2!1211 lt!52547)) lt!53040)))

(declare-fun b!103901 () Bool)

(declare-fun res!51836 () Bool)

(assert (=> b!103901 (=> (not res!51836) (not e!67676))))

(assert (=> b!103901 (= res!51836 (containsKey!158 lt!52794 (_1!1211 lt!52547)))))

(declare-fun b!103902 () Bool)

(assert (=> b!103902 (= e!67676 (contains!828 lt!52794 (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))))))

(assert (= (and d!27927 res!51835) b!103901))

(assert (= (and b!103901 res!51836) b!103902))

(assert (=> d!27927 m!114467))

(declare-fun m!115021 () Bool)

(assert (=> d!27927 m!115021))

(declare-fun m!115023 () Bool)

(assert (=> d!27927 m!115023))

(declare-fun m!115025 () Bool)

(assert (=> b!103901 m!115025))

(declare-fun m!115027 () Bool)

(assert (=> b!103902 m!115027))

(assert (=> d!27799 d!27927))

(declare-fun b!103903 () Bool)

(declare-fun e!67677 () Bool)

(declare-fun lt!53041 () List!1637)

(assert (=> b!103903 (= e!67677 (contains!828 lt!53041 (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))))))

(declare-fun b!103904 () Bool)

(declare-fun e!67681 () List!1637)

(declare-fun call!10924 () List!1637)

(assert (=> b!103904 (= e!67681 call!10924)))

(declare-fun bm!10919 () Bool)

(declare-fun call!10922 () List!1637)

(declare-fun call!10923 () List!1637)

(assert (=> bm!10919 (= call!10922 call!10923)))

(declare-fun b!103905 () Bool)

(assert (=> b!103905 (= e!67681 call!10924)))

(declare-fun b!103906 () Bool)

(declare-fun c!17935 () Bool)

(assert (=> b!103906 (= c!17935 (and ((_ is Cons!1633) (toList!805 lt!52542)) (bvsgt (_1!1211 (h!2229 (toList!805 lt!52542))) (_1!1211 lt!52547))))))

(declare-fun e!67678 () List!1637)

(assert (=> b!103906 (= e!67678 e!67681)))

(declare-fun bm!10920 () Bool)

(assert (=> bm!10920 (= call!10924 call!10922)))

(declare-fun b!103907 () Bool)

(declare-fun e!67680 () List!1637)

(assert (=> b!103907 (= e!67680 (insertStrictlySorted!74 (t!5711 (toList!805 lt!52542)) (_1!1211 lt!52547) (_2!1211 lt!52547)))))

(declare-fun b!103908 () Bool)

(declare-fun res!51838 () Bool)

(assert (=> b!103908 (=> (not res!51838) (not e!67677))))

(assert (=> b!103908 (= res!51838 (containsKey!158 lt!53041 (_1!1211 lt!52547)))))

(declare-fun c!17936 () Bool)

(declare-fun bm!10921 () Bool)

(assert (=> bm!10921 (= call!10923 ($colon$colon!79 e!67680 (ite c!17936 (h!2229 (toList!805 lt!52542)) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547)))))))

(declare-fun c!17934 () Bool)

(assert (=> bm!10921 (= c!17934 c!17936)))

(declare-fun d!27929 () Bool)

(assert (=> d!27929 e!67677))

(declare-fun res!51837 () Bool)

(assert (=> d!27929 (=> (not res!51837) (not e!67677))))

(assert (=> d!27929 (= res!51837 (isStrictlySorted!303 lt!53041))))

(declare-fun e!67679 () List!1637)

(assert (=> d!27929 (= lt!53041 e!67679)))

(assert (=> d!27929 (= c!17936 (and ((_ is Cons!1633) (toList!805 lt!52542)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52542))) (_1!1211 lt!52547))))))

(assert (=> d!27929 (isStrictlySorted!303 (toList!805 lt!52542))))

(assert (=> d!27929 (= (insertStrictlySorted!74 (toList!805 lt!52542) (_1!1211 lt!52547) (_2!1211 lt!52547)) lt!53041)))

(declare-fun b!103909 () Bool)

(assert (=> b!103909 (= e!67679 e!67678)))

(declare-fun c!17933 () Bool)

(assert (=> b!103909 (= c!17933 (and ((_ is Cons!1633) (toList!805 lt!52542)) (= (_1!1211 (h!2229 (toList!805 lt!52542))) (_1!1211 lt!52547))))))

(declare-fun b!103910 () Bool)

(assert (=> b!103910 (= e!67678 call!10922)))

(declare-fun b!103911 () Bool)

(assert (=> b!103911 (= e!67679 call!10923)))

(declare-fun b!103912 () Bool)

(assert (=> b!103912 (= e!67680 (ite c!17933 (t!5711 (toList!805 lt!52542)) (ite c!17935 (Cons!1633 (h!2229 (toList!805 lt!52542)) (t!5711 (toList!805 lt!52542))) Nil!1634)))))

(assert (= (and d!27929 c!17936) b!103911))

(assert (= (and d!27929 (not c!17936)) b!103909))

(assert (= (and b!103909 c!17933) b!103910))

(assert (= (and b!103909 (not c!17933)) b!103906))

(assert (= (and b!103906 c!17935) b!103905))

(assert (= (and b!103906 (not c!17935)) b!103904))

(assert (= (or b!103905 b!103904) bm!10920))

(assert (= (or b!103910 bm!10920) bm!10919))

(assert (= (or b!103911 bm!10919) bm!10921))

(assert (= (and bm!10921 c!17934) b!103907))

(assert (= (and bm!10921 (not c!17934)) b!103912))

(assert (= (and d!27929 res!51837) b!103908))

(assert (= (and b!103908 res!51838) b!103903))

(declare-fun m!115029 () Bool)

(assert (=> b!103908 m!115029))

(declare-fun m!115031 () Bool)

(assert (=> bm!10921 m!115031))

(declare-fun m!115033 () Bool)

(assert (=> d!27929 m!115033))

(assert (=> d!27929 m!114951))

(declare-fun m!115035 () Bool)

(assert (=> b!103903 m!115035))

(declare-fun m!115037 () Bool)

(assert (=> b!103907 m!115037))

(assert (=> d!27799 d!27929))

(declare-fun d!27931 () Bool)

(declare-fun isEmpty!373 (List!1637) Bool)

(assert (=> d!27931 (= (isEmpty!372 lt!52789) (isEmpty!373 (toList!805 lt!52789)))))

(declare-fun bs!4252 () Bool)

(assert (= bs!4252 d!27931))

(declare-fun m!115039 () Bool)

(assert (=> bs!4252 m!115039))

(assert (=> b!103600 d!27931))

(declare-fun d!27933 () Bool)

(declare-fun e!67683 () Bool)

(assert (=> d!27933 e!67683))

(declare-fun res!51839 () Bool)

(assert (=> d!27933 (=> res!51839 e!67683)))

(declare-fun lt!53045 () Bool)

(assert (=> d!27933 (= res!51839 (not lt!53045))))

(declare-fun lt!53043 () Bool)

(assert (=> d!27933 (= lt!53045 lt!53043)))

(declare-fun lt!53042 () Unit!3170)

(declare-fun e!67682 () Unit!3170)

(assert (=> d!27933 (= lt!53042 e!67682)))

(declare-fun c!17937 () Bool)

(assert (=> d!27933 (= c!17937 lt!53043)))

(assert (=> d!27933 (= lt!53043 (containsKey!158 (toList!805 lt!52789) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27933 (= (contains!825 lt!52789 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53045)))

(declare-fun b!103913 () Bool)

(declare-fun lt!53044 () Unit!3170)

(assert (=> b!103913 (= e!67682 lt!53044)))

(assert (=> b!103913 (= lt!53044 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52789) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103913 (isDefined!108 (getValueByKey!154 (toList!805 lt!52789) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103914 () Bool)

(declare-fun Unit!3193 () Unit!3170)

(assert (=> b!103914 (= e!67682 Unit!3193)))

(declare-fun b!103915 () Bool)

(assert (=> b!103915 (= e!67683 (isDefined!108 (getValueByKey!154 (toList!805 lt!52789) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27933 c!17937) b!103913))

(assert (= (and d!27933 (not c!17937)) b!103914))

(assert (= (and d!27933 (not res!51839)) b!103915))

(declare-fun m!115041 () Bool)

(assert (=> d!27933 m!115041))

(declare-fun m!115043 () Bool)

(assert (=> b!103913 m!115043))

(declare-fun m!115045 () Bool)

(assert (=> b!103913 m!115045))

(assert (=> b!103913 m!115045))

(declare-fun m!115047 () Bool)

(assert (=> b!103913 m!115047))

(assert (=> b!103915 m!115045))

(assert (=> b!103915 m!115045))

(assert (=> b!103915 m!115047))

(assert (=> d!27797 d!27933))

(assert (=> d!27797 d!27807))

(declare-fun b!103916 () Bool)

(declare-fun e!67684 () Bool)

(declare-fun e!67687 () Bool)

(assert (=> b!103916 (= e!67684 e!67687)))

(declare-fun c!17938 () Bool)

(assert (=> b!103916 (= c!17938 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103917 () Bool)

(declare-fun e!67685 () Bool)

(assert (=> b!103917 (= e!67685 (contains!827 Nil!1635 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103918 () Bool)

(declare-fun call!10925 () Bool)

(assert (=> b!103918 (= e!67687 call!10925)))

(declare-fun b!103919 () Bool)

(declare-fun e!67686 () Bool)

(assert (=> b!103919 (= e!67686 e!67684)))

(declare-fun res!51840 () Bool)

(assert (=> b!103919 (=> (not res!51840) (not e!67684))))

(assert (=> b!103919 (= res!51840 (not e!67685))))

(declare-fun res!51841 () Bool)

(assert (=> b!103919 (=> (not res!51841) (not e!67685))))

(assert (=> b!103919 (= res!51841 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103920 () Bool)

(assert (=> b!103920 (= e!67687 call!10925)))

(declare-fun bm!10922 () Bool)

(assert (=> bm!10922 (= call!10925 (arrayNoDuplicates!0 (_keys!4263 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!17938 (Cons!1634 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) Nil!1635) Nil!1635)))))

(declare-fun d!27935 () Bool)

(declare-fun res!51842 () Bool)

(assert (=> d!27935 (=> res!51842 e!67686)))

(assert (=> d!27935 (= res!51842 (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!27935 (= (arrayNoDuplicates!0 (_keys!4263 newMap!16) #b00000000000000000000000000000000 Nil!1635) e!67686)))

(assert (= (and d!27935 (not res!51842)) b!103919))

(assert (= (and b!103919 res!51841) b!103917))

(assert (= (and b!103919 res!51840) b!103916))

(assert (= (and b!103916 c!17938) b!103918))

(assert (= (and b!103916 (not c!17938)) b!103920))

(assert (= (or b!103918 b!103920) bm!10922))

(assert (=> b!103916 m!114523))

(assert (=> b!103916 m!114523))

(assert (=> b!103916 m!114525))

(assert (=> b!103917 m!114523))

(assert (=> b!103917 m!114523))

(declare-fun m!115049 () Bool)

(assert (=> b!103917 m!115049))

(assert (=> b!103919 m!114523))

(assert (=> b!103919 m!114523))

(assert (=> b!103919 m!114525))

(assert (=> bm!10922 m!114523))

(declare-fun m!115051 () Bool)

(assert (=> bm!10922 m!115051))

(assert (=> b!103567 d!27935))

(declare-fun d!27937 () Bool)

(assert (=> d!27937 (= (apply!97 lt!52753 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1336 (getValueByKey!154 (toList!805 lt!52753) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4253 () Bool)

(assert (= bs!4253 d!27937))

(declare-fun m!115053 () Bool)

(assert (=> bs!4253 m!115053))

(assert (=> bs!4253 m!115053))

(declare-fun m!115055 () Bool)

(assert (=> bs!4253 m!115055))

(assert (=> b!103546 d!27937))

(declare-fun b!103929 () Bool)

(declare-fun e!67693 () (_ BitVec 32))

(declare-fun e!67692 () (_ BitVec 32))

(assert (=> b!103929 (= e!67693 e!67692)))

(declare-fun c!17943 () Bool)

(assert (=> b!103929 (= c!17943 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!10925 () Bool)

(declare-fun call!10928 () (_ BitVec 32))

(assert (=> bm!10925 (= call!10928 (arrayCountValidKeys!0 (_keys!4263 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!103930 () Bool)

(assert (=> b!103930 (= e!67693 #b00000000000000000000000000000000)))

(declare-fun d!27939 () Bool)

(declare-fun lt!53048 () (_ BitVec 32))

(assert (=> d!27939 (and (bvsge lt!53048 #b00000000000000000000000000000000) (bvsle lt!53048 (bvsub (size!2310 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!27939 (= lt!53048 e!67693)))

(declare-fun c!17944 () Bool)

(assert (=> d!27939 (= c!17944 (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!27939 (and (bvsle #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2310 (_keys!4263 newMap!16)) (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!27939 (= (arrayCountValidKeys!0 (_keys!4263 newMap!16) #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))) lt!53048)))

(declare-fun b!103931 () Bool)

(assert (=> b!103931 (= e!67692 (bvadd #b00000000000000000000000000000001 call!10928))))

(declare-fun b!103932 () Bool)

(assert (=> b!103932 (= e!67692 call!10928)))

(assert (= (and d!27939 c!17944) b!103930))

(assert (= (and d!27939 (not c!17944)) b!103929))

(assert (= (and b!103929 c!17943) b!103931))

(assert (= (and b!103929 (not c!17943)) b!103932))

(assert (= (or b!103931 b!103932) bm!10925))

(assert (=> b!103929 m!114523))

(assert (=> b!103929 m!114523))

(assert (=> b!103929 m!114525))

(declare-fun m!115057 () Bool)

(assert (=> bm!10925 m!115057))

(assert (=> b!103565 d!27939))

(assert (=> d!27767 d!27771))

(declare-fun d!27941 () Bool)

(assert (=> d!27941 (not (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!27941 true))

(declare-fun _$68!103 () Unit!3170)

(assert (=> d!27941 (= (choose!68 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635)) _$68!103)))

(declare-fun bs!4254 () Bool)

(assert (= bs!4254 d!27941))

(assert (=> bs!4254 m!114187))

(assert (=> bs!4254 m!114203))

(assert (=> d!27767 d!27941))

(declare-fun b!103949 () Bool)

(declare-fun e!67704 () Bool)

(declare-fun e!67705 () Bool)

(assert (=> b!103949 (= e!67704 e!67705)))

(declare-fun c!17950 () Bool)

(declare-fun lt!53054 () SeekEntryResult!268)

(assert (=> b!103949 (= c!17950 ((_ is MissingVacant!268) lt!53054))))

(declare-fun b!103950 () Bool)

(assert (=> b!103950 (and (bvsge (index!3219 lt!53054) #b00000000000000000000000000000000) (bvslt (index!3219 lt!53054) (size!2310 (_keys!4263 newMap!16))))))

(declare-fun res!51852 () Bool)

(assert (=> b!103950 (= res!51852 (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3219 lt!53054)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!67702 () Bool)

(assert (=> b!103950 (=> (not res!51852) (not e!67702))))

(declare-fun b!103951 () Bool)

(assert (=> b!103951 (= e!67704 e!67702)))

(declare-fun res!51853 () Bool)

(declare-fun call!10934 () Bool)

(assert (=> b!103951 (= res!51853 call!10934)))

(assert (=> b!103951 (=> (not res!51853) (not e!67702))))

(declare-fun b!103952 () Bool)

(declare-fun call!10933 () Bool)

(assert (=> b!103952 (= e!67702 (not call!10933))))

(declare-fun b!103953 () Bool)

(declare-fun e!67703 () Bool)

(assert (=> b!103953 (= e!67703 (not call!10933))))

(declare-fun d!27943 () Bool)

(assert (=> d!27943 e!67704))

(declare-fun c!17949 () Bool)

(assert (=> d!27943 (= c!17949 ((_ is MissingZero!268) lt!53054))))

(assert (=> d!27943 (= lt!53054 (seekEntryOrOpen!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun lt!53053 () Unit!3170)

(declare-fun choose!651 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 64) Int) Unit!3170)

(assert (=> d!27943 (= lt!53053 (choose!651 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)))))

(assert (=> d!27943 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!27943 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)) lt!53053)))

(declare-fun b!103954 () Bool)

(assert (=> b!103954 (= e!67705 ((_ is Undefined!268) lt!53054))))

(declare-fun bm!10930 () Bool)

(assert (=> bm!10930 (= call!10933 (arrayContainsKey!0 (_keys!4263 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!103955 () Bool)

(declare-fun res!51851 () Bool)

(assert (=> b!103955 (=> (not res!51851) (not e!67703))))

(assert (=> b!103955 (= res!51851 (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3222 lt!53054)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103955 (and (bvsge (index!3222 lt!53054) #b00000000000000000000000000000000) (bvslt (index!3222 lt!53054) (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!103956 () Bool)

(declare-fun res!51854 () Bool)

(assert (=> b!103956 (=> (not res!51854) (not e!67703))))

(assert (=> b!103956 (= res!51854 call!10934)))

(assert (=> b!103956 (= e!67705 e!67703)))

(declare-fun bm!10931 () Bool)

(assert (=> bm!10931 (= call!10934 (inRange!0 (ite c!17949 (index!3219 lt!53054) (index!3222 lt!53054)) (mask!6697 newMap!16)))))

(assert (= (and d!27943 c!17949) b!103951))

(assert (= (and d!27943 (not c!17949)) b!103949))

(assert (= (and b!103951 res!51853) b!103950))

(assert (= (and b!103950 res!51852) b!103952))

(assert (= (and b!103949 c!17950) b!103956))

(assert (= (and b!103949 (not c!17950)) b!103954))

(assert (= (and b!103956 res!51854) b!103955))

(assert (= (and b!103955 res!51851) b!103953))

(assert (= (or b!103951 b!103956) bm!10931))

(assert (= (or b!103952 b!103953) bm!10930))

(declare-fun m!115059 () Bool)

(assert (=> bm!10931 m!115059))

(declare-fun m!115061 () Bool)

(assert (=> b!103955 m!115061))

(declare-fun m!115063 () Bool)

(assert (=> b!103950 m!115063))

(assert (=> d!27943 m!114187))

(assert (=> d!27943 m!114305))

(assert (=> d!27943 m!114187))

(declare-fun m!115065 () Bool)

(assert (=> d!27943 m!115065))

(assert (=> d!27943 m!114517))

(assert (=> bm!10930 m!114187))

(assert (=> bm!10930 m!114307))

(assert (=> bm!10841 d!27943))

(declare-fun d!27945 () Bool)

(declare-fun lt!53057 () Bool)

(declare-fun content!107 (List!1637) (InoxSet tuple2!2402))

(assert (=> d!27945 (= lt!53057 (select (content!107 (toList!805 lt!52799)) lt!52551))))

(declare-fun e!67711 () Bool)

(assert (=> d!27945 (= lt!53057 e!67711)))

(declare-fun res!51859 () Bool)

(assert (=> d!27945 (=> (not res!51859) (not e!67711))))

(assert (=> d!27945 (= res!51859 ((_ is Cons!1633) (toList!805 lt!52799)))))

(assert (=> d!27945 (= (contains!828 (toList!805 lt!52799) lt!52551) lt!53057)))

(declare-fun b!103961 () Bool)

(declare-fun e!67710 () Bool)

(assert (=> b!103961 (= e!67711 e!67710)))

(declare-fun res!51860 () Bool)

(assert (=> b!103961 (=> res!51860 e!67710)))

(assert (=> b!103961 (= res!51860 (= (h!2229 (toList!805 lt!52799)) lt!52551))))

(declare-fun b!103962 () Bool)

(assert (=> b!103962 (= e!67710 (contains!828 (t!5711 (toList!805 lt!52799)) lt!52551))))

(assert (= (and d!27945 res!51859) b!103961))

(assert (= (and b!103961 (not res!51860)) b!103962))

(declare-fun m!115067 () Bool)

(assert (=> d!27945 m!115067))

(declare-fun m!115069 () Bool)

(assert (=> d!27945 m!115069))

(declare-fun m!115071 () Bool)

(assert (=> b!103962 m!115071))

(assert (=> b!103615 d!27945))

(assert (=> b!103427 d!27811))

(declare-fun d!27947 () Bool)

(declare-fun lt!53058 () Bool)

(assert (=> d!27947 (= lt!53058 (select (content!107 (toList!805 lt!52795)) lt!52551))))

(declare-fun e!67713 () Bool)

(assert (=> d!27947 (= lt!53058 e!67713)))

(declare-fun res!51861 () Bool)

(assert (=> d!27947 (=> (not res!51861) (not e!67713))))

(assert (=> d!27947 (= res!51861 ((_ is Cons!1633) (toList!805 lt!52795)))))

(assert (=> d!27947 (= (contains!828 (toList!805 lt!52795) lt!52551) lt!53058)))

(declare-fun b!103963 () Bool)

(declare-fun e!67712 () Bool)

(assert (=> b!103963 (= e!67713 e!67712)))

(declare-fun res!51862 () Bool)

(assert (=> b!103963 (=> res!51862 e!67712)))

(assert (=> b!103963 (= res!51862 (= (h!2229 (toList!805 lt!52795)) lt!52551))))

(declare-fun b!103964 () Bool)

(assert (=> b!103964 (= e!67712 (contains!828 (t!5711 (toList!805 lt!52795)) lt!52551))))

(assert (= (and d!27947 res!51861) b!103963))

(assert (= (and b!103963 (not res!51862)) b!103964))

(declare-fun m!115073 () Bool)

(assert (=> d!27947 m!115073))

(declare-fun m!115075 () Bool)

(assert (=> d!27947 m!115075))

(declare-fun m!115077 () Bool)

(assert (=> b!103964 m!115077))

(assert (=> b!103613 d!27947))

(declare-fun b!103977 () Bool)

(declare-fun e!67721 () SeekEntryResult!268)

(declare-fun lt!53067 () SeekEntryResult!268)

(assert (=> b!103977 (= e!67721 (MissingZero!268 (index!3221 lt!53067)))))

(declare-fun b!103978 () Bool)

(declare-fun e!67722 () SeekEntryResult!268)

(assert (=> b!103978 (= e!67722 (Found!268 (index!3221 lt!53067)))))

(declare-fun b!103979 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4334 (_ BitVec 32)) SeekEntryResult!268)

(assert (=> b!103979 (= e!67721 (seekKeyOrZeroReturnVacant!0 (x!13510 lt!53067) (index!3221 lt!53067) (index!3221 lt!53067) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun b!103980 () Bool)

(declare-fun e!67720 () SeekEntryResult!268)

(assert (=> b!103980 (= e!67720 e!67722)))

(declare-fun lt!53065 () (_ BitVec 64))

(assert (=> b!103980 (= lt!53065 (select (arr!2056 (_keys!4263 newMap!16)) (index!3221 lt!53067)))))

(declare-fun c!17959 () Bool)

(assert (=> b!103980 (= c!17959 (= lt!53065 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun b!103981 () Bool)

(declare-fun c!17958 () Bool)

(assert (=> b!103981 (= c!17958 (= lt!53065 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103981 (= e!67722 e!67721)))

(declare-fun d!27949 () Bool)

(declare-fun lt!53066 () SeekEntryResult!268)

(assert (=> d!27949 (and (or ((_ is Undefined!268) lt!53066) (not ((_ is Found!268) lt!53066)) (and (bvsge (index!3220 lt!53066) #b00000000000000000000000000000000) (bvslt (index!3220 lt!53066) (size!2310 (_keys!4263 newMap!16))))) (or ((_ is Undefined!268) lt!53066) ((_ is Found!268) lt!53066) (not ((_ is MissingZero!268) lt!53066)) (and (bvsge (index!3219 lt!53066) #b00000000000000000000000000000000) (bvslt (index!3219 lt!53066) (size!2310 (_keys!4263 newMap!16))))) (or ((_ is Undefined!268) lt!53066) ((_ is Found!268) lt!53066) ((_ is MissingZero!268) lt!53066) (not ((_ is MissingVacant!268) lt!53066)) (and (bvsge (index!3222 lt!53066) #b00000000000000000000000000000000) (bvslt (index!3222 lt!53066) (size!2310 (_keys!4263 newMap!16))))) (or ((_ is Undefined!268) lt!53066) (ite ((_ is Found!268) lt!53066) (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!53066)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (ite ((_ is MissingZero!268) lt!53066) (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3219 lt!53066)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!268) lt!53066) (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3222 lt!53066)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!27949 (= lt!53066 e!67720)))

(declare-fun c!17957 () Bool)

(assert (=> d!27949 (= c!17957 (and ((_ is Intermediate!268) lt!53067) (undefined!1080 lt!53067)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4334 (_ BitVec 32)) SeekEntryResult!268)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!27949 (= lt!53067 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (mask!6697 newMap!16)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(assert (=> d!27949 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!27949 (= (seekEntryOrOpen!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)) lt!53066)))

(declare-fun b!103982 () Bool)

(assert (=> b!103982 (= e!67720 Undefined!268)))

(assert (= (and d!27949 c!17957) b!103982))

(assert (= (and d!27949 (not c!17957)) b!103980))

(assert (= (and b!103980 c!17959) b!103978))

(assert (= (and b!103980 (not c!17959)) b!103981))

(assert (= (and b!103981 c!17958) b!103977))

(assert (= (and b!103981 (not c!17958)) b!103979))

(assert (=> b!103979 m!114187))

(declare-fun m!115079 () Bool)

(assert (=> b!103979 m!115079))

(declare-fun m!115081 () Bool)

(assert (=> b!103980 m!115081))

(declare-fun m!115083 () Bool)

(assert (=> d!27949 m!115083))

(assert (=> d!27949 m!114187))

(declare-fun m!115085 () Bool)

(assert (=> d!27949 m!115085))

(assert (=> d!27949 m!115085))

(assert (=> d!27949 m!114187))

(declare-fun m!115087 () Bool)

(assert (=> d!27949 m!115087))

(assert (=> d!27949 m!114517))

(declare-fun m!115089 () Bool)

(assert (=> d!27949 m!115089))

(declare-fun m!115091 () Bool)

(assert (=> d!27949 m!115091))

(assert (=> b!103426 d!27949))

(declare-fun d!27951 () Bool)

(declare-fun e!67724 () Bool)

(assert (=> d!27951 e!67724))

(declare-fun res!51863 () Bool)

(assert (=> d!27951 (=> res!51863 e!67724)))

(declare-fun lt!53071 () Bool)

(assert (=> d!27951 (= res!51863 (not lt!53071))))

(declare-fun lt!53069 () Bool)

(assert (=> d!27951 (= lt!53071 lt!53069)))

(declare-fun lt!53068 () Unit!3170)

(declare-fun e!67723 () Unit!3170)

(assert (=> d!27951 (= lt!53068 e!67723)))

(declare-fun c!17960 () Bool)

(assert (=> d!27951 (= c!17960 lt!53069)))

(assert (=> d!27951 (= lt!53069 (containsKey!158 (toList!805 call!10839) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))))))

(assert (=> d!27951 (= (contains!825 call!10839 (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))) lt!53071)))

(declare-fun b!103983 () Bool)

(declare-fun lt!53070 () Unit!3170)

(assert (=> b!103983 (= e!67723 lt!53070)))

(assert (=> b!103983 (= lt!53070 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 call!10839) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))))))

(assert (=> b!103983 (isDefined!108 (getValueByKey!154 (toList!805 call!10839) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))))))

(declare-fun b!103984 () Bool)

(declare-fun Unit!3194 () Unit!3170)

(assert (=> b!103984 (= e!67723 Unit!3194)))

(declare-fun b!103985 () Bool)

(assert (=> b!103985 (= e!67724 (isDefined!108 (getValueByKey!154 (toList!805 call!10839) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676)))))))

(assert (= (and d!27951 c!17960) b!103983))

(assert (= (and d!27951 (not c!17960)) b!103984))

(assert (= (and d!27951 (not res!51863)) b!103985))

(assert (=> d!27951 m!114327))

(declare-fun m!115093 () Bool)

(assert (=> d!27951 m!115093))

(assert (=> b!103983 m!114327))

(declare-fun m!115095 () Bool)

(assert (=> b!103983 m!115095))

(assert (=> b!103983 m!114327))

(declare-fun m!115097 () Bool)

(assert (=> b!103983 m!115097))

(assert (=> b!103983 m!115097))

(declare-fun m!115099 () Bool)

(assert (=> b!103983 m!115099))

(assert (=> b!103985 m!114327))

(assert (=> b!103985 m!115097))

(assert (=> b!103985 m!115097))

(assert (=> b!103985 m!115099))

(assert (=> b!103438 d!27951))

(declare-fun d!27953 () Bool)

(declare-fun e!67727 () Bool)

(assert (=> d!27953 e!67727))

(declare-fun res!51866 () Bool)

(assert (=> d!27953 (=> (not res!51866) (not e!67727))))

(assert (=> d!27953 (= res!51866 (and (bvsge (index!3220 lt!52676) #b00000000000000000000000000000000) (bvslt (index!3220 lt!52676) (size!2310 (_keys!4263 newMap!16)))))))

(declare-fun lt!53074 () Unit!3170)

(declare-fun choose!652 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 32) Int) Unit!3170)

(assert (=> d!27953 (= lt!53074 (choose!652 (_keys!4263 newMap!16) lt!52657 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (index!3220 lt!52676) (defaultEntry!2561 newMap!16)))))

(assert (=> d!27953 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!27953 (= (lemmaValidKeyInArrayIsInListMap!104 (_keys!4263 newMap!16) lt!52657 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (index!3220 lt!52676) (defaultEntry!2561 newMap!16)) lt!53074)))

(declare-fun b!103988 () Bool)

(assert (=> b!103988 (= e!67727 (contains!825 (getCurrentListMap!482 (_keys!4263 newMap!16) lt!52657 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))))))

(assert (= (and d!27953 res!51866) b!103988))

(declare-fun m!115101 () Bool)

(assert (=> d!27953 m!115101))

(assert (=> d!27953 m!114517))

(declare-fun m!115103 () Bool)

(assert (=> b!103988 m!115103))

(assert (=> b!103988 m!114327))

(assert (=> b!103988 m!115103))

(assert (=> b!103988 m!114327))

(declare-fun m!115105 () Bool)

(assert (=> b!103988 m!115105))

(assert (=> b!103438 d!27953))

(declare-fun d!27955 () Bool)

(declare-fun e!67730 () Bool)

(assert (=> d!27955 e!67730))

(declare-fun res!51869 () Bool)

(assert (=> d!27955 (=> (not res!51869) (not e!67730))))

(assert (=> d!27955 (= res!51869 (and (bvsge (index!3220 lt!52676) #b00000000000000000000000000000000) (bvslt (index!3220 lt!52676) (size!2311 (_values!2544 newMap!16)))))))

(declare-fun lt!53077 () Unit!3170)

(declare-fun choose!653 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 32) (_ BitVec 64) V!3211 Int) Unit!3170)

(assert (=> d!27955 (= lt!53077 (choose!653 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (index!3220 lt!52676) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546 (defaultEntry!2561 newMap!16)))))

(assert (=> d!27955 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!27955 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (index!3220 lt!52676) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546 (defaultEntry!2561 newMap!16)) lt!53077)))

(declare-fun b!103991 () Bool)

(assert (=> b!103991 (= e!67730 (= (+!143 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (getCurrentListMap!482 (_keys!4263 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))))))

(assert (= (and d!27955 res!51869) b!103991))

(assert (=> d!27955 m!114187))

(declare-fun m!115107 () Bool)

(assert (=> d!27955 m!115107))

(assert (=> d!27955 m!114517))

(assert (=> b!103991 m!114295))

(assert (=> b!103991 m!114295))

(assert (=> b!103991 m!114605))

(assert (=> b!103991 m!114323))

(declare-fun m!115109 () Bool)

(assert (=> b!103991 m!115109))

(assert (=> b!103438 d!27955))

(declare-fun d!27957 () Bool)

(declare-fun e!67731 () Bool)

(assert (=> d!27957 e!67731))

(declare-fun res!51871 () Bool)

(assert (=> d!27957 (=> (not res!51871) (not e!67731))))

(declare-fun lt!53078 () ListLongMap!1579)

(assert (=> d!27957 (= res!51871 (contains!825 lt!53078 (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun lt!53081 () List!1637)

(assert (=> d!27957 (= lt!53078 (ListLongMap!1580 lt!53081))))

(declare-fun lt!53080 () Unit!3170)

(declare-fun lt!53079 () Unit!3170)

(assert (=> d!27957 (= lt!53080 lt!53079)))

(assert (=> d!27957 (= (getValueByKey!154 lt!53081 (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))) (Some!159 (_2!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!27957 (= lt!53079 (lemmaContainsTupThenGetReturnValue!72 lt!53081 (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) (_2!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!27957 (= lt!53081 (insertStrictlySorted!74 (toList!805 (ite c!17839 call!10876 (ite c!17842 call!10878 call!10873))) (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) (_2!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!27957 (= (+!143 (ite c!17839 call!10876 (ite c!17842 call!10878 call!10873)) (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53078)))

(declare-fun b!103992 () Bool)

(declare-fun res!51870 () Bool)

(assert (=> b!103992 (=> (not res!51870) (not e!67731))))

(assert (=> b!103992 (= res!51870 (= (getValueByKey!154 (toList!805 lt!53078) (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))) (Some!159 (_2!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun b!103993 () Bool)

(assert (=> b!103993 (= e!67731 (contains!828 (toList!805 lt!53078) (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (= (and d!27957 res!51871) b!103992))

(assert (= (and b!103992 res!51870) b!103993))

(declare-fun m!115111 () Bool)

(assert (=> d!27957 m!115111))

(declare-fun m!115113 () Bool)

(assert (=> d!27957 m!115113))

(declare-fun m!115115 () Bool)

(assert (=> d!27957 m!115115))

(declare-fun m!115117 () Bool)

(assert (=> d!27957 m!115117))

(declare-fun m!115119 () Bool)

(assert (=> b!103992 m!115119))

(declare-fun m!115121 () Bool)

(assert (=> b!103993 m!115121))

(assert (=> bm!10872 d!27957))

(declare-fun d!27959 () Bool)

(declare-fun e!67733 () Bool)

(assert (=> d!27959 e!67733))

(declare-fun res!51872 () Bool)

(assert (=> d!27959 (=> res!51872 e!67733)))

(declare-fun lt!53085 () Bool)

(assert (=> d!27959 (= res!51872 (not lt!53085))))

(declare-fun lt!53083 () Bool)

(assert (=> d!27959 (= lt!53085 lt!53083)))

(declare-fun lt!53082 () Unit!3170)

(declare-fun e!67732 () Unit!3170)

(assert (=> d!27959 (= lt!53082 e!67732)))

(declare-fun c!17961 () Bool)

(assert (=> d!27959 (= c!17961 lt!53083)))

(assert (=> d!27959 (= lt!53083 (containsKey!158 (toList!805 e!67410) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> d!27959 (= (contains!825 e!67410 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) lt!53085)))

(declare-fun b!103994 () Bool)

(declare-fun lt!53084 () Unit!3170)

(assert (=> b!103994 (= e!67732 lt!53084)))

(assert (=> b!103994 (= lt!53084 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 e!67410) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> b!103994 (isDefined!108 (getValueByKey!154 (toList!805 e!67410) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun b!103995 () Bool)

(declare-fun Unit!3195 () Unit!3170)

(assert (=> b!103995 (= e!67732 Unit!3195)))

(declare-fun b!103996 () Bool)

(assert (=> b!103996 (= e!67733 (isDefined!108 (getValueByKey!154 (toList!805 e!67410) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))))

(assert (= (and d!27959 c!17961) b!103994))

(assert (= (and d!27959 (not c!17961)) b!103995))

(assert (= (and d!27959 (not res!51872)) b!103996))

(assert (=> d!27959 m!114187))

(declare-fun m!115123 () Bool)

(assert (=> d!27959 m!115123))

(assert (=> b!103994 m!114187))

(declare-fun m!115125 () Bool)

(assert (=> b!103994 m!115125))

(assert (=> b!103994 m!114187))

(declare-fun m!115127 () Bool)

(assert (=> b!103994 m!115127))

(assert (=> b!103994 m!115127))

(declare-fun m!115129 () Bool)

(assert (=> b!103994 m!115129))

(assert (=> b!103996 m!114187))

(assert (=> b!103996 m!115127))

(assert (=> b!103996 m!115127))

(assert (=> b!103996 m!115129))

(assert (=> bm!10831 d!27959))

(declare-fun d!27961 () Bool)

(declare-fun lt!53086 () Bool)

(assert (=> d!27961 (= lt!53086 (select (content!107 (toList!805 lt!52791)) lt!52547))))

(declare-fun e!67735 () Bool)

(assert (=> d!27961 (= lt!53086 e!67735)))

(declare-fun res!51873 () Bool)

(assert (=> d!27961 (=> (not res!51873) (not e!67735))))

(assert (=> d!27961 (= res!51873 ((_ is Cons!1633) (toList!805 lt!52791)))))

(assert (=> d!27961 (= (contains!828 (toList!805 lt!52791) lt!52547) lt!53086)))

(declare-fun b!103997 () Bool)

(declare-fun e!67734 () Bool)

(assert (=> b!103997 (= e!67735 e!67734)))

(declare-fun res!51874 () Bool)

(assert (=> b!103997 (=> res!51874 e!67734)))

(assert (=> b!103997 (= res!51874 (= (h!2229 (toList!805 lt!52791)) lt!52547))))

(declare-fun b!103998 () Bool)

(assert (=> b!103998 (= e!67734 (contains!828 (t!5711 (toList!805 lt!52791)) lt!52547))))

(assert (= (and d!27961 res!51873) b!103997))

(assert (= (and b!103997 (not res!51874)) b!103998))

(declare-fun m!115131 () Bool)

(assert (=> d!27961 m!115131))

(declare-fun m!115133 () Bool)

(assert (=> d!27961 m!115133))

(declare-fun m!115135 () Bool)

(assert (=> b!103998 m!115135))

(assert (=> b!103611 d!27961))

(assert (=> b!103608 d!27847))

(declare-fun d!27963 () Bool)

(declare-fun res!51875 () Bool)

(declare-fun e!67736 () Bool)

(assert (=> d!27963 (=> (not res!51875) (not e!67736))))

(assert (=> d!27963 (= res!51875 (simpleValid!72 (_2!1210 lt!52662)))))

(assert (=> d!27963 (= (valid!405 (_2!1210 lt!52662)) e!67736)))

(declare-fun b!103999 () Bool)

(declare-fun res!51876 () Bool)

(assert (=> b!103999 (=> (not res!51876) (not e!67736))))

(assert (=> b!103999 (= res!51876 (= (arrayCountValidKeys!0 (_keys!4263 (_2!1210 lt!52662)) #b00000000000000000000000000000000 (size!2310 (_keys!4263 (_2!1210 lt!52662)))) (_size!496 (_2!1210 lt!52662))))))

(declare-fun b!104000 () Bool)

(declare-fun res!51877 () Bool)

(assert (=> b!104000 (=> (not res!51877) (not e!67736))))

(assert (=> b!104000 (= res!51877 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4263 (_2!1210 lt!52662)) (mask!6697 (_2!1210 lt!52662))))))

(declare-fun b!104001 () Bool)

(assert (=> b!104001 (= e!67736 (arrayNoDuplicates!0 (_keys!4263 (_2!1210 lt!52662)) #b00000000000000000000000000000000 Nil!1635))))

(assert (= (and d!27963 res!51875) b!103999))

(assert (= (and b!103999 res!51876) b!104000))

(assert (= (and b!104000 res!51877) b!104001))

(declare-fun m!115137 () Bool)

(assert (=> d!27963 m!115137))

(declare-fun m!115139 () Bool)

(assert (=> b!103999 m!115139))

(declare-fun m!115141 () Bool)

(assert (=> b!104000 m!115141))

(declare-fun m!115143 () Bool)

(assert (=> b!104001 m!115143))

(assert (=> d!27765 d!27963))

(assert (=> d!27765 d!27791))

(declare-fun d!27965 () Bool)

(declare-fun e!67738 () Bool)

(assert (=> d!27965 e!67738))

(declare-fun res!51878 () Bool)

(assert (=> d!27965 (=> res!51878 e!67738)))

(declare-fun lt!53090 () Bool)

(assert (=> d!27965 (= res!51878 (not lt!53090))))

(declare-fun lt!53088 () Bool)

(assert (=> d!27965 (= lt!53090 lt!53088)))

(declare-fun lt!53087 () Unit!3170)

(declare-fun e!67737 () Unit!3170)

(assert (=> d!27965 (= lt!53087 e!67737)))

(declare-fun c!17962 () Bool)

(assert (=> d!27965 (= c!17962 lt!53088)))

(assert (=> d!27965 (= lt!53088 (containsKey!158 (toList!805 call!10831) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> d!27965 (= (contains!825 call!10831 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) lt!53090)))

(declare-fun b!104002 () Bool)

(declare-fun lt!53089 () Unit!3170)

(assert (=> b!104002 (= e!67737 lt!53089)))

(assert (=> b!104002 (= lt!53089 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 call!10831) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> b!104002 (isDefined!108 (getValueByKey!154 (toList!805 call!10831) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun b!104003 () Bool)

(declare-fun Unit!3196 () Unit!3170)

(assert (=> b!104003 (= e!67737 Unit!3196)))

(declare-fun b!104004 () Bool)

(assert (=> b!104004 (= e!67738 (isDefined!108 (getValueByKey!154 (toList!805 call!10831) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))))

(assert (= (and d!27965 c!17962) b!104002))

(assert (= (and d!27965 (not c!17962)) b!104003))

(assert (= (and d!27965 (not res!51878)) b!104004))

(assert (=> d!27965 m!114187))

(declare-fun m!115145 () Bool)

(assert (=> d!27965 m!115145))

(assert (=> b!104002 m!114187))

(declare-fun m!115147 () Bool)

(assert (=> b!104002 m!115147))

(assert (=> b!104002 m!114187))

(declare-fun m!115149 () Bool)

(assert (=> b!104002 m!115149))

(assert (=> b!104002 m!115149))

(declare-fun m!115151 () Bool)

(assert (=> b!104002 m!115151))

(assert (=> b!104004 m!114187))

(assert (=> b!104004 m!115149))

(assert (=> b!104004 m!115149))

(assert (=> b!104004 m!115151))

(assert (=> b!103452 d!27965))

(declare-fun d!27967 () Bool)

(assert (=> d!27967 (= (inRange!0 (ite c!17806 (ite c!17813 (index!3220 lt!52679) (ite c!17818 (index!3219 lt!52656) (index!3222 lt!52656))) (ite c!17815 (index!3220 lt!52659) (ite c!17810 (index!3219 lt!52681) (index!3222 lt!52681)))) (mask!6697 newMap!16)) (and (bvsge (ite c!17806 (ite c!17813 (index!3220 lt!52679) (ite c!17818 (index!3219 lt!52656) (index!3222 lt!52656))) (ite c!17815 (index!3220 lt!52659) (ite c!17810 (index!3219 lt!52681) (index!3222 lt!52681)))) #b00000000000000000000000000000000) (bvslt (ite c!17806 (ite c!17813 (index!3220 lt!52679) (ite c!17818 (index!3219 lt!52656) (index!3222 lt!52656))) (ite c!17815 (index!3220 lt!52659) (ite c!17810 (index!3219 lt!52681) (index!3222 lt!52681)))) (bvadd (mask!6697 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!10830 d!27967))

(declare-fun d!27969 () Bool)

(assert (=> d!27969 (= (get!1334 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) from!355) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2875 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> b!103557 d!27969))

(assert (=> b!103605 d!27917))

(declare-fun d!27971 () Bool)

(declare-fun e!67740 () Bool)

(assert (=> d!27971 e!67740))

(declare-fun res!51879 () Bool)

(assert (=> d!27971 (=> res!51879 e!67740)))

(declare-fun lt!53094 () Bool)

(assert (=> d!27971 (= res!51879 (not lt!53094))))

(declare-fun lt!53092 () Bool)

(assert (=> d!27971 (= lt!53094 lt!53092)))

(declare-fun lt!53091 () Unit!3170)

(declare-fun e!67739 () Unit!3170)

(assert (=> d!27971 (= lt!53091 e!67739)))

(declare-fun c!17963 () Bool)

(assert (=> d!27971 (= c!17963 lt!53092)))

(assert (=> d!27971 (= lt!53092 (containsKey!158 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787))) lt!52786))))

(assert (=> d!27971 (= (contains!825 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787)) lt!52786) lt!53094)))

(declare-fun b!104005 () Bool)

(declare-fun lt!53093 () Unit!3170)

(assert (=> b!104005 (= e!67739 lt!53093)))

(assert (=> b!104005 (= lt!53093 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787))) lt!52786))))

(assert (=> b!104005 (isDefined!108 (getValueByKey!154 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787))) lt!52786))))

(declare-fun b!104006 () Bool)

(declare-fun Unit!3197 () Unit!3170)

(assert (=> b!104006 (= e!67739 Unit!3197)))

(declare-fun b!104007 () Bool)

(assert (=> b!104007 (= e!67740 (isDefined!108 (getValueByKey!154 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787))) lt!52786)))))

(assert (= (and d!27971 c!17963) b!104005))

(assert (= (and d!27971 (not c!17963)) b!104006))

(assert (= (and d!27971 (not res!51879)) b!104007))

(declare-fun m!115153 () Bool)

(assert (=> d!27971 m!115153))

(declare-fun m!115155 () Bool)

(assert (=> b!104005 m!115155))

(declare-fun m!115157 () Bool)

(assert (=> b!104005 m!115157))

(assert (=> b!104005 m!115157))

(declare-fun m!115159 () Bool)

(assert (=> b!104005 m!115159))

(assert (=> b!104007 m!115157))

(assert (=> b!104007 m!115157))

(assert (=> b!104007 m!115159))

(assert (=> b!103605 d!27971))

(declare-fun d!27973 () Bool)

(declare-fun e!67741 () Bool)

(assert (=> d!27973 e!67741))

(declare-fun res!51881 () Bool)

(assert (=> d!27973 (=> (not res!51881) (not e!67741))))

(declare-fun lt!53095 () ListLongMap!1579)

(assert (=> d!27973 (= res!51881 (contains!825 lt!53095 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!53098 () List!1637)

(assert (=> d!27973 (= lt!53095 (ListLongMap!1580 lt!53098))))

(declare-fun lt!53097 () Unit!3170)

(declare-fun lt!53096 () Unit!3170)

(assert (=> d!27973 (= lt!53097 lt!53096)))

(assert (=> d!27973 (= (getValueByKey!154 lt!53098 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!159 (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!27973 (= lt!53096 (lemmaContainsTupThenGetReturnValue!72 lt!53098 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!27973 (= lt!53098 (insertStrictlySorted!74 (toList!805 call!10881) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!27973 (= (+!143 call!10881 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!53095)))

(declare-fun b!104008 () Bool)

(declare-fun res!51880 () Bool)

(assert (=> b!104008 (=> (not res!51880) (not e!67741))))

(assert (=> b!104008 (= res!51880 (= (getValueByKey!154 (toList!805 lt!53095) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!159 (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!104009 () Bool)

(assert (=> b!104009 (= e!67741 (contains!828 (toList!805 lt!53095) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!27973 res!51881) b!104008))

(assert (= (and b!104008 res!51880) b!104009))

(declare-fun m!115161 () Bool)

(assert (=> d!27973 m!115161))

(declare-fun m!115163 () Bool)

(assert (=> d!27973 m!115163))

(declare-fun m!115165 () Bool)

(assert (=> d!27973 m!115165))

(declare-fun m!115167 () Bool)

(assert (=> d!27973 m!115167))

(declare-fun m!115169 () Bool)

(assert (=> b!104008 m!115169))

(declare-fun m!115171 () Bool)

(assert (=> b!104009 m!115171))

(assert (=> b!103605 d!27973))

(declare-fun d!27975 () Bool)

(declare-fun e!67742 () Bool)

(assert (=> d!27975 e!67742))

(declare-fun res!51883 () Bool)

(assert (=> d!27975 (=> (not res!51883) (not e!67742))))

(declare-fun lt!53099 () ListLongMap!1579)

(assert (=> d!27975 (= res!51883 (contains!825 lt!53099 (_1!1211 (tuple2!2403 lt!52790 lt!52787))))))

(declare-fun lt!53102 () List!1637)

(assert (=> d!27975 (= lt!53099 (ListLongMap!1580 lt!53102))))

(declare-fun lt!53101 () Unit!3170)

(declare-fun lt!53100 () Unit!3170)

(assert (=> d!27975 (= lt!53101 lt!53100)))

(assert (=> d!27975 (= (getValueByKey!154 lt!53102 (_1!1211 (tuple2!2403 lt!52790 lt!52787))) (Some!159 (_2!1211 (tuple2!2403 lt!52790 lt!52787))))))

(assert (=> d!27975 (= lt!53100 (lemmaContainsTupThenGetReturnValue!72 lt!53102 (_1!1211 (tuple2!2403 lt!52790 lt!52787)) (_2!1211 (tuple2!2403 lt!52790 lt!52787))))))

(assert (=> d!27975 (= lt!53102 (insertStrictlySorted!74 (toList!805 lt!52784) (_1!1211 (tuple2!2403 lt!52790 lt!52787)) (_2!1211 (tuple2!2403 lt!52790 lt!52787))))))

(assert (=> d!27975 (= (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787)) lt!53099)))

(declare-fun b!104010 () Bool)

(declare-fun res!51882 () Bool)

(assert (=> b!104010 (=> (not res!51882) (not e!67742))))

(assert (=> b!104010 (= res!51882 (= (getValueByKey!154 (toList!805 lt!53099) (_1!1211 (tuple2!2403 lt!52790 lt!52787))) (Some!159 (_2!1211 (tuple2!2403 lt!52790 lt!52787)))))))

(declare-fun b!104011 () Bool)

(assert (=> b!104011 (= e!67742 (contains!828 (toList!805 lt!53099) (tuple2!2403 lt!52790 lt!52787)))))

(assert (= (and d!27975 res!51883) b!104010))

(assert (= (and b!104010 res!51882) b!104011))

(declare-fun m!115173 () Bool)

(assert (=> d!27975 m!115173))

(declare-fun m!115175 () Bool)

(assert (=> d!27975 m!115175))

(declare-fun m!115177 () Bool)

(assert (=> d!27975 m!115177))

(declare-fun m!115179 () Bool)

(assert (=> d!27975 m!115179))

(declare-fun m!115181 () Bool)

(assert (=> b!104010 m!115181))

(declare-fun m!115183 () Bool)

(assert (=> b!104011 m!115183))

(assert (=> b!103605 d!27975))

(declare-fun d!27977 () Bool)

(assert (=> d!27977 (not (contains!825 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787)) lt!52786))))

(declare-fun lt!53105 () Unit!3170)

(declare-fun choose!654 (ListLongMap!1579 (_ BitVec 64) V!3211 (_ BitVec 64)) Unit!3170)

(assert (=> d!27977 (= lt!53105 (choose!654 lt!52784 lt!52790 lt!52787 lt!52786))))

(declare-fun e!67745 () Bool)

(assert (=> d!27977 e!67745))

(declare-fun res!51886 () Bool)

(assert (=> d!27977 (=> (not res!51886) (not e!67745))))

(assert (=> d!27977 (= res!51886 (not (contains!825 lt!52784 lt!52786)))))

(assert (=> d!27977 (= (addStillNotContains!47 lt!52784 lt!52790 lt!52787 lt!52786) lt!53105)))

(declare-fun b!104015 () Bool)

(assert (=> b!104015 (= e!67745 (not (= lt!52790 lt!52786)))))

(assert (= (and d!27977 res!51886) b!104015))

(assert (=> d!27977 m!114451))

(assert (=> d!27977 m!114451))

(assert (=> d!27977 m!114455))

(declare-fun m!115185 () Bool)

(assert (=> d!27977 m!115185))

(declare-fun m!115187 () Bool)

(assert (=> d!27977 m!115187))

(assert (=> b!103605 d!27977))

(declare-fun d!27979 () Bool)

(declare-fun lt!53106 () Bool)

(assert (=> d!27979 (= lt!53106 (select (content!107 (toList!805 lt!52766)) lt!52547))))

(declare-fun e!67747 () Bool)

(assert (=> d!27979 (= lt!53106 e!67747)))

(declare-fun res!51887 () Bool)

(assert (=> d!27979 (=> (not res!51887) (not e!67747))))

(assert (=> d!27979 (= res!51887 ((_ is Cons!1633) (toList!805 lt!52766)))))

(assert (=> d!27979 (= (contains!828 (toList!805 lt!52766) lt!52547) lt!53106)))

(declare-fun b!104016 () Bool)

(declare-fun e!67746 () Bool)

(assert (=> b!104016 (= e!67747 e!67746)))

(declare-fun res!51888 () Bool)

(assert (=> b!104016 (=> res!51888 e!67746)))

(assert (=> b!104016 (= res!51888 (= (h!2229 (toList!805 lt!52766)) lt!52547))))

(declare-fun b!104017 () Bool)

(assert (=> b!104017 (= e!67746 (contains!828 (t!5711 (toList!805 lt!52766)) lt!52547))))

(assert (= (and d!27979 res!51887) b!104016))

(assert (= (and b!104016 (not res!51888)) b!104017))

(declare-fun m!115189 () Bool)

(assert (=> d!27979 m!115189))

(declare-fun m!115191 () Bool)

(assert (=> d!27979 m!115191))

(declare-fun m!115193 () Bool)

(assert (=> b!104017 m!115193))

(assert (=> b!103573 d!27979))

(assert (=> b!103603 d!27809))

(declare-fun d!27981 () Bool)

(declare-fun e!67749 () Bool)

(assert (=> d!27981 e!67749))

(declare-fun res!51889 () Bool)

(assert (=> d!27981 (=> res!51889 e!67749)))

(declare-fun lt!53110 () Bool)

(assert (=> d!27981 (= res!51889 (not lt!53110))))

(declare-fun lt!53108 () Bool)

(assert (=> d!27981 (= lt!53110 lt!53108)))

(declare-fun lt!53107 () Unit!3170)

(declare-fun e!67748 () Unit!3170)

(assert (=> d!27981 (= lt!53107 e!67748)))

(declare-fun c!17964 () Bool)

(assert (=> d!27981 (= c!17964 lt!53108)))

(assert (=> d!27981 (= lt!53108 (containsKey!158 (toList!805 lt!52753) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27981 (= (contains!825 lt!52753 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53110)))

(declare-fun b!104018 () Bool)

(declare-fun lt!53109 () Unit!3170)

(assert (=> b!104018 (= e!67748 lt!53109)))

(assert (=> b!104018 (= lt!53109 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52753) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104018 (isDefined!108 (getValueByKey!154 (toList!805 lt!52753) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104019 () Bool)

(declare-fun Unit!3198 () Unit!3170)

(assert (=> b!104019 (= e!67748 Unit!3198)))

(declare-fun b!104020 () Bool)

(assert (=> b!104020 (= e!67749 (isDefined!108 (getValueByKey!154 (toList!805 lt!52753) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27981 c!17964) b!104018))

(assert (= (and d!27981 (not c!17964)) b!104019))

(assert (= (and d!27981 (not res!51889)) b!104020))

(declare-fun m!115195 () Bool)

(assert (=> d!27981 m!115195))

(declare-fun m!115197 () Bool)

(assert (=> b!104018 m!115197))

(assert (=> b!104018 m!115053))

(assert (=> b!104018 m!115053))

(declare-fun m!115199 () Bool)

(assert (=> b!104018 m!115199))

(assert (=> b!104020 m!115053))

(assert (=> b!104020 m!115053))

(assert (=> b!104020 m!115199))

(assert (=> bm!10875 d!27981))

(declare-fun bm!10932 () Bool)

(declare-fun call!10935 () Bool)

(declare-fun lt!53128 () ListLongMap!1579)

(assert (=> bm!10932 (= call!10935 (contains!825 lt!53128 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10933 () Bool)

(declare-fun call!10937 () ListLongMap!1579)

(declare-fun call!10940 () ListLongMap!1579)

(assert (=> bm!10933 (= call!10937 call!10940)))

(declare-fun b!104021 () Bool)

(declare-fun e!67761 () Bool)

(declare-fun e!67762 () Bool)

(assert (=> b!104021 (= e!67761 e!67762)))

(declare-fun res!51894 () Bool)

(declare-fun call!10938 () Bool)

(assert (=> b!104021 (= res!51894 call!10938)))

(assert (=> b!104021 (=> (not res!51894) (not e!67762))))

(declare-fun bm!10934 () Bool)

(declare-fun call!10936 () ListLongMap!1579)

(declare-fun call!10941 () ListLongMap!1579)

(assert (=> bm!10934 (= call!10936 call!10941)))

(declare-fun b!104022 () Bool)

(declare-fun e!67751 () Bool)

(assert (=> b!104022 (= e!67751 (= (apply!97 lt!53128 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))))

(declare-fun b!104023 () Bool)

(declare-fun e!67755 () ListLongMap!1579)

(declare-fun e!67760 () ListLongMap!1579)

(assert (=> b!104023 (= e!67755 e!67760)))

(declare-fun c!17969 () Bool)

(assert (=> b!104023 (= c!17969 (and (not (= (bvand (ite c!17808 (ite c!17814 (extraKeys!2370 newMap!16) lt!52663) (extraKeys!2370 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!17808 (ite c!17814 (extraKeys!2370 newMap!16) lt!52663) (extraKeys!2370 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104024 () Bool)

(declare-fun res!51893 () Bool)

(declare-fun e!67753 () Bool)

(assert (=> b!104024 (=> (not res!51893) (not e!67753))))

(declare-fun e!67758 () Bool)

(assert (=> b!104024 (= res!51893 e!67758)))

(declare-fun res!51896 () Bool)

(assert (=> b!104024 (=> res!51896 e!67758)))

(declare-fun e!67750 () Bool)

(assert (=> b!104024 (= res!51896 (not e!67750))))

(declare-fun res!51895 () Bool)

(assert (=> b!104024 (=> (not res!51895) (not e!67750))))

(assert (=> b!104024 (= res!51895 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104025 () Bool)

(declare-fun c!17970 () Bool)

(assert (=> b!104025 (= c!17970 (and (not (= (bvand (ite c!17808 (ite c!17814 (extraKeys!2370 newMap!16) lt!52663) (extraKeys!2370 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!17808 (ite c!17814 (extraKeys!2370 newMap!16) lt!52663) (extraKeys!2370 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!67757 () ListLongMap!1579)

(assert (=> b!104025 (= e!67760 e!67757)))

(declare-fun c!17966 () Bool)

(declare-fun call!10939 () ListLongMap!1579)

(declare-fun bm!10935 () Bool)

(assert (=> bm!10935 (= call!10940 (+!143 (ite c!17966 call!10939 (ite c!17969 call!10941 call!10936)) (ite (or c!17966 c!17969) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))))))

(declare-fun b!104027 () Bool)

(declare-fun e!67759 () Bool)

(assert (=> b!104027 (= e!67759 (not call!10935))))

(declare-fun b!104028 () Bool)

(declare-fun e!67756 () Unit!3170)

(declare-fun Unit!3199 () Unit!3170)

(assert (=> b!104028 (= e!67756 Unit!3199)))

(declare-fun b!104029 () Bool)

(assert (=> b!104029 (= e!67750 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104030 () Bool)

(assert (=> b!104030 (= e!67757 call!10937)))

(declare-fun b!104031 () Bool)

(declare-fun e!67754 () Bool)

(assert (=> b!104031 (= e!67754 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104032 () Bool)

(declare-fun res!51892 () Bool)

(assert (=> b!104032 (=> (not res!51892) (not e!67753))))

(assert (=> b!104032 (= res!51892 e!67761)))

(declare-fun c!17968 () Bool)

(assert (=> b!104032 (= c!17968 (not (= (bvand (ite c!17808 (ite c!17814 (extraKeys!2370 newMap!16) lt!52663) (extraKeys!2370 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!104033 () Bool)

(assert (=> b!104033 (= e!67760 call!10937)))

(declare-fun b!104034 () Bool)

(assert (=> b!104034 (= e!67757 call!10936)))

(declare-fun bm!10936 () Bool)

(assert (=> bm!10936 (= call!10941 call!10939)))

(declare-fun b!104035 () Bool)

(assert (=> b!104035 (= e!67762 (= (apply!97 lt!53128 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2438 newMap!16)))))

(declare-fun b!104036 () Bool)

(assert (=> b!104036 (= e!67755 (+!143 call!10940 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))))))

(declare-fun bm!10937 () Bool)

(assert (=> bm!10937 (= call!10939 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (ite c!17808 (ite c!17814 (extraKeys!2370 newMap!16) lt!52663) (extraKeys!2370 newMap!16)) (zeroValue!2438 newMap!16) (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun d!27983 () Bool)

(assert (=> d!27983 e!67753))

(declare-fun res!51890 () Bool)

(assert (=> d!27983 (=> (not res!51890) (not e!67753))))

(assert (=> d!27983 (= res!51890 (or (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))))

(declare-fun lt!53113 () ListLongMap!1579)

(assert (=> d!27983 (= lt!53128 lt!53113)))

(declare-fun lt!53112 () Unit!3170)

(assert (=> d!27983 (= lt!53112 e!67756)))

(declare-fun c!17965 () Bool)

(assert (=> d!27983 (= c!17965 e!67754)))

(declare-fun res!51898 () Bool)

(assert (=> d!27983 (=> (not res!51898) (not e!67754))))

(assert (=> d!27983 (= res!51898 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!27983 (= lt!53113 e!67755)))

(assert (=> d!27983 (= c!17966 (and (not (= (bvand (ite c!17808 (ite c!17814 (extraKeys!2370 newMap!16) lt!52663) (extraKeys!2370 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!17808 (ite c!17814 (extraKeys!2370 newMap!16) lt!52663) (extraKeys!2370 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!27983 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!27983 (= (getCurrentListMap!482 (_keys!4263 newMap!16) (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (ite c!17808 (ite c!17814 (extraKeys!2370 newMap!16) lt!52663) (extraKeys!2370 newMap!16)) (zeroValue!2438 newMap!16) (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53128)))

(declare-fun b!104026 () Bool)

(declare-fun e!67752 () Bool)

(assert (=> b!104026 (= e!67758 e!67752)))

(declare-fun res!51897 () Bool)

(assert (=> b!104026 (=> (not res!51897) (not e!67752))))

(assert (=> b!104026 (= res!51897 (contains!825 lt!53128 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104026 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104037 () Bool)

(assert (=> b!104037 (= e!67753 e!67759)))

(declare-fun c!17967 () Bool)

(assert (=> b!104037 (= c!17967 (not (= (bvand (ite c!17808 (ite c!17814 (extraKeys!2370 newMap!16) lt!52663) (extraKeys!2370 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104038 () Bool)

(assert (=> b!104038 (= e!67752 (= (apply!97 lt!53128 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1333 (select (arr!2057 (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104038 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16)))))))))

(assert (=> b!104038 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun bm!10938 () Bool)

(assert (=> bm!10938 (= call!10938 (contains!825 lt!53128 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104039 () Bool)

(declare-fun lt!53115 () Unit!3170)

(assert (=> b!104039 (= e!67756 lt!53115)))

(declare-fun lt!53121 () ListLongMap!1579)

(assert (=> b!104039 (= lt!53121 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (ite c!17808 (ite c!17814 (extraKeys!2370 newMap!16) lt!52663) (extraKeys!2370 newMap!16)) (zeroValue!2438 newMap!16) (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53116 () (_ BitVec 64))

(assert (=> b!104039 (= lt!53116 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53127 () (_ BitVec 64))

(assert (=> b!104039 (= lt!53127 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53131 () Unit!3170)

(assert (=> b!104039 (= lt!53131 (addStillContains!73 lt!53121 lt!53116 (zeroValue!2438 newMap!16) lt!53127))))

(assert (=> b!104039 (contains!825 (+!143 lt!53121 (tuple2!2403 lt!53116 (zeroValue!2438 newMap!16))) lt!53127)))

(declare-fun lt!53124 () Unit!3170)

(assert (=> b!104039 (= lt!53124 lt!53131)))

(declare-fun lt!53126 () ListLongMap!1579)

(assert (=> b!104039 (= lt!53126 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (ite c!17808 (ite c!17814 (extraKeys!2370 newMap!16) lt!52663) (extraKeys!2370 newMap!16)) (zeroValue!2438 newMap!16) (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53125 () (_ BitVec 64))

(assert (=> b!104039 (= lt!53125 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53111 () (_ BitVec 64))

(assert (=> b!104039 (= lt!53111 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53123 () Unit!3170)

(assert (=> b!104039 (= lt!53123 (addApplyDifferent!73 lt!53126 lt!53125 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)) lt!53111))))

(assert (=> b!104039 (= (apply!97 (+!143 lt!53126 (tuple2!2403 lt!53125 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))) lt!53111) (apply!97 lt!53126 lt!53111))))

(declare-fun lt!53122 () Unit!3170)

(assert (=> b!104039 (= lt!53122 lt!53123)))

(declare-fun lt!53129 () ListLongMap!1579)

(assert (=> b!104039 (= lt!53129 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (ite c!17808 (ite c!17814 (extraKeys!2370 newMap!16) lt!52663) (extraKeys!2370 newMap!16)) (zeroValue!2438 newMap!16) (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53130 () (_ BitVec 64))

(assert (=> b!104039 (= lt!53130 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53132 () (_ BitVec 64))

(assert (=> b!104039 (= lt!53132 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53120 () Unit!3170)

(assert (=> b!104039 (= lt!53120 (addApplyDifferent!73 lt!53129 lt!53130 (zeroValue!2438 newMap!16) lt!53132))))

(assert (=> b!104039 (= (apply!97 (+!143 lt!53129 (tuple2!2403 lt!53130 (zeroValue!2438 newMap!16))) lt!53132) (apply!97 lt!53129 lt!53132))))

(declare-fun lt!53118 () Unit!3170)

(assert (=> b!104039 (= lt!53118 lt!53120)))

(declare-fun lt!53117 () ListLongMap!1579)

(assert (=> b!104039 (= lt!53117 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (ite c!17808 (ite c!17814 (extraKeys!2370 newMap!16) lt!52663) (extraKeys!2370 newMap!16)) (zeroValue!2438 newMap!16) (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53119 () (_ BitVec 64))

(assert (=> b!104039 (= lt!53119 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53114 () (_ BitVec 64))

(assert (=> b!104039 (= lt!53114 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104039 (= lt!53115 (addApplyDifferent!73 lt!53117 lt!53119 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)) lt!53114))))

(assert (=> b!104039 (= (apply!97 (+!143 lt!53117 (tuple2!2403 lt!53119 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))) lt!53114) (apply!97 lt!53117 lt!53114))))

(declare-fun b!104040 () Bool)

(assert (=> b!104040 (= e!67759 e!67751)))

(declare-fun res!51891 () Bool)

(assert (=> b!104040 (= res!51891 call!10935)))

(assert (=> b!104040 (=> (not res!51891) (not e!67751))))

(declare-fun b!104041 () Bool)

(assert (=> b!104041 (= e!67761 (not call!10938))))

(assert (= (and d!27983 c!17966) b!104036))

(assert (= (and d!27983 (not c!17966)) b!104023))

(assert (= (and b!104023 c!17969) b!104033))

(assert (= (and b!104023 (not c!17969)) b!104025))

(assert (= (and b!104025 c!17970) b!104030))

(assert (= (and b!104025 (not c!17970)) b!104034))

(assert (= (or b!104030 b!104034) bm!10934))

(assert (= (or b!104033 bm!10934) bm!10936))

(assert (= (or b!104033 b!104030) bm!10933))

(assert (= (or b!104036 bm!10936) bm!10937))

(assert (= (or b!104036 bm!10933) bm!10935))

(assert (= (and d!27983 res!51898) b!104031))

(assert (= (and d!27983 c!17965) b!104039))

(assert (= (and d!27983 (not c!17965)) b!104028))

(assert (= (and d!27983 res!51890) b!104024))

(assert (= (and b!104024 res!51895) b!104029))

(assert (= (and b!104024 (not res!51896)) b!104026))

(assert (= (and b!104026 res!51897) b!104038))

(assert (= (and b!104024 res!51893) b!104032))

(assert (= (and b!104032 c!17968) b!104021))

(assert (= (and b!104032 (not c!17968)) b!104041))

(assert (= (and b!104021 res!51894) b!104035))

(assert (= (or b!104021 b!104041) bm!10938))

(assert (= (and b!104032 res!51892) b!104037))

(assert (= (and b!104037 c!17967) b!104040))

(assert (= (and b!104037 (not c!17967)) b!104027))

(assert (= (and b!104040 res!51891) b!104022))

(assert (= (or b!104040 b!104027) bm!10932))

(declare-fun b_lambda!4661 () Bool)

(assert (=> (not b_lambda!4661) (not b!104038)))

(assert (=> b!104038 t!5720))

(declare-fun b_and!6441 () Bool)

(assert (= b_and!6437 (and (=> t!5720 result!3447) b_and!6441)))

(assert (=> b!104038 t!5722))

(declare-fun b_and!6443 () Bool)

(assert (= b_and!6439 (and (=> t!5722 result!3449) b_and!6443)))

(declare-fun m!115201 () Bool)

(assert (=> b!104022 m!115201))

(assert (=> d!27983 m!114517))

(declare-fun m!115203 () Bool)

(assert (=> bm!10938 m!115203))

(declare-fun m!115205 () Bool)

(assert (=> bm!10935 m!115205))

(assert (=> b!104031 m!114523))

(assert (=> b!104031 m!114523))

(assert (=> b!104031 m!114525))

(declare-fun m!115207 () Bool)

(assert (=> b!104039 m!115207))

(declare-fun m!115209 () Bool)

(assert (=> b!104039 m!115209))

(declare-fun m!115211 () Bool)

(assert (=> b!104039 m!115211))

(declare-fun m!115213 () Bool)

(assert (=> b!104039 m!115213))

(declare-fun m!115215 () Bool)

(assert (=> b!104039 m!115215))

(declare-fun m!115217 () Bool)

(assert (=> b!104039 m!115217))

(declare-fun m!115219 () Bool)

(assert (=> b!104039 m!115219))

(declare-fun m!115221 () Bool)

(assert (=> b!104039 m!115221))

(assert (=> b!104039 m!115219))

(declare-fun m!115223 () Bool)

(assert (=> b!104039 m!115223))

(declare-fun m!115225 () Bool)

(assert (=> b!104039 m!115225))

(declare-fun m!115227 () Bool)

(assert (=> b!104039 m!115227))

(assert (=> b!104039 m!114523))

(assert (=> b!104039 m!115215))

(declare-fun m!115229 () Bool)

(assert (=> b!104039 m!115229))

(declare-fun m!115231 () Bool)

(assert (=> b!104039 m!115231))

(declare-fun m!115233 () Bool)

(assert (=> b!104039 m!115233))

(declare-fun m!115235 () Bool)

(assert (=> b!104039 m!115235))

(assert (=> b!104039 m!115207))

(declare-fun m!115237 () Bool)

(assert (=> b!104039 m!115237))

(assert (=> b!104039 m!115229))

(assert (=> b!104038 m!114523))

(assert (=> b!104038 m!114523))

(declare-fun m!115239 () Bool)

(assert (=> b!104038 m!115239))

(declare-fun m!115241 () Bool)

(assert (=> b!104038 m!115241))

(assert (=> b!104038 m!114563))

(declare-fun m!115243 () Bool)

(assert (=> b!104038 m!115243))

(assert (=> b!104038 m!114563))

(assert (=> b!104038 m!115241))

(declare-fun m!115245 () Bool)

(assert (=> bm!10932 m!115245))

(assert (=> bm!10937 m!115213))

(assert (=> b!104026 m!114523))

(assert (=> b!104026 m!114523))

(declare-fun m!115247 () Bool)

(assert (=> b!104026 m!115247))

(declare-fun m!115249 () Bool)

(assert (=> b!104036 m!115249))

(declare-fun m!115251 () Bool)

(assert (=> b!104035 m!115251))

(assert (=> b!104029 m!114523))

(assert (=> b!104029 m!114523))

(assert (=> b!104029 m!114525))

(assert (=> bm!10828 d!27983))

(declare-fun d!27985 () Bool)

(assert (=> d!27985 (= (apply!97 lt!52789 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1336 (getValueByKey!154 (toList!805 lt!52789) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4255 () Bool)

(assert (= bs!4255 d!27985))

(assert (=> bs!4255 m!114355))

(assert (=> bs!4255 m!114991))

(assert (=> bs!4255 m!114991))

(declare-fun m!115253 () Bool)

(assert (=> bs!4255 m!115253))

(assert (=> b!103601 d!27985))

(assert (=> b!103601 d!27917))

(assert (=> bm!10843 d!27949))

(declare-fun d!27987 () Bool)

(declare-fun e!67764 () Bool)

(assert (=> d!27987 e!67764))

(declare-fun res!51899 () Bool)

(assert (=> d!27987 (=> res!51899 e!67764)))

(declare-fun lt!53136 () Bool)

(assert (=> d!27987 (= res!51899 (not lt!53136))))

(declare-fun lt!53134 () Bool)

(assert (=> d!27987 (= lt!53136 lt!53134)))

(declare-fun lt!53133 () Unit!3170)

(declare-fun e!67763 () Unit!3170)

(assert (=> d!27987 (= lt!53133 e!67763)))

(declare-fun c!17971 () Bool)

(assert (=> d!27987 (= c!17971 lt!53134)))

(assert (=> d!27987 (= lt!53134 (containsKey!158 (toList!805 lt!52789) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27987 (= (contains!825 lt!52789 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53136)))

(declare-fun b!104042 () Bool)

(declare-fun lt!53135 () Unit!3170)

(assert (=> b!104042 (= e!67763 lt!53135)))

(assert (=> b!104042 (= lt!53135 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52789) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104042 (isDefined!108 (getValueByKey!154 (toList!805 lt!52789) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104043 () Bool)

(declare-fun Unit!3200 () Unit!3170)

(assert (=> b!104043 (= e!67763 Unit!3200)))

(declare-fun b!104044 () Bool)

(assert (=> b!104044 (= e!67764 (isDefined!108 (getValueByKey!154 (toList!805 lt!52789) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27987 c!17971) b!104042))

(assert (= (and d!27987 (not c!17971)) b!104043))

(assert (= (and d!27987 (not res!51899)) b!104044))

(declare-fun m!115255 () Bool)

(assert (=> d!27987 m!115255))

(declare-fun m!115257 () Bool)

(assert (=> b!104042 m!115257))

(declare-fun m!115259 () Bool)

(assert (=> b!104042 m!115259))

(assert (=> b!104042 m!115259))

(declare-fun m!115261 () Bool)

(assert (=> b!104042 m!115261))

(assert (=> b!104044 m!115259))

(assert (=> b!104044 m!115259))

(assert (=> b!104044 m!115261))

(assert (=> b!103599 d!27987))

(declare-fun d!27989 () Bool)

(declare-fun isEmpty!374 (Option!160) Bool)

(assert (=> d!27989 (= (isDefined!108 (getValueByKey!154 (toList!805 lt!52550) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))) (not (isEmpty!374 (getValueByKey!154 (toList!805 lt!52550) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))))

(declare-fun bs!4256 () Bool)

(assert (= bs!4256 d!27989))

(assert (=> bs!4256 m!114291))

(declare-fun m!115263 () Bool)

(assert (=> bs!4256 m!115263))

(assert (=> b!103336 d!27989))

(declare-fun b!104046 () Bool)

(declare-fun e!67765 () Option!160)

(declare-fun e!67766 () Option!160)

(assert (=> b!104046 (= e!67765 e!67766)))

(declare-fun c!17973 () Bool)

(assert (=> b!104046 (= c!17973 (and ((_ is Cons!1633) (toList!805 lt!52550)) (not (= (_1!1211 (h!2229 (toList!805 lt!52550))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))))

(declare-fun b!104045 () Bool)

(assert (=> b!104045 (= e!67765 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52550)))))))

(declare-fun b!104047 () Bool)

(assert (=> b!104047 (= e!67766 (getValueByKey!154 (t!5711 (toList!805 lt!52550)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun d!27991 () Bool)

(declare-fun c!17972 () Bool)

(assert (=> d!27991 (= c!17972 (and ((_ is Cons!1633) (toList!805 lt!52550)) (= (_1!1211 (h!2229 (toList!805 lt!52550))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))))

(assert (=> d!27991 (= (getValueByKey!154 (toList!805 lt!52550) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) e!67765)))

(declare-fun b!104048 () Bool)

(assert (=> b!104048 (= e!67766 None!158)))

(assert (= (and d!27991 c!17972) b!104045))

(assert (= (and d!27991 (not c!17972)) b!104046))

(assert (= (and b!104046 c!17973) b!104047))

(assert (= (and b!104046 (not c!17973)) b!104048))

(assert (=> b!104047 m!114187))

(declare-fun m!115265 () Bool)

(assert (=> b!104047 m!115265))

(assert (=> b!103336 d!27991))

(declare-fun d!27993 () Bool)

(declare-fun e!67767 () Bool)

(assert (=> d!27993 e!67767))

(declare-fun res!51901 () Bool)

(assert (=> d!27993 (=> (not res!51901) (not e!67767))))

(declare-fun lt!53137 () ListLongMap!1579)

(assert (=> d!27993 (= res!51901 (contains!825 lt!53137 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun lt!53140 () List!1637)

(assert (=> d!27993 (= lt!53137 (ListLongMap!1580 lt!53140))))

(declare-fun lt!53139 () Unit!3170)

(declare-fun lt!53138 () Unit!3170)

(assert (=> d!27993 (= lt!53139 lt!53138)))

(assert (=> d!27993 (= (getValueByKey!154 lt!53140 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27993 (= lt!53138 (lemmaContainsTupThenGetReturnValue!72 lt!53140 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27993 (= lt!53140 (insertStrictlySorted!74 (toList!805 call!10877) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!27993 (= (+!143 call!10877 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!53137)))

(declare-fun b!104049 () Bool)

(declare-fun res!51900 () Bool)

(assert (=> b!104049 (=> (not res!51900) (not e!67767))))

(assert (=> b!104049 (= res!51900 (= (getValueByKey!154 (toList!805 lt!53137) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!104050 () Bool)

(assert (=> b!104050 (= e!67767 (contains!828 (toList!805 lt!53137) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(assert (= (and d!27993 res!51901) b!104049))

(assert (= (and b!104049 res!51900) b!104050))

(declare-fun m!115267 () Bool)

(assert (=> d!27993 m!115267))

(declare-fun m!115269 () Bool)

(assert (=> d!27993 m!115269))

(declare-fun m!115271 () Bool)

(assert (=> d!27993 m!115271))

(declare-fun m!115273 () Bool)

(assert (=> d!27993 m!115273))

(declare-fun m!115275 () Bool)

(assert (=> b!104049 m!115275))

(declare-fun m!115277 () Bool)

(assert (=> b!104050 m!115277))

(assert (=> b!103547 d!27993))

(assert (=> b!103432 d!27811))

(assert (=> b!103485 d!27901))

(declare-fun b!104059 () Bool)

(declare-fun e!67775 () Bool)

(declare-fun e!67774 () Bool)

(assert (=> b!104059 (= e!67775 e!67774)))

(declare-fun c!17976 () Bool)

(assert (=> b!104059 (= c!17976 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104060 () Bool)

(declare-fun call!10944 () Bool)

(assert (=> b!104060 (= e!67774 call!10944)))

(declare-fun b!104061 () Bool)

(declare-fun e!67776 () Bool)

(assert (=> b!104061 (= e!67776 call!10944)))

(declare-fun bm!10941 () Bool)

(assert (=> bm!10941 (= call!10944 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun d!27995 () Bool)

(declare-fun res!51907 () Bool)

(assert (=> d!27995 (=> res!51907 e!67775)))

(assert (=> d!27995 (= res!51907 (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!27995 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4263 newMap!16) (mask!6697 newMap!16)) e!67775)))

(declare-fun b!104062 () Bool)

(assert (=> b!104062 (= e!67774 e!67776)))

(declare-fun lt!53148 () (_ BitVec 64))

(assert (=> b!104062 (= lt!53148 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53149 () Unit!3170)

(assert (=> b!104062 (= lt!53149 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4263 newMap!16) lt!53148 #b00000000000000000000000000000000))))

(assert (=> b!104062 (arrayContainsKey!0 (_keys!4263 newMap!16) lt!53148 #b00000000000000000000000000000000)))

(declare-fun lt!53147 () Unit!3170)

(assert (=> b!104062 (= lt!53147 lt!53149)))

(declare-fun res!51906 () Bool)

(assert (=> b!104062 (= res!51906 (= (seekEntryOrOpen!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) (_keys!4263 newMap!16) (mask!6697 newMap!16)) (Found!268 #b00000000000000000000000000000000)))))

(assert (=> b!104062 (=> (not res!51906) (not e!67776))))

(assert (= (and d!27995 (not res!51907)) b!104059))

(assert (= (and b!104059 c!17976) b!104062))

(assert (= (and b!104059 (not c!17976)) b!104060))

(assert (= (and b!104062 res!51906) b!104061))

(assert (= (or b!104061 b!104060) bm!10941))

(assert (=> b!104059 m!114523))

(assert (=> b!104059 m!114523))

(assert (=> b!104059 m!114525))

(declare-fun m!115279 () Bool)

(assert (=> bm!10941 m!115279))

(assert (=> b!104062 m!114523))

(declare-fun m!115281 () Bool)

(assert (=> b!104062 m!115281))

(declare-fun m!115283 () Bool)

(assert (=> b!104062 m!115283))

(assert (=> b!104062 m!114523))

(declare-fun m!115285 () Bool)

(assert (=> b!104062 m!115285))

(assert (=> b!103566 d!27995))

(assert (=> d!27779 d!27807))

(declare-fun d!27997 () Bool)

(assert (=> d!27997 (= (+!143 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52663 (zeroValue!2438 newMap!16) lt!52546 #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53152 () Unit!3170)

(declare-fun choose!655 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 V!3211 Int) Unit!3170)

(assert (=> d!27997 (= lt!53152 (choose!655 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) lt!52663 (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) lt!52546 (defaultEntry!2561 newMap!16)))))

(assert (=> d!27997 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!27997 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) lt!52663 (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) lt!52546 (defaultEntry!2561 newMap!16)) lt!53152)))

(declare-fun bs!4257 () Bool)

(assert (= bs!4257 d!27997))

(assert (=> bs!4257 m!114295))

(declare-fun m!115287 () Bool)

(assert (=> bs!4257 m!115287))

(declare-fun m!115289 () Bool)

(assert (=> bs!4257 m!115289))

(assert (=> bs!4257 m!114295))

(assert (=> bs!4257 m!114517))

(declare-fun m!115291 () Bool)

(assert (=> bs!4257 m!115291))

(assert (=> b!103458 d!27997))

(declare-fun d!27999 () Bool)

(assert (=> d!27999 (isDefined!108 (getValueByKey!154 (toList!805 lt!52550) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun lt!53155 () Unit!3170)

(declare-fun choose!656 (List!1637 (_ BitVec 64)) Unit!3170)

(assert (=> d!27999 (= lt!53155 (choose!656 (toList!805 lt!52550) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun e!67779 () Bool)

(assert (=> d!27999 e!67779))

(declare-fun res!51910 () Bool)

(assert (=> d!27999 (=> (not res!51910) (not e!67779))))

(assert (=> d!27999 (= res!51910 (isStrictlySorted!303 (toList!805 lt!52550)))))

(assert (=> d!27999 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52550) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) lt!53155)))

(declare-fun b!104065 () Bool)

(assert (=> b!104065 (= e!67779 (containsKey!158 (toList!805 lt!52550) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (= (and d!27999 res!51910) b!104065))

(assert (=> d!27999 m!114187))

(assert (=> d!27999 m!114291))

(assert (=> d!27999 m!114291))

(assert (=> d!27999 m!114293))

(assert (=> d!27999 m!114187))

(declare-fun m!115293 () Bool)

(assert (=> d!27999 m!115293))

(declare-fun m!115295 () Bool)

(assert (=> d!27999 m!115295))

(assert (=> b!104065 m!114187))

(assert (=> b!104065 m!114287))

(assert (=> b!103334 d!27999))

(assert (=> b!103334 d!27989))

(assert (=> b!103334 d!27991))

(declare-fun d!28001 () Bool)

(assert (=> d!28001 (= (+!143 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52673 lt!52546 (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53158 () Unit!3170)

(declare-fun choose!657 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 V!3211 Int) Unit!3170)

(assert (=> d!28001 (= lt!53158 (choose!657 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) lt!52673 (zeroValue!2438 newMap!16) lt!52546 (minValue!2438 newMap!16) (defaultEntry!2561 newMap!16)))))

(assert (=> d!28001 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28001 (= (lemmaChangeZeroKeyThenAddPairToListMap!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) lt!52673 (zeroValue!2438 newMap!16) lt!52546 (minValue!2438 newMap!16) (defaultEntry!2561 newMap!16)) lt!53158)))

(declare-fun bs!4258 () Bool)

(assert (= bs!4258 d!28001))

(assert (=> bs!4258 m!114295))

(declare-fun m!115297 () Bool)

(assert (=> bs!4258 m!115297))

(declare-fun m!115299 () Bool)

(assert (=> bs!4258 m!115299))

(assert (=> bs!4258 m!114517))

(assert (=> bs!4258 m!114295))

(declare-fun m!115301 () Bool)

(assert (=> bs!4258 m!115301))

(assert (=> b!103444 d!28001))

(declare-fun d!28003 () Bool)

(declare-fun e!67781 () Bool)

(assert (=> d!28003 e!67781))

(declare-fun res!51911 () Bool)

(assert (=> d!28003 (=> res!51911 e!67781)))

(declare-fun lt!53162 () Bool)

(assert (=> d!28003 (= res!51911 (not lt!53162))))

(declare-fun lt!53160 () Bool)

(assert (=> d!28003 (= lt!53162 lt!53160)))

(declare-fun lt!53159 () Unit!3170)

(declare-fun e!67780 () Unit!3170)

(assert (=> d!28003 (= lt!53159 e!67780)))

(declare-fun c!17977 () Bool)

(assert (=> d!28003 (= c!17977 lt!53160)))

(assert (=> d!28003 (= lt!53160 (containsKey!158 (toList!805 lt!52766) (_1!1211 lt!52547)))))

(assert (=> d!28003 (= (contains!825 lt!52766 (_1!1211 lt!52547)) lt!53162)))

(declare-fun b!104066 () Bool)

(declare-fun lt!53161 () Unit!3170)

(assert (=> b!104066 (= e!67780 lt!53161)))

(assert (=> b!104066 (= lt!53161 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52766) (_1!1211 lt!52547)))))

(assert (=> b!104066 (isDefined!108 (getValueByKey!154 (toList!805 lt!52766) (_1!1211 lt!52547)))))

(declare-fun b!104067 () Bool)

(declare-fun Unit!3201 () Unit!3170)

(assert (=> b!104067 (= e!67780 Unit!3201)))

(declare-fun b!104068 () Bool)

(assert (=> b!104068 (= e!67781 (isDefined!108 (getValueByKey!154 (toList!805 lt!52766) (_1!1211 lt!52547))))))

(assert (= (and d!28003 c!17977) b!104066))

(assert (= (and d!28003 (not c!17977)) b!104067))

(assert (= (and d!28003 (not res!51911)) b!104068))

(declare-fun m!115303 () Bool)

(assert (=> d!28003 m!115303))

(declare-fun m!115305 () Bool)

(assert (=> b!104066 m!115305))

(assert (=> b!104066 m!114441))

(assert (=> b!104066 m!114441))

(declare-fun m!115307 () Bool)

(assert (=> b!104066 m!115307))

(assert (=> b!104068 m!114441))

(assert (=> b!104068 m!114441))

(assert (=> b!104068 m!115307))

(assert (=> d!27795 d!28003))

(declare-fun b!104070 () Bool)

(declare-fun e!67782 () Option!160)

(declare-fun e!67783 () Option!160)

(assert (=> b!104070 (= e!67782 e!67783)))

(declare-fun c!17979 () Bool)

(assert (=> b!104070 (= c!17979 (and ((_ is Cons!1633) lt!52769) (not (= (_1!1211 (h!2229 lt!52769)) (_1!1211 lt!52547)))))))

(declare-fun b!104069 () Bool)

(assert (=> b!104069 (= e!67782 (Some!159 (_2!1211 (h!2229 lt!52769))))))

(declare-fun b!104071 () Bool)

(assert (=> b!104071 (= e!67783 (getValueByKey!154 (t!5711 lt!52769) (_1!1211 lt!52547)))))

(declare-fun d!28005 () Bool)

(declare-fun c!17978 () Bool)

(assert (=> d!28005 (= c!17978 (and ((_ is Cons!1633) lt!52769) (= (_1!1211 (h!2229 lt!52769)) (_1!1211 lt!52547))))))

(assert (=> d!28005 (= (getValueByKey!154 lt!52769 (_1!1211 lt!52547)) e!67782)))

(declare-fun b!104072 () Bool)

(assert (=> b!104072 (= e!67783 None!158)))

(assert (= (and d!28005 c!17978) b!104069))

(assert (= (and d!28005 (not c!17978)) b!104070))

(assert (= (and b!104070 c!17979) b!104071))

(assert (= (and b!104070 (not c!17979)) b!104072))

(declare-fun m!115309 () Bool)

(assert (=> b!104071 m!115309))

(assert (=> d!27795 d!28005))

(declare-fun d!28007 () Bool)

(assert (=> d!28007 (= (getValueByKey!154 lt!52769 (_1!1211 lt!52547)) (Some!159 (_2!1211 lt!52547)))))

(declare-fun lt!53163 () Unit!3170)

(assert (=> d!28007 (= lt!53163 (choose!650 lt!52769 (_1!1211 lt!52547) (_2!1211 lt!52547)))))

(declare-fun e!67784 () Bool)

(assert (=> d!28007 e!67784))

(declare-fun res!51912 () Bool)

(assert (=> d!28007 (=> (not res!51912) (not e!67784))))

(assert (=> d!28007 (= res!51912 (isStrictlySorted!303 lt!52769))))

(assert (=> d!28007 (= (lemmaContainsTupThenGetReturnValue!72 lt!52769 (_1!1211 lt!52547) (_2!1211 lt!52547)) lt!53163)))

(declare-fun b!104073 () Bool)

(declare-fun res!51913 () Bool)

(assert (=> b!104073 (=> (not res!51913) (not e!67784))))

(assert (=> b!104073 (= res!51913 (containsKey!158 lt!52769 (_1!1211 lt!52547)))))

(declare-fun b!104074 () Bool)

(assert (=> b!104074 (= e!67784 (contains!828 lt!52769 (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))))))

(assert (= (and d!28007 res!51912) b!104073))

(assert (= (and b!104073 res!51913) b!104074))

(assert (=> d!28007 m!114435))

(declare-fun m!115311 () Bool)

(assert (=> d!28007 m!115311))

(declare-fun m!115313 () Bool)

(assert (=> d!28007 m!115313))

(declare-fun m!115315 () Bool)

(assert (=> b!104073 m!115315))

(declare-fun m!115317 () Bool)

(assert (=> b!104074 m!115317))

(assert (=> d!27795 d!28007))

(declare-fun b!104075 () Bool)

(declare-fun e!67785 () Bool)

(declare-fun lt!53164 () List!1637)

(assert (=> b!104075 (= e!67785 (contains!828 lt!53164 (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))))))

(declare-fun b!104076 () Bool)

(declare-fun e!67789 () List!1637)

(declare-fun call!10947 () List!1637)

(assert (=> b!104076 (= e!67789 call!10947)))

(declare-fun bm!10942 () Bool)

(declare-fun call!10945 () List!1637)

(declare-fun call!10946 () List!1637)

(assert (=> bm!10942 (= call!10945 call!10946)))

(declare-fun b!104077 () Bool)

(assert (=> b!104077 (= e!67789 call!10947)))

(declare-fun c!17982 () Bool)

(declare-fun b!104078 () Bool)

(assert (=> b!104078 (= c!17982 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52542 lt!52551))) (bvsgt (_1!1211 (h!2229 (toList!805 (+!143 lt!52542 lt!52551)))) (_1!1211 lt!52547))))))

(declare-fun e!67786 () List!1637)

(assert (=> b!104078 (= e!67786 e!67789)))

(declare-fun bm!10943 () Bool)

(assert (=> bm!10943 (= call!10947 call!10945)))

(declare-fun b!104079 () Bool)

(declare-fun e!67788 () List!1637)

(assert (=> b!104079 (= e!67788 (insertStrictlySorted!74 (t!5711 (toList!805 (+!143 lt!52542 lt!52551))) (_1!1211 lt!52547) (_2!1211 lt!52547)))))

(declare-fun b!104080 () Bool)

(declare-fun res!51915 () Bool)

(assert (=> b!104080 (=> (not res!51915) (not e!67785))))

(assert (=> b!104080 (= res!51915 (containsKey!158 lt!53164 (_1!1211 lt!52547)))))

(declare-fun bm!10944 () Bool)

(declare-fun c!17983 () Bool)

(assert (=> bm!10944 (= call!10946 ($colon$colon!79 e!67788 (ite c!17983 (h!2229 (toList!805 (+!143 lt!52542 lt!52551))) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547)))))))

(declare-fun c!17981 () Bool)

(assert (=> bm!10944 (= c!17981 c!17983)))

(declare-fun d!28009 () Bool)

(assert (=> d!28009 e!67785))

(declare-fun res!51914 () Bool)

(assert (=> d!28009 (=> (not res!51914) (not e!67785))))

(assert (=> d!28009 (= res!51914 (isStrictlySorted!303 lt!53164))))

(declare-fun e!67787 () List!1637)

(assert (=> d!28009 (= lt!53164 e!67787)))

(assert (=> d!28009 (= c!17983 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52542 lt!52551))) (bvslt (_1!1211 (h!2229 (toList!805 (+!143 lt!52542 lt!52551)))) (_1!1211 lt!52547))))))

(assert (=> d!28009 (isStrictlySorted!303 (toList!805 (+!143 lt!52542 lt!52551)))))

(assert (=> d!28009 (= (insertStrictlySorted!74 (toList!805 (+!143 lt!52542 lt!52551)) (_1!1211 lt!52547) (_2!1211 lt!52547)) lt!53164)))

(declare-fun b!104081 () Bool)

(assert (=> b!104081 (= e!67787 e!67786)))

(declare-fun c!17980 () Bool)

(assert (=> b!104081 (= c!17980 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52542 lt!52551))) (= (_1!1211 (h!2229 (toList!805 (+!143 lt!52542 lt!52551)))) (_1!1211 lt!52547))))))

(declare-fun b!104082 () Bool)

(assert (=> b!104082 (= e!67786 call!10945)))

(declare-fun b!104083 () Bool)

(assert (=> b!104083 (= e!67787 call!10946)))

(declare-fun b!104084 () Bool)

(assert (=> b!104084 (= e!67788 (ite c!17980 (t!5711 (toList!805 (+!143 lt!52542 lt!52551))) (ite c!17982 (Cons!1633 (h!2229 (toList!805 (+!143 lt!52542 lt!52551))) (t!5711 (toList!805 (+!143 lt!52542 lt!52551)))) Nil!1634)))))

(assert (= (and d!28009 c!17983) b!104083))

(assert (= (and d!28009 (not c!17983)) b!104081))

(assert (= (and b!104081 c!17980) b!104082))

(assert (= (and b!104081 (not c!17980)) b!104078))

(assert (= (and b!104078 c!17982) b!104077))

(assert (= (and b!104078 (not c!17982)) b!104076))

(assert (= (or b!104077 b!104076) bm!10943))

(assert (= (or b!104082 bm!10943) bm!10942))

(assert (= (or b!104083 bm!10942) bm!10944))

(assert (= (and bm!10944 c!17981) b!104079))

(assert (= (and bm!10944 (not c!17981)) b!104084))

(assert (= (and d!28009 res!51914) b!104080))

(assert (= (and b!104080 res!51915) b!104075))

(declare-fun m!115319 () Bool)

(assert (=> b!104080 m!115319))

(declare-fun m!115321 () Bool)

(assert (=> bm!10944 m!115321))

(declare-fun m!115323 () Bool)

(assert (=> d!28009 m!115323))

(declare-fun m!115325 () Bool)

(assert (=> d!28009 m!115325))

(declare-fun m!115327 () Bool)

(assert (=> b!104075 m!115327))

(declare-fun m!115329 () Bool)

(assert (=> b!104079 m!115329))

(assert (=> d!27795 d!28009))

(declare-fun b!104094 () Bool)

(declare-fun res!51925 () Bool)

(declare-fun e!67792 () Bool)

(assert (=> b!104094 (=> (not res!51925) (not e!67792))))

(declare-fun size!2314 (LongMapFixedSize!894) (_ BitVec 32))

(assert (=> b!104094 (= res!51925 (bvsge (size!2314 newMap!16) (_size!496 newMap!16)))))

(declare-fun b!104095 () Bool)

(declare-fun res!51924 () Bool)

(assert (=> b!104095 (=> (not res!51924) (not e!67792))))

(assert (=> b!104095 (= res!51924 (= (size!2314 newMap!16) (bvadd (_size!496 newMap!16) (bvsdiv (bvadd (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!104093 () Bool)

(declare-fun res!51927 () Bool)

(assert (=> b!104093 (=> (not res!51927) (not e!67792))))

(assert (=> b!104093 (= res!51927 (and (= (size!2311 (_values!2544 newMap!16)) (bvadd (mask!6697 newMap!16) #b00000000000000000000000000000001)) (= (size!2310 (_keys!4263 newMap!16)) (size!2311 (_values!2544 newMap!16))) (bvsge (_size!496 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!496 newMap!16) (bvadd (mask!6697 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun d!28011 () Bool)

(declare-fun res!51926 () Bool)

(assert (=> d!28011 (=> (not res!51926) (not e!67792))))

(assert (=> d!28011 (= res!51926 (validMask!0 (mask!6697 newMap!16)))))

(assert (=> d!28011 (= (simpleValid!72 newMap!16) e!67792)))

(declare-fun b!104096 () Bool)

(assert (=> b!104096 (= e!67792 (and (bvsge (extraKeys!2370 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2370 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!496 newMap!16) #b00000000000000000000000000000000)))))

(assert (= (and d!28011 res!51926) b!104093))

(assert (= (and b!104093 res!51927) b!104094))

(assert (= (and b!104094 res!51925) b!104095))

(assert (= (and b!104095 res!51924) b!104096))

(declare-fun m!115331 () Bool)

(assert (=> b!104094 m!115331))

(assert (=> b!104095 m!115331))

(assert (=> d!28011 m!114517))

(assert (=> d!27791 d!28011))

(assert (=> b!103542 d!27809))

(assert (=> bm!10834 d!27777))

(assert (=> b!103473 d!27771))

(declare-fun b!104098 () Bool)

(declare-fun e!67794 () Bool)

(assert (=> b!104098 (= e!67794 tp_is_empty!2673)))

(declare-fun mapIsEmpty!3915 () Bool)

(declare-fun mapRes!3915 () Bool)

(assert (=> mapIsEmpty!3915 mapRes!3915))

(declare-fun mapNonEmpty!3915 () Bool)

(declare-fun tp!9873 () Bool)

(declare-fun e!67793 () Bool)

(assert (=> mapNonEmpty!3915 (= mapRes!3915 (and tp!9873 e!67793))))

(declare-fun mapRest!3915 () (Array (_ BitVec 32) ValueCell!993))

(declare-fun mapKey!3915 () (_ BitVec 32))

(declare-fun mapValue!3915 () ValueCell!993)

(assert (=> mapNonEmpty!3915 (= mapRest!3913 (store mapRest!3915 mapKey!3915 mapValue!3915))))

(declare-fun b!104097 () Bool)

(assert (=> b!104097 (= e!67793 tp_is_empty!2673)))

(declare-fun condMapEmpty!3915 () Bool)

(declare-fun mapDefault!3915 () ValueCell!993)

(assert (=> mapNonEmpty!3913 (= condMapEmpty!3915 (= mapRest!3913 ((as const (Array (_ BitVec 32) ValueCell!993)) mapDefault!3915)))))

(assert (=> mapNonEmpty!3913 (= tp!9871 (and e!67794 mapRes!3915))))

(assert (= (and mapNonEmpty!3913 condMapEmpty!3915) mapIsEmpty!3915))

(assert (= (and mapNonEmpty!3913 (not condMapEmpty!3915)) mapNonEmpty!3915))

(assert (= (and mapNonEmpty!3915 ((_ is ValueCellFull!993) mapValue!3915)) b!104097))

(assert (= (and mapNonEmpty!3913 ((_ is ValueCellFull!993) mapDefault!3915)) b!104098))

(declare-fun m!115333 () Bool)

(assert (=> mapNonEmpty!3915 m!115333))

(declare-fun b!104100 () Bool)

(declare-fun e!67796 () Bool)

(assert (=> b!104100 (= e!67796 tp_is_empty!2673)))

(declare-fun mapIsEmpty!3916 () Bool)

(declare-fun mapRes!3916 () Bool)

(assert (=> mapIsEmpty!3916 mapRes!3916))

(declare-fun mapNonEmpty!3916 () Bool)

(declare-fun tp!9874 () Bool)

(declare-fun e!67795 () Bool)

(assert (=> mapNonEmpty!3916 (= mapRes!3916 (and tp!9874 e!67795))))

(declare-fun mapValue!3916 () ValueCell!993)

(declare-fun mapRest!3916 () (Array (_ BitVec 32) ValueCell!993))

(declare-fun mapKey!3916 () (_ BitVec 32))

(assert (=> mapNonEmpty!3916 (= mapRest!3914 (store mapRest!3916 mapKey!3916 mapValue!3916))))

(declare-fun b!104099 () Bool)

(assert (=> b!104099 (= e!67795 tp_is_empty!2673)))

(declare-fun condMapEmpty!3916 () Bool)

(declare-fun mapDefault!3916 () ValueCell!993)

(assert (=> mapNonEmpty!3914 (= condMapEmpty!3916 (= mapRest!3914 ((as const (Array (_ BitVec 32) ValueCell!993)) mapDefault!3916)))))

(assert (=> mapNonEmpty!3914 (= tp!9872 (and e!67796 mapRes!3916))))

(assert (= (and mapNonEmpty!3914 condMapEmpty!3916) mapIsEmpty!3916))

(assert (= (and mapNonEmpty!3914 (not condMapEmpty!3916)) mapNonEmpty!3916))

(assert (= (and mapNonEmpty!3916 ((_ is ValueCellFull!993) mapValue!3916)) b!104099))

(assert (= (and mapNonEmpty!3914 ((_ is ValueCellFull!993) mapDefault!3916)) b!104100))

(declare-fun m!115335 () Bool)

(assert (=> mapNonEmpty!3916 m!115335))

(declare-fun b_lambda!4663 () Bool)

(assert (= b_lambda!4661 (or (and b!103261 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103249 b_free!2515) b_lambda!4663)))

(declare-fun b_lambda!4665 () Bool)

(assert (= b_lambda!4657 (or (and b!103261 b_free!2513) (and b!103249 b_free!2515 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))))) b_lambda!4665)))

(declare-fun b_lambda!4667 () Bool)

(assert (= b_lambda!4653 (or (and b!103261 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103249 b_free!2515) b_lambda!4667)))

(declare-fun b_lambda!4669 () Bool)

(assert (= b_lambda!4655 (or (and b!103261 b_free!2513) (and b!103249 b_free!2515 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))))) b_lambda!4669)))

(declare-fun b_lambda!4671 () Bool)

(assert (= b_lambda!4659 (or (and b!103261 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103249 b_free!2515) b_lambda!4671)))

(check-sat (not d!27879) (not b!104095) (not b!103882) (not bm!10935) (not b!103744) (not b!103761) (not d!27845) (not b!103718) (not b!103798) (not b!103765) (not b!103915) (not b!104075) (not b!104079) (not d!27951) (not d!28007) (not d!27891) (not d!27983) (not bm!10937) (not bm!10902) (not d!27833) (not d!28001) (not b!104066) (not b!103903) (not b!103712) (not b!103749) (not b!104044) (not b_lambda!4663) (not b!104002) (not b!103826) (not b!104031) (not b!103693) (not b!103913) (not b!103746) (not b!103847) (not b!103893) (not b!103750) (not d!27921) (not d!27963) (not b!104026) (not d!27941) (not bm!10932) (not b!103816) (not b!104073) (not d!27953) (not d!27919) (not b!103738) b_and!6443 (not b!103724) (not b!103991) (not b!104059) (not b_lambda!4671) (not b!103999) (not b_lambda!4647) (not d!27913) (not b!103985) (not d!27907) (not b!103695) (not b!103788) (not d!27893) (not b!103810) (not bm!10885) (not b!103859) (not d!27937) (not b!103917) (not b!103805) (not b!103814) (not bm!10944) (not bm!10930) (not b!103644) (not b!103688) (not b!103871) (not b!103807) (not b!104039) (not bm!10915) (not d!27865) (not d!27899) (not b!103862) (not b!104000) (not d!27929) (not d!27817) (not b!103634) (not b!103962) (not b!103896) (not b!103641) (not d!27987) (not b_lambda!4639) (not d!27887) (not b!103752) (not b!104042) (not d!27955) (not b!103919) (not b!104062) (not bm!10905) (not b!103778) (not b!103777) (not b!103964) (not b!104038) (not d!27915) (not bm!10938) (not d!27813) (not bm!10898) (not b!104065) (not b!103692) (not b_lambda!4651) (not b!103908) (not b!103753) (not d!27981) (not b!103627) (not b!103994) (not b!103774) (not d!27861) (not b!104009) (not b!104020) (not b!103731) (not b!104004) (not b!103775) (not d!27973) (not d!27943) (not b!103640) (not d!27841) (not b!103687) (not b!103739) (not b_next!2513) (not d!27985) (not bm!10879) (not d!27827) (not d!28011) (not d!27863) (not b!103885) (not b!103802) (not b!103880) (not bm!10925) (not d!27933) (not d!27931) (not bm!10897) b_and!6441 (not b!104029) (not d!27909) (not b!103743) (not b!103983) (not d!27961) (not b!103729) (not d!27847) (not b!104035) (not bm!10941) (not b!103708) (not d!27927) (not b!104018) (not d!28003) (not b!103728) (not b!103790) (not mapNonEmpty!3915) (not d!27923) (not d!27869) (not bm!10918) (not b!103887) (not b!104080) (not d!28009) (not b!103809) (not b!103864) (not d!27977) (not bm!10922) (not b!103745) (not b!104047) (not d!27959) (not b!103758) (not b!103825) (not b!103770) tp_is_empty!2673 (not b!104005) (not bm!10895) (not b!103741) (not b_lambda!4665) (not b!104008) (not b!103800) (not b!103894) (not d!27947) (not mapNonEmpty!3916) (not b!103857) (not bm!10904) (not b!103988) (not bm!10906) (not b!104001) (not d!27873) (not d!27881) (not b!104068) (not b!103992) (not b!103819) (not b!103636) (not b!104050) (not b!104017) (not d!27871) (not b!103852) (not b!103799) (not b!103643) (not b!103866) (not b_next!2515) (not b!103730) (not bm!10899) (not b_lambda!4649) (not b!103727) (not bm!10882) (not b!103998) (not b!104049) (not d!27859) (not b!103736) (not d!27903) (not b!104010) (not d!27843) (not bm!10921) (not b!103803) (not bm!10894) (not d!27825) (not b!103768) (not d!27993) (not b!103899) (not b_lambda!4667) (not d!27999) (not d!27897) (not b!103686) (not d!27849) (not d!27945) (not d!27839) (not b!103796) (not b!103631) (not b!103726) (not d!27829) (not b!103907) (not b!103865) (not b!103742) (not b!103979) (not b!103883) (not b!103929) (not b!103902) (not b!103993) (not b!103782) (not b!103755) (not b!103812) (not b!104036) (not b!104071) (not b!103733) (not d!27979) (not d!27837) (not b!103747) (not b!104007) (not b!103916) (not b!103851) (not b!103797) (not b!103740) (not d!27971) (not b!103878) (not b!103870) (not d!27877) (not d!27857) (not d!27957) (not d!27997) (not b!103996) (not d!27975) (not b!103801) (not b!103759) (not b!104022) (not d!27883) (not d!27949) (not d!27875) (not d!27811) (not d!27823) (not b!103884) (not d!27867) (not b!104011) (not d!27989) (not b!104074) (not bm!10931) (not b!104094) (not d!27885) (not bm!10884) (not b!103901) (not b!103751) (not b_lambda!4669) (not d!27965))
(check-sat b_and!6441 b_and!6443 (not b_next!2513) (not b_next!2515))
(get-model)

(assert (=> d!27897 d!27895))

(declare-fun d!28013 () Bool)

(assert (=> d!28013 (= (getValueByKey!154 lt!52798 (_1!1211 lt!52551)) (Some!159 (_2!1211 lt!52551)))))

(assert (=> d!28013 true))

(declare-fun _$22!427 () Unit!3170)

(assert (=> d!28013 (= (choose!650 lt!52798 (_1!1211 lt!52551) (_2!1211 lt!52551)) _$22!427)))

(declare-fun bs!4259 () Bool)

(assert (= bs!4259 d!28013))

(assert (=> bs!4259 m!114479))

(assert (=> d!27897 d!28013))

(declare-fun d!28015 () Bool)

(declare-fun res!51932 () Bool)

(declare-fun e!67801 () Bool)

(assert (=> d!28015 (=> res!51932 e!67801)))

(assert (=> d!28015 (= res!51932 (or ((_ is Nil!1634) lt!52798) ((_ is Nil!1634) (t!5711 lt!52798))))))

(assert (=> d!28015 (= (isStrictlySorted!303 lt!52798) e!67801)))

(declare-fun b!104105 () Bool)

(declare-fun e!67802 () Bool)

(assert (=> b!104105 (= e!67801 e!67802)))

(declare-fun res!51933 () Bool)

(assert (=> b!104105 (=> (not res!51933) (not e!67802))))

(assert (=> b!104105 (= res!51933 (bvslt (_1!1211 (h!2229 lt!52798)) (_1!1211 (h!2229 (t!5711 lt!52798)))))))

(declare-fun b!104106 () Bool)

(assert (=> b!104106 (= e!67802 (isStrictlySorted!303 (t!5711 lt!52798)))))

(assert (= (and d!28015 (not res!51932)) b!104105))

(assert (= (and b!104105 res!51933) b!104106))

(declare-fun m!115337 () Bool)

(assert (=> b!104106 m!115337))

(assert (=> d!27897 d!28015))

(declare-fun d!28017 () Bool)

(assert (not d!28017))

(assert (=> b!103893 d!28017))

(assert (=> d!27885 d!27881))

(assert (=> d!27885 d!27869))

(declare-fun d!28019 () Bool)

(assert (=> d!28019 (contains!825 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52752)))

(assert (=> d!28019 true))

(declare-fun _$35!345 () Unit!3170)

(assert (=> d!28019 (= (choose!649 lt!52746 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) lt!52752) _$35!345)))

(declare-fun bs!4260 () Bool)

(assert (= bs!4260 d!28019))

(assert (=> bs!4260 m!114381))

(assert (=> bs!4260 m!114381))

(assert (=> bs!4260 m!114383))

(assert (=> d!27885 d!28019))

(declare-fun d!28021 () Bool)

(declare-fun e!67804 () Bool)

(assert (=> d!28021 e!67804))

(declare-fun res!51934 () Bool)

(assert (=> d!28021 (=> res!51934 e!67804)))

(declare-fun lt!53168 () Bool)

(assert (=> d!28021 (= res!51934 (not lt!53168))))

(declare-fun lt!53166 () Bool)

(assert (=> d!28021 (= lt!53168 lt!53166)))

(declare-fun lt!53165 () Unit!3170)

(declare-fun e!67803 () Unit!3170)

(assert (=> d!28021 (= lt!53165 e!67803)))

(declare-fun c!17984 () Bool)

(assert (=> d!28021 (= c!17984 lt!53166)))

(assert (=> d!28021 (= lt!53166 (containsKey!158 (toList!805 lt!52746) lt!52752))))

(assert (=> d!28021 (= (contains!825 lt!52746 lt!52752) lt!53168)))

(declare-fun b!104108 () Bool)

(declare-fun lt!53167 () Unit!3170)

(assert (=> b!104108 (= e!67803 lt!53167)))

(assert (=> b!104108 (= lt!53167 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52746) lt!52752))))

(assert (=> b!104108 (isDefined!108 (getValueByKey!154 (toList!805 lt!52746) lt!52752))))

(declare-fun b!104109 () Bool)

(declare-fun Unit!3202 () Unit!3170)

(assert (=> b!104109 (= e!67803 Unit!3202)))

(declare-fun b!104110 () Bool)

(assert (=> b!104110 (= e!67804 (isDefined!108 (getValueByKey!154 (toList!805 lt!52746) lt!52752)))))

(assert (= (and d!28021 c!17984) b!104108))

(assert (= (and d!28021 (not c!17984)) b!104109))

(assert (= (and d!28021 (not res!51934)) b!104110))

(declare-fun m!115339 () Bool)

(assert (=> d!28021 m!115339))

(declare-fun m!115341 () Bool)

(assert (=> b!104108 m!115341))

(declare-fun m!115343 () Bool)

(assert (=> b!104108 m!115343))

(assert (=> b!104108 m!115343))

(declare-fun m!115345 () Bool)

(assert (=> b!104108 m!115345))

(assert (=> b!104110 m!115343))

(assert (=> b!104110 m!115343))

(assert (=> b!104110 m!115345))

(assert (=> d!27885 d!28021))

(declare-fun d!28023 () Bool)

(declare-fun e!67806 () Bool)

(assert (=> d!28023 e!67806))

(declare-fun res!51935 () Bool)

(assert (=> d!28023 (=> res!51935 e!67806)))

(declare-fun lt!53172 () Bool)

(assert (=> d!28023 (= res!51935 (not lt!53172))))

(declare-fun lt!53170 () Bool)

(assert (=> d!28023 (= lt!53172 lt!53170)))

(declare-fun lt!53169 () Unit!3170)

(declare-fun e!67805 () Unit!3170)

(assert (=> d!28023 (= lt!53169 e!67805)))

(declare-fun c!17985 () Bool)

(assert (=> d!28023 (= c!17985 lt!53170)))

(assert (=> d!28023 (= lt!53170 (containsKey!158 (toList!805 lt!53128) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28023 (= (contains!825 lt!53128 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53172)))

(declare-fun b!104111 () Bool)

(declare-fun lt!53171 () Unit!3170)

(assert (=> b!104111 (= e!67805 lt!53171)))

(assert (=> b!104111 (= lt!53171 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!53128) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104111 (isDefined!108 (getValueByKey!154 (toList!805 lt!53128) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104112 () Bool)

(declare-fun Unit!3203 () Unit!3170)

(assert (=> b!104112 (= e!67805 Unit!3203)))

(declare-fun b!104113 () Bool)

(assert (=> b!104113 (= e!67806 (isDefined!108 (getValueByKey!154 (toList!805 lt!53128) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28023 c!17985) b!104111))

(assert (= (and d!28023 (not c!17985)) b!104112))

(assert (= (and d!28023 (not res!51935)) b!104113))

(declare-fun m!115347 () Bool)

(assert (=> d!28023 m!115347))

(declare-fun m!115349 () Bool)

(assert (=> b!104111 m!115349))

(declare-fun m!115351 () Bool)

(assert (=> b!104111 m!115351))

(assert (=> b!104111 m!115351))

(declare-fun m!115353 () Bool)

(assert (=> b!104111 m!115353))

(assert (=> b!104113 m!115351))

(assert (=> b!104113 m!115351))

(assert (=> b!104113 m!115353))

(assert (=> bm!10932 d!28023))

(declare-fun d!28025 () Bool)

(declare-fun e!67807 () Bool)

(assert (=> d!28025 e!67807))

(declare-fun res!51937 () Bool)

(assert (=> d!28025 (=> (not res!51937) (not e!67807))))

(declare-fun lt!53173 () ListLongMap!1579)

(assert (=> d!28025 (= res!51937 (contains!825 lt!53173 (_1!1211 (ite (or c!17896 c!17899) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(declare-fun lt!53176 () List!1637)

(assert (=> d!28025 (= lt!53173 (ListLongMap!1580 lt!53176))))

(declare-fun lt!53175 () Unit!3170)

(declare-fun lt!53174 () Unit!3170)

(assert (=> d!28025 (= lt!53175 lt!53174)))

(assert (=> d!28025 (= (getValueByKey!154 lt!53176 (_1!1211 (ite (or c!17896 c!17899) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))) (Some!159 (_2!1211 (ite (or c!17896 c!17899) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(assert (=> d!28025 (= lt!53174 (lemmaContainsTupThenGetReturnValue!72 lt!53176 (_1!1211 (ite (or c!17896 c!17899) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) (_2!1211 (ite (or c!17896 c!17899) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(assert (=> d!28025 (= lt!53176 (insertStrictlySorted!74 (toList!805 (ite c!17896 call!10906 (ite c!17899 call!10908 call!10903))) (_1!1211 (ite (or c!17896 c!17899) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) (_2!1211 (ite (or c!17896 c!17899) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(assert (=> d!28025 (= (+!143 (ite c!17896 call!10906 (ite c!17899 call!10908 call!10903)) (ite (or c!17896 c!17899) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) lt!53173)))

(declare-fun b!104114 () Bool)

(declare-fun res!51936 () Bool)

(assert (=> b!104114 (=> (not res!51936) (not e!67807))))

(assert (=> b!104114 (= res!51936 (= (getValueByKey!154 (toList!805 lt!53173) (_1!1211 (ite (or c!17896 c!17899) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))) (Some!159 (_2!1211 (ite (or c!17896 c!17899) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))))

(declare-fun b!104115 () Bool)

(assert (=> b!104115 (= e!67807 (contains!828 (toList!805 lt!53173) (ite (or c!17896 c!17899) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(assert (= (and d!28025 res!51937) b!104114))

(assert (= (and b!104114 res!51936) b!104115))

(declare-fun m!115355 () Bool)

(assert (=> d!28025 m!115355))

(declare-fun m!115357 () Bool)

(assert (=> d!28025 m!115357))

(declare-fun m!115359 () Bool)

(assert (=> d!28025 m!115359))

(declare-fun m!115361 () Bool)

(assert (=> d!28025 m!115361))

(declare-fun m!115363 () Bool)

(assert (=> b!104114 m!115363))

(declare-fun m!115365 () Bool)

(assert (=> b!104115 m!115365))

(assert (=> bm!10902 d!28025))

(declare-fun d!28027 () Bool)

(assert (=> d!28027 (isDefined!108 (getValueByKey!154 (toList!805 lt!52791) (_1!1211 lt!52547)))))

(declare-fun lt!53177 () Unit!3170)

(assert (=> d!28027 (= lt!53177 (choose!656 (toList!805 lt!52791) (_1!1211 lt!52547)))))

(declare-fun e!67808 () Bool)

(assert (=> d!28027 e!67808))

(declare-fun res!51938 () Bool)

(assert (=> d!28027 (=> (not res!51938) (not e!67808))))

(assert (=> d!28027 (= res!51938 (isStrictlySorted!303 (toList!805 lt!52791)))))

(assert (=> d!28027 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52791) (_1!1211 lt!52547)) lt!53177)))

(declare-fun b!104116 () Bool)

(assert (=> b!104116 (= e!67808 (containsKey!158 (toList!805 lt!52791) (_1!1211 lt!52547)))))

(assert (= (and d!28027 res!51938) b!104116))

(assert (=> d!28027 m!114473))

(assert (=> d!28027 m!114473))

(assert (=> d!28027 m!115017))

(declare-fun m!115367 () Bool)

(assert (=> d!28027 m!115367))

(declare-fun m!115369 () Bool)

(assert (=> d!28027 m!115369))

(assert (=> b!104116 m!115013))

(assert (=> b!103894 d!28027))

(declare-fun d!28029 () Bool)

(assert (=> d!28029 (= (isDefined!108 (getValueByKey!154 (toList!805 lt!52791) (_1!1211 lt!52547))) (not (isEmpty!374 (getValueByKey!154 (toList!805 lt!52791) (_1!1211 lt!52547)))))))

(declare-fun bs!4261 () Bool)

(assert (= bs!4261 d!28029))

(assert (=> bs!4261 m!114473))

(declare-fun m!115371 () Bool)

(assert (=> bs!4261 m!115371))

(assert (=> b!103894 d!28029))

(assert (=> b!103894 d!27831))

(declare-fun d!28031 () Bool)

(assert (=> d!28031 (isDefined!108 (getValueByKey!154 (toList!805 e!67410) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun lt!53178 () Unit!3170)

(assert (=> d!28031 (= lt!53178 (choose!656 (toList!805 e!67410) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun e!67809 () Bool)

(assert (=> d!28031 e!67809))

(declare-fun res!51939 () Bool)

(assert (=> d!28031 (=> (not res!51939) (not e!67809))))

(assert (=> d!28031 (= res!51939 (isStrictlySorted!303 (toList!805 e!67410)))))

(assert (=> d!28031 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 e!67410) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) lt!53178)))

(declare-fun b!104117 () Bool)

(assert (=> b!104117 (= e!67809 (containsKey!158 (toList!805 e!67410) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (= (and d!28031 res!51939) b!104117))

(assert (=> d!28031 m!114187))

(assert (=> d!28031 m!115127))

(assert (=> d!28031 m!115127))

(assert (=> d!28031 m!115129))

(assert (=> d!28031 m!114187))

(declare-fun m!115373 () Bool)

(assert (=> d!28031 m!115373))

(declare-fun m!115375 () Bool)

(assert (=> d!28031 m!115375))

(assert (=> b!104117 m!114187))

(assert (=> b!104117 m!115123))

(assert (=> b!103994 d!28031))

(declare-fun d!28033 () Bool)

(assert (=> d!28033 (= (isDefined!108 (getValueByKey!154 (toList!805 e!67410) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))) (not (isEmpty!374 (getValueByKey!154 (toList!805 e!67410) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))))

(declare-fun bs!4262 () Bool)

(assert (= bs!4262 d!28033))

(assert (=> bs!4262 m!115127))

(declare-fun m!115377 () Bool)

(assert (=> bs!4262 m!115377))

(assert (=> b!103994 d!28033))

(declare-fun b!104119 () Bool)

(declare-fun e!67810 () Option!160)

(declare-fun e!67811 () Option!160)

(assert (=> b!104119 (= e!67810 e!67811)))

(declare-fun c!17987 () Bool)

(assert (=> b!104119 (= c!17987 (and ((_ is Cons!1633) (toList!805 e!67410)) (not (= (_1!1211 (h!2229 (toList!805 e!67410))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))))

(declare-fun b!104118 () Bool)

(assert (=> b!104118 (= e!67810 (Some!159 (_2!1211 (h!2229 (toList!805 e!67410)))))))

(declare-fun b!104120 () Bool)

(assert (=> b!104120 (= e!67811 (getValueByKey!154 (t!5711 (toList!805 e!67410)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun c!17986 () Bool)

(declare-fun d!28035 () Bool)

(assert (=> d!28035 (= c!17986 (and ((_ is Cons!1633) (toList!805 e!67410)) (= (_1!1211 (h!2229 (toList!805 e!67410))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))))

(assert (=> d!28035 (= (getValueByKey!154 (toList!805 e!67410) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) e!67810)))

(declare-fun b!104121 () Bool)

(assert (=> b!104121 (= e!67811 None!158)))

(assert (= (and d!28035 c!17986) b!104118))

(assert (= (and d!28035 (not c!17986)) b!104119))

(assert (= (and b!104119 c!17987) b!104120))

(assert (= (and b!104119 (not c!17987)) b!104121))

(assert (=> b!104120 m!114187))

(declare-fun m!115379 () Bool)

(assert (=> b!104120 m!115379))

(assert (=> b!103994 d!28035))

(declare-fun d!28037 () Bool)

(assert (=> d!28037 (= (inRange!0 (index!3220 lt!52923) (mask!6697 newMap!16)) (and (bvsge (index!3220 lt!52923) #b00000000000000000000000000000000) (bvslt (index!3220 lt!52923) (bvadd (mask!6697 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!103724 d!28037))

(declare-fun d!28039 () Bool)

(assert (=> d!28039 (= (content!106 Nil!1635) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!27921 d!28039))

(declare-fun d!28041 () Bool)

(assert (=> d!28041 (= (get!1335 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103884 d!28041))

(declare-fun d!28043 () Bool)

(assert (=> d!28043 (= (apply!97 lt!52823 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1336 (getValueByKey!154 (toList!805 lt!52823) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4263 () Bool)

(assert (= bs!4263 d!28043))

(declare-fun m!115381 () Bool)

(assert (=> bs!4263 m!115381))

(assert (=> bs!4263 m!115381))

(declare-fun m!115383 () Bool)

(assert (=> bs!4263 m!115383))

(assert (=> b!103640 d!28043))

(declare-fun d!28045 () Bool)

(assert (=> d!28045 (= (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103759 d!28045))

(declare-fun d!28047 () Bool)

(declare-fun c!17990 () Bool)

(assert (=> d!28047 (= c!17990 ((_ is Nil!1634) (toList!805 lt!52766)))))

(declare-fun e!67814 () (InoxSet tuple2!2402))

(assert (=> d!28047 (= (content!107 (toList!805 lt!52766)) e!67814)))

(declare-fun b!104126 () Bool)

(assert (=> b!104126 (= e!67814 ((as const (Array tuple2!2402 Bool)) false))))

(declare-fun b!104127 () Bool)

(assert (=> b!104127 (= e!67814 ((_ map or) (store ((as const (Array tuple2!2402 Bool)) false) (h!2229 (toList!805 lt!52766)) true) (content!107 (t!5711 (toList!805 lt!52766)))))))

(assert (= (and d!28047 c!17990) b!104126))

(assert (= (and d!28047 (not c!17990)) b!104127))

(declare-fun m!115385 () Bool)

(assert (=> b!104127 m!115385))

(declare-fun m!115387 () Bool)

(assert (=> b!104127 m!115387))

(assert (=> d!27979 d!28047))

(declare-fun d!28049 () Bool)

(assert (=> d!28049 (= (validMask!0 (mask!6697 newMap!16)) (and (or (= (mask!6697 newMap!16) #b00000000000000000000000000000111) (= (mask!6697 newMap!16) #b00000000000000000000000000001111) (= (mask!6697 newMap!16) #b00000000000000000000000000011111) (= (mask!6697 newMap!16) #b00000000000000000000000000111111) (= (mask!6697 newMap!16) #b00000000000000000000000001111111) (= (mask!6697 newMap!16) #b00000000000000000000000011111111) (= (mask!6697 newMap!16) #b00000000000000000000000111111111) (= (mask!6697 newMap!16) #b00000000000000000000001111111111) (= (mask!6697 newMap!16) #b00000000000000000000011111111111) (= (mask!6697 newMap!16) #b00000000000000000000111111111111) (= (mask!6697 newMap!16) #b00000000000000000001111111111111) (= (mask!6697 newMap!16) #b00000000000000000011111111111111) (= (mask!6697 newMap!16) #b00000000000000000111111111111111) (= (mask!6697 newMap!16) #b00000000000000001111111111111111) (= (mask!6697 newMap!16) #b00000000000000011111111111111111) (= (mask!6697 newMap!16) #b00000000000000111111111111111111) (= (mask!6697 newMap!16) #b00000000000001111111111111111111) (= (mask!6697 newMap!16) #b00000000000011111111111111111111) (= (mask!6697 newMap!16) #b00000000000111111111111111111111) (= (mask!6697 newMap!16) #b00000000001111111111111111111111) (= (mask!6697 newMap!16) #b00000000011111111111111111111111) (= (mask!6697 newMap!16) #b00000000111111111111111111111111) (= (mask!6697 newMap!16) #b00000001111111111111111111111111) (= (mask!6697 newMap!16) #b00000011111111111111111111111111) (= (mask!6697 newMap!16) #b00000111111111111111111111111111) (= (mask!6697 newMap!16) #b00001111111111111111111111111111) (= (mask!6697 newMap!16) #b00011111111111111111111111111111) (= (mask!6697 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6697 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!27849 d!28049))

(declare-fun d!28051 () Bool)

(declare-fun res!51940 () Bool)

(declare-fun e!67815 () Bool)

(assert (=> d!28051 (=> res!51940 e!67815)))

(assert (=> d!28051 (= res!51940 (or ((_ is Nil!1634) lt!53024) ((_ is Nil!1634) (t!5711 lt!53024))))))

(assert (=> d!28051 (= (isStrictlySorted!303 lt!53024) e!67815)))

(declare-fun b!104128 () Bool)

(declare-fun e!67816 () Bool)

(assert (=> b!104128 (= e!67815 e!67816)))

(declare-fun res!51941 () Bool)

(assert (=> b!104128 (=> (not res!51941) (not e!67816))))

(assert (=> b!104128 (= res!51941 (bvslt (_1!1211 (h!2229 lt!53024)) (_1!1211 (h!2229 (t!5711 lt!53024)))))))

(declare-fun b!104129 () Bool)

(assert (=> b!104129 (= e!67816 (isStrictlySorted!303 (t!5711 lt!53024)))))

(assert (= (and d!28051 (not res!51940)) b!104128))

(assert (= (and b!104128 res!51941) b!104129))

(declare-fun m!115389 () Bool)

(assert (=> b!104129 m!115389))

(assert (=> d!27909 d!28051))

(declare-fun d!28053 () Bool)

(declare-fun res!51942 () Bool)

(declare-fun e!67817 () Bool)

(assert (=> d!28053 (=> res!51942 e!67817)))

(assert (=> d!28053 (= res!51942 (or ((_ is Nil!1634) (toList!805 (+!143 lt!52542 lt!52547))) ((_ is Nil!1634) (t!5711 (toList!805 (+!143 lt!52542 lt!52547))))))))

(assert (=> d!28053 (= (isStrictlySorted!303 (toList!805 (+!143 lt!52542 lt!52547))) e!67817)))

(declare-fun b!104130 () Bool)

(declare-fun e!67818 () Bool)

(assert (=> b!104130 (= e!67817 e!67818)))

(declare-fun res!51943 () Bool)

(assert (=> b!104130 (=> (not res!51943) (not e!67818))))

(assert (=> b!104130 (= res!51943 (bvslt (_1!1211 (h!2229 (toList!805 (+!143 lt!52542 lt!52547)))) (_1!1211 (h!2229 (t!5711 (toList!805 (+!143 lt!52542 lt!52547)))))))))

(declare-fun b!104131 () Bool)

(assert (=> b!104131 (= e!67818 (isStrictlySorted!303 (t!5711 (toList!805 (+!143 lt!52542 lt!52547)))))))

(assert (= (and d!28053 (not res!51942)) b!104130))

(assert (= (and b!104130 res!51943) b!104131))

(declare-fun m!115391 () Bool)

(assert (=> b!104131 m!115391))

(assert (=> d!27909 d!28053))

(declare-fun d!28055 () Bool)

(declare-fun res!51944 () Bool)

(declare-fun e!67819 () Bool)

(assert (=> d!28055 (=> res!51944 e!67819)))

(assert (=> d!28055 (= res!51944 (= (select (arr!2056 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> d!28055 (= (arrayContainsKey!0 (_keys!4263 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!67819)))

(declare-fun b!104132 () Bool)

(declare-fun e!67820 () Bool)

(assert (=> b!104132 (= e!67819 e!67820)))

(declare-fun res!51945 () Bool)

(assert (=> b!104132 (=> (not res!51945) (not e!67820))))

(assert (=> b!104132 (= res!51945 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104133 () Bool)

(assert (=> b!104133 (= e!67820 (arrayContainsKey!0 (_keys!4263 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!28055 (not res!51944)) b!104132))

(assert (= (and b!104132 res!51945) b!104133))

(declare-fun m!115393 () Bool)

(assert (=> d!28055 m!115393))

(assert (=> b!104133 m!114187))

(declare-fun m!115395 () Bool)

(assert (=> b!104133 m!115395))

(assert (=> b!103782 d!28055))

(declare-fun d!28057 () Bool)

(declare-fun lt!53179 () Bool)

(assert (=> d!28057 (= lt!53179 (select (content!106 (ite c!17825 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635) Nil!1635)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!67821 () Bool)

(assert (=> d!28057 (= lt!53179 e!67821)))

(declare-fun res!51946 () Bool)

(assert (=> d!28057 (=> (not res!51946) (not e!67821))))

(assert (=> d!28057 (= res!51946 ((_ is Cons!1634) (ite c!17825 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635) Nil!1635)))))

(assert (=> d!28057 (= (contains!827 (ite c!17825 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635) Nil!1635) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!53179)))

(declare-fun b!104134 () Bool)

(declare-fun e!67822 () Bool)

(assert (=> b!104134 (= e!67821 e!67822)))

(declare-fun res!51947 () Bool)

(assert (=> b!104134 (=> res!51947 e!67822)))

(assert (=> b!104134 (= res!51947 (= (h!2230 (ite c!17825 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635) Nil!1635)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!104135 () Bool)

(assert (=> b!104135 (= e!67822 (contains!827 (t!5712 (ite c!17825 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635) Nil!1635)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!28057 res!51946) b!104134))

(assert (= (and b!104134 (not res!51947)) b!104135))

(declare-fun m!115397 () Bool)

(assert (=> d!28057 m!115397))

(assert (=> d!28057 m!114919))

(declare-fun m!115399 () Bool)

(assert (=> d!28057 m!115399))

(assert (=> b!104135 m!114919))

(declare-fun m!115401 () Bool)

(assert (=> b!104135 m!115401))

(assert (=> b!103810 d!28057))

(declare-fun d!28059 () Bool)

(assert (=> d!28059 (isDefined!108 (getValueByKey!154 (toList!805 lt!52789) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!53180 () Unit!3170)

(assert (=> d!28059 (= lt!53180 (choose!656 (toList!805 lt!52789) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!67823 () Bool)

(assert (=> d!28059 e!67823))

(declare-fun res!51948 () Bool)

(assert (=> d!28059 (=> (not res!51948) (not e!67823))))

(assert (=> d!28059 (= res!51948 (isStrictlySorted!303 (toList!805 lt!52789)))))

(assert (=> d!28059 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52789) #b1000000000000000000000000000000000000000000000000000000000000000) lt!53180)))

(declare-fun b!104136 () Bool)

(assert (=> b!104136 (= e!67823 (containsKey!158 (toList!805 lt!52789) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28059 res!51948) b!104136))

(assert (=> d!28059 m!115259))

(assert (=> d!28059 m!115259))

(assert (=> d!28059 m!115261))

(declare-fun m!115403 () Bool)

(assert (=> d!28059 m!115403))

(declare-fun m!115405 () Bool)

(assert (=> d!28059 m!115405))

(assert (=> b!104136 m!115255))

(assert (=> b!104042 d!28059))

(declare-fun d!28061 () Bool)

(assert (=> d!28061 (= (isDefined!108 (getValueByKey!154 (toList!805 lt!52789) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!374 (getValueByKey!154 (toList!805 lt!52789) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4264 () Bool)

(assert (= bs!4264 d!28061))

(assert (=> bs!4264 m!115259))

(declare-fun m!115407 () Bool)

(assert (=> bs!4264 m!115407))

(assert (=> b!104042 d!28061))

(declare-fun b!104138 () Bool)

(declare-fun e!67824 () Option!160)

(declare-fun e!67825 () Option!160)

(assert (=> b!104138 (= e!67824 e!67825)))

(declare-fun c!17992 () Bool)

(assert (=> b!104138 (= c!17992 (and ((_ is Cons!1633) (toList!805 lt!52789)) (not (= (_1!1211 (h!2229 (toList!805 lt!52789))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104137 () Bool)

(assert (=> b!104137 (= e!67824 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52789)))))))

(declare-fun b!104139 () Bool)

(assert (=> b!104139 (= e!67825 (getValueByKey!154 (t!5711 (toList!805 lt!52789)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!28063 () Bool)

(declare-fun c!17991 () Bool)

(assert (=> d!28063 (= c!17991 (and ((_ is Cons!1633) (toList!805 lt!52789)) (= (_1!1211 (h!2229 (toList!805 lt!52789))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28063 (= (getValueByKey!154 (toList!805 lt!52789) #b1000000000000000000000000000000000000000000000000000000000000000) e!67824)))

(declare-fun b!104140 () Bool)

(assert (=> b!104140 (= e!67825 None!158)))

(assert (= (and d!28063 c!17991) b!104137))

(assert (= (and d!28063 (not c!17991)) b!104138))

(assert (= (and b!104138 c!17992) b!104139))

(assert (= (and b!104138 (not c!17992)) b!104140))

(declare-fun m!115409 () Bool)

(assert (=> b!104139 m!115409))

(assert (=> b!104042 d!28063))

(declare-fun b!104141 () Bool)

(declare-fun e!67826 () Bool)

(declare-fun lt!53181 () List!1637)

(assert (=> b!104141 (= e!67826 (contains!828 lt!53181 (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))))))

(declare-fun b!104142 () Bool)

(declare-fun e!67830 () List!1637)

(declare-fun call!10950 () List!1637)

(assert (=> b!104142 (= e!67830 call!10950)))

(declare-fun bm!10945 () Bool)

(declare-fun call!10948 () List!1637)

(declare-fun call!10949 () List!1637)

(assert (=> bm!10945 (= call!10948 call!10949)))

(declare-fun b!104143 () Bool)

(assert (=> b!104143 (= e!67830 call!10950)))

(declare-fun c!17995 () Bool)

(declare-fun b!104144 () Bool)

(assert (=> b!104144 (= c!17995 (and ((_ is Cons!1633) (t!5711 (toList!805 (+!143 lt!52542 lt!52551)))) (bvsgt (_1!1211 (h!2229 (t!5711 (toList!805 (+!143 lt!52542 lt!52551))))) (_1!1211 lt!52547))))))

(declare-fun e!67827 () List!1637)

(assert (=> b!104144 (= e!67827 e!67830)))

(declare-fun bm!10946 () Bool)

(assert (=> bm!10946 (= call!10950 call!10948)))

(declare-fun b!104145 () Bool)

(declare-fun e!67829 () List!1637)

(assert (=> b!104145 (= e!67829 (insertStrictlySorted!74 (t!5711 (t!5711 (toList!805 (+!143 lt!52542 lt!52551)))) (_1!1211 lt!52547) (_2!1211 lt!52547)))))

(declare-fun b!104146 () Bool)

(declare-fun res!51950 () Bool)

(assert (=> b!104146 (=> (not res!51950) (not e!67826))))

(assert (=> b!104146 (= res!51950 (containsKey!158 lt!53181 (_1!1211 lt!52547)))))

(declare-fun c!17996 () Bool)

(declare-fun bm!10947 () Bool)

(assert (=> bm!10947 (= call!10949 ($colon$colon!79 e!67829 (ite c!17996 (h!2229 (t!5711 (toList!805 (+!143 lt!52542 lt!52551)))) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547)))))))

(declare-fun c!17994 () Bool)

(assert (=> bm!10947 (= c!17994 c!17996)))

(declare-fun d!28065 () Bool)

(assert (=> d!28065 e!67826))

(declare-fun res!51949 () Bool)

(assert (=> d!28065 (=> (not res!51949) (not e!67826))))

(assert (=> d!28065 (= res!51949 (isStrictlySorted!303 lt!53181))))

(declare-fun e!67828 () List!1637)

(assert (=> d!28065 (= lt!53181 e!67828)))

(assert (=> d!28065 (= c!17996 (and ((_ is Cons!1633) (t!5711 (toList!805 (+!143 lt!52542 lt!52551)))) (bvslt (_1!1211 (h!2229 (t!5711 (toList!805 (+!143 lt!52542 lt!52551))))) (_1!1211 lt!52547))))))

(assert (=> d!28065 (isStrictlySorted!303 (t!5711 (toList!805 (+!143 lt!52542 lt!52551))))))

(assert (=> d!28065 (= (insertStrictlySorted!74 (t!5711 (toList!805 (+!143 lt!52542 lt!52551))) (_1!1211 lt!52547) (_2!1211 lt!52547)) lt!53181)))

(declare-fun b!104147 () Bool)

(assert (=> b!104147 (= e!67828 e!67827)))

(declare-fun c!17993 () Bool)

(assert (=> b!104147 (= c!17993 (and ((_ is Cons!1633) (t!5711 (toList!805 (+!143 lt!52542 lt!52551)))) (= (_1!1211 (h!2229 (t!5711 (toList!805 (+!143 lt!52542 lt!52551))))) (_1!1211 lt!52547))))))

(declare-fun b!104148 () Bool)

(assert (=> b!104148 (= e!67827 call!10948)))

(declare-fun b!104149 () Bool)

(assert (=> b!104149 (= e!67828 call!10949)))

(declare-fun b!104150 () Bool)

(assert (=> b!104150 (= e!67829 (ite c!17993 (t!5711 (t!5711 (toList!805 (+!143 lt!52542 lt!52551)))) (ite c!17995 (Cons!1633 (h!2229 (t!5711 (toList!805 (+!143 lt!52542 lt!52551)))) (t!5711 (t!5711 (toList!805 (+!143 lt!52542 lt!52551))))) Nil!1634)))))

(assert (= (and d!28065 c!17996) b!104149))

(assert (= (and d!28065 (not c!17996)) b!104147))

(assert (= (and b!104147 c!17993) b!104148))

(assert (= (and b!104147 (not c!17993)) b!104144))

(assert (= (and b!104144 c!17995) b!104143))

(assert (= (and b!104144 (not c!17995)) b!104142))

(assert (= (or b!104143 b!104142) bm!10946))

(assert (= (or b!104148 bm!10946) bm!10945))

(assert (= (or b!104149 bm!10945) bm!10947))

(assert (= (and bm!10947 c!17994) b!104145))

(assert (= (and bm!10947 (not c!17994)) b!104150))

(assert (= (and d!28065 res!51949) b!104146))

(assert (= (and b!104146 res!51950) b!104141))

(declare-fun m!115411 () Bool)

(assert (=> b!104146 m!115411))

(declare-fun m!115413 () Bool)

(assert (=> bm!10947 m!115413))

(declare-fun m!115415 () Bool)

(assert (=> d!28065 m!115415))

(declare-fun m!115417 () Bool)

(assert (=> d!28065 m!115417))

(declare-fun m!115419 () Bool)

(assert (=> b!104141 m!115419))

(declare-fun m!115421 () Bool)

(assert (=> b!104145 m!115421))

(assert (=> b!104079 d!28065))

(declare-fun b!104152 () Bool)

(declare-fun e!67831 () Option!160)

(declare-fun e!67832 () Option!160)

(assert (=> b!104152 (= e!67831 e!67832)))

(declare-fun c!17998 () Bool)

(assert (=> b!104152 (= c!17998 (and ((_ is Cons!1633) (t!5711 lt!52794)) (not (= (_1!1211 (h!2229 (t!5711 lt!52794))) (_1!1211 lt!52547)))))))

(declare-fun b!104151 () Bool)

(assert (=> b!104151 (= e!67831 (Some!159 (_2!1211 (h!2229 (t!5711 lt!52794)))))))

(declare-fun b!104153 () Bool)

(assert (=> b!104153 (= e!67832 (getValueByKey!154 (t!5711 (t!5711 lt!52794)) (_1!1211 lt!52547)))))

(declare-fun d!28067 () Bool)

(declare-fun c!17997 () Bool)

(assert (=> d!28067 (= c!17997 (and ((_ is Cons!1633) (t!5711 lt!52794)) (= (_1!1211 (h!2229 (t!5711 lt!52794))) (_1!1211 lt!52547))))))

(assert (=> d!28067 (= (getValueByKey!154 (t!5711 lt!52794) (_1!1211 lt!52547)) e!67831)))

(declare-fun b!104154 () Bool)

(assert (=> b!104154 (= e!67832 None!158)))

(assert (= (and d!28067 c!17997) b!104151))

(assert (= (and d!28067 (not c!17997)) b!104152))

(assert (= (and b!104152 c!17998) b!104153))

(assert (= (and b!104152 (not c!17998)) b!104154))

(declare-fun m!115423 () Bool)

(assert (=> b!104153 m!115423))

(assert (=> b!103899 d!28067))

(declare-fun d!28069 () Bool)

(declare-fun lt!53182 () Bool)

(assert (=> d!28069 (= lt!53182 (select (content!107 (toList!805 lt!52940)) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun e!67834 () Bool)

(assert (=> d!28069 (= lt!53182 e!67834)))

(declare-fun res!51951 () Bool)

(assert (=> d!28069 (=> (not res!51951) (not e!67834))))

(assert (=> d!28069 (= res!51951 ((_ is Cons!1633) (toList!805 lt!52940)))))

(assert (=> d!28069 (= (contains!828 (toList!805 lt!52940) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!53182)))

(declare-fun b!104155 () Bool)

(declare-fun e!67833 () Bool)

(assert (=> b!104155 (= e!67834 e!67833)))

(declare-fun res!51952 () Bool)

(assert (=> b!104155 (=> res!51952 e!67833)))

(assert (=> b!104155 (= res!51952 (= (h!2229 (toList!805 lt!52940)) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!104156 () Bool)

(assert (=> b!104156 (= e!67833 (contains!828 (t!5711 (toList!805 lt!52940)) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(assert (= (and d!28069 res!51951) b!104155))

(assert (= (and b!104155 (not res!51952)) b!104156))

(declare-fun m!115425 () Bool)

(assert (=> d!28069 m!115425))

(declare-fun m!115427 () Bool)

(assert (=> d!28069 m!115427))

(declare-fun m!115429 () Bool)

(assert (=> b!104156 m!115429))

(assert (=> b!103743 d!28069))

(declare-fun d!28071 () Bool)

(assert (=> d!28071 (= ($colon$colon!79 e!67647 (ite c!17917 (h!2229 (toList!805 lt!52542)) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551)))) (Cons!1633 (ite c!17917 (h!2229 (toList!805 lt!52542)) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))) e!67647))))

(assert (=> bm!10915 d!28071))

(declare-fun b!104157 () Bool)

(declare-fun e!67835 () Bool)

(declare-fun e!67838 () Bool)

(assert (=> b!104157 (= e!67835 e!67838)))

(declare-fun c!17999 () Bool)

(assert (=> b!104157 (= c!17999 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (_2!1210 lt!52662))) #b00000000000000000000000000000000)))))

(declare-fun b!104158 () Bool)

(declare-fun e!67836 () Bool)

(assert (=> b!104158 (= e!67836 (contains!827 Nil!1635 (select (arr!2056 (_keys!4263 (_2!1210 lt!52662))) #b00000000000000000000000000000000)))))

(declare-fun b!104159 () Bool)

(declare-fun call!10951 () Bool)

(assert (=> b!104159 (= e!67838 call!10951)))

(declare-fun b!104160 () Bool)

(declare-fun e!67837 () Bool)

(assert (=> b!104160 (= e!67837 e!67835)))

(declare-fun res!51953 () Bool)

(assert (=> b!104160 (=> (not res!51953) (not e!67835))))

(assert (=> b!104160 (= res!51953 (not e!67836))))

(declare-fun res!51954 () Bool)

(assert (=> b!104160 (=> (not res!51954) (not e!67836))))

(assert (=> b!104160 (= res!51954 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (_2!1210 lt!52662))) #b00000000000000000000000000000000)))))

(declare-fun b!104161 () Bool)

(assert (=> b!104161 (= e!67838 call!10951)))

(declare-fun bm!10948 () Bool)

(assert (=> bm!10948 (= call!10951 (arrayNoDuplicates!0 (_keys!4263 (_2!1210 lt!52662)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!17999 (Cons!1634 (select (arr!2056 (_keys!4263 (_2!1210 lt!52662))) #b00000000000000000000000000000000) Nil!1635) Nil!1635)))))

(declare-fun d!28073 () Bool)

(declare-fun res!51955 () Bool)

(assert (=> d!28073 (=> res!51955 e!67837)))

(assert (=> d!28073 (= res!51955 (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 (_2!1210 lt!52662)))))))

(assert (=> d!28073 (= (arrayNoDuplicates!0 (_keys!4263 (_2!1210 lt!52662)) #b00000000000000000000000000000000 Nil!1635) e!67837)))

(assert (= (and d!28073 (not res!51955)) b!104160))

(assert (= (and b!104160 res!51954) b!104158))

(assert (= (and b!104160 res!51953) b!104157))

(assert (= (and b!104157 c!17999) b!104159))

(assert (= (and b!104157 (not c!17999)) b!104161))

(assert (= (or b!104159 b!104161) bm!10948))

(declare-fun m!115431 () Bool)

(assert (=> b!104157 m!115431))

(assert (=> b!104157 m!115431))

(declare-fun m!115433 () Bool)

(assert (=> b!104157 m!115433))

(assert (=> b!104158 m!115431))

(assert (=> b!104158 m!115431))

(declare-fun m!115435 () Bool)

(assert (=> b!104158 m!115435))

(assert (=> b!104160 m!115431))

(assert (=> b!104160 m!115431))

(assert (=> b!104160 m!115433))

(assert (=> bm!10948 m!115431))

(declare-fun m!115437 () Bool)

(assert (=> bm!10948 m!115437))

(assert (=> b!104001 d!28073))

(declare-fun d!28075 () Bool)

(declare-fun e!67839 () Bool)

(assert (=> d!28075 e!67839))

(declare-fun res!51957 () Bool)

(assert (=> d!28075 (=> (not res!51957) (not e!67839))))

(declare-fun lt!53183 () ListLongMap!1579)

(assert (=> d!28075 (= res!51957 (contains!825 lt!53183 (_1!1211 (ite (or c!17966 c!17969) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))))))))

(declare-fun lt!53186 () List!1637)

(assert (=> d!28075 (= lt!53183 (ListLongMap!1580 lt!53186))))

(declare-fun lt!53185 () Unit!3170)

(declare-fun lt!53184 () Unit!3170)

(assert (=> d!28075 (= lt!53185 lt!53184)))

(assert (=> d!28075 (= (getValueByKey!154 lt!53186 (_1!1211 (ite (or c!17966 c!17969) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))))) (Some!159 (_2!1211 (ite (or c!17966 c!17969) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))))))))

(assert (=> d!28075 (= lt!53184 (lemmaContainsTupThenGetReturnValue!72 lt!53186 (_1!1211 (ite (or c!17966 c!17969) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))) (_2!1211 (ite (or c!17966 c!17969) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))))))))

(assert (=> d!28075 (= lt!53186 (insertStrictlySorted!74 (toList!805 (ite c!17966 call!10939 (ite c!17969 call!10941 call!10936))) (_1!1211 (ite (or c!17966 c!17969) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))) (_2!1211 (ite (or c!17966 c!17969) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))))))))

(assert (=> d!28075 (= (+!143 (ite c!17966 call!10939 (ite c!17969 call!10941 call!10936)) (ite (or c!17966 c!17969) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))) lt!53183)))

(declare-fun b!104162 () Bool)

(declare-fun res!51956 () Bool)

(assert (=> b!104162 (=> (not res!51956) (not e!67839))))

(assert (=> b!104162 (= res!51956 (= (getValueByKey!154 (toList!805 lt!53183) (_1!1211 (ite (or c!17966 c!17969) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))))) (Some!159 (_2!1211 (ite (or c!17966 c!17969) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))))))))

(declare-fun b!104163 () Bool)

(assert (=> b!104163 (= e!67839 (contains!828 (toList!805 lt!53183) (ite (or c!17966 c!17969) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))))))

(assert (= (and d!28075 res!51957) b!104162))

(assert (= (and b!104162 res!51956) b!104163))

(declare-fun m!115439 () Bool)

(assert (=> d!28075 m!115439))

(declare-fun m!115441 () Bool)

(assert (=> d!28075 m!115441))

(declare-fun m!115443 () Bool)

(assert (=> d!28075 m!115443))

(declare-fun m!115445 () Bool)

(assert (=> d!28075 m!115445))

(declare-fun m!115447 () Bool)

(assert (=> b!104162 m!115447))

(declare-fun m!115449 () Bool)

(assert (=> b!104163 m!115449))

(assert (=> bm!10935 d!28075))

(declare-fun d!28077 () Bool)

(assert (=> d!28077 (= (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104059 d!28077))

(declare-fun b!104165 () Bool)

(declare-fun e!67840 () Option!160)

(declare-fun e!67841 () Option!160)

(assert (=> b!104165 (= e!67840 e!67841)))

(declare-fun c!18001 () Bool)

(assert (=> b!104165 (= c!18001 (and ((_ is Cons!1633) (toList!805 lt!52924)) (not (= (_1!1211 (h!2229 (toList!805 lt!52924))) (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))))

(declare-fun b!104164 () Bool)

(assert (=> b!104164 (= e!67840 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52924)))))))

(declare-fun b!104166 () Bool)

(assert (=> b!104166 (= e!67841 (getValueByKey!154 (t!5711 (toList!805 lt!52924)) (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun c!18000 () Bool)

(declare-fun d!28079 () Bool)

(assert (=> d!28079 (= c!18000 (and ((_ is Cons!1633) (toList!805 lt!52924)) (= (_1!1211 (h!2229 (toList!805 lt!52924))) (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))))

(assert (=> d!28079 (= (getValueByKey!154 (toList!805 lt!52924) (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))) e!67840)))

(declare-fun b!104167 () Bool)

(assert (=> b!104167 (= e!67841 None!158)))

(assert (= (and d!28079 c!18000) b!104164))

(assert (= (and d!28079 (not c!18000)) b!104165))

(assert (= (and b!104165 c!18001) b!104166))

(assert (= (and b!104165 (not c!18001)) b!104167))

(declare-fun m!115451 () Bool)

(assert (=> b!104166 m!115451))

(assert (=> b!103729 d!28079))

(declare-fun d!28081 () Bool)

(assert (=> d!28081 (= (isDefined!108 (getValueByKey!154 (toList!805 lt!52753) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!374 (getValueByKey!154 (toList!805 lt!52753) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4265 () Bool)

(assert (= bs!4265 d!28081))

(assert (=> bs!4265 m!114915))

(declare-fun m!115453 () Bool)

(assert (=> bs!4265 m!115453))

(assert (=> b!103887 d!28081))

(declare-fun b!104169 () Bool)

(declare-fun e!67842 () Option!160)

(declare-fun e!67843 () Option!160)

(assert (=> b!104169 (= e!67842 e!67843)))

(declare-fun c!18003 () Bool)

(assert (=> b!104169 (= c!18003 (and ((_ is Cons!1633) (toList!805 lt!52753)) (not (= (_1!1211 (h!2229 (toList!805 lt!52753))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104168 () Bool)

(assert (=> b!104168 (= e!67842 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52753)))))))

(declare-fun b!104170 () Bool)

(assert (=> b!104170 (= e!67843 (getValueByKey!154 (t!5711 (toList!805 lt!52753)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!28083 () Bool)

(declare-fun c!18002 () Bool)

(assert (=> d!28083 (= c!18002 (and ((_ is Cons!1633) (toList!805 lt!52753)) (= (_1!1211 (h!2229 (toList!805 lt!52753))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28083 (= (getValueByKey!154 (toList!805 lt!52753) #b1000000000000000000000000000000000000000000000000000000000000000) e!67842)))

(declare-fun b!104171 () Bool)

(assert (=> b!104171 (= e!67843 None!158)))

(assert (= (and d!28083 c!18002) b!104168))

(assert (= (and d!28083 (not c!18002)) b!104169))

(assert (= (and b!104169 c!18003) b!104170))

(assert (= (and b!104169 (not c!18003)) b!104171))

(declare-fun m!115455 () Bool)

(assert (=> b!104170 m!115455))

(assert (=> b!103887 d!28083))

(assert (=> d!27983 d!28049))

(declare-fun b!104173 () Bool)

(declare-fun res!51959 () Bool)

(declare-fun e!67844 () Bool)

(assert (=> b!104173 (=> (not res!51959) (not e!67844))))

(assert (=> b!104173 (= res!51959 (bvsge (size!2314 (v!2876 (underlying!359 thiss!992))) (_size!496 (v!2876 (underlying!359 thiss!992)))))))

(declare-fun b!104174 () Bool)

(declare-fun res!51958 () Bool)

(assert (=> b!104174 (=> (not res!51958) (not e!67844))))

(assert (=> b!104174 (= res!51958 (= (size!2314 (v!2876 (underlying!359 thiss!992))) (bvadd (_size!496 (v!2876 (underlying!359 thiss!992))) (bvsdiv (bvadd (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!104172 () Bool)

(declare-fun res!51961 () Bool)

(assert (=> b!104172 (=> (not res!51961) (not e!67844))))

(assert (=> b!104172 (= res!51961 (and (= (size!2311 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000001)) (= (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (size!2311 (_values!2544 (v!2876 (underlying!359 thiss!992))))) (bvsge (_size!496 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!496 (v!2876 (underlying!359 thiss!992))) (bvadd (mask!6697 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun d!28085 () Bool)

(declare-fun res!51960 () Bool)

(assert (=> d!28085 (=> (not res!51960) (not e!67844))))

(assert (=> d!28085 (= res!51960 (validMask!0 (mask!6697 (v!2876 (underlying!359 thiss!992)))))))

(assert (=> d!28085 (= (simpleValid!72 (v!2876 (underlying!359 thiss!992))) e!67844)))

(declare-fun b!104175 () Bool)

(assert (=> b!104175 (= e!67844 (and (bvsge (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!496 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000000)))))

(assert (= (and d!28085 res!51960) b!104172))

(assert (= (and b!104172 res!51961) b!104173))

(assert (= (and b!104173 res!51959) b!104174))

(assert (= (and b!104174 res!51958) b!104175))

(declare-fun m!115457 () Bool)

(assert (=> b!104173 m!115457))

(assert (=> b!104174 m!115457))

(assert (=> d!28085 m!114185))

(assert (=> d!27825 d!28085))

(declare-fun d!28087 () Bool)

(declare-fun e!67846 () Bool)

(assert (=> d!28087 e!67846))

(declare-fun res!51962 () Bool)

(assert (=> d!28087 (=> res!51962 e!67846)))

(declare-fun lt!53190 () Bool)

(assert (=> d!28087 (= res!51962 (not lt!53190))))

(declare-fun lt!53188 () Bool)

(assert (=> d!28087 (= lt!53190 lt!53188)))

(declare-fun lt!53187 () Unit!3170)

(declare-fun e!67845 () Unit!3170)

(assert (=> d!28087 (= lt!53187 e!67845)))

(declare-fun c!18004 () Bool)

(assert (=> d!28087 (= c!18004 lt!53188)))

(assert (=> d!28087 (= lt!53188 (containsKey!158 (toList!805 lt!52957) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!28087 (= (contains!825 lt!52957 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!53190)))

(declare-fun b!104176 () Bool)

(declare-fun lt!53189 () Unit!3170)

(assert (=> b!104176 (= e!67845 lt!53189)))

(assert (=> b!104176 (= lt!53189 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52957) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!104176 (isDefined!108 (getValueByKey!154 (toList!805 lt!52957) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!104177 () Bool)

(declare-fun Unit!3204 () Unit!3170)

(assert (=> b!104177 (= e!67845 Unit!3204)))

(declare-fun b!104178 () Bool)

(assert (=> b!104178 (= e!67846 (isDefined!108 (getValueByKey!154 (toList!805 lt!52957) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!28087 c!18004) b!104176))

(assert (= (and d!28087 (not c!18004)) b!104177))

(assert (= (and d!28087 (not res!51962)) b!104178))

(assert (=> d!28087 m!114741))

(declare-fun m!115459 () Bool)

(assert (=> d!28087 m!115459))

(assert (=> b!104176 m!114741))

(declare-fun m!115461 () Bool)

(assert (=> b!104176 m!115461))

(assert (=> b!104176 m!114741))

(declare-fun m!115463 () Bool)

(assert (=> b!104176 m!115463))

(assert (=> b!104176 m!115463))

(declare-fun m!115465 () Bool)

(assert (=> b!104176 m!115465))

(assert (=> b!104178 m!114741))

(assert (=> b!104178 m!115463))

(assert (=> b!104178 m!115463))

(assert (=> b!104178 m!115465))

(assert (=> b!103752 d!28087))

(assert (=> b!103718 d!27771))

(declare-fun d!28089 () Bool)

(declare-fun lt!53191 () Bool)

(assert (=> d!28089 (= lt!53191 (select (content!106 Nil!1635) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!67847 () Bool)

(assert (=> d!28089 (= lt!53191 e!67847)))

(declare-fun res!51963 () Bool)

(assert (=> d!28089 (=> (not res!51963) (not e!67847))))

(assert (=> d!28089 (= res!51963 ((_ is Cons!1634) Nil!1635))))

(assert (=> d!28089 (= (contains!827 Nil!1635 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) lt!53191)))

(declare-fun b!104179 () Bool)

(declare-fun e!67848 () Bool)

(assert (=> b!104179 (= e!67847 e!67848)))

(declare-fun res!51964 () Bool)

(assert (=> b!104179 (=> res!51964 e!67848)))

(assert (=> b!104179 (= res!51964 (= (h!2230 Nil!1635) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104180 () Bool)

(assert (=> b!104180 (= e!67848 (contains!827 (t!5712 Nil!1635) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!28089 res!51963) b!104179))

(assert (= (and b!104179 (not res!51964)) b!104180))

(assert (=> d!28089 m!115007))

(assert (=> d!28089 m!114523))

(declare-fun m!115467 () Bool)

(assert (=> d!28089 m!115467))

(assert (=> b!104180 m!114523))

(declare-fun m!115469 () Bool)

(assert (=> b!104180 m!115469))

(assert (=> b!103917 d!28089))

(declare-fun d!28091 () Bool)

(declare-fun lt!53192 () Bool)

(assert (=> d!28091 (= lt!53192 (select (content!107 lt!53018) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))))))

(declare-fun e!67850 () Bool)

(assert (=> d!28091 (= lt!53192 e!67850)))

(declare-fun res!51965 () Bool)

(assert (=> d!28091 (=> (not res!51965) (not e!67850))))

(assert (=> d!28091 (= res!51965 ((_ is Cons!1633) lt!53018))))

(assert (=> d!28091 (= (contains!828 lt!53018 (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))) lt!53192)))

(declare-fun b!104181 () Bool)

(declare-fun e!67849 () Bool)

(assert (=> b!104181 (= e!67850 e!67849)))

(declare-fun res!51966 () Bool)

(assert (=> b!104181 (=> res!51966 e!67849)))

(assert (=> b!104181 (= res!51966 (= (h!2229 lt!53018) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))))))

(declare-fun b!104182 () Bool)

(assert (=> b!104182 (= e!67849 (contains!828 (t!5711 lt!53018) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))))))

(assert (= (and d!28091 res!51965) b!104181))

(assert (= (and b!104181 (not res!51966)) b!104182))

(declare-fun m!115471 () Bool)

(assert (=> d!28091 m!115471))

(declare-fun m!115473 () Bool)

(assert (=> d!28091 m!115473))

(declare-fun m!115475 () Bool)

(assert (=> b!104182 m!115475))

(assert (=> b!103847 d!28091))

(declare-fun d!28093 () Bool)

(assert (=> d!28093 (= (+!143 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52673 lt!52546 (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(assert (=> d!28093 true))

(declare-fun _$7!89 () Unit!3170)

(assert (=> d!28093 (= (choose!657 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) lt!52673 (zeroValue!2438 newMap!16) lt!52546 (minValue!2438 newMap!16) (defaultEntry!2561 newMap!16)) _$7!89)))

(declare-fun bs!4266 () Bool)

(assert (= bs!4266 d!28093))

(assert (=> bs!4266 m!114295))

(assert (=> bs!4266 m!114295))

(assert (=> bs!4266 m!115297))

(assert (=> bs!4266 m!115299))

(assert (=> d!28001 d!28093))

(assert (=> d!28001 d!27811))

(declare-fun d!28095 () Bool)

(declare-fun e!67851 () Bool)

(assert (=> d!28095 e!67851))

(declare-fun res!51968 () Bool)

(assert (=> d!28095 (=> (not res!51968) (not e!67851))))

(declare-fun lt!53193 () ListLongMap!1579)

(assert (=> d!28095 (= res!51968 (contains!825 lt!53193 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546))))))

(declare-fun lt!53196 () List!1637)

(assert (=> d!28095 (= lt!53193 (ListLongMap!1580 lt!53196))))

(declare-fun lt!53195 () Unit!3170)

(declare-fun lt!53194 () Unit!3170)

(assert (=> d!28095 (= lt!53195 lt!53194)))

(assert (=> d!28095 (= (getValueByKey!154 lt!53196 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546))) (Some!159 (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546))))))

(assert (=> d!28095 (= lt!53194 (lemmaContainsTupThenGetReturnValue!72 lt!53196 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546))))))

(assert (=> d!28095 (= lt!53196 (insertStrictlySorted!74 (toList!805 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546))))))

(assert (=> d!28095 (= (+!143 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546)) lt!53193)))

(declare-fun b!104183 () Bool)

(declare-fun res!51967 () Bool)

(assert (=> b!104183 (=> (not res!51967) (not e!67851))))

(assert (=> b!104183 (= res!51967 (= (getValueByKey!154 (toList!805 lt!53193) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546))) (Some!159 (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546)))))))

(declare-fun b!104184 () Bool)

(assert (=> b!104184 (= e!67851 (contains!828 (toList!805 lt!53193) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546)))))

(assert (= (and d!28095 res!51968) b!104183))

(assert (= (and b!104183 res!51967) b!104184))

(declare-fun m!115477 () Bool)

(assert (=> d!28095 m!115477))

(declare-fun m!115479 () Bool)

(assert (=> d!28095 m!115479))

(declare-fun m!115481 () Bool)

(assert (=> d!28095 m!115481))

(declare-fun m!115483 () Bool)

(assert (=> d!28095 m!115483))

(declare-fun m!115485 () Bool)

(assert (=> b!104183 m!115485))

(declare-fun m!115487 () Bool)

(assert (=> b!104184 m!115487))

(assert (=> d!28001 d!28095))

(declare-fun bm!10949 () Bool)

(declare-fun call!10952 () Bool)

(declare-fun lt!53214 () ListLongMap!1579)

(assert (=> bm!10949 (= call!10952 (contains!825 lt!53214 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10950 () Bool)

(declare-fun call!10954 () ListLongMap!1579)

(declare-fun call!10957 () ListLongMap!1579)

(assert (=> bm!10950 (= call!10954 call!10957)))

(declare-fun b!104185 () Bool)

(declare-fun e!67863 () Bool)

(declare-fun e!67864 () Bool)

(assert (=> b!104185 (= e!67863 e!67864)))

(declare-fun res!51973 () Bool)

(declare-fun call!10955 () Bool)

(assert (=> b!104185 (= res!51973 call!10955)))

(assert (=> b!104185 (=> (not res!51973) (not e!67864))))

(declare-fun bm!10951 () Bool)

(declare-fun call!10953 () ListLongMap!1579)

(declare-fun call!10958 () ListLongMap!1579)

(assert (=> bm!10951 (= call!10953 call!10958)))

(declare-fun b!104186 () Bool)

(declare-fun e!67853 () Bool)

(assert (=> b!104186 (= e!67853 (= (apply!97 lt!53214 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2438 newMap!16)))))

(declare-fun b!104187 () Bool)

(declare-fun e!67857 () ListLongMap!1579)

(declare-fun e!67862 () ListLongMap!1579)

(assert (=> b!104187 (= e!67857 e!67862)))

(declare-fun c!18009 () Bool)

(assert (=> b!104187 (= c!18009 (and (not (= (bvand lt!52673 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!52673 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104188 () Bool)

(declare-fun res!51972 () Bool)

(declare-fun e!67855 () Bool)

(assert (=> b!104188 (=> (not res!51972) (not e!67855))))

(declare-fun e!67860 () Bool)

(assert (=> b!104188 (= res!51972 e!67860)))

(declare-fun res!51975 () Bool)

(assert (=> b!104188 (=> res!51975 e!67860)))

(declare-fun e!67852 () Bool)

(assert (=> b!104188 (= res!51975 (not e!67852))))

(declare-fun res!51974 () Bool)

(assert (=> b!104188 (=> (not res!51974) (not e!67852))))

(assert (=> b!104188 (= res!51974 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104189 () Bool)

(declare-fun c!18010 () Bool)

(assert (=> b!104189 (= c!18010 (and (not (= (bvand lt!52673 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!52673 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!67859 () ListLongMap!1579)

(assert (=> b!104189 (= e!67862 e!67859)))

(declare-fun call!10956 () ListLongMap!1579)

(declare-fun bm!10952 () Bool)

(declare-fun c!18006 () Bool)

(assert (=> bm!10952 (= call!10957 (+!143 (ite c!18006 call!10956 (ite c!18009 call!10958 call!10953)) (ite (or c!18006 c!18009) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(declare-fun b!104191 () Bool)

(declare-fun e!67861 () Bool)

(assert (=> b!104191 (= e!67861 (not call!10952))))

(declare-fun b!104192 () Bool)

(declare-fun e!67858 () Unit!3170)

(declare-fun Unit!3205 () Unit!3170)

(assert (=> b!104192 (= e!67858 Unit!3205)))

(declare-fun b!104193 () Bool)

(assert (=> b!104193 (= e!67852 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104194 () Bool)

(assert (=> b!104194 (= e!67859 call!10954)))

(declare-fun b!104195 () Bool)

(declare-fun e!67856 () Bool)

(assert (=> b!104195 (= e!67856 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104196 () Bool)

(declare-fun res!51971 () Bool)

(assert (=> b!104196 (=> (not res!51971) (not e!67855))))

(assert (=> b!104196 (= res!51971 e!67863)))

(declare-fun c!18008 () Bool)

(assert (=> b!104196 (= c!18008 (not (= (bvand lt!52673 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!104197 () Bool)

(assert (=> b!104197 (= e!67862 call!10954)))

(declare-fun b!104198 () Bool)

(assert (=> b!104198 (= e!67859 call!10953)))

(declare-fun bm!10953 () Bool)

(assert (=> bm!10953 (= call!10958 call!10956)))

(declare-fun b!104199 () Bool)

(assert (=> b!104199 (= e!67864 (= (apply!97 lt!53214 #b0000000000000000000000000000000000000000000000000000000000000000) lt!52546))))

(declare-fun b!104200 () Bool)

(assert (=> b!104200 (= e!67857 (+!143 call!10957 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))

(declare-fun bm!10954 () Bool)

(assert (=> bm!10954 (= call!10956 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52673 lt!52546 (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun d!28097 () Bool)

(assert (=> d!28097 e!67855))

(declare-fun res!51969 () Bool)

(assert (=> d!28097 (=> (not res!51969) (not e!67855))))

(assert (=> d!28097 (= res!51969 (or (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))))

(declare-fun lt!53199 () ListLongMap!1579)

(assert (=> d!28097 (= lt!53214 lt!53199)))

(declare-fun lt!53198 () Unit!3170)

(assert (=> d!28097 (= lt!53198 e!67858)))

(declare-fun c!18005 () Bool)

(assert (=> d!28097 (= c!18005 e!67856)))

(declare-fun res!51977 () Bool)

(assert (=> d!28097 (=> (not res!51977) (not e!67856))))

(assert (=> d!28097 (= res!51977 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!28097 (= lt!53199 e!67857)))

(assert (=> d!28097 (= c!18006 (and (not (= (bvand lt!52673 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!52673 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28097 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28097 (= (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52673 lt!52546 (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53214)))

(declare-fun b!104190 () Bool)

(declare-fun e!67854 () Bool)

(assert (=> b!104190 (= e!67860 e!67854)))

(declare-fun res!51976 () Bool)

(assert (=> b!104190 (=> (not res!51976) (not e!67854))))

(assert (=> b!104190 (= res!51976 (contains!825 lt!53214 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104190 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104201 () Bool)

(assert (=> b!104201 (= e!67855 e!67861)))

(declare-fun c!18007 () Bool)

(assert (=> b!104201 (= c!18007 (not (= (bvand lt!52673 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104202 () Bool)

(assert (=> b!104202 (= e!67854 (= (apply!97 lt!53214 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1333 (select (arr!2057 (_values!2544 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104202 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_values!2544 newMap!16))))))

(assert (=> b!104202 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun bm!10955 () Bool)

(assert (=> bm!10955 (= call!10955 (contains!825 lt!53214 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104203 () Bool)

(declare-fun lt!53201 () Unit!3170)

(assert (=> b!104203 (= e!67858 lt!53201)))

(declare-fun lt!53207 () ListLongMap!1579)

(assert (=> b!104203 (= lt!53207 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52673 lt!52546 (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53202 () (_ BitVec 64))

(assert (=> b!104203 (= lt!53202 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53213 () (_ BitVec 64))

(assert (=> b!104203 (= lt!53213 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53217 () Unit!3170)

(assert (=> b!104203 (= lt!53217 (addStillContains!73 lt!53207 lt!53202 lt!52546 lt!53213))))

(assert (=> b!104203 (contains!825 (+!143 lt!53207 (tuple2!2403 lt!53202 lt!52546)) lt!53213)))

(declare-fun lt!53210 () Unit!3170)

(assert (=> b!104203 (= lt!53210 lt!53217)))

(declare-fun lt!53212 () ListLongMap!1579)

(assert (=> b!104203 (= lt!53212 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52673 lt!52546 (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53211 () (_ BitVec 64))

(assert (=> b!104203 (= lt!53211 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53197 () (_ BitVec 64))

(assert (=> b!104203 (= lt!53197 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53209 () Unit!3170)

(assert (=> b!104203 (= lt!53209 (addApplyDifferent!73 lt!53212 lt!53211 (minValue!2438 newMap!16) lt!53197))))

(assert (=> b!104203 (= (apply!97 (+!143 lt!53212 (tuple2!2403 lt!53211 (minValue!2438 newMap!16))) lt!53197) (apply!97 lt!53212 lt!53197))))

(declare-fun lt!53208 () Unit!3170)

(assert (=> b!104203 (= lt!53208 lt!53209)))

(declare-fun lt!53215 () ListLongMap!1579)

(assert (=> b!104203 (= lt!53215 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52673 lt!52546 (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53216 () (_ BitVec 64))

(assert (=> b!104203 (= lt!53216 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53218 () (_ BitVec 64))

(assert (=> b!104203 (= lt!53218 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53206 () Unit!3170)

(assert (=> b!104203 (= lt!53206 (addApplyDifferent!73 lt!53215 lt!53216 lt!52546 lt!53218))))

(assert (=> b!104203 (= (apply!97 (+!143 lt!53215 (tuple2!2403 lt!53216 lt!52546)) lt!53218) (apply!97 lt!53215 lt!53218))))

(declare-fun lt!53204 () Unit!3170)

(assert (=> b!104203 (= lt!53204 lt!53206)))

(declare-fun lt!53203 () ListLongMap!1579)

(assert (=> b!104203 (= lt!53203 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52673 lt!52546 (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53205 () (_ BitVec 64))

(assert (=> b!104203 (= lt!53205 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53200 () (_ BitVec 64))

(assert (=> b!104203 (= lt!53200 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104203 (= lt!53201 (addApplyDifferent!73 lt!53203 lt!53205 (minValue!2438 newMap!16) lt!53200))))

(assert (=> b!104203 (= (apply!97 (+!143 lt!53203 (tuple2!2403 lt!53205 (minValue!2438 newMap!16))) lt!53200) (apply!97 lt!53203 lt!53200))))

(declare-fun b!104204 () Bool)

(assert (=> b!104204 (= e!67861 e!67853)))

(declare-fun res!51970 () Bool)

(assert (=> b!104204 (= res!51970 call!10952)))

(assert (=> b!104204 (=> (not res!51970) (not e!67853))))

(declare-fun b!104205 () Bool)

(assert (=> b!104205 (= e!67863 (not call!10955))))

(assert (= (and d!28097 c!18006) b!104200))

(assert (= (and d!28097 (not c!18006)) b!104187))

(assert (= (and b!104187 c!18009) b!104197))

(assert (= (and b!104187 (not c!18009)) b!104189))

(assert (= (and b!104189 c!18010) b!104194))

(assert (= (and b!104189 (not c!18010)) b!104198))

(assert (= (or b!104194 b!104198) bm!10951))

(assert (= (or b!104197 bm!10951) bm!10953))

(assert (= (or b!104197 b!104194) bm!10950))

(assert (= (or b!104200 bm!10953) bm!10954))

(assert (= (or b!104200 bm!10950) bm!10952))

(assert (= (and d!28097 res!51977) b!104195))

(assert (= (and d!28097 c!18005) b!104203))

(assert (= (and d!28097 (not c!18005)) b!104192))

(assert (= (and d!28097 res!51969) b!104188))

(assert (= (and b!104188 res!51974) b!104193))

(assert (= (and b!104188 (not res!51975)) b!104190))

(assert (= (and b!104190 res!51976) b!104202))

(assert (= (and b!104188 res!51972) b!104196))

(assert (= (and b!104196 c!18008) b!104185))

(assert (= (and b!104196 (not c!18008)) b!104205))

(assert (= (and b!104185 res!51973) b!104199))

(assert (= (or b!104185 b!104205) bm!10955))

(assert (= (and b!104196 res!51971) b!104201))

(assert (= (and b!104201 c!18007) b!104204))

(assert (= (and b!104201 (not c!18007)) b!104191))

(assert (= (and b!104204 res!51970) b!104186))

(assert (= (or b!104204 b!104191) bm!10949))

(declare-fun b_lambda!4673 () Bool)

(assert (=> (not b_lambda!4673) (not b!104202)))

(assert (=> b!104202 t!5720))

(declare-fun b_and!6445 () Bool)

(assert (= b_and!6441 (and (=> t!5720 result!3447) b_and!6445)))

(assert (=> b!104202 t!5722))

(declare-fun b_and!6447 () Bool)

(assert (= b_and!6443 (and (=> t!5722 result!3449) b_and!6447)))

(declare-fun m!115489 () Bool)

(assert (=> b!104186 m!115489))

(assert (=> d!28097 m!114517))

(declare-fun m!115491 () Bool)

(assert (=> bm!10955 m!115491))

(declare-fun m!115493 () Bool)

(assert (=> bm!10952 m!115493))

(assert (=> b!104195 m!114523))

(assert (=> b!104195 m!114523))

(assert (=> b!104195 m!114525))

(declare-fun m!115495 () Bool)

(assert (=> b!104203 m!115495))

(declare-fun m!115497 () Bool)

(assert (=> b!104203 m!115497))

(declare-fun m!115499 () Bool)

(assert (=> b!104203 m!115499))

(declare-fun m!115501 () Bool)

(assert (=> b!104203 m!115501))

(declare-fun m!115503 () Bool)

(assert (=> b!104203 m!115503))

(declare-fun m!115505 () Bool)

(assert (=> b!104203 m!115505))

(declare-fun m!115507 () Bool)

(assert (=> b!104203 m!115507))

(declare-fun m!115509 () Bool)

(assert (=> b!104203 m!115509))

(assert (=> b!104203 m!115507))

(declare-fun m!115511 () Bool)

(assert (=> b!104203 m!115511))

(declare-fun m!115513 () Bool)

(assert (=> b!104203 m!115513))

(declare-fun m!115515 () Bool)

(assert (=> b!104203 m!115515))

(assert (=> b!104203 m!114523))

(assert (=> b!104203 m!115503))

(declare-fun m!115517 () Bool)

(assert (=> b!104203 m!115517))

(declare-fun m!115519 () Bool)

(assert (=> b!104203 m!115519))

(declare-fun m!115521 () Bool)

(assert (=> b!104203 m!115521))

(declare-fun m!115523 () Bool)

(assert (=> b!104203 m!115523))

(assert (=> b!104203 m!115495))

(declare-fun m!115525 () Bool)

(assert (=> b!104203 m!115525))

(assert (=> b!104203 m!115517))

(assert (=> b!104202 m!114523))

(assert (=> b!104202 m!114523))

(declare-fun m!115527 () Bool)

(assert (=> b!104202 m!115527))

(assert (=> b!104202 m!114561))

(assert (=> b!104202 m!114563))

(assert (=> b!104202 m!114565))

(assert (=> b!104202 m!114563))

(assert (=> b!104202 m!114561))

(declare-fun m!115529 () Bool)

(assert (=> bm!10949 m!115529))

(assert (=> bm!10954 m!115501))

(assert (=> b!104190 m!114523))

(assert (=> b!104190 m!114523))

(declare-fun m!115531 () Bool)

(assert (=> b!104190 m!115531))

(declare-fun m!115533 () Bool)

(assert (=> b!104200 m!115533))

(declare-fun m!115535 () Bool)

(assert (=> b!104199 m!115535))

(assert (=> b!104193 m!114523))

(assert (=> b!104193 m!114523))

(assert (=> b!104193 m!114525))

(assert (=> d!28001 d!28097))

(assert (=> d!28001 d!28049))

(assert (=> d!27811 d!28049))

(declare-fun d!28099 () Bool)

(declare-fun lt!53219 () Bool)

(assert (=> d!28099 (= lt!53219 (select (content!107 (t!5711 (toList!805 lt!52766))) lt!52547))))

(declare-fun e!67866 () Bool)

(assert (=> d!28099 (= lt!53219 e!67866)))

(declare-fun res!51978 () Bool)

(assert (=> d!28099 (=> (not res!51978) (not e!67866))))

(assert (=> d!28099 (= res!51978 ((_ is Cons!1633) (t!5711 (toList!805 lt!52766))))))

(assert (=> d!28099 (= (contains!828 (t!5711 (toList!805 lt!52766)) lt!52547) lt!53219)))

(declare-fun b!104206 () Bool)

(declare-fun e!67865 () Bool)

(assert (=> b!104206 (= e!67866 e!67865)))

(declare-fun res!51979 () Bool)

(assert (=> b!104206 (=> res!51979 e!67865)))

(assert (=> b!104206 (= res!51979 (= (h!2229 (t!5711 (toList!805 lt!52766))) lt!52547))))

(declare-fun b!104207 () Bool)

(assert (=> b!104207 (= e!67865 (contains!828 (t!5711 (t!5711 (toList!805 lt!52766))) lt!52547))))

(assert (= (and d!28099 res!51978) b!104206))

(assert (= (and b!104206 (not res!51979)) b!104207))

(assert (=> d!28099 m!115387))

(declare-fun m!115537 () Bool)

(assert (=> d!28099 m!115537))

(declare-fun m!115539 () Bool)

(assert (=> b!104207 m!115539))

(assert (=> b!104017 d!28099))

(declare-fun b!104209 () Bool)

(declare-fun e!67867 () Option!160)

(declare-fun e!67868 () Option!160)

(assert (=> b!104209 (= e!67867 e!67868)))

(declare-fun c!18012 () Bool)

(assert (=> b!104209 (= c!18012 (and ((_ is Cons!1633) (t!5711 (toList!805 lt!52766))) (not (= (_1!1211 (h!2229 (t!5711 (toList!805 lt!52766)))) (_1!1211 lt!52547)))))))

(declare-fun b!104208 () Bool)

(assert (=> b!104208 (= e!67867 (Some!159 (_2!1211 (h!2229 (t!5711 (toList!805 lt!52766))))))))

(declare-fun b!104210 () Bool)

(assert (=> b!104210 (= e!67868 (getValueByKey!154 (t!5711 (t!5711 (toList!805 lt!52766))) (_1!1211 lt!52547)))))

(declare-fun d!28101 () Bool)

(declare-fun c!18011 () Bool)

(assert (=> d!28101 (= c!18011 (and ((_ is Cons!1633) (t!5711 (toList!805 lt!52766))) (= (_1!1211 (h!2229 (t!5711 (toList!805 lt!52766)))) (_1!1211 lt!52547))))))

(assert (=> d!28101 (= (getValueByKey!154 (t!5711 (toList!805 lt!52766)) (_1!1211 lt!52547)) e!67867)))

(declare-fun b!104211 () Bool)

(assert (=> b!104211 (= e!67868 None!158)))

(assert (= (and d!28101 c!18011) b!104208))

(assert (= (and d!28101 (not c!18011)) b!104209))

(assert (= (and b!104209 c!18012) b!104210))

(assert (= (and b!104209 (not c!18012)) b!104211))

(declare-fun m!115541 () Bool)

(assert (=> b!104210 m!115541))

(assert (=> b!103878 d!28101))

(declare-fun d!28103 () Bool)

(declare-fun e!67870 () Bool)

(assert (=> d!28103 e!67870))

(declare-fun res!51980 () Bool)

(assert (=> d!28103 (=> res!51980 e!67870)))

(declare-fun lt!53223 () Bool)

(assert (=> d!28103 (= res!51980 (not lt!53223))))

(declare-fun lt!53221 () Bool)

(assert (=> d!28103 (= lt!53223 lt!53221)))

(declare-fun lt!53220 () Unit!3170)

(declare-fun e!67869 () Unit!3170)

(assert (=> d!28103 (= lt!53220 e!67869)))

(declare-fun c!18013 () Bool)

(assert (=> d!28103 (= c!18013 lt!53221)))

(assert (=> d!28103 (= lt!53221 (containsKey!158 (toList!805 lt!53128) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28103 (= (contains!825 lt!53128 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53223)))

(declare-fun b!104212 () Bool)

(declare-fun lt!53222 () Unit!3170)

(assert (=> b!104212 (= e!67869 lt!53222)))

(assert (=> b!104212 (= lt!53222 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!53128) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104212 (isDefined!108 (getValueByKey!154 (toList!805 lt!53128) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104213 () Bool)

(declare-fun Unit!3206 () Unit!3170)

(assert (=> b!104213 (= e!67869 Unit!3206)))

(declare-fun b!104214 () Bool)

(assert (=> b!104214 (= e!67870 (isDefined!108 (getValueByKey!154 (toList!805 lt!53128) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28103 c!18013) b!104212))

(assert (= (and d!28103 (not c!18013)) b!104213))

(assert (= (and d!28103 (not res!51980)) b!104214))

(declare-fun m!115543 () Bool)

(assert (=> d!28103 m!115543))

(declare-fun m!115545 () Bool)

(assert (=> b!104212 m!115545))

(declare-fun m!115547 () Bool)

(assert (=> b!104212 m!115547))

(assert (=> b!104212 m!115547))

(declare-fun m!115549 () Bool)

(assert (=> b!104212 m!115549))

(assert (=> b!104214 m!115547))

(assert (=> b!104214 m!115547))

(assert (=> b!104214 m!115549))

(assert (=> bm!10938 d!28103))

(declare-fun d!28105 () Bool)

(declare-fun e!67872 () Bool)

(assert (=> d!28105 e!67872))

(declare-fun res!51981 () Bool)

(assert (=> d!28105 (=> res!51981 e!67872)))

(declare-fun lt!53227 () Bool)

(assert (=> d!28105 (= res!51981 (not lt!53227))))

(declare-fun lt!53225 () Bool)

(assert (=> d!28105 (= lt!53227 lt!53225)))

(declare-fun lt!53224 () Unit!3170)

(declare-fun e!67871 () Unit!3170)

(assert (=> d!28105 (= lt!53224 e!67871)))

(declare-fun c!18014 () Bool)

(assert (=> d!28105 (= c!18014 lt!53225)))

(assert (=> d!28105 (= lt!53225 (containsKey!158 (toList!805 lt!52989) (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!28105 (= (contains!825 lt!52989 (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53227)))

(declare-fun b!104215 () Bool)

(declare-fun lt!53226 () Unit!3170)

(assert (=> b!104215 (= e!67871 lt!53226)))

(assert (=> b!104215 (= lt!53226 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52989) (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> b!104215 (isDefined!108 (getValueByKey!154 (toList!805 lt!52989) (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!104216 () Bool)

(declare-fun Unit!3207 () Unit!3170)

(assert (=> b!104216 (= e!67871 Unit!3207)))

(declare-fun b!104217 () Bool)

(assert (=> b!104217 (= e!67872 (isDefined!108 (getValueByKey!154 (toList!805 lt!52989) (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (= (and d!28105 c!18014) b!104215))

(assert (= (and d!28105 (not c!18014)) b!104216))

(assert (= (and d!28105 (not res!51981)) b!104217))

(declare-fun m!115551 () Bool)

(assert (=> d!28105 m!115551))

(declare-fun m!115553 () Bool)

(assert (=> b!104215 m!115553))

(assert (=> b!104215 m!114851))

(assert (=> b!104215 m!114851))

(declare-fun m!115555 () Bool)

(assert (=> b!104215 m!115555))

(assert (=> b!104217 m!114851))

(assert (=> b!104217 m!114851))

(assert (=> b!104217 m!115555))

(assert (=> d!27865 d!28105))

(declare-fun b!104219 () Bool)

(declare-fun e!67873 () Option!160)

(declare-fun e!67874 () Option!160)

(assert (=> b!104219 (= e!67873 e!67874)))

(declare-fun c!18016 () Bool)

(assert (=> b!104219 (= c!18016 (and ((_ is Cons!1633) lt!52992) (not (= (_1!1211 (h!2229 lt!52992)) (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun b!104218 () Bool)

(assert (=> b!104218 (= e!67873 (Some!159 (_2!1211 (h!2229 lt!52992))))))

(declare-fun b!104220 () Bool)

(assert (=> b!104220 (= e!67874 (getValueByKey!154 (t!5711 lt!52992) (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun c!18015 () Bool)

(declare-fun d!28107 () Bool)

(assert (=> d!28107 (= c!18015 (and ((_ is Cons!1633) lt!52992) (= (_1!1211 (h!2229 lt!52992)) (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28107 (= (getValueByKey!154 lt!52992 (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) e!67873)))

(declare-fun b!104221 () Bool)

(assert (=> b!104221 (= e!67874 None!158)))

(assert (= (and d!28107 c!18015) b!104218))

(assert (= (and d!28107 (not c!18015)) b!104219))

(assert (= (and b!104219 c!18016) b!104220))

(assert (= (and b!104219 (not c!18016)) b!104221))

(declare-fun m!115557 () Bool)

(assert (=> b!104220 m!115557))

(assert (=> d!27865 d!28107))

(declare-fun d!28109 () Bool)

(assert (=> d!28109 (= (getValueByKey!154 lt!52992 (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun lt!53228 () Unit!3170)

(assert (=> d!28109 (= lt!53228 (choose!650 lt!52992 (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun e!67875 () Bool)

(assert (=> d!28109 e!67875))

(declare-fun res!51982 () Bool)

(assert (=> d!28109 (=> (not res!51982) (not e!67875))))

(assert (=> d!28109 (= res!51982 (isStrictlySorted!303 lt!52992))))

(assert (=> d!28109 (= (lemmaContainsTupThenGetReturnValue!72 lt!52992 (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53228)))

(declare-fun b!104222 () Bool)

(declare-fun res!51983 () Bool)

(assert (=> b!104222 (=> (not res!51983) (not e!67875))))

(assert (=> b!104222 (= res!51983 (containsKey!158 lt!52992 (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!104223 () Bool)

(assert (=> b!104223 (= e!67875 (contains!828 lt!52992 (tuple2!2403 (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (= (and d!28109 res!51982) b!104222))

(assert (= (and b!104222 res!51983) b!104223))

(assert (=> d!28109 m!114845))

(declare-fun m!115559 () Bool)

(assert (=> d!28109 m!115559))

(declare-fun m!115561 () Bool)

(assert (=> d!28109 m!115561))

(declare-fun m!115563 () Bool)

(assert (=> b!104222 m!115563))

(declare-fun m!115565 () Bool)

(assert (=> b!104223 m!115565))

(assert (=> d!27865 d!28109))

(declare-fun lt!53229 () List!1637)

(declare-fun b!104224 () Bool)

(declare-fun e!67876 () Bool)

(assert (=> b!104224 (= e!67876 (contains!828 lt!53229 (tuple2!2403 (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!104225 () Bool)

(declare-fun e!67880 () List!1637)

(declare-fun call!10961 () List!1637)

(assert (=> b!104225 (= e!67880 call!10961)))

(declare-fun bm!10956 () Bool)

(declare-fun call!10959 () List!1637)

(declare-fun call!10960 () List!1637)

(assert (=> bm!10956 (= call!10959 call!10960)))

(declare-fun b!104226 () Bool)

(assert (=> b!104226 (= e!67880 call!10961)))

(declare-fun c!18019 () Bool)

(declare-fun b!104227 () Bool)

(assert (=> b!104227 (= c!18019 (and ((_ is Cons!1633) (toList!805 lt!52751)) (bvsgt (_1!1211 (h!2229 (toList!805 lt!52751))) (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun e!67877 () List!1637)

(assert (=> b!104227 (= e!67877 e!67880)))

(declare-fun bm!10957 () Bool)

(assert (=> bm!10957 (= call!10961 call!10959)))

(declare-fun b!104228 () Bool)

(declare-fun e!67879 () List!1637)

(assert (=> b!104228 (= e!67879 (insertStrictlySorted!74 (t!5711 (toList!805 lt!52751)) (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!104229 () Bool)

(declare-fun res!51985 () Bool)

(assert (=> b!104229 (=> (not res!51985) (not e!67876))))

(assert (=> b!104229 (= res!51985 (containsKey!158 lt!53229 (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun bm!10958 () Bool)

(declare-fun c!18020 () Bool)

(assert (=> bm!10958 (= call!10960 ($colon$colon!79 e!67879 (ite c!18020 (h!2229 (toList!805 lt!52751)) (tuple2!2403 (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun c!18018 () Bool)

(assert (=> bm!10958 (= c!18018 c!18020)))

(declare-fun d!28111 () Bool)

(assert (=> d!28111 e!67876))

(declare-fun res!51984 () Bool)

(assert (=> d!28111 (=> (not res!51984) (not e!67876))))

(assert (=> d!28111 (= res!51984 (isStrictlySorted!303 lt!53229))))

(declare-fun e!67878 () List!1637)

(assert (=> d!28111 (= lt!53229 e!67878)))

(assert (=> d!28111 (= c!18020 (and ((_ is Cons!1633) (toList!805 lt!52751)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52751))) (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28111 (isStrictlySorted!303 (toList!805 lt!52751))))

(assert (=> d!28111 (= (insertStrictlySorted!74 (toList!805 lt!52751) (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53229)))

(declare-fun b!104230 () Bool)

(assert (=> b!104230 (= e!67878 e!67877)))

(declare-fun c!18017 () Bool)

(assert (=> b!104230 (= c!18017 (and ((_ is Cons!1633) (toList!805 lt!52751)) (= (_1!1211 (h!2229 (toList!805 lt!52751))) (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!104231 () Bool)

(assert (=> b!104231 (= e!67877 call!10959)))

(declare-fun b!104232 () Bool)

(assert (=> b!104232 (= e!67878 call!10960)))

(declare-fun b!104233 () Bool)

(assert (=> b!104233 (= e!67879 (ite c!18017 (t!5711 (toList!805 lt!52751)) (ite c!18019 (Cons!1633 (h!2229 (toList!805 lt!52751)) (t!5711 (toList!805 lt!52751))) Nil!1634)))))

(assert (= (and d!28111 c!18020) b!104232))

(assert (= (and d!28111 (not c!18020)) b!104230))

(assert (= (and b!104230 c!18017) b!104231))

(assert (= (and b!104230 (not c!18017)) b!104227))

(assert (= (and b!104227 c!18019) b!104226))

(assert (= (and b!104227 (not c!18019)) b!104225))

(assert (= (or b!104226 b!104225) bm!10957))

(assert (= (or b!104231 bm!10957) bm!10956))

(assert (= (or b!104232 bm!10956) bm!10958))

(assert (= (and bm!10958 c!18018) b!104228))

(assert (= (and bm!10958 (not c!18018)) b!104233))

(assert (= (and d!28111 res!51984) b!104229))

(assert (= (and b!104229 res!51985) b!104224))

(declare-fun m!115567 () Bool)

(assert (=> b!104229 m!115567))

(declare-fun m!115569 () Bool)

(assert (=> bm!10958 m!115569))

(declare-fun m!115571 () Bool)

(assert (=> d!28111 m!115571))

(declare-fun m!115573 () Bool)

(assert (=> d!28111 m!115573))

(declare-fun m!115575 () Bool)

(assert (=> b!104224 m!115575))

(declare-fun m!115577 () Bool)

(assert (=> b!104228 m!115577))

(assert (=> d!27865 d!28111))

(declare-fun d!28113 () Bool)

(assert (=> d!28113 (isDefined!108 (getValueByKey!154 (toList!805 lt!52753) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!53230 () Unit!3170)

(assert (=> d!28113 (= lt!53230 (choose!656 (toList!805 lt!52753) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!67881 () Bool)

(assert (=> d!28113 e!67881))

(declare-fun res!51986 () Bool)

(assert (=> d!28113 (=> (not res!51986) (not e!67881))))

(assert (=> d!28113 (= res!51986 (isStrictlySorted!303 (toList!805 lt!52753)))))

(assert (=> d!28113 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52753) #b0000000000000000000000000000000000000000000000000000000000000000) lt!53230)))

(declare-fun b!104234 () Bool)

(assert (=> b!104234 (= e!67881 (containsKey!158 (toList!805 lt!52753) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28113 res!51986) b!104234))

(assert (=> d!28113 m!115053))

(assert (=> d!28113 m!115053))

(assert (=> d!28113 m!115199))

(declare-fun m!115579 () Bool)

(assert (=> d!28113 m!115579))

(declare-fun m!115581 () Bool)

(assert (=> d!28113 m!115581))

(assert (=> b!104234 m!115195))

(assert (=> b!104018 d!28113))

(declare-fun d!28115 () Bool)

(assert (=> d!28115 (= (isDefined!108 (getValueByKey!154 (toList!805 lt!52753) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!374 (getValueByKey!154 (toList!805 lt!52753) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4267 () Bool)

(assert (= bs!4267 d!28115))

(assert (=> bs!4267 m!115053))

(declare-fun m!115583 () Bool)

(assert (=> bs!4267 m!115583))

(assert (=> b!104018 d!28115))

(declare-fun b!104236 () Bool)

(declare-fun e!67882 () Option!160)

(declare-fun e!67883 () Option!160)

(assert (=> b!104236 (= e!67882 e!67883)))

(declare-fun c!18022 () Bool)

(assert (=> b!104236 (= c!18022 (and ((_ is Cons!1633) (toList!805 lt!52753)) (not (= (_1!1211 (h!2229 (toList!805 lt!52753))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104235 () Bool)

(assert (=> b!104235 (= e!67882 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52753)))))))

(declare-fun b!104237 () Bool)

(assert (=> b!104237 (= e!67883 (getValueByKey!154 (t!5711 (toList!805 lt!52753)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!28117 () Bool)

(declare-fun c!18021 () Bool)

(assert (=> d!28117 (= c!18021 (and ((_ is Cons!1633) (toList!805 lt!52753)) (= (_1!1211 (h!2229 (toList!805 lt!52753))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28117 (= (getValueByKey!154 (toList!805 lt!52753) #b0000000000000000000000000000000000000000000000000000000000000000) e!67882)))

(declare-fun b!104238 () Bool)

(assert (=> b!104238 (= e!67883 None!158)))

(assert (= (and d!28117 c!18021) b!104235))

(assert (= (and d!28117 (not c!18021)) b!104236))

(assert (= (and b!104236 c!18022) b!104237))

(assert (= (and b!104236 (not c!18022)) b!104238))

(declare-fun m!115585 () Bool)

(assert (=> b!104237 m!115585))

(assert (=> b!104018 d!28117))

(declare-fun d!28119 () Bool)

(assert (=> d!28119 (= ($colon$colon!79 e!67657 (ite c!17924 (h!2229 (toList!805 (+!143 lt!52542 lt!52547))) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551)))) (Cons!1633 (ite c!17924 (h!2229 (toList!805 (+!143 lt!52542 lt!52547))) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))) e!67657))))

(assert (=> bm!10918 d!28119))

(declare-fun d!28121 () Bool)

(assert (=> d!28121 (= (size!2314 newMap!16) (bvadd (_size!496 newMap!16) (bvsdiv (bvadd (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!104095 d!28121))

(declare-fun d!28123 () Bool)

(assert (=> d!28123 (= (get!1336 (getValueByKey!154 (toList!805 lt!52753) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2880 (getValueByKey!154 (toList!805 lt!52753) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!27887 d!28123))

(assert (=> d!27887 d!28083))

(declare-fun d!28125 () Bool)

(assert (=> d!28125 (= (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103809 d!28125))

(declare-fun d!28127 () Bool)

(declare-fun lt!53231 () Bool)

(assert (=> d!28127 (= lt!53231 (select (content!107 (toList!805 lt!53137)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun e!67885 () Bool)

(assert (=> d!28127 (= lt!53231 e!67885)))

(declare-fun res!51987 () Bool)

(assert (=> d!28127 (=> (not res!51987) (not e!67885))))

(assert (=> d!28127 (= res!51987 ((_ is Cons!1633) (toList!805 lt!53137)))))

(assert (=> d!28127 (= (contains!828 (toList!805 lt!53137) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!53231)))

(declare-fun b!104239 () Bool)

(declare-fun e!67884 () Bool)

(assert (=> b!104239 (= e!67885 e!67884)))

(declare-fun res!51988 () Bool)

(assert (=> b!104239 (=> res!51988 e!67884)))

(assert (=> b!104239 (= res!51988 (= (h!2229 (toList!805 lt!53137)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!104240 () Bool)

(assert (=> b!104240 (= e!67884 (contains!828 (t!5711 (toList!805 lt!53137)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(assert (= (and d!28127 res!51987) b!104239))

(assert (= (and b!104239 (not res!51988)) b!104240))

(declare-fun m!115587 () Bool)

(assert (=> d!28127 m!115587))

(declare-fun m!115589 () Bool)

(assert (=> d!28127 m!115589))

(declare-fun m!115591 () Bool)

(assert (=> b!104240 m!115591))

(assert (=> b!104050 d!28127))

(declare-fun b!104241 () Bool)

(declare-fun e!67891 () ListLongMap!1579)

(assert (=> b!104241 (= e!67891 (ListLongMap!1580 Nil!1634))))

(declare-fun b!104243 () Bool)

(declare-fun e!67888 () Bool)

(declare-fun lt!53237 () ListLongMap!1579)

(assert (=> b!104243 (= e!67888 (isEmpty!372 lt!53237))))

(declare-fun b!104244 () Bool)

(assert (=> b!104244 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(assert (=> b!104244 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2311 (_values!2544 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun e!67892 () Bool)

(assert (=> b!104244 (= e!67892 (= (apply!97 lt!53237 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104245 () Bool)

(declare-fun e!67886 () Bool)

(assert (=> b!104245 (= e!67886 e!67892)))

(assert (=> b!104245 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun res!51992 () Bool)

(assert (=> b!104245 (= res!51992 (contains!825 lt!53237 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!104245 (=> (not res!51992) (not e!67892))))

(declare-fun b!104246 () Bool)

(declare-fun e!67887 () ListLongMap!1579)

(assert (=> b!104246 (= e!67891 e!67887)))

(declare-fun c!18023 () Bool)

(assert (=> b!104246 (= c!18023 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!104247 () Bool)

(declare-fun e!67889 () Bool)

(assert (=> b!104247 (= e!67889 e!67886)))

(declare-fun c!18024 () Bool)

(declare-fun e!67890 () Bool)

(assert (=> b!104247 (= c!18024 e!67890)))

(declare-fun res!51991 () Bool)

(assert (=> b!104247 (=> (not res!51991) (not e!67890))))

(assert (=> b!104247 (= res!51991 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!104248 () Bool)

(declare-fun lt!53233 () Unit!3170)

(declare-fun lt!53236 () Unit!3170)

(assert (=> b!104248 (= lt!53233 lt!53236)))

(declare-fun lt!53238 () (_ BitVec 64))

(declare-fun lt!53235 () V!3211)

(declare-fun lt!53234 () (_ BitVec 64))

(declare-fun lt!53232 () ListLongMap!1579)

(assert (=> b!104248 (not (contains!825 (+!143 lt!53232 (tuple2!2403 lt!53238 lt!53235)) lt!53234))))

(assert (=> b!104248 (= lt!53236 (addStillNotContains!47 lt!53232 lt!53238 lt!53235 lt!53234))))

(assert (=> b!104248 (= lt!53234 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!104248 (= lt!53235 (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!104248 (= lt!53238 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!10962 () ListLongMap!1579)

(assert (=> b!104248 (= lt!53232 call!10962)))

(assert (=> b!104248 (= e!67887 (+!143 call!10962 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!10959 () Bool)

(assert (=> bm!10959 (= call!10962 (getCurrentListMapNoExtraKeys!110 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))))))

(declare-fun d!28129 () Bool)

(assert (=> d!28129 e!67889))

(declare-fun res!51989 () Bool)

(assert (=> d!28129 (=> (not res!51989) (not e!67889))))

(assert (=> d!28129 (= res!51989 (not (contains!825 lt!53237 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28129 (= lt!53237 e!67891)))

(declare-fun c!18025 () Bool)

(assert (=> d!28129 (= c!18025 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(assert (=> d!28129 (validMask!0 (mask!6697 (v!2876 (underlying!359 thiss!992))))))

(assert (=> d!28129 (= (getCurrentListMapNoExtraKeys!110 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992)))) lt!53237)))

(declare-fun b!104242 () Bool)

(declare-fun res!51990 () Bool)

(assert (=> b!104242 (=> (not res!51990) (not e!67889))))

(assert (=> b!104242 (= res!51990 (not (contains!825 lt!53237 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104249 () Bool)

(assert (=> b!104249 (= e!67886 e!67888)))

(declare-fun c!18026 () Bool)

(assert (=> b!104249 (= c!18026 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!104250 () Bool)

(assert (=> b!104250 (= e!67887 call!10962)))

(declare-fun b!104251 () Bool)

(assert (=> b!104251 (= e!67888 (= lt!53237 (getCurrentListMapNoExtraKeys!110 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (_values!2544 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992))) (extraKeys!2370 (v!2876 (underlying!359 thiss!992))) (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) (minValue!2438 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!104252 () Bool)

(assert (=> b!104252 (= e!67890 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!104252 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (= (and d!28129 c!18025) b!104241))

(assert (= (and d!28129 (not c!18025)) b!104246))

(assert (= (and b!104246 c!18023) b!104248))

(assert (= (and b!104246 (not c!18023)) b!104250))

(assert (= (or b!104248 b!104250) bm!10959))

(assert (= (and d!28129 res!51989) b!104242))

(assert (= (and b!104242 res!51990) b!104247))

(assert (= (and b!104247 res!51991) b!104252))

(assert (= (and b!104247 c!18024) b!104245))

(assert (= (and b!104247 (not c!18024)) b!104249))

(assert (= (and b!104245 res!51992) b!104244))

(assert (= (and b!104249 c!18026) b!104251))

(assert (= (and b!104249 (not c!18026)) b!104243))

(declare-fun b_lambda!4675 () Bool)

(assert (=> (not b_lambda!4675) (not b!104244)))

(assert (=> b!104244 t!5708))

(declare-fun b_and!6449 () Bool)

(assert (= b_and!6445 (and (=> t!5708 result!3433) b_and!6449)))

(assert (=> b!104244 t!5710))

(declare-fun b_and!6451 () Bool)

(assert (= b_and!6447 (and (=> t!5710 result!3437) b_and!6451)))

(declare-fun b_lambda!4677 () Bool)

(assert (=> (not b_lambda!4677) (not b!104248)))

(assert (=> b!104248 t!5708))

(declare-fun b_and!6453 () Bool)

(assert (= b_and!6449 (and (=> t!5708 result!3433) b_and!6453)))

(assert (=> b!104248 t!5710))

(declare-fun b_and!6455 () Bool)

(assert (= b_and!6451 (and (=> t!5710 result!3437) b_and!6455)))

(declare-fun m!115593 () Bool)

(assert (=> d!28129 m!115593))

(assert (=> d!28129 m!114185))

(declare-fun m!115595 () Bool)

(assert (=> b!104251 m!115595))

(assert (=> bm!10959 m!115595))

(declare-fun m!115597 () Bool)

(assert (=> b!104244 m!115597))

(assert (=> b!104244 m!114209))

(declare-fun m!115599 () Bool)

(assert (=> b!104244 m!115599))

(assert (=> b!104244 m!115597))

(declare-fun m!115601 () Bool)

(assert (=> b!104244 m!115601))

(assert (=> b!104244 m!114209))

(assert (=> b!104244 m!115601))

(declare-fun m!115603 () Bool)

(assert (=> b!104244 m!115603))

(assert (=> b!104248 m!115597))

(assert (=> b!104248 m!114209))

(assert (=> b!104248 m!115599))

(declare-fun m!115605 () Bool)

(assert (=> b!104248 m!115605))

(declare-fun m!115607 () Bool)

(assert (=> b!104248 m!115607))

(assert (=> b!104248 m!115605))

(declare-fun m!115609 () Bool)

(assert (=> b!104248 m!115609))

(assert (=> b!104248 m!115597))

(assert (=> b!104248 m!115601))

(assert (=> b!104248 m!114209))

(declare-fun m!115611 () Bool)

(assert (=> b!104248 m!115611))

(declare-fun m!115613 () Bool)

(assert (=> b!104242 m!115613))

(assert (=> b!104252 m!115601))

(assert (=> b!104252 m!115601))

(declare-fun m!115615 () Bool)

(assert (=> b!104252 m!115615))

(declare-fun m!115617 () Bool)

(assert (=> b!104243 m!115617))

(assert (=> b!104246 m!115601))

(assert (=> b!104246 m!115601))

(assert (=> b!104246 m!115615))

(assert (=> b!104245 m!115601))

(assert (=> b!104245 m!115601))

(declare-fun m!115619 () Bool)

(assert (=> b!104245 m!115619))

(assert (=> b!103758 d!28129))

(declare-fun d!28131 () Bool)

(declare-fun e!67894 () Bool)

(assert (=> d!28131 e!67894))

(declare-fun res!51993 () Bool)

(assert (=> d!28131 (=> res!51993 e!67894)))

(declare-fun lt!53242 () Bool)

(assert (=> d!28131 (= res!51993 (not lt!53242))))

(declare-fun lt!53240 () Bool)

(assert (=> d!28131 (= lt!53242 lt!53240)))

(declare-fun lt!53239 () Unit!3170)

(declare-fun e!67893 () Unit!3170)

(assert (=> d!28131 (= lt!53239 e!67893)))

(declare-fun c!18027 () Bool)

(assert (=> d!28131 (= c!18027 lt!53240)))

(assert (=> d!28131 (= lt!53240 (containsKey!158 (toList!805 lt!52976) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!28131 (= (contains!825 lt!52976 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) lt!53242)))

(declare-fun b!104253 () Bool)

(declare-fun lt!53241 () Unit!3170)

(assert (=> b!104253 (= e!67893 lt!53241)))

(assert (=> b!104253 (= lt!53241 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52976) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104253 (isDefined!108 (getValueByKey!154 (toList!805 lt!52976) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104254 () Bool)

(declare-fun Unit!3208 () Unit!3170)

(assert (=> b!104254 (= e!67893 Unit!3208)))

(declare-fun b!104255 () Bool)

(assert (=> b!104255 (= e!67894 (isDefined!108 (getValueByKey!154 (toList!805 lt!52976) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!28131 c!18027) b!104253))

(assert (= (and d!28131 (not c!18027)) b!104254))

(assert (= (and d!28131 (not res!51993)) b!104255))

(assert (=> d!28131 m!114523))

(declare-fun m!115621 () Bool)

(assert (=> d!28131 m!115621))

(assert (=> b!104253 m!114523))

(declare-fun m!115623 () Bool)

(assert (=> b!104253 m!115623))

(assert (=> b!104253 m!114523))

(declare-fun m!115625 () Bool)

(assert (=> b!104253 m!115625))

(assert (=> b!104253 m!115625))

(declare-fun m!115627 () Bool)

(assert (=> b!104253 m!115627))

(assert (=> b!104255 m!114523))

(assert (=> b!104255 m!115625))

(assert (=> b!104255 m!115625))

(assert (=> b!104255 m!115627))

(assert (=> b!103765 d!28131))

(declare-fun d!28133 () Bool)

(assert (=> d!28133 (isDefined!108 (getValueByKey!154 (toList!805 lt!52766) (_1!1211 lt!52547)))))

(declare-fun lt!53243 () Unit!3170)

(assert (=> d!28133 (= lt!53243 (choose!656 (toList!805 lt!52766) (_1!1211 lt!52547)))))

(declare-fun e!67895 () Bool)

(assert (=> d!28133 e!67895))

(declare-fun res!51994 () Bool)

(assert (=> d!28133 (=> (not res!51994) (not e!67895))))

(assert (=> d!28133 (= res!51994 (isStrictlySorted!303 (toList!805 lt!52766)))))

(assert (=> d!28133 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52766) (_1!1211 lt!52547)) lt!53243)))

(declare-fun b!104256 () Bool)

(assert (=> b!104256 (= e!67895 (containsKey!158 (toList!805 lt!52766) (_1!1211 lt!52547)))))

(assert (= (and d!28133 res!51994) b!104256))

(assert (=> d!28133 m!114441))

(assert (=> d!28133 m!114441))

(assert (=> d!28133 m!115307))

(declare-fun m!115629 () Bool)

(assert (=> d!28133 m!115629))

(declare-fun m!115631 () Bool)

(assert (=> d!28133 m!115631))

(assert (=> b!104256 m!115303))

(assert (=> b!104066 d!28133))

(declare-fun d!28135 () Bool)

(assert (=> d!28135 (= (isDefined!108 (getValueByKey!154 (toList!805 lt!52766) (_1!1211 lt!52547))) (not (isEmpty!374 (getValueByKey!154 (toList!805 lt!52766) (_1!1211 lt!52547)))))))

(declare-fun bs!4268 () Bool)

(assert (= bs!4268 d!28135))

(assert (=> bs!4268 m!114441))

(declare-fun m!115633 () Bool)

(assert (=> bs!4268 m!115633))

(assert (=> b!104066 d!28135))

(assert (=> b!104066 d!27911))

(declare-fun d!28137 () Bool)

(declare-fun res!51995 () Bool)

(declare-fun e!67896 () Bool)

(assert (=> d!28137 (=> res!51995 e!67896)))

(assert (=> d!28137 (= res!51995 (and ((_ is Cons!1633) lt!53018) (= (_1!1211 (h!2229 lt!53018)) (_1!1211 lt!52551))))))

(assert (=> d!28137 (= (containsKey!158 lt!53018 (_1!1211 lt!52551)) e!67896)))

(declare-fun b!104257 () Bool)

(declare-fun e!67897 () Bool)

(assert (=> b!104257 (= e!67896 e!67897)))

(declare-fun res!51996 () Bool)

(assert (=> b!104257 (=> (not res!51996) (not e!67897))))

(assert (=> b!104257 (= res!51996 (and (or (not ((_ is Cons!1633) lt!53018)) (bvsle (_1!1211 (h!2229 lt!53018)) (_1!1211 lt!52551))) ((_ is Cons!1633) lt!53018) (bvslt (_1!1211 (h!2229 lt!53018)) (_1!1211 lt!52551))))))

(declare-fun b!104258 () Bool)

(assert (=> b!104258 (= e!67897 (containsKey!158 (t!5711 lt!53018) (_1!1211 lt!52551)))))

(assert (= (and d!28137 (not res!51995)) b!104257))

(assert (= (and b!104257 res!51996) b!104258))

(declare-fun m!115635 () Bool)

(assert (=> b!104258 m!115635))

(assert (=> b!103852 d!28137))

(declare-fun d!28139 () Bool)

(declare-fun e!67899 () Bool)

(assert (=> d!28139 e!67899))

(declare-fun res!51997 () Bool)

(assert (=> d!28139 (=> res!51997 e!67899)))

(declare-fun lt!53247 () Bool)

(assert (=> d!28139 (= res!51997 (not lt!53247))))

(declare-fun lt!53245 () Bool)

(assert (=> d!28139 (= lt!53247 lt!53245)))

(declare-fun lt!53244 () Unit!3170)

(declare-fun e!67898 () Unit!3170)

(assert (=> d!28139 (= lt!53244 e!67898)))

(declare-fun c!18028 () Bool)

(assert (=> d!28139 (= c!18028 lt!53245)))

(assert (=> d!28139 (= lt!53245 (containsKey!158 (toList!805 (+!143 lt!52969 (tuple2!2403 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))))) lt!52975))))

(assert (=> d!28139 (= (contains!825 (+!143 lt!52969 (tuple2!2403 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)))) lt!52975) lt!53247)))

(declare-fun b!104259 () Bool)

(declare-fun lt!53246 () Unit!3170)

(assert (=> b!104259 (= e!67898 lt!53246)))

(assert (=> b!104259 (= lt!53246 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 (+!143 lt!52969 (tuple2!2403 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))))) lt!52975))))

(assert (=> b!104259 (isDefined!108 (getValueByKey!154 (toList!805 (+!143 lt!52969 (tuple2!2403 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))))) lt!52975))))

(declare-fun b!104260 () Bool)

(declare-fun Unit!3209 () Unit!3170)

(assert (=> b!104260 (= e!67898 Unit!3209)))

(declare-fun b!104261 () Bool)

(assert (=> b!104261 (= e!67899 (isDefined!108 (getValueByKey!154 (toList!805 (+!143 lt!52969 (tuple2!2403 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))))) lt!52975)))))

(assert (= (and d!28139 c!18028) b!104259))

(assert (= (and d!28139 (not c!18028)) b!104260))

(assert (= (and d!28139 (not res!51997)) b!104261))

(declare-fun m!115637 () Bool)

(assert (=> d!28139 m!115637))

(declare-fun m!115639 () Bool)

(assert (=> b!104259 m!115639))

(declare-fun m!115641 () Bool)

(assert (=> b!104259 m!115641))

(assert (=> b!104259 m!115641))

(declare-fun m!115643 () Bool)

(assert (=> b!104259 m!115643))

(assert (=> b!104261 m!115641))

(assert (=> b!104261 m!115641))

(assert (=> b!104261 m!115643))

(assert (=> b!103778 d!28139))

(declare-fun d!28141 () Bool)

(assert (=> d!28141 (contains!825 (+!143 lt!52969 (tuple2!2403 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)))) lt!52975)))

(declare-fun lt!53248 () Unit!3170)

(assert (=> d!28141 (= lt!53248 (choose!649 lt!52969 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)) lt!52975))))

(assert (=> d!28141 (contains!825 lt!52969 lt!52975)))

(assert (=> d!28141 (= (addStillContains!73 lt!52969 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)) lt!52975) lt!53248)))

(declare-fun bs!4269 () Bool)

(assert (= bs!4269 d!28141))

(assert (=> bs!4269 m!114775))

(assert (=> bs!4269 m!114775))

(assert (=> bs!4269 m!114777))

(declare-fun m!115645 () Bool)

(assert (=> bs!4269 m!115645))

(declare-fun m!115647 () Bool)

(assert (=> bs!4269 m!115647))

(assert (=> b!103778 d!28141))

(declare-fun d!28143 () Bool)

(assert (=> d!28143 (= (apply!97 (+!143 lt!52974 (tuple2!2403 lt!52973 (minValue!2438 newMap!16))) lt!52959) (apply!97 lt!52974 lt!52959))))

(declare-fun lt!53249 () Unit!3170)

(assert (=> d!28143 (= lt!53249 (choose!648 lt!52974 lt!52973 (minValue!2438 newMap!16) lt!52959))))

(declare-fun e!67900 () Bool)

(assert (=> d!28143 e!67900))

(declare-fun res!51998 () Bool)

(assert (=> d!28143 (=> (not res!51998) (not e!67900))))

(assert (=> d!28143 (= res!51998 (contains!825 lt!52974 lt!52959))))

(assert (=> d!28143 (= (addApplyDifferent!73 lt!52974 lt!52973 (minValue!2438 newMap!16) lt!52959) lt!53249)))

(declare-fun b!104262 () Bool)

(assert (=> b!104262 (= e!67900 (not (= lt!52959 lt!52973)))))

(assert (= (and d!28143 res!51998) b!104262))

(assert (=> d!28143 m!114793))

(assert (=> d!28143 m!114779))

(declare-fun m!115649 () Bool)

(assert (=> d!28143 m!115649))

(declare-fun m!115651 () Bool)

(assert (=> d!28143 m!115651))

(assert (=> d!28143 m!114779))

(assert (=> d!28143 m!114783))

(assert (=> b!103778 d!28143))

(declare-fun d!28145 () Bool)

(assert (=> d!28145 (= (apply!97 (+!143 lt!52965 (tuple2!2403 lt!52967 (minValue!2438 newMap!16))) lt!52962) (get!1336 (getValueByKey!154 (toList!805 (+!143 lt!52965 (tuple2!2403 lt!52967 (minValue!2438 newMap!16)))) lt!52962)))))

(declare-fun bs!4270 () Bool)

(assert (= bs!4270 d!28145))

(declare-fun m!115653 () Bool)

(assert (=> bs!4270 m!115653))

(assert (=> bs!4270 m!115653))

(declare-fun m!115655 () Bool)

(assert (=> bs!4270 m!115655))

(assert (=> b!103778 d!28145))

(declare-fun d!28147 () Bool)

(declare-fun e!67901 () Bool)

(assert (=> d!28147 e!67901))

(declare-fun res!52000 () Bool)

(assert (=> d!28147 (=> (not res!52000) (not e!67901))))

(declare-fun lt!53250 () ListLongMap!1579)

(assert (=> d!28147 (= res!52000 (contains!825 lt!53250 (_1!1211 (tuple2!2403 lt!52973 (minValue!2438 newMap!16)))))))

(declare-fun lt!53253 () List!1637)

(assert (=> d!28147 (= lt!53250 (ListLongMap!1580 lt!53253))))

(declare-fun lt!53252 () Unit!3170)

(declare-fun lt!53251 () Unit!3170)

(assert (=> d!28147 (= lt!53252 lt!53251)))

(assert (=> d!28147 (= (getValueByKey!154 lt!53253 (_1!1211 (tuple2!2403 lt!52973 (minValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 lt!52973 (minValue!2438 newMap!16)))))))

(assert (=> d!28147 (= lt!53251 (lemmaContainsTupThenGetReturnValue!72 lt!53253 (_1!1211 (tuple2!2403 lt!52973 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2403 lt!52973 (minValue!2438 newMap!16)))))))

(assert (=> d!28147 (= lt!53253 (insertStrictlySorted!74 (toList!805 lt!52974) (_1!1211 (tuple2!2403 lt!52973 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2403 lt!52973 (minValue!2438 newMap!16)))))))

(assert (=> d!28147 (= (+!143 lt!52974 (tuple2!2403 lt!52973 (minValue!2438 newMap!16))) lt!53250)))

(declare-fun b!104263 () Bool)

(declare-fun res!51999 () Bool)

(assert (=> b!104263 (=> (not res!51999) (not e!67901))))

(assert (=> b!104263 (= res!51999 (= (getValueByKey!154 (toList!805 lt!53250) (_1!1211 (tuple2!2403 lt!52973 (minValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 lt!52973 (minValue!2438 newMap!16))))))))

(declare-fun b!104264 () Bool)

(assert (=> b!104264 (= e!67901 (contains!828 (toList!805 lt!53250) (tuple2!2403 lt!52973 (minValue!2438 newMap!16))))))

(assert (= (and d!28147 res!52000) b!104263))

(assert (= (and b!104263 res!51999) b!104264))

(declare-fun m!115657 () Bool)

(assert (=> d!28147 m!115657))

(declare-fun m!115659 () Bool)

(assert (=> d!28147 m!115659))

(declare-fun m!115661 () Bool)

(assert (=> d!28147 m!115661))

(declare-fun m!115663 () Bool)

(assert (=> d!28147 m!115663))

(declare-fun m!115665 () Bool)

(assert (=> b!104263 m!115665))

(declare-fun m!115667 () Bool)

(assert (=> b!104264 m!115667))

(assert (=> b!103778 d!28147))

(declare-fun b!104265 () Bool)

(declare-fun e!67907 () ListLongMap!1579)

(assert (=> b!104265 (= e!67907 (ListLongMap!1580 Nil!1634))))

(declare-fun b!104267 () Bool)

(declare-fun e!67904 () Bool)

(declare-fun lt!53259 () ListLongMap!1579)

(assert (=> b!104267 (= e!67904 (isEmpty!372 lt!53259))))

(declare-fun b!104268 () Bool)

(assert (=> b!104268 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(assert (=> b!104268 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (ite c!17808 (_values!2544 newMap!16) lt!52657))))))

(declare-fun e!67908 () Bool)

(assert (=> b!104268 (= e!67908 (= (apply!97 lt!53259 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1333 (select (arr!2057 (ite c!17808 (_values!2544 newMap!16) lt!52657)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104269 () Bool)

(declare-fun e!67902 () Bool)

(assert (=> b!104269 (= e!67902 e!67908)))

(assert (=> b!104269 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun res!52004 () Bool)

(assert (=> b!104269 (= res!52004 (contains!825 lt!53259 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104269 (=> (not res!52004) (not e!67908))))

(declare-fun b!104270 () Bool)

(declare-fun e!67903 () ListLongMap!1579)

(assert (=> b!104270 (= e!67907 e!67903)))

(declare-fun c!18029 () Bool)

(assert (=> b!104270 (= c!18029 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104271 () Bool)

(declare-fun e!67905 () Bool)

(assert (=> b!104271 (= e!67905 e!67902)))

(declare-fun c!18030 () Bool)

(declare-fun e!67906 () Bool)

(assert (=> b!104271 (= c!18030 e!67906)))

(declare-fun res!52003 () Bool)

(assert (=> b!104271 (=> (not res!52003) (not e!67906))))

(assert (=> b!104271 (= res!52003 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104272 () Bool)

(declare-fun lt!53255 () Unit!3170)

(declare-fun lt!53258 () Unit!3170)

(assert (=> b!104272 (= lt!53255 lt!53258)))

(declare-fun lt!53260 () (_ BitVec 64))

(declare-fun lt!53254 () ListLongMap!1579)

(declare-fun lt!53256 () (_ BitVec 64))

(declare-fun lt!53257 () V!3211)

(assert (=> b!104272 (not (contains!825 (+!143 lt!53254 (tuple2!2403 lt!53260 lt!53257)) lt!53256))))

(assert (=> b!104272 (= lt!53258 (addStillNotContains!47 lt!53254 lt!53260 lt!53257 lt!53256))))

(assert (=> b!104272 (= lt!53256 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!104272 (= lt!53257 (get!1333 (select (arr!2057 (ite c!17808 (_values!2544 newMap!16) lt!52657)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!104272 (= lt!53260 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!10963 () ListLongMap!1579)

(assert (=> b!104272 (= lt!53254 call!10963)))

(assert (=> b!104272 (= e!67903 (+!143 call!10963 (tuple2!2403 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) (get!1333 (select (arr!2057 (ite c!17808 (_values!2544 newMap!16) lt!52657)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!10960 () Bool)

(assert (=> bm!10960 (= call!10963 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (ite c!17808 (_values!2544 newMap!16) lt!52657) (mask!6697 newMap!16) (ite (and c!17808 c!17814) lt!52673 (extraKeys!2370 newMap!16)) (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)) (minValue!2438 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2561 newMap!16)))))

(declare-fun d!28149 () Bool)

(assert (=> d!28149 e!67905))

(declare-fun res!52001 () Bool)

(assert (=> d!28149 (=> (not res!52001) (not e!67905))))

(assert (=> d!28149 (= res!52001 (not (contains!825 lt!53259 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28149 (= lt!53259 e!67907)))

(declare-fun c!18031 () Bool)

(assert (=> d!28149 (= c!18031 (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!28149 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28149 (= (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (ite c!17808 (_values!2544 newMap!16) lt!52657) (mask!6697 newMap!16) (ite (and c!17808 c!17814) lt!52673 (extraKeys!2370 newMap!16)) (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53259)))

(declare-fun b!104266 () Bool)

(declare-fun res!52002 () Bool)

(assert (=> b!104266 (=> (not res!52002) (not e!67905))))

(assert (=> b!104266 (= res!52002 (not (contains!825 lt!53259 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104273 () Bool)

(assert (=> b!104273 (= e!67902 e!67904)))

(declare-fun c!18032 () Bool)

(assert (=> b!104273 (= c!18032 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104274 () Bool)

(assert (=> b!104274 (= e!67903 call!10963)))

(declare-fun b!104275 () Bool)

(assert (=> b!104275 (= e!67904 (= lt!53259 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (ite c!17808 (_values!2544 newMap!16) lt!52657) (mask!6697 newMap!16) (ite (and c!17808 c!17814) lt!52673 (extraKeys!2370 newMap!16)) (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)) (minValue!2438 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2561 newMap!16))))))

(declare-fun b!104276 () Bool)

(assert (=> b!104276 (= e!67906 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104276 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!28149 c!18031) b!104265))

(assert (= (and d!28149 (not c!18031)) b!104270))

(assert (= (and b!104270 c!18029) b!104272))

(assert (= (and b!104270 (not c!18029)) b!104274))

(assert (= (or b!104272 b!104274) bm!10960))

(assert (= (and d!28149 res!52001) b!104266))

(assert (= (and b!104266 res!52002) b!104271))

(assert (= (and b!104271 res!52003) b!104276))

(assert (= (and b!104271 c!18030) b!104269))

(assert (= (and b!104271 (not c!18030)) b!104273))

(assert (= (and b!104269 res!52004) b!104268))

(assert (= (and b!104273 c!18032) b!104275))

(assert (= (and b!104273 (not c!18032)) b!104267))

(declare-fun b_lambda!4679 () Bool)

(assert (=> (not b_lambda!4679) (not b!104268)))

(assert (=> b!104268 t!5720))

(declare-fun b_and!6457 () Bool)

(assert (= b_and!6453 (and (=> t!5720 result!3447) b_and!6457)))

(assert (=> b!104268 t!5722))

(declare-fun b_and!6459 () Bool)

(assert (= b_and!6455 (and (=> t!5722 result!3449) b_and!6459)))

(declare-fun b_lambda!4681 () Bool)

(assert (=> (not b_lambda!4681) (not b!104272)))

(assert (=> b!104272 t!5720))

(declare-fun b_and!6461 () Bool)

(assert (= b_and!6457 (and (=> t!5720 result!3447) b_and!6461)))

(assert (=> b!104272 t!5722))

(declare-fun b_and!6463 () Bool)

(assert (= b_and!6459 (and (=> t!5722 result!3449) b_and!6463)))

(declare-fun m!115669 () Bool)

(assert (=> d!28149 m!115669))

(assert (=> d!28149 m!114517))

(declare-fun m!115671 () Bool)

(assert (=> b!104275 m!115671))

(assert (=> bm!10960 m!115671))

(assert (=> b!104268 m!114801))

(assert (=> b!104268 m!114563))

(assert (=> b!104268 m!114803))

(assert (=> b!104268 m!114801))

(assert (=> b!104268 m!114523))

(assert (=> b!104268 m!114563))

(assert (=> b!104268 m!114523))

(declare-fun m!115673 () Bool)

(assert (=> b!104268 m!115673))

(assert (=> b!104272 m!114801))

(assert (=> b!104272 m!114563))

(assert (=> b!104272 m!114803))

(declare-fun m!115675 () Bool)

(assert (=> b!104272 m!115675))

(declare-fun m!115677 () Bool)

(assert (=> b!104272 m!115677))

(assert (=> b!104272 m!115675))

(declare-fun m!115679 () Bool)

(assert (=> b!104272 m!115679))

(assert (=> b!104272 m!114801))

(assert (=> b!104272 m!114523))

(assert (=> b!104272 m!114563))

(declare-fun m!115681 () Bool)

(assert (=> b!104272 m!115681))

(declare-fun m!115683 () Bool)

(assert (=> b!104266 m!115683))

(assert (=> b!104276 m!114523))

(assert (=> b!104276 m!114523))

(assert (=> b!104276 m!114525))

(declare-fun m!115685 () Bool)

(assert (=> b!104267 m!115685))

(assert (=> b!104270 m!114523))

(assert (=> b!104270 m!114523))

(assert (=> b!104270 m!114525))

(assert (=> b!104269 m!114523))

(assert (=> b!104269 m!114523))

(declare-fun m!115687 () Bool)

(assert (=> b!104269 m!115687))

(assert (=> b!103778 d!28149))

(declare-fun d!28151 () Bool)

(assert (=> d!28151 (= (apply!97 (+!143 lt!52977 (tuple2!2403 lt!52978 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)))) lt!52980) (get!1336 (getValueByKey!154 (toList!805 (+!143 lt!52977 (tuple2!2403 lt!52978 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))))) lt!52980)))))

(declare-fun bs!4271 () Bool)

(assert (= bs!4271 d!28151))

(declare-fun m!115689 () Bool)

(assert (=> bs!4271 m!115689))

(assert (=> bs!4271 m!115689))

(declare-fun m!115691 () Bool)

(assert (=> bs!4271 m!115691))

(assert (=> b!103778 d!28151))

(declare-fun d!28153 () Bool)

(declare-fun e!67909 () Bool)

(assert (=> d!28153 e!67909))

(declare-fun res!52006 () Bool)

(assert (=> d!28153 (=> (not res!52006) (not e!67909))))

(declare-fun lt!53261 () ListLongMap!1579)

(assert (=> d!28153 (= res!52006 (contains!825 lt!53261 (_1!1211 (tuple2!2403 lt!52978 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))))))))

(declare-fun lt!53264 () List!1637)

(assert (=> d!28153 (= lt!53261 (ListLongMap!1580 lt!53264))))

(declare-fun lt!53263 () Unit!3170)

(declare-fun lt!53262 () Unit!3170)

(assert (=> d!28153 (= lt!53263 lt!53262)))

(assert (=> d!28153 (= (getValueByKey!154 lt!53264 (_1!1211 (tuple2!2403 lt!52978 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))))) (Some!159 (_2!1211 (tuple2!2403 lt!52978 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))))))))

(assert (=> d!28153 (= lt!53262 (lemmaContainsTupThenGetReturnValue!72 lt!53264 (_1!1211 (tuple2!2403 lt!52978 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)))) (_2!1211 (tuple2!2403 lt!52978 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))))))))

(assert (=> d!28153 (= lt!53264 (insertStrictlySorted!74 (toList!805 lt!52977) (_1!1211 (tuple2!2403 lt!52978 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)))) (_2!1211 (tuple2!2403 lt!52978 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))))))))

(assert (=> d!28153 (= (+!143 lt!52977 (tuple2!2403 lt!52978 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)))) lt!53261)))

(declare-fun b!104277 () Bool)

(declare-fun res!52005 () Bool)

(assert (=> b!104277 (=> (not res!52005) (not e!67909))))

(assert (=> b!104277 (= res!52005 (= (getValueByKey!154 (toList!805 lt!53261) (_1!1211 (tuple2!2403 lt!52978 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))))) (Some!159 (_2!1211 (tuple2!2403 lt!52978 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)))))))))

(declare-fun b!104278 () Bool)

(assert (=> b!104278 (= e!67909 (contains!828 (toList!805 lt!53261) (tuple2!2403 lt!52978 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)))))))

(assert (= (and d!28153 res!52006) b!104277))

(assert (= (and b!104277 res!52005) b!104278))

(declare-fun m!115693 () Bool)

(assert (=> d!28153 m!115693))

(declare-fun m!115695 () Bool)

(assert (=> d!28153 m!115695))

(declare-fun m!115697 () Bool)

(assert (=> d!28153 m!115697))

(declare-fun m!115699 () Bool)

(assert (=> d!28153 m!115699))

(declare-fun m!115701 () Bool)

(assert (=> b!104277 m!115701))

(declare-fun m!115703 () Bool)

(assert (=> b!104278 m!115703))

(assert (=> b!103778 d!28153))

(declare-fun d!28155 () Bool)

(assert (=> d!28155 (= (apply!97 (+!143 lt!52965 (tuple2!2403 lt!52967 (minValue!2438 newMap!16))) lt!52962) (apply!97 lt!52965 lt!52962))))

(declare-fun lt!53265 () Unit!3170)

(assert (=> d!28155 (= lt!53265 (choose!648 lt!52965 lt!52967 (minValue!2438 newMap!16) lt!52962))))

(declare-fun e!67910 () Bool)

(assert (=> d!28155 e!67910))

(declare-fun res!52007 () Bool)

(assert (=> d!28155 (=> (not res!52007) (not e!67910))))

(assert (=> d!28155 (= res!52007 (contains!825 lt!52965 lt!52962))))

(assert (=> d!28155 (= (addApplyDifferent!73 lt!52965 lt!52967 (minValue!2438 newMap!16) lt!52962) lt!53265)))

(declare-fun b!104279 () Bool)

(assert (=> b!104279 (= e!67910 (not (= lt!52962 lt!52967)))))

(assert (= (and d!28155 res!52007) b!104279))

(assert (=> d!28155 m!114787))

(assert (=> d!28155 m!114789))

(declare-fun m!115705 () Bool)

(assert (=> d!28155 m!115705))

(declare-fun m!115707 () Bool)

(assert (=> d!28155 m!115707))

(assert (=> d!28155 m!114789))

(assert (=> d!28155 m!114791))

(assert (=> b!103778 d!28155))

(declare-fun d!28157 () Bool)

(assert (=> d!28157 (= (apply!97 (+!143 lt!52974 (tuple2!2403 lt!52973 (minValue!2438 newMap!16))) lt!52959) (get!1336 (getValueByKey!154 (toList!805 (+!143 lt!52974 (tuple2!2403 lt!52973 (minValue!2438 newMap!16)))) lt!52959)))))

(declare-fun bs!4272 () Bool)

(assert (= bs!4272 d!28157))

(declare-fun m!115709 () Bool)

(assert (=> bs!4272 m!115709))

(assert (=> bs!4272 m!115709))

(declare-fun m!115711 () Bool)

(assert (=> bs!4272 m!115711))

(assert (=> b!103778 d!28157))

(declare-fun d!28159 () Bool)

(assert (=> d!28159 (= (apply!97 lt!52965 lt!52962) (get!1336 (getValueByKey!154 (toList!805 lt!52965) lt!52962)))))

(declare-fun bs!4273 () Bool)

(assert (= bs!4273 d!28159))

(declare-fun m!115713 () Bool)

(assert (=> bs!4273 m!115713))

(assert (=> bs!4273 m!115713))

(declare-fun m!115715 () Bool)

(assert (=> bs!4273 m!115715))

(assert (=> b!103778 d!28159))

(declare-fun d!28161 () Bool)

(declare-fun e!67911 () Bool)

(assert (=> d!28161 e!67911))

(declare-fun res!52009 () Bool)

(assert (=> d!28161 (=> (not res!52009) (not e!67911))))

(declare-fun lt!53266 () ListLongMap!1579)

(assert (=> d!28161 (= res!52009 (contains!825 lt!53266 (_1!1211 (tuple2!2403 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))))))))

(declare-fun lt!53269 () List!1637)

(assert (=> d!28161 (= lt!53266 (ListLongMap!1580 lt!53269))))

(declare-fun lt!53268 () Unit!3170)

(declare-fun lt!53267 () Unit!3170)

(assert (=> d!28161 (= lt!53268 lt!53267)))

(assert (=> d!28161 (= (getValueByKey!154 lt!53269 (_1!1211 (tuple2!2403 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))))) (Some!159 (_2!1211 (tuple2!2403 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))))))))

(assert (=> d!28161 (= lt!53267 (lemmaContainsTupThenGetReturnValue!72 lt!53269 (_1!1211 (tuple2!2403 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)))) (_2!1211 (tuple2!2403 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))))))))

(assert (=> d!28161 (= lt!53269 (insertStrictlySorted!74 (toList!805 lt!52969) (_1!1211 (tuple2!2403 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)))) (_2!1211 (tuple2!2403 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))))))))

(assert (=> d!28161 (= (+!143 lt!52969 (tuple2!2403 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)))) lt!53266)))

(declare-fun b!104280 () Bool)

(declare-fun res!52008 () Bool)

(assert (=> b!104280 (=> (not res!52008) (not e!67911))))

(assert (=> b!104280 (= res!52008 (= (getValueByKey!154 (toList!805 lt!53266) (_1!1211 (tuple2!2403 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16))))) (Some!159 (_2!1211 (tuple2!2403 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)))))))))

(declare-fun b!104281 () Bool)

(assert (=> b!104281 (= e!67911 (contains!828 (toList!805 lt!53266) (tuple2!2403 lt!52964 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)))))))

(assert (= (and d!28161 res!52009) b!104280))

(assert (= (and b!104280 res!52008) b!104281))

(declare-fun m!115717 () Bool)

(assert (=> d!28161 m!115717))

(declare-fun m!115719 () Bool)

(assert (=> d!28161 m!115719))

(declare-fun m!115721 () Bool)

(assert (=> d!28161 m!115721))

(declare-fun m!115723 () Bool)

(assert (=> d!28161 m!115723))

(declare-fun m!115725 () Bool)

(assert (=> b!104280 m!115725))

(declare-fun m!115727 () Bool)

(assert (=> b!104281 m!115727))

(assert (=> b!103778 d!28161))

(declare-fun d!28163 () Bool)

(assert (=> d!28163 (= (apply!97 (+!143 lt!52977 (tuple2!2403 lt!52978 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)))) lt!52980) (apply!97 lt!52977 lt!52980))))

(declare-fun lt!53270 () Unit!3170)

(assert (=> d!28163 (= lt!53270 (choose!648 lt!52977 lt!52978 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)) lt!52980))))

(declare-fun e!67912 () Bool)

(assert (=> d!28163 e!67912))

(declare-fun res!52010 () Bool)

(assert (=> d!28163 (=> (not res!52010) (not e!67912))))

(assert (=> d!28163 (= res!52010 (contains!825 lt!52977 lt!52980))))

(assert (=> d!28163 (= (addApplyDifferent!73 lt!52977 lt!52978 (ite (and c!17808 c!17814) lt!52546 (zeroValue!2438 newMap!16)) lt!52980) lt!53270)))

(declare-fun b!104282 () Bool)

(assert (=> b!104282 (= e!67912 (not (= lt!52980 lt!52978)))))

(assert (= (and d!28163 res!52010) b!104282))

(assert (=> d!28163 m!114781))

(assert (=> d!28163 m!114767))

(declare-fun m!115729 () Bool)

(assert (=> d!28163 m!115729))

(declare-fun m!115731 () Bool)

(assert (=> d!28163 m!115731))

(assert (=> d!28163 m!114767))

(assert (=> d!28163 m!114769))

(assert (=> b!103778 d!28163))

(declare-fun d!28165 () Bool)

(assert (=> d!28165 (= (apply!97 lt!52977 lt!52980) (get!1336 (getValueByKey!154 (toList!805 lt!52977) lt!52980)))))

(declare-fun bs!4274 () Bool)

(assert (= bs!4274 d!28165))

(declare-fun m!115733 () Bool)

(assert (=> bs!4274 m!115733))

(assert (=> bs!4274 m!115733))

(declare-fun m!115735 () Bool)

(assert (=> bs!4274 m!115735))

(assert (=> b!103778 d!28165))

(declare-fun d!28167 () Bool)

(assert (=> d!28167 (= (apply!97 lt!52974 lt!52959) (get!1336 (getValueByKey!154 (toList!805 lt!52974) lt!52959)))))

(declare-fun bs!4275 () Bool)

(assert (= bs!4275 d!28167))

(declare-fun m!115737 () Bool)

(assert (=> bs!4275 m!115737))

(assert (=> bs!4275 m!115737))

(declare-fun m!115739 () Bool)

(assert (=> bs!4275 m!115739))

(assert (=> b!103778 d!28167))

(declare-fun d!28169 () Bool)

(declare-fun e!67913 () Bool)

(assert (=> d!28169 e!67913))

(declare-fun res!52012 () Bool)

(assert (=> d!28169 (=> (not res!52012) (not e!67913))))

(declare-fun lt!53271 () ListLongMap!1579)

(assert (=> d!28169 (= res!52012 (contains!825 lt!53271 (_1!1211 (tuple2!2403 lt!52967 (minValue!2438 newMap!16)))))))

(declare-fun lt!53274 () List!1637)

(assert (=> d!28169 (= lt!53271 (ListLongMap!1580 lt!53274))))

(declare-fun lt!53273 () Unit!3170)

(declare-fun lt!53272 () Unit!3170)

(assert (=> d!28169 (= lt!53273 lt!53272)))

(assert (=> d!28169 (= (getValueByKey!154 lt!53274 (_1!1211 (tuple2!2403 lt!52967 (minValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 lt!52967 (minValue!2438 newMap!16)))))))

(assert (=> d!28169 (= lt!53272 (lemmaContainsTupThenGetReturnValue!72 lt!53274 (_1!1211 (tuple2!2403 lt!52967 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2403 lt!52967 (minValue!2438 newMap!16)))))))

(assert (=> d!28169 (= lt!53274 (insertStrictlySorted!74 (toList!805 lt!52965) (_1!1211 (tuple2!2403 lt!52967 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2403 lt!52967 (minValue!2438 newMap!16)))))))

(assert (=> d!28169 (= (+!143 lt!52965 (tuple2!2403 lt!52967 (minValue!2438 newMap!16))) lt!53271)))

(declare-fun b!104283 () Bool)

(declare-fun res!52011 () Bool)

(assert (=> b!104283 (=> (not res!52011) (not e!67913))))

(assert (=> b!104283 (= res!52011 (= (getValueByKey!154 (toList!805 lt!53271) (_1!1211 (tuple2!2403 lt!52967 (minValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 lt!52967 (minValue!2438 newMap!16))))))))

(declare-fun b!104284 () Bool)

(assert (=> b!104284 (= e!67913 (contains!828 (toList!805 lt!53271) (tuple2!2403 lt!52967 (minValue!2438 newMap!16))))))

(assert (= (and d!28169 res!52012) b!104283))

(assert (= (and b!104283 res!52011) b!104284))

(declare-fun m!115741 () Bool)

(assert (=> d!28169 m!115741))

(declare-fun m!115743 () Bool)

(assert (=> d!28169 m!115743))

(declare-fun m!115745 () Bool)

(assert (=> d!28169 m!115745))

(declare-fun m!115747 () Bool)

(assert (=> d!28169 m!115747))

(declare-fun m!115749 () Bool)

(assert (=> b!104283 m!115749))

(declare-fun m!115751 () Bool)

(assert (=> b!104284 m!115751))

(assert (=> b!103778 d!28169))

(declare-fun b!104286 () Bool)

(declare-fun e!67914 () Option!160)

(declare-fun e!67915 () Option!160)

(assert (=> b!104286 (= e!67914 e!67915)))

(declare-fun c!18034 () Bool)

(assert (=> b!104286 (= c!18034 (and ((_ is Cons!1633) (t!5711 lt!52769)) (not (= (_1!1211 (h!2229 (t!5711 lt!52769))) (_1!1211 lt!52547)))))))

(declare-fun b!104285 () Bool)

(assert (=> b!104285 (= e!67914 (Some!159 (_2!1211 (h!2229 (t!5711 lt!52769)))))))

(declare-fun b!104287 () Bool)

(assert (=> b!104287 (= e!67915 (getValueByKey!154 (t!5711 (t!5711 lt!52769)) (_1!1211 lt!52547)))))

(declare-fun d!28171 () Bool)

(declare-fun c!18033 () Bool)

(assert (=> d!28171 (= c!18033 (and ((_ is Cons!1633) (t!5711 lt!52769)) (= (_1!1211 (h!2229 (t!5711 lt!52769))) (_1!1211 lt!52547))))))

(assert (=> d!28171 (= (getValueByKey!154 (t!5711 lt!52769) (_1!1211 lt!52547)) e!67914)))

(declare-fun b!104288 () Bool)

(assert (=> b!104288 (= e!67915 None!158)))

(assert (= (and d!28171 c!18033) b!104285))

(assert (= (and d!28171 (not c!18033)) b!104286))

(assert (= (and b!104286 c!18034) b!104287))

(assert (= (and b!104286 (not c!18034)) b!104288))

(declare-fun m!115753 () Bool)

(assert (=> b!104287 m!115753))

(assert (=> b!104071 d!28171))

(declare-fun b!104290 () Bool)

(declare-fun e!67916 () Option!160)

(declare-fun e!67917 () Option!160)

(assert (=> b!104290 (= e!67916 e!67917)))

(declare-fun c!18036 () Bool)

(assert (=> b!104290 (= c!18036 (and ((_ is Cons!1633) (toList!805 lt!52940)) (not (= (_1!1211 (h!2229 (toList!805 lt!52940))) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun b!104289 () Bool)

(assert (=> b!104289 (= e!67916 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52940)))))))

(declare-fun b!104291 () Bool)

(assert (=> b!104291 (= e!67917 (getValueByKey!154 (t!5711 (toList!805 lt!52940)) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun d!28173 () Bool)

(declare-fun c!18035 () Bool)

(assert (=> d!28173 (= c!18035 (and ((_ is Cons!1633) (toList!805 lt!52940)) (= (_1!1211 (h!2229 (toList!805 lt!52940))) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28173 (= (getValueByKey!154 (toList!805 lt!52940) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) e!67916)))

(declare-fun b!104292 () Bool)

(assert (=> b!104292 (= e!67917 None!158)))

(assert (= (and d!28173 c!18035) b!104289))

(assert (= (and d!28173 (not c!18035)) b!104290))

(assert (= (and b!104290 c!18036) b!104291))

(assert (= (and b!104290 (not c!18036)) b!104292))

(declare-fun m!115755 () Bool)

(assert (=> b!104291 m!115755))

(assert (=> b!103742 d!28173))

(declare-fun b!104293 () Bool)

(declare-fun e!67918 () Bool)

(declare-fun e!67921 () Bool)

(assert (=> b!104293 (= e!67918 e!67921)))

(declare-fun c!18037 () Bool)

(assert (=> b!104293 (= c!18037 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!104294 () Bool)

(declare-fun e!67919 () Bool)

(assert (=> b!104294 (= e!67919 (contains!827 Nil!1635 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!104295 () Bool)

(declare-fun call!10964 () Bool)

(assert (=> b!104295 (= e!67921 call!10964)))

(declare-fun b!104296 () Bool)

(declare-fun e!67920 () Bool)

(assert (=> b!104296 (= e!67920 e!67918)))

(declare-fun res!52013 () Bool)

(assert (=> b!104296 (=> (not res!52013) (not e!67918))))

(assert (=> b!104296 (= res!52013 (not e!67919))))

(declare-fun res!52014 () Bool)

(assert (=> b!104296 (=> (not res!52014) (not e!67919))))

(assert (=> b!104296 (= res!52014 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!104297 () Bool)

(assert (=> b!104297 (= e!67921 call!10964)))

(declare-fun bm!10961 () Bool)

(assert (=> bm!10961 (= call!10964 (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18037 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) #b00000000000000000000000000000000) Nil!1635) Nil!1635)))))

(declare-fun d!28175 () Bool)

(declare-fun res!52015 () Bool)

(assert (=> d!28175 (=> res!52015 e!67920)))

(assert (=> d!28175 (= res!52015 (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(assert (=> d!28175 (= (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000000 Nil!1635) e!67920)))

(assert (= (and d!28175 (not res!52015)) b!104296))

(assert (= (and b!104296 res!52014) b!104294))

(assert (= (and b!104296 res!52013) b!104293))

(assert (= (and b!104293 c!18037) b!104295))

(assert (= (and b!104293 (not c!18037)) b!104297))

(assert (= (or b!104295 b!104297) bm!10961))

(declare-fun m!115757 () Bool)

(assert (=> b!104293 m!115757))

(assert (=> b!104293 m!115757))

(declare-fun m!115759 () Bool)

(assert (=> b!104293 m!115759))

(assert (=> b!104294 m!115757))

(assert (=> b!104294 m!115757))

(declare-fun m!115761 () Bool)

(assert (=> b!104294 m!115761))

(assert (=> b!104296 m!115757))

(assert (=> b!104296 m!115757))

(assert (=> b!104296 m!115759))

(assert (=> bm!10961 m!115757))

(declare-fun m!115763 () Bool)

(assert (=> bm!10961 m!115763))

(assert (=> b!103728 d!28175))

(declare-fun d!28177 () Bool)

(declare-fun res!52016 () Bool)

(declare-fun e!67922 () Bool)

(assert (=> d!28177 (=> res!52016 e!67922)))

(assert (=> d!28177 (= res!52016 (or ((_ is Nil!1634) lt!53018) ((_ is Nil!1634) (t!5711 lt!53018))))))

(assert (=> d!28177 (= (isStrictlySorted!303 lt!53018) e!67922)))

(declare-fun b!104298 () Bool)

(declare-fun e!67923 () Bool)

(assert (=> b!104298 (= e!67922 e!67923)))

(declare-fun res!52017 () Bool)

(assert (=> b!104298 (=> (not res!52017) (not e!67923))))

(assert (=> b!104298 (= res!52017 (bvslt (_1!1211 (h!2229 lt!53018)) (_1!1211 (h!2229 (t!5711 lt!53018)))))))

(declare-fun b!104299 () Bool)

(assert (=> b!104299 (= e!67923 (isStrictlySorted!303 (t!5711 lt!53018)))))

(assert (= (and d!28177 (not res!52016)) b!104298))

(assert (= (and b!104298 res!52017) b!104299))

(declare-fun m!115765 () Bool)

(assert (=> b!104299 m!115765))

(assert (=> d!27899 d!28177))

(declare-fun d!28179 () Bool)

(declare-fun res!52018 () Bool)

(declare-fun e!67924 () Bool)

(assert (=> d!28179 (=> res!52018 e!67924)))

(assert (=> d!28179 (= res!52018 (or ((_ is Nil!1634) (toList!805 lt!52542)) ((_ is Nil!1634) (t!5711 (toList!805 lt!52542)))))))

(assert (=> d!28179 (= (isStrictlySorted!303 (toList!805 lt!52542)) e!67924)))

(declare-fun b!104300 () Bool)

(declare-fun e!67925 () Bool)

(assert (=> b!104300 (= e!67924 e!67925)))

(declare-fun res!52019 () Bool)

(assert (=> b!104300 (=> (not res!52019) (not e!67925))))

(assert (=> b!104300 (= res!52019 (bvslt (_1!1211 (h!2229 (toList!805 lt!52542))) (_1!1211 (h!2229 (t!5711 (toList!805 lt!52542))))))))

(declare-fun b!104301 () Bool)

(assert (=> b!104301 (= e!67925 (isStrictlySorted!303 (t!5711 (toList!805 lt!52542))))))

(assert (= (and d!28179 (not res!52018)) b!104300))

(assert (= (and b!104300 res!52019) b!104301))

(declare-fun m!115767 () Bool)

(assert (=> b!104301 m!115767))

(assert (=> d!27899 d!28179))

(declare-fun d!28181 () Bool)

(assert (=> d!28181 (= (get!1334 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2875 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103883 d!28181))

(declare-fun d!28183 () Bool)

(assert (=> d!28183 (isDefined!108 (getValueByKey!154 (toList!805 lt!52753) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!53275 () Unit!3170)

(assert (=> d!28183 (= lt!53275 (choose!656 (toList!805 lt!52753) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!67926 () Bool)

(assert (=> d!28183 e!67926))

(declare-fun res!52020 () Bool)

(assert (=> d!28183 (=> (not res!52020) (not e!67926))))

(assert (=> d!28183 (= res!52020 (isStrictlySorted!303 (toList!805 lt!52753)))))

(assert (=> d!28183 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52753) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!53275)))

(declare-fun b!104302 () Bool)

(assert (=> b!104302 (= e!67926 (containsKey!158 (toList!805 lt!52753) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!28183 res!52020) b!104302))

(assert (=> d!28183 m!114355))

(assert (=> d!28183 m!114667))

(assert (=> d!28183 m!114667))

(assert (=> d!28183 m!114669))

(assert (=> d!28183 m!114355))

(declare-fun m!115769 () Bool)

(assert (=> d!28183 m!115769))

(assert (=> d!28183 m!115581))

(assert (=> b!104302 m!114355))

(assert (=> b!104302 m!114663))

(assert (=> b!103731 d!28183))

(declare-fun d!28185 () Bool)

(assert (=> d!28185 (= (isDefined!108 (getValueByKey!154 (toList!805 lt!52753) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!374 (getValueByKey!154 (toList!805 lt!52753) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4276 () Bool)

(assert (= bs!4276 d!28185))

(assert (=> bs!4276 m!114667))

(declare-fun m!115771 () Bool)

(assert (=> bs!4276 m!115771))

(assert (=> b!103731 d!28185))

(declare-fun b!104304 () Bool)

(declare-fun e!67927 () Option!160)

(declare-fun e!67928 () Option!160)

(assert (=> b!104304 (= e!67927 e!67928)))

(declare-fun c!18039 () Bool)

(assert (=> b!104304 (= c!18039 (and ((_ is Cons!1633) (toList!805 lt!52753)) (not (= (_1!1211 (h!2229 (toList!805 lt!52753))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!104303 () Bool)

(assert (=> b!104303 (= e!67927 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52753)))))))

(declare-fun b!104305 () Bool)

(assert (=> b!104305 (= e!67928 (getValueByKey!154 (t!5711 (toList!805 lt!52753)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun d!28187 () Bool)

(declare-fun c!18038 () Bool)

(assert (=> d!28187 (= c!18038 (and ((_ is Cons!1633) (toList!805 lt!52753)) (= (_1!1211 (h!2229 (toList!805 lt!52753))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28187 (= (getValueByKey!154 (toList!805 lt!52753) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!67927)))

(declare-fun b!104306 () Bool)

(assert (=> b!104306 (= e!67928 None!158)))

(assert (= (and d!28187 c!18038) b!104303))

(assert (= (and d!28187 (not c!18038)) b!104304))

(assert (= (and b!104304 c!18039) b!104305))

(assert (= (and b!104304 (not c!18039)) b!104306))

(assert (=> b!104305 m!114355))

(declare-fun m!115773 () Bool)

(assert (=> b!104305 m!115773))

(assert (=> b!103731 d!28187))

(assert (=> b!103693 d!27823))

(declare-fun d!28189 () Bool)

(declare-fun res!52021 () Bool)

(declare-fun e!67929 () Bool)

(assert (=> d!28189 (=> res!52021 e!67929)))

(assert (=> d!28189 (= res!52021 (and ((_ is Cons!1633) (toList!805 e!67410)) (= (_1!1211 (h!2229 (toList!805 e!67410))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))))

(assert (=> d!28189 (= (containsKey!158 (toList!805 e!67410) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) e!67929)))

(declare-fun b!104307 () Bool)

(declare-fun e!67930 () Bool)

(assert (=> b!104307 (= e!67929 e!67930)))

(declare-fun res!52022 () Bool)

(assert (=> b!104307 (=> (not res!52022) (not e!67930))))

(assert (=> b!104307 (= res!52022 (and (or (not ((_ is Cons!1633) (toList!805 e!67410))) (bvsle (_1!1211 (h!2229 (toList!805 e!67410))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))) ((_ is Cons!1633) (toList!805 e!67410)) (bvslt (_1!1211 (h!2229 (toList!805 e!67410))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))))

(declare-fun b!104308 () Bool)

(assert (=> b!104308 (= e!67930 (containsKey!158 (t!5711 (toList!805 e!67410)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (= (and d!28189 (not res!52021)) b!104307))

(assert (= (and b!104307 res!52022) b!104308))

(assert (=> b!104308 m!114187))

(declare-fun m!115775 () Bool)

(assert (=> b!104308 m!115775))

(assert (=> d!27959 d!28189))

(declare-fun d!28191 () Bool)

(declare-fun res!52023 () Bool)

(declare-fun e!67931 () Bool)

(assert (=> d!28191 (=> res!52023 e!67931)))

(assert (=> d!28191 (= res!52023 (and ((_ is Cons!1633) (toList!805 lt!52791)) (= (_1!1211 (h!2229 (toList!805 lt!52791))) (_1!1211 lt!52547))))))

(assert (=> d!28191 (= (containsKey!158 (toList!805 lt!52791) (_1!1211 lt!52547)) e!67931)))

(declare-fun b!104309 () Bool)

(declare-fun e!67932 () Bool)

(assert (=> b!104309 (= e!67931 e!67932)))

(declare-fun res!52024 () Bool)

(assert (=> b!104309 (=> (not res!52024) (not e!67932))))

(assert (=> b!104309 (= res!52024 (and (or (not ((_ is Cons!1633) (toList!805 lt!52791))) (bvsle (_1!1211 (h!2229 (toList!805 lt!52791))) (_1!1211 lt!52547))) ((_ is Cons!1633) (toList!805 lt!52791)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52791))) (_1!1211 lt!52547))))))

(declare-fun b!104310 () Bool)

(assert (=> b!104310 (= e!67932 (containsKey!158 (t!5711 (toList!805 lt!52791)) (_1!1211 lt!52547)))))

(assert (= (and d!28191 (not res!52023)) b!104309))

(assert (= (and b!104309 res!52024) b!104310))

(declare-fun m!115777 () Bool)

(assert (=> b!104310 m!115777))

(assert (=> d!27923 d!28191))

(declare-fun d!28193 () Bool)

(declare-fun lt!53276 () Bool)

(assert (=> d!28193 (= lt!53276 (select (content!107 lt!53024) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))))))

(declare-fun e!67934 () Bool)

(assert (=> d!28193 (= lt!53276 e!67934)))

(declare-fun res!52025 () Bool)

(assert (=> d!28193 (=> (not res!52025) (not e!67934))))

(assert (=> d!28193 (= res!52025 ((_ is Cons!1633) lt!53024))))

(assert (=> d!28193 (= (contains!828 lt!53024 (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))) lt!53276)))

(declare-fun b!104311 () Bool)

(declare-fun e!67933 () Bool)

(assert (=> b!104311 (= e!67934 e!67933)))

(declare-fun res!52026 () Bool)

(assert (=> b!104311 (=> res!52026 e!67933)))

(assert (=> b!104311 (= res!52026 (= (h!2229 lt!53024) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))))))

(declare-fun b!104312 () Bool)

(assert (=> b!104312 (= e!67933 (contains!828 (t!5711 lt!53024) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))))))

(assert (= (and d!28193 res!52025) b!104311))

(assert (= (and b!104311 (not res!52026)) b!104312))

(declare-fun m!115779 () Bool)

(assert (=> d!28193 m!115779))

(declare-fun m!115781 () Bool)

(assert (=> d!28193 m!115781))

(declare-fun m!115783 () Bool)

(assert (=> b!104312 m!115783))

(assert (=> b!103866 d!28193))

(declare-fun d!28195 () Bool)

(assert (=> d!28195 (contains!825 (getCurrentListMap!482 (_keys!4263 newMap!16) lt!52657 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676)))))

(assert (=> d!28195 true))

(declare-fun _$16!123 () Unit!3170)

(assert (=> d!28195 (= (choose!652 (_keys!4263 newMap!16) lt!52657 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (index!3220 lt!52676) (defaultEntry!2561 newMap!16)) _$16!123)))

(declare-fun bs!4277 () Bool)

(assert (= bs!4277 d!28195))

(assert (=> bs!4277 m!115103))

(assert (=> bs!4277 m!114327))

(assert (=> bs!4277 m!115103))

(assert (=> bs!4277 m!114327))

(assert (=> bs!4277 m!115105))

(assert (=> d!27953 d!28195))

(assert (=> d!27953 d!28049))

(assert (=> b!103916 d!28077))

(declare-fun d!28197 () Bool)

(assert (=> d!28197 (= (apply!97 lt!52957 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1336 (getValueByKey!154 (toList!805 lt!52957) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!4278 () Bool)

(assert (= bs!4278 d!28197))

(assert (=> bs!4278 m!114741))

(assert (=> bs!4278 m!115463))

(assert (=> bs!4278 m!115463))

(declare-fun m!115785 () Bool)

(assert (=> bs!4278 m!115785))

(assert (=> b!103751 d!28197))

(declare-fun d!28199 () Bool)

(declare-fun c!18040 () Bool)

(assert (=> d!28199 (= c!18040 ((_ is ValueCellFull!993) (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!67935 () V!3211)

(assert (=> d!28199 (= (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!67935)))

(declare-fun b!104313 () Bool)

(assert (=> b!104313 (= e!67935 (get!1334 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104314 () Bool)

(assert (=> b!104314 (= e!67935 (get!1335 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28199 c!18040) b!104313))

(assert (= (and d!28199 (not c!18040)) b!104314))

(assert (=> b!104313 m!114737))

(assert (=> b!104313 m!114209))

(declare-fun m!115787 () Bool)

(assert (=> b!104313 m!115787))

(assert (=> b!104314 m!114737))

(assert (=> b!104314 m!114209))

(declare-fun m!115789 () Bool)

(assert (=> b!104314 m!115789))

(assert (=> b!103751 d!28199))

(declare-fun d!28201 () Bool)

(declare-fun res!52027 () Bool)

(declare-fun e!67936 () Bool)

(assert (=> d!28201 (=> res!52027 e!67936)))

(assert (=> d!28201 (= res!52027 (and ((_ is Cons!1633) (toList!805 lt!52789)) (= (_1!1211 (h!2229 (toList!805 lt!52789))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28201 (= (containsKey!158 (toList!805 lt!52789) #b1000000000000000000000000000000000000000000000000000000000000000) e!67936)))

(declare-fun b!104315 () Bool)

(declare-fun e!67937 () Bool)

(assert (=> b!104315 (= e!67936 e!67937)))

(declare-fun res!52028 () Bool)

(assert (=> b!104315 (=> (not res!52028) (not e!67937))))

(assert (=> b!104315 (= res!52028 (and (or (not ((_ is Cons!1633) (toList!805 lt!52789))) (bvsle (_1!1211 (h!2229 (toList!805 lt!52789))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1633) (toList!805 lt!52789)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52789))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104316 () Bool)

(assert (=> b!104316 (= e!67937 (containsKey!158 (t!5711 (toList!805 lt!52789)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28201 (not res!52027)) b!104315))

(assert (= (and b!104315 res!52028) b!104316))

(declare-fun m!115791 () Bool)

(assert (=> b!104316 m!115791))

(assert (=> d!27987 d!28201))

(declare-fun d!28203 () Bool)

(assert (=> d!28203 (= (get!1336 (getValueByKey!154 (toList!805 lt!52751) lt!52736)) (v!2880 (getValueByKey!154 (toList!805 lt!52751) lt!52736)))))

(assert (=> d!27873 d!28203))

(declare-fun b!104318 () Bool)

(declare-fun e!67938 () Option!160)

(declare-fun e!67939 () Option!160)

(assert (=> b!104318 (= e!67938 e!67939)))

(declare-fun c!18042 () Bool)

(assert (=> b!104318 (= c!18042 (and ((_ is Cons!1633) (toList!805 lt!52751)) (not (= (_1!1211 (h!2229 (toList!805 lt!52751))) lt!52736))))))

(declare-fun b!104317 () Bool)

(assert (=> b!104317 (= e!67938 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52751)))))))

(declare-fun b!104319 () Bool)

(assert (=> b!104319 (= e!67939 (getValueByKey!154 (t!5711 (toList!805 lt!52751)) lt!52736))))

(declare-fun d!28205 () Bool)

(declare-fun c!18041 () Bool)

(assert (=> d!28205 (= c!18041 (and ((_ is Cons!1633) (toList!805 lt!52751)) (= (_1!1211 (h!2229 (toList!805 lt!52751))) lt!52736)))))

(assert (=> d!28205 (= (getValueByKey!154 (toList!805 lt!52751) lt!52736) e!67938)))

(declare-fun b!104320 () Bool)

(assert (=> b!104320 (= e!67939 None!158)))

(assert (= (and d!28205 c!18041) b!104317))

(assert (= (and d!28205 (not c!18041)) b!104318))

(assert (= (and b!104318 c!18042) b!104319))

(assert (= (and b!104318 (not c!18042)) b!104320))

(declare-fun m!115793 () Bool)

(assert (=> b!104319 m!115793))

(assert (=> d!27873 d!28205))

(declare-fun d!28207 () Bool)

(declare-fun e!67941 () Bool)

(assert (=> d!28207 e!67941))

(declare-fun res!52029 () Bool)

(assert (=> d!28207 (=> res!52029 e!67941)))

(declare-fun lt!53280 () Bool)

(assert (=> d!28207 (= res!52029 (not lt!53280))))

(declare-fun lt!53278 () Bool)

(assert (=> d!28207 (= lt!53280 lt!53278)))

(declare-fun lt!53277 () Unit!3170)

(declare-fun e!67940 () Unit!3170)

(assert (=> d!28207 (= lt!53277 e!67940)))

(declare-fun c!18043 () Bool)

(assert (=> d!28207 (= c!18043 lt!53278)))

(assert (=> d!28207 (= lt!53278 (containsKey!158 (toList!805 lt!52976) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28207 (= (contains!825 lt!52976 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53280)))

(declare-fun b!104321 () Bool)

(declare-fun lt!53279 () Unit!3170)

(assert (=> b!104321 (= e!67940 lt!53279)))

(assert (=> b!104321 (= lt!53279 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52976) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104321 (isDefined!108 (getValueByKey!154 (toList!805 lt!52976) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104322 () Bool)

(declare-fun Unit!3210 () Unit!3170)

(assert (=> b!104322 (= e!67940 Unit!3210)))

(declare-fun b!104323 () Bool)

(assert (=> b!104323 (= e!67941 (isDefined!108 (getValueByKey!154 (toList!805 lt!52976) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28207 c!18043) b!104321))

(assert (= (and d!28207 (not c!18043)) b!104322))

(assert (= (and d!28207 (not res!52029)) b!104323))

(declare-fun m!115795 () Bool)

(assert (=> d!28207 m!115795))

(declare-fun m!115797 () Bool)

(assert (=> b!104321 m!115797))

(declare-fun m!115799 () Bool)

(assert (=> b!104321 m!115799))

(assert (=> b!104321 m!115799))

(declare-fun m!115801 () Bool)

(assert (=> b!104321 m!115801))

(assert (=> b!104323 m!115799))

(assert (=> b!104323 m!115799))

(assert (=> b!104323 m!115801))

(assert (=> bm!10899 d!28207))

(declare-fun d!28209 () Bool)

(assert (=> d!28209 (= (isDefined!108 (getValueByKey!154 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52752)) (not (isEmpty!374 (getValueByKey!154 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52752))))))

(declare-fun bs!4279 () Bool)

(assert (= bs!4279 d!28209))

(assert (=> bs!4279 m!114903))

(declare-fun m!115803 () Bool)

(assert (=> bs!4279 m!115803))

(assert (=> b!103807 d!28209))

(declare-fun b!104325 () Bool)

(declare-fun e!67942 () Option!160)

(declare-fun e!67943 () Option!160)

(assert (=> b!104325 (= e!67942 e!67943)))

(declare-fun c!18045 () Bool)

(assert (=> b!104325 (= c!18045 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))) (not (= (_1!1211 (h!2229 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))) lt!52752))))))

(declare-fun b!104324 () Bool)

(assert (=> b!104324 (= e!67942 (Some!159 (_2!1211 (h!2229 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))))

(declare-fun b!104326 () Bool)

(assert (=> b!104326 (= e!67943 (getValueByKey!154 (t!5711 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))) lt!52752))))

(declare-fun c!18044 () Bool)

(declare-fun d!28211 () Bool)

(assert (=> d!28211 (= c!18044 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))) (= (_1!1211 (h!2229 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))) lt!52752)))))

(assert (=> d!28211 (= (getValueByKey!154 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52752) e!67942)))

(declare-fun b!104327 () Bool)

(assert (=> b!104327 (= e!67943 None!158)))

(assert (= (and d!28211 c!18044) b!104324))

(assert (= (and d!28211 (not c!18044)) b!104325))

(assert (= (and b!104325 c!18045) b!104326))

(assert (= (and b!104325 (not c!18045)) b!104327))

(declare-fun m!115805 () Bool)

(assert (=> b!104326 m!115805))

(assert (=> b!103807 d!28211))

(declare-fun d!28213 () Bool)

(declare-fun e!67945 () Bool)

(assert (=> d!28213 e!67945))

(declare-fun res!52030 () Bool)

(assert (=> d!28213 (=> res!52030 e!67945)))

(declare-fun lt!53284 () Bool)

(assert (=> d!28213 (= res!52030 (not lt!53284))))

(declare-fun lt!53282 () Bool)

(assert (=> d!28213 (= lt!53284 lt!53282)))

(declare-fun lt!53281 () Unit!3170)

(declare-fun e!67944 () Unit!3170)

(assert (=> d!28213 (= lt!53281 e!67944)))

(declare-fun c!18046 () Bool)

(assert (=> d!28213 (= c!18046 lt!53282)))

(assert (=> d!28213 (= lt!53282 (containsKey!158 (toList!805 lt!53128) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!28213 (= (contains!825 lt!53128 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) lt!53284)))

(declare-fun b!104328 () Bool)

(declare-fun lt!53283 () Unit!3170)

(assert (=> b!104328 (= e!67944 lt!53283)))

(assert (=> b!104328 (= lt!53283 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!53128) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104328 (isDefined!108 (getValueByKey!154 (toList!805 lt!53128) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104329 () Bool)

(declare-fun Unit!3211 () Unit!3170)

(assert (=> b!104329 (= e!67944 Unit!3211)))

(declare-fun b!104330 () Bool)

(assert (=> b!104330 (= e!67945 (isDefined!108 (getValueByKey!154 (toList!805 lt!53128) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!28213 c!18046) b!104328))

(assert (= (and d!28213 (not c!18046)) b!104329))

(assert (= (and d!28213 (not res!52030)) b!104330))

(assert (=> d!28213 m!114523))

(declare-fun m!115807 () Bool)

(assert (=> d!28213 m!115807))

(assert (=> b!104328 m!114523))

(declare-fun m!115809 () Bool)

(assert (=> b!104328 m!115809))

(assert (=> b!104328 m!114523))

(declare-fun m!115811 () Bool)

(assert (=> b!104328 m!115811))

(assert (=> b!104328 m!115811))

(declare-fun m!115813 () Bool)

(assert (=> b!104328 m!115813))

(assert (=> b!104330 m!114523))

(assert (=> b!104330 m!115811))

(assert (=> b!104330 m!115811))

(assert (=> b!104330 m!115813))

(assert (=> b!104026 d!28213))

(assert (=> bm!10930 d!27851))

(declare-fun b!104331 () Bool)

(declare-fun e!67947 () Bool)

(declare-fun e!67946 () Bool)

(assert (=> b!104331 (= e!67947 e!67946)))

(declare-fun c!18047 () Bool)

(assert (=> b!104331 (= c!18047 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (_2!1210 lt!52662))) #b00000000000000000000000000000000)))))

(declare-fun b!104332 () Bool)

(declare-fun call!10965 () Bool)

(assert (=> b!104332 (= e!67946 call!10965)))

(declare-fun b!104333 () Bool)

(declare-fun e!67948 () Bool)

(assert (=> b!104333 (= e!67948 call!10965)))

(declare-fun bm!10962 () Bool)

(assert (=> bm!10962 (= call!10965 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4263 (_2!1210 lt!52662)) (mask!6697 (_2!1210 lt!52662))))))

(declare-fun d!28215 () Bool)

(declare-fun res!52032 () Bool)

(assert (=> d!28215 (=> res!52032 e!67947)))

(assert (=> d!28215 (= res!52032 (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 (_2!1210 lt!52662)))))))

(assert (=> d!28215 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4263 (_2!1210 lt!52662)) (mask!6697 (_2!1210 lt!52662))) e!67947)))

(declare-fun b!104334 () Bool)

(assert (=> b!104334 (= e!67946 e!67948)))

(declare-fun lt!53286 () (_ BitVec 64))

(assert (=> b!104334 (= lt!53286 (select (arr!2056 (_keys!4263 (_2!1210 lt!52662))) #b00000000000000000000000000000000))))

(declare-fun lt!53287 () Unit!3170)

(assert (=> b!104334 (= lt!53287 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4263 (_2!1210 lt!52662)) lt!53286 #b00000000000000000000000000000000))))

(assert (=> b!104334 (arrayContainsKey!0 (_keys!4263 (_2!1210 lt!52662)) lt!53286 #b00000000000000000000000000000000)))

(declare-fun lt!53285 () Unit!3170)

(assert (=> b!104334 (= lt!53285 lt!53287)))

(declare-fun res!52031 () Bool)

(assert (=> b!104334 (= res!52031 (= (seekEntryOrOpen!0 (select (arr!2056 (_keys!4263 (_2!1210 lt!52662))) #b00000000000000000000000000000000) (_keys!4263 (_2!1210 lt!52662)) (mask!6697 (_2!1210 lt!52662))) (Found!268 #b00000000000000000000000000000000)))))

(assert (=> b!104334 (=> (not res!52031) (not e!67948))))

(assert (= (and d!28215 (not res!52032)) b!104331))

(assert (= (and b!104331 c!18047) b!104334))

(assert (= (and b!104331 (not c!18047)) b!104332))

(assert (= (and b!104334 res!52031) b!104333))

(assert (= (or b!104333 b!104332) bm!10962))

(assert (=> b!104331 m!115431))

(assert (=> b!104331 m!115431))

(assert (=> b!104331 m!115433))

(declare-fun m!115815 () Bool)

(assert (=> bm!10962 m!115815))

(assert (=> b!104334 m!115431))

(declare-fun m!115817 () Bool)

(assert (=> b!104334 m!115817))

(declare-fun m!115819 () Bool)

(assert (=> b!104334 m!115819))

(assert (=> b!104334 m!115431))

(declare-fun m!115821 () Bool)

(assert (=> b!104334 m!115821))

(assert (=> b!104000 d!28215))

(declare-fun d!28217 () Bool)

(declare-fun e!67950 () Bool)

(assert (=> d!28217 e!67950))

(declare-fun res!52033 () Bool)

(assert (=> d!28217 (=> res!52033 e!67950)))

(declare-fun lt!53291 () Bool)

(assert (=> d!28217 (= res!52033 (not lt!53291))))

(declare-fun lt!53289 () Bool)

(assert (=> d!28217 (= lt!53291 lt!53289)))

(declare-fun lt!53288 () Unit!3170)

(declare-fun e!67949 () Unit!3170)

(assert (=> d!28217 (= lt!53288 e!67949)))

(declare-fun c!18048 () Bool)

(assert (=> d!28217 (= c!18048 lt!53289)))

(assert (=> d!28217 (= lt!53289 (containsKey!158 (toList!805 lt!52940) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!28217 (= (contains!825 lt!52940 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53291)))

(declare-fun b!104335 () Bool)

(declare-fun lt!53290 () Unit!3170)

(assert (=> b!104335 (= e!67949 lt!53290)))

(assert (=> b!104335 (= lt!53290 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52940) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> b!104335 (isDefined!108 (getValueByKey!154 (toList!805 lt!52940) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!104336 () Bool)

(declare-fun Unit!3212 () Unit!3170)

(assert (=> b!104336 (= e!67949 Unit!3212)))

(declare-fun b!104337 () Bool)

(assert (=> b!104337 (= e!67950 (isDefined!108 (getValueByKey!154 (toList!805 lt!52940) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (= (and d!28217 c!18048) b!104335))

(assert (= (and d!28217 (not c!18048)) b!104336))

(assert (= (and d!28217 (not res!52033)) b!104337))

(declare-fun m!115823 () Bool)

(assert (=> d!28217 m!115823))

(declare-fun m!115825 () Bool)

(assert (=> b!104335 m!115825))

(assert (=> b!104335 m!114705))

(assert (=> b!104335 m!114705))

(declare-fun m!115827 () Bool)

(assert (=> b!104335 m!115827))

(assert (=> b!104337 m!114705))

(assert (=> b!104337 m!114705))

(assert (=> b!104337 m!115827))

(assert (=> d!27839 d!28217))

(declare-fun b!104339 () Bool)

(declare-fun e!67951 () Option!160)

(declare-fun e!67952 () Option!160)

(assert (=> b!104339 (= e!67951 e!67952)))

(declare-fun c!18050 () Bool)

(assert (=> b!104339 (= c!18050 (and ((_ is Cons!1633) lt!52943) (not (= (_1!1211 (h!2229 lt!52943)) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun b!104338 () Bool)

(assert (=> b!104338 (= e!67951 (Some!159 (_2!1211 (h!2229 lt!52943))))))

(declare-fun b!104340 () Bool)

(assert (=> b!104340 (= e!67952 (getValueByKey!154 (t!5711 lt!52943) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun d!28219 () Bool)

(declare-fun c!18049 () Bool)

(assert (=> d!28219 (= c!18049 (and ((_ is Cons!1633) lt!52943) (= (_1!1211 (h!2229 lt!52943)) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28219 (= (getValueByKey!154 lt!52943 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) e!67951)))

(declare-fun b!104341 () Bool)

(assert (=> b!104341 (= e!67952 None!158)))

(assert (= (and d!28219 c!18049) b!104338))

(assert (= (and d!28219 (not c!18049)) b!104339))

(assert (= (and b!104339 c!18050) b!104340))

(assert (= (and b!104339 (not c!18050)) b!104341))

(declare-fun m!115829 () Bool)

(assert (=> b!104340 m!115829))

(assert (=> d!27839 d!28219))

(declare-fun d!28221 () Bool)

(assert (=> d!28221 (= (getValueByKey!154 lt!52943 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun lt!53292 () Unit!3170)

(assert (=> d!28221 (= lt!53292 (choose!650 lt!52943 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun e!67953 () Bool)

(assert (=> d!28221 e!67953))

(declare-fun res!52034 () Bool)

(assert (=> d!28221 (=> (not res!52034) (not e!67953))))

(assert (=> d!28221 (= res!52034 (isStrictlySorted!303 lt!52943))))

(assert (=> d!28221 (= (lemmaContainsTupThenGetReturnValue!72 lt!52943 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53292)))

(declare-fun b!104342 () Bool)

(declare-fun res!52035 () Bool)

(assert (=> b!104342 (=> (not res!52035) (not e!67953))))

(assert (=> b!104342 (= res!52035 (containsKey!158 lt!52943 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!104343 () Bool)

(assert (=> b!104343 (= e!67953 (contains!828 lt!52943 (tuple2!2403 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (= (and d!28221 res!52034) b!104342))

(assert (= (and b!104342 res!52035) b!104343))

(assert (=> d!28221 m!114699))

(declare-fun m!115831 () Bool)

(assert (=> d!28221 m!115831))

(declare-fun m!115833 () Bool)

(assert (=> d!28221 m!115833))

(declare-fun m!115835 () Bool)

(assert (=> b!104342 m!115835))

(declare-fun m!115837 () Bool)

(assert (=> b!104343 m!115837))

(assert (=> d!27839 d!28221))

(declare-fun b!104344 () Bool)

(declare-fun e!67954 () Bool)

(declare-fun lt!53293 () List!1637)

(assert (=> b!104344 (= e!67954 (contains!828 lt!53293 (tuple2!2403 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!104345 () Bool)

(declare-fun e!67958 () List!1637)

(declare-fun call!10968 () List!1637)

(assert (=> b!104345 (= e!67958 call!10968)))

(declare-fun bm!10963 () Bool)

(declare-fun call!10966 () List!1637)

(declare-fun call!10967 () List!1637)

(assert (=> bm!10963 (= call!10966 call!10967)))

(declare-fun b!104346 () Bool)

(assert (=> b!104346 (= e!67958 call!10968)))

(declare-fun b!104347 () Bool)

(declare-fun c!18053 () Bool)

(assert (=> b!104347 (= c!18053 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52542 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))) (bvsgt (_1!1211 (h!2229 (toList!805 (+!143 lt!52542 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun e!67955 () List!1637)

(assert (=> b!104347 (= e!67955 e!67958)))

(declare-fun bm!10964 () Bool)

(assert (=> bm!10964 (= call!10968 call!10966)))

(declare-fun e!67957 () List!1637)

(declare-fun b!104348 () Bool)

(assert (=> b!104348 (= e!67957 (insertStrictlySorted!74 (t!5711 (toList!805 (+!143 lt!52542 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!104349 () Bool)

(declare-fun res!52037 () Bool)

(assert (=> b!104349 (=> (not res!52037) (not e!67954))))

(assert (=> b!104349 (= res!52037 (containsKey!158 lt!53293 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun bm!10965 () Bool)

(declare-fun c!18054 () Bool)

(assert (=> bm!10965 (= call!10967 ($colon$colon!79 e!67957 (ite c!18054 (h!2229 (toList!805 (+!143 lt!52542 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))) (tuple2!2403 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun c!18052 () Bool)

(assert (=> bm!10965 (= c!18052 c!18054)))

(declare-fun d!28223 () Bool)

(assert (=> d!28223 e!67954))

(declare-fun res!52036 () Bool)

(assert (=> d!28223 (=> (not res!52036) (not e!67954))))

(assert (=> d!28223 (= res!52036 (isStrictlySorted!303 lt!53293))))

(declare-fun e!67956 () List!1637)

(assert (=> d!28223 (= lt!53293 e!67956)))

(assert (=> d!28223 (= c!18054 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52542 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))) (bvslt (_1!1211 (h!2229 (toList!805 (+!143 lt!52542 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28223 (isStrictlySorted!303 (toList!805 (+!143 lt!52542 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!28223 (= (insertStrictlySorted!74 (toList!805 (+!143 lt!52542 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53293)))

(declare-fun b!104350 () Bool)

(assert (=> b!104350 (= e!67956 e!67955)))

(declare-fun c!18051 () Bool)

(assert (=> b!104350 (= c!18051 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52542 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))) (= (_1!1211 (h!2229 (toList!805 (+!143 lt!52542 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!104351 () Bool)

(assert (=> b!104351 (= e!67955 call!10966)))

(declare-fun b!104352 () Bool)

(assert (=> b!104352 (= e!67956 call!10967)))

(declare-fun b!104353 () Bool)

(assert (=> b!104353 (= e!67957 (ite c!18051 (t!5711 (toList!805 (+!143 lt!52542 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))) (ite c!18053 (Cons!1633 (h!2229 (toList!805 (+!143 lt!52542 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))) (t!5711 (toList!805 (+!143 lt!52542 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))) Nil!1634)))))

(assert (= (and d!28223 c!18054) b!104352))

(assert (= (and d!28223 (not c!18054)) b!104350))

(assert (= (and b!104350 c!18051) b!104351))

(assert (= (and b!104350 (not c!18051)) b!104347))

(assert (= (and b!104347 c!18053) b!104346))

(assert (= (and b!104347 (not c!18053)) b!104345))

(assert (= (or b!104346 b!104345) bm!10964))

(assert (= (or b!104351 bm!10964) bm!10963))

(assert (= (or b!104352 bm!10963) bm!10965))

(assert (= (and bm!10965 c!18052) b!104348))

(assert (= (and bm!10965 (not c!18052)) b!104353))

(assert (= (and d!28223 res!52036) b!104349))

(assert (= (and b!104349 res!52037) b!104344))

(declare-fun m!115839 () Bool)

(assert (=> b!104349 m!115839))

(declare-fun m!115841 () Bool)

(assert (=> bm!10965 m!115841))

(declare-fun m!115843 () Bool)

(assert (=> d!28223 m!115843))

(declare-fun m!115845 () Bool)

(assert (=> d!28223 m!115845))

(declare-fun m!115847 () Bool)

(assert (=> b!104344 m!115847))

(declare-fun m!115849 () Bool)

(assert (=> b!104348 m!115849))

(assert (=> d!27839 d!28223))

(declare-fun b!104354 () Bool)

(declare-fun e!67964 () ListLongMap!1579)

(assert (=> b!104354 (= e!67964 (ListLongMap!1580 Nil!1634))))

(declare-fun b!104356 () Bool)

(declare-fun e!67961 () Bool)

(declare-fun lt!53299 () ListLongMap!1579)

(assert (=> b!104356 (= e!67961 (isEmpty!372 lt!53299))))

(declare-fun b!104357 () Bool)

(assert (=> b!104357 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(assert (=> b!104357 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16)))))))))

(declare-fun e!67965 () Bool)

(assert (=> b!104357 (= e!67965 (= (apply!97 lt!53299 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1333 (select (arr!2057 (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104358 () Bool)

(declare-fun e!67959 () Bool)

(assert (=> b!104358 (= e!67959 e!67965)))

(assert (=> b!104358 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun res!52041 () Bool)

(assert (=> b!104358 (= res!52041 (contains!825 lt!53299 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104358 (=> (not res!52041) (not e!67965))))

(declare-fun b!104359 () Bool)

(declare-fun e!67960 () ListLongMap!1579)

(assert (=> b!104359 (= e!67964 e!67960)))

(declare-fun c!18055 () Bool)

(assert (=> b!104359 (= c!18055 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104360 () Bool)

(declare-fun e!67962 () Bool)

(assert (=> b!104360 (= e!67962 e!67959)))

(declare-fun c!18056 () Bool)

(declare-fun e!67963 () Bool)

(assert (=> b!104360 (= c!18056 e!67963)))

(declare-fun res!52040 () Bool)

(assert (=> b!104360 (=> (not res!52040) (not e!67963))))

(assert (=> b!104360 (= res!52040 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104361 () Bool)

(declare-fun lt!53295 () Unit!3170)

(declare-fun lt!53298 () Unit!3170)

(assert (=> b!104361 (= lt!53295 lt!53298)))

(declare-fun lt!53297 () V!3211)

(declare-fun lt!53294 () ListLongMap!1579)

(declare-fun lt!53296 () (_ BitVec 64))

(declare-fun lt!53300 () (_ BitVec 64))

(assert (=> b!104361 (not (contains!825 (+!143 lt!53294 (tuple2!2403 lt!53300 lt!53297)) lt!53296))))

(assert (=> b!104361 (= lt!53298 (addStillNotContains!47 lt!53294 lt!53300 lt!53297 lt!53296))))

(assert (=> b!104361 (= lt!53296 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!104361 (= lt!53297 (get!1333 (select (arr!2057 (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!104361 (= lt!53300 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!10969 () ListLongMap!1579)

(assert (=> b!104361 (= lt!53294 call!10969)))

(assert (=> b!104361 (= e!67960 (+!143 call!10969 (tuple2!2403 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) (get!1333 (select (arr!2057 (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!10966 () Bool)

(assert (=> bm!10966 (= call!10969 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (ite c!17808 (ite c!17814 (extraKeys!2370 newMap!16) lt!52663) (extraKeys!2370 newMap!16)) (zeroValue!2438 newMap!16) (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2561 newMap!16)))))

(declare-fun d!28225 () Bool)

(assert (=> d!28225 e!67962))

(declare-fun res!52038 () Bool)

(assert (=> d!28225 (=> (not res!52038) (not e!67962))))

(assert (=> d!28225 (= res!52038 (not (contains!825 lt!53299 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28225 (= lt!53299 e!67964)))

(declare-fun c!18057 () Bool)

(assert (=> d!28225 (= c!18057 (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!28225 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28225 (= (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (ite c!17808 (ite c!17814 (extraKeys!2370 newMap!16) lt!52663) (extraKeys!2370 newMap!16)) (zeroValue!2438 newMap!16) (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53299)))

(declare-fun b!104355 () Bool)

(declare-fun res!52039 () Bool)

(assert (=> b!104355 (=> (not res!52039) (not e!67962))))

(assert (=> b!104355 (= res!52039 (not (contains!825 lt!53299 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104362 () Bool)

(assert (=> b!104362 (= e!67959 e!67961)))

(declare-fun c!18058 () Bool)

(assert (=> b!104362 (= c!18058 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104363 () Bool)

(assert (=> b!104363 (= e!67960 call!10969)))

(declare-fun b!104364 () Bool)

(assert (=> b!104364 (= e!67961 (= lt!53299 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (ite c!17808 (ite c!17814 (extraKeys!2370 newMap!16) lt!52663) (extraKeys!2370 newMap!16)) (zeroValue!2438 newMap!16) (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2561 newMap!16))))))

(declare-fun b!104365 () Bool)

(assert (=> b!104365 (= e!67963 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104365 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!28225 c!18057) b!104354))

(assert (= (and d!28225 (not c!18057)) b!104359))

(assert (= (and b!104359 c!18055) b!104361))

(assert (= (and b!104359 (not c!18055)) b!104363))

(assert (= (or b!104361 b!104363) bm!10966))

(assert (= (and d!28225 res!52038) b!104355))

(assert (= (and b!104355 res!52039) b!104360))

(assert (= (and b!104360 res!52040) b!104365))

(assert (= (and b!104360 c!18056) b!104358))

(assert (= (and b!104360 (not c!18056)) b!104362))

(assert (= (and b!104358 res!52041) b!104357))

(assert (= (and b!104362 c!18058) b!104364))

(assert (= (and b!104362 (not c!18058)) b!104356))

(declare-fun b_lambda!4683 () Bool)

(assert (=> (not b_lambda!4683) (not b!104357)))

(assert (=> b!104357 t!5720))

(declare-fun b_and!6465 () Bool)

(assert (= b_and!6461 (and (=> t!5720 result!3447) b_and!6465)))

(assert (=> b!104357 t!5722))

(declare-fun b_and!6467 () Bool)

(assert (= b_and!6463 (and (=> t!5722 result!3449) b_and!6467)))

(declare-fun b_lambda!4685 () Bool)

(assert (=> (not b_lambda!4685) (not b!104361)))

(assert (=> b!104361 t!5720))

(declare-fun b_and!6469 () Bool)

(assert (= b_and!6465 (and (=> t!5720 result!3447) b_and!6469)))

(assert (=> b!104361 t!5722))

(declare-fun b_and!6471 () Bool)

(assert (= b_and!6467 (and (=> t!5722 result!3449) b_and!6471)))

(declare-fun m!115851 () Bool)

(assert (=> d!28225 m!115851))

(assert (=> d!28225 m!114517))

(declare-fun m!115853 () Bool)

(assert (=> b!104364 m!115853))

(assert (=> bm!10966 m!115853))

(assert (=> b!104357 m!115241))

(assert (=> b!104357 m!114563))

(assert (=> b!104357 m!115243))

(assert (=> b!104357 m!115241))

(assert (=> b!104357 m!114523))

(assert (=> b!104357 m!114563))

(assert (=> b!104357 m!114523))

(declare-fun m!115855 () Bool)

(assert (=> b!104357 m!115855))

(assert (=> b!104361 m!115241))

(assert (=> b!104361 m!114563))

(assert (=> b!104361 m!115243))

(declare-fun m!115857 () Bool)

(assert (=> b!104361 m!115857))

(declare-fun m!115859 () Bool)

(assert (=> b!104361 m!115859))

(assert (=> b!104361 m!115857))

(declare-fun m!115861 () Bool)

(assert (=> b!104361 m!115861))

(assert (=> b!104361 m!115241))

(assert (=> b!104361 m!114523))

(assert (=> b!104361 m!114563))

(declare-fun m!115863 () Bool)

(assert (=> b!104361 m!115863))

(declare-fun m!115865 () Bool)

(assert (=> b!104355 m!115865))

(assert (=> b!104365 m!114523))

(assert (=> b!104365 m!114523))

(assert (=> b!104365 m!114525))

(declare-fun m!115867 () Bool)

(assert (=> b!104356 m!115867))

(assert (=> b!104359 m!114523))

(assert (=> b!104359 m!114523))

(assert (=> b!104359 m!114525))

(assert (=> b!104358 m!114523))

(assert (=> b!104358 m!114523))

(declare-fun m!115869 () Bool)

(assert (=> b!104358 m!115869))

(assert (=> b!104039 d!28225))

(declare-fun d!28227 () Bool)

(assert (=> d!28227 (= (apply!97 (+!143 lt!53126 (tuple2!2403 lt!53125 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))) lt!53111) (get!1336 (getValueByKey!154 (toList!805 (+!143 lt!53126 (tuple2!2403 lt!53125 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))) lt!53111)))))

(declare-fun bs!4280 () Bool)

(assert (= bs!4280 d!28227))

(declare-fun m!115871 () Bool)

(assert (=> bs!4280 m!115871))

(assert (=> bs!4280 m!115871))

(declare-fun m!115873 () Bool)

(assert (=> bs!4280 m!115873))

(assert (=> b!104039 d!28227))

(declare-fun d!28229 () Bool)

(declare-fun e!67967 () Bool)

(assert (=> d!28229 e!67967))

(declare-fun res!52042 () Bool)

(assert (=> d!28229 (=> res!52042 e!67967)))

(declare-fun lt!53304 () Bool)

(assert (=> d!28229 (= res!52042 (not lt!53304))))

(declare-fun lt!53302 () Bool)

(assert (=> d!28229 (= lt!53304 lt!53302)))

(declare-fun lt!53301 () Unit!3170)

(declare-fun e!67966 () Unit!3170)

(assert (=> d!28229 (= lt!53301 e!67966)))

(declare-fun c!18059 () Bool)

(assert (=> d!28229 (= c!18059 lt!53302)))

(assert (=> d!28229 (= lt!53302 (containsKey!158 (toList!805 (+!143 lt!53121 (tuple2!2403 lt!53116 (zeroValue!2438 newMap!16)))) lt!53127))))

(assert (=> d!28229 (= (contains!825 (+!143 lt!53121 (tuple2!2403 lt!53116 (zeroValue!2438 newMap!16))) lt!53127) lt!53304)))

(declare-fun b!104366 () Bool)

(declare-fun lt!53303 () Unit!3170)

(assert (=> b!104366 (= e!67966 lt!53303)))

(assert (=> b!104366 (= lt!53303 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 (+!143 lt!53121 (tuple2!2403 lt!53116 (zeroValue!2438 newMap!16)))) lt!53127))))

(assert (=> b!104366 (isDefined!108 (getValueByKey!154 (toList!805 (+!143 lt!53121 (tuple2!2403 lt!53116 (zeroValue!2438 newMap!16)))) lt!53127))))

(declare-fun b!104367 () Bool)

(declare-fun Unit!3213 () Unit!3170)

(assert (=> b!104367 (= e!67966 Unit!3213)))

(declare-fun b!104368 () Bool)

(assert (=> b!104368 (= e!67967 (isDefined!108 (getValueByKey!154 (toList!805 (+!143 lt!53121 (tuple2!2403 lt!53116 (zeroValue!2438 newMap!16)))) lt!53127)))))

(assert (= (and d!28229 c!18059) b!104366))

(assert (= (and d!28229 (not c!18059)) b!104367))

(assert (= (and d!28229 (not res!52042)) b!104368))

(declare-fun m!115875 () Bool)

(assert (=> d!28229 m!115875))

(declare-fun m!115877 () Bool)

(assert (=> b!104366 m!115877))

(declare-fun m!115879 () Bool)

(assert (=> b!104366 m!115879))

(assert (=> b!104366 m!115879))

(declare-fun m!115881 () Bool)

(assert (=> b!104366 m!115881))

(assert (=> b!104368 m!115879))

(assert (=> b!104368 m!115879))

(assert (=> b!104368 m!115881))

(assert (=> b!104039 d!28229))

(declare-fun d!28231 () Bool)

(assert (=> d!28231 (= (apply!97 (+!143 lt!53117 (tuple2!2403 lt!53119 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))) lt!53114) (get!1336 (getValueByKey!154 (toList!805 (+!143 lt!53117 (tuple2!2403 lt!53119 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))) lt!53114)))))

(declare-fun bs!4281 () Bool)

(assert (= bs!4281 d!28231))

(declare-fun m!115883 () Bool)

(assert (=> bs!4281 m!115883))

(assert (=> bs!4281 m!115883))

(declare-fun m!115885 () Bool)

(assert (=> bs!4281 m!115885))

(assert (=> b!104039 d!28231))

(declare-fun d!28233 () Bool)

(declare-fun e!67968 () Bool)

(assert (=> d!28233 e!67968))

(declare-fun res!52044 () Bool)

(assert (=> d!28233 (=> (not res!52044) (not e!67968))))

(declare-fun lt!53305 () ListLongMap!1579)

(assert (=> d!28233 (= res!52044 (contains!825 lt!53305 (_1!1211 (tuple2!2403 lt!53130 (zeroValue!2438 newMap!16)))))))

(declare-fun lt!53308 () List!1637)

(assert (=> d!28233 (= lt!53305 (ListLongMap!1580 lt!53308))))

(declare-fun lt!53307 () Unit!3170)

(declare-fun lt!53306 () Unit!3170)

(assert (=> d!28233 (= lt!53307 lt!53306)))

(assert (=> d!28233 (= (getValueByKey!154 lt!53308 (_1!1211 (tuple2!2403 lt!53130 (zeroValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 lt!53130 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28233 (= lt!53306 (lemmaContainsTupThenGetReturnValue!72 lt!53308 (_1!1211 (tuple2!2403 lt!53130 (zeroValue!2438 newMap!16))) (_2!1211 (tuple2!2403 lt!53130 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28233 (= lt!53308 (insertStrictlySorted!74 (toList!805 lt!53129) (_1!1211 (tuple2!2403 lt!53130 (zeroValue!2438 newMap!16))) (_2!1211 (tuple2!2403 lt!53130 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28233 (= (+!143 lt!53129 (tuple2!2403 lt!53130 (zeroValue!2438 newMap!16))) lt!53305)))

(declare-fun b!104369 () Bool)

(declare-fun res!52043 () Bool)

(assert (=> b!104369 (=> (not res!52043) (not e!67968))))

(assert (=> b!104369 (= res!52043 (= (getValueByKey!154 (toList!805 lt!53305) (_1!1211 (tuple2!2403 lt!53130 (zeroValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 lt!53130 (zeroValue!2438 newMap!16))))))))

(declare-fun b!104370 () Bool)

(assert (=> b!104370 (= e!67968 (contains!828 (toList!805 lt!53305) (tuple2!2403 lt!53130 (zeroValue!2438 newMap!16))))))

(assert (= (and d!28233 res!52044) b!104369))

(assert (= (and b!104369 res!52043) b!104370))

(declare-fun m!115887 () Bool)

(assert (=> d!28233 m!115887))

(declare-fun m!115889 () Bool)

(assert (=> d!28233 m!115889))

(declare-fun m!115891 () Bool)

(assert (=> d!28233 m!115891))

(declare-fun m!115893 () Bool)

(assert (=> d!28233 m!115893))

(declare-fun m!115895 () Bool)

(assert (=> b!104369 m!115895))

(declare-fun m!115897 () Bool)

(assert (=> b!104370 m!115897))

(assert (=> b!104039 d!28233))

(declare-fun d!28235 () Bool)

(assert (=> d!28235 (contains!825 (+!143 lt!53121 (tuple2!2403 lt!53116 (zeroValue!2438 newMap!16))) lt!53127)))

(declare-fun lt!53309 () Unit!3170)

(assert (=> d!28235 (= lt!53309 (choose!649 lt!53121 lt!53116 (zeroValue!2438 newMap!16) lt!53127))))

(assert (=> d!28235 (contains!825 lt!53121 lt!53127)))

(assert (=> d!28235 (= (addStillContains!73 lt!53121 lt!53116 (zeroValue!2438 newMap!16) lt!53127) lt!53309)))

(declare-fun bs!4282 () Bool)

(assert (= bs!4282 d!28235))

(assert (=> bs!4282 m!115215))

(assert (=> bs!4282 m!115215))

(assert (=> bs!4282 m!115217))

(declare-fun m!115899 () Bool)

(assert (=> bs!4282 m!115899))

(declare-fun m!115901 () Bool)

(assert (=> bs!4282 m!115901))

(assert (=> b!104039 d!28235))

(declare-fun d!28237 () Bool)

(assert (=> d!28237 (= (apply!97 (+!143 lt!53117 (tuple2!2403 lt!53119 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))) lt!53114) (apply!97 lt!53117 lt!53114))))

(declare-fun lt!53310 () Unit!3170)

(assert (=> d!28237 (= lt!53310 (choose!648 lt!53117 lt!53119 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)) lt!53114))))

(declare-fun e!67969 () Bool)

(assert (=> d!28237 e!67969))

(declare-fun res!52045 () Bool)

(assert (=> d!28237 (=> (not res!52045) (not e!67969))))

(assert (=> d!28237 (= res!52045 (contains!825 lt!53117 lt!53114))))

(assert (=> d!28237 (= (addApplyDifferent!73 lt!53117 lt!53119 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)) lt!53114) lt!53310)))

(declare-fun b!104371 () Bool)

(assert (=> b!104371 (= e!67969 (not (= lt!53114 lt!53119)))))

(assert (= (and d!28237 res!52045) b!104371))

(assert (=> d!28237 m!115227))

(assert (=> d!28237 m!115229))

(declare-fun m!115903 () Bool)

(assert (=> d!28237 m!115903))

(declare-fun m!115905 () Bool)

(assert (=> d!28237 m!115905))

(assert (=> d!28237 m!115229))

(assert (=> d!28237 m!115231))

(assert (=> b!104039 d!28237))

(declare-fun d!28239 () Bool)

(assert (=> d!28239 (= (apply!97 (+!143 lt!53129 (tuple2!2403 lt!53130 (zeroValue!2438 newMap!16))) lt!53132) (get!1336 (getValueByKey!154 (toList!805 (+!143 lt!53129 (tuple2!2403 lt!53130 (zeroValue!2438 newMap!16)))) lt!53132)))))

(declare-fun bs!4283 () Bool)

(assert (= bs!4283 d!28239))

(declare-fun m!115907 () Bool)

(assert (=> bs!4283 m!115907))

(assert (=> bs!4283 m!115907))

(declare-fun m!115909 () Bool)

(assert (=> bs!4283 m!115909))

(assert (=> b!104039 d!28239))

(declare-fun d!28241 () Bool)

(assert (=> d!28241 (= (apply!97 lt!53126 lt!53111) (get!1336 (getValueByKey!154 (toList!805 lt!53126) lt!53111)))))

(declare-fun bs!4284 () Bool)

(assert (= bs!4284 d!28241))

(declare-fun m!115911 () Bool)

(assert (=> bs!4284 m!115911))

(assert (=> bs!4284 m!115911))

(declare-fun m!115913 () Bool)

(assert (=> bs!4284 m!115913))

(assert (=> b!104039 d!28241))

(declare-fun d!28243 () Bool)

(assert (=> d!28243 (= (apply!97 (+!143 lt!53129 (tuple2!2403 lt!53130 (zeroValue!2438 newMap!16))) lt!53132) (apply!97 lt!53129 lt!53132))))

(declare-fun lt!53311 () Unit!3170)

(assert (=> d!28243 (= lt!53311 (choose!648 lt!53129 lt!53130 (zeroValue!2438 newMap!16) lt!53132))))

(declare-fun e!67970 () Bool)

(assert (=> d!28243 e!67970))

(declare-fun res!52046 () Bool)

(assert (=> d!28243 (=> (not res!52046) (not e!67970))))

(assert (=> d!28243 (= res!52046 (contains!825 lt!53129 lt!53132))))

(assert (=> d!28243 (= (addApplyDifferent!73 lt!53129 lt!53130 (zeroValue!2438 newMap!16) lt!53132) lt!53311)))

(declare-fun b!104372 () Bool)

(assert (=> b!104372 (= e!67970 (not (= lt!53132 lt!53130)))))

(assert (= (and d!28243 res!52046) b!104372))

(assert (=> d!28243 m!115221))

(assert (=> d!28243 m!115207))

(declare-fun m!115915 () Bool)

(assert (=> d!28243 m!115915))

(declare-fun m!115917 () Bool)

(assert (=> d!28243 m!115917))

(assert (=> d!28243 m!115207))

(assert (=> d!28243 m!115209))

(assert (=> b!104039 d!28243))

(declare-fun d!28245 () Bool)

(assert (=> d!28245 (= (apply!97 (+!143 lt!53126 (tuple2!2403 lt!53125 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))) lt!53111) (apply!97 lt!53126 lt!53111))))

(declare-fun lt!53312 () Unit!3170)

(assert (=> d!28245 (= lt!53312 (choose!648 lt!53126 lt!53125 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)) lt!53111))))

(declare-fun e!67971 () Bool)

(assert (=> d!28245 e!67971))

(declare-fun res!52047 () Bool)

(assert (=> d!28245 (=> (not res!52047) (not e!67971))))

(assert (=> d!28245 (= res!52047 (contains!825 lt!53126 lt!53111))))

(assert (=> d!28245 (= (addApplyDifferent!73 lt!53126 lt!53125 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)) lt!53111) lt!53312)))

(declare-fun b!104373 () Bool)

(assert (=> b!104373 (= e!67971 (not (= lt!53111 lt!53125)))))

(assert (= (and d!28245 res!52047) b!104373))

(assert (=> d!28245 m!115233))

(assert (=> d!28245 m!115219))

(declare-fun m!115919 () Bool)

(assert (=> d!28245 m!115919))

(declare-fun m!115921 () Bool)

(assert (=> d!28245 m!115921))

(assert (=> d!28245 m!115219))

(assert (=> d!28245 m!115223))

(assert (=> b!104039 d!28245))

(declare-fun d!28247 () Bool)

(declare-fun e!67972 () Bool)

(assert (=> d!28247 e!67972))

(declare-fun res!52049 () Bool)

(assert (=> d!28247 (=> (not res!52049) (not e!67972))))

(declare-fun lt!53313 () ListLongMap!1579)

(assert (=> d!28247 (= res!52049 (contains!825 lt!53313 (_1!1211 (tuple2!2403 lt!53116 (zeroValue!2438 newMap!16)))))))

(declare-fun lt!53316 () List!1637)

(assert (=> d!28247 (= lt!53313 (ListLongMap!1580 lt!53316))))

(declare-fun lt!53315 () Unit!3170)

(declare-fun lt!53314 () Unit!3170)

(assert (=> d!28247 (= lt!53315 lt!53314)))

(assert (=> d!28247 (= (getValueByKey!154 lt!53316 (_1!1211 (tuple2!2403 lt!53116 (zeroValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 lt!53116 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28247 (= lt!53314 (lemmaContainsTupThenGetReturnValue!72 lt!53316 (_1!1211 (tuple2!2403 lt!53116 (zeroValue!2438 newMap!16))) (_2!1211 (tuple2!2403 lt!53116 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28247 (= lt!53316 (insertStrictlySorted!74 (toList!805 lt!53121) (_1!1211 (tuple2!2403 lt!53116 (zeroValue!2438 newMap!16))) (_2!1211 (tuple2!2403 lt!53116 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28247 (= (+!143 lt!53121 (tuple2!2403 lt!53116 (zeroValue!2438 newMap!16))) lt!53313)))

(declare-fun b!104374 () Bool)

(declare-fun res!52048 () Bool)

(assert (=> b!104374 (=> (not res!52048) (not e!67972))))

(assert (=> b!104374 (= res!52048 (= (getValueByKey!154 (toList!805 lt!53313) (_1!1211 (tuple2!2403 lt!53116 (zeroValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 lt!53116 (zeroValue!2438 newMap!16))))))))

(declare-fun b!104375 () Bool)

(assert (=> b!104375 (= e!67972 (contains!828 (toList!805 lt!53313) (tuple2!2403 lt!53116 (zeroValue!2438 newMap!16))))))

(assert (= (and d!28247 res!52049) b!104374))

(assert (= (and b!104374 res!52048) b!104375))

(declare-fun m!115923 () Bool)

(assert (=> d!28247 m!115923))

(declare-fun m!115925 () Bool)

(assert (=> d!28247 m!115925))

(declare-fun m!115927 () Bool)

(assert (=> d!28247 m!115927))

(declare-fun m!115929 () Bool)

(assert (=> d!28247 m!115929))

(declare-fun m!115931 () Bool)

(assert (=> b!104374 m!115931))

(declare-fun m!115933 () Bool)

(assert (=> b!104375 m!115933))

(assert (=> b!104039 d!28247))

(declare-fun d!28249 () Bool)

(declare-fun e!67973 () Bool)

(assert (=> d!28249 e!67973))

(declare-fun res!52051 () Bool)

(assert (=> d!28249 (=> (not res!52051) (not e!67973))))

(declare-fun lt!53317 () ListLongMap!1579)

(assert (=> d!28249 (= res!52051 (contains!825 lt!53317 (_1!1211 (tuple2!2403 lt!53119 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))))))

(declare-fun lt!53320 () List!1637)

(assert (=> d!28249 (= lt!53317 (ListLongMap!1580 lt!53320))))

(declare-fun lt!53319 () Unit!3170)

(declare-fun lt!53318 () Unit!3170)

(assert (=> d!28249 (= lt!53319 lt!53318)))

(assert (=> d!28249 (= (getValueByKey!154 lt!53320 (_1!1211 (tuple2!2403 lt!53119 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))) (Some!159 (_2!1211 (tuple2!2403 lt!53119 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))))))

(assert (=> d!28249 (= lt!53318 (lemmaContainsTupThenGetReturnValue!72 lt!53320 (_1!1211 (tuple2!2403 lt!53119 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))) (_2!1211 (tuple2!2403 lt!53119 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))))))

(assert (=> d!28249 (= lt!53320 (insertStrictlySorted!74 (toList!805 lt!53117) (_1!1211 (tuple2!2403 lt!53119 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))) (_2!1211 (tuple2!2403 lt!53119 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))))))

(assert (=> d!28249 (= (+!143 lt!53117 (tuple2!2403 lt!53119 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))) lt!53317)))

(declare-fun b!104376 () Bool)

(declare-fun res!52050 () Bool)

(assert (=> b!104376 (=> (not res!52050) (not e!67973))))

(assert (=> b!104376 (= res!52050 (= (getValueByKey!154 (toList!805 lt!53317) (_1!1211 (tuple2!2403 lt!53119 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))) (Some!159 (_2!1211 (tuple2!2403 lt!53119 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))))))))

(declare-fun b!104377 () Bool)

(assert (=> b!104377 (= e!67973 (contains!828 (toList!805 lt!53317) (tuple2!2403 lt!53119 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))))))

(assert (= (and d!28249 res!52051) b!104376))

(assert (= (and b!104376 res!52050) b!104377))

(declare-fun m!115935 () Bool)

(assert (=> d!28249 m!115935))

(declare-fun m!115937 () Bool)

(assert (=> d!28249 m!115937))

(declare-fun m!115939 () Bool)

(assert (=> d!28249 m!115939))

(declare-fun m!115941 () Bool)

(assert (=> d!28249 m!115941))

(declare-fun m!115943 () Bool)

(assert (=> b!104376 m!115943))

(declare-fun m!115945 () Bool)

(assert (=> b!104377 m!115945))

(assert (=> b!104039 d!28249))

(declare-fun d!28251 () Bool)

(assert (=> d!28251 (= (apply!97 lt!53117 lt!53114) (get!1336 (getValueByKey!154 (toList!805 lt!53117) lt!53114)))))

(declare-fun bs!4285 () Bool)

(assert (= bs!4285 d!28251))

(declare-fun m!115947 () Bool)

(assert (=> bs!4285 m!115947))

(assert (=> bs!4285 m!115947))

(declare-fun m!115949 () Bool)

(assert (=> bs!4285 m!115949))

(assert (=> b!104039 d!28251))

(declare-fun d!28253 () Bool)

(declare-fun e!67974 () Bool)

(assert (=> d!28253 e!67974))

(declare-fun res!52053 () Bool)

(assert (=> d!28253 (=> (not res!52053) (not e!67974))))

(declare-fun lt!53321 () ListLongMap!1579)

(assert (=> d!28253 (= res!52053 (contains!825 lt!53321 (_1!1211 (tuple2!2403 lt!53125 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))))))

(declare-fun lt!53324 () List!1637)

(assert (=> d!28253 (= lt!53321 (ListLongMap!1580 lt!53324))))

(declare-fun lt!53323 () Unit!3170)

(declare-fun lt!53322 () Unit!3170)

(assert (=> d!28253 (= lt!53323 lt!53322)))

(assert (=> d!28253 (= (getValueByKey!154 lt!53324 (_1!1211 (tuple2!2403 lt!53125 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))) (Some!159 (_2!1211 (tuple2!2403 lt!53125 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))))))

(assert (=> d!28253 (= lt!53322 (lemmaContainsTupThenGetReturnValue!72 lt!53324 (_1!1211 (tuple2!2403 lt!53125 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))) (_2!1211 (tuple2!2403 lt!53125 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))))))

(assert (=> d!28253 (= lt!53324 (insertStrictlySorted!74 (toList!805 lt!53126) (_1!1211 (tuple2!2403 lt!53125 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))) (_2!1211 (tuple2!2403 lt!53125 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))))))

(assert (=> d!28253 (= (+!143 lt!53126 (tuple2!2403 lt!53125 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))) lt!53321)))

(declare-fun b!104378 () Bool)

(declare-fun res!52052 () Bool)

(assert (=> b!104378 (=> (not res!52052) (not e!67974))))

(assert (=> b!104378 (= res!52052 (= (getValueByKey!154 (toList!805 lt!53321) (_1!1211 (tuple2!2403 lt!53125 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))) (Some!159 (_2!1211 (tuple2!2403 lt!53125 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))))))))

(declare-fun b!104379 () Bool)

(assert (=> b!104379 (= e!67974 (contains!828 (toList!805 lt!53321) (tuple2!2403 lt!53125 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))))))

(assert (= (and d!28253 res!52053) b!104378))

(assert (= (and b!104378 res!52052) b!104379))

(declare-fun m!115951 () Bool)

(assert (=> d!28253 m!115951))

(declare-fun m!115953 () Bool)

(assert (=> d!28253 m!115953))

(declare-fun m!115955 () Bool)

(assert (=> d!28253 m!115955))

(declare-fun m!115957 () Bool)

(assert (=> d!28253 m!115957))

(declare-fun m!115959 () Bool)

(assert (=> b!104378 m!115959))

(declare-fun m!115961 () Bool)

(assert (=> b!104379 m!115961))

(assert (=> b!104039 d!28253))

(declare-fun d!28255 () Bool)

(assert (=> d!28255 (= (apply!97 lt!53129 lt!53132) (get!1336 (getValueByKey!154 (toList!805 lt!53129) lt!53132)))))

(declare-fun bs!4286 () Bool)

(assert (= bs!4286 d!28255))

(declare-fun m!115963 () Bool)

(assert (=> bs!4286 m!115963))

(assert (=> bs!4286 m!115963))

(declare-fun m!115965 () Bool)

(assert (=> bs!4286 m!115965))

(assert (=> b!104039 d!28255))

(declare-fun d!28257 () Bool)

(assert (=> d!28257 (= (get!1336 (getValueByKey!154 (toList!805 lt!52753) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2880 (getValueByKey!154 (toList!805 lt!52753) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!27915 d!28257))

(assert (=> d!27915 d!28187))

(declare-fun d!28259 () Bool)

(declare-fun e!67976 () Bool)

(assert (=> d!28259 e!67976))

(declare-fun res!52054 () Bool)

(assert (=> d!28259 (=> res!52054 e!67976)))

(declare-fun lt!53328 () Bool)

(assert (=> d!28259 (= res!52054 (not lt!53328))))

(declare-fun lt!53326 () Bool)

(assert (=> d!28259 (= lt!53328 lt!53326)))

(declare-fun lt!53325 () Unit!3170)

(declare-fun e!67975 () Unit!3170)

(assert (=> d!28259 (= lt!53325 e!67975)))

(declare-fun c!18060 () Bool)

(assert (=> d!28259 (= c!18060 lt!53326)))

(assert (=> d!28259 (= lt!53326 (containsKey!158 (toList!805 lt!52754) lt!52757))))

(assert (=> d!28259 (= (contains!825 lt!52754 lt!52757) lt!53328)))

(declare-fun b!104380 () Bool)

(declare-fun lt!53327 () Unit!3170)

(assert (=> b!104380 (= e!67975 lt!53327)))

(assert (=> b!104380 (= lt!53327 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52754) lt!52757))))

(assert (=> b!104380 (isDefined!108 (getValueByKey!154 (toList!805 lt!52754) lt!52757))))

(declare-fun b!104381 () Bool)

(declare-fun Unit!3214 () Unit!3170)

(assert (=> b!104381 (= e!67975 Unit!3214)))

(declare-fun b!104382 () Bool)

(assert (=> b!104382 (= e!67976 (isDefined!108 (getValueByKey!154 (toList!805 lt!52754) lt!52757)))))

(assert (= (and d!28259 c!18060) b!104380))

(assert (= (and d!28259 (not c!18060)) b!104381))

(assert (= (and d!28259 (not res!52054)) b!104382))

(declare-fun m!115967 () Bool)

(assert (=> d!28259 m!115967))

(declare-fun m!115969 () Bool)

(assert (=> b!104380 m!115969))

(assert (=> b!104380 m!114891))

(assert (=> b!104380 m!114891))

(declare-fun m!115971 () Bool)

(assert (=> b!104380 m!115971))

(assert (=> b!104382 m!114891))

(assert (=> b!104382 m!114891))

(assert (=> b!104382 m!115971))

(assert (=> d!27861 d!28259))

(assert (=> d!27861 d!27863))

(declare-fun d!28261 () Bool)

(assert (=> d!28261 (= (apply!97 (+!143 lt!52754 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52757) (apply!97 lt!52754 lt!52757))))

(assert (=> d!28261 true))

(declare-fun _$34!879 () Unit!3170)

(assert (=> d!28261 (= (choose!648 lt!52754 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))) lt!52757) _$34!879)))

(declare-fun bs!4287 () Bool)

(assert (= bs!4287 d!28261))

(assert (=> bs!4287 m!114375))

(assert (=> bs!4287 m!114375))

(assert (=> bs!4287 m!114377))

(assert (=> bs!4287 m!114387))

(assert (=> d!27861 d!28261))

(assert (=> d!27861 d!27875))

(assert (=> d!27861 d!27877))

(declare-fun d!28263 () Bool)

(declare-fun res!52055 () Bool)

(declare-fun e!67977 () Bool)

(assert (=> d!28263 (=> (not res!52055) (not e!67977))))

(assert (=> d!28263 (= res!52055 (simpleValid!72 (_2!1210 lt!52916)))))

(assert (=> d!28263 (= (valid!405 (_2!1210 lt!52916)) e!67977)))

(declare-fun b!104384 () Bool)

(declare-fun res!52056 () Bool)

(assert (=> b!104384 (=> (not res!52056) (not e!67977))))

(assert (=> b!104384 (= res!52056 (= (arrayCountValidKeys!0 (_keys!4263 (_2!1210 lt!52916)) #b00000000000000000000000000000000 (size!2310 (_keys!4263 (_2!1210 lt!52916)))) (_size!496 (_2!1210 lt!52916))))))

(declare-fun b!104385 () Bool)

(declare-fun res!52057 () Bool)

(assert (=> b!104385 (=> (not res!52057) (not e!67977))))

(assert (=> b!104385 (= res!52057 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4263 (_2!1210 lt!52916)) (mask!6697 (_2!1210 lt!52916))))))

(declare-fun b!104386 () Bool)

(assert (=> b!104386 (= e!67977 (arrayNoDuplicates!0 (_keys!4263 (_2!1210 lt!52916)) #b00000000000000000000000000000000 Nil!1635))))

(assert (= (and d!28263 res!52055) b!104384))

(assert (= (and b!104384 res!52056) b!104385))

(assert (= (and b!104385 res!52057) b!104386))

(declare-fun m!115973 () Bool)

(assert (=> d!28263 m!115973))

(declare-fun m!115975 () Bool)

(assert (=> b!104384 m!115975))

(declare-fun m!115977 () Bool)

(assert (=> b!104385 m!115977))

(declare-fun m!115979 () Bool)

(assert (=> b!104386 m!115979))

(assert (=> b!103687 d!28263))

(declare-fun lt!53329 () Bool)

(declare-fun d!28265 () Bool)

(assert (=> d!28265 (= lt!53329 (select (content!107 (toList!805 lt!52989)) (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun e!67979 () Bool)

(assert (=> d!28265 (= lt!53329 e!67979)))

(declare-fun res!52058 () Bool)

(assert (=> d!28265 (=> (not res!52058) (not e!67979))))

(assert (=> d!28265 (= res!52058 ((_ is Cons!1633) (toList!805 lt!52989)))))

(assert (=> d!28265 (= (contains!828 (toList!805 lt!52989) (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!53329)))

(declare-fun b!104387 () Bool)

(declare-fun e!67978 () Bool)

(assert (=> b!104387 (= e!67979 e!67978)))

(declare-fun res!52059 () Bool)

(assert (=> b!104387 (=> res!52059 e!67978)))

(assert (=> b!104387 (= res!52059 (= (h!2229 (toList!805 lt!52989)) (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!104388 () Bool)

(assert (=> b!104388 (= e!67978 (contains!828 (t!5711 (toList!805 lt!52989)) (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(assert (= (and d!28265 res!52058) b!104387))

(assert (= (and b!104387 (not res!52059)) b!104388))

(declare-fun m!115981 () Bool)

(assert (=> d!28265 m!115981))

(declare-fun m!115983 () Bool)

(assert (=> d!28265 m!115983))

(declare-fun m!115985 () Bool)

(assert (=> b!104388 m!115985))

(assert (=> b!103799 d!28265))

(declare-fun d!28267 () Bool)

(assert (=> d!28267 (= (isDefined!108 (getValueByKey!154 (toList!805 lt!52799) (_1!1211 lt!52551))) (not (isEmpty!374 (getValueByKey!154 (toList!805 lt!52799) (_1!1211 lt!52551)))))))

(declare-fun bs!4288 () Bool)

(assert (= bs!4288 d!28267))

(assert (=> bs!4288 m!114497))

(declare-fun m!115987 () Bool)

(assert (=> bs!4288 m!115987))

(assert (=> b!103859 d!28267))

(assert (=> b!103859 d!27819))

(declare-fun d!28269 () Bool)

(assert (=> d!28269 (= (apply!97 lt!53128 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1336 (getValueByKey!154 (toList!805 lt!53128) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4289 () Bool)

(assert (= bs!4289 d!28269))

(assert (=> bs!4289 m!114523))

(assert (=> bs!4289 m!115811))

(assert (=> bs!4289 m!115811))

(declare-fun m!115989 () Bool)

(assert (=> bs!4289 m!115989))

(assert (=> b!104038 d!28269))

(declare-fun d!28271 () Bool)

(declare-fun c!18061 () Bool)

(assert (=> d!28271 (= c!18061 ((_ is ValueCellFull!993) (select (arr!2057 (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!67980 () V!3211)

(assert (=> d!28271 (= (get!1333 (select (arr!2057 (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!67980)))

(declare-fun b!104389 () Bool)

(assert (=> b!104389 (= e!67980 (get!1334 (select (arr!2057 (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104390 () Bool)

(assert (=> b!104390 (= e!67980 (get!1335 (select (arr!2057 (ite (or c!17808 c!17806) (_values!2544 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28271 c!18061) b!104389))

(assert (= (and d!28271 (not c!18061)) b!104390))

(assert (=> b!104389 m!115241))

(assert (=> b!104389 m!114563))

(declare-fun m!115991 () Bool)

(assert (=> b!104389 m!115991))

(assert (=> b!104390 m!115241))

(assert (=> b!104390 m!114563))

(declare-fun m!115993 () Bool)

(assert (=> b!104390 m!115993))

(assert (=> b!104038 d!28271))

(declare-fun b!104392 () Bool)

(declare-fun e!67981 () Option!160)

(declare-fun e!67982 () Option!160)

(assert (=> b!104392 (= e!67981 e!67982)))

(declare-fun c!18063 () Bool)

(assert (=> b!104392 (= c!18063 (and ((_ is Cons!1633) (toList!805 lt!52932)) (not (= (_1!1211 (h!2229 (toList!805 lt!52932))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))))

(declare-fun b!104391 () Bool)

(assert (=> b!104391 (= e!67981 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52932)))))))

(declare-fun b!104393 () Bool)

(assert (=> b!104393 (= e!67982 (getValueByKey!154 (t!5711 (toList!805 lt!52932)) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun d!28273 () Bool)

(declare-fun c!18062 () Bool)

(assert (=> d!28273 (= c!18062 (and ((_ is Cons!1633) (toList!805 lt!52932)) (= (_1!1211 (h!2229 (toList!805 lt!52932))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (=> d!28273 (= (getValueByKey!154 (toList!805 lt!52932) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) e!67981)))

(declare-fun b!104394 () Bool)

(assert (=> b!104394 (= e!67982 None!158)))

(assert (= (and d!28273 c!18062) b!104391))

(assert (= (and d!28273 (not c!18062)) b!104392))

(assert (= (and b!104392 c!18063) b!104393))

(assert (= (and b!104392 (not c!18063)) b!104394))

(declare-fun m!115995 () Bool)

(assert (=> b!104393 m!115995))

(assert (=> b!103738 d!28273))

(declare-fun bm!10967 () Bool)

(declare-fun call!10970 () Bool)

(declare-fun lt!53347 () ListLongMap!1579)

(assert (=> bm!10967 (= call!10970 (contains!825 lt!53347 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10968 () Bool)

(declare-fun call!10972 () ListLongMap!1579)

(declare-fun call!10975 () ListLongMap!1579)

(assert (=> bm!10968 (= call!10972 call!10975)))

(declare-fun b!104395 () Bool)

(declare-fun e!67994 () Bool)

(declare-fun e!67995 () Bool)

(assert (=> b!104395 (= e!67994 e!67995)))

(declare-fun res!52064 () Bool)

(declare-fun call!10973 () Bool)

(assert (=> b!104395 (= res!52064 call!10973)))

(assert (=> b!104395 (=> (not res!52064) (not e!67995))))

(declare-fun bm!10969 () Bool)

(declare-fun call!10971 () ListLongMap!1579)

(declare-fun call!10976 () ListLongMap!1579)

(assert (=> bm!10969 (= call!10971 call!10976)))

(declare-fun b!104396 () Bool)

(declare-fun e!67984 () Bool)

(assert (=> b!104396 (= e!67984 (= (apply!97 lt!53347 #b1000000000000000000000000000000000000000000000000000000000000000) lt!52546))))

(declare-fun b!104397 () Bool)

(declare-fun e!67988 () ListLongMap!1579)

(declare-fun e!67993 () ListLongMap!1579)

(assert (=> b!104397 (= e!67988 e!67993)))

(declare-fun c!18068 () Bool)

(assert (=> b!104397 (= c!18068 (and (not (= (bvand lt!52663 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!52663 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104398 () Bool)

(declare-fun res!52063 () Bool)

(declare-fun e!67986 () Bool)

(assert (=> b!104398 (=> (not res!52063) (not e!67986))))

(declare-fun e!67991 () Bool)

(assert (=> b!104398 (= res!52063 e!67991)))

(declare-fun res!52066 () Bool)

(assert (=> b!104398 (=> res!52066 e!67991)))

(declare-fun e!67983 () Bool)

(assert (=> b!104398 (= res!52066 (not e!67983))))

(declare-fun res!52065 () Bool)

(assert (=> b!104398 (=> (not res!52065) (not e!67983))))

(assert (=> b!104398 (= res!52065 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104399 () Bool)

(declare-fun c!18069 () Bool)

(assert (=> b!104399 (= c!18069 (and (not (= (bvand lt!52663 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!52663 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!67990 () ListLongMap!1579)

(assert (=> b!104399 (= e!67993 e!67990)))

(declare-fun c!18065 () Bool)

(declare-fun call!10974 () ListLongMap!1579)

(declare-fun bm!10970 () Bool)

(assert (=> bm!10970 (= call!10975 (+!143 (ite c!18065 call!10974 (ite c!18068 call!10976 call!10971)) (ite (or c!18065 c!18068) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546))))))

(declare-fun b!104401 () Bool)

(declare-fun e!67992 () Bool)

(assert (=> b!104401 (= e!67992 (not call!10970))))

(declare-fun b!104402 () Bool)

(declare-fun e!67989 () Unit!3170)

(declare-fun Unit!3215 () Unit!3170)

(assert (=> b!104402 (= e!67989 Unit!3215)))

(declare-fun b!104403 () Bool)

(assert (=> b!104403 (= e!67983 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104404 () Bool)

(assert (=> b!104404 (= e!67990 call!10972)))

(declare-fun b!104405 () Bool)

(declare-fun e!67987 () Bool)

(assert (=> b!104405 (= e!67987 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104406 () Bool)

(declare-fun res!52062 () Bool)

(assert (=> b!104406 (=> (not res!52062) (not e!67986))))

(assert (=> b!104406 (= res!52062 e!67994)))

(declare-fun c!18067 () Bool)

(assert (=> b!104406 (= c!18067 (not (= (bvand lt!52663 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!104407 () Bool)

(assert (=> b!104407 (= e!67993 call!10972)))

(declare-fun b!104408 () Bool)

(assert (=> b!104408 (= e!67990 call!10971)))

(declare-fun bm!10971 () Bool)

(assert (=> bm!10971 (= call!10976 call!10974)))

(declare-fun b!104409 () Bool)

(assert (=> b!104409 (= e!67995 (= (apply!97 lt!53347 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2438 newMap!16)))))

(declare-fun b!104410 () Bool)

(assert (=> b!104410 (= e!67988 (+!143 call!10975 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)))))

(declare-fun bm!10972 () Bool)

(assert (=> bm!10972 (= call!10974 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52663 (zeroValue!2438 newMap!16) lt!52546 #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun d!28275 () Bool)

(assert (=> d!28275 e!67986))

(declare-fun res!52060 () Bool)

(assert (=> d!28275 (=> (not res!52060) (not e!67986))))

(assert (=> d!28275 (= res!52060 (or (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))))

(declare-fun lt!53332 () ListLongMap!1579)

(assert (=> d!28275 (= lt!53347 lt!53332)))

(declare-fun lt!53331 () Unit!3170)

(assert (=> d!28275 (= lt!53331 e!67989)))

(declare-fun c!18064 () Bool)

(assert (=> d!28275 (= c!18064 e!67987)))

(declare-fun res!52068 () Bool)

(assert (=> d!28275 (=> (not res!52068) (not e!67987))))

(assert (=> d!28275 (= res!52068 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!28275 (= lt!53332 e!67988)))

(assert (=> d!28275 (= c!18065 (and (not (= (bvand lt!52663 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!52663 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28275 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28275 (= (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52663 (zeroValue!2438 newMap!16) lt!52546 #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53347)))

(declare-fun b!104400 () Bool)

(declare-fun e!67985 () Bool)

(assert (=> b!104400 (= e!67991 e!67985)))

(declare-fun res!52067 () Bool)

(assert (=> b!104400 (=> (not res!52067) (not e!67985))))

(assert (=> b!104400 (= res!52067 (contains!825 lt!53347 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104400 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104411 () Bool)

(assert (=> b!104411 (= e!67986 e!67992)))

(declare-fun c!18066 () Bool)

(assert (=> b!104411 (= c!18066 (not (= (bvand lt!52663 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104412 () Bool)

(assert (=> b!104412 (= e!67985 (= (apply!97 lt!53347 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1333 (select (arr!2057 (_values!2544 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104412 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_values!2544 newMap!16))))))

(assert (=> b!104412 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun bm!10973 () Bool)

(assert (=> bm!10973 (= call!10973 (contains!825 lt!53347 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104413 () Bool)

(declare-fun lt!53334 () Unit!3170)

(assert (=> b!104413 (= e!67989 lt!53334)))

(declare-fun lt!53340 () ListLongMap!1579)

(assert (=> b!104413 (= lt!53340 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52663 (zeroValue!2438 newMap!16) lt!52546 #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53335 () (_ BitVec 64))

(assert (=> b!104413 (= lt!53335 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53346 () (_ BitVec 64))

(assert (=> b!104413 (= lt!53346 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53350 () Unit!3170)

(assert (=> b!104413 (= lt!53350 (addStillContains!73 lt!53340 lt!53335 (zeroValue!2438 newMap!16) lt!53346))))

(assert (=> b!104413 (contains!825 (+!143 lt!53340 (tuple2!2403 lt!53335 (zeroValue!2438 newMap!16))) lt!53346)))

(declare-fun lt!53343 () Unit!3170)

(assert (=> b!104413 (= lt!53343 lt!53350)))

(declare-fun lt!53345 () ListLongMap!1579)

(assert (=> b!104413 (= lt!53345 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52663 (zeroValue!2438 newMap!16) lt!52546 #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53344 () (_ BitVec 64))

(assert (=> b!104413 (= lt!53344 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53330 () (_ BitVec 64))

(assert (=> b!104413 (= lt!53330 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53342 () Unit!3170)

(assert (=> b!104413 (= lt!53342 (addApplyDifferent!73 lt!53345 lt!53344 lt!52546 lt!53330))))

(assert (=> b!104413 (= (apply!97 (+!143 lt!53345 (tuple2!2403 lt!53344 lt!52546)) lt!53330) (apply!97 lt!53345 lt!53330))))

(declare-fun lt!53341 () Unit!3170)

(assert (=> b!104413 (= lt!53341 lt!53342)))

(declare-fun lt!53348 () ListLongMap!1579)

(assert (=> b!104413 (= lt!53348 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52663 (zeroValue!2438 newMap!16) lt!52546 #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53349 () (_ BitVec 64))

(assert (=> b!104413 (= lt!53349 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53351 () (_ BitVec 64))

(assert (=> b!104413 (= lt!53351 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53339 () Unit!3170)

(assert (=> b!104413 (= lt!53339 (addApplyDifferent!73 lt!53348 lt!53349 (zeroValue!2438 newMap!16) lt!53351))))

(assert (=> b!104413 (= (apply!97 (+!143 lt!53348 (tuple2!2403 lt!53349 (zeroValue!2438 newMap!16))) lt!53351) (apply!97 lt!53348 lt!53351))))

(declare-fun lt!53337 () Unit!3170)

(assert (=> b!104413 (= lt!53337 lt!53339)))

(declare-fun lt!53336 () ListLongMap!1579)

(assert (=> b!104413 (= lt!53336 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52663 (zeroValue!2438 newMap!16) lt!52546 #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53338 () (_ BitVec 64))

(assert (=> b!104413 (= lt!53338 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53333 () (_ BitVec 64))

(assert (=> b!104413 (= lt!53333 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104413 (= lt!53334 (addApplyDifferent!73 lt!53336 lt!53338 lt!52546 lt!53333))))

(assert (=> b!104413 (= (apply!97 (+!143 lt!53336 (tuple2!2403 lt!53338 lt!52546)) lt!53333) (apply!97 lt!53336 lt!53333))))

(declare-fun b!104414 () Bool)

(assert (=> b!104414 (= e!67992 e!67984)))

(declare-fun res!52061 () Bool)

(assert (=> b!104414 (= res!52061 call!10970)))

(assert (=> b!104414 (=> (not res!52061) (not e!67984))))

(declare-fun b!104415 () Bool)

(assert (=> b!104415 (= e!67994 (not call!10973))))

(assert (= (and d!28275 c!18065) b!104410))

(assert (= (and d!28275 (not c!18065)) b!104397))

(assert (= (and b!104397 c!18068) b!104407))

(assert (= (and b!104397 (not c!18068)) b!104399))

(assert (= (and b!104399 c!18069) b!104404))

(assert (= (and b!104399 (not c!18069)) b!104408))

(assert (= (or b!104404 b!104408) bm!10969))

(assert (= (or b!104407 bm!10969) bm!10971))

(assert (= (or b!104407 b!104404) bm!10968))

(assert (= (or b!104410 bm!10971) bm!10972))

(assert (= (or b!104410 bm!10968) bm!10970))

(assert (= (and d!28275 res!52068) b!104405))

(assert (= (and d!28275 c!18064) b!104413))

(assert (= (and d!28275 (not c!18064)) b!104402))

(assert (= (and d!28275 res!52060) b!104398))

(assert (= (and b!104398 res!52065) b!104403))

(assert (= (and b!104398 (not res!52066)) b!104400))

(assert (= (and b!104400 res!52067) b!104412))

(assert (= (and b!104398 res!52063) b!104406))

(assert (= (and b!104406 c!18067) b!104395))

(assert (= (and b!104406 (not c!18067)) b!104415))

(assert (= (and b!104395 res!52064) b!104409))

(assert (= (or b!104395 b!104415) bm!10973))

(assert (= (and b!104406 res!52062) b!104411))

(assert (= (and b!104411 c!18066) b!104414))

(assert (= (and b!104411 (not c!18066)) b!104401))

(assert (= (and b!104414 res!52061) b!104396))

(assert (= (or b!104414 b!104401) bm!10967))

(declare-fun b_lambda!4687 () Bool)

(assert (=> (not b_lambda!4687) (not b!104412)))

(assert (=> b!104412 t!5720))

(declare-fun b_and!6473 () Bool)

(assert (= b_and!6469 (and (=> t!5720 result!3447) b_and!6473)))

(assert (=> b!104412 t!5722))

(declare-fun b_and!6475 () Bool)

(assert (= b_and!6471 (and (=> t!5722 result!3449) b_and!6475)))

(declare-fun m!115997 () Bool)

(assert (=> b!104396 m!115997))

(assert (=> d!28275 m!114517))

(declare-fun m!115999 () Bool)

(assert (=> bm!10973 m!115999))

(declare-fun m!116001 () Bool)

(assert (=> bm!10970 m!116001))

(assert (=> b!104405 m!114523))

(assert (=> b!104405 m!114523))

(assert (=> b!104405 m!114525))

(declare-fun m!116003 () Bool)

(assert (=> b!104413 m!116003))

(declare-fun m!116005 () Bool)

(assert (=> b!104413 m!116005))

(declare-fun m!116007 () Bool)

(assert (=> b!104413 m!116007))

(declare-fun m!116009 () Bool)

(assert (=> b!104413 m!116009))

(declare-fun m!116011 () Bool)

(assert (=> b!104413 m!116011))

(declare-fun m!116013 () Bool)

(assert (=> b!104413 m!116013))

(declare-fun m!116015 () Bool)

(assert (=> b!104413 m!116015))

(declare-fun m!116017 () Bool)

(assert (=> b!104413 m!116017))

(assert (=> b!104413 m!116015))

(declare-fun m!116019 () Bool)

(assert (=> b!104413 m!116019))

(declare-fun m!116021 () Bool)

(assert (=> b!104413 m!116021))

(declare-fun m!116023 () Bool)

(assert (=> b!104413 m!116023))

(assert (=> b!104413 m!114523))

(assert (=> b!104413 m!116011))

(declare-fun m!116025 () Bool)

(assert (=> b!104413 m!116025))

(declare-fun m!116027 () Bool)

(assert (=> b!104413 m!116027))

(declare-fun m!116029 () Bool)

(assert (=> b!104413 m!116029))

(declare-fun m!116031 () Bool)

(assert (=> b!104413 m!116031))

(assert (=> b!104413 m!116003))

(declare-fun m!116033 () Bool)

(assert (=> b!104413 m!116033))

(assert (=> b!104413 m!116025))

(assert (=> b!104412 m!114523))

(assert (=> b!104412 m!114523))

(declare-fun m!116035 () Bool)

(assert (=> b!104412 m!116035))

(assert (=> b!104412 m!114561))

(assert (=> b!104412 m!114563))

(assert (=> b!104412 m!114565))

(assert (=> b!104412 m!114563))

(assert (=> b!104412 m!114561))

(declare-fun m!116037 () Bool)

(assert (=> bm!10967 m!116037))

(assert (=> bm!10972 m!116009))

(assert (=> b!104400 m!114523))

(assert (=> b!104400 m!114523))

(declare-fun m!116039 () Bool)

(assert (=> b!104400 m!116039))

(declare-fun m!116041 () Bool)

(assert (=> b!104410 m!116041))

(declare-fun m!116043 () Bool)

(assert (=> b!104409 m!116043))

(assert (=> b!104403 m!114523))

(assert (=> b!104403 m!114523))

(assert (=> b!104403 m!114525))

(assert (=> d!27997 d!28275))

(assert (=> d!27997 d!27811))

(declare-fun d!28277 () Bool)

(declare-fun e!67996 () Bool)

(assert (=> d!28277 e!67996))

(declare-fun res!52070 () Bool)

(assert (=> d!28277 (=> (not res!52070) (not e!67996))))

(declare-fun lt!53352 () ListLongMap!1579)

(assert (=> d!28277 (= res!52070 (contains!825 lt!53352 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546))))))

(declare-fun lt!53355 () List!1637)

(assert (=> d!28277 (= lt!53352 (ListLongMap!1580 lt!53355))))

(declare-fun lt!53354 () Unit!3170)

(declare-fun lt!53353 () Unit!3170)

(assert (=> d!28277 (= lt!53354 lt!53353)))

(assert (=> d!28277 (= (getValueByKey!154 lt!53355 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546))) (Some!159 (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546))))))

(assert (=> d!28277 (= lt!53353 (lemmaContainsTupThenGetReturnValue!72 lt!53355 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546))))))

(assert (=> d!28277 (= lt!53355 (insertStrictlySorted!74 (toList!805 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546))))))

(assert (=> d!28277 (= (+!143 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) lt!53352)))

(declare-fun b!104416 () Bool)

(declare-fun res!52069 () Bool)

(assert (=> b!104416 (=> (not res!52069) (not e!67996))))

(assert (=> b!104416 (= res!52069 (= (getValueByKey!154 (toList!805 lt!53352) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546))) (Some!159 (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)))))))

(declare-fun b!104417 () Bool)

(assert (=> b!104417 (= e!67996 (contains!828 (toList!805 lt!53352) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)))))

(assert (= (and d!28277 res!52070) b!104416))

(assert (= (and b!104416 res!52069) b!104417))

(declare-fun m!116045 () Bool)

(assert (=> d!28277 m!116045))

(declare-fun m!116047 () Bool)

(assert (=> d!28277 m!116047))

(declare-fun m!116049 () Bool)

(assert (=> d!28277 m!116049))

(declare-fun m!116051 () Bool)

(assert (=> d!28277 m!116051))

(declare-fun m!116053 () Bool)

(assert (=> b!104416 m!116053))

(declare-fun m!116055 () Bool)

(assert (=> b!104417 m!116055))

(assert (=> d!27997 d!28277))

(assert (=> d!27997 d!28049))

(declare-fun d!28279 () Bool)

(assert (=> d!28279 (= (+!143 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52663 (zeroValue!2438 newMap!16) lt!52546 #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(assert (=> d!28279 true))

(declare-fun _$8!91 () Unit!3170)

(assert (=> d!28279 (= (choose!655 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) lt!52663 (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) lt!52546 (defaultEntry!2561 newMap!16)) _$8!91)))

(declare-fun bs!4290 () Bool)

(assert (= bs!4290 d!28279))

(assert (=> bs!4290 m!114295))

(assert (=> bs!4290 m!114295))

(assert (=> bs!4290 m!115287))

(assert (=> bs!4290 m!115289))

(assert (=> d!27997 d!28279))

(declare-fun d!28281 () Bool)

(declare-fun e!67998 () Bool)

(assert (=> d!28281 e!67998))

(declare-fun res!52071 () Bool)

(assert (=> d!28281 (=> res!52071 e!67998)))

(declare-fun lt!53359 () Bool)

(assert (=> d!28281 (= res!52071 (not lt!53359))))

(declare-fun lt!53357 () Bool)

(assert (=> d!28281 (= lt!53359 lt!53357)))

(declare-fun lt!53356 () Unit!3170)

(declare-fun e!67997 () Unit!3170)

(assert (=> d!28281 (= lt!53356 e!67997)))

(declare-fun c!18070 () Bool)

(assert (=> d!28281 (= c!18070 lt!53357)))

(assert (=> d!28281 (= lt!53357 (containsKey!158 (toList!805 lt!52957) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28281 (= (contains!825 lt!52957 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53359)))

(declare-fun b!104418 () Bool)

(declare-fun lt!53358 () Unit!3170)

(assert (=> b!104418 (= e!67997 lt!53358)))

(assert (=> b!104418 (= lt!53358 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52957) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104418 (isDefined!108 (getValueByKey!154 (toList!805 lt!52957) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104419 () Bool)

(declare-fun Unit!3216 () Unit!3170)

(assert (=> b!104419 (= e!67997 Unit!3216)))

(declare-fun b!104420 () Bool)

(assert (=> b!104420 (= e!67998 (isDefined!108 (getValueByKey!154 (toList!805 lt!52957) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28281 c!18070) b!104418))

(assert (= (and d!28281 (not c!18070)) b!104419))

(assert (= (and d!28281 (not res!52071)) b!104420))

(declare-fun m!116057 () Bool)

(assert (=> d!28281 m!116057))

(declare-fun m!116059 () Bool)

(assert (=> b!104418 m!116059))

(declare-fun m!116061 () Bool)

(assert (=> b!104418 m!116061))

(assert (=> b!104418 m!116061))

(declare-fun m!116063 () Bool)

(assert (=> b!104418 m!116063))

(assert (=> b!104420 m!116061))

(assert (=> b!104420 m!116061))

(assert (=> b!104420 m!116063))

(assert (=> d!27847 d!28281))

(assert (=> d!27847 d!27807))

(declare-fun d!28283 () Bool)

(declare-fun res!52072 () Bool)

(declare-fun e!67999 () Bool)

(assert (=> d!28283 (=> res!52072 e!67999)))

(assert (=> d!28283 (= res!52072 (and ((_ is Cons!1633) (toList!805 lt!52753)) (= (_1!1211 (h!2229 (toList!805 lt!52753))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28283 (= (containsKey!158 (toList!805 lt!52753) #b1000000000000000000000000000000000000000000000000000000000000000) e!67999)))

(declare-fun b!104421 () Bool)

(declare-fun e!68000 () Bool)

(assert (=> b!104421 (= e!67999 e!68000)))

(declare-fun res!52073 () Bool)

(assert (=> b!104421 (=> (not res!52073) (not e!68000))))

(assert (=> b!104421 (= res!52073 (and (or (not ((_ is Cons!1633) (toList!805 lt!52753))) (bvsle (_1!1211 (h!2229 (toList!805 lt!52753))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1633) (toList!805 lt!52753)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52753))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104422 () Bool)

(assert (=> b!104422 (= e!68000 (containsKey!158 (t!5711 (toList!805 lt!52753)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28283 (not res!52072)) b!104421))

(assert (= (and b!104421 res!52073) b!104422))

(declare-fun m!116065 () Bool)

(assert (=> b!104422 m!116065))

(assert (=> d!27919 d!28283))

(declare-fun d!28285 () Bool)

(assert (=> d!28285 (= (apply!97 (+!143 lt!52821 (tuple2!2403 lt!52820 (minValue!2438 newMap!16))) lt!52806) (apply!97 lt!52821 lt!52806))))

(declare-fun lt!53360 () Unit!3170)

(assert (=> d!28285 (= lt!53360 (choose!648 lt!52821 lt!52820 (minValue!2438 newMap!16) lt!52806))))

(declare-fun e!68001 () Bool)

(assert (=> d!28285 e!68001))

(declare-fun res!52074 () Bool)

(assert (=> d!28285 (=> (not res!52074) (not e!68001))))

(assert (=> d!28285 (= res!52074 (contains!825 lt!52821 lt!52806))))

(assert (=> d!28285 (= (addApplyDifferent!73 lt!52821 lt!52820 (minValue!2438 newMap!16) lt!52806) lt!53360)))

(declare-fun b!104423 () Bool)

(assert (=> b!104423 (= e!68001 (not (= lt!52806 lt!52820)))))

(assert (= (and d!28285 res!52074) b!104423))

(assert (=> d!28285 m!114553))

(assert (=> d!28285 m!114539))

(declare-fun m!116067 () Bool)

(assert (=> d!28285 m!116067))

(declare-fun m!116069 () Bool)

(assert (=> d!28285 m!116069))

(assert (=> d!28285 m!114539))

(assert (=> d!28285 m!114543))

(assert (=> b!103644 d!28285))

(declare-fun d!28287 () Bool)

(declare-fun e!68002 () Bool)

(assert (=> d!28287 e!68002))

(declare-fun res!52076 () Bool)

(assert (=> d!28287 (=> (not res!52076) (not e!68002))))

(declare-fun lt!53361 () ListLongMap!1579)

(assert (=> d!28287 (= res!52076 (contains!825 lt!53361 (_1!1211 (tuple2!2403 lt!52811 (zeroValue!2438 newMap!16)))))))

(declare-fun lt!53364 () List!1637)

(assert (=> d!28287 (= lt!53361 (ListLongMap!1580 lt!53364))))

(declare-fun lt!53363 () Unit!3170)

(declare-fun lt!53362 () Unit!3170)

(assert (=> d!28287 (= lt!53363 lt!53362)))

(assert (=> d!28287 (= (getValueByKey!154 lt!53364 (_1!1211 (tuple2!2403 lt!52811 (zeroValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 lt!52811 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28287 (= lt!53362 (lemmaContainsTupThenGetReturnValue!72 lt!53364 (_1!1211 (tuple2!2403 lt!52811 (zeroValue!2438 newMap!16))) (_2!1211 (tuple2!2403 lt!52811 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28287 (= lt!53364 (insertStrictlySorted!74 (toList!805 lt!52816) (_1!1211 (tuple2!2403 lt!52811 (zeroValue!2438 newMap!16))) (_2!1211 (tuple2!2403 lt!52811 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28287 (= (+!143 lt!52816 (tuple2!2403 lt!52811 (zeroValue!2438 newMap!16))) lt!53361)))

(declare-fun b!104424 () Bool)

(declare-fun res!52075 () Bool)

(assert (=> b!104424 (=> (not res!52075) (not e!68002))))

(assert (=> b!104424 (= res!52075 (= (getValueByKey!154 (toList!805 lt!53361) (_1!1211 (tuple2!2403 lt!52811 (zeroValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 lt!52811 (zeroValue!2438 newMap!16))))))))

(declare-fun b!104425 () Bool)

(assert (=> b!104425 (= e!68002 (contains!828 (toList!805 lt!53361) (tuple2!2403 lt!52811 (zeroValue!2438 newMap!16))))))

(assert (= (and d!28287 res!52076) b!104424))

(assert (= (and b!104424 res!52075) b!104425))

(declare-fun m!116071 () Bool)

(assert (=> d!28287 m!116071))

(declare-fun m!116073 () Bool)

(assert (=> d!28287 m!116073))

(declare-fun m!116075 () Bool)

(assert (=> d!28287 m!116075))

(declare-fun m!116077 () Bool)

(assert (=> d!28287 m!116077))

(declare-fun m!116079 () Bool)

(assert (=> b!104424 m!116079))

(declare-fun m!116081 () Bool)

(assert (=> b!104425 m!116081))

(assert (=> b!103644 d!28287))

(declare-fun d!28289 () Bool)

(assert (=> d!28289 (= (apply!97 (+!143 lt!52824 (tuple2!2403 lt!52825 (zeroValue!2438 newMap!16))) lt!52827) (apply!97 lt!52824 lt!52827))))

(declare-fun lt!53365 () Unit!3170)

(assert (=> d!28289 (= lt!53365 (choose!648 lt!52824 lt!52825 (zeroValue!2438 newMap!16) lt!52827))))

(declare-fun e!68003 () Bool)

(assert (=> d!28289 e!68003))

(declare-fun res!52077 () Bool)

(assert (=> d!28289 (=> (not res!52077) (not e!68003))))

(assert (=> d!28289 (= res!52077 (contains!825 lt!52824 lt!52827))))

(assert (=> d!28289 (= (addApplyDifferent!73 lt!52824 lt!52825 (zeroValue!2438 newMap!16) lt!52827) lt!53365)))

(declare-fun b!104426 () Bool)

(assert (=> b!104426 (= e!68003 (not (= lt!52827 lt!52825)))))

(assert (= (and d!28289 res!52077) b!104426))

(assert (=> d!28289 m!114541))

(assert (=> d!28289 m!114527))

(declare-fun m!116083 () Bool)

(assert (=> d!28289 m!116083))

(declare-fun m!116085 () Bool)

(assert (=> d!28289 m!116085))

(assert (=> d!28289 m!114527))

(assert (=> d!28289 m!114529))

(assert (=> b!103644 d!28289))

(declare-fun d!28291 () Bool)

(assert (=> d!28291 (= (apply!97 lt!52824 lt!52827) (get!1336 (getValueByKey!154 (toList!805 lt!52824) lt!52827)))))

(declare-fun bs!4291 () Bool)

(assert (= bs!4291 d!28291))

(declare-fun m!116087 () Bool)

(assert (=> bs!4291 m!116087))

(assert (=> bs!4291 m!116087))

(declare-fun m!116089 () Bool)

(assert (=> bs!4291 m!116089))

(assert (=> b!103644 d!28291))

(declare-fun d!28293 () Bool)

(assert (=> d!28293 (= (apply!97 (+!143 lt!52812 (tuple2!2403 lt!52814 (minValue!2438 newMap!16))) lt!52809) (get!1336 (getValueByKey!154 (toList!805 (+!143 lt!52812 (tuple2!2403 lt!52814 (minValue!2438 newMap!16)))) lt!52809)))))

(declare-fun bs!4292 () Bool)

(assert (= bs!4292 d!28293))

(declare-fun m!116091 () Bool)

(assert (=> bs!4292 m!116091))

(assert (=> bs!4292 m!116091))

(declare-fun m!116093 () Bool)

(assert (=> bs!4292 m!116093))

(assert (=> b!103644 d!28293))

(declare-fun d!28295 () Bool)

(declare-fun e!68004 () Bool)

(assert (=> d!28295 e!68004))

(declare-fun res!52079 () Bool)

(assert (=> d!28295 (=> (not res!52079) (not e!68004))))

(declare-fun lt!53366 () ListLongMap!1579)

(assert (=> d!28295 (= res!52079 (contains!825 lt!53366 (_1!1211 (tuple2!2403 lt!52825 (zeroValue!2438 newMap!16)))))))

(declare-fun lt!53369 () List!1637)

(assert (=> d!28295 (= lt!53366 (ListLongMap!1580 lt!53369))))

(declare-fun lt!53368 () Unit!3170)

(declare-fun lt!53367 () Unit!3170)

(assert (=> d!28295 (= lt!53368 lt!53367)))

(assert (=> d!28295 (= (getValueByKey!154 lt!53369 (_1!1211 (tuple2!2403 lt!52825 (zeroValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 lt!52825 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28295 (= lt!53367 (lemmaContainsTupThenGetReturnValue!72 lt!53369 (_1!1211 (tuple2!2403 lt!52825 (zeroValue!2438 newMap!16))) (_2!1211 (tuple2!2403 lt!52825 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28295 (= lt!53369 (insertStrictlySorted!74 (toList!805 lt!52824) (_1!1211 (tuple2!2403 lt!52825 (zeroValue!2438 newMap!16))) (_2!1211 (tuple2!2403 lt!52825 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28295 (= (+!143 lt!52824 (tuple2!2403 lt!52825 (zeroValue!2438 newMap!16))) lt!53366)))

(declare-fun b!104427 () Bool)

(declare-fun res!52078 () Bool)

(assert (=> b!104427 (=> (not res!52078) (not e!68004))))

(assert (=> b!104427 (= res!52078 (= (getValueByKey!154 (toList!805 lt!53366) (_1!1211 (tuple2!2403 lt!52825 (zeroValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 lt!52825 (zeroValue!2438 newMap!16))))))))

(declare-fun b!104428 () Bool)

(assert (=> b!104428 (= e!68004 (contains!828 (toList!805 lt!53366) (tuple2!2403 lt!52825 (zeroValue!2438 newMap!16))))))

(assert (= (and d!28295 res!52079) b!104427))

(assert (= (and b!104427 res!52078) b!104428))

(declare-fun m!116095 () Bool)

(assert (=> d!28295 m!116095))

(declare-fun m!116097 () Bool)

(assert (=> d!28295 m!116097))

(declare-fun m!116099 () Bool)

(assert (=> d!28295 m!116099))

(declare-fun m!116101 () Bool)

(assert (=> d!28295 m!116101))

(declare-fun m!116103 () Bool)

(assert (=> b!104427 m!116103))

(declare-fun m!116105 () Bool)

(assert (=> b!104428 m!116105))

(assert (=> b!103644 d!28295))

(declare-fun d!28297 () Bool)

(declare-fun e!68006 () Bool)

(assert (=> d!28297 e!68006))

(declare-fun res!52080 () Bool)

(assert (=> d!28297 (=> res!52080 e!68006)))

(declare-fun lt!53373 () Bool)

(assert (=> d!28297 (= res!52080 (not lt!53373))))

(declare-fun lt!53371 () Bool)

(assert (=> d!28297 (= lt!53373 lt!53371)))

(declare-fun lt!53370 () Unit!3170)

(declare-fun e!68005 () Unit!3170)

(assert (=> d!28297 (= lt!53370 e!68005)))

(declare-fun c!18071 () Bool)

(assert (=> d!28297 (= c!18071 lt!53371)))

(assert (=> d!28297 (= lt!53371 (containsKey!158 (toList!805 (+!143 lt!52816 (tuple2!2403 lt!52811 (zeroValue!2438 newMap!16)))) lt!52822))))

(assert (=> d!28297 (= (contains!825 (+!143 lt!52816 (tuple2!2403 lt!52811 (zeroValue!2438 newMap!16))) lt!52822) lt!53373)))

(declare-fun b!104429 () Bool)

(declare-fun lt!53372 () Unit!3170)

(assert (=> b!104429 (= e!68005 lt!53372)))

(assert (=> b!104429 (= lt!53372 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 (+!143 lt!52816 (tuple2!2403 lt!52811 (zeroValue!2438 newMap!16)))) lt!52822))))

(assert (=> b!104429 (isDefined!108 (getValueByKey!154 (toList!805 (+!143 lt!52816 (tuple2!2403 lt!52811 (zeroValue!2438 newMap!16)))) lt!52822))))

(declare-fun b!104430 () Bool)

(declare-fun Unit!3217 () Unit!3170)

(assert (=> b!104430 (= e!68005 Unit!3217)))

(declare-fun b!104431 () Bool)

(assert (=> b!104431 (= e!68006 (isDefined!108 (getValueByKey!154 (toList!805 (+!143 lt!52816 (tuple2!2403 lt!52811 (zeroValue!2438 newMap!16)))) lt!52822)))))

(assert (= (and d!28297 c!18071) b!104429))

(assert (= (and d!28297 (not c!18071)) b!104430))

(assert (= (and d!28297 (not res!52080)) b!104431))

(declare-fun m!116107 () Bool)

(assert (=> d!28297 m!116107))

(declare-fun m!116109 () Bool)

(assert (=> b!104429 m!116109))

(declare-fun m!116111 () Bool)

(assert (=> b!104429 m!116111))

(assert (=> b!104429 m!116111))

(declare-fun m!116113 () Bool)

(assert (=> b!104429 m!116113))

(assert (=> b!104431 m!116111))

(assert (=> b!104431 m!116111))

(assert (=> b!104431 m!116113))

(assert (=> b!103644 d!28297))

(declare-fun d!28299 () Bool)

(declare-fun e!68007 () Bool)

(assert (=> d!28299 e!68007))

(declare-fun res!52082 () Bool)

(assert (=> d!28299 (=> (not res!52082) (not e!68007))))

(declare-fun lt!53374 () ListLongMap!1579)

(assert (=> d!28299 (= res!52082 (contains!825 lt!53374 (_1!1211 (tuple2!2403 lt!52814 (minValue!2438 newMap!16)))))))

(declare-fun lt!53377 () List!1637)

(assert (=> d!28299 (= lt!53374 (ListLongMap!1580 lt!53377))))

(declare-fun lt!53376 () Unit!3170)

(declare-fun lt!53375 () Unit!3170)

(assert (=> d!28299 (= lt!53376 lt!53375)))

(assert (=> d!28299 (= (getValueByKey!154 lt!53377 (_1!1211 (tuple2!2403 lt!52814 (minValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 lt!52814 (minValue!2438 newMap!16)))))))

(assert (=> d!28299 (= lt!53375 (lemmaContainsTupThenGetReturnValue!72 lt!53377 (_1!1211 (tuple2!2403 lt!52814 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2403 lt!52814 (minValue!2438 newMap!16)))))))

(assert (=> d!28299 (= lt!53377 (insertStrictlySorted!74 (toList!805 lt!52812) (_1!1211 (tuple2!2403 lt!52814 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2403 lt!52814 (minValue!2438 newMap!16)))))))

(assert (=> d!28299 (= (+!143 lt!52812 (tuple2!2403 lt!52814 (minValue!2438 newMap!16))) lt!53374)))

(declare-fun b!104432 () Bool)

(declare-fun res!52081 () Bool)

(assert (=> b!104432 (=> (not res!52081) (not e!68007))))

(assert (=> b!104432 (= res!52081 (= (getValueByKey!154 (toList!805 lt!53374) (_1!1211 (tuple2!2403 lt!52814 (minValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 lt!52814 (minValue!2438 newMap!16))))))))

(declare-fun b!104433 () Bool)

(assert (=> b!104433 (= e!68007 (contains!828 (toList!805 lt!53374) (tuple2!2403 lt!52814 (minValue!2438 newMap!16))))))

(assert (= (and d!28299 res!52082) b!104432))

(assert (= (and b!104432 res!52081) b!104433))

(declare-fun m!116115 () Bool)

(assert (=> d!28299 m!116115))

(declare-fun m!116117 () Bool)

(assert (=> d!28299 m!116117))

(declare-fun m!116119 () Bool)

(assert (=> d!28299 m!116119))

(declare-fun m!116121 () Bool)

(assert (=> d!28299 m!116121))

(declare-fun m!116123 () Bool)

(assert (=> b!104432 m!116123))

(declare-fun m!116125 () Bool)

(assert (=> b!104433 m!116125))

(assert (=> b!103644 d!28299))

(declare-fun d!28301 () Bool)

(assert (=> d!28301 (= (apply!97 (+!143 lt!52812 (tuple2!2403 lt!52814 (minValue!2438 newMap!16))) lt!52809) (apply!97 lt!52812 lt!52809))))

(declare-fun lt!53378 () Unit!3170)

(assert (=> d!28301 (= lt!53378 (choose!648 lt!52812 lt!52814 (minValue!2438 newMap!16) lt!52809))))

(declare-fun e!68008 () Bool)

(assert (=> d!28301 e!68008))

(declare-fun res!52083 () Bool)

(assert (=> d!28301 (=> (not res!52083) (not e!68008))))

(assert (=> d!28301 (= res!52083 (contains!825 lt!52812 lt!52809))))

(assert (=> d!28301 (= (addApplyDifferent!73 lt!52812 lt!52814 (minValue!2438 newMap!16) lt!52809) lt!53378)))

(declare-fun b!104434 () Bool)

(assert (=> b!104434 (= e!68008 (not (= lt!52809 lt!52814)))))

(assert (= (and d!28301 res!52083) b!104434))

(assert (=> d!28301 m!114547))

(assert (=> d!28301 m!114549))

(declare-fun m!116127 () Bool)

(assert (=> d!28301 m!116127))

(declare-fun m!116129 () Bool)

(assert (=> d!28301 m!116129))

(assert (=> d!28301 m!114549))

(assert (=> d!28301 m!114551))

(assert (=> b!103644 d!28301))

(declare-fun b!104435 () Bool)

(declare-fun e!68014 () ListLongMap!1579)

(assert (=> b!104435 (= e!68014 (ListLongMap!1580 Nil!1634))))

(declare-fun b!104437 () Bool)

(declare-fun e!68011 () Bool)

(declare-fun lt!53384 () ListLongMap!1579)

(assert (=> b!104437 (= e!68011 (isEmpty!372 lt!53384))))

(declare-fun b!104438 () Bool)

(assert (=> b!104438 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(assert (=> b!104438 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_values!2544 newMap!16))))))

(declare-fun e!68015 () Bool)

(assert (=> b!104438 (= e!68015 (= (apply!97 lt!53384 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1333 (select (arr!2057 (_values!2544 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104439 () Bool)

(declare-fun e!68009 () Bool)

(assert (=> b!104439 (= e!68009 e!68015)))

(assert (=> b!104439 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun res!52087 () Bool)

(assert (=> b!104439 (= res!52087 (contains!825 lt!53384 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104439 (=> (not res!52087) (not e!68015))))

(declare-fun b!104440 () Bool)

(declare-fun e!68010 () ListLongMap!1579)

(assert (=> b!104440 (= e!68014 e!68010)))

(declare-fun c!18072 () Bool)

(assert (=> b!104440 (= c!18072 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104441 () Bool)

(declare-fun e!68012 () Bool)

(assert (=> b!104441 (= e!68012 e!68009)))

(declare-fun c!18073 () Bool)

(declare-fun e!68013 () Bool)

(assert (=> b!104441 (= c!18073 e!68013)))

(declare-fun res!52086 () Bool)

(assert (=> b!104441 (=> (not res!52086) (not e!68013))))

(assert (=> b!104441 (= res!52086 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104442 () Bool)

(declare-fun lt!53380 () Unit!3170)

(declare-fun lt!53383 () Unit!3170)

(assert (=> b!104442 (= lt!53380 lt!53383)))

(declare-fun lt!53379 () ListLongMap!1579)

(declare-fun lt!53382 () V!3211)

(declare-fun lt!53381 () (_ BitVec 64))

(declare-fun lt!53385 () (_ BitVec 64))

(assert (=> b!104442 (not (contains!825 (+!143 lt!53379 (tuple2!2403 lt!53385 lt!53382)) lt!53381))))

(assert (=> b!104442 (= lt!53383 (addStillNotContains!47 lt!53379 lt!53385 lt!53382 lt!53381))))

(assert (=> b!104442 (= lt!53381 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!104442 (= lt!53382 (get!1333 (select (arr!2057 (_values!2544 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!104442 (= lt!53385 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!10977 () ListLongMap!1579)

(assert (=> b!104442 (= lt!53379 call!10977)))

(assert (=> b!104442 (= e!68010 (+!143 call!10977 (tuple2!2403 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) (get!1333 (select (arr!2057 (_values!2544 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!10974 () Bool)

(assert (=> bm!10974 (= call!10977 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2561 newMap!16)))))

(declare-fun d!28303 () Bool)

(assert (=> d!28303 e!68012))

(declare-fun res!52084 () Bool)

(assert (=> d!28303 (=> (not res!52084) (not e!68012))))

(assert (=> d!28303 (= res!52084 (not (contains!825 lt!53384 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28303 (= lt!53384 e!68014)))

(declare-fun c!18074 () Bool)

(assert (=> d!28303 (= c!18074 (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!28303 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28303 (= (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53384)))

(declare-fun b!104436 () Bool)

(declare-fun res!52085 () Bool)

(assert (=> b!104436 (=> (not res!52085) (not e!68012))))

(assert (=> b!104436 (= res!52085 (not (contains!825 lt!53384 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104443 () Bool)

(assert (=> b!104443 (= e!68009 e!68011)))

(declare-fun c!18075 () Bool)

(assert (=> b!104443 (= c!18075 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104444 () Bool)

(assert (=> b!104444 (= e!68010 call!10977)))

(declare-fun b!104445 () Bool)

(assert (=> b!104445 (= e!68011 (= lt!53384 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2561 newMap!16))))))

(declare-fun b!104446 () Bool)

(assert (=> b!104446 (= e!68013 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104446 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (= (and d!28303 c!18074) b!104435))

(assert (= (and d!28303 (not c!18074)) b!104440))

(assert (= (and b!104440 c!18072) b!104442))

(assert (= (and b!104440 (not c!18072)) b!104444))

(assert (= (or b!104442 b!104444) bm!10974))

(assert (= (and d!28303 res!52084) b!104436))

(assert (= (and b!104436 res!52085) b!104441))

(assert (= (and b!104441 res!52086) b!104446))

(assert (= (and b!104441 c!18073) b!104439))

(assert (= (and b!104441 (not c!18073)) b!104443))

(assert (= (and b!104439 res!52087) b!104438))

(assert (= (and b!104443 c!18075) b!104445))

(assert (= (and b!104443 (not c!18075)) b!104437))

(declare-fun b_lambda!4689 () Bool)

(assert (=> (not b_lambda!4689) (not b!104438)))

(assert (=> b!104438 t!5720))

(declare-fun b_and!6477 () Bool)

(assert (= b_and!6473 (and (=> t!5720 result!3447) b_and!6477)))

(assert (=> b!104438 t!5722))

(declare-fun b_and!6479 () Bool)

(assert (= b_and!6475 (and (=> t!5722 result!3449) b_and!6479)))

(declare-fun b_lambda!4691 () Bool)

(assert (=> (not b_lambda!4691) (not b!104442)))

(assert (=> b!104442 t!5720))

(declare-fun b_and!6481 () Bool)

(assert (= b_and!6477 (and (=> t!5720 result!3447) b_and!6481)))

(assert (=> b!104442 t!5722))

(declare-fun b_and!6483 () Bool)

(assert (= b_and!6479 (and (=> t!5722 result!3449) b_and!6483)))

(declare-fun m!116131 () Bool)

(assert (=> d!28303 m!116131))

(assert (=> d!28303 m!114517))

(declare-fun m!116133 () Bool)

(assert (=> b!104445 m!116133))

(assert (=> bm!10974 m!116133))

(assert (=> b!104438 m!114561))

(assert (=> b!104438 m!114563))

(assert (=> b!104438 m!114565))

(assert (=> b!104438 m!114561))

(assert (=> b!104438 m!114523))

(assert (=> b!104438 m!114563))

(assert (=> b!104438 m!114523))

(declare-fun m!116135 () Bool)

(assert (=> b!104438 m!116135))

(assert (=> b!104442 m!114561))

(assert (=> b!104442 m!114563))

(assert (=> b!104442 m!114565))

(declare-fun m!116137 () Bool)

(assert (=> b!104442 m!116137))

(declare-fun m!116139 () Bool)

(assert (=> b!104442 m!116139))

(assert (=> b!104442 m!116137))

(declare-fun m!116141 () Bool)

(assert (=> b!104442 m!116141))

(assert (=> b!104442 m!114561))

(assert (=> b!104442 m!114523))

(assert (=> b!104442 m!114563))

(declare-fun m!116143 () Bool)

(assert (=> b!104442 m!116143))

(declare-fun m!116145 () Bool)

(assert (=> b!104436 m!116145))

(assert (=> b!104446 m!114523))

(assert (=> b!104446 m!114523))

(assert (=> b!104446 m!114525))

(declare-fun m!116147 () Bool)

(assert (=> b!104437 m!116147))

(assert (=> b!104440 m!114523))

(assert (=> b!104440 m!114523))

(assert (=> b!104440 m!114525))

(assert (=> b!104439 m!114523))

(assert (=> b!104439 m!114523))

(declare-fun m!116149 () Bool)

(assert (=> b!104439 m!116149))

(assert (=> b!103644 d!28303))

(declare-fun d!28305 () Bool)

(assert (=> d!28305 (contains!825 (+!143 lt!52816 (tuple2!2403 lt!52811 (zeroValue!2438 newMap!16))) lt!52822)))

(declare-fun lt!53386 () Unit!3170)

(assert (=> d!28305 (= lt!53386 (choose!649 lt!52816 lt!52811 (zeroValue!2438 newMap!16) lt!52822))))

(assert (=> d!28305 (contains!825 lt!52816 lt!52822)))

(assert (=> d!28305 (= (addStillContains!73 lt!52816 lt!52811 (zeroValue!2438 newMap!16) lt!52822) lt!53386)))

(declare-fun bs!4293 () Bool)

(assert (= bs!4293 d!28305))

(assert (=> bs!4293 m!114535))

(assert (=> bs!4293 m!114535))

(assert (=> bs!4293 m!114537))

(declare-fun m!116151 () Bool)

(assert (=> bs!4293 m!116151))

(declare-fun m!116153 () Bool)

(assert (=> bs!4293 m!116153))

(assert (=> b!103644 d!28305))

(declare-fun d!28307 () Bool)

(assert (=> d!28307 (= (apply!97 lt!52821 lt!52806) (get!1336 (getValueByKey!154 (toList!805 lt!52821) lt!52806)))))

(declare-fun bs!4294 () Bool)

(assert (= bs!4294 d!28307))

(declare-fun m!116155 () Bool)

(assert (=> bs!4294 m!116155))

(assert (=> bs!4294 m!116155))

(declare-fun m!116157 () Bool)

(assert (=> bs!4294 m!116157))

(assert (=> b!103644 d!28307))

(declare-fun d!28309 () Bool)

(assert (=> d!28309 (= (apply!97 (+!143 lt!52824 (tuple2!2403 lt!52825 (zeroValue!2438 newMap!16))) lt!52827) (get!1336 (getValueByKey!154 (toList!805 (+!143 lt!52824 (tuple2!2403 lt!52825 (zeroValue!2438 newMap!16)))) lt!52827)))))

(declare-fun bs!4295 () Bool)

(assert (= bs!4295 d!28309))

(declare-fun m!116159 () Bool)

(assert (=> bs!4295 m!116159))

(assert (=> bs!4295 m!116159))

(declare-fun m!116161 () Bool)

(assert (=> bs!4295 m!116161))

(assert (=> b!103644 d!28309))

(declare-fun d!28311 () Bool)

(assert (=> d!28311 (= (apply!97 lt!52812 lt!52809) (get!1336 (getValueByKey!154 (toList!805 lt!52812) lt!52809)))))

(declare-fun bs!4296 () Bool)

(assert (= bs!4296 d!28311))

(declare-fun m!116163 () Bool)

(assert (=> bs!4296 m!116163))

(assert (=> bs!4296 m!116163))

(declare-fun m!116165 () Bool)

(assert (=> bs!4296 m!116165))

(assert (=> b!103644 d!28311))

(declare-fun d!28313 () Bool)

(declare-fun e!68016 () Bool)

(assert (=> d!28313 e!68016))

(declare-fun res!52089 () Bool)

(assert (=> d!28313 (=> (not res!52089) (not e!68016))))

(declare-fun lt!53387 () ListLongMap!1579)

(assert (=> d!28313 (= res!52089 (contains!825 lt!53387 (_1!1211 (tuple2!2403 lt!52820 (minValue!2438 newMap!16)))))))

(declare-fun lt!53390 () List!1637)

(assert (=> d!28313 (= lt!53387 (ListLongMap!1580 lt!53390))))

(declare-fun lt!53389 () Unit!3170)

(declare-fun lt!53388 () Unit!3170)

(assert (=> d!28313 (= lt!53389 lt!53388)))

(assert (=> d!28313 (= (getValueByKey!154 lt!53390 (_1!1211 (tuple2!2403 lt!52820 (minValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 lt!52820 (minValue!2438 newMap!16)))))))

(assert (=> d!28313 (= lt!53388 (lemmaContainsTupThenGetReturnValue!72 lt!53390 (_1!1211 (tuple2!2403 lt!52820 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2403 lt!52820 (minValue!2438 newMap!16)))))))

(assert (=> d!28313 (= lt!53390 (insertStrictlySorted!74 (toList!805 lt!52821) (_1!1211 (tuple2!2403 lt!52820 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2403 lt!52820 (minValue!2438 newMap!16)))))))

(assert (=> d!28313 (= (+!143 lt!52821 (tuple2!2403 lt!52820 (minValue!2438 newMap!16))) lt!53387)))

(declare-fun b!104447 () Bool)

(declare-fun res!52088 () Bool)

(assert (=> b!104447 (=> (not res!52088) (not e!68016))))

(assert (=> b!104447 (= res!52088 (= (getValueByKey!154 (toList!805 lt!53387) (_1!1211 (tuple2!2403 lt!52820 (minValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 lt!52820 (minValue!2438 newMap!16))))))))

(declare-fun b!104448 () Bool)

(assert (=> b!104448 (= e!68016 (contains!828 (toList!805 lt!53387) (tuple2!2403 lt!52820 (minValue!2438 newMap!16))))))

(assert (= (and d!28313 res!52089) b!104447))

(assert (= (and b!104447 res!52088) b!104448))

(declare-fun m!116167 () Bool)

(assert (=> d!28313 m!116167))

(declare-fun m!116169 () Bool)

(assert (=> d!28313 m!116169))

(declare-fun m!116171 () Bool)

(assert (=> d!28313 m!116171))

(declare-fun m!116173 () Bool)

(assert (=> d!28313 m!116173))

(declare-fun m!116175 () Bool)

(assert (=> b!104447 m!116175))

(declare-fun m!116177 () Bool)

(assert (=> b!104448 m!116177))

(assert (=> b!103644 d!28313))

(declare-fun d!28315 () Bool)

(assert (=> d!28315 (= (apply!97 (+!143 lt!52821 (tuple2!2403 lt!52820 (minValue!2438 newMap!16))) lt!52806) (get!1336 (getValueByKey!154 (toList!805 (+!143 lt!52821 (tuple2!2403 lt!52820 (minValue!2438 newMap!16)))) lt!52806)))))

(declare-fun bs!4297 () Bool)

(assert (= bs!4297 d!28315))

(declare-fun m!116179 () Bool)

(assert (=> bs!4297 m!116179))

(assert (=> bs!4297 m!116179))

(declare-fun m!116181 () Bool)

(assert (=> bs!4297 m!116181))

(assert (=> b!103644 d!28315))

(declare-fun d!28317 () Bool)

(assert (=> d!28317 (= (isDefined!108 (getValueByKey!154 (toList!805 call!10839) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676)))) (not (isEmpty!374 (getValueByKey!154 (toList!805 call!10839) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))))))))

(declare-fun bs!4298 () Bool)

(assert (= bs!4298 d!28317))

(assert (=> bs!4298 m!115097))

(declare-fun m!116183 () Bool)

(assert (=> bs!4298 m!116183))

(assert (=> b!103985 d!28317))

(declare-fun b!104450 () Bool)

(declare-fun e!68017 () Option!160)

(declare-fun e!68018 () Option!160)

(assert (=> b!104450 (= e!68017 e!68018)))

(declare-fun c!18077 () Bool)

(assert (=> b!104450 (= c!18077 (and ((_ is Cons!1633) (toList!805 call!10839)) (not (= (_1!1211 (h!2229 (toList!805 call!10839))) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))))))))

(declare-fun b!104449 () Bool)

(assert (=> b!104449 (= e!68017 (Some!159 (_2!1211 (h!2229 (toList!805 call!10839)))))))

(declare-fun b!104451 () Bool)

(assert (=> b!104451 (= e!68018 (getValueByKey!154 (t!5711 (toList!805 call!10839)) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))))))

(declare-fun c!18076 () Bool)

(declare-fun d!28319 () Bool)

(assert (=> d!28319 (= c!18076 (and ((_ is Cons!1633) (toList!805 call!10839)) (= (_1!1211 (h!2229 (toList!805 call!10839))) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676)))))))

(assert (=> d!28319 (= (getValueByKey!154 (toList!805 call!10839) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))) e!68017)))

(declare-fun b!104452 () Bool)

(assert (=> b!104452 (= e!68018 None!158)))

(assert (= (and d!28319 c!18076) b!104449))

(assert (= (and d!28319 (not c!18076)) b!104450))

(assert (= (and b!104450 c!18077) b!104451))

(assert (= (and b!104450 (not c!18077)) b!104452))

(assert (=> b!104451 m!114327))

(declare-fun m!116185 () Bool)

(assert (=> b!104451 m!116185))

(assert (=> b!103985 d!28319))

(declare-fun d!28321 () Bool)

(declare-fun res!52090 () Bool)

(declare-fun e!68019 () Bool)

(assert (=> d!28321 (=> res!52090 e!68019)))

(assert (=> d!28321 (= res!52090 (and ((_ is Cons!1633) lt!53024) (= (_1!1211 (h!2229 lt!53024)) (_1!1211 lt!52551))))))

(assert (=> d!28321 (= (containsKey!158 lt!53024 (_1!1211 lt!52551)) e!68019)))

(declare-fun b!104453 () Bool)

(declare-fun e!68020 () Bool)

(assert (=> b!104453 (= e!68019 e!68020)))

(declare-fun res!52091 () Bool)

(assert (=> b!104453 (=> (not res!52091) (not e!68020))))

(assert (=> b!104453 (= res!52091 (and (or (not ((_ is Cons!1633) lt!53024)) (bvsle (_1!1211 (h!2229 lt!53024)) (_1!1211 lt!52551))) ((_ is Cons!1633) lt!53024) (bvslt (_1!1211 (h!2229 lt!53024)) (_1!1211 lt!52551))))))

(declare-fun b!104454 () Bool)

(assert (=> b!104454 (= e!68020 (containsKey!158 (t!5711 lt!53024) (_1!1211 lt!52551)))))

(assert (= (and d!28321 (not res!52090)) b!104453))

(assert (= (and b!104453 res!52091) b!104454))

(declare-fun m!116187 () Bool)

(assert (=> b!104454 m!116187))

(assert (=> b!103871 d!28321))

(declare-fun d!28323 () Bool)

(declare-fun e!68022 () Bool)

(assert (=> d!28323 e!68022))

(declare-fun res!52092 () Bool)

(assert (=> d!28323 (=> res!52092 e!68022)))

(declare-fun lt!53394 () Bool)

(assert (=> d!28323 (= res!52092 (not lt!53394))))

(declare-fun lt!53392 () Bool)

(assert (=> d!28323 (= lt!53394 lt!53392)))

(declare-fun lt!53391 () Unit!3170)

(declare-fun e!68021 () Unit!3170)

(assert (=> d!28323 (= lt!53391 e!68021)))

(declare-fun c!18078 () Bool)

(assert (=> d!28323 (= c!18078 lt!53392)))

(assert (=> d!28323 (= lt!53392 (containsKey!158 (toList!805 lt!52823) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28323 (= (contains!825 lt!52823 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53394)))

(declare-fun b!104455 () Bool)

(declare-fun lt!53393 () Unit!3170)

(assert (=> b!104455 (= e!68021 lt!53393)))

(assert (=> b!104455 (= lt!53393 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52823) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104455 (isDefined!108 (getValueByKey!154 (toList!805 lt!52823) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104456 () Bool)

(declare-fun Unit!3218 () Unit!3170)

(assert (=> b!104456 (= e!68021 Unit!3218)))

(declare-fun b!104457 () Bool)

(assert (=> b!104457 (= e!68022 (isDefined!108 (getValueByKey!154 (toList!805 lt!52823) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28323 c!18078) b!104455))

(assert (= (and d!28323 (not c!18078)) b!104456))

(assert (= (and d!28323 (not res!52092)) b!104457))

(declare-fun m!116189 () Bool)

(assert (=> d!28323 m!116189))

(declare-fun m!116191 () Bool)

(assert (=> b!104455 m!116191))

(declare-fun m!116193 () Bool)

(assert (=> b!104455 m!116193))

(assert (=> b!104455 m!116193))

(declare-fun m!116195 () Bool)

(assert (=> b!104455 m!116195))

(assert (=> b!104457 m!116193))

(assert (=> b!104457 m!116193))

(assert (=> b!104457 m!116195))

(assert (=> bm!10879 d!28323))

(declare-fun d!28325 () Bool)

(assert (=> d!28325 (= (isDefined!108 (getValueByKey!154 (toList!805 lt!52789) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!374 (getValueByKey!154 (toList!805 lt!52789) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4299 () Bool)

(assert (= bs!4299 d!28325))

(assert (=> bs!4299 m!114991))

(declare-fun m!116197 () Bool)

(assert (=> bs!4299 m!116197))

(assert (=> b!103882 d!28325))

(declare-fun b!104459 () Bool)

(declare-fun e!68023 () Option!160)

(declare-fun e!68024 () Option!160)

(assert (=> b!104459 (= e!68023 e!68024)))

(declare-fun c!18080 () Bool)

(assert (=> b!104459 (= c!18080 (and ((_ is Cons!1633) (toList!805 lt!52789)) (not (= (_1!1211 (h!2229 (toList!805 lt!52789))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!104458 () Bool)

(assert (=> b!104458 (= e!68023 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52789)))))))

(declare-fun b!104460 () Bool)

(assert (=> b!104460 (= e!68024 (getValueByKey!154 (t!5711 (toList!805 lt!52789)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun c!18079 () Bool)

(declare-fun d!28327 () Bool)

(assert (=> d!28327 (= c!18079 (and ((_ is Cons!1633) (toList!805 lt!52789)) (= (_1!1211 (h!2229 (toList!805 lt!52789))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28327 (= (getValueByKey!154 (toList!805 lt!52789) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!68023)))

(declare-fun b!104461 () Bool)

(assert (=> b!104461 (= e!68024 None!158)))

(assert (= (and d!28327 c!18079) b!104458))

(assert (= (and d!28327 (not c!18079)) b!104459))

(assert (= (and b!104459 c!18080) b!104460))

(assert (= (and b!104459 (not c!18080)) b!104461))

(assert (=> b!104460 m!114355))

(declare-fun m!116199 () Bool)

(assert (=> b!104460 m!116199))

(assert (=> b!103882 d!28327))

(assert (=> b!104094 d!28121))

(declare-fun lt!53395 () Bool)

(declare-fun d!28329 () Bool)

(assert (=> d!28329 (= lt!53395 (select (content!107 (toList!805 lt!53095)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!68026 () Bool)

(assert (=> d!28329 (= lt!53395 e!68026)))

(declare-fun res!52093 () Bool)

(assert (=> d!28329 (=> (not res!52093) (not e!68026))))

(assert (=> d!28329 (= res!52093 ((_ is Cons!1633) (toList!805 lt!53095)))))

(assert (=> d!28329 (= (contains!828 (toList!805 lt!53095) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!53395)))

(declare-fun b!104462 () Bool)

(declare-fun e!68025 () Bool)

(assert (=> b!104462 (= e!68026 e!68025)))

(declare-fun res!52094 () Bool)

(assert (=> b!104462 (=> res!52094 e!68025)))

(assert (=> b!104462 (= res!52094 (= (h!2229 (toList!805 lt!53095)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!104463 () Bool)

(assert (=> b!104463 (= e!68025 (contains!828 (t!5711 (toList!805 lt!53095)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!28329 res!52093) b!104462))

(assert (= (and b!104462 (not res!52094)) b!104463))

(declare-fun m!116201 () Bool)

(assert (=> d!28329 m!116201))

(declare-fun m!116203 () Bool)

(assert (=> d!28329 m!116203))

(declare-fun m!116205 () Bool)

(assert (=> b!104463 m!116205))

(assert (=> b!104009 d!28329))

(declare-fun b!104465 () Bool)

(declare-fun e!68027 () Option!160)

(declare-fun e!68028 () Option!160)

(assert (=> b!104465 (= e!68027 e!68028)))

(declare-fun c!18082 () Bool)

(assert (=> b!104465 (= c!18082 (and ((_ is Cons!1633) (t!5711 (toList!805 lt!52795))) (not (= (_1!1211 (h!2229 (t!5711 (toList!805 lt!52795)))) (_1!1211 lt!52551)))))))

(declare-fun b!104464 () Bool)

(assert (=> b!104464 (= e!68027 (Some!159 (_2!1211 (h!2229 (t!5711 (toList!805 lt!52795))))))))

(declare-fun b!104466 () Bool)

(assert (=> b!104466 (= e!68028 (getValueByKey!154 (t!5711 (t!5711 (toList!805 lt!52795))) (_1!1211 lt!52551)))))

(declare-fun d!28331 () Bool)

(declare-fun c!18081 () Bool)

(assert (=> d!28331 (= c!18081 (and ((_ is Cons!1633) (t!5711 (toList!805 lt!52795))) (= (_1!1211 (h!2229 (t!5711 (toList!805 lt!52795)))) (_1!1211 lt!52551))))))

(assert (=> d!28331 (= (getValueByKey!154 (t!5711 (toList!805 lt!52795)) (_1!1211 lt!52551)) e!68027)))

(declare-fun b!104467 () Bool)

(assert (=> b!104467 (= e!68028 None!158)))

(assert (= (and d!28331 c!18081) b!104464))

(assert (= (and d!28331 (not c!18081)) b!104465))

(assert (= (and b!104465 c!18082) b!104466))

(assert (= (and b!104465 (not c!18082)) b!104467))

(declare-fun m!116207 () Bool)

(assert (=> b!104466 m!116207))

(assert (=> b!103708 d!28331))

(declare-fun d!28333 () Bool)

(assert (=> d!28333 (= (get!1336 (getValueByKey!154 (toList!805 (+!143 lt!52754 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52757)) (v!2880 (getValueByKey!154 (toList!805 (+!143 lt!52754 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52757)))))

(assert (=> d!27875 d!28333))

(declare-fun b!104469 () Bool)

(declare-fun e!68029 () Option!160)

(declare-fun e!68030 () Option!160)

(assert (=> b!104469 (= e!68029 e!68030)))

(declare-fun c!18084 () Bool)

(assert (=> b!104469 (= c!18084 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52754 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))) (not (= (_1!1211 (h!2229 (toList!805 (+!143 lt!52754 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))) lt!52757))))))

(declare-fun b!104468 () Bool)

(assert (=> b!104468 (= e!68029 (Some!159 (_2!1211 (h!2229 (toList!805 (+!143 lt!52754 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))))

(declare-fun b!104470 () Bool)

(assert (=> b!104470 (= e!68030 (getValueByKey!154 (t!5711 (toList!805 (+!143 lt!52754 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))) lt!52757))))

(declare-fun c!18083 () Bool)

(declare-fun d!28335 () Bool)

(assert (=> d!28335 (= c!18083 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52754 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))) (= (_1!1211 (h!2229 (toList!805 (+!143 lt!52754 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))) lt!52757)))))

(assert (=> d!28335 (= (getValueByKey!154 (toList!805 (+!143 lt!52754 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52757) e!68029)))

(declare-fun b!104471 () Bool)

(assert (=> b!104471 (= e!68030 None!158)))

(assert (= (and d!28335 c!18083) b!104468))

(assert (= (and d!28335 (not c!18083)) b!104469))

(assert (= (and b!104469 c!18084) b!104470))

(assert (= (and b!104469 (not c!18084)) b!104471))

(declare-fun m!116209 () Bool)

(assert (=> b!104470 m!116209))

(assert (=> d!27875 d!28335))

(declare-fun lt!53396 () Bool)

(declare-fun d!28337 () Bool)

(assert (=> d!28337 (= lt!53396 (select (content!107 (toList!805 lt!52944)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))

(declare-fun e!68032 () Bool)

(assert (=> d!28337 (= lt!53396 e!68032)))

(declare-fun res!52095 () Bool)

(assert (=> d!28337 (=> (not res!52095) (not e!68032))))

(assert (=> d!28337 (= res!52095 ((_ is Cons!1633) (toList!805 lt!52944)))))

(assert (=> d!28337 (= (contains!828 (toList!805 lt!52944) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) lt!53396)))

(declare-fun b!104472 () Bool)

(declare-fun e!68031 () Bool)

(assert (=> b!104472 (= e!68032 e!68031)))

(declare-fun res!52096 () Bool)

(assert (=> b!104472 (=> res!52096 e!68031)))

(assert (=> b!104472 (= res!52096 (= (h!2229 (toList!805 lt!52944)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))

(declare-fun b!104473 () Bool)

(assert (=> b!104473 (= e!68031 (contains!828 (t!5711 (toList!805 lt!52944)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))

(assert (= (and d!28337 res!52095) b!104472))

(assert (= (and b!104472 (not res!52096)) b!104473))

(declare-fun m!116211 () Bool)

(assert (=> d!28337 m!116211))

(declare-fun m!116213 () Bool)

(assert (=> d!28337 m!116213))

(declare-fun m!116215 () Bool)

(assert (=> b!104473 m!116215))

(assert (=> b!103745 d!28337))

(declare-fun d!28339 () Bool)

(declare-fun e!68034 () Bool)

(assert (=> d!28339 e!68034))

(declare-fun res!52097 () Bool)

(assert (=> d!28339 (=> res!52097 e!68034)))

(declare-fun lt!53400 () Bool)

(assert (=> d!28339 (= res!52097 (not lt!53400))))

(declare-fun lt!53398 () Bool)

(assert (=> d!28339 (= lt!53400 lt!53398)))

(declare-fun lt!53397 () Unit!3170)

(declare-fun e!68033 () Unit!3170)

(assert (=> d!28339 (= lt!53397 e!68033)))

(declare-fun c!18085 () Bool)

(assert (=> d!28339 (= c!18085 lt!53398)))

(assert (=> d!28339 (= lt!53398 (containsKey!158 (toList!805 lt!52932) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!28339 (= (contains!825 lt!52932 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) lt!53400)))

(declare-fun b!104474 () Bool)

(declare-fun lt!53399 () Unit!3170)

(assert (=> b!104474 (= e!68033 lt!53399)))

(assert (=> b!104474 (= lt!53399 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52932) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> b!104474 (isDefined!108 (getValueByKey!154 (toList!805 lt!52932) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun b!104475 () Bool)

(declare-fun Unit!3219 () Unit!3170)

(assert (=> b!104475 (= e!68033 Unit!3219)))

(declare-fun b!104476 () Bool)

(assert (=> b!104476 (= e!68034 (isDefined!108 (getValueByKey!154 (toList!805 lt!52932) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (= (and d!28339 c!18085) b!104474))

(assert (= (and d!28339 (not c!18085)) b!104475))

(assert (= (and d!28339 (not res!52097)) b!104476))

(declare-fun m!116217 () Bool)

(assert (=> d!28339 m!116217))

(declare-fun m!116219 () Bool)

(assert (=> b!104474 m!116219))

(assert (=> b!104474 m!114681))

(assert (=> b!104474 m!114681))

(declare-fun m!116221 () Bool)

(assert (=> b!104474 m!116221))

(assert (=> b!104476 m!114681))

(assert (=> b!104476 m!114681))

(assert (=> b!104476 m!116221))

(assert (=> d!27833 d!28339))

(declare-fun b!104478 () Bool)

(declare-fun e!68035 () Option!160)

(declare-fun e!68036 () Option!160)

(assert (=> b!104478 (= e!68035 e!68036)))

(declare-fun c!18087 () Bool)

(assert (=> b!104478 (= c!18087 (and ((_ is Cons!1633) lt!52935) (not (= (_1!1211 (h!2229 lt!52935)) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))))

(declare-fun b!104477 () Bool)

(assert (=> b!104477 (= e!68035 (Some!159 (_2!1211 (h!2229 lt!52935))))))

(declare-fun b!104479 () Bool)

(assert (=> b!104479 (= e!68036 (getValueByKey!154 (t!5711 lt!52935) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun c!18086 () Bool)

(declare-fun d!28341 () Bool)

(assert (=> d!28341 (= c!18086 (and ((_ is Cons!1633) lt!52935) (= (_1!1211 (h!2229 lt!52935)) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (=> d!28341 (= (getValueByKey!154 lt!52935 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) e!68035)))

(declare-fun b!104480 () Bool)

(assert (=> b!104480 (= e!68036 None!158)))

(assert (= (and d!28341 c!18086) b!104477))

(assert (= (and d!28341 (not c!18086)) b!104478))

(assert (= (and b!104478 c!18087) b!104479))

(assert (= (and b!104478 (not c!18087)) b!104480))

(declare-fun m!116223 () Bool)

(assert (=> b!104479 m!116223))

(assert (=> d!27833 d!28341))

(declare-fun d!28343 () Bool)

(assert (=> d!28343 (= (getValueByKey!154 lt!52935 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (Some!159 (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun lt!53401 () Unit!3170)

(assert (=> d!28343 (= lt!53401 (choose!650 lt!52935 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun e!68037 () Bool)

(assert (=> d!28343 e!68037))

(declare-fun res!52098 () Bool)

(assert (=> d!28343 (=> (not res!52098) (not e!68037))))

(assert (=> d!28343 (= res!52098 (isStrictlySorted!303 lt!52935))))

(assert (=> d!28343 (= (lemmaContainsTupThenGetReturnValue!72 lt!52935 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) lt!53401)))

(declare-fun b!104481 () Bool)

(declare-fun res!52099 () Bool)

(assert (=> b!104481 (=> (not res!52099) (not e!68037))))

(assert (=> b!104481 (= res!52099 (containsKey!158 lt!52935 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun b!104482 () Bool)

(assert (=> b!104482 (= e!68037 (contains!828 lt!52935 (tuple2!2403 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (= (and d!28343 res!52098) b!104481))

(assert (= (and b!104481 res!52099) b!104482))

(assert (=> d!28343 m!114675))

(declare-fun m!116225 () Bool)

(assert (=> d!28343 m!116225))

(declare-fun m!116227 () Bool)

(assert (=> d!28343 m!116227))

(declare-fun m!116229 () Bool)

(assert (=> b!104481 m!116229))

(declare-fun m!116231 () Bool)

(assert (=> b!104482 m!116231))

(assert (=> d!27833 d!28343))

(declare-fun b!104483 () Bool)

(declare-fun e!68038 () Bool)

(declare-fun lt!53402 () List!1637)

(assert (=> b!104483 (= e!68038 (contains!828 lt!53402 (tuple2!2403 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun b!104484 () Bool)

(declare-fun e!68042 () List!1637)

(declare-fun call!10980 () List!1637)

(assert (=> b!104484 (= e!68042 call!10980)))

(declare-fun bm!10975 () Bool)

(declare-fun call!10978 () List!1637)

(declare-fun call!10979 () List!1637)

(assert (=> bm!10975 (= call!10978 call!10979)))

(declare-fun b!104485 () Bool)

(assert (=> b!104485 (= e!68042 call!10980)))

(declare-fun b!104486 () Bool)

(declare-fun c!18090 () Bool)

(assert (=> b!104486 (= c!18090 (and ((_ is Cons!1633) (toList!805 call!10854)) (bvsgt (_1!1211 (h!2229 (toList!805 call!10854))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun e!68039 () List!1637)

(assert (=> b!104486 (= e!68039 e!68042)))

(declare-fun bm!10976 () Bool)

(assert (=> bm!10976 (= call!10980 call!10978)))

(declare-fun b!104487 () Bool)

(declare-fun e!68041 () List!1637)

(assert (=> b!104487 (= e!68041 (insertStrictlySorted!74 (t!5711 (toList!805 call!10854)) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun b!104488 () Bool)

(declare-fun res!52101 () Bool)

(assert (=> b!104488 (=> (not res!52101) (not e!68038))))

(assert (=> b!104488 (= res!52101 (containsKey!158 lt!53402 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun bm!10977 () Bool)

(declare-fun c!18091 () Bool)

(assert (=> bm!10977 (= call!10979 ($colon$colon!79 e!68041 (ite c!18091 (h!2229 (toList!805 call!10854)) (tuple2!2403 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))))

(declare-fun c!18089 () Bool)

(assert (=> bm!10977 (= c!18089 c!18091)))

(declare-fun d!28345 () Bool)

(assert (=> d!28345 e!68038))

(declare-fun res!52100 () Bool)

(assert (=> d!28345 (=> (not res!52100) (not e!68038))))

(assert (=> d!28345 (= res!52100 (isStrictlySorted!303 lt!53402))))

(declare-fun e!68040 () List!1637)

(assert (=> d!28345 (= lt!53402 e!68040)))

(assert (=> d!28345 (= c!18091 (and ((_ is Cons!1633) (toList!805 call!10854)) (bvslt (_1!1211 (h!2229 (toList!805 call!10854))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (=> d!28345 (isStrictlySorted!303 (toList!805 call!10854))))

(assert (=> d!28345 (= (insertStrictlySorted!74 (toList!805 call!10854) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) lt!53402)))

(declare-fun b!104489 () Bool)

(assert (=> b!104489 (= e!68040 e!68039)))

(declare-fun c!18088 () Bool)

(assert (=> b!104489 (= c!18088 (and ((_ is Cons!1633) (toList!805 call!10854)) (= (_1!1211 (h!2229 (toList!805 call!10854))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun b!104490 () Bool)

(assert (=> b!104490 (= e!68039 call!10978)))

(declare-fun b!104491 () Bool)

(assert (=> b!104491 (= e!68040 call!10979)))

(declare-fun b!104492 () Bool)

(assert (=> b!104492 (= e!68041 (ite c!18088 (t!5711 (toList!805 call!10854)) (ite c!18090 (Cons!1633 (h!2229 (toList!805 call!10854)) (t!5711 (toList!805 call!10854))) Nil!1634)))))

(assert (= (and d!28345 c!18091) b!104491))

(assert (= (and d!28345 (not c!18091)) b!104489))

(assert (= (and b!104489 c!18088) b!104490))

(assert (= (and b!104489 (not c!18088)) b!104486))

(assert (= (and b!104486 c!18090) b!104485))

(assert (= (and b!104486 (not c!18090)) b!104484))

(assert (= (or b!104485 b!104484) bm!10976))

(assert (= (or b!104490 bm!10976) bm!10975))

(assert (= (or b!104491 bm!10975) bm!10977))

(assert (= (and bm!10977 c!18089) b!104487))

(assert (= (and bm!10977 (not c!18089)) b!104492))

(assert (= (and d!28345 res!52100) b!104488))

(assert (= (and b!104488 res!52101) b!104483))

(declare-fun m!116233 () Bool)

(assert (=> b!104488 m!116233))

(declare-fun m!116235 () Bool)

(assert (=> bm!10977 m!116235))

(declare-fun m!116237 () Bool)

(assert (=> d!28345 m!116237))

(declare-fun m!116239 () Bool)

(assert (=> d!28345 m!116239))

(declare-fun m!116241 () Bool)

(assert (=> b!104483 m!116241))

(declare-fun m!116243 () Bool)

(assert (=> b!104487 m!116243))

(assert (=> d!27833 d!28345))

(declare-fun d!28347 () Bool)

(assert (=> d!28347 (contains!825 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))

(declare-fun lt!53405 () Unit!3170)

(declare-fun choose!658 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 64) (_ BitVec 32) Int) Unit!3170)

(assert (=> d!28347 (= lt!53405 (choose!658 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(assert (=> d!28347 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28347 (= (lemmaArrayContainsKeyThenInListMap!29 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53405)))

(declare-fun bs!4300 () Bool)

(assert (= bs!4300 d!28347))

(assert (=> bs!4300 m!114295))

(assert (=> bs!4300 m!114295))

(assert (=> bs!4300 m!114187))

(assert (=> bs!4300 m!114599))

(assert (=> bs!4300 m!114187))

(declare-fun m!116245 () Bool)

(assert (=> bs!4300 m!116245))

(assert (=> bs!4300 m!114517))

(assert (=> b!103692 d!28347))

(declare-fun d!28349 () Bool)

(declare-fun e!68044 () Bool)

(assert (=> d!28349 e!68044))

(declare-fun res!52102 () Bool)

(assert (=> d!28349 (=> res!52102 e!68044)))

(declare-fun lt!53409 () Bool)

(assert (=> d!28349 (= res!52102 (not lt!53409))))

(declare-fun lt!53407 () Bool)

(assert (=> d!28349 (= lt!53409 lt!53407)))

(declare-fun lt!53406 () Unit!3170)

(declare-fun e!68043 () Unit!3170)

(assert (=> d!28349 (= lt!53406 e!68043)))

(declare-fun c!18092 () Bool)

(assert (=> d!28349 (= c!18092 lt!53407)))

(assert (=> d!28349 (= lt!53407 (containsKey!158 (toList!805 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> d!28349 (= (contains!825 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) lt!53409)))

(declare-fun b!104493 () Bool)

(declare-fun lt!53408 () Unit!3170)

(assert (=> b!104493 (= e!68043 lt!53408)))

(assert (=> b!104493 (= lt!53408 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> b!104493 (isDefined!108 (getValueByKey!154 (toList!805 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun b!104494 () Bool)

(declare-fun Unit!3220 () Unit!3170)

(assert (=> b!104494 (= e!68043 Unit!3220)))

(declare-fun b!104495 () Bool)

(assert (=> b!104495 (= e!68044 (isDefined!108 (getValueByKey!154 (toList!805 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))))

(assert (= (and d!28349 c!18092) b!104493))

(assert (= (and d!28349 (not c!18092)) b!104494))

(assert (= (and d!28349 (not res!52102)) b!104495))

(assert (=> d!28349 m!114187))

(declare-fun m!116247 () Bool)

(assert (=> d!28349 m!116247))

(assert (=> b!104493 m!114187))

(declare-fun m!116249 () Bool)

(assert (=> b!104493 m!116249))

(assert (=> b!104493 m!114187))

(declare-fun m!116251 () Bool)

(assert (=> b!104493 m!116251))

(assert (=> b!104493 m!116251))

(declare-fun m!116253 () Bool)

(assert (=> b!104493 m!116253))

(assert (=> b!104495 m!114187))

(assert (=> b!104495 m!116251))

(assert (=> b!104495 m!116251))

(assert (=> b!104495 m!116253))

(assert (=> b!103692 d!28349))

(assert (=> b!103692 d!27811))

(declare-fun d!28351 () Bool)

(declare-fun e!68046 () Bool)

(assert (=> d!28351 e!68046))

(declare-fun res!52103 () Bool)

(assert (=> d!28351 (=> res!52103 e!68046)))

(declare-fun lt!53413 () Bool)

(assert (=> d!28351 (= res!52103 (not lt!53413))))

(declare-fun lt!53411 () Bool)

(assert (=> d!28351 (= lt!53413 lt!53411)))

(declare-fun lt!53410 () Unit!3170)

(declare-fun e!68045 () Unit!3170)

(assert (=> d!28351 (= lt!53410 e!68045)))

(declare-fun c!18093 () Bool)

(assert (=> d!28351 (= c!18093 lt!53411)))

(assert (=> d!28351 (= lt!53411 (containsKey!158 (toList!805 lt!52742) lt!52739))))

(assert (=> d!28351 (= (contains!825 lt!52742 lt!52739) lt!53413)))

(declare-fun b!104496 () Bool)

(declare-fun lt!53412 () Unit!3170)

(assert (=> b!104496 (= e!68045 lt!53412)))

(assert (=> b!104496 (= lt!53412 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52742) lt!52739))))

(assert (=> b!104496 (isDefined!108 (getValueByKey!154 (toList!805 lt!52742) lt!52739))))

(declare-fun b!104497 () Bool)

(declare-fun Unit!3221 () Unit!3170)

(assert (=> b!104497 (= e!68045 Unit!3221)))

(declare-fun b!104498 () Bool)

(assert (=> b!104498 (= e!68046 (isDefined!108 (getValueByKey!154 (toList!805 lt!52742) lt!52739)))))

(assert (= (and d!28351 c!18093) b!104496))

(assert (= (and d!28351 (not c!18093)) b!104497))

(assert (= (and d!28351 (not res!52103)) b!104498))

(declare-fun m!116255 () Bool)

(assert (=> d!28351 m!116255))

(declare-fun m!116257 () Bool)

(assert (=> b!104496 m!116257))

(assert (=> b!104496 m!114823))

(assert (=> b!104496 m!114823))

(declare-fun m!116259 () Bool)

(assert (=> b!104496 m!116259))

(assert (=> b!104498 m!114823))

(assert (=> b!104498 m!114823))

(assert (=> b!104498 m!116259))

(assert (=> d!27857 d!28351))

(assert (=> d!27857 d!27859))

(declare-fun d!28353 () Bool)

(assert (=> d!28353 (= (apply!97 (+!143 lt!52742 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52739) (apply!97 lt!52742 lt!52739))))

(assert (=> d!28353 true))

(declare-fun _$34!880 () Unit!3170)

(assert (=> d!28353 (= (choose!648 lt!52742 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))) lt!52739) _$34!880)))

(declare-fun bs!4301 () Bool)

(assert (= bs!4301 d!28353))

(assert (=> bs!4301 m!114395))

(assert (=> bs!4301 m!114395))

(assert (=> bs!4301 m!114397))

(assert (=> bs!4301 m!114393))

(assert (=> d!27857 d!28353))

(assert (=> d!27857 d!27883))

(assert (=> d!27857 d!27871))

(declare-fun b!104499 () Bool)

(declare-fun e!68048 () Bool)

(declare-fun e!68047 () Bool)

(assert (=> b!104499 (= e!68048 e!68047)))

(declare-fun c!18094 () Bool)

(assert (=> b!104499 (= c!18094 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!104500 () Bool)

(declare-fun call!10981 () Bool)

(assert (=> b!104500 (= e!68047 call!10981)))

(declare-fun b!104501 () Bool)

(declare-fun e!68049 () Bool)

(assert (=> b!104501 (= e!68049 call!10981)))

(declare-fun bm!10978 () Bool)

(assert (=> bm!10978 (= call!10981 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4263 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992)))))))

(declare-fun d!28355 () Bool)

(declare-fun res!52105 () Bool)

(assert (=> d!28355 (=> res!52105 e!68048)))

(assert (=> d!28355 (= res!52105 (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(assert (=> d!28355 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992)))) e!68048)))

(declare-fun b!104502 () Bool)

(assert (=> b!104502 (= e!68047 e!68049)))

(declare-fun lt!53415 () (_ BitVec 64))

(assert (=> b!104502 (= lt!53415 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!53416 () Unit!3170)

(assert (=> b!104502 (= lt!53416 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) lt!53415 #b00000000000000000000000000000000))))

(assert (=> b!104502 (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) lt!53415 #b00000000000000000000000000000000)))

(declare-fun lt!53414 () Unit!3170)

(assert (=> b!104502 (= lt!53414 lt!53416)))

(declare-fun res!52104 () Bool)

(assert (=> b!104502 (= res!52104 (= (seekEntryOrOpen!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) #b00000000000000000000000000000000) (_keys!4263 (v!2876 (underlying!359 thiss!992))) (mask!6697 (v!2876 (underlying!359 thiss!992)))) (Found!268 #b00000000000000000000000000000000)))))

(assert (=> b!104502 (=> (not res!52104) (not e!68049))))

(assert (= (and d!28355 (not res!52105)) b!104499))

(assert (= (and b!104499 c!18094) b!104502))

(assert (= (and b!104499 (not c!18094)) b!104500))

(assert (= (and b!104502 res!52104) b!104501))

(assert (= (or b!104501 b!104500) bm!10978))

(assert (=> b!104499 m!115757))

(assert (=> b!104499 m!115757))

(assert (=> b!104499 m!115759))

(declare-fun m!116261 () Bool)

(assert (=> bm!10978 m!116261))

(assert (=> b!104502 m!115757))

(declare-fun m!116263 () Bool)

(assert (=> b!104502 m!116263))

(declare-fun m!116265 () Bool)

(assert (=> b!104502 m!116265))

(assert (=> b!104502 m!115757))

(declare-fun m!116267 () Bool)

(assert (=> b!104502 m!116267))

(assert (=> b!103727 d!28355))

(declare-fun b!104504 () Bool)

(declare-fun e!68050 () Option!160)

(declare-fun e!68051 () Option!160)

(assert (=> b!104504 (= e!68050 e!68051)))

(declare-fun c!18096 () Bool)

(assert (=> b!104504 (= c!18096 (and ((_ is Cons!1633) (toList!805 lt!53137)) (not (= (_1!1211 (h!2229 (toList!805 lt!53137))) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun b!104503 () Bool)

(assert (=> b!104503 (= e!68050 (Some!159 (_2!1211 (h!2229 (toList!805 lt!53137)))))))

(declare-fun b!104505 () Bool)

(assert (=> b!104505 (= e!68051 (getValueByKey!154 (t!5711 (toList!805 lt!53137)) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun d!28357 () Bool)

(declare-fun c!18095 () Bool)

(assert (=> d!28357 (= c!18095 (and ((_ is Cons!1633) (toList!805 lt!53137)) (= (_1!1211 (h!2229 (toList!805 lt!53137))) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28357 (= (getValueByKey!154 (toList!805 lt!53137) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) e!68050)))

(declare-fun b!104506 () Bool)

(assert (=> b!104506 (= e!68051 None!158)))

(assert (= (and d!28357 c!18095) b!104503))

(assert (= (and d!28357 (not c!18095)) b!104504))

(assert (= (and b!104504 c!18096) b!104505))

(assert (= (and b!104504 (not c!18096)) b!104506))

(declare-fun m!116269 () Bool)

(assert (=> b!104505 m!116269))

(assert (=> b!104049 d!28357))

(declare-fun d!28359 () Bool)

(declare-fun res!52106 () Bool)

(declare-fun e!68052 () Bool)

(assert (=> d!28359 (=> res!52106 e!68052)))

(assert (=> d!28359 (= res!52106 (and ((_ is Cons!1633) (toList!805 lt!52753)) (= (_1!1211 (h!2229 (toList!805 lt!52753))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28359 (= (containsKey!158 (toList!805 lt!52753) #b0000000000000000000000000000000000000000000000000000000000000000) e!68052)))

(declare-fun b!104507 () Bool)

(declare-fun e!68053 () Bool)

(assert (=> b!104507 (= e!68052 e!68053)))

(declare-fun res!52107 () Bool)

(assert (=> b!104507 (=> (not res!52107) (not e!68053))))

(assert (=> b!104507 (= res!52107 (and (or (not ((_ is Cons!1633) (toList!805 lt!52753))) (bvsle (_1!1211 (h!2229 (toList!805 lt!52753))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1633) (toList!805 lt!52753)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52753))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104508 () Bool)

(assert (=> b!104508 (= e!68053 (containsKey!158 (t!5711 (toList!805 lt!52753)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28359 (not res!52106)) b!104507))

(assert (= (and b!104507 res!52107) b!104508))

(declare-fun m!116271 () Bool)

(assert (=> b!104508 m!116271))

(assert (=> d!27981 d!28359))

(declare-fun b!104509 () Bool)

(declare-fun e!68054 () Bool)

(declare-fun lt!53417 () List!1637)

(assert (=> b!104509 (= e!68054 (contains!828 lt!53417 (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))))))

(declare-fun b!104510 () Bool)

(declare-fun e!68058 () List!1637)

(declare-fun call!10984 () List!1637)

(assert (=> b!104510 (= e!68058 call!10984)))

(declare-fun bm!10979 () Bool)

(declare-fun call!10982 () List!1637)

(declare-fun call!10983 () List!1637)

(assert (=> bm!10979 (= call!10982 call!10983)))

(declare-fun b!104511 () Bool)

(assert (=> b!104511 (= e!68058 call!10984)))

(declare-fun b!104512 () Bool)

(declare-fun c!18099 () Bool)

(assert (=> b!104512 (= c!18099 (and ((_ is Cons!1633) (t!5711 (toList!805 lt!52542))) (bvsgt (_1!1211 (h!2229 (t!5711 (toList!805 lt!52542)))) (_1!1211 lt!52551))))))

(declare-fun e!68055 () List!1637)

(assert (=> b!104512 (= e!68055 e!68058)))

(declare-fun bm!10980 () Bool)

(assert (=> bm!10980 (= call!10984 call!10982)))

(declare-fun b!104513 () Bool)

(declare-fun e!68057 () List!1637)

(assert (=> b!104513 (= e!68057 (insertStrictlySorted!74 (t!5711 (t!5711 (toList!805 lt!52542))) (_1!1211 lt!52551) (_2!1211 lt!52551)))))

(declare-fun b!104514 () Bool)

(declare-fun res!52109 () Bool)

(assert (=> b!104514 (=> (not res!52109) (not e!68054))))

(assert (=> b!104514 (= res!52109 (containsKey!158 lt!53417 (_1!1211 lt!52551)))))

(declare-fun bm!10981 () Bool)

(declare-fun c!18100 () Bool)

(assert (=> bm!10981 (= call!10983 ($colon$colon!79 e!68057 (ite c!18100 (h!2229 (t!5711 (toList!805 lt!52542))) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551)))))))

(declare-fun c!18098 () Bool)

(assert (=> bm!10981 (= c!18098 c!18100)))

(declare-fun d!28361 () Bool)

(assert (=> d!28361 e!68054))

(declare-fun res!52108 () Bool)

(assert (=> d!28361 (=> (not res!52108) (not e!68054))))

(assert (=> d!28361 (= res!52108 (isStrictlySorted!303 lt!53417))))

(declare-fun e!68056 () List!1637)

(assert (=> d!28361 (= lt!53417 e!68056)))

(assert (=> d!28361 (= c!18100 (and ((_ is Cons!1633) (t!5711 (toList!805 lt!52542))) (bvslt (_1!1211 (h!2229 (t!5711 (toList!805 lt!52542)))) (_1!1211 lt!52551))))))

(assert (=> d!28361 (isStrictlySorted!303 (t!5711 (toList!805 lt!52542)))))

(assert (=> d!28361 (= (insertStrictlySorted!74 (t!5711 (toList!805 lt!52542)) (_1!1211 lt!52551) (_2!1211 lt!52551)) lt!53417)))

(declare-fun b!104515 () Bool)

(assert (=> b!104515 (= e!68056 e!68055)))

(declare-fun c!18097 () Bool)

(assert (=> b!104515 (= c!18097 (and ((_ is Cons!1633) (t!5711 (toList!805 lt!52542))) (= (_1!1211 (h!2229 (t!5711 (toList!805 lt!52542)))) (_1!1211 lt!52551))))))

(declare-fun b!104516 () Bool)

(assert (=> b!104516 (= e!68055 call!10982)))

(declare-fun b!104517 () Bool)

(assert (=> b!104517 (= e!68056 call!10983)))

(declare-fun b!104518 () Bool)

(assert (=> b!104518 (= e!68057 (ite c!18097 (t!5711 (t!5711 (toList!805 lt!52542))) (ite c!18099 (Cons!1633 (h!2229 (t!5711 (toList!805 lt!52542))) (t!5711 (t!5711 (toList!805 lt!52542)))) Nil!1634)))))

(assert (= (and d!28361 c!18100) b!104517))

(assert (= (and d!28361 (not c!18100)) b!104515))

(assert (= (and b!104515 c!18097) b!104516))

(assert (= (and b!104515 (not c!18097)) b!104512))

(assert (= (and b!104512 c!18099) b!104511))

(assert (= (and b!104512 (not c!18099)) b!104510))

(assert (= (or b!104511 b!104510) bm!10980))

(assert (= (or b!104516 bm!10980) bm!10979))

(assert (= (or b!104517 bm!10979) bm!10981))

(assert (= (and bm!10981 c!18098) b!104513))

(assert (= (and bm!10981 (not c!18098)) b!104518))

(assert (= (and d!28361 res!52108) b!104514))

(assert (= (and b!104514 res!52109) b!104509))

(declare-fun m!116273 () Bool)

(assert (=> b!104514 m!116273))

(declare-fun m!116275 () Bool)

(assert (=> bm!10981 m!116275))

(declare-fun m!116277 () Bool)

(assert (=> d!28361 m!116277))

(assert (=> d!28361 m!115767))

(declare-fun m!116279 () Bool)

(assert (=> b!104509 m!116279))

(declare-fun m!116281 () Bool)

(assert (=> b!104513 m!116281))

(assert (=> b!103851 d!28361))

(declare-fun d!28363 () Bool)

(declare-fun e!68060 () Bool)

(assert (=> d!28363 e!68060))

(declare-fun res!52110 () Bool)

(assert (=> d!28363 (=> res!52110 e!68060)))

(declare-fun lt!53421 () Bool)

(assert (=> d!28363 (= res!52110 (not lt!53421))))

(declare-fun lt!53419 () Bool)

(assert (=> d!28363 (= lt!53421 lt!53419)))

(declare-fun lt!53418 () Unit!3170)

(declare-fun e!68059 () Unit!3170)

(assert (=> d!28363 (= lt!53418 e!68059)))

(declare-fun c!18101 () Bool)

(assert (=> d!28363 (= c!18101 lt!53419)))

(assert (=> d!28363 (= lt!53419 (containsKey!158 (toList!805 lt!52976) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28363 (= (contains!825 lt!52976 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53421)))

(declare-fun b!104519 () Bool)

(declare-fun lt!53420 () Unit!3170)

(assert (=> b!104519 (= e!68059 lt!53420)))

(assert (=> b!104519 (= lt!53420 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52976) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104519 (isDefined!108 (getValueByKey!154 (toList!805 lt!52976) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104520 () Bool)

(declare-fun Unit!3222 () Unit!3170)

(assert (=> b!104520 (= e!68059 Unit!3222)))

(declare-fun b!104521 () Bool)

(assert (=> b!104521 (= e!68060 (isDefined!108 (getValueByKey!154 (toList!805 lt!52976) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28363 c!18101) b!104519))

(assert (= (and d!28363 (not c!18101)) b!104520))

(assert (= (and d!28363 (not res!52110)) b!104521))

(declare-fun m!116283 () Bool)

(assert (=> d!28363 m!116283))

(declare-fun m!116285 () Bool)

(assert (=> b!104519 m!116285))

(declare-fun m!116287 () Bool)

(assert (=> b!104519 m!116287))

(assert (=> b!104519 m!116287))

(declare-fun m!116289 () Bool)

(assert (=> b!104519 m!116289))

(assert (=> b!104521 m!116287))

(assert (=> b!104521 m!116287))

(assert (=> b!104521 m!116289))

(assert (=> bm!10905 d!28363))

(declare-fun d!28365 () Bool)

(declare-fun lt!53422 () Bool)

(assert (=> d!28365 (= lt!53422 (select (content!107 lt!52802) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))))))

(declare-fun e!68062 () Bool)

(assert (=> d!28365 (= lt!53422 e!68062)))

(declare-fun res!52111 () Bool)

(assert (=> d!28365 (=> (not res!52111) (not e!68062))))

(assert (=> d!28365 (= res!52111 ((_ is Cons!1633) lt!52802))))

(assert (=> d!28365 (= (contains!828 lt!52802 (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))) lt!53422)))

(declare-fun b!104522 () Bool)

(declare-fun e!68061 () Bool)

(assert (=> b!104522 (= e!68062 e!68061)))

(declare-fun res!52112 () Bool)

(assert (=> b!104522 (=> res!52112 e!68061)))

(assert (=> b!104522 (= res!52112 (= (h!2229 lt!52802) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))))))

(declare-fun b!104523 () Bool)

(assert (=> b!104523 (= e!68061 (contains!828 (t!5711 lt!52802) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))))))

(assert (= (and d!28365 res!52111) b!104522))

(assert (= (and b!104522 (not res!52112)) b!104523))

(declare-fun m!116291 () Bool)

(assert (=> d!28365 m!116291))

(declare-fun m!116293 () Bool)

(assert (=> d!28365 m!116293))

(declare-fun m!116295 () Bool)

(assert (=> b!104523 m!116295))

(assert (=> b!103865 d!28365))

(declare-fun d!28367 () Bool)

(declare-fun res!52113 () Bool)

(declare-fun e!68063 () Bool)

(assert (=> d!28367 (=> res!52113 e!68063)))

(assert (=> d!28367 (= res!52113 (and ((_ is Cons!1633) (toList!805 lt!52766)) (= (_1!1211 (h!2229 (toList!805 lt!52766))) (_1!1211 lt!52547))))))

(assert (=> d!28367 (= (containsKey!158 (toList!805 lt!52766) (_1!1211 lt!52547)) e!68063)))

(declare-fun b!104524 () Bool)

(declare-fun e!68064 () Bool)

(assert (=> b!104524 (= e!68063 e!68064)))

(declare-fun res!52114 () Bool)

(assert (=> b!104524 (=> (not res!52114) (not e!68064))))

(assert (=> b!104524 (= res!52114 (and (or (not ((_ is Cons!1633) (toList!805 lt!52766))) (bvsle (_1!1211 (h!2229 (toList!805 lt!52766))) (_1!1211 lt!52547))) ((_ is Cons!1633) (toList!805 lt!52766)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52766))) (_1!1211 lt!52547))))))

(declare-fun b!104525 () Bool)

(assert (=> b!104525 (= e!68064 (containsKey!158 (t!5711 (toList!805 lt!52766)) (_1!1211 lt!52547)))))

(assert (= (and d!28367 (not res!52113)) b!104524))

(assert (= (and b!104524 res!52114) b!104525))

(declare-fun m!116297 () Bool)

(assert (=> b!104525 m!116297))

(assert (=> d!28003 d!28367))

(declare-fun b!104526 () Bool)

(declare-fun e!68066 () (_ BitVec 32))

(declare-fun e!68065 () (_ BitVec 32))

(assert (=> b!104526 (= e!68066 e!68065)))

(declare-fun c!18102 () Bool)

(assert (=> b!104526 (= c!18102 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (_2!1210 lt!52662))) #b00000000000000000000000000000000)))))

(declare-fun bm!10982 () Bool)

(declare-fun call!10985 () (_ BitVec 32))

(assert (=> bm!10982 (= call!10985 (arrayCountValidKeys!0 (_keys!4263 (_2!1210 lt!52662)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2310 (_keys!4263 (_2!1210 lt!52662)))))))

(declare-fun b!104527 () Bool)

(assert (=> b!104527 (= e!68066 #b00000000000000000000000000000000)))

(declare-fun d!28369 () Bool)

(declare-fun lt!53423 () (_ BitVec 32))

(assert (=> d!28369 (and (bvsge lt!53423 #b00000000000000000000000000000000) (bvsle lt!53423 (bvsub (size!2310 (_keys!4263 (_2!1210 lt!52662))) #b00000000000000000000000000000000)))))

(assert (=> d!28369 (= lt!53423 e!68066)))

(declare-fun c!18103 () Bool)

(assert (=> d!28369 (= c!18103 (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 (_2!1210 lt!52662)))))))

(assert (=> d!28369 (and (bvsle #b00000000000000000000000000000000 (size!2310 (_keys!4263 (_2!1210 lt!52662)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2310 (_keys!4263 (_2!1210 lt!52662))) (size!2310 (_keys!4263 (_2!1210 lt!52662)))))))

(assert (=> d!28369 (= (arrayCountValidKeys!0 (_keys!4263 (_2!1210 lt!52662)) #b00000000000000000000000000000000 (size!2310 (_keys!4263 (_2!1210 lt!52662)))) lt!53423)))

(declare-fun b!104528 () Bool)

(assert (=> b!104528 (= e!68065 (bvadd #b00000000000000000000000000000001 call!10985))))

(declare-fun b!104529 () Bool)

(assert (=> b!104529 (= e!68065 call!10985)))

(assert (= (and d!28369 c!18103) b!104527))

(assert (= (and d!28369 (not c!18103)) b!104526))

(assert (= (and b!104526 c!18102) b!104528))

(assert (= (and b!104526 (not c!18102)) b!104529))

(assert (= (or b!104528 b!104529) bm!10982))

(assert (=> b!104526 m!115431))

(assert (=> b!104526 m!115431))

(assert (=> b!104526 m!115433))

(declare-fun m!116299 () Bool)

(assert (=> bm!10982 m!116299))

(assert (=> b!103999 d!28369))

(declare-fun d!28371 () Bool)

(assert (=> d!28371 (isDefined!108 (getValueByKey!154 (toList!805 lt!52753) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!53424 () Unit!3170)

(assert (=> d!28371 (= lt!53424 (choose!656 (toList!805 lt!52753) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68067 () Bool)

(assert (=> d!28371 e!68067))

(declare-fun res!52115 () Bool)

(assert (=> d!28371 (=> (not res!52115) (not e!68067))))

(assert (=> d!28371 (= res!52115 (isStrictlySorted!303 (toList!805 lt!52753)))))

(assert (=> d!28371 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52753) #b1000000000000000000000000000000000000000000000000000000000000000) lt!53424)))

(declare-fun b!104530 () Bool)

(assert (=> b!104530 (= e!68067 (containsKey!158 (toList!805 lt!52753) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28371 res!52115) b!104530))

(assert (=> d!28371 m!114915))

(assert (=> d!28371 m!114915))

(assert (=> d!28371 m!115005))

(declare-fun m!116301 () Bool)

(assert (=> d!28371 m!116301))

(assert (=> d!28371 m!115581))

(assert (=> b!104530 m!115001))

(assert (=> b!103885 d!28371))

(assert (=> b!103885 d!28081))

(assert (=> b!103885 d!28083))

(declare-fun b!104532 () Bool)

(declare-fun e!68068 () Option!160)

(declare-fun e!68069 () Option!160)

(assert (=> b!104532 (= e!68068 e!68069)))

(declare-fun c!18105 () Bool)

(assert (=> b!104532 (= c!18105 (and ((_ is Cons!1633) (toList!805 lt!52989)) (not (= (_1!1211 (h!2229 (toList!805 lt!52989))) (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun b!104531 () Bool)

(assert (=> b!104531 (= e!68068 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52989)))))))

(declare-fun b!104533 () Bool)

(assert (=> b!104533 (= e!68069 (getValueByKey!154 (t!5711 (toList!805 lt!52989)) (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun c!18104 () Bool)

(declare-fun d!28373 () Bool)

(assert (=> d!28373 (= c!18104 (and ((_ is Cons!1633) (toList!805 lt!52989)) (= (_1!1211 (h!2229 (toList!805 lt!52989))) (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28373 (= (getValueByKey!154 (toList!805 lt!52989) (_1!1211 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) e!68068)))

(declare-fun b!104534 () Bool)

(assert (=> b!104534 (= e!68069 None!158)))

(assert (= (and d!28373 c!18104) b!104531))

(assert (= (and d!28373 (not c!18104)) b!104532))

(assert (= (and b!104532 c!18105) b!104533))

(assert (= (and b!104532 (not c!18105)) b!104534))

(declare-fun m!116303 () Bool)

(assert (=> b!104533 m!116303))

(assert (=> b!103798 d!28373))

(declare-fun d!28375 () Bool)

(declare-fun res!52116 () Bool)

(declare-fun e!68070 () Bool)

(assert (=> d!28375 (=> res!52116 e!68070)))

(assert (=> d!28375 (= res!52116 (and ((_ is Cons!1633) (toList!805 lt!52753)) (= (_1!1211 (h!2229 (toList!805 lt!52753))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28375 (= (containsKey!158 (toList!805 lt!52753) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!68070)))

(declare-fun b!104535 () Bool)

(declare-fun e!68071 () Bool)

(assert (=> b!104535 (= e!68070 e!68071)))

(declare-fun res!52117 () Bool)

(assert (=> b!104535 (=> (not res!52117) (not e!68071))))

(assert (=> b!104535 (= res!52117 (and (or (not ((_ is Cons!1633) (toList!805 lt!52753))) (bvsle (_1!1211 (h!2229 (toList!805 lt!52753))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1633) (toList!805 lt!52753)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52753))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!104536 () Bool)

(assert (=> b!104536 (= e!68071 (containsKey!158 (t!5711 (toList!805 lt!52753)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!28375 (not res!52116)) b!104535))

(assert (= (and b!104535 res!52117) b!104536))

(assert (=> b!104536 m!114355))

(declare-fun m!116305 () Bool)

(assert (=> b!104536 m!116305))

(assert (=> d!27829 d!28375))

(declare-fun d!28377 () Bool)

(declare-fun e!68073 () Bool)

(assert (=> d!28377 e!68073))

(declare-fun res!52118 () Bool)

(assert (=> d!28377 (=> res!52118 e!68073)))

(declare-fun lt!53428 () Bool)

(assert (=> d!28377 (= res!52118 (not lt!53428))))

(declare-fun lt!53426 () Bool)

(assert (=> d!28377 (= lt!53428 lt!53426)))

(declare-fun lt!53425 () Unit!3170)

(declare-fun e!68072 () Unit!3170)

(assert (=> d!28377 (= lt!53425 e!68072)))

(declare-fun c!18106 () Bool)

(assert (=> d!28377 (= c!18106 lt!53426)))

(assert (=> d!28377 (= lt!53426 (containsKey!158 (toList!805 (map!1279 (_2!1210 lt!52916))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> d!28377 (= (contains!825 (map!1279 (_2!1210 lt!52916)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) lt!53428)))

(declare-fun b!104537 () Bool)

(declare-fun lt!53427 () Unit!3170)

(assert (=> b!104537 (= e!68072 lt!53427)))

(assert (=> b!104537 (= lt!53427 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 (map!1279 (_2!1210 lt!52916))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> b!104537 (isDefined!108 (getValueByKey!154 (toList!805 (map!1279 (_2!1210 lt!52916))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun b!104538 () Bool)

(declare-fun Unit!3223 () Unit!3170)

(assert (=> b!104538 (= e!68072 Unit!3223)))

(declare-fun b!104539 () Bool)

(assert (=> b!104539 (= e!68073 (isDefined!108 (getValueByKey!154 (toList!805 (map!1279 (_2!1210 lt!52916))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))))

(assert (= (and d!28377 c!18106) b!104537))

(assert (= (and d!28377 (not c!18106)) b!104538))

(assert (= (and d!28377 (not res!52118)) b!104539))

(assert (=> d!28377 m!114187))

(declare-fun m!116307 () Bool)

(assert (=> d!28377 m!116307))

(assert (=> b!104537 m!114187))

(declare-fun m!116309 () Bool)

(assert (=> b!104537 m!116309))

(assert (=> b!104537 m!114187))

(declare-fun m!116311 () Bool)

(assert (=> b!104537 m!116311))

(assert (=> b!104537 m!116311))

(declare-fun m!116313 () Bool)

(assert (=> b!104537 m!116313))

(assert (=> b!104539 m!114187))

(assert (=> b!104539 m!116311))

(assert (=> b!104539 m!116311))

(assert (=> b!104539 m!116313))

(assert (=> b!103686 d!28377))

(declare-fun d!28379 () Bool)

(assert (=> d!28379 (= (map!1279 (_2!1210 lt!52916)) (getCurrentListMap!482 (_keys!4263 (_2!1210 lt!52916)) (_values!2544 (_2!1210 lt!52916)) (mask!6697 (_2!1210 lt!52916)) (extraKeys!2370 (_2!1210 lt!52916)) (zeroValue!2438 (_2!1210 lt!52916)) (minValue!2438 (_2!1210 lt!52916)) #b00000000000000000000000000000000 (defaultEntry!2561 (_2!1210 lt!52916))))))

(declare-fun bs!4302 () Bool)

(assert (= bs!4302 d!28379))

(declare-fun m!116315 () Bool)

(assert (=> bs!4302 m!116315))

(assert (=> b!103686 d!28379))

(declare-fun lt!53429 () Bool)

(declare-fun d!28381 () Bool)

(assert (=> d!28381 (= lt!53429 (select (content!107 (toList!805 lt!52932)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))

(declare-fun e!68075 () Bool)

(assert (=> d!28381 (= lt!53429 e!68075)))

(declare-fun res!52119 () Bool)

(assert (=> d!28381 (=> (not res!52119) (not e!68075))))

(assert (=> d!28381 (= res!52119 ((_ is Cons!1633) (toList!805 lt!52932)))))

(assert (=> d!28381 (= (contains!828 (toList!805 lt!52932) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) lt!53429)))

(declare-fun b!104540 () Bool)

(declare-fun e!68074 () Bool)

(assert (=> b!104540 (= e!68075 e!68074)))

(declare-fun res!52120 () Bool)

(assert (=> b!104540 (=> res!52120 e!68074)))

(assert (=> b!104540 (= res!52120 (= (h!2229 (toList!805 lt!52932)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))

(declare-fun b!104541 () Bool)

(assert (=> b!104541 (= e!68074 (contains!828 (t!5711 (toList!805 lt!52932)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))

(assert (= (and d!28381 res!52119) b!104540))

(assert (= (and b!104540 (not res!52120)) b!104541))

(declare-fun m!116317 () Bool)

(assert (=> d!28381 m!116317))

(declare-fun m!116319 () Bool)

(assert (=> d!28381 m!116319))

(declare-fun m!116321 () Bool)

(assert (=> b!104541 m!116321))

(assert (=> b!103739 d!28381))

(declare-fun d!28383 () Bool)

(declare-fun e!68076 () Bool)

(assert (=> d!28383 e!68076))

(declare-fun res!52122 () Bool)

(assert (=> d!28383 (=> (not res!52122) (not e!68076))))

(declare-fun lt!53430 () ListLongMap!1579)

(assert (=> d!28383 (= res!52122 (contains!825 lt!53430 (_1!1211 (ite (or c!17860 c!17863) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(declare-fun lt!53433 () List!1637)

(assert (=> d!28383 (= lt!53430 (ListLongMap!1580 lt!53433))))

(declare-fun lt!53432 () Unit!3170)

(declare-fun lt!53431 () Unit!3170)

(assert (=> d!28383 (= lt!53432 lt!53431)))

(assert (=> d!28383 (= (getValueByKey!154 lt!53433 (_1!1211 (ite (or c!17860 c!17863) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))) (Some!159 (_2!1211 (ite (or c!17860 c!17863) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(assert (=> d!28383 (= lt!53431 (lemmaContainsTupThenGetReturnValue!72 lt!53433 (_1!1211 (ite (or c!17860 c!17863) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) (_2!1211 (ite (or c!17860 c!17863) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(assert (=> d!28383 (= lt!53433 (insertStrictlySorted!74 (toList!805 (ite c!17860 call!10886 (ite c!17863 call!10888 call!10883))) (_1!1211 (ite (or c!17860 c!17863) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) (_2!1211 (ite (or c!17860 c!17863) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(assert (=> d!28383 (= (+!143 (ite c!17860 call!10886 (ite c!17863 call!10888 call!10883)) (ite (or c!17860 c!17863) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) lt!53430)))

(declare-fun b!104542 () Bool)

(declare-fun res!52121 () Bool)

(assert (=> b!104542 (=> (not res!52121) (not e!68076))))

(assert (=> b!104542 (= res!52121 (= (getValueByKey!154 (toList!805 lt!53430) (_1!1211 (ite (or c!17860 c!17863) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))) (Some!159 (_2!1211 (ite (or c!17860 c!17863) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))))

(declare-fun b!104543 () Bool)

(assert (=> b!104543 (= e!68076 (contains!828 (toList!805 lt!53430) (ite (or c!17860 c!17863) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(assert (= (and d!28383 res!52122) b!104542))

(assert (= (and b!104542 res!52121) b!104543))

(declare-fun m!116323 () Bool)

(assert (=> d!28383 m!116323))

(declare-fun m!116325 () Bool)

(assert (=> d!28383 m!116325))

(declare-fun m!116327 () Bool)

(assert (=> d!28383 m!116327))

(declare-fun m!116329 () Bool)

(assert (=> d!28383 m!116329))

(declare-fun m!116331 () Bool)

(assert (=> b!104542 m!116331))

(declare-fun m!116333 () Bool)

(assert (=> b!104543 m!116333))

(assert (=> bm!10882 d!28383))

(declare-fun d!28385 () Bool)

(assert (=> d!28385 (= (isEmpty!372 lt!52957) (isEmpty!373 (toList!805 lt!52957)))))

(declare-fun bs!4303 () Bool)

(assert (= bs!4303 d!28385))

(declare-fun m!116335 () Bool)

(assert (=> bs!4303 m!116335))

(assert (=> b!103750 d!28385))

(declare-fun d!28387 () Bool)

(declare-fun e!68078 () Bool)

(assert (=> d!28387 e!68078))

(declare-fun res!52123 () Bool)

(assert (=> d!28387 (=> res!52123 e!68078)))

(declare-fun lt!53437 () Bool)

(assert (=> d!28387 (= res!52123 (not lt!53437))))

(declare-fun lt!53435 () Bool)

(assert (=> d!28387 (= lt!53437 lt!53435)))

(declare-fun lt!53434 () Unit!3170)

(declare-fun e!68077 () Unit!3170)

(assert (=> d!28387 (= lt!53434 e!68077)))

(declare-fun c!18107 () Bool)

(assert (=> d!28387 (= c!18107 lt!53435)))

(assert (=> d!28387 (= lt!53435 (containsKey!158 (toList!805 lt!53137) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!28387 (= (contains!825 lt!53137 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53437)))

(declare-fun b!104544 () Bool)

(declare-fun lt!53436 () Unit!3170)

(assert (=> b!104544 (= e!68077 lt!53436)))

(assert (=> b!104544 (= lt!53436 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!53137) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> b!104544 (isDefined!108 (getValueByKey!154 (toList!805 lt!53137) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!104545 () Bool)

(declare-fun Unit!3224 () Unit!3170)

(assert (=> b!104545 (= e!68077 Unit!3224)))

(declare-fun b!104546 () Bool)

(assert (=> b!104546 (= e!68078 (isDefined!108 (getValueByKey!154 (toList!805 lt!53137) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (= (and d!28387 c!18107) b!104544))

(assert (= (and d!28387 (not c!18107)) b!104545))

(assert (= (and d!28387 (not res!52123)) b!104546))

(declare-fun m!116337 () Bool)

(assert (=> d!28387 m!116337))

(declare-fun m!116339 () Bool)

(assert (=> b!104544 m!116339))

(assert (=> b!104544 m!115275))

(assert (=> b!104544 m!115275))

(declare-fun m!116341 () Bool)

(assert (=> b!104544 m!116341))

(assert (=> b!104546 m!115275))

(assert (=> b!104546 m!115275))

(assert (=> b!104546 m!116341))

(assert (=> d!27993 d!28387))

(declare-fun b!104548 () Bool)

(declare-fun e!68079 () Option!160)

(declare-fun e!68080 () Option!160)

(assert (=> b!104548 (= e!68079 e!68080)))

(declare-fun c!18109 () Bool)

(assert (=> b!104548 (= c!18109 (and ((_ is Cons!1633) lt!53140) (not (= (_1!1211 (h!2229 lt!53140)) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun b!104547 () Bool)

(assert (=> b!104547 (= e!68079 (Some!159 (_2!1211 (h!2229 lt!53140))))))

(declare-fun b!104549 () Bool)

(assert (=> b!104549 (= e!68080 (getValueByKey!154 (t!5711 lt!53140) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun d!28389 () Bool)

(declare-fun c!18108 () Bool)

(assert (=> d!28389 (= c!18108 (and ((_ is Cons!1633) lt!53140) (= (_1!1211 (h!2229 lt!53140)) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28389 (= (getValueByKey!154 lt!53140 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) e!68079)))

(declare-fun b!104550 () Bool)

(assert (=> b!104550 (= e!68080 None!158)))

(assert (= (and d!28389 c!18108) b!104547))

(assert (= (and d!28389 (not c!18108)) b!104548))

(assert (= (and b!104548 c!18109) b!104549))

(assert (= (and b!104548 (not c!18109)) b!104550))

(declare-fun m!116343 () Bool)

(assert (=> b!104549 m!116343))

(assert (=> d!27993 d!28389))

(declare-fun d!28391 () Bool)

(assert (=> d!28391 (= (getValueByKey!154 lt!53140 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun lt!53438 () Unit!3170)

(assert (=> d!28391 (= lt!53438 (choose!650 lt!53140 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun e!68081 () Bool)

(assert (=> d!28391 e!68081))

(declare-fun res!52124 () Bool)

(assert (=> d!28391 (=> (not res!52124) (not e!68081))))

(assert (=> d!28391 (= res!52124 (isStrictlySorted!303 lt!53140))))

(assert (=> d!28391 (= (lemmaContainsTupThenGetReturnValue!72 lt!53140 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53438)))

(declare-fun b!104551 () Bool)

(declare-fun res!52125 () Bool)

(assert (=> b!104551 (=> (not res!52125) (not e!68081))))

(assert (=> b!104551 (= res!52125 (containsKey!158 lt!53140 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!104552 () Bool)

(assert (=> b!104552 (= e!68081 (contains!828 lt!53140 (tuple2!2403 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (= (and d!28391 res!52124) b!104551))

(assert (= (and b!104551 res!52125) b!104552))

(assert (=> d!28391 m!115269))

(declare-fun m!116345 () Bool)

(assert (=> d!28391 m!116345))

(declare-fun m!116347 () Bool)

(assert (=> d!28391 m!116347))

(declare-fun m!116349 () Bool)

(assert (=> b!104551 m!116349))

(declare-fun m!116351 () Bool)

(assert (=> b!104552 m!116351))

(assert (=> d!27993 d!28391))

(declare-fun b!104553 () Bool)

(declare-fun e!68082 () Bool)

(declare-fun lt!53439 () List!1637)

(assert (=> b!104553 (= e!68082 (contains!828 lt!53439 (tuple2!2403 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!104554 () Bool)

(declare-fun e!68086 () List!1637)

(declare-fun call!10988 () List!1637)

(assert (=> b!104554 (= e!68086 call!10988)))

(declare-fun bm!10983 () Bool)

(declare-fun call!10986 () List!1637)

(declare-fun call!10987 () List!1637)

(assert (=> bm!10983 (= call!10986 call!10987)))

(declare-fun b!104555 () Bool)

(assert (=> b!104555 (= e!68086 call!10988)))

(declare-fun b!104556 () Bool)

(declare-fun c!18112 () Bool)

(assert (=> b!104556 (= c!18112 (and ((_ is Cons!1633) (toList!805 call!10877)) (bvsgt (_1!1211 (h!2229 (toList!805 call!10877))) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun e!68083 () List!1637)

(assert (=> b!104556 (= e!68083 e!68086)))

(declare-fun bm!10984 () Bool)

(assert (=> bm!10984 (= call!10988 call!10986)))

(declare-fun b!104557 () Bool)

(declare-fun e!68085 () List!1637)

(assert (=> b!104557 (= e!68085 (insertStrictlySorted!74 (t!5711 (toList!805 call!10877)) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!104558 () Bool)

(declare-fun res!52127 () Bool)

(assert (=> b!104558 (=> (not res!52127) (not e!68082))))

(assert (=> b!104558 (= res!52127 (containsKey!158 lt!53439 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun c!18113 () Bool)

(declare-fun bm!10985 () Bool)

(assert (=> bm!10985 (= call!10987 ($colon$colon!79 e!68085 (ite c!18113 (h!2229 (toList!805 call!10877)) (tuple2!2403 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun c!18111 () Bool)

(assert (=> bm!10985 (= c!18111 c!18113)))

(declare-fun d!28393 () Bool)

(assert (=> d!28393 e!68082))

(declare-fun res!52126 () Bool)

(assert (=> d!28393 (=> (not res!52126) (not e!68082))))

(assert (=> d!28393 (= res!52126 (isStrictlySorted!303 lt!53439))))

(declare-fun e!68084 () List!1637)

(assert (=> d!28393 (= lt!53439 e!68084)))

(assert (=> d!28393 (= c!18113 (and ((_ is Cons!1633) (toList!805 call!10877)) (bvslt (_1!1211 (h!2229 (toList!805 call!10877))) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28393 (isStrictlySorted!303 (toList!805 call!10877))))

(assert (=> d!28393 (= (insertStrictlySorted!74 (toList!805 call!10877) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53439)))

(declare-fun b!104559 () Bool)

(assert (=> b!104559 (= e!68084 e!68083)))

(declare-fun c!18110 () Bool)

(assert (=> b!104559 (= c!18110 (and ((_ is Cons!1633) (toList!805 call!10877)) (= (_1!1211 (h!2229 (toList!805 call!10877))) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!104560 () Bool)

(assert (=> b!104560 (= e!68083 call!10986)))

(declare-fun b!104561 () Bool)

(assert (=> b!104561 (= e!68084 call!10987)))

(declare-fun b!104562 () Bool)

(assert (=> b!104562 (= e!68085 (ite c!18110 (t!5711 (toList!805 call!10877)) (ite c!18112 (Cons!1633 (h!2229 (toList!805 call!10877)) (t!5711 (toList!805 call!10877))) Nil!1634)))))

(assert (= (and d!28393 c!18113) b!104561))

(assert (= (and d!28393 (not c!18113)) b!104559))

(assert (= (and b!104559 c!18110) b!104560))

(assert (= (and b!104559 (not c!18110)) b!104556))

(assert (= (and b!104556 c!18112) b!104555))

(assert (= (and b!104556 (not c!18112)) b!104554))

(assert (= (or b!104555 b!104554) bm!10984))

(assert (= (or b!104560 bm!10984) bm!10983))

(assert (= (or b!104561 bm!10983) bm!10985))

(assert (= (and bm!10985 c!18111) b!104557))

(assert (= (and bm!10985 (not c!18111)) b!104562))

(assert (= (and d!28393 res!52126) b!104558))

(assert (= (and b!104558 res!52127) b!104553))

(declare-fun m!116353 () Bool)

(assert (=> b!104558 m!116353))

(declare-fun m!116355 () Bool)

(assert (=> bm!10985 m!116355))

(declare-fun m!116357 () Bool)

(assert (=> d!28393 m!116357))

(declare-fun m!116359 () Bool)

(assert (=> d!28393 m!116359))

(declare-fun m!116361 () Bool)

(assert (=> b!104553 m!116361))

(declare-fun m!116363 () Bool)

(assert (=> b!104557 m!116363))

(assert (=> d!27993 d!28393))

(assert (=> bm!10895 d!27851))

(declare-fun d!28395 () Bool)

(assert (=> d!28395 (= (get!1336 (getValueByKey!154 (toList!805 lt!52754) lt!52757)) (v!2880 (getValueByKey!154 (toList!805 lt!52754) lt!52757)))))

(assert (=> d!27877 d!28395))

(declare-fun b!104564 () Bool)

(declare-fun e!68087 () Option!160)

(declare-fun e!68088 () Option!160)

(assert (=> b!104564 (= e!68087 e!68088)))

(declare-fun c!18115 () Bool)

(assert (=> b!104564 (= c!18115 (and ((_ is Cons!1633) (toList!805 lt!52754)) (not (= (_1!1211 (h!2229 (toList!805 lt!52754))) lt!52757))))))

(declare-fun b!104563 () Bool)

(assert (=> b!104563 (= e!68087 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52754)))))))

(declare-fun b!104565 () Bool)

(assert (=> b!104565 (= e!68088 (getValueByKey!154 (t!5711 (toList!805 lt!52754)) lt!52757))))

(declare-fun d!28397 () Bool)

(declare-fun c!18114 () Bool)

(assert (=> d!28397 (= c!18114 (and ((_ is Cons!1633) (toList!805 lt!52754)) (= (_1!1211 (h!2229 (toList!805 lt!52754))) lt!52757)))))

(assert (=> d!28397 (= (getValueByKey!154 (toList!805 lt!52754) lt!52757) e!68087)))

(declare-fun b!104566 () Bool)

(assert (=> b!104566 (= e!68088 None!158)))

(assert (= (and d!28397 c!18114) b!104563))

(assert (= (and d!28397 (not c!18114)) b!104564))

(assert (= (and b!104564 c!18115) b!104565))

(assert (= (and b!104564 (not c!18115)) b!104566))

(declare-fun m!116365 () Bool)

(assert (=> b!104565 m!116365))

(assert (=> d!27877 d!28397))

(assert (=> b!103770 d!28077))

(declare-fun d!28399 () Bool)

(assert (=> d!28399 (= (isDefined!108 (getValueByKey!154 (toList!805 lt!52795) (_1!1211 lt!52551))) (not (isEmpty!374 (getValueByKey!154 (toList!805 lt!52795) (_1!1211 lt!52551)))))))

(declare-fun bs!4304 () Bool)

(assert (= bs!4304 d!28399))

(assert (=> bs!4304 m!114485))

(declare-fun m!116367 () Bool)

(assert (=> bs!4304 m!116367))

(assert (=> b!103816 d!28399))

(assert (=> b!103816 d!27815))

(declare-fun d!28401 () Bool)

(declare-fun res!52128 () Bool)

(declare-fun e!68089 () Bool)

(assert (=> d!28401 (=> res!52128 e!68089)))

(assert (=> d!28401 (= res!52128 (and ((_ is Cons!1633) lt!52798) (= (_1!1211 (h!2229 lt!52798)) (_1!1211 lt!52551))))))

(assert (=> d!28401 (= (containsKey!158 lt!52798 (_1!1211 lt!52551)) e!68089)))

(declare-fun b!104567 () Bool)

(declare-fun e!68090 () Bool)

(assert (=> b!104567 (= e!68089 e!68090)))

(declare-fun res!52129 () Bool)

(assert (=> b!104567 (=> (not res!52129) (not e!68090))))

(assert (=> b!104567 (= res!52129 (and (or (not ((_ is Cons!1633) lt!52798)) (bvsle (_1!1211 (h!2229 lt!52798)) (_1!1211 lt!52551))) ((_ is Cons!1633) lt!52798) (bvslt (_1!1211 (h!2229 lt!52798)) (_1!1211 lt!52551))))))

(declare-fun b!104568 () Bool)

(assert (=> b!104568 (= e!68090 (containsKey!158 (t!5711 lt!52798) (_1!1211 lt!52551)))))

(assert (= (and d!28401 (not res!52128)) b!104567))

(assert (= (and b!104567 res!52129) b!104568))

(declare-fun m!116369 () Bool)

(assert (=> b!104568 m!116369))

(assert (=> b!103825 d!28401))

(declare-fun d!28403 () Bool)

(declare-fun e!68092 () Bool)

(assert (=> d!28403 e!68092))

(declare-fun res!52130 () Bool)

(assert (=> d!28403 (=> res!52130 e!68092)))

(declare-fun lt!53443 () Bool)

(assert (=> d!28403 (= res!52130 (not lt!53443))))

(declare-fun lt!53441 () Bool)

(assert (=> d!28403 (= lt!53443 lt!53441)))

(declare-fun lt!53440 () Unit!3170)

(declare-fun e!68091 () Unit!3170)

(assert (=> d!28403 (= lt!53440 e!68091)))

(declare-fun c!18116 () Bool)

(assert (=> d!28403 (= c!18116 lt!53441)))

(assert (=> d!28403 (= lt!53441 (containsKey!158 (toList!805 lt!52823) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28403 (= (contains!825 lt!52823 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53443)))

(declare-fun b!104569 () Bool)

(declare-fun lt!53442 () Unit!3170)

(assert (=> b!104569 (= e!68091 lt!53442)))

(assert (=> b!104569 (= lt!53442 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52823) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104569 (isDefined!108 (getValueByKey!154 (toList!805 lt!52823) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104570 () Bool)

(declare-fun Unit!3225 () Unit!3170)

(assert (=> b!104570 (= e!68091 Unit!3225)))

(declare-fun b!104571 () Bool)

(assert (=> b!104571 (= e!68092 (isDefined!108 (getValueByKey!154 (toList!805 lt!52823) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28403 c!18116) b!104569))

(assert (= (and d!28403 (not c!18116)) b!104570))

(assert (= (and d!28403 (not res!52130)) b!104571))

(declare-fun m!116371 () Bool)

(assert (=> d!28403 m!116371))

(declare-fun m!116373 () Bool)

(assert (=> b!104569 m!116373))

(assert (=> b!104569 m!115381))

(assert (=> b!104569 m!115381))

(declare-fun m!116375 () Bool)

(assert (=> b!104569 m!116375))

(assert (=> b!104571 m!115381))

(assert (=> b!104571 m!115381))

(assert (=> b!104571 m!116375))

(assert (=> bm!10885 d!28403))

(declare-fun b!104573 () Bool)

(declare-fun e!68093 () Option!160)

(declare-fun e!68094 () Option!160)

(assert (=> b!104573 (= e!68093 e!68094)))

(declare-fun c!18118 () Bool)

(assert (=> b!104573 (= c!18118 (and ((_ is Cons!1633) (toList!805 lt!53095)) (not (= (_1!1211 (h!2229 (toList!805 lt!53095))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!104572 () Bool)

(assert (=> b!104572 (= e!68093 (Some!159 (_2!1211 (h!2229 (toList!805 lt!53095)))))))

(declare-fun b!104574 () Bool)

(assert (=> b!104574 (= e!68094 (getValueByKey!154 (t!5711 (toList!805 lt!53095)) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!28405 () Bool)

(declare-fun c!18117 () Bool)

(assert (=> d!28405 (= c!18117 (and ((_ is Cons!1633) (toList!805 lt!53095)) (= (_1!1211 (h!2229 (toList!805 lt!53095))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!28405 (= (getValueByKey!154 (toList!805 lt!53095) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!68093)))

(declare-fun b!104575 () Bool)

(assert (=> b!104575 (= e!68094 None!158)))

(assert (= (and d!28405 c!18117) b!104572))

(assert (= (and d!28405 (not c!18117)) b!104573))

(assert (= (and b!104573 c!18118) b!104574))

(assert (= (and b!104573 (not c!18118)) b!104575))

(declare-fun m!116377 () Bool)

(assert (=> b!104574 m!116377))

(assert (=> b!104008 d!28405))

(declare-fun d!28407 () Bool)

(declare-fun res!52131 () Bool)

(declare-fun e!68095 () Bool)

(assert (=> d!28407 (=> res!52131 e!68095)))

(assert (=> d!28407 (= res!52131 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))) (= (_1!1211 (h!2229 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))) lt!52752)))))

(assert (=> d!28407 (= (containsKey!158 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52752) e!68095)))

(declare-fun b!104576 () Bool)

(declare-fun e!68096 () Bool)

(assert (=> b!104576 (= e!68095 e!68096)))

(declare-fun res!52132 () Bool)

(assert (=> b!104576 (=> (not res!52132) (not e!68096))))

(assert (=> b!104576 (= res!52132 (and (or (not ((_ is Cons!1633) (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))) (bvsle (_1!1211 (h!2229 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))) lt!52752)) ((_ is Cons!1633) (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))) (bvslt (_1!1211 (h!2229 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))) lt!52752)))))

(declare-fun b!104577 () Bool)

(assert (=> b!104577 (= e!68096 (containsKey!158 (t!5711 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))) lt!52752))))

(assert (= (and d!28407 (not res!52131)) b!104576))

(assert (= (and b!104576 res!52132) b!104577))

(declare-fun m!116379 () Bool)

(assert (=> b!104577 m!116379))

(assert (=> d!27881 d!28407))

(declare-fun b!104578 () Bool)

(declare-fun e!68097 () Bool)

(declare-fun lt!53444 () List!1637)

(assert (=> b!104578 (= e!68097 (contains!828 lt!53444 (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))))))

(declare-fun b!104579 () Bool)

(declare-fun e!68101 () List!1637)

(declare-fun call!10991 () List!1637)

(assert (=> b!104579 (= e!68101 call!10991)))

(declare-fun bm!10986 () Bool)

(declare-fun call!10989 () List!1637)

(declare-fun call!10990 () List!1637)

(assert (=> bm!10986 (= call!10989 call!10990)))

(declare-fun b!104580 () Bool)

(assert (=> b!104580 (= e!68101 call!10991)))

(declare-fun c!18121 () Bool)

(declare-fun b!104581 () Bool)

(assert (=> b!104581 (= c!18121 (and ((_ is Cons!1633) (t!5711 (toList!805 (+!143 lt!52542 lt!52547)))) (bvsgt (_1!1211 (h!2229 (t!5711 (toList!805 (+!143 lt!52542 lt!52547))))) (_1!1211 lt!52551))))))

(declare-fun e!68098 () List!1637)

(assert (=> b!104581 (= e!68098 e!68101)))

(declare-fun bm!10987 () Bool)

(assert (=> bm!10987 (= call!10991 call!10989)))

(declare-fun e!68100 () List!1637)

(declare-fun b!104582 () Bool)

(assert (=> b!104582 (= e!68100 (insertStrictlySorted!74 (t!5711 (t!5711 (toList!805 (+!143 lt!52542 lt!52547)))) (_1!1211 lt!52551) (_2!1211 lt!52551)))))

(declare-fun b!104583 () Bool)

(declare-fun res!52134 () Bool)

(assert (=> b!104583 (=> (not res!52134) (not e!68097))))

(assert (=> b!104583 (= res!52134 (containsKey!158 lt!53444 (_1!1211 lt!52551)))))

(declare-fun c!18122 () Bool)

(declare-fun bm!10988 () Bool)

(assert (=> bm!10988 (= call!10990 ($colon$colon!79 e!68100 (ite c!18122 (h!2229 (t!5711 (toList!805 (+!143 lt!52542 lt!52547)))) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551)))))))

(declare-fun c!18120 () Bool)

(assert (=> bm!10988 (= c!18120 c!18122)))

(declare-fun d!28409 () Bool)

(assert (=> d!28409 e!68097))

(declare-fun res!52133 () Bool)

(assert (=> d!28409 (=> (not res!52133) (not e!68097))))

(assert (=> d!28409 (= res!52133 (isStrictlySorted!303 lt!53444))))

(declare-fun e!68099 () List!1637)

(assert (=> d!28409 (= lt!53444 e!68099)))

(assert (=> d!28409 (= c!18122 (and ((_ is Cons!1633) (t!5711 (toList!805 (+!143 lt!52542 lt!52547)))) (bvslt (_1!1211 (h!2229 (t!5711 (toList!805 (+!143 lt!52542 lt!52547))))) (_1!1211 lt!52551))))))

(assert (=> d!28409 (isStrictlySorted!303 (t!5711 (toList!805 (+!143 lt!52542 lt!52547))))))

(assert (=> d!28409 (= (insertStrictlySorted!74 (t!5711 (toList!805 (+!143 lt!52542 lt!52547))) (_1!1211 lt!52551) (_2!1211 lt!52551)) lt!53444)))

(declare-fun b!104584 () Bool)

(assert (=> b!104584 (= e!68099 e!68098)))

(declare-fun c!18119 () Bool)

(assert (=> b!104584 (= c!18119 (and ((_ is Cons!1633) (t!5711 (toList!805 (+!143 lt!52542 lt!52547)))) (= (_1!1211 (h!2229 (t!5711 (toList!805 (+!143 lt!52542 lt!52547))))) (_1!1211 lt!52551))))))

(declare-fun b!104585 () Bool)

(assert (=> b!104585 (= e!68098 call!10989)))

(declare-fun b!104586 () Bool)

(assert (=> b!104586 (= e!68099 call!10990)))

(declare-fun b!104587 () Bool)

(assert (=> b!104587 (= e!68100 (ite c!18119 (t!5711 (t!5711 (toList!805 (+!143 lt!52542 lt!52547)))) (ite c!18121 (Cons!1633 (h!2229 (t!5711 (toList!805 (+!143 lt!52542 lt!52547)))) (t!5711 (t!5711 (toList!805 (+!143 lt!52542 lt!52547))))) Nil!1634)))))

(assert (= (and d!28409 c!18122) b!104586))

(assert (= (and d!28409 (not c!18122)) b!104584))

(assert (= (and b!104584 c!18119) b!104585))

(assert (= (and b!104584 (not c!18119)) b!104581))

(assert (= (and b!104581 c!18121) b!104580))

(assert (= (and b!104581 (not c!18121)) b!104579))

(assert (= (or b!104580 b!104579) bm!10987))

(assert (= (or b!104585 bm!10987) bm!10986))

(assert (= (or b!104586 bm!10986) bm!10988))

(assert (= (and bm!10988 c!18120) b!104582))

(assert (= (and bm!10988 (not c!18120)) b!104587))

(assert (= (and d!28409 res!52133) b!104583))

(assert (= (and b!104583 res!52134) b!104578))

(declare-fun m!116381 () Bool)

(assert (=> b!104583 m!116381))

(declare-fun m!116383 () Bool)

(assert (=> bm!10988 m!116383))

(declare-fun m!116385 () Bool)

(assert (=> d!28409 m!116385))

(assert (=> d!28409 m!115391))

(declare-fun m!116387 () Bool)

(assert (=> b!104578 m!116387))

(declare-fun m!116389 () Bool)

(assert (=> b!104582 m!116389))

(assert (=> b!103870 d!28409))

(declare-fun d!28411 () Bool)

(assert (=> d!28411 (= (get!1336 (getValueByKey!154 (toList!805 (+!143 lt!52751 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52736)) (v!2880 (getValueByKey!154 (toList!805 (+!143 lt!52751 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52736)))))

(assert (=> d!27867 d!28411))

(declare-fun b!104589 () Bool)

(declare-fun e!68102 () Option!160)

(declare-fun e!68103 () Option!160)

(assert (=> b!104589 (= e!68102 e!68103)))

(declare-fun c!18124 () Bool)

(assert (=> b!104589 (= c!18124 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52751 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))) (not (= (_1!1211 (h!2229 (toList!805 (+!143 lt!52751 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))) lt!52736))))))

(declare-fun b!104588 () Bool)

(assert (=> b!104588 (= e!68102 (Some!159 (_2!1211 (h!2229 (toList!805 (+!143 lt!52751 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))))

(declare-fun b!104590 () Bool)

(assert (=> b!104590 (= e!68103 (getValueByKey!154 (t!5711 (toList!805 (+!143 lt!52751 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))) lt!52736))))

(declare-fun c!18123 () Bool)

(declare-fun d!28413 () Bool)

(assert (=> d!28413 (= c!18123 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52751 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))) (= (_1!1211 (h!2229 (toList!805 (+!143 lt!52751 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))) lt!52736)))))

(assert (=> d!28413 (= (getValueByKey!154 (toList!805 (+!143 lt!52751 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52736) e!68102)))

(declare-fun b!104591 () Bool)

(assert (=> b!104591 (= e!68103 None!158)))

(assert (= (and d!28413 c!18123) b!104588))

(assert (= (and d!28413 (not c!18123)) b!104589))

(assert (= (and b!104589 c!18124) b!104590))

(assert (= (and b!104589 (not c!18124)) b!104591))

(declare-fun m!116391 () Bool)

(assert (=> b!104590 m!116391))

(assert (=> d!27867 d!28413))

(assert (=> d!27927 d!27925))

(declare-fun d!28415 () Bool)

(assert (=> d!28415 (= (getValueByKey!154 lt!52794 (_1!1211 lt!52547)) (Some!159 (_2!1211 lt!52547)))))

(assert (=> d!28415 true))

(declare-fun _$22!428 () Unit!3170)

(assert (=> d!28415 (= (choose!650 lt!52794 (_1!1211 lt!52547) (_2!1211 lt!52547)) _$22!428)))

(declare-fun bs!4305 () Bool)

(assert (= bs!4305 d!28415))

(assert (=> bs!4305 m!114467))

(assert (=> d!27927 d!28415))

(declare-fun d!28417 () Bool)

(declare-fun res!52135 () Bool)

(declare-fun e!68104 () Bool)

(assert (=> d!28417 (=> res!52135 e!68104)))

(assert (=> d!28417 (= res!52135 (or ((_ is Nil!1634) lt!52794) ((_ is Nil!1634) (t!5711 lt!52794))))))

(assert (=> d!28417 (= (isStrictlySorted!303 lt!52794) e!68104)))

(declare-fun b!104592 () Bool)

(declare-fun e!68105 () Bool)

(assert (=> b!104592 (= e!68104 e!68105)))

(declare-fun res!52136 () Bool)

(assert (=> b!104592 (=> (not res!52136) (not e!68105))))

(assert (=> b!104592 (= res!52136 (bvslt (_1!1211 (h!2229 lt!52794)) (_1!1211 (h!2229 (t!5711 lt!52794)))))))

(declare-fun b!104593 () Bool)

(assert (=> b!104593 (= e!68105 (isStrictlySorted!303 (t!5711 lt!52794)))))

(assert (= (and d!28417 (not res!52135)) b!104592))

(assert (= (and b!104592 res!52136) b!104593))

(declare-fun m!116393 () Bool)

(assert (=> b!104593 m!116393))

(assert (=> d!27927 d!28417))

(assert (=> b!104031 d!28077))

(declare-fun d!28419 () Bool)

(assert (=> d!28419 (= (get!1336 (getValueByKey!154 (toList!805 lt!52742) lt!52739)) (v!2880 (getValueByKey!154 (toList!805 lt!52742) lt!52739)))))

(assert (=> d!27859 d!28419))

(declare-fun b!104595 () Bool)

(declare-fun e!68106 () Option!160)

(declare-fun e!68107 () Option!160)

(assert (=> b!104595 (= e!68106 e!68107)))

(declare-fun c!18126 () Bool)

(assert (=> b!104595 (= c!18126 (and ((_ is Cons!1633) (toList!805 lt!52742)) (not (= (_1!1211 (h!2229 (toList!805 lt!52742))) lt!52739))))))

(declare-fun b!104594 () Bool)

(assert (=> b!104594 (= e!68106 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52742)))))))

(declare-fun b!104596 () Bool)

(assert (=> b!104596 (= e!68107 (getValueByKey!154 (t!5711 (toList!805 lt!52742)) lt!52739))))

(declare-fun d!28421 () Bool)

(declare-fun c!18125 () Bool)

(assert (=> d!28421 (= c!18125 (and ((_ is Cons!1633) (toList!805 lt!52742)) (= (_1!1211 (h!2229 (toList!805 lt!52742))) lt!52739)))))

(assert (=> d!28421 (= (getValueByKey!154 (toList!805 lt!52742) lt!52739) e!68106)))

(declare-fun b!104597 () Bool)

(assert (=> b!104597 (= e!68107 None!158)))

(assert (= (and d!28421 c!18125) b!104594))

(assert (= (and d!28421 (not c!18125)) b!104595))

(assert (= (and b!104595 c!18126) b!104596))

(assert (= (and b!104595 (not c!18126)) b!104597))

(declare-fun m!116395 () Bool)

(assert (=> b!104596 m!116395))

(assert (=> d!27859 d!28421))

(declare-fun b!104598 () Bool)

(declare-fun e!68109 () (_ BitVec 32))

(declare-fun e!68108 () (_ BitVec 32))

(assert (=> b!104598 (= e!68109 e!68108)))

(declare-fun c!18127 () Bool)

(assert (=> b!104598 (= c!18127 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!10989 () Bool)

(declare-fun call!10992 () (_ BitVec 32))

(assert (=> bm!10989 (= call!10992 (arrayCountValidKeys!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!104599 () Bool)

(assert (=> b!104599 (= e!68109 #b00000000000000000000000000000000)))

(declare-fun d!28423 () Bool)

(declare-fun lt!53445 () (_ BitVec 32))

(assert (=> d!28423 (and (bvsge lt!53445 #b00000000000000000000000000000000) (bvsle lt!53445 (bvsub (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!28423 (= lt!53445 e!68109)))

(declare-fun c!18128 () Bool)

(assert (=> d!28423 (= c!18128 (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(assert (=> d!28423 (and (bvsle #b00000000000000000000000000000000 (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(assert (=> d!28423 (= (arrayCountValidKeys!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) #b00000000000000000000000000000000 (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))) lt!53445)))

(declare-fun b!104600 () Bool)

(assert (=> b!104600 (= e!68108 (bvadd #b00000000000000000000000000000001 call!10992))))

(declare-fun b!104601 () Bool)

(assert (=> b!104601 (= e!68108 call!10992)))

(assert (= (and d!28423 c!18128) b!104599))

(assert (= (and d!28423 (not c!18128)) b!104598))

(assert (= (and b!104598 c!18127) b!104600))

(assert (= (and b!104598 (not c!18127)) b!104601))

(assert (= (or b!104600 b!104601) bm!10989))

(assert (=> b!104598 m!115757))

(assert (=> b!104598 m!115757))

(assert (=> b!104598 m!115759))

(declare-fun m!116397 () Bool)

(assert (=> bm!10989 m!116397))

(assert (=> b!103726 d!28423))

(declare-fun b!104603 () Bool)

(declare-fun e!68110 () Option!160)

(declare-fun e!68111 () Option!160)

(assert (=> b!104603 (= e!68110 e!68111)))

(declare-fun c!18130 () Bool)

(assert (=> b!104603 (= c!18130 (and ((_ is Cons!1633) (toList!805 lt!52944)) (not (= (_1!1211 (h!2229 (toList!805 lt!52944))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))))

(declare-fun b!104602 () Bool)

(assert (=> b!104602 (= e!68110 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52944)))))))

(declare-fun b!104604 () Bool)

(assert (=> b!104604 (= e!68111 (getValueByKey!154 (t!5711 (toList!805 lt!52944)) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun c!18129 () Bool)

(declare-fun d!28425 () Bool)

(assert (=> d!28425 (= c!18129 (and ((_ is Cons!1633) (toList!805 lt!52944)) (= (_1!1211 (h!2229 (toList!805 lt!52944))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (=> d!28425 (= (getValueByKey!154 (toList!805 lt!52944) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) e!68110)))

(declare-fun b!104605 () Bool)

(assert (=> b!104605 (= e!68111 None!158)))

(assert (= (and d!28425 c!18129) b!104602))

(assert (= (and d!28425 (not c!18129)) b!104603))

(assert (= (and b!104603 c!18130) b!104604))

(assert (= (and b!104603 (not c!18130)) b!104605))

(declare-fun m!116399 () Bool)

(assert (=> b!104604 m!116399))

(assert (=> b!103744 d!28425))

(declare-fun d!28427 () Bool)

(declare-fun e!68113 () Bool)

(assert (=> d!28427 e!68113))

(declare-fun res!52137 () Bool)

(assert (=> d!28427 (=> res!52137 e!68113)))

(declare-fun lt!53449 () Bool)

(assert (=> d!28427 (= res!52137 (not lt!53449))))

(declare-fun lt!53447 () Bool)

(assert (=> d!28427 (= lt!53449 lt!53447)))

(declare-fun lt!53446 () Unit!3170)

(declare-fun e!68112 () Unit!3170)

(assert (=> d!28427 (= lt!53446 e!68112)))

(declare-fun c!18131 () Bool)

(assert (=> d!28427 (= c!18131 lt!53447)))

(assert (=> d!28427 (= lt!53447 (containsKey!158 (toList!805 lt!53095) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28427 (= (contains!825 lt!53095 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!53449)))

(declare-fun b!104606 () Bool)

(declare-fun lt!53448 () Unit!3170)

(assert (=> b!104606 (= e!68112 lt!53448)))

(assert (=> b!104606 (= lt!53448 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!53095) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!104606 (isDefined!108 (getValueByKey!154 (toList!805 lt!53095) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!104607 () Bool)

(declare-fun Unit!3226 () Unit!3170)

(assert (=> b!104607 (= e!68112 Unit!3226)))

(declare-fun b!104608 () Bool)

(assert (=> b!104608 (= e!68113 (isDefined!108 (getValueByKey!154 (toList!805 lt!53095) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!28427 c!18131) b!104606))

(assert (= (and d!28427 (not c!18131)) b!104607))

(assert (= (and d!28427 (not res!52137)) b!104608))

(declare-fun m!116401 () Bool)

(assert (=> d!28427 m!116401))

(declare-fun m!116403 () Bool)

(assert (=> b!104606 m!116403))

(assert (=> b!104606 m!115169))

(assert (=> b!104606 m!115169))

(declare-fun m!116405 () Bool)

(assert (=> b!104606 m!116405))

(assert (=> b!104608 m!115169))

(assert (=> b!104608 m!115169))

(assert (=> b!104608 m!116405))

(assert (=> d!27973 d!28427))

(declare-fun b!104610 () Bool)

(declare-fun e!68114 () Option!160)

(declare-fun e!68115 () Option!160)

(assert (=> b!104610 (= e!68114 e!68115)))

(declare-fun c!18133 () Bool)

(assert (=> b!104610 (= c!18133 (and ((_ is Cons!1633) lt!53098) (not (= (_1!1211 (h!2229 lt!53098)) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!104609 () Bool)

(assert (=> b!104609 (= e!68114 (Some!159 (_2!1211 (h!2229 lt!53098))))))

(declare-fun b!104611 () Bool)

(assert (=> b!104611 (= e!68115 (getValueByKey!154 (t!5711 lt!53098) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!28429 () Bool)

(declare-fun c!18132 () Bool)

(assert (=> d!28429 (= c!18132 (and ((_ is Cons!1633) lt!53098) (= (_1!1211 (h!2229 lt!53098)) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!28429 (= (getValueByKey!154 lt!53098 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!68114)))

(declare-fun b!104612 () Bool)

(assert (=> b!104612 (= e!68115 None!158)))

(assert (= (and d!28429 c!18132) b!104609))

(assert (= (and d!28429 (not c!18132)) b!104610))

(assert (= (and b!104610 c!18133) b!104611))

(assert (= (and b!104610 (not c!18133)) b!104612))

(declare-fun m!116407 () Bool)

(assert (=> b!104611 m!116407))

(assert (=> d!27973 d!28429))

(declare-fun d!28431 () Bool)

(assert (=> d!28431 (= (getValueByKey!154 lt!53098 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!159 (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!53450 () Unit!3170)

(assert (=> d!28431 (= lt!53450 (choose!650 lt!53098 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!68116 () Bool)

(assert (=> d!28431 e!68116))

(declare-fun res!52138 () Bool)

(assert (=> d!28431 (=> (not res!52138) (not e!68116))))

(assert (=> d!28431 (= res!52138 (isStrictlySorted!303 lt!53098))))

(assert (=> d!28431 (= (lemmaContainsTupThenGetReturnValue!72 lt!53098 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!53450)))

(declare-fun b!104613 () Bool)

(declare-fun res!52139 () Bool)

(assert (=> b!104613 (=> (not res!52139) (not e!68116))))

(assert (=> b!104613 (= res!52139 (containsKey!158 lt!53098 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!104614 () Bool)

(assert (=> b!104614 (= e!68116 (contains!828 lt!53098 (tuple2!2403 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!28431 res!52138) b!104613))

(assert (= (and b!104613 res!52139) b!104614))

(assert (=> d!28431 m!115163))

(declare-fun m!116409 () Bool)

(assert (=> d!28431 m!116409))

(declare-fun m!116411 () Bool)

(assert (=> d!28431 m!116411))

(declare-fun m!116413 () Bool)

(assert (=> b!104613 m!116413))

(declare-fun m!116415 () Bool)

(assert (=> b!104614 m!116415))

(assert (=> d!27973 d!28431))

(declare-fun e!68117 () Bool)

(declare-fun b!104615 () Bool)

(declare-fun lt!53451 () List!1637)

(assert (=> b!104615 (= e!68117 (contains!828 lt!53451 (tuple2!2403 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!104616 () Bool)

(declare-fun e!68121 () List!1637)

(declare-fun call!10995 () List!1637)

(assert (=> b!104616 (= e!68121 call!10995)))

(declare-fun bm!10990 () Bool)

(declare-fun call!10993 () List!1637)

(declare-fun call!10994 () List!1637)

(assert (=> bm!10990 (= call!10993 call!10994)))

(declare-fun b!104617 () Bool)

(assert (=> b!104617 (= e!68121 call!10995)))

(declare-fun c!18136 () Bool)

(declare-fun b!104618 () Bool)

(assert (=> b!104618 (= c!18136 (and ((_ is Cons!1633) (toList!805 call!10881)) (bvsgt (_1!1211 (h!2229 (toList!805 call!10881))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!68118 () List!1637)

(assert (=> b!104618 (= e!68118 e!68121)))

(declare-fun bm!10991 () Bool)

(assert (=> bm!10991 (= call!10995 call!10993)))

(declare-fun e!68120 () List!1637)

(declare-fun b!104619 () Bool)

(assert (=> b!104619 (= e!68120 (insertStrictlySorted!74 (t!5711 (toList!805 call!10881)) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!104620 () Bool)

(declare-fun res!52141 () Bool)

(assert (=> b!104620 (=> (not res!52141) (not e!68117))))

(assert (=> b!104620 (= res!52141 (containsKey!158 lt!53451 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!18137 () Bool)

(declare-fun bm!10992 () Bool)

(assert (=> bm!10992 (= call!10994 ($colon$colon!79 e!68120 (ite c!18137 (h!2229 (toList!805 call!10881)) (tuple2!2403 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!18135 () Bool)

(assert (=> bm!10992 (= c!18135 c!18137)))

(declare-fun d!28433 () Bool)

(assert (=> d!28433 e!68117))

(declare-fun res!52140 () Bool)

(assert (=> d!28433 (=> (not res!52140) (not e!68117))))

(assert (=> d!28433 (= res!52140 (isStrictlySorted!303 lt!53451))))

(declare-fun e!68119 () List!1637)

(assert (=> d!28433 (= lt!53451 e!68119)))

(assert (=> d!28433 (= c!18137 (and ((_ is Cons!1633) (toList!805 call!10881)) (bvslt (_1!1211 (h!2229 (toList!805 call!10881))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!28433 (isStrictlySorted!303 (toList!805 call!10881))))

(assert (=> d!28433 (= (insertStrictlySorted!74 (toList!805 call!10881) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!53451)))

(declare-fun b!104621 () Bool)

(assert (=> b!104621 (= e!68119 e!68118)))

(declare-fun c!18134 () Bool)

(assert (=> b!104621 (= c!18134 (and ((_ is Cons!1633) (toList!805 call!10881)) (= (_1!1211 (h!2229 (toList!805 call!10881))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!104622 () Bool)

(assert (=> b!104622 (= e!68118 call!10993)))

(declare-fun b!104623 () Bool)

(assert (=> b!104623 (= e!68119 call!10994)))

(declare-fun b!104624 () Bool)

(assert (=> b!104624 (= e!68120 (ite c!18134 (t!5711 (toList!805 call!10881)) (ite c!18136 (Cons!1633 (h!2229 (toList!805 call!10881)) (t!5711 (toList!805 call!10881))) Nil!1634)))))

(assert (= (and d!28433 c!18137) b!104623))

(assert (= (and d!28433 (not c!18137)) b!104621))

(assert (= (and b!104621 c!18134) b!104622))

(assert (= (and b!104621 (not c!18134)) b!104618))

(assert (= (and b!104618 c!18136) b!104617))

(assert (= (and b!104618 (not c!18136)) b!104616))

(assert (= (or b!104617 b!104616) bm!10991))

(assert (= (or b!104622 bm!10991) bm!10990))

(assert (= (or b!104623 bm!10990) bm!10992))

(assert (= (and bm!10992 c!18135) b!104619))

(assert (= (and bm!10992 (not c!18135)) b!104624))

(assert (= (and d!28433 res!52140) b!104620))

(assert (= (and b!104620 res!52141) b!104615))

(declare-fun m!116417 () Bool)

(assert (=> b!104620 m!116417))

(declare-fun m!116419 () Bool)

(assert (=> bm!10992 m!116419))

(declare-fun m!116421 () Bool)

(assert (=> d!28433 m!116421))

(declare-fun m!116423 () Bool)

(assert (=> d!28433 m!116423))

(declare-fun m!116425 () Bool)

(assert (=> b!104615 m!116425))

(declare-fun m!116427 () Bool)

(assert (=> b!104619 m!116427))

(assert (=> d!27973 d!28433))

(declare-fun d!28435 () Bool)

(assert (=> d!28435 (= (apply!97 lt!52976 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1336 (getValueByKey!154 (toList!805 lt!52976) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4306 () Bool)

(assert (= bs!4306 d!28435))

(assert (=> bs!4306 m!114523))

(assert (=> bs!4306 m!115625))

(assert (=> bs!4306 m!115625))

(declare-fun m!116429 () Bool)

(assert (=> bs!4306 m!116429))

(assert (=> b!103777 d!28435))

(declare-fun c!18138 () Bool)

(declare-fun d!28437 () Bool)

(assert (=> d!28437 (= c!18138 ((_ is ValueCellFull!993) (select (arr!2057 (ite c!17808 (_values!2544 newMap!16) lt!52657)) #b00000000000000000000000000000000)))))

(declare-fun e!68122 () V!3211)

(assert (=> d!28437 (= (get!1333 (select (arr!2057 (ite c!17808 (_values!2544 newMap!16) lt!52657)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!68122)))

(declare-fun b!104625 () Bool)

(assert (=> b!104625 (= e!68122 (get!1334 (select (arr!2057 (ite c!17808 (_values!2544 newMap!16) lt!52657)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104626 () Bool)

(assert (=> b!104626 (= e!68122 (get!1335 (select (arr!2057 (ite c!17808 (_values!2544 newMap!16) lt!52657)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28437 c!18138) b!104625))

(assert (= (and d!28437 (not c!18138)) b!104626))

(assert (=> b!104625 m!114801))

(assert (=> b!104625 m!114563))

(declare-fun m!116431 () Bool)

(assert (=> b!104625 m!116431))

(assert (=> b!104626 m!114801))

(assert (=> b!104626 m!114563))

(declare-fun m!116433 () Bool)

(assert (=> b!104626 m!116433))

(assert (=> b!103777 d!28437))

(declare-fun bm!10993 () Bool)

(declare-fun call!10996 () Bool)

(declare-fun lt!53469 () ListLongMap!1579)

(assert (=> bm!10993 (= call!10996 (contains!825 lt!53469 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10994 () Bool)

(declare-fun call!10998 () ListLongMap!1579)

(declare-fun call!11001 () ListLongMap!1579)

(assert (=> bm!10994 (= call!10998 call!11001)))

(declare-fun b!104627 () Bool)

(declare-fun e!68134 () Bool)

(declare-fun e!68135 () Bool)

(assert (=> b!104627 (= e!68134 e!68135)))

(declare-fun res!52146 () Bool)

(declare-fun call!10999 () Bool)

(assert (=> b!104627 (= res!52146 call!10999)))

(assert (=> b!104627 (=> (not res!52146) (not e!68135))))

(declare-fun bm!10995 () Bool)

(declare-fun call!10997 () ListLongMap!1579)

(declare-fun call!11002 () ListLongMap!1579)

(assert (=> bm!10995 (= call!10997 call!11002)))

(declare-fun b!104628 () Bool)

(declare-fun e!68124 () Bool)

(assert (=> b!104628 (= e!68124 (= (apply!97 lt!53469 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2438 (_2!1210 lt!52662))))))

(declare-fun b!104629 () Bool)

(declare-fun e!68128 () ListLongMap!1579)

(declare-fun e!68133 () ListLongMap!1579)

(assert (=> b!104629 (= e!68128 e!68133)))

(declare-fun c!18143 () Bool)

(assert (=> b!104629 (= c!18143 (and (not (= (bvand (extraKeys!2370 (_2!1210 lt!52662)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 (_2!1210 lt!52662)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104630 () Bool)

(declare-fun res!52145 () Bool)

(declare-fun e!68126 () Bool)

(assert (=> b!104630 (=> (not res!52145) (not e!68126))))

(declare-fun e!68131 () Bool)

(assert (=> b!104630 (= res!52145 e!68131)))

(declare-fun res!52148 () Bool)

(assert (=> b!104630 (=> res!52148 e!68131)))

(declare-fun e!68123 () Bool)

(assert (=> b!104630 (= res!52148 (not e!68123))))

(declare-fun res!52147 () Bool)

(assert (=> b!104630 (=> (not res!52147) (not e!68123))))

(assert (=> b!104630 (= res!52147 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 (_2!1210 lt!52662)))))))

(declare-fun b!104631 () Bool)

(declare-fun c!18144 () Bool)

(assert (=> b!104631 (= c!18144 (and (not (= (bvand (extraKeys!2370 (_2!1210 lt!52662)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 (_2!1210 lt!52662)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68130 () ListLongMap!1579)

(assert (=> b!104631 (= e!68133 e!68130)))

(declare-fun call!11000 () ListLongMap!1579)

(declare-fun c!18140 () Bool)

(declare-fun bm!10996 () Bool)

(assert (=> bm!10996 (= call!11001 (+!143 (ite c!18140 call!11000 (ite c!18143 call!11002 call!10997)) (ite (or c!18140 c!18143) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (_2!1210 lt!52662))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (_2!1210 lt!52662))))))))

(declare-fun b!104633 () Bool)

(declare-fun e!68132 () Bool)

(assert (=> b!104633 (= e!68132 (not call!10996))))

(declare-fun b!104634 () Bool)

(declare-fun e!68129 () Unit!3170)

(declare-fun Unit!3227 () Unit!3170)

(assert (=> b!104634 (= e!68129 Unit!3227)))

(declare-fun b!104635 () Bool)

(assert (=> b!104635 (= e!68123 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (_2!1210 lt!52662))) #b00000000000000000000000000000000)))))

(declare-fun b!104636 () Bool)

(assert (=> b!104636 (= e!68130 call!10998)))

(declare-fun b!104637 () Bool)

(declare-fun e!68127 () Bool)

(assert (=> b!104637 (= e!68127 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (_2!1210 lt!52662))) #b00000000000000000000000000000000)))))

(declare-fun b!104638 () Bool)

(declare-fun res!52144 () Bool)

(assert (=> b!104638 (=> (not res!52144) (not e!68126))))

(assert (=> b!104638 (= res!52144 e!68134)))

(declare-fun c!18142 () Bool)

(assert (=> b!104638 (= c!18142 (not (= (bvand (extraKeys!2370 (_2!1210 lt!52662)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!104639 () Bool)

(assert (=> b!104639 (= e!68133 call!10998)))

(declare-fun b!104640 () Bool)

(assert (=> b!104640 (= e!68130 call!10997)))

(declare-fun bm!10997 () Bool)

(assert (=> bm!10997 (= call!11002 call!11000)))

(declare-fun b!104641 () Bool)

(assert (=> b!104641 (= e!68135 (= (apply!97 lt!53469 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2438 (_2!1210 lt!52662))))))

(declare-fun b!104642 () Bool)

(assert (=> b!104642 (= e!68128 (+!143 call!11001 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (_2!1210 lt!52662)))))))

(declare-fun bm!10998 () Bool)

(assert (=> bm!10998 (= call!11000 (getCurrentListMapNoExtraKeys!110 (_keys!4263 (_2!1210 lt!52662)) (_values!2544 (_2!1210 lt!52662)) (mask!6697 (_2!1210 lt!52662)) (extraKeys!2370 (_2!1210 lt!52662)) (zeroValue!2438 (_2!1210 lt!52662)) (minValue!2438 (_2!1210 lt!52662)) #b00000000000000000000000000000000 (defaultEntry!2561 (_2!1210 lt!52662))))))

(declare-fun d!28439 () Bool)

(assert (=> d!28439 e!68126))

(declare-fun res!52142 () Bool)

(assert (=> d!28439 (=> (not res!52142) (not e!68126))))

(assert (=> d!28439 (= res!52142 (or (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 (_2!1210 lt!52662)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 (_2!1210 lt!52662)))))))))

(declare-fun lt!53454 () ListLongMap!1579)

(assert (=> d!28439 (= lt!53469 lt!53454)))

(declare-fun lt!53453 () Unit!3170)

(assert (=> d!28439 (= lt!53453 e!68129)))

(declare-fun c!18139 () Bool)

(assert (=> d!28439 (= c!18139 e!68127)))

(declare-fun res!52150 () Bool)

(assert (=> d!28439 (=> (not res!52150) (not e!68127))))

(assert (=> d!28439 (= res!52150 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 (_2!1210 lt!52662)))))))

(assert (=> d!28439 (= lt!53454 e!68128)))

(assert (=> d!28439 (= c!18140 (and (not (= (bvand (extraKeys!2370 (_2!1210 lt!52662)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 (_2!1210 lt!52662)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28439 (validMask!0 (mask!6697 (_2!1210 lt!52662)))))

(assert (=> d!28439 (= (getCurrentListMap!482 (_keys!4263 (_2!1210 lt!52662)) (_values!2544 (_2!1210 lt!52662)) (mask!6697 (_2!1210 lt!52662)) (extraKeys!2370 (_2!1210 lt!52662)) (zeroValue!2438 (_2!1210 lt!52662)) (minValue!2438 (_2!1210 lt!52662)) #b00000000000000000000000000000000 (defaultEntry!2561 (_2!1210 lt!52662))) lt!53469)))

(declare-fun b!104632 () Bool)

(declare-fun e!68125 () Bool)

(assert (=> b!104632 (= e!68131 e!68125)))

(declare-fun res!52149 () Bool)

(assert (=> b!104632 (=> (not res!52149) (not e!68125))))

(assert (=> b!104632 (= res!52149 (contains!825 lt!53469 (select (arr!2056 (_keys!4263 (_2!1210 lt!52662))) #b00000000000000000000000000000000)))))

(assert (=> b!104632 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 (_2!1210 lt!52662)))))))

(declare-fun b!104643 () Bool)

(assert (=> b!104643 (= e!68126 e!68132)))

(declare-fun c!18141 () Bool)

(assert (=> b!104643 (= c!18141 (not (= (bvand (extraKeys!2370 (_2!1210 lt!52662)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104644 () Bool)

(assert (=> b!104644 (= e!68125 (= (apply!97 lt!53469 (select (arr!2056 (_keys!4263 (_2!1210 lt!52662))) #b00000000000000000000000000000000)) (get!1333 (select (arr!2057 (_values!2544 (_2!1210 lt!52662))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 (_2!1210 lt!52662)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104644 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_values!2544 (_2!1210 lt!52662)))))))

(assert (=> b!104644 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 (_2!1210 lt!52662)))))))

(declare-fun bm!10999 () Bool)

(assert (=> bm!10999 (= call!10999 (contains!825 lt!53469 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104645 () Bool)

(declare-fun lt!53456 () Unit!3170)

(assert (=> b!104645 (= e!68129 lt!53456)))

(declare-fun lt!53462 () ListLongMap!1579)

(assert (=> b!104645 (= lt!53462 (getCurrentListMapNoExtraKeys!110 (_keys!4263 (_2!1210 lt!52662)) (_values!2544 (_2!1210 lt!52662)) (mask!6697 (_2!1210 lt!52662)) (extraKeys!2370 (_2!1210 lt!52662)) (zeroValue!2438 (_2!1210 lt!52662)) (minValue!2438 (_2!1210 lt!52662)) #b00000000000000000000000000000000 (defaultEntry!2561 (_2!1210 lt!52662))))))

(declare-fun lt!53457 () (_ BitVec 64))

(assert (=> b!104645 (= lt!53457 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53468 () (_ BitVec 64))

(assert (=> b!104645 (= lt!53468 (select (arr!2056 (_keys!4263 (_2!1210 lt!52662))) #b00000000000000000000000000000000))))

(declare-fun lt!53472 () Unit!3170)

(assert (=> b!104645 (= lt!53472 (addStillContains!73 lt!53462 lt!53457 (zeroValue!2438 (_2!1210 lt!52662)) lt!53468))))

(assert (=> b!104645 (contains!825 (+!143 lt!53462 (tuple2!2403 lt!53457 (zeroValue!2438 (_2!1210 lt!52662)))) lt!53468)))

(declare-fun lt!53465 () Unit!3170)

(assert (=> b!104645 (= lt!53465 lt!53472)))

(declare-fun lt!53467 () ListLongMap!1579)

(assert (=> b!104645 (= lt!53467 (getCurrentListMapNoExtraKeys!110 (_keys!4263 (_2!1210 lt!52662)) (_values!2544 (_2!1210 lt!52662)) (mask!6697 (_2!1210 lt!52662)) (extraKeys!2370 (_2!1210 lt!52662)) (zeroValue!2438 (_2!1210 lt!52662)) (minValue!2438 (_2!1210 lt!52662)) #b00000000000000000000000000000000 (defaultEntry!2561 (_2!1210 lt!52662))))))

(declare-fun lt!53466 () (_ BitVec 64))

(assert (=> b!104645 (= lt!53466 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53452 () (_ BitVec 64))

(assert (=> b!104645 (= lt!53452 (select (arr!2056 (_keys!4263 (_2!1210 lt!52662))) #b00000000000000000000000000000000))))

(declare-fun lt!53464 () Unit!3170)

(assert (=> b!104645 (= lt!53464 (addApplyDifferent!73 lt!53467 lt!53466 (minValue!2438 (_2!1210 lt!52662)) lt!53452))))

(assert (=> b!104645 (= (apply!97 (+!143 lt!53467 (tuple2!2403 lt!53466 (minValue!2438 (_2!1210 lt!52662)))) lt!53452) (apply!97 lt!53467 lt!53452))))

(declare-fun lt!53463 () Unit!3170)

(assert (=> b!104645 (= lt!53463 lt!53464)))

(declare-fun lt!53470 () ListLongMap!1579)

(assert (=> b!104645 (= lt!53470 (getCurrentListMapNoExtraKeys!110 (_keys!4263 (_2!1210 lt!52662)) (_values!2544 (_2!1210 lt!52662)) (mask!6697 (_2!1210 lt!52662)) (extraKeys!2370 (_2!1210 lt!52662)) (zeroValue!2438 (_2!1210 lt!52662)) (minValue!2438 (_2!1210 lt!52662)) #b00000000000000000000000000000000 (defaultEntry!2561 (_2!1210 lt!52662))))))

(declare-fun lt!53471 () (_ BitVec 64))

(assert (=> b!104645 (= lt!53471 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53473 () (_ BitVec 64))

(assert (=> b!104645 (= lt!53473 (select (arr!2056 (_keys!4263 (_2!1210 lt!52662))) #b00000000000000000000000000000000))))

(declare-fun lt!53461 () Unit!3170)

(assert (=> b!104645 (= lt!53461 (addApplyDifferent!73 lt!53470 lt!53471 (zeroValue!2438 (_2!1210 lt!52662)) lt!53473))))

(assert (=> b!104645 (= (apply!97 (+!143 lt!53470 (tuple2!2403 lt!53471 (zeroValue!2438 (_2!1210 lt!52662)))) lt!53473) (apply!97 lt!53470 lt!53473))))

(declare-fun lt!53459 () Unit!3170)

(assert (=> b!104645 (= lt!53459 lt!53461)))

(declare-fun lt!53458 () ListLongMap!1579)

(assert (=> b!104645 (= lt!53458 (getCurrentListMapNoExtraKeys!110 (_keys!4263 (_2!1210 lt!52662)) (_values!2544 (_2!1210 lt!52662)) (mask!6697 (_2!1210 lt!52662)) (extraKeys!2370 (_2!1210 lt!52662)) (zeroValue!2438 (_2!1210 lt!52662)) (minValue!2438 (_2!1210 lt!52662)) #b00000000000000000000000000000000 (defaultEntry!2561 (_2!1210 lt!52662))))))

(declare-fun lt!53460 () (_ BitVec 64))

(assert (=> b!104645 (= lt!53460 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53455 () (_ BitVec 64))

(assert (=> b!104645 (= lt!53455 (select (arr!2056 (_keys!4263 (_2!1210 lt!52662))) #b00000000000000000000000000000000))))

(assert (=> b!104645 (= lt!53456 (addApplyDifferent!73 lt!53458 lt!53460 (minValue!2438 (_2!1210 lt!52662)) lt!53455))))

(assert (=> b!104645 (= (apply!97 (+!143 lt!53458 (tuple2!2403 lt!53460 (minValue!2438 (_2!1210 lt!52662)))) lt!53455) (apply!97 lt!53458 lt!53455))))

(declare-fun b!104646 () Bool)

(assert (=> b!104646 (= e!68132 e!68124)))

(declare-fun res!52143 () Bool)

(assert (=> b!104646 (= res!52143 call!10996)))

(assert (=> b!104646 (=> (not res!52143) (not e!68124))))

(declare-fun b!104647 () Bool)

(assert (=> b!104647 (= e!68134 (not call!10999))))

(assert (= (and d!28439 c!18140) b!104642))

(assert (= (and d!28439 (not c!18140)) b!104629))

(assert (= (and b!104629 c!18143) b!104639))

(assert (= (and b!104629 (not c!18143)) b!104631))

(assert (= (and b!104631 c!18144) b!104636))

(assert (= (and b!104631 (not c!18144)) b!104640))

(assert (= (or b!104636 b!104640) bm!10995))

(assert (= (or b!104639 bm!10995) bm!10997))

(assert (= (or b!104639 b!104636) bm!10994))

(assert (= (or b!104642 bm!10997) bm!10998))

(assert (= (or b!104642 bm!10994) bm!10996))

(assert (= (and d!28439 res!52150) b!104637))

(assert (= (and d!28439 c!18139) b!104645))

(assert (= (and d!28439 (not c!18139)) b!104634))

(assert (= (and d!28439 res!52142) b!104630))

(assert (= (and b!104630 res!52147) b!104635))

(assert (= (and b!104630 (not res!52148)) b!104632))

(assert (= (and b!104632 res!52149) b!104644))

(assert (= (and b!104630 res!52145) b!104638))

(assert (= (and b!104638 c!18142) b!104627))

(assert (= (and b!104638 (not c!18142)) b!104647))

(assert (= (and b!104627 res!52146) b!104641))

(assert (= (or b!104627 b!104647) bm!10999))

(assert (= (and b!104638 res!52144) b!104643))

(assert (= (and b!104643 c!18141) b!104646))

(assert (= (and b!104643 (not c!18141)) b!104633))

(assert (= (and b!104646 res!52143) b!104628))

(assert (= (or b!104646 b!104633) bm!10993))

(declare-fun b_lambda!4693 () Bool)

(assert (=> (not b_lambda!4693) (not b!104644)))

(declare-fun tb!2053 () Bool)

(declare-fun t!5725 () Bool)

(assert (=> (and b!103261 (= (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) (defaultEntry!2561 (_2!1210 lt!52662))) t!5725) tb!2053))

(declare-fun result!3451 () Bool)

(assert (=> tb!2053 (= result!3451 tp_is_empty!2673)))

(assert (=> b!104644 t!5725))

(declare-fun b_and!6485 () Bool)

(assert (= b_and!6481 (and (=> t!5725 result!3451) b_and!6485)))

(declare-fun t!5727 () Bool)

(declare-fun tb!2055 () Bool)

(assert (=> (and b!103249 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (_2!1210 lt!52662))) t!5727) tb!2055))

(declare-fun result!3453 () Bool)

(assert (= result!3453 result!3451))

(assert (=> b!104644 t!5727))

(declare-fun b_and!6487 () Bool)

(assert (= b_and!6483 (and (=> t!5727 result!3453) b_and!6487)))

(declare-fun m!116435 () Bool)

(assert (=> b!104628 m!116435))

(declare-fun m!116437 () Bool)

(assert (=> d!28439 m!116437))

(declare-fun m!116439 () Bool)

(assert (=> bm!10999 m!116439))

(declare-fun m!116441 () Bool)

(assert (=> bm!10996 m!116441))

(assert (=> b!104637 m!115431))

(assert (=> b!104637 m!115431))

(assert (=> b!104637 m!115433))

(declare-fun m!116443 () Bool)

(assert (=> b!104645 m!116443))

(declare-fun m!116445 () Bool)

(assert (=> b!104645 m!116445))

(declare-fun m!116447 () Bool)

(assert (=> b!104645 m!116447))

(declare-fun m!116449 () Bool)

(assert (=> b!104645 m!116449))

(declare-fun m!116451 () Bool)

(assert (=> b!104645 m!116451))

(declare-fun m!116453 () Bool)

(assert (=> b!104645 m!116453))

(declare-fun m!116455 () Bool)

(assert (=> b!104645 m!116455))

(declare-fun m!116457 () Bool)

(assert (=> b!104645 m!116457))

(assert (=> b!104645 m!116455))

(declare-fun m!116459 () Bool)

(assert (=> b!104645 m!116459))

(declare-fun m!116461 () Bool)

(assert (=> b!104645 m!116461))

(declare-fun m!116463 () Bool)

(assert (=> b!104645 m!116463))

(assert (=> b!104645 m!115431))

(assert (=> b!104645 m!116451))

(declare-fun m!116465 () Bool)

(assert (=> b!104645 m!116465))

(declare-fun m!116467 () Bool)

(assert (=> b!104645 m!116467))

(declare-fun m!116469 () Bool)

(assert (=> b!104645 m!116469))

(declare-fun m!116471 () Bool)

(assert (=> b!104645 m!116471))

(assert (=> b!104645 m!116443))

(declare-fun m!116473 () Bool)

(assert (=> b!104645 m!116473))

(assert (=> b!104645 m!116465))

(assert (=> b!104644 m!115431))

(assert (=> b!104644 m!115431))

(declare-fun m!116475 () Bool)

(assert (=> b!104644 m!116475))

(declare-fun m!116477 () Bool)

(assert (=> b!104644 m!116477))

(declare-fun m!116479 () Bool)

(assert (=> b!104644 m!116479))

(declare-fun m!116481 () Bool)

(assert (=> b!104644 m!116481))

(assert (=> b!104644 m!116479))

(assert (=> b!104644 m!116477))

(declare-fun m!116483 () Bool)

(assert (=> bm!10993 m!116483))

(assert (=> bm!10998 m!116449))

(assert (=> b!104632 m!115431))

(assert (=> b!104632 m!115431))

(declare-fun m!116485 () Bool)

(assert (=> b!104632 m!116485))

(declare-fun m!116487 () Bool)

(assert (=> b!104642 m!116487))

(declare-fun m!116489 () Bool)

(assert (=> b!104641 m!116489))

(assert (=> b!104635 m!115431))

(assert (=> b!104635 m!115431))

(assert (=> b!104635 m!115433))

(assert (=> d!27891 d!28439))

(declare-fun d!28441 () Bool)

(declare-fun e!68137 () Bool)

(assert (=> d!28441 e!68137))

(declare-fun res!52151 () Bool)

(assert (=> d!28441 (=> res!52151 e!68137)))

(declare-fun lt!53477 () Bool)

(assert (=> d!28441 (= res!52151 (not lt!53477))))

(declare-fun lt!53475 () Bool)

(assert (=> d!28441 (= lt!53477 lt!53475)))

(declare-fun lt!53474 () Unit!3170)

(declare-fun e!68136 () Unit!3170)

(assert (=> d!28441 (= lt!53474 e!68136)))

(declare-fun c!18145 () Bool)

(assert (=> d!28441 (= c!18145 lt!53475)))

(assert (=> d!28441 (= lt!53475 (containsKey!158 (toList!805 lt!52957) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28441 (= (contains!825 lt!52957 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53477)))

(declare-fun b!104648 () Bool)

(declare-fun lt!53476 () Unit!3170)

(assert (=> b!104648 (= e!68136 lt!53476)))

(assert (=> b!104648 (= lt!53476 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52957) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104648 (isDefined!108 (getValueByKey!154 (toList!805 lt!52957) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104649 () Bool)

(declare-fun Unit!3228 () Unit!3170)

(assert (=> b!104649 (= e!68136 Unit!3228)))

(declare-fun b!104650 () Bool)

(assert (=> b!104650 (= e!68137 (isDefined!108 (getValueByKey!154 (toList!805 lt!52957) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28441 c!18145) b!104648))

(assert (= (and d!28441 (not c!18145)) b!104649))

(assert (= (and d!28441 (not res!52151)) b!104650))

(declare-fun m!116491 () Bool)

(assert (=> d!28441 m!116491))

(declare-fun m!116493 () Bool)

(assert (=> b!104648 m!116493))

(declare-fun m!116495 () Bool)

(assert (=> b!104648 m!116495))

(assert (=> b!104648 m!116495))

(declare-fun m!116497 () Bool)

(assert (=> b!104648 m!116497))

(assert (=> b!104650 m!116495))

(assert (=> b!104650 m!116495))

(assert (=> b!104650 m!116497))

(assert (=> b!103749 d!28441))

(declare-fun d!28443 () Bool)

(declare-fun e!68139 () Bool)

(assert (=> d!28443 e!68139))

(declare-fun res!52152 () Bool)

(assert (=> d!28443 (=> res!52152 e!68139)))

(declare-fun lt!53481 () Bool)

(assert (=> d!28443 (= res!52152 (not lt!53481))))

(declare-fun lt!53479 () Bool)

(assert (=> d!28443 (= lt!53481 lt!53479)))

(declare-fun lt!53478 () Unit!3170)

(declare-fun e!68138 () Unit!3170)

(assert (=> d!28443 (= lt!53478 e!68138)))

(declare-fun c!18146 () Bool)

(assert (=> d!28443 (= c!18146 lt!53479)))

(assert (=> d!28443 (= lt!53479 (containsKey!158 (toList!805 lt!52823) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!28443 (= (contains!825 lt!52823 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) lt!53481)))

(declare-fun b!104651 () Bool)

(declare-fun lt!53480 () Unit!3170)

(assert (=> b!104651 (= e!68138 lt!53480)))

(assert (=> b!104651 (= lt!53480 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52823) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104651 (isDefined!108 (getValueByKey!154 (toList!805 lt!52823) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104652 () Bool)

(declare-fun Unit!3229 () Unit!3170)

(assert (=> b!104652 (= e!68138 Unit!3229)))

(declare-fun b!104653 () Bool)

(assert (=> b!104653 (= e!68139 (isDefined!108 (getValueByKey!154 (toList!805 lt!52823) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!28443 c!18146) b!104651))

(assert (= (and d!28443 (not c!18146)) b!104652))

(assert (= (and d!28443 (not res!52152)) b!104653))

(assert (=> d!28443 m!114523))

(declare-fun m!116499 () Bool)

(assert (=> d!28443 m!116499))

(assert (=> b!104651 m!114523))

(declare-fun m!116501 () Bool)

(assert (=> b!104651 m!116501))

(assert (=> b!104651 m!114523))

(declare-fun m!116503 () Bool)

(assert (=> b!104651 m!116503))

(assert (=> b!104651 m!116503))

(declare-fun m!116505 () Bool)

(assert (=> b!104651 m!116505))

(assert (=> b!104653 m!114523))

(assert (=> b!104653 m!116503))

(assert (=> b!104653 m!116503))

(assert (=> b!104653 m!116505))

(assert (=> b!103631 d!28443))

(declare-fun d!28445 () Bool)

(declare-fun lt!53482 () Bool)

(assert (=> d!28445 (= lt!53482 (select (content!107 lt!52798) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))))))

(declare-fun e!68141 () Bool)

(assert (=> d!28445 (= lt!53482 e!68141)))

(declare-fun res!52153 () Bool)

(assert (=> d!28445 (=> (not res!52153) (not e!68141))))

(assert (=> d!28445 (= res!52153 ((_ is Cons!1633) lt!52798))))

(assert (=> d!28445 (= (contains!828 lt!52798 (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))) lt!53482)))

(declare-fun b!104654 () Bool)

(declare-fun e!68140 () Bool)

(assert (=> b!104654 (= e!68141 e!68140)))

(declare-fun res!52154 () Bool)

(assert (=> b!104654 (=> res!52154 e!68140)))

(assert (=> b!104654 (= res!52154 (= (h!2229 lt!52798) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))))))

(declare-fun b!104655 () Bool)

(assert (=> b!104655 (= e!68140 (contains!828 (t!5711 lt!52798) (tuple2!2403 (_1!1211 lt!52551) (_2!1211 lt!52551))))))

(assert (= (and d!28445 res!52153) b!104654))

(assert (= (and b!104654 (not res!52154)) b!104655))

(declare-fun m!116507 () Bool)

(assert (=> d!28445 m!116507))

(declare-fun m!116509 () Bool)

(assert (=> d!28445 m!116509))

(declare-fun m!116511 () Bool)

(assert (=> b!104655 m!116511))

(assert (=> b!103826 d!28445))

(declare-fun d!28447 () Bool)

(assert (=> d!28447 (isDefined!108 (getValueByKey!154 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52752))))

(declare-fun lt!53483 () Unit!3170)

(assert (=> d!28447 (= lt!53483 (choose!656 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52752))))

(declare-fun e!68142 () Bool)

(assert (=> d!28447 e!68142))

(declare-fun res!52155 () Bool)

(assert (=> d!28447 (=> (not res!52155) (not e!68142))))

(assert (=> d!28447 (= res!52155 (isStrictlySorted!303 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28447 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52752) lt!53483)))

(declare-fun b!104656 () Bool)

(assert (=> b!104656 (= e!68142 (containsKey!158 (toList!805 (+!143 lt!52746 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52752))))

(assert (= (and d!28447 res!52155) b!104656))

(assert (=> d!28447 m!114903))

(assert (=> d!28447 m!114903))

(assert (=> d!28447 m!114905))

(declare-fun m!116513 () Bool)

(assert (=> d!28447 m!116513))

(declare-fun m!116515 () Bool)

(assert (=> d!28447 m!116515))

(assert (=> b!104656 m!114899))

(assert (=> b!103805 d!28447))

(assert (=> b!103805 d!28209))

(assert (=> b!103805 d!28211))

(declare-fun d!28449 () Bool)

(declare-fun e!68144 () Bool)

(assert (=> d!28449 e!68144))

(declare-fun res!52156 () Bool)

(assert (=> d!28449 (=> res!52156 e!68144)))

(declare-fun lt!53487 () Bool)

(assert (=> d!28449 (= res!52156 (not lt!53487))))

(declare-fun lt!53485 () Bool)

(assert (=> d!28449 (= lt!53487 lt!53485)))

(declare-fun lt!53484 () Unit!3170)

(declare-fun e!68143 () Unit!3170)

(assert (=> d!28449 (= lt!53484 e!68143)))

(declare-fun c!18147 () Bool)

(assert (=> d!28449 (= c!18147 lt!53485)))

(assert (=> d!28449 (= lt!53485 (containsKey!158 (toList!805 lt!52944) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!28449 (= (contains!825 lt!52944 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) lt!53487)))

(declare-fun b!104657 () Bool)

(declare-fun lt!53486 () Unit!3170)

(assert (=> b!104657 (= e!68143 lt!53486)))

(assert (=> b!104657 (= lt!53486 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52944) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> b!104657 (isDefined!108 (getValueByKey!154 (toList!805 lt!52944) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun b!104658 () Bool)

(declare-fun Unit!3230 () Unit!3170)

(assert (=> b!104658 (= e!68143 Unit!3230)))

(declare-fun b!104659 () Bool)

(assert (=> b!104659 (= e!68144 (isDefined!108 (getValueByKey!154 (toList!805 lt!52944) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (= (and d!28449 c!18147) b!104657))

(assert (= (and d!28449 (not c!18147)) b!104658))

(assert (= (and d!28449 (not res!52156)) b!104659))

(declare-fun m!116517 () Bool)

(assert (=> d!28449 m!116517))

(declare-fun m!116519 () Bool)

(assert (=> b!104657 m!116519))

(assert (=> b!104657 m!114717))

(assert (=> b!104657 m!114717))

(declare-fun m!116521 () Bool)

(assert (=> b!104657 m!116521))

(assert (=> b!104659 m!114717))

(assert (=> b!104659 m!114717))

(assert (=> b!104659 m!116521))

(assert (=> d!27841 d!28449))

(declare-fun b!104661 () Bool)

(declare-fun e!68145 () Option!160)

(declare-fun e!68146 () Option!160)

(assert (=> b!104661 (= e!68145 e!68146)))

(declare-fun c!18149 () Bool)

(assert (=> b!104661 (= c!18149 (and ((_ is Cons!1633) lt!52947) (not (= (_1!1211 (h!2229 lt!52947)) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))))

(declare-fun b!104660 () Bool)

(assert (=> b!104660 (= e!68145 (Some!159 (_2!1211 (h!2229 lt!52947))))))

(declare-fun b!104662 () Bool)

(assert (=> b!104662 (= e!68146 (getValueByKey!154 (t!5711 lt!52947) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun d!28451 () Bool)

(declare-fun c!18148 () Bool)

(assert (=> d!28451 (= c!18148 (and ((_ is Cons!1633) lt!52947) (= (_1!1211 (h!2229 lt!52947)) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (=> d!28451 (= (getValueByKey!154 lt!52947 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) e!68145)))

(declare-fun b!104663 () Bool)

(assert (=> b!104663 (= e!68146 None!158)))

(assert (= (and d!28451 c!18148) b!104660))

(assert (= (and d!28451 (not c!18148)) b!104661))

(assert (= (and b!104661 c!18149) b!104662))

(assert (= (and b!104661 (not c!18149)) b!104663))

(declare-fun m!116523 () Bool)

(assert (=> b!104662 m!116523))

(assert (=> d!27841 d!28451))

(declare-fun d!28453 () Bool)

(assert (=> d!28453 (= (getValueByKey!154 lt!52947 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (Some!159 (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun lt!53488 () Unit!3170)

(assert (=> d!28453 (= lt!53488 (choose!650 lt!52947 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun e!68147 () Bool)

(assert (=> d!28453 e!68147))

(declare-fun res!52157 () Bool)

(assert (=> d!28453 (=> (not res!52157) (not e!68147))))

(assert (=> d!28453 (= res!52157 (isStrictlySorted!303 lt!52947))))

(assert (=> d!28453 (= (lemmaContainsTupThenGetReturnValue!72 lt!52947 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) lt!53488)))

(declare-fun b!104664 () Bool)

(declare-fun res!52158 () Bool)

(assert (=> b!104664 (=> (not res!52158) (not e!68147))))

(assert (=> b!104664 (= res!52158 (containsKey!158 lt!52947 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun b!104665 () Bool)

(assert (=> b!104665 (= e!68147 (contains!828 lt!52947 (tuple2!2403 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (= (and d!28453 res!52157) b!104664))

(assert (= (and b!104664 res!52158) b!104665))

(assert (=> d!28453 m!114711))

(declare-fun m!116525 () Bool)

(assert (=> d!28453 m!116525))

(declare-fun m!116527 () Bool)

(assert (=> d!28453 m!116527))

(declare-fun m!116529 () Bool)

(assert (=> b!104664 m!116529))

(declare-fun m!116531 () Bool)

(assert (=> b!104665 m!116531))

(assert (=> d!27841 d!28453))

(declare-fun b!104666 () Bool)

(declare-fun e!68148 () Bool)

(declare-fun lt!53489 () List!1637)

(assert (=> b!104666 (= e!68148 (contains!828 lt!53489 (tuple2!2403 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun b!104667 () Bool)

(declare-fun e!68152 () List!1637)

(declare-fun call!11005 () List!1637)

(assert (=> b!104667 (= e!68152 call!11005)))

(declare-fun bm!11000 () Bool)

(declare-fun call!11003 () List!1637)

(declare-fun call!11004 () List!1637)

(assert (=> bm!11000 (= call!11003 call!11004)))

(declare-fun b!104668 () Bool)

(assert (=> b!104668 (= e!68152 call!11005)))

(declare-fun c!18152 () Bool)

(declare-fun b!104669 () Bool)

(assert (=> b!104669 (= c!18152 (and ((_ is Cons!1633) (toList!805 lt!52542)) (bvsgt (_1!1211 (h!2229 (toList!805 lt!52542))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun e!68149 () List!1637)

(assert (=> b!104669 (= e!68149 e!68152)))

(declare-fun bm!11001 () Bool)

(assert (=> bm!11001 (= call!11005 call!11003)))

(declare-fun b!104670 () Bool)

(declare-fun e!68151 () List!1637)

(assert (=> b!104670 (= e!68151 (insertStrictlySorted!74 (t!5711 (toList!805 lt!52542)) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun b!104671 () Bool)

(declare-fun res!52160 () Bool)

(assert (=> b!104671 (=> (not res!52160) (not e!68148))))

(assert (=> b!104671 (= res!52160 (containsKey!158 lt!53489 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun bm!11002 () Bool)

(declare-fun c!18153 () Bool)

(assert (=> bm!11002 (= call!11004 ($colon$colon!79 e!68151 (ite c!18153 (h!2229 (toList!805 lt!52542)) (tuple2!2403 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))))

(declare-fun c!18151 () Bool)

(assert (=> bm!11002 (= c!18151 c!18153)))

(declare-fun d!28455 () Bool)

(assert (=> d!28455 e!68148))

(declare-fun res!52159 () Bool)

(assert (=> d!28455 (=> (not res!52159) (not e!68148))))

(assert (=> d!28455 (= res!52159 (isStrictlySorted!303 lt!53489))))

(declare-fun e!68150 () List!1637)

(assert (=> d!28455 (= lt!53489 e!68150)))

(assert (=> d!28455 (= c!18153 (and ((_ is Cons!1633) (toList!805 lt!52542)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52542))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (=> d!28455 (isStrictlySorted!303 (toList!805 lt!52542))))

(assert (=> d!28455 (= (insertStrictlySorted!74 (toList!805 lt!52542) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) lt!53489)))

(declare-fun b!104672 () Bool)

(assert (=> b!104672 (= e!68150 e!68149)))

(declare-fun c!18150 () Bool)

(assert (=> b!104672 (= c!18150 (and ((_ is Cons!1633) (toList!805 lt!52542)) (= (_1!1211 (h!2229 (toList!805 lt!52542))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun b!104673 () Bool)

(assert (=> b!104673 (= e!68149 call!11003)))

(declare-fun b!104674 () Bool)

(assert (=> b!104674 (= e!68150 call!11004)))

(declare-fun b!104675 () Bool)

(assert (=> b!104675 (= e!68151 (ite c!18150 (t!5711 (toList!805 lt!52542)) (ite c!18152 (Cons!1633 (h!2229 (toList!805 lt!52542)) (t!5711 (toList!805 lt!52542))) Nil!1634)))))

(assert (= (and d!28455 c!18153) b!104674))

(assert (= (and d!28455 (not c!18153)) b!104672))

(assert (= (and b!104672 c!18150) b!104673))

(assert (= (and b!104672 (not c!18150)) b!104669))

(assert (= (and b!104669 c!18152) b!104668))

(assert (= (and b!104669 (not c!18152)) b!104667))

(assert (= (or b!104668 b!104667) bm!11001))

(assert (= (or b!104673 bm!11001) bm!11000))

(assert (= (or b!104674 bm!11000) bm!11002))

(assert (= (and bm!11002 c!18151) b!104670))

(assert (= (and bm!11002 (not c!18151)) b!104675))

(assert (= (and d!28455 res!52159) b!104671))

(assert (= (and b!104671 res!52160) b!104666))

(declare-fun m!116533 () Bool)

(assert (=> b!104671 m!116533))

(declare-fun m!116535 () Bool)

(assert (=> bm!11002 m!116535))

(declare-fun m!116537 () Bool)

(assert (=> d!28455 m!116537))

(assert (=> d!28455 m!114951))

(declare-fun m!116539 () Bool)

(assert (=> b!104666 m!116539))

(declare-fun m!116541 () Bool)

(assert (=> b!104670 m!116541))

(assert (=> d!27841 d!28455))

(declare-fun d!28457 () Bool)

(declare-fun res!52161 () Bool)

(declare-fun e!68153 () Bool)

(assert (=> d!28457 (=> res!52161 e!68153)))

(assert (=> d!28457 (= res!52161 (and ((_ is Cons!1633) lt!52802) (= (_1!1211 (h!2229 lt!52802)) (_1!1211 lt!52551))))))

(assert (=> d!28457 (= (containsKey!158 lt!52802 (_1!1211 lt!52551)) e!68153)))

(declare-fun b!104676 () Bool)

(declare-fun e!68154 () Bool)

(assert (=> b!104676 (= e!68153 e!68154)))

(declare-fun res!52162 () Bool)

(assert (=> b!104676 (=> (not res!52162) (not e!68154))))

(assert (=> b!104676 (= res!52162 (and (or (not ((_ is Cons!1633) lt!52802)) (bvsle (_1!1211 (h!2229 lt!52802)) (_1!1211 lt!52551))) ((_ is Cons!1633) lt!52802) (bvslt (_1!1211 (h!2229 lt!52802)) (_1!1211 lt!52551))))))

(declare-fun b!104677 () Bool)

(assert (=> b!104677 (= e!68154 (containsKey!158 (t!5711 lt!52802) (_1!1211 lt!52551)))))

(assert (= (and d!28457 (not res!52161)) b!104676))

(assert (= (and b!104676 res!52162) b!104677))

(declare-fun m!116543 () Bool)

(assert (=> b!104677 m!116543))

(assert (=> b!103864 d!28457))

(declare-fun d!28459 () Bool)

(declare-fun e!68155 () Bool)

(assert (=> d!28459 e!68155))

(declare-fun res!52164 () Bool)

(assert (=> d!28459 (=> (not res!52164) (not e!68155))))

(declare-fun lt!53490 () ListLongMap!1579)

(assert (=> d!28459 (= res!52164 (contains!825 lt!53490 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun lt!53493 () List!1637)

(assert (=> d!28459 (= lt!53490 (ListLongMap!1580 lt!53493))))

(declare-fun lt!53492 () Unit!3170)

(declare-fun lt!53491 () Unit!3170)

(assert (=> d!28459 (= lt!53492 lt!53491)))

(assert (=> d!28459 (= (getValueByKey!154 lt!53493 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (Some!159 (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!28459 (= lt!53491 (lemmaContainsTupThenGetReturnValue!72 lt!53493 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!28459 (= lt!53493 (insertStrictlySorted!74 (toList!805 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!28459 (= (+!143 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) lt!53490)))

(declare-fun b!104678 () Bool)

(declare-fun res!52163 () Bool)

(assert (=> b!104678 (=> (not res!52163) (not e!68155))))

(assert (=> b!104678 (= res!52163 (= (getValueByKey!154 (toList!805 lt!53490) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (Some!159 (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun b!104679 () Bool)

(assert (=> b!104679 (= e!68155 (contains!828 (toList!805 lt!53490) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))

(assert (= (and d!28459 res!52164) b!104678))

(assert (= (and b!104678 res!52163) b!104679))

(declare-fun m!116545 () Bool)

(assert (=> d!28459 m!116545))

(declare-fun m!116547 () Bool)

(assert (=> d!28459 m!116547))

(declare-fun m!116549 () Bool)

(assert (=> d!28459 m!116549))

(declare-fun m!116551 () Bool)

(assert (=> d!28459 m!116551))

(declare-fun m!116553 () Bool)

(assert (=> b!104678 m!116553))

(declare-fun m!116555 () Bool)

(assert (=> b!104679 m!116555))

(assert (=> b!103991 d!28459))

(assert (=> b!103991 d!27811))

(declare-fun bm!11003 () Bool)

(declare-fun call!11006 () Bool)

(declare-fun lt!53511 () ListLongMap!1579)

(assert (=> bm!11003 (= call!11006 (contains!825 lt!53511 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11004 () Bool)

(declare-fun call!11008 () ListLongMap!1579)

(declare-fun call!11011 () ListLongMap!1579)

(assert (=> bm!11004 (= call!11008 call!11011)))

(declare-fun b!104680 () Bool)

(declare-fun e!68167 () Bool)

(declare-fun e!68168 () Bool)

(assert (=> b!104680 (= e!68167 e!68168)))

(declare-fun res!52169 () Bool)

(declare-fun call!11009 () Bool)

(assert (=> b!104680 (= res!52169 call!11009)))

(assert (=> b!104680 (=> (not res!52169) (not e!68168))))

(declare-fun bm!11005 () Bool)

(declare-fun call!11007 () ListLongMap!1579)

(declare-fun call!11012 () ListLongMap!1579)

(assert (=> bm!11005 (= call!11007 call!11012)))

(declare-fun b!104681 () Bool)

(declare-fun e!68157 () Bool)

(assert (=> b!104681 (= e!68157 (= (apply!97 lt!53511 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2438 newMap!16)))))

(declare-fun b!104682 () Bool)

(declare-fun e!68161 () ListLongMap!1579)

(declare-fun e!68166 () ListLongMap!1579)

(assert (=> b!104682 (= e!68161 e!68166)))

(declare-fun c!18158 () Bool)

(assert (=> b!104682 (= c!18158 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104683 () Bool)

(declare-fun res!52168 () Bool)

(declare-fun e!68159 () Bool)

(assert (=> b!104683 (=> (not res!52168) (not e!68159))))

(declare-fun e!68164 () Bool)

(assert (=> b!104683 (= res!52168 e!68164)))

(declare-fun res!52171 () Bool)

(assert (=> b!104683 (=> res!52171 e!68164)))

(declare-fun e!68156 () Bool)

(assert (=> b!104683 (= res!52171 (not e!68156))))

(declare-fun res!52170 () Bool)

(assert (=> b!104683 (=> (not res!52170) (not e!68156))))

(assert (=> b!104683 (= res!52170 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104684 () Bool)

(declare-fun c!18159 () Bool)

(assert (=> b!104684 (= c!18159 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68163 () ListLongMap!1579)

(assert (=> b!104684 (= e!68166 e!68163)))

(declare-fun bm!11006 () Bool)

(declare-fun call!11010 () ListLongMap!1579)

(declare-fun c!18155 () Bool)

(assert (=> bm!11006 (= call!11011 (+!143 (ite c!18155 call!11010 (ite c!18158 call!11012 call!11007)) (ite (or c!18155 c!18158) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(declare-fun b!104686 () Bool)

(declare-fun e!68165 () Bool)

(assert (=> b!104686 (= e!68165 (not call!11006))))

(declare-fun b!104687 () Bool)

(declare-fun e!68162 () Unit!3170)

(declare-fun Unit!3231 () Unit!3170)

(assert (=> b!104687 (= e!68162 Unit!3231)))

(declare-fun b!104688 () Bool)

(assert (=> b!104688 (= e!68156 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104689 () Bool)

(assert (=> b!104689 (= e!68163 call!11008)))

(declare-fun b!104690 () Bool)

(declare-fun e!68160 () Bool)

(assert (=> b!104690 (= e!68160 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104691 () Bool)

(declare-fun res!52167 () Bool)

(assert (=> b!104691 (=> (not res!52167) (not e!68159))))

(assert (=> b!104691 (= res!52167 e!68167)))

(declare-fun c!18157 () Bool)

(assert (=> b!104691 (= c!18157 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!104692 () Bool)

(assert (=> b!104692 (= e!68166 call!11008)))

(declare-fun b!104693 () Bool)

(assert (=> b!104693 (= e!68163 call!11007)))

(declare-fun bm!11007 () Bool)

(assert (=> bm!11007 (= call!11012 call!11010)))

(declare-fun b!104694 () Bool)

(assert (=> b!104694 (= e!68168 (= (apply!97 lt!53511 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2438 newMap!16)))))

(declare-fun b!104695 () Bool)

(assert (=> b!104695 (= e!68161 (+!143 call!11011 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))

(declare-fun bm!11008 () Bool)

(assert (=> bm!11008 (= call!11010 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun d!28461 () Bool)

(assert (=> d!28461 e!68159))

(declare-fun res!52165 () Bool)

(assert (=> d!28461 (=> (not res!52165) (not e!68159))))

(assert (=> d!28461 (= res!52165 (or (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))))

(declare-fun lt!53496 () ListLongMap!1579)

(assert (=> d!28461 (= lt!53511 lt!53496)))

(declare-fun lt!53495 () Unit!3170)

(assert (=> d!28461 (= lt!53495 e!68162)))

(declare-fun c!18154 () Bool)

(assert (=> d!28461 (= c!18154 e!68160)))

(declare-fun res!52173 () Bool)

(assert (=> d!28461 (=> (not res!52173) (not e!68160))))

(assert (=> d!28461 (= res!52173 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!28461 (= lt!53496 e!68161)))

(assert (=> d!28461 (= c!18155 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28461 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28461 (= (getCurrentListMap!482 (_keys!4263 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53511)))

(declare-fun b!104685 () Bool)

(declare-fun e!68158 () Bool)

(assert (=> b!104685 (= e!68164 e!68158)))

(declare-fun res!52172 () Bool)

(assert (=> b!104685 (=> (not res!52172) (not e!68158))))

(assert (=> b!104685 (= res!52172 (contains!825 lt!53511 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104685 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104696 () Bool)

(assert (=> b!104696 (= e!68159 e!68165)))

(declare-fun c!18156 () Bool)

(assert (=> b!104696 (= c!18156 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104697 () Bool)

(assert (=> b!104697 (= e!68158 (= (apply!97 lt!53511 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1333 (select (arr!2057 (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104697 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))))))))

(assert (=> b!104697 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun bm!11009 () Bool)

(assert (=> bm!11009 (= call!11009 (contains!825 lt!53511 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104698 () Bool)

(declare-fun lt!53498 () Unit!3170)

(assert (=> b!104698 (= e!68162 lt!53498)))

(declare-fun lt!53504 () ListLongMap!1579)

(assert (=> b!104698 (= lt!53504 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53499 () (_ BitVec 64))

(assert (=> b!104698 (= lt!53499 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53510 () (_ BitVec 64))

(assert (=> b!104698 (= lt!53510 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53514 () Unit!3170)

(assert (=> b!104698 (= lt!53514 (addStillContains!73 lt!53504 lt!53499 (zeroValue!2438 newMap!16) lt!53510))))

(assert (=> b!104698 (contains!825 (+!143 lt!53504 (tuple2!2403 lt!53499 (zeroValue!2438 newMap!16))) lt!53510)))

(declare-fun lt!53507 () Unit!3170)

(assert (=> b!104698 (= lt!53507 lt!53514)))

(declare-fun lt!53509 () ListLongMap!1579)

(assert (=> b!104698 (= lt!53509 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53508 () (_ BitVec 64))

(assert (=> b!104698 (= lt!53508 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53494 () (_ BitVec 64))

(assert (=> b!104698 (= lt!53494 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53506 () Unit!3170)

(assert (=> b!104698 (= lt!53506 (addApplyDifferent!73 lt!53509 lt!53508 (minValue!2438 newMap!16) lt!53494))))

(assert (=> b!104698 (= (apply!97 (+!143 lt!53509 (tuple2!2403 lt!53508 (minValue!2438 newMap!16))) lt!53494) (apply!97 lt!53509 lt!53494))))

(declare-fun lt!53505 () Unit!3170)

(assert (=> b!104698 (= lt!53505 lt!53506)))

(declare-fun lt!53512 () ListLongMap!1579)

(assert (=> b!104698 (= lt!53512 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53513 () (_ BitVec 64))

(assert (=> b!104698 (= lt!53513 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53515 () (_ BitVec 64))

(assert (=> b!104698 (= lt!53515 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53503 () Unit!3170)

(assert (=> b!104698 (= lt!53503 (addApplyDifferent!73 lt!53512 lt!53513 (zeroValue!2438 newMap!16) lt!53515))))

(assert (=> b!104698 (= (apply!97 (+!143 lt!53512 (tuple2!2403 lt!53513 (zeroValue!2438 newMap!16))) lt!53515) (apply!97 lt!53512 lt!53515))))

(declare-fun lt!53501 () Unit!3170)

(assert (=> b!104698 (= lt!53501 lt!53503)))

(declare-fun lt!53500 () ListLongMap!1579)

(assert (=> b!104698 (= lt!53500 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53502 () (_ BitVec 64))

(assert (=> b!104698 (= lt!53502 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53497 () (_ BitVec 64))

(assert (=> b!104698 (= lt!53497 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104698 (= lt!53498 (addApplyDifferent!73 lt!53500 lt!53502 (minValue!2438 newMap!16) lt!53497))))

(assert (=> b!104698 (= (apply!97 (+!143 lt!53500 (tuple2!2403 lt!53502 (minValue!2438 newMap!16))) lt!53497) (apply!97 lt!53500 lt!53497))))

(declare-fun b!104699 () Bool)

(assert (=> b!104699 (= e!68165 e!68157)))

(declare-fun res!52166 () Bool)

(assert (=> b!104699 (= res!52166 call!11006)))

(assert (=> b!104699 (=> (not res!52166) (not e!68157))))

(declare-fun b!104700 () Bool)

(assert (=> b!104700 (= e!68167 (not call!11009))))

(assert (= (and d!28461 c!18155) b!104695))

(assert (= (and d!28461 (not c!18155)) b!104682))

(assert (= (and b!104682 c!18158) b!104692))

(assert (= (and b!104682 (not c!18158)) b!104684))

(assert (= (and b!104684 c!18159) b!104689))

(assert (= (and b!104684 (not c!18159)) b!104693))

(assert (= (or b!104689 b!104693) bm!11005))

(assert (= (or b!104692 bm!11005) bm!11007))

(assert (= (or b!104692 b!104689) bm!11004))

(assert (= (or b!104695 bm!11007) bm!11008))

(assert (= (or b!104695 bm!11004) bm!11006))

(assert (= (and d!28461 res!52173) b!104690))

(assert (= (and d!28461 c!18154) b!104698))

(assert (= (and d!28461 (not c!18154)) b!104687))

(assert (= (and d!28461 res!52165) b!104683))

(assert (= (and b!104683 res!52170) b!104688))

(assert (= (and b!104683 (not res!52171)) b!104685))

(assert (= (and b!104685 res!52172) b!104697))

(assert (= (and b!104683 res!52168) b!104691))

(assert (= (and b!104691 c!18157) b!104680))

(assert (= (and b!104691 (not c!18157)) b!104700))

(assert (= (and b!104680 res!52169) b!104694))

(assert (= (or b!104680 b!104700) bm!11009))

(assert (= (and b!104691 res!52167) b!104696))

(assert (= (and b!104696 c!18156) b!104699))

(assert (= (and b!104696 (not c!18156)) b!104686))

(assert (= (and b!104699 res!52166) b!104681))

(assert (= (or b!104699 b!104686) bm!11003))

(declare-fun b_lambda!4695 () Bool)

(assert (=> (not b_lambda!4695) (not b!104697)))

(assert (=> b!104697 t!5720))

(declare-fun b_and!6489 () Bool)

(assert (= b_and!6485 (and (=> t!5720 result!3447) b_and!6489)))

(assert (=> b!104697 t!5722))

(declare-fun b_and!6491 () Bool)

(assert (= b_and!6487 (and (=> t!5722 result!3449) b_and!6491)))

(declare-fun m!116557 () Bool)

(assert (=> b!104681 m!116557))

(assert (=> d!28461 m!114517))

(declare-fun m!116559 () Bool)

(assert (=> bm!11009 m!116559))

(declare-fun m!116561 () Bool)

(assert (=> bm!11006 m!116561))

(assert (=> b!104690 m!114523))

(assert (=> b!104690 m!114523))

(assert (=> b!104690 m!114525))

(declare-fun m!116563 () Bool)

(assert (=> b!104698 m!116563))

(declare-fun m!116565 () Bool)

(assert (=> b!104698 m!116565))

(declare-fun m!116567 () Bool)

(assert (=> b!104698 m!116567))

(declare-fun m!116569 () Bool)

(assert (=> b!104698 m!116569))

(declare-fun m!116571 () Bool)

(assert (=> b!104698 m!116571))

(declare-fun m!116573 () Bool)

(assert (=> b!104698 m!116573))

(declare-fun m!116575 () Bool)

(assert (=> b!104698 m!116575))

(declare-fun m!116577 () Bool)

(assert (=> b!104698 m!116577))

(assert (=> b!104698 m!116575))

(declare-fun m!116579 () Bool)

(assert (=> b!104698 m!116579))

(declare-fun m!116581 () Bool)

(assert (=> b!104698 m!116581))

(declare-fun m!116583 () Bool)

(assert (=> b!104698 m!116583))

(assert (=> b!104698 m!114523))

(assert (=> b!104698 m!116571))

(declare-fun m!116585 () Bool)

(assert (=> b!104698 m!116585))

(declare-fun m!116587 () Bool)

(assert (=> b!104698 m!116587))

(declare-fun m!116589 () Bool)

(assert (=> b!104698 m!116589))

(declare-fun m!116591 () Bool)

(assert (=> b!104698 m!116591))

(assert (=> b!104698 m!116563))

(declare-fun m!116593 () Bool)

(assert (=> b!104698 m!116593))

(assert (=> b!104698 m!116585))

(assert (=> b!104697 m!114523))

(assert (=> b!104697 m!114523))

(declare-fun m!116595 () Bool)

(assert (=> b!104697 m!116595))

(declare-fun m!116597 () Bool)

(assert (=> b!104697 m!116597))

(assert (=> b!104697 m!114563))

(declare-fun m!116599 () Bool)

(assert (=> b!104697 m!116599))

(assert (=> b!104697 m!114563))

(assert (=> b!104697 m!116597))

(declare-fun m!116601 () Bool)

(assert (=> bm!11003 m!116601))

(assert (=> bm!11008 m!116569))

(assert (=> b!104685 m!114523))

(assert (=> b!104685 m!114523))

(declare-fun m!116603 () Bool)

(assert (=> b!104685 m!116603))

(declare-fun m!116605 () Bool)

(assert (=> b!104695 m!116605))

(declare-fun m!116607 () Bool)

(assert (=> b!104694 m!116607))

(assert (=> b!104688 m!114523))

(assert (=> b!104688 m!114523))

(assert (=> b!104688 m!114525))

(assert (=> b!103991 d!28461))

(declare-fun lt!53516 () Bool)

(declare-fun d!28463 () Bool)

(assert (=> d!28463 (= lt!53516 (select (content!107 (toList!805 lt!53099)) (tuple2!2403 lt!52790 lt!52787)))))

(declare-fun e!68170 () Bool)

(assert (=> d!28463 (= lt!53516 e!68170)))

(declare-fun res!52174 () Bool)

(assert (=> d!28463 (=> (not res!52174) (not e!68170))))

(assert (=> d!28463 (= res!52174 ((_ is Cons!1633) (toList!805 lt!53099)))))

(assert (=> d!28463 (= (contains!828 (toList!805 lt!53099) (tuple2!2403 lt!52790 lt!52787)) lt!53516)))

(declare-fun b!104701 () Bool)

(declare-fun e!68169 () Bool)

(assert (=> b!104701 (= e!68170 e!68169)))

(declare-fun res!52175 () Bool)

(assert (=> b!104701 (=> res!52175 e!68169)))

(assert (=> b!104701 (= res!52175 (= (h!2229 (toList!805 lt!53099)) (tuple2!2403 lt!52790 lt!52787)))))

(declare-fun b!104702 () Bool)

(assert (=> b!104702 (= e!68169 (contains!828 (t!5711 (toList!805 lt!53099)) (tuple2!2403 lt!52790 lt!52787)))))

(assert (= (and d!28463 res!52174) b!104701))

(assert (= (and b!104701 (not res!52175)) b!104702))

(declare-fun m!116609 () Bool)

(assert (=> d!28463 m!116609))

(declare-fun m!116611 () Bool)

(assert (=> d!28463 m!116611))

(declare-fun m!116613 () Bool)

(assert (=> b!104702 m!116613))

(assert (=> b!104011 d!28463))

(declare-fun b!104704 () Bool)

(declare-fun e!68171 () Option!160)

(declare-fun e!68172 () Option!160)

(assert (=> b!104704 (= e!68171 e!68172)))

(declare-fun c!18161 () Bool)

(assert (=> b!104704 (= c!18161 (and ((_ is Cons!1633) (t!5711 (toList!805 lt!52799))) (not (= (_1!1211 (h!2229 (t!5711 (toList!805 lt!52799)))) (_1!1211 lt!52551)))))))

(declare-fun b!104703 () Bool)

(assert (=> b!104703 (= e!68171 (Some!159 (_2!1211 (h!2229 (t!5711 (toList!805 lt!52799))))))))

(declare-fun b!104705 () Bool)

(assert (=> b!104705 (= e!68172 (getValueByKey!154 (t!5711 (t!5711 (toList!805 lt!52799))) (_1!1211 lt!52551)))))

(declare-fun d!28465 () Bool)

(declare-fun c!18160 () Bool)

(assert (=> d!28465 (= c!18160 (and ((_ is Cons!1633) (t!5711 (toList!805 lt!52799))) (= (_1!1211 (h!2229 (t!5711 (toList!805 lt!52799)))) (_1!1211 lt!52551))))))

(assert (=> d!28465 (= (getValueByKey!154 (t!5711 (toList!805 lt!52799)) (_1!1211 lt!52551)) e!68171)))

(declare-fun b!104706 () Bool)

(assert (=> b!104706 (= e!68172 None!158)))

(assert (= (and d!28465 c!18160) b!104703))

(assert (= (and d!28465 (not c!18160)) b!104704))

(assert (= (and b!104704 c!18161) b!104705))

(assert (= (and b!104704 (not c!18161)) b!104706))

(declare-fun m!116615 () Bool)

(assert (=> b!104705 m!116615))

(assert (=> b!103712 d!28465))

(declare-fun d!28467 () Bool)

(assert (=> d!28467 (isDefined!108 (getValueByKey!154 (toList!805 call!10839) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))))))

(declare-fun lt!53517 () Unit!3170)

(assert (=> d!28467 (= lt!53517 (choose!656 (toList!805 call!10839) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))))))

(declare-fun e!68173 () Bool)

(assert (=> d!28467 e!68173))

(declare-fun res!52176 () Bool)

(assert (=> d!28467 (=> (not res!52176) (not e!68173))))

(assert (=> d!28467 (= res!52176 (isStrictlySorted!303 (toList!805 call!10839)))))

(assert (=> d!28467 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 call!10839) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))) lt!53517)))

(declare-fun b!104707 () Bool)

(assert (=> b!104707 (= e!68173 (containsKey!158 (toList!805 call!10839) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))))))

(assert (= (and d!28467 res!52176) b!104707))

(assert (=> d!28467 m!114327))

(assert (=> d!28467 m!115097))

(assert (=> d!28467 m!115097))

(assert (=> d!28467 m!115099))

(assert (=> d!28467 m!114327))

(declare-fun m!116617 () Bool)

(assert (=> d!28467 m!116617))

(declare-fun m!116619 () Bool)

(assert (=> d!28467 m!116619))

(assert (=> b!104707 m!114327))

(assert (=> b!104707 m!115093))

(assert (=> b!103983 d!28467))

(assert (=> b!103983 d!28317))

(assert (=> b!103983 d!28319))

(declare-fun d!28469 () Bool)

(assert (=> d!28469 (= (isDefined!108 (getValueByKey!154 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787))) lt!52786)) (not (isEmpty!374 (getValueByKey!154 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787))) lt!52786))))))

(declare-fun bs!4307 () Bool)

(assert (= bs!4307 d!28469))

(assert (=> bs!4307 m!115157))

(declare-fun m!116621 () Bool)

(assert (=> bs!4307 m!116621))

(assert (=> b!104007 d!28469))

(declare-fun b!104709 () Bool)

(declare-fun e!68174 () Option!160)

(declare-fun e!68175 () Option!160)

(assert (=> b!104709 (= e!68174 e!68175)))

(declare-fun c!18163 () Bool)

(assert (=> b!104709 (= c!18163 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787)))) (not (= (_1!1211 (h!2229 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787))))) lt!52786))))))

(declare-fun b!104708 () Bool)

(assert (=> b!104708 (= e!68174 (Some!159 (_2!1211 (h!2229 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787)))))))))

(declare-fun b!104710 () Bool)

(assert (=> b!104710 (= e!68175 (getValueByKey!154 (t!5711 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787)))) lt!52786))))

(declare-fun d!28471 () Bool)

(declare-fun c!18162 () Bool)

(assert (=> d!28471 (= c!18162 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787)))) (= (_1!1211 (h!2229 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787))))) lt!52786)))))

(assert (=> d!28471 (= (getValueByKey!154 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787))) lt!52786) e!68174)))

(declare-fun b!104711 () Bool)

(assert (=> b!104711 (= e!68175 None!158)))

(assert (= (and d!28471 c!18162) b!104708))

(assert (= (and d!28471 (not c!18162)) b!104709))

(assert (= (and b!104709 c!18163) b!104710))

(assert (= (and b!104709 (not c!18163)) b!104711))

(declare-fun m!116623 () Bool)

(assert (=> b!104710 m!116623))

(assert (=> b!104007 d!28471))

(declare-fun b!104712 () Bool)

(declare-fun e!68176 () Bool)

(declare-fun e!68179 () Bool)

(assert (=> b!104712 (= e!68176 e!68179)))

(declare-fun c!18164 () Bool)

(assert (=> b!104712 (= c!18164 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun e!68177 () Bool)

(declare-fun b!104713 () Bool)

(assert (=> b!104713 (= e!68177 (contains!827 (ite c!17902 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17825 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635) Nil!1635)) (ite c!17825 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635) Nil!1635)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!104714 () Bool)

(declare-fun call!11013 () Bool)

(assert (=> b!104714 (= e!68179 call!11013)))

(declare-fun b!104715 () Bool)

(declare-fun e!68178 () Bool)

(assert (=> b!104715 (= e!68178 e!68176)))

(declare-fun res!52177 () Bool)

(assert (=> b!104715 (=> (not res!52177) (not e!68176))))

(assert (=> b!104715 (= res!52177 (not e!68177))))

(declare-fun res!52178 () Bool)

(assert (=> b!104715 (=> (not res!52178) (not e!68177))))

(assert (=> b!104715 (= res!52178 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!104716 () Bool)

(assert (=> b!104716 (= e!68179 call!11013)))

(declare-fun bm!11010 () Bool)

(assert (=> bm!11010 (= call!11013 (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18164 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!17902 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17825 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635) Nil!1635)) (ite c!17825 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635) Nil!1635))) (ite c!17902 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17825 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635) Nil!1635)) (ite c!17825 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635) Nil!1635)))))))

(declare-fun d!28473 () Bool)

(declare-fun res!52179 () Bool)

(assert (=> d!28473 (=> res!52179 e!68178)))

(assert (=> d!28473 (= res!52179 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(assert (=> d!28473 (= (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!17902 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17825 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635) Nil!1635)) (ite c!17825 (Cons!1634 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) Nil!1635) Nil!1635))) e!68178)))

(assert (= (and d!28473 (not res!52179)) b!104715))

(assert (= (and b!104715 res!52178) b!104713))

(assert (= (and b!104715 res!52177) b!104712))

(assert (= (and b!104712 c!18164) b!104714))

(assert (= (and b!104712 (not c!18164)) b!104716))

(assert (= (or b!104714 b!104716) bm!11010))

(declare-fun m!116625 () Bool)

(assert (=> b!104712 m!116625))

(assert (=> b!104712 m!116625))

(declare-fun m!116627 () Bool)

(assert (=> b!104712 m!116627))

(assert (=> b!104713 m!116625))

(assert (=> b!104713 m!116625))

(declare-fun m!116629 () Bool)

(assert (=> b!104713 m!116629))

(assert (=> b!104715 m!116625))

(assert (=> b!104715 m!116625))

(assert (=> b!104715 m!116627))

(assert (=> bm!11010 m!116625))

(declare-fun m!116631 () Bool)

(assert (=> bm!11010 m!116631))

(assert (=> bm!10906 d!28473))

(declare-fun d!28475 () Bool)

(assert (=> d!28475 (isDefined!108 (getValueByKey!154 (toList!805 lt!52799) (_1!1211 lt!52551)))))

(declare-fun lt!53518 () Unit!3170)

(assert (=> d!28475 (= lt!53518 (choose!656 (toList!805 lt!52799) (_1!1211 lt!52551)))))

(declare-fun e!68180 () Bool)

(assert (=> d!28475 e!68180))

(declare-fun res!52180 () Bool)

(assert (=> d!28475 (=> (not res!52180) (not e!68180))))

(assert (=> d!28475 (= res!52180 (isStrictlySorted!303 (toList!805 lt!52799)))))

(assert (=> d!28475 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52799) (_1!1211 lt!52551)) lt!53518)))

(declare-fun b!104717 () Bool)

(assert (=> b!104717 (= e!68180 (containsKey!158 (toList!805 lt!52799) (_1!1211 lt!52551)))))

(assert (= (and d!28475 res!52180) b!104717))

(assert (=> d!28475 m!114497))

(assert (=> d!28475 m!114497))

(assert (=> d!28475 m!114961))

(declare-fun m!116633 () Bool)

(assert (=> d!28475 m!116633))

(declare-fun m!116635 () Bool)

(assert (=> d!28475 m!116635))

(assert (=> b!104717 m!114957))

(assert (=> b!103857 d!28475))

(assert (=> b!103857 d!28267))

(assert (=> b!103857 d!27819))

(assert (=> bm!10937 d!28225))

(declare-fun d!28477 () Bool)

(declare-fun c!18165 () Bool)

(assert (=> d!28477 (= c!18165 ((_ is Nil!1634) (toList!805 lt!52799)))))

(declare-fun e!68181 () (InoxSet tuple2!2402))

(assert (=> d!28477 (= (content!107 (toList!805 lt!52799)) e!68181)))

(declare-fun b!104718 () Bool)

(assert (=> b!104718 (= e!68181 ((as const (Array tuple2!2402 Bool)) false))))

(declare-fun b!104719 () Bool)

(assert (=> b!104719 (= e!68181 ((_ map or) (store ((as const (Array tuple2!2402 Bool)) false) (h!2229 (toList!805 lt!52799)) true) (content!107 (t!5711 (toList!805 lt!52799)))))))

(assert (= (and d!28477 c!18165) b!104718))

(assert (= (and d!28477 (not c!18165)) b!104719))

(declare-fun m!116637 () Bool)

(assert (=> b!104719 m!116637))

(declare-fun m!116639 () Bool)

(assert (=> b!104719 m!116639))

(assert (=> d!27945 d!28477))

(declare-fun b!104720 () Bool)

(declare-fun e!68183 () Bool)

(declare-fun e!68182 () Bool)

(assert (=> b!104720 (= e!68183 e!68182)))

(declare-fun c!18166 () Bool)

(assert (=> b!104720 (= c!18166 (validKeyInArray!0 (select (arr!2056 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!104721 () Bool)

(declare-fun call!11014 () Bool)

(assert (=> b!104721 (= e!68182 call!11014)))

(declare-fun b!104722 () Bool)

(declare-fun e!68184 () Bool)

(assert (=> b!104722 (= e!68184 call!11014)))

(declare-fun bm!11011 () Bool)

(assert (=> bm!11011 (= call!11014 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) (mask!6697 newMap!16)))))

(declare-fun d!28479 () Bool)

(declare-fun res!52182 () Bool)

(assert (=> d!28479 (=> res!52182 e!68183)))

(assert (=> d!28479 (= res!52182 (bvsge #b00000000000000000000000000000000 (size!2310 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))))))))

(assert (=> d!28479 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) (mask!6697 newMap!16)) e!68183)))

(declare-fun b!104723 () Bool)

(assert (=> b!104723 (= e!68182 e!68184)))

(declare-fun lt!53520 () (_ BitVec 64))

(assert (=> b!104723 (= lt!53520 (select (arr!2056 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!53521 () Unit!3170)

(assert (=> b!104723 (= lt!53521 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) lt!53520 #b00000000000000000000000000000000))))

(assert (=> b!104723 (arrayContainsKey!0 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) lt!53520 #b00000000000000000000000000000000)))

(declare-fun lt!53519 () Unit!3170)

(assert (=> b!104723 (= lt!53519 lt!53521)))

(declare-fun res!52181 () Bool)

(assert (=> b!104723 (= res!52181 (= (seekEntryOrOpen!0 (select (arr!2056 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000) (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) (mask!6697 newMap!16)) (Found!268 #b00000000000000000000000000000000)))))

(assert (=> b!104723 (=> (not res!52181) (not e!68184))))

(assert (= (and d!28479 (not res!52182)) b!104720))

(assert (= (and b!104720 c!18166) b!104723))

(assert (= (and b!104720 (not c!18166)) b!104721))

(assert (= (and b!104723 res!52181) b!104722))

(assert (= (or b!104722 b!104721) bm!11011))

(declare-fun m!116641 () Bool)

(assert (=> b!104720 m!116641))

(assert (=> b!104720 m!116641))

(declare-fun m!116643 () Bool)

(assert (=> b!104720 m!116643))

(declare-fun m!116645 () Bool)

(assert (=> bm!11011 m!116645))

(assert (=> b!104723 m!116641))

(declare-fun m!116647 () Bool)

(assert (=> b!104723 m!116647))

(declare-fun m!116649 () Bool)

(assert (=> b!104723 m!116649))

(assert (=> b!104723 m!116641))

(declare-fun m!116651 () Bool)

(assert (=> b!104723 m!116651))

(assert (=> d!27813 d!28479))

(declare-fun b!104733 () Bool)

(declare-fun res!52192 () Bool)

(declare-fun e!68189 () Bool)

(assert (=> b!104733 (=> (not res!52192) (not e!68189))))

(assert (=> b!104733 (= res!52192 (validKeyInArray!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun d!28481 () Bool)

(declare-fun e!68190 () Bool)

(assert (=> d!28481 e!68190))

(declare-fun res!52191 () Bool)

(assert (=> d!28481 (=> (not res!52191) (not e!68190))))

(assert (=> d!28481 (= res!52191 (and (bvsge (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) #b00000000000000000000000000000000) (bvslt (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (size!2310 (_keys!4263 newMap!16)))))))

(declare-fun lt!53524 () Unit!3170)

(declare-fun choose!1 (array!4334 (_ BitVec 32) (_ BitVec 64)) Unit!3170)

(assert (=> d!28481 (= lt!53524 (choose!1 (_keys!4263 newMap!16) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> d!28481 e!68189))

(declare-fun res!52194 () Bool)

(assert (=> d!28481 (=> (not res!52194) (not e!68189))))

(assert (=> d!28481 (= res!52194 (and (bvsge (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) #b00000000000000000000000000000000) (bvslt (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (size!2310 (_keys!4263 newMap!16)))))))

(assert (=> d!28481 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4263 newMap!16) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) lt!53524)))

(declare-fun b!104735 () Bool)

(assert (=> b!104735 (= e!68190 (= (arrayCountValidKeys!0 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4263 newMap!16) #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!104734 () Bool)

(assert (=> b!104734 (= e!68189 (bvslt (size!2310 (_keys!4263 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!104732 () Bool)

(declare-fun res!52193 () Bool)

(assert (=> b!104732 (=> (not res!52193) (not e!68189))))

(assert (=> b!104732 (= res!52193 (not (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676))))))))

(assert (= (and d!28481 res!52194) b!104732))

(assert (= (and b!104732 res!52193) b!104733))

(assert (= (and b!104733 res!52192) b!104734))

(assert (= (and d!28481 res!52191) b!104735))

(assert (=> b!104733 m!114187))

(assert (=> b!104733 m!114361))

(assert (=> d!28481 m!114187))

(declare-fun m!116653 () Bool)

(assert (=> d!28481 m!116653))

(assert (=> b!104735 m!114593))

(assert (=> b!104735 m!114611))

(assert (=> b!104735 m!114425))

(declare-fun m!116655 () Bool)

(assert (=> b!104732 m!116655))

(assert (=> b!104732 m!116655))

(declare-fun m!116657 () Bool)

(assert (=> b!104732 m!116657))

(assert (=> d!27813 d!28481))

(declare-fun d!28483 () Bool)

(declare-fun e!68192 () Bool)

(assert (=> d!28483 e!68192))

(declare-fun res!52195 () Bool)

(assert (=> d!28483 (=> res!52195 e!68192)))

(declare-fun lt!53528 () Bool)

(assert (=> d!28483 (= res!52195 (not lt!53528))))

(declare-fun lt!53526 () Bool)

(assert (=> d!28483 (= lt!53528 lt!53526)))

(declare-fun lt!53525 () Unit!3170)

(declare-fun e!68191 () Unit!3170)

(assert (=> d!28483 (= lt!53525 e!68191)))

(declare-fun c!18167 () Bool)

(assert (=> d!28483 (= c!18167 lt!53526)))

(assert (=> d!28483 (= lt!53526 (containsKey!158 (toList!805 (getCurrentListMap!482 lt!52915 lt!52891 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)))))))

(assert (=> d!28483 (= (contains!825 (getCurrentListMap!482 lt!52915 lt!52891 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)))) lt!53528)))

(declare-fun b!104736 () Bool)

(declare-fun lt!53527 () Unit!3170)

(assert (=> b!104736 (= e!68191 lt!53527)))

(assert (=> b!104736 (= lt!53527 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 (getCurrentListMap!482 lt!52915 lt!52891 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)))))))

(assert (=> b!104736 (isDefined!108 (getValueByKey!154 (toList!805 (getCurrentListMap!482 lt!52915 lt!52891 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)))))))

(declare-fun b!104737 () Bool)

(declare-fun Unit!3232 () Unit!3170)

(assert (=> b!104737 (= e!68191 Unit!3232)))

(declare-fun b!104738 () Bool)

(assert (=> b!104738 (= e!68192 (isDefined!108 (getValueByKey!154 (toList!805 (getCurrentListMap!482 lt!52915 lt!52891 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676))))))))

(assert (= (and d!28483 c!18167) b!104736))

(assert (= (and d!28483 (not c!18167)) b!104737))

(assert (= (and d!28483 (not res!52195)) b!104738))

(assert (=> d!28483 m!114589))

(declare-fun m!116659 () Bool)

(assert (=> d!28483 m!116659))

(assert (=> b!104736 m!114589))

(declare-fun m!116661 () Bool)

(assert (=> b!104736 m!116661))

(assert (=> b!104736 m!114589))

(declare-fun m!116663 () Bool)

(assert (=> b!104736 m!116663))

(assert (=> b!104736 m!116663))

(declare-fun m!116665 () Bool)

(assert (=> b!104736 m!116665))

(assert (=> b!104738 m!114589))

(assert (=> b!104738 m!116663))

(assert (=> b!104738 m!116663))

(assert (=> b!104738 m!116665))

(assert (=> d!27813 d!28483))

(assert (=> d!27813 d!27791))

(declare-fun d!28485 () Bool)

(assert (=> d!28485 (= (arrayCountValidKeys!0 lt!52914 (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (bvadd (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!53531 () Unit!3170)

(declare-fun choose!2 (array!4334 (_ BitVec 32)) Unit!3170)

(assert (=> d!28485 (= lt!53531 (choose!2 lt!52914 (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676))))))

(declare-fun e!68195 () Bool)

(assert (=> d!28485 e!68195))

(declare-fun res!52200 () Bool)

(assert (=> d!28485 (=> (not res!52200) (not e!68195))))

(assert (=> d!28485 (= res!52200 (and (bvsge (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) #b00000000000000000000000000000000) (bvslt (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (size!2310 lt!52914))))))

(assert (=> d!28485 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!52914 (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676))) lt!53531)))

(declare-fun b!104743 () Bool)

(declare-fun res!52201 () Bool)

(assert (=> b!104743 (=> (not res!52201) (not e!68195))))

(assert (=> b!104743 (= res!52201 (validKeyInArray!0 (select (arr!2056 lt!52914) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)))))))

(declare-fun b!104744 () Bool)

(assert (=> b!104744 (= e!68195 (bvslt (size!2310 lt!52914) #b01111111111111111111111111111111))))

(assert (= (and d!28485 res!52200) b!104743))

(assert (= (and b!104743 res!52201) b!104744))

(assert (=> d!28485 m!114617))

(declare-fun m!116667 () Bool)

(assert (=> d!28485 m!116667))

(declare-fun m!116669 () Bool)

(assert (=> b!104743 m!116669))

(assert (=> b!104743 m!116669))

(declare-fun m!116671 () Bool)

(assert (=> b!104743 m!116671))

(assert (=> d!27813 d!28485))

(assert (=> d!27813 d!27851))

(assert (=> d!27813 d!27939))

(declare-fun b!104745 () Bool)

(declare-fun e!68197 () (_ BitVec 32))

(declare-fun e!68196 () (_ BitVec 32))

(assert (=> b!104745 (= e!68197 e!68196)))

(declare-fun c!18168 () Bool)

(assert (=> b!104745 (= c!18168 (validKeyInArray!0 (select (arr!2056 lt!52914) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)))))))

(declare-fun bm!11012 () Bool)

(declare-fun call!11015 () (_ BitVec 32))

(assert (=> bm!11012 (= call!11015 (arrayCountValidKeys!0 lt!52914 (bvadd (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) #b00000000000000000000000000000001) (bvadd (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) #b00000000000000000000000000000001)))))

(declare-fun b!104746 () Bool)

(assert (=> b!104746 (= e!68197 #b00000000000000000000000000000000)))

(declare-fun lt!53532 () (_ BitVec 32))

(declare-fun d!28487 () Bool)

(assert (=> d!28487 (and (bvsge lt!53532 #b00000000000000000000000000000000) (bvsle lt!53532 (bvsub (size!2310 lt!52914) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)))))))

(assert (=> d!28487 (= lt!53532 e!68197)))

(declare-fun c!18169 () Bool)

(assert (=> d!28487 (= c!18169 (bvsge (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (bvadd (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) #b00000000000000000000000000000001)))))

(assert (=> d!28487 (and (bvsle (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (bvadd (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) #b00000000000000000000000000000001)) (bvsge (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) #b00000000000000000000000000000001) (size!2310 lt!52914)))))

(assert (=> d!28487 (= (arrayCountValidKeys!0 lt!52914 (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (bvadd (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) #b00000000000000000000000000000001)) lt!53532)))

(declare-fun b!104747 () Bool)

(assert (=> b!104747 (= e!68196 (bvadd #b00000000000000000000000000000001 call!11015))))

(declare-fun b!104748 () Bool)

(assert (=> b!104748 (= e!68196 call!11015)))

(assert (= (and d!28487 c!18169) b!104746))

(assert (= (and d!28487 (not c!18169)) b!104745))

(assert (= (and b!104745 c!18168) b!104747))

(assert (= (and b!104745 (not c!18168)) b!104748))

(assert (= (or b!104747 b!104748) bm!11012))

(assert (=> b!104745 m!116669))

(assert (=> b!104745 m!116669))

(assert (=> b!104745 m!116671))

(declare-fun m!116673 () Bool)

(assert (=> bm!11012 m!116673))

(assert (=> d!27813 d!28487))

(declare-fun d!28489 () Bool)

(declare-fun e!68198 () Bool)

(assert (=> d!28489 e!68198))

(declare-fun res!52202 () Bool)

(assert (=> d!28489 (=> (not res!52202) (not e!68198))))

(assert (=> d!28489 (= res!52202 (and (bvsge (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) #b00000000000000000000000000000000) (bvslt (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (size!2310 lt!52915))))))

(declare-fun lt!53533 () Unit!3170)

(assert (=> d!28489 (= lt!53533 (choose!652 lt!52915 lt!52891 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (defaultEntry!2561 newMap!16)))))

(assert (=> d!28489 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28489 (= (lemmaValidKeyInArrayIsInListMap!104 lt!52915 lt!52891 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (defaultEntry!2561 newMap!16)) lt!53533)))

(declare-fun b!104749 () Bool)

(assert (=> b!104749 (= e!68198 (contains!825 (getCurrentListMap!482 lt!52915 lt!52891 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (arr!2056 lt!52915) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)))))))

(assert (= (and d!28489 res!52202) b!104749))

(declare-fun m!116675 () Bool)

(assert (=> d!28489 m!116675))

(assert (=> d!28489 m!114517))

(assert (=> b!104749 m!114587))

(declare-fun m!116677 () Bool)

(assert (=> b!104749 m!116677))

(assert (=> b!104749 m!114587))

(assert (=> b!104749 m!116677))

(declare-fun m!116679 () Bool)

(assert (=> b!104749 m!116679))

(assert (=> d!27813 d!28489))

(declare-fun d!28491 () Bool)

(declare-fun e!68201 () Bool)

(assert (=> d!28491 e!68201))

(declare-fun res!52205 () Bool)

(assert (=> d!28491 (=> (not res!52205) (not e!68201))))

(assert (=> d!28491 (= res!52205 (and (bvsge (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) #b00000000000000000000000000000000) (bvslt (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (size!2310 (_keys!4263 newMap!16)))))))

(declare-fun lt!53536 () Unit!3170)

(declare-fun choose!41 (array!4334 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1638) Unit!3170)

(assert (=> d!28491 (= lt!53536 (choose!41 (_keys!4263 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) lt!52888 lt!52889))))

(assert (=> d!28491 (bvslt (size!2310 (_keys!4263 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!28491 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4263 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) lt!52888 lt!52889) lt!53536)))

(declare-fun b!104752 () Bool)

(assert (=> b!104752 (= e!68201 (arrayNoDuplicates!0 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) lt!52888 lt!52889))))

(assert (= (and d!28491 res!52205) b!104752))

(assert (=> d!28491 m!114187))

(declare-fun m!116681 () Bool)

(assert (=> d!28491 m!116681))

(assert (=> b!104752 m!114593))

(assert (=> b!104752 m!114619))

(assert (=> d!27813 d!28491))

(declare-fun bm!11013 () Bool)

(declare-fun call!11016 () Bool)

(declare-fun lt!53554 () ListLongMap!1579)

(assert (=> bm!11013 (= call!11016 (contains!825 lt!53554 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11014 () Bool)

(declare-fun call!11018 () ListLongMap!1579)

(declare-fun call!11021 () ListLongMap!1579)

(assert (=> bm!11014 (= call!11018 call!11021)))

(declare-fun b!104753 () Bool)

(declare-fun e!68213 () Bool)

(declare-fun e!68214 () Bool)

(assert (=> b!104753 (= e!68213 e!68214)))

(declare-fun res!52210 () Bool)

(declare-fun call!11019 () Bool)

(assert (=> b!104753 (= res!52210 call!11019)))

(assert (=> b!104753 (=> (not res!52210) (not e!68214))))

(declare-fun bm!11015 () Bool)

(declare-fun call!11017 () ListLongMap!1579)

(declare-fun call!11022 () ListLongMap!1579)

(assert (=> bm!11015 (= call!11017 call!11022)))

(declare-fun b!104754 () Bool)

(declare-fun e!68203 () Bool)

(assert (=> b!104754 (= e!68203 (= (apply!97 lt!53554 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2438 newMap!16)))))

(declare-fun b!104755 () Bool)

(declare-fun e!68207 () ListLongMap!1579)

(declare-fun e!68212 () ListLongMap!1579)

(assert (=> b!104755 (= e!68207 e!68212)))

(declare-fun c!18174 () Bool)

(assert (=> b!104755 (= c!18174 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104756 () Bool)

(declare-fun res!52209 () Bool)

(declare-fun e!68205 () Bool)

(assert (=> b!104756 (=> (not res!52209) (not e!68205))))

(declare-fun e!68210 () Bool)

(assert (=> b!104756 (= res!52209 e!68210)))

(declare-fun res!52212 () Bool)

(assert (=> b!104756 (=> res!52212 e!68210)))

(declare-fun e!68202 () Bool)

(assert (=> b!104756 (= res!52212 (not e!68202))))

(declare-fun res!52211 () Bool)

(assert (=> b!104756 (=> (not res!52211) (not e!68202))))

(assert (=> b!104756 (= res!52211 (bvslt #b00000000000000000000000000000000 (size!2310 lt!52915)))))

(declare-fun b!104757 () Bool)

(declare-fun c!18175 () Bool)

(assert (=> b!104757 (= c!18175 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68209 () ListLongMap!1579)

(assert (=> b!104757 (= e!68212 e!68209)))

(declare-fun bm!11016 () Bool)

(declare-fun c!18171 () Bool)

(declare-fun call!11020 () ListLongMap!1579)

(assert (=> bm!11016 (= call!11021 (+!143 (ite c!18171 call!11020 (ite c!18174 call!11022 call!11017)) (ite (or c!18171 c!18174) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(declare-fun b!104759 () Bool)

(declare-fun e!68211 () Bool)

(assert (=> b!104759 (= e!68211 (not call!11016))))

(declare-fun b!104760 () Bool)

(declare-fun e!68208 () Unit!3170)

(declare-fun Unit!3233 () Unit!3170)

(assert (=> b!104760 (= e!68208 Unit!3233)))

(declare-fun b!104761 () Bool)

(assert (=> b!104761 (= e!68202 (validKeyInArray!0 (select (arr!2056 lt!52915) #b00000000000000000000000000000000)))))

(declare-fun b!104762 () Bool)

(assert (=> b!104762 (= e!68209 call!11018)))

(declare-fun b!104763 () Bool)

(declare-fun e!68206 () Bool)

(assert (=> b!104763 (= e!68206 (validKeyInArray!0 (select (arr!2056 lt!52915) #b00000000000000000000000000000000)))))

(declare-fun b!104764 () Bool)

(declare-fun res!52208 () Bool)

(assert (=> b!104764 (=> (not res!52208) (not e!68205))))

(assert (=> b!104764 (= res!52208 e!68213)))

(declare-fun c!18173 () Bool)

(assert (=> b!104764 (= c!18173 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!104765 () Bool)

(assert (=> b!104765 (= e!68212 call!11018)))

(declare-fun b!104766 () Bool)

(assert (=> b!104766 (= e!68209 call!11017)))

(declare-fun bm!11017 () Bool)

(assert (=> bm!11017 (= call!11022 call!11020)))

(declare-fun b!104767 () Bool)

(assert (=> b!104767 (= e!68214 (= (apply!97 lt!53554 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2438 newMap!16)))))

(declare-fun b!104768 () Bool)

(assert (=> b!104768 (= e!68207 (+!143 call!11021 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))

(declare-fun bm!11018 () Bool)

(assert (=> bm!11018 (= call!11020 (getCurrentListMapNoExtraKeys!110 lt!52915 lt!52891 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun d!28493 () Bool)

(assert (=> d!28493 e!68205))

(declare-fun res!52206 () Bool)

(assert (=> d!28493 (=> (not res!52206) (not e!68205))))

(assert (=> d!28493 (= res!52206 (or (bvsge #b00000000000000000000000000000000 (size!2310 lt!52915)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 lt!52915)))))))

(declare-fun lt!53539 () ListLongMap!1579)

(assert (=> d!28493 (= lt!53554 lt!53539)))

(declare-fun lt!53538 () Unit!3170)

(assert (=> d!28493 (= lt!53538 e!68208)))

(declare-fun c!18170 () Bool)

(assert (=> d!28493 (= c!18170 e!68206)))

(declare-fun res!52214 () Bool)

(assert (=> d!28493 (=> (not res!52214) (not e!68206))))

(assert (=> d!28493 (= res!52214 (bvslt #b00000000000000000000000000000000 (size!2310 lt!52915)))))

(assert (=> d!28493 (= lt!53539 e!68207)))

(assert (=> d!28493 (= c!18171 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28493 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28493 (= (getCurrentListMap!482 lt!52915 lt!52891 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53554)))

(declare-fun b!104758 () Bool)

(declare-fun e!68204 () Bool)

(assert (=> b!104758 (= e!68210 e!68204)))

(declare-fun res!52213 () Bool)

(assert (=> b!104758 (=> (not res!52213) (not e!68204))))

(assert (=> b!104758 (= res!52213 (contains!825 lt!53554 (select (arr!2056 lt!52915) #b00000000000000000000000000000000)))))

(assert (=> b!104758 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 lt!52915)))))

(declare-fun b!104769 () Bool)

(assert (=> b!104769 (= e!68205 e!68211)))

(declare-fun c!18172 () Bool)

(assert (=> b!104769 (= c!18172 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104770 () Bool)

(assert (=> b!104770 (= e!68204 (= (apply!97 lt!53554 (select (arr!2056 lt!52915) #b00000000000000000000000000000000)) (get!1333 (select (arr!2057 lt!52891) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104770 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 lt!52891)))))

(assert (=> b!104770 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 lt!52915)))))

(declare-fun bm!11019 () Bool)

(assert (=> bm!11019 (= call!11019 (contains!825 lt!53554 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104771 () Bool)

(declare-fun lt!53541 () Unit!3170)

(assert (=> b!104771 (= e!68208 lt!53541)))

(declare-fun lt!53547 () ListLongMap!1579)

(assert (=> b!104771 (= lt!53547 (getCurrentListMapNoExtraKeys!110 lt!52915 lt!52891 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53542 () (_ BitVec 64))

(assert (=> b!104771 (= lt!53542 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53553 () (_ BitVec 64))

(assert (=> b!104771 (= lt!53553 (select (arr!2056 lt!52915) #b00000000000000000000000000000000))))

(declare-fun lt!53557 () Unit!3170)

(assert (=> b!104771 (= lt!53557 (addStillContains!73 lt!53547 lt!53542 (zeroValue!2438 newMap!16) lt!53553))))

(assert (=> b!104771 (contains!825 (+!143 lt!53547 (tuple2!2403 lt!53542 (zeroValue!2438 newMap!16))) lt!53553)))

(declare-fun lt!53550 () Unit!3170)

(assert (=> b!104771 (= lt!53550 lt!53557)))

(declare-fun lt!53552 () ListLongMap!1579)

(assert (=> b!104771 (= lt!53552 (getCurrentListMapNoExtraKeys!110 lt!52915 lt!52891 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53551 () (_ BitVec 64))

(assert (=> b!104771 (= lt!53551 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53537 () (_ BitVec 64))

(assert (=> b!104771 (= lt!53537 (select (arr!2056 lt!52915) #b00000000000000000000000000000000))))

(declare-fun lt!53549 () Unit!3170)

(assert (=> b!104771 (= lt!53549 (addApplyDifferent!73 lt!53552 lt!53551 (minValue!2438 newMap!16) lt!53537))))

(assert (=> b!104771 (= (apply!97 (+!143 lt!53552 (tuple2!2403 lt!53551 (minValue!2438 newMap!16))) lt!53537) (apply!97 lt!53552 lt!53537))))

(declare-fun lt!53548 () Unit!3170)

(assert (=> b!104771 (= lt!53548 lt!53549)))

(declare-fun lt!53555 () ListLongMap!1579)

(assert (=> b!104771 (= lt!53555 (getCurrentListMapNoExtraKeys!110 lt!52915 lt!52891 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53556 () (_ BitVec 64))

(assert (=> b!104771 (= lt!53556 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53558 () (_ BitVec 64))

(assert (=> b!104771 (= lt!53558 (select (arr!2056 lt!52915) #b00000000000000000000000000000000))))

(declare-fun lt!53546 () Unit!3170)

(assert (=> b!104771 (= lt!53546 (addApplyDifferent!73 lt!53555 lt!53556 (zeroValue!2438 newMap!16) lt!53558))))

(assert (=> b!104771 (= (apply!97 (+!143 lt!53555 (tuple2!2403 lt!53556 (zeroValue!2438 newMap!16))) lt!53558) (apply!97 lt!53555 lt!53558))))

(declare-fun lt!53544 () Unit!3170)

(assert (=> b!104771 (= lt!53544 lt!53546)))

(declare-fun lt!53543 () ListLongMap!1579)

(assert (=> b!104771 (= lt!53543 (getCurrentListMapNoExtraKeys!110 lt!52915 lt!52891 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53545 () (_ BitVec 64))

(assert (=> b!104771 (= lt!53545 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53540 () (_ BitVec 64))

(assert (=> b!104771 (= lt!53540 (select (arr!2056 lt!52915) #b00000000000000000000000000000000))))

(assert (=> b!104771 (= lt!53541 (addApplyDifferent!73 lt!53543 lt!53545 (minValue!2438 newMap!16) lt!53540))))

(assert (=> b!104771 (= (apply!97 (+!143 lt!53543 (tuple2!2403 lt!53545 (minValue!2438 newMap!16))) lt!53540) (apply!97 lt!53543 lt!53540))))

(declare-fun b!104772 () Bool)

(assert (=> b!104772 (= e!68211 e!68203)))

(declare-fun res!52207 () Bool)

(assert (=> b!104772 (= res!52207 call!11016)))

(assert (=> b!104772 (=> (not res!52207) (not e!68203))))

(declare-fun b!104773 () Bool)

(assert (=> b!104773 (= e!68213 (not call!11019))))

(assert (= (and d!28493 c!18171) b!104768))

(assert (= (and d!28493 (not c!18171)) b!104755))

(assert (= (and b!104755 c!18174) b!104765))

(assert (= (and b!104755 (not c!18174)) b!104757))

(assert (= (and b!104757 c!18175) b!104762))

(assert (= (and b!104757 (not c!18175)) b!104766))

(assert (= (or b!104762 b!104766) bm!11015))

(assert (= (or b!104765 bm!11015) bm!11017))

(assert (= (or b!104765 b!104762) bm!11014))

(assert (= (or b!104768 bm!11017) bm!11018))

(assert (= (or b!104768 bm!11014) bm!11016))

(assert (= (and d!28493 res!52214) b!104763))

(assert (= (and d!28493 c!18170) b!104771))

(assert (= (and d!28493 (not c!18170)) b!104760))

(assert (= (and d!28493 res!52206) b!104756))

(assert (= (and b!104756 res!52211) b!104761))

(assert (= (and b!104756 (not res!52212)) b!104758))

(assert (= (and b!104758 res!52213) b!104770))

(assert (= (and b!104756 res!52209) b!104764))

(assert (= (and b!104764 c!18173) b!104753))

(assert (= (and b!104764 (not c!18173)) b!104773))

(assert (= (and b!104753 res!52210) b!104767))

(assert (= (or b!104753 b!104773) bm!11019))

(assert (= (and b!104764 res!52208) b!104769))

(assert (= (and b!104769 c!18172) b!104772))

(assert (= (and b!104769 (not c!18172)) b!104759))

(assert (= (and b!104772 res!52207) b!104754))

(assert (= (or b!104772 b!104759) bm!11013))

(declare-fun b_lambda!4697 () Bool)

(assert (=> (not b_lambda!4697) (not b!104770)))

(assert (=> b!104770 t!5720))

(declare-fun b_and!6493 () Bool)

(assert (= b_and!6489 (and (=> t!5720 result!3447) b_and!6493)))

(assert (=> b!104770 t!5722))

(declare-fun b_and!6495 () Bool)

(assert (= b_and!6491 (and (=> t!5722 result!3449) b_and!6495)))

(declare-fun m!116683 () Bool)

(assert (=> b!104754 m!116683))

(assert (=> d!28493 m!114517))

(declare-fun m!116685 () Bool)

(assert (=> bm!11019 m!116685))

(declare-fun m!116687 () Bool)

(assert (=> bm!11016 m!116687))

(declare-fun m!116689 () Bool)

(assert (=> b!104763 m!116689))

(assert (=> b!104763 m!116689))

(declare-fun m!116691 () Bool)

(assert (=> b!104763 m!116691))

(declare-fun m!116693 () Bool)

(assert (=> b!104771 m!116693))

(declare-fun m!116695 () Bool)

(assert (=> b!104771 m!116695))

(declare-fun m!116697 () Bool)

(assert (=> b!104771 m!116697))

(declare-fun m!116699 () Bool)

(assert (=> b!104771 m!116699))

(declare-fun m!116701 () Bool)

(assert (=> b!104771 m!116701))

(declare-fun m!116703 () Bool)

(assert (=> b!104771 m!116703))

(declare-fun m!116705 () Bool)

(assert (=> b!104771 m!116705))

(declare-fun m!116707 () Bool)

(assert (=> b!104771 m!116707))

(assert (=> b!104771 m!116705))

(declare-fun m!116709 () Bool)

(assert (=> b!104771 m!116709))

(declare-fun m!116711 () Bool)

(assert (=> b!104771 m!116711))

(declare-fun m!116713 () Bool)

(assert (=> b!104771 m!116713))

(assert (=> b!104771 m!116689))

(assert (=> b!104771 m!116701))

(declare-fun m!116715 () Bool)

(assert (=> b!104771 m!116715))

(declare-fun m!116717 () Bool)

(assert (=> b!104771 m!116717))

(declare-fun m!116719 () Bool)

(assert (=> b!104771 m!116719))

(declare-fun m!116721 () Bool)

(assert (=> b!104771 m!116721))

(assert (=> b!104771 m!116693))

(declare-fun m!116723 () Bool)

(assert (=> b!104771 m!116723))

(assert (=> b!104771 m!116715))

(assert (=> b!104770 m!116689))

(assert (=> b!104770 m!116689))

(declare-fun m!116725 () Bool)

(assert (=> b!104770 m!116725))

(declare-fun m!116727 () Bool)

(assert (=> b!104770 m!116727))

(assert (=> b!104770 m!114563))

(declare-fun m!116729 () Bool)

(assert (=> b!104770 m!116729))

(assert (=> b!104770 m!114563))

(assert (=> b!104770 m!116727))

(declare-fun m!116731 () Bool)

(assert (=> bm!11013 m!116731))

(assert (=> bm!11018 m!116699))

(assert (=> b!104758 m!116689))

(assert (=> b!104758 m!116689))

(declare-fun m!116733 () Bool)

(assert (=> b!104758 m!116733))

(declare-fun m!116735 () Bool)

(assert (=> b!104768 m!116735))

(declare-fun m!116737 () Bool)

(assert (=> b!104767 m!116737))

(assert (=> b!104761 m!116689))

(assert (=> b!104761 m!116689))

(assert (=> b!104761 m!116691))

(assert (=> d!27813 d!28493))

(declare-fun d!28495 () Bool)

(declare-fun e!68217 () Bool)

(assert (=> d!28495 e!68217))

(declare-fun res!52217 () Bool)

(assert (=> d!28495 (=> (not res!52217) (not e!68217))))

(assert (=> d!28495 (= res!52217 (and (bvsge (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) #b00000000000000000000000000000000) (bvslt (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (size!2310 (_keys!4263 newMap!16))) (bvslt (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (size!2311 (_values!2544 newMap!16)))))))

(declare-fun lt!53561 () Unit!3170)

(declare-fun choose!659 (array!4334 array!4336 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 32) (_ BitVec 64) V!3211 Int) Unit!3170)

(assert (=> d!28495 (= lt!53561 (choose!659 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546 (defaultEntry!2561 newMap!16)))))

(assert (=> d!28495 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28495 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!29 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546 (defaultEntry!2561 newMap!16)) lt!53561)))

(declare-fun b!104776 () Bool)

(assert (=> b!104776 (= e!68217 (= (+!143 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (getCurrentListMap!482 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))))))

(assert (= (and d!28495 res!52217) b!104776))

(assert (=> d!28495 m!114187))

(declare-fun m!116739 () Bool)

(assert (=> d!28495 m!116739))

(assert (=> d!28495 m!114517))

(assert (=> b!104776 m!114295))

(assert (=> b!104776 m!114591))

(assert (=> b!104776 m!114295))

(assert (=> b!104776 m!114605))

(assert (=> b!104776 m!114607))

(assert (=> b!104776 m!114593))

(assert (=> d!27813 d!28495))

(declare-fun d!28497 () Bool)

(declare-fun res!52218 () Bool)

(declare-fun e!68218 () Bool)

(assert (=> d!28497 (=> res!52218 e!68218)))

(assert (=> d!28497 (= res!52218 (= (select (arr!2056 lt!52894) #b00000000000000000000000000000000) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> d!28497 (= (arrayContainsKey!0 lt!52894 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b00000000000000000000000000000000) e!68218)))

(declare-fun b!104777 () Bool)

(declare-fun e!68219 () Bool)

(assert (=> b!104777 (= e!68218 e!68219)))

(declare-fun res!52219 () Bool)

(assert (=> b!104777 (=> (not res!52219) (not e!68219))))

(assert (=> b!104777 (= res!52219 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2310 lt!52894)))))

(declare-fun b!104778 () Bool)

(assert (=> b!104778 (= e!68219 (arrayContainsKey!0 lt!52894 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!28497 (not res!52218)) b!104777))

(assert (= (and b!104777 res!52219) b!104778))

(declare-fun m!116741 () Bool)

(assert (=> d!28497 m!116741))

(assert (=> b!104778 m!114187))

(declare-fun m!116743 () Bool)

(assert (=> b!104778 m!116743))

(assert (=> d!27813 d!28497))

(declare-fun bm!11020 () Bool)

(declare-fun call!11023 () Bool)

(declare-fun lt!53579 () ListLongMap!1579)

(assert (=> bm!11020 (= call!11023 (contains!825 lt!53579 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11021 () Bool)

(declare-fun call!11025 () ListLongMap!1579)

(declare-fun call!11028 () ListLongMap!1579)

(assert (=> bm!11021 (= call!11025 call!11028)))

(declare-fun b!104779 () Bool)

(declare-fun e!68231 () Bool)

(declare-fun e!68232 () Bool)

(assert (=> b!104779 (= e!68231 e!68232)))

(declare-fun res!52224 () Bool)

(declare-fun call!11026 () Bool)

(assert (=> b!104779 (= res!52224 call!11026)))

(assert (=> b!104779 (=> (not res!52224) (not e!68232))))

(declare-fun bm!11022 () Bool)

(declare-fun call!11024 () ListLongMap!1579)

(declare-fun call!11029 () ListLongMap!1579)

(assert (=> bm!11022 (= call!11024 call!11029)))

(declare-fun b!104780 () Bool)

(declare-fun e!68221 () Bool)

(assert (=> b!104780 (= e!68221 (= (apply!97 lt!53579 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2438 newMap!16)))))

(declare-fun b!104781 () Bool)

(declare-fun e!68225 () ListLongMap!1579)

(declare-fun e!68230 () ListLongMap!1579)

(assert (=> b!104781 (= e!68225 e!68230)))

(declare-fun c!18180 () Bool)

(assert (=> b!104781 (= c!18180 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104782 () Bool)

(declare-fun res!52223 () Bool)

(declare-fun e!68223 () Bool)

(assert (=> b!104782 (=> (not res!52223) (not e!68223))))

(declare-fun e!68228 () Bool)

(assert (=> b!104782 (= res!52223 e!68228)))

(declare-fun res!52226 () Bool)

(assert (=> b!104782 (=> res!52226 e!68228)))

(declare-fun e!68220 () Bool)

(assert (=> b!104782 (= res!52226 (not e!68220))))

(declare-fun res!52225 () Bool)

(assert (=> b!104782 (=> (not res!52225) (not e!68220))))

(assert (=> b!104782 (= res!52225 (bvslt #b00000000000000000000000000000000 (size!2310 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))))))))

(declare-fun b!104783 () Bool)

(declare-fun c!18181 () Bool)

(assert (=> b!104783 (= c!18181 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68227 () ListLongMap!1579)

(assert (=> b!104783 (= e!68230 e!68227)))

(declare-fun c!18177 () Bool)

(declare-fun bm!11023 () Bool)

(declare-fun call!11027 () ListLongMap!1579)

(assert (=> bm!11023 (= call!11028 (+!143 (ite c!18177 call!11027 (ite c!18180 call!11029 call!11024)) (ite (or c!18177 c!18180) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(declare-fun b!104785 () Bool)

(declare-fun e!68229 () Bool)

(assert (=> b!104785 (= e!68229 (not call!11023))))

(declare-fun b!104786 () Bool)

(declare-fun e!68226 () Unit!3170)

(declare-fun Unit!3234 () Unit!3170)

(assert (=> b!104786 (= e!68226 Unit!3234)))

(declare-fun b!104787 () Bool)

(assert (=> b!104787 (= e!68220 (validKeyInArray!0 (select (arr!2056 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!104788 () Bool)

(assert (=> b!104788 (= e!68227 call!11025)))

(declare-fun e!68224 () Bool)

(declare-fun b!104789 () Bool)

(assert (=> b!104789 (= e!68224 (validKeyInArray!0 (select (arr!2056 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!104790 () Bool)

(declare-fun res!52222 () Bool)

(assert (=> b!104790 (=> (not res!52222) (not e!68223))))

(assert (=> b!104790 (= res!52222 e!68231)))

(declare-fun c!18179 () Bool)

(assert (=> b!104790 (= c!18179 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!104791 () Bool)

(assert (=> b!104791 (= e!68230 call!11025)))

(declare-fun b!104792 () Bool)

(assert (=> b!104792 (= e!68227 call!11024)))

(declare-fun bm!11024 () Bool)

(assert (=> bm!11024 (= call!11029 call!11027)))

(declare-fun b!104793 () Bool)

(assert (=> b!104793 (= e!68232 (= (apply!97 lt!53579 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2438 newMap!16)))))

(declare-fun b!104794 () Bool)

(assert (=> b!104794 (= e!68225 (+!143 call!11028 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))

(declare-fun bm!11025 () Bool)

(assert (=> bm!11025 (= call!11027 (getCurrentListMapNoExtraKeys!110 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun d!28499 () Bool)

(assert (=> d!28499 e!68223))

(declare-fun res!52220 () Bool)

(assert (=> d!28499 (=> (not res!52220) (not e!68223))))

(assert (=> d!28499 (= res!52220 (or (bvsge #b00000000000000000000000000000000 (size!2310 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))))))))))

(declare-fun lt!53564 () ListLongMap!1579)

(assert (=> d!28499 (= lt!53579 lt!53564)))

(declare-fun lt!53563 () Unit!3170)

(assert (=> d!28499 (= lt!53563 e!68226)))

(declare-fun c!18176 () Bool)

(assert (=> d!28499 (= c!18176 e!68224)))

(declare-fun res!52228 () Bool)

(assert (=> d!28499 (=> (not res!52228) (not e!68224))))

(assert (=> d!28499 (= res!52228 (bvslt #b00000000000000000000000000000000 (size!2310 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))))))))

(assert (=> d!28499 (= lt!53564 e!68225)))

(assert (=> d!28499 (= c!18177 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28499 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28499 (= (getCurrentListMap!482 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53579)))

(declare-fun b!104784 () Bool)

(declare-fun e!68222 () Bool)

(assert (=> b!104784 (= e!68228 e!68222)))

(declare-fun res!52227 () Bool)

(assert (=> b!104784 (=> (not res!52227) (not e!68222))))

(assert (=> b!104784 (= res!52227 (contains!825 lt!53579 (select (arr!2056 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!104784 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))))))))

(declare-fun b!104795 () Bool)

(assert (=> b!104795 (= e!68223 e!68229)))

(declare-fun c!18178 () Bool)

(assert (=> b!104795 (= c!18178 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104796 () Bool)

(assert (=> b!104796 (= e!68222 (= (apply!97 lt!53579 (select (arr!2056 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000)) (get!1333 (select (arr!2057 (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104796 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))))))))

(assert (=> b!104796 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))))))))

(declare-fun bm!11026 () Bool)

(assert (=> bm!11026 (= call!11026 (contains!825 lt!53579 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104797 () Bool)

(declare-fun lt!53566 () Unit!3170)

(assert (=> b!104797 (= e!68226 lt!53566)))

(declare-fun lt!53572 () ListLongMap!1579)

(assert (=> b!104797 (= lt!53572 (getCurrentListMapNoExtraKeys!110 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53567 () (_ BitVec 64))

(assert (=> b!104797 (= lt!53567 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53578 () (_ BitVec 64))

(assert (=> b!104797 (= lt!53578 (select (arr!2056 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!53582 () Unit!3170)

(assert (=> b!104797 (= lt!53582 (addStillContains!73 lt!53572 lt!53567 (zeroValue!2438 newMap!16) lt!53578))))

(assert (=> b!104797 (contains!825 (+!143 lt!53572 (tuple2!2403 lt!53567 (zeroValue!2438 newMap!16))) lt!53578)))

(declare-fun lt!53575 () Unit!3170)

(assert (=> b!104797 (= lt!53575 lt!53582)))

(declare-fun lt!53577 () ListLongMap!1579)

(assert (=> b!104797 (= lt!53577 (getCurrentListMapNoExtraKeys!110 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53576 () (_ BitVec 64))

(assert (=> b!104797 (= lt!53576 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53562 () (_ BitVec 64))

(assert (=> b!104797 (= lt!53562 (select (arr!2056 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!53574 () Unit!3170)

(assert (=> b!104797 (= lt!53574 (addApplyDifferent!73 lt!53577 lt!53576 (minValue!2438 newMap!16) lt!53562))))

(assert (=> b!104797 (= (apply!97 (+!143 lt!53577 (tuple2!2403 lt!53576 (minValue!2438 newMap!16))) lt!53562) (apply!97 lt!53577 lt!53562))))

(declare-fun lt!53573 () Unit!3170)

(assert (=> b!104797 (= lt!53573 lt!53574)))

(declare-fun lt!53580 () ListLongMap!1579)

(assert (=> b!104797 (= lt!53580 (getCurrentListMapNoExtraKeys!110 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53581 () (_ BitVec 64))

(assert (=> b!104797 (= lt!53581 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53583 () (_ BitVec 64))

(assert (=> b!104797 (= lt!53583 (select (arr!2056 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!53571 () Unit!3170)

(assert (=> b!104797 (= lt!53571 (addApplyDifferent!73 lt!53580 lt!53581 (zeroValue!2438 newMap!16) lt!53583))))

(assert (=> b!104797 (= (apply!97 (+!143 lt!53580 (tuple2!2403 lt!53581 (zeroValue!2438 newMap!16))) lt!53583) (apply!97 lt!53580 lt!53583))))

(declare-fun lt!53569 () Unit!3170)

(assert (=> b!104797 (= lt!53569 lt!53571)))

(declare-fun lt!53568 () ListLongMap!1579)

(assert (=> b!104797 (= lt!53568 (getCurrentListMapNoExtraKeys!110 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53570 () (_ BitVec 64))

(assert (=> b!104797 (= lt!53570 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53565 () (_ BitVec 64))

(assert (=> b!104797 (= lt!53565 (select (arr!2056 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!104797 (= lt!53566 (addApplyDifferent!73 lt!53568 lt!53570 (minValue!2438 newMap!16) lt!53565))))

(assert (=> b!104797 (= (apply!97 (+!143 lt!53568 (tuple2!2403 lt!53570 (minValue!2438 newMap!16))) lt!53565) (apply!97 lt!53568 lt!53565))))

(declare-fun b!104798 () Bool)

(assert (=> b!104798 (= e!68229 e!68221)))

(declare-fun res!52221 () Bool)

(assert (=> b!104798 (= res!52221 call!11023)))

(assert (=> b!104798 (=> (not res!52221) (not e!68221))))

(declare-fun b!104799 () Bool)

(assert (=> b!104799 (= e!68231 (not call!11026))))

(assert (= (and d!28499 c!18177) b!104794))

(assert (= (and d!28499 (not c!18177)) b!104781))

(assert (= (and b!104781 c!18180) b!104791))

(assert (= (and b!104781 (not c!18180)) b!104783))

(assert (= (and b!104783 c!18181) b!104788))

(assert (= (and b!104783 (not c!18181)) b!104792))

(assert (= (or b!104788 b!104792) bm!11022))

(assert (= (or b!104791 bm!11022) bm!11024))

(assert (= (or b!104791 b!104788) bm!11021))

(assert (= (or b!104794 bm!11024) bm!11025))

(assert (= (or b!104794 bm!11021) bm!11023))

(assert (= (and d!28499 res!52228) b!104789))

(assert (= (and d!28499 c!18176) b!104797))

(assert (= (and d!28499 (not c!18176)) b!104786))

(assert (= (and d!28499 res!52220) b!104782))

(assert (= (and b!104782 res!52225) b!104787))

(assert (= (and b!104782 (not res!52226)) b!104784))

(assert (= (and b!104784 res!52227) b!104796))

(assert (= (and b!104782 res!52223) b!104790))

(assert (= (and b!104790 c!18179) b!104779))

(assert (= (and b!104790 (not c!18179)) b!104799))

(assert (= (and b!104779 res!52224) b!104793))

(assert (= (or b!104779 b!104799) bm!11026))

(assert (= (and b!104790 res!52222) b!104795))

(assert (= (and b!104795 c!18178) b!104798))

(assert (= (and b!104795 (not c!18178)) b!104785))

(assert (= (and b!104798 res!52221) b!104780))

(assert (= (or b!104798 b!104785) bm!11020))

(declare-fun b_lambda!4699 () Bool)

(assert (=> (not b_lambda!4699) (not b!104796)))

(assert (=> b!104796 t!5720))

(declare-fun b_and!6497 () Bool)

(assert (= b_and!6493 (and (=> t!5720 result!3447) b_and!6497)))

(assert (=> b!104796 t!5722))

(declare-fun b_and!6499 () Bool)

(assert (= b_and!6495 (and (=> t!5722 result!3449) b_and!6499)))

(declare-fun m!116745 () Bool)

(assert (=> b!104780 m!116745))

(assert (=> d!28499 m!114517))

(declare-fun m!116747 () Bool)

(assert (=> bm!11026 m!116747))

(declare-fun m!116749 () Bool)

(assert (=> bm!11023 m!116749))

(assert (=> b!104789 m!116641))

(assert (=> b!104789 m!116641))

(assert (=> b!104789 m!116643))

(declare-fun m!116751 () Bool)

(assert (=> b!104797 m!116751))

(declare-fun m!116753 () Bool)

(assert (=> b!104797 m!116753))

(declare-fun m!116755 () Bool)

(assert (=> b!104797 m!116755))

(declare-fun m!116757 () Bool)

(assert (=> b!104797 m!116757))

(declare-fun m!116759 () Bool)

(assert (=> b!104797 m!116759))

(declare-fun m!116761 () Bool)

(assert (=> b!104797 m!116761))

(declare-fun m!116763 () Bool)

(assert (=> b!104797 m!116763))

(declare-fun m!116765 () Bool)

(assert (=> b!104797 m!116765))

(assert (=> b!104797 m!116763))

(declare-fun m!116767 () Bool)

(assert (=> b!104797 m!116767))

(declare-fun m!116769 () Bool)

(assert (=> b!104797 m!116769))

(declare-fun m!116771 () Bool)

(assert (=> b!104797 m!116771))

(assert (=> b!104797 m!116641))

(assert (=> b!104797 m!116759))

(declare-fun m!116773 () Bool)

(assert (=> b!104797 m!116773))

(declare-fun m!116775 () Bool)

(assert (=> b!104797 m!116775))

(declare-fun m!116777 () Bool)

(assert (=> b!104797 m!116777))

(declare-fun m!116779 () Bool)

(assert (=> b!104797 m!116779))

(assert (=> b!104797 m!116751))

(declare-fun m!116781 () Bool)

(assert (=> b!104797 m!116781))

(assert (=> b!104797 m!116773))

(assert (=> b!104796 m!116641))

(assert (=> b!104796 m!116641))

(declare-fun m!116783 () Bool)

(assert (=> b!104796 m!116783))

(declare-fun m!116785 () Bool)

(assert (=> b!104796 m!116785))

(assert (=> b!104796 m!114563))

(declare-fun m!116787 () Bool)

(assert (=> b!104796 m!116787))

(assert (=> b!104796 m!114563))

(assert (=> b!104796 m!116785))

(declare-fun m!116789 () Bool)

(assert (=> bm!11020 m!116789))

(assert (=> bm!11025 m!116757))

(assert (=> b!104784 m!116641))

(assert (=> b!104784 m!116641))

(declare-fun m!116791 () Bool)

(assert (=> b!104784 m!116791))

(declare-fun m!116793 () Bool)

(assert (=> b!104794 m!116793))

(declare-fun m!116795 () Bool)

(assert (=> b!104793 m!116795))

(assert (=> b!104787 m!116641))

(assert (=> b!104787 m!116641))

(assert (=> b!104787 m!116643))

(assert (=> d!27813 d!28499))

(declare-fun d!28501 () Bool)

(assert (=> d!28501 (arrayContainsKey!0 lt!52894 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!53586 () Unit!3170)

(declare-fun choose!13 (array!4334 (_ BitVec 64) (_ BitVec 32)) Unit!3170)

(assert (=> d!28501 (= lt!53586 (choose!13 lt!52894 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676))))))

(assert (=> d!28501 (bvsge (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) #b00000000000000000000000000000000)))

(assert (=> d!28501 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!52894 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676))) lt!53586)))

(declare-fun bs!4308 () Bool)

(assert (= bs!4308 d!28501))

(assert (=> bs!4308 m!114187))

(assert (=> bs!4308 m!114613))

(assert (=> bs!4308 m!114187))

(declare-fun m!116797 () Bool)

(assert (=> bs!4308 m!116797))

(assert (=> d!27813 d!28501))

(assert (=> d!27813 d!28459))

(assert (=> d!27813 d!28349))

(assert (=> d!27813 d!27811))

(declare-fun d!28503 () Bool)

(declare-fun e!68235 () Bool)

(assert (=> d!28503 e!68235))

(declare-fun res!52231 () Bool)

(assert (=> d!28503 (=> (not res!52231) (not e!68235))))

(assert (=> d!28503 (= res!52231 (and (bvsge (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) #b00000000000000000000000000000000) (bvslt (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (size!2310 (_keys!4263 newMap!16)))))))

(declare-fun lt!53589 () Unit!3170)

(declare-fun choose!102 ((_ BitVec 64) array!4334 (_ BitVec 32) (_ BitVec 32)) Unit!3170)

(assert (=> d!28503 (= lt!53589 (choose!102 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (_keys!4263 newMap!16) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (mask!6697 newMap!16)))))

(assert (=> d!28503 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28503 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (_keys!4263 newMap!16) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (mask!6697 newMap!16)) lt!53589)))

(declare-fun b!104802 () Bool)

(assert (=> b!104802 (= e!68235 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) (mask!6697 newMap!16)))))

(assert (= (and d!28503 res!52231) b!104802))

(assert (=> d!28503 m!114187))

(declare-fun m!116799 () Bool)

(assert (=> d!28503 m!116799))

(assert (=> d!28503 m!114517))

(assert (=> b!104802 m!114593))

(assert (=> b!104802 m!114583))

(assert (=> d!27813 d!28503))

(declare-fun b!104803 () Bool)

(declare-fun e!68237 () (_ BitVec 32))

(declare-fun e!68236 () (_ BitVec 32))

(assert (=> b!104803 (= e!68237 e!68236)))

(declare-fun c!18182 () Bool)

(assert (=> b!104803 (= c!18182 (validKeyInArray!0 (select (arr!2056 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun call!11030 () (_ BitVec 32))

(declare-fun bm!11027 () Bool)

(assert (=> bm!11027 (= call!11030 (arrayCountValidKeys!0 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104804 () Bool)

(assert (=> b!104804 (= e!68237 #b00000000000000000000000000000000)))

(declare-fun d!28505 () Bool)

(declare-fun lt!53590 () (_ BitVec 32))

(assert (=> d!28505 (and (bvsge lt!53590 #b00000000000000000000000000000000) (bvsle lt!53590 (bvsub (size!2310 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!28505 (= lt!53590 e!68237)))

(declare-fun c!18183 () Bool)

(assert (=> d!28505 (= c!18183 (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!28505 (and (bvsle #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2310 (_keys!4263 newMap!16)) (size!2310 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))))))))

(assert (=> d!28505 (= (arrayCountValidKeys!0 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))) lt!53590)))

(declare-fun b!104805 () Bool)

(assert (=> b!104805 (= e!68236 (bvadd #b00000000000000000000000000000001 call!11030))))

(declare-fun b!104806 () Bool)

(assert (=> b!104806 (= e!68236 call!11030)))

(assert (= (and d!28505 c!18183) b!104804))

(assert (= (and d!28505 (not c!18183)) b!104803))

(assert (= (and b!104803 c!18182) b!104805))

(assert (= (and b!104803 (not c!18182)) b!104806))

(assert (= (or b!104805 b!104806) bm!11027))

(assert (=> b!104803 m!116641))

(assert (=> b!104803 m!116641))

(assert (=> b!104803 m!116643))

(declare-fun m!116801 () Bool)

(assert (=> bm!11027 m!116801))

(assert (=> d!27813 d!28505))

(declare-fun b!104807 () Bool)

(declare-fun e!68238 () Bool)

(declare-fun e!68241 () Bool)

(assert (=> b!104807 (= e!68238 e!68241)))

(declare-fun c!18184 () Bool)

(assert (=> b!104807 (= c!18184 (validKeyInArray!0 (select (arr!2056 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16)))) lt!52888)))))

(declare-fun e!68239 () Bool)

(declare-fun b!104808 () Bool)

(assert (=> b!104808 (= e!68239 (contains!827 lt!52889 (select (arr!2056 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16)))) lt!52888)))))

(declare-fun b!104809 () Bool)

(declare-fun call!11031 () Bool)

(assert (=> b!104809 (= e!68241 call!11031)))

(declare-fun b!104810 () Bool)

(declare-fun e!68240 () Bool)

(assert (=> b!104810 (= e!68240 e!68238)))

(declare-fun res!52232 () Bool)

(assert (=> b!104810 (=> (not res!52232) (not e!68238))))

(assert (=> b!104810 (= res!52232 (not e!68239))))

(declare-fun res!52233 () Bool)

(assert (=> b!104810 (=> (not res!52233) (not e!68239))))

(assert (=> b!104810 (= res!52233 (validKeyInArray!0 (select (arr!2056 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16)))) lt!52888)))))

(declare-fun b!104811 () Bool)

(assert (=> b!104811 (= e!68241 call!11031)))

(declare-fun bm!11028 () Bool)

(assert (=> bm!11028 (= call!11031 (arrayNoDuplicates!0 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) (bvadd lt!52888 #b00000000000000000000000000000001) (ite c!18184 (Cons!1634 (select (arr!2056 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16)))) lt!52888) lt!52889) lt!52889)))))

(declare-fun d!28507 () Bool)

(declare-fun res!52234 () Bool)

(assert (=> d!28507 (=> res!52234 e!68240)))

(assert (=> d!28507 (= res!52234 (bvsge lt!52888 (size!2310 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))))))))

(assert (=> d!28507 (= (arrayNoDuplicates!0 (array!4335 (store (arr!2056 (_keys!4263 newMap!16)) (ite c!17811 (index!3222 lt!52676) (index!3219 lt!52676)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (size!2310 (_keys!4263 newMap!16))) lt!52888 lt!52889) e!68240)))

(assert (= (and d!28507 (not res!52234)) b!104810))

(assert (= (and b!104810 res!52233) b!104808))

(assert (= (and b!104810 res!52232) b!104807))

(assert (= (and b!104807 c!18184) b!104809))

(assert (= (and b!104807 (not c!18184)) b!104811))

(assert (= (or b!104809 b!104811) bm!11028))

(declare-fun m!116803 () Bool)

(assert (=> b!104807 m!116803))

(assert (=> b!104807 m!116803))

(declare-fun m!116805 () Bool)

(assert (=> b!104807 m!116805))

(assert (=> b!104808 m!116803))

(assert (=> b!104808 m!116803))

(declare-fun m!116807 () Bool)

(assert (=> b!104808 m!116807))

(assert (=> b!104810 m!116803))

(assert (=> b!104810 m!116803))

(assert (=> b!104810 m!116805))

(assert (=> bm!11028 m!116803))

(declare-fun m!116809 () Bool)

(assert (=> bm!11028 m!116809))

(assert (=> d!27813 d!28507))

(assert (=> d!28007 d!28005))

(declare-fun d!28509 () Bool)

(assert (=> d!28509 (= (getValueByKey!154 lt!52769 (_1!1211 lt!52547)) (Some!159 (_2!1211 lt!52547)))))

(assert (=> d!28509 true))

(declare-fun _$22!429 () Unit!3170)

(assert (=> d!28509 (= (choose!650 lt!52769 (_1!1211 lt!52547) (_2!1211 lt!52547)) _$22!429)))

(declare-fun bs!4309 () Bool)

(assert (= bs!4309 d!28509))

(assert (=> bs!4309 m!114435))

(assert (=> d!28007 d!28509))

(declare-fun d!28511 () Bool)

(declare-fun res!52235 () Bool)

(declare-fun e!68242 () Bool)

(assert (=> d!28511 (=> res!52235 e!68242)))

(assert (=> d!28511 (= res!52235 (or ((_ is Nil!1634) lt!52769) ((_ is Nil!1634) (t!5711 lt!52769))))))

(assert (=> d!28511 (= (isStrictlySorted!303 lt!52769) e!68242)))

(declare-fun b!104812 () Bool)

(declare-fun e!68243 () Bool)

(assert (=> b!104812 (= e!68242 e!68243)))

(declare-fun res!52236 () Bool)

(assert (=> b!104812 (=> (not res!52236) (not e!68243))))

(assert (=> b!104812 (= res!52236 (bvslt (_1!1211 (h!2229 lt!52769)) (_1!1211 (h!2229 (t!5711 lt!52769)))))))

(declare-fun b!104813 () Bool)

(assert (=> b!104813 (= e!68243 (isStrictlySorted!303 (t!5711 lt!52769)))))

(assert (= (and d!28511 (not res!52235)) b!104812))

(assert (= (and b!104812 res!52236) b!104813))

(declare-fun m!116811 () Bool)

(assert (=> b!104813 m!116811))

(assert (=> d!28007 d!28511))

(declare-fun d!28513 () Bool)

(assert (=> d!28513 (= (apply!97 lt!52823 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1336 (getValueByKey!154 (toList!805 lt!52823) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4310 () Bool)

(assert (= bs!4310 d!28513))

(assert (=> bs!4310 m!114523))

(assert (=> bs!4310 m!116503))

(assert (=> bs!4310 m!116503))

(declare-fun m!116813 () Bool)

(assert (=> bs!4310 m!116813))

(assert (=> b!103643 d!28513))

(declare-fun d!28515 () Bool)

(declare-fun c!18185 () Bool)

(assert (=> d!28515 (= c!18185 ((_ is ValueCellFull!993) (select (arr!2057 (_values!2544 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!68244 () V!3211)

(assert (=> d!28515 (= (get!1333 (select (arr!2057 (_values!2544 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!68244)))

(declare-fun b!104814 () Bool)

(assert (=> b!104814 (= e!68244 (get!1334 (select (arr!2057 (_values!2544 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104815 () Bool)

(assert (=> b!104815 (= e!68244 (get!1335 (select (arr!2057 (_values!2544 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28515 c!18185) b!104814))

(assert (= (and d!28515 (not c!18185)) b!104815))

(assert (=> b!104814 m!114561))

(assert (=> b!104814 m!114563))

(declare-fun m!116815 () Bool)

(assert (=> b!104814 m!116815))

(assert (=> b!104815 m!114561))

(assert (=> b!104815 m!114563))

(declare-fun m!116817 () Bool)

(assert (=> b!104815 m!116817))

(assert (=> b!103643 d!28515))

(declare-fun d!28517 () Bool)

(assert (=> d!28517 (= (+!143 (getCurrentListMap!482 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (getCurrentListMap!482 (_keys!4263 newMap!16) (array!4337 (store (arr!2057 (_values!2544 newMap!16)) (index!3220 lt!52676) (ValueCellFull!993 lt!52546)) (size!2311 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(assert (=> d!28517 true))

(declare-fun _$5!107 () Unit!3170)

(assert (=> d!28517 (= (choose!653 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (index!3220 lt!52676) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546 (defaultEntry!2561 newMap!16)) _$5!107)))

(declare-fun bs!4311 () Bool)

(assert (= bs!4311 d!28517))

(assert (=> bs!4311 m!114295))

(assert (=> bs!4311 m!114295))

(assert (=> bs!4311 m!114605))

(assert (=> bs!4311 m!114323))

(assert (=> bs!4311 m!115109))

(assert (=> d!27955 d!28517))

(assert (=> d!27955 d!28049))

(assert (=> d!27943 d!27949))

(declare-fun bm!11033 () Bool)

(declare-fun call!11037 () Bool)

(assert (=> bm!11033 (= call!11037 (arrayContainsKey!0 (_keys!4263 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!104832 () Bool)

(declare-fun e!68253 () Bool)

(declare-fun e!68255 () Bool)

(assert (=> b!104832 (= e!68253 e!68255)))

(declare-fun res!52246 () Bool)

(declare-fun call!11036 () Bool)

(assert (=> b!104832 (= res!52246 call!11036)))

(assert (=> b!104832 (=> (not res!52246) (not e!68255))))

(declare-fun b!104833 () Bool)

(declare-fun e!68254 () Bool)

(assert (=> b!104833 (= e!68254 (not call!11037))))

(declare-fun b!104834 () Bool)

(assert (=> b!104834 (= e!68255 (not call!11037))))

(declare-fun d!28519 () Bool)

(assert (=> d!28519 e!68253))

(declare-fun c!18191 () Bool)

(declare-fun lt!53593 () SeekEntryResult!268)

(assert (=> d!28519 (= c!18191 ((_ is MissingZero!268) lt!53593))))

(assert (=> d!28519 (= lt!53593 (seekEntryOrOpen!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(assert (=> d!28519 true))

(declare-fun _$34!883 () Unit!3170)

(assert (=> d!28519 (= (choose!651 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)) _$34!883)))

(declare-fun b!104835 () Bool)

(declare-fun res!52247 () Bool)

(assert (=> b!104835 (=> (not res!52247) (not e!68254))))

(assert (=> b!104835 (= res!52247 call!11036)))

(declare-fun e!68256 () Bool)

(assert (=> b!104835 (= e!68256 e!68254)))

(declare-fun b!104836 () Bool)

(declare-fun res!52248 () Bool)

(assert (=> b!104836 (= res!52248 (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3219 lt!53593)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104836 (=> (not res!52248) (not e!68255))))

(declare-fun bm!11034 () Bool)

(assert (=> bm!11034 (= call!11036 (inRange!0 (ite c!18191 (index!3219 lt!53593) (index!3222 lt!53593)) (mask!6697 newMap!16)))))

(declare-fun b!104837 () Bool)

(assert (=> b!104837 (= e!68256 ((_ is Undefined!268) lt!53593))))

(declare-fun b!104838 () Bool)

(assert (=> b!104838 (= e!68253 e!68256)))

(declare-fun c!18190 () Bool)

(assert (=> b!104838 (= c!18190 ((_ is MissingVacant!268) lt!53593))))

(declare-fun b!104839 () Bool)

(declare-fun res!52245 () Bool)

(assert (=> b!104839 (=> (not res!52245) (not e!68254))))

(assert (=> b!104839 (= res!52245 (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3222 lt!53593)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28519 c!18191) b!104832))

(assert (= (and d!28519 (not c!18191)) b!104838))

(assert (= (and b!104832 res!52246) b!104836))

(assert (= (and b!104836 res!52248) b!104834))

(assert (= (and b!104838 c!18190) b!104835))

(assert (= (and b!104838 (not c!18190)) b!104837))

(assert (= (and b!104835 res!52247) b!104839))

(assert (= (and b!104839 res!52245) b!104833))

(assert (= (or b!104832 b!104835) bm!11034))

(assert (= (or b!104834 b!104833) bm!11033))

(assert (=> bm!11033 m!114187))

(assert (=> bm!11033 m!114307))

(assert (=> d!28519 m!114187))

(assert (=> d!28519 m!114305))

(declare-fun m!116819 () Bool)

(assert (=> b!104839 m!116819))

(declare-fun m!116821 () Bool)

(assert (=> bm!11034 m!116821))

(declare-fun m!116823 () Bool)

(assert (=> b!104836 m!116823))

(assert (=> d!27943 d!28519))

(assert (=> d!27943 d!28049))

(declare-fun d!28521 () Bool)

(assert (=> d!28521 (arrayContainsKey!0 (_keys!4263 newMap!16) lt!53148 #b00000000000000000000000000000000)))

(declare-fun lt!53594 () Unit!3170)

(assert (=> d!28521 (= lt!53594 (choose!13 (_keys!4263 newMap!16) lt!53148 #b00000000000000000000000000000000))))

(assert (=> d!28521 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!28521 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4263 newMap!16) lt!53148 #b00000000000000000000000000000000) lt!53594)))

(declare-fun bs!4312 () Bool)

(assert (= bs!4312 d!28521))

(assert (=> bs!4312 m!115283))

(declare-fun m!116825 () Bool)

(assert (=> bs!4312 m!116825))

(assert (=> b!104062 d!28521))

(declare-fun d!28523 () Bool)

(declare-fun res!52249 () Bool)

(declare-fun e!68257 () Bool)

(assert (=> d!28523 (=> res!52249 e!68257)))

(assert (=> d!28523 (= res!52249 (= (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) lt!53148))))

(assert (=> d!28523 (= (arrayContainsKey!0 (_keys!4263 newMap!16) lt!53148 #b00000000000000000000000000000000) e!68257)))

(declare-fun b!104840 () Bool)

(declare-fun e!68258 () Bool)

(assert (=> b!104840 (= e!68257 e!68258)))

(declare-fun res!52250 () Bool)

(assert (=> b!104840 (=> (not res!52250) (not e!68258))))

(assert (=> b!104840 (= res!52250 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104841 () Bool)

(assert (=> b!104841 (= e!68258 (arrayContainsKey!0 (_keys!4263 newMap!16) lt!53148 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!28523 (not res!52249)) b!104840))

(assert (= (and b!104840 res!52250) b!104841))

(assert (=> d!28523 m!114523))

(declare-fun m!116827 () Bool)

(assert (=> b!104841 m!116827))

(assert (=> b!104062 d!28523))

(declare-fun b!104842 () Bool)

(declare-fun e!68260 () SeekEntryResult!268)

(declare-fun lt!53597 () SeekEntryResult!268)

(assert (=> b!104842 (= e!68260 (MissingZero!268 (index!3221 lt!53597)))))

(declare-fun b!104843 () Bool)

(declare-fun e!68261 () SeekEntryResult!268)

(assert (=> b!104843 (= e!68261 (Found!268 (index!3221 lt!53597)))))

(declare-fun b!104844 () Bool)

(assert (=> b!104844 (= e!68260 (seekKeyOrZeroReturnVacant!0 (x!13510 lt!53597) (index!3221 lt!53597) (index!3221 lt!53597) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun b!104845 () Bool)

(declare-fun e!68259 () SeekEntryResult!268)

(assert (=> b!104845 (= e!68259 e!68261)))

(declare-fun lt!53595 () (_ BitVec 64))

(assert (=> b!104845 (= lt!53595 (select (arr!2056 (_keys!4263 newMap!16)) (index!3221 lt!53597)))))

(declare-fun c!18194 () Bool)

(assert (=> b!104845 (= c!18194 (= lt!53595 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104846 () Bool)

(declare-fun c!18193 () Bool)

(assert (=> b!104846 (= c!18193 (= lt!53595 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104846 (= e!68261 e!68260)))

(declare-fun d!28525 () Bool)

(declare-fun lt!53596 () SeekEntryResult!268)

(assert (=> d!28525 (and (or ((_ is Undefined!268) lt!53596) (not ((_ is Found!268) lt!53596)) (and (bvsge (index!3220 lt!53596) #b00000000000000000000000000000000) (bvslt (index!3220 lt!53596) (size!2310 (_keys!4263 newMap!16))))) (or ((_ is Undefined!268) lt!53596) ((_ is Found!268) lt!53596) (not ((_ is MissingZero!268) lt!53596)) (and (bvsge (index!3219 lt!53596) #b00000000000000000000000000000000) (bvslt (index!3219 lt!53596) (size!2310 (_keys!4263 newMap!16))))) (or ((_ is Undefined!268) lt!53596) ((_ is Found!268) lt!53596) ((_ is MissingZero!268) lt!53596) (not ((_ is MissingVacant!268) lt!53596)) (and (bvsge (index!3222 lt!53596) #b00000000000000000000000000000000) (bvslt (index!3222 lt!53596) (size!2310 (_keys!4263 newMap!16))))) (or ((_ is Undefined!268) lt!53596) (ite ((_ is Found!268) lt!53596) (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!53596)) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!268) lt!53596) (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3219 lt!53596)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!268) lt!53596) (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3222 lt!53596)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28525 (= lt!53596 e!68259)))

(declare-fun c!18192 () Bool)

(assert (=> d!28525 (= c!18192 (and ((_ is Intermediate!268) lt!53597) (undefined!1080 lt!53597)))))

(assert (=> d!28525 (= lt!53597 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) (mask!6697 newMap!16)) (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(assert (=> d!28525 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28525 (= (seekEntryOrOpen!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) (_keys!4263 newMap!16) (mask!6697 newMap!16)) lt!53596)))

(declare-fun b!104847 () Bool)

(assert (=> b!104847 (= e!68259 Undefined!268)))

(assert (= (and d!28525 c!18192) b!104847))

(assert (= (and d!28525 (not c!18192)) b!104845))

(assert (= (and b!104845 c!18194) b!104843))

(assert (= (and b!104845 (not c!18194)) b!104846))

(assert (= (and b!104846 c!18193) b!104842))

(assert (= (and b!104846 (not c!18193)) b!104844))

(assert (=> b!104844 m!114523))

(declare-fun m!116829 () Bool)

(assert (=> b!104844 m!116829))

(declare-fun m!116831 () Bool)

(assert (=> b!104845 m!116831))

(declare-fun m!116833 () Bool)

(assert (=> d!28525 m!116833))

(assert (=> d!28525 m!114523))

(declare-fun m!116835 () Bool)

(assert (=> d!28525 m!116835))

(assert (=> d!28525 m!116835))

(assert (=> d!28525 m!114523))

(declare-fun m!116837 () Bool)

(assert (=> d!28525 m!116837))

(assert (=> d!28525 m!114517))

(declare-fun m!116839 () Bool)

(assert (=> d!28525 m!116839))

(declare-fun m!116841 () Bool)

(assert (=> d!28525 m!116841))

(assert (=> b!104062 d!28525))

(declare-fun d!28527 () Bool)

(assert (=> d!28527 (isDefined!108 (getValueByKey!154 (toList!805 lt!52789) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!53598 () Unit!3170)

(assert (=> d!28527 (= lt!53598 (choose!656 (toList!805 lt!52789) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!68262 () Bool)

(assert (=> d!28527 e!68262))

(declare-fun res!52251 () Bool)

(assert (=> d!28527 (=> (not res!52251) (not e!68262))))

(assert (=> d!28527 (= res!52251 (isStrictlySorted!303 (toList!805 lt!52789)))))

(assert (=> d!28527 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52789) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!53598)))

(declare-fun b!104848 () Bool)

(assert (=> b!104848 (= e!68262 (containsKey!158 (toList!805 lt!52789) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!28527 res!52251) b!104848))

(assert (=> d!28527 m!114355))

(assert (=> d!28527 m!114991))

(assert (=> d!28527 m!114991))

(assert (=> d!28527 m!114993))

(assert (=> d!28527 m!114355))

(declare-fun m!116843 () Bool)

(assert (=> d!28527 m!116843))

(assert (=> d!28527 m!115405))

(assert (=> b!104848 m!114355))

(assert (=> b!104848 m!114987))

(assert (=> b!103880 d!28527))

(assert (=> b!103880 d!28325))

(assert (=> b!103880 d!28327))

(declare-fun d!28529 () Bool)

(declare-fun lt!53599 () Bool)

(assert (=> d!28529 (= lt!53599 (select (content!107 (toList!805 lt!52948)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))

(declare-fun e!68264 () Bool)

(assert (=> d!28529 (= lt!53599 e!68264)))

(declare-fun res!52252 () Bool)

(assert (=> d!28529 (=> (not res!52252) (not e!68264))))

(assert (=> d!28529 (= res!52252 ((_ is Cons!1633) (toList!805 lt!52948)))))

(assert (=> d!28529 (= (contains!828 (toList!805 lt!52948) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) lt!53599)))

(declare-fun b!104849 () Bool)

(declare-fun e!68263 () Bool)

(assert (=> b!104849 (= e!68264 e!68263)))

(declare-fun res!52253 () Bool)

(assert (=> b!104849 (=> res!52253 e!68263)))

(assert (=> b!104849 (= res!52253 (= (h!2229 (toList!805 lt!52948)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))

(declare-fun b!104850 () Bool)

(assert (=> b!104850 (= e!68263 (contains!828 (t!5711 (toList!805 lt!52948)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))

(assert (= (and d!28529 res!52252) b!104849))

(assert (= (and b!104849 (not res!52253)) b!104850))

(declare-fun m!116845 () Bool)

(assert (=> d!28529 m!116845))

(declare-fun m!116847 () Bool)

(assert (=> d!28529 m!116847))

(declare-fun m!116849 () Bool)

(assert (=> b!104850 m!116849))

(assert (=> b!103747 d!28529))

(declare-fun b!104852 () Bool)

(declare-fun e!68265 () Option!160)

(declare-fun e!68266 () Option!160)

(assert (=> b!104852 (= e!68265 e!68266)))

(declare-fun c!18196 () Bool)

(assert (=> b!104852 (= c!18196 (and ((_ is Cons!1633) (t!5711 lt!52802)) (not (= (_1!1211 (h!2229 (t!5711 lt!52802))) (_1!1211 lt!52551)))))))

(declare-fun b!104851 () Bool)

(assert (=> b!104851 (= e!68265 (Some!159 (_2!1211 (h!2229 (t!5711 lt!52802)))))))

(declare-fun b!104853 () Bool)

(assert (=> b!104853 (= e!68266 (getValueByKey!154 (t!5711 (t!5711 lt!52802)) (_1!1211 lt!52551)))))

(declare-fun d!28531 () Bool)

(declare-fun c!18195 () Bool)

(assert (=> d!28531 (= c!18195 (and ((_ is Cons!1633) (t!5711 lt!52802)) (= (_1!1211 (h!2229 (t!5711 lt!52802))) (_1!1211 lt!52551))))))

(assert (=> d!28531 (= (getValueByKey!154 (t!5711 lt!52802) (_1!1211 lt!52551)) e!68265)))

(declare-fun b!104854 () Bool)

(assert (=> b!104854 (= e!68266 None!158)))

(assert (= (and d!28531 c!18195) b!104851))

(assert (= (and d!28531 (not c!18195)) b!104852))

(assert (= (and b!104852 c!18196) b!104853))

(assert (= (and b!104852 (not c!18196)) b!104854))

(declare-fun m!116851 () Bool)

(assert (=> b!104853 m!116851))

(assert (=> b!103862 d!28531))

(declare-fun b!104855 () Bool)

(declare-fun e!68267 () Bool)

(declare-fun e!68270 () Bool)

(assert (=> b!104855 (= e!68267 e!68270)))

(declare-fun c!18197 () Bool)

(assert (=> b!104855 (= c!18197 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!104856 () Bool)

(declare-fun e!68268 () Bool)

(assert (=> b!104856 (= e!68268 (contains!827 (ite c!17938 (Cons!1634 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) Nil!1635) Nil!1635) (select (arr!2056 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!104857 () Bool)

(declare-fun call!11038 () Bool)

(assert (=> b!104857 (= e!68270 call!11038)))

(declare-fun b!104858 () Bool)

(declare-fun e!68269 () Bool)

(assert (=> b!104858 (= e!68269 e!68267)))

(declare-fun res!52254 () Bool)

(assert (=> b!104858 (=> (not res!52254) (not e!68267))))

(assert (=> b!104858 (= res!52254 (not e!68268))))

(declare-fun res!52255 () Bool)

(assert (=> b!104858 (=> (not res!52255) (not e!68268))))

(assert (=> b!104858 (= res!52255 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!104859 () Bool)

(assert (=> b!104859 (= e!68270 call!11038)))

(declare-fun bm!11035 () Bool)

(assert (=> bm!11035 (= call!11038 (arrayNoDuplicates!0 (_keys!4263 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18197 (Cons!1634 (select (arr!2056 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!17938 (Cons!1634 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) Nil!1635) Nil!1635)) (ite c!17938 (Cons!1634 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) Nil!1635) Nil!1635))))))

(declare-fun d!28533 () Bool)

(declare-fun res!52256 () Bool)

(assert (=> d!28533 (=> res!52256 e!68269)))

(assert (=> d!28533 (= res!52256 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!28533 (= (arrayNoDuplicates!0 (_keys!4263 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!17938 (Cons!1634 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) Nil!1635) Nil!1635)) e!68269)))

(assert (= (and d!28533 (not res!52256)) b!104858))

(assert (= (and b!104858 res!52255) b!104856))

(assert (= (and b!104858 res!52254) b!104855))

(assert (= (and b!104855 c!18197) b!104857))

(assert (= (and b!104855 (not c!18197)) b!104859))

(assert (= (or b!104857 b!104859) bm!11035))

(assert (=> b!104855 m!115393))

(assert (=> b!104855 m!115393))

(declare-fun m!116853 () Bool)

(assert (=> b!104855 m!116853))

(assert (=> b!104856 m!115393))

(assert (=> b!104856 m!115393))

(declare-fun m!116855 () Bool)

(assert (=> b!104856 m!116855))

(assert (=> b!104858 m!115393))

(assert (=> b!104858 m!115393))

(assert (=> b!104858 m!116853))

(assert (=> bm!11035 m!115393))

(declare-fun m!116857 () Bool)

(assert (=> bm!11035 m!116857))

(assert (=> bm!10922 d!28533))

(declare-fun lt!53600 () Bool)

(declare-fun d!28535 () Bool)

(assert (=> d!28535 (= lt!53600 (select (content!107 (toList!805 lt!52993)) (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun e!68272 () Bool)

(assert (=> d!28535 (= lt!53600 e!68272)))

(declare-fun res!52257 () Bool)

(assert (=> d!28535 (=> (not res!52257) (not e!68272))))

(assert (=> d!28535 (= res!52257 ((_ is Cons!1633) (toList!805 lt!52993)))))

(assert (=> d!28535 (= (contains!828 (toList!805 lt!52993) (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!53600)))

(declare-fun b!104860 () Bool)

(declare-fun e!68271 () Bool)

(assert (=> b!104860 (= e!68272 e!68271)))

(declare-fun res!52258 () Bool)

(assert (=> b!104860 (=> res!52258 e!68271)))

(assert (=> b!104860 (= res!52258 (= (h!2229 (toList!805 lt!52993)) (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!104861 () Bool)

(assert (=> b!104861 (= e!68271 (contains!828 (t!5711 (toList!805 lt!52993)) (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(assert (= (and d!28535 res!52257) b!104860))

(assert (= (and b!104860 (not res!52258)) b!104861))

(declare-fun m!116859 () Bool)

(assert (=> d!28535 m!116859))

(declare-fun m!116861 () Bool)

(assert (=> d!28535 m!116861))

(declare-fun m!116863 () Bool)

(assert (=> b!104861 m!116863))

(assert (=> b!103801 d!28535))

(declare-fun d!28537 () Bool)

(declare-fun res!52259 () Bool)

(declare-fun e!68273 () Bool)

(assert (=> d!28537 (=> res!52259 e!68273)))

(assert (=> d!28537 (= res!52259 (or ((_ is Nil!1634) lt!53041) ((_ is Nil!1634) (t!5711 lt!53041))))))

(assert (=> d!28537 (= (isStrictlySorted!303 lt!53041) e!68273)))

(declare-fun b!104862 () Bool)

(declare-fun e!68274 () Bool)

(assert (=> b!104862 (= e!68273 e!68274)))

(declare-fun res!52260 () Bool)

(assert (=> b!104862 (=> (not res!52260) (not e!68274))))

(assert (=> b!104862 (= res!52260 (bvslt (_1!1211 (h!2229 lt!53041)) (_1!1211 (h!2229 (t!5711 lt!53041)))))))

(declare-fun b!104863 () Bool)

(assert (=> b!104863 (= e!68274 (isStrictlySorted!303 (t!5711 lt!53041)))))

(assert (= (and d!28537 (not res!52259)) b!104862))

(assert (= (and b!104862 res!52260) b!104863))

(declare-fun m!116865 () Bool)

(assert (=> b!104863 m!116865))

(assert (=> d!27929 d!28537))

(assert (=> d!27929 d!28179))

(declare-fun d!28539 () Bool)

(assert (=> d!28539 (= (isDefined!108 (getValueByKey!154 (toList!805 call!10831) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))) (not (isEmpty!374 (getValueByKey!154 (toList!805 call!10831) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))))

(declare-fun bs!4313 () Bool)

(assert (= bs!4313 d!28539))

(assert (=> bs!4313 m!115149))

(declare-fun m!116867 () Bool)

(assert (=> bs!4313 m!116867))

(assert (=> b!104004 d!28539))

(declare-fun b!104865 () Bool)

(declare-fun e!68275 () Option!160)

(declare-fun e!68276 () Option!160)

(assert (=> b!104865 (= e!68275 e!68276)))

(declare-fun c!18199 () Bool)

(assert (=> b!104865 (= c!18199 (and ((_ is Cons!1633) (toList!805 call!10831)) (not (= (_1!1211 (h!2229 (toList!805 call!10831))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))))

(declare-fun b!104864 () Bool)

(assert (=> b!104864 (= e!68275 (Some!159 (_2!1211 (h!2229 (toList!805 call!10831)))))))

(declare-fun b!104866 () Bool)

(assert (=> b!104866 (= e!68276 (getValueByKey!154 (t!5711 (toList!805 call!10831)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun c!18198 () Bool)

(declare-fun d!28541 () Bool)

(assert (=> d!28541 (= c!18198 (and ((_ is Cons!1633) (toList!805 call!10831)) (= (_1!1211 (h!2229 (toList!805 call!10831))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))))

(assert (=> d!28541 (= (getValueByKey!154 (toList!805 call!10831) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) e!68275)))

(declare-fun b!104867 () Bool)

(assert (=> b!104867 (= e!68276 None!158)))

(assert (= (and d!28541 c!18198) b!104864))

(assert (= (and d!28541 (not c!18198)) b!104865))

(assert (= (and b!104865 c!18199) b!104866))

(assert (= (and b!104865 (not c!18199)) b!104867))

(assert (=> b!104866 m!114187))

(declare-fun m!116869 () Bool)

(assert (=> b!104866 m!116869))

(assert (=> b!104004 d!28541))

(assert (=> bm!10898 d!28129))

(declare-fun d!28543 () Bool)

(declare-fun e!68278 () Bool)

(assert (=> d!28543 e!68278))

(declare-fun res!52261 () Bool)

(assert (=> d!28543 (=> res!52261 e!68278)))

(declare-fun lt!53604 () Bool)

(assert (=> d!28543 (= res!52261 (not lt!53604))))

(declare-fun lt!53602 () Bool)

(assert (=> d!28543 (= lt!53604 lt!53602)))

(declare-fun lt!53601 () Unit!3170)

(declare-fun e!68277 () Unit!3170)

(assert (=> d!28543 (= lt!53601 e!68277)))

(declare-fun c!18200 () Bool)

(assert (=> d!28543 (= c!18200 lt!53602)))

(assert (=> d!28543 (= lt!53602 (containsKey!158 (toList!805 (getCurrentListMap!482 (_keys!4263 newMap!16) lt!52657 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))))))

(assert (=> d!28543 (= (contains!825 (getCurrentListMap!482 (_keys!4263 newMap!16) lt!52657 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))) lt!53604)))

(declare-fun b!104868 () Bool)

(declare-fun lt!53603 () Unit!3170)

(assert (=> b!104868 (= e!68277 lt!53603)))

(assert (=> b!104868 (= lt!53603 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 (getCurrentListMap!482 (_keys!4263 newMap!16) lt!52657 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))))))

(assert (=> b!104868 (isDefined!108 (getValueByKey!154 (toList!805 (getCurrentListMap!482 (_keys!4263 newMap!16) lt!52657 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))))))

(declare-fun b!104869 () Bool)

(declare-fun Unit!3235 () Unit!3170)

(assert (=> b!104869 (= e!68277 Unit!3235)))

(declare-fun b!104870 () Bool)

(assert (=> b!104870 (= e!68278 (isDefined!108 (getValueByKey!154 (toList!805 (getCurrentListMap!482 (_keys!4263 newMap!16) lt!52657 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676)))))))

(assert (= (and d!28543 c!18200) b!104868))

(assert (= (and d!28543 (not c!18200)) b!104869))

(assert (= (and d!28543 (not res!52261)) b!104870))

(assert (=> d!28543 m!114327))

(declare-fun m!116871 () Bool)

(assert (=> d!28543 m!116871))

(assert (=> b!104868 m!114327))

(declare-fun m!116873 () Bool)

(assert (=> b!104868 m!116873))

(assert (=> b!104868 m!114327))

(declare-fun m!116875 () Bool)

(assert (=> b!104868 m!116875))

(assert (=> b!104868 m!116875))

(declare-fun m!116877 () Bool)

(assert (=> b!104868 m!116877))

(assert (=> b!104870 m!114327))

(assert (=> b!104870 m!116875))

(assert (=> b!104870 m!116875))

(assert (=> b!104870 m!116877))

(assert (=> b!103988 d!28543))

(declare-fun bm!11036 () Bool)

(declare-fun call!11039 () Bool)

(declare-fun lt!53622 () ListLongMap!1579)

(assert (=> bm!11036 (= call!11039 (contains!825 lt!53622 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11037 () Bool)

(declare-fun call!11041 () ListLongMap!1579)

(declare-fun call!11044 () ListLongMap!1579)

(assert (=> bm!11037 (= call!11041 call!11044)))

(declare-fun b!104871 () Bool)

(declare-fun e!68290 () Bool)

(declare-fun e!68291 () Bool)

(assert (=> b!104871 (= e!68290 e!68291)))

(declare-fun res!52266 () Bool)

(declare-fun call!11042 () Bool)

(assert (=> b!104871 (= res!52266 call!11042)))

(assert (=> b!104871 (=> (not res!52266) (not e!68291))))

(declare-fun bm!11038 () Bool)

(declare-fun call!11040 () ListLongMap!1579)

(declare-fun call!11045 () ListLongMap!1579)

(assert (=> bm!11038 (= call!11040 call!11045)))

(declare-fun b!104872 () Bool)

(declare-fun e!68280 () Bool)

(assert (=> b!104872 (= e!68280 (= (apply!97 lt!53622 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2438 newMap!16)))))

(declare-fun b!104873 () Bool)

(declare-fun e!68284 () ListLongMap!1579)

(declare-fun e!68289 () ListLongMap!1579)

(assert (=> b!104873 (= e!68284 e!68289)))

(declare-fun c!18205 () Bool)

(assert (=> b!104873 (= c!18205 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104874 () Bool)

(declare-fun res!52265 () Bool)

(declare-fun e!68282 () Bool)

(assert (=> b!104874 (=> (not res!52265) (not e!68282))))

(declare-fun e!68287 () Bool)

(assert (=> b!104874 (= res!52265 e!68287)))

(declare-fun res!52268 () Bool)

(assert (=> b!104874 (=> res!52268 e!68287)))

(declare-fun e!68279 () Bool)

(assert (=> b!104874 (= res!52268 (not e!68279))))

(declare-fun res!52267 () Bool)

(assert (=> b!104874 (=> (not res!52267) (not e!68279))))

(assert (=> b!104874 (= res!52267 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104875 () Bool)

(declare-fun c!18206 () Bool)

(assert (=> b!104875 (= c!18206 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68286 () ListLongMap!1579)

(assert (=> b!104875 (= e!68289 e!68286)))

(declare-fun bm!11039 () Bool)

(declare-fun call!11043 () ListLongMap!1579)

(declare-fun c!18202 () Bool)

(assert (=> bm!11039 (= call!11044 (+!143 (ite c!18202 call!11043 (ite c!18205 call!11045 call!11040)) (ite (or c!18202 c!18205) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(declare-fun b!104877 () Bool)

(declare-fun e!68288 () Bool)

(assert (=> b!104877 (= e!68288 (not call!11039))))

(declare-fun b!104878 () Bool)

(declare-fun e!68285 () Unit!3170)

(declare-fun Unit!3236 () Unit!3170)

(assert (=> b!104878 (= e!68285 Unit!3236)))

(declare-fun b!104879 () Bool)

(assert (=> b!104879 (= e!68279 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104880 () Bool)

(assert (=> b!104880 (= e!68286 call!11041)))

(declare-fun b!104881 () Bool)

(declare-fun e!68283 () Bool)

(assert (=> b!104881 (= e!68283 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104882 () Bool)

(declare-fun res!52264 () Bool)

(assert (=> b!104882 (=> (not res!52264) (not e!68282))))

(assert (=> b!104882 (= res!52264 e!68290)))

(declare-fun c!18204 () Bool)

(assert (=> b!104882 (= c!18204 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!104883 () Bool)

(assert (=> b!104883 (= e!68289 call!11041)))

(declare-fun b!104884 () Bool)

(assert (=> b!104884 (= e!68286 call!11040)))

(declare-fun bm!11040 () Bool)

(assert (=> bm!11040 (= call!11045 call!11043)))

(declare-fun b!104885 () Bool)

(assert (=> b!104885 (= e!68291 (= (apply!97 lt!53622 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2438 newMap!16)))))

(declare-fun b!104886 () Bool)

(assert (=> b!104886 (= e!68284 (+!143 call!11044 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))

(declare-fun bm!11041 () Bool)

(assert (=> bm!11041 (= call!11043 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) lt!52657 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun d!28545 () Bool)

(assert (=> d!28545 e!68282))

(declare-fun res!52262 () Bool)

(assert (=> d!28545 (=> (not res!52262) (not e!68282))))

(assert (=> d!28545 (= res!52262 (or (bvsge #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))))

(declare-fun lt!53607 () ListLongMap!1579)

(assert (=> d!28545 (= lt!53622 lt!53607)))

(declare-fun lt!53606 () Unit!3170)

(assert (=> d!28545 (= lt!53606 e!68285)))

(declare-fun c!18201 () Bool)

(assert (=> d!28545 (= c!18201 e!68283)))

(declare-fun res!52270 () Bool)

(assert (=> d!28545 (=> (not res!52270) (not e!68283))))

(assert (=> d!28545 (= res!52270 (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!28545 (= lt!53607 e!68284)))

(assert (=> d!28545 (= c!18202 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28545 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28545 (= (getCurrentListMap!482 (_keys!4263 newMap!16) lt!52657 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53622)))

(declare-fun b!104876 () Bool)

(declare-fun e!68281 () Bool)

(assert (=> b!104876 (= e!68287 e!68281)))

(declare-fun res!52269 () Bool)

(assert (=> b!104876 (=> (not res!52269) (not e!68281))))

(assert (=> b!104876 (= res!52269 (contains!825 lt!53622 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104876 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!104887 () Bool)

(assert (=> b!104887 (= e!68282 e!68288)))

(declare-fun c!18203 () Bool)

(assert (=> b!104887 (= c!18203 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104888 () Bool)

(assert (=> b!104888 (= e!68281 (= (apply!97 lt!53622 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1333 (select (arr!2057 lt!52657) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104888 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 lt!52657)))))

(assert (=> b!104888 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2310 (_keys!4263 newMap!16))))))

(declare-fun bm!11042 () Bool)

(assert (=> bm!11042 (= call!11042 (contains!825 lt!53622 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104889 () Bool)

(declare-fun lt!53609 () Unit!3170)

(assert (=> b!104889 (= e!68285 lt!53609)))

(declare-fun lt!53615 () ListLongMap!1579)

(assert (=> b!104889 (= lt!53615 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) lt!52657 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53610 () (_ BitVec 64))

(assert (=> b!104889 (= lt!53610 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53621 () (_ BitVec 64))

(assert (=> b!104889 (= lt!53621 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53625 () Unit!3170)

(assert (=> b!104889 (= lt!53625 (addStillContains!73 lt!53615 lt!53610 (zeroValue!2438 newMap!16) lt!53621))))

(assert (=> b!104889 (contains!825 (+!143 lt!53615 (tuple2!2403 lt!53610 (zeroValue!2438 newMap!16))) lt!53621)))

(declare-fun lt!53618 () Unit!3170)

(assert (=> b!104889 (= lt!53618 lt!53625)))

(declare-fun lt!53620 () ListLongMap!1579)

(assert (=> b!104889 (= lt!53620 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) lt!52657 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53619 () (_ BitVec 64))

(assert (=> b!104889 (= lt!53619 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53605 () (_ BitVec 64))

(assert (=> b!104889 (= lt!53605 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53617 () Unit!3170)

(assert (=> b!104889 (= lt!53617 (addApplyDifferent!73 lt!53620 lt!53619 (minValue!2438 newMap!16) lt!53605))))

(assert (=> b!104889 (= (apply!97 (+!143 lt!53620 (tuple2!2403 lt!53619 (minValue!2438 newMap!16))) lt!53605) (apply!97 lt!53620 lt!53605))))

(declare-fun lt!53616 () Unit!3170)

(assert (=> b!104889 (= lt!53616 lt!53617)))

(declare-fun lt!53623 () ListLongMap!1579)

(assert (=> b!104889 (= lt!53623 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) lt!52657 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53624 () (_ BitVec 64))

(assert (=> b!104889 (= lt!53624 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53626 () (_ BitVec 64))

(assert (=> b!104889 (= lt!53626 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53614 () Unit!3170)

(assert (=> b!104889 (= lt!53614 (addApplyDifferent!73 lt!53623 lt!53624 (zeroValue!2438 newMap!16) lt!53626))))

(assert (=> b!104889 (= (apply!97 (+!143 lt!53623 (tuple2!2403 lt!53624 (zeroValue!2438 newMap!16))) lt!53626) (apply!97 lt!53623 lt!53626))))

(declare-fun lt!53612 () Unit!3170)

(assert (=> b!104889 (= lt!53612 lt!53614)))

(declare-fun lt!53611 () ListLongMap!1579)

(assert (=> b!104889 (= lt!53611 (getCurrentListMapNoExtraKeys!110 (_keys!4263 newMap!16) lt!52657 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53613 () (_ BitVec 64))

(assert (=> b!104889 (= lt!53613 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53608 () (_ BitVec 64))

(assert (=> b!104889 (= lt!53608 (select (arr!2056 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104889 (= lt!53609 (addApplyDifferent!73 lt!53611 lt!53613 (minValue!2438 newMap!16) lt!53608))))

(assert (=> b!104889 (= (apply!97 (+!143 lt!53611 (tuple2!2403 lt!53613 (minValue!2438 newMap!16))) lt!53608) (apply!97 lt!53611 lt!53608))))

(declare-fun b!104890 () Bool)

(assert (=> b!104890 (= e!68288 e!68280)))

(declare-fun res!52263 () Bool)

(assert (=> b!104890 (= res!52263 call!11039)))

(assert (=> b!104890 (=> (not res!52263) (not e!68280))))

(declare-fun b!104891 () Bool)

(assert (=> b!104891 (= e!68290 (not call!11042))))

(assert (= (and d!28545 c!18202) b!104886))

(assert (= (and d!28545 (not c!18202)) b!104873))

(assert (= (and b!104873 c!18205) b!104883))

(assert (= (and b!104873 (not c!18205)) b!104875))

(assert (= (and b!104875 c!18206) b!104880))

(assert (= (and b!104875 (not c!18206)) b!104884))

(assert (= (or b!104880 b!104884) bm!11038))

(assert (= (or b!104883 bm!11038) bm!11040))

(assert (= (or b!104883 b!104880) bm!11037))

(assert (= (or b!104886 bm!11040) bm!11041))

(assert (= (or b!104886 bm!11037) bm!11039))

(assert (= (and d!28545 res!52270) b!104881))

(assert (= (and d!28545 c!18201) b!104889))

(assert (= (and d!28545 (not c!18201)) b!104878))

(assert (= (and d!28545 res!52262) b!104874))

(assert (= (and b!104874 res!52267) b!104879))

(assert (= (and b!104874 (not res!52268)) b!104876))

(assert (= (and b!104876 res!52269) b!104888))

(assert (= (and b!104874 res!52265) b!104882))

(assert (= (and b!104882 c!18204) b!104871))

(assert (= (and b!104882 (not c!18204)) b!104891))

(assert (= (and b!104871 res!52266) b!104885))

(assert (= (or b!104871 b!104891) bm!11042))

(assert (= (and b!104882 res!52264) b!104887))

(assert (= (and b!104887 c!18203) b!104890))

(assert (= (and b!104887 (not c!18203)) b!104877))

(assert (= (and b!104890 res!52263) b!104872))

(assert (= (or b!104890 b!104877) bm!11036))

(declare-fun b_lambda!4701 () Bool)

(assert (=> (not b_lambda!4701) (not b!104888)))

(assert (=> b!104888 t!5720))

(declare-fun b_and!6501 () Bool)

(assert (= b_and!6497 (and (=> t!5720 result!3447) b_and!6501)))

(assert (=> b!104888 t!5722))

(declare-fun b_and!6503 () Bool)

(assert (= b_and!6499 (and (=> t!5722 result!3449) b_and!6503)))

(declare-fun m!116879 () Bool)

(assert (=> b!104872 m!116879))

(assert (=> d!28545 m!114517))

(declare-fun m!116881 () Bool)

(assert (=> bm!11042 m!116881))

(declare-fun m!116883 () Bool)

(assert (=> bm!11039 m!116883))

(assert (=> b!104881 m!114523))

(assert (=> b!104881 m!114523))

(assert (=> b!104881 m!114525))

(declare-fun m!116885 () Bool)

(assert (=> b!104889 m!116885))

(declare-fun m!116887 () Bool)

(assert (=> b!104889 m!116887))

(declare-fun m!116889 () Bool)

(assert (=> b!104889 m!116889))

(declare-fun m!116891 () Bool)

(assert (=> b!104889 m!116891))

(declare-fun m!116893 () Bool)

(assert (=> b!104889 m!116893))

(declare-fun m!116895 () Bool)

(assert (=> b!104889 m!116895))

(declare-fun m!116897 () Bool)

(assert (=> b!104889 m!116897))

(declare-fun m!116899 () Bool)

(assert (=> b!104889 m!116899))

(assert (=> b!104889 m!116897))

(declare-fun m!116901 () Bool)

(assert (=> b!104889 m!116901))

(declare-fun m!116903 () Bool)

(assert (=> b!104889 m!116903))

(declare-fun m!116905 () Bool)

(assert (=> b!104889 m!116905))

(assert (=> b!104889 m!114523))

(assert (=> b!104889 m!116893))

(declare-fun m!116907 () Bool)

(assert (=> b!104889 m!116907))

(declare-fun m!116909 () Bool)

(assert (=> b!104889 m!116909))

(declare-fun m!116911 () Bool)

(assert (=> b!104889 m!116911))

(declare-fun m!116913 () Bool)

(assert (=> b!104889 m!116913))

(assert (=> b!104889 m!116885))

(declare-fun m!116915 () Bool)

(assert (=> b!104889 m!116915))

(assert (=> b!104889 m!116907))

(assert (=> b!104888 m!114523))

(assert (=> b!104888 m!114523))

(declare-fun m!116917 () Bool)

(assert (=> b!104888 m!116917))

(declare-fun m!116919 () Bool)

(assert (=> b!104888 m!116919))

(assert (=> b!104888 m!114563))

(declare-fun m!116921 () Bool)

(assert (=> b!104888 m!116921))

(assert (=> b!104888 m!114563))

(assert (=> b!104888 m!116919))

(declare-fun m!116923 () Bool)

(assert (=> bm!11036 m!116923))

(assert (=> bm!11041 m!116891))

(assert (=> b!104876 m!114523))

(assert (=> b!104876 m!114523))

(declare-fun m!116925 () Bool)

(assert (=> b!104876 m!116925))

(declare-fun m!116927 () Bool)

(assert (=> b!104886 m!116927))

(declare-fun m!116929 () Bool)

(assert (=> b!104885 m!116929))

(assert (=> b!104879 m!114523))

(assert (=> b!104879 m!114523))

(assert (=> b!104879 m!114525))

(assert (=> b!103988 d!28545))

(declare-fun d!28547 () Bool)

(assert (=> d!28547 (= (isDefined!108 (getValueByKey!154 (toList!805 lt!52789) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!374 (getValueByKey!154 (toList!805 lt!52789) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4314 () Bool)

(assert (= bs!4314 d!28547))

(assert (=> bs!4314 m!115045))

(declare-fun m!116931 () Bool)

(assert (=> bs!4314 m!116931))

(assert (=> b!103915 d!28547))

(declare-fun b!104893 () Bool)

(declare-fun e!68292 () Option!160)

(declare-fun e!68293 () Option!160)

(assert (=> b!104893 (= e!68292 e!68293)))

(declare-fun c!18208 () Bool)

(assert (=> b!104893 (= c!18208 (and ((_ is Cons!1633) (toList!805 lt!52789)) (not (= (_1!1211 (h!2229 (toList!805 lt!52789))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104892 () Bool)

(assert (=> b!104892 (= e!68292 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52789)))))))

(declare-fun b!104894 () Bool)

(assert (=> b!104894 (= e!68293 (getValueByKey!154 (t!5711 (toList!805 lt!52789)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!28549 () Bool)

(declare-fun c!18207 () Bool)

(assert (=> d!28549 (= c!18207 (and ((_ is Cons!1633) (toList!805 lt!52789)) (= (_1!1211 (h!2229 (toList!805 lt!52789))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28549 (= (getValueByKey!154 (toList!805 lt!52789) #b0000000000000000000000000000000000000000000000000000000000000000) e!68292)))

(declare-fun b!104895 () Bool)

(assert (=> b!104895 (= e!68293 None!158)))

(assert (= (and d!28549 c!18207) b!104892))

(assert (= (and d!28549 (not c!18207)) b!104893))

(assert (= (and b!104893 c!18208) b!104894))

(assert (= (and b!104893 (not c!18208)) b!104895))

(declare-fun m!116933 () Bool)

(assert (=> b!104894 m!116933))

(assert (=> b!103915 d!28549))

(declare-fun d!28551 () Bool)

(assert (=> d!28551 (isDefined!108 (getValueByKey!154 (toList!805 lt!52795) (_1!1211 lt!52551)))))

(declare-fun lt!53627 () Unit!3170)

(assert (=> d!28551 (= lt!53627 (choose!656 (toList!805 lt!52795) (_1!1211 lt!52551)))))

(declare-fun e!68294 () Bool)

(assert (=> d!28551 e!68294))

(declare-fun res!52271 () Bool)

(assert (=> d!28551 (=> (not res!52271) (not e!68294))))

(assert (=> d!28551 (= res!52271 (isStrictlySorted!303 (toList!805 lt!52795)))))

(assert (=> d!28551 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52795) (_1!1211 lt!52551)) lt!53627)))

(declare-fun b!104896 () Bool)

(assert (=> b!104896 (= e!68294 (containsKey!158 (toList!805 lt!52795) (_1!1211 lt!52551)))))

(assert (= (and d!28551 res!52271) b!104896))

(assert (=> d!28551 m!114485))

(assert (=> d!28551 m!114485))

(assert (=> d!28551 m!114933))

(declare-fun m!116935 () Bool)

(assert (=> d!28551 m!116935))

(declare-fun m!116937 () Bool)

(assert (=> d!28551 m!116937))

(assert (=> b!104896 m!114929))

(assert (=> b!103814 d!28551))

(assert (=> b!103814 d!28399))

(assert (=> b!103814 d!27815))

(declare-fun d!28553 () Bool)

(declare-fun lt!53628 () Bool)

(assert (=> d!28553 (= lt!53628 (select (content!107 lt!52794) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))))))

(declare-fun e!68296 () Bool)

(assert (=> d!28553 (= lt!53628 e!68296)))

(declare-fun res!52272 () Bool)

(assert (=> d!28553 (=> (not res!52272) (not e!68296))))

(assert (=> d!28553 (= res!52272 ((_ is Cons!1633) lt!52794))))

(assert (=> d!28553 (= (contains!828 lt!52794 (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))) lt!53628)))

(declare-fun b!104897 () Bool)

(declare-fun e!68295 () Bool)

(assert (=> b!104897 (= e!68296 e!68295)))

(declare-fun res!52273 () Bool)

(assert (=> b!104897 (=> res!52273 e!68295)))

(assert (=> b!104897 (= res!52273 (= (h!2229 lt!52794) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))))))

(declare-fun b!104898 () Bool)

(assert (=> b!104898 (= e!68295 (contains!828 (t!5711 lt!52794) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))))))

(assert (= (and d!28553 res!52272) b!104897))

(assert (= (and b!104897 (not res!52273)) b!104898))

(declare-fun m!116939 () Bool)

(assert (=> d!28553 m!116939))

(declare-fun m!116941 () Bool)

(assert (=> d!28553 m!116941))

(declare-fun m!116943 () Bool)

(assert (=> b!104898 m!116943))

(assert (=> b!103902 d!28553))

(declare-fun d!28555 () Bool)

(assert (=> d!28555 (= (get!1336 (getValueByKey!154 (toList!805 lt!52789) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2880 (getValueByKey!154 (toList!805 lt!52789) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!27985 d!28555))

(assert (=> d!27985 d!28327))

(assert (=> d!27817 d!27775))

(assert (=> b!103768 d!28077))

(declare-fun d!28557 () Bool)

(declare-fun e!68297 () Bool)

(assert (=> d!28557 e!68297))

(declare-fun res!52275 () Bool)

(assert (=> d!28557 (=> (not res!52275) (not e!68297))))

(declare-fun lt!53629 () ListLongMap!1579)

(assert (=> d!28557 (= res!52275 (contains!825 lt!53629 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))))))

(declare-fun lt!53632 () List!1637)

(assert (=> d!28557 (= lt!53629 (ListLongMap!1580 lt!53632))))

(declare-fun lt!53631 () Unit!3170)

(declare-fun lt!53630 () Unit!3170)

(assert (=> d!28557 (= lt!53631 lt!53630)))

(assert (=> d!28557 (= (getValueByKey!154 lt!53632 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))) (Some!159 (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))))))

(assert (=> d!28557 (= lt!53630 (lemmaContainsTupThenGetReturnValue!72 lt!53632 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))) (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))))))

(assert (=> d!28557 (= lt!53632 (insertStrictlySorted!74 (toList!805 call!10940) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))) (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))))))

(assert (=> d!28557 (= (+!143 call!10940 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))) lt!53629)))

(declare-fun b!104899 () Bool)

(declare-fun res!52274 () Bool)

(assert (=> b!104899 (=> (not res!52274) (not e!68297))))

(assert (=> b!104899 (= res!52274 (= (getValueByKey!154 (toList!805 lt!53629) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16))))) (Some!159 (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))))))))

(declare-fun b!104900 () Bool)

(assert (=> b!104900 (= e!68297 (contains!828 (toList!805 lt!53629) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17814 (minValue!2438 newMap!16) lt!52546) (minValue!2438 newMap!16)))))))

(assert (= (and d!28557 res!52275) b!104899))

(assert (= (and b!104899 res!52274) b!104900))

(declare-fun m!116945 () Bool)

(assert (=> d!28557 m!116945))

(declare-fun m!116947 () Bool)

(assert (=> d!28557 m!116947))

(declare-fun m!116949 () Bool)

(assert (=> d!28557 m!116949))

(declare-fun m!116951 () Bool)

(assert (=> d!28557 m!116951))

(declare-fun m!116953 () Bool)

(assert (=> b!104899 m!116953))

(declare-fun m!116955 () Bool)

(assert (=> b!104900 m!116955))

(assert (=> b!104036 d!28557))

(assert (=> b!104065 d!27853))

(declare-fun b!104902 () Bool)

(declare-fun e!68298 () Option!160)

(declare-fun e!68299 () Option!160)

(assert (=> b!104902 (= e!68298 e!68299)))

(declare-fun c!18210 () Bool)

(assert (=> b!104902 (= c!18210 (and ((_ is Cons!1633) (t!5711 lt!52798)) (not (= (_1!1211 (h!2229 (t!5711 lt!52798))) (_1!1211 lt!52551)))))))

(declare-fun b!104901 () Bool)

(assert (=> b!104901 (= e!68298 (Some!159 (_2!1211 (h!2229 (t!5711 lt!52798)))))))

(declare-fun b!104903 () Bool)

(assert (=> b!104903 (= e!68299 (getValueByKey!154 (t!5711 (t!5711 lt!52798)) (_1!1211 lt!52551)))))

(declare-fun d!28559 () Bool)

(declare-fun c!18209 () Bool)

(assert (=> d!28559 (= c!18209 (and ((_ is Cons!1633) (t!5711 lt!52798)) (= (_1!1211 (h!2229 (t!5711 lt!52798))) (_1!1211 lt!52551))))))

(assert (=> d!28559 (= (getValueByKey!154 (t!5711 lt!52798) (_1!1211 lt!52551)) e!68298)))

(declare-fun b!104904 () Bool)

(assert (=> b!104904 (= e!68299 None!158)))

(assert (= (and d!28559 c!18209) b!104901))

(assert (= (and d!28559 (not c!18209)) b!104902))

(assert (= (and b!104902 c!18210) b!104903))

(assert (= (and b!104902 (not c!18210)) b!104904))

(declare-fun m!116957 () Bool)

(assert (=> b!104903 m!116957))

(assert (=> b!103819 d!28559))

(declare-fun b!104906 () Bool)

(declare-fun e!68300 () Option!160)

(declare-fun e!68301 () Option!160)

(assert (=> b!104906 (= e!68300 e!68301)))

(declare-fun c!18212 () Bool)

(assert (=> b!104906 (= c!18212 (and ((_ is Cons!1633) (toList!805 lt!53099)) (not (= (_1!1211 (h!2229 (toList!805 lt!53099))) (_1!1211 (tuple2!2403 lt!52790 lt!52787))))))))

(declare-fun b!104905 () Bool)

(assert (=> b!104905 (= e!68300 (Some!159 (_2!1211 (h!2229 (toList!805 lt!53099)))))))

(declare-fun b!104907 () Bool)

(assert (=> b!104907 (= e!68301 (getValueByKey!154 (t!5711 (toList!805 lt!53099)) (_1!1211 (tuple2!2403 lt!52790 lt!52787))))))

(declare-fun d!28561 () Bool)

(declare-fun c!18211 () Bool)

(assert (=> d!28561 (= c!18211 (and ((_ is Cons!1633) (toList!805 lt!53099)) (= (_1!1211 (h!2229 (toList!805 lt!53099))) (_1!1211 (tuple2!2403 lt!52790 lt!52787)))))))

(assert (=> d!28561 (= (getValueByKey!154 (toList!805 lt!53099) (_1!1211 (tuple2!2403 lt!52790 lt!52787))) e!68300)))

(declare-fun b!104908 () Bool)

(assert (=> b!104908 (= e!68301 None!158)))

(assert (= (and d!28561 c!18211) b!104905))

(assert (= (and d!28561 (not c!18211)) b!104906))

(assert (= (and b!104906 c!18212) b!104907))

(assert (= (and b!104906 (not c!18212)) b!104908))

(declare-fun m!116959 () Bool)

(assert (=> b!104907 m!116959))

(assert (=> b!104010 d!28561))

(declare-fun b!104910 () Bool)

(declare-fun e!68302 () Option!160)

(declare-fun e!68303 () Option!160)

(assert (=> b!104910 (= e!68302 e!68303)))

(declare-fun c!18214 () Bool)

(assert (=> b!104910 (= c!18214 (and ((_ is Cons!1633) (toList!805 lt!52948)) (not (= (_1!1211 (h!2229 (toList!805 lt!52948))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))))

(declare-fun b!104909 () Bool)

(assert (=> b!104909 (= e!68302 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52948)))))))

(declare-fun b!104911 () Bool)

(assert (=> b!104911 (= e!68303 (getValueByKey!154 (t!5711 (toList!805 lt!52948)) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun d!28563 () Bool)

(declare-fun c!18213 () Bool)

(assert (=> d!28563 (= c!18213 (and ((_ is Cons!1633) (toList!805 lt!52948)) (= (_1!1211 (h!2229 (toList!805 lt!52948))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (=> d!28563 (= (getValueByKey!154 (toList!805 lt!52948) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) e!68302)))

(declare-fun b!104912 () Bool)

(assert (=> b!104912 (= e!68303 None!158)))

(assert (= (and d!28563 c!18213) b!104909))

(assert (= (and d!28563 (not c!18213)) b!104910))

(assert (= (and b!104910 c!18214) b!104911))

(assert (= (and b!104910 (not c!18214)) b!104912))

(declare-fun m!116961 () Bool)

(assert (=> b!104911 m!116961))

(assert (=> b!103746 d!28563))

(declare-fun d!28565 () Bool)

(assert (=> d!28565 (= ($colon$colon!79 e!67680 (ite c!17936 (h!2229 (toList!805 lt!52542)) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547)))) (Cons!1633 (ite c!17936 (h!2229 (toList!805 lt!52542)) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))) e!67680))))

(assert (=> bm!10921 d!28565))

(declare-fun d!28567 () Bool)

(declare-fun c!18215 () Bool)

(assert (=> d!28567 (= c!18215 ((_ is Nil!1634) (toList!805 lt!52795)))))

(declare-fun e!68304 () (InoxSet tuple2!2402))

(assert (=> d!28567 (= (content!107 (toList!805 lt!52795)) e!68304)))

(declare-fun b!104913 () Bool)

(assert (=> b!104913 (= e!68304 ((as const (Array tuple2!2402 Bool)) false))))

(declare-fun b!104914 () Bool)

(assert (=> b!104914 (= e!68304 ((_ map or) (store ((as const (Array tuple2!2402 Bool)) false) (h!2229 (toList!805 lt!52795)) true) (content!107 (t!5711 (toList!805 lt!52795)))))))

(assert (= (and d!28567 c!18215) b!104913))

(assert (= (and d!28567 (not c!18215)) b!104914))

(declare-fun m!116963 () Bool)

(assert (=> b!104914 m!116963))

(declare-fun m!116965 () Bool)

(assert (=> b!104914 m!116965))

(assert (=> d!27947 d!28567))

(declare-fun d!28569 () Bool)

(assert (=> d!28569 (= (apply!97 lt!52976 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1336 (getValueByKey!154 (toList!805 lt!52976) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4315 () Bool)

(assert (= bs!4315 d!28569))

(assert (=> bs!4315 m!115799))

(assert (=> bs!4315 m!115799))

(declare-fun m!116967 () Bool)

(assert (=> bs!4315 m!116967))

(assert (=> b!103761 d!28569))

(declare-fun d!28571 () Bool)

(declare-fun res!52276 () Bool)

(declare-fun e!68305 () Bool)

(assert (=> d!28571 (=> res!52276 e!68305)))

(assert (=> d!28571 (= res!52276 (or ((_ is Nil!1634) lt!53164) ((_ is Nil!1634) (t!5711 lt!53164))))))

(assert (=> d!28571 (= (isStrictlySorted!303 lt!53164) e!68305)))

(declare-fun b!104915 () Bool)

(declare-fun e!68306 () Bool)

(assert (=> b!104915 (= e!68305 e!68306)))

(declare-fun res!52277 () Bool)

(assert (=> b!104915 (=> (not res!52277) (not e!68306))))

(assert (=> b!104915 (= res!52277 (bvslt (_1!1211 (h!2229 lt!53164)) (_1!1211 (h!2229 (t!5711 lt!53164)))))))

(declare-fun b!104916 () Bool)

(assert (=> b!104916 (= e!68306 (isStrictlySorted!303 (t!5711 lt!53164)))))

(assert (= (and d!28571 (not res!52276)) b!104915))

(assert (= (and b!104915 res!52277) b!104916))

(declare-fun m!116969 () Bool)

(assert (=> b!104916 m!116969))

(assert (=> d!28009 d!28571))

(declare-fun d!28573 () Bool)

(declare-fun res!52278 () Bool)

(declare-fun e!68307 () Bool)

(assert (=> d!28573 (=> res!52278 e!68307)))

(assert (=> d!28573 (= res!52278 (or ((_ is Nil!1634) (toList!805 (+!143 lt!52542 lt!52551))) ((_ is Nil!1634) (t!5711 (toList!805 (+!143 lt!52542 lt!52551))))))))

(assert (=> d!28573 (= (isStrictlySorted!303 (toList!805 (+!143 lt!52542 lt!52551))) e!68307)))

(declare-fun b!104917 () Bool)

(declare-fun e!68308 () Bool)

(assert (=> b!104917 (= e!68307 e!68308)))

(declare-fun res!52279 () Bool)

(assert (=> b!104917 (=> (not res!52279) (not e!68308))))

(assert (=> b!104917 (= res!52279 (bvslt (_1!1211 (h!2229 (toList!805 (+!143 lt!52542 lt!52551)))) (_1!1211 (h!2229 (t!5711 (toList!805 (+!143 lt!52542 lt!52551)))))))))

(declare-fun b!104918 () Bool)

(assert (=> b!104918 (= e!68308 (isStrictlySorted!303 (t!5711 (toList!805 (+!143 lt!52542 lt!52551)))))))

(assert (= (and d!28573 (not res!52278)) b!104917))

(assert (= (and b!104917 res!52279) b!104918))

(assert (=> b!104918 m!115417))

(assert (=> d!28009 d!28573))

(assert (=> b!104029 d!28077))

(declare-fun d!28575 () Bool)

(declare-fun res!52280 () Bool)

(declare-fun e!68309 () Bool)

(assert (=> d!28575 (=> res!52280 e!68309)))

(assert (=> d!28575 (= res!52280 (and ((_ is Cons!1633) (toList!805 lt!52799)) (= (_1!1211 (h!2229 (toList!805 lt!52799))) (_1!1211 lt!52551))))))

(assert (=> d!28575 (= (containsKey!158 (toList!805 lt!52799) (_1!1211 lt!52551)) e!68309)))

(declare-fun b!104919 () Bool)

(declare-fun e!68310 () Bool)

(assert (=> b!104919 (= e!68309 e!68310)))

(declare-fun res!52281 () Bool)

(assert (=> b!104919 (=> (not res!52281) (not e!68310))))

(assert (=> b!104919 (= res!52281 (and (or (not ((_ is Cons!1633) (toList!805 lt!52799))) (bvsle (_1!1211 (h!2229 (toList!805 lt!52799))) (_1!1211 lt!52551))) ((_ is Cons!1633) (toList!805 lt!52799)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52799))) (_1!1211 lt!52551))))))

(declare-fun b!104920 () Bool)

(assert (=> b!104920 (= e!68310 (containsKey!158 (t!5711 (toList!805 lt!52799)) (_1!1211 lt!52551)))))

(assert (= (and d!28575 (not res!52280)) b!104919))

(assert (= (and b!104919 res!52281) b!104920))

(declare-fun m!116971 () Bool)

(assert (=> b!104920 m!116971))

(assert (=> d!27903 d!28575))

(declare-fun b!104922 () Bool)

(declare-fun e!68311 () Option!160)

(declare-fun e!68312 () Option!160)

(assert (=> b!104922 (= e!68311 e!68312)))

(declare-fun c!18217 () Bool)

(assert (=> b!104922 (= c!18217 (and ((_ is Cons!1633) (toList!805 lt!52993)) (not (= (_1!1211 (h!2229 (toList!805 lt!52993))) (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun b!104921 () Bool)

(assert (=> b!104921 (= e!68311 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52993)))))))

(declare-fun b!104923 () Bool)

(assert (=> b!104923 (= e!68312 (getValueByKey!154 (t!5711 (toList!805 lt!52993)) (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun c!18216 () Bool)

(declare-fun d!28577 () Bool)

(assert (=> d!28577 (= c!18216 (and ((_ is Cons!1633) (toList!805 lt!52993)) (= (_1!1211 (h!2229 (toList!805 lt!52993))) (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28577 (= (getValueByKey!154 (toList!805 lt!52993) (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) e!68311)))

(declare-fun b!104924 () Bool)

(assert (=> b!104924 (= e!68312 None!158)))

(assert (= (and d!28577 c!18216) b!104921))

(assert (= (and d!28577 (not c!18216)) b!104922))

(assert (= (and b!104922 c!18217) b!104923))

(assert (= (and b!104922 (not c!18217)) b!104924))

(declare-fun m!116973 () Bool)

(assert (=> b!104923 m!116973))

(assert (=> b!103800 d!28577))

(declare-fun b!104925 () Bool)

(declare-fun e!68314 () Bool)

(declare-fun e!68313 () Bool)

(assert (=> b!104925 (= e!68314 e!68313)))

(declare-fun c!18218 () Bool)

(assert (=> b!104925 (= c!18218 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!104926 () Bool)

(declare-fun call!11046 () Bool)

(assert (=> b!104926 (= e!68313 call!11046)))

(declare-fun b!104927 () Bool)

(declare-fun e!68315 () Bool)

(assert (=> b!104927 (= e!68315 call!11046)))

(declare-fun bm!11043 () Bool)

(assert (=> bm!11043 (= call!11046 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun d!28579 () Bool)

(declare-fun res!52283 () Bool)

(assert (=> d!28579 (=> res!52283 e!68314)))

(assert (=> d!28579 (= res!52283 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!28579 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4263 newMap!16) (mask!6697 newMap!16)) e!68314)))

(declare-fun b!104928 () Bool)

(assert (=> b!104928 (= e!68313 e!68315)))

(declare-fun lt!53634 () (_ BitVec 64))

(assert (=> b!104928 (= lt!53634 (select (arr!2056 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!53635 () Unit!3170)

(assert (=> b!104928 (= lt!53635 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4263 newMap!16) lt!53634 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!104928 (arrayContainsKey!0 (_keys!4263 newMap!16) lt!53634 #b00000000000000000000000000000000)))

(declare-fun lt!53633 () Unit!3170)

(assert (=> b!104928 (= lt!53633 lt!53635)))

(declare-fun res!52282 () Bool)

(assert (=> b!104928 (= res!52282 (= (seekEntryOrOpen!0 (select (arr!2056 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4263 newMap!16) (mask!6697 newMap!16)) (Found!268 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!104928 (=> (not res!52282) (not e!68315))))

(assert (= (and d!28579 (not res!52283)) b!104925))

(assert (= (and b!104925 c!18218) b!104928))

(assert (= (and b!104925 (not c!18218)) b!104926))

(assert (= (and b!104928 res!52282) b!104927))

(assert (= (or b!104927 b!104926) bm!11043))

(assert (=> b!104925 m!115393))

(assert (=> b!104925 m!115393))

(assert (=> b!104925 m!116853))

(declare-fun m!116975 () Bool)

(assert (=> bm!11043 m!116975))

(assert (=> b!104928 m!115393))

(declare-fun m!116977 () Bool)

(assert (=> b!104928 m!116977))

(declare-fun m!116979 () Bool)

(assert (=> b!104928 m!116979))

(assert (=> b!104928 m!115393))

(declare-fun m!116981 () Bool)

(assert (=> b!104928 m!116981))

(assert (=> bm!10941 d!28579))

(assert (=> b!103636 d!28077))

(declare-fun d!28581 () Bool)

(assert (=> d!28581 (= (inRange!0 (ite c!17875 (index!3220 lt!52900) (ite c!17876 (index!3219 lt!52906) (index!3222 lt!52906))) (mask!6697 newMap!16)) (and (bvsge (ite c!17875 (index!3220 lt!52900) (ite c!17876 (index!3219 lt!52906) (index!3222 lt!52906))) #b00000000000000000000000000000000) (bvslt (ite c!17875 (index!3220 lt!52900) (ite c!17876 (index!3219 lt!52906) (index!3222 lt!52906))) (bvadd (mask!6697 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!10897 d!28581))

(declare-fun d!28583 () Bool)

(declare-fun res!52284 () Bool)

(declare-fun e!68316 () Bool)

(assert (=> d!28583 (=> res!52284 e!68316)))

(assert (=> d!28583 (= res!52284 (and ((_ is Cons!1633) (toList!805 call!10839)) (= (_1!1211 (h!2229 (toList!805 call!10839))) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676)))))))

(assert (=> d!28583 (= (containsKey!158 (toList!805 call!10839) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))) e!68316)))

(declare-fun b!104929 () Bool)

(declare-fun e!68317 () Bool)

(assert (=> b!104929 (= e!68316 e!68317)))

(declare-fun res!52285 () Bool)

(assert (=> b!104929 (=> (not res!52285) (not e!68317))))

(assert (=> b!104929 (= res!52285 (and (or (not ((_ is Cons!1633) (toList!805 call!10839))) (bvsle (_1!1211 (h!2229 (toList!805 call!10839))) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676)))) ((_ is Cons!1633) (toList!805 call!10839)) (bvslt (_1!1211 (h!2229 (toList!805 call!10839))) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676)))))))

(declare-fun b!104930 () Bool)

(assert (=> b!104930 (= e!68317 (containsKey!158 (t!5711 (toList!805 call!10839)) (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!52676))))))

(assert (= (and d!28583 (not res!52284)) b!104929))

(assert (= (and b!104929 res!52285) b!104930))

(assert (=> b!104930 m!114327))

(declare-fun m!116983 () Bool)

(assert (=> b!104930 m!116983))

(assert (=> d!27951 d!28583))

(assert (=> d!27823 d!27949))

(declare-fun d!28585 () Bool)

(declare-fun e!68320 () Bool)

(assert (=> d!28585 e!68320))

(declare-fun res!52291 () Bool)

(assert (=> d!28585 (=> (not res!52291) (not e!68320))))

(declare-fun lt!53638 () SeekEntryResult!268)

(assert (=> d!28585 (= res!52291 ((_ is Found!268) lt!53638))))

(assert (=> d!28585 (= lt!53638 (seekEntryOrOpen!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(assert (=> d!28585 true))

(declare-fun _$33!87 () Unit!3170)

(assert (=> d!28585 (= (choose!647 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)) _$33!87)))

(declare-fun b!104935 () Bool)

(declare-fun res!52290 () Bool)

(assert (=> b!104935 (=> (not res!52290) (not e!68320))))

(assert (=> b!104935 (= res!52290 (inRange!0 (index!3220 lt!53638) (mask!6697 newMap!16)))))

(declare-fun b!104936 () Bool)

(assert (=> b!104936 (= e!68320 (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!53638)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (= (and d!28585 res!52291) b!104935))

(assert (= (and b!104935 res!52290) b!104936))

(assert (=> d!28585 m!114187))

(assert (=> d!28585 m!114305))

(declare-fun m!116985 () Bool)

(assert (=> b!104935 m!116985))

(declare-fun m!116987 () Bool)

(assert (=> b!104936 m!116987))

(assert (=> d!27823 d!28585))

(assert (=> d!27823 d!28049))

(declare-fun d!28587 () Bool)

(declare-fun e!68322 () Bool)

(assert (=> d!28587 e!68322))

(declare-fun res!52292 () Bool)

(assert (=> d!28587 (=> res!52292 e!68322)))

(declare-fun lt!53642 () Bool)

(assert (=> d!28587 (= res!52292 (not lt!53642))))

(declare-fun lt!53640 () Bool)

(assert (=> d!28587 (= lt!53642 lt!53640)))

(declare-fun lt!53639 () Unit!3170)

(declare-fun e!68321 () Unit!3170)

(assert (=> d!28587 (= lt!53639 e!68321)))

(declare-fun c!18219 () Bool)

(assert (=> d!28587 (= c!18219 lt!53640)))

(assert (=> d!28587 (= lt!53640 (containsKey!158 (toList!805 (+!143 lt!52952 (tuple2!2403 lt!52958 lt!52955))) lt!52954))))

(assert (=> d!28587 (= (contains!825 (+!143 lt!52952 (tuple2!2403 lt!52958 lt!52955)) lt!52954) lt!53642)))

(declare-fun b!104937 () Bool)

(declare-fun lt!53641 () Unit!3170)

(assert (=> b!104937 (= e!68321 lt!53641)))

(assert (=> b!104937 (= lt!53641 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 (+!143 lt!52952 (tuple2!2403 lt!52958 lt!52955))) lt!52954))))

(assert (=> b!104937 (isDefined!108 (getValueByKey!154 (toList!805 (+!143 lt!52952 (tuple2!2403 lt!52958 lt!52955))) lt!52954))))

(declare-fun b!104938 () Bool)

(declare-fun Unit!3237 () Unit!3170)

(assert (=> b!104938 (= e!68321 Unit!3237)))

(declare-fun b!104939 () Bool)

(assert (=> b!104939 (= e!68322 (isDefined!108 (getValueByKey!154 (toList!805 (+!143 lt!52952 (tuple2!2403 lt!52958 lt!52955))) lt!52954)))))

(assert (= (and d!28587 c!18219) b!104937))

(assert (= (and d!28587 (not c!18219)) b!104938))

(assert (= (and d!28587 (not res!52292)) b!104939))

(declare-fun m!116989 () Bool)

(assert (=> d!28587 m!116989))

(declare-fun m!116991 () Bool)

(assert (=> b!104937 m!116991))

(declare-fun m!116993 () Bool)

(assert (=> b!104937 m!116993))

(assert (=> b!104937 m!116993))

(declare-fun m!116995 () Bool)

(assert (=> b!104937 m!116995))

(assert (=> b!104939 m!116993))

(assert (=> b!104939 m!116993))

(assert (=> b!104939 m!116995))

(assert (=> b!103755 d!28587))

(assert (=> b!103755 d!28199))

(declare-fun d!28589 () Bool)

(declare-fun e!68323 () Bool)

(assert (=> d!28589 e!68323))

(declare-fun res!52294 () Bool)

(assert (=> d!28589 (=> (not res!52294) (not e!68323))))

(declare-fun lt!53643 () ListLongMap!1579)

(assert (=> d!28589 (= res!52294 (contains!825 lt!53643 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!53646 () List!1637)

(assert (=> d!28589 (= lt!53643 (ListLongMap!1580 lt!53646))))

(declare-fun lt!53645 () Unit!3170)

(declare-fun lt!53644 () Unit!3170)

(assert (=> d!28589 (= lt!53645 lt!53644)))

(assert (=> d!28589 (= (getValueByKey!154 lt!53646 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!159 (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28589 (= lt!53644 (lemmaContainsTupThenGetReturnValue!72 lt!53646 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28589 (= lt!53646 (insertStrictlySorted!74 (toList!805 call!10901) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28589 (= (+!143 call!10901 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!53643)))

(declare-fun b!104940 () Bool)

(declare-fun res!52293 () Bool)

(assert (=> b!104940 (=> (not res!52293) (not e!68323))))

(assert (=> b!104940 (= res!52293 (= (getValueByKey!154 (toList!805 lt!53643) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!159 (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!104941 () Bool)

(assert (=> b!104941 (= e!68323 (contains!828 (toList!805 lt!53643) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1333 (select (arr!2057 (_values!2544 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!28589 res!52294) b!104940))

(assert (= (and b!104940 res!52293) b!104941))

(declare-fun m!116997 () Bool)

(assert (=> d!28589 m!116997))

(declare-fun m!116999 () Bool)

(assert (=> d!28589 m!116999))

(declare-fun m!117001 () Bool)

(assert (=> d!28589 m!117001))

(declare-fun m!117003 () Bool)

(assert (=> d!28589 m!117003))

(declare-fun m!117005 () Bool)

(assert (=> b!104940 m!117005))

(declare-fun m!117007 () Bool)

(assert (=> b!104941 m!117007))

(assert (=> b!103755 d!28589))

(declare-fun d!28591 () Bool)

(assert (=> d!28591 (not (contains!825 (+!143 lt!52952 (tuple2!2403 lt!52958 lt!52955)) lt!52954))))

(declare-fun lt!53647 () Unit!3170)

(assert (=> d!28591 (= lt!53647 (choose!654 lt!52952 lt!52958 lt!52955 lt!52954))))

(declare-fun e!68324 () Bool)

(assert (=> d!28591 e!68324))

(declare-fun res!52295 () Bool)

(assert (=> d!28591 (=> (not res!52295) (not e!68324))))

(assert (=> d!28591 (= res!52295 (not (contains!825 lt!52952 lt!52954)))))

(assert (=> d!28591 (= (addStillNotContains!47 lt!52952 lt!52958 lt!52955 lt!52954) lt!53647)))

(declare-fun b!104942 () Bool)

(assert (=> b!104942 (= e!68324 (not (= lt!52958 lt!52954)))))

(assert (= (and d!28591 res!52295) b!104942))

(assert (=> d!28591 m!114745))

(assert (=> d!28591 m!114745))

(assert (=> d!28591 m!114749))

(declare-fun m!117009 () Bool)

(assert (=> d!28591 m!117009))

(declare-fun m!117011 () Bool)

(assert (=> d!28591 m!117011))

(assert (=> b!103755 d!28591))

(declare-fun d!28593 () Bool)

(declare-fun e!68325 () Bool)

(assert (=> d!28593 e!68325))

(declare-fun res!52297 () Bool)

(assert (=> d!28593 (=> (not res!52297) (not e!68325))))

(declare-fun lt!53648 () ListLongMap!1579)

(assert (=> d!28593 (= res!52297 (contains!825 lt!53648 (_1!1211 (tuple2!2403 lt!52958 lt!52955))))))

(declare-fun lt!53651 () List!1637)

(assert (=> d!28593 (= lt!53648 (ListLongMap!1580 lt!53651))))

(declare-fun lt!53650 () Unit!3170)

(declare-fun lt!53649 () Unit!3170)

(assert (=> d!28593 (= lt!53650 lt!53649)))

(assert (=> d!28593 (= (getValueByKey!154 lt!53651 (_1!1211 (tuple2!2403 lt!52958 lt!52955))) (Some!159 (_2!1211 (tuple2!2403 lt!52958 lt!52955))))))

(assert (=> d!28593 (= lt!53649 (lemmaContainsTupThenGetReturnValue!72 lt!53651 (_1!1211 (tuple2!2403 lt!52958 lt!52955)) (_2!1211 (tuple2!2403 lt!52958 lt!52955))))))

(assert (=> d!28593 (= lt!53651 (insertStrictlySorted!74 (toList!805 lt!52952) (_1!1211 (tuple2!2403 lt!52958 lt!52955)) (_2!1211 (tuple2!2403 lt!52958 lt!52955))))))

(assert (=> d!28593 (= (+!143 lt!52952 (tuple2!2403 lt!52958 lt!52955)) lt!53648)))

(declare-fun b!104943 () Bool)

(declare-fun res!52296 () Bool)

(assert (=> b!104943 (=> (not res!52296) (not e!68325))))

(assert (=> b!104943 (= res!52296 (= (getValueByKey!154 (toList!805 lt!53648) (_1!1211 (tuple2!2403 lt!52958 lt!52955))) (Some!159 (_2!1211 (tuple2!2403 lt!52958 lt!52955)))))))

(declare-fun b!104944 () Bool)

(assert (=> b!104944 (= e!68325 (contains!828 (toList!805 lt!53648) (tuple2!2403 lt!52958 lt!52955)))))

(assert (= (and d!28593 res!52297) b!104943))

(assert (= (and b!104943 res!52296) b!104944))

(declare-fun m!117013 () Bool)

(assert (=> d!28593 m!117013))

(declare-fun m!117015 () Bool)

(assert (=> d!28593 m!117015))

(declare-fun m!117017 () Bool)

(assert (=> d!28593 m!117017))

(declare-fun m!117019 () Bool)

(assert (=> d!28593 m!117019))

(declare-fun m!117021 () Bool)

(assert (=> b!104943 m!117021))

(declare-fun m!117023 () Bool)

(assert (=> b!104944 m!117023))

(assert (=> b!103755 d!28593))

(assert (=> d!28011 d!28049))

(declare-fun d!28595 () Bool)

(declare-fun e!68327 () Bool)

(assert (=> d!28595 e!68327))

(declare-fun res!52298 () Bool)

(assert (=> d!28595 (=> res!52298 e!68327)))

(declare-fun lt!53655 () Bool)

(assert (=> d!28595 (= res!52298 (not lt!53655))))

(declare-fun lt!53653 () Bool)

(assert (=> d!28595 (= lt!53655 lt!53653)))

(declare-fun lt!53652 () Unit!3170)

(declare-fun e!68326 () Unit!3170)

(assert (=> d!28595 (= lt!53652 e!68326)))

(declare-fun c!18220 () Bool)

(assert (=> d!28595 (= c!18220 lt!53653)))

(assert (=> d!28595 (= lt!53653 (containsKey!158 (toList!805 lt!53099) (_1!1211 (tuple2!2403 lt!52790 lt!52787))))))

(assert (=> d!28595 (= (contains!825 lt!53099 (_1!1211 (tuple2!2403 lt!52790 lt!52787))) lt!53655)))

(declare-fun b!104945 () Bool)

(declare-fun lt!53654 () Unit!3170)

(assert (=> b!104945 (= e!68326 lt!53654)))

(assert (=> b!104945 (= lt!53654 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!53099) (_1!1211 (tuple2!2403 lt!52790 lt!52787))))))

(assert (=> b!104945 (isDefined!108 (getValueByKey!154 (toList!805 lt!53099) (_1!1211 (tuple2!2403 lt!52790 lt!52787))))))

(declare-fun b!104946 () Bool)

(declare-fun Unit!3238 () Unit!3170)

(assert (=> b!104946 (= e!68326 Unit!3238)))

(declare-fun b!104947 () Bool)

(assert (=> b!104947 (= e!68327 (isDefined!108 (getValueByKey!154 (toList!805 lt!53099) (_1!1211 (tuple2!2403 lt!52790 lt!52787)))))))

(assert (= (and d!28595 c!18220) b!104945))

(assert (= (and d!28595 (not c!18220)) b!104946))

(assert (= (and d!28595 (not res!52298)) b!104947))

(declare-fun m!117025 () Bool)

(assert (=> d!28595 m!117025))

(declare-fun m!117027 () Bool)

(assert (=> b!104945 m!117027))

(assert (=> b!104945 m!115181))

(assert (=> b!104945 m!115181))

(declare-fun m!117029 () Bool)

(assert (=> b!104945 m!117029))

(assert (=> b!104947 m!115181))

(assert (=> b!104947 m!115181))

(assert (=> b!104947 m!117029))

(assert (=> d!27975 d!28595))

(declare-fun b!104949 () Bool)

(declare-fun e!68328 () Option!160)

(declare-fun e!68329 () Option!160)

(assert (=> b!104949 (= e!68328 e!68329)))

(declare-fun c!18222 () Bool)

(assert (=> b!104949 (= c!18222 (and ((_ is Cons!1633) lt!53102) (not (= (_1!1211 (h!2229 lt!53102)) (_1!1211 (tuple2!2403 lt!52790 lt!52787))))))))

(declare-fun b!104948 () Bool)

(assert (=> b!104948 (= e!68328 (Some!159 (_2!1211 (h!2229 lt!53102))))))

(declare-fun b!104950 () Bool)

(assert (=> b!104950 (= e!68329 (getValueByKey!154 (t!5711 lt!53102) (_1!1211 (tuple2!2403 lt!52790 lt!52787))))))

(declare-fun c!18221 () Bool)

(declare-fun d!28597 () Bool)

(assert (=> d!28597 (= c!18221 (and ((_ is Cons!1633) lt!53102) (= (_1!1211 (h!2229 lt!53102)) (_1!1211 (tuple2!2403 lt!52790 lt!52787)))))))

(assert (=> d!28597 (= (getValueByKey!154 lt!53102 (_1!1211 (tuple2!2403 lt!52790 lt!52787))) e!68328)))

(declare-fun b!104951 () Bool)

(assert (=> b!104951 (= e!68329 None!158)))

(assert (= (and d!28597 c!18221) b!104948))

(assert (= (and d!28597 (not c!18221)) b!104949))

(assert (= (and b!104949 c!18222) b!104950))

(assert (= (and b!104949 (not c!18222)) b!104951))

(declare-fun m!117031 () Bool)

(assert (=> b!104950 m!117031))

(assert (=> d!27975 d!28597))

(declare-fun d!28599 () Bool)

(assert (=> d!28599 (= (getValueByKey!154 lt!53102 (_1!1211 (tuple2!2403 lt!52790 lt!52787))) (Some!159 (_2!1211 (tuple2!2403 lt!52790 lt!52787))))))

(declare-fun lt!53656 () Unit!3170)

(assert (=> d!28599 (= lt!53656 (choose!650 lt!53102 (_1!1211 (tuple2!2403 lt!52790 lt!52787)) (_2!1211 (tuple2!2403 lt!52790 lt!52787))))))

(declare-fun e!68330 () Bool)

(assert (=> d!28599 e!68330))

(declare-fun res!52299 () Bool)

(assert (=> d!28599 (=> (not res!52299) (not e!68330))))

(assert (=> d!28599 (= res!52299 (isStrictlySorted!303 lt!53102))))

(assert (=> d!28599 (= (lemmaContainsTupThenGetReturnValue!72 lt!53102 (_1!1211 (tuple2!2403 lt!52790 lt!52787)) (_2!1211 (tuple2!2403 lt!52790 lt!52787))) lt!53656)))

(declare-fun b!104952 () Bool)

(declare-fun res!52300 () Bool)

(assert (=> b!104952 (=> (not res!52300) (not e!68330))))

(assert (=> b!104952 (= res!52300 (containsKey!158 lt!53102 (_1!1211 (tuple2!2403 lt!52790 lt!52787))))))

(declare-fun b!104953 () Bool)

(assert (=> b!104953 (= e!68330 (contains!828 lt!53102 (tuple2!2403 (_1!1211 (tuple2!2403 lt!52790 lt!52787)) (_2!1211 (tuple2!2403 lt!52790 lt!52787)))))))

(assert (= (and d!28599 res!52299) b!104952))

(assert (= (and b!104952 res!52300) b!104953))

(assert (=> d!28599 m!115175))

(declare-fun m!117033 () Bool)

(assert (=> d!28599 m!117033))

(declare-fun m!117035 () Bool)

(assert (=> d!28599 m!117035))

(declare-fun m!117037 () Bool)

(assert (=> b!104952 m!117037))

(declare-fun m!117039 () Bool)

(assert (=> b!104953 m!117039))

(assert (=> d!27975 d!28599))

(declare-fun e!68331 () Bool)

(declare-fun lt!53657 () List!1637)

(declare-fun b!104954 () Bool)

(assert (=> b!104954 (= e!68331 (contains!828 lt!53657 (tuple2!2403 (_1!1211 (tuple2!2403 lt!52790 lt!52787)) (_2!1211 (tuple2!2403 lt!52790 lt!52787)))))))

(declare-fun b!104955 () Bool)

(declare-fun e!68335 () List!1637)

(declare-fun call!11049 () List!1637)

(assert (=> b!104955 (= e!68335 call!11049)))

(declare-fun bm!11044 () Bool)

(declare-fun call!11047 () List!1637)

(declare-fun call!11048 () List!1637)

(assert (=> bm!11044 (= call!11047 call!11048)))

(declare-fun b!104956 () Bool)

(assert (=> b!104956 (= e!68335 call!11049)))

(declare-fun b!104957 () Bool)

(declare-fun c!18225 () Bool)

(assert (=> b!104957 (= c!18225 (and ((_ is Cons!1633) (toList!805 lt!52784)) (bvsgt (_1!1211 (h!2229 (toList!805 lt!52784))) (_1!1211 (tuple2!2403 lt!52790 lt!52787)))))))

(declare-fun e!68332 () List!1637)

(assert (=> b!104957 (= e!68332 e!68335)))

(declare-fun bm!11045 () Bool)

(assert (=> bm!11045 (= call!11049 call!11047)))

(declare-fun e!68334 () List!1637)

(declare-fun b!104958 () Bool)

(assert (=> b!104958 (= e!68334 (insertStrictlySorted!74 (t!5711 (toList!805 lt!52784)) (_1!1211 (tuple2!2403 lt!52790 lt!52787)) (_2!1211 (tuple2!2403 lt!52790 lt!52787))))))

(declare-fun b!104959 () Bool)

(declare-fun res!52302 () Bool)

(assert (=> b!104959 (=> (not res!52302) (not e!68331))))

(assert (=> b!104959 (= res!52302 (containsKey!158 lt!53657 (_1!1211 (tuple2!2403 lt!52790 lt!52787))))))

(declare-fun bm!11046 () Bool)

(declare-fun c!18226 () Bool)

(assert (=> bm!11046 (= call!11048 ($colon$colon!79 e!68334 (ite c!18226 (h!2229 (toList!805 lt!52784)) (tuple2!2403 (_1!1211 (tuple2!2403 lt!52790 lt!52787)) (_2!1211 (tuple2!2403 lt!52790 lt!52787))))))))

(declare-fun c!18224 () Bool)

(assert (=> bm!11046 (= c!18224 c!18226)))

(declare-fun d!28601 () Bool)

(assert (=> d!28601 e!68331))

(declare-fun res!52301 () Bool)

(assert (=> d!28601 (=> (not res!52301) (not e!68331))))

(assert (=> d!28601 (= res!52301 (isStrictlySorted!303 lt!53657))))

(declare-fun e!68333 () List!1637)

(assert (=> d!28601 (= lt!53657 e!68333)))

(assert (=> d!28601 (= c!18226 (and ((_ is Cons!1633) (toList!805 lt!52784)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52784))) (_1!1211 (tuple2!2403 lt!52790 lt!52787)))))))

(assert (=> d!28601 (isStrictlySorted!303 (toList!805 lt!52784))))

(assert (=> d!28601 (= (insertStrictlySorted!74 (toList!805 lt!52784) (_1!1211 (tuple2!2403 lt!52790 lt!52787)) (_2!1211 (tuple2!2403 lt!52790 lt!52787))) lt!53657)))

(declare-fun b!104960 () Bool)

(assert (=> b!104960 (= e!68333 e!68332)))

(declare-fun c!18223 () Bool)

(assert (=> b!104960 (= c!18223 (and ((_ is Cons!1633) (toList!805 lt!52784)) (= (_1!1211 (h!2229 (toList!805 lt!52784))) (_1!1211 (tuple2!2403 lt!52790 lt!52787)))))))

(declare-fun b!104961 () Bool)

(assert (=> b!104961 (= e!68332 call!11047)))

(declare-fun b!104962 () Bool)

(assert (=> b!104962 (= e!68333 call!11048)))

(declare-fun b!104963 () Bool)

(assert (=> b!104963 (= e!68334 (ite c!18223 (t!5711 (toList!805 lt!52784)) (ite c!18225 (Cons!1633 (h!2229 (toList!805 lt!52784)) (t!5711 (toList!805 lt!52784))) Nil!1634)))))

(assert (= (and d!28601 c!18226) b!104962))

(assert (= (and d!28601 (not c!18226)) b!104960))

(assert (= (and b!104960 c!18223) b!104961))

(assert (= (and b!104960 (not c!18223)) b!104957))

(assert (= (and b!104957 c!18225) b!104956))

(assert (= (and b!104957 (not c!18225)) b!104955))

(assert (= (or b!104956 b!104955) bm!11045))

(assert (= (or b!104961 bm!11045) bm!11044))

(assert (= (or b!104962 bm!11044) bm!11046))

(assert (= (and bm!11046 c!18224) b!104958))

(assert (= (and bm!11046 (not c!18224)) b!104963))

(assert (= (and d!28601 res!52301) b!104959))

(assert (= (and b!104959 res!52302) b!104954))

(declare-fun m!117041 () Bool)

(assert (=> b!104959 m!117041))

(declare-fun m!117043 () Bool)

(assert (=> bm!11046 m!117043))

(declare-fun m!117045 () Bool)

(assert (=> d!28601 m!117045))

(declare-fun m!117047 () Bool)

(assert (=> d!28601 m!117047))

(declare-fun m!117049 () Bool)

(assert (=> b!104954 m!117049))

(declare-fun m!117051 () Bool)

(assert (=> b!104958 m!117051))

(assert (=> d!27975 d!28601))

(declare-fun d!28603 () Bool)

(declare-fun e!68337 () Bool)

(assert (=> d!28603 e!68337))

(declare-fun res!52303 () Bool)

(assert (=> d!28603 (=> res!52303 e!68337)))

(declare-fun lt!53661 () Bool)

(assert (=> d!28603 (= res!52303 (not lt!53661))))

(declare-fun lt!53659 () Bool)

(assert (=> d!28603 (= lt!53661 lt!53659)))

(declare-fun lt!53658 () Unit!3170)

(declare-fun e!68336 () Unit!3170)

(assert (=> d!28603 (= lt!53658 e!68336)))

(declare-fun c!18227 () Bool)

(assert (=> d!28603 (= c!18227 lt!53659)))

(assert (=> d!28603 (= lt!53659 (containsKey!158 (toList!805 lt!52948) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!28603 (= (contains!825 lt!52948 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) lt!53661)))

(declare-fun b!104964 () Bool)

(declare-fun lt!53660 () Unit!3170)

(assert (=> b!104964 (= e!68336 lt!53660)))

(assert (=> b!104964 (= lt!53660 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52948) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> b!104964 (isDefined!108 (getValueByKey!154 (toList!805 lt!52948) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun b!104965 () Bool)

(declare-fun Unit!3239 () Unit!3170)

(assert (=> b!104965 (= e!68336 Unit!3239)))

(declare-fun b!104966 () Bool)

(assert (=> b!104966 (= e!68337 (isDefined!108 (getValueByKey!154 (toList!805 lt!52948) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (= (and d!28603 c!18227) b!104964))

(assert (= (and d!28603 (not c!18227)) b!104965))

(assert (= (and d!28603 (not res!52303)) b!104966))

(declare-fun m!117053 () Bool)

(assert (=> d!28603 m!117053))

(declare-fun m!117055 () Bool)

(assert (=> b!104964 m!117055))

(assert (=> b!104964 m!114729))

(assert (=> b!104964 m!114729))

(declare-fun m!117057 () Bool)

(assert (=> b!104964 m!117057))

(assert (=> b!104966 m!114729))

(assert (=> b!104966 m!114729))

(assert (=> b!104966 m!117057))

(assert (=> d!27843 d!28603))

(declare-fun b!104968 () Bool)

(declare-fun e!68338 () Option!160)

(declare-fun e!68339 () Option!160)

(assert (=> b!104968 (= e!68338 e!68339)))

(declare-fun c!18229 () Bool)

(assert (=> b!104968 (= c!18229 (and ((_ is Cons!1633) lt!52951) (not (= (_1!1211 (h!2229 lt!52951)) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))))

(declare-fun b!104967 () Bool)

(assert (=> b!104967 (= e!68338 (Some!159 (_2!1211 (h!2229 lt!52951))))))

(declare-fun b!104969 () Bool)

(assert (=> b!104969 (= e!68339 (getValueByKey!154 (t!5711 lt!52951) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun d!28605 () Bool)

(declare-fun c!18228 () Bool)

(assert (=> d!28605 (= c!18228 (and ((_ is Cons!1633) lt!52951) (= (_1!1211 (h!2229 lt!52951)) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (=> d!28605 (= (getValueByKey!154 lt!52951 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) e!68338)))

(declare-fun b!104970 () Bool)

(assert (=> b!104970 (= e!68339 None!158)))

(assert (= (and d!28605 c!18228) b!104967))

(assert (= (and d!28605 (not c!18228)) b!104968))

(assert (= (and b!104968 c!18229) b!104969))

(assert (= (and b!104968 (not c!18229)) b!104970))

(declare-fun m!117059 () Bool)

(assert (=> b!104969 m!117059))

(assert (=> d!27843 d!28605))

(declare-fun d!28607 () Bool)

(assert (=> d!28607 (= (getValueByKey!154 lt!52951 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (Some!159 (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun lt!53662 () Unit!3170)

(assert (=> d!28607 (= lt!53662 (choose!650 lt!52951 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun e!68340 () Bool)

(assert (=> d!28607 e!68340))

(declare-fun res!52304 () Bool)

(assert (=> d!28607 (=> (not res!52304) (not e!68340))))

(assert (=> d!28607 (= res!52304 (isStrictlySorted!303 lt!52951))))

(assert (=> d!28607 (= (lemmaContainsTupThenGetReturnValue!72 lt!52951 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) lt!53662)))

(declare-fun b!104971 () Bool)

(declare-fun res!52305 () Bool)

(assert (=> b!104971 (=> (not res!52305) (not e!68340))))

(assert (=> b!104971 (= res!52305 (containsKey!158 lt!52951 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun b!104972 () Bool)

(assert (=> b!104972 (= e!68340 (contains!828 lt!52951 (tuple2!2403 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (= (and d!28607 res!52304) b!104971))

(assert (= (and b!104971 res!52305) b!104972))

(assert (=> d!28607 m!114723))

(declare-fun m!117061 () Bool)

(assert (=> d!28607 m!117061))

(declare-fun m!117063 () Bool)

(assert (=> d!28607 m!117063))

(declare-fun m!117065 () Bool)

(assert (=> b!104971 m!117065))

(declare-fun m!117067 () Bool)

(assert (=> b!104972 m!117067))

(assert (=> d!27843 d!28607))

(declare-fun b!104973 () Bool)

(declare-fun e!68341 () Bool)

(declare-fun lt!53663 () List!1637)

(assert (=> b!104973 (= e!68341 (contains!828 lt!53663 (tuple2!2403 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun b!104974 () Bool)

(declare-fun e!68345 () List!1637)

(declare-fun call!11052 () List!1637)

(assert (=> b!104974 (= e!68345 call!11052)))

(declare-fun bm!11047 () Bool)

(declare-fun call!11050 () List!1637)

(declare-fun call!11051 () List!1637)

(assert (=> bm!11047 (= call!11050 call!11051)))

(declare-fun b!104975 () Bool)

(assert (=> b!104975 (= e!68345 call!11052)))

(declare-fun b!104976 () Bool)

(declare-fun c!18232 () Bool)

(assert (=> b!104976 (= c!18232 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52542 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))) (bvsgt (_1!1211 (h!2229 (toList!805 (+!143 lt!52542 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun e!68342 () List!1637)

(assert (=> b!104976 (= e!68342 e!68345)))

(declare-fun bm!11048 () Bool)

(assert (=> bm!11048 (= call!11052 call!11050)))

(declare-fun b!104977 () Bool)

(declare-fun e!68344 () List!1637)

(assert (=> b!104977 (= e!68344 (insertStrictlySorted!74 (t!5711 (toList!805 (+!143 lt!52542 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun b!104978 () Bool)

(declare-fun res!52307 () Bool)

(assert (=> b!104978 (=> (not res!52307) (not e!68341))))

(assert (=> b!104978 (= res!52307 (containsKey!158 lt!53663 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun bm!11049 () Bool)

(declare-fun c!18233 () Bool)

(assert (=> bm!11049 (= call!11051 ($colon$colon!79 e!68344 (ite c!18233 (h!2229 (toList!805 (+!143 lt!52542 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))) (tuple2!2403 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))))

(declare-fun c!18231 () Bool)

(assert (=> bm!11049 (= c!18231 c!18233)))

(declare-fun d!28609 () Bool)

(assert (=> d!28609 e!68341))

(declare-fun res!52306 () Bool)

(assert (=> d!28609 (=> (not res!52306) (not e!68341))))

(assert (=> d!28609 (= res!52306 (isStrictlySorted!303 lt!53663))))

(declare-fun e!68343 () List!1637)

(assert (=> d!28609 (= lt!53663 e!68343)))

(assert (=> d!28609 (= c!18233 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52542 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))) (bvslt (_1!1211 (h!2229 (toList!805 (+!143 lt!52542 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (=> d!28609 (isStrictlySorted!303 (toList!805 (+!143 lt!52542 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!28609 (= (insertStrictlySorted!74 (toList!805 (+!143 lt!52542 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) lt!53663)))

(declare-fun b!104979 () Bool)

(assert (=> b!104979 (= e!68343 e!68342)))

(declare-fun c!18230 () Bool)

(assert (=> b!104979 (= c!18230 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52542 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))) (= (_1!1211 (h!2229 (toList!805 (+!143 lt!52542 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun b!104980 () Bool)

(assert (=> b!104980 (= e!68342 call!11050)))

(declare-fun b!104981 () Bool)

(assert (=> b!104981 (= e!68343 call!11051)))

(declare-fun b!104982 () Bool)

(assert (=> b!104982 (= e!68344 (ite c!18230 (t!5711 (toList!805 (+!143 lt!52542 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))) (ite c!18232 (Cons!1633 (h!2229 (toList!805 (+!143 lt!52542 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))) (t!5711 (toList!805 (+!143 lt!52542 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))) Nil!1634)))))

(assert (= (and d!28609 c!18233) b!104981))

(assert (= (and d!28609 (not c!18233)) b!104979))

(assert (= (and b!104979 c!18230) b!104980))

(assert (= (and b!104979 (not c!18230)) b!104976))

(assert (= (and b!104976 c!18232) b!104975))

(assert (= (and b!104976 (not c!18232)) b!104974))

(assert (= (or b!104975 b!104974) bm!11048))

(assert (= (or b!104980 bm!11048) bm!11047))

(assert (= (or b!104981 bm!11047) bm!11049))

(assert (= (and bm!11049 c!18231) b!104977))

(assert (= (and bm!11049 (not c!18231)) b!104982))

(assert (= (and d!28609 res!52306) b!104978))

(assert (= (and b!104978 res!52307) b!104973))

(declare-fun m!117069 () Bool)

(assert (=> b!104978 m!117069))

(declare-fun m!117071 () Bool)

(assert (=> bm!11049 m!117071))

(declare-fun m!117073 () Bool)

(assert (=> d!28609 m!117073))

(declare-fun m!117075 () Bool)

(assert (=> d!28609 m!117075))

(declare-fun m!117077 () Bool)

(assert (=> b!104973 m!117077))

(declare-fun m!117079 () Bool)

(assert (=> b!104977 m!117079))

(assert (=> d!27843 d!28609))

(declare-fun d!28611 () Bool)

(declare-fun res!52308 () Bool)

(declare-fun e!68346 () Bool)

(assert (=> d!28611 (=> res!52308 e!68346)))

(assert (=> d!28611 (= res!52308 (and ((_ is Cons!1633) (toList!805 lt!52789)) (= (_1!1211 (h!2229 (toList!805 lt!52789))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28611 (= (containsKey!158 (toList!805 lt!52789) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!68346)))

(declare-fun b!104983 () Bool)

(declare-fun e!68347 () Bool)

(assert (=> b!104983 (= e!68346 e!68347)))

(declare-fun res!52309 () Bool)

(assert (=> b!104983 (=> (not res!52309) (not e!68347))))

(assert (=> b!104983 (= res!52309 (and (or (not ((_ is Cons!1633) (toList!805 lt!52789))) (bvsle (_1!1211 (h!2229 (toList!805 lt!52789))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1633) (toList!805 lt!52789)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52789))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!104984 () Bool)

(assert (=> b!104984 (= e!68347 (containsKey!158 (t!5711 (toList!805 lt!52789)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!28611 (not res!52308)) b!104983))

(assert (= (and b!104983 res!52309) b!104984))

(assert (=> b!104984 m!114355))

(declare-fun m!117081 () Bool)

(assert (=> b!104984 m!117081))

(assert (=> d!27913 d!28611))

(declare-fun d!28613 () Bool)

(assert (=> d!28613 (= (isEmpty!374 (getValueByKey!154 (toList!805 lt!52550) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))) (not ((_ is Some!159) (getValueByKey!154 (toList!805 lt!52550) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))))

(assert (=> d!27989 d!28613))

(assert (=> bm!10904 d!28149))

(declare-fun d!28615 () Bool)

(declare-fun c!18234 () Bool)

(assert (=> d!28615 (= c!18234 ((_ is Nil!1634) (toList!805 lt!52791)))))

(declare-fun e!68348 () (InoxSet tuple2!2402))

(assert (=> d!28615 (= (content!107 (toList!805 lt!52791)) e!68348)))

(declare-fun b!104985 () Bool)

(assert (=> b!104985 (= e!68348 ((as const (Array tuple2!2402 Bool)) false))))

(declare-fun b!104986 () Bool)

(assert (=> b!104986 (= e!68348 ((_ map or) (store ((as const (Array tuple2!2402 Bool)) false) (h!2229 (toList!805 lt!52791)) true) (content!107 (t!5711 (toList!805 lt!52791)))))))

(assert (= (and d!28615 c!18234) b!104985))

(assert (= (and d!28615 (not c!18234)) b!104986))

(declare-fun m!117083 () Bool)

(assert (=> b!104986 m!117083))

(declare-fun m!117085 () Bool)

(assert (=> b!104986 m!117085))

(assert (=> d!27961 d!28615))

(declare-fun d!28617 () Bool)

(declare-fun lt!53664 () Bool)

(assert (=> d!28617 (= lt!53664 (select (content!107 lt!53041) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))))))

(declare-fun e!68350 () Bool)

(assert (=> d!28617 (= lt!53664 e!68350)))

(declare-fun res!52310 () Bool)

(assert (=> d!28617 (=> (not res!52310) (not e!68350))))

(assert (=> d!28617 (= res!52310 ((_ is Cons!1633) lt!53041))))

(assert (=> d!28617 (= (contains!828 lt!53041 (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))) lt!53664)))

(declare-fun b!104987 () Bool)

(declare-fun e!68349 () Bool)

(assert (=> b!104987 (= e!68350 e!68349)))

(declare-fun res!52311 () Bool)

(assert (=> b!104987 (=> res!52311 e!68349)))

(assert (=> b!104987 (= res!52311 (= (h!2229 lt!53041) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))))))

(declare-fun b!104988 () Bool)

(assert (=> b!104988 (= e!68349 (contains!828 (t!5711 lt!53041) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))))))

(assert (= (and d!28617 res!52310) b!104987))

(assert (= (and b!104987 (not res!52311)) b!104988))

(declare-fun m!117087 () Bool)

(assert (=> d!28617 m!117087))

(declare-fun m!117089 () Bool)

(assert (=> d!28617 m!117089))

(declare-fun m!117091 () Bool)

(assert (=> b!104988 m!117091))

(assert (=> b!103903 d!28617))

(declare-fun d!28619 () Bool)

(declare-fun e!68352 () Bool)

(assert (=> d!28619 e!68352))

(declare-fun res!52312 () Bool)

(assert (=> d!28619 (=> res!52312 e!68352)))

(declare-fun lt!53668 () Bool)

(assert (=> d!28619 (= res!52312 (not lt!53668))))

(declare-fun lt!53666 () Bool)

(assert (=> d!28619 (= lt!53668 lt!53666)))

(declare-fun lt!53665 () Unit!3170)

(declare-fun e!68351 () Unit!3170)

(assert (=> d!28619 (= lt!53665 e!68351)))

(declare-fun c!18235 () Bool)

(assert (=> d!28619 (= c!18235 lt!53666)))

(assert (=> d!28619 (= lt!53666 (containsKey!158 (toList!805 lt!52751) lt!52736))))

(assert (=> d!28619 (= (contains!825 lt!52751 lt!52736) lt!53668)))

(declare-fun b!104989 () Bool)

(declare-fun lt!53667 () Unit!3170)

(assert (=> b!104989 (= e!68351 lt!53667)))

(assert (=> b!104989 (= lt!53667 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52751) lt!52736))))

(assert (=> b!104989 (isDefined!108 (getValueByKey!154 (toList!805 lt!52751) lt!52736))))

(declare-fun b!104990 () Bool)

(declare-fun Unit!3240 () Unit!3170)

(assert (=> b!104990 (= e!68351 Unit!3240)))

(declare-fun b!104991 () Bool)

(assert (=> b!104991 (= e!68352 (isDefined!108 (getValueByKey!154 (toList!805 lt!52751) lt!52736)))))

(assert (= (and d!28619 c!18235) b!104989))

(assert (= (and d!28619 (not c!18235)) b!104990))

(assert (= (and d!28619 (not res!52312)) b!104991))

(declare-fun m!117093 () Bool)

(assert (=> d!28619 m!117093))

(declare-fun m!117095 () Bool)

(assert (=> b!104989 m!117095))

(assert (=> b!104989 m!114883))

(assert (=> b!104989 m!114883))

(declare-fun m!117097 () Bool)

(assert (=> b!104989 m!117097))

(assert (=> b!104991 m!114883))

(assert (=> b!104991 m!114883))

(assert (=> b!104991 m!117097))

(assert (=> d!27879 d!28619))

(declare-fun d!28621 () Bool)

(assert (=> d!28621 (= (apply!97 (+!143 lt!52751 (tuple2!2403 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!52736) (apply!97 lt!52751 lt!52736))))

(assert (=> d!28621 true))

(declare-fun _$34!884 () Unit!3170)

(assert (=> d!28621 (= (choose!648 lt!52751 lt!52750 (minValue!2438 (v!2876 (underlying!359 thiss!992))) lt!52736) _$34!884)))

(declare-fun bs!4316 () Bool)

(assert (= bs!4316 d!28621))

(assert (=> bs!4316 m!114385))

(assert (=> bs!4316 m!114385))

(assert (=> bs!4316 m!114389))

(assert (=> bs!4316 m!114399))

(assert (=> d!27879 d!28621))

(assert (=> d!27879 d!27873))

(assert (=> d!27879 d!27865))

(assert (=> d!27879 d!27867))

(declare-fun d!28623 () Bool)

(declare-fun lt!53669 () Bool)

(assert (=> d!28623 (= lt!53669 (select (content!107 (t!5711 (toList!805 lt!52799))) lt!52551))))

(declare-fun e!68354 () Bool)

(assert (=> d!28623 (= lt!53669 e!68354)))

(declare-fun res!52313 () Bool)

(assert (=> d!28623 (=> (not res!52313) (not e!68354))))

(assert (=> d!28623 (= res!52313 ((_ is Cons!1633) (t!5711 (toList!805 lt!52799))))))

(assert (=> d!28623 (= (contains!828 (t!5711 (toList!805 lt!52799)) lt!52551) lt!53669)))

(declare-fun b!104992 () Bool)

(declare-fun e!68353 () Bool)

(assert (=> b!104992 (= e!68354 e!68353)))

(declare-fun res!52314 () Bool)

(assert (=> b!104992 (=> res!52314 e!68353)))

(assert (=> b!104992 (= res!52314 (= (h!2229 (t!5711 (toList!805 lt!52799))) lt!52551))))

(declare-fun b!104993 () Bool)

(assert (=> b!104993 (= e!68353 (contains!828 (t!5711 (t!5711 (toList!805 lt!52799))) lt!52551))))

(assert (= (and d!28623 res!52313) b!104992))

(assert (= (and b!104992 (not res!52314)) b!104993))

(assert (=> d!28623 m!116639))

(declare-fun m!117099 () Bool)

(assert (=> d!28623 m!117099))

(declare-fun m!117101 () Bool)

(assert (=> b!104993 m!117101))

(assert (=> b!103962 d!28623))

(declare-fun d!28625 () Bool)

(assert (=> d!28625 (= (apply!97 lt!53128 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1336 (getValueByKey!154 (toList!805 lt!53128) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4317 () Bool)

(assert (= bs!4317 d!28625))

(assert (=> bs!4317 m!115351))

(assert (=> bs!4317 m!115351))

(declare-fun m!117103 () Bool)

(assert (=> bs!4317 m!117103))

(assert (=> b!104022 d!28625))

(assert (=> d!27999 d!27989))

(assert (=> d!27999 d!27991))

(declare-fun d!28627 () Bool)

(assert (=> d!28627 (isDefined!108 (getValueByKey!154 (toList!805 lt!52550) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> d!28627 true))

(declare-fun _$12!350 () Unit!3170)

(assert (=> d!28627 (= (choose!656 (toList!805 lt!52550) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) _$12!350)))

(declare-fun bs!4318 () Bool)

(assert (= bs!4318 d!28627))

(assert (=> bs!4318 m!114187))

(assert (=> bs!4318 m!114291))

(assert (=> bs!4318 m!114291))

(assert (=> bs!4318 m!114293))

(assert (=> d!27999 d!28627))

(declare-fun d!28629 () Bool)

(declare-fun res!52315 () Bool)

(declare-fun e!68355 () Bool)

(assert (=> d!28629 (=> res!52315 e!68355)))

(assert (=> d!28629 (= res!52315 (or ((_ is Nil!1634) (toList!805 lt!52550)) ((_ is Nil!1634) (t!5711 (toList!805 lt!52550)))))))

(assert (=> d!28629 (= (isStrictlySorted!303 (toList!805 lt!52550)) e!68355)))

(declare-fun b!104994 () Bool)

(declare-fun e!68356 () Bool)

(assert (=> b!104994 (= e!68355 e!68356)))

(declare-fun res!52316 () Bool)

(assert (=> b!104994 (=> (not res!52316) (not e!68356))))

(assert (=> b!104994 (= res!52316 (bvslt (_1!1211 (h!2229 (toList!805 lt!52550))) (_1!1211 (h!2229 (t!5711 (toList!805 lt!52550))))))))

(declare-fun b!104995 () Bool)

(assert (=> b!104995 (= e!68356 (isStrictlySorted!303 (t!5711 (toList!805 lt!52550))))))

(assert (= (and d!28629 (not res!52315)) b!104994))

(assert (= (and b!104994 res!52316) b!104995))

(declare-fun m!117105 () Bool)

(assert (=> b!104995 m!117105))

(assert (=> d!27999 d!28629))

(declare-fun d!28631 () Bool)

(declare-fun e!68358 () Bool)

(assert (=> d!28631 e!68358))

(declare-fun res!52317 () Bool)

(assert (=> d!28631 (=> res!52317 e!68358)))

(declare-fun lt!53673 () Bool)

(assert (=> d!28631 (= res!52317 (not lt!53673))))

(declare-fun lt!53671 () Bool)

(assert (=> d!28631 (= lt!53673 lt!53671)))

(declare-fun lt!53670 () Unit!3170)

(declare-fun e!68357 () Unit!3170)

(assert (=> d!28631 (= lt!53670 e!68357)))

(declare-fun c!18236 () Bool)

(assert (=> d!28631 (= c!18236 lt!53671)))

(assert (=> d!28631 (= lt!53671 (containsKey!158 (toList!805 lt!52993) (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!28631 (= (contains!825 lt!52993 (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53673)))

(declare-fun b!104996 () Bool)

(declare-fun lt!53672 () Unit!3170)

(assert (=> b!104996 (= e!68357 lt!53672)))

(assert (=> b!104996 (= lt!53672 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52993) (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> b!104996 (isDefined!108 (getValueByKey!154 (toList!805 lt!52993) (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!104997 () Bool)

(declare-fun Unit!3241 () Unit!3170)

(assert (=> b!104997 (= e!68357 Unit!3241)))

(declare-fun b!104998 () Bool)

(assert (=> b!104998 (= e!68358 (isDefined!108 (getValueByKey!154 (toList!805 lt!52993) (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (= (and d!28631 c!18236) b!104996))

(assert (= (and d!28631 (not c!18236)) b!104997))

(assert (= (and d!28631 (not res!52317)) b!104998))

(declare-fun m!117107 () Bool)

(assert (=> d!28631 m!117107))

(declare-fun m!117109 () Bool)

(assert (=> b!104996 m!117109))

(assert (=> b!104996 m!114867))

(assert (=> b!104996 m!114867))

(declare-fun m!117111 () Bool)

(assert (=> b!104996 m!117111))

(assert (=> b!104998 m!114867))

(assert (=> b!104998 m!114867))

(assert (=> b!104998 m!117111))

(assert (=> d!27869 d!28631))

(declare-fun b!105000 () Bool)

(declare-fun e!68359 () Option!160)

(declare-fun e!68360 () Option!160)

(assert (=> b!105000 (= e!68359 e!68360)))

(declare-fun c!18238 () Bool)

(assert (=> b!105000 (= c!18238 (and ((_ is Cons!1633) lt!52996) (not (= (_1!1211 (h!2229 lt!52996)) (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun b!104999 () Bool)

(assert (=> b!104999 (= e!68359 (Some!159 (_2!1211 (h!2229 lt!52996))))))

(declare-fun b!105001 () Bool)

(assert (=> b!105001 (= e!68360 (getValueByKey!154 (t!5711 lt!52996) (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun c!18237 () Bool)

(declare-fun d!28633 () Bool)

(assert (=> d!28633 (= c!18237 (and ((_ is Cons!1633) lt!52996) (= (_1!1211 (h!2229 lt!52996)) (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28633 (= (getValueByKey!154 lt!52996 (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) e!68359)))

(declare-fun b!105002 () Bool)

(assert (=> b!105002 (= e!68360 None!158)))

(assert (= (and d!28633 c!18237) b!104999))

(assert (= (and d!28633 (not c!18237)) b!105000))

(assert (= (and b!105000 c!18238) b!105001))

(assert (= (and b!105000 (not c!18238)) b!105002))

(declare-fun m!117113 () Bool)

(assert (=> b!105001 m!117113))

(assert (=> d!27869 d!28633))

(declare-fun d!28635 () Bool)

(assert (=> d!28635 (= (getValueByKey!154 lt!52996 (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun lt!53674 () Unit!3170)

(assert (=> d!28635 (= lt!53674 (choose!650 lt!52996 (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun e!68361 () Bool)

(assert (=> d!28635 e!68361))

(declare-fun res!52318 () Bool)

(assert (=> d!28635 (=> (not res!52318) (not e!68361))))

(assert (=> d!28635 (= res!52318 (isStrictlySorted!303 lt!52996))))

(assert (=> d!28635 (= (lemmaContainsTupThenGetReturnValue!72 lt!52996 (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53674)))

(declare-fun b!105003 () Bool)

(declare-fun res!52319 () Bool)

(assert (=> b!105003 (=> (not res!52319) (not e!68361))))

(assert (=> b!105003 (= res!52319 (containsKey!158 lt!52996 (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!105004 () Bool)

(assert (=> b!105004 (= e!68361 (contains!828 lt!52996 (tuple2!2403 (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (= (and d!28635 res!52318) b!105003))

(assert (= (and b!105003 res!52319) b!105004))

(assert (=> d!28635 m!114861))

(declare-fun m!117115 () Bool)

(assert (=> d!28635 m!117115))

(declare-fun m!117117 () Bool)

(assert (=> d!28635 m!117117))

(declare-fun m!117119 () Bool)

(assert (=> b!105003 m!117119))

(declare-fun m!117121 () Bool)

(assert (=> b!105004 m!117121))

(assert (=> d!27869 d!28635))

(declare-fun b!105005 () Bool)

(declare-fun lt!53675 () List!1637)

(declare-fun e!68362 () Bool)

(assert (=> b!105005 (= e!68362 (contains!828 lt!53675 (tuple2!2403 (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!105006 () Bool)

(declare-fun e!68366 () List!1637)

(declare-fun call!11055 () List!1637)

(assert (=> b!105006 (= e!68366 call!11055)))

(declare-fun bm!11050 () Bool)

(declare-fun call!11053 () List!1637)

(declare-fun call!11054 () List!1637)

(assert (=> bm!11050 (= call!11053 call!11054)))

(declare-fun b!105007 () Bool)

(assert (=> b!105007 (= e!68366 call!11055)))

(declare-fun c!18241 () Bool)

(declare-fun b!105008 () Bool)

(assert (=> b!105008 (= c!18241 (and ((_ is Cons!1633) (toList!805 lt!52746)) (bvsgt (_1!1211 (h!2229 (toList!805 lt!52746))) (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun e!68363 () List!1637)

(assert (=> b!105008 (= e!68363 e!68366)))

(declare-fun bm!11051 () Bool)

(assert (=> bm!11051 (= call!11055 call!11053)))

(declare-fun e!68365 () List!1637)

(declare-fun b!105009 () Bool)

(assert (=> b!105009 (= e!68365 (insertStrictlySorted!74 (t!5711 (toList!805 lt!52746)) (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!105010 () Bool)

(declare-fun res!52321 () Bool)

(assert (=> b!105010 (=> (not res!52321) (not e!68362))))

(assert (=> b!105010 (= res!52321 (containsKey!158 lt!53675 (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun bm!11052 () Bool)

(declare-fun c!18242 () Bool)

(assert (=> bm!11052 (= call!11054 ($colon$colon!79 e!68365 (ite c!18242 (h!2229 (toList!805 lt!52746)) (tuple2!2403 (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun c!18240 () Bool)

(assert (=> bm!11052 (= c!18240 c!18242)))

(declare-fun d!28637 () Bool)

(assert (=> d!28637 e!68362))

(declare-fun res!52320 () Bool)

(assert (=> d!28637 (=> (not res!52320) (not e!68362))))

(assert (=> d!28637 (= res!52320 (isStrictlySorted!303 lt!53675))))

(declare-fun e!68364 () List!1637)

(assert (=> d!28637 (= lt!53675 e!68364)))

(assert (=> d!28637 (= c!18242 (and ((_ is Cons!1633) (toList!805 lt!52746)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52746))) (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28637 (isStrictlySorted!303 (toList!805 lt!52746))))

(assert (=> d!28637 (= (insertStrictlySorted!74 (toList!805 lt!52746) (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53675)))

(declare-fun b!105011 () Bool)

(assert (=> b!105011 (= e!68364 e!68363)))

(declare-fun c!18239 () Bool)

(assert (=> b!105011 (= c!18239 (and ((_ is Cons!1633) (toList!805 lt!52746)) (= (_1!1211 (h!2229 (toList!805 lt!52746))) (_1!1211 (tuple2!2403 lt!52741 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!105012 () Bool)

(assert (=> b!105012 (= e!68363 call!11053)))

(declare-fun b!105013 () Bool)

(assert (=> b!105013 (= e!68364 call!11054)))

(declare-fun b!105014 () Bool)

(assert (=> b!105014 (= e!68365 (ite c!18239 (t!5711 (toList!805 lt!52746)) (ite c!18241 (Cons!1633 (h!2229 (toList!805 lt!52746)) (t!5711 (toList!805 lt!52746))) Nil!1634)))))

(assert (= (and d!28637 c!18242) b!105013))

(assert (= (and d!28637 (not c!18242)) b!105011))

(assert (= (and b!105011 c!18239) b!105012))

(assert (= (and b!105011 (not c!18239)) b!105008))

(assert (= (and b!105008 c!18241) b!105007))

(assert (= (and b!105008 (not c!18241)) b!105006))

(assert (= (or b!105007 b!105006) bm!11051))

(assert (= (or b!105012 bm!11051) bm!11050))

(assert (= (or b!105013 bm!11050) bm!11052))

(assert (= (and bm!11052 c!18240) b!105009))

(assert (= (and bm!11052 (not c!18240)) b!105014))

(assert (= (and d!28637 res!52320) b!105010))

(assert (= (and b!105010 res!52321) b!105005))

(declare-fun m!117123 () Bool)

(assert (=> b!105010 m!117123))

(declare-fun m!117125 () Bool)

(assert (=> bm!11052 m!117125))

(declare-fun m!117127 () Bool)

(assert (=> d!28637 m!117127))

(declare-fun m!117129 () Bool)

(assert (=> d!28637 m!117129))

(declare-fun m!117131 () Bool)

(assert (=> b!105005 m!117131))

(declare-fun m!117133 () Bool)

(assert (=> b!105009 m!117133))

(assert (=> d!27869 d!28637))

(declare-fun d!28639 () Bool)

(declare-fun lt!53676 () Bool)

(assert (=> d!28639 (= lt!53676 (select (content!107 lt!52769) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))))))

(declare-fun e!68368 () Bool)

(assert (=> d!28639 (= lt!53676 e!68368)))

(declare-fun res!52322 () Bool)

(assert (=> d!28639 (=> (not res!52322) (not e!68368))))

(assert (=> d!28639 (= res!52322 ((_ is Cons!1633) lt!52769))))

(assert (=> d!28639 (= (contains!828 lt!52769 (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))) lt!53676)))

(declare-fun b!105015 () Bool)

(declare-fun e!68367 () Bool)

(assert (=> b!105015 (= e!68368 e!68367)))

(declare-fun res!52323 () Bool)

(assert (=> b!105015 (=> res!52323 e!68367)))

(assert (=> b!105015 (= res!52323 (= (h!2229 lt!52769) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))))))

(declare-fun b!105016 () Bool)

(assert (=> b!105016 (= e!68367 (contains!828 (t!5711 lt!52769) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))))))

(assert (= (and d!28639 res!52322) b!105015))

(assert (= (and b!105015 (not res!52323)) b!105016))

(declare-fun m!117135 () Bool)

(assert (=> d!28639 m!117135))

(declare-fun m!117137 () Bool)

(assert (=> d!28639 m!117137))

(declare-fun m!117139 () Bool)

(assert (=> b!105016 m!117139))

(assert (=> b!104074 d!28639))

(declare-fun b!105018 () Bool)

(declare-fun res!52325 () Bool)

(declare-fun e!68369 () Bool)

(assert (=> b!105018 (=> (not res!52325) (not e!68369))))

(assert (=> b!105018 (= res!52325 (bvsge (size!2314 (_2!1210 lt!52662)) (_size!496 (_2!1210 lt!52662))))))

(declare-fun b!105019 () Bool)

(declare-fun res!52324 () Bool)

(assert (=> b!105019 (=> (not res!52324) (not e!68369))))

(assert (=> b!105019 (= res!52324 (= (size!2314 (_2!1210 lt!52662)) (bvadd (_size!496 (_2!1210 lt!52662)) (bvsdiv (bvadd (extraKeys!2370 (_2!1210 lt!52662)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!105017 () Bool)

(declare-fun res!52327 () Bool)

(assert (=> b!105017 (=> (not res!52327) (not e!68369))))

(assert (=> b!105017 (= res!52327 (and (= (size!2311 (_values!2544 (_2!1210 lt!52662))) (bvadd (mask!6697 (_2!1210 lt!52662)) #b00000000000000000000000000000001)) (= (size!2310 (_keys!4263 (_2!1210 lt!52662))) (size!2311 (_values!2544 (_2!1210 lt!52662)))) (bvsge (_size!496 (_2!1210 lt!52662)) #b00000000000000000000000000000000) (bvsle (_size!496 (_2!1210 lt!52662)) (bvadd (mask!6697 (_2!1210 lt!52662)) #b00000000000000000000000000000001))))))

(declare-fun d!28641 () Bool)

(declare-fun res!52326 () Bool)

(assert (=> d!28641 (=> (not res!52326) (not e!68369))))

(assert (=> d!28641 (= res!52326 (validMask!0 (mask!6697 (_2!1210 lt!52662))))))

(assert (=> d!28641 (= (simpleValid!72 (_2!1210 lt!52662)) e!68369)))

(declare-fun b!105020 () Bool)

(assert (=> b!105020 (= e!68369 (and (bvsge (extraKeys!2370 (_2!1210 lt!52662)) #b00000000000000000000000000000000) (bvsle (extraKeys!2370 (_2!1210 lt!52662)) #b00000000000000000000000000000011) (bvsge (_vacant!496 (_2!1210 lt!52662)) #b00000000000000000000000000000000)))))

(assert (= (and d!28641 res!52326) b!105017))

(assert (= (and b!105017 res!52327) b!105018))

(assert (= (and b!105018 res!52325) b!105019))

(assert (= (and b!105019 res!52324) b!105020))

(declare-fun m!117141 () Bool)

(assert (=> b!105018 m!117141))

(assert (=> b!105019 m!117141))

(assert (=> d!28641 m!116437))

(assert (=> d!27963 d!28641))

(declare-fun d!28643 () Bool)

(declare-fun res!52328 () Bool)

(declare-fun e!68370 () Bool)

(assert (=> d!28643 (=> res!52328 e!68370)))

(assert (=> d!28643 (= res!52328 (and ((_ is Cons!1633) lt!52794) (= (_1!1211 (h!2229 lt!52794)) (_1!1211 lt!52547))))))

(assert (=> d!28643 (= (containsKey!158 lt!52794 (_1!1211 lt!52547)) e!68370)))

(declare-fun b!105021 () Bool)

(declare-fun e!68371 () Bool)

(assert (=> b!105021 (= e!68370 e!68371)))

(declare-fun res!52329 () Bool)

(assert (=> b!105021 (=> (not res!52329) (not e!68371))))

(assert (=> b!105021 (= res!52329 (and (or (not ((_ is Cons!1633) lt!52794)) (bvsle (_1!1211 (h!2229 lt!52794)) (_1!1211 lt!52547))) ((_ is Cons!1633) lt!52794) (bvslt (_1!1211 (h!2229 lt!52794)) (_1!1211 lt!52547))))))

(declare-fun b!105022 () Bool)

(assert (=> b!105022 (= e!68371 (containsKey!158 (t!5711 lt!52794) (_1!1211 lt!52547)))))

(assert (= (and d!28643 (not res!52328)) b!105021))

(assert (= (and b!105021 res!52329) b!105022))

(declare-fun m!117143 () Bool)

(assert (=> b!105022 m!117143))

(assert (=> b!103901 d!28643))

(declare-fun d!28645 () Bool)

(declare-fun e!68373 () Bool)

(assert (=> d!28645 e!68373))

(declare-fun res!52330 () Bool)

(assert (=> d!28645 (=> res!52330 e!68373)))

(declare-fun lt!53680 () Bool)

(assert (=> d!28645 (= res!52330 (not lt!53680))))

(declare-fun lt!53678 () Bool)

(assert (=> d!28645 (= lt!53680 lt!53678)))

(declare-fun lt!53677 () Unit!3170)

(declare-fun e!68372 () Unit!3170)

(assert (=> d!28645 (= lt!53677 e!68372)))

(declare-fun c!18243 () Bool)

(assert (=> d!28645 (= c!18243 lt!53678)))

(assert (=> d!28645 (= lt!53678 (containsKey!158 (toList!805 lt!52936) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!28645 (= (contains!825 lt!52936 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53680)))

(declare-fun b!105023 () Bool)

(declare-fun lt!53679 () Unit!3170)

(assert (=> b!105023 (= e!68372 lt!53679)))

(assert (=> b!105023 (= lt!53679 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52936) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> b!105023 (isDefined!108 (getValueByKey!154 (toList!805 lt!52936) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!105024 () Bool)

(declare-fun Unit!3242 () Unit!3170)

(assert (=> b!105024 (= e!68372 Unit!3242)))

(declare-fun b!105025 () Bool)

(assert (=> b!105025 (= e!68373 (isDefined!108 (getValueByKey!154 (toList!805 lt!52936) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (= (and d!28645 c!18243) b!105023))

(assert (= (and d!28645 (not c!18243)) b!105024))

(assert (= (and d!28645 (not res!52330)) b!105025))

(declare-fun m!117145 () Bool)

(assert (=> d!28645 m!117145))

(declare-fun m!117147 () Bool)

(assert (=> b!105023 m!117147))

(assert (=> b!105023 m!114693))

(assert (=> b!105023 m!114693))

(declare-fun m!117149 () Bool)

(assert (=> b!105023 m!117149))

(assert (=> b!105025 m!114693))

(assert (=> b!105025 m!114693))

(assert (=> b!105025 m!117149))

(assert (=> d!27837 d!28645))

(declare-fun b!105027 () Bool)

(declare-fun e!68374 () Option!160)

(declare-fun e!68375 () Option!160)

(assert (=> b!105027 (= e!68374 e!68375)))

(declare-fun c!18245 () Bool)

(assert (=> b!105027 (= c!18245 (and ((_ is Cons!1633) lt!52939) (not (= (_1!1211 (h!2229 lt!52939)) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun b!105026 () Bool)

(assert (=> b!105026 (= e!68374 (Some!159 (_2!1211 (h!2229 lt!52939))))))

(declare-fun b!105028 () Bool)

(assert (=> b!105028 (= e!68375 (getValueByKey!154 (t!5711 lt!52939) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun d!28647 () Bool)

(declare-fun c!18244 () Bool)

(assert (=> d!28647 (= c!18244 (and ((_ is Cons!1633) lt!52939) (= (_1!1211 (h!2229 lt!52939)) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28647 (= (getValueByKey!154 lt!52939 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) e!68374)))

(declare-fun b!105029 () Bool)

(assert (=> b!105029 (= e!68375 None!158)))

(assert (= (and d!28647 c!18244) b!105026))

(assert (= (and d!28647 (not c!18244)) b!105027))

(assert (= (and b!105027 c!18245) b!105028))

(assert (= (and b!105027 (not c!18245)) b!105029))

(declare-fun m!117151 () Bool)

(assert (=> b!105028 m!117151))

(assert (=> d!27837 d!28647))

(declare-fun d!28649 () Bool)

(assert (=> d!28649 (= (getValueByKey!154 lt!52939 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun lt!53681 () Unit!3170)

(assert (=> d!28649 (= lt!53681 (choose!650 lt!52939 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun e!68376 () Bool)

(assert (=> d!28649 e!68376))

(declare-fun res!52331 () Bool)

(assert (=> d!28649 (=> (not res!52331) (not e!68376))))

(assert (=> d!28649 (= res!52331 (isStrictlySorted!303 lt!52939))))

(assert (=> d!28649 (= (lemmaContainsTupThenGetReturnValue!72 lt!52939 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53681)))

(declare-fun b!105030 () Bool)

(declare-fun res!52332 () Bool)

(assert (=> b!105030 (=> (not res!52332) (not e!68376))))

(assert (=> b!105030 (= res!52332 (containsKey!158 lt!52939 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!105031 () Bool)

(assert (=> b!105031 (= e!68376 (contains!828 lt!52939 (tuple2!2403 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (= (and d!28649 res!52331) b!105030))

(assert (= (and b!105030 res!52332) b!105031))

(assert (=> d!28649 m!114687))

(declare-fun m!117153 () Bool)

(assert (=> d!28649 m!117153))

(declare-fun m!117155 () Bool)

(assert (=> d!28649 m!117155))

(declare-fun m!117157 () Bool)

(assert (=> b!105030 m!117157))

(declare-fun m!117159 () Bool)

(assert (=> b!105031 m!117159))

(assert (=> d!27837 d!28649))

(declare-fun b!105032 () Bool)

(declare-fun e!68377 () Bool)

(declare-fun lt!53682 () List!1637)

(assert (=> b!105032 (= e!68377 (contains!828 lt!53682 (tuple2!2403 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!105033 () Bool)

(declare-fun e!68381 () List!1637)

(declare-fun call!11058 () List!1637)

(assert (=> b!105033 (= e!68381 call!11058)))

(declare-fun bm!11053 () Bool)

(declare-fun call!11056 () List!1637)

(declare-fun call!11057 () List!1637)

(assert (=> bm!11053 (= call!11056 call!11057)))

(declare-fun b!105034 () Bool)

(assert (=> b!105034 (= e!68381 call!11058)))

(declare-fun b!105035 () Bool)

(declare-fun c!18248 () Bool)

(assert (=> b!105035 (= c!18248 (and ((_ is Cons!1633) (toList!805 lt!52542)) (bvsgt (_1!1211 (h!2229 (toList!805 lt!52542))) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun e!68378 () List!1637)

(assert (=> b!105035 (= e!68378 e!68381)))

(declare-fun bm!11054 () Bool)

(assert (=> bm!11054 (= call!11058 call!11056)))

(declare-fun b!105036 () Bool)

(declare-fun e!68380 () List!1637)

(assert (=> b!105036 (= e!68380 (insertStrictlySorted!74 (t!5711 (toList!805 lt!52542)) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!105037 () Bool)

(declare-fun res!52334 () Bool)

(assert (=> b!105037 (=> (not res!52334) (not e!68377))))

(assert (=> b!105037 (= res!52334 (containsKey!158 lt!53682 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun bm!11055 () Bool)

(declare-fun c!18249 () Bool)

(assert (=> bm!11055 (= call!11057 ($colon$colon!79 e!68380 (ite c!18249 (h!2229 (toList!805 lt!52542)) (tuple2!2403 (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun c!18247 () Bool)

(assert (=> bm!11055 (= c!18247 c!18249)))

(declare-fun d!28651 () Bool)

(assert (=> d!28651 e!68377))

(declare-fun res!52333 () Bool)

(assert (=> d!28651 (=> (not res!52333) (not e!68377))))

(assert (=> d!28651 (= res!52333 (isStrictlySorted!303 lt!53682))))

(declare-fun e!68379 () List!1637)

(assert (=> d!28651 (= lt!53682 e!68379)))

(assert (=> d!28651 (= c!18249 (and ((_ is Cons!1633) (toList!805 lt!52542)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52542))) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28651 (isStrictlySorted!303 (toList!805 lt!52542))))

(assert (=> d!28651 (= (insertStrictlySorted!74 (toList!805 lt!52542) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53682)))

(declare-fun b!105038 () Bool)

(assert (=> b!105038 (= e!68379 e!68378)))

(declare-fun c!18246 () Bool)

(assert (=> b!105038 (= c!18246 (and ((_ is Cons!1633) (toList!805 lt!52542)) (= (_1!1211 (h!2229 (toList!805 lt!52542))) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!105039 () Bool)

(assert (=> b!105039 (= e!68378 call!11056)))

(declare-fun b!105040 () Bool)

(assert (=> b!105040 (= e!68379 call!11057)))

(declare-fun b!105041 () Bool)

(assert (=> b!105041 (= e!68380 (ite c!18246 (t!5711 (toList!805 lt!52542)) (ite c!18248 (Cons!1633 (h!2229 (toList!805 lt!52542)) (t!5711 (toList!805 lt!52542))) Nil!1634)))))

(assert (= (and d!28651 c!18249) b!105040))

(assert (= (and d!28651 (not c!18249)) b!105038))

(assert (= (and b!105038 c!18246) b!105039))

(assert (= (and b!105038 (not c!18246)) b!105035))

(assert (= (and b!105035 c!18248) b!105034))

(assert (= (and b!105035 (not c!18248)) b!105033))

(assert (= (or b!105034 b!105033) bm!11054))

(assert (= (or b!105039 bm!11054) bm!11053))

(assert (= (or b!105040 bm!11053) bm!11055))

(assert (= (and bm!11055 c!18247) b!105036))

(assert (= (and bm!11055 (not c!18247)) b!105041))

(assert (= (and d!28651 res!52333) b!105037))

(assert (= (and b!105037 res!52334) b!105032))

(declare-fun m!117161 () Bool)

(assert (=> b!105037 m!117161))

(declare-fun m!117163 () Bool)

(assert (=> bm!11055 m!117163))

(declare-fun m!117165 () Bool)

(assert (=> d!28651 m!117165))

(assert (=> d!28651 m!114951))

(declare-fun m!117167 () Bool)

(assert (=> b!105032 m!117167))

(declare-fun m!117169 () Bool)

(assert (=> b!105036 m!117169))

(assert (=> d!27837 d!28651))

(assert (=> b!103996 d!28033))

(assert (=> b!103996 d!28035))

(declare-fun d!28653 () Bool)

(assert (=> d!28653 (= (apply!97 lt!53128 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1336 (getValueByKey!154 (toList!805 lt!53128) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4319 () Bool)

(assert (= bs!4319 d!28653))

(assert (=> bs!4319 m!115547))

(assert (=> bs!4319 m!115547))

(declare-fun m!117171 () Bool)

(assert (=> bs!4319 m!117171))

(assert (=> b!104035 d!28653))

(assert (=> b!103896 d!28029))

(assert (=> b!103896 d!27831))

(declare-fun d!28655 () Bool)

(assert (=> d!28655 (= (apply!97 lt!52823 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1336 (getValueByKey!154 (toList!805 lt!52823) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4320 () Bool)

(assert (= bs!4320 d!28655))

(assert (=> bs!4320 m!116193))

(assert (=> bs!4320 m!116193))

(declare-fun m!117173 () Bool)

(assert (=> bs!4320 m!117173))

(assert (=> b!103627 d!28655))

(declare-fun b!105043 () Bool)

(declare-fun e!68382 () Option!160)

(declare-fun e!68383 () Option!160)

(assert (=> b!105043 (= e!68382 e!68383)))

(declare-fun c!18251 () Bool)

(assert (=> b!105043 (= c!18251 (and ((_ is Cons!1633) (t!5711 (toList!805 lt!52550))) (not (= (_1!1211 (h!2229 (t!5711 (toList!805 lt!52550)))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))))

(declare-fun b!105042 () Bool)

(assert (=> b!105042 (= e!68382 (Some!159 (_2!1211 (h!2229 (t!5711 (toList!805 lt!52550))))))))

(declare-fun b!105044 () Bool)

(assert (=> b!105044 (= e!68383 (getValueByKey!154 (t!5711 (t!5711 (toList!805 lt!52550))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun c!18250 () Bool)

(declare-fun d!28657 () Bool)

(assert (=> d!28657 (= c!18250 (and ((_ is Cons!1633) (t!5711 (toList!805 lt!52550))) (= (_1!1211 (h!2229 (t!5711 (toList!805 lt!52550)))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))))

(assert (=> d!28657 (= (getValueByKey!154 (t!5711 (toList!805 lt!52550)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) e!68382)))

(declare-fun b!105045 () Bool)

(assert (=> b!105045 (= e!68383 None!158)))

(assert (= (and d!28657 c!18250) b!105042))

(assert (= (and d!28657 (not c!18250)) b!105043))

(assert (= (and b!105043 c!18251) b!105044))

(assert (= (and b!105043 (not c!18251)) b!105045))

(assert (=> b!105044 m!114187))

(declare-fun m!117175 () Bool)

(assert (=> b!105044 m!117175))

(assert (=> b!104047 d!28657))

(declare-fun d!28659 () Bool)

(assert (=> d!28659 (= (get!1336 (getValueByKey!154 (toList!805 lt!52753) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2880 (getValueByKey!154 (toList!805 lt!52753) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!27937 d!28659))

(assert (=> d!27937 d!28117))

(assert (=> b!103812 d!28125))

(assert (=> bm!10884 d!28303))

(declare-fun b!105046 () Bool)

(declare-fun e!68385 () (_ BitVec 32))

(declare-fun e!68384 () (_ BitVec 32))

(assert (=> b!105046 (= e!68385 e!68384)))

(declare-fun c!18252 () Bool)

(assert (=> b!105046 (= c!18252 (validKeyInArray!0 (select (arr!2056 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!11056 () Bool)

(declare-fun call!11059 () (_ BitVec 32))

(assert (=> bm!11056 (= call!11059 (arrayCountValidKeys!0 (_keys!4263 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2310 (_keys!4263 newMap!16))))))

(declare-fun b!105047 () Bool)

(assert (=> b!105047 (= e!68385 #b00000000000000000000000000000000)))

(declare-fun d!28661 () Bool)

(declare-fun lt!53683 () (_ BitVec 32))

(assert (=> d!28661 (and (bvsge lt!53683 #b00000000000000000000000000000000) (bvsle lt!53683 (bvsub (size!2310 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!28661 (= lt!53683 e!68385)))

(declare-fun c!18253 () Bool)

(assert (=> d!28661 (= c!18253 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!28661 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2310 (_keys!4263 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2310 (_keys!4263 newMap!16)) (size!2310 (_keys!4263 newMap!16))))))

(assert (=> d!28661 (= (arrayCountValidKeys!0 (_keys!4263 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2310 (_keys!4263 newMap!16))) lt!53683)))

(declare-fun b!105048 () Bool)

(assert (=> b!105048 (= e!68384 (bvadd #b00000000000000000000000000000001 call!11059))))

(declare-fun b!105049 () Bool)

(assert (=> b!105049 (= e!68384 call!11059)))

(assert (= (and d!28661 c!18253) b!105047))

(assert (= (and d!28661 (not c!18253)) b!105046))

(assert (= (and b!105046 c!18252) b!105048))

(assert (= (and b!105046 (not c!18252)) b!105049))

(assert (= (or b!105048 b!105049) bm!11056))

(assert (=> b!105046 m!115393))

(assert (=> b!105046 m!115393))

(assert (=> b!105046 m!116853))

(declare-fun m!117177 () Bool)

(assert (=> bm!11056 m!117177))

(assert (=> bm!10925 d!28661))

(declare-fun d!28663 () Bool)

(assert (=> d!28663 (isDefined!108 (getValueByKey!154 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787))) lt!52786))))

(declare-fun lt!53684 () Unit!3170)

(assert (=> d!28663 (= lt!53684 (choose!656 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787))) lt!52786))))

(declare-fun e!68386 () Bool)

(assert (=> d!28663 e!68386))

(declare-fun res!52335 () Bool)

(assert (=> d!28663 (=> (not res!52335) (not e!68386))))

(assert (=> d!28663 (= res!52335 (isStrictlySorted!303 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787)))))))

(assert (=> d!28663 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787))) lt!52786) lt!53684)))

(declare-fun b!105050 () Bool)

(assert (=> b!105050 (= e!68386 (containsKey!158 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787))) lt!52786))))

(assert (= (and d!28663 res!52335) b!105050))

(assert (=> d!28663 m!115157))

(assert (=> d!28663 m!115157))

(assert (=> d!28663 m!115159))

(declare-fun m!117179 () Bool)

(assert (=> d!28663 m!117179))

(declare-fun m!117181 () Bool)

(assert (=> d!28663 m!117181))

(assert (=> b!105050 m!115153))

(assert (=> b!104005 d!28663))

(assert (=> b!104005 d!28469))

(assert (=> b!104005 d!28471))

(assert (=> b!104044 d!28061))

(assert (=> b!104044 d!28063))

(declare-fun d!28665 () Bool)

(declare-fun res!52336 () Bool)

(declare-fun e!68387 () Bool)

(assert (=> d!28665 (=> res!52336 e!68387)))

(assert (=> d!28665 (= res!52336 (and ((_ is Cons!1633) (toList!805 call!10831)) (= (_1!1211 (h!2229 (toList!805 call!10831))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))))

(assert (=> d!28665 (= (containsKey!158 (toList!805 call!10831) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) e!68387)))

(declare-fun b!105051 () Bool)

(declare-fun e!68388 () Bool)

(assert (=> b!105051 (= e!68387 e!68388)))

(declare-fun res!52337 () Bool)

(assert (=> b!105051 (=> (not res!52337) (not e!68388))))

(assert (=> b!105051 (= res!52337 (and (or (not ((_ is Cons!1633) (toList!805 call!10831))) (bvsle (_1!1211 (h!2229 (toList!805 call!10831))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))) ((_ is Cons!1633) (toList!805 call!10831)) (bvslt (_1!1211 (h!2229 (toList!805 call!10831))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))))

(declare-fun b!105052 () Bool)

(assert (=> b!105052 (= e!68388 (containsKey!158 (t!5711 (toList!805 call!10831)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (= (and d!28665 (not res!52336)) b!105051))

(assert (= (and b!105051 res!52337) b!105052))

(assert (=> b!105052 m!114187))

(declare-fun m!117183 () Bool)

(assert (=> b!105052 m!117183))

(assert (=> d!27965 d!28665))

(declare-fun d!28667 () Bool)

(declare-fun res!52338 () Bool)

(declare-fun e!68389 () Bool)

(assert (=> d!28667 (=> res!52338 e!68389)))

(assert (=> d!28667 (= res!52338 (and ((_ is Cons!1633) (toList!805 lt!52789)) (= (_1!1211 (h!2229 (toList!805 lt!52789))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28667 (= (containsKey!158 (toList!805 lt!52789) #b0000000000000000000000000000000000000000000000000000000000000000) e!68389)))

(declare-fun b!105053 () Bool)

(declare-fun e!68390 () Bool)

(assert (=> b!105053 (= e!68389 e!68390)))

(declare-fun res!52339 () Bool)

(assert (=> b!105053 (=> (not res!52339) (not e!68390))))

(assert (=> b!105053 (= res!52339 (and (or (not ((_ is Cons!1633) (toList!805 lt!52789))) (bvsle (_1!1211 (h!2229 (toList!805 lt!52789))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1633) (toList!805 lt!52789)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52789))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105054 () Bool)

(assert (=> b!105054 (= e!68390 (containsKey!158 (t!5711 (toList!805 lt!52789)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28667 (not res!52338)) b!105053))

(assert (= (and b!105053 res!52339) b!105054))

(declare-fun m!117185 () Bool)

(assert (=> b!105054 m!117185))

(assert (=> d!27933 d!28667))

(declare-fun d!28669 () Bool)

(declare-fun lt!53685 () Bool)

(assert (=> d!28669 (= lt!53685 (select (content!107 (t!5711 (toList!805 lt!52795))) lt!52551))))

(declare-fun e!68392 () Bool)

(assert (=> d!28669 (= lt!53685 e!68392)))

(declare-fun res!52340 () Bool)

(assert (=> d!28669 (=> (not res!52340) (not e!68392))))

(assert (=> d!28669 (= res!52340 ((_ is Cons!1633) (t!5711 (toList!805 lt!52795))))))

(assert (=> d!28669 (= (contains!828 (t!5711 (toList!805 lt!52795)) lt!52551) lt!53685)))

(declare-fun b!105055 () Bool)

(declare-fun e!68391 () Bool)

(assert (=> b!105055 (= e!68392 e!68391)))

(declare-fun res!52341 () Bool)

(assert (=> b!105055 (=> res!52341 e!68391)))

(assert (=> b!105055 (= res!52341 (= (h!2229 (t!5711 (toList!805 lt!52795))) lt!52551))))

(declare-fun b!105056 () Bool)

(assert (=> b!105056 (= e!68391 (contains!828 (t!5711 (t!5711 (toList!805 lt!52795))) lt!52551))))

(assert (= (and d!28669 res!52340) b!105055))

(assert (= (and b!105055 (not res!52341)) b!105056))

(assert (=> d!28669 m!116965))

(declare-fun m!117187 () Bool)

(assert (=> d!28669 m!117187))

(declare-fun m!117189 () Bool)

(assert (=> b!105056 m!117189))

(assert (=> b!103964 d!28669))

(declare-fun d!28671 () Bool)

(declare-fun res!52342 () Bool)

(declare-fun e!68393 () Bool)

(assert (=> d!28671 (=> res!52342 e!68393)))

(assert (=> d!28671 (= res!52342 (and ((_ is Cons!1633) lt!53041) (= (_1!1211 (h!2229 lt!53041)) (_1!1211 lt!52547))))))

(assert (=> d!28671 (= (containsKey!158 lt!53041 (_1!1211 lt!52547)) e!68393)))

(declare-fun b!105057 () Bool)

(declare-fun e!68394 () Bool)

(assert (=> b!105057 (= e!68393 e!68394)))

(declare-fun res!52343 () Bool)

(assert (=> b!105057 (=> (not res!52343) (not e!68394))))

(assert (=> b!105057 (= res!52343 (and (or (not ((_ is Cons!1633) lt!53041)) (bvsle (_1!1211 (h!2229 lt!53041)) (_1!1211 lt!52547))) ((_ is Cons!1633) lt!53041) (bvslt (_1!1211 (h!2229 lt!53041)) (_1!1211 lt!52547))))))

(declare-fun b!105058 () Bool)

(assert (=> b!105058 (= e!68394 (containsKey!158 (t!5711 lt!53041) (_1!1211 lt!52547)))))

(assert (= (and d!28671 (not res!52342)) b!105057))

(assert (= (and b!105057 res!52343) b!105058))

(declare-fun m!117191 () Bool)

(assert (=> b!105058 m!117191))

(assert (=> b!103908 d!28671))

(declare-fun d!28673 () Bool)

(assert (=> d!28673 (= ($colon$colon!79 e!67788 (ite c!17983 (h!2229 (toList!805 (+!143 lt!52542 lt!52551))) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547)))) (Cons!1633 (ite c!17983 (h!2229 (toList!805 (+!143 lt!52542 lt!52551))) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))) e!67788))))

(assert (=> bm!10944 d!28673))

(declare-fun d!28675 () Bool)

(declare-fun lt!53686 () Bool)

(assert (=> d!28675 (= lt!53686 (select (content!107 (t!5711 (toList!805 lt!52791))) lt!52547))))

(declare-fun e!68396 () Bool)

(assert (=> d!28675 (= lt!53686 e!68396)))

(declare-fun res!52344 () Bool)

(assert (=> d!28675 (=> (not res!52344) (not e!68396))))

(assert (=> d!28675 (= res!52344 ((_ is Cons!1633) (t!5711 (toList!805 lt!52791))))))

(assert (=> d!28675 (= (contains!828 (t!5711 (toList!805 lt!52791)) lt!52547) lt!53686)))

(declare-fun b!105059 () Bool)

(declare-fun e!68395 () Bool)

(assert (=> b!105059 (= e!68396 e!68395)))

(declare-fun res!52345 () Bool)

(assert (=> b!105059 (=> res!52345 e!68395)))

(assert (=> b!105059 (= res!52345 (= (h!2229 (t!5711 (toList!805 lt!52791))) lt!52547))))

(declare-fun b!105060 () Bool)

(assert (=> b!105060 (= e!68395 (contains!828 (t!5711 (t!5711 (toList!805 lt!52791))) lt!52547))))

(assert (= (and d!28675 res!52344) b!105059))

(assert (= (and b!105059 (not res!52345)) b!105060))

(assert (=> d!28675 m!117085))

(declare-fun m!117193 () Bool)

(assert (=> d!28675 m!117193))

(declare-fun m!117195 () Bool)

(assert (=> b!105060 m!117195))

(assert (=> b!103998 d!28675))

(declare-fun d!28677 () Bool)

(declare-fun lt!53687 () Bool)

(assert (=> d!28677 (= lt!53687 (select (content!107 (toList!805 lt!52997)) (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun e!68398 () Bool)

(assert (=> d!28677 (= lt!53687 e!68398)))

(declare-fun res!52346 () Bool)

(assert (=> d!28677 (=> (not res!52346) (not e!68398))))

(assert (=> d!28677 (= res!52346 ((_ is Cons!1633) (toList!805 lt!52997)))))

(assert (=> d!28677 (= (contains!828 (toList!805 lt!52997) (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!53687)))

(declare-fun b!105061 () Bool)

(declare-fun e!68397 () Bool)

(assert (=> b!105061 (= e!68398 e!68397)))

(declare-fun res!52347 () Bool)

(assert (=> b!105061 (=> res!52347 e!68397)))

(assert (=> b!105061 (= res!52347 (= (h!2229 (toList!805 lt!52997)) (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!105062 () Bool)

(assert (=> b!105062 (= e!68397 (contains!828 (t!5711 (toList!805 lt!52997)) (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(assert (= (and d!28677 res!52346) b!105061))

(assert (= (and b!105061 (not res!52347)) b!105062))

(declare-fun m!117197 () Bool)

(assert (=> d!28677 m!117197))

(declare-fun m!117199 () Bool)

(assert (=> d!28677 m!117199))

(declare-fun m!117201 () Bool)

(assert (=> b!105062 m!117201))

(assert (=> b!103803 d!28677))

(declare-fun lt!53688 () Bool)

(declare-fun d!28679 () Bool)

(assert (=> d!28679 (= lt!53688 (select (content!107 (toList!805 lt!53078)) (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun e!68400 () Bool)

(assert (=> d!28679 (= lt!53688 e!68400)))

(declare-fun res!52348 () Bool)

(assert (=> d!28679 (=> (not res!52348) (not e!68400))))

(assert (=> d!28679 (= res!52348 ((_ is Cons!1633) (toList!805 lt!53078)))))

(assert (=> d!28679 (= (contains!828 (toList!805 lt!53078) (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53688)))

(declare-fun b!105063 () Bool)

(declare-fun e!68399 () Bool)

(assert (=> b!105063 (= e!68400 e!68399)))

(declare-fun res!52349 () Bool)

(assert (=> b!105063 (=> res!52349 e!68399)))

(assert (=> b!105063 (= res!52349 (= (h!2229 (toList!805 lt!53078)) (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!105064 () Bool)

(assert (=> b!105064 (= e!68399 (contains!828 (t!5711 (toList!805 lt!53078)) (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (= (and d!28679 res!52348) b!105063))

(assert (= (and b!105063 (not res!52349)) b!105064))

(declare-fun m!117203 () Bool)

(assert (=> d!28679 m!117203))

(declare-fun m!117205 () Bool)

(assert (=> d!28679 m!117205))

(declare-fun m!117207 () Bool)

(assert (=> b!105064 m!117207))

(assert (=> b!103993 d!28679))

(declare-fun d!28681 () Bool)

(assert (=> d!28681 (= (inRange!0 (ite c!17949 (index!3219 lt!53054) (index!3222 lt!53054)) (mask!6697 newMap!16)) (and (bvsge (ite c!17949 (index!3219 lt!53054) (index!3222 lt!53054)) #b00000000000000000000000000000000) (bvslt (ite c!17949 (index!3219 lt!53054) (index!3222 lt!53054)) (bvadd (mask!6697 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!10931 d!28681))

(declare-fun d!28683 () Bool)

(declare-fun res!52350 () Bool)

(declare-fun e!68401 () Bool)

(assert (=> d!28683 (=> res!52350 e!68401)))

(assert (=> d!28683 (= res!52350 (and ((_ is Cons!1633) (toList!805 lt!52795)) (= (_1!1211 (h!2229 (toList!805 lt!52795))) (_1!1211 lt!52551))))))

(assert (=> d!28683 (= (containsKey!158 (toList!805 lt!52795) (_1!1211 lt!52551)) e!68401)))

(declare-fun b!105065 () Bool)

(declare-fun e!68402 () Bool)

(assert (=> b!105065 (= e!68401 e!68402)))

(declare-fun res!52351 () Bool)

(assert (=> b!105065 (=> (not res!52351) (not e!68402))))

(assert (=> b!105065 (= res!52351 (and (or (not ((_ is Cons!1633) (toList!805 lt!52795))) (bvsle (_1!1211 (h!2229 (toList!805 lt!52795))) (_1!1211 lt!52551))) ((_ is Cons!1633) (toList!805 lt!52795)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52795))) (_1!1211 lt!52551))))))

(declare-fun b!105066 () Bool)

(assert (=> b!105066 (= e!68402 (containsKey!158 (t!5711 (toList!805 lt!52795)) (_1!1211 lt!52551)))))

(assert (= (and d!28683 (not res!52350)) b!105065))

(assert (= (and b!105065 res!52351) b!105066))

(declare-fun m!117209 () Bool)

(assert (=> b!105066 m!117209))

(assert (=> d!27893 d!28683))

(declare-fun d!28685 () Bool)

(declare-fun res!52352 () Bool)

(declare-fun e!68403 () Bool)

(assert (=> d!28685 (=> res!52352 e!68403)))

(assert (=> d!28685 (= res!52352 (= (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> d!28685 (= (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!68403)))

(declare-fun b!105067 () Bool)

(declare-fun e!68404 () Bool)

(assert (=> b!105067 (= e!68403 e!68404)))

(declare-fun res!52353 () Bool)

(assert (=> b!105067 (=> (not res!52353) (not e!68404))))

(assert (=> b!105067 (= res!52353 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2310 (_keys!4263 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!105068 () Bool)

(assert (=> b!105068 (= e!68404 (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!359 thiss!992))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!28685 (not res!52352)) b!105067))

(assert (= (and b!105067 res!52353) b!105068))

(assert (=> d!28685 m!115601))

(assert (=> b!105068 m!114187))

(declare-fun m!117211 () Bool)

(assert (=> b!105068 m!117211))

(assert (=> b!103790 d!28685))

(assert (=> b!103919 d!28077))

(declare-fun d!28687 () Bool)

(declare-fun lt!53689 () Bool)

(assert (=> d!28687 (= lt!53689 (select (content!107 (toList!805 lt!52936)) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun e!68406 () Bool)

(assert (=> d!28687 (= lt!53689 e!68406)))

(declare-fun res!52354 () Bool)

(assert (=> d!28687 (=> (not res!52354) (not e!68406))))

(assert (=> d!28687 (= res!52354 ((_ is Cons!1633) (toList!805 lt!52936)))))

(assert (=> d!28687 (= (contains!828 (toList!805 lt!52936) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!53689)))

(declare-fun b!105069 () Bool)

(declare-fun e!68405 () Bool)

(assert (=> b!105069 (= e!68406 e!68405)))

(declare-fun res!52355 () Bool)

(assert (=> b!105069 (=> res!52355 e!68405)))

(assert (=> b!105069 (= res!52355 (= (h!2229 (toList!805 lt!52936)) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!105070 () Bool)

(assert (=> b!105070 (= e!68405 (contains!828 (t!5711 (toList!805 lt!52936)) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(assert (= (and d!28687 res!52354) b!105069))

(assert (= (and b!105069 (not res!52355)) b!105070))

(declare-fun m!117213 () Bool)

(assert (=> d!28687 m!117213))

(declare-fun m!117215 () Bool)

(assert (=> d!28687 m!117215))

(declare-fun m!117217 () Bool)

(assert (=> b!105070 m!117217))

(assert (=> b!103741 d!28687))

(declare-fun d!28689 () Bool)

(assert (=> d!28689 (= (isEmpty!373 (toList!805 lt!52789)) ((_ is Nil!1634) (toList!805 lt!52789)))))

(assert (=> d!27931 d!28689))

(declare-fun d!28691 () Bool)

(declare-fun e!68407 () Bool)

(assert (=> d!28691 e!68407))

(declare-fun res!52357 () Bool)

(assert (=> d!28691 (=> (not res!52357) (not e!68407))))

(declare-fun lt!53690 () ListLongMap!1579)

(assert (=> d!28691 (= res!52357 (contains!825 lt!53690 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(declare-fun lt!53693 () List!1637)

(assert (=> d!28691 (= lt!53690 (ListLongMap!1580 lt!53693))))

(declare-fun lt!53692 () Unit!3170)

(declare-fun lt!53691 () Unit!3170)

(assert (=> d!28691 (= lt!53692 lt!53691)))

(assert (=> d!28691 (= (getValueByKey!154 lt!53693 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(assert (=> d!28691 (= lt!53691 (lemmaContainsTupThenGetReturnValue!72 lt!53693 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(assert (=> d!28691 (= lt!53693 (insertStrictlySorted!74 (toList!805 call!10907) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(assert (=> d!28691 (= (+!143 call!10907 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))) lt!53690)))

(declare-fun b!105071 () Bool)

(declare-fun res!52356 () Bool)

(assert (=> b!105071 (=> (not res!52356) (not e!68407))))

(assert (=> b!105071 (= res!52356 (= (getValueByKey!154 (toList!805 lt!53690) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(declare-fun b!105072 () Bool)

(assert (=> b!105072 (= e!68407 (contains!828 (toList!805 lt!53690) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))

(assert (= (and d!28691 res!52357) b!105071))

(assert (= (and b!105071 res!52356) b!105072))

(declare-fun m!117219 () Bool)

(assert (=> d!28691 m!117219))

(declare-fun m!117221 () Bool)

(assert (=> d!28691 m!117221))

(declare-fun m!117223 () Bool)

(assert (=> d!28691 m!117223))

(declare-fun m!117225 () Bool)

(assert (=> d!28691 m!117225))

(declare-fun m!117227 () Bool)

(assert (=> b!105071 m!117227))

(declare-fun m!117229 () Bool)

(assert (=> b!105072 m!117229))

(assert (=> b!103775 d!28691))

(declare-fun d!28693 () Bool)

(declare-fun lt!53694 () Bool)

(assert (=> d!28693 (= lt!53694 (select (content!107 lt!53164) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))))))

(declare-fun e!68409 () Bool)

(assert (=> d!28693 (= lt!53694 e!68409)))

(declare-fun res!52358 () Bool)

(assert (=> d!28693 (=> (not res!52358) (not e!68409))))

(assert (=> d!28693 (= res!52358 ((_ is Cons!1633) lt!53164))))

(assert (=> d!28693 (= (contains!828 lt!53164 (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))) lt!53694)))

(declare-fun b!105073 () Bool)

(declare-fun e!68408 () Bool)

(assert (=> b!105073 (= e!68409 e!68408)))

(declare-fun res!52359 () Bool)

(assert (=> b!105073 (=> res!52359 e!68408)))

(assert (=> b!105073 (= res!52359 (= (h!2229 lt!53164) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))))))

(declare-fun b!105074 () Bool)

(assert (=> b!105074 (= e!68408 (contains!828 (t!5711 lt!53164) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))))))

(assert (= (and d!28693 res!52358) b!105073))

(assert (= (and b!105073 (not res!52359)) b!105074))

(declare-fun m!117231 () Bool)

(assert (=> d!28693 m!117231))

(declare-fun m!117233 () Bool)

(assert (=> d!28693 m!117233))

(declare-fun m!117235 () Bool)

(assert (=> b!105074 m!117235))

(assert (=> b!104075 d!28693))

(declare-fun d!28695 () Bool)

(assert (=> d!28695 (isDefined!108 (getValueByKey!154 (toList!805 lt!52789) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!53695 () Unit!3170)

(assert (=> d!28695 (= lt!53695 (choose!656 (toList!805 lt!52789) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68410 () Bool)

(assert (=> d!28695 e!68410))

(declare-fun res!52360 () Bool)

(assert (=> d!28695 (=> (not res!52360) (not e!68410))))

(assert (=> d!28695 (= res!52360 (isStrictlySorted!303 (toList!805 lt!52789)))))

(assert (=> d!28695 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52789) #b0000000000000000000000000000000000000000000000000000000000000000) lt!53695)))

(declare-fun b!105075 () Bool)

(assert (=> b!105075 (= e!68410 (containsKey!158 (toList!805 lt!52789) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28695 res!52360) b!105075))

(assert (=> d!28695 m!115045))

(assert (=> d!28695 m!115045))

(assert (=> d!28695 m!115047))

(declare-fun m!117237 () Bool)

(assert (=> d!28695 m!117237))

(assert (=> d!28695 m!115405))

(assert (=> b!105075 m!115041))

(assert (=> b!103913 d!28695))

(assert (=> b!103913 d!28547))

(assert (=> b!103913 d!28549))

(declare-fun d!28697 () Bool)

(assert (=> d!28697 (isDefined!108 (getValueByKey!154 (toList!805 call!10831) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun lt!53696 () Unit!3170)

(assert (=> d!28697 (= lt!53696 (choose!656 (toList!805 call!10831) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun e!68411 () Bool)

(assert (=> d!28697 e!68411))

(declare-fun res!52361 () Bool)

(assert (=> d!28697 (=> (not res!52361) (not e!68411))))

(assert (=> d!28697 (= res!52361 (isStrictlySorted!303 (toList!805 call!10831)))))

(assert (=> d!28697 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 call!10831) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) lt!53696)))

(declare-fun b!105076 () Bool)

(assert (=> b!105076 (= e!68411 (containsKey!158 (toList!805 call!10831) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (= (and d!28697 res!52361) b!105076))

(assert (=> d!28697 m!114187))

(assert (=> d!28697 m!115149))

(assert (=> d!28697 m!115149))

(assert (=> d!28697 m!115151))

(assert (=> d!28697 m!114187))

(declare-fun m!117239 () Bool)

(assert (=> d!28697 m!117239))

(declare-fun m!117241 () Bool)

(assert (=> d!28697 m!117241))

(assert (=> b!105076 m!114187))

(assert (=> b!105076 m!115145))

(assert (=> b!104002 d!28697))

(assert (=> b!104002 d!28539))

(assert (=> b!104002 d!28541))

(assert (=> d!27941 d!27771))

(declare-fun d!28699 () Bool)

(declare-fun e!68413 () Bool)

(assert (=> d!28699 e!68413))

(declare-fun res!52362 () Bool)

(assert (=> d!28699 (=> res!52362 e!68413)))

(declare-fun lt!53700 () Bool)

(assert (=> d!28699 (= res!52362 (not lt!53700))))

(declare-fun lt!53698 () Bool)

(assert (=> d!28699 (= lt!53700 lt!53698)))

(declare-fun lt!53697 () Unit!3170)

(declare-fun e!68412 () Unit!3170)

(assert (=> d!28699 (= lt!53697 e!68412)))

(declare-fun c!18254 () Bool)

(assert (=> d!28699 (= c!18254 lt!53698)))

(assert (=> d!28699 (= lt!53698 (containsKey!158 (toList!805 lt!52924) (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (=> d!28699 (= (contains!825 lt!52924 (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))) lt!53700)))

(declare-fun b!105077 () Bool)

(declare-fun lt!53699 () Unit!3170)

(assert (=> b!105077 (= e!68412 lt!53699)))

(assert (=> b!105077 (= lt!53699 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52924) (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(assert (=> b!105077 (isDefined!108 (getValueByKey!154 (toList!805 lt!52924) (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun b!105078 () Bool)

(declare-fun Unit!3243 () Unit!3170)

(assert (=> b!105078 (= e!68412 Unit!3243)))

(declare-fun b!105079 () Bool)

(assert (=> b!105079 (= e!68413 (isDefined!108 (getValueByKey!154 (toList!805 lt!52924) (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))))

(assert (= (and d!28699 c!18254) b!105077))

(assert (= (and d!28699 (not c!18254)) b!105078))

(assert (= (and d!28699 (not res!52362)) b!105079))

(declare-fun m!117243 () Bool)

(assert (=> d!28699 m!117243))

(declare-fun m!117245 () Bool)

(assert (=> b!105077 m!117245))

(assert (=> b!105077 m!114659))

(assert (=> b!105077 m!114659))

(declare-fun m!117247 () Bool)

(assert (=> b!105077 m!117247))

(assert (=> b!105079 m!114659))

(assert (=> b!105079 m!114659))

(assert (=> b!105079 m!117247))

(assert (=> d!27827 d!28699))

(declare-fun b!105081 () Bool)

(declare-fun e!68414 () Option!160)

(declare-fun e!68415 () Option!160)

(assert (=> b!105081 (= e!68414 e!68415)))

(declare-fun c!18256 () Bool)

(assert (=> b!105081 (= c!18256 (and ((_ is Cons!1633) lt!52927) (not (= (_1!1211 (h!2229 lt!52927)) (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))))

(declare-fun b!105080 () Bool)

(assert (=> b!105080 (= e!68414 (Some!159 (_2!1211 (h!2229 lt!52927))))))

(declare-fun b!105082 () Bool)

(assert (=> b!105082 (= e!68415 (getValueByKey!154 (t!5711 lt!52927) (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun d!28701 () Bool)

(declare-fun c!18255 () Bool)

(assert (=> d!28701 (= c!18255 (and ((_ is Cons!1633) lt!52927) (= (_1!1211 (h!2229 lt!52927)) (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))))

(assert (=> d!28701 (= (getValueByKey!154 lt!52927 (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))) e!68414)))

(declare-fun b!105083 () Bool)

(assert (=> b!105083 (= e!68415 None!158)))

(assert (= (and d!28701 c!18255) b!105080))

(assert (= (and d!28701 (not c!18255)) b!105081))

(assert (= (and b!105081 c!18256) b!105082))

(assert (= (and b!105081 (not c!18256)) b!105083))

(declare-fun m!117249 () Bool)

(assert (=> b!105082 m!117249))

(assert (=> d!27827 d!28701))

(declare-fun d!28703 () Bool)

(assert (=> d!28703 (= (getValueByKey!154 lt!52927 (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))) (Some!159 (_2!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun lt!53701 () Unit!3170)

(assert (=> d!28703 (= lt!53701 (choose!650 lt!52927 (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (_2!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun e!68416 () Bool)

(assert (=> d!28703 e!68416))

(declare-fun res!52363 () Bool)

(assert (=> d!28703 (=> (not res!52363) (not e!68416))))

(assert (=> d!28703 (= res!52363 (isStrictlySorted!303 lt!52927))))

(assert (=> d!28703 (= (lemmaContainsTupThenGetReturnValue!72 lt!52927 (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (_2!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))) lt!53701)))

(declare-fun b!105084 () Bool)

(declare-fun res!52364 () Bool)

(assert (=> b!105084 (=> (not res!52364) (not e!68416))))

(assert (=> b!105084 (= res!52364 (containsKey!158 lt!52927 (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun b!105085 () Bool)

(assert (=> b!105085 (= e!68416 (contains!828 lt!52927 (tuple2!2403 (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (_2!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))))

(assert (= (and d!28703 res!52363) b!105084))

(assert (= (and b!105084 res!52364) b!105085))

(assert (=> d!28703 m!114653))

(declare-fun m!117251 () Bool)

(assert (=> d!28703 m!117251))

(declare-fun m!117253 () Bool)

(assert (=> d!28703 m!117253))

(declare-fun m!117255 () Bool)

(assert (=> b!105084 m!117255))

(declare-fun m!117257 () Bool)

(assert (=> b!105085 m!117257))

(assert (=> d!27827 d!28703))

(declare-fun lt!53702 () List!1637)

(declare-fun b!105086 () Bool)

(declare-fun e!68417 () Bool)

(assert (=> b!105086 (= e!68417 (contains!828 lt!53702 (tuple2!2403 (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (_2!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))))

(declare-fun b!105087 () Bool)

(declare-fun e!68421 () List!1637)

(declare-fun call!11062 () List!1637)

(assert (=> b!105087 (= e!68421 call!11062)))

(declare-fun bm!11057 () Bool)

(declare-fun call!11060 () List!1637)

(declare-fun call!11061 () List!1637)

(assert (=> bm!11057 (= call!11060 call!11061)))

(declare-fun b!105088 () Bool)

(assert (=> b!105088 (= e!68421 call!11062)))

(declare-fun b!105089 () Bool)

(declare-fun c!18259 () Bool)

(assert (=> b!105089 (= c!18259 (and ((_ is Cons!1633) (toList!805 e!67414)) (bvsgt (_1!1211 (h!2229 (toList!805 e!67414))) (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))))

(declare-fun e!68418 () List!1637)

(assert (=> b!105089 (= e!68418 e!68421)))

(declare-fun bm!11058 () Bool)

(assert (=> bm!11058 (= call!11062 call!11060)))

(declare-fun e!68420 () List!1637)

(declare-fun b!105090 () Bool)

(assert (=> b!105090 (= e!68420 (insertStrictlySorted!74 (t!5711 (toList!805 e!67414)) (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (_2!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun b!105091 () Bool)

(declare-fun res!52366 () Bool)

(assert (=> b!105091 (=> (not res!52366) (not e!68417))))

(assert (=> b!105091 (= res!52366 (containsKey!158 lt!53702 (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun bm!11059 () Bool)

(declare-fun c!18260 () Bool)

(assert (=> bm!11059 (= call!11061 ($colon$colon!79 e!68420 (ite c!18260 (h!2229 (toList!805 e!67414)) (tuple2!2403 (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (_2!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))))

(declare-fun c!18258 () Bool)

(assert (=> bm!11059 (= c!18258 c!18260)))

(declare-fun d!28705 () Bool)

(assert (=> d!28705 e!68417))

(declare-fun res!52365 () Bool)

(assert (=> d!28705 (=> (not res!52365) (not e!68417))))

(assert (=> d!28705 (= res!52365 (isStrictlySorted!303 lt!53702))))

(declare-fun e!68419 () List!1637)

(assert (=> d!28705 (= lt!53702 e!68419)))

(assert (=> d!28705 (= c!18260 (and ((_ is Cons!1633) (toList!805 e!67414)) (bvslt (_1!1211 (h!2229 (toList!805 e!67414))) (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))))

(assert (=> d!28705 (isStrictlySorted!303 (toList!805 e!67414))))

(assert (=> d!28705 (= (insertStrictlySorted!74 (toList!805 e!67414) (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (_2!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))) lt!53702)))

(declare-fun b!105092 () Bool)

(assert (=> b!105092 (= e!68419 e!68418)))

(declare-fun c!18257 () Bool)

(assert (=> b!105092 (= c!18257 (and ((_ is Cons!1633) (toList!805 e!67414)) (= (_1!1211 (h!2229 (toList!805 e!67414))) (_1!1211 (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))))

(declare-fun b!105093 () Bool)

(assert (=> b!105093 (= e!68418 call!11060)))

(declare-fun b!105094 () Bool)

(assert (=> b!105094 (= e!68419 call!11061)))

(declare-fun b!105095 () Bool)

(assert (=> b!105095 (= e!68420 (ite c!18257 (t!5711 (toList!805 e!67414)) (ite c!18259 (Cons!1633 (h!2229 (toList!805 e!67414)) (t!5711 (toList!805 e!67414))) Nil!1634)))))

(assert (= (and d!28705 c!18260) b!105094))

(assert (= (and d!28705 (not c!18260)) b!105092))

(assert (= (and b!105092 c!18257) b!105093))

(assert (= (and b!105092 (not c!18257)) b!105089))

(assert (= (and b!105089 c!18259) b!105088))

(assert (= (and b!105089 (not c!18259)) b!105087))

(assert (= (or b!105088 b!105087) bm!11058))

(assert (= (or b!105093 bm!11058) bm!11057))

(assert (= (or b!105094 bm!11057) bm!11059))

(assert (= (and bm!11059 c!18258) b!105090))

(assert (= (and bm!11059 (not c!18258)) b!105095))

(assert (= (and d!28705 res!52365) b!105091))

(assert (= (and b!105091 res!52366) b!105086))

(declare-fun m!117259 () Bool)

(assert (=> b!105091 m!117259))

(declare-fun m!117261 () Bool)

(assert (=> bm!11059 m!117261))

(declare-fun m!117263 () Bool)

(assert (=> d!28705 m!117263))

(declare-fun m!117265 () Bool)

(assert (=> d!28705 m!117265))

(declare-fun m!117267 () Bool)

(assert (=> b!105086 m!117267))

(declare-fun m!117269 () Bool)

(assert (=> b!105090 m!117269))

(assert (=> d!27827 d!28705))

(declare-fun b!105097 () Bool)

(declare-fun e!68422 () Option!160)

(declare-fun e!68423 () Option!160)

(assert (=> b!105097 (= e!68422 e!68423)))

(declare-fun c!18262 () Bool)

(assert (=> b!105097 (= c!18262 (and ((_ is Cons!1633) (toList!805 lt!52985)) (not (= (_1!1211 (h!2229 (toList!805 lt!52985))) (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun b!105096 () Bool)

(assert (=> b!105096 (= e!68422 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52985)))))))

(declare-fun b!105098 () Bool)

(assert (=> b!105098 (= e!68423 (getValueByKey!154 (t!5711 (toList!805 lt!52985)) (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun d!28707 () Bool)

(declare-fun c!18261 () Bool)

(assert (=> d!28707 (= c!18261 (and ((_ is Cons!1633) (toList!805 lt!52985)) (= (_1!1211 (h!2229 (toList!805 lt!52985))) (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28707 (= (getValueByKey!154 (toList!805 lt!52985) (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) e!68422)))

(declare-fun b!105099 () Bool)

(assert (=> b!105099 (= e!68423 None!158)))

(assert (= (and d!28707 c!18261) b!105096))

(assert (= (and d!28707 (not c!18261)) b!105097))

(assert (= (and b!105097 c!18262) b!105098))

(assert (= (and b!105097 (not c!18262)) b!105099))

(declare-fun m!117271 () Bool)

(assert (=> b!105098 m!117271))

(assert (=> b!103796 d!28707))

(assert (=> b!104020 d!28115))

(assert (=> b!104020 d!28117))

(assert (=> d!27907 d!27905))

(declare-fun d!28709 () Bool)

(assert (=> d!28709 (= (getValueByKey!154 lt!52802 (_1!1211 lt!52551)) (Some!159 (_2!1211 lt!52551)))))

(assert (=> d!28709 true))

(declare-fun _$22!430 () Unit!3170)

(assert (=> d!28709 (= (choose!650 lt!52802 (_1!1211 lt!52551) (_2!1211 lt!52551)) _$22!430)))

(declare-fun bs!4321 () Bool)

(assert (= bs!4321 d!28709))

(assert (=> bs!4321 m!114491))

(assert (=> d!27907 d!28709))

(declare-fun d!28711 () Bool)

(declare-fun res!52367 () Bool)

(declare-fun e!68424 () Bool)

(assert (=> d!28711 (=> res!52367 e!68424)))

(assert (=> d!28711 (= res!52367 (or ((_ is Nil!1634) lt!52802) ((_ is Nil!1634) (t!5711 lt!52802))))))

(assert (=> d!28711 (= (isStrictlySorted!303 lt!52802) e!68424)))

(declare-fun b!105100 () Bool)

(declare-fun e!68425 () Bool)

(assert (=> b!105100 (= e!68424 e!68425)))

(declare-fun res!52368 () Bool)

(assert (=> b!105100 (=> (not res!52368) (not e!68425))))

(assert (=> b!105100 (= res!52368 (bvslt (_1!1211 (h!2229 lt!52802)) (_1!1211 (h!2229 (t!5711 lt!52802)))))))

(declare-fun b!105101 () Bool)

(assert (=> b!105101 (= e!68425 (isStrictlySorted!303 (t!5711 lt!52802)))))

(assert (= (and d!28711 (not res!52367)) b!105100))

(assert (= (and b!105100 res!52368) b!105101))

(declare-fun m!117273 () Bool)

(assert (=> b!105101 m!117273))

(assert (=> d!27907 d!28711))

(declare-fun d!28713 () Bool)

(declare-fun res!52369 () Bool)

(declare-fun e!68426 () Bool)

(assert (=> d!28713 (=> res!52369 e!68426)))

(assert (=> d!28713 (= res!52369 (and ((_ is Cons!1633) (t!5711 (toList!805 lt!52550))) (= (_1!1211 (h!2229 (t!5711 (toList!805 lt!52550)))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))))

(assert (=> d!28713 (= (containsKey!158 (t!5711 (toList!805 lt!52550)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) e!68426)))

(declare-fun b!105102 () Bool)

(declare-fun e!68427 () Bool)

(assert (=> b!105102 (= e!68426 e!68427)))

(declare-fun res!52370 () Bool)

(assert (=> b!105102 (=> (not res!52370) (not e!68427))))

(assert (=> b!105102 (= res!52370 (and (or (not ((_ is Cons!1633) (t!5711 (toList!805 lt!52550)))) (bvsle (_1!1211 (h!2229 (t!5711 (toList!805 lt!52550)))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))) ((_ is Cons!1633) (t!5711 (toList!805 lt!52550))) (bvslt (_1!1211 (h!2229 (t!5711 (toList!805 lt!52550)))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355))))))

(declare-fun b!105103 () Bool)

(assert (=> b!105103 (= e!68427 (containsKey!158 (t!5711 (t!5711 (toList!805 lt!52550))) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (= (and d!28713 (not res!52369)) b!105102))

(assert (= (and b!105102 res!52370) b!105103))

(assert (=> b!105103 m!114187))

(declare-fun m!117275 () Bool)

(assert (=> b!105103 m!117275))

(assert (=> b!103788 d!28713))

(declare-fun d!28715 () Bool)

(declare-fun res!52371 () Bool)

(declare-fun e!68428 () Bool)

(assert (=> d!28715 (=> res!52371 e!68428)))

(assert (=> d!28715 (= res!52371 (and ((_ is Cons!1633) lt!52769) (= (_1!1211 (h!2229 lt!52769)) (_1!1211 lt!52547))))))

(assert (=> d!28715 (= (containsKey!158 lt!52769 (_1!1211 lt!52547)) e!68428)))

(declare-fun b!105104 () Bool)

(declare-fun e!68429 () Bool)

(assert (=> b!105104 (= e!68428 e!68429)))

(declare-fun res!52372 () Bool)

(assert (=> b!105104 (=> (not res!52372) (not e!68429))))

(assert (=> b!105104 (= res!52372 (and (or (not ((_ is Cons!1633) lt!52769)) (bvsle (_1!1211 (h!2229 lt!52769)) (_1!1211 lt!52547))) ((_ is Cons!1633) lt!52769) (bvslt (_1!1211 (h!2229 lt!52769)) (_1!1211 lt!52547))))))

(declare-fun b!105105 () Bool)

(assert (=> b!105105 (= e!68429 (containsKey!158 (t!5711 lt!52769) (_1!1211 lt!52547)))))

(assert (= (and d!28715 (not res!52371)) b!105104))

(assert (= (and b!105104 res!52372) b!105105))

(declare-fun m!117277 () Bool)

(assert (=> b!105105 m!117277))

(assert (=> b!104073 d!28715))

(declare-fun d!28717 () Bool)

(assert (=> d!28717 (= (get!1336 (getValueByKey!154 (toList!805 (+!143 lt!52742 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52739)) (v!2880 (getValueByKey!154 (toList!805 (+!143 lt!52742 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52739)))))

(assert (=> d!27883 d!28717))

(declare-fun b!105107 () Bool)

(declare-fun e!68430 () Option!160)

(declare-fun e!68431 () Option!160)

(assert (=> b!105107 (= e!68430 e!68431)))

(declare-fun c!18264 () Bool)

(assert (=> b!105107 (= c!18264 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52742 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))) (not (= (_1!1211 (h!2229 (toList!805 (+!143 lt!52742 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))) lt!52739))))))

(declare-fun b!105106 () Bool)

(assert (=> b!105106 (= e!68430 (Some!159 (_2!1211 (h!2229 (toList!805 (+!143 lt!52742 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))))

(declare-fun b!105108 () Bool)

(assert (=> b!105108 (= e!68431 (getValueByKey!154 (t!5711 (toList!805 (+!143 lt!52742 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))) lt!52739))))

(declare-fun c!18263 () Bool)

(declare-fun d!28719 () Bool)

(assert (=> d!28719 (= c!18263 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52742 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))) (= (_1!1211 (h!2229 (toList!805 (+!143 lt!52742 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))) lt!52739)))))

(assert (=> d!28719 (= (getValueByKey!154 (toList!805 (+!143 lt!52742 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!52739) e!68430)))

(declare-fun b!105109 () Bool)

(assert (=> b!105109 (= e!68431 None!158)))

(assert (= (and d!28719 c!18263) b!105106))

(assert (= (and d!28719 (not c!18263)) b!105107))

(assert (= (and b!105107 c!18264) b!105108))

(assert (= (and b!105107 (not c!18264)) b!105109))

(declare-fun m!117279 () Bool)

(assert (=> b!105108 m!117279))

(assert (=> d!27883 d!28719))

(assert (=> bm!10894 d!27949))

(assert (=> b!104068 d!28135))

(assert (=> b!104068 d!27911))

(assert (=> b!103733 d!28185))

(assert (=> b!103733 d!28187))

(assert (=> b!103695 d!28379))

(declare-fun d!28721 () Bool)

(declare-fun e!68432 () Bool)

(assert (=> d!28721 e!68432))

(declare-fun res!52374 () Bool)

(assert (=> d!28721 (=> (not res!52374) (not e!68432))))

(declare-fun lt!53703 () ListLongMap!1579)

(assert (=> d!28721 (= res!52374 (contains!825 lt!53703 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun lt!53706 () List!1637)

(assert (=> d!28721 (= lt!53703 (ListLongMap!1580 lt!53706))))

(declare-fun lt!53705 () Unit!3170)

(declare-fun lt!53704 () Unit!3170)

(assert (=> d!28721 (= lt!53705 lt!53704)))

(assert (=> d!28721 (= (getValueByKey!154 lt!53706 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (Some!159 (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!28721 (= lt!53704 (lemmaContainsTupThenGetReturnValue!72 lt!53706 (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!28721 (= lt!53706 (insertStrictlySorted!74 (toList!805 (map!1279 newMap!16)) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (=> d!28721 (= (+!143 (map!1279 newMap!16) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)) lt!53703)))

(declare-fun b!105110 () Bool)

(declare-fun res!52373 () Bool)

(assert (=> b!105110 (=> (not res!52373) (not e!68432))))

(assert (=> b!105110 (= res!52373 (= (getValueByKey!154 (toList!805 lt!53703) (_1!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) (Some!159 (_2!1211 (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))))

(declare-fun b!105111 () Bool)

(assert (=> b!105111 (= e!68432 (contains!828 (toList!805 lt!53703) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546)))))

(assert (= (and d!28721 res!52374) b!105110))

(assert (= (and b!105110 res!52373) b!105111))

(declare-fun m!117281 () Bool)

(assert (=> d!28721 m!117281))

(declare-fun m!117283 () Bool)

(assert (=> d!28721 m!117283))

(declare-fun m!117285 () Bool)

(assert (=> d!28721 m!117285))

(declare-fun m!117287 () Bool)

(assert (=> d!28721 m!117287))

(declare-fun m!117289 () Bool)

(assert (=> b!105110 m!117289))

(declare-fun m!117291 () Bool)

(assert (=> b!105111 m!117291))

(assert (=> b!103695 d!28721))

(assert (=> b!103695 d!27777))

(declare-fun b!105113 () Bool)

(declare-fun e!68433 () Option!160)

(declare-fun e!68434 () Option!160)

(assert (=> b!105113 (= e!68433 e!68434)))

(declare-fun c!18266 () Bool)

(assert (=> b!105113 (= c!18266 (and ((_ is Cons!1633) (toList!805 lt!53078)) (not (= (_1!1211 (h!2229 (toList!805 lt!53078))) (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))))

(declare-fun b!105112 () Bool)

(assert (=> b!105112 (= e!68433 (Some!159 (_2!1211 (h!2229 (toList!805 lt!53078)))))))

(declare-fun b!105114 () Bool)

(assert (=> b!105114 (= e!68434 (getValueByKey!154 (t!5711 (toList!805 lt!53078)) (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun c!18265 () Bool)

(declare-fun d!28723 () Bool)

(assert (=> d!28723 (= c!18265 (and ((_ is Cons!1633) (toList!805 lt!53078)) (= (_1!1211 (h!2229 (toList!805 lt!53078))) (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(assert (=> d!28723 (= (getValueByKey!154 (toList!805 lt!53078) (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))) e!68433)))

(declare-fun b!105115 () Bool)

(assert (=> b!105115 (= e!68434 None!158)))

(assert (= (and d!28723 c!18265) b!105112))

(assert (= (and d!28723 (not c!18265)) b!105113))

(assert (= (and b!105113 c!18266) b!105114))

(assert (= (and b!105113 (not c!18266)) b!105115))

(declare-fun m!117293 () Bool)

(assert (=> b!105114 m!117293))

(assert (=> b!103992 d!28723))

(declare-fun b!105117 () Bool)

(declare-fun e!68435 () Option!160)

(declare-fun e!68436 () Option!160)

(assert (=> b!105117 (= e!68435 e!68436)))

(declare-fun c!18268 () Bool)

(assert (=> b!105117 (= c!18268 (and ((_ is Cons!1633) (toList!805 lt!52997)) (not (= (_1!1211 (h!2229 (toList!805 lt!52997))) (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun b!105116 () Bool)

(assert (=> b!105116 (= e!68435 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52997)))))))

(declare-fun b!105118 () Bool)

(assert (=> b!105118 (= e!68436 (getValueByKey!154 (t!5711 (toList!805 lt!52997)) (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun c!18267 () Bool)

(declare-fun d!28725 () Bool)

(assert (=> d!28725 (= c!18267 (and ((_ is Cons!1633) (toList!805 lt!52997)) (= (_1!1211 (h!2229 (toList!805 lt!52997))) (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28725 (= (getValueByKey!154 (toList!805 lt!52997) (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) e!68435)))

(declare-fun b!105119 () Bool)

(assert (=> b!105119 (= e!68436 None!158)))

(assert (= (and d!28725 c!18267) b!105116))

(assert (= (and d!28725 (not c!18267)) b!105117))

(assert (= (and b!105117 c!18268) b!105118))

(assert (= (and b!105117 (not c!18268)) b!105119))

(declare-fun m!117295 () Bool)

(assert (=> b!105118 m!117295))

(assert (=> b!103802 d!28725))

(assert (=> b!103929 d!28077))

(declare-fun d!28727 () Bool)

(declare-fun e!68437 () Bool)

(assert (=> d!28727 e!68437))

(declare-fun res!52376 () Bool)

(assert (=> d!28727 (=> (not res!52376) (not e!68437))))

(declare-fun lt!53707 () ListLongMap!1579)

(assert (=> d!28727 (= res!52376 (contains!825 lt!53707 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(declare-fun lt!53710 () List!1637)

(assert (=> d!28727 (= lt!53707 (ListLongMap!1580 lt!53710))))

(declare-fun lt!53709 () Unit!3170)

(declare-fun lt!53708 () Unit!3170)

(assert (=> d!28727 (= lt!53709 lt!53708)))

(assert (=> d!28727 (= (getValueByKey!154 lt!53710 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(assert (=> d!28727 (= lt!53708 (lemmaContainsTupThenGetReturnValue!72 lt!53710 (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(assert (=> d!28727 (= lt!53710 (insertStrictlySorted!74 (toList!805 call!10887) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(assert (=> d!28727 (= (+!143 call!10887 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))) lt!53707)))

(declare-fun b!105120 () Bool)

(declare-fun res!52375 () Bool)

(assert (=> b!105120 (=> (not res!52375) (not e!68437))))

(assert (=> b!105120 (= res!52375 (= (getValueByKey!154 (toList!805 lt!53707) (_1!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) (Some!159 (_2!1211 (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(declare-fun b!105121 () Bool)

(assert (=> b!105121 (= e!68437 (contains!828 (toList!805 lt!53707) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))

(assert (= (and d!28727 res!52376) b!105120))

(assert (= (and b!105120 res!52375) b!105121))

(declare-fun m!117297 () Bool)

(assert (=> d!28727 m!117297))

(declare-fun m!117299 () Bool)

(assert (=> d!28727 m!117299))

(declare-fun m!117301 () Bool)

(assert (=> d!28727 m!117301))

(declare-fun m!117303 () Bool)

(assert (=> d!28727 m!117303))

(declare-fun m!117305 () Bool)

(assert (=> b!105120 m!117305))

(declare-fun m!117307 () Bool)

(assert (=> b!105121 m!117307))

(assert (=> b!103641 d!28727))

(declare-fun d!28729 () Bool)

(declare-fun e!68439 () Bool)

(assert (=> d!28729 e!68439))

(declare-fun res!52377 () Bool)

(assert (=> d!28729 (=> res!52377 e!68439)))

(declare-fun lt!53714 () Bool)

(assert (=> d!28729 (= res!52377 (not lt!53714))))

(declare-fun lt!53712 () Bool)

(assert (=> d!28729 (= lt!53714 lt!53712)))

(declare-fun lt!53711 () Unit!3170)

(declare-fun e!68438 () Unit!3170)

(assert (=> d!28729 (= lt!53711 e!68438)))

(declare-fun c!18269 () Bool)

(assert (=> d!28729 (= c!18269 lt!53712)))

(assert (=> d!28729 (= lt!53712 (containsKey!158 (toList!805 lt!52985) (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!28729 (= (contains!825 lt!52985 (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53714)))

(declare-fun b!105122 () Bool)

(declare-fun lt!53713 () Unit!3170)

(assert (=> b!105122 (= e!68438 lt!53713)))

(assert (=> b!105122 (= lt!53713 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52985) (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> b!105122 (isDefined!108 (getValueByKey!154 (toList!805 lt!52985) (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!105123 () Bool)

(declare-fun Unit!3244 () Unit!3170)

(assert (=> b!105123 (= e!68438 Unit!3244)))

(declare-fun b!105124 () Bool)

(assert (=> b!105124 (= e!68439 (isDefined!108 (getValueByKey!154 (toList!805 lt!52985) (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (= (and d!28729 c!18269) b!105122))

(assert (= (and d!28729 (not c!18269)) b!105123))

(assert (= (and d!28729 (not res!52377)) b!105124))

(declare-fun m!117309 () Bool)

(assert (=> d!28729 m!117309))

(declare-fun m!117311 () Bool)

(assert (=> b!105122 m!117311))

(assert (=> b!105122 m!114839))

(assert (=> b!105122 m!114839))

(declare-fun m!117313 () Bool)

(assert (=> b!105122 m!117313))

(assert (=> b!105124 m!114839))

(assert (=> b!105124 m!114839))

(assert (=> b!105124 m!117313))

(assert (=> d!27863 d!28729))

(declare-fun b!105126 () Bool)

(declare-fun e!68440 () Option!160)

(declare-fun e!68441 () Option!160)

(assert (=> b!105126 (= e!68440 e!68441)))

(declare-fun c!18271 () Bool)

(assert (=> b!105126 (= c!18271 (and ((_ is Cons!1633) lt!52988) (not (= (_1!1211 (h!2229 lt!52988)) (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun b!105125 () Bool)

(assert (=> b!105125 (= e!68440 (Some!159 (_2!1211 (h!2229 lt!52988))))))

(declare-fun b!105127 () Bool)

(assert (=> b!105127 (= e!68441 (getValueByKey!154 (t!5711 lt!52988) (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun d!28731 () Bool)

(declare-fun c!18270 () Bool)

(assert (=> d!28731 (= c!18270 (and ((_ is Cons!1633) lt!52988) (= (_1!1211 (h!2229 lt!52988)) (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28731 (= (getValueByKey!154 lt!52988 (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) e!68440)))

(declare-fun b!105128 () Bool)

(assert (=> b!105128 (= e!68441 None!158)))

(assert (= (and d!28731 c!18270) b!105125))

(assert (= (and d!28731 (not c!18270)) b!105126))

(assert (= (and b!105126 c!18271) b!105127))

(assert (= (and b!105126 (not c!18271)) b!105128))

(declare-fun m!117315 () Bool)

(assert (=> b!105127 m!117315))

(assert (=> d!27863 d!28731))

(declare-fun d!28733 () Bool)

(assert (=> d!28733 (= (getValueByKey!154 lt!52988 (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun lt!53715 () Unit!3170)

(assert (=> d!28733 (= lt!53715 (choose!650 lt!52988 (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun e!68442 () Bool)

(assert (=> d!28733 e!68442))

(declare-fun res!52378 () Bool)

(assert (=> d!28733 (=> (not res!52378) (not e!68442))))

(assert (=> d!28733 (= res!52378 (isStrictlySorted!303 lt!52988))))

(assert (=> d!28733 (= (lemmaContainsTupThenGetReturnValue!72 lt!52988 (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53715)))

(declare-fun b!105129 () Bool)

(declare-fun res!52379 () Bool)

(assert (=> b!105129 (=> (not res!52379) (not e!68442))))

(assert (=> b!105129 (= res!52379 (containsKey!158 lt!52988 (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!105130 () Bool)

(assert (=> b!105130 (= e!68442 (contains!828 lt!52988 (tuple2!2403 (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (= (and d!28733 res!52378) b!105129))

(assert (= (and b!105129 res!52379) b!105130))

(assert (=> d!28733 m!114833))

(declare-fun m!117317 () Bool)

(assert (=> d!28733 m!117317))

(declare-fun m!117319 () Bool)

(assert (=> d!28733 m!117319))

(declare-fun m!117321 () Bool)

(assert (=> b!105129 m!117321))

(declare-fun m!117323 () Bool)

(assert (=> b!105130 m!117323))

(assert (=> d!27863 d!28733))

(declare-fun lt!53716 () List!1637)

(declare-fun e!68443 () Bool)

(declare-fun b!105131 () Bool)

(assert (=> b!105131 (= e!68443 (contains!828 lt!53716 (tuple2!2403 (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!105132 () Bool)

(declare-fun e!68447 () List!1637)

(declare-fun call!11065 () List!1637)

(assert (=> b!105132 (= e!68447 call!11065)))

(declare-fun bm!11060 () Bool)

(declare-fun call!11063 () List!1637)

(declare-fun call!11064 () List!1637)

(assert (=> bm!11060 (= call!11063 call!11064)))

(declare-fun b!105133 () Bool)

(assert (=> b!105133 (= e!68447 call!11065)))

(declare-fun b!105134 () Bool)

(declare-fun c!18274 () Bool)

(assert (=> b!105134 (= c!18274 (and ((_ is Cons!1633) (toList!805 lt!52754)) (bvsgt (_1!1211 (h!2229 (toList!805 lt!52754))) (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun e!68444 () List!1637)

(assert (=> b!105134 (= e!68444 e!68447)))

(declare-fun bm!11061 () Bool)

(assert (=> bm!11061 (= call!11065 call!11063)))

(declare-fun e!68446 () List!1637)

(declare-fun b!105135 () Bool)

(assert (=> b!105135 (= e!68446 (insertStrictlySorted!74 (t!5711 (toList!805 lt!52754)) (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!105136 () Bool)

(declare-fun res!52381 () Bool)

(assert (=> b!105136 (=> (not res!52381) (not e!68443))))

(assert (=> b!105136 (= res!52381 (containsKey!158 lt!53716 (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun c!18275 () Bool)

(declare-fun bm!11062 () Bool)

(assert (=> bm!11062 (= call!11064 ($colon$colon!79 e!68446 (ite c!18275 (h!2229 (toList!805 lt!52754)) (tuple2!2403 (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun c!18273 () Bool)

(assert (=> bm!11062 (= c!18273 c!18275)))

(declare-fun d!28735 () Bool)

(assert (=> d!28735 e!68443))

(declare-fun res!52380 () Bool)

(assert (=> d!28735 (=> (not res!52380) (not e!68443))))

(assert (=> d!28735 (= res!52380 (isStrictlySorted!303 lt!53716))))

(declare-fun e!68445 () List!1637)

(assert (=> d!28735 (= lt!53716 e!68445)))

(assert (=> d!28735 (= c!18275 (and ((_ is Cons!1633) (toList!805 lt!52754)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52754))) (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28735 (isStrictlySorted!303 (toList!805 lt!52754))))

(assert (=> d!28735 (= (insertStrictlySorted!74 (toList!805 lt!52754) (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53716)))

(declare-fun b!105137 () Bool)

(assert (=> b!105137 (= e!68445 e!68444)))

(declare-fun c!18272 () Bool)

(assert (=> b!105137 (= c!18272 (and ((_ is Cons!1633) (toList!805 lt!52754)) (= (_1!1211 (h!2229 (toList!805 lt!52754))) (_1!1211 (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!105138 () Bool)

(assert (=> b!105138 (= e!68444 call!11063)))

(declare-fun b!105139 () Bool)

(assert (=> b!105139 (= e!68445 call!11064)))

(declare-fun b!105140 () Bool)

(assert (=> b!105140 (= e!68446 (ite c!18272 (t!5711 (toList!805 lt!52754)) (ite c!18274 (Cons!1633 (h!2229 (toList!805 lt!52754)) (t!5711 (toList!805 lt!52754))) Nil!1634)))))

(assert (= (and d!28735 c!18275) b!105139))

(assert (= (and d!28735 (not c!18275)) b!105137))

(assert (= (and b!105137 c!18272) b!105138))

(assert (= (and b!105137 (not c!18272)) b!105134))

(assert (= (and b!105134 c!18274) b!105133))

(assert (= (and b!105134 (not c!18274)) b!105132))

(assert (= (or b!105133 b!105132) bm!11061))

(assert (= (or b!105138 bm!11061) bm!11060))

(assert (= (or b!105139 bm!11060) bm!11062))

(assert (= (and bm!11062 c!18273) b!105135))

(assert (= (and bm!11062 (not c!18273)) b!105140))

(assert (= (and d!28735 res!52380) b!105136))

(assert (= (and b!105136 res!52381) b!105131))

(declare-fun m!117325 () Bool)

(assert (=> b!105136 m!117325))

(declare-fun m!117327 () Bool)

(assert (=> bm!11062 m!117327))

(declare-fun m!117329 () Bool)

(assert (=> d!28735 m!117329))

(declare-fun m!117331 () Bool)

(assert (=> d!28735 m!117331))

(declare-fun m!117333 () Bool)

(assert (=> b!105131 m!117333))

(declare-fun m!117335 () Bool)

(assert (=> b!105135 m!117335))

(assert (=> d!27863 d!28735))

(assert (=> d!27977 d!27971))

(assert (=> d!27977 d!27975))

(declare-fun d!28737 () Bool)

(assert (=> d!28737 (not (contains!825 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787)) lt!52786))))

(assert (=> d!28737 true))

(declare-fun _$36!316 () Unit!3170)

(assert (=> d!28737 (= (choose!654 lt!52784 lt!52790 lt!52787 lt!52786) _$36!316)))

(declare-fun bs!4322 () Bool)

(assert (= bs!4322 d!28737))

(assert (=> bs!4322 m!114451))

(assert (=> bs!4322 m!114451))

(assert (=> bs!4322 m!114455))

(assert (=> d!27977 d!28737))

(declare-fun d!28739 () Bool)

(declare-fun e!68449 () Bool)

(assert (=> d!28739 e!68449))

(declare-fun res!52382 () Bool)

(assert (=> d!28739 (=> res!52382 e!68449)))

(declare-fun lt!53720 () Bool)

(assert (=> d!28739 (= res!52382 (not lt!53720))))

(declare-fun lt!53718 () Bool)

(assert (=> d!28739 (= lt!53720 lt!53718)))

(declare-fun lt!53717 () Unit!3170)

(declare-fun e!68448 () Unit!3170)

(assert (=> d!28739 (= lt!53717 e!68448)))

(declare-fun c!18276 () Bool)

(assert (=> d!28739 (= c!18276 lt!53718)))

(assert (=> d!28739 (= lt!53718 (containsKey!158 (toList!805 lt!52784) lt!52786))))

(assert (=> d!28739 (= (contains!825 lt!52784 lt!52786) lt!53720)))

(declare-fun b!105142 () Bool)

(declare-fun lt!53719 () Unit!3170)

(assert (=> b!105142 (= e!68448 lt!53719)))

(assert (=> b!105142 (= lt!53719 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52784) lt!52786))))

(assert (=> b!105142 (isDefined!108 (getValueByKey!154 (toList!805 lt!52784) lt!52786))))

(declare-fun b!105143 () Bool)

(declare-fun Unit!3245 () Unit!3170)

(assert (=> b!105143 (= e!68448 Unit!3245)))

(declare-fun b!105144 () Bool)

(assert (=> b!105144 (= e!68449 (isDefined!108 (getValueByKey!154 (toList!805 lt!52784) lt!52786)))))

(assert (= (and d!28739 c!18276) b!105142))

(assert (= (and d!28739 (not c!18276)) b!105143))

(assert (= (and d!28739 (not res!52382)) b!105144))

(declare-fun m!117337 () Bool)

(assert (=> d!28739 m!117337))

(declare-fun m!117339 () Bool)

(assert (=> b!105142 m!117339))

(declare-fun m!117341 () Bool)

(assert (=> b!105142 m!117341))

(assert (=> b!105142 m!117341))

(declare-fun m!117343 () Bool)

(assert (=> b!105142 m!117343))

(assert (=> b!105144 m!117341))

(assert (=> b!105144 m!117341))

(assert (=> b!105144 m!117343))

(assert (=> d!27977 d!28739))

(declare-fun d!28741 () Bool)

(declare-fun lt!53721 () Bool)

(assert (=> d!28741 (= lt!53721 (select (content!107 (toList!805 lt!52924)) (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun e!68451 () Bool)

(assert (=> d!28741 (= lt!53721 e!68451)))

(declare-fun res!52383 () Bool)

(assert (=> d!28741 (=> (not res!52383) (not e!68451))))

(assert (=> d!28741 (= res!52383 ((_ is Cons!1633) (toList!805 lt!52924)))))

(assert (=> d!28741 (= (contains!828 (toList!805 lt!52924) (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))) lt!53721)))

(declare-fun b!105145 () Bool)

(declare-fun e!68450 () Bool)

(assert (=> b!105145 (= e!68451 e!68450)))

(declare-fun res!52384 () Bool)

(assert (=> b!105145 (=> res!52384 e!68450)))

(assert (=> b!105145 (= res!52384 (= (h!2229 (toList!805 lt!52924)) (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(declare-fun b!105146 () Bool)

(assert (=> b!105146 (= e!68450 (contains!828 (t!5711 (toList!805 lt!52924)) (ite c!17808 (ite c!17814 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52546) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52546)) (tuple2!2403 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) lt!52546))))))

(assert (= (and d!28741 res!52383) b!105145))

(assert (= (and b!105145 (not res!52384)) b!105146))

(declare-fun m!117345 () Bool)

(assert (=> d!28741 m!117345))

(declare-fun m!117347 () Bool)

(assert (=> d!28741 m!117347))

(declare-fun m!117349 () Bool)

(assert (=> b!105146 m!117349))

(assert (=> b!103730 d!28741))

(declare-fun d!28743 () Bool)

(declare-fun res!52385 () Bool)

(declare-fun e!68452 () Bool)

(assert (=> d!28743 (=> res!52385 e!68452)))

(assert (=> d!28743 (= res!52385 (and ((_ is Cons!1633) lt!53164) (= (_1!1211 (h!2229 lt!53164)) (_1!1211 lt!52547))))))

(assert (=> d!28743 (= (containsKey!158 lt!53164 (_1!1211 lt!52547)) e!68452)))

(declare-fun b!105147 () Bool)

(declare-fun e!68453 () Bool)

(assert (=> b!105147 (= e!68452 e!68453)))

(declare-fun res!52386 () Bool)

(assert (=> b!105147 (=> (not res!52386) (not e!68453))))

(assert (=> b!105147 (= res!52386 (and (or (not ((_ is Cons!1633) lt!53164)) (bvsle (_1!1211 (h!2229 lt!53164)) (_1!1211 lt!52547))) ((_ is Cons!1633) lt!53164) (bvslt (_1!1211 (h!2229 lt!53164)) (_1!1211 lt!52547))))))

(declare-fun b!105148 () Bool)

(assert (=> b!105148 (= e!68453 (containsKey!158 (t!5711 lt!53164) (_1!1211 lt!52547)))))

(assert (= (and d!28743 (not res!52385)) b!105147))

(assert (= (and b!105147 res!52386) b!105148))

(declare-fun m!117351 () Bool)

(assert (=> b!105148 m!117351))

(assert (=> b!104080 d!28743))

(declare-fun b!105149 () Bool)

(declare-fun e!68454 () Bool)

(declare-fun lt!53722 () List!1637)

(assert (=> b!105149 (= e!68454 (contains!828 lt!53722 (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547))))))

(declare-fun b!105150 () Bool)

(declare-fun e!68458 () List!1637)

(declare-fun call!11068 () List!1637)

(assert (=> b!105150 (= e!68458 call!11068)))

(declare-fun bm!11063 () Bool)

(declare-fun call!11066 () List!1637)

(declare-fun call!11067 () List!1637)

(assert (=> bm!11063 (= call!11066 call!11067)))

(declare-fun b!105151 () Bool)

(assert (=> b!105151 (= e!68458 call!11068)))

(declare-fun b!105152 () Bool)

(declare-fun c!18279 () Bool)

(assert (=> b!105152 (= c!18279 (and ((_ is Cons!1633) (t!5711 (toList!805 lt!52542))) (bvsgt (_1!1211 (h!2229 (t!5711 (toList!805 lt!52542)))) (_1!1211 lt!52547))))))

(declare-fun e!68455 () List!1637)

(assert (=> b!105152 (= e!68455 e!68458)))

(declare-fun bm!11064 () Bool)

(assert (=> bm!11064 (= call!11068 call!11066)))

(declare-fun b!105153 () Bool)

(declare-fun e!68457 () List!1637)

(assert (=> b!105153 (= e!68457 (insertStrictlySorted!74 (t!5711 (t!5711 (toList!805 lt!52542))) (_1!1211 lt!52547) (_2!1211 lt!52547)))))

(declare-fun b!105154 () Bool)

(declare-fun res!52388 () Bool)

(assert (=> b!105154 (=> (not res!52388) (not e!68454))))

(assert (=> b!105154 (= res!52388 (containsKey!158 lt!53722 (_1!1211 lt!52547)))))

(declare-fun bm!11065 () Bool)

(declare-fun c!18280 () Bool)

(assert (=> bm!11065 (= call!11067 ($colon$colon!79 e!68457 (ite c!18280 (h!2229 (t!5711 (toList!805 lt!52542))) (tuple2!2403 (_1!1211 lt!52547) (_2!1211 lt!52547)))))))

(declare-fun c!18278 () Bool)

(assert (=> bm!11065 (= c!18278 c!18280)))

(declare-fun d!28745 () Bool)

(assert (=> d!28745 e!68454))

(declare-fun res!52387 () Bool)

(assert (=> d!28745 (=> (not res!52387) (not e!68454))))

(assert (=> d!28745 (= res!52387 (isStrictlySorted!303 lt!53722))))

(declare-fun e!68456 () List!1637)

(assert (=> d!28745 (= lt!53722 e!68456)))

(assert (=> d!28745 (= c!18280 (and ((_ is Cons!1633) (t!5711 (toList!805 lt!52542))) (bvslt (_1!1211 (h!2229 (t!5711 (toList!805 lt!52542)))) (_1!1211 lt!52547))))))

(assert (=> d!28745 (isStrictlySorted!303 (t!5711 (toList!805 lt!52542)))))

(assert (=> d!28745 (= (insertStrictlySorted!74 (t!5711 (toList!805 lt!52542)) (_1!1211 lt!52547) (_2!1211 lt!52547)) lt!53722)))

(declare-fun b!105155 () Bool)

(assert (=> b!105155 (= e!68456 e!68455)))

(declare-fun c!18277 () Bool)

(assert (=> b!105155 (= c!18277 (and ((_ is Cons!1633) (t!5711 (toList!805 lt!52542))) (= (_1!1211 (h!2229 (t!5711 (toList!805 lt!52542)))) (_1!1211 lt!52547))))))

(declare-fun b!105156 () Bool)

(assert (=> b!105156 (= e!68455 call!11066)))

(declare-fun b!105157 () Bool)

(assert (=> b!105157 (= e!68456 call!11067)))

(declare-fun b!105158 () Bool)

(assert (=> b!105158 (= e!68457 (ite c!18277 (t!5711 (t!5711 (toList!805 lt!52542))) (ite c!18279 (Cons!1633 (h!2229 (t!5711 (toList!805 lt!52542))) (t!5711 (t!5711 (toList!805 lt!52542)))) Nil!1634)))))

(assert (= (and d!28745 c!18280) b!105157))

(assert (= (and d!28745 (not c!18280)) b!105155))

(assert (= (and b!105155 c!18277) b!105156))

(assert (= (and b!105155 (not c!18277)) b!105152))

(assert (= (and b!105152 c!18279) b!105151))

(assert (= (and b!105152 (not c!18279)) b!105150))

(assert (= (or b!105151 b!105150) bm!11064))

(assert (= (or b!105156 bm!11064) bm!11063))

(assert (= (or b!105157 bm!11063) bm!11065))

(assert (= (and bm!11065 c!18278) b!105153))

(assert (= (and bm!11065 (not c!18278)) b!105158))

(assert (= (and d!28745 res!52387) b!105154))

(assert (= (and b!105154 res!52388) b!105149))

(declare-fun m!117353 () Bool)

(assert (=> b!105154 m!117353))

(declare-fun m!117355 () Bool)

(assert (=> bm!11065 m!117355))

(declare-fun m!117357 () Bool)

(assert (=> d!28745 m!117357))

(assert (=> d!28745 m!115767))

(declare-fun m!117359 () Bool)

(assert (=> b!105149 m!117359))

(declare-fun m!117361 () Bool)

(assert (=> b!105153 m!117361))

(assert (=> b!103907 d!28745))

(declare-fun b!105171 () Bool)

(declare-fun e!68465 () SeekEntryResult!268)

(assert (=> b!105171 (= e!68465 (MissingVacant!268 (index!3221 lt!53067)))))

(declare-fun b!105172 () Bool)

(declare-fun e!68466 () SeekEntryResult!268)

(declare-fun e!68467 () SeekEntryResult!268)

(assert (=> b!105172 (= e!68466 e!68467)))

(declare-fun c!18289 () Bool)

(declare-fun lt!53728 () (_ BitVec 64))

(assert (=> b!105172 (= c!18289 (= lt!53728 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(declare-fun b!105173 () Bool)

(declare-fun c!18287 () Bool)

(assert (=> b!105173 (= c!18287 (= lt!53728 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105173 (= e!68467 e!68465)))

(declare-fun b!105174 () Bool)

(assert (=> b!105174 (= e!68467 (Found!268 (index!3221 lt!53067)))))

(declare-fun lt!53727 () SeekEntryResult!268)

(declare-fun d!28747 () Bool)

(assert (=> d!28747 (and (or ((_ is Undefined!268) lt!53727) (not ((_ is Found!268) lt!53727)) (and (bvsge (index!3220 lt!53727) #b00000000000000000000000000000000) (bvslt (index!3220 lt!53727) (size!2310 (_keys!4263 newMap!16))))) (or ((_ is Undefined!268) lt!53727) ((_ is Found!268) lt!53727) (not ((_ is MissingVacant!268) lt!53727)) (not (= (index!3222 lt!53727) (index!3221 lt!53067))) (and (bvsge (index!3222 lt!53727) #b00000000000000000000000000000000) (bvslt (index!3222 lt!53727) (size!2310 (_keys!4263 newMap!16))))) (or ((_ is Undefined!268) lt!53727) (ite ((_ is Found!268) lt!53727) (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3220 lt!53727)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (and ((_ is MissingVacant!268) lt!53727) (= (index!3222 lt!53727) (index!3221 lt!53067)) (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3222 lt!53727)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!28747 (= lt!53727 e!68466)))

(declare-fun c!18288 () Bool)

(assert (=> d!28747 (= c!18288 (bvsge (x!13510 lt!53067) #b01111111111111111111111111111110))))

(assert (=> d!28747 (= lt!53728 (select (arr!2056 (_keys!4263 newMap!16)) (index!3221 lt!53067)))))

(assert (=> d!28747 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28747 (= (seekKeyOrZeroReturnVacant!0 (x!13510 lt!53067) (index!3221 lt!53067) (index!3221 lt!53067) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)) lt!53727)))

(declare-fun b!105175 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!105175 (= e!68465 (seekKeyOrZeroReturnVacant!0 (bvadd (x!13510 lt!53067) #b00000000000000000000000000000001) (nextIndex!0 (index!3221 lt!53067) (x!13510 lt!53067) (mask!6697 newMap!16)) (index!3221 lt!53067) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun b!105176 () Bool)

(assert (=> b!105176 (= e!68466 Undefined!268)))

(assert (= (and d!28747 c!18288) b!105176))

(assert (= (and d!28747 (not c!18288)) b!105172))

(assert (= (and b!105172 c!18289) b!105174))

(assert (= (and b!105172 (not c!18289)) b!105173))

(assert (= (and b!105173 c!18287) b!105171))

(assert (= (and b!105173 (not c!18287)) b!105175))

(declare-fun m!117363 () Bool)

(assert (=> d!28747 m!117363))

(declare-fun m!117365 () Bool)

(assert (=> d!28747 m!117365))

(assert (=> d!28747 m!115081))

(assert (=> d!28747 m!114517))

(declare-fun m!117367 () Bool)

(assert (=> b!105175 m!117367))

(assert (=> b!105175 m!117367))

(assert (=> b!105175 m!114187))

(declare-fun m!117369 () Bool)

(assert (=> b!105175 m!117369))

(assert (=> b!103979 d!28747))

(assert (=> d!27845 d!27839))

(assert (=> d!27845 d!27841))

(assert (=> d!27845 d!27843))

(assert (=> d!27845 d!27837))

(declare-fun d!28749 () Bool)

(declare-fun res!52389 () Bool)

(declare-fun e!68468 () Bool)

(assert (=> d!28749 (=> res!52389 e!68468)))

(assert (=> d!28749 (= res!52389 (and ((_ is Cons!1633) (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787)))) (= (_1!1211 (h!2229 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787))))) lt!52786)))))

(assert (=> d!28749 (= (containsKey!158 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787))) lt!52786) e!68468)))

(declare-fun b!105177 () Bool)

(declare-fun e!68469 () Bool)

(assert (=> b!105177 (= e!68468 e!68469)))

(declare-fun res!52390 () Bool)

(assert (=> b!105177 (=> (not res!52390) (not e!68469))))

(assert (=> b!105177 (= res!52390 (and (or (not ((_ is Cons!1633) (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787))))) (bvsle (_1!1211 (h!2229 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787))))) lt!52786)) ((_ is Cons!1633) (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787)))) (bvslt (_1!1211 (h!2229 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787))))) lt!52786)))))

(declare-fun b!105178 () Bool)

(assert (=> b!105178 (= e!68469 (containsKey!158 (t!5711 (toList!805 (+!143 lt!52784 (tuple2!2403 lt!52790 lt!52787)))) lt!52786))))

(assert (= (and d!28749 (not res!52389)) b!105177))

(assert (= (and b!105177 res!52390) b!105178))

(declare-fun m!117371 () Bool)

(assert (=> b!105178 m!117371))

(assert (=> d!27971 d!28749))

(declare-fun b!105180 () Bool)

(declare-fun e!68470 () Option!160)

(declare-fun e!68471 () Option!160)

(assert (=> b!105180 (= e!68470 e!68471)))

(declare-fun c!18291 () Bool)

(assert (=> b!105180 (= c!18291 (and ((_ is Cons!1633) (t!5711 (toList!805 lt!52791))) (not (= (_1!1211 (h!2229 (t!5711 (toList!805 lt!52791)))) (_1!1211 lt!52547)))))))

(declare-fun b!105179 () Bool)

(assert (=> b!105179 (= e!68470 (Some!159 (_2!1211 (h!2229 (t!5711 (toList!805 lt!52791))))))))

(declare-fun b!105181 () Bool)

(assert (=> b!105181 (= e!68471 (getValueByKey!154 (t!5711 (t!5711 (toList!805 lt!52791))) (_1!1211 lt!52547)))))

(declare-fun d!28751 () Bool)

(declare-fun c!18290 () Bool)

(assert (=> d!28751 (= c!18290 (and ((_ is Cons!1633) (t!5711 (toList!805 lt!52791))) (= (_1!1211 (h!2229 (t!5711 (toList!805 lt!52791)))) (_1!1211 lt!52547))))))

(assert (=> d!28751 (= (getValueByKey!154 (t!5711 (toList!805 lt!52791)) (_1!1211 lt!52547)) e!68470)))

(declare-fun b!105182 () Bool)

(assert (=> b!105182 (= e!68471 None!158)))

(assert (= (and d!28751 c!18290) b!105179))

(assert (= (and d!28751 (not c!18290)) b!105180))

(assert (= (and b!105180 c!18291) b!105181))

(assert (= (and b!105180 (not c!18291)) b!105182))

(declare-fun m!117373 () Bool)

(assert (=> b!105181 m!117373))

(assert (=> b!103736 d!28751))

(declare-fun b!105184 () Bool)

(declare-fun e!68472 () Option!160)

(declare-fun e!68473 () Option!160)

(assert (=> b!105184 (= e!68472 e!68473)))

(declare-fun c!18293 () Bool)

(assert (=> b!105184 (= c!18293 (and ((_ is Cons!1633) (toList!805 lt!52936)) (not (= (_1!1211 (h!2229 (toList!805 lt!52936))) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun b!105183 () Bool)

(assert (=> b!105183 (= e!68472 (Some!159 (_2!1211 (h!2229 (toList!805 lt!52936)))))))

(declare-fun b!105185 () Bool)

(assert (=> b!105185 (= e!68473 (getValueByKey!154 (t!5711 (toList!805 lt!52936)) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun d!28753 () Bool)

(declare-fun c!18292 () Bool)

(assert (=> d!28753 (= c!18292 (and ((_ is Cons!1633) (toList!805 lt!52936)) (= (_1!1211 (h!2229 (toList!805 lt!52936))) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28753 (= (getValueByKey!154 (toList!805 lt!52936) (_1!1211 (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))))) e!68472)))

(declare-fun b!105186 () Bool)

(assert (=> b!105186 (= e!68473 None!158)))

(assert (= (and d!28753 c!18292) b!105183))

(assert (= (and d!28753 (not c!18292)) b!105184))

(assert (= (and b!105184 c!18293) b!105185))

(assert (= (and b!105184 (not c!18293)) b!105186))

(declare-fun m!117375 () Bool)

(assert (=> b!105185 m!117375))

(assert (=> b!103740 d!28753))

(assert (=> b!103688 d!27943))

(declare-fun d!28755 () Bool)

(assert (=> d!28755 (= (apply!97 lt!52976 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1336 (getValueByKey!154 (toList!805 lt!52976) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4323 () Bool)

(assert (= bs!4323 d!28755))

(assert (=> bs!4323 m!116287))

(assert (=> bs!4323 m!116287))

(declare-fun m!117377 () Bool)

(assert (=> bs!4323 m!117377))

(assert (=> b!103774 d!28755))

(declare-fun d!28757 () Bool)

(declare-fun e!68475 () Bool)

(assert (=> d!28757 e!68475))

(declare-fun res!52391 () Bool)

(assert (=> d!28757 (=> res!52391 e!68475)))

(declare-fun lt!53732 () Bool)

(assert (=> d!28757 (= res!52391 (not lt!53732))))

(declare-fun lt!53730 () Bool)

(assert (=> d!28757 (= lt!53732 lt!53730)))

(declare-fun lt!53729 () Unit!3170)

(declare-fun e!68474 () Unit!3170)

(assert (=> d!28757 (= lt!53729 e!68474)))

(declare-fun c!18294 () Bool)

(assert (=> d!28757 (= c!18294 lt!53730)))

(assert (=> d!28757 (= lt!53730 (containsKey!158 (toList!805 lt!53078) (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28757 (= (contains!825 lt!53078 (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))) lt!53732)))

(declare-fun b!105187 () Bool)

(declare-fun lt!53731 () Unit!3170)

(assert (=> b!105187 (= e!68474 lt!53731)))

(assert (=> b!105187 (= lt!53731 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!53078) (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> b!105187 (isDefined!108 (getValueByKey!154 (toList!805 lt!53078) (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!105188 () Bool)

(declare-fun Unit!3246 () Unit!3170)

(assert (=> b!105188 (= e!68474 Unit!3246)))

(declare-fun b!105189 () Bool)

(assert (=> b!105189 (= e!68475 (isDefined!108 (getValueByKey!154 (toList!805 lt!53078) (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(assert (= (and d!28757 c!18294) b!105187))

(assert (= (and d!28757 (not c!18294)) b!105188))

(assert (= (and d!28757 (not res!52391)) b!105189))

(declare-fun m!117379 () Bool)

(assert (=> d!28757 m!117379))

(declare-fun m!117381 () Bool)

(assert (=> b!105187 m!117381))

(assert (=> b!105187 m!115119))

(assert (=> b!105187 m!115119))

(declare-fun m!117383 () Bool)

(assert (=> b!105187 m!117383))

(assert (=> b!105189 m!115119))

(assert (=> b!105189 m!115119))

(assert (=> b!105189 m!117383))

(assert (=> d!27957 d!28757))

(declare-fun b!105191 () Bool)

(declare-fun e!68476 () Option!160)

(declare-fun e!68477 () Option!160)

(assert (=> b!105191 (= e!68476 e!68477)))

(declare-fun c!18296 () Bool)

(assert (=> b!105191 (= c!18296 (and ((_ is Cons!1633) lt!53081) (not (= (_1!1211 (h!2229 lt!53081)) (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))))

(declare-fun b!105190 () Bool)

(assert (=> b!105190 (= e!68476 (Some!159 (_2!1211 (h!2229 lt!53081))))))

(declare-fun b!105192 () Bool)

(assert (=> b!105192 (= e!68477 (getValueByKey!154 (t!5711 lt!53081) (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun c!18295 () Bool)

(declare-fun d!28759 () Bool)

(assert (=> d!28759 (= c!18295 (and ((_ is Cons!1633) lt!53081) (= (_1!1211 (h!2229 lt!53081)) (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(assert (=> d!28759 (= (getValueByKey!154 lt!53081 (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))) e!68476)))

(declare-fun b!105193 () Bool)

(assert (=> b!105193 (= e!68477 None!158)))

(assert (= (and d!28759 c!18295) b!105190))

(assert (= (and d!28759 (not c!18295)) b!105191))

(assert (= (and b!105191 c!18296) b!105192))

(assert (= (and b!105191 (not c!18296)) b!105193))

(declare-fun m!117385 () Bool)

(assert (=> b!105192 m!117385))

(assert (=> d!27957 d!28759))

(declare-fun d!28761 () Bool)

(assert (=> d!28761 (= (getValueByKey!154 lt!53081 (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))) (Some!159 (_2!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun lt!53733 () Unit!3170)

(assert (=> d!28761 (= lt!53733 (choose!650 lt!53081 (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) (_2!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun e!68478 () Bool)

(assert (=> d!28761 e!68478))

(declare-fun res!52392 () Bool)

(assert (=> d!28761 (=> (not res!52392) (not e!68478))))

(assert (=> d!28761 (= res!52392 (isStrictlySorted!303 lt!53081))))

(assert (=> d!28761 (= (lemmaContainsTupThenGetReturnValue!72 lt!53081 (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) (_2!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))) lt!53733)))

(declare-fun b!105194 () Bool)

(declare-fun res!52393 () Bool)

(assert (=> b!105194 (=> (not res!52393) (not e!68478))))

(assert (=> b!105194 (= res!52393 (containsKey!158 lt!53081 (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!105195 () Bool)

(assert (=> b!105195 (= e!68478 (contains!828 lt!53081 (tuple2!2403 (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) (_2!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(assert (= (and d!28761 res!52392) b!105194))

(assert (= (and b!105194 res!52393) b!105195))

(assert (=> d!28761 m!115113))

(declare-fun m!117387 () Bool)

(assert (=> d!28761 m!117387))

(declare-fun m!117389 () Bool)

(assert (=> d!28761 m!117389))

(declare-fun m!117391 () Bool)

(assert (=> b!105194 m!117391))

(declare-fun m!117393 () Bool)

(assert (=> b!105195 m!117393))

(assert (=> d!27957 d!28761))

(declare-fun e!68479 () Bool)

(declare-fun lt!53734 () List!1637)

(declare-fun b!105196 () Bool)

(assert (=> b!105196 (= e!68479 (contains!828 lt!53734 (tuple2!2403 (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) (_2!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun b!105197 () Bool)

(declare-fun e!68483 () List!1637)

(declare-fun call!11071 () List!1637)

(assert (=> b!105197 (= e!68483 call!11071)))

(declare-fun bm!11066 () Bool)

(declare-fun call!11069 () List!1637)

(declare-fun call!11070 () List!1637)

(assert (=> bm!11066 (= call!11069 call!11070)))

(declare-fun b!105198 () Bool)

(assert (=> b!105198 (= e!68483 call!11071)))

(declare-fun c!18299 () Bool)

(declare-fun b!105199 () Bool)

(assert (=> b!105199 (= c!18299 (and ((_ is Cons!1633) (toList!805 (ite c!17839 call!10876 (ite c!17842 call!10878 call!10873)))) (bvsgt (_1!1211 (h!2229 (toList!805 (ite c!17839 call!10876 (ite c!17842 call!10878 call!10873))))) (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun e!68480 () List!1637)

(assert (=> b!105199 (= e!68480 e!68483)))

(declare-fun bm!11067 () Bool)

(assert (=> bm!11067 (= call!11071 call!11069)))

(declare-fun e!68482 () List!1637)

(declare-fun b!105200 () Bool)

(assert (=> b!105200 (= e!68482 (insertStrictlySorted!74 (t!5711 (toList!805 (ite c!17839 call!10876 (ite c!17842 call!10878 call!10873)))) (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) (_2!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!105201 () Bool)

(declare-fun res!52395 () Bool)

(assert (=> b!105201 (=> (not res!52395) (not e!68479))))

(assert (=> b!105201 (= res!52395 (containsKey!158 lt!53734 (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun bm!11068 () Bool)

(declare-fun c!18300 () Bool)

(assert (=> bm!11068 (= call!11070 ($colon$colon!79 e!68482 (ite c!18300 (h!2229 (toList!805 (ite c!17839 call!10876 (ite c!17842 call!10878 call!10873)))) (tuple2!2403 (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) (_2!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))))

(declare-fun c!18298 () Bool)

(assert (=> bm!11068 (= c!18298 c!18300)))

(declare-fun d!28763 () Bool)

(assert (=> d!28763 e!68479))

(declare-fun res!52394 () Bool)

(assert (=> d!28763 (=> (not res!52394) (not e!68479))))

(assert (=> d!28763 (= res!52394 (isStrictlySorted!303 lt!53734))))

(declare-fun e!68481 () List!1637)

(assert (=> d!28763 (= lt!53734 e!68481)))

(assert (=> d!28763 (= c!18300 (and ((_ is Cons!1633) (toList!805 (ite c!17839 call!10876 (ite c!17842 call!10878 call!10873)))) (bvslt (_1!1211 (h!2229 (toList!805 (ite c!17839 call!10876 (ite c!17842 call!10878 call!10873))))) (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(assert (=> d!28763 (isStrictlySorted!303 (toList!805 (ite c!17839 call!10876 (ite c!17842 call!10878 call!10873))))))

(assert (=> d!28763 (= (insertStrictlySorted!74 (toList!805 (ite c!17839 call!10876 (ite c!17842 call!10878 call!10873))) (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) (_2!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))) lt!53734)))

(declare-fun b!105202 () Bool)

(assert (=> b!105202 (= e!68481 e!68480)))

(declare-fun c!18297 () Bool)

(assert (=> b!105202 (= c!18297 (and ((_ is Cons!1633) (toList!805 (ite c!17839 call!10876 (ite c!17842 call!10878 call!10873)))) (= (_1!1211 (h!2229 (toList!805 (ite c!17839 call!10876 (ite c!17842 call!10878 call!10873))))) (_1!1211 (ite (or c!17839 c!17842) (tuple2!2403 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!359 thiss!992)))) (tuple2!2403 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun b!105203 () Bool)

(assert (=> b!105203 (= e!68480 call!11069)))

(declare-fun b!105204 () Bool)

(assert (=> b!105204 (= e!68481 call!11070)))

(declare-fun b!105205 () Bool)

(assert (=> b!105205 (= e!68482 (ite c!18297 (t!5711 (toList!805 (ite c!17839 call!10876 (ite c!17842 call!10878 call!10873)))) (ite c!18299 (Cons!1633 (h!2229 (toList!805 (ite c!17839 call!10876 (ite c!17842 call!10878 call!10873)))) (t!5711 (toList!805 (ite c!17839 call!10876 (ite c!17842 call!10878 call!10873))))) Nil!1634)))))

(assert (= (and d!28763 c!18300) b!105204))

(assert (= (and d!28763 (not c!18300)) b!105202))

(assert (= (and b!105202 c!18297) b!105203))

(assert (= (and b!105202 (not c!18297)) b!105199))

(assert (= (and b!105199 c!18299) b!105198))

(assert (= (and b!105199 (not c!18299)) b!105197))

(assert (= (or b!105198 b!105197) bm!11067))

(assert (= (or b!105203 bm!11067) bm!11066))

(assert (= (or b!105204 bm!11066) bm!11068))

(assert (= (and bm!11068 c!18298) b!105200))

(assert (= (and bm!11068 (not c!18298)) b!105205))

(assert (= (and d!28763 res!52394) b!105201))

(assert (= (and b!105201 res!52395) b!105196))

(declare-fun m!117395 () Bool)

(assert (=> b!105201 m!117395))

(declare-fun m!117397 () Bool)

(assert (=> bm!11068 m!117397))

(declare-fun m!117399 () Bool)

(assert (=> d!28763 m!117399))

(declare-fun m!117401 () Bool)

(assert (=> d!28763 m!117401))

(declare-fun m!117403 () Bool)

(assert (=> b!105196 m!117403))

(declare-fun m!117405 () Bool)

(assert (=> b!105200 m!117405))

(assert (=> d!27957 d!28763))

(declare-fun d!28765 () Bool)

(declare-fun e!68485 () Bool)

(assert (=> d!28765 e!68485))

(declare-fun res!52396 () Bool)

(assert (=> d!28765 (=> res!52396 e!68485)))

(declare-fun lt!53738 () Bool)

(assert (=> d!28765 (= res!52396 (not lt!53738))))

(declare-fun lt!53736 () Bool)

(assert (=> d!28765 (= lt!53738 lt!53736)))

(declare-fun lt!53735 () Unit!3170)

(declare-fun e!68484 () Unit!3170)

(assert (=> d!28765 (= lt!53735 e!68484)))

(declare-fun c!18301 () Bool)

(assert (=> d!28765 (= c!18301 lt!53736)))

(assert (=> d!28765 (= lt!53736 (containsKey!158 (toList!805 lt!52997) (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> d!28765 (= (contains!825 lt!52997 (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53738)))

(declare-fun b!105206 () Bool)

(declare-fun lt!53737 () Unit!3170)

(assert (=> b!105206 (= e!68484 lt!53737)))

(assert (=> b!105206 (= lt!53737 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!805 lt!52997) (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(assert (=> b!105206 (isDefined!108 (getValueByKey!154 (toList!805 lt!52997) (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!105207 () Bool)

(declare-fun Unit!3247 () Unit!3170)

(assert (=> b!105207 (= e!68484 Unit!3247)))

(declare-fun b!105208 () Bool)

(assert (=> b!105208 (= e!68485 (isDefined!108 (getValueByKey!154 (toList!805 lt!52997) (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (= (and d!28765 c!18301) b!105206))

(assert (= (and d!28765 (not c!18301)) b!105207))

(assert (= (and d!28765 (not res!52396)) b!105208))

(declare-fun m!117407 () Bool)

(assert (=> d!28765 m!117407))

(declare-fun m!117409 () Bool)

(assert (=> b!105206 m!117409))

(assert (=> b!105206 m!114879))

(assert (=> b!105206 m!114879))

(declare-fun m!117411 () Bool)

(assert (=> b!105206 m!117411))

(assert (=> b!105208 m!114879))

(assert (=> b!105208 m!114879))

(assert (=> b!105208 m!117411))

(assert (=> d!27871 d!28765))

(declare-fun b!105210 () Bool)

(declare-fun e!68486 () Option!160)

(declare-fun e!68487 () Option!160)

(assert (=> b!105210 (= e!68486 e!68487)))

(declare-fun c!18303 () Bool)

(assert (=> b!105210 (= c!18303 (and ((_ is Cons!1633) lt!53000) (not (= (_1!1211 (h!2229 lt!53000)) (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun b!105209 () Bool)

(assert (=> b!105209 (= e!68486 (Some!159 (_2!1211 (h!2229 lt!53000))))))

(declare-fun b!105211 () Bool)

(assert (=> b!105211 (= e!68487 (getValueByKey!154 (t!5711 lt!53000) (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun c!18302 () Bool)

(declare-fun d!28767 () Bool)

(assert (=> d!28767 (= c!18302 (and ((_ is Cons!1633) lt!53000) (= (_1!1211 (h!2229 lt!53000)) (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28767 (= (getValueByKey!154 lt!53000 (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) e!68486)))

(declare-fun b!105212 () Bool)

(assert (=> b!105212 (= e!68487 None!158)))

(assert (= (and d!28767 c!18302) b!105209))

(assert (= (and d!28767 (not c!18302)) b!105210))

(assert (= (and b!105210 c!18303) b!105211))

(assert (= (and b!105210 (not c!18303)) b!105212))

(declare-fun m!117413 () Bool)

(assert (=> b!105211 m!117413))

(assert (=> d!27871 d!28767))

(declare-fun d!28769 () Bool)

(assert (=> d!28769 (= (getValueByKey!154 lt!53000 (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) (Some!159 (_2!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun lt!53739 () Unit!3170)

(assert (=> d!28769 (= lt!53739 (choose!650 lt!53000 (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun e!68488 () Bool)

(assert (=> d!28769 e!68488))

(declare-fun res!52397 () Bool)

(assert (=> d!28769 (=> (not res!52397) (not e!68488))))

(assert (=> d!28769 (= res!52397 (isStrictlySorted!303 lt!53000))))

(assert (=> d!28769 (= (lemmaContainsTupThenGetReturnValue!72 lt!53000 (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53739)))

(declare-fun b!105213 () Bool)

(declare-fun res!52398 () Bool)

(assert (=> b!105213 (=> (not res!52398) (not e!68488))))

(assert (=> b!105213 (= res!52398 (containsKey!158 lt!53000 (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!105214 () Bool)

(assert (=> b!105214 (= e!68488 (contains!828 lt!53000 (tuple2!2403 (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (= (and d!28769 res!52397) b!105213))

(assert (= (and b!105213 res!52398) b!105214))

(assert (=> d!28769 m!114873))

(declare-fun m!117415 () Bool)

(assert (=> d!28769 m!117415))

(declare-fun m!117417 () Bool)

(assert (=> d!28769 m!117417))

(declare-fun m!117419 () Bool)

(assert (=> b!105213 m!117419))

(declare-fun m!117421 () Bool)

(assert (=> b!105214 m!117421))

(assert (=> d!27871 d!28769))

(declare-fun b!105215 () Bool)

(declare-fun e!68489 () Bool)

(declare-fun lt!53740 () List!1637)

(assert (=> b!105215 (= e!68489 (contains!828 lt!53740 (tuple2!2403 (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!105216 () Bool)

(declare-fun e!68493 () List!1637)

(declare-fun call!11074 () List!1637)

(assert (=> b!105216 (= e!68493 call!11074)))

(declare-fun bm!11069 () Bool)

(declare-fun call!11072 () List!1637)

(declare-fun call!11073 () List!1637)

(assert (=> bm!11069 (= call!11072 call!11073)))

(declare-fun b!105217 () Bool)

(assert (=> b!105217 (= e!68493 call!11074)))

(declare-fun c!18306 () Bool)

(declare-fun b!105218 () Bool)

(assert (=> b!105218 (= c!18306 (and ((_ is Cons!1633) (toList!805 lt!52742)) (bvsgt (_1!1211 (h!2229 (toList!805 lt!52742))) (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun e!68490 () List!1637)

(assert (=> b!105218 (= e!68490 e!68493)))

(declare-fun bm!11070 () Bool)

(assert (=> bm!11070 (= call!11074 call!11072)))

(declare-fun e!68492 () List!1637)

(declare-fun b!105219 () Bool)

(assert (=> b!105219 (= e!68492 (insertStrictlySorted!74 (t!5711 (toList!805 lt!52742)) (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun b!105220 () Bool)

(declare-fun res!52400 () Bool)

(assert (=> b!105220 (=> (not res!52400) (not e!68489))))

(assert (=> b!105220 (= res!52400 (containsKey!158 lt!53740 (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))

(declare-fun c!18307 () Bool)

(declare-fun bm!11071 () Bool)

(assert (=> bm!11071 (= call!11073 ($colon$colon!79 e!68492 (ite c!18307 (h!2229 (toList!805 lt!52742)) (tuple2!2403 (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))))))))

(declare-fun c!18305 () Bool)

(assert (=> bm!11071 (= c!18305 c!18307)))

(declare-fun d!28771 () Bool)

(assert (=> d!28771 e!68489))

(declare-fun res!52399 () Bool)

(assert (=> d!28771 (=> (not res!52399) (not e!68489))))

(assert (=> d!28771 (= res!52399 (isStrictlySorted!303 lt!53740))))

(declare-fun e!68491 () List!1637)

(assert (=> d!28771 (= lt!53740 e!68491)))

(assert (=> d!28771 (= c!18307 (and ((_ is Cons!1633) (toList!805 lt!52742)) (bvslt (_1!1211 (h!2229 (toList!805 lt!52742))) (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(assert (=> d!28771 (isStrictlySorted!303 (toList!805 lt!52742))))

(assert (=> d!28771 (= (insertStrictlySorted!74 (toList!805 lt!52742) (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))) (_2!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992)))))) lt!53740)))

(declare-fun b!105221 () Bool)

(assert (=> b!105221 (= e!68491 e!68490)))

(declare-fun c!18304 () Bool)

(assert (=> b!105221 (= c!18304 (and ((_ is Cons!1633) (toList!805 lt!52742)) (= (_1!1211 (h!2229 (toList!805 lt!52742))) (_1!1211 (tuple2!2403 lt!52744 (minValue!2438 (v!2876 (underlying!359 thiss!992))))))))))

(declare-fun b!105222 () Bool)

(assert (=> b!105222 (= e!68490 call!11072)))

(declare-fun b!105223 () Bool)

(assert (=> b!105223 (= e!68491 call!11073)))

(declare-fun b!105224 () Bool)

(assert (=> b!105224 (= e!68492 (ite c!18304 (t!5711 (toList!805 lt!52742)) (ite c!18306 (Cons!1633 (h!2229 (toList!805 lt!52742)) (t!5711 (toList!805 lt!52742))) Nil!1634)))))

(assert (= (and d!28771 c!18307) b!105223))

(assert (= (and d!28771 (not c!18307)) b!105221))

(assert (= (and b!105221 c!18304) b!105222))

(assert (= (and b!105221 (not c!18304)) b!105218))

(assert (= (and b!105218 c!18306) b!105217))

(assert (= (and b!105218 (not c!18306)) b!105216))

(assert (= (or b!105217 b!105216) bm!11070))

(assert (= (or b!105222 bm!11070) bm!11069))

(assert (= (or b!105223 bm!11069) bm!11071))

(assert (= (and bm!11071 c!18305) b!105219))

(assert (= (and bm!11071 (not c!18305)) b!105224))

(assert (= (and d!28771 res!52399) b!105220))

(assert (= (and b!105220 res!52400) b!105215))

(declare-fun m!117423 () Bool)

(assert (=> b!105220 m!117423))

(declare-fun m!117425 () Bool)

(assert (=> bm!11071 m!117425))

(declare-fun m!117427 () Bool)

(assert (=> d!28771 m!117427))

(declare-fun m!117429 () Bool)

(assert (=> d!28771 m!117429))

(declare-fun m!117431 () Bool)

(assert (=> b!105215 m!117431))

(declare-fun m!117433 () Bool)

(assert (=> b!105219 m!117433))

(assert (=> d!27871 d!28771))

(assert (=> b!103753 d!28045))

(assert (=> b!103634 d!28077))

(declare-fun d!28773 () Bool)

(declare-fun lt!53741 () Bool)

(assert (=> d!28773 (= lt!53741 (select (content!107 (toList!805 lt!52985)) (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun e!68495 () Bool)

(assert (=> d!28773 (= lt!53741 e!68495)))

(declare-fun res!52401 () Bool)

(assert (=> d!28773 (=> (not res!52401) (not e!68495))))

(assert (=> d!28773 (= res!52401 ((_ is Cons!1633) (toList!805 lt!52985)))))

(assert (=> d!28773 (= (contains!828 (toList!805 lt!52985) (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))) lt!53741)))

(declare-fun b!105225 () Bool)

(declare-fun e!68494 () Bool)

(assert (=> b!105225 (= e!68495 e!68494)))

(declare-fun res!52402 () Bool)

(assert (=> b!105225 (=> res!52402 e!68494)))

(assert (=> b!105225 (= res!52402 (= (h!2229 (toList!805 lt!52985)) (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(declare-fun b!105226 () Bool)

(assert (=> b!105226 (= e!68494 (contains!828 (t!5711 (toList!805 lt!52985)) (tuple2!2403 lt!52755 (zeroValue!2438 (v!2876 (underlying!359 thiss!992))))))))

(assert (= (and d!28773 res!52401) b!105225))

(assert (= (and b!105225 (not res!52402)) b!105226))

(declare-fun m!117435 () Bool)

(assert (=> d!28773 m!117435))

(declare-fun m!117437 () Bool)

(assert (=> d!28773 m!117437))

(declare-fun m!117439 () Bool)

(assert (=> b!105226 m!117439))

(assert (=> b!103797 d!28773))

(declare-fun b!105245 () Bool)

(declare-fun lt!53747 () SeekEntryResult!268)

(assert (=> b!105245 (and (bvsge (index!3221 lt!53747) #b00000000000000000000000000000000) (bvslt (index!3221 lt!53747) (size!2310 (_keys!4263 newMap!16))))))

(declare-fun res!52409 () Bool)

(assert (=> b!105245 (= res!52409 (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3221 lt!53747)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68507 () Bool)

(assert (=> b!105245 (=> res!52409 e!68507)))

(declare-fun e!68508 () SeekEntryResult!268)

(declare-fun b!105246 () Bool)

(assert (=> b!105246 (= e!68508 (Intermediate!268 false (toIndex!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (mask!6697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!105248 () Bool)

(assert (=> b!105248 (and (bvsge (index!3221 lt!53747) #b00000000000000000000000000000000) (bvslt (index!3221 lt!53747) (size!2310 (_keys!4263 newMap!16))))))

(assert (=> b!105248 (= e!68507 (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3221 lt!53747)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105249 () Bool)

(declare-fun e!68506 () Bool)

(declare-fun e!68510 () Bool)

(assert (=> b!105249 (= e!68506 e!68510)))

(declare-fun res!52410 () Bool)

(assert (=> b!105249 (= res!52410 (and ((_ is Intermediate!268) lt!53747) (not (undefined!1080 lt!53747)) (bvslt (x!13510 lt!53747) #b01111111111111111111111111111110) (bvsge (x!13510 lt!53747) #b00000000000000000000000000000000) (bvsge (x!13510 lt!53747) #b00000000000000000000000000000000)))))

(assert (=> b!105249 (=> (not res!52410) (not e!68510))))

(declare-fun e!68509 () SeekEntryResult!268)

(declare-fun b!105250 () Bool)

(assert (=> b!105250 (= e!68509 (Intermediate!268 true (toIndex!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (mask!6697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!105251 () Bool)

(assert (=> b!105251 (= e!68509 e!68508)))

(declare-fun lt!53746 () (_ BitVec 64))

(declare-fun c!18316 () Bool)

(assert (=> b!105251 (= c!18316 (or (= lt!53746 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)) (= (bvadd lt!53746 lt!53746) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105252 () Bool)

(assert (=> b!105252 (= e!68506 (bvsge (x!13510 lt!53747) #b01111111111111111111111111111110))))

(declare-fun b!105253 () Bool)

(assert (=> b!105253 (and (bvsge (index!3221 lt!53747) #b00000000000000000000000000000000) (bvslt (index!3221 lt!53747) (size!2310 (_keys!4263 newMap!16))))))

(declare-fun res!52411 () Bool)

(assert (=> b!105253 (= res!52411 (= (select (arr!2056 (_keys!4263 newMap!16)) (index!3221 lt!53747)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355)))))

(assert (=> b!105253 (=> res!52411 e!68507)))

(assert (=> b!105253 (= e!68510 e!68507)))

(declare-fun b!105247 () Bool)

(assert (=> b!105247 (= e!68508 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (mask!6697 newMap!16)) #b00000000000000000000000000000000 (mask!6697 newMap!16)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun d!28775 () Bool)

(assert (=> d!28775 e!68506))

(declare-fun c!18315 () Bool)

(assert (=> d!28775 (= c!18315 (and ((_ is Intermediate!268) lt!53747) (undefined!1080 lt!53747)))))

(assert (=> d!28775 (= lt!53747 e!68509)))

(declare-fun c!18314 () Bool)

(assert (=> d!28775 (= c!18314 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!28775 (= lt!53746 (select (arr!2056 (_keys!4263 newMap!16)) (toIndex!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (mask!6697 newMap!16))))))

(assert (=> d!28775 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28775 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (mask!6697 newMap!16)) (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)) lt!53747)))

(assert (= (and d!28775 c!18314) b!105250))

(assert (= (and d!28775 (not c!18314)) b!105251))

(assert (= (and b!105251 c!18316) b!105246))

(assert (= (and b!105251 (not c!18316)) b!105247))

(assert (= (and d!28775 c!18315) b!105252))

(assert (= (and d!28775 (not c!18315)) b!105249))

(assert (= (and b!105249 res!52410) b!105253))

(assert (= (and b!105253 (not res!52411)) b!105245))

(assert (= (and b!105245 (not res!52409)) b!105248))

(declare-fun m!117441 () Bool)

(assert (=> b!105248 m!117441))

(assert (=> b!105247 m!115085))

(declare-fun m!117443 () Bool)

(assert (=> b!105247 m!117443))

(assert (=> b!105247 m!117443))

(assert (=> b!105247 m!114187))

(declare-fun m!117445 () Bool)

(assert (=> b!105247 m!117445))

(assert (=> b!105245 m!117441))

(assert (=> d!28775 m!115085))

(declare-fun m!117447 () Bool)

(assert (=> d!28775 m!117447))

(assert (=> d!28775 m!114517))

(assert (=> b!105253 m!117441))

(assert (=> d!27949 d!28775))

(declare-fun d!28777 () Bool)

(declare-fun lt!53753 () (_ BitVec 32))

(declare-fun lt!53752 () (_ BitVec 32))

(assert (=> d!28777 (= lt!53753 (bvmul (bvxor lt!53752 (bvlshr lt!53752 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!28777 (= lt!53752 ((_ extract 31 0) (bvand (bvxor (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvlshr (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!28777 (and (bvsge (mask!6697 newMap!16) #b00000000000000000000000000000000) (let ((res!52412 (let ((h!2233 ((_ extract 31 0) (bvand (bvxor (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (bvlshr (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!13613 (bvmul (bvxor h!2233 (bvlshr h!2233 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!13613 (bvlshr x!13613 #b00000000000000000000000000001101)) (mask!6697 newMap!16)))))) (and (bvslt res!52412 (bvadd (mask!6697 newMap!16) #b00000000000000000000000000000001)) (bvsge res!52412 #b00000000000000000000000000000000))))))

(assert (=> d!28777 (= (toIndex!0 (select (arr!2056 (_keys!4263 (v!2876 (underlying!359 thiss!992)))) from!355) (mask!6697 newMap!16)) (bvand (bvxor lt!53753 (bvlshr lt!53753 #b00000000000000000000000000001101)) (mask!6697 newMap!16)))))

(assert (=> d!27949 d!28777))

(assert (=> d!27949 d!28049))

(declare-fun b!105255 () Bool)

(declare-fun e!68512 () Bool)

(assert (=> b!105255 (= e!68512 tp_is_empty!2673)))

(declare-fun mapIsEmpty!3917 () Bool)

(declare-fun mapRes!3917 () Bool)

(assert (=> mapIsEmpty!3917 mapRes!3917))

(declare-fun mapNonEmpty!3917 () Bool)

(declare-fun tp!9875 () Bool)

(declare-fun e!68511 () Bool)

(assert (=> mapNonEmpty!3917 (= mapRes!3917 (and tp!9875 e!68511))))

(declare-fun mapValue!3917 () ValueCell!993)

(declare-fun mapKey!3917 () (_ BitVec 32))

(declare-fun mapRest!3917 () (Array (_ BitVec 32) ValueCell!993))

(assert (=> mapNonEmpty!3917 (= mapRest!3916 (store mapRest!3917 mapKey!3917 mapValue!3917))))

(declare-fun b!105254 () Bool)

(assert (=> b!105254 (= e!68511 tp_is_empty!2673)))

(declare-fun condMapEmpty!3917 () Bool)

(declare-fun mapDefault!3917 () ValueCell!993)

(assert (=> mapNonEmpty!3916 (= condMapEmpty!3917 (= mapRest!3916 ((as const (Array (_ BitVec 32) ValueCell!993)) mapDefault!3917)))))

(assert (=> mapNonEmpty!3916 (= tp!9874 (and e!68512 mapRes!3917))))

(assert (= (and mapNonEmpty!3916 condMapEmpty!3917) mapIsEmpty!3917))

(assert (= (and mapNonEmpty!3916 (not condMapEmpty!3917)) mapNonEmpty!3917))

(assert (= (and mapNonEmpty!3917 ((_ is ValueCellFull!993) mapValue!3917)) b!105254))

(assert (= (and mapNonEmpty!3916 ((_ is ValueCellFull!993) mapDefault!3917)) b!105255))

(declare-fun m!117449 () Bool)

(assert (=> mapNonEmpty!3917 m!117449))

(declare-fun b!105257 () Bool)

(declare-fun e!68514 () Bool)

(assert (=> b!105257 (= e!68514 tp_is_empty!2673)))

(declare-fun mapIsEmpty!3918 () Bool)

(declare-fun mapRes!3918 () Bool)

(assert (=> mapIsEmpty!3918 mapRes!3918))

(declare-fun mapNonEmpty!3918 () Bool)

(declare-fun tp!9876 () Bool)

(declare-fun e!68513 () Bool)

(assert (=> mapNonEmpty!3918 (= mapRes!3918 (and tp!9876 e!68513))))

(declare-fun mapValue!3918 () ValueCell!993)

(declare-fun mapRest!3918 () (Array (_ BitVec 32) ValueCell!993))

(declare-fun mapKey!3918 () (_ BitVec 32))

(assert (=> mapNonEmpty!3918 (= mapRest!3915 (store mapRest!3918 mapKey!3918 mapValue!3918))))

(declare-fun b!105256 () Bool)

(assert (=> b!105256 (= e!68513 tp_is_empty!2673)))

(declare-fun condMapEmpty!3918 () Bool)

(declare-fun mapDefault!3918 () ValueCell!993)

(assert (=> mapNonEmpty!3915 (= condMapEmpty!3918 (= mapRest!3915 ((as const (Array (_ BitVec 32) ValueCell!993)) mapDefault!3918)))))

(assert (=> mapNonEmpty!3915 (= tp!9873 (and e!68514 mapRes!3918))))

(assert (= (and mapNonEmpty!3915 condMapEmpty!3918) mapIsEmpty!3918))

(assert (= (and mapNonEmpty!3915 (not condMapEmpty!3918)) mapNonEmpty!3918))

(assert (= (and mapNonEmpty!3918 ((_ is ValueCellFull!993) mapValue!3918)) b!105256))

(assert (= (and mapNonEmpty!3915 ((_ is ValueCellFull!993) mapDefault!3918)) b!105257))

(declare-fun m!117451 () Bool)

(assert (=> mapNonEmpty!3918 m!117451))

(declare-fun b_lambda!4703 () Bool)

(assert (= b_lambda!4689 (or (and b!103261 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103249 b_free!2515) b_lambda!4703)))

(declare-fun b_lambda!4705 () Bool)

(assert (= b_lambda!4695 (or (and b!103261 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103249 b_free!2515) b_lambda!4705)))

(declare-fun b_lambda!4707 () Bool)

(assert (= b_lambda!4681 (or (and b!103261 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103249 b_free!2515) b_lambda!4707)))

(declare-fun b_lambda!4709 () Bool)

(assert (= b_lambda!4691 (or (and b!103261 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103249 b_free!2515) b_lambda!4709)))

(declare-fun b_lambda!4711 () Bool)

(assert (= b_lambda!4699 (or (and b!103261 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103249 b_free!2515) b_lambda!4711)))

(declare-fun b_lambda!4713 () Bool)

(assert (= b_lambda!4673 (or (and b!103261 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103249 b_free!2515) b_lambda!4713)))

(declare-fun b_lambda!4715 () Bool)

(assert (= b_lambda!4675 (or (and b!103261 b_free!2513) (and b!103249 b_free!2515 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))))) b_lambda!4715)))

(declare-fun b_lambda!4717 () Bool)

(assert (= b_lambda!4701 (or (and b!103261 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103249 b_free!2515) b_lambda!4717)))

(declare-fun b_lambda!4719 () Bool)

(assert (= b_lambda!4679 (or (and b!103261 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103249 b_free!2515) b_lambda!4719)))

(declare-fun b_lambda!4721 () Bool)

(assert (= b_lambda!4697 (or (and b!103261 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103249 b_free!2515) b_lambda!4721)))

(declare-fun b_lambda!4723 () Bool)

(assert (= b_lambda!4677 (or (and b!103261 b_free!2513) (and b!103249 b_free!2515 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))))) b_lambda!4723)))

(declare-fun b_lambda!4725 () Bool)

(assert (= b_lambda!4683 (or (and b!103261 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103249 b_free!2515) b_lambda!4725)))

(declare-fun b_lambda!4727 () Bool)

(assert (= b_lambda!4687 (or (and b!103261 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103249 b_free!2515) b_lambda!4727)))

(declare-fun b_lambda!4729 () Bool)

(assert (= b_lambda!4685 (or (and b!103261 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!359 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103249 b_free!2515) b_lambda!4729)))

(check-sat (not b!104466) (not d!28757) (not d!28489) (not d!28589) (not b!104797) (not b!104513) (not b!104614) (not b!105103) (not b!105208) (not b_lambda!4717) (not d!28149) (not b!104582) (not b!105032) (not b!104972) (not b!104376) (not b!104888) (not d!28081) (not d!28021) (not b!104984) (not b!104385) (not b!104403) (not d!28129) (not b!104681) (not d!28381) (not bm!10974) (not b_lambda!4725) (not b!104952) (not b!104259) (not b!104685) (not d!28761) (not b!104488) (not b!104713) (not d!28455) (not b!104355) (not d!28089) (not bm!11042) (not b!104178) (not b!105075) (not d!28409) (not b!104577) (not b!104305) (not d!28267) (not b!104323) (not b!104389) (not b!104814) (not d!28391) (not d!28111) (not b!104807) (not b!104715) (not b!104670) (not b!105195) (not d!28599) (not b!104642) (not bm!10981) (not d!28135) (not bm!10970) (not b!104653) (not b_lambda!4663) (not b!105101) (not b!104127) (not d!28481) (not d!28557) (not d!28595) (not b!105144) (not b!104810) (not b!104903) (not b!104141) (not b!105136) (not b!104690) (not b!104530) (not bm!10973) (not d!28387) (not b!104899) (not b!104996) (not d!28379) (not b!105154) (not d!28259) (not d!28279) (not b!104710) (not b!104761) (not b!104357) (not b!104509) (not b!104971) (not b!104162) (not b!104657) (not b!104677) (not b!104252) (not b!104502) (not bm!11027) (not b!105196) (not d!28235) (not bm!10959) (not bm!10954) (not b!104256) (not d!28165) (not b!104268) (not b!104780) (not b!104454) (not d!28313) (not b!104758) (not b!104284) (not b!104778) (not bm!11011) (not b!104342) (not d!28619) (not d!28221) (not d!28115) (not d!28295) (not d!28721) (not b!104375) (not b!104131) b_and!6503 (not b!104337) (not b!105178) (not bm!11010) (not b!104896) (not d!28305) (not d!28519) (not b!105018) (not b!104229) (not b!104263) (not bm!10961) (not b!104543) (not d!28625) (not b!105201) (not b!105110) (not d!28281) (not b!104645) (not d!28285) (not b!104613) (not d!28547) (not b!105071) (not b!104251) (not d!28293) (not b!104156) (not b!104374) (not b!104269) (not b!104240) (not d!28343) (not b!104988) (not b_lambda!4671) (not bm!10972) (not b_lambda!4723) (not b!104370) (not d!28729) (not d!28031) (not b!104108) (not d!28019) (not b!104335) (not b!104656) (not b!104293) (not d!28675) (not d!28361) (not b!104258) (not b_lambda!4647) (not b!104246) (not b_lambda!4703) (not b!105031) (not b!105121) (not b!104705) (not bm!11016) (not b!104558) (not d!28431) (not d!28339) (not b!104973) (not d!28775) (not b!104278) (not b!104361) (not d!28529) (not d!28127) (not b!104844) (not b!104166) (not d!28769) (not b!104945) (not bm!11052) (not b!104615) (not d!28223) (not b!104366) (not b!104665) (not b!104549) (not b!104139) (not b!105070) (not d!28763) (not b!104207) (not b!104280) (not b!104498) (not d!28383) (not d!28415) (not b!104855) (not b!104557) (not d!28771) (not b!104784) (not b!105098) (not b!105091) (not b!105001) (not d!28617) (not d!28443) (not d!28499) (not b!104886) (not b!104349) (not b!104424) (not b_lambda!4707) (not d!28249) (not b!105062) (not b!104369) (not b!104429) (not d!28535) (not d!28323) (not d!28329) (not b!104619) (not bm!10955) (not bm!10977) (not d!28475) (not b!104815) (not b!104153) (not d!28227) (not bm!11034) (not b!104539) (not b!104359) (not b!104145) (not d!28315) (not d!28727) (not bm!10966) (not d!28459) (not d!28649) (not b!104314) (not d!28349) (not b!104487) (not b!105052) (not d!28265) (not b!104590) (not b!104261) (not d!28325) (not b!105025) (not b!105111) (not d!28755) (not mapNonEmpty!3917) (not b!104365) (not b!104514) (not d!28607) (not b!104644) (not bm!11002) (not b!104796) (not b!105072) (not b!105019) (not b_lambda!4693) (not b!105028) (not d!28623) (not b!104763) (not d!28147) (not b!104237) (not d!28059) (not b!104276) (not bm!10998) (not b!105129) (not d!28263) (not b!104650) (not d!28061) (not bm!10996) (not b!104316) (not b!104482) (not b!104879) (not b!104117) (not b!104400) (not b!104940) (not d!28013) (not bm!10978) (not b!104808) (not d!28277) (not d!28287) (not d!28207) (not b!104319) (not d!28427) (not b!104977) (not b!105185) (not b!104659) (not b!104720) (not b!104310) (not b!104637) (not b!104939) (not b!105003) (not b!104993) (not d!28639) (not b_lambda!4639) (not d!28185) (not bm!11020) (not d!28553) (not b!104523) (not b_lambda!4721) (not b!104546) (not b!104920) (not b!105181) (not d!28093) (not b!104978) (not b!104331) (not d!28591) (not b!105068) (not b!105058) (not b!104244) (not b!104223) (not bm!11013) (not b!105219) (not b!104270) (not b!104445) (not b!104635) (not d!28231) (not b!104302) (not d!28297) (not b!105122) (not d!28677) (not b!104328) (not b!104212) (not b!104569) (not d!28495) (not b!104368) (not b!104425) (not b!105215) (not b!104496) (not b!104620) (not b!104533) (not b!104950) (not bm!11071) (not b!105226) (not b!105127) (not b!104537) (not b!104565) (not d!28169) (not b!104872) (not d!28097) (not b!104200) (not b!105046) (not b_lambda!4651) (not d!28467) (not b!105022) (not bm!10988) (not b_lambda!4729) (not d!28699) (not b!104422) (not d!28159) (not b!104679) (not b!104133) (not d!28103) (not b!104386) (not bm!11009) (not b!104396) (not d!28151) (not d!28509) (not b!104474) (not bm!10958) (not d!28253) (not b!104749) (not b!104944) (not b!104382) (not d!28371) (not b!104641) (not b!104552) (not d!28363) (not b!104116) (not d!28299) (not b!104344) (not b!104626) (not b!104743) (not d!28243) (not d!28145) (not d!28655) (not b_lambda!4711) (not b!104916) (not b!104803) (not d!28289) (not b!104574) (not b_lambda!4709) (not b!104446) (not b!104215) (not b!105090) (not b!104598) (not b!104776) (not b!104935) (not d!28631) (not b!104283) (not d!28261) (not b!104439) (not b!104245) (not d!28399) (not b!104222) (not d!28525) (not b!104553) (not b!104481) (not d!28311) (not d!28225) (not b!104787) (not b!104521) (not b!105211) (not b!105131) (not d!28351) (not b!104287) (not d!28585) (not b_next!2513) (not d!28365) (not b!104473) (not d!28309) (not d!28113) (not b!104593) (not d!28193) (not b!104160) (not b!104190) (not b!104409) (not b!104432) (not b!104163) (not b!104224) (not d!28131) (not d!28601) (not b!104995) (not b!104193) (not b!105187) (not b!104894) (not b!104447) (not bm!11019) (not b!104340) (not bm!10992) (not d!28197) (not d!28441) (not b!104632) (not b!105009) (not b!104358) (not d!28527) (not b!105016) (not b!104393) (not b!104889) (not b!104460) (not b!104606) (not b!104384) (not b!104217) (not b!104662) (not b!104308) (not b!104958) (not b!104964) (not d!28773) (not b!104914) (not b!104966) (not d!28099) (not d!28709) (not b!104697) (not d!28109) (not d!28739) (not d!28245) (not b!104275) (not b!104671) (not b!105130) (not bm!11046) (not b!104664) (not b!104508) (not b!104277) (not b!104732) (not d!28303) (not b!104495) (not b!104220) (not b!104881) (not b!105023) (not b!104330) (not b!104937) (not b!105037) (not b!104998) (not b!104412) (not bm!11059) (not b!105175) (not d!28737) (not d!28247) (not b!104410) (not b!105054) (not b!104321) (not d!28603) (not b!104135) (not b!104733) (not d!28539) (not bm!11023) (not b!104969) (not b!104420) (not b!105124) (not b!104264) (not b!104841) (not b!104242) (not d!28695) (not b!105192) (not b!104876) (not b!104113) (not b!104291) (not bm!10999) (not d!28453) (not b!104313) (not b!104470) (not d!28545) (not d!28133) (not d!28027) (not b!104390) (not b!104228) (not b!105105) (not d!28251) (not b!104695) (not b!104655) (not d!28337) (not d!28445) (not b!104253) (not d!28483) (not d!28163) (not b!105036) (not b!104752) (not d!28153) (not b!104688) (not b!104455) (not d!28057) (not d!28609) (not b!104301) (not d!28741) (not b!104989) (not d!28317) (not d!28043) (not d!28085) (not bm!11036) (not b!104255) (not d!28217) (not d!28551) (not b!104427) tp_is_empty!2673 (not d!28645) (not b!105085) (not d!28301) (not b!104768) (not d!28469) (not b_lambda!4665) (not d!28275) (not d!28105) (not d!28587) (not b!105044) (not b!104578) (not bm!11035) (not d!28161) b_and!6501 (not b!104182) (not d!28167) (not b!104416) (not b!104707) (not b!104437) (not b!105079) (not b!104771) (not b!104388) (not b!104505) (not b!104417) (not d!28307) (not b!104418) (not b!104943) (not b!104334) (not b!104476) (not b!104378) (not b!104925) (not b_lambda!4715) (not d!28435) (not b_lambda!4719) (not b!105120) (not b!105030) (not b!105146) (not b!104129) (not d!28651) (not b!104499) (not d!28669) (not d!28291) (not d!28433) (not b!104413) (not b!104170) (not b!104868) (not d!28393) (not d!28491) (not b!104174) (not bm!10947) (not bm!11006) (not d!28143) (not b!104448) (not d!28213) (not bm!10948) (not b!104986) (not b!104866) (not b!104483) (not d!28233) (not b!104694) (not b!104898) (not b!104442) (not b!105060) (not b!104907) (not b!104541) (not b!104754) (not b!104146) (not d!28025) (not b!104296) (not b!104900) (not b!105066) (not bm!10949) (not d!28569) (not d!28517) (not b!104463) (not b!105050) (not b_next!2515) (not d!28745) (not d!28239) (not d!28255) (not b!104959) (not bm!10967) (not b!104525) (not b!104648) (not b!104343) (not b!104110) (not b!104542) (not b!104348) (not b!104157) (not bm!10962) (not b!104870) (not b!104158) (not d!28521) (not b!104210) (not d!28593) (not b!104431) (not b_lambda!4649) (not b_lambda!4713) (not b!104856) (not b!104853) (not b!104608) (not bm!11039) (not d!28439) (not bm!11025) (not b!104723) (not b!104885) (not b!104571) (not b!104243) (not b!104544) (not b!104451) (not b!104294) (not b!104356) (not bm!11008) (not d!28621) (not d!28095) (not d!28345) (not bm!10985) (not b!104858) (not b!104111) (not b!104802) (not b!104266) (not b!104214) (not d!28637) (not b!104202) (not b!104136) (not mapNonEmpty!3918) (not b!104611) (not b!104666) (not b!104479) (not b!104625) (not b!104184) (not bm!11043) (not bm!11003) (not b!104848) (not bm!11012) (not b!104991) (not b!105220) (not d!28353) (not d!28733) (not d!28023) (not b!104536) (not d!28653) (not b!104267) (not d!28139) (not b!104813) (not b!104281) (not b!104106) (not b!104735) (not b!104405) (not b!105153) (not b!104918) (not b!105074) (not b!105114) (not d!28513) (not b_lambda!4667) (not d!28461) (not b!104568) (not b!104438) (not b!105135) (not d!28209) (not b!104651) (not bm!11028) (not bm!10993) (not d!28155) (not d!28229) (not bm!11041) (not b!104678) (not d!28735) (not b!105189) (not b!105149) (not b!105247) (not bm!11056) (not d!28641) (not d!28705) (not b!105118) (not d!28635) (not b!105086) (not b!105200) (not b!105077) (not bm!11068) (not b!104519) (not d!28449) (not b!104248) (not bm!11055) (not bm!10989) (not b!104712) (not b!104195) (not b!104698) (not d!28485) (not b!104930) (not d!28543) (not d!28493) (not b!104583) (not d!28697) (not b!104941) (not d!28029) (not d!28663) (not b!104234) (not b_lambda!4727) (not b!104789) (not b!104863) (not d!28241) (not b!104183) (not b!104719) (not d!28033) (not d!28183) (not b!104120) (not bm!11033) (not b!104717) (not d!28691) (not d!28501) (not b!104440) (not bm!11049) (not b!104861) (not b!104526) (not b!104299) (not b!104736) (not b!104745) (not b!104767) (not b!104604) (not d!28065) (not d!28403) (not b!104379) (not b!104596) (not b!104793) (not b!104326) (not b!104457) (not b!104186) (not bm!11018) (not b!104173) (not d!28087) (not b!104199) (not b!105056) (not b!104433) (not b!104953) (not b!104738) (not bm!11065) (not d!28503) (not b!104493) (not b!104380) (not d!28463) (not d!28377) (not d!28703) (not b!105082) (not b!104954) (not d!28679) (not b!105142) (not d!28627) (not bm!11062) (not d!28069) (not b!104180) (not b!105213) (not b!105214) (not bm!10965) (not bm!10960) (not b!105148) (not b!104436) (not d!28347) (not d!28765) (not d!28269) (not b!104928) (not b!105194) (not b!105206) (not b!104272) (not b!104794) (not b!104551) (not b!104203) (not b!104702) (not d!28075) (not b!105004) (not b!105064) (not b!104115) (not b!105084) (not d!28687) (not b!104770) (not bm!10982) (not d!28385) (not b!104947) (not b!105010) (not b_lambda!4705) (not d!28195) (not d!28091) (not b!104850) (not b!104364) (not b!104176) (not d!28747) (not b!104911) (not d!28157) (not d!28141) (not b!104428) (not d!28693) (not b!105076) (not d!28237) (not b!105108) (not d!28447) (not b!104923) (not b_lambda!4669) (not b!104377) (not b!104114) (not b!104628) (not bm!11026) (not b!105005) (not b!104312) (not bm!10952))
(check-sat b_and!6501 b_and!6503 (not b_next!2513) (not b_next!2515))
