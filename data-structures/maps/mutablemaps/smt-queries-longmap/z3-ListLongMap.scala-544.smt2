; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!14272 () Bool)

(assert start!14272)

(declare-fun b!132488 () Bool)

(declare-fun b_free!2921 () Bool)

(declare-fun b_next!2921 () Bool)

(assert (=> b!132488 (= b_free!2921 (not b_next!2921))))

(declare-fun tp!11205 () Bool)

(declare-fun b_and!8225 () Bool)

(assert (=> b!132488 (= tp!11205 b_and!8225)))

(declare-fun b!132481 () Bool)

(declare-fun b_free!2923 () Bool)

(declare-fun b_next!2923 () Bool)

(assert (=> b!132481 (= b_free!2923 (not b_next!2923))))

(declare-fun tp!11208 () Bool)

(declare-fun b_and!8227 () Bool)

(assert (=> b!132481 (= tp!11208 b_and!8227)))

(declare-fun b!132478 () Bool)

(declare-fun e!86381 () Bool)

(declare-fun from!355 () (_ BitVec 32))

(declare-datatypes ((V!3483 0))(
  ( (V!3484 (val!1483 Int)) )
))
(declare-datatypes ((array!4780 0))(
  ( (array!4781 (arr!2260 (Array (_ BitVec 32) (_ BitVec 64))) (size!2529 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!1095 0))(
  ( (ValueCellFull!1095 (v!3196 V!3483)) (EmptyCell!1095) )
))
(declare-datatypes ((array!4782 0))(
  ( (array!4783 (arr!2261 (Array (_ BitVec 32) ValueCell!1095)) (size!2530 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!1098 0))(
  ( (LongMapFixedSize!1099 (defaultEntry!2865 Int) (mask!7165 (_ BitVec 32)) (extraKeys!2630 (_ BitVec 32)) (zeroValue!2720 V!3483) (minValue!2720 V!3483) (_size!598 (_ BitVec 32)) (_keys!4614 array!4780) (_values!2848 array!4782) (_vacant!598 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!886 0))(
  ( (Cell!887 (v!3197 LongMapFixedSize!1098)) )
))
(declare-datatypes ((LongMap!886 0))(
  ( (LongMap!887 (underlying!454 Cell!886)) )
))
(declare-fun thiss!992 () LongMap!886)

(assert (=> b!132478 (= e!86381 (or (bvslt (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!132479 () Bool)

(declare-fun e!86394 () Bool)

(declare-fun tp_is_empty!2877 () Bool)

(assert (=> b!132479 (= e!86394 tp_is_empty!2877)))

(declare-fun mapNonEmpty!4643 () Bool)

(declare-fun mapRes!4643 () Bool)

(declare-fun tp!11206 () Bool)

(declare-fun e!86383 () Bool)

(assert (=> mapNonEmpty!4643 (= mapRes!4643 (and tp!11206 e!86383))))

(declare-fun mapKey!4644 () (_ BitVec 32))

(declare-fun mapValue!4644 () ValueCell!1095)

(declare-fun newMap!16 () LongMapFixedSize!1098)

(declare-fun mapRest!4643 () (Array (_ BitVec 32) ValueCell!1095))

(assert (=> mapNonEmpty!4643 (= (arr!2261 (_values!2848 newMap!16)) (store mapRest!4643 mapKey!4644 mapValue!4644))))

(declare-fun b!132480 () Bool)

(declare-fun e!86390 () Bool)

(declare-fun mapRes!4644 () Bool)

(assert (=> b!132480 (= e!86390 (and e!86394 mapRes!4644))))

(declare-fun condMapEmpty!4643 () Bool)

(declare-fun mapDefault!4644 () ValueCell!1095)

(assert (=> b!132480 (= condMapEmpty!4643 (= (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4644)))))

(declare-fun e!86384 () Bool)

(declare-fun e!86392 () Bool)

(declare-fun array_inv!1391 (array!4780) Bool)

(declare-fun array_inv!1392 (array!4782) Bool)

(assert (=> b!132481 (= e!86384 (and tp!11208 tp_is_empty!2877 (array_inv!1391 (_keys!4614 newMap!16)) (array_inv!1392 (_values!2848 newMap!16)) e!86392))))

(declare-fun b!132482 () Bool)

(declare-fun e!86386 () Bool)

(declare-fun e!86388 () Bool)

(assert (=> b!132482 (= e!86386 e!86388)))

(declare-fun b!132483 () Bool)

(declare-fun res!63809 () Bool)

(declare-fun e!86393 () Bool)

(assert (=> b!132483 (=> (not res!63809) (not e!86393))))

(declare-fun valid!521 (LongMapFixedSize!1098) Bool)

(assert (=> b!132483 (= res!63809 (valid!521 newMap!16))))

(declare-fun b!132484 () Bool)

(declare-fun e!86385 () Bool)

(assert (=> b!132484 (= e!86385 tp_is_empty!2877)))

(declare-fun b!132485 () Bool)

(declare-fun res!63810 () Bool)

(assert (=> b!132485 (=> (not res!63810) (not e!86381))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!132485 (= res!63810 (validMask!0 (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun b!132486 () Bool)

(declare-fun e!86389 () Bool)

(assert (=> b!132486 (= e!86388 e!86389)))

(declare-fun b!132487 () Bool)

(declare-fun res!63812 () Bool)

(assert (=> b!132487 (=> (not res!63812) (not e!86381))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4780 (_ BitVec 32)) Bool)

(assert (=> b!132487 (= res!63812 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(assert (=> b!132488 (= e!86389 (and tp!11205 tp_is_empty!2877 (array_inv!1391 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (array_inv!1392 (_values!2848 (v!3197 (underlying!454 thiss!992)))) e!86390))))

(declare-fun b!132489 () Bool)

(declare-fun e!86382 () Bool)

(assert (=> b!132489 (= e!86382 tp_is_empty!2877)))

(declare-fun b!132490 () Bool)

(declare-fun e!86387 () Bool)

(assert (=> b!132490 (= e!86393 e!86387)))

(declare-fun res!63811 () Bool)

(assert (=> b!132490 (=> (not res!63811) (not e!86387))))

(declare-datatypes ((tuple2!2608 0))(
  ( (tuple2!2609 (_1!1314 (_ BitVec 64)) (_2!1314 V!3483)) )
))
(declare-datatypes ((List!1735 0))(
  ( (Nil!1732) (Cons!1731 (h!2336 tuple2!2608) (t!6198 List!1735)) )
))
(declare-datatypes ((ListLongMap!1707 0))(
  ( (ListLongMap!1708 (toList!869 List!1735)) )
))
(declare-fun lt!69161 () ListLongMap!1707)

(declare-fun lt!69160 () ListLongMap!1707)

(assert (=> b!132490 (= res!63811 (and (= lt!69160 lt!69161) (not (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun map!1405 (LongMapFixedSize!1098) ListLongMap!1707)

(assert (=> b!132490 (= lt!69161 (map!1405 newMap!16))))

(declare-fun getCurrentListMap!540 (array!4780 array!4782 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 32) Int) ListLongMap!1707)

(assert (=> b!132490 (= lt!69160 (getCurrentListMap!540 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (_values!2848 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992))) (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) (minValue!2720 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun mapIsEmpty!4643 () Bool)

(assert (=> mapIsEmpty!4643 mapRes!4643))

(declare-fun b!132491 () Bool)

(declare-fun res!63808 () Bool)

(assert (=> b!132491 (=> (not res!63808) (not e!86381))))

(declare-datatypes ((List!1736 0))(
  ( (Nil!1733) (Cons!1732 (h!2337 (_ BitVec 64)) (t!6199 List!1736)) )
))
(declare-fun arrayNoDuplicates!0 (array!4780 (_ BitVec 32) List!1736) Bool)

(assert (=> b!132491 (= res!63808 (arrayNoDuplicates!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000000 Nil!1733))))

(declare-fun b!132492 () Bool)

(assert (=> b!132492 (= e!86392 (and e!86385 mapRes!4643))))

(declare-fun condMapEmpty!4644 () Bool)

(declare-fun mapDefault!4643 () ValueCell!1095)

(assert (=> b!132492 (= condMapEmpty!4644 (= (arr!2261 (_values!2848 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4643)))))

(declare-fun b!132493 () Bool)

(declare-fun res!63815 () Bool)

(assert (=> b!132493 (=> (not res!63815) (not e!86381))))

(assert (=> b!132493 (= res!63815 (and (= (size!2530 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!7165 (v!3197 (underlying!454 thiss!992))))) (= (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (size!2530 (_values!2848 (v!3197 (underlying!454 thiss!992))))) (bvsge (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000000) (bvsge (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000011)))))

(declare-fun b!132494 () Bool)

(assert (=> b!132494 (= e!86383 tp_is_empty!2877)))

(declare-fun b!132495 () Bool)

(declare-fun res!63816 () Bool)

(assert (=> b!132495 (=> (not res!63816) (not e!86393))))

(assert (=> b!132495 (= res!63816 (bvsge (bvadd #b00000000000000000000000000000001 (mask!7165 newMap!16)) (_size!598 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun res!63814 () Bool)

(assert (=> start!14272 (=> (not res!63814) (not e!86393))))

(declare-fun valid!522 (LongMap!886) Bool)

(assert (=> start!14272 (= res!63814 (valid!522 thiss!992))))

(assert (=> start!14272 e!86393))

(assert (=> start!14272 e!86386))

(assert (=> start!14272 true))

(assert (=> start!14272 e!86384))

(declare-fun mapIsEmpty!4644 () Bool)

(assert (=> mapIsEmpty!4644 mapRes!4644))

(declare-fun mapNonEmpty!4644 () Bool)

(declare-fun tp!11207 () Bool)

(assert (=> mapNonEmpty!4644 (= mapRes!4644 (and tp!11207 e!86382))))

(declare-fun mapValue!4643 () ValueCell!1095)

(declare-fun mapRest!4644 () (Array (_ BitVec 32) ValueCell!1095))

(declare-fun mapKey!4643 () (_ BitVec 32))

(assert (=> mapNonEmpty!4644 (= (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (store mapRest!4644 mapKey!4643 mapValue!4643))))

(declare-fun b!132496 () Bool)

(assert (=> b!132496 (= e!86387 e!86381)))

(declare-fun res!63817 () Bool)

(assert (=> b!132496 (=> (not res!63817) (not e!86381))))

(declare-fun contains!896 (ListLongMap!1707 (_ BitVec 64)) Bool)

(assert (=> b!132496 (= res!63817 (contains!896 lt!69161 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-datatypes ((tuple2!2610 0))(
  ( (tuple2!2611 (_1!1315 Bool) (_2!1315 LongMapFixedSize!1098)) )
))
(declare-fun lt!69159 () tuple2!2610)

(declare-fun update!192 (LongMapFixedSize!1098 (_ BitVec 64) V!3483) tuple2!2610)

(declare-fun get!1488 (ValueCell!1095 V!3483) V!3483)

(declare-fun dynLambda!425 (Int (_ BitVec 64)) V!3483)

(assert (=> b!132496 (= lt!69159 (update!192 newMap!16 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!132497 () Bool)

(declare-fun res!63813 () Bool)

(assert (=> b!132497 (=> (not res!63813) (not e!86393))))

(assert (=> b!132497 (= res!63813 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and start!14272 res!63814) b!132497))

(assert (= (and b!132497 res!63813) b!132483))

(assert (= (and b!132483 res!63809) b!132495))

(assert (= (and b!132495 res!63816) b!132490))

(assert (= (and b!132490 res!63811) b!132496))

(assert (= (and b!132496 res!63817) b!132485))

(assert (= (and b!132485 res!63810) b!132493))

(assert (= (and b!132493 res!63815) b!132487))

(assert (= (and b!132487 res!63812) b!132491))

(assert (= (and b!132491 res!63808) b!132478))

(assert (= (and b!132480 condMapEmpty!4643) mapIsEmpty!4644))

(assert (= (and b!132480 (not condMapEmpty!4643)) mapNonEmpty!4644))

(get-info :version)

(assert (= (and mapNonEmpty!4644 ((_ is ValueCellFull!1095) mapValue!4643)) b!132489))

(assert (= (and b!132480 ((_ is ValueCellFull!1095) mapDefault!4644)) b!132479))

(assert (= b!132488 b!132480))

(assert (= b!132486 b!132488))

(assert (= b!132482 b!132486))

(assert (= start!14272 b!132482))

(assert (= (and b!132492 condMapEmpty!4644) mapIsEmpty!4643))

(assert (= (and b!132492 (not condMapEmpty!4644)) mapNonEmpty!4643))

(assert (= (and mapNonEmpty!4643 ((_ is ValueCellFull!1095) mapValue!4644)) b!132494))

(assert (= (and b!132492 ((_ is ValueCellFull!1095) mapDefault!4643)) b!132484))

(assert (= b!132481 b!132492))

(assert (= start!14272 b!132481))

(declare-fun b_lambda!5927 () Bool)

(assert (=> (not b_lambda!5927) (not b!132496)))

(declare-fun t!6195 () Bool)

(declare-fun tb!2425 () Bool)

(assert (=> (and b!132488 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992)))) t!6195) tb!2425))

(declare-fun result!3995 () Bool)

(assert (=> tb!2425 (= result!3995 tp_is_empty!2877)))

(assert (=> b!132496 t!6195))

(declare-fun b_and!8229 () Bool)

(assert (= b_and!8225 (and (=> t!6195 result!3995) b_and!8229)))

(declare-fun t!6197 () Bool)

(declare-fun tb!2427 () Bool)

(assert (=> (and b!132481 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992)))) t!6197) tb!2427))

(declare-fun result!3999 () Bool)

(assert (= result!3999 result!3995))

(assert (=> b!132496 t!6197))

(declare-fun b_and!8231 () Bool)

(assert (= b_and!8227 (and (=> t!6197 result!3999) b_and!8231)))

(declare-fun m!156277 () Bool)

(assert (=> mapNonEmpty!4644 m!156277))

(declare-fun m!156279 () Bool)

(assert (=> start!14272 m!156279))

(declare-fun m!156281 () Bool)

(assert (=> b!132496 m!156281))

(declare-fun m!156283 () Bool)

(assert (=> b!132496 m!156283))

(declare-fun m!156285 () Bool)

(assert (=> b!132496 m!156285))

(declare-fun m!156287 () Bool)

(assert (=> b!132496 m!156287))

(declare-fun m!156289 () Bool)

(assert (=> b!132496 m!156289))

(assert (=> b!132496 m!156287))

(assert (=> b!132496 m!156283))

(assert (=> b!132496 m!156287))

(assert (=> b!132496 m!156285))

(declare-fun m!156291 () Bool)

(assert (=> b!132496 m!156291))

(assert (=> b!132496 m!156281))

(declare-fun m!156293 () Bool)

(assert (=> mapNonEmpty!4643 m!156293))

(declare-fun m!156295 () Bool)

(assert (=> b!132485 m!156295))

(declare-fun m!156297 () Bool)

(assert (=> b!132487 m!156297))

(declare-fun m!156299 () Bool)

(assert (=> b!132481 m!156299))

(declare-fun m!156301 () Bool)

(assert (=> b!132481 m!156301))

(declare-fun m!156303 () Bool)

(assert (=> b!132491 m!156303))

(declare-fun m!156305 () Bool)

(assert (=> b!132488 m!156305))

(declare-fun m!156307 () Bool)

(assert (=> b!132488 m!156307))

(assert (=> b!132490 m!156287))

(declare-fun m!156309 () Bool)

(assert (=> b!132490 m!156309))

(declare-fun m!156311 () Bool)

(assert (=> b!132490 m!156311))

(declare-fun m!156313 () Bool)

(assert (=> b!132483 m!156313))

(check-sat (not mapNonEmpty!4644) (not b!132487) (not b_lambda!5927) (not b!132488) (not b!132491) (not mapNonEmpty!4643) (not b!132483) b_and!8229 tp_is_empty!2877 (not b!132496) (not b!132485) (not b!132490) b_and!8231 (not b_next!2923) (not b_next!2921) (not start!14272) (not b!132481))
(check-sat b_and!8229 b_and!8231 (not b_next!2921) (not b_next!2923))
(get-model)

(declare-fun b_lambda!5931 () Bool)

(assert (= b_lambda!5927 (or (and b!132488 b_free!2921) (and b!132481 b_free!2923 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))))) b_lambda!5931)))

(check-sat (not mapNonEmpty!4644) (not b!132487) (not b!132488) (not b!132491) (not mapNonEmpty!4643) (not b!132483) b_and!8229 tp_is_empty!2877 (not b!132485) (not b!132490) b_and!8231 (not b_lambda!5931) (not b!132496) (not b_next!2923) (not b_next!2921) (not start!14272) (not b!132481))
(check-sat b_and!8229 b_and!8231 (not b_next!2921) (not b_next!2923))
(get-model)

(declare-fun d!40267 () Bool)

(assert (=> d!40267 (= (validMask!0 (mask!7165 (v!3197 (underlying!454 thiss!992)))) (and (or (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000001111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000011111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000001111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000011111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000001111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000011111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000111111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000001111111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000011111111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000111111111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000001111111111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000011111111111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000111111111111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000001111111111111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000011111111111111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000111111111111111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000001111111111111111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000011111111111111111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000111111111111111111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000001111111111111111111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000011111111111111111111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000111111111111111111111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00001111111111111111111111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00011111111111111111111111111111) (= (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!132485 d!40267))

(declare-fun d!40269 () Bool)

(assert (=> d!40269 (= (valid!522 thiss!992) (valid!521 (v!3197 (underlying!454 thiss!992))))))

(declare-fun bs!5486 () Bool)

(assert (= bs!5486 d!40269))

(declare-fun m!156353 () Bool)

(assert (=> bs!5486 m!156353))

(assert (=> start!14272 d!40269))

(declare-fun d!40271 () Bool)

(assert (=> d!40271 (= (map!1405 newMap!16) (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun bs!5487 () Bool)

(assert (= bs!5487 d!40271))

(declare-fun m!156355 () Bool)

(assert (=> bs!5487 m!156355))

(assert (=> b!132490 d!40271))

(declare-fun bm!14561 () Bool)

(declare-fun call!14570 () ListLongMap!1707)

(declare-fun call!14566 () ListLongMap!1707)

(assert (=> bm!14561 (= call!14570 call!14566)))

(declare-fun b!132604 () Bool)

(declare-fun e!86476 () Bool)

(declare-fun lt!69221 () ListLongMap!1707)

(declare-fun apply!116 (ListLongMap!1707 (_ BitVec 64)) V!3483)

(assert (=> b!132604 (= e!86476 (= (apply!116 lt!69221 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun bm!14562 () Bool)

(declare-fun call!14565 () Bool)

(assert (=> bm!14562 (= call!14565 (contains!896 lt!69221 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132605 () Bool)

(declare-fun e!86479 () Bool)

(declare-fun call!14567 () Bool)

(assert (=> b!132605 (= e!86479 (not call!14567))))

(declare-fun b!132606 () Bool)

(declare-datatypes ((Unit!4150 0))(
  ( (Unit!4151) )
))
(declare-fun e!86478 () Unit!4150)

(declare-fun Unit!4152 () Unit!4150)

(assert (=> b!132606 (= e!86478 Unit!4152)))

(declare-fun d!40273 () Bool)

(declare-fun e!86475 () Bool)

(assert (=> d!40273 e!86475))

(declare-fun res!63872 () Bool)

(assert (=> d!40273 (=> (not res!63872) (not e!86475))))

(assert (=> d!40273 (= res!63872 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun lt!69215 () ListLongMap!1707)

(assert (=> d!40273 (= lt!69221 lt!69215)))

(declare-fun lt!69216 () Unit!4150)

(assert (=> d!40273 (= lt!69216 e!86478)))

(declare-fun c!24500 () Bool)

(declare-fun e!86469 () Bool)

(assert (=> d!40273 (= c!24500 e!86469)))

(declare-fun res!63871 () Bool)

(assert (=> d!40273 (=> (not res!63871) (not e!86469))))

(assert (=> d!40273 (= res!63871 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun e!86467 () ListLongMap!1707)

(assert (=> d!40273 (= lt!69215 e!86467)))

(declare-fun c!24499 () Bool)

(assert (=> d!40273 (= c!24499 (and (not (= (bvand (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40273 (validMask!0 (mask!7165 (v!3197 (underlying!454 thiss!992))))))

(assert (=> d!40273 (= (getCurrentListMap!540 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (_values!2848 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992))) (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) (minValue!2720 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992)))) lt!69221)))

(declare-fun call!14569 () ListLongMap!1707)

(declare-fun bm!14563 () Bool)

(declare-fun c!24502 () Bool)

(declare-fun call!14564 () ListLongMap!1707)

(declare-fun call!14568 () ListLongMap!1707)

(declare-fun +!170 (ListLongMap!1707 tuple2!2608) ListLongMap!1707)

(assert (=> bm!14563 (= call!14566 (+!170 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)) (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!132607 () Bool)

(assert (=> b!132607 (= e!86475 e!86479)))

(declare-fun c!24501 () Bool)

(assert (=> b!132607 (= c!24501 (not (= (bvand (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!132608 () Bool)

(declare-fun e!86473 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!132608 (= e!86473 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!132609 () Bool)

(assert (=> b!132609 (= e!86469 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!132610 () Bool)

(declare-fun e!86474 () ListLongMap!1707)

(assert (=> b!132610 (= e!86474 call!14569)))

(declare-fun b!132611 () Bool)

(declare-fun res!63866 () Bool)

(assert (=> b!132611 (=> (not res!63866) (not e!86475))))

(declare-fun e!86472 () Bool)

(assert (=> b!132611 (= res!63866 e!86472)))

(declare-fun c!24503 () Bool)

(assert (=> b!132611 (= c!24503 (not (= (bvand (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!132612 () Bool)

(declare-fun e!86470 () Bool)

(assert (=> b!132612 (= e!86472 e!86470)))

(declare-fun res!63869 () Bool)

(assert (=> b!132612 (= res!63869 call!14565)))

(assert (=> b!132612 (=> (not res!63869) (not e!86470))))

(declare-fun b!132613 () Bool)

(declare-fun e!86471 () Bool)

(declare-fun e!86468 () Bool)

(assert (=> b!132613 (= e!86471 e!86468)))

(declare-fun res!63867 () Bool)

(assert (=> b!132613 (=> (not res!63867) (not e!86468))))

(assert (=> b!132613 (= res!63867 (contains!896 lt!69221 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!132613 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!132614 () Bool)

(declare-fun c!24504 () Bool)

(assert (=> b!132614 (= c!24504 (and (not (= (bvand (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!86477 () ListLongMap!1707)

(assert (=> b!132614 (= e!86477 e!86474)))

(declare-fun b!132615 () Bool)

(assert (=> b!132615 (= e!86472 (not call!14565))))

(declare-fun b!132616 () Bool)

(assert (=> b!132616 (= e!86467 (+!170 call!14566 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!132617 () Bool)

(assert (=> b!132617 (= e!86479 e!86476)))

(declare-fun res!63870 () Bool)

(assert (=> b!132617 (= res!63870 call!14567)))

(assert (=> b!132617 (=> (not res!63870) (not e!86476))))

(declare-fun b!132618 () Bool)

(declare-fun lt!69222 () Unit!4150)

(assert (=> b!132618 (= e!86478 lt!69222)))

(declare-fun lt!69217 () ListLongMap!1707)

(declare-fun getCurrentListMapNoExtraKeys!137 (array!4780 array!4782 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 32) Int) ListLongMap!1707)

(assert (=> b!132618 (= lt!69217 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (_values!2848 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992))) (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) (minValue!2720 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun lt!69220 () (_ BitVec 64))

(assert (=> b!132618 (= lt!69220 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69227 () (_ BitVec 64))

(assert (=> b!132618 (= lt!69227 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!69231 () Unit!4150)

(declare-fun addStillContains!92 (ListLongMap!1707 (_ BitVec 64) V!3483 (_ BitVec 64)) Unit!4150)

(assert (=> b!132618 (= lt!69231 (addStillContains!92 lt!69217 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) lt!69227))))

(assert (=> b!132618 (contains!896 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69227)))

(declare-fun lt!69235 () Unit!4150)

(assert (=> b!132618 (= lt!69235 lt!69231)))

(declare-fun lt!69230 () ListLongMap!1707)

(assert (=> b!132618 (= lt!69230 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (_values!2848 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992))) (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) (minValue!2720 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun lt!69232 () (_ BitVec 64))

(assert (=> b!132618 (= lt!69232 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69218 () (_ BitVec 64))

(assert (=> b!132618 (= lt!69218 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!69233 () Unit!4150)

(declare-fun addApplyDifferent!92 (ListLongMap!1707 (_ BitVec 64) V!3483 (_ BitVec 64)) Unit!4150)

(assert (=> b!132618 (= lt!69233 (addApplyDifferent!92 lt!69230 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))) lt!69218))))

(assert (=> b!132618 (= (apply!116 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69218) (apply!116 lt!69230 lt!69218))))

(declare-fun lt!69224 () Unit!4150)

(assert (=> b!132618 (= lt!69224 lt!69233)))

(declare-fun lt!69225 () ListLongMap!1707)

(assert (=> b!132618 (= lt!69225 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (_values!2848 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992))) (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) (minValue!2720 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun lt!69236 () (_ BitVec 64))

(assert (=> b!132618 (= lt!69236 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69223 () (_ BitVec 64))

(assert (=> b!132618 (= lt!69223 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!69234 () Unit!4150)

(assert (=> b!132618 (= lt!69234 (addApplyDifferent!92 lt!69225 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) lt!69223))))

(assert (=> b!132618 (= (apply!116 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69223) (apply!116 lt!69225 lt!69223))))

(declare-fun lt!69219 () Unit!4150)

(assert (=> b!132618 (= lt!69219 lt!69234)))

(declare-fun lt!69229 () ListLongMap!1707)

(assert (=> b!132618 (= lt!69229 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (_values!2848 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992))) (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) (minValue!2720 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun lt!69226 () (_ BitVec 64))

(assert (=> b!132618 (= lt!69226 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69228 () (_ BitVec 64))

(assert (=> b!132618 (= lt!69228 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!132618 (= lt!69222 (addApplyDifferent!92 lt!69229 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))) lt!69228))))

(assert (=> b!132618 (= (apply!116 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69228) (apply!116 lt!69229 lt!69228))))

(declare-fun bm!14564 () Bool)

(assert (=> bm!14564 (= call!14569 call!14564)))

(declare-fun b!132619 () Bool)

(assert (=> b!132619 (= e!86467 e!86477)))

(assert (=> b!132619 (= c!24502 (and (not (= (bvand (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14565 () Bool)

(assert (=> bm!14565 (= call!14567 (contains!896 lt!69221 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132620 () Bool)

(assert (=> b!132620 (= e!86470 (= (apply!116 lt!69221 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun bm!14566 () Bool)

(assert (=> bm!14566 (= call!14564 call!14568)))

(declare-fun b!132621 () Bool)

(assert (=> b!132621 (= e!86468 (= (apply!116 lt!69221 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132621 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2530 (_values!2848 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> b!132621 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun bm!14567 () Bool)

(assert (=> bm!14567 (= call!14568 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (_values!2848 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992))) (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) (minValue!2720 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun b!132622 () Bool)

(assert (=> b!132622 (= e!86477 call!14570)))

(declare-fun b!132623 () Bool)

(assert (=> b!132623 (= e!86474 call!14570)))

(declare-fun b!132624 () Bool)

(declare-fun res!63868 () Bool)

(assert (=> b!132624 (=> (not res!63868) (not e!86475))))

(assert (=> b!132624 (= res!63868 e!86471)))

(declare-fun res!63873 () Bool)

(assert (=> b!132624 (=> res!63873 e!86471)))

(assert (=> b!132624 (= res!63873 (not e!86473))))

(declare-fun res!63874 () Bool)

(assert (=> b!132624 (=> (not res!63874) (not e!86473))))

(assert (=> b!132624 (= res!63874 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (= (and d!40273 c!24499) b!132616))

(assert (= (and d!40273 (not c!24499)) b!132619))

(assert (= (and b!132619 c!24502) b!132622))

(assert (= (and b!132619 (not c!24502)) b!132614))

(assert (= (and b!132614 c!24504) b!132623))

(assert (= (and b!132614 (not c!24504)) b!132610))

(assert (= (or b!132623 b!132610) bm!14564))

(assert (= (or b!132622 bm!14564) bm!14566))

(assert (= (or b!132622 b!132623) bm!14561))

(assert (= (or b!132616 bm!14566) bm!14567))

(assert (= (or b!132616 bm!14561) bm!14563))

(assert (= (and d!40273 res!63871) b!132609))

(assert (= (and d!40273 c!24500) b!132618))

(assert (= (and d!40273 (not c!24500)) b!132606))

(assert (= (and d!40273 res!63872) b!132624))

(assert (= (and b!132624 res!63874) b!132608))

(assert (= (and b!132624 (not res!63873)) b!132613))

(assert (= (and b!132613 res!63867) b!132621))

(assert (= (and b!132624 res!63868) b!132611))

(assert (= (and b!132611 c!24503) b!132612))

(assert (= (and b!132611 (not c!24503)) b!132615))

(assert (= (and b!132612 res!63869) b!132620))

(assert (= (or b!132612 b!132615) bm!14562))

(assert (= (and b!132611 res!63866) b!132607))

(assert (= (and b!132607 c!24501) b!132617))

(assert (= (and b!132607 (not c!24501)) b!132605))

(assert (= (and b!132617 res!63870) b!132604))

(assert (= (or b!132617 b!132605) bm!14565))

(declare-fun b_lambda!5933 () Bool)

(assert (=> (not b_lambda!5933) (not b!132621)))

(assert (=> b!132621 t!6195))

(declare-fun b_and!8241 () Bool)

(assert (= b_and!8229 (and (=> t!6195 result!3995) b_and!8241)))

(assert (=> b!132621 t!6197))

(declare-fun b_and!8243 () Bool)

(assert (= b_and!8231 (and (=> t!6197 result!3999) b_and!8243)))

(assert (=> d!40273 m!156295))

(declare-fun m!156357 () Bool)

(assert (=> b!132613 m!156357))

(assert (=> b!132613 m!156357))

(declare-fun m!156359 () Bool)

(assert (=> b!132613 m!156359))

(declare-fun m!156361 () Bool)

(assert (=> b!132621 m!156361))

(assert (=> b!132621 m!156283))

(declare-fun m!156363 () Bool)

(assert (=> b!132621 m!156363))

(assert (=> b!132621 m!156357))

(declare-fun m!156365 () Bool)

(assert (=> b!132621 m!156365))

(assert (=> b!132621 m!156361))

(assert (=> b!132621 m!156357))

(assert (=> b!132621 m!156283))

(declare-fun m!156367 () Bool)

(assert (=> b!132620 m!156367))

(declare-fun m!156369 () Bool)

(assert (=> b!132604 m!156369))

(declare-fun m!156371 () Bool)

(assert (=> b!132618 m!156371))

(declare-fun m!156373 () Bool)

(assert (=> b!132618 m!156373))

(declare-fun m!156375 () Bool)

(assert (=> b!132618 m!156375))

(declare-fun m!156377 () Bool)

(assert (=> b!132618 m!156377))

(declare-fun m!156379 () Bool)

(assert (=> b!132618 m!156379))

(assert (=> b!132618 m!156375))

(declare-fun m!156381 () Bool)

(assert (=> b!132618 m!156381))

(declare-fun m!156383 () Bool)

(assert (=> b!132618 m!156383))

(declare-fun m!156385 () Bool)

(assert (=> b!132618 m!156385))

(declare-fun m!156387 () Bool)

(assert (=> b!132618 m!156387))

(assert (=> b!132618 m!156385))

(assert (=> b!132618 m!156357))

(assert (=> b!132618 m!156371))

(declare-fun m!156389 () Bool)

(assert (=> b!132618 m!156389))

(declare-fun m!156391 () Bool)

(assert (=> b!132618 m!156391))

(declare-fun m!156393 () Bool)

(assert (=> b!132618 m!156393))

(declare-fun m!156395 () Bool)

(assert (=> b!132618 m!156395))

(assert (=> b!132618 m!156381))

(declare-fun m!156397 () Bool)

(assert (=> b!132618 m!156397))

(declare-fun m!156399 () Bool)

(assert (=> b!132618 m!156399))

(declare-fun m!156401 () Bool)

(assert (=> b!132618 m!156401))

(assert (=> b!132609 m!156357))

(assert (=> b!132609 m!156357))

(declare-fun m!156403 () Bool)

(assert (=> b!132609 m!156403))

(declare-fun m!156405 () Bool)

(assert (=> bm!14565 m!156405))

(declare-fun m!156407 () Bool)

(assert (=> b!132616 m!156407))

(declare-fun m!156409 () Bool)

(assert (=> bm!14563 m!156409))

(assert (=> b!132608 m!156357))

(assert (=> b!132608 m!156357))

(assert (=> b!132608 m!156403))

(assert (=> bm!14567 m!156379))

(declare-fun m!156411 () Bool)

(assert (=> bm!14562 m!156411))

(assert (=> b!132490 d!40273))

(declare-fun d!40275 () Bool)

(assert (=> d!40275 (= (array_inv!1391 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvsge (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!132488 d!40275))

(declare-fun d!40277 () Bool)

(assert (=> d!40277 (= (array_inv!1392 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvsge (size!2530 (_values!2848 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!132488 d!40277))

(declare-fun d!40279 () Bool)

(declare-fun e!86484 () Bool)

(assert (=> d!40279 e!86484))

(declare-fun res!63877 () Bool)

(assert (=> d!40279 (=> res!63877 e!86484)))

(declare-fun lt!69245 () Bool)

(assert (=> d!40279 (= res!63877 (not lt!69245))))

(declare-fun lt!69247 () Bool)

(assert (=> d!40279 (= lt!69245 lt!69247)))

(declare-fun lt!69246 () Unit!4150)

(declare-fun e!86485 () Unit!4150)

(assert (=> d!40279 (= lt!69246 e!86485)))

(declare-fun c!24507 () Bool)

(assert (=> d!40279 (= c!24507 lt!69247)))

(declare-fun containsKey!175 (List!1735 (_ BitVec 64)) Bool)

(assert (=> d!40279 (= lt!69247 (containsKey!175 (toList!869 lt!69161) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40279 (= (contains!896 lt!69161 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) lt!69245)))

(declare-fun b!132631 () Bool)

(declare-fun lt!69248 () Unit!4150)

(assert (=> b!132631 (= e!86485 lt!69248)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!124 (List!1735 (_ BitVec 64)) Unit!4150)

(assert (=> b!132631 (= lt!69248 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69161) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-datatypes ((Option!177 0))(
  ( (Some!176 (v!3201 V!3483)) (None!175) )
))
(declare-fun isDefined!125 (Option!177) Bool)

(declare-fun getValueByKey!171 (List!1735 (_ BitVec 64)) Option!177)

(assert (=> b!132631 (isDefined!125 (getValueByKey!171 (toList!869 lt!69161) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!132632 () Bool)

(declare-fun Unit!4153 () Unit!4150)

(assert (=> b!132632 (= e!86485 Unit!4153)))

(declare-fun b!132633 () Bool)

(assert (=> b!132633 (= e!86484 (isDefined!125 (getValueByKey!171 (toList!869 lt!69161) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (= (and d!40279 c!24507) b!132631))

(assert (= (and d!40279 (not c!24507)) b!132632))

(assert (= (and d!40279 (not res!63877)) b!132633))

(assert (=> d!40279 m!156287))

(declare-fun m!156413 () Bool)

(assert (=> d!40279 m!156413))

(assert (=> b!132631 m!156287))

(declare-fun m!156415 () Bool)

(assert (=> b!132631 m!156415))

(assert (=> b!132631 m!156287))

(declare-fun m!156417 () Bool)

(assert (=> b!132631 m!156417))

(assert (=> b!132631 m!156417))

(declare-fun m!156419 () Bool)

(assert (=> b!132631 m!156419))

(assert (=> b!132633 m!156287))

(assert (=> b!132633 m!156417))

(assert (=> b!132633 m!156417))

(assert (=> b!132633 m!156419))

(assert (=> b!132496 d!40279))

(declare-fun bm!14616 () Bool)

(declare-fun c!24543 () Bool)

(declare-fun c!24536 () Bool)

(assert (=> bm!14616 (= c!24543 c!24536)))

(declare-fun e!86545 () ListLongMap!1707)

(declare-fun call!14635 () Bool)

(assert (=> bm!14616 (= call!14635 (contains!896 e!86545 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!132718 () Bool)

(declare-fun e!86543 () Unit!4150)

(declare-fun lt!69319 () Unit!4150)

(assert (=> b!132718 (= e!86543 lt!69319)))

(declare-fun call!14627 () Unit!4150)

(assert (=> b!132718 (= lt!69319 call!14627)))

(declare-datatypes ((SeekEntryResult!285 0))(
  ( (MissingZero!285 (index!3300 (_ BitVec 32))) (Found!285 (index!3301 (_ BitVec 32))) (Intermediate!285 (undefined!1097 Bool) (index!3302 (_ BitVec 32)) (x!15602 (_ BitVec 32))) (Undefined!285) (MissingVacant!285 (index!3303 (_ BitVec 32))) )
))
(declare-fun lt!69305 () SeekEntryResult!285)

(declare-fun call!14631 () SeekEntryResult!285)

(assert (=> b!132718 (= lt!69305 call!14631)))

(declare-fun c!24538 () Bool)

(assert (=> b!132718 (= c!24538 ((_ is MissingZero!285) lt!69305))))

(declare-fun e!86531 () Bool)

(assert (=> b!132718 e!86531))

(declare-fun b!132719 () Bool)

(declare-fun e!86530 () Bool)

(declare-fun call!14641 () Bool)

(assert (=> b!132719 (= e!86530 (not call!14641))))

(declare-fun b!132720 () Bool)

(declare-fun e!86550 () Bool)

(declare-fun call!14639 () Bool)

(assert (=> b!132720 (= e!86550 (not call!14639))))

(declare-fun b!132721 () Bool)

(declare-fun res!63907 () Bool)

(declare-fun e!86540 () Bool)

(assert (=> b!132721 (=> (not res!63907) (not e!86540))))

(declare-fun lt!69313 () SeekEntryResult!285)

(assert (=> b!132721 (= res!63907 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3300 lt!69313)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132722 () Bool)

(declare-fun e!86542 () tuple2!2610)

(declare-fun e!86548 () tuple2!2610)

(assert (=> b!132722 (= e!86542 e!86548)))

(declare-fun lt!69307 () SeekEntryResult!285)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4780 (_ BitVec 32)) SeekEntryResult!285)

(assert (=> b!132722 (= lt!69307 (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(assert (=> b!132722 (= c!24536 ((_ is Undefined!285) lt!69307))))

(declare-fun b!132723 () Bool)

(declare-fun e!86539 () Bool)

(declare-fun e!86533 () Bool)

(assert (=> b!132723 (= e!86539 e!86533)))

(declare-fun c!24545 () Bool)

(declare-fun lt!69327 () tuple2!2610)

(assert (=> b!132723 (= c!24545 (_1!1315 lt!69327))))

(declare-fun b!132724 () Bool)

(declare-fun e!86544 () Unit!4150)

(declare-fun Unit!4154 () Unit!4150)

(assert (=> b!132724 (= e!86544 Unit!4154)))

(declare-fun lt!69328 () Unit!4150)

(assert (=> b!132724 (= lt!69328 call!14627)))

(declare-fun call!14626 () SeekEntryResult!285)

(assert (=> b!132724 (= lt!69313 call!14626)))

(declare-fun c!24548 () Bool)

(assert (=> b!132724 (= c!24548 ((_ is MissingZero!285) lt!69313))))

(declare-fun e!86549 () Bool)

(assert (=> b!132724 e!86549))

(declare-fun lt!69314 () Unit!4150)

(assert (=> b!132724 (= lt!69314 lt!69328)))

(assert (=> b!132724 false))

(declare-fun b!132725 () Bool)

(declare-fun res!63908 () Bool)

(declare-fun e!86541 () Bool)

(assert (=> b!132725 (=> (not res!63908) (not e!86541))))

(assert (=> b!132725 (= res!63908 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3300 lt!69305)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!14617 () Bool)

(declare-fun call!14622 () SeekEntryResult!285)

(assert (=> bm!14617 (= call!14626 call!14622)))

(declare-fun call!14642 () Bool)

(declare-fun bm!14618 () Bool)

(declare-fun arrayContainsKey!0 (array!4780 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> bm!14618 (= call!14642 (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!14619 () Bool)

(assert (=> bm!14619 (= call!14622 (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun b!132726 () Bool)

(declare-fun res!63909 () Bool)

(declare-fun call!14634 () Bool)

(assert (=> b!132726 (= res!63909 call!14634)))

(declare-fun e!86546 () Bool)

(assert (=> b!132726 (=> (not res!63909) (not e!86546))))

(declare-fun bm!14620 () Bool)

(declare-fun call!14640 () Bool)

(declare-fun call!14630 () Bool)

(assert (=> bm!14620 (= call!14640 call!14630)))

(declare-fun bm!14621 () Bool)

(assert (=> bm!14621 (= call!14639 call!14642)))

(declare-fun bm!14622 () Bool)

(assert (=> bm!14622 (= call!14641 call!14642)))

(declare-fun b!132727 () Bool)

(declare-fun lt!69311 () Unit!4150)

(assert (=> b!132727 (= e!86544 lt!69311)))

(declare-fun call!14637 () Unit!4150)

(assert (=> b!132727 (= lt!69311 call!14637)))

(declare-fun lt!69325 () SeekEntryResult!285)

(assert (=> b!132727 (= lt!69325 call!14626)))

(declare-fun res!63919 () Bool)

(assert (=> b!132727 (= res!63919 ((_ is Found!285) lt!69325))))

(assert (=> b!132727 (=> (not res!63919) (not e!86546))))

(assert (=> b!132727 e!86546))

(declare-fun b!132728 () Bool)

(declare-fun Unit!4155 () Unit!4150)

(assert (=> b!132728 (= e!86543 Unit!4155)))

(declare-fun lt!69326 () Unit!4150)

(assert (=> b!132728 (= lt!69326 call!14637)))

(declare-fun lt!69303 () SeekEntryResult!285)

(assert (=> b!132728 (= lt!69303 call!14631)))

(declare-fun res!63910 () Bool)

(assert (=> b!132728 (= res!63910 ((_ is Found!285) lt!69303))))

(declare-fun e!86536 () Bool)

(assert (=> b!132728 (=> (not res!63910) (not e!86536))))

(assert (=> b!132728 e!86536))

(declare-fun lt!69318 () Unit!4150)

(assert (=> b!132728 (= lt!69318 lt!69326)))

(assert (=> b!132728 false))

(declare-fun e!86537 () ListLongMap!1707)

(declare-fun b!132729 () Bool)

(declare-fun call!14620 () ListLongMap!1707)

(declare-fun call!14632 () ListLongMap!1707)

(declare-fun c!24549 () Bool)

(assert (=> b!132729 (= e!86537 (ite c!24549 call!14620 call!14632))))

(declare-fun b!132730 () Bool)

(declare-fun lt!69321 () tuple2!2610)

(declare-fun call!14619 () tuple2!2610)

(assert (=> b!132730 (= lt!69321 call!14619)))

(declare-fun e!86538 () tuple2!2610)

(assert (=> b!132730 (= e!86538 (tuple2!2611 (_1!1315 lt!69321) (_2!1315 lt!69321)))))

(declare-fun c!24541 () Bool)

(declare-fun bm!14623 () Bool)

(declare-fun call!14621 () ListLongMap!1707)

(assert (=> bm!14623 (= call!14621 (+!170 e!86537 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!24540 () Bool)

(assert (=> bm!14623 (= c!24540 c!24541)))

(declare-fun b!132731 () Bool)

(declare-fun e!86551 () Bool)

(assert (=> b!132731 (= e!86551 e!86530)))

(declare-fun res!63913 () Bool)

(declare-fun call!14623 () Bool)

(assert (=> b!132731 (= res!63913 call!14623)))

(assert (=> b!132731 (=> (not res!63913) (not e!86530))))

(declare-fun b!132732 () Bool)

(declare-fun res!63918 () Bool)

(assert (=> b!132732 (=> (not res!63918) (not e!86541))))

(assert (=> b!132732 (= res!63918 call!14640)))

(assert (=> b!132732 (= e!86531 e!86541)))

(declare-fun b!132733 () Bool)

(declare-fun res!63911 () Bool)

(assert (=> b!132733 (= res!63911 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3303 lt!69305)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132733 (=> (not res!63911) (not e!86550))))

(declare-fun b!132734 () Bool)

(declare-fun res!63915 () Bool)

(assert (=> b!132734 (= res!63915 call!14630)))

(assert (=> b!132734 (=> (not res!63915) (not e!86536))))

(declare-fun bm!14624 () Bool)

(declare-fun call!14628 () ListLongMap!1707)

(declare-fun call!14633 () ListLongMap!1707)

(assert (=> bm!14624 (= call!14628 call!14633)))

(declare-fun bm!14625 () Bool)

(declare-fun lt!69304 () (_ BitVec 32))

(declare-fun call!14625 () ListLongMap!1707)

(assert (=> bm!14625 (= call!14625 (getCurrentListMap!540 (_keys!4614 newMap!16) (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) (zeroValue!2720 newMap!16) (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!132735 () Bool)

(declare-fun res!63912 () Bool)

(assert (=> b!132735 (= res!63912 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3303 lt!69313)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132735 (=> (not res!63912) (not e!86530))))

(declare-fun b!132736 () Bool)

(assert (=> b!132736 (= e!86537 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!132737 () Bool)

(assert (=> b!132737 (= e!86536 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69303)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!132738 () Bool)

(assert (=> b!132738 (= e!86545 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun bm!14626 () Bool)

(assert (=> bm!14626 (= call!14632 call!14633)))

(declare-fun b!132739 () Bool)

(declare-fun lt!69306 () Unit!4150)

(assert (=> b!132739 (= lt!69306 e!86543)))

(declare-fun c!24537 () Bool)

(assert (=> b!132739 (= c!24537 call!14635)))

(assert (=> b!132739 (= e!86548 (tuple2!2611 false newMap!16))))

(declare-fun b!132740 () Bool)

(declare-fun res!63906 () Bool)

(assert (=> b!132740 (=> (not res!63906) (not e!86540))))

(assert (=> b!132740 (= res!63906 call!14623)))

(assert (=> b!132740 (= e!86549 e!86540)))

(declare-fun bm!14627 () Bool)

(assert (=> bm!14627 (= call!14620 call!14625)))

(declare-fun bm!14628 () Bool)

(declare-fun call!14624 () Bool)

(assert (=> bm!14628 (= call!14634 call!14624)))

(declare-fun b!132741 () Bool)

(assert (=> b!132741 (= e!86545 call!14628)))

(declare-fun bm!14629 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!61 (array!4780 array!4782 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 64) Int) Unit!4150)

(assert (=> bm!14629 (= call!14627 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)))))

(declare-fun b!132742 () Bool)

(declare-fun e!86534 () tuple2!2610)

(assert (=> b!132742 (= e!86534 e!86538)))

(declare-fun c!24542 () Bool)

(assert (=> b!132742 (= c!24542 ((_ is MissingZero!285) lt!69307))))

(declare-fun bm!14630 () Bool)

(declare-fun call!14636 () ListLongMap!1707)

(assert (=> bm!14630 (= call!14636 (map!1405 newMap!16))))

(declare-fun b!132743 () Bool)

(declare-fun c!24539 () Bool)

(assert (=> b!132743 (= c!24539 ((_ is MissingVacant!285) lt!69305))))

(declare-fun e!86532 () Bool)

(assert (=> b!132743 (= e!86531 e!86532)))

(declare-fun b!132744 () Bool)

(declare-fun lt!69312 () Unit!4150)

(declare-fun lt!69316 () Unit!4150)

(assert (=> b!132744 (= lt!69312 lt!69316)))

(declare-fun call!14638 () ListLongMap!1707)

(assert (=> b!132744 (= call!14638 call!14632)))

(declare-fun lt!69310 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!61 (array!4780 array!4782 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 V!3483 Int) Unit!4150)

(assert (=> b!132744 (= lt!69316 (lemmaChangeZeroKeyThenAddPairToListMap!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) lt!69310 (zeroValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) (defaultEntry!2865 newMap!16)))))

(assert (=> b!132744 (= lt!69310 (bvor (extraKeys!2630 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!86535 () tuple2!2610)

(assert (=> b!132744 (= e!86535 (tuple2!2611 true (LongMapFixedSize!1099 (defaultEntry!2865 newMap!16) (mask!7165 newMap!16) (bvor (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) (_size!598 newMap!16) (_keys!4614 newMap!16) (_values!2848 newMap!16) (_vacant!598 newMap!16))))))

(declare-fun b!132745 () Bool)

(declare-fun lt!69320 () Unit!4150)

(declare-fun lt!69329 () Unit!4150)

(assert (=> b!132745 (= lt!69320 lt!69329)))

(assert (=> b!132745 (contains!896 call!14628 (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))))

(declare-fun lt!69317 () array!4782)

(declare-fun lemmaValidKeyInArrayIsInListMap!119 (array!4780 array!4782 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 32) Int) Unit!4150)

(assert (=> b!132745 (= lt!69329 (lemmaValidKeyInArrayIsInListMap!119 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (index!3301 lt!69307) (defaultEntry!2865 newMap!16)))))

(assert (=> b!132745 (= lt!69317 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))))

(declare-fun lt!69308 () Unit!4150)

(declare-fun lt!69323 () Unit!4150)

(assert (=> b!132745 (= lt!69308 lt!69323)))

(assert (=> b!132745 (= call!14621 call!14625)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!61 (array!4780 array!4782 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 32) (_ BitVec 64) V!3483 Int) Unit!4150)

(assert (=> b!132745 (= lt!69323 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (index!3301 lt!69307) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69309 () Unit!4150)

(assert (=> b!132745 (= lt!69309 e!86544)))

(declare-fun c!24544 () Bool)

(assert (=> b!132745 (= c!24544 call!14635)))

(assert (=> b!132745 (= e!86538 (tuple2!2611 true (LongMapFixedSize!1099 (defaultEntry!2865 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (_size!598 newMap!16) (_keys!4614 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (_vacant!598 newMap!16))))))

(declare-fun b!132746 () Bool)

(assert (=> b!132746 (= e!86542 e!86535)))

(assert (=> b!132746 (= c!24549 (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132747 () Bool)

(assert (=> b!132747 (= e!86540 (not call!14641))))

(declare-fun bm!14631 () Bool)

(assert (=> bm!14631 (= call!14633 (getCurrentListMap!540 (_keys!4614 newMap!16) (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317) (mask!7165 newMap!16) (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun bm!14632 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!14632 (= call!14624 (inRange!0 (ite c!24536 (ite c!24537 (index!3301 lt!69303) (ite c!24538 (index!3300 lt!69305) (index!3303 lt!69305))) (ite c!24544 (index!3301 lt!69325) (ite c!24548 (index!3300 lt!69313) (index!3303 lt!69313)))) (mask!7165 newMap!16)))))

(declare-fun bm!14633 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!61 (array!4780 array!4782 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 64) Int) Unit!4150)

(assert (=> bm!14633 (= call!14637 (lemmaInListMapThenSeekEntryOrOpenFindsIt!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)))))

(declare-fun b!132748 () Bool)

(assert (=> b!132748 (= e!86532 e!86550)))

(declare-fun res!63916 () Bool)

(assert (=> b!132748 (= res!63916 call!14640)))

(assert (=> b!132748 (=> (not res!63916) (not e!86550))))

(declare-fun b!132749 () Bool)

(assert (=> b!132749 (= e!86532 ((_ is Undefined!285) lt!69305))))

(declare-fun b!132750 () Bool)

(assert (=> b!132750 (= e!86546 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69325)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun bm!14634 () Bool)

(assert (=> bm!14634 (= call!14630 call!14624)))

(declare-fun b!132751 () Bool)

(declare-fun e!86547 () Bool)

(assert (=> b!132751 (= e!86533 e!86547)))

(declare-fun res!63917 () Bool)

(declare-fun call!14629 () ListLongMap!1707)

(assert (=> b!132751 (= res!63917 (contains!896 call!14629 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> b!132751 (=> (not res!63917) (not e!86547))))

(declare-fun bm!14635 () Bool)

(assert (=> bm!14635 (= call!14623 call!14634)))

(declare-fun b!132752 () Bool)

(assert (=> b!132752 (= e!86533 (= call!14629 call!14636))))

(declare-fun b!132753 () Bool)

(declare-fun c!24546 () Bool)

(assert (=> b!132753 (= c!24546 ((_ is MissingVacant!285) lt!69313))))

(assert (=> b!132753 (= e!86549 e!86551)))

(declare-fun d!40281 () Bool)

(assert (=> d!40281 e!86539))

(declare-fun res!63914 () Bool)

(assert (=> d!40281 (=> (not res!63914) (not e!86539))))

(assert (=> d!40281 (= res!63914 (valid!521 (_2!1315 lt!69327)))))

(assert (=> d!40281 (= lt!69327 e!86542)))

(assert (=> d!40281 (= c!24541 (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (bvneg (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!40281 (valid!521 newMap!16)))

(assert (=> d!40281 (= (update!192 newMap!16 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) lt!69327)))

(declare-fun bm!14636 () Bool)

(assert (=> bm!14636 (= call!14638 call!14621)))

(declare-fun b!132754 () Bool)

(assert (=> b!132754 (= e!86541 (not call!14639))))

(declare-fun b!132755 () Bool)

(declare-fun c!24547 () Bool)

(assert (=> b!132755 (= c!24547 ((_ is MissingVacant!285) lt!69307))))

(assert (=> b!132755 (= e!86548 e!86534)))

(declare-fun bm!14637 () Bool)

(declare-fun updateHelperNewKey!61 (LongMapFixedSize!1098 (_ BitVec 64) V!3483 (_ BitVec 32)) tuple2!2610)

(assert (=> bm!14637 (= call!14619 (updateHelperNewKey!61 newMap!16 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))))))

(declare-fun b!132756 () Bool)

(assert (=> b!132756 (= e!86551 ((_ is Undefined!285) lt!69313))))

(declare-fun b!132757 () Bool)

(declare-fun lt!69315 () tuple2!2610)

(assert (=> b!132757 (= e!86534 (tuple2!2611 (_1!1315 lt!69315) (_2!1315 lt!69315)))))

(assert (=> b!132757 (= lt!69315 call!14619)))

(declare-fun bm!14638 () Bool)

(assert (=> bm!14638 (= call!14631 call!14622)))

(declare-fun bm!14639 () Bool)

(assert (=> bm!14639 (= call!14629 (map!1405 (_2!1315 lt!69327)))))

(declare-fun b!132758 () Bool)

(declare-fun lt!69322 () Unit!4150)

(declare-fun lt!69324 () Unit!4150)

(assert (=> b!132758 (= lt!69322 lt!69324)))

(assert (=> b!132758 (= call!14638 call!14620)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!61 (array!4780 array!4782 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 V!3483 Int) Unit!4150)

(assert (=> b!132758 (= lt!69324 (lemmaChangeLongMinValueKeyThenAddPairToListMap!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) lt!69304 (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)))))

(assert (=> b!132758 (= lt!69304 (bvor (extraKeys!2630 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!132758 (= e!86535 (tuple2!2611 true (LongMapFixedSize!1099 (defaultEntry!2865 newMap!16) (mask!7165 newMap!16) (bvor (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) (zeroValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (_size!598 newMap!16) (_keys!4614 newMap!16) (_values!2848 newMap!16) (_vacant!598 newMap!16))))))

(declare-fun b!132759 () Bool)

(assert (=> b!132759 (= e!86547 (= call!14629 (+!170 call!14636 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!40281 c!24541) b!132746))

(assert (= (and d!40281 (not c!24541)) b!132722))

(assert (= (and b!132746 c!24549) b!132744))

(assert (= (and b!132746 (not c!24549)) b!132758))

(assert (= (or b!132744 b!132758) bm!14626))

(assert (= (or b!132744 b!132758) bm!14627))

(assert (= (or b!132744 b!132758) bm!14636))

(assert (= (and b!132722 c!24536) b!132739))

(assert (= (and b!132722 (not c!24536)) b!132755))

(assert (= (and b!132739 c!24537) b!132728))

(assert (= (and b!132739 (not c!24537)) b!132718))

(assert (= (and b!132728 res!63910) b!132734))

(assert (= (and b!132734 res!63915) b!132737))

(assert (= (and b!132718 c!24538) b!132732))

(assert (= (and b!132718 (not c!24538)) b!132743))

(assert (= (and b!132732 res!63918) b!132725))

(assert (= (and b!132725 res!63908) b!132754))

(assert (= (and b!132743 c!24539) b!132748))

(assert (= (and b!132743 (not c!24539)) b!132749))

(assert (= (and b!132748 res!63916) b!132733))

(assert (= (and b!132733 res!63911) b!132720))

(assert (= (or b!132732 b!132748) bm!14620))

(assert (= (or b!132754 b!132720) bm!14621))

(assert (= (or b!132734 bm!14620) bm!14634))

(assert (= (or b!132728 b!132718) bm!14638))

(assert (= (and b!132755 c!24547) b!132757))

(assert (= (and b!132755 (not c!24547)) b!132742))

(assert (= (and b!132742 c!24542) b!132730))

(assert (= (and b!132742 (not c!24542)) b!132745))

(assert (= (and b!132745 c!24544) b!132727))

(assert (= (and b!132745 (not c!24544)) b!132724))

(assert (= (and b!132727 res!63919) b!132726))

(assert (= (and b!132726 res!63909) b!132750))

(assert (= (and b!132724 c!24548) b!132740))

(assert (= (and b!132724 (not c!24548)) b!132753))

(assert (= (and b!132740 res!63906) b!132721))

(assert (= (and b!132721 res!63907) b!132747))

(assert (= (and b!132753 c!24546) b!132731))

(assert (= (and b!132753 (not c!24546)) b!132756))

(assert (= (and b!132731 res!63913) b!132735))

(assert (= (and b!132735 res!63912) b!132719))

(assert (= (or b!132740 b!132731) bm!14635))

(assert (= (or b!132747 b!132719) bm!14622))

(assert (= (or b!132726 bm!14635) bm!14628))

(assert (= (or b!132727 b!132724) bm!14617))

(assert (= (or b!132757 b!132730) bm!14637))

(assert (= (or b!132728 b!132727) bm!14633))

(assert (= (or bm!14634 bm!14628) bm!14632))

(assert (= (or b!132739 b!132745) bm!14624))

(assert (= (or b!132718 b!132724) bm!14629))

(assert (= (or bm!14621 bm!14622) bm!14618))

(assert (= (or bm!14638 bm!14617) bm!14619))

(assert (= (or b!132739 b!132745) bm!14616))

(assert (= (and bm!14616 c!24543) b!132741))

(assert (= (and bm!14616 (not c!24543)) b!132738))

(assert (= (or bm!14626 bm!14624) bm!14631))

(assert (= (or bm!14627 b!132745) bm!14625))

(assert (= (or bm!14636 b!132745) bm!14623))

(assert (= (and bm!14623 c!24540) b!132729))

(assert (= (and bm!14623 (not c!24540)) b!132736))

(assert (= (and d!40281 res!63914) b!132723))

(assert (= (and b!132723 c!24545) b!132751))

(assert (= (and b!132723 (not c!24545)) b!132752))

(assert (= (and b!132751 res!63917) b!132759))

(assert (= (or b!132759 b!132752) bm!14630))

(assert (= (or b!132751 b!132759 b!132752) bm!14639))

(assert (=> bm!14629 m!156287))

(declare-fun m!156421 () Bool)

(assert (=> bm!14629 m!156421))

(assert (=> b!132736 m!156355))

(assert (=> b!132758 m!156285))

(declare-fun m!156423 () Bool)

(assert (=> b!132758 m!156423))

(declare-fun m!156425 () Bool)

(assert (=> b!132745 m!156425))

(assert (=> b!132745 m!156425))

(declare-fun m!156427 () Bool)

(assert (=> b!132745 m!156427))

(declare-fun m!156429 () Bool)

(assert (=> b!132745 m!156429))

(declare-fun m!156431 () Bool)

(assert (=> b!132745 m!156431))

(assert (=> b!132745 m!156287))

(assert (=> b!132745 m!156285))

(declare-fun m!156433 () Bool)

(assert (=> b!132745 m!156433))

(declare-fun m!156435 () Bool)

(assert (=> b!132725 m!156435))

(declare-fun m!156437 () Bool)

(assert (=> b!132759 m!156437))

(assert (=> bm!14618 m!156287))

(declare-fun m!156439 () Bool)

(assert (=> bm!14618 m!156439))

(declare-fun m!156441 () Bool)

(assert (=> b!132737 m!156441))

(declare-fun m!156443 () Bool)

(assert (=> b!132750 m!156443))

(assert (=> b!132722 m!156287))

(declare-fun m!156445 () Bool)

(assert (=> b!132722 m!156445))

(assert (=> bm!14619 m!156287))

(assert (=> bm!14619 m!156445))

(assert (=> bm!14616 m!156287))

(declare-fun m!156447 () Bool)

(assert (=> bm!14616 m!156447))

(declare-fun m!156449 () Bool)

(assert (=> b!132721 m!156449))

(declare-fun m!156451 () Bool)

(assert (=> bm!14632 m!156451))

(declare-fun m!156453 () Bool)

(assert (=> b!132735 m!156453))

(declare-fun m!156455 () Bool)

(assert (=> bm!14623 m!156455))

(assert (=> b!132738 m!156355))

(declare-fun m!156457 () Bool)

(assert (=> bm!14631 m!156457))

(assert (=> bm!14630 m!156309))

(assert (=> bm!14625 m!156431))

(declare-fun m!156459 () Bool)

(assert (=> bm!14625 m!156459))

(assert (=> bm!14633 m!156287))

(declare-fun m!156461 () Bool)

(assert (=> bm!14633 m!156461))

(declare-fun m!156463 () Bool)

(assert (=> b!132733 m!156463))

(assert (=> bm!14637 m!156287))

(assert (=> bm!14637 m!156285))

(declare-fun m!156465 () Bool)

(assert (=> bm!14637 m!156465))

(declare-fun m!156467 () Bool)

(assert (=> bm!14639 m!156467))

(assert (=> b!132751 m!156287))

(declare-fun m!156469 () Bool)

(assert (=> b!132751 m!156469))

(declare-fun m!156471 () Bool)

(assert (=> d!40281 m!156471))

(assert (=> d!40281 m!156313))

(assert (=> b!132744 m!156285))

(declare-fun m!156473 () Bool)

(assert (=> b!132744 m!156473))

(assert (=> b!132496 d!40281))

(declare-fun d!40283 () Bool)

(declare-fun c!24552 () Bool)

(assert (=> d!40283 (= c!24552 ((_ is ValueCellFull!1095) (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun e!86554 () V!3483)

(assert (=> d!40283 (= (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!86554)))

(declare-fun b!132764 () Bool)

(declare-fun get!1489 (ValueCell!1095 V!3483) V!3483)

(assert (=> b!132764 (= e!86554 (get!1489 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!132765 () Bool)

(declare-fun get!1490 (ValueCell!1095 V!3483) V!3483)

(assert (=> b!132765 (= e!86554 (get!1490 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40283 c!24552) b!132764))

(assert (= (and d!40283 (not c!24552)) b!132765))

(assert (=> b!132764 m!156281))

(assert (=> b!132764 m!156283))

(declare-fun m!156475 () Bool)

(assert (=> b!132764 m!156475))

(assert (=> b!132765 m!156281))

(assert (=> b!132765 m!156283))

(declare-fun m!156477 () Bool)

(assert (=> b!132765 m!156477))

(assert (=> b!132496 d!40283))

(declare-fun d!40285 () Bool)

(declare-fun res!63926 () Bool)

(declare-fun e!86557 () Bool)

(assert (=> d!40285 (=> (not res!63926) (not e!86557))))

(declare-fun simpleValid!91 (LongMapFixedSize!1098) Bool)

(assert (=> d!40285 (= res!63926 (simpleValid!91 newMap!16))))

(assert (=> d!40285 (= (valid!521 newMap!16) e!86557)))

(declare-fun b!132772 () Bool)

(declare-fun res!63927 () Bool)

(assert (=> b!132772 (=> (not res!63927) (not e!86557))))

(declare-fun arrayCountValidKeys!0 (array!4780 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!132772 (= res!63927 (= (arrayCountValidKeys!0 (_keys!4614 newMap!16) #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))) (_size!598 newMap!16)))))

(declare-fun b!132773 () Bool)

(declare-fun res!63928 () Bool)

(assert (=> b!132773 (=> (not res!63928) (not e!86557))))

(assert (=> b!132773 (= res!63928 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun b!132774 () Bool)

(assert (=> b!132774 (= e!86557 (arrayNoDuplicates!0 (_keys!4614 newMap!16) #b00000000000000000000000000000000 Nil!1733))))

(assert (= (and d!40285 res!63926) b!132772))

(assert (= (and b!132772 res!63927) b!132773))

(assert (= (and b!132773 res!63928) b!132774))

(declare-fun m!156479 () Bool)

(assert (=> d!40285 m!156479))

(declare-fun m!156481 () Bool)

(assert (=> b!132772 m!156481))

(declare-fun m!156483 () Bool)

(assert (=> b!132773 m!156483))

(declare-fun m!156485 () Bool)

(assert (=> b!132774 m!156485))

(assert (=> b!132483 d!40285))

(declare-fun b!132785 () Bool)

(declare-fun e!86568 () Bool)

(declare-fun e!86569 () Bool)

(assert (=> b!132785 (= e!86568 e!86569)))

(declare-fun c!24555 () Bool)

(assert (=> b!132785 (= c!24555 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!132786 () Bool)

(declare-fun call!14645 () Bool)

(assert (=> b!132786 (= e!86569 call!14645)))

(declare-fun b!132787 () Bool)

(declare-fun e!86566 () Bool)

(declare-fun contains!897 (List!1736 (_ BitVec 64)) Bool)

(assert (=> b!132787 (= e!86566 (contains!897 Nil!1733 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!14642 () Bool)

(assert (=> bm!14642 (= call!14645 (arrayNoDuplicates!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)))))

(declare-fun d!40287 () Bool)

(declare-fun res!63937 () Bool)

(declare-fun e!86567 () Bool)

(assert (=> d!40287 (=> res!63937 e!86567)))

(assert (=> d!40287 (= res!63937 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!40287 (= (arrayNoDuplicates!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000000 Nil!1733) e!86567)))

(declare-fun b!132788 () Bool)

(assert (=> b!132788 (= e!86569 call!14645)))

(declare-fun b!132789 () Bool)

(assert (=> b!132789 (= e!86567 e!86568)))

(declare-fun res!63935 () Bool)

(assert (=> b!132789 (=> (not res!63935) (not e!86568))))

(assert (=> b!132789 (= res!63935 (not e!86566))))

(declare-fun res!63936 () Bool)

(assert (=> b!132789 (=> (not res!63936) (not e!86566))))

(assert (=> b!132789 (= res!63936 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!40287 (not res!63937)) b!132789))

(assert (= (and b!132789 res!63936) b!132787))

(assert (= (and b!132789 res!63935) b!132785))

(assert (= (and b!132785 c!24555) b!132788))

(assert (= (and b!132785 (not c!24555)) b!132786))

(assert (= (or b!132788 b!132786) bm!14642))

(declare-fun m!156487 () Bool)

(assert (=> b!132785 m!156487))

(assert (=> b!132785 m!156487))

(declare-fun m!156489 () Bool)

(assert (=> b!132785 m!156489))

(assert (=> b!132787 m!156487))

(assert (=> b!132787 m!156487))

(declare-fun m!156491 () Bool)

(assert (=> b!132787 m!156491))

(assert (=> bm!14642 m!156487))

(declare-fun m!156493 () Bool)

(assert (=> bm!14642 m!156493))

(assert (=> b!132789 m!156487))

(assert (=> b!132789 m!156487))

(assert (=> b!132789 m!156489))

(assert (=> b!132491 d!40287))

(declare-fun d!40289 () Bool)

(assert (=> d!40289 (= (array_inv!1391 (_keys!4614 newMap!16)) (bvsge (size!2529 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!132481 d!40289))

(declare-fun d!40291 () Bool)

(assert (=> d!40291 (= (array_inv!1392 (_values!2848 newMap!16)) (bvsge (size!2530 (_values!2848 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!132481 d!40291))

(declare-fun b!132798 () Bool)

(declare-fun e!86577 () Bool)

(declare-fun call!14648 () Bool)

(assert (=> b!132798 (= e!86577 call!14648)))

(declare-fun b!132799 () Bool)

(declare-fun e!86578 () Bool)

(assert (=> b!132799 (= e!86577 e!86578)))

(declare-fun lt!69337 () (_ BitVec 64))

(assert (=> b!132799 (= lt!69337 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!69338 () Unit!4150)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4780 (_ BitVec 64) (_ BitVec 32)) Unit!4150)

(assert (=> b!132799 (= lt!69338 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69337 #b00000000000000000000000000000000))))

(assert (=> b!132799 (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69337 #b00000000000000000000000000000000)))

(declare-fun lt!69336 () Unit!4150)

(assert (=> b!132799 (= lt!69336 lt!69338)))

(declare-fun res!63942 () Bool)

(assert (=> b!132799 (= res!63942 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))) (Found!285 #b00000000000000000000000000000000)))))

(assert (=> b!132799 (=> (not res!63942) (not e!86578))))

(declare-fun b!132800 () Bool)

(assert (=> b!132800 (= e!86578 call!14648)))

(declare-fun b!132801 () Bool)

(declare-fun e!86576 () Bool)

(assert (=> b!132801 (= e!86576 e!86577)))

(declare-fun c!24558 () Bool)

(assert (=> b!132801 (= c!24558 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!14645 () Bool)

(assert (=> bm!14645 (= call!14648 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun d!40293 () Bool)

(declare-fun res!63943 () Bool)

(assert (=> d!40293 (=> res!63943 e!86576)))

(assert (=> d!40293 (= res!63943 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!40293 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))) e!86576)))

(assert (= (and d!40293 (not res!63943)) b!132801))

(assert (= (and b!132801 c!24558) b!132799))

(assert (= (and b!132801 (not c!24558)) b!132798))

(assert (= (and b!132799 res!63942) b!132800))

(assert (= (or b!132800 b!132798) bm!14645))

(assert (=> b!132799 m!156487))

(declare-fun m!156495 () Bool)

(assert (=> b!132799 m!156495))

(declare-fun m!156497 () Bool)

(assert (=> b!132799 m!156497))

(assert (=> b!132799 m!156487))

(declare-fun m!156499 () Bool)

(assert (=> b!132799 m!156499))

(assert (=> b!132801 m!156487))

(assert (=> b!132801 m!156487))

(assert (=> b!132801 m!156489))

(declare-fun m!156501 () Bool)

(assert (=> bm!14645 m!156501))

(assert (=> b!132487 d!40293))

(declare-fun mapIsEmpty!4653 () Bool)

(declare-fun mapRes!4653 () Bool)

(assert (=> mapIsEmpty!4653 mapRes!4653))

(declare-fun condMapEmpty!4653 () Bool)

(declare-fun mapDefault!4653 () ValueCell!1095)

(assert (=> mapNonEmpty!4643 (= condMapEmpty!4653 (= mapRest!4643 ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4653)))))

(declare-fun e!86584 () Bool)

(assert (=> mapNonEmpty!4643 (= tp!11206 (and e!86584 mapRes!4653))))

(declare-fun mapNonEmpty!4653 () Bool)

(declare-fun tp!11223 () Bool)

(declare-fun e!86583 () Bool)

(assert (=> mapNonEmpty!4653 (= mapRes!4653 (and tp!11223 e!86583))))

(declare-fun mapValue!4653 () ValueCell!1095)

(declare-fun mapKey!4653 () (_ BitVec 32))

(declare-fun mapRest!4653 () (Array (_ BitVec 32) ValueCell!1095))

(assert (=> mapNonEmpty!4653 (= mapRest!4643 (store mapRest!4653 mapKey!4653 mapValue!4653))))

(declare-fun b!132809 () Bool)

(assert (=> b!132809 (= e!86584 tp_is_empty!2877)))

(declare-fun b!132808 () Bool)

(assert (=> b!132808 (= e!86583 tp_is_empty!2877)))

(assert (= (and mapNonEmpty!4643 condMapEmpty!4653) mapIsEmpty!4653))

(assert (= (and mapNonEmpty!4643 (not condMapEmpty!4653)) mapNonEmpty!4653))

(assert (= (and mapNonEmpty!4653 ((_ is ValueCellFull!1095) mapValue!4653)) b!132808))

(assert (= (and mapNonEmpty!4643 ((_ is ValueCellFull!1095) mapDefault!4653)) b!132809))

(declare-fun m!156503 () Bool)

(assert (=> mapNonEmpty!4653 m!156503))

(declare-fun mapIsEmpty!4654 () Bool)

(declare-fun mapRes!4654 () Bool)

(assert (=> mapIsEmpty!4654 mapRes!4654))

(declare-fun condMapEmpty!4654 () Bool)

(declare-fun mapDefault!4654 () ValueCell!1095)

(assert (=> mapNonEmpty!4644 (= condMapEmpty!4654 (= mapRest!4644 ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4654)))))

(declare-fun e!86586 () Bool)

(assert (=> mapNonEmpty!4644 (= tp!11207 (and e!86586 mapRes!4654))))

(declare-fun mapNonEmpty!4654 () Bool)

(declare-fun tp!11224 () Bool)

(declare-fun e!86585 () Bool)

(assert (=> mapNonEmpty!4654 (= mapRes!4654 (and tp!11224 e!86585))))

(declare-fun mapKey!4654 () (_ BitVec 32))

(declare-fun mapValue!4654 () ValueCell!1095)

(declare-fun mapRest!4654 () (Array (_ BitVec 32) ValueCell!1095))

(assert (=> mapNonEmpty!4654 (= mapRest!4644 (store mapRest!4654 mapKey!4654 mapValue!4654))))

(declare-fun b!132811 () Bool)

(assert (=> b!132811 (= e!86586 tp_is_empty!2877)))

(declare-fun b!132810 () Bool)

(assert (=> b!132810 (= e!86585 tp_is_empty!2877)))

(assert (= (and mapNonEmpty!4644 condMapEmpty!4654) mapIsEmpty!4654))

(assert (= (and mapNonEmpty!4644 (not condMapEmpty!4654)) mapNonEmpty!4654))

(assert (= (and mapNonEmpty!4654 ((_ is ValueCellFull!1095) mapValue!4654)) b!132810))

(assert (= (and mapNonEmpty!4644 ((_ is ValueCellFull!1095) mapDefault!4654)) b!132811))

(declare-fun m!156505 () Bool)

(assert (=> mapNonEmpty!4654 m!156505))

(declare-fun b_lambda!5935 () Bool)

(assert (= b_lambda!5933 (or (and b!132488 b_free!2921) (and b!132481 b_free!2923 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))))) b_lambda!5935)))

(check-sat (not b!132722) (not b!132616) (not b!132774) (not bm!14619) (not b!132618) (not b!132765) (not bm!14563) (not bm!14631) (not bm!14618) (not b_lambda!5935) (not d!40279) (not bm!14567) (not b!132787) (not mapNonEmpty!4654) (not b!132613) (not mapNonEmpty!4653) (not bm!14623) b_and!8243 (not bm!14629) (not bm!14637) (not bm!14632) (not bm!14633) (not b!132631) (not d!40269) (not b!132633) (not b!132621) (not b!132759) (not b!132744) (not bm!14562) (not b!132801) b_and!8241 (not b!132609) (not bm!14645) (not b!132608) (not b!132785) (not b!132745) (not b!132799) (not bm!14616) (not d!40285) (not bm!14630) (not b!132772) (not bm!14642) (not bm!14565) (not b!132789) (not b!132751) tp_is_empty!2877 (not d!40281) (not b_lambda!5931) (not bm!14639) (not b!132736) (not b!132604) (not b!132738) (not b_next!2923) (not b_next!2921) (not b!132764) (not b!132773) (not d!40271) (not b!132758) (not bm!14625) (not b!132620) (not d!40273))
(check-sat b_and!8241 b_and!8243 (not b_next!2921) (not b_next!2923))
(get-model)

(declare-fun d!40295 () Bool)

(declare-fun res!63944 () Bool)

(declare-fun e!86587 () Bool)

(assert (=> d!40295 (=> (not res!63944) (not e!86587))))

(assert (=> d!40295 (= res!63944 (simpleValid!91 (_2!1315 lt!69327)))))

(assert (=> d!40295 (= (valid!521 (_2!1315 lt!69327)) e!86587)))

(declare-fun b!132812 () Bool)

(declare-fun res!63945 () Bool)

(assert (=> b!132812 (=> (not res!63945) (not e!86587))))

(assert (=> b!132812 (= res!63945 (= (arrayCountValidKeys!0 (_keys!4614 (_2!1315 lt!69327)) #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69327)))) (_size!598 (_2!1315 lt!69327))))))

(declare-fun b!132813 () Bool)

(declare-fun res!63946 () Bool)

(assert (=> b!132813 (=> (not res!63946) (not e!86587))))

(assert (=> b!132813 (= res!63946 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4614 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327))))))

(declare-fun b!132814 () Bool)

(assert (=> b!132814 (= e!86587 (arrayNoDuplicates!0 (_keys!4614 (_2!1315 lt!69327)) #b00000000000000000000000000000000 Nil!1733))))

(assert (= (and d!40295 res!63944) b!132812))

(assert (= (and b!132812 res!63945) b!132813))

(assert (= (and b!132813 res!63946) b!132814))

(declare-fun m!156507 () Bool)

(assert (=> d!40295 m!156507))

(declare-fun m!156509 () Bool)

(assert (=> b!132812 m!156509))

(declare-fun m!156511 () Bool)

(assert (=> b!132813 m!156511))

(declare-fun m!156513 () Bool)

(assert (=> b!132814 m!156513))

(assert (=> d!40281 d!40295))

(assert (=> d!40281 d!40285))

(declare-fun d!40297 () Bool)

(declare-fun e!86588 () Bool)

(assert (=> d!40297 e!86588))

(declare-fun res!63947 () Bool)

(assert (=> d!40297 (=> res!63947 e!86588)))

(declare-fun lt!69339 () Bool)

(assert (=> d!40297 (= res!63947 (not lt!69339))))

(declare-fun lt!69341 () Bool)

(assert (=> d!40297 (= lt!69339 lt!69341)))

(declare-fun lt!69340 () Unit!4150)

(declare-fun e!86589 () Unit!4150)

(assert (=> d!40297 (= lt!69340 e!86589)))

(declare-fun c!24559 () Bool)

(assert (=> d!40297 (= c!24559 lt!69341)))

(assert (=> d!40297 (= lt!69341 (containsKey!175 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40297 (= (contains!896 lt!69221 #b1000000000000000000000000000000000000000000000000000000000000000) lt!69339)))

(declare-fun b!132815 () Bool)

(declare-fun lt!69342 () Unit!4150)

(assert (=> b!132815 (= e!86589 lt!69342)))

(assert (=> b!132815 (= lt!69342 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132815 (isDefined!125 (getValueByKey!171 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132816 () Bool)

(declare-fun Unit!4156 () Unit!4150)

(assert (=> b!132816 (= e!86589 Unit!4156)))

(declare-fun b!132817 () Bool)

(assert (=> b!132817 (= e!86588 (isDefined!125 (getValueByKey!171 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40297 c!24559) b!132815))

(assert (= (and d!40297 (not c!24559)) b!132816))

(assert (= (and d!40297 (not res!63947)) b!132817))

(declare-fun m!156515 () Bool)

(assert (=> d!40297 m!156515))

(declare-fun m!156517 () Bool)

(assert (=> b!132815 m!156517))

(declare-fun m!156519 () Bool)

(assert (=> b!132815 m!156519))

(assert (=> b!132815 m!156519))

(declare-fun m!156521 () Bool)

(assert (=> b!132815 m!156521))

(assert (=> b!132817 m!156519))

(assert (=> b!132817 m!156519))

(assert (=> b!132817 m!156521))

(assert (=> bm!14565 d!40297))

(assert (=> d!40273 d!40267))

(declare-fun d!40299 () Bool)

(declare-fun get!1491 (Option!177) V!3483)

(assert (=> d!40299 (= (apply!116 lt!69221 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5488 () Bool)

(assert (= bs!5488 d!40299))

(assert (=> bs!5488 m!156519))

(assert (=> bs!5488 m!156519))

(declare-fun m!156523 () Bool)

(assert (=> bs!5488 m!156523))

(assert (=> b!132604 d!40299))

(declare-fun d!40301 () Bool)

(declare-fun e!86590 () Bool)

(assert (=> d!40301 e!86590))

(declare-fun res!63948 () Bool)

(assert (=> d!40301 (=> res!63948 e!86590)))

(declare-fun lt!69343 () Bool)

(assert (=> d!40301 (= res!63948 (not lt!69343))))

(declare-fun lt!69345 () Bool)

(assert (=> d!40301 (= lt!69343 lt!69345)))

(declare-fun lt!69344 () Unit!4150)

(declare-fun e!86591 () Unit!4150)

(assert (=> d!40301 (= lt!69344 e!86591)))

(declare-fun c!24560 () Bool)

(assert (=> d!40301 (= c!24560 lt!69345)))

(assert (=> d!40301 (= lt!69345 (containsKey!175 (toList!869 call!14629) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40301 (= (contains!896 call!14629 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) lt!69343)))

(declare-fun b!132818 () Bool)

(declare-fun lt!69346 () Unit!4150)

(assert (=> b!132818 (= e!86591 lt!69346)))

(assert (=> b!132818 (= lt!69346 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 call!14629) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> b!132818 (isDefined!125 (getValueByKey!171 (toList!869 call!14629) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!132819 () Bool)

(declare-fun Unit!4157 () Unit!4150)

(assert (=> b!132819 (= e!86591 Unit!4157)))

(declare-fun b!132820 () Bool)

(assert (=> b!132820 (= e!86590 (isDefined!125 (getValueByKey!171 (toList!869 call!14629) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (= (and d!40301 c!24560) b!132818))

(assert (= (and d!40301 (not c!24560)) b!132819))

(assert (= (and d!40301 (not res!63948)) b!132820))

(assert (=> d!40301 m!156287))

(declare-fun m!156525 () Bool)

(assert (=> d!40301 m!156525))

(assert (=> b!132818 m!156287))

(declare-fun m!156527 () Bool)

(assert (=> b!132818 m!156527))

(assert (=> b!132818 m!156287))

(declare-fun m!156529 () Bool)

(assert (=> b!132818 m!156529))

(assert (=> b!132818 m!156529))

(declare-fun m!156531 () Bool)

(assert (=> b!132818 m!156531))

(assert (=> b!132820 m!156287))

(assert (=> b!132820 m!156529))

(assert (=> b!132820 m!156529))

(assert (=> b!132820 m!156531))

(assert (=> b!132751 d!40301))

(declare-fun d!40303 () Bool)

(declare-fun res!63953 () Bool)

(declare-fun e!86596 () Bool)

(assert (=> d!40303 (=> res!63953 e!86596)))

(assert (=> d!40303 (= res!63953 (= (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40303 (= (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000) e!86596)))

(declare-fun b!132825 () Bool)

(declare-fun e!86597 () Bool)

(assert (=> b!132825 (= e!86596 e!86597)))

(declare-fun res!63954 () Bool)

(assert (=> b!132825 (=> (not res!63954) (not e!86597))))

(assert (=> b!132825 (= res!63954 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!132826 () Bool)

(assert (=> b!132826 (= e!86597 (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40303 (not res!63953)) b!132825))

(assert (= (and b!132825 res!63954) b!132826))

(declare-fun m!156533 () Bool)

(assert (=> d!40303 m!156533))

(assert (=> b!132826 m!156287))

(declare-fun m!156535 () Bool)

(assert (=> b!132826 m!156535))

(assert (=> bm!14618 d!40303))

(declare-fun d!40305 () Bool)

(assert (=> d!40305 (= (get!1489 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3196 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> b!132764 d!40305))

(declare-fun d!40307 () Bool)

(assert (=> d!40307 (= (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132785 d!40307))

(declare-fun d!40309 () Bool)

(declare-fun e!86600 () Bool)

(assert (=> d!40309 e!86600))

(declare-fun res!63960 () Bool)

(assert (=> d!40309 (=> (not res!63960) (not e!86600))))

(declare-fun lt!69356 () ListLongMap!1707)

(assert (=> d!40309 (= res!63960 (contains!896 lt!69356 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69358 () List!1735)

(assert (=> d!40309 (= lt!69356 (ListLongMap!1708 lt!69358))))

(declare-fun lt!69357 () Unit!4150)

(declare-fun lt!69355 () Unit!4150)

(assert (=> d!40309 (= lt!69357 lt!69355)))

(assert (=> d!40309 (= (getValueByKey!171 lt!69358 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!88 (List!1735 (_ BitVec 64) V!3483) Unit!4150)

(assert (=> d!40309 (= lt!69355 (lemmaContainsTupThenGetReturnValue!88 lt!69358 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun insertStrictlySorted!90 (List!1735 (_ BitVec 64) V!3483) List!1735)

(assert (=> d!40309 (= lt!69358 (insertStrictlySorted!90 (toList!869 call!14636) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40309 (= (+!170 call!14636 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69356)))

(declare-fun b!132831 () Bool)

(declare-fun res!63959 () Bool)

(assert (=> b!132831 (=> (not res!63959) (not e!86600))))

(assert (=> b!132831 (= res!63959 (= (getValueByKey!171 (toList!869 lt!69356) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!132832 () Bool)

(declare-fun contains!898 (List!1735 tuple2!2608) Bool)

(assert (=> b!132832 (= e!86600 (contains!898 (toList!869 lt!69356) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40309 res!63960) b!132831))

(assert (= (and b!132831 res!63959) b!132832))

(declare-fun m!156537 () Bool)

(assert (=> d!40309 m!156537))

(declare-fun m!156539 () Bool)

(assert (=> d!40309 m!156539))

(declare-fun m!156541 () Bool)

(assert (=> d!40309 m!156541))

(declare-fun m!156543 () Bool)

(assert (=> d!40309 m!156543))

(declare-fun m!156545 () Bool)

(assert (=> b!132831 m!156545))

(declare-fun m!156547 () Bool)

(assert (=> b!132832 m!156547))

(assert (=> b!132759 d!40309))

(declare-fun d!40311 () Bool)

(declare-fun e!86601 () Bool)

(assert (=> d!40311 e!86601))

(declare-fun res!63961 () Bool)

(assert (=> d!40311 (=> res!63961 e!86601)))

(declare-fun lt!69359 () Bool)

(assert (=> d!40311 (= res!63961 (not lt!69359))))

(declare-fun lt!69361 () Bool)

(assert (=> d!40311 (= lt!69359 lt!69361)))

(declare-fun lt!69360 () Unit!4150)

(declare-fun e!86602 () Unit!4150)

(assert (=> d!40311 (= lt!69360 e!86602)))

(declare-fun c!24561 () Bool)

(assert (=> d!40311 (= c!24561 lt!69361)))

(assert (=> d!40311 (= lt!69361 (containsKey!175 (toList!869 e!86545) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40311 (= (contains!896 e!86545 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) lt!69359)))

(declare-fun b!132833 () Bool)

(declare-fun lt!69362 () Unit!4150)

(assert (=> b!132833 (= e!86602 lt!69362)))

(assert (=> b!132833 (= lt!69362 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 e!86545) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> b!132833 (isDefined!125 (getValueByKey!171 (toList!869 e!86545) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!132834 () Bool)

(declare-fun Unit!4158 () Unit!4150)

(assert (=> b!132834 (= e!86602 Unit!4158)))

(declare-fun b!132835 () Bool)

(assert (=> b!132835 (= e!86601 (isDefined!125 (getValueByKey!171 (toList!869 e!86545) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (= (and d!40311 c!24561) b!132833))

(assert (= (and d!40311 (not c!24561)) b!132834))

(assert (= (and d!40311 (not res!63961)) b!132835))

(assert (=> d!40311 m!156287))

(declare-fun m!156549 () Bool)

(assert (=> d!40311 m!156549))

(assert (=> b!132833 m!156287))

(declare-fun m!156551 () Bool)

(assert (=> b!132833 m!156551))

(assert (=> b!132833 m!156287))

(declare-fun m!156553 () Bool)

(assert (=> b!132833 m!156553))

(assert (=> b!132833 m!156553))

(declare-fun m!156555 () Bool)

(assert (=> b!132833 m!156555))

(assert (=> b!132835 m!156287))

(assert (=> b!132835 m!156553))

(assert (=> b!132835 m!156553))

(assert (=> b!132835 m!156555))

(assert (=> bm!14616 d!40311))

(declare-fun d!40313 () Bool)

(assert (=> d!40313 (= (inRange!0 (ite c!24536 (ite c!24537 (index!3301 lt!69303) (ite c!24538 (index!3300 lt!69305) (index!3303 lt!69305))) (ite c!24544 (index!3301 lt!69325) (ite c!24548 (index!3300 lt!69313) (index!3303 lt!69313)))) (mask!7165 newMap!16)) (and (bvsge (ite c!24536 (ite c!24537 (index!3301 lt!69303) (ite c!24538 (index!3300 lt!69305) (index!3303 lt!69305))) (ite c!24544 (index!3301 lt!69325) (ite c!24548 (index!3300 lt!69313) (index!3303 lt!69313)))) #b00000000000000000000000000000000) (bvslt (ite c!24536 (ite c!24537 (index!3301 lt!69303) (ite c!24538 (index!3300 lt!69305) (index!3303 lt!69305))) (ite c!24544 (index!3301 lt!69325) (ite c!24548 (index!3300 lt!69313) (index!3303 lt!69313)))) (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!14632 d!40313))

(declare-fun b!132836 () Bool)

(declare-fun e!86605 () Bool)

(declare-fun e!86606 () Bool)

(assert (=> b!132836 (= e!86605 e!86606)))

(declare-fun c!24562 () Bool)

(assert (=> b!132836 (= c!24562 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132837 () Bool)

(declare-fun call!14649 () Bool)

(assert (=> b!132837 (= e!86606 call!14649)))

(declare-fun b!132838 () Bool)

(declare-fun e!86603 () Bool)

(assert (=> b!132838 (= e!86603 (contains!897 Nil!1733 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14646 () Bool)

(assert (=> bm!14646 (= call!14649 (arrayNoDuplicates!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24562 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1733) Nil!1733)))))

(declare-fun d!40315 () Bool)

(declare-fun res!63964 () Bool)

(declare-fun e!86604 () Bool)

(assert (=> d!40315 (=> res!63964 e!86604)))

(assert (=> d!40315 (= res!63964 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!40315 (= (arrayNoDuplicates!0 (_keys!4614 newMap!16) #b00000000000000000000000000000000 Nil!1733) e!86604)))

(declare-fun b!132839 () Bool)

(assert (=> b!132839 (= e!86606 call!14649)))

(declare-fun b!132840 () Bool)

(assert (=> b!132840 (= e!86604 e!86605)))

(declare-fun res!63962 () Bool)

(assert (=> b!132840 (=> (not res!63962) (not e!86605))))

(assert (=> b!132840 (= res!63962 (not e!86603))))

(declare-fun res!63963 () Bool)

(assert (=> b!132840 (=> (not res!63963) (not e!86603))))

(assert (=> b!132840 (= res!63963 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!40315 (not res!63964)) b!132840))

(assert (= (and b!132840 res!63963) b!132838))

(assert (= (and b!132840 res!63962) b!132836))

(assert (= (and b!132836 c!24562) b!132839))

(assert (= (and b!132836 (not c!24562)) b!132837))

(assert (= (or b!132839 b!132837) bm!14646))

(assert (=> b!132836 m!156533))

(assert (=> b!132836 m!156533))

(declare-fun m!156557 () Bool)

(assert (=> b!132836 m!156557))

(assert (=> b!132838 m!156533))

(assert (=> b!132838 m!156533))

(declare-fun m!156559 () Bool)

(assert (=> b!132838 m!156559))

(assert (=> bm!14646 m!156533))

(declare-fun m!156561 () Bool)

(assert (=> bm!14646 m!156561))

(assert (=> b!132840 m!156533))

(assert (=> b!132840 m!156533))

(assert (=> b!132840 m!156557))

(assert (=> b!132774 d!40315))

(assert (=> bm!14630 d!40271))

(declare-fun b!132849 () Bool)

(declare-fun e!86612 () (_ BitVec 32))

(assert (=> b!132849 (= e!86612 #b00000000000000000000000000000000)))

(declare-fun d!40317 () Bool)

(declare-fun lt!69365 () (_ BitVec 32))

(assert (=> d!40317 (and (bvsge lt!69365 #b00000000000000000000000000000000) (bvsle lt!69365 (bvsub (size!2529 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!40317 (= lt!69365 e!86612)))

(declare-fun c!24568 () Bool)

(assert (=> d!40317 (= c!24568 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!40317 (and (bvsle #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2529 (_keys!4614 newMap!16)) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!40317 (= (arrayCountValidKeys!0 (_keys!4614 newMap!16) #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))) lt!69365)))

(declare-fun b!132850 () Bool)

(declare-fun e!86611 () (_ BitVec 32))

(declare-fun call!14652 () (_ BitVec 32))

(assert (=> b!132850 (= e!86611 call!14652)))

(declare-fun b!132851 () Bool)

(assert (=> b!132851 (= e!86611 (bvadd #b00000000000000000000000000000001 call!14652))))

(declare-fun bm!14649 () Bool)

(assert (=> bm!14649 (= call!14652 (arrayCountValidKeys!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!132852 () Bool)

(assert (=> b!132852 (= e!86612 e!86611)))

(declare-fun c!24567 () Bool)

(assert (=> b!132852 (= c!24567 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!40317 c!24568) b!132849))

(assert (= (and d!40317 (not c!24568)) b!132852))

(assert (= (and b!132852 c!24567) b!132851))

(assert (= (and b!132852 (not c!24567)) b!132850))

(assert (= (or b!132851 b!132850) bm!14649))

(declare-fun m!156563 () Bool)

(assert (=> bm!14649 m!156563))

(assert (=> b!132852 m!156533))

(assert (=> b!132852 m!156533))

(assert (=> b!132852 m!156557))

(assert (=> b!132772 d!40317))

(declare-fun b!132869 () Bool)

(declare-fun lt!69371 () SeekEntryResult!285)

(assert (=> b!132869 (and (bvsge (index!3300 lt!69371) #b00000000000000000000000000000000) (bvslt (index!3300 lt!69371) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun res!63976 () Bool)

(assert (=> b!132869 (= res!63976 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3300 lt!69371)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!86622 () Bool)

(assert (=> b!132869 (=> (not res!63976) (not e!86622))))

(declare-fun c!24573 () Bool)

(declare-fun bm!14654 () Bool)

(declare-fun call!14658 () Bool)

(assert (=> bm!14654 (= call!14658 (inRange!0 (ite c!24573 (index!3300 lt!69371) (index!3303 lt!69371)) (mask!7165 newMap!16)))))

(declare-fun b!132870 () Bool)

(declare-fun e!86624 () Bool)

(declare-fun call!14657 () Bool)

(assert (=> b!132870 (= e!86624 (not call!14657))))

(declare-fun b!132871 () Bool)

(declare-fun e!86621 () Bool)

(assert (=> b!132871 (= e!86621 e!86622)))

(declare-fun res!63975 () Bool)

(assert (=> b!132871 (= res!63975 call!14658)))

(assert (=> b!132871 (=> (not res!63975) (not e!86622))))

(declare-fun b!132872 () Bool)

(assert (=> b!132872 (= e!86622 (not call!14657))))

(declare-fun b!132873 () Bool)

(declare-fun e!86623 () Bool)

(assert (=> b!132873 (= e!86621 e!86623)))

(declare-fun c!24574 () Bool)

(assert (=> b!132873 (= c!24574 ((_ is MissingVacant!285) lt!69371))))

(declare-fun b!132874 () Bool)

(declare-fun res!63973 () Bool)

(assert (=> b!132874 (=> (not res!63973) (not e!86624))))

(assert (=> b!132874 (= res!63973 call!14658)))

(assert (=> b!132874 (= e!86623 e!86624)))

(declare-fun b!132875 () Bool)

(assert (=> b!132875 (= e!86623 ((_ is Undefined!285) lt!69371))))

(declare-fun b!132876 () Bool)

(declare-fun res!63974 () Bool)

(assert (=> b!132876 (=> (not res!63974) (not e!86624))))

(assert (=> b!132876 (= res!63974 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3303 lt!69371)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132876 (and (bvsge (index!3303 lt!69371) #b00000000000000000000000000000000) (bvslt (index!3303 lt!69371) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun d!40319 () Bool)

(assert (=> d!40319 e!86621))

(assert (=> d!40319 (= c!24573 ((_ is MissingZero!285) lt!69371))))

(assert (=> d!40319 (= lt!69371 (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun lt!69370 () Unit!4150)

(declare-fun choose!825 (array!4780 array!4782 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 64) Int) Unit!4150)

(assert (=> d!40319 (= lt!69370 (choose!825 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)))))

(assert (=> d!40319 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40319 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)) lt!69370)))

(declare-fun bm!14655 () Bool)

(assert (=> bm!14655 (= call!14657 (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!40319 c!24573) b!132871))

(assert (= (and d!40319 (not c!24573)) b!132873))

(assert (= (and b!132871 res!63975) b!132869))

(assert (= (and b!132869 res!63976) b!132872))

(assert (= (and b!132873 c!24574) b!132874))

(assert (= (and b!132873 (not c!24574)) b!132875))

(assert (= (and b!132874 res!63973) b!132876))

(assert (= (and b!132876 res!63974) b!132870))

(assert (= (or b!132871 b!132874) bm!14654))

(assert (= (or b!132872 b!132870) bm!14655))

(declare-fun m!156565 () Bool)

(assert (=> bm!14654 m!156565))

(declare-fun m!156567 () Bool)

(assert (=> b!132876 m!156567))

(assert (=> bm!14655 m!156287))

(assert (=> bm!14655 m!156439))

(assert (=> d!40319 m!156287))

(assert (=> d!40319 m!156445))

(assert (=> d!40319 m!156287))

(declare-fun m!156569 () Bool)

(assert (=> d!40319 m!156569))

(declare-fun m!156571 () Bool)

(assert (=> d!40319 m!156571))

(declare-fun m!156573 () Bool)

(assert (=> b!132869 m!156573))

(assert (=> bm!14629 d!40319))

(declare-fun d!40321 () Bool)

(assert (=> d!40321 (= (+!170 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69310 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69374 () Unit!4150)

(declare-fun choose!826 (array!4780 array!4782 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 V!3483 Int) Unit!4150)

(assert (=> d!40321 (= lt!69374 (choose!826 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) lt!69310 (zeroValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) (defaultEntry!2865 newMap!16)))))

(assert (=> d!40321 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40321 (= (lemmaChangeZeroKeyThenAddPairToListMap!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) lt!69310 (zeroValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) (defaultEntry!2865 newMap!16)) lt!69374)))

(declare-fun bs!5489 () Bool)

(assert (= bs!5489 d!40321))

(assert (=> bs!5489 m!156571))

(assert (=> bs!5489 m!156285))

(declare-fun m!156575 () Bool)

(assert (=> bs!5489 m!156575))

(assert (=> bs!5489 m!156355))

(assert (=> bs!5489 m!156355))

(declare-fun m!156577 () Bool)

(assert (=> bs!5489 m!156577))

(assert (=> bs!5489 m!156285))

(declare-fun m!156579 () Bool)

(assert (=> bs!5489 m!156579))

(assert (=> b!132744 d!40321))

(declare-fun d!40323 () Bool)

(declare-fun e!86625 () Bool)

(assert (=> d!40323 e!86625))

(declare-fun res!63978 () Bool)

(assert (=> d!40323 (=> (not res!63978) (not e!86625))))

(declare-fun lt!69376 () ListLongMap!1707)

(assert (=> d!40323 (= res!63978 (contains!896 lt!69376 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!69378 () List!1735)

(assert (=> d!40323 (= lt!69376 (ListLongMap!1708 lt!69378))))

(declare-fun lt!69377 () Unit!4150)

(declare-fun lt!69375 () Unit!4150)

(assert (=> d!40323 (= lt!69377 lt!69375)))

(assert (=> d!40323 (= (getValueByKey!171 lt!69378 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!176 (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40323 (= lt!69375 (lemmaContainsTupThenGetReturnValue!88 lt!69378 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40323 (= lt!69378 (insertStrictlySorted!90 (toList!869 e!86537) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40323 (= (+!170 e!86537 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69376)))

(declare-fun b!132877 () Bool)

(declare-fun res!63977 () Bool)

(assert (=> b!132877 (=> (not res!63977) (not e!86625))))

(assert (=> b!132877 (= res!63977 (= (getValueByKey!171 (toList!869 lt!69376) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!176 (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!132878 () Bool)

(assert (=> b!132878 (= e!86625 (contains!898 (toList!869 lt!69376) (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!40323 res!63978) b!132877))

(assert (= (and b!132877 res!63977) b!132878))

(declare-fun m!156581 () Bool)

(assert (=> d!40323 m!156581))

(declare-fun m!156583 () Bool)

(assert (=> d!40323 m!156583))

(declare-fun m!156585 () Bool)

(assert (=> d!40323 m!156585))

(declare-fun m!156587 () Bool)

(assert (=> d!40323 m!156587))

(declare-fun m!156589 () Bool)

(assert (=> b!132877 m!156589))

(declare-fun m!156591 () Bool)

(assert (=> b!132878 m!156591))

(assert (=> bm!14623 d!40323))

(declare-fun b!132879 () Bool)

(declare-fun e!86627 () Bool)

(declare-fun call!14659 () Bool)

(assert (=> b!132879 (= e!86627 call!14659)))

(declare-fun b!132880 () Bool)

(declare-fun e!86628 () Bool)

(assert (=> b!132880 (= e!86627 e!86628)))

(declare-fun lt!69380 () (_ BitVec 64))

(assert (=> b!132880 (= lt!69380 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!69381 () Unit!4150)

(assert (=> b!132880 (= lt!69381 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69380 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!132880 (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69380 #b00000000000000000000000000000000)))

(declare-fun lt!69379 () Unit!4150)

(assert (=> b!132880 (= lt!69379 lt!69381)))

(declare-fun res!63979 () Bool)

(assert (=> b!132880 (= res!63979 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))) (Found!285 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!132880 (=> (not res!63979) (not e!86628))))

(declare-fun b!132881 () Bool)

(assert (=> b!132881 (= e!86628 call!14659)))

(declare-fun b!132882 () Bool)

(declare-fun e!86626 () Bool)

(assert (=> b!132882 (= e!86626 e!86627)))

(declare-fun c!24575 () Bool)

(assert (=> b!132882 (= c!24575 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!14656 () Bool)

(assert (=> bm!14656 (= call!14659 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun d!40325 () Bool)

(declare-fun res!63980 () Bool)

(assert (=> d!40325 (=> res!63980 e!86626)))

(assert (=> d!40325 (= res!63980 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!40325 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))) e!86626)))

(assert (= (and d!40325 (not res!63980)) b!132882))

(assert (= (and b!132882 c!24575) b!132880))

(assert (= (and b!132882 (not c!24575)) b!132879))

(assert (= (and b!132880 res!63979) b!132881))

(assert (= (or b!132881 b!132879) bm!14656))

(declare-fun m!156593 () Bool)

(assert (=> b!132880 m!156593))

(declare-fun m!156595 () Bool)

(assert (=> b!132880 m!156595))

(declare-fun m!156597 () Bool)

(assert (=> b!132880 m!156597))

(assert (=> b!132880 m!156593))

(declare-fun m!156599 () Bool)

(assert (=> b!132880 m!156599))

(assert (=> b!132882 m!156593))

(assert (=> b!132882 m!156593))

(declare-fun m!156601 () Bool)

(assert (=> b!132882 m!156601))

(declare-fun m!156603 () Bool)

(assert (=> bm!14656 m!156603))

(assert (=> bm!14645 d!40325))

(declare-fun d!40327 () Bool)

(declare-fun lt!69384 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!131 (List!1736) (InoxSet (_ BitVec 64)))

(assert (=> d!40327 (= lt!69384 (select (content!131 Nil!1733) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!86633 () Bool)

(assert (=> d!40327 (= lt!69384 e!86633)))

(declare-fun res!63985 () Bool)

(assert (=> d!40327 (=> (not res!63985) (not e!86633))))

(assert (=> d!40327 (= res!63985 ((_ is Cons!1732) Nil!1733))))

(assert (=> d!40327 (= (contains!897 Nil!1733 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)) lt!69384)))

(declare-fun b!132887 () Bool)

(declare-fun e!86634 () Bool)

(assert (=> b!132887 (= e!86633 e!86634)))

(declare-fun res!63986 () Bool)

(assert (=> b!132887 (=> res!63986 e!86634)))

(assert (=> b!132887 (= res!63986 (= (h!2337 Nil!1733) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!132888 () Bool)

(assert (=> b!132888 (= e!86634 (contains!897 (t!6199 Nil!1733) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!40327 res!63985) b!132887))

(assert (= (and b!132887 (not res!63986)) b!132888))

(declare-fun m!156605 () Bool)

(assert (=> d!40327 m!156605))

(assert (=> d!40327 m!156487))

(declare-fun m!156607 () Bool)

(assert (=> d!40327 m!156607))

(assert (=> b!132888 m!156487))

(declare-fun m!156609 () Bool)

(assert (=> b!132888 m!156609))

(assert (=> b!132787 d!40327))

(declare-fun b!132913 () Bool)

(declare-fun lt!69399 () Unit!4150)

(declare-fun lt!69403 () Unit!4150)

(assert (=> b!132913 (= lt!69399 lt!69403)))

(declare-fun lt!69404 () (_ BitVec 64))

(declare-fun lt!69402 () V!3483)

(declare-fun lt!69400 () ListLongMap!1707)

(declare-fun lt!69401 () (_ BitVec 64))

(assert (=> b!132913 (not (contains!896 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402)) lt!69401))))

(declare-fun addStillNotContains!63 (ListLongMap!1707 (_ BitVec 64) V!3483 (_ BitVec 64)) Unit!4150)

(assert (=> b!132913 (= lt!69403 (addStillNotContains!63 lt!69400 lt!69404 lt!69402 lt!69401))))

(assert (=> b!132913 (= lt!69401 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!132913 (= lt!69402 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!132913 (= lt!69404 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!14662 () ListLongMap!1707)

(assert (=> b!132913 (= lt!69400 call!14662)))

(declare-fun e!86655 () ListLongMap!1707)

(assert (=> b!132913 (= e!86655 (+!170 call!14662 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!132914 () Bool)

(declare-fun e!86652 () Bool)

(declare-fun lt!69405 () ListLongMap!1707)

(assert (=> b!132914 (= e!86652 (= lt!69405 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (_values!2848 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992))) (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) (minValue!2720 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!132915 () Bool)

(declare-fun isEmpty!414 (ListLongMap!1707) Bool)

(assert (=> b!132915 (= e!86652 (isEmpty!414 lt!69405))))

(declare-fun b!132916 () Bool)

(declare-fun e!86653 () ListLongMap!1707)

(assert (=> b!132916 (= e!86653 (ListLongMap!1708 Nil!1732))))

(declare-fun b!132917 () Bool)

(declare-fun e!86650 () Bool)

(declare-fun e!86651 () Bool)

(assert (=> b!132917 (= e!86650 e!86651)))

(declare-fun c!24587 () Bool)

(declare-fun e!86654 () Bool)

(assert (=> b!132917 (= c!24587 e!86654)))

(declare-fun res!63998 () Bool)

(assert (=> b!132917 (=> (not res!63998) (not e!86654))))

(assert (=> b!132917 (= res!63998 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!132918 () Bool)

(assert (=> b!132918 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> b!132918 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2530 (_values!2848 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun e!86649 () Bool)

(assert (=> b!132918 (= e!86649 (= (apply!116 lt!69405 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!132920 () Bool)

(assert (=> b!132920 (= e!86651 e!86649)))

(assert (=> b!132920 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun res!63997 () Bool)

(assert (=> b!132920 (= res!63997 (contains!896 lt!69405 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!132920 (=> (not res!63997) (not e!86649))))

(declare-fun b!132921 () Bool)

(assert (=> b!132921 (= e!86653 e!86655)))

(declare-fun c!24584 () Bool)

(assert (=> b!132921 (= c!24584 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!132922 () Bool)

(declare-fun res!63996 () Bool)

(assert (=> b!132922 (=> (not res!63996) (not e!86650))))

(assert (=> b!132922 (= res!63996 (not (contains!896 lt!69405 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!132923 () Bool)

(assert (=> b!132923 (= e!86651 e!86652)))

(declare-fun c!24586 () Bool)

(assert (=> b!132923 (= c!24586 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun bm!14659 () Bool)

(assert (=> bm!14659 (= call!14662 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (_values!2848 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992))) (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) (minValue!2720 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun b!132924 () Bool)

(assert (=> b!132924 (= e!86654 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!132924 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!132919 () Bool)

(assert (=> b!132919 (= e!86655 call!14662)))

(declare-fun d!40329 () Bool)

(assert (=> d!40329 e!86650))

(declare-fun res!63995 () Bool)

(assert (=> d!40329 (=> (not res!63995) (not e!86650))))

(assert (=> d!40329 (= res!63995 (not (contains!896 lt!69405 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40329 (= lt!69405 e!86653)))

(declare-fun c!24585 () Bool)

(assert (=> d!40329 (= c!24585 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!40329 (validMask!0 (mask!7165 (v!3197 (underlying!454 thiss!992))))))

(assert (=> d!40329 (= (getCurrentListMapNoExtraKeys!137 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (_values!2848 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992))) (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) (minValue!2720 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992)))) lt!69405)))

(assert (= (and d!40329 c!24585) b!132916))

(assert (= (and d!40329 (not c!24585)) b!132921))

(assert (= (and b!132921 c!24584) b!132913))

(assert (= (and b!132921 (not c!24584)) b!132919))

(assert (= (or b!132913 b!132919) bm!14659))

(assert (= (and d!40329 res!63995) b!132922))

(assert (= (and b!132922 res!63996) b!132917))

(assert (= (and b!132917 res!63998) b!132924))

(assert (= (and b!132917 c!24587) b!132920))

(assert (= (and b!132917 (not c!24587)) b!132923))

(assert (= (and b!132920 res!63997) b!132918))

(assert (= (and b!132923 c!24586) b!132914))

(assert (= (and b!132923 (not c!24586)) b!132915))

(declare-fun b_lambda!5937 () Bool)

(assert (=> (not b_lambda!5937) (not b!132913)))

(assert (=> b!132913 t!6195))

(declare-fun b_and!8245 () Bool)

(assert (= b_and!8241 (and (=> t!6195 result!3995) b_and!8245)))

(assert (=> b!132913 t!6197))

(declare-fun b_and!8247 () Bool)

(assert (= b_and!8243 (and (=> t!6197 result!3999) b_and!8247)))

(declare-fun b_lambda!5939 () Bool)

(assert (=> (not b_lambda!5939) (not b!132918)))

(assert (=> b!132918 t!6195))

(declare-fun b_and!8249 () Bool)

(assert (= b_and!8245 (and (=> t!6195 result!3995) b_and!8249)))

(assert (=> b!132918 t!6197))

(declare-fun b_and!8251 () Bool)

(assert (= b_and!8247 (and (=> t!6197 result!3999) b_and!8251)))

(declare-fun m!156611 () Bool)

(assert (=> d!40329 m!156611))

(assert (=> d!40329 m!156295))

(declare-fun m!156613 () Bool)

(assert (=> b!132914 m!156613))

(declare-fun m!156615 () Bool)

(assert (=> b!132913 m!156615))

(declare-fun m!156617 () Bool)

(assert (=> b!132913 m!156617))

(assert (=> b!132913 m!156615))

(assert (=> b!132913 m!156283))

(assert (=> b!132913 m!156361))

(assert (=> b!132913 m!156283))

(assert (=> b!132913 m!156363))

(declare-fun m!156619 () Bool)

(assert (=> b!132913 m!156619))

(assert (=> b!132913 m!156361))

(assert (=> b!132913 m!156357))

(declare-fun m!156621 () Bool)

(assert (=> b!132913 m!156621))

(assert (=> b!132918 m!156357))

(declare-fun m!156623 () Bool)

(assert (=> b!132918 m!156623))

(assert (=> b!132918 m!156283))

(assert (=> b!132918 m!156357))

(assert (=> b!132918 m!156361))

(assert (=> b!132918 m!156283))

(assert (=> b!132918 m!156363))

(assert (=> b!132918 m!156361))

(assert (=> bm!14659 m!156613))

(assert (=> b!132921 m!156357))

(assert (=> b!132921 m!156357))

(assert (=> b!132921 m!156403))

(declare-fun m!156625 () Bool)

(assert (=> b!132922 m!156625))

(assert (=> b!132920 m!156357))

(assert (=> b!132920 m!156357))

(declare-fun m!156627 () Bool)

(assert (=> b!132920 m!156627))

(assert (=> b!132924 m!156357))

(assert (=> b!132924 m!156357))

(assert (=> b!132924 m!156403))

(declare-fun m!156629 () Bool)

(assert (=> b!132915 m!156629))

(assert (=> bm!14567 d!40329))

(declare-fun d!40331 () Bool)

(assert (=> d!40331 (= (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132608 d!40331))

(declare-fun d!40333 () Bool)

(declare-fun e!86656 () Bool)

(assert (=> d!40333 e!86656))

(declare-fun res!64000 () Bool)

(assert (=> d!40333 (=> (not res!64000) (not e!86656))))

(declare-fun lt!69407 () ListLongMap!1707)

(assert (=> d!40333 (= res!64000 (contains!896 lt!69407 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun lt!69409 () List!1735)

(assert (=> d!40333 (= lt!69407 (ListLongMap!1708 lt!69409))))

(declare-fun lt!69408 () Unit!4150)

(declare-fun lt!69406 () Unit!4150)

(assert (=> d!40333 (= lt!69408 lt!69406)))

(assert (=> d!40333 (= (getValueByKey!171 lt!69409 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) (Some!176 (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40333 (= lt!69406 (lemmaContainsTupThenGetReturnValue!88 lt!69409 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40333 (= lt!69409 (insertStrictlySorted!90 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40333 (= (+!170 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)) (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69407)))

(declare-fun b!132925 () Bool)

(declare-fun res!63999 () Bool)

(assert (=> b!132925 (=> (not res!63999) (not e!86656))))

(assert (=> b!132925 (= res!63999 (= (getValueByKey!171 (toList!869 lt!69407) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) (Some!176 (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun b!132926 () Bool)

(assert (=> b!132926 (= e!86656 (contains!898 (toList!869 lt!69407) (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!40333 res!64000) b!132925))

(assert (= (and b!132925 res!63999) b!132926))

(declare-fun m!156631 () Bool)

(assert (=> d!40333 m!156631))

(declare-fun m!156633 () Bool)

(assert (=> d!40333 m!156633))

(declare-fun m!156635 () Bool)

(assert (=> d!40333 m!156635))

(declare-fun m!156637 () Bool)

(assert (=> d!40333 m!156637))

(declare-fun m!156639 () Bool)

(assert (=> b!132925 m!156639))

(declare-fun m!156641 () Bool)

(assert (=> b!132926 m!156641))

(assert (=> bm!14563 d!40333))

(assert (=> b!132801 d!40307))

(declare-fun bm!14660 () Bool)

(declare-fun call!14669 () ListLongMap!1707)

(declare-fun call!14665 () ListLongMap!1707)

(assert (=> bm!14660 (= call!14669 call!14665)))

(declare-fun b!132927 () Bool)

(declare-fun e!86666 () Bool)

(declare-fun lt!69416 () ListLongMap!1707)

(assert (=> b!132927 (= e!86666 (= (apply!116 lt!69416 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 newMap!16)))))

(declare-fun bm!14661 () Bool)

(declare-fun call!14664 () Bool)

(assert (=> bm!14661 (= call!14664 (contains!896 lt!69416 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132928 () Bool)

(declare-fun e!86669 () Bool)

(declare-fun call!14666 () Bool)

(assert (=> b!132928 (= e!86669 (not call!14666))))

(declare-fun b!132929 () Bool)

(declare-fun e!86668 () Unit!4150)

(declare-fun Unit!4159 () Unit!4150)

(assert (=> b!132929 (= e!86668 Unit!4159)))

(declare-fun d!40335 () Bool)

(declare-fun e!86665 () Bool)

(assert (=> d!40335 e!86665))

(declare-fun res!64007 () Bool)

(assert (=> d!40335 (=> (not res!64007) (not e!86665))))

(assert (=> d!40335 (= res!64007 (or (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))))

(declare-fun lt!69410 () ListLongMap!1707)

(assert (=> d!40335 (= lt!69416 lt!69410)))

(declare-fun lt!69411 () Unit!4150)

(assert (=> d!40335 (= lt!69411 e!86668)))

(declare-fun c!24589 () Bool)

(declare-fun e!86659 () Bool)

(assert (=> d!40335 (= c!24589 e!86659)))

(declare-fun res!64006 () Bool)

(assert (=> d!40335 (=> (not res!64006) (not e!86659))))

(assert (=> d!40335 (= res!64006 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun e!86657 () ListLongMap!1707)

(assert (=> d!40335 (= lt!69410 e!86657)))

(declare-fun c!24588 () Bool)

(assert (=> d!40335 (= c!24588 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40335 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40335 (= (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69416)))

(declare-fun call!14668 () ListLongMap!1707)

(declare-fun call!14663 () ListLongMap!1707)

(declare-fun call!14667 () ListLongMap!1707)

(declare-fun bm!14662 () Bool)

(declare-fun c!24591 () Bool)

(assert (=> bm!14662 (= call!14665 (+!170 (ite c!24588 call!14667 (ite c!24591 call!14663 call!14668)) (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!132930 () Bool)

(assert (=> b!132930 (= e!86665 e!86669)))

(declare-fun c!24590 () Bool)

(assert (=> b!132930 (= c!24590 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!132931 () Bool)

(declare-fun e!86663 () Bool)

(assert (=> b!132931 (= e!86663 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132932 () Bool)

(assert (=> b!132932 (= e!86659 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132933 () Bool)

(declare-fun e!86664 () ListLongMap!1707)

(assert (=> b!132933 (= e!86664 call!14668)))

(declare-fun b!132934 () Bool)

(declare-fun res!64001 () Bool)

(assert (=> b!132934 (=> (not res!64001) (not e!86665))))

(declare-fun e!86662 () Bool)

(assert (=> b!132934 (= res!64001 e!86662)))

(declare-fun c!24592 () Bool)

(assert (=> b!132934 (= c!24592 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!132935 () Bool)

(declare-fun e!86660 () Bool)

(assert (=> b!132935 (= e!86662 e!86660)))

(declare-fun res!64004 () Bool)

(assert (=> b!132935 (= res!64004 call!14664)))

(assert (=> b!132935 (=> (not res!64004) (not e!86660))))

(declare-fun b!132936 () Bool)

(declare-fun e!86661 () Bool)

(declare-fun e!86658 () Bool)

(assert (=> b!132936 (= e!86661 e!86658)))

(declare-fun res!64002 () Bool)

(assert (=> b!132936 (=> (not res!64002) (not e!86658))))

(assert (=> b!132936 (= res!64002 (contains!896 lt!69416 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!132936 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!132937 () Bool)

(declare-fun c!24593 () Bool)

(assert (=> b!132937 (= c!24593 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!86667 () ListLongMap!1707)

(assert (=> b!132937 (= e!86667 e!86664)))

(declare-fun b!132938 () Bool)

(assert (=> b!132938 (= e!86662 (not call!14664))))

(declare-fun b!132939 () Bool)

(assert (=> b!132939 (= e!86657 (+!170 call!14665 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun b!132940 () Bool)

(assert (=> b!132940 (= e!86669 e!86666)))

(declare-fun res!64005 () Bool)

(assert (=> b!132940 (= res!64005 call!14666)))

(assert (=> b!132940 (=> (not res!64005) (not e!86666))))

(declare-fun b!132941 () Bool)

(declare-fun lt!69417 () Unit!4150)

(assert (=> b!132941 (= e!86668 lt!69417)))

(declare-fun lt!69412 () ListLongMap!1707)

(assert (=> b!132941 (= lt!69412 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69415 () (_ BitVec 64))

(assert (=> b!132941 (= lt!69415 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69422 () (_ BitVec 64))

(assert (=> b!132941 (= lt!69422 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69426 () Unit!4150)

(assert (=> b!132941 (= lt!69426 (addStillContains!92 lt!69412 lt!69415 (zeroValue!2720 newMap!16) lt!69422))))

(assert (=> b!132941 (contains!896 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))) lt!69422)))

(declare-fun lt!69430 () Unit!4150)

(assert (=> b!132941 (= lt!69430 lt!69426)))

(declare-fun lt!69425 () ListLongMap!1707)

(assert (=> b!132941 (= lt!69425 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69427 () (_ BitVec 64))

(assert (=> b!132941 (= lt!69427 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69413 () (_ BitVec 64))

(assert (=> b!132941 (= lt!69413 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69428 () Unit!4150)

(assert (=> b!132941 (= lt!69428 (addApplyDifferent!92 lt!69425 lt!69427 (minValue!2720 newMap!16) lt!69413))))

(assert (=> b!132941 (= (apply!116 (+!170 lt!69425 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))) lt!69413) (apply!116 lt!69425 lt!69413))))

(declare-fun lt!69419 () Unit!4150)

(assert (=> b!132941 (= lt!69419 lt!69428)))

(declare-fun lt!69420 () ListLongMap!1707)

(assert (=> b!132941 (= lt!69420 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69431 () (_ BitVec 64))

(assert (=> b!132941 (= lt!69431 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69418 () (_ BitVec 64))

(assert (=> b!132941 (= lt!69418 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69429 () Unit!4150)

(assert (=> b!132941 (= lt!69429 (addApplyDifferent!92 lt!69420 lt!69431 (zeroValue!2720 newMap!16) lt!69418))))

(assert (=> b!132941 (= (apply!116 (+!170 lt!69420 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))) lt!69418) (apply!116 lt!69420 lt!69418))))

(declare-fun lt!69414 () Unit!4150)

(assert (=> b!132941 (= lt!69414 lt!69429)))

(declare-fun lt!69424 () ListLongMap!1707)

(assert (=> b!132941 (= lt!69424 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69421 () (_ BitVec 64))

(assert (=> b!132941 (= lt!69421 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69423 () (_ BitVec 64))

(assert (=> b!132941 (= lt!69423 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!132941 (= lt!69417 (addApplyDifferent!92 lt!69424 lt!69421 (minValue!2720 newMap!16) lt!69423))))

(assert (=> b!132941 (= (apply!116 (+!170 lt!69424 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))) lt!69423) (apply!116 lt!69424 lt!69423))))

(declare-fun bm!14663 () Bool)

(assert (=> bm!14663 (= call!14668 call!14663)))

(declare-fun b!132942 () Bool)

(assert (=> b!132942 (= e!86657 e!86667)))

(assert (=> b!132942 (= c!24591 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14664 () Bool)

(assert (=> bm!14664 (= call!14666 (contains!896 lt!69416 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132943 () Bool)

(assert (=> b!132943 (= e!86660 (= (apply!116 lt!69416 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 newMap!16)))))

(declare-fun bm!14665 () Bool)

(assert (=> bm!14665 (= call!14663 call!14667)))

(declare-fun b!132944 () Bool)

(assert (=> b!132944 (= e!86658 (= (apply!116 lt!69416 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132944 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_values!2848 newMap!16))))))

(assert (=> b!132944 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun bm!14666 () Bool)

(assert (=> bm!14666 (= call!14667 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!132945 () Bool)

(assert (=> b!132945 (= e!86667 call!14669)))

(declare-fun b!132946 () Bool)

(assert (=> b!132946 (= e!86664 call!14669)))

(declare-fun b!132947 () Bool)

(declare-fun res!64003 () Bool)

(assert (=> b!132947 (=> (not res!64003) (not e!86665))))

(assert (=> b!132947 (= res!64003 e!86661)))

(declare-fun res!64008 () Bool)

(assert (=> b!132947 (=> res!64008 e!86661)))

(assert (=> b!132947 (= res!64008 (not e!86663))))

(declare-fun res!64009 () Bool)

(assert (=> b!132947 (=> (not res!64009) (not e!86663))))

(assert (=> b!132947 (= res!64009 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (= (and d!40335 c!24588) b!132939))

(assert (= (and d!40335 (not c!24588)) b!132942))

(assert (= (and b!132942 c!24591) b!132945))

(assert (= (and b!132942 (not c!24591)) b!132937))

(assert (= (and b!132937 c!24593) b!132946))

(assert (= (and b!132937 (not c!24593)) b!132933))

(assert (= (or b!132946 b!132933) bm!14663))

(assert (= (or b!132945 bm!14663) bm!14665))

(assert (= (or b!132945 b!132946) bm!14660))

(assert (= (or b!132939 bm!14665) bm!14666))

(assert (= (or b!132939 bm!14660) bm!14662))

(assert (= (and d!40335 res!64006) b!132932))

(assert (= (and d!40335 c!24589) b!132941))

(assert (= (and d!40335 (not c!24589)) b!132929))

(assert (= (and d!40335 res!64007) b!132947))

(assert (= (and b!132947 res!64009) b!132931))

(assert (= (and b!132947 (not res!64008)) b!132936))

(assert (= (and b!132936 res!64002) b!132944))

(assert (= (and b!132947 res!64003) b!132934))

(assert (= (and b!132934 c!24592) b!132935))

(assert (= (and b!132934 (not c!24592)) b!132938))

(assert (= (and b!132935 res!64004) b!132943))

(assert (= (or b!132935 b!132938) bm!14661))

(assert (= (and b!132934 res!64001) b!132930))

(assert (= (and b!132930 c!24590) b!132940))

(assert (= (and b!132930 (not c!24590)) b!132928))

(assert (= (and b!132940 res!64005) b!132927))

(assert (= (or b!132940 b!132928) bm!14664))

(declare-fun b_lambda!5941 () Bool)

(assert (=> (not b_lambda!5941) (not b!132944)))

(declare-fun tb!2433 () Bool)

(declare-fun t!6205 () Bool)

(assert (=> (and b!132488 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16)) t!6205) tb!2433))

(declare-fun result!4009 () Bool)

(assert (=> tb!2433 (= result!4009 tp_is_empty!2877)))

(assert (=> b!132944 t!6205))

(declare-fun b_and!8253 () Bool)

(assert (= b_and!8249 (and (=> t!6205 result!4009) b_and!8253)))

(declare-fun t!6207 () Bool)

(declare-fun tb!2435 () Bool)

(assert (=> (and b!132481 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 newMap!16)) t!6207) tb!2435))

(declare-fun result!4011 () Bool)

(assert (= result!4011 result!4009))

(assert (=> b!132944 t!6207))

(declare-fun b_and!8255 () Bool)

(assert (= b_and!8251 (and (=> t!6207 result!4011) b_and!8255)))

(assert (=> d!40335 m!156571))

(assert (=> b!132936 m!156533))

(assert (=> b!132936 m!156533))

(declare-fun m!156643 () Bool)

(assert (=> b!132936 m!156643))

(declare-fun m!156645 () Bool)

(assert (=> b!132944 m!156645))

(declare-fun m!156647 () Bool)

(assert (=> b!132944 m!156647))

(declare-fun m!156649 () Bool)

(assert (=> b!132944 m!156649))

(assert (=> b!132944 m!156533))

(declare-fun m!156651 () Bool)

(assert (=> b!132944 m!156651))

(assert (=> b!132944 m!156645))

(assert (=> b!132944 m!156533))

(assert (=> b!132944 m!156647))

(declare-fun m!156653 () Bool)

(assert (=> b!132943 m!156653))

(declare-fun m!156655 () Bool)

(assert (=> b!132927 m!156655))

(declare-fun m!156657 () Bool)

(assert (=> b!132941 m!156657))

(declare-fun m!156659 () Bool)

(assert (=> b!132941 m!156659))

(declare-fun m!156661 () Bool)

(assert (=> b!132941 m!156661))

(declare-fun m!156663 () Bool)

(assert (=> b!132941 m!156663))

(declare-fun m!156665 () Bool)

(assert (=> b!132941 m!156665))

(assert (=> b!132941 m!156661))

(declare-fun m!156667 () Bool)

(assert (=> b!132941 m!156667))

(declare-fun m!156669 () Bool)

(assert (=> b!132941 m!156669))

(declare-fun m!156671 () Bool)

(assert (=> b!132941 m!156671))

(declare-fun m!156673 () Bool)

(assert (=> b!132941 m!156673))

(assert (=> b!132941 m!156671))

(assert (=> b!132941 m!156533))

(assert (=> b!132941 m!156657))

(declare-fun m!156675 () Bool)

(assert (=> b!132941 m!156675))

(declare-fun m!156677 () Bool)

(assert (=> b!132941 m!156677))

(declare-fun m!156679 () Bool)

(assert (=> b!132941 m!156679))

(declare-fun m!156681 () Bool)

(assert (=> b!132941 m!156681))

(assert (=> b!132941 m!156667))

(declare-fun m!156683 () Bool)

(assert (=> b!132941 m!156683))

(declare-fun m!156685 () Bool)

(assert (=> b!132941 m!156685))

(declare-fun m!156687 () Bool)

(assert (=> b!132941 m!156687))

(assert (=> b!132932 m!156533))

(assert (=> b!132932 m!156533))

(assert (=> b!132932 m!156557))

(declare-fun m!156689 () Bool)

(assert (=> bm!14664 m!156689))

(declare-fun m!156691 () Bool)

(assert (=> b!132939 m!156691))

(declare-fun m!156693 () Bool)

(assert (=> bm!14662 m!156693))

(assert (=> b!132931 m!156533))

(assert (=> b!132931 m!156533))

(assert (=> b!132931 m!156557))

(assert (=> bm!14666 m!156665))

(declare-fun m!156695 () Bool)

(assert (=> bm!14661 m!156695))

(assert (=> b!132736 d!40335))

(declare-fun b!132960 () Bool)

(declare-fun e!86678 () SeekEntryResult!285)

(declare-fun lt!69439 () SeekEntryResult!285)

(assert (=> b!132960 (= e!86678 (MissingZero!285 (index!3302 lt!69439)))))

(declare-fun b!132961 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4780 (_ BitVec 32)) SeekEntryResult!285)

(assert (=> b!132961 (= e!86678 (seekKeyOrZeroReturnVacant!0 (x!15602 lt!69439) (index!3302 lt!69439) (index!3302 lt!69439) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun b!132962 () Bool)

(declare-fun c!24600 () Bool)

(declare-fun lt!69440 () (_ BitVec 64))

(assert (=> b!132962 (= c!24600 (= lt!69440 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!86677 () SeekEntryResult!285)

(assert (=> b!132962 (= e!86677 e!86678)))

(declare-fun b!132963 () Bool)

(declare-fun e!86676 () SeekEntryResult!285)

(assert (=> b!132963 (= e!86676 Undefined!285)))

(declare-fun b!132964 () Bool)

(assert (=> b!132964 (= e!86676 e!86677)))

(assert (=> b!132964 (= lt!69440 (select (arr!2260 (_keys!4614 newMap!16)) (index!3302 lt!69439)))))

(declare-fun c!24602 () Bool)

(assert (=> b!132964 (= c!24602 (= lt!69440 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun lt!69438 () SeekEntryResult!285)

(declare-fun d!40337 () Bool)

(assert (=> d!40337 (and (or ((_ is Undefined!285) lt!69438) (not ((_ is Found!285) lt!69438)) (and (bvsge (index!3301 lt!69438) #b00000000000000000000000000000000) (bvslt (index!3301 lt!69438) (size!2529 (_keys!4614 newMap!16))))) (or ((_ is Undefined!285) lt!69438) ((_ is Found!285) lt!69438) (not ((_ is MissingZero!285) lt!69438)) (and (bvsge (index!3300 lt!69438) #b00000000000000000000000000000000) (bvslt (index!3300 lt!69438) (size!2529 (_keys!4614 newMap!16))))) (or ((_ is Undefined!285) lt!69438) ((_ is Found!285) lt!69438) ((_ is MissingZero!285) lt!69438) (not ((_ is MissingVacant!285) lt!69438)) (and (bvsge (index!3303 lt!69438) #b00000000000000000000000000000000) (bvslt (index!3303 lt!69438) (size!2529 (_keys!4614 newMap!16))))) (or ((_ is Undefined!285) lt!69438) (ite ((_ is Found!285) lt!69438) (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69438)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite ((_ is MissingZero!285) lt!69438) (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3300 lt!69438)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!285) lt!69438) (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3303 lt!69438)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40337 (= lt!69438 e!86676)))

(declare-fun c!24601 () Bool)

(assert (=> d!40337 (= c!24601 (and ((_ is Intermediate!285) lt!69439) (undefined!1097 lt!69439)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4780 (_ BitVec 32)) SeekEntryResult!285)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!40337 (= lt!69439 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (mask!7165 newMap!16)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(assert (=> d!40337 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40337 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)) lt!69438)))

(declare-fun b!132965 () Bool)

(assert (=> b!132965 (= e!86677 (Found!285 (index!3302 lt!69439)))))

(assert (= (and d!40337 c!24601) b!132963))

(assert (= (and d!40337 (not c!24601)) b!132964))

(assert (= (and b!132964 c!24602) b!132965))

(assert (= (and b!132964 (not c!24602)) b!132962))

(assert (= (and b!132962 c!24600) b!132960))

(assert (= (and b!132962 (not c!24600)) b!132961))

(assert (=> b!132961 m!156287))

(declare-fun m!156697 () Bool)

(assert (=> b!132961 m!156697))

(declare-fun m!156699 () Bool)

(assert (=> b!132964 m!156699))

(declare-fun m!156701 () Bool)

(assert (=> d!40337 m!156701))

(assert (=> d!40337 m!156287))

(declare-fun m!156703 () Bool)

(assert (=> d!40337 m!156703))

(declare-fun m!156705 () Bool)

(assert (=> d!40337 m!156705))

(declare-fun m!156707 () Bool)

(assert (=> d!40337 m!156707))

(assert (=> d!40337 m!156571))

(declare-fun m!156709 () Bool)

(assert (=> d!40337 m!156709))

(assert (=> d!40337 m!156287))

(assert (=> d!40337 m!156701))

(assert (=> b!132722 d!40337))

(declare-fun d!40339 () Bool)

(assert (=> d!40339 (= (get!1490 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132765 d!40339))

(declare-fun d!40341 () Bool)

(assert (=> d!40341 (= (apply!116 lt!69221 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1491 (getValueByKey!171 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5490 () Bool)

(assert (= bs!5490 d!40341))

(assert (=> bs!5490 m!156357))

(declare-fun m!156711 () Bool)

(assert (=> bs!5490 m!156711))

(assert (=> bs!5490 m!156711))

(declare-fun m!156713 () Bool)

(assert (=> bs!5490 m!156713))

(assert (=> b!132621 d!40341))

(declare-fun d!40343 () Bool)

(declare-fun c!24603 () Bool)

(assert (=> d!40343 (= c!24603 ((_ is ValueCellFull!1095) (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!86679 () V!3483)

(assert (=> d!40343 (= (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!86679)))

(declare-fun b!132966 () Bool)

(assert (=> b!132966 (= e!86679 (get!1489 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!132967 () Bool)

(assert (=> b!132967 (= e!86679 (get!1490 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40343 c!24603) b!132966))

(assert (= (and d!40343 (not c!24603)) b!132967))

(assert (=> b!132966 m!156361))

(assert (=> b!132966 m!156283))

(declare-fun m!156715 () Bool)

(assert (=> b!132966 m!156715))

(assert (=> b!132967 m!156361))

(assert (=> b!132967 m!156283))

(declare-fun m!156717 () Bool)

(assert (=> b!132967 m!156717))

(assert (=> b!132621 d!40343))

(declare-fun d!40345 () Bool)

(assert (=> d!40345 (= (apply!116 lt!69221 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5491 () Bool)

(assert (= bs!5491 d!40345))

(declare-fun m!156719 () Bool)

(assert (=> bs!5491 m!156719))

(assert (=> bs!5491 m!156719))

(declare-fun m!156721 () Bool)

(assert (=> bs!5491 m!156721))

(assert (=> b!132620 d!40345))

(assert (=> b!132738 d!40335))

(declare-fun d!40347 () Bool)

(declare-fun e!86680 () Bool)

(assert (=> d!40347 e!86680))

(declare-fun res!64011 () Bool)

(assert (=> d!40347 (=> (not res!64011) (not e!86680))))

(declare-fun lt!69442 () ListLongMap!1707)

(assert (=> d!40347 (= res!64011 (contains!896 lt!69442 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun lt!69444 () List!1735)

(assert (=> d!40347 (= lt!69442 (ListLongMap!1708 lt!69444))))

(declare-fun lt!69443 () Unit!4150)

(declare-fun lt!69441 () Unit!4150)

(assert (=> d!40347 (= lt!69443 lt!69441)))

(assert (=> d!40347 (= (getValueByKey!171 lt!69444 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40347 (= lt!69441 (lemmaContainsTupThenGetReturnValue!88 lt!69444 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40347 (= lt!69444 (insertStrictlySorted!90 (toList!869 call!14566) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40347 (= (+!170 call!14566 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69442)))

(declare-fun b!132968 () Bool)

(declare-fun res!64010 () Bool)

(assert (=> b!132968 (=> (not res!64010) (not e!86680))))

(assert (=> b!132968 (= res!64010 (= (getValueByKey!171 (toList!869 lt!69442) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!132969 () Bool)

(assert (=> b!132969 (= e!86680 (contains!898 (toList!869 lt!69442) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(assert (= (and d!40347 res!64011) b!132968))

(assert (= (and b!132968 res!64010) b!132969))

(declare-fun m!156723 () Bool)

(assert (=> d!40347 m!156723))

(declare-fun m!156725 () Bool)

(assert (=> d!40347 m!156725))

(declare-fun m!156727 () Bool)

(assert (=> d!40347 m!156727))

(declare-fun m!156729 () Bool)

(assert (=> d!40347 m!156729))

(declare-fun m!156731 () Bool)

(assert (=> b!132968 m!156731))

(declare-fun m!156733 () Bool)

(assert (=> b!132969 m!156733))

(assert (=> b!132616 d!40347))

(declare-fun d!40349 () Bool)

(assert (=> d!40349 (= (+!170 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69304 (zeroValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69447 () Unit!4150)

(declare-fun choose!827 (array!4780 array!4782 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 V!3483 Int) Unit!4150)

(assert (=> d!40349 (= lt!69447 (choose!827 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) lt!69304 (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)))))

(assert (=> d!40349 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40349 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) lt!69304 (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)) lt!69447)))

(declare-fun bs!5492 () Bool)

(assert (= bs!5492 d!40349))

(assert (=> bs!5492 m!156355))

(declare-fun m!156735 () Bool)

(assert (=> bs!5492 m!156735))

(assert (=> bs!5492 m!156285))

(declare-fun m!156737 () Bool)

(assert (=> bs!5492 m!156737))

(assert (=> bs!5492 m!156571))

(assert (=> bs!5492 m!156355))

(assert (=> bs!5492 m!156285))

(declare-fun m!156739 () Bool)

(assert (=> bs!5492 m!156739))

(assert (=> b!132758 d!40349))

(declare-fun d!40351 () Bool)

(declare-fun e!86681 () Bool)

(assert (=> d!40351 e!86681))

(declare-fun res!64013 () Bool)

(assert (=> d!40351 (=> (not res!64013) (not e!86681))))

(declare-fun lt!69449 () ListLongMap!1707)

(assert (=> d!40351 (= res!64013 (contains!896 lt!69449 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun lt!69451 () List!1735)

(assert (=> d!40351 (= lt!69449 (ListLongMap!1708 lt!69451))))

(declare-fun lt!69450 () Unit!4150)

(declare-fun lt!69448 () Unit!4150)

(assert (=> d!40351 (= lt!69450 lt!69448)))

(assert (=> d!40351 (= (getValueByKey!171 lt!69451 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40351 (= lt!69448 (lemmaContainsTupThenGetReturnValue!88 lt!69451 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40351 (= lt!69451 (insertStrictlySorted!90 (toList!869 lt!69225) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40351 (= (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69449)))

(declare-fun b!132970 () Bool)

(declare-fun res!64012 () Bool)

(assert (=> b!132970 (=> (not res!64012) (not e!86681))))

(assert (=> b!132970 (= res!64012 (= (getValueByKey!171 (toList!869 lt!69449) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!132971 () Bool)

(assert (=> b!132971 (= e!86681 (contains!898 (toList!869 lt!69449) (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(assert (= (and d!40351 res!64013) b!132970))

(assert (= (and b!132970 res!64012) b!132971))

(declare-fun m!156741 () Bool)

(assert (=> d!40351 m!156741))

(declare-fun m!156743 () Bool)

(assert (=> d!40351 m!156743))

(declare-fun m!156745 () Bool)

(assert (=> d!40351 m!156745))

(declare-fun m!156747 () Bool)

(assert (=> d!40351 m!156747))

(declare-fun m!156749 () Bool)

(assert (=> b!132970 m!156749))

(declare-fun m!156751 () Bool)

(assert (=> b!132971 m!156751))

(assert (=> b!132618 d!40351))

(assert (=> b!132618 d!40329))

(declare-fun d!40353 () Bool)

(assert (=> d!40353 (= (apply!116 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69228) (apply!116 lt!69229 lt!69228))))

(declare-fun lt!69454 () Unit!4150)

(declare-fun choose!828 (ListLongMap!1707 (_ BitVec 64) V!3483 (_ BitVec 64)) Unit!4150)

(assert (=> d!40353 (= lt!69454 (choose!828 lt!69229 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))) lt!69228))))

(declare-fun e!86684 () Bool)

(assert (=> d!40353 e!86684))

(declare-fun res!64016 () Bool)

(assert (=> d!40353 (=> (not res!64016) (not e!86684))))

(assert (=> d!40353 (= res!64016 (contains!896 lt!69229 lt!69228))))

(assert (=> d!40353 (= (addApplyDifferent!92 lt!69229 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))) lt!69228) lt!69454)))

(declare-fun b!132975 () Bool)

(assert (=> b!132975 (= e!86684 (not (= lt!69228 lt!69226)))))

(assert (= (and d!40353 res!64016) b!132975))

(assert (=> d!40353 m!156391))

(assert (=> d!40353 m!156375))

(assert (=> d!40353 m!156377))

(declare-fun m!156753 () Bool)

(assert (=> d!40353 m!156753))

(declare-fun m!156755 () Bool)

(assert (=> d!40353 m!156755))

(assert (=> d!40353 m!156375))

(assert (=> b!132618 d!40353))

(declare-fun d!40355 () Bool)

(assert (=> d!40355 (contains!896 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69227)))

(declare-fun lt!69457 () Unit!4150)

(declare-fun choose!829 (ListLongMap!1707 (_ BitVec 64) V!3483 (_ BitVec 64)) Unit!4150)

(assert (=> d!40355 (= lt!69457 (choose!829 lt!69217 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) lt!69227))))

(assert (=> d!40355 (contains!896 lt!69217 lt!69227)))

(assert (=> d!40355 (= (addStillContains!92 lt!69217 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) lt!69227) lt!69457)))

(declare-fun bs!5493 () Bool)

(assert (= bs!5493 d!40355))

(assert (=> bs!5493 m!156381))

(assert (=> bs!5493 m!156381))

(assert (=> bs!5493 m!156397))

(declare-fun m!156757 () Bool)

(assert (=> bs!5493 m!156757))

(declare-fun m!156759 () Bool)

(assert (=> bs!5493 m!156759))

(assert (=> b!132618 d!40355))

(declare-fun d!40357 () Bool)

(assert (=> d!40357 (= (apply!116 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69228) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69228)))))

(declare-fun bs!5494 () Bool)

(assert (= bs!5494 d!40357))

(declare-fun m!156761 () Bool)

(assert (=> bs!5494 m!156761))

(assert (=> bs!5494 m!156761))

(declare-fun m!156763 () Bool)

(assert (=> bs!5494 m!156763))

(assert (=> b!132618 d!40357))

(declare-fun d!40359 () Bool)

(declare-fun e!86685 () Bool)

(assert (=> d!40359 e!86685))

(declare-fun res!64018 () Bool)

(assert (=> d!40359 (=> (not res!64018) (not e!86685))))

(declare-fun lt!69459 () ListLongMap!1707)

(assert (=> d!40359 (= res!64018 (contains!896 lt!69459 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun lt!69461 () List!1735)

(assert (=> d!40359 (= lt!69459 (ListLongMap!1708 lt!69461))))

(declare-fun lt!69460 () Unit!4150)

(declare-fun lt!69458 () Unit!4150)

(assert (=> d!40359 (= lt!69460 lt!69458)))

(assert (=> d!40359 (= (getValueByKey!171 lt!69461 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40359 (= lt!69458 (lemmaContainsTupThenGetReturnValue!88 lt!69461 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40359 (= lt!69461 (insertStrictlySorted!90 (toList!869 lt!69229) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40359 (= (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69459)))

(declare-fun b!132977 () Bool)

(declare-fun res!64017 () Bool)

(assert (=> b!132977 (=> (not res!64017) (not e!86685))))

(assert (=> b!132977 (= res!64017 (= (getValueByKey!171 (toList!869 lt!69459) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!132978 () Bool)

(assert (=> b!132978 (= e!86685 (contains!898 (toList!869 lt!69459) (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(assert (= (and d!40359 res!64018) b!132977))

(assert (= (and b!132977 res!64017) b!132978))

(declare-fun m!156765 () Bool)

(assert (=> d!40359 m!156765))

(declare-fun m!156767 () Bool)

(assert (=> d!40359 m!156767))

(declare-fun m!156769 () Bool)

(assert (=> d!40359 m!156769))

(declare-fun m!156771 () Bool)

(assert (=> d!40359 m!156771))

(declare-fun m!156773 () Bool)

(assert (=> b!132977 m!156773))

(declare-fun m!156775 () Bool)

(assert (=> b!132978 m!156775))

(assert (=> b!132618 d!40359))

(declare-fun d!40361 () Bool)

(assert (=> d!40361 (= (apply!116 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69223) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69223)))))

(declare-fun bs!5495 () Bool)

(assert (= bs!5495 d!40361))

(declare-fun m!156777 () Bool)

(assert (=> bs!5495 m!156777))

(assert (=> bs!5495 m!156777))

(declare-fun m!156779 () Bool)

(assert (=> bs!5495 m!156779))

(assert (=> b!132618 d!40361))

(declare-fun d!40363 () Bool)

(assert (=> d!40363 (= (apply!116 lt!69230 lt!69218) (get!1491 (getValueByKey!171 (toList!869 lt!69230) lt!69218)))))

(declare-fun bs!5496 () Bool)

(assert (= bs!5496 d!40363))

(declare-fun m!156781 () Bool)

(assert (=> bs!5496 m!156781))

(assert (=> bs!5496 m!156781))

(declare-fun m!156783 () Bool)

(assert (=> bs!5496 m!156783))

(assert (=> b!132618 d!40363))

(declare-fun d!40365 () Bool)

(declare-fun e!86686 () Bool)

(assert (=> d!40365 e!86686))

(declare-fun res!64020 () Bool)

(assert (=> d!40365 (=> (not res!64020) (not e!86686))))

(declare-fun lt!69463 () ListLongMap!1707)

(assert (=> d!40365 (= res!64020 (contains!896 lt!69463 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun lt!69465 () List!1735)

(assert (=> d!40365 (= lt!69463 (ListLongMap!1708 lt!69465))))

(declare-fun lt!69464 () Unit!4150)

(declare-fun lt!69462 () Unit!4150)

(assert (=> d!40365 (= lt!69464 lt!69462)))

(assert (=> d!40365 (= (getValueByKey!171 lt!69465 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40365 (= lt!69462 (lemmaContainsTupThenGetReturnValue!88 lt!69465 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40365 (= lt!69465 (insertStrictlySorted!90 (toList!869 lt!69230) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40365 (= (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69463)))

(declare-fun b!132979 () Bool)

(declare-fun res!64019 () Bool)

(assert (=> b!132979 (=> (not res!64019) (not e!86686))))

(assert (=> b!132979 (= res!64019 (= (getValueByKey!171 (toList!869 lt!69463) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!132980 () Bool)

(assert (=> b!132980 (= e!86686 (contains!898 (toList!869 lt!69463) (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(assert (= (and d!40365 res!64020) b!132979))

(assert (= (and b!132979 res!64019) b!132980))

(declare-fun m!156785 () Bool)

(assert (=> d!40365 m!156785))

(declare-fun m!156787 () Bool)

(assert (=> d!40365 m!156787))

(declare-fun m!156789 () Bool)

(assert (=> d!40365 m!156789))

(declare-fun m!156791 () Bool)

(assert (=> d!40365 m!156791))

(declare-fun m!156793 () Bool)

(assert (=> b!132979 m!156793))

(declare-fun m!156795 () Bool)

(assert (=> b!132980 m!156795))

(assert (=> b!132618 d!40365))

(declare-fun d!40367 () Bool)

(declare-fun e!86687 () Bool)

(assert (=> d!40367 e!86687))

(declare-fun res!64021 () Bool)

(assert (=> d!40367 (=> res!64021 e!86687)))

(declare-fun lt!69466 () Bool)

(assert (=> d!40367 (= res!64021 (not lt!69466))))

(declare-fun lt!69468 () Bool)

(assert (=> d!40367 (= lt!69466 lt!69468)))

(declare-fun lt!69467 () Unit!4150)

(declare-fun e!86688 () Unit!4150)

(assert (=> d!40367 (= lt!69467 e!86688)))

(declare-fun c!24604 () Bool)

(assert (=> d!40367 (= c!24604 lt!69468)))

(assert (=> d!40367 (= lt!69468 (containsKey!175 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69227))))

(assert (=> d!40367 (= (contains!896 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69227) lt!69466)))

(declare-fun b!132981 () Bool)

(declare-fun lt!69469 () Unit!4150)

(assert (=> b!132981 (= e!86688 lt!69469)))

(assert (=> b!132981 (= lt!69469 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69227))))

(assert (=> b!132981 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69227))))

(declare-fun b!132982 () Bool)

(declare-fun Unit!4160 () Unit!4150)

(assert (=> b!132982 (= e!86688 Unit!4160)))

(declare-fun b!132983 () Bool)

(assert (=> b!132983 (= e!86687 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69227)))))

(assert (= (and d!40367 c!24604) b!132981))

(assert (= (and d!40367 (not c!24604)) b!132982))

(assert (= (and d!40367 (not res!64021)) b!132983))

(declare-fun m!156797 () Bool)

(assert (=> d!40367 m!156797))

(declare-fun m!156799 () Bool)

(assert (=> b!132981 m!156799))

(declare-fun m!156801 () Bool)

(assert (=> b!132981 m!156801))

(assert (=> b!132981 m!156801))

(declare-fun m!156803 () Bool)

(assert (=> b!132981 m!156803))

(assert (=> b!132983 m!156801))

(assert (=> b!132983 m!156801))

(assert (=> b!132983 m!156803))

(assert (=> b!132618 d!40367))

(declare-fun d!40369 () Bool)

(assert (=> d!40369 (= (apply!116 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69223) (apply!116 lt!69225 lt!69223))))

(declare-fun lt!69470 () Unit!4150)

(assert (=> d!40369 (= lt!69470 (choose!828 lt!69225 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) lt!69223))))

(declare-fun e!86689 () Bool)

(assert (=> d!40369 e!86689))

(declare-fun res!64022 () Bool)

(assert (=> d!40369 (=> (not res!64022) (not e!86689))))

(assert (=> d!40369 (= res!64022 (contains!896 lt!69225 lt!69223))))

(assert (=> d!40369 (= (addApplyDifferent!92 lt!69225 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) lt!69223) lt!69470)))

(declare-fun b!132984 () Bool)

(assert (=> b!132984 (= e!86689 (not (= lt!69223 lt!69236)))))

(assert (= (and d!40369 res!64022) b!132984))

(assert (=> d!40369 m!156401))

(assert (=> d!40369 m!156371))

(assert (=> d!40369 m!156389))

(declare-fun m!156805 () Bool)

(assert (=> d!40369 m!156805))

(declare-fun m!156807 () Bool)

(assert (=> d!40369 m!156807))

(assert (=> d!40369 m!156371))

(assert (=> b!132618 d!40369))

(declare-fun d!40371 () Bool)

(declare-fun e!86690 () Bool)

(assert (=> d!40371 e!86690))

(declare-fun res!64024 () Bool)

(assert (=> d!40371 (=> (not res!64024) (not e!86690))))

(declare-fun lt!69472 () ListLongMap!1707)

(assert (=> d!40371 (= res!64024 (contains!896 lt!69472 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun lt!69474 () List!1735)

(assert (=> d!40371 (= lt!69472 (ListLongMap!1708 lt!69474))))

(declare-fun lt!69473 () Unit!4150)

(declare-fun lt!69471 () Unit!4150)

(assert (=> d!40371 (= lt!69473 lt!69471)))

(assert (=> d!40371 (= (getValueByKey!171 lt!69474 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40371 (= lt!69471 (lemmaContainsTupThenGetReturnValue!88 lt!69474 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40371 (= lt!69474 (insertStrictlySorted!90 (toList!869 lt!69217) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40371 (= (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69472)))

(declare-fun b!132985 () Bool)

(declare-fun res!64023 () Bool)

(assert (=> b!132985 (=> (not res!64023) (not e!86690))))

(assert (=> b!132985 (= res!64023 (= (getValueByKey!171 (toList!869 lt!69472) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!132986 () Bool)

(assert (=> b!132986 (= e!86690 (contains!898 (toList!869 lt!69472) (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(assert (= (and d!40371 res!64024) b!132985))

(assert (= (and b!132985 res!64023) b!132986))

(declare-fun m!156809 () Bool)

(assert (=> d!40371 m!156809))

(declare-fun m!156811 () Bool)

(assert (=> d!40371 m!156811))

(declare-fun m!156813 () Bool)

(assert (=> d!40371 m!156813))

(declare-fun m!156815 () Bool)

(assert (=> d!40371 m!156815))

(declare-fun m!156817 () Bool)

(assert (=> b!132985 m!156817))

(declare-fun m!156819 () Bool)

(assert (=> b!132986 m!156819))

(assert (=> b!132618 d!40371))

(declare-fun d!40373 () Bool)

(assert (=> d!40373 (= (apply!116 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69218) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69218)))))

(declare-fun bs!5497 () Bool)

(assert (= bs!5497 d!40373))

(declare-fun m!156821 () Bool)

(assert (=> bs!5497 m!156821))

(assert (=> bs!5497 m!156821))

(declare-fun m!156823 () Bool)

(assert (=> bs!5497 m!156823))

(assert (=> b!132618 d!40373))

(declare-fun d!40375 () Bool)

(assert (=> d!40375 (= (apply!116 lt!69225 lt!69223) (get!1491 (getValueByKey!171 (toList!869 lt!69225) lt!69223)))))

(declare-fun bs!5498 () Bool)

(assert (= bs!5498 d!40375))

(declare-fun m!156825 () Bool)

(assert (=> bs!5498 m!156825))

(assert (=> bs!5498 m!156825))

(declare-fun m!156827 () Bool)

(assert (=> bs!5498 m!156827))

(assert (=> b!132618 d!40375))

(declare-fun d!40377 () Bool)

(assert (=> d!40377 (= (apply!116 lt!69229 lt!69228) (get!1491 (getValueByKey!171 (toList!869 lt!69229) lt!69228)))))

(declare-fun bs!5499 () Bool)

(assert (= bs!5499 d!40377))

(declare-fun m!156829 () Bool)

(assert (=> bs!5499 m!156829))

(assert (=> bs!5499 m!156829))

(declare-fun m!156831 () Bool)

(assert (=> bs!5499 m!156831))

(assert (=> b!132618 d!40377))

(declare-fun d!40379 () Bool)

(assert (=> d!40379 (= (apply!116 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69218) (apply!116 lt!69230 lt!69218))))

(declare-fun lt!69475 () Unit!4150)

(assert (=> d!40379 (= lt!69475 (choose!828 lt!69230 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))) lt!69218))))

(declare-fun e!86691 () Bool)

(assert (=> d!40379 e!86691))

(declare-fun res!64025 () Bool)

(assert (=> d!40379 (=> (not res!64025) (not e!86691))))

(assert (=> d!40379 (= res!64025 (contains!896 lt!69230 lt!69218))))

(assert (=> d!40379 (= (addApplyDifferent!92 lt!69230 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))) lt!69218) lt!69475)))

(declare-fun b!132987 () Bool)

(assert (=> b!132987 (= e!86691 (not (= lt!69218 lt!69232)))))

(assert (= (and d!40379 res!64025) b!132987))

(assert (=> d!40379 m!156399))

(assert (=> d!40379 m!156385))

(assert (=> d!40379 m!156387))

(declare-fun m!156833 () Bool)

(assert (=> d!40379 m!156833))

(declare-fun m!156835 () Bool)

(assert (=> d!40379 m!156835))

(assert (=> d!40379 m!156385))

(assert (=> b!132618 d!40379))

(declare-fun d!40381 () Bool)

(declare-fun e!86694 () Bool)

(assert (=> d!40381 e!86694))

(declare-fun res!64030 () Bool)

(assert (=> d!40381 (=> (not res!64030) (not e!86694))))

(declare-fun lt!69480 () SeekEntryResult!285)

(assert (=> d!40381 (= res!64030 ((_ is Found!285) lt!69480))))

(assert (=> d!40381 (= lt!69480 (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun lt!69481 () Unit!4150)

(declare-fun choose!830 (array!4780 array!4782 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 64) Int) Unit!4150)

(assert (=> d!40381 (= lt!69481 (choose!830 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)))))

(assert (=> d!40381 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40381 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)) lt!69481)))

(declare-fun b!132992 () Bool)

(declare-fun res!64031 () Bool)

(assert (=> b!132992 (=> (not res!64031) (not e!86694))))

(assert (=> b!132992 (= res!64031 (inRange!0 (index!3301 lt!69480) (mask!7165 newMap!16)))))

(declare-fun b!132993 () Bool)

(assert (=> b!132993 (= e!86694 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69480)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> b!132993 (and (bvsge (index!3301 lt!69480) #b00000000000000000000000000000000) (bvslt (index!3301 lt!69480) (size!2529 (_keys!4614 newMap!16))))))

(assert (= (and d!40381 res!64030) b!132992))

(assert (= (and b!132992 res!64031) b!132993))

(assert (=> d!40381 m!156287))

(assert (=> d!40381 m!156445))

(assert (=> d!40381 m!156287))

(declare-fun m!156837 () Bool)

(assert (=> d!40381 m!156837))

(assert (=> d!40381 m!156571))

(declare-fun m!156839 () Bool)

(assert (=> b!132992 m!156839))

(declare-fun m!156841 () Bool)

(assert (=> b!132993 m!156841))

(assert (=> bm!14633 d!40381))

(declare-fun bm!14667 () Bool)

(declare-fun call!14676 () ListLongMap!1707)

(declare-fun call!14672 () ListLongMap!1707)

(assert (=> bm!14667 (= call!14676 call!14672)))

(declare-fun b!132994 () Bool)

(declare-fun e!86704 () Bool)

(declare-fun lt!69488 () ListLongMap!1707)

(assert (=> b!132994 (= e!86704 (= (apply!116 lt!69488 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))

(declare-fun bm!14668 () Bool)

(declare-fun call!14671 () Bool)

(assert (=> bm!14668 (= call!14671 (contains!896 lt!69488 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132995 () Bool)

(declare-fun e!86707 () Bool)

(declare-fun call!14673 () Bool)

(assert (=> b!132995 (= e!86707 (not call!14673))))

(declare-fun b!132996 () Bool)

(declare-fun e!86706 () Unit!4150)

(declare-fun Unit!4161 () Unit!4150)

(assert (=> b!132996 (= e!86706 Unit!4161)))

(declare-fun d!40383 () Bool)

(declare-fun e!86703 () Bool)

(assert (=> d!40383 e!86703))

(declare-fun res!64038 () Bool)

(assert (=> d!40383 (=> (not res!64038) (not e!86703))))

(assert (=> d!40383 (= res!64038 (or (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))))

(declare-fun lt!69482 () ListLongMap!1707)

(assert (=> d!40383 (= lt!69488 lt!69482)))

(declare-fun lt!69483 () Unit!4150)

(assert (=> d!40383 (= lt!69483 e!86706)))

(declare-fun c!24606 () Bool)

(declare-fun e!86697 () Bool)

(assert (=> d!40383 (= c!24606 e!86697)))

(declare-fun res!64037 () Bool)

(assert (=> d!40383 (=> (not res!64037) (not e!86697))))

(assert (=> d!40383 (= res!64037 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun e!86695 () ListLongMap!1707)

(assert (=> d!40383 (= lt!69482 e!86695)))

(declare-fun c!24605 () Bool)

(assert (=> d!40383 (= c!24605 (and (not (= (bvand (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40383 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40383 (= (getCurrentListMap!540 (_keys!4614 newMap!16) (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) (zeroValue!2720 newMap!16) (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69488)))

(declare-fun c!24608 () Bool)

(declare-fun call!14670 () ListLongMap!1707)

(declare-fun bm!14669 () Bool)

(declare-fun call!14675 () ListLongMap!1707)

(declare-fun call!14674 () ListLongMap!1707)

(assert (=> bm!14669 (= call!14672 (+!170 (ite c!24605 call!14674 (ite c!24608 call!14670 call!14675)) (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!132997 () Bool)

(assert (=> b!132997 (= e!86703 e!86707)))

(declare-fun c!24607 () Bool)

(assert (=> b!132997 (= c!24607 (not (= (bvand (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!132998 () Bool)

(declare-fun e!86701 () Bool)

(assert (=> b!132998 (= e!86701 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132999 () Bool)

(assert (=> b!132999 (= e!86697 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133000 () Bool)

(declare-fun e!86702 () ListLongMap!1707)

(assert (=> b!133000 (= e!86702 call!14675)))

(declare-fun b!133001 () Bool)

(declare-fun res!64032 () Bool)

(assert (=> b!133001 (=> (not res!64032) (not e!86703))))

(declare-fun e!86700 () Bool)

(assert (=> b!133001 (= res!64032 e!86700)))

(declare-fun c!24609 () Bool)

(assert (=> b!133001 (= c!24609 (not (= (bvand (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133002 () Bool)

(declare-fun e!86698 () Bool)

(assert (=> b!133002 (= e!86700 e!86698)))

(declare-fun res!64035 () Bool)

(assert (=> b!133002 (= res!64035 call!14671)))

(assert (=> b!133002 (=> (not res!64035) (not e!86698))))

(declare-fun b!133003 () Bool)

(declare-fun e!86699 () Bool)

(declare-fun e!86696 () Bool)

(assert (=> b!133003 (= e!86699 e!86696)))

(declare-fun res!64033 () Bool)

(assert (=> b!133003 (=> (not res!64033) (not e!86696))))

(assert (=> b!133003 (= res!64033 (contains!896 lt!69488 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133003 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!133004 () Bool)

(declare-fun c!24610 () Bool)

(assert (=> b!133004 (= c!24610 (and (not (= (bvand (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!86705 () ListLongMap!1707)

(assert (=> b!133004 (= e!86705 e!86702)))

(declare-fun b!133005 () Bool)

(assert (=> b!133005 (= e!86700 (not call!14671))))

(declare-fun b!133006 () Bool)

(assert (=> b!133006 (= e!86695 (+!170 call!14672 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(declare-fun b!133007 () Bool)

(assert (=> b!133007 (= e!86707 e!86704)))

(declare-fun res!64036 () Bool)

(assert (=> b!133007 (= res!64036 call!14673)))

(assert (=> b!133007 (=> (not res!64036) (not e!86704))))

(declare-fun b!133008 () Bool)

(declare-fun lt!69489 () Unit!4150)

(assert (=> b!133008 (= e!86706 lt!69489)))

(declare-fun lt!69484 () ListLongMap!1707)

(assert (=> b!133008 (= lt!69484 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) (zeroValue!2720 newMap!16) (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69487 () (_ BitVec 64))

(assert (=> b!133008 (= lt!69487 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69494 () (_ BitVec 64))

(assert (=> b!133008 (= lt!69494 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69498 () Unit!4150)

(assert (=> b!133008 (= lt!69498 (addStillContains!92 lt!69484 lt!69487 (zeroValue!2720 newMap!16) lt!69494))))

(assert (=> b!133008 (contains!896 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))) lt!69494)))

(declare-fun lt!69502 () Unit!4150)

(assert (=> b!133008 (= lt!69502 lt!69498)))

(declare-fun lt!69497 () ListLongMap!1707)

(assert (=> b!133008 (= lt!69497 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) (zeroValue!2720 newMap!16) (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69499 () (_ BitVec 64))

(assert (=> b!133008 (= lt!69499 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69485 () (_ BitVec 64))

(assert (=> b!133008 (= lt!69485 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69500 () Unit!4150)

(assert (=> b!133008 (= lt!69500 (addApplyDifferent!92 lt!69497 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) lt!69485))))

(assert (=> b!133008 (= (apply!116 (+!170 lt!69497 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69485) (apply!116 lt!69497 lt!69485))))

(declare-fun lt!69491 () Unit!4150)

(assert (=> b!133008 (= lt!69491 lt!69500)))

(declare-fun lt!69492 () ListLongMap!1707)

(assert (=> b!133008 (= lt!69492 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) (zeroValue!2720 newMap!16) (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69503 () (_ BitVec 64))

(assert (=> b!133008 (= lt!69503 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69490 () (_ BitVec 64))

(assert (=> b!133008 (= lt!69490 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69501 () Unit!4150)

(assert (=> b!133008 (= lt!69501 (addApplyDifferent!92 lt!69492 lt!69503 (zeroValue!2720 newMap!16) lt!69490))))

(assert (=> b!133008 (= (apply!116 (+!170 lt!69492 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))) lt!69490) (apply!116 lt!69492 lt!69490))))

(declare-fun lt!69486 () Unit!4150)

(assert (=> b!133008 (= lt!69486 lt!69501)))

(declare-fun lt!69496 () ListLongMap!1707)

(assert (=> b!133008 (= lt!69496 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) (zeroValue!2720 newMap!16) (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69493 () (_ BitVec 64))

(assert (=> b!133008 (= lt!69493 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69495 () (_ BitVec 64))

(assert (=> b!133008 (= lt!69495 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133008 (= lt!69489 (addApplyDifferent!92 lt!69496 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) lt!69495))))

(assert (=> b!133008 (= (apply!116 (+!170 lt!69496 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69495) (apply!116 lt!69496 lt!69495))))

(declare-fun bm!14670 () Bool)

(assert (=> bm!14670 (= call!14675 call!14670)))

(declare-fun b!133009 () Bool)

(assert (=> b!133009 (= e!86695 e!86705)))

(assert (=> b!133009 (= c!24608 (and (not (= (bvand (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14671 () Bool)

(assert (=> bm!14671 (= call!14673 (contains!896 lt!69488 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133010 () Bool)

(assert (=> b!133010 (= e!86698 (= (apply!116 lt!69488 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 newMap!16)))))

(declare-fun bm!14672 () Bool)

(assert (=> bm!14672 (= call!14670 call!14674)))

(declare-fun b!133011 () Bool)

(assert (=> b!133011 (= e!86696 (= (apply!116 lt!69488 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133011 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))))))))

(assert (=> b!133011 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun bm!14673 () Bool)

(assert (=> bm!14673 (= call!14674 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) (zeroValue!2720 newMap!16) (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!133012 () Bool)

(assert (=> b!133012 (= e!86705 call!14676)))

(declare-fun b!133013 () Bool)

(assert (=> b!133013 (= e!86702 call!14676)))

(declare-fun b!133014 () Bool)

(declare-fun res!64034 () Bool)

(assert (=> b!133014 (=> (not res!64034) (not e!86703))))

(assert (=> b!133014 (= res!64034 e!86699)))

(declare-fun res!64039 () Bool)

(assert (=> b!133014 (=> res!64039 e!86699)))

(assert (=> b!133014 (= res!64039 (not e!86701))))

(declare-fun res!64040 () Bool)

(assert (=> b!133014 (=> (not res!64040) (not e!86701))))

(assert (=> b!133014 (= res!64040 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (= (and d!40383 c!24605) b!133006))

(assert (= (and d!40383 (not c!24605)) b!133009))

(assert (= (and b!133009 c!24608) b!133012))

(assert (= (and b!133009 (not c!24608)) b!133004))

(assert (= (and b!133004 c!24610) b!133013))

(assert (= (and b!133004 (not c!24610)) b!133000))

(assert (= (or b!133013 b!133000) bm!14670))

(assert (= (or b!133012 bm!14670) bm!14672))

(assert (= (or b!133012 b!133013) bm!14667))

(assert (= (or b!133006 bm!14672) bm!14673))

(assert (= (or b!133006 bm!14667) bm!14669))

(assert (= (and d!40383 res!64037) b!132999))

(assert (= (and d!40383 c!24606) b!133008))

(assert (= (and d!40383 (not c!24606)) b!132996))

(assert (= (and d!40383 res!64038) b!133014))

(assert (= (and b!133014 res!64040) b!132998))

(assert (= (and b!133014 (not res!64039)) b!133003))

(assert (= (and b!133003 res!64033) b!133011))

(assert (= (and b!133014 res!64034) b!133001))

(assert (= (and b!133001 c!24609) b!133002))

(assert (= (and b!133001 (not c!24609)) b!133005))

(assert (= (and b!133002 res!64035) b!133010))

(assert (= (or b!133002 b!133005) bm!14668))

(assert (= (and b!133001 res!64032) b!132997))

(assert (= (and b!132997 c!24607) b!133007))

(assert (= (and b!132997 (not c!24607)) b!132995))

(assert (= (and b!133007 res!64036) b!132994))

(assert (= (or b!133007 b!132995) bm!14671))

(declare-fun b_lambda!5943 () Bool)

(assert (=> (not b_lambda!5943) (not b!133011)))

(assert (=> b!133011 t!6205))

(declare-fun b_and!8257 () Bool)

(assert (= b_and!8253 (and (=> t!6205 result!4009) b_and!8257)))

(assert (=> b!133011 t!6207))

(declare-fun b_and!8259 () Bool)

(assert (= b_and!8255 (and (=> t!6207 result!4011) b_and!8259)))

(assert (=> d!40383 m!156571))

(assert (=> b!133003 m!156533))

(assert (=> b!133003 m!156533))

(declare-fun m!156843 () Bool)

(assert (=> b!133003 m!156843))

(declare-fun m!156845 () Bool)

(assert (=> b!133011 m!156845))

(assert (=> b!133011 m!156647))

(declare-fun m!156847 () Bool)

(assert (=> b!133011 m!156847))

(assert (=> b!133011 m!156533))

(declare-fun m!156849 () Bool)

(assert (=> b!133011 m!156849))

(assert (=> b!133011 m!156845))

(assert (=> b!133011 m!156533))

(assert (=> b!133011 m!156647))

(declare-fun m!156851 () Bool)

(assert (=> b!133010 m!156851))

(declare-fun m!156853 () Bool)

(assert (=> b!132994 m!156853))

(declare-fun m!156855 () Bool)

(assert (=> b!133008 m!156855))

(declare-fun m!156857 () Bool)

(assert (=> b!133008 m!156857))

(declare-fun m!156859 () Bool)

(assert (=> b!133008 m!156859))

(declare-fun m!156861 () Bool)

(assert (=> b!133008 m!156861))

(declare-fun m!156863 () Bool)

(assert (=> b!133008 m!156863))

(assert (=> b!133008 m!156859))

(declare-fun m!156865 () Bool)

(assert (=> b!133008 m!156865))

(declare-fun m!156867 () Bool)

(assert (=> b!133008 m!156867))

(declare-fun m!156869 () Bool)

(assert (=> b!133008 m!156869))

(declare-fun m!156871 () Bool)

(assert (=> b!133008 m!156871))

(assert (=> b!133008 m!156869))

(assert (=> b!133008 m!156533))

(assert (=> b!133008 m!156855))

(declare-fun m!156873 () Bool)

(assert (=> b!133008 m!156873))

(declare-fun m!156875 () Bool)

(assert (=> b!133008 m!156875))

(declare-fun m!156877 () Bool)

(assert (=> b!133008 m!156877))

(declare-fun m!156879 () Bool)

(assert (=> b!133008 m!156879))

(assert (=> b!133008 m!156865))

(declare-fun m!156881 () Bool)

(assert (=> b!133008 m!156881))

(declare-fun m!156883 () Bool)

(assert (=> b!133008 m!156883))

(declare-fun m!156885 () Bool)

(assert (=> b!133008 m!156885))

(assert (=> b!132999 m!156533))

(assert (=> b!132999 m!156533))

(assert (=> b!132999 m!156557))

(declare-fun m!156887 () Bool)

(assert (=> bm!14671 m!156887))

(declare-fun m!156889 () Bool)

(assert (=> b!133006 m!156889))

(declare-fun m!156891 () Bool)

(assert (=> bm!14669 m!156891))

(assert (=> b!132998 m!156533))

(assert (=> b!132998 m!156533))

(assert (=> b!132998 m!156557))

(assert (=> bm!14673 m!156863))

(declare-fun m!156893 () Bool)

(assert (=> bm!14668 m!156893))

(assert (=> bm!14625 d!40383))

(declare-fun bm!14674 () Bool)

(declare-fun call!14683 () ListLongMap!1707)

(declare-fun call!14679 () ListLongMap!1707)

(assert (=> bm!14674 (= call!14683 call!14679)))

(declare-fun b!133015 () Bool)

(declare-fun e!86717 () Bool)

(declare-fun lt!69510 () ListLongMap!1707)

(assert (=> b!133015 (= e!86717 (= (apply!116 lt!69510 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 newMap!16)))))

(declare-fun bm!14675 () Bool)

(declare-fun call!14678 () Bool)

(assert (=> bm!14675 (= call!14678 (contains!896 lt!69510 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133016 () Bool)

(declare-fun e!86720 () Bool)

(declare-fun call!14680 () Bool)

(assert (=> b!133016 (= e!86720 (not call!14680))))

(declare-fun b!133017 () Bool)

(declare-fun e!86719 () Unit!4150)

(declare-fun Unit!4162 () Unit!4150)

(assert (=> b!133017 (= e!86719 Unit!4162)))

(declare-fun d!40385 () Bool)

(declare-fun e!86716 () Bool)

(assert (=> d!40385 e!86716))

(declare-fun res!64047 () Bool)

(assert (=> d!40385 (=> (not res!64047) (not e!86716))))

(assert (=> d!40385 (= res!64047 (or (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))))

(declare-fun lt!69504 () ListLongMap!1707)

(assert (=> d!40385 (= lt!69510 lt!69504)))

(declare-fun lt!69505 () Unit!4150)

(assert (=> d!40385 (= lt!69505 e!86719)))

(declare-fun c!24612 () Bool)

(declare-fun e!86710 () Bool)

(assert (=> d!40385 (= c!24612 e!86710)))

(declare-fun res!64046 () Bool)

(assert (=> d!40385 (=> (not res!64046) (not e!86710))))

(assert (=> d!40385 (= res!64046 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun e!86708 () ListLongMap!1707)

(assert (=> d!40385 (= lt!69504 e!86708)))

(declare-fun c!24611 () Bool)

(assert (=> d!40385 (= c!24611 (and (not (= (bvand (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40385 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40385 (= (getCurrentListMap!540 (_keys!4614 newMap!16) (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317) (mask!7165 newMap!16) (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69510)))

(declare-fun call!14677 () ListLongMap!1707)

(declare-fun call!14681 () ListLongMap!1707)

(declare-fun call!14682 () ListLongMap!1707)

(declare-fun c!24614 () Bool)

(declare-fun bm!14676 () Bool)

(assert (=> bm!14676 (= call!14679 (+!170 (ite c!24611 call!14681 (ite c!24614 call!14677 call!14682)) (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!133018 () Bool)

(assert (=> b!133018 (= e!86716 e!86720)))

(declare-fun c!24613 () Bool)

(assert (=> b!133018 (= c!24613 (not (= (bvand (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133019 () Bool)

(declare-fun e!86714 () Bool)

(assert (=> b!133019 (= e!86714 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133020 () Bool)

(assert (=> b!133020 (= e!86710 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133021 () Bool)

(declare-fun e!86715 () ListLongMap!1707)

(assert (=> b!133021 (= e!86715 call!14682)))

(declare-fun b!133022 () Bool)

(declare-fun res!64041 () Bool)

(assert (=> b!133022 (=> (not res!64041) (not e!86716))))

(declare-fun e!86713 () Bool)

(assert (=> b!133022 (= res!64041 e!86713)))

(declare-fun c!24615 () Bool)

(assert (=> b!133022 (= c!24615 (not (= (bvand (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133023 () Bool)

(declare-fun e!86711 () Bool)

(assert (=> b!133023 (= e!86713 e!86711)))

(declare-fun res!64044 () Bool)

(assert (=> b!133023 (= res!64044 call!14678)))

(assert (=> b!133023 (=> (not res!64044) (not e!86711))))

(declare-fun b!133024 () Bool)

(declare-fun e!86712 () Bool)

(declare-fun e!86709 () Bool)

(assert (=> b!133024 (= e!86712 e!86709)))

(declare-fun res!64042 () Bool)

(assert (=> b!133024 (=> (not res!64042) (not e!86709))))

(assert (=> b!133024 (= res!64042 (contains!896 lt!69510 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133024 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun c!24616 () Bool)

(declare-fun b!133025 () Bool)

(assert (=> b!133025 (= c!24616 (and (not (= (bvand (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!86718 () ListLongMap!1707)

(assert (=> b!133025 (= e!86718 e!86715)))

(declare-fun b!133026 () Bool)

(assert (=> b!133026 (= e!86713 (not call!14678))))

(declare-fun b!133027 () Bool)

(assert (=> b!133027 (= e!86708 (+!170 call!14679 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun b!133028 () Bool)

(assert (=> b!133028 (= e!86720 e!86717)))

(declare-fun res!64045 () Bool)

(assert (=> b!133028 (= res!64045 call!14680)))

(assert (=> b!133028 (=> (not res!64045) (not e!86717))))

(declare-fun b!133029 () Bool)

(declare-fun lt!69511 () Unit!4150)

(assert (=> b!133029 (= e!86719 lt!69511)))

(declare-fun lt!69506 () ListLongMap!1707)

(assert (=> b!133029 (= lt!69506 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317) (mask!7165 newMap!16) (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69509 () (_ BitVec 64))

(assert (=> b!133029 (= lt!69509 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69516 () (_ BitVec 64))

(assert (=> b!133029 (= lt!69516 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69520 () Unit!4150)

(assert (=> b!133029 (= lt!69520 (addStillContains!92 lt!69506 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) lt!69516))))

(assert (=> b!133029 (contains!896 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!69516)))

(declare-fun lt!69524 () Unit!4150)

(assert (=> b!133029 (= lt!69524 lt!69520)))

(declare-fun lt!69519 () ListLongMap!1707)

(assert (=> b!133029 (= lt!69519 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317) (mask!7165 newMap!16) (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69521 () (_ BitVec 64))

(assert (=> b!133029 (= lt!69521 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69507 () (_ BitVec 64))

(assert (=> b!133029 (= lt!69507 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69522 () Unit!4150)

(assert (=> b!133029 (= lt!69522 (addApplyDifferent!92 lt!69519 lt!69521 (minValue!2720 newMap!16) lt!69507))))

(assert (=> b!133029 (= (apply!116 (+!170 lt!69519 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))) lt!69507) (apply!116 lt!69519 lt!69507))))

(declare-fun lt!69513 () Unit!4150)

(assert (=> b!133029 (= lt!69513 lt!69522)))

(declare-fun lt!69514 () ListLongMap!1707)

(assert (=> b!133029 (= lt!69514 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317) (mask!7165 newMap!16) (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69525 () (_ BitVec 64))

(assert (=> b!133029 (= lt!69525 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69512 () (_ BitVec 64))

(assert (=> b!133029 (= lt!69512 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69523 () Unit!4150)

(assert (=> b!133029 (= lt!69523 (addApplyDifferent!92 lt!69514 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) lt!69512))))

(assert (=> b!133029 (= (apply!116 (+!170 lt!69514 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!69512) (apply!116 lt!69514 lt!69512))))

(declare-fun lt!69508 () Unit!4150)

(assert (=> b!133029 (= lt!69508 lt!69523)))

(declare-fun lt!69518 () ListLongMap!1707)

(assert (=> b!133029 (= lt!69518 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317) (mask!7165 newMap!16) (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69515 () (_ BitVec 64))

(assert (=> b!133029 (= lt!69515 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69517 () (_ BitVec 64))

(assert (=> b!133029 (= lt!69517 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133029 (= lt!69511 (addApplyDifferent!92 lt!69518 lt!69515 (minValue!2720 newMap!16) lt!69517))))

(assert (=> b!133029 (= (apply!116 (+!170 lt!69518 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))) lt!69517) (apply!116 lt!69518 lt!69517))))

(declare-fun bm!14677 () Bool)

(assert (=> bm!14677 (= call!14682 call!14677)))

(declare-fun b!133030 () Bool)

(assert (=> b!133030 (= e!86708 e!86718)))

(assert (=> b!133030 (= c!24614 (and (not (= (bvand (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14678 () Bool)

(assert (=> bm!14678 (= call!14680 (contains!896 lt!69510 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133031 () Bool)

(assert (=> b!133031 (= e!86711 (= (apply!116 lt!69510 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))

(declare-fun bm!14679 () Bool)

(assert (=> bm!14679 (= call!14677 call!14681)))

(declare-fun b!133032 () Bool)

(assert (=> b!133032 (= e!86709 (= (apply!116 lt!69510 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133032 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317))))))

(assert (=> b!133032 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun bm!14680 () Bool)

(assert (=> bm!14680 (= call!14681 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317) (mask!7165 newMap!16) (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!133033 () Bool)

(assert (=> b!133033 (= e!86718 call!14683)))

(declare-fun b!133034 () Bool)

(assert (=> b!133034 (= e!86715 call!14683)))

(declare-fun b!133035 () Bool)

(declare-fun res!64043 () Bool)

(assert (=> b!133035 (=> (not res!64043) (not e!86716))))

(assert (=> b!133035 (= res!64043 e!86712)))

(declare-fun res!64048 () Bool)

(assert (=> b!133035 (=> res!64048 e!86712)))

(assert (=> b!133035 (= res!64048 (not e!86714))))

(declare-fun res!64049 () Bool)

(assert (=> b!133035 (=> (not res!64049) (not e!86714))))

(assert (=> b!133035 (= res!64049 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (= (and d!40385 c!24611) b!133027))

(assert (= (and d!40385 (not c!24611)) b!133030))

(assert (= (and b!133030 c!24614) b!133033))

(assert (= (and b!133030 (not c!24614)) b!133025))

(assert (= (and b!133025 c!24616) b!133034))

(assert (= (and b!133025 (not c!24616)) b!133021))

(assert (= (or b!133034 b!133021) bm!14677))

(assert (= (or b!133033 bm!14677) bm!14679))

(assert (= (or b!133033 b!133034) bm!14674))

(assert (= (or b!133027 bm!14679) bm!14680))

(assert (= (or b!133027 bm!14674) bm!14676))

(assert (= (and d!40385 res!64046) b!133020))

(assert (= (and d!40385 c!24612) b!133029))

(assert (= (and d!40385 (not c!24612)) b!133017))

(assert (= (and d!40385 res!64047) b!133035))

(assert (= (and b!133035 res!64049) b!133019))

(assert (= (and b!133035 (not res!64048)) b!133024))

(assert (= (and b!133024 res!64042) b!133032))

(assert (= (and b!133035 res!64043) b!133022))

(assert (= (and b!133022 c!24615) b!133023))

(assert (= (and b!133022 (not c!24615)) b!133026))

(assert (= (and b!133023 res!64044) b!133031))

(assert (= (or b!133023 b!133026) bm!14675))

(assert (= (and b!133022 res!64041) b!133018))

(assert (= (and b!133018 c!24613) b!133028))

(assert (= (and b!133018 (not c!24613)) b!133016))

(assert (= (and b!133028 res!64045) b!133015))

(assert (= (or b!133028 b!133016) bm!14678))

(declare-fun b_lambda!5945 () Bool)

(assert (=> (not b_lambda!5945) (not b!133032)))

(assert (=> b!133032 t!6205))

(declare-fun b_and!8261 () Bool)

(assert (= b_and!8257 (and (=> t!6205 result!4009) b_and!8261)))

(assert (=> b!133032 t!6207))

(declare-fun b_and!8263 () Bool)

(assert (= b_and!8259 (and (=> t!6207 result!4011) b_and!8263)))

(assert (=> d!40385 m!156571))

(assert (=> b!133024 m!156533))

(assert (=> b!133024 m!156533))

(declare-fun m!156895 () Bool)

(assert (=> b!133024 m!156895))

(declare-fun m!156897 () Bool)

(assert (=> b!133032 m!156897))

(assert (=> b!133032 m!156647))

(declare-fun m!156899 () Bool)

(assert (=> b!133032 m!156899))

(assert (=> b!133032 m!156533))

(declare-fun m!156901 () Bool)

(assert (=> b!133032 m!156901))

(assert (=> b!133032 m!156897))

(assert (=> b!133032 m!156533))

(assert (=> b!133032 m!156647))

(declare-fun m!156903 () Bool)

(assert (=> b!133031 m!156903))

(declare-fun m!156905 () Bool)

(assert (=> b!133015 m!156905))

(declare-fun m!156907 () Bool)

(assert (=> b!133029 m!156907))

(declare-fun m!156909 () Bool)

(assert (=> b!133029 m!156909))

(declare-fun m!156911 () Bool)

(assert (=> b!133029 m!156911))

(declare-fun m!156913 () Bool)

(assert (=> b!133029 m!156913))

(declare-fun m!156915 () Bool)

(assert (=> b!133029 m!156915))

(assert (=> b!133029 m!156911))

(declare-fun m!156917 () Bool)

(assert (=> b!133029 m!156917))

(declare-fun m!156919 () Bool)

(assert (=> b!133029 m!156919))

(declare-fun m!156921 () Bool)

(assert (=> b!133029 m!156921))

(declare-fun m!156923 () Bool)

(assert (=> b!133029 m!156923))

(assert (=> b!133029 m!156921))

(assert (=> b!133029 m!156533))

(assert (=> b!133029 m!156907))

(declare-fun m!156925 () Bool)

(assert (=> b!133029 m!156925))

(declare-fun m!156927 () Bool)

(assert (=> b!133029 m!156927))

(declare-fun m!156929 () Bool)

(assert (=> b!133029 m!156929))

(declare-fun m!156931 () Bool)

(assert (=> b!133029 m!156931))

(assert (=> b!133029 m!156917))

(declare-fun m!156933 () Bool)

(assert (=> b!133029 m!156933))

(declare-fun m!156935 () Bool)

(assert (=> b!133029 m!156935))

(declare-fun m!156937 () Bool)

(assert (=> b!133029 m!156937))

(assert (=> b!133020 m!156533))

(assert (=> b!133020 m!156533))

(assert (=> b!133020 m!156557))

(declare-fun m!156939 () Bool)

(assert (=> bm!14678 m!156939))

(declare-fun m!156941 () Bool)

(assert (=> b!133027 m!156941))

(declare-fun m!156943 () Bool)

(assert (=> bm!14676 m!156943))

(assert (=> b!133019 m!156533))

(assert (=> b!133019 m!156533))

(assert (=> b!133019 m!156557))

(assert (=> bm!14680 m!156915))

(declare-fun m!156945 () Bool)

(assert (=> bm!14675 m!156945))

(assert (=> bm!14631 d!40385))

(declare-fun d!40387 () Bool)

(declare-fun res!64054 () Bool)

(declare-fun e!86725 () Bool)

(assert (=> d!40387 (=> res!64054 e!86725)))

(assert (=> d!40387 (= res!64054 (and ((_ is Cons!1731) (toList!869 lt!69161)) (= (_1!1314 (h!2336 (toList!869 lt!69161))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!40387 (= (containsKey!175 (toList!869 lt!69161) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) e!86725)))

(declare-fun b!133040 () Bool)

(declare-fun e!86726 () Bool)

(assert (=> b!133040 (= e!86725 e!86726)))

(declare-fun res!64055 () Bool)

(assert (=> b!133040 (=> (not res!64055) (not e!86726))))

(assert (=> b!133040 (= res!64055 (and (or (not ((_ is Cons!1731) (toList!869 lt!69161))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69161))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))) ((_ is Cons!1731) (toList!869 lt!69161)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69161))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(declare-fun b!133041 () Bool)

(assert (=> b!133041 (= e!86726 (containsKey!175 (t!6198 (toList!869 lt!69161)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40387 (not res!64054)) b!133040))

(assert (= (and b!133040 res!64055) b!133041))

(assert (=> b!133041 m!156287))

(declare-fun m!156947 () Bool)

(assert (=> b!133041 m!156947))

(assert (=> d!40279 d!40387))

(declare-fun b!133076 () Bool)

(declare-fun e!86743 () Unit!4150)

(declare-fun Unit!4163 () Unit!4150)

(assert (=> b!133076 (= e!86743 Unit!4163)))

(declare-fun lt!69600 () Unit!4150)

(assert (=> b!133076 (= lt!69600 (lemmaInListMapThenSeekEntryOrOpenFindsIt!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69611 () SeekEntryResult!285)

(declare-fun call!14693 () SeekEntryResult!285)

(assert (=> b!133076 (= lt!69611 call!14693)))

(declare-fun res!64079 () Bool)

(assert (=> b!133076 (= res!64079 ((_ is Found!285) lt!69611))))

(declare-fun e!86750 () Bool)

(assert (=> b!133076 (=> (not res!64079) (not e!86750))))

(assert (=> b!133076 e!86750))

(declare-fun lt!69591 () Unit!4150)

(assert (=> b!133076 (= lt!69591 lt!69600)))

(assert (=> b!133076 false))

(declare-fun b!133077 () Bool)

(declare-fun lt!69608 () Unit!4150)

(assert (=> b!133077 (= e!86743 lt!69608)))

(assert (=> b!133077 (= lt!69608 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69604 () SeekEntryResult!285)

(assert (=> b!133077 (= lt!69604 call!14693)))

(declare-fun c!24628 () Bool)

(assert (=> b!133077 (= c!24628 ((_ is MissingZero!285) lt!69604))))

(declare-fun e!86749 () Bool)

(assert (=> b!133077 e!86749))

(declare-fun e!86745 () Bool)

(declare-fun lt!69589 () tuple2!2610)

(declare-fun b!133078 () Bool)

(assert (=> b!133078 (= e!86745 (= (map!1405 (_2!1315 lt!69589)) (+!170 (map!1405 newMap!16) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133079 () Bool)

(declare-fun res!64080 () Bool)

(assert (=> b!133079 (= res!64080 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3303 lt!69604)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!86747 () Bool)

(assert (=> b!133079 (=> (not res!64080) (not e!86747))))

(declare-fun b!133080 () Bool)

(assert (=> b!133080 (= e!86750 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69611)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun d!40389 () Bool)

(assert (=> d!40389 e!86745))

(declare-fun res!64082 () Bool)

(assert (=> d!40389 (=> (not res!64082) (not e!86745))))

(assert (=> d!40389 (= res!64082 (_1!1315 lt!69589))))

(assert (=> d!40389 (= lt!69589 (tuple2!2611 true (LongMapFixedSize!1099 (defaultEntry!2865 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd (_size!598 newMap!16) #b00000000000000000000000000000001) (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (_vacant!598 newMap!16))))))

(declare-fun lt!69601 () Unit!4150)

(declare-fun lt!69612 () Unit!4150)

(assert (=> d!40389 (= lt!69601 lt!69612)))

(declare-fun lt!69595 () array!4780)

(declare-fun lt!69607 () array!4782)

(assert (=> d!40389 (contains!896 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))))))

(assert (=> d!40389 (= lt!69612 (lemmaValidKeyInArrayIsInListMap!119 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (defaultEntry!2865 newMap!16)))))

(assert (=> d!40389 (= lt!69607 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))))

(assert (=> d!40389 (= lt!69595 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun lt!69588 () Unit!4150)

(declare-fun lt!69614 () Unit!4150)

(assert (=> d!40389 (= lt!69588 lt!69614)))

(declare-fun lt!69605 () array!4780)

(assert (=> d!40389 (= (arrayCountValidKeys!0 lt!69605 (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4780 (_ BitVec 32)) Unit!4150)

(assert (=> d!40389 (= lt!69614 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!69605 (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))))))

(assert (=> d!40389 (= lt!69605 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun lt!69594 () Unit!4150)

(declare-fun lt!69592 () Unit!4150)

(assert (=> d!40389 (= lt!69594 lt!69592)))

(declare-fun lt!69597 () array!4780)

(assert (=> d!40389 (arrayContainsKey!0 lt!69597 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!40389 (= lt!69592 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!69597 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))))))

(assert (=> d!40389 (= lt!69597 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun lt!69599 () Unit!4150)

(declare-fun lt!69606 () Unit!4150)

(assert (=> d!40389 (= lt!69599 lt!69606)))

(assert (=> d!40389 (= (+!170 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!540 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!42 (array!4780 array!4782 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 32) (_ BitVec 64) V!3483 Int) Unit!4150)

(assert (=> d!40389 (= lt!69606 (lemmaAddValidKeyToArrayThenAddPairToListMap!42 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69590 () Unit!4150)

(declare-fun lt!69603 () Unit!4150)

(assert (=> d!40389 (= lt!69590 lt!69603)))

(assert (=> d!40389 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (mask!7165 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4780 (_ BitVec 32) (_ BitVec 32)) Unit!4150)

(assert (=> d!40389 (= lt!69603 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (mask!7165 newMap!16)))))

(declare-fun lt!69596 () Unit!4150)

(declare-fun lt!69602 () Unit!4150)

(assert (=> d!40389 (= lt!69596 lt!69602)))

(assert (=> d!40389 (= (arrayCountValidKeys!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4614 newMap!16) #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4780 (_ BitVec 32) (_ BitVec 64)) Unit!4150)

(assert (=> d!40389 (= lt!69602 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4614 newMap!16) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun lt!69598 () Unit!4150)

(declare-fun lt!69613 () Unit!4150)

(assert (=> d!40389 (= lt!69598 lt!69613)))

(declare-fun lt!69610 () (_ BitVec 32))

(declare-fun lt!69593 () List!1736)

(assert (=> d!40389 (arrayNoDuplicates!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) lt!69610 lt!69593)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4780 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1736) Unit!4150)

(assert (=> d!40389 (= lt!69613 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4614 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) lt!69610 lt!69593))))

(assert (=> d!40389 (= lt!69593 Nil!1733)))

(assert (=> d!40389 (= lt!69610 #b00000000000000000000000000000000)))

(declare-fun lt!69587 () Unit!4150)

(declare-fun e!86748 () Unit!4150)

(assert (=> d!40389 (= lt!69587 e!86748)))

(declare-fun c!24627 () Bool)

(assert (=> d!40389 (= c!24627 (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!69586 () Unit!4150)

(assert (=> d!40389 (= lt!69586 e!86743)))

(declare-fun c!24625 () Bool)

(assert (=> d!40389 (= c!24625 (contains!896 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40389 (valid!521 newMap!16)))

(assert (=> d!40389 (= (updateHelperNewKey!61 newMap!16 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))) lt!69589)))

(declare-fun bm!14689 () Bool)

(declare-fun call!14694 () Bool)

(declare-fun call!14695 () Bool)

(assert (=> bm!14689 (= call!14694 call!14695)))

(declare-fun b!133081 () Bool)

(declare-fun res!64075 () Bool)

(assert (=> b!133081 (=> (not res!64075) (not e!86745))))

(assert (=> b!133081 (= res!64075 (valid!521 (_2!1315 lt!69589)))))

(declare-fun b!133082 () Bool)

(declare-fun res!64078 () Bool)

(declare-fun e!86744 () Bool)

(assert (=> b!133082 (=> (not res!64078) (not e!86744))))

(assert (=> b!133082 (= res!64078 call!14694)))

(assert (=> b!133082 (= e!86749 e!86744)))

(declare-fun b!133083 () Bool)

(declare-fun e!86746 () Bool)

(assert (=> b!133083 (= e!86746 e!86747)))

(declare-fun res!64076 () Bool)

(assert (=> b!133083 (= res!64076 call!14694)))

(assert (=> b!133083 (=> (not res!64076) (not e!86747))))

(declare-fun bm!14690 () Bool)

(assert (=> bm!14690 (= call!14695 (inRange!0 (ite c!24625 (index!3301 lt!69611) (ite c!24628 (index!3300 lt!69604) (index!3303 lt!69604))) (mask!7165 newMap!16)))))

(declare-fun b!133084 () Bool)

(declare-fun Unit!4164 () Unit!4150)

(assert (=> b!133084 (= e!86748 Unit!4164)))

(declare-fun b!133085 () Bool)

(declare-fun call!14692 () Bool)

(assert (=> b!133085 (= e!86747 (not call!14692))))

(declare-fun b!133086 () Bool)

(declare-fun Unit!4165 () Unit!4150)

(assert (=> b!133086 (= e!86748 Unit!4165)))

(declare-fun lt!69609 () Unit!4150)

(declare-fun lemmaArrayContainsKeyThenInListMap!42 (array!4780 array!4782 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 64) (_ BitVec 32) Int) Unit!4150)

(assert (=> b!133086 (= lt!69609 (lemmaArrayContainsKeyThenInListMap!42 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(assert (=> b!133086 (contains!896 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))

(declare-fun lt!69615 () Unit!4150)

(assert (=> b!133086 (= lt!69615 lt!69609)))

(assert (=> b!133086 false))

(declare-fun b!133087 () Bool)

(assert (=> b!133087 (= e!86746 ((_ is Undefined!285) lt!69604))))

(declare-fun b!133088 () Bool)

(declare-fun res!64074 () Bool)

(assert (=> b!133088 (=> (not res!64074) (not e!86744))))

(assert (=> b!133088 (= res!64074 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3300 lt!69604)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133089 () Bool)

(declare-fun c!24626 () Bool)

(assert (=> b!133089 (= c!24626 ((_ is MissingVacant!285) lt!69604))))

(assert (=> b!133089 (= e!86749 e!86746)))

(declare-fun b!133090 () Bool)

(declare-fun res!64077 () Bool)

(assert (=> b!133090 (= res!64077 call!14695)))

(assert (=> b!133090 (=> (not res!64077) (not e!86750))))

(declare-fun b!133091 () Bool)

(declare-fun res!64081 () Bool)

(assert (=> b!133091 (=> (not res!64081) (not e!86745))))

(assert (=> b!133091 (= res!64081 (contains!896 (map!1405 (_2!1315 lt!69589)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun bm!14691 () Bool)

(assert (=> bm!14691 (= call!14693 (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun b!133092 () Bool)

(assert (=> b!133092 (= e!86744 (not call!14692))))

(declare-fun bm!14692 () Bool)

(assert (=> bm!14692 (= call!14692 (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!40389 c!24625) b!133076))

(assert (= (and d!40389 (not c!24625)) b!133077))

(assert (= (and b!133076 res!64079) b!133090))

(assert (= (and b!133090 res!64077) b!133080))

(assert (= (and b!133077 c!24628) b!133082))

(assert (= (and b!133077 (not c!24628)) b!133089))

(assert (= (and b!133082 res!64078) b!133088))

(assert (= (and b!133088 res!64074) b!133092))

(assert (= (and b!133089 c!24626) b!133083))

(assert (= (and b!133089 (not c!24626)) b!133087))

(assert (= (and b!133083 res!64076) b!133079))

(assert (= (and b!133079 res!64080) b!133085))

(assert (= (or b!133082 b!133083) bm!14689))

(assert (= (or b!133092 b!133085) bm!14692))

(assert (= (or b!133090 bm!14689) bm!14690))

(assert (= (or b!133076 b!133077) bm!14691))

(assert (= (and d!40389 c!24627) b!133086))

(assert (= (and d!40389 (not c!24627)) b!133084))

(assert (= (and d!40389 res!64082) b!133081))

(assert (= (and b!133081 res!64075) b!133091))

(assert (= (and b!133091 res!64081) b!133078))

(assert (=> b!133076 m!156287))

(assert (=> b!133076 m!156461))

(declare-fun m!156949 () Bool)

(assert (=> b!133080 m!156949))

(declare-fun m!156951 () Bool)

(assert (=> d!40389 m!156951))

(declare-fun m!156953 () Bool)

(assert (=> d!40389 m!156953))

(assert (=> d!40389 m!156287))

(assert (=> d!40389 m!156439))

(declare-fun m!156955 () Bool)

(assert (=> d!40389 m!156955))

(declare-fun m!156957 () Bool)

(assert (=> d!40389 m!156957))

(declare-fun m!156959 () Bool)

(assert (=> d!40389 m!156959))

(assert (=> d!40389 m!156355))

(declare-fun m!156961 () Bool)

(assert (=> d!40389 m!156961))

(assert (=> d!40389 m!156355))

(assert (=> d!40389 m!156287))

(declare-fun m!156963 () Bool)

(assert (=> d!40389 m!156963))

(declare-fun m!156965 () Bool)

(assert (=> d!40389 m!156965))

(assert (=> d!40389 m!156287))

(declare-fun m!156967 () Bool)

(assert (=> d!40389 m!156967))

(declare-fun m!156969 () Bool)

(assert (=> d!40389 m!156969))

(assert (=> d!40389 m!156287))

(declare-fun m!156971 () Bool)

(assert (=> d!40389 m!156971))

(declare-fun m!156973 () Bool)

(assert (=> d!40389 m!156973))

(assert (=> d!40389 m!156287))

(declare-fun m!156975 () Bool)

(assert (=> d!40389 m!156975))

(declare-fun m!156977 () Bool)

(assert (=> d!40389 m!156977))

(assert (=> d!40389 m!156287))

(assert (=> d!40389 m!156285))

(declare-fun m!156979 () Bool)

(assert (=> d!40389 m!156979))

(assert (=> d!40389 m!156481))

(assert (=> d!40389 m!156287))

(declare-fun m!156981 () Bool)

(assert (=> d!40389 m!156981))

(assert (=> d!40389 m!156355))

(assert (=> d!40389 m!156959))

(declare-fun m!156983 () Bool)

(assert (=> d!40389 m!156983))

(declare-fun m!156985 () Bool)

(assert (=> d!40389 m!156985))

(declare-fun m!156987 () Bool)

(assert (=> d!40389 m!156987))

(assert (=> d!40389 m!156313))

(assert (=> d!40389 m!156287))

(declare-fun m!156989 () Bool)

(assert (=> d!40389 m!156989))

(assert (=> d!40389 m!156983))

(assert (=> b!133086 m!156287))

(declare-fun m!156991 () Bool)

(assert (=> b!133086 m!156991))

(assert (=> b!133086 m!156355))

(assert (=> b!133086 m!156355))

(assert (=> b!133086 m!156287))

(assert (=> b!133086 m!156963))

(assert (=> b!133077 m!156287))

(assert (=> b!133077 m!156421))

(declare-fun m!156993 () Bool)

(assert (=> b!133078 m!156993))

(assert (=> b!133078 m!156309))

(assert (=> b!133078 m!156309))

(declare-fun m!156995 () Bool)

(assert (=> b!133078 m!156995))

(declare-fun m!156997 () Bool)

(assert (=> b!133079 m!156997))

(declare-fun m!156999 () Bool)

(assert (=> b!133081 m!156999))

(assert (=> b!133091 m!156993))

(assert (=> b!133091 m!156993))

(assert (=> b!133091 m!156287))

(declare-fun m!157001 () Bool)

(assert (=> b!133091 m!157001))

(assert (=> bm!14691 m!156287))

(assert (=> bm!14691 m!156445))

(declare-fun m!157003 () Bool)

(assert (=> b!133088 m!157003))

(declare-fun m!157005 () Bool)

(assert (=> bm!14690 m!157005))

(assert (=> bm!14692 m!156287))

(assert (=> bm!14692 m!156439))

(assert (=> bm!14637 d!40389))

(declare-fun d!40391 () Bool)

(assert (=> d!40391 (isDefined!125 (getValueByKey!171 (toList!869 lt!69161) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun lt!69618 () Unit!4150)

(declare-fun choose!831 (List!1735 (_ BitVec 64)) Unit!4150)

(assert (=> d!40391 (= lt!69618 (choose!831 (toList!869 lt!69161) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun e!86753 () Bool)

(assert (=> d!40391 e!86753))

(declare-fun res!64085 () Bool)

(assert (=> d!40391 (=> (not res!64085) (not e!86753))))

(declare-fun isStrictlySorted!317 (List!1735) Bool)

(assert (=> d!40391 (= res!64085 (isStrictlySorted!317 (toList!869 lt!69161)))))

(assert (=> d!40391 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69161) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) lt!69618)))

(declare-fun b!133095 () Bool)

(assert (=> b!133095 (= e!86753 (containsKey!175 (toList!869 lt!69161) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40391 res!64085) b!133095))

(assert (=> d!40391 m!156287))

(assert (=> d!40391 m!156417))

(assert (=> d!40391 m!156417))

(assert (=> d!40391 m!156419))

(assert (=> d!40391 m!156287))

(declare-fun m!157007 () Bool)

(assert (=> d!40391 m!157007))

(declare-fun m!157009 () Bool)

(assert (=> d!40391 m!157009))

(assert (=> b!133095 m!156287))

(assert (=> b!133095 m!156413))

(assert (=> b!132631 d!40391))

(declare-fun d!40393 () Bool)

(declare-fun isEmpty!415 (Option!177) Bool)

(assert (=> d!40393 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69161) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69161) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun bs!5500 () Bool)

(assert (= bs!5500 d!40393))

(assert (=> bs!5500 m!156417))

(declare-fun m!157011 () Bool)

(assert (=> bs!5500 m!157011))

(assert (=> b!132631 d!40393))

(declare-fun b!133104 () Bool)

(declare-fun e!86758 () Option!177)

(assert (=> b!133104 (= e!86758 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69161)))))))

(declare-fun b!133107 () Bool)

(declare-fun e!86759 () Option!177)

(assert (=> b!133107 (= e!86759 None!175)))

(declare-fun b!133106 () Bool)

(assert (=> b!133106 (= e!86759 (getValueByKey!171 (t!6198 (toList!869 lt!69161)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!133105 () Bool)

(assert (=> b!133105 (= e!86758 e!86759)))

(declare-fun c!24634 () Bool)

(assert (=> b!133105 (= c!24634 (and ((_ is Cons!1731) (toList!869 lt!69161)) (not (= (_1!1314 (h!2336 (toList!869 lt!69161))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun d!40395 () Bool)

(declare-fun c!24633 () Bool)

(assert (=> d!40395 (= c!24633 (and ((_ is Cons!1731) (toList!869 lt!69161)) (= (_1!1314 (h!2336 (toList!869 lt!69161))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!40395 (= (getValueByKey!171 (toList!869 lt!69161) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) e!86758)))

(assert (= (and d!40395 c!24633) b!133104))

(assert (= (and d!40395 (not c!24633)) b!133105))

(assert (= (and b!133105 c!24634) b!133106))

(assert (= (and b!133105 (not c!24634)) b!133107))

(assert (=> b!133106 m!156287))

(declare-fun m!157013 () Bool)

(assert (=> b!133106 m!157013))

(assert (=> b!132631 d!40395))

(assert (=> b!132609 d!40331))

(declare-fun b!133108 () Bool)

(declare-fun e!86761 () Bool)

(declare-fun call!14696 () Bool)

(assert (=> b!133108 (= e!86761 call!14696)))

(declare-fun b!133109 () Bool)

(declare-fun e!86762 () Bool)

(assert (=> b!133109 (= e!86761 e!86762)))

(declare-fun lt!69620 () (_ BitVec 64))

(assert (=> b!133109 (= lt!69620 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69621 () Unit!4150)

(assert (=> b!133109 (= lt!69621 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 newMap!16) lt!69620 #b00000000000000000000000000000000))))

(assert (=> b!133109 (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69620 #b00000000000000000000000000000000)))

(declare-fun lt!69619 () Unit!4150)

(assert (=> b!133109 (= lt!69619 lt!69621)))

(declare-fun res!64086 () Bool)

(assert (=> b!133109 (= res!64086 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (_keys!4614 newMap!16) (mask!7165 newMap!16)) (Found!285 #b00000000000000000000000000000000)))))

(assert (=> b!133109 (=> (not res!64086) (not e!86762))))

(declare-fun b!133110 () Bool)

(assert (=> b!133110 (= e!86762 call!14696)))

(declare-fun b!133111 () Bool)

(declare-fun e!86760 () Bool)

(assert (=> b!133111 (= e!86760 e!86761)))

(declare-fun c!24635 () Bool)

(assert (=> b!133111 (= c!24635 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14693 () Bool)

(assert (=> bm!14693 (= call!14696 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun d!40397 () Bool)

(declare-fun res!64087 () Bool)

(assert (=> d!40397 (=> res!64087 e!86760)))

(assert (=> d!40397 (= res!64087 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!40397 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4614 newMap!16) (mask!7165 newMap!16)) e!86760)))

(assert (= (and d!40397 (not res!64087)) b!133111))

(assert (= (and b!133111 c!24635) b!133109))

(assert (= (and b!133111 (not c!24635)) b!133108))

(assert (= (and b!133109 res!64086) b!133110))

(assert (= (or b!133110 b!133108) bm!14693))

(assert (=> b!133109 m!156533))

(declare-fun m!157015 () Bool)

(assert (=> b!133109 m!157015))

(declare-fun m!157017 () Bool)

(assert (=> b!133109 m!157017))

(assert (=> b!133109 m!156533))

(declare-fun m!157019 () Bool)

(assert (=> b!133109 m!157019))

(assert (=> b!133111 m!156533))

(assert (=> b!133111 m!156533))

(assert (=> b!133111 m!156557))

(declare-fun m!157021 () Bool)

(assert (=> bm!14693 m!157021))

(assert (=> b!132773 d!40397))

(declare-fun d!40399 () Bool)

(assert (=> d!40399 (= (map!1405 (_2!1315 lt!69327)) (getCurrentListMap!540 (_keys!4614 (_2!1315 lt!69327)) (_values!2848 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327)) (extraKeys!2630 (_2!1315 lt!69327)) (zeroValue!2720 (_2!1315 lt!69327)) (minValue!2720 (_2!1315 lt!69327)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1315 lt!69327))))))

(declare-fun bs!5501 () Bool)

(assert (= bs!5501 d!40399))

(declare-fun m!157023 () Bool)

(assert (=> bs!5501 m!157023))

(assert (=> bm!14639 d!40399))

(declare-fun d!40401 () Bool)

(declare-fun e!86763 () Bool)

(assert (=> d!40401 e!86763))

(declare-fun res!64088 () Bool)

(assert (=> d!40401 (=> res!64088 e!86763)))

(declare-fun lt!69622 () Bool)

(assert (=> d!40401 (= res!64088 (not lt!69622))))

(declare-fun lt!69624 () Bool)

(assert (=> d!40401 (= lt!69622 lt!69624)))

(declare-fun lt!69623 () Unit!4150)

(declare-fun e!86764 () Unit!4150)

(assert (=> d!40401 (= lt!69623 e!86764)))

(declare-fun c!24636 () Bool)

(assert (=> d!40401 (= c!24636 lt!69624)))

(assert (=> d!40401 (= lt!69624 (containsKey!175 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!40401 (= (contains!896 lt!69221 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!69622)))

(declare-fun b!133112 () Bool)

(declare-fun lt!69625 () Unit!4150)

(assert (=> b!133112 (= e!86764 lt!69625)))

(assert (=> b!133112 (= lt!69625 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!133112 (isDefined!125 (getValueByKey!171 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!133113 () Bool)

(declare-fun Unit!4166 () Unit!4150)

(assert (=> b!133113 (= e!86764 Unit!4166)))

(declare-fun b!133114 () Bool)

(assert (=> b!133114 (= e!86763 (isDefined!125 (getValueByKey!171 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!40401 c!24636) b!133112))

(assert (= (and d!40401 (not c!24636)) b!133113))

(assert (= (and d!40401 (not res!64088)) b!133114))

(assert (=> d!40401 m!156357))

(declare-fun m!157025 () Bool)

(assert (=> d!40401 m!157025))

(assert (=> b!133112 m!156357))

(declare-fun m!157027 () Bool)

(assert (=> b!133112 m!157027))

(assert (=> b!133112 m!156357))

(assert (=> b!133112 m!156711))

(assert (=> b!133112 m!156711))

(declare-fun m!157029 () Bool)

(assert (=> b!133112 m!157029))

(assert (=> b!133114 m!156357))

(assert (=> b!133114 m!156711))

(assert (=> b!133114 m!156711))

(assert (=> b!133114 m!157029))

(assert (=> b!132613 d!40401))

(declare-fun d!40403 () Bool)

(declare-fun e!86765 () Bool)

(assert (=> d!40403 e!86765))

(declare-fun res!64089 () Bool)

(assert (=> d!40403 (=> res!64089 e!86765)))

(declare-fun lt!69626 () Bool)

(assert (=> d!40403 (= res!64089 (not lt!69626))))

(declare-fun lt!69628 () Bool)

(assert (=> d!40403 (= lt!69626 lt!69628)))

(declare-fun lt!69627 () Unit!4150)

(declare-fun e!86766 () Unit!4150)

(assert (=> d!40403 (= lt!69627 e!86766)))

(declare-fun c!24637 () Bool)

(assert (=> d!40403 (= c!24637 lt!69628)))

(assert (=> d!40403 (= lt!69628 (containsKey!175 (toList!869 call!14628) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(assert (=> d!40403 (= (contains!896 call!14628 (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))) lt!69626)))

(declare-fun b!133115 () Bool)

(declare-fun lt!69629 () Unit!4150)

(assert (=> b!133115 (= e!86766 lt!69629)))

(assert (=> b!133115 (= lt!69629 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 call!14628) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(assert (=> b!133115 (isDefined!125 (getValueByKey!171 (toList!869 call!14628) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(declare-fun b!133116 () Bool)

(declare-fun Unit!4167 () Unit!4150)

(assert (=> b!133116 (= e!86766 Unit!4167)))

(declare-fun b!133117 () Bool)

(assert (=> b!133117 (= e!86765 (isDefined!125 (getValueByKey!171 (toList!869 call!14628) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))))))

(assert (= (and d!40403 c!24637) b!133115))

(assert (= (and d!40403 (not c!24637)) b!133116))

(assert (= (and d!40403 (not res!64089)) b!133117))

(assert (=> d!40403 m!156425))

(declare-fun m!157031 () Bool)

(assert (=> d!40403 m!157031))

(assert (=> b!133115 m!156425))

(declare-fun m!157033 () Bool)

(assert (=> b!133115 m!157033))

(assert (=> b!133115 m!156425))

(declare-fun m!157035 () Bool)

(assert (=> b!133115 m!157035))

(assert (=> b!133115 m!157035))

(declare-fun m!157037 () Bool)

(assert (=> b!133115 m!157037))

(assert (=> b!133117 m!156425))

(assert (=> b!133117 m!157035))

(assert (=> b!133117 m!157035))

(assert (=> b!133117 m!157037))

(assert (=> b!132745 d!40403))

(declare-fun d!40405 () Bool)

(declare-fun e!86769 () Bool)

(assert (=> d!40405 e!86769))

(declare-fun res!64092 () Bool)

(assert (=> d!40405 (=> (not res!64092) (not e!86769))))

(assert (=> d!40405 (= res!64092 (and (bvsge (index!3301 lt!69307) #b00000000000000000000000000000000) (bvslt (index!3301 lt!69307) (size!2529 (_keys!4614 newMap!16)))))))

(declare-fun lt!69632 () Unit!4150)

(declare-fun choose!832 (array!4780 array!4782 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 32) Int) Unit!4150)

(assert (=> d!40405 (= lt!69632 (choose!832 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (index!3301 lt!69307) (defaultEntry!2865 newMap!16)))))

(assert (=> d!40405 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40405 (= (lemmaValidKeyInArrayIsInListMap!119 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (index!3301 lt!69307) (defaultEntry!2865 newMap!16)) lt!69632)))

(declare-fun b!133120 () Bool)

(assert (=> b!133120 (= e!86769 (contains!896 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(assert (= (and d!40405 res!64092) b!133120))

(declare-fun m!157039 () Bool)

(assert (=> d!40405 m!157039))

(assert (=> d!40405 m!156571))

(declare-fun m!157041 () Bool)

(assert (=> b!133120 m!157041))

(assert (=> b!133120 m!156425))

(assert (=> b!133120 m!157041))

(assert (=> b!133120 m!156425))

(declare-fun m!157043 () Bool)

(assert (=> b!133120 m!157043))

(assert (=> b!132745 d!40405))

(declare-fun d!40407 () Bool)

(declare-fun e!86772 () Bool)

(assert (=> d!40407 e!86772))

(declare-fun res!64095 () Bool)

(assert (=> d!40407 (=> (not res!64095) (not e!86772))))

(assert (=> d!40407 (= res!64095 (and (bvsge (index!3301 lt!69307) #b00000000000000000000000000000000) (bvslt (index!3301 lt!69307) (size!2530 (_values!2848 newMap!16)))))))

(declare-fun lt!69635 () Unit!4150)

(declare-fun choose!833 (array!4780 array!4782 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 32) (_ BitVec 64) V!3483 Int) Unit!4150)

(assert (=> d!40407 (= lt!69635 (choose!833 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (index!3301 lt!69307) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)))))

(assert (=> d!40407 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40407 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (index!3301 lt!69307) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)) lt!69635)))

(declare-fun b!133123 () Bool)

(assert (=> b!133123 (= e!86772 (= (+!170 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!540 (_keys!4614 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))))

(assert (= (and d!40407 res!64095) b!133123))

(assert (=> d!40407 m!156287))

(assert (=> d!40407 m!156285))

(declare-fun m!157045 () Bool)

(assert (=> d!40407 m!157045))

(assert (=> d!40407 m!156571))

(assert (=> b!133123 m!156355))

(assert (=> b!133123 m!156355))

(assert (=> b!133123 m!156961))

(assert (=> b!133123 m!156431))

(declare-fun m!157047 () Bool)

(assert (=> b!133123 m!157047))

(assert (=> b!132745 d!40407))

(assert (=> b!132633 d!40393))

(assert (=> b!132633 d!40395))

(assert (=> d!40271 d!40335))

(declare-fun b!133124 () Bool)

(declare-fun e!86775 () Bool)

(declare-fun e!86776 () Bool)

(assert (=> b!133124 (= e!86775 e!86776)))

(declare-fun c!24638 () Bool)

(assert (=> b!133124 (= c!24638 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133125 () Bool)

(declare-fun call!14697 () Bool)

(assert (=> b!133125 (= e!86776 call!14697)))

(declare-fun b!133126 () Bool)

(declare-fun e!86773 () Bool)

(assert (=> b!133126 (= e!86773 (contains!897 (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!14694 () Bool)

(assert (=> bm!14694 (= call!14697 (arrayNoDuplicates!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24638 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733))))))

(declare-fun d!40409 () Bool)

(declare-fun res!64098 () Bool)

(declare-fun e!86774 () Bool)

(assert (=> d!40409 (=> res!64098 e!86774)))

(assert (=> d!40409 (= res!64098 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!40409 (= (arrayNoDuplicates!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) e!86774)))

(declare-fun b!133127 () Bool)

(assert (=> b!133127 (= e!86776 call!14697)))

(declare-fun b!133128 () Bool)

(assert (=> b!133128 (= e!86774 e!86775)))

(declare-fun res!64096 () Bool)

(assert (=> b!133128 (=> (not res!64096) (not e!86775))))

(assert (=> b!133128 (= res!64096 (not e!86773))))

(declare-fun res!64097 () Bool)

(assert (=> b!133128 (=> (not res!64097) (not e!86773))))

(assert (=> b!133128 (= res!64097 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!40409 (not res!64098)) b!133128))

(assert (= (and b!133128 res!64097) b!133126))

(assert (= (and b!133128 res!64096) b!133124))

(assert (= (and b!133124 c!24638) b!133127))

(assert (= (and b!133124 (not c!24638)) b!133125))

(assert (= (or b!133127 b!133125) bm!14694))

(assert (=> b!133124 m!156593))

(assert (=> b!133124 m!156593))

(assert (=> b!133124 m!156601))

(assert (=> b!133126 m!156593))

(assert (=> b!133126 m!156593))

(declare-fun m!157049 () Bool)

(assert (=> b!133126 m!157049))

(assert (=> bm!14694 m!156593))

(declare-fun m!157051 () Bool)

(assert (=> bm!14694 m!157051))

(assert (=> b!133128 m!156593))

(assert (=> b!133128 m!156593))

(assert (=> b!133128 m!156601))

(assert (=> bm!14642 d!40409))

(declare-fun d!40411 () Bool)

(declare-fun e!86777 () Bool)

(assert (=> d!40411 e!86777))

(declare-fun res!64099 () Bool)

(assert (=> d!40411 (=> res!64099 e!86777)))

(declare-fun lt!69636 () Bool)

(assert (=> d!40411 (= res!64099 (not lt!69636))))

(declare-fun lt!69638 () Bool)

(assert (=> d!40411 (= lt!69636 lt!69638)))

(declare-fun lt!69637 () Unit!4150)

(declare-fun e!86778 () Unit!4150)

(assert (=> d!40411 (= lt!69637 e!86778)))

(declare-fun c!24639 () Bool)

(assert (=> d!40411 (= c!24639 lt!69638)))

(assert (=> d!40411 (= lt!69638 (containsKey!175 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40411 (= (contains!896 lt!69221 #b0000000000000000000000000000000000000000000000000000000000000000) lt!69636)))

(declare-fun b!133129 () Bool)

(declare-fun lt!69639 () Unit!4150)

(assert (=> b!133129 (= e!86778 lt!69639)))

(assert (=> b!133129 (= lt!69639 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133129 (isDefined!125 (getValueByKey!171 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133130 () Bool)

(declare-fun Unit!4168 () Unit!4150)

(assert (=> b!133130 (= e!86778 Unit!4168)))

(declare-fun b!133131 () Bool)

(assert (=> b!133131 (= e!86777 (isDefined!125 (getValueByKey!171 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40411 c!24639) b!133129))

(assert (= (and d!40411 (not c!24639)) b!133130))

(assert (= (and d!40411 (not res!64099)) b!133131))

(declare-fun m!157053 () Bool)

(assert (=> d!40411 m!157053))

(declare-fun m!157055 () Bool)

(assert (=> b!133129 m!157055))

(assert (=> b!133129 m!156719))

(assert (=> b!133129 m!156719))

(declare-fun m!157057 () Bool)

(assert (=> b!133129 m!157057))

(assert (=> b!133131 m!156719))

(assert (=> b!133131 m!156719))

(assert (=> b!133131 m!157057))

(assert (=> bm!14562 d!40411))

(declare-fun d!40413 () Bool)

(declare-fun res!64100 () Bool)

(declare-fun e!86779 () Bool)

(assert (=> d!40413 (=> (not res!64100) (not e!86779))))

(assert (=> d!40413 (= res!64100 (simpleValid!91 (v!3197 (underlying!454 thiss!992))))))

(assert (=> d!40413 (= (valid!521 (v!3197 (underlying!454 thiss!992))) e!86779)))

(declare-fun b!133132 () Bool)

(declare-fun res!64101 () Bool)

(assert (=> b!133132 (=> (not res!64101) (not e!86779))))

(assert (=> b!133132 (= res!64101 (= (arrayCountValidKeys!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000000 (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))) (_size!598 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun b!133133 () Bool)

(declare-fun res!64102 () Bool)

(assert (=> b!133133 (=> (not res!64102) (not e!86779))))

(assert (=> b!133133 (= res!64102 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun b!133134 () Bool)

(assert (=> b!133134 (= e!86779 (arrayNoDuplicates!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000000 Nil!1733))))

(assert (= (and d!40413 res!64100) b!133132))

(assert (= (and b!133132 res!64101) b!133133))

(assert (= (and b!133133 res!64102) b!133134))

(declare-fun m!157059 () Bool)

(assert (=> d!40413 m!157059))

(declare-fun m!157061 () Bool)

(assert (=> b!133132 m!157061))

(assert (=> b!133133 m!156297))

(assert (=> b!133134 m!156303))

(assert (=> d!40269 d!40413))

(declare-fun d!40415 () Bool)

(assert (=> d!40415 (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69337 #b00000000000000000000000000000000)))

(declare-fun lt!69642 () Unit!4150)

(declare-fun choose!13 (array!4780 (_ BitVec 64) (_ BitVec 32)) Unit!4150)

(assert (=> d!40415 (= lt!69642 (choose!13 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69337 #b00000000000000000000000000000000))))

(assert (=> d!40415 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!40415 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69337 #b00000000000000000000000000000000) lt!69642)))

(declare-fun bs!5502 () Bool)

(assert (= bs!5502 d!40415))

(assert (=> bs!5502 m!156497))

(declare-fun m!157063 () Bool)

(assert (=> bs!5502 m!157063))

(assert (=> b!132799 d!40415))

(declare-fun d!40417 () Bool)

(declare-fun res!64103 () Bool)

(declare-fun e!86780 () Bool)

(assert (=> d!40417 (=> res!64103 e!86780)))

(assert (=> d!40417 (= res!64103 (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) lt!69337))))

(assert (=> d!40417 (= (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69337 #b00000000000000000000000000000000) e!86780)))

(declare-fun b!133135 () Bool)

(declare-fun e!86781 () Bool)

(assert (=> b!133135 (= e!86780 e!86781)))

(declare-fun res!64104 () Bool)

(assert (=> b!133135 (=> (not res!64104) (not e!86781))))

(assert (=> b!133135 (= res!64104 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!133136 () Bool)

(assert (=> b!133136 (= e!86781 (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69337 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40417 (not res!64103)) b!133135))

(assert (= (and b!133135 res!64104) b!133136))

(assert (=> d!40417 m!156487))

(declare-fun m!157065 () Bool)

(assert (=> b!133136 m!157065))

(assert (=> b!132799 d!40417))

(declare-fun b!133137 () Bool)

(declare-fun e!86784 () SeekEntryResult!285)

(declare-fun lt!69644 () SeekEntryResult!285)

(assert (=> b!133137 (= e!86784 (MissingZero!285 (index!3302 lt!69644)))))

(declare-fun b!133138 () Bool)

(assert (=> b!133138 (= e!86784 (seekKeyOrZeroReturnVacant!0 (x!15602 lt!69644) (index!3302 lt!69644) (index!3302 lt!69644) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun b!133139 () Bool)

(declare-fun c!24640 () Bool)

(declare-fun lt!69645 () (_ BitVec 64))

(assert (=> b!133139 (= c!24640 (= lt!69645 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!86783 () SeekEntryResult!285)

(assert (=> b!133139 (= e!86783 e!86784)))

(declare-fun b!133140 () Bool)

(declare-fun e!86782 () SeekEntryResult!285)

(assert (=> b!133140 (= e!86782 Undefined!285)))

(declare-fun b!133141 () Bool)

(assert (=> b!133141 (= e!86782 e!86783)))

(assert (=> b!133141 (= lt!69645 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3302 lt!69644)))))

(declare-fun c!24642 () Bool)

(assert (=> b!133141 (= c!24642 (= lt!69645 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!40419 () Bool)

(declare-fun lt!69643 () SeekEntryResult!285)

(assert (=> d!40419 (and (or ((_ is Undefined!285) lt!69643) (not ((_ is Found!285) lt!69643)) (and (bvsge (index!3301 lt!69643) #b00000000000000000000000000000000) (bvslt (index!3301 lt!69643) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))) (or ((_ is Undefined!285) lt!69643) ((_ is Found!285) lt!69643) (not ((_ is MissingZero!285) lt!69643)) (and (bvsge (index!3300 lt!69643) #b00000000000000000000000000000000) (bvslt (index!3300 lt!69643) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))) (or ((_ is Undefined!285) lt!69643) ((_ is Found!285) lt!69643) ((_ is MissingZero!285) lt!69643) (not ((_ is MissingVacant!285) lt!69643)) (and (bvsge (index!3303 lt!69643) #b00000000000000000000000000000000) (bvslt (index!3303 lt!69643) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))) (or ((_ is Undefined!285) lt!69643) (ite ((_ is Found!285) lt!69643) (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3301 lt!69643)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!285) lt!69643) (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3300 lt!69643)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!285) lt!69643) (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3303 lt!69643)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40419 (= lt!69643 e!86782)))

(declare-fun c!24641 () Bool)

(assert (=> d!40419 (= c!24641 (and ((_ is Intermediate!285) lt!69644) (undefined!1097 lt!69644)))))

(assert (=> d!40419 (= lt!69644 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3197 (underlying!454 thiss!992)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(assert (=> d!40419 (validMask!0 (mask!7165 (v!3197 (underlying!454 thiss!992))))))

(assert (=> d!40419 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))) lt!69643)))

(declare-fun b!133142 () Bool)

(assert (=> b!133142 (= e!86783 (Found!285 (index!3302 lt!69644)))))

(assert (= (and d!40419 c!24641) b!133140))

(assert (= (and d!40419 (not c!24641)) b!133141))

(assert (= (and b!133141 c!24642) b!133142))

(assert (= (and b!133141 (not c!24642)) b!133139))

(assert (= (and b!133139 c!24640) b!133137))

(assert (= (and b!133139 (not c!24640)) b!133138))

(assert (=> b!133138 m!156487))

(declare-fun m!157067 () Bool)

(assert (=> b!133138 m!157067))

(declare-fun m!157069 () Bool)

(assert (=> b!133141 m!157069))

(declare-fun m!157071 () Bool)

(assert (=> d!40419 m!157071))

(assert (=> d!40419 m!156487))

(declare-fun m!157073 () Bool)

(assert (=> d!40419 m!157073))

(declare-fun m!157075 () Bool)

(assert (=> d!40419 m!157075))

(declare-fun m!157077 () Bool)

(assert (=> d!40419 m!157077))

(assert (=> d!40419 m!156295))

(declare-fun m!157079 () Bool)

(assert (=> d!40419 m!157079))

(assert (=> d!40419 m!156487))

(assert (=> d!40419 m!157071))

(assert (=> b!132799 d!40419))

(assert (=> bm!14619 d!40337))

(declare-fun b!133153 () Bool)

(declare-fun res!64113 () Bool)

(declare-fun e!86787 () Bool)

(assert (=> b!133153 (=> (not res!64113) (not e!86787))))

(declare-fun size!2533 (LongMapFixedSize!1098) (_ BitVec 32))

(assert (=> b!133153 (= res!64113 (= (size!2533 newMap!16) (bvadd (_size!598 newMap!16) (bvsdiv (bvadd (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!133154 () Bool)

(assert (=> b!133154 (= e!86787 (and (bvsge (extraKeys!2630 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2630 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!598 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!133152 () Bool)

(declare-fun res!64116 () Bool)

(assert (=> b!133152 (=> (not res!64116) (not e!86787))))

(assert (=> b!133152 (= res!64116 (bvsge (size!2533 newMap!16) (_size!598 newMap!16)))))

(declare-fun d!40421 () Bool)

(declare-fun res!64114 () Bool)

(assert (=> d!40421 (=> (not res!64114) (not e!86787))))

(assert (=> d!40421 (= res!64114 (validMask!0 (mask!7165 newMap!16)))))

(assert (=> d!40421 (= (simpleValid!91 newMap!16) e!86787)))

(declare-fun b!133151 () Bool)

(declare-fun res!64115 () Bool)

(assert (=> b!133151 (=> (not res!64115) (not e!86787))))

(assert (=> b!133151 (= res!64115 (and (= (size!2530 (_values!2848 newMap!16)) (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001)) (= (size!2529 (_keys!4614 newMap!16)) (size!2530 (_values!2848 newMap!16))) (bvsge (_size!598 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!598 newMap!16) (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001))))))

(assert (= (and d!40421 res!64114) b!133151))

(assert (= (and b!133151 res!64115) b!133152))

(assert (= (and b!133152 res!64116) b!133153))

(assert (= (and b!133153 res!64113) b!133154))

(declare-fun m!157081 () Bool)

(assert (=> b!133153 m!157081))

(assert (=> b!133152 m!157081))

(assert (=> d!40421 m!156571))

(assert (=> d!40285 d!40421))

(assert (=> b!132789 d!40307))

(declare-fun mapIsEmpty!4655 () Bool)

(declare-fun mapRes!4655 () Bool)

(assert (=> mapIsEmpty!4655 mapRes!4655))

(declare-fun condMapEmpty!4655 () Bool)

(declare-fun mapDefault!4655 () ValueCell!1095)

(assert (=> mapNonEmpty!4654 (= condMapEmpty!4655 (= mapRest!4654 ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4655)))))

(declare-fun e!86789 () Bool)

(assert (=> mapNonEmpty!4654 (= tp!11224 (and e!86789 mapRes!4655))))

(declare-fun mapNonEmpty!4655 () Bool)

(declare-fun tp!11225 () Bool)

(declare-fun e!86788 () Bool)

(assert (=> mapNonEmpty!4655 (= mapRes!4655 (and tp!11225 e!86788))))

(declare-fun mapKey!4655 () (_ BitVec 32))

(declare-fun mapValue!4655 () ValueCell!1095)

(declare-fun mapRest!4655 () (Array (_ BitVec 32) ValueCell!1095))

(assert (=> mapNonEmpty!4655 (= mapRest!4654 (store mapRest!4655 mapKey!4655 mapValue!4655))))

(declare-fun b!133156 () Bool)

(assert (=> b!133156 (= e!86789 tp_is_empty!2877)))

(declare-fun b!133155 () Bool)

(assert (=> b!133155 (= e!86788 tp_is_empty!2877)))

(assert (= (and mapNonEmpty!4654 condMapEmpty!4655) mapIsEmpty!4655))

(assert (= (and mapNonEmpty!4654 (not condMapEmpty!4655)) mapNonEmpty!4655))

(assert (= (and mapNonEmpty!4655 ((_ is ValueCellFull!1095) mapValue!4655)) b!133155))

(assert (= (and mapNonEmpty!4654 ((_ is ValueCellFull!1095) mapDefault!4655)) b!133156))

(declare-fun m!157083 () Bool)

(assert (=> mapNonEmpty!4655 m!157083))

(declare-fun mapIsEmpty!4656 () Bool)

(declare-fun mapRes!4656 () Bool)

(assert (=> mapIsEmpty!4656 mapRes!4656))

(declare-fun condMapEmpty!4656 () Bool)

(declare-fun mapDefault!4656 () ValueCell!1095)

(assert (=> mapNonEmpty!4653 (= condMapEmpty!4656 (= mapRest!4653 ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4656)))))

(declare-fun e!86791 () Bool)

(assert (=> mapNonEmpty!4653 (= tp!11223 (and e!86791 mapRes!4656))))

(declare-fun mapNonEmpty!4656 () Bool)

(declare-fun tp!11226 () Bool)

(declare-fun e!86790 () Bool)

(assert (=> mapNonEmpty!4656 (= mapRes!4656 (and tp!11226 e!86790))))

(declare-fun mapRest!4656 () (Array (_ BitVec 32) ValueCell!1095))

(declare-fun mapKey!4656 () (_ BitVec 32))

(declare-fun mapValue!4656 () ValueCell!1095)

(assert (=> mapNonEmpty!4656 (= mapRest!4653 (store mapRest!4656 mapKey!4656 mapValue!4656))))

(declare-fun b!133158 () Bool)

(assert (=> b!133158 (= e!86791 tp_is_empty!2877)))

(declare-fun b!133157 () Bool)

(assert (=> b!133157 (= e!86790 tp_is_empty!2877)))

(assert (= (and mapNonEmpty!4653 condMapEmpty!4656) mapIsEmpty!4656))

(assert (= (and mapNonEmpty!4653 (not condMapEmpty!4656)) mapNonEmpty!4656))

(assert (= (and mapNonEmpty!4656 ((_ is ValueCellFull!1095) mapValue!4656)) b!133157))

(assert (= (and mapNonEmpty!4653 ((_ is ValueCellFull!1095) mapDefault!4656)) b!133158))

(declare-fun m!157085 () Bool)

(assert (=> mapNonEmpty!4656 m!157085))

(declare-fun b_lambda!5947 () Bool)

(assert (= b_lambda!5937 (or (and b!132488 b_free!2921) (and b!132481 b_free!2923 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))))) b_lambda!5947)))

(declare-fun b_lambda!5949 () Bool)

(assert (= b_lambda!5939 (or (and b!132488 b_free!2921) (and b!132481 b_free!2923 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))))) b_lambda!5949)))

(declare-fun b_lambda!5951 () Bool)

(assert (= b_lambda!5943 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!5951)))

(declare-fun b_lambda!5953 () Bool)

(assert (= b_lambda!5945 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!5953)))

(declare-fun b_lambda!5955 () Bool)

(assert (= b_lambda!5941 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!5955)))

(check-sat (not d!40421) (not b_lambda!5951) (not b_lambda!5935) (not b!133132) (not d!40295) (not b!133091) (not d!40357) (not b!133077) (not bm!14690) (not b!132840) (not b_lambda!5949) (not b!132812) (not d!40345) (not b!132814) (not b!132852) (not bm!14655) (not b!132836) (not bm!14691) (not b!133011) (not b!132831) (not b!132925) (not b!132999) (not d!40371) (not b!133117) (not d!40407) (not d!40375) (not d!40319) (not d!40301) (not b!132913) (not b!133031) (not b!133076) (not d!40373) (not d!40297) (not b!132939) (not b!133112) (not b!133134) (not b!133081) (not d!40335) (not b!133123) (not b!132926) (not d!40341) (not d!40337) (not bm!14649) (not d!40311) (not b!132813) (not d!40411) (not b!133114) (not bm!14659) (not bm!14654) (not b!132961) (not d!40327) (not b!132979) (not b!133111) (not d!40419) (not b!132815) (not bm!14675) (not b!132944) (not d!40377) (not d!40383) (not b!132914) (not b!132835) (not bm!14668) (not b!132888) (not b!133015) (not bm!14656) (not b!132918) (not d!40413) (not d!40363) (not d!40347) (not b!133152) (not d!40415) (not d!40299) (not b!132985) (not d!40359) (not b!133008) (not b_lambda!5947) (not b!133136) (not b!133124) (not d!40379) (not b!132980) (not d!40385) (not b!133041) (not b!132818) (not b!133029) (not d!40349) (not b!132971) (not bm!14680) (not b!133019) (not b!133126) (not b!132931) (not mapNonEmpty!4656) (not d!40403) (not d!40351) (not bm!14673) (not b!132941) (not b!132832) (not bm!14692) (not b!133153) (not b!133129) (not b!132924) (not d!40365) (not b!132882) (not b!132970) (not b!132878) (not d!40329) (not b!133086) (not d!40333) (not d!40353) (not mapNonEmpty!4655) (not b!132994) (not b!132998) (not b!132936) (not b!133128) (not d!40405) (not bm!14664) (not b!132921) (not b!133109) (not b!132820) (not b!133133) (not b!132932) (not b!133024) tp_is_empty!2877 (not d!40361) (not bm!14662) (not d!40355) (not b!132978) (not b!132838) (not b!133106) (not b!132983) (not b_lambda!5931) (not bm!14666) (not bm!14694) (not d!40399) (not b!132920) (not b!133078) (not b!133120) (not bm!14678) (not b!133032) (not b!133131) b_and!8263 (not b!132877) (not b!132981) (not b!132968) (not b!133020) (not b_next!2923) (not b_next!2921) (not d!40389) (not bm!14646) (not b!132943) (not d!40369) (not b!133010) (not d!40309) (not bm!14671) (not b_lambda!5953) (not b!133138) (not d!40401) (not b!132992) (not b!133027) (not b!132967) (not b!133006) (not bm!14693) (not d!40323) (not b!132826) (not bm!14669) (not bm!14661) (not d!40393) (not b!133115) (not b!132833) (not b!132966) (not b!132986) (not b!132927) (not bm!14676) (not b!132880) (not b!132969) b_and!8261 (not b_lambda!5955) (not b!132915) (not d!40321) (not b!133095) (not b!132922) (not b!133003) (not b!132817) (not b!132977) (not d!40367) (not d!40391) (not d!40381))
(check-sat b_and!8261 b_and!8263 (not b_next!2921) (not b_next!2923))
(get-model)

(declare-fun d!40423 () Bool)

(declare-fun res!64117 () Bool)

(declare-fun e!86792 () Bool)

(assert (=> d!40423 (=> res!64117 e!86792)))

(assert (=> d!40423 (= res!64117 (and ((_ is Cons!1731) (toList!869 lt!69221)) (= (_1!1314 (h!2336 (toList!869 lt!69221))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40423 (= (containsKey!175 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000) e!86792)))

(declare-fun b!133159 () Bool)

(declare-fun e!86793 () Bool)

(assert (=> b!133159 (= e!86792 e!86793)))

(declare-fun res!64118 () Bool)

(assert (=> b!133159 (=> (not res!64118) (not e!86793))))

(assert (=> b!133159 (= res!64118 (and (or (not ((_ is Cons!1731) (toList!869 lt!69221))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69221))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1731) (toList!869 lt!69221)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69221))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133160 () Bool)

(assert (=> b!133160 (= e!86793 (containsKey!175 (t!6198 (toList!869 lt!69221)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!40423 (not res!64117)) b!133159))

(assert (= (and b!133159 res!64118) b!133160))

(declare-fun m!157087 () Bool)

(assert (=> b!133160 m!157087))

(assert (=> d!40297 d!40423))

(declare-fun d!40425 () Bool)

(assert (=> d!40425 (= (get!1491 (getValueByKey!171 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3201 (getValueByKey!171 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40299 d!40425))

(declare-fun b!133161 () Bool)

(declare-fun e!86794 () Option!177)

(assert (=> b!133161 (= e!86794 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69221)))))))

(declare-fun b!133164 () Bool)

(declare-fun e!86795 () Option!177)

(assert (=> b!133164 (= e!86795 None!175)))

(declare-fun b!133163 () Bool)

(assert (=> b!133163 (= e!86795 (getValueByKey!171 (t!6198 (toList!869 lt!69221)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133162 () Bool)

(assert (=> b!133162 (= e!86794 e!86795)))

(declare-fun c!24644 () Bool)

(assert (=> b!133162 (= c!24644 (and ((_ is Cons!1731) (toList!869 lt!69221)) (not (= (_1!1314 (h!2336 (toList!869 lt!69221))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!40427 () Bool)

(declare-fun c!24643 () Bool)

(assert (=> d!40427 (= c!24643 (and ((_ is Cons!1731) (toList!869 lt!69221)) (= (_1!1314 (h!2336 (toList!869 lt!69221))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40427 (= (getValueByKey!171 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000) e!86794)))

(assert (= (and d!40427 c!24643) b!133161))

(assert (= (and d!40427 (not c!24643)) b!133162))

(assert (= (and b!133162 c!24644) b!133163))

(assert (= (and b!133162 (not c!24644)) b!133164))

(declare-fun m!157089 () Bool)

(assert (=> b!133163 m!157089))

(assert (=> d!40299 d!40427))

(declare-fun d!40429 () Bool)

(assert (=> d!40429 (= (get!1489 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3196 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!132966 d!40429))

(declare-fun d!40431 () Bool)

(declare-fun e!86796 () Bool)

(assert (=> d!40431 e!86796))

(declare-fun res!64119 () Bool)

(assert (=> d!40431 (=> res!64119 e!86796)))

(declare-fun lt!69646 () Bool)

(assert (=> d!40431 (= res!64119 (not lt!69646))))

(declare-fun lt!69648 () Bool)

(assert (=> d!40431 (= lt!69646 lt!69648)))

(declare-fun lt!69647 () Unit!4150)

(declare-fun e!86797 () Unit!4150)

(assert (=> d!40431 (= lt!69647 e!86797)))

(declare-fun c!24645 () Bool)

(assert (=> d!40431 (= c!24645 lt!69648)))

(assert (=> d!40431 (= lt!69648 (containsKey!175 (toList!869 lt!69459) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40431 (= (contains!896 lt!69459 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69646)))

(declare-fun b!133165 () Bool)

(declare-fun lt!69649 () Unit!4150)

(assert (=> b!133165 (= e!86797 lt!69649)))

(assert (=> b!133165 (= lt!69649 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69459) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> b!133165 (isDefined!125 (getValueByKey!171 (toList!869 lt!69459) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133166 () Bool)

(declare-fun Unit!4169 () Unit!4150)

(assert (=> b!133166 (= e!86797 Unit!4169)))

(declare-fun b!133167 () Bool)

(assert (=> b!133167 (= e!86796 (isDefined!125 (getValueByKey!171 (toList!869 lt!69459) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!40431 c!24645) b!133165))

(assert (= (and d!40431 (not c!24645)) b!133166))

(assert (= (and d!40431 (not res!64119)) b!133167))

(declare-fun m!157091 () Bool)

(assert (=> d!40431 m!157091))

(declare-fun m!157093 () Bool)

(assert (=> b!133165 m!157093))

(assert (=> b!133165 m!156773))

(assert (=> b!133165 m!156773))

(declare-fun m!157095 () Bool)

(assert (=> b!133165 m!157095))

(assert (=> b!133167 m!156773))

(assert (=> b!133167 m!156773))

(assert (=> b!133167 m!157095))

(assert (=> d!40359 d!40431))

(declare-fun b!133168 () Bool)

(declare-fun e!86798 () Option!177)

(assert (=> b!133168 (= e!86798 (Some!176 (_2!1314 (h!2336 lt!69461))))))

(declare-fun b!133171 () Bool)

(declare-fun e!86799 () Option!177)

(assert (=> b!133171 (= e!86799 None!175)))

(declare-fun b!133170 () Bool)

(assert (=> b!133170 (= e!86799 (getValueByKey!171 (t!6198 lt!69461) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133169 () Bool)

(assert (=> b!133169 (= e!86798 e!86799)))

(declare-fun c!24647 () Bool)

(assert (=> b!133169 (= c!24647 (and ((_ is Cons!1731) lt!69461) (not (= (_1!1314 (h!2336 lt!69461)) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!24646 () Bool)

(declare-fun d!40433 () Bool)

(assert (=> d!40433 (= c!24646 (and ((_ is Cons!1731) lt!69461) (= (_1!1314 (h!2336 lt!69461)) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40433 (= (getValueByKey!171 lt!69461 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!86798)))

(assert (= (and d!40433 c!24646) b!133168))

(assert (= (and d!40433 (not c!24646)) b!133169))

(assert (= (and b!133169 c!24647) b!133170))

(assert (= (and b!133169 (not c!24647)) b!133171))

(declare-fun m!157097 () Bool)

(assert (=> b!133170 m!157097))

(assert (=> d!40359 d!40433))

(declare-fun d!40435 () Bool)

(assert (=> d!40435 (= (getValueByKey!171 lt!69461 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun lt!69652 () Unit!4150)

(declare-fun choose!834 (List!1735 (_ BitVec 64) V!3483) Unit!4150)

(assert (=> d!40435 (= lt!69652 (choose!834 lt!69461 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun e!86802 () Bool)

(assert (=> d!40435 e!86802))

(declare-fun res!64124 () Bool)

(assert (=> d!40435 (=> (not res!64124) (not e!86802))))

(assert (=> d!40435 (= res!64124 (isStrictlySorted!317 lt!69461))))

(assert (=> d!40435 (= (lemmaContainsTupThenGetReturnValue!88 lt!69461 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69652)))

(declare-fun b!133176 () Bool)

(declare-fun res!64125 () Bool)

(assert (=> b!133176 (=> (not res!64125) (not e!86802))))

(assert (=> b!133176 (= res!64125 (containsKey!175 lt!69461 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133177 () Bool)

(assert (=> b!133177 (= e!86802 (contains!898 lt!69461 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!40435 res!64124) b!133176))

(assert (= (and b!133176 res!64125) b!133177))

(assert (=> d!40435 m!156767))

(declare-fun m!157099 () Bool)

(assert (=> d!40435 m!157099))

(declare-fun m!157101 () Bool)

(assert (=> d!40435 m!157101))

(declare-fun m!157103 () Bool)

(assert (=> b!133176 m!157103))

(declare-fun m!157105 () Bool)

(assert (=> b!133177 m!157105))

(assert (=> d!40359 d!40435))

(declare-fun bm!14701 () Bool)

(declare-fun call!14704 () List!1735)

(declare-fun call!14705 () List!1735)

(assert (=> bm!14701 (= call!14704 call!14705)))

(declare-fun lt!69655 () List!1735)

(declare-fun b!133198 () Bool)

(declare-fun e!86815 () Bool)

(assert (=> b!133198 (= e!86815 (contains!898 lt!69655 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!133199 () Bool)

(declare-fun e!86817 () List!1735)

(assert (=> b!133199 (= e!86817 call!14705)))

(declare-fun b!133200 () Bool)

(declare-fun res!64130 () Bool)

(assert (=> b!133200 (=> (not res!64130) (not e!86815))))

(assert (=> b!133200 (= res!64130 (containsKey!175 lt!69655 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133201 () Bool)

(declare-fun e!86813 () List!1735)

(assert (=> b!133201 (= e!86813 (insertStrictlySorted!90 (t!6198 (toList!869 lt!69229)) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133202 () Bool)

(declare-fun e!86814 () List!1735)

(assert (=> b!133202 (= e!86814 call!14704)))

(declare-fun bm!14702 () Bool)

(declare-fun call!14706 () List!1735)

(assert (=> bm!14702 (= call!14705 call!14706)))

(declare-fun b!133204 () Bool)

(declare-fun c!24658 () Bool)

(declare-fun c!24656 () Bool)

(assert (=> b!133204 (= e!86813 (ite c!24658 (t!6198 (toList!869 lt!69229)) (ite c!24656 (Cons!1731 (h!2336 (toList!869 lt!69229)) (t!6198 (toList!869 lt!69229))) Nil!1732)))))

(declare-fun b!133205 () Bool)

(declare-fun e!86816 () List!1735)

(assert (=> b!133205 (= e!86816 call!14706)))

(declare-fun b!133206 () Bool)

(assert (=> b!133206 (= c!24656 (and ((_ is Cons!1731) (toList!869 lt!69229)) (bvsgt (_1!1314 (h!2336 (toList!869 lt!69229))) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> b!133206 (= e!86817 e!86814)))

(declare-fun d!40437 () Bool)

(assert (=> d!40437 e!86815))

(declare-fun res!64131 () Bool)

(assert (=> d!40437 (=> (not res!64131) (not e!86815))))

(assert (=> d!40437 (= res!64131 (isStrictlySorted!317 lt!69655))))

(assert (=> d!40437 (= lt!69655 e!86816)))

(declare-fun c!24657 () Bool)

(assert (=> d!40437 (= c!24657 (and ((_ is Cons!1731) (toList!869 lt!69229)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69229))) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40437 (isStrictlySorted!317 (toList!869 lt!69229))))

(assert (=> d!40437 (= (insertStrictlySorted!90 (toList!869 lt!69229) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69655)))

(declare-fun b!133203 () Bool)

(assert (=> b!133203 (= e!86816 e!86817)))

(assert (=> b!133203 (= c!24658 (and ((_ is Cons!1731) (toList!869 lt!69229)) (= (_1!1314 (h!2336 (toList!869 lt!69229))) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!133207 () Bool)

(assert (=> b!133207 (= e!86814 call!14704)))

(declare-fun bm!14703 () Bool)

(declare-fun $colon$colon!91 (List!1735 tuple2!2608) List!1735)

(assert (=> bm!14703 (= call!14706 ($colon$colon!91 e!86813 (ite c!24657 (h!2336 (toList!869 lt!69229)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!24659 () Bool)

(assert (=> bm!14703 (= c!24659 c!24657)))

(assert (= (and d!40437 c!24657) b!133205))

(assert (= (and d!40437 (not c!24657)) b!133203))

(assert (= (and b!133203 c!24658) b!133199))

(assert (= (and b!133203 (not c!24658)) b!133206))

(assert (= (and b!133206 c!24656) b!133207))

(assert (= (and b!133206 (not c!24656)) b!133202))

(assert (= (or b!133207 b!133202) bm!14701))

(assert (= (or b!133199 bm!14701) bm!14702))

(assert (= (or b!133205 bm!14702) bm!14703))

(assert (= (and bm!14703 c!24659) b!133201))

(assert (= (and bm!14703 (not c!24659)) b!133204))

(assert (= (and d!40437 res!64131) b!133200))

(assert (= (and b!133200 res!64130) b!133198))

(declare-fun m!157107 () Bool)

(assert (=> b!133200 m!157107))

(declare-fun m!157109 () Bool)

(assert (=> b!133198 m!157109))

(declare-fun m!157111 () Bool)

(assert (=> d!40437 m!157111))

(declare-fun m!157113 () Bool)

(assert (=> d!40437 m!157113))

(declare-fun m!157115 () Bool)

(assert (=> bm!14703 m!157115))

(declare-fun m!157117 () Bool)

(assert (=> b!133201 m!157117))

(assert (=> d!40359 d!40437))

(assert (=> b!133095 d!40387))

(declare-fun d!40439 () Bool)

(declare-fun e!86818 () Bool)

(assert (=> d!40439 e!86818))

(declare-fun res!64132 () Bool)

(assert (=> d!40439 (=> res!64132 e!86818)))

(declare-fun lt!69656 () Bool)

(assert (=> d!40439 (= res!64132 (not lt!69656))))

(declare-fun lt!69658 () Bool)

(assert (=> d!40439 (= lt!69656 lt!69658)))

(declare-fun lt!69657 () Unit!4150)

(declare-fun e!86819 () Unit!4150)

(assert (=> d!40439 (= lt!69657 e!86819)))

(declare-fun c!24660 () Bool)

(assert (=> d!40439 (= c!24660 lt!69658)))

(assert (=> d!40439 (= lt!69658 (containsKey!175 (toList!869 lt!69510) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40439 (= (contains!896 lt!69510 #b1000000000000000000000000000000000000000000000000000000000000000) lt!69656)))

(declare-fun b!133208 () Bool)

(declare-fun lt!69659 () Unit!4150)

(assert (=> b!133208 (= e!86819 lt!69659)))

(assert (=> b!133208 (= lt!69659 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69510) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133208 (isDefined!125 (getValueByKey!171 (toList!869 lt!69510) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133209 () Bool)

(declare-fun Unit!4170 () Unit!4150)

(assert (=> b!133209 (= e!86819 Unit!4170)))

(declare-fun b!133210 () Bool)

(assert (=> b!133210 (= e!86818 (isDefined!125 (getValueByKey!171 (toList!869 lt!69510) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40439 c!24660) b!133208))

(assert (= (and d!40439 (not c!24660)) b!133209))

(assert (= (and d!40439 (not res!64132)) b!133210))

(declare-fun m!157119 () Bool)

(assert (=> d!40439 m!157119))

(declare-fun m!157121 () Bool)

(assert (=> b!133208 m!157121))

(declare-fun m!157123 () Bool)

(assert (=> b!133208 m!157123))

(assert (=> b!133208 m!157123))

(declare-fun m!157125 () Bool)

(assert (=> b!133208 m!157125))

(assert (=> b!133210 m!157123))

(assert (=> b!133210 m!157123))

(assert (=> b!133210 m!157125))

(assert (=> bm!14678 d!40439))

(declare-fun d!40441 () Bool)

(assert (=> d!40441 (contains!896 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))

(declare-fun lt!69662 () Unit!4150)

(declare-fun choose!835 (array!4780 array!4782 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 64) (_ BitVec 32) Int) Unit!4150)

(assert (=> d!40441 (= lt!69662 (choose!835 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(assert (=> d!40441 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40441 (= (lemmaArrayContainsKeyThenInListMap!42 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69662)))

(declare-fun bs!5503 () Bool)

(assert (= bs!5503 d!40441))

(assert (=> bs!5503 m!156355))

(assert (=> bs!5503 m!156355))

(assert (=> bs!5503 m!156287))

(assert (=> bs!5503 m!156963))

(assert (=> bs!5503 m!156287))

(declare-fun m!157127 () Bool)

(assert (=> bs!5503 m!157127))

(assert (=> bs!5503 m!156571))

(assert (=> b!133086 d!40441))

(declare-fun d!40443 () Bool)

(declare-fun e!86820 () Bool)

(assert (=> d!40443 e!86820))

(declare-fun res!64133 () Bool)

(assert (=> d!40443 (=> res!64133 e!86820)))

(declare-fun lt!69663 () Bool)

(assert (=> d!40443 (= res!64133 (not lt!69663))))

(declare-fun lt!69665 () Bool)

(assert (=> d!40443 (= lt!69663 lt!69665)))

(declare-fun lt!69664 () Unit!4150)

(declare-fun e!86821 () Unit!4150)

(assert (=> d!40443 (= lt!69664 e!86821)))

(declare-fun c!24661 () Bool)

(assert (=> d!40443 (= c!24661 lt!69665)))

(assert (=> d!40443 (= lt!69665 (containsKey!175 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40443 (= (contains!896 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) lt!69663)))

(declare-fun b!133211 () Bool)

(declare-fun lt!69666 () Unit!4150)

(assert (=> b!133211 (= e!86821 lt!69666)))

(assert (=> b!133211 (= lt!69666 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> b!133211 (isDefined!125 (getValueByKey!171 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!133212 () Bool)

(declare-fun Unit!4171 () Unit!4150)

(assert (=> b!133212 (= e!86821 Unit!4171)))

(declare-fun b!133213 () Bool)

(assert (=> b!133213 (= e!86820 (isDefined!125 (getValueByKey!171 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (= (and d!40443 c!24661) b!133211))

(assert (= (and d!40443 (not c!24661)) b!133212))

(assert (= (and d!40443 (not res!64133)) b!133213))

(assert (=> d!40443 m!156287))

(declare-fun m!157129 () Bool)

(assert (=> d!40443 m!157129))

(assert (=> b!133211 m!156287))

(declare-fun m!157131 () Bool)

(assert (=> b!133211 m!157131))

(assert (=> b!133211 m!156287))

(declare-fun m!157133 () Bool)

(assert (=> b!133211 m!157133))

(assert (=> b!133211 m!157133))

(declare-fun m!157135 () Bool)

(assert (=> b!133211 m!157135))

(assert (=> b!133213 m!156287))

(assert (=> b!133213 m!157133))

(assert (=> b!133213 m!157133))

(assert (=> b!133213 m!157135))

(assert (=> b!133086 d!40443))

(assert (=> b!133086 d!40335))

(assert (=> b!132913 d!40343))

(declare-fun d!40445 () Bool)

(assert (=> d!40445 (not (contains!896 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402)) lt!69401))))

(declare-fun lt!69669 () Unit!4150)

(declare-fun choose!836 (ListLongMap!1707 (_ BitVec 64) V!3483 (_ BitVec 64)) Unit!4150)

(assert (=> d!40445 (= lt!69669 (choose!836 lt!69400 lt!69404 lt!69402 lt!69401))))

(declare-fun e!86824 () Bool)

(assert (=> d!40445 e!86824))

(declare-fun res!64136 () Bool)

(assert (=> d!40445 (=> (not res!64136) (not e!86824))))

(assert (=> d!40445 (= res!64136 (not (contains!896 lt!69400 lt!69401)))))

(assert (=> d!40445 (= (addStillNotContains!63 lt!69400 lt!69404 lt!69402 lt!69401) lt!69669)))

(declare-fun b!133217 () Bool)

(assert (=> b!133217 (= e!86824 (not (= lt!69404 lt!69401)))))

(assert (= (and d!40445 res!64136) b!133217))

(assert (=> d!40445 m!156615))

(assert (=> d!40445 m!156615))

(assert (=> d!40445 m!156617))

(declare-fun m!157137 () Bool)

(assert (=> d!40445 m!157137))

(declare-fun m!157139 () Bool)

(assert (=> d!40445 m!157139))

(assert (=> b!132913 d!40445))

(declare-fun d!40447 () Bool)

(declare-fun e!86825 () Bool)

(assert (=> d!40447 e!86825))

(declare-fun res!64137 () Bool)

(assert (=> d!40447 (=> res!64137 e!86825)))

(declare-fun lt!69670 () Bool)

(assert (=> d!40447 (= res!64137 (not lt!69670))))

(declare-fun lt!69672 () Bool)

(assert (=> d!40447 (= lt!69670 lt!69672)))

(declare-fun lt!69671 () Unit!4150)

(declare-fun e!86826 () Unit!4150)

(assert (=> d!40447 (= lt!69671 e!86826)))

(declare-fun c!24662 () Bool)

(assert (=> d!40447 (= c!24662 lt!69672)))

(assert (=> d!40447 (= lt!69672 (containsKey!175 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402))) lt!69401))))

(assert (=> d!40447 (= (contains!896 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402)) lt!69401) lt!69670)))

(declare-fun b!133218 () Bool)

(declare-fun lt!69673 () Unit!4150)

(assert (=> b!133218 (= e!86826 lt!69673)))

(assert (=> b!133218 (= lt!69673 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402))) lt!69401))))

(assert (=> b!133218 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402))) lt!69401))))

(declare-fun b!133219 () Bool)

(declare-fun Unit!4172 () Unit!4150)

(assert (=> b!133219 (= e!86826 Unit!4172)))

(declare-fun b!133220 () Bool)

(assert (=> b!133220 (= e!86825 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402))) lt!69401)))))

(assert (= (and d!40447 c!24662) b!133218))

(assert (= (and d!40447 (not c!24662)) b!133219))

(assert (= (and d!40447 (not res!64137)) b!133220))

(declare-fun m!157141 () Bool)

(assert (=> d!40447 m!157141))

(declare-fun m!157143 () Bool)

(assert (=> b!133218 m!157143))

(declare-fun m!157145 () Bool)

(assert (=> b!133218 m!157145))

(assert (=> b!133218 m!157145))

(declare-fun m!157147 () Bool)

(assert (=> b!133218 m!157147))

(assert (=> b!133220 m!157145))

(assert (=> b!133220 m!157145))

(assert (=> b!133220 m!157147))

(assert (=> b!132913 d!40447))

(declare-fun d!40449 () Bool)

(declare-fun e!86827 () Bool)

(assert (=> d!40449 e!86827))

(declare-fun res!64139 () Bool)

(assert (=> d!40449 (=> (not res!64139) (not e!86827))))

(declare-fun lt!69675 () ListLongMap!1707)

(assert (=> d!40449 (= res!64139 (contains!896 lt!69675 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69677 () List!1735)

(assert (=> d!40449 (= lt!69675 (ListLongMap!1708 lt!69677))))

(declare-fun lt!69676 () Unit!4150)

(declare-fun lt!69674 () Unit!4150)

(assert (=> d!40449 (= lt!69676 lt!69674)))

(assert (=> d!40449 (= (getValueByKey!171 lt!69677 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40449 (= lt!69674 (lemmaContainsTupThenGetReturnValue!88 lt!69677 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40449 (= lt!69677 (insertStrictlySorted!90 (toList!869 call!14662) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40449 (= (+!170 call!14662 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69675)))

(declare-fun b!133221 () Bool)

(declare-fun res!64138 () Bool)

(assert (=> b!133221 (=> (not res!64138) (not e!86827))))

(assert (=> b!133221 (= res!64138 (= (getValueByKey!171 (toList!869 lt!69675) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133222 () Bool)

(assert (=> b!133222 (= e!86827 (contains!898 (toList!869 lt!69675) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40449 res!64139) b!133221))

(assert (= (and b!133221 res!64138) b!133222))

(declare-fun m!157149 () Bool)

(assert (=> d!40449 m!157149))

(declare-fun m!157151 () Bool)

(assert (=> d!40449 m!157151))

(declare-fun m!157153 () Bool)

(assert (=> d!40449 m!157153))

(declare-fun m!157155 () Bool)

(assert (=> d!40449 m!157155))

(declare-fun m!157157 () Bool)

(assert (=> b!133221 m!157157))

(declare-fun m!157159 () Bool)

(assert (=> b!133222 m!157159))

(assert (=> b!132913 d!40449))

(declare-fun d!40451 () Bool)

(declare-fun e!86828 () Bool)

(assert (=> d!40451 e!86828))

(declare-fun res!64141 () Bool)

(assert (=> d!40451 (=> (not res!64141) (not e!86828))))

(declare-fun lt!69679 () ListLongMap!1707)

(assert (=> d!40451 (= res!64141 (contains!896 lt!69679 (_1!1314 (tuple2!2609 lt!69404 lt!69402))))))

(declare-fun lt!69681 () List!1735)

(assert (=> d!40451 (= lt!69679 (ListLongMap!1708 lt!69681))))

(declare-fun lt!69680 () Unit!4150)

(declare-fun lt!69678 () Unit!4150)

(assert (=> d!40451 (= lt!69680 lt!69678)))

(assert (=> d!40451 (= (getValueByKey!171 lt!69681 (_1!1314 (tuple2!2609 lt!69404 lt!69402))) (Some!176 (_2!1314 (tuple2!2609 lt!69404 lt!69402))))))

(assert (=> d!40451 (= lt!69678 (lemmaContainsTupThenGetReturnValue!88 lt!69681 (_1!1314 (tuple2!2609 lt!69404 lt!69402)) (_2!1314 (tuple2!2609 lt!69404 lt!69402))))))

(assert (=> d!40451 (= lt!69681 (insertStrictlySorted!90 (toList!869 lt!69400) (_1!1314 (tuple2!2609 lt!69404 lt!69402)) (_2!1314 (tuple2!2609 lt!69404 lt!69402))))))

(assert (=> d!40451 (= (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402)) lt!69679)))

(declare-fun b!133223 () Bool)

(declare-fun res!64140 () Bool)

(assert (=> b!133223 (=> (not res!64140) (not e!86828))))

(assert (=> b!133223 (= res!64140 (= (getValueByKey!171 (toList!869 lt!69679) (_1!1314 (tuple2!2609 lt!69404 lt!69402))) (Some!176 (_2!1314 (tuple2!2609 lt!69404 lt!69402)))))))

(declare-fun b!133224 () Bool)

(assert (=> b!133224 (= e!86828 (contains!898 (toList!869 lt!69679) (tuple2!2609 lt!69404 lt!69402)))))

(assert (= (and d!40451 res!64141) b!133223))

(assert (= (and b!133223 res!64140) b!133224))

(declare-fun m!157161 () Bool)

(assert (=> d!40451 m!157161))

(declare-fun m!157163 () Bool)

(assert (=> d!40451 m!157163))

(declare-fun m!157165 () Bool)

(assert (=> d!40451 m!157165))

(declare-fun m!157167 () Bool)

(assert (=> d!40451 m!157167))

(declare-fun m!157169 () Bool)

(assert (=> b!133223 m!157169))

(declare-fun m!157171 () Bool)

(assert (=> b!133224 m!157171))

(assert (=> b!132913 d!40451))

(declare-fun d!40453 () Bool)

(assert (=> d!40453 (= (inRange!0 (ite c!24573 (index!3300 lt!69371) (index!3303 lt!69371)) (mask!7165 newMap!16)) (and (bvsge (ite c!24573 (index!3300 lt!69371) (index!3303 lt!69371)) #b00000000000000000000000000000000) (bvslt (ite c!24573 (index!3300 lt!69371) (index!3303 lt!69371)) (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!14654 d!40453))

(declare-fun lt!69684 () Bool)

(declare-fun d!40455 () Bool)

(declare-fun content!132 (List!1735) (InoxSet tuple2!2608))

(assert (=> d!40455 (= lt!69684 (select (content!132 (toList!869 lt!69356)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!86834 () Bool)

(assert (=> d!40455 (= lt!69684 e!86834)))

(declare-fun res!64146 () Bool)

(assert (=> d!40455 (=> (not res!64146) (not e!86834))))

(assert (=> d!40455 (= res!64146 ((_ is Cons!1731) (toList!869 lt!69356)))))

(assert (=> d!40455 (= (contains!898 (toList!869 lt!69356) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69684)))

(declare-fun b!133229 () Bool)

(declare-fun e!86833 () Bool)

(assert (=> b!133229 (= e!86834 e!86833)))

(declare-fun res!64147 () Bool)

(assert (=> b!133229 (=> res!64147 e!86833)))

(assert (=> b!133229 (= res!64147 (= (h!2336 (toList!869 lt!69356)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133230 () Bool)

(assert (=> b!133230 (= e!86833 (contains!898 (t!6198 (toList!869 lt!69356)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40455 res!64146) b!133229))

(assert (= (and b!133229 (not res!64147)) b!133230))

(declare-fun m!157173 () Bool)

(assert (=> d!40455 m!157173))

(declare-fun m!157175 () Bool)

(assert (=> d!40455 m!157175))

(declare-fun m!157177 () Bool)

(assert (=> b!133230 m!157177))

(assert (=> b!132832 d!40455))

(declare-fun d!40457 () Bool)

(declare-fun e!86835 () Bool)

(assert (=> d!40457 e!86835))

(declare-fun res!64148 () Bool)

(assert (=> d!40457 (=> res!64148 e!86835)))

(declare-fun lt!69685 () Bool)

(assert (=> d!40457 (= res!64148 (not lt!69685))))

(declare-fun lt!69687 () Bool)

(assert (=> d!40457 (= lt!69685 lt!69687)))

(declare-fun lt!69686 () Unit!4150)

(declare-fun e!86836 () Unit!4150)

(assert (=> d!40457 (= lt!69686 e!86836)))

(declare-fun c!24663 () Bool)

(assert (=> d!40457 (= c!24663 lt!69687)))

(assert (=> d!40457 (= lt!69687 (containsKey!175 (toList!869 lt!69510) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!40457 (= (contains!896 lt!69510 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!69685)))

(declare-fun b!133231 () Bool)

(declare-fun lt!69688 () Unit!4150)

(assert (=> b!133231 (= e!86836 lt!69688)))

(assert (=> b!133231 (= lt!69688 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69510) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133231 (isDefined!125 (getValueByKey!171 (toList!869 lt!69510) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133232 () Bool)

(declare-fun Unit!4173 () Unit!4150)

(assert (=> b!133232 (= e!86836 Unit!4173)))

(declare-fun b!133233 () Bool)

(assert (=> b!133233 (= e!86835 (isDefined!125 (getValueByKey!171 (toList!869 lt!69510) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!40457 c!24663) b!133231))

(assert (= (and d!40457 (not c!24663)) b!133232))

(assert (= (and d!40457 (not res!64148)) b!133233))

(assert (=> d!40457 m!156533))

(declare-fun m!157179 () Bool)

(assert (=> d!40457 m!157179))

(assert (=> b!133231 m!156533))

(declare-fun m!157181 () Bool)

(assert (=> b!133231 m!157181))

(assert (=> b!133231 m!156533))

(declare-fun m!157183 () Bool)

(assert (=> b!133231 m!157183))

(assert (=> b!133231 m!157183))

(declare-fun m!157185 () Bool)

(assert (=> b!133231 m!157185))

(assert (=> b!133233 m!156533))

(assert (=> b!133233 m!157183))

(assert (=> b!133233 m!157183))

(assert (=> b!133233 m!157185))

(assert (=> b!133024 d!40457))

(declare-fun b!133234 () Bool)

(declare-fun e!86838 () Bool)

(declare-fun call!14707 () Bool)

(assert (=> b!133234 (= e!86838 call!14707)))

(declare-fun b!133235 () Bool)

(declare-fun e!86839 () Bool)

(assert (=> b!133235 (= e!86838 e!86839)))

(declare-fun lt!69690 () (_ BitVec 64))

(assert (=> b!133235 (= lt!69690 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!69691 () Unit!4150)

(assert (=> b!133235 (= lt!69691 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 newMap!16) lt!69690 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!133235 (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69690 #b00000000000000000000000000000000)))

(declare-fun lt!69689 () Unit!4150)

(assert (=> b!133235 (= lt!69689 lt!69691)))

(declare-fun res!64149 () Bool)

(assert (=> b!133235 (= res!64149 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 newMap!16) (mask!7165 newMap!16)) (Found!285 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!133235 (=> (not res!64149) (not e!86839))))

(declare-fun b!133236 () Bool)

(assert (=> b!133236 (= e!86839 call!14707)))

(declare-fun b!133237 () Bool)

(declare-fun e!86837 () Bool)

(assert (=> b!133237 (= e!86837 e!86838)))

(declare-fun c!24664 () Bool)

(assert (=> b!133237 (= c!24664 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!14704 () Bool)

(assert (=> bm!14704 (= call!14707 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun d!40459 () Bool)

(declare-fun res!64150 () Bool)

(assert (=> d!40459 (=> res!64150 e!86837)))

(assert (=> d!40459 (= res!64150 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!40459 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4614 newMap!16) (mask!7165 newMap!16)) e!86837)))

(assert (= (and d!40459 (not res!64150)) b!133237))

(assert (= (and b!133237 c!24664) b!133235))

(assert (= (and b!133237 (not c!24664)) b!133234))

(assert (= (and b!133235 res!64149) b!133236))

(assert (= (or b!133236 b!133234) bm!14704))

(declare-fun m!157187 () Bool)

(assert (=> b!133235 m!157187))

(declare-fun m!157189 () Bool)

(assert (=> b!133235 m!157189))

(declare-fun m!157191 () Bool)

(assert (=> b!133235 m!157191))

(assert (=> b!133235 m!157187))

(declare-fun m!157193 () Bool)

(assert (=> b!133235 m!157193))

(assert (=> b!133237 m!157187))

(assert (=> b!133237 m!157187))

(declare-fun m!157195 () Bool)

(assert (=> b!133237 m!157195))

(declare-fun m!157197 () Bool)

(assert (=> bm!14704 m!157197))

(assert (=> bm!14693 d!40459))

(declare-fun d!40461 () Bool)

(declare-fun lt!69692 () Bool)

(assert (=> d!40461 (= lt!69692 (select (content!131 (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!86840 () Bool)

(assert (=> d!40461 (= lt!69692 e!86840)))

(declare-fun res!64151 () Bool)

(assert (=> d!40461 (=> (not res!64151) (not e!86840))))

(assert (=> d!40461 (= res!64151 ((_ is Cons!1732) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)))))

(assert (=> d!40461 (= (contains!897 (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) lt!69692)))

(declare-fun b!133238 () Bool)

(declare-fun e!86841 () Bool)

(assert (=> b!133238 (= e!86840 e!86841)))

(declare-fun res!64152 () Bool)

(assert (=> b!133238 (=> res!64152 e!86841)))

(assert (=> b!133238 (= res!64152 (= (h!2337 (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133239 () Bool)

(assert (=> b!133239 (= e!86841 (contains!897 (t!6199 (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!40461 res!64151) b!133238))

(assert (= (and b!133238 (not res!64152)) b!133239))

(declare-fun m!157199 () Bool)

(assert (=> d!40461 m!157199))

(assert (=> d!40461 m!156593))

(declare-fun m!157201 () Bool)

(assert (=> d!40461 m!157201))

(assert (=> b!133239 m!156593))

(declare-fun m!157203 () Bool)

(assert (=> b!133239 m!157203))

(assert (=> b!133126 d!40461))

(declare-fun d!40463 () Bool)

(assert (=> d!40463 (= (isDefined!125 (getValueByKey!171 (toList!869 e!86545) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))) (not (isEmpty!415 (getValueByKey!171 (toList!869 e!86545) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun bs!5504 () Bool)

(assert (= bs!5504 d!40463))

(assert (=> bs!5504 m!156553))

(declare-fun m!157205 () Bool)

(assert (=> bs!5504 m!157205))

(assert (=> b!132835 d!40463))

(declare-fun b!133240 () Bool)

(declare-fun e!86842 () Option!177)

(assert (=> b!133240 (= e!86842 (Some!176 (_2!1314 (h!2336 (toList!869 e!86545)))))))

(declare-fun b!133243 () Bool)

(declare-fun e!86843 () Option!177)

(assert (=> b!133243 (= e!86843 None!175)))

(declare-fun b!133242 () Bool)

(assert (=> b!133242 (= e!86843 (getValueByKey!171 (t!6198 (toList!869 e!86545)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!133241 () Bool)

(assert (=> b!133241 (= e!86842 e!86843)))

(declare-fun c!24666 () Bool)

(assert (=> b!133241 (= c!24666 (and ((_ is Cons!1731) (toList!869 e!86545)) (not (= (_1!1314 (h!2336 (toList!869 e!86545))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun c!24665 () Bool)

(declare-fun d!40465 () Bool)

(assert (=> d!40465 (= c!24665 (and ((_ is Cons!1731) (toList!869 e!86545)) (= (_1!1314 (h!2336 (toList!869 e!86545))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!40465 (= (getValueByKey!171 (toList!869 e!86545) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) e!86842)))

(assert (= (and d!40465 c!24665) b!133240))

(assert (= (and d!40465 (not c!24665)) b!133241))

(assert (= (and b!133241 c!24666) b!133242))

(assert (= (and b!133241 (not c!24666)) b!133243))

(assert (=> b!133242 m!156287))

(declare-fun m!157207 () Bool)

(assert (=> b!133242 m!157207))

(assert (=> b!132835 d!40465))

(declare-fun d!40467 () Bool)

(declare-fun e!86844 () Bool)

(assert (=> d!40467 e!86844))

(declare-fun res!64153 () Bool)

(assert (=> d!40467 (=> res!64153 e!86844)))

(declare-fun lt!69693 () Bool)

(assert (=> d!40467 (= res!64153 (not lt!69693))))

(declare-fun lt!69695 () Bool)

(assert (=> d!40467 (= lt!69693 lt!69695)))

(declare-fun lt!69694 () Unit!4150)

(declare-fun e!86845 () Unit!4150)

(assert (=> d!40467 (= lt!69694 e!86845)))

(declare-fun c!24667 () Bool)

(assert (=> d!40467 (= c!24667 lt!69695)))

(assert (=> d!40467 (= lt!69695 (containsKey!175 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(assert (=> d!40467 (= (contains!896 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))) lt!69693)))

(declare-fun b!133244 () Bool)

(declare-fun lt!69696 () Unit!4150)

(assert (=> b!133244 (= e!86845 lt!69696)))

(assert (=> b!133244 (= lt!69696 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(assert (=> b!133244 (isDefined!125 (getValueByKey!171 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(declare-fun b!133245 () Bool)

(declare-fun Unit!4174 () Unit!4150)

(assert (=> b!133245 (= e!86845 Unit!4174)))

(declare-fun b!133246 () Bool)

(assert (=> b!133246 (= e!86844 (isDefined!125 (getValueByKey!171 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))))))

(assert (= (and d!40467 c!24667) b!133244))

(assert (= (and d!40467 (not c!24667)) b!133245))

(assert (= (and d!40467 (not res!64153)) b!133246))

(assert (=> d!40467 m!156425))

(declare-fun m!157209 () Bool)

(assert (=> d!40467 m!157209))

(assert (=> b!133244 m!156425))

(declare-fun m!157211 () Bool)

(assert (=> b!133244 m!157211))

(assert (=> b!133244 m!156425))

(declare-fun m!157213 () Bool)

(assert (=> b!133244 m!157213))

(assert (=> b!133244 m!157213))

(declare-fun m!157215 () Bool)

(assert (=> b!133244 m!157215))

(assert (=> b!133246 m!156425))

(assert (=> b!133246 m!157213))

(assert (=> b!133246 m!157213))

(assert (=> b!133246 m!157215))

(assert (=> b!133120 d!40467))

(declare-fun bm!14705 () Bool)

(declare-fun call!14714 () ListLongMap!1707)

(declare-fun call!14710 () ListLongMap!1707)

(assert (=> bm!14705 (= call!14714 call!14710)))

(declare-fun b!133247 () Bool)

(declare-fun e!86855 () Bool)

(declare-fun lt!69703 () ListLongMap!1707)

(assert (=> b!133247 (= e!86855 (= (apply!116 lt!69703 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 newMap!16)))))

(declare-fun bm!14706 () Bool)

(declare-fun call!14709 () Bool)

(assert (=> bm!14706 (= call!14709 (contains!896 lt!69703 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133248 () Bool)

(declare-fun e!86858 () Bool)

(declare-fun call!14711 () Bool)

(assert (=> b!133248 (= e!86858 (not call!14711))))

(declare-fun b!133249 () Bool)

(declare-fun e!86857 () Unit!4150)

(declare-fun Unit!4175 () Unit!4150)

(assert (=> b!133249 (= e!86857 Unit!4175)))

(declare-fun d!40469 () Bool)

(declare-fun e!86854 () Bool)

(assert (=> d!40469 e!86854))

(declare-fun res!64160 () Bool)

(assert (=> d!40469 (=> (not res!64160) (not e!86854))))

(assert (=> d!40469 (= res!64160 (or (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))))

(declare-fun lt!69697 () ListLongMap!1707)

(assert (=> d!40469 (= lt!69703 lt!69697)))

(declare-fun lt!69698 () Unit!4150)

(assert (=> d!40469 (= lt!69698 e!86857)))

(declare-fun c!24669 () Bool)

(declare-fun e!86848 () Bool)

(assert (=> d!40469 (= c!24669 e!86848)))

(declare-fun res!64159 () Bool)

(assert (=> d!40469 (=> (not res!64159) (not e!86848))))

(assert (=> d!40469 (= res!64159 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun e!86846 () ListLongMap!1707)

(assert (=> d!40469 (= lt!69697 e!86846)))

(declare-fun c!24668 () Bool)

(assert (=> d!40469 (= c!24668 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40469 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40469 (= (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69703)))

(declare-fun call!14712 () ListLongMap!1707)

(declare-fun c!24671 () Bool)

(declare-fun call!14713 () ListLongMap!1707)

(declare-fun bm!14707 () Bool)

(declare-fun call!14708 () ListLongMap!1707)

(assert (=> bm!14707 (= call!14710 (+!170 (ite c!24668 call!14712 (ite c!24671 call!14708 call!14713)) (ite (or c!24668 c!24671) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!133250 () Bool)

(assert (=> b!133250 (= e!86854 e!86858)))

(declare-fun c!24670 () Bool)

(assert (=> b!133250 (= c!24670 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133251 () Bool)

(declare-fun e!86852 () Bool)

(assert (=> b!133251 (= e!86852 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133252 () Bool)

(assert (=> b!133252 (= e!86848 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133253 () Bool)

(declare-fun e!86853 () ListLongMap!1707)

(assert (=> b!133253 (= e!86853 call!14713)))

(declare-fun b!133254 () Bool)

(declare-fun res!64154 () Bool)

(assert (=> b!133254 (=> (not res!64154) (not e!86854))))

(declare-fun e!86851 () Bool)

(assert (=> b!133254 (= res!64154 e!86851)))

(declare-fun c!24672 () Bool)

(assert (=> b!133254 (= c!24672 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133255 () Bool)

(declare-fun e!86849 () Bool)

(assert (=> b!133255 (= e!86851 e!86849)))

(declare-fun res!64157 () Bool)

(assert (=> b!133255 (= res!64157 call!14709)))

(assert (=> b!133255 (=> (not res!64157) (not e!86849))))

(declare-fun b!133256 () Bool)

(declare-fun e!86850 () Bool)

(declare-fun e!86847 () Bool)

(assert (=> b!133256 (= e!86850 e!86847)))

(declare-fun res!64155 () Bool)

(assert (=> b!133256 (=> (not res!64155) (not e!86847))))

(assert (=> b!133256 (= res!64155 (contains!896 lt!69703 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133256 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!133257 () Bool)

(declare-fun c!24673 () Bool)

(assert (=> b!133257 (= c!24673 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!86856 () ListLongMap!1707)

(assert (=> b!133257 (= e!86856 e!86853)))

(declare-fun b!133258 () Bool)

(assert (=> b!133258 (= e!86851 (not call!14709))))

(declare-fun b!133259 () Bool)

(assert (=> b!133259 (= e!86846 (+!170 call!14710 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun b!133260 () Bool)

(assert (=> b!133260 (= e!86858 e!86855)))

(declare-fun res!64158 () Bool)

(assert (=> b!133260 (= res!64158 call!14711)))

(assert (=> b!133260 (=> (not res!64158) (not e!86855))))

(declare-fun b!133261 () Bool)

(declare-fun lt!69704 () Unit!4150)

(assert (=> b!133261 (= e!86857 lt!69704)))

(declare-fun lt!69699 () ListLongMap!1707)

(assert (=> b!133261 (= lt!69699 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69702 () (_ BitVec 64))

(assert (=> b!133261 (= lt!69702 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69709 () (_ BitVec 64))

(assert (=> b!133261 (= lt!69709 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69713 () Unit!4150)

(assert (=> b!133261 (= lt!69713 (addStillContains!92 lt!69699 lt!69702 (zeroValue!2720 newMap!16) lt!69709))))

(assert (=> b!133261 (contains!896 (+!170 lt!69699 (tuple2!2609 lt!69702 (zeroValue!2720 newMap!16))) lt!69709)))

(declare-fun lt!69717 () Unit!4150)

(assert (=> b!133261 (= lt!69717 lt!69713)))

(declare-fun lt!69712 () ListLongMap!1707)

(assert (=> b!133261 (= lt!69712 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69714 () (_ BitVec 64))

(assert (=> b!133261 (= lt!69714 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69700 () (_ BitVec 64))

(assert (=> b!133261 (= lt!69700 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69715 () Unit!4150)

(assert (=> b!133261 (= lt!69715 (addApplyDifferent!92 lt!69712 lt!69714 (minValue!2720 newMap!16) lt!69700))))

(assert (=> b!133261 (= (apply!116 (+!170 lt!69712 (tuple2!2609 lt!69714 (minValue!2720 newMap!16))) lt!69700) (apply!116 lt!69712 lt!69700))))

(declare-fun lt!69706 () Unit!4150)

(assert (=> b!133261 (= lt!69706 lt!69715)))

(declare-fun lt!69707 () ListLongMap!1707)

(assert (=> b!133261 (= lt!69707 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69718 () (_ BitVec 64))

(assert (=> b!133261 (= lt!69718 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69705 () (_ BitVec 64))

(assert (=> b!133261 (= lt!69705 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69716 () Unit!4150)

(assert (=> b!133261 (= lt!69716 (addApplyDifferent!92 lt!69707 lt!69718 (zeroValue!2720 newMap!16) lt!69705))))

(assert (=> b!133261 (= (apply!116 (+!170 lt!69707 (tuple2!2609 lt!69718 (zeroValue!2720 newMap!16))) lt!69705) (apply!116 lt!69707 lt!69705))))

(declare-fun lt!69701 () Unit!4150)

(assert (=> b!133261 (= lt!69701 lt!69716)))

(declare-fun lt!69711 () ListLongMap!1707)

(assert (=> b!133261 (= lt!69711 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69708 () (_ BitVec 64))

(assert (=> b!133261 (= lt!69708 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69710 () (_ BitVec 64))

(assert (=> b!133261 (= lt!69710 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133261 (= lt!69704 (addApplyDifferent!92 lt!69711 lt!69708 (minValue!2720 newMap!16) lt!69710))))

(assert (=> b!133261 (= (apply!116 (+!170 lt!69711 (tuple2!2609 lt!69708 (minValue!2720 newMap!16))) lt!69710) (apply!116 lt!69711 lt!69710))))

(declare-fun bm!14708 () Bool)

(assert (=> bm!14708 (= call!14713 call!14708)))

(declare-fun b!133262 () Bool)

(assert (=> b!133262 (= e!86846 e!86856)))

(assert (=> b!133262 (= c!24671 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14709 () Bool)

(assert (=> bm!14709 (= call!14711 (contains!896 lt!69703 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133263 () Bool)

(assert (=> b!133263 (= e!86849 (= (apply!116 lt!69703 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 newMap!16)))))

(declare-fun bm!14710 () Bool)

(assert (=> bm!14710 (= call!14708 call!14712)))

(declare-fun b!133264 () Bool)

(assert (=> b!133264 (= e!86847 (= (apply!116 lt!69703 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 lt!69317) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133264 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 lt!69317)))))

(assert (=> b!133264 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun bm!14711 () Bool)

(assert (=> bm!14711 (= call!14712 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!133265 () Bool)

(assert (=> b!133265 (= e!86856 call!14714)))

(declare-fun b!133266 () Bool)

(assert (=> b!133266 (= e!86853 call!14714)))

(declare-fun b!133267 () Bool)

(declare-fun res!64156 () Bool)

(assert (=> b!133267 (=> (not res!64156) (not e!86854))))

(assert (=> b!133267 (= res!64156 e!86850)))

(declare-fun res!64161 () Bool)

(assert (=> b!133267 (=> res!64161 e!86850)))

(assert (=> b!133267 (= res!64161 (not e!86852))))

(declare-fun res!64162 () Bool)

(assert (=> b!133267 (=> (not res!64162) (not e!86852))))

(assert (=> b!133267 (= res!64162 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (= (and d!40469 c!24668) b!133259))

(assert (= (and d!40469 (not c!24668)) b!133262))

(assert (= (and b!133262 c!24671) b!133265))

(assert (= (and b!133262 (not c!24671)) b!133257))

(assert (= (and b!133257 c!24673) b!133266))

(assert (= (and b!133257 (not c!24673)) b!133253))

(assert (= (or b!133266 b!133253) bm!14708))

(assert (= (or b!133265 bm!14708) bm!14710))

(assert (= (or b!133265 b!133266) bm!14705))

(assert (= (or b!133259 bm!14710) bm!14711))

(assert (= (or b!133259 bm!14705) bm!14707))

(assert (= (and d!40469 res!64159) b!133252))

(assert (= (and d!40469 c!24669) b!133261))

(assert (= (and d!40469 (not c!24669)) b!133249))

(assert (= (and d!40469 res!64160) b!133267))

(assert (= (and b!133267 res!64162) b!133251))

(assert (= (and b!133267 (not res!64161)) b!133256))

(assert (= (and b!133256 res!64155) b!133264))

(assert (= (and b!133267 res!64156) b!133254))

(assert (= (and b!133254 c!24672) b!133255))

(assert (= (and b!133254 (not c!24672)) b!133258))

(assert (= (and b!133255 res!64157) b!133263))

(assert (= (or b!133255 b!133258) bm!14706))

(assert (= (and b!133254 res!64154) b!133250))

(assert (= (and b!133250 c!24670) b!133260))

(assert (= (and b!133250 (not c!24670)) b!133248))

(assert (= (and b!133260 res!64158) b!133247))

(assert (= (or b!133260 b!133248) bm!14709))

(declare-fun b_lambda!5957 () Bool)

(assert (=> (not b_lambda!5957) (not b!133264)))

(assert (=> b!133264 t!6205))

(declare-fun b_and!8265 () Bool)

(assert (= b_and!8261 (and (=> t!6205 result!4009) b_and!8265)))

(assert (=> b!133264 t!6207))

(declare-fun b_and!8267 () Bool)

(assert (= b_and!8263 (and (=> t!6207 result!4011) b_and!8267)))

(assert (=> d!40469 m!156571))

(assert (=> b!133256 m!156533))

(assert (=> b!133256 m!156533))

(declare-fun m!157217 () Bool)

(assert (=> b!133256 m!157217))

(declare-fun m!157219 () Bool)

(assert (=> b!133264 m!157219))

(assert (=> b!133264 m!156647))

(declare-fun m!157221 () Bool)

(assert (=> b!133264 m!157221))

(assert (=> b!133264 m!156533))

(declare-fun m!157223 () Bool)

(assert (=> b!133264 m!157223))

(assert (=> b!133264 m!157219))

(assert (=> b!133264 m!156533))

(assert (=> b!133264 m!156647))

(declare-fun m!157225 () Bool)

(assert (=> b!133263 m!157225))

(declare-fun m!157227 () Bool)

(assert (=> b!133247 m!157227))

(declare-fun m!157229 () Bool)

(assert (=> b!133261 m!157229))

(declare-fun m!157231 () Bool)

(assert (=> b!133261 m!157231))

(declare-fun m!157233 () Bool)

(assert (=> b!133261 m!157233))

(declare-fun m!157235 () Bool)

(assert (=> b!133261 m!157235))

(declare-fun m!157237 () Bool)

(assert (=> b!133261 m!157237))

(assert (=> b!133261 m!157233))

(declare-fun m!157239 () Bool)

(assert (=> b!133261 m!157239))

(declare-fun m!157241 () Bool)

(assert (=> b!133261 m!157241))

(declare-fun m!157243 () Bool)

(assert (=> b!133261 m!157243))

(declare-fun m!157245 () Bool)

(assert (=> b!133261 m!157245))

(assert (=> b!133261 m!157243))

(assert (=> b!133261 m!156533))

(assert (=> b!133261 m!157229))

(declare-fun m!157247 () Bool)

(assert (=> b!133261 m!157247))

(declare-fun m!157249 () Bool)

(assert (=> b!133261 m!157249))

(declare-fun m!157251 () Bool)

(assert (=> b!133261 m!157251))

(declare-fun m!157253 () Bool)

(assert (=> b!133261 m!157253))

(assert (=> b!133261 m!157239))

(declare-fun m!157255 () Bool)

(assert (=> b!133261 m!157255))

(declare-fun m!157257 () Bool)

(assert (=> b!133261 m!157257))

(declare-fun m!157259 () Bool)

(assert (=> b!133261 m!157259))

(assert (=> b!133252 m!156533))

(assert (=> b!133252 m!156533))

(assert (=> b!133252 m!156557))

(declare-fun m!157261 () Bool)

(assert (=> bm!14709 m!157261))

(declare-fun m!157263 () Bool)

(assert (=> b!133259 m!157263))

(declare-fun m!157265 () Bool)

(assert (=> bm!14707 m!157265))

(assert (=> b!133251 m!156533))

(assert (=> b!133251 m!156533))

(assert (=> b!133251 m!156557))

(assert (=> bm!14711 m!157237))

(declare-fun m!157267 () Bool)

(assert (=> bm!14706 m!157267))

(assert (=> b!133120 d!40469))

(declare-fun d!40471 () Bool)

(declare-fun e!86859 () Bool)

(assert (=> d!40471 e!86859))

(declare-fun res!64164 () Bool)

(assert (=> d!40471 (=> (not res!64164) (not e!86859))))

(declare-fun lt!69720 () ListLongMap!1707)

(assert (=> d!40471 (= res!64164 (contains!896 lt!69720 (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun lt!69722 () List!1735)

(assert (=> d!40471 (= lt!69720 (ListLongMap!1708 lt!69722))))

(declare-fun lt!69721 () Unit!4150)

(declare-fun lt!69719 () Unit!4150)

(assert (=> d!40471 (= lt!69721 lt!69719)))

(assert (=> d!40471 (= (getValueByKey!171 lt!69722 (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!40471 (= lt!69719 (lemmaContainsTupThenGetReturnValue!88 lt!69722 (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!40471 (= lt!69722 (insertStrictlySorted!90 (toList!869 (ite c!24588 call!14667 (ite c!24591 call!14663 call!14668))) (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!40471 (= (+!170 (ite c!24588 call!14667 (ite c!24591 call!14663 call!14668)) (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!69720)))

(declare-fun b!133268 () Bool)

(declare-fun res!64163 () Bool)

(assert (=> b!133268 (=> (not res!64163) (not e!86859))))

(assert (=> b!133268 (= res!64163 (= (getValueByKey!171 (toList!869 lt!69720) (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!133269 () Bool)

(assert (=> b!133269 (= e!86859 (contains!898 (toList!869 lt!69720) (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (= (and d!40471 res!64164) b!133268))

(assert (= (and b!133268 res!64163) b!133269))

(declare-fun m!157269 () Bool)

(assert (=> d!40471 m!157269))

(declare-fun m!157271 () Bool)

(assert (=> d!40471 m!157271))

(declare-fun m!157273 () Bool)

(assert (=> d!40471 m!157273))

(declare-fun m!157275 () Bool)

(assert (=> d!40471 m!157275))

(declare-fun m!157277 () Bool)

(assert (=> b!133268 m!157277))

(declare-fun m!157279 () Bool)

(assert (=> b!133269 m!157279))

(assert (=> bm!14662 d!40471))

(assert (=> bm!14692 d!40303))

(assert (=> b!132921 d!40331))

(assert (=> bm!14655 d!40303))

(declare-fun d!40473 () Bool)

(assert (=> d!40473 (= (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133019 d!40473))

(declare-fun d!40475 () Bool)

(assert (=> d!40475 (= (validMask!0 (mask!7165 newMap!16)) (and (or (= (mask!7165 newMap!16) #b00000000000000000000000000000111) (= (mask!7165 newMap!16) #b00000000000000000000000000001111) (= (mask!7165 newMap!16) #b00000000000000000000000000011111) (= (mask!7165 newMap!16) #b00000000000000000000000000111111) (= (mask!7165 newMap!16) #b00000000000000000000000001111111) (= (mask!7165 newMap!16) #b00000000000000000000000011111111) (= (mask!7165 newMap!16) #b00000000000000000000000111111111) (= (mask!7165 newMap!16) #b00000000000000000000001111111111) (= (mask!7165 newMap!16) #b00000000000000000000011111111111) (= (mask!7165 newMap!16) #b00000000000000000000111111111111) (= (mask!7165 newMap!16) #b00000000000000000001111111111111) (= (mask!7165 newMap!16) #b00000000000000000011111111111111) (= (mask!7165 newMap!16) #b00000000000000000111111111111111) (= (mask!7165 newMap!16) #b00000000000000001111111111111111) (= (mask!7165 newMap!16) #b00000000000000011111111111111111) (= (mask!7165 newMap!16) #b00000000000000111111111111111111) (= (mask!7165 newMap!16) #b00000000000001111111111111111111) (= (mask!7165 newMap!16) #b00000000000011111111111111111111) (= (mask!7165 newMap!16) #b00000000000111111111111111111111) (= (mask!7165 newMap!16) #b00000000001111111111111111111111) (= (mask!7165 newMap!16) #b00000000011111111111111111111111) (= (mask!7165 newMap!16) #b00000000111111111111111111111111) (= (mask!7165 newMap!16) #b00000001111111111111111111111111) (= (mask!7165 newMap!16) #b00000011111111111111111111111111) (= (mask!7165 newMap!16) #b00000111111111111111111111111111) (= (mask!7165 newMap!16) #b00001111111111111111111111111111) (= (mask!7165 newMap!16) #b00011111111111111111111111111111) (= (mask!7165 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!7165 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!40335 d!40475))

(declare-fun d!40477 () Bool)

(declare-fun e!86860 () Bool)

(assert (=> d!40477 e!86860))

(declare-fun res!64166 () Bool)

(assert (=> d!40477 (=> (not res!64166) (not e!86860))))

(declare-fun lt!69724 () ListLongMap!1707)

(assert (=> d!40477 (= res!64166 (contains!896 lt!69724 (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun lt!69726 () List!1735)

(assert (=> d!40477 (= lt!69724 (ListLongMap!1708 lt!69726))))

(declare-fun lt!69725 () Unit!4150)

(declare-fun lt!69723 () Unit!4150)

(assert (=> d!40477 (= lt!69725 lt!69723)))

(assert (=> d!40477 (= (getValueByKey!171 lt!69726 (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) (Some!176 (_2!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!40477 (= lt!69723 (lemmaContainsTupThenGetReturnValue!88 lt!69726 (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (_2!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!40477 (= lt!69726 (insertStrictlySorted!90 (toList!869 (ite c!24605 call!14674 (ite c!24608 call!14670 call!14675))) (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (_2!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!40477 (= (+!170 (ite c!24605 call!14674 (ite c!24608 call!14670 call!14675)) (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!69724)))

(declare-fun b!133270 () Bool)

(declare-fun res!64165 () Bool)

(assert (=> b!133270 (=> (not res!64165) (not e!86860))))

(assert (=> b!133270 (= res!64165 (= (getValueByKey!171 (toList!869 lt!69724) (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) (Some!176 (_2!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun b!133271 () Bool)

(assert (=> b!133271 (= e!86860 (contains!898 (toList!869 lt!69724) (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (= (and d!40477 res!64166) b!133270))

(assert (= (and b!133270 res!64165) b!133271))

(declare-fun m!157281 () Bool)

(assert (=> d!40477 m!157281))

(declare-fun m!157283 () Bool)

(assert (=> d!40477 m!157283))

(declare-fun m!157285 () Bool)

(assert (=> d!40477 m!157285))

(declare-fun m!157287 () Bool)

(assert (=> d!40477 m!157287))

(declare-fun m!157289 () Bool)

(assert (=> b!133270 m!157289))

(declare-fun m!157291 () Bool)

(assert (=> b!133271 m!157291))

(assert (=> bm!14669 d!40477))

(declare-fun d!40479 () Bool)

(declare-fun e!86861 () Bool)

(assert (=> d!40479 e!86861))

(declare-fun res!64168 () Bool)

(assert (=> d!40479 (=> (not res!64168) (not e!86861))))

(declare-fun lt!69728 () ListLongMap!1707)

(assert (=> d!40479 (= res!64168 (contains!896 lt!69728 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69730 () List!1735)

(assert (=> d!40479 (= lt!69728 (ListLongMap!1708 lt!69730))))

(declare-fun lt!69729 () Unit!4150)

(declare-fun lt!69727 () Unit!4150)

(assert (=> d!40479 (= lt!69729 lt!69727)))

(assert (=> d!40479 (= (getValueByKey!171 lt!69730 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40479 (= lt!69727 (lemmaContainsTupThenGetReturnValue!88 lt!69730 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40479 (= lt!69730 (insertStrictlySorted!90 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40479 (= (+!170 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69728)))

(declare-fun b!133272 () Bool)

(declare-fun res!64167 () Bool)

(assert (=> b!133272 (=> (not res!64167) (not e!86861))))

(assert (=> b!133272 (= res!64167 (= (getValueByKey!171 (toList!869 lt!69728) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133273 () Bool)

(assert (=> b!133273 (= e!86861 (contains!898 (toList!869 lt!69728) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40479 res!64168) b!133272))

(assert (= (and b!133272 res!64167) b!133273))

(declare-fun m!157293 () Bool)

(assert (=> d!40479 m!157293))

(declare-fun m!157295 () Bool)

(assert (=> d!40479 m!157295))

(declare-fun m!157297 () Bool)

(assert (=> d!40479 m!157297))

(declare-fun m!157299 () Bool)

(assert (=> d!40479 m!157299))

(declare-fun m!157301 () Bool)

(assert (=> b!133272 m!157301))

(declare-fun m!157303 () Bool)

(assert (=> b!133273 m!157303))

(assert (=> d!40349 d!40479))

(declare-fun d!40481 () Bool)

(assert (=> d!40481 (= (+!170 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69304 (zeroValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(assert (=> d!40481 true))

(declare-fun _$8!118 () Unit!4150)

(assert (=> d!40481 (= (choose!827 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) lt!69304 (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)) _$8!118)))

(declare-fun bs!5505 () Bool)

(assert (= bs!5505 d!40481))

(assert (=> bs!5505 m!156355))

(assert (=> bs!5505 m!156355))

(assert (=> bs!5505 m!156735))

(assert (=> bs!5505 m!156285))

(assert (=> bs!5505 m!156737))

(assert (=> d!40349 d!40481))

(assert (=> d!40349 d!40335))

(assert (=> d!40349 d!40475))

(declare-fun bm!14712 () Bool)

(declare-fun call!14721 () ListLongMap!1707)

(declare-fun call!14717 () ListLongMap!1707)

(assert (=> bm!14712 (= call!14721 call!14717)))

(declare-fun b!133274 () Bool)

(declare-fun lt!69737 () ListLongMap!1707)

(declare-fun e!86871 () Bool)

(assert (=> b!133274 (= e!86871 (= (apply!116 lt!69737 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!14713 () Bool)

(declare-fun call!14716 () Bool)

(assert (=> bm!14713 (= call!14716 (contains!896 lt!69737 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133275 () Bool)

(declare-fun e!86874 () Bool)

(declare-fun call!14718 () Bool)

(assert (=> b!133275 (= e!86874 (not call!14718))))

(declare-fun b!133276 () Bool)

(declare-fun e!86873 () Unit!4150)

(declare-fun Unit!4176 () Unit!4150)

(assert (=> b!133276 (= e!86873 Unit!4176)))

(declare-fun d!40483 () Bool)

(declare-fun e!86870 () Bool)

(assert (=> d!40483 e!86870))

(declare-fun res!64175 () Bool)

(assert (=> d!40483 (=> (not res!64175) (not e!86870))))

(assert (=> d!40483 (= res!64175 (or (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))))

(declare-fun lt!69731 () ListLongMap!1707)

(assert (=> d!40483 (= lt!69737 lt!69731)))

(declare-fun lt!69732 () Unit!4150)

(assert (=> d!40483 (= lt!69732 e!86873)))

(declare-fun c!24675 () Bool)

(declare-fun e!86864 () Bool)

(assert (=> d!40483 (= c!24675 e!86864)))

(declare-fun res!64174 () Bool)

(assert (=> d!40483 (=> (not res!64174) (not e!86864))))

(assert (=> d!40483 (= res!64174 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun e!86862 () ListLongMap!1707)

(assert (=> d!40483 (= lt!69731 e!86862)))

(declare-fun c!24674 () Bool)

(assert (=> d!40483 (= c!24674 (and (not (= (bvand lt!69304 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!69304 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40483 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40483 (= (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69304 (zeroValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69737)))

(declare-fun bm!14714 () Bool)

(declare-fun call!14719 () ListLongMap!1707)

(declare-fun call!14715 () ListLongMap!1707)

(declare-fun c!24677 () Bool)

(declare-fun call!14720 () ListLongMap!1707)

(assert (=> bm!14714 (= call!14717 (+!170 (ite c!24674 call!14719 (ite c!24677 call!14715 call!14720)) (ite (or c!24674 c!24677) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133277 () Bool)

(assert (=> b!133277 (= e!86870 e!86874)))

(declare-fun c!24676 () Bool)

(assert (=> b!133277 (= c!24676 (not (= (bvand lt!69304 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133278 () Bool)

(declare-fun e!86868 () Bool)

(assert (=> b!133278 (= e!86868 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133279 () Bool)

(assert (=> b!133279 (= e!86864 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133280 () Bool)

(declare-fun e!86869 () ListLongMap!1707)

(assert (=> b!133280 (= e!86869 call!14720)))

(declare-fun b!133281 () Bool)

(declare-fun res!64169 () Bool)

(assert (=> b!133281 (=> (not res!64169) (not e!86870))))

(declare-fun e!86867 () Bool)

(assert (=> b!133281 (= res!64169 e!86867)))

(declare-fun c!24678 () Bool)

(assert (=> b!133281 (= c!24678 (not (= (bvand lt!69304 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133282 () Bool)

(declare-fun e!86865 () Bool)

(assert (=> b!133282 (= e!86867 e!86865)))

(declare-fun res!64172 () Bool)

(assert (=> b!133282 (= res!64172 call!14716)))

(assert (=> b!133282 (=> (not res!64172) (not e!86865))))

(declare-fun b!133283 () Bool)

(declare-fun e!86866 () Bool)

(declare-fun e!86863 () Bool)

(assert (=> b!133283 (= e!86866 e!86863)))

(declare-fun res!64170 () Bool)

(assert (=> b!133283 (=> (not res!64170) (not e!86863))))

(assert (=> b!133283 (= res!64170 (contains!896 lt!69737 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133283 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!133284 () Bool)

(declare-fun c!24679 () Bool)

(assert (=> b!133284 (= c!24679 (and (not (= (bvand lt!69304 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!69304 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!86872 () ListLongMap!1707)

(assert (=> b!133284 (= e!86872 e!86869)))

(declare-fun b!133285 () Bool)

(assert (=> b!133285 (= e!86867 (not call!14716))))

(declare-fun b!133286 () Bool)

(assert (=> b!133286 (= e!86862 (+!170 call!14717 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133287 () Bool)

(assert (=> b!133287 (= e!86874 e!86871)))

(declare-fun res!64173 () Bool)

(assert (=> b!133287 (= res!64173 call!14718)))

(assert (=> b!133287 (=> (not res!64173) (not e!86871))))

(declare-fun b!133288 () Bool)

(declare-fun lt!69738 () Unit!4150)

(assert (=> b!133288 (= e!86873 lt!69738)))

(declare-fun lt!69733 () ListLongMap!1707)

(assert (=> b!133288 (= lt!69733 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69304 (zeroValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69736 () (_ BitVec 64))

(assert (=> b!133288 (= lt!69736 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69743 () (_ BitVec 64))

(assert (=> b!133288 (= lt!69743 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69747 () Unit!4150)

(assert (=> b!133288 (= lt!69747 (addStillContains!92 lt!69733 lt!69736 (zeroValue!2720 newMap!16) lt!69743))))

(assert (=> b!133288 (contains!896 (+!170 lt!69733 (tuple2!2609 lt!69736 (zeroValue!2720 newMap!16))) lt!69743)))

(declare-fun lt!69751 () Unit!4150)

(assert (=> b!133288 (= lt!69751 lt!69747)))

(declare-fun lt!69746 () ListLongMap!1707)

(assert (=> b!133288 (= lt!69746 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69304 (zeroValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69748 () (_ BitVec 64))

(assert (=> b!133288 (= lt!69748 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69734 () (_ BitVec 64))

(assert (=> b!133288 (= lt!69734 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69749 () Unit!4150)

(assert (=> b!133288 (= lt!69749 (addApplyDifferent!92 lt!69746 lt!69748 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69734))))

(assert (=> b!133288 (= (apply!116 (+!170 lt!69746 (tuple2!2609 lt!69748 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69734) (apply!116 lt!69746 lt!69734))))

(declare-fun lt!69740 () Unit!4150)

(assert (=> b!133288 (= lt!69740 lt!69749)))

(declare-fun lt!69741 () ListLongMap!1707)

(assert (=> b!133288 (= lt!69741 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69304 (zeroValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69752 () (_ BitVec 64))

(assert (=> b!133288 (= lt!69752 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69739 () (_ BitVec 64))

(assert (=> b!133288 (= lt!69739 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69750 () Unit!4150)

(assert (=> b!133288 (= lt!69750 (addApplyDifferent!92 lt!69741 lt!69752 (zeroValue!2720 newMap!16) lt!69739))))

(assert (=> b!133288 (= (apply!116 (+!170 lt!69741 (tuple2!2609 lt!69752 (zeroValue!2720 newMap!16))) lt!69739) (apply!116 lt!69741 lt!69739))))

(declare-fun lt!69735 () Unit!4150)

(assert (=> b!133288 (= lt!69735 lt!69750)))

(declare-fun lt!69745 () ListLongMap!1707)

(assert (=> b!133288 (= lt!69745 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69304 (zeroValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69742 () (_ BitVec 64))

(assert (=> b!133288 (= lt!69742 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69744 () (_ BitVec 64))

(assert (=> b!133288 (= lt!69744 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133288 (= lt!69738 (addApplyDifferent!92 lt!69745 lt!69742 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69744))))

(assert (=> b!133288 (= (apply!116 (+!170 lt!69745 (tuple2!2609 lt!69742 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69744) (apply!116 lt!69745 lt!69744))))

(declare-fun bm!14715 () Bool)

(assert (=> bm!14715 (= call!14720 call!14715)))

(declare-fun b!133289 () Bool)

(assert (=> b!133289 (= e!86862 e!86872)))

(assert (=> b!133289 (= c!24677 (and (not (= (bvand lt!69304 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!69304 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14716 () Bool)

(assert (=> bm!14716 (= call!14718 (contains!896 lt!69737 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133290 () Bool)

(assert (=> b!133290 (= e!86865 (= (apply!116 lt!69737 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 newMap!16)))))

(declare-fun bm!14717 () Bool)

(assert (=> bm!14717 (= call!14715 call!14719)))

(declare-fun b!133291 () Bool)

(assert (=> b!133291 (= e!86863 (= (apply!116 lt!69737 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133291 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_values!2848 newMap!16))))))

(assert (=> b!133291 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun bm!14718 () Bool)

(assert (=> bm!14718 (= call!14719 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69304 (zeroValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!133292 () Bool)

(assert (=> b!133292 (= e!86872 call!14721)))

(declare-fun b!133293 () Bool)

(assert (=> b!133293 (= e!86869 call!14721)))

(declare-fun b!133294 () Bool)

(declare-fun res!64171 () Bool)

(assert (=> b!133294 (=> (not res!64171) (not e!86870))))

(assert (=> b!133294 (= res!64171 e!86866)))

(declare-fun res!64176 () Bool)

(assert (=> b!133294 (=> res!64176 e!86866)))

(assert (=> b!133294 (= res!64176 (not e!86868))))

(declare-fun res!64177 () Bool)

(assert (=> b!133294 (=> (not res!64177) (not e!86868))))

(assert (=> b!133294 (= res!64177 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (= (and d!40483 c!24674) b!133286))

(assert (= (and d!40483 (not c!24674)) b!133289))

(assert (= (and b!133289 c!24677) b!133292))

(assert (= (and b!133289 (not c!24677)) b!133284))

(assert (= (and b!133284 c!24679) b!133293))

(assert (= (and b!133284 (not c!24679)) b!133280))

(assert (= (or b!133293 b!133280) bm!14715))

(assert (= (or b!133292 bm!14715) bm!14717))

(assert (= (or b!133292 b!133293) bm!14712))

(assert (= (or b!133286 bm!14717) bm!14718))

(assert (= (or b!133286 bm!14712) bm!14714))

(assert (= (and d!40483 res!64174) b!133279))

(assert (= (and d!40483 c!24675) b!133288))

(assert (= (and d!40483 (not c!24675)) b!133276))

(assert (= (and d!40483 res!64175) b!133294))

(assert (= (and b!133294 res!64177) b!133278))

(assert (= (and b!133294 (not res!64176)) b!133283))

(assert (= (and b!133283 res!64170) b!133291))

(assert (= (and b!133294 res!64171) b!133281))

(assert (= (and b!133281 c!24678) b!133282))

(assert (= (and b!133281 (not c!24678)) b!133285))

(assert (= (and b!133282 res!64172) b!133290))

(assert (= (or b!133282 b!133285) bm!14713))

(assert (= (and b!133281 res!64169) b!133277))

(assert (= (and b!133277 c!24676) b!133287))

(assert (= (and b!133277 (not c!24676)) b!133275))

(assert (= (and b!133287 res!64173) b!133274))

(assert (= (or b!133287 b!133275) bm!14716))

(declare-fun b_lambda!5959 () Bool)

(assert (=> (not b_lambda!5959) (not b!133291)))

(assert (=> b!133291 t!6205))

(declare-fun b_and!8269 () Bool)

(assert (= b_and!8265 (and (=> t!6205 result!4009) b_and!8269)))

(assert (=> b!133291 t!6207))

(declare-fun b_and!8271 () Bool)

(assert (= b_and!8267 (and (=> t!6207 result!4011) b_and!8271)))

(assert (=> d!40483 m!156571))

(assert (=> b!133283 m!156533))

(assert (=> b!133283 m!156533))

(declare-fun m!157305 () Bool)

(assert (=> b!133283 m!157305))

(assert (=> b!133291 m!156645))

(assert (=> b!133291 m!156647))

(assert (=> b!133291 m!156649))

(assert (=> b!133291 m!156533))

(declare-fun m!157307 () Bool)

(assert (=> b!133291 m!157307))

(assert (=> b!133291 m!156645))

(assert (=> b!133291 m!156533))

(assert (=> b!133291 m!156647))

(declare-fun m!157309 () Bool)

(assert (=> b!133290 m!157309))

(declare-fun m!157311 () Bool)

(assert (=> b!133274 m!157311))

(declare-fun m!157313 () Bool)

(assert (=> b!133288 m!157313))

(declare-fun m!157315 () Bool)

(assert (=> b!133288 m!157315))

(declare-fun m!157317 () Bool)

(assert (=> b!133288 m!157317))

(declare-fun m!157319 () Bool)

(assert (=> b!133288 m!157319))

(assert (=> b!133288 m!156285))

(declare-fun m!157321 () Bool)

(assert (=> b!133288 m!157321))

(assert (=> b!133288 m!157317))

(declare-fun m!157323 () Bool)

(assert (=> b!133288 m!157323))

(assert (=> b!133288 m!156285))

(declare-fun m!157325 () Bool)

(assert (=> b!133288 m!157325))

(declare-fun m!157327 () Bool)

(assert (=> b!133288 m!157327))

(declare-fun m!157329 () Bool)

(assert (=> b!133288 m!157329))

(assert (=> b!133288 m!157327))

(assert (=> b!133288 m!156533))

(assert (=> b!133288 m!157313))

(declare-fun m!157331 () Bool)

(assert (=> b!133288 m!157331))

(declare-fun m!157333 () Bool)

(assert (=> b!133288 m!157333))

(declare-fun m!157335 () Bool)

(assert (=> b!133288 m!157335))

(assert (=> b!133288 m!156285))

(declare-fun m!157337 () Bool)

(assert (=> b!133288 m!157337))

(assert (=> b!133288 m!157323))

(declare-fun m!157339 () Bool)

(assert (=> b!133288 m!157339))

(declare-fun m!157341 () Bool)

(assert (=> b!133288 m!157341))

(declare-fun m!157343 () Bool)

(assert (=> b!133288 m!157343))

(assert (=> b!133279 m!156533))

(assert (=> b!133279 m!156533))

(assert (=> b!133279 m!156557))

(declare-fun m!157345 () Bool)

(assert (=> bm!14716 m!157345))

(declare-fun m!157347 () Bool)

(assert (=> b!133286 m!157347))

(declare-fun m!157349 () Bool)

(assert (=> bm!14714 m!157349))

(assert (=> b!133278 m!156533))

(assert (=> b!133278 m!156533))

(assert (=> b!133278 m!156557))

(assert (=> bm!14718 m!156285))

(assert (=> bm!14718 m!157321))

(declare-fun m!157351 () Bool)

(assert (=> bm!14713 m!157351))

(assert (=> d!40349 d!40483))

(declare-fun b!133295 () Bool)

(declare-fun e!86875 () Option!177)

(assert (=> b!133295 (= e!86875 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69356)))))))

(declare-fun b!133298 () Bool)

(declare-fun e!86876 () Option!177)

(assert (=> b!133298 (= e!86876 None!175)))

(declare-fun b!133297 () Bool)

(assert (=> b!133297 (= e!86876 (getValueByKey!171 (t!6198 (toList!869 lt!69356)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133296 () Bool)

(assert (=> b!133296 (= e!86875 e!86876)))

(declare-fun c!24681 () Bool)

(assert (=> b!133296 (= c!24681 (and ((_ is Cons!1731) (toList!869 lt!69356)) (not (= (_1!1314 (h!2336 (toList!869 lt!69356))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!24680 () Bool)

(declare-fun d!40485 () Bool)

(assert (=> d!40485 (= c!24680 (and ((_ is Cons!1731) (toList!869 lt!69356)) (= (_1!1314 (h!2336 (toList!869 lt!69356))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40485 (= (getValueByKey!171 (toList!869 lt!69356) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!86875)))

(assert (= (and d!40485 c!24680) b!133295))

(assert (= (and d!40485 (not c!24680)) b!133296))

(assert (= (and b!133296 c!24681) b!133297))

(assert (= (and b!133296 (not c!24681)) b!133298))

(declare-fun m!157353 () Bool)

(assert (=> b!133297 m!157353))

(assert (=> b!132831 d!40485))

(assert (=> d!40383 d!40475))

(declare-fun lt!69753 () Bool)

(declare-fun d!40487 () Bool)

(assert (=> d!40487 (= lt!69753 (select (content!132 (toList!869 lt!69463)) (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun e!86878 () Bool)

(assert (=> d!40487 (= lt!69753 e!86878)))

(declare-fun res!64178 () Bool)

(assert (=> d!40487 (=> (not res!64178) (not e!86878))))

(assert (=> d!40487 (= res!64178 ((_ is Cons!1731) (toList!869 lt!69463)))))

(assert (=> d!40487 (= (contains!898 (toList!869 lt!69463) (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69753)))

(declare-fun b!133299 () Bool)

(declare-fun e!86877 () Bool)

(assert (=> b!133299 (= e!86878 e!86877)))

(declare-fun res!64179 () Bool)

(assert (=> b!133299 (=> res!64179 e!86877)))

(assert (=> b!133299 (= res!64179 (= (h!2336 (toList!869 lt!69463)) (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!133300 () Bool)

(assert (=> b!133300 (= e!86877 (contains!898 (t!6198 (toList!869 lt!69463)) (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(assert (= (and d!40487 res!64178) b!133299))

(assert (= (and b!133299 (not res!64179)) b!133300))

(declare-fun m!157355 () Bool)

(assert (=> d!40487 m!157355))

(declare-fun m!157357 () Bool)

(assert (=> d!40487 m!157357))

(declare-fun m!157359 () Bool)

(assert (=> b!133300 m!157359))

(assert (=> b!132980 d!40487))

(declare-fun b!133303 () Bool)

(declare-fun res!64180 () Bool)

(declare-fun e!86879 () Bool)

(assert (=> b!133303 (=> (not res!64180) (not e!86879))))

(assert (=> b!133303 (= res!64180 (= (size!2533 (_2!1315 lt!69327)) (bvadd (_size!598 (_2!1315 lt!69327)) (bvsdiv (bvadd (extraKeys!2630 (_2!1315 lt!69327)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!133304 () Bool)

(assert (=> b!133304 (= e!86879 (and (bvsge (extraKeys!2630 (_2!1315 lt!69327)) #b00000000000000000000000000000000) (bvsle (extraKeys!2630 (_2!1315 lt!69327)) #b00000000000000000000000000000011) (bvsge (_vacant!598 (_2!1315 lt!69327)) #b00000000000000000000000000000000)))))

(declare-fun b!133302 () Bool)

(declare-fun res!64183 () Bool)

(assert (=> b!133302 (=> (not res!64183) (not e!86879))))

(assert (=> b!133302 (= res!64183 (bvsge (size!2533 (_2!1315 lt!69327)) (_size!598 (_2!1315 lt!69327))))))

(declare-fun d!40489 () Bool)

(declare-fun res!64181 () Bool)

(assert (=> d!40489 (=> (not res!64181) (not e!86879))))

(assert (=> d!40489 (= res!64181 (validMask!0 (mask!7165 (_2!1315 lt!69327))))))

(assert (=> d!40489 (= (simpleValid!91 (_2!1315 lt!69327)) e!86879)))

(declare-fun b!133301 () Bool)

(declare-fun res!64182 () Bool)

(assert (=> b!133301 (=> (not res!64182) (not e!86879))))

(assert (=> b!133301 (= res!64182 (and (= (size!2530 (_values!2848 (_2!1315 lt!69327))) (bvadd (mask!7165 (_2!1315 lt!69327)) #b00000000000000000000000000000001)) (= (size!2529 (_keys!4614 (_2!1315 lt!69327))) (size!2530 (_values!2848 (_2!1315 lt!69327)))) (bvsge (_size!598 (_2!1315 lt!69327)) #b00000000000000000000000000000000) (bvsle (_size!598 (_2!1315 lt!69327)) (bvadd (mask!7165 (_2!1315 lt!69327)) #b00000000000000000000000000000001))))))

(assert (= (and d!40489 res!64181) b!133301))

(assert (= (and b!133301 res!64182) b!133302))

(assert (= (and b!133302 res!64183) b!133303))

(assert (= (and b!133303 res!64180) b!133304))

(declare-fun m!157361 () Bool)

(assert (=> b!133303 m!157361))

(assert (=> b!133302 m!157361))

(declare-fun m!157363 () Bool)

(assert (=> d!40489 m!157363))

(assert (=> d!40295 d!40489))

(declare-fun b!133305 () Bool)

(declare-fun lt!69754 () Unit!4150)

(declare-fun lt!69758 () Unit!4150)

(assert (=> b!133305 (= lt!69754 lt!69758)))

(declare-fun lt!69757 () V!3483)

(declare-fun lt!69755 () ListLongMap!1707)

(declare-fun lt!69759 () (_ BitVec 64))

(declare-fun lt!69756 () (_ BitVec 64))

(assert (=> b!133305 (not (contains!896 (+!170 lt!69755 (tuple2!2609 lt!69759 lt!69757)) lt!69756))))

(assert (=> b!133305 (= lt!69758 (addStillNotContains!63 lt!69755 lt!69759 lt!69757 lt!69756))))

(assert (=> b!133305 (= lt!69756 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133305 (= lt!69757 (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133305 (= lt!69759 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!14722 () ListLongMap!1707)

(assert (=> b!133305 (= lt!69755 call!14722)))

(declare-fun e!86886 () ListLongMap!1707)

(assert (=> b!133305 (= e!86886 (+!170 call!14722 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133306 () Bool)

(declare-fun e!86883 () Bool)

(declare-fun lt!69760 () ListLongMap!1707)

(assert (=> b!133306 (= e!86883 (= lt!69760 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317) (mask!7165 newMap!16) (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!133307 () Bool)

(assert (=> b!133307 (= e!86883 (isEmpty!414 lt!69760))))

(declare-fun b!133308 () Bool)

(declare-fun e!86884 () ListLongMap!1707)

(assert (=> b!133308 (= e!86884 (ListLongMap!1708 Nil!1732))))

(declare-fun b!133309 () Bool)

(declare-fun e!86881 () Bool)

(declare-fun e!86882 () Bool)

(assert (=> b!133309 (= e!86881 e!86882)))

(declare-fun c!24685 () Bool)

(declare-fun e!86885 () Bool)

(assert (=> b!133309 (= c!24685 e!86885)))

(declare-fun res!64187 () Bool)

(assert (=> b!133309 (=> (not res!64187) (not e!86885))))

(assert (=> b!133309 (= res!64187 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!133310 () Bool)

(assert (=> b!133310 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (=> b!133310 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317))))))

(declare-fun e!86880 () Bool)

(assert (=> b!133310 (= e!86880 (= (apply!116 lt!69760 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!133312 () Bool)

(assert (=> b!133312 (= e!86882 e!86880)))

(assert (=> b!133312 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun res!64186 () Bool)

(assert (=> b!133312 (= res!64186 (contains!896 lt!69760 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133312 (=> (not res!64186) (not e!86880))))

(declare-fun b!133313 () Bool)

(assert (=> b!133313 (= e!86884 e!86886)))

(declare-fun c!24682 () Bool)

(assert (=> b!133313 (= c!24682 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133314 () Bool)

(declare-fun res!64185 () Bool)

(assert (=> b!133314 (=> (not res!64185) (not e!86881))))

(assert (=> b!133314 (= res!64185 (not (contains!896 lt!69760 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133315 () Bool)

(assert (=> b!133315 (= e!86882 e!86883)))

(declare-fun c!24684 () Bool)

(assert (=> b!133315 (= c!24684 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun bm!14719 () Bool)

(assert (=> bm!14719 (= call!14722 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317) (mask!7165 newMap!16) (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!133316 () Bool)

(assert (=> b!133316 (= e!86885 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133316 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!133311 () Bool)

(assert (=> b!133311 (= e!86886 call!14722)))

(declare-fun d!40491 () Bool)

(assert (=> d!40491 e!86881))

(declare-fun res!64184 () Bool)

(assert (=> d!40491 (=> (not res!64184) (not e!86881))))

(assert (=> d!40491 (= res!64184 (not (contains!896 lt!69760 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40491 (= lt!69760 e!86884)))

(declare-fun c!24683 () Bool)

(assert (=> d!40491 (= c!24683 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!40491 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40491 (= (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317) (mask!7165 newMap!16) (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69760)))

(assert (= (and d!40491 c!24683) b!133308))

(assert (= (and d!40491 (not c!24683)) b!133313))

(assert (= (and b!133313 c!24682) b!133305))

(assert (= (and b!133313 (not c!24682)) b!133311))

(assert (= (or b!133305 b!133311) bm!14719))

(assert (= (and d!40491 res!64184) b!133314))

(assert (= (and b!133314 res!64185) b!133309))

(assert (= (and b!133309 res!64187) b!133316))

(assert (= (and b!133309 c!24685) b!133312))

(assert (= (and b!133309 (not c!24685)) b!133315))

(assert (= (and b!133312 res!64186) b!133310))

(assert (= (and b!133315 c!24684) b!133306))

(assert (= (and b!133315 (not c!24684)) b!133307))

(declare-fun b_lambda!5961 () Bool)

(assert (=> (not b_lambda!5961) (not b!133305)))

(assert (=> b!133305 t!6205))

(declare-fun b_and!8273 () Bool)

(assert (= b_and!8269 (and (=> t!6205 result!4009) b_and!8273)))

(assert (=> b!133305 t!6207))

(declare-fun b_and!8275 () Bool)

(assert (= b_and!8271 (and (=> t!6207 result!4011) b_and!8275)))

(declare-fun b_lambda!5963 () Bool)

(assert (=> (not b_lambda!5963) (not b!133310)))

(assert (=> b!133310 t!6205))

(declare-fun b_and!8277 () Bool)

(assert (= b_and!8273 (and (=> t!6205 result!4009) b_and!8277)))

(assert (=> b!133310 t!6207))

(declare-fun b_and!8279 () Bool)

(assert (= b_and!8275 (and (=> t!6207 result!4011) b_and!8279)))

(declare-fun m!157365 () Bool)

(assert (=> d!40491 m!157365))

(assert (=> d!40491 m!156571))

(declare-fun m!157367 () Bool)

(assert (=> b!133306 m!157367))

(declare-fun m!157369 () Bool)

(assert (=> b!133305 m!157369))

(declare-fun m!157371 () Bool)

(assert (=> b!133305 m!157371))

(assert (=> b!133305 m!157369))

(assert (=> b!133305 m!156647))

(assert (=> b!133305 m!156897))

(assert (=> b!133305 m!156647))

(assert (=> b!133305 m!156899))

(declare-fun m!157373 () Bool)

(assert (=> b!133305 m!157373))

(assert (=> b!133305 m!156897))

(assert (=> b!133305 m!156533))

(declare-fun m!157375 () Bool)

(assert (=> b!133305 m!157375))

(assert (=> b!133310 m!156533))

(declare-fun m!157377 () Bool)

(assert (=> b!133310 m!157377))

(assert (=> b!133310 m!156647))

(assert (=> b!133310 m!156533))

(assert (=> b!133310 m!156897))

(assert (=> b!133310 m!156647))

(assert (=> b!133310 m!156899))

(assert (=> b!133310 m!156897))

(assert (=> bm!14719 m!157367))

(assert (=> b!133313 m!156533))

(assert (=> b!133313 m!156533))

(assert (=> b!133313 m!156557))

(declare-fun m!157379 () Bool)

(assert (=> b!133314 m!157379))

(assert (=> b!133312 m!156533))

(assert (=> b!133312 m!156533))

(declare-fun m!157381 () Bool)

(assert (=> b!133312 m!157381))

(assert (=> b!133316 m!156533))

(assert (=> b!133316 m!156533))

(assert (=> b!133316 m!156557))

(declare-fun m!157383 () Bool)

(assert (=> b!133307 m!157383))

(assert (=> bm!14680 d!40491))

(declare-fun d!40493 () Bool)

(assert (=> d!40493 (= (apply!116 lt!69416 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!69416) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5506 () Bool)

(assert (= bs!5506 d!40493))

(declare-fun m!157385 () Bool)

(assert (=> bs!5506 m!157385))

(assert (=> bs!5506 m!157385))

(declare-fun m!157387 () Bool)

(assert (=> bs!5506 m!157387))

(assert (=> b!132927 d!40493))

(declare-fun b!133317 () Bool)

(declare-fun e!86889 () Bool)

(declare-fun e!86890 () Bool)

(assert (=> b!133317 (= e!86889 e!86890)))

(declare-fun c!24686 () Bool)

(assert (=> b!133317 (= c!24686 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133318 () Bool)

(declare-fun call!14723 () Bool)

(assert (=> b!133318 (= e!86890 call!14723)))

(declare-fun b!133319 () Bool)

(declare-fun e!86887 () Bool)

(assert (=> b!133319 (= e!86887 (contains!897 (ite c!24562 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1733) Nil!1733) (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!14720 () Bool)

(assert (=> bm!14720 (= call!14723 (arrayNoDuplicates!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24686 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24562 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24562 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1733) Nil!1733))))))

(declare-fun d!40495 () Bool)

(declare-fun res!64190 () Bool)

(declare-fun e!86888 () Bool)

(assert (=> d!40495 (=> res!64190 e!86888)))

(assert (=> d!40495 (= res!64190 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!40495 (= (arrayNoDuplicates!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24562 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) e!86888)))

(declare-fun b!133320 () Bool)

(assert (=> b!133320 (= e!86890 call!14723)))

(declare-fun b!133321 () Bool)

(assert (=> b!133321 (= e!86888 e!86889)))

(declare-fun res!64188 () Bool)

(assert (=> b!133321 (=> (not res!64188) (not e!86889))))

(assert (=> b!133321 (= res!64188 (not e!86887))))

(declare-fun res!64189 () Bool)

(assert (=> b!133321 (=> (not res!64189) (not e!86887))))

(assert (=> b!133321 (= res!64189 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!40495 (not res!64190)) b!133321))

(assert (= (and b!133321 res!64189) b!133319))

(assert (= (and b!133321 res!64188) b!133317))

(assert (= (and b!133317 c!24686) b!133320))

(assert (= (and b!133317 (not c!24686)) b!133318))

(assert (= (or b!133320 b!133318) bm!14720))

(assert (=> b!133317 m!157187))

(assert (=> b!133317 m!157187))

(assert (=> b!133317 m!157195))

(assert (=> b!133319 m!157187))

(assert (=> b!133319 m!157187))

(declare-fun m!157389 () Bool)

(assert (=> b!133319 m!157389))

(assert (=> bm!14720 m!157187))

(declare-fun m!157391 () Bool)

(assert (=> bm!14720 m!157391))

(assert (=> b!133321 m!157187))

(assert (=> b!133321 m!157187))

(assert (=> b!133321 m!157195))

(assert (=> bm!14646 d!40495))

(declare-fun d!40497 () Bool)

(assert (=> d!40497 (= (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69227)) (not (isEmpty!415 (getValueByKey!171 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69227))))))

(declare-fun bs!5507 () Bool)

(assert (= bs!5507 d!40497))

(assert (=> bs!5507 m!156801))

(declare-fun m!157393 () Bool)

(assert (=> bs!5507 m!157393))

(assert (=> b!132983 d!40497))

(declare-fun b!133322 () Bool)

(declare-fun e!86891 () Option!177)

(assert (=> b!133322 (= e!86891 (Some!176 (_2!1314 (h!2336 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))))

(declare-fun b!133325 () Bool)

(declare-fun e!86892 () Option!177)

(assert (=> b!133325 (= e!86892 None!175)))

(declare-fun b!133324 () Bool)

(assert (=> b!133324 (= e!86892 (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!69227))))

(declare-fun b!133323 () Bool)

(assert (=> b!133323 (= e!86891 e!86892)))

(declare-fun c!24688 () Bool)

(assert (=> b!133323 (= c!24688 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) (not (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) lt!69227))))))

(declare-fun c!24687 () Bool)

(declare-fun d!40499 () Bool)

(assert (=> d!40499 (= c!24687 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) lt!69227)))))

(assert (=> d!40499 (= (getValueByKey!171 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69227) e!86891)))

(assert (= (and d!40499 c!24687) b!133322))

(assert (= (and d!40499 (not c!24687)) b!133323))

(assert (= (and b!133323 c!24688) b!133324))

(assert (= (and b!133323 (not c!24688)) b!133325))

(declare-fun m!157395 () Bool)

(assert (=> b!133324 m!157395))

(assert (=> b!132983 d!40499))

(declare-fun bm!14721 () Bool)

(declare-fun call!14730 () ListLongMap!1707)

(declare-fun call!14726 () ListLongMap!1707)

(assert (=> bm!14721 (= call!14730 call!14726)))

(declare-fun b!133326 () Bool)

(declare-fun e!86902 () Bool)

(declare-fun lt!69767 () ListLongMap!1707)

(assert (=> b!133326 (= e!86902 (= (apply!116 lt!69767 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 (_2!1315 lt!69327))))))

(declare-fun bm!14722 () Bool)

(declare-fun call!14725 () Bool)

(assert (=> bm!14722 (= call!14725 (contains!896 lt!69767 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133327 () Bool)

(declare-fun e!86905 () Bool)

(declare-fun call!14727 () Bool)

(assert (=> b!133327 (= e!86905 (not call!14727))))

(declare-fun b!133328 () Bool)

(declare-fun e!86904 () Unit!4150)

(declare-fun Unit!4177 () Unit!4150)

(assert (=> b!133328 (= e!86904 Unit!4177)))

(declare-fun d!40501 () Bool)

(declare-fun e!86901 () Bool)

(assert (=> d!40501 e!86901))

(declare-fun res!64197 () Bool)

(assert (=> d!40501 (=> (not res!64197) (not e!86901))))

(assert (=> d!40501 (= res!64197 (or (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69327)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))))

(declare-fun lt!69761 () ListLongMap!1707)

(assert (=> d!40501 (= lt!69767 lt!69761)))

(declare-fun lt!69762 () Unit!4150)

(assert (=> d!40501 (= lt!69762 e!86904)))

(declare-fun c!24690 () Bool)

(declare-fun e!86895 () Bool)

(assert (=> d!40501 (= c!24690 e!86895)))

(declare-fun res!64196 () Bool)

(assert (=> d!40501 (=> (not res!64196) (not e!86895))))

(assert (=> d!40501 (= res!64196 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(declare-fun e!86893 () ListLongMap!1707)

(assert (=> d!40501 (= lt!69761 e!86893)))

(declare-fun c!24689 () Bool)

(assert (=> d!40501 (= c!24689 (and (not (= (bvand (extraKeys!2630 (_2!1315 lt!69327)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2630 (_2!1315 lt!69327)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40501 (validMask!0 (mask!7165 (_2!1315 lt!69327)))))

(assert (=> d!40501 (= (getCurrentListMap!540 (_keys!4614 (_2!1315 lt!69327)) (_values!2848 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327)) (extraKeys!2630 (_2!1315 lt!69327)) (zeroValue!2720 (_2!1315 lt!69327)) (minValue!2720 (_2!1315 lt!69327)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1315 lt!69327))) lt!69767)))

(declare-fun c!24692 () Bool)

(declare-fun call!14728 () ListLongMap!1707)

(declare-fun call!14724 () ListLongMap!1707)

(declare-fun call!14729 () ListLongMap!1707)

(declare-fun bm!14723 () Bool)

(assert (=> bm!14723 (= call!14726 (+!170 (ite c!24689 call!14728 (ite c!24692 call!14724 call!14729)) (ite (or c!24689 c!24692) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1315 lt!69327))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327))))))))

(declare-fun b!133329 () Bool)

(assert (=> b!133329 (= e!86901 e!86905)))

(declare-fun c!24691 () Bool)

(assert (=> b!133329 (= c!24691 (not (= (bvand (extraKeys!2630 (_2!1315 lt!69327)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133330 () Bool)

(declare-fun e!86899 () Bool)

(assert (=> b!133330 (= e!86899 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(declare-fun b!133331 () Bool)

(assert (=> b!133331 (= e!86895 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(declare-fun b!133332 () Bool)

(declare-fun e!86900 () ListLongMap!1707)

(assert (=> b!133332 (= e!86900 call!14729)))

(declare-fun b!133333 () Bool)

(declare-fun res!64191 () Bool)

(assert (=> b!133333 (=> (not res!64191) (not e!86901))))

(declare-fun e!86898 () Bool)

(assert (=> b!133333 (= res!64191 e!86898)))

(declare-fun c!24693 () Bool)

(assert (=> b!133333 (= c!24693 (not (= (bvand (extraKeys!2630 (_2!1315 lt!69327)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133334 () Bool)

(declare-fun e!86896 () Bool)

(assert (=> b!133334 (= e!86898 e!86896)))

(declare-fun res!64194 () Bool)

(assert (=> b!133334 (= res!64194 call!14725)))

(assert (=> b!133334 (=> (not res!64194) (not e!86896))))

(declare-fun b!133335 () Bool)

(declare-fun e!86897 () Bool)

(declare-fun e!86894 () Bool)

(assert (=> b!133335 (= e!86897 e!86894)))

(declare-fun res!64192 () Bool)

(assert (=> b!133335 (=> (not res!64192) (not e!86894))))

(assert (=> b!133335 (= res!64192 (contains!896 lt!69767 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(assert (=> b!133335 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(declare-fun b!133336 () Bool)

(declare-fun c!24694 () Bool)

(assert (=> b!133336 (= c!24694 (and (not (= (bvand (extraKeys!2630 (_2!1315 lt!69327)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 (_2!1315 lt!69327)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!86903 () ListLongMap!1707)

(assert (=> b!133336 (= e!86903 e!86900)))

(declare-fun b!133337 () Bool)

(assert (=> b!133337 (= e!86898 (not call!14725))))

(declare-fun b!133338 () Bool)

(assert (=> b!133338 (= e!86893 (+!170 call!14726 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327)))))))

(declare-fun b!133339 () Bool)

(assert (=> b!133339 (= e!86905 e!86902)))

(declare-fun res!64195 () Bool)

(assert (=> b!133339 (= res!64195 call!14727)))

(assert (=> b!133339 (=> (not res!64195) (not e!86902))))

(declare-fun b!133340 () Bool)

(declare-fun lt!69768 () Unit!4150)

(assert (=> b!133340 (= e!86904 lt!69768)))

(declare-fun lt!69763 () ListLongMap!1707)

(assert (=> b!133340 (= lt!69763 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (_2!1315 lt!69327)) (_values!2848 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327)) (extraKeys!2630 (_2!1315 lt!69327)) (zeroValue!2720 (_2!1315 lt!69327)) (minValue!2720 (_2!1315 lt!69327)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1315 lt!69327))))))

(declare-fun lt!69766 () (_ BitVec 64))

(assert (=> b!133340 (= lt!69766 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69773 () (_ BitVec 64))

(assert (=> b!133340 (= lt!69773 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000))))

(declare-fun lt!69777 () Unit!4150)

(assert (=> b!133340 (= lt!69777 (addStillContains!92 lt!69763 lt!69766 (zeroValue!2720 (_2!1315 lt!69327)) lt!69773))))

(assert (=> b!133340 (contains!896 (+!170 lt!69763 (tuple2!2609 lt!69766 (zeroValue!2720 (_2!1315 lt!69327)))) lt!69773)))

(declare-fun lt!69781 () Unit!4150)

(assert (=> b!133340 (= lt!69781 lt!69777)))

(declare-fun lt!69776 () ListLongMap!1707)

(assert (=> b!133340 (= lt!69776 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (_2!1315 lt!69327)) (_values!2848 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327)) (extraKeys!2630 (_2!1315 lt!69327)) (zeroValue!2720 (_2!1315 lt!69327)) (minValue!2720 (_2!1315 lt!69327)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1315 lt!69327))))))

(declare-fun lt!69778 () (_ BitVec 64))

(assert (=> b!133340 (= lt!69778 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69764 () (_ BitVec 64))

(assert (=> b!133340 (= lt!69764 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000))))

(declare-fun lt!69779 () Unit!4150)

(assert (=> b!133340 (= lt!69779 (addApplyDifferent!92 lt!69776 lt!69778 (minValue!2720 (_2!1315 lt!69327)) lt!69764))))

(assert (=> b!133340 (= (apply!116 (+!170 lt!69776 (tuple2!2609 lt!69778 (minValue!2720 (_2!1315 lt!69327)))) lt!69764) (apply!116 lt!69776 lt!69764))))

(declare-fun lt!69770 () Unit!4150)

(assert (=> b!133340 (= lt!69770 lt!69779)))

(declare-fun lt!69771 () ListLongMap!1707)

(assert (=> b!133340 (= lt!69771 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (_2!1315 lt!69327)) (_values!2848 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327)) (extraKeys!2630 (_2!1315 lt!69327)) (zeroValue!2720 (_2!1315 lt!69327)) (minValue!2720 (_2!1315 lt!69327)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1315 lt!69327))))))

(declare-fun lt!69782 () (_ BitVec 64))

(assert (=> b!133340 (= lt!69782 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69769 () (_ BitVec 64))

(assert (=> b!133340 (= lt!69769 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000))))

(declare-fun lt!69780 () Unit!4150)

(assert (=> b!133340 (= lt!69780 (addApplyDifferent!92 lt!69771 lt!69782 (zeroValue!2720 (_2!1315 lt!69327)) lt!69769))))

(assert (=> b!133340 (= (apply!116 (+!170 lt!69771 (tuple2!2609 lt!69782 (zeroValue!2720 (_2!1315 lt!69327)))) lt!69769) (apply!116 lt!69771 lt!69769))))

(declare-fun lt!69765 () Unit!4150)

(assert (=> b!133340 (= lt!69765 lt!69780)))

(declare-fun lt!69775 () ListLongMap!1707)

(assert (=> b!133340 (= lt!69775 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (_2!1315 lt!69327)) (_values!2848 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327)) (extraKeys!2630 (_2!1315 lt!69327)) (zeroValue!2720 (_2!1315 lt!69327)) (minValue!2720 (_2!1315 lt!69327)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1315 lt!69327))))))

(declare-fun lt!69772 () (_ BitVec 64))

(assert (=> b!133340 (= lt!69772 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69774 () (_ BitVec 64))

(assert (=> b!133340 (= lt!69774 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000))))

(assert (=> b!133340 (= lt!69768 (addApplyDifferent!92 lt!69775 lt!69772 (minValue!2720 (_2!1315 lt!69327)) lt!69774))))

(assert (=> b!133340 (= (apply!116 (+!170 lt!69775 (tuple2!2609 lt!69772 (minValue!2720 (_2!1315 lt!69327)))) lt!69774) (apply!116 lt!69775 lt!69774))))

(declare-fun bm!14724 () Bool)

(assert (=> bm!14724 (= call!14729 call!14724)))

(declare-fun b!133341 () Bool)

(assert (=> b!133341 (= e!86893 e!86903)))

(assert (=> b!133341 (= c!24692 (and (not (= (bvand (extraKeys!2630 (_2!1315 lt!69327)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 (_2!1315 lt!69327)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14725 () Bool)

(assert (=> bm!14725 (= call!14727 (contains!896 lt!69767 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133342 () Bool)

(assert (=> b!133342 (= e!86896 (= (apply!116 lt!69767 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 (_2!1315 lt!69327))))))

(declare-fun bm!14726 () Bool)

(assert (=> bm!14726 (= call!14724 call!14728)))

(declare-fun b!133343 () Bool)

(assert (=> b!133343 (= e!86894 (= (apply!116 lt!69767 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (_values!2848 (_2!1315 lt!69327))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 (_2!1315 lt!69327)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133343 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_values!2848 (_2!1315 lt!69327)))))))

(assert (=> b!133343 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(declare-fun bm!14727 () Bool)

(assert (=> bm!14727 (= call!14728 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (_2!1315 lt!69327)) (_values!2848 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327)) (extraKeys!2630 (_2!1315 lt!69327)) (zeroValue!2720 (_2!1315 lt!69327)) (minValue!2720 (_2!1315 lt!69327)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1315 lt!69327))))))

(declare-fun b!133344 () Bool)

(assert (=> b!133344 (= e!86903 call!14730)))

(declare-fun b!133345 () Bool)

(assert (=> b!133345 (= e!86900 call!14730)))

(declare-fun b!133346 () Bool)

(declare-fun res!64193 () Bool)

(assert (=> b!133346 (=> (not res!64193) (not e!86901))))

(assert (=> b!133346 (= res!64193 e!86897)))

(declare-fun res!64198 () Bool)

(assert (=> b!133346 (=> res!64198 e!86897)))

(assert (=> b!133346 (= res!64198 (not e!86899))))

(declare-fun res!64199 () Bool)

(assert (=> b!133346 (=> (not res!64199) (not e!86899))))

(assert (=> b!133346 (= res!64199 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(assert (= (and d!40501 c!24689) b!133338))

(assert (= (and d!40501 (not c!24689)) b!133341))

(assert (= (and b!133341 c!24692) b!133344))

(assert (= (and b!133341 (not c!24692)) b!133336))

(assert (= (and b!133336 c!24694) b!133345))

(assert (= (and b!133336 (not c!24694)) b!133332))

(assert (= (or b!133345 b!133332) bm!14724))

(assert (= (or b!133344 bm!14724) bm!14726))

(assert (= (or b!133344 b!133345) bm!14721))

(assert (= (or b!133338 bm!14726) bm!14727))

(assert (= (or b!133338 bm!14721) bm!14723))

(assert (= (and d!40501 res!64196) b!133331))

(assert (= (and d!40501 c!24690) b!133340))

(assert (= (and d!40501 (not c!24690)) b!133328))

(assert (= (and d!40501 res!64197) b!133346))

(assert (= (and b!133346 res!64199) b!133330))

(assert (= (and b!133346 (not res!64198)) b!133335))

(assert (= (and b!133335 res!64192) b!133343))

(assert (= (and b!133346 res!64193) b!133333))

(assert (= (and b!133333 c!24693) b!133334))

(assert (= (and b!133333 (not c!24693)) b!133337))

(assert (= (and b!133334 res!64194) b!133342))

(assert (= (or b!133334 b!133337) bm!14722))

(assert (= (and b!133333 res!64191) b!133329))

(assert (= (and b!133329 c!24691) b!133339))

(assert (= (and b!133329 (not c!24691)) b!133327))

(assert (= (and b!133339 res!64195) b!133326))

(assert (= (or b!133339 b!133327) bm!14725))

(declare-fun b_lambda!5965 () Bool)

(assert (=> (not b_lambda!5965) (not b!133343)))

(declare-fun t!6209 () Bool)

(declare-fun tb!2437 () Bool)

(assert (=> (and b!132488 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 (_2!1315 lt!69327))) t!6209) tb!2437))

(declare-fun result!4013 () Bool)

(assert (=> tb!2437 (= result!4013 tp_is_empty!2877)))

(assert (=> b!133343 t!6209))

(declare-fun b_and!8281 () Bool)

(assert (= b_and!8277 (and (=> t!6209 result!4013) b_and!8281)))

(declare-fun t!6211 () Bool)

(declare-fun tb!2439 () Bool)

(assert (=> (and b!132481 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (_2!1315 lt!69327))) t!6211) tb!2439))

(declare-fun result!4015 () Bool)

(assert (= result!4015 result!4013))

(assert (=> b!133343 t!6211))

(declare-fun b_and!8283 () Bool)

(assert (= b_and!8279 (and (=> t!6211 result!4015) b_and!8283)))

(assert (=> d!40501 m!157363))

(declare-fun m!157397 () Bool)

(assert (=> b!133335 m!157397))

(assert (=> b!133335 m!157397))

(declare-fun m!157399 () Bool)

(assert (=> b!133335 m!157399))

(declare-fun m!157401 () Bool)

(assert (=> b!133343 m!157401))

(declare-fun m!157403 () Bool)

(assert (=> b!133343 m!157403))

(declare-fun m!157405 () Bool)

(assert (=> b!133343 m!157405))

(assert (=> b!133343 m!157397))

(declare-fun m!157407 () Bool)

(assert (=> b!133343 m!157407))

(assert (=> b!133343 m!157401))

(assert (=> b!133343 m!157397))

(assert (=> b!133343 m!157403))

(declare-fun m!157409 () Bool)

(assert (=> b!133342 m!157409))

(declare-fun m!157411 () Bool)

(assert (=> b!133326 m!157411))

(declare-fun m!157413 () Bool)

(assert (=> b!133340 m!157413))

(declare-fun m!157415 () Bool)

(assert (=> b!133340 m!157415))

(declare-fun m!157417 () Bool)

(assert (=> b!133340 m!157417))

(declare-fun m!157419 () Bool)

(assert (=> b!133340 m!157419))

(declare-fun m!157421 () Bool)

(assert (=> b!133340 m!157421))

(assert (=> b!133340 m!157417))

(declare-fun m!157423 () Bool)

(assert (=> b!133340 m!157423))

(declare-fun m!157425 () Bool)

(assert (=> b!133340 m!157425))

(declare-fun m!157427 () Bool)

(assert (=> b!133340 m!157427))

(declare-fun m!157429 () Bool)

(assert (=> b!133340 m!157429))

(assert (=> b!133340 m!157427))

(assert (=> b!133340 m!157397))

(assert (=> b!133340 m!157413))

(declare-fun m!157431 () Bool)

(assert (=> b!133340 m!157431))

(declare-fun m!157433 () Bool)

(assert (=> b!133340 m!157433))

(declare-fun m!157435 () Bool)

(assert (=> b!133340 m!157435))

(declare-fun m!157437 () Bool)

(assert (=> b!133340 m!157437))

(assert (=> b!133340 m!157423))

(declare-fun m!157439 () Bool)

(assert (=> b!133340 m!157439))

(declare-fun m!157441 () Bool)

(assert (=> b!133340 m!157441))

(declare-fun m!157443 () Bool)

(assert (=> b!133340 m!157443))

(assert (=> b!133331 m!157397))

(assert (=> b!133331 m!157397))

(declare-fun m!157445 () Bool)

(assert (=> b!133331 m!157445))

(declare-fun m!157447 () Bool)

(assert (=> bm!14725 m!157447))

(declare-fun m!157449 () Bool)

(assert (=> b!133338 m!157449))

(declare-fun m!157451 () Bool)

(assert (=> bm!14723 m!157451))

(assert (=> b!133330 m!157397))

(assert (=> b!133330 m!157397))

(assert (=> b!133330 m!157445))

(assert (=> bm!14727 m!157421))

(declare-fun m!157453 () Bool)

(assert (=> bm!14722 m!157453))

(assert (=> d!40399 d!40501))

(declare-fun b!133347 () Bool)

(declare-fun e!86907 () (_ BitVec 32))

(assert (=> b!133347 (= e!86907 #b00000000000000000000000000000000)))

(declare-fun d!40503 () Bool)

(declare-fun lt!69783 () (_ BitVec 32))

(assert (=> d!40503 (and (bvsge lt!69783 #b00000000000000000000000000000000) (bvsle lt!69783 (bvsub (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!40503 (= lt!69783 e!86907)))

(declare-fun c!24696 () Bool)

(assert (=> d!40503 (= c!24696 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!40503 (and (bvsle #b00000000000000000000000000000000 (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!40503 (= (arrayCountValidKeys!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000000 (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))) lt!69783)))

(declare-fun b!133348 () Bool)

(declare-fun e!86906 () (_ BitVec 32))

(declare-fun call!14731 () (_ BitVec 32))

(assert (=> b!133348 (= e!86906 call!14731)))

(declare-fun b!133349 () Bool)

(assert (=> b!133349 (= e!86906 (bvadd #b00000000000000000000000000000001 call!14731))))

(declare-fun bm!14728 () Bool)

(assert (=> bm!14728 (= call!14731 (arrayCountValidKeys!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!133350 () Bool)

(assert (=> b!133350 (= e!86907 e!86906)))

(declare-fun c!24695 () Bool)

(assert (=> b!133350 (= c!24695 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!40503 c!24696) b!133347))

(assert (= (and d!40503 (not c!24696)) b!133350))

(assert (= (and b!133350 c!24695) b!133349))

(assert (= (and b!133350 (not c!24695)) b!133348))

(assert (= (or b!133349 b!133348) bm!14728))

(declare-fun m!157455 () Bool)

(assert (=> bm!14728 m!157455))

(assert (=> b!133350 m!156487))

(assert (=> b!133350 m!156487))

(assert (=> b!133350 m!156489))

(assert (=> b!133132 d!40503))

(declare-fun b!133351 () Bool)

(declare-fun e!86908 () Option!177)

(assert (=> b!133351 (= e!86908 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69459)))))))

(declare-fun b!133354 () Bool)

(declare-fun e!86909 () Option!177)

(assert (=> b!133354 (= e!86909 None!175)))

(declare-fun b!133353 () Bool)

(assert (=> b!133353 (= e!86909 (getValueByKey!171 (t!6198 (toList!869 lt!69459)) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133352 () Bool)

(assert (=> b!133352 (= e!86908 e!86909)))

(declare-fun c!24698 () Bool)

(assert (=> b!133352 (= c!24698 (and ((_ is Cons!1731) (toList!869 lt!69459)) (not (= (_1!1314 (h!2336 (toList!869 lt!69459))) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun d!40505 () Bool)

(declare-fun c!24697 () Bool)

(assert (=> d!40505 (= c!24697 (and ((_ is Cons!1731) (toList!869 lt!69459)) (= (_1!1314 (h!2336 (toList!869 lt!69459))) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40505 (= (getValueByKey!171 (toList!869 lt!69459) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!86908)))

(assert (= (and d!40505 c!24697) b!133351))

(assert (= (and d!40505 (not c!24697)) b!133352))

(assert (= (and b!133352 c!24698) b!133353))

(assert (= (and b!133352 (not c!24698)) b!133354))

(declare-fun m!157457 () Bool)

(assert (=> b!133353 m!157457))

(assert (=> b!132977 d!40505))

(declare-fun d!40507 () Bool)

(assert (=> d!40507 (= (apply!116 lt!69488 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!69488) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5508 () Bool)

(assert (= bs!5508 d!40507))

(declare-fun m!157459 () Bool)

(assert (=> bs!5508 m!157459))

(assert (=> bs!5508 m!157459))

(declare-fun m!157461 () Bool)

(assert (=> bs!5508 m!157461))

(assert (=> b!132994 d!40507))

(declare-fun b!133367 () Bool)

(declare-fun e!86917 () SeekEntryResult!285)

(declare-fun e!86918 () SeekEntryResult!285)

(assert (=> b!133367 (= e!86917 e!86918)))

(declare-fun c!24705 () Bool)

(declare-fun lt!69788 () (_ BitVec 64))

(assert (=> b!133367 (= c!24705 (= lt!69788 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!133368 () Bool)

(assert (=> b!133368 (= e!86918 (Found!285 (index!3302 lt!69644)))))

(declare-fun b!133369 () Bool)

(declare-fun e!86916 () SeekEntryResult!285)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!133369 (= e!86916 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15602 lt!69644) #b00000000000000000000000000000001) (nextIndex!0 (index!3302 lt!69644) (x!15602 lt!69644) (mask!7165 (v!3197 (underlying!454 thiss!992)))) (index!3302 lt!69644) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun b!133370 () Bool)

(assert (=> b!133370 (= e!86916 (MissingVacant!285 (index!3302 lt!69644)))))

(declare-fun b!133371 () Bool)

(declare-fun c!24707 () Bool)

(assert (=> b!133371 (= c!24707 (= lt!69788 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133371 (= e!86918 e!86916)))

(declare-fun d!40509 () Bool)

(declare-fun lt!69789 () SeekEntryResult!285)

(assert (=> d!40509 (and (or ((_ is Undefined!285) lt!69789) (not ((_ is Found!285) lt!69789)) (and (bvsge (index!3301 lt!69789) #b00000000000000000000000000000000) (bvslt (index!3301 lt!69789) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))) (or ((_ is Undefined!285) lt!69789) ((_ is Found!285) lt!69789) (not ((_ is MissingVacant!285) lt!69789)) (not (= (index!3303 lt!69789) (index!3302 lt!69644))) (and (bvsge (index!3303 lt!69789) #b00000000000000000000000000000000) (bvslt (index!3303 lt!69789) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))) (or ((_ is Undefined!285) lt!69789) (ite ((_ is Found!285) lt!69789) (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3301 lt!69789)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)) (and ((_ is MissingVacant!285) lt!69789) (= (index!3303 lt!69789) (index!3302 lt!69644)) (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3303 lt!69789)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!40509 (= lt!69789 e!86917)))

(declare-fun c!24706 () Bool)

(assert (=> d!40509 (= c!24706 (bvsge (x!15602 lt!69644) #b01111111111111111111111111111110))))

(assert (=> d!40509 (= lt!69788 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3302 lt!69644)))))

(assert (=> d!40509 (validMask!0 (mask!7165 (v!3197 (underlying!454 thiss!992))))))

(assert (=> d!40509 (= (seekKeyOrZeroReturnVacant!0 (x!15602 lt!69644) (index!3302 lt!69644) (index!3302 lt!69644) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))) lt!69789)))

(declare-fun b!133372 () Bool)

(assert (=> b!133372 (= e!86917 Undefined!285)))

(assert (= (and d!40509 c!24706) b!133372))

(assert (= (and d!40509 (not c!24706)) b!133367))

(assert (= (and b!133367 c!24705) b!133368))

(assert (= (and b!133367 (not c!24705)) b!133371))

(assert (= (and b!133371 c!24707) b!133370))

(assert (= (and b!133371 (not c!24707)) b!133369))

(declare-fun m!157463 () Bool)

(assert (=> b!133369 m!157463))

(assert (=> b!133369 m!157463))

(assert (=> b!133369 m!156487))

(declare-fun m!157465 () Bool)

(assert (=> b!133369 m!157465))

(declare-fun m!157467 () Bool)

(assert (=> d!40509 m!157467))

(declare-fun m!157469 () Bool)

(assert (=> d!40509 m!157469))

(assert (=> d!40509 m!157069))

(assert (=> d!40509 m!156295))

(assert (=> b!133138 d!40509))

(declare-fun b!133391 () Bool)

(declare-fun lt!69794 () SeekEntryResult!285)

(assert (=> b!133391 (and (bvsge (index!3302 lt!69794) #b00000000000000000000000000000000) (bvslt (index!3302 lt!69794) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun res!64207 () Bool)

(assert (=> b!133391 (= res!64207 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3302 lt!69794)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!86932 () Bool)

(assert (=> b!133391 (=> res!64207 e!86932)))

(declare-fun b!133392 () Bool)

(declare-fun e!86929 () SeekEntryResult!285)

(assert (=> b!133392 (= e!86929 (Intermediate!285 true (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun e!86930 () SeekEntryResult!285)

(declare-fun b!133393 () Bool)

(assert (=> b!133393 (= e!86930 (Intermediate!285 false (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!133394 () Bool)

(assert (=> b!133394 (= e!86930 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000 (mask!7165 newMap!16)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun d!40511 () Bool)

(declare-fun e!86931 () Bool)

(assert (=> d!40511 e!86931))

(declare-fun c!24715 () Bool)

(assert (=> d!40511 (= c!24715 (and ((_ is Intermediate!285) lt!69794) (undefined!1097 lt!69794)))))

(assert (=> d!40511 (= lt!69794 e!86929)))

(declare-fun c!24714 () Bool)

(assert (=> d!40511 (= c!24714 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!69795 () (_ BitVec 64))

(assert (=> d!40511 (= lt!69795 (select (arr!2260 (_keys!4614 newMap!16)) (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (mask!7165 newMap!16))))))

(assert (=> d!40511 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40511 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (mask!7165 newMap!16)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)) lt!69794)))

(declare-fun b!133395 () Bool)

(assert (=> b!133395 (and (bvsge (index!3302 lt!69794) #b00000000000000000000000000000000) (bvslt (index!3302 lt!69794) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun res!64206 () Bool)

(assert (=> b!133395 (= res!64206 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3302 lt!69794)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> b!133395 (=> res!64206 e!86932)))

(declare-fun e!86933 () Bool)

(assert (=> b!133395 (= e!86933 e!86932)))

(declare-fun b!133396 () Bool)

(assert (=> b!133396 (= e!86931 (bvsge (x!15602 lt!69794) #b01111111111111111111111111111110))))

(declare-fun b!133397 () Bool)

(assert (=> b!133397 (and (bvsge (index!3302 lt!69794) #b00000000000000000000000000000000) (bvslt (index!3302 lt!69794) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> b!133397 (= e!86932 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3302 lt!69794)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133398 () Bool)

(assert (=> b!133398 (= e!86929 e!86930)))

(declare-fun c!24716 () Bool)

(assert (=> b!133398 (= c!24716 (or (= lt!69795 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (= (bvadd lt!69795 lt!69795) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133399 () Bool)

(assert (=> b!133399 (= e!86931 e!86933)))

(declare-fun res!64208 () Bool)

(assert (=> b!133399 (= res!64208 (and ((_ is Intermediate!285) lt!69794) (not (undefined!1097 lt!69794)) (bvslt (x!15602 lt!69794) #b01111111111111111111111111111110) (bvsge (x!15602 lt!69794) #b00000000000000000000000000000000) (bvsge (x!15602 lt!69794) #b00000000000000000000000000000000)))))

(assert (=> b!133399 (=> (not res!64208) (not e!86933))))

(assert (= (and d!40511 c!24714) b!133392))

(assert (= (and d!40511 (not c!24714)) b!133398))

(assert (= (and b!133398 c!24716) b!133393))

(assert (= (and b!133398 (not c!24716)) b!133394))

(assert (= (and d!40511 c!24715) b!133396))

(assert (= (and d!40511 (not c!24715)) b!133399))

(assert (= (and b!133399 res!64208) b!133395))

(assert (= (and b!133395 (not res!64206)) b!133391))

(assert (= (and b!133391 (not res!64207)) b!133397))

(assert (=> b!133394 m!156701))

(declare-fun m!157471 () Bool)

(assert (=> b!133394 m!157471))

(assert (=> b!133394 m!157471))

(assert (=> b!133394 m!156287))

(declare-fun m!157473 () Bool)

(assert (=> b!133394 m!157473))

(declare-fun m!157475 () Bool)

(assert (=> b!133391 m!157475))

(assert (=> b!133395 m!157475))

(assert (=> d!40511 m!156701))

(declare-fun m!157477 () Bool)

(assert (=> d!40511 m!157477))

(assert (=> d!40511 m!156571))

(assert (=> b!133397 m!157475))

(assert (=> d!40337 d!40511))

(declare-fun d!40513 () Bool)

(declare-fun lt!69801 () (_ BitVec 32))

(declare-fun lt!69800 () (_ BitVec 32))

(assert (=> d!40513 (= lt!69801 (bvmul (bvxor lt!69800 (bvlshr lt!69800 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!40513 (= lt!69800 ((_ extract 31 0) (bvand (bvxor (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (bvlshr (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!40513 (and (bvsge (mask!7165 newMap!16) #b00000000000000000000000000000000) (let ((res!64209 (let ((h!2338 ((_ extract 31 0) (bvand (bvxor (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (bvlshr (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!15706 (bvmul (bvxor h!2338 (bvlshr h!2338 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!15706 (bvlshr x!15706 #b00000000000000000000000000001101)) (mask!7165 newMap!16)))))) (and (bvslt res!64209 (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001)) (bvsge res!64209 #b00000000000000000000000000000000))))))

(assert (=> d!40513 (= (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (mask!7165 newMap!16)) (bvand (bvxor lt!69801 (bvlshr lt!69801 #b00000000000000000000000000001101)) (mask!7165 newMap!16)))))

(assert (=> d!40337 d!40513))

(assert (=> d!40337 d!40475))

(declare-fun d!40515 () Bool)

(assert (=> d!40515 (= (apply!116 lt!69424 lt!69423) (get!1491 (getValueByKey!171 (toList!869 lt!69424) lt!69423)))))

(declare-fun bs!5509 () Bool)

(assert (= bs!5509 d!40515))

(declare-fun m!157479 () Bool)

(assert (=> bs!5509 m!157479))

(assert (=> bs!5509 m!157479))

(declare-fun m!157481 () Bool)

(assert (=> bs!5509 m!157481))

(assert (=> b!132941 d!40515))

(declare-fun d!40517 () Bool)

(assert (=> d!40517 (= (apply!116 (+!170 lt!69425 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))) lt!69413) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69425 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))) lt!69413)))))

(declare-fun bs!5510 () Bool)

(assert (= bs!5510 d!40517))

(declare-fun m!157483 () Bool)

(assert (=> bs!5510 m!157483))

(assert (=> bs!5510 m!157483))

(declare-fun m!157485 () Bool)

(assert (=> bs!5510 m!157485))

(assert (=> b!132941 d!40517))

(declare-fun d!40519 () Bool)

(assert (=> d!40519 (contains!896 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))) lt!69422)))

(declare-fun lt!69802 () Unit!4150)

(assert (=> d!40519 (= lt!69802 (choose!829 lt!69412 lt!69415 (zeroValue!2720 newMap!16) lt!69422))))

(assert (=> d!40519 (contains!896 lt!69412 lt!69422)))

(assert (=> d!40519 (= (addStillContains!92 lt!69412 lt!69415 (zeroValue!2720 newMap!16) lt!69422) lt!69802)))

(declare-fun bs!5511 () Bool)

(assert (= bs!5511 d!40519))

(assert (=> bs!5511 m!156667))

(assert (=> bs!5511 m!156667))

(assert (=> bs!5511 m!156683))

(declare-fun m!157487 () Bool)

(assert (=> bs!5511 m!157487))

(declare-fun m!157489 () Bool)

(assert (=> bs!5511 m!157489))

(assert (=> b!132941 d!40519))

(declare-fun d!40521 () Bool)

(assert (=> d!40521 (= (apply!116 lt!69425 lt!69413) (get!1491 (getValueByKey!171 (toList!869 lt!69425) lt!69413)))))

(declare-fun bs!5512 () Bool)

(assert (= bs!5512 d!40521))

(declare-fun m!157491 () Bool)

(assert (=> bs!5512 m!157491))

(assert (=> bs!5512 m!157491))

(declare-fun m!157493 () Bool)

(assert (=> bs!5512 m!157493))

(assert (=> b!132941 d!40521))

(declare-fun d!40523 () Bool)

(declare-fun e!86934 () Bool)

(assert (=> d!40523 e!86934))

(declare-fun res!64211 () Bool)

(assert (=> d!40523 (=> (not res!64211) (not e!86934))))

(declare-fun lt!69804 () ListLongMap!1707)

(assert (=> d!40523 (= res!64211 (contains!896 lt!69804 (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))))

(declare-fun lt!69806 () List!1735)

(assert (=> d!40523 (= lt!69804 (ListLongMap!1708 lt!69806))))

(declare-fun lt!69805 () Unit!4150)

(declare-fun lt!69803 () Unit!4150)

(assert (=> d!40523 (= lt!69805 lt!69803)))

(assert (=> d!40523 (= (getValueByKey!171 lt!69806 (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))))

(assert (=> d!40523 (= lt!69803 (lemmaContainsTupThenGetReturnValue!88 lt!69806 (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))))

(assert (=> d!40523 (= lt!69806 (insertStrictlySorted!90 (toList!869 lt!69425) (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))))

(assert (=> d!40523 (= (+!170 lt!69425 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))) lt!69804)))

(declare-fun b!133400 () Bool)

(declare-fun res!64210 () Bool)

(assert (=> b!133400 (=> (not res!64210) (not e!86934))))

(assert (=> b!133400 (= res!64210 (= (getValueByKey!171 (toList!869 lt!69804) (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))))))))

(declare-fun b!133401 () Bool)

(assert (=> b!133401 (= e!86934 (contains!898 (toList!869 lt!69804) (tuple2!2609 lt!69427 (minValue!2720 newMap!16))))))

(assert (= (and d!40523 res!64211) b!133400))

(assert (= (and b!133400 res!64210) b!133401))

(declare-fun m!157495 () Bool)

(assert (=> d!40523 m!157495))

(declare-fun m!157497 () Bool)

(assert (=> d!40523 m!157497))

(declare-fun m!157499 () Bool)

(assert (=> d!40523 m!157499))

(declare-fun m!157501 () Bool)

(assert (=> d!40523 m!157501))

(declare-fun m!157503 () Bool)

(assert (=> b!133400 m!157503))

(declare-fun m!157505 () Bool)

(assert (=> b!133401 m!157505))

(assert (=> b!132941 d!40523))

(declare-fun d!40525 () Bool)

(declare-fun e!86935 () Bool)

(assert (=> d!40525 e!86935))

(declare-fun res!64213 () Bool)

(assert (=> d!40525 (=> (not res!64213) (not e!86935))))

(declare-fun lt!69808 () ListLongMap!1707)

(assert (=> d!40525 (= res!64213 (contains!896 lt!69808 (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!69810 () List!1735)

(assert (=> d!40525 (= lt!69808 (ListLongMap!1708 lt!69810))))

(declare-fun lt!69809 () Unit!4150)

(declare-fun lt!69807 () Unit!4150)

(assert (=> d!40525 (= lt!69809 lt!69807)))

(assert (=> d!40525 (= (getValueByKey!171 lt!69810 (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40525 (= lt!69807 (lemmaContainsTupThenGetReturnValue!88 lt!69810 (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40525 (= lt!69810 (insertStrictlySorted!90 (toList!869 lt!69412) (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40525 (= (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))) lt!69808)))

(declare-fun b!133402 () Bool)

(declare-fun res!64212 () Bool)

(assert (=> b!133402 (=> (not res!64212) (not e!86935))))

(assert (=> b!133402 (= res!64212 (= (getValueByKey!171 (toList!869 lt!69808) (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))))))

(declare-fun b!133403 () Bool)

(assert (=> b!133403 (= e!86935 (contains!898 (toList!869 lt!69808) (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))))

(assert (= (and d!40525 res!64213) b!133402))

(assert (= (and b!133402 res!64212) b!133403))

(declare-fun m!157507 () Bool)

(assert (=> d!40525 m!157507))

(declare-fun m!157509 () Bool)

(assert (=> d!40525 m!157509))

(declare-fun m!157511 () Bool)

(assert (=> d!40525 m!157511))

(declare-fun m!157513 () Bool)

(assert (=> d!40525 m!157513))

(declare-fun m!157515 () Bool)

(assert (=> b!133402 m!157515))

(declare-fun m!157517 () Bool)

(assert (=> b!133403 m!157517))

(assert (=> b!132941 d!40525))

(declare-fun d!40527 () Bool)

(assert (=> d!40527 (= (apply!116 (+!170 lt!69420 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))) lt!69418) (apply!116 lt!69420 lt!69418))))

(declare-fun lt!69811 () Unit!4150)

(assert (=> d!40527 (= lt!69811 (choose!828 lt!69420 lt!69431 (zeroValue!2720 newMap!16) lt!69418))))

(declare-fun e!86936 () Bool)

(assert (=> d!40527 e!86936))

(declare-fun res!64214 () Bool)

(assert (=> d!40527 (=> (not res!64214) (not e!86936))))

(assert (=> d!40527 (= res!64214 (contains!896 lt!69420 lt!69418))))

(assert (=> d!40527 (= (addApplyDifferent!92 lt!69420 lt!69431 (zeroValue!2720 newMap!16) lt!69418) lt!69811)))

(declare-fun b!133404 () Bool)

(assert (=> b!133404 (= e!86936 (not (= lt!69418 lt!69431)))))

(assert (= (and d!40527 res!64214) b!133404))

(assert (=> d!40527 m!156687))

(assert (=> d!40527 m!156657))

(assert (=> d!40527 m!156675))

(declare-fun m!157519 () Bool)

(assert (=> d!40527 m!157519))

(declare-fun m!157521 () Bool)

(assert (=> d!40527 m!157521))

(assert (=> d!40527 m!156657))

(assert (=> b!132941 d!40527))

(declare-fun d!40529 () Bool)

(declare-fun e!86937 () Bool)

(assert (=> d!40529 e!86937))

(declare-fun res!64216 () Bool)

(assert (=> d!40529 (=> (not res!64216) (not e!86937))))

(declare-fun lt!69813 () ListLongMap!1707)

(assert (=> d!40529 (= res!64216 (contains!896 lt!69813 (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!69815 () List!1735)

(assert (=> d!40529 (= lt!69813 (ListLongMap!1708 lt!69815))))

(declare-fun lt!69814 () Unit!4150)

(declare-fun lt!69812 () Unit!4150)

(assert (=> d!40529 (= lt!69814 lt!69812)))

(assert (=> d!40529 (= (getValueByKey!171 lt!69815 (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40529 (= lt!69812 (lemmaContainsTupThenGetReturnValue!88 lt!69815 (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40529 (= lt!69815 (insertStrictlySorted!90 (toList!869 lt!69420) (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40529 (= (+!170 lt!69420 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))) lt!69813)))

(declare-fun b!133405 () Bool)

(declare-fun res!64215 () Bool)

(assert (=> b!133405 (=> (not res!64215) (not e!86937))))

(assert (=> b!133405 (= res!64215 (= (getValueByKey!171 (toList!869 lt!69813) (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))))))))

(declare-fun b!133406 () Bool)

(assert (=> b!133406 (= e!86937 (contains!898 (toList!869 lt!69813) (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))))))

(assert (= (and d!40529 res!64216) b!133405))

(assert (= (and b!133405 res!64215) b!133406))

(declare-fun m!157523 () Bool)

(assert (=> d!40529 m!157523))

(declare-fun m!157525 () Bool)

(assert (=> d!40529 m!157525))

(declare-fun m!157527 () Bool)

(assert (=> d!40529 m!157527))

(declare-fun m!157529 () Bool)

(assert (=> d!40529 m!157529))

(declare-fun m!157531 () Bool)

(assert (=> b!133405 m!157531))

(declare-fun m!157533 () Bool)

(assert (=> b!133406 m!157533))

(assert (=> b!132941 d!40529))

(declare-fun b!133407 () Bool)

(declare-fun lt!69816 () Unit!4150)

(declare-fun lt!69820 () Unit!4150)

(assert (=> b!133407 (= lt!69816 lt!69820)))

(declare-fun lt!69818 () (_ BitVec 64))

(declare-fun lt!69821 () (_ BitVec 64))

(declare-fun lt!69817 () ListLongMap!1707)

(declare-fun lt!69819 () V!3483)

(assert (=> b!133407 (not (contains!896 (+!170 lt!69817 (tuple2!2609 lt!69821 lt!69819)) lt!69818))))

(assert (=> b!133407 (= lt!69820 (addStillNotContains!63 lt!69817 lt!69821 lt!69819 lt!69818))))

(assert (=> b!133407 (= lt!69818 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133407 (= lt!69819 (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133407 (= lt!69821 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!14732 () ListLongMap!1707)

(assert (=> b!133407 (= lt!69817 call!14732)))

(declare-fun e!86944 () ListLongMap!1707)

(assert (=> b!133407 (= e!86944 (+!170 call!14732 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133408 () Bool)

(declare-fun e!86941 () Bool)

(declare-fun lt!69822 () ListLongMap!1707)

(assert (=> b!133408 (= e!86941 (= lt!69822 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!133409 () Bool)

(assert (=> b!133409 (= e!86941 (isEmpty!414 lt!69822))))

(declare-fun b!133410 () Bool)

(declare-fun e!86942 () ListLongMap!1707)

(assert (=> b!133410 (= e!86942 (ListLongMap!1708 Nil!1732))))

(declare-fun b!133411 () Bool)

(declare-fun e!86939 () Bool)

(declare-fun e!86940 () Bool)

(assert (=> b!133411 (= e!86939 e!86940)))

(declare-fun c!24720 () Bool)

(declare-fun e!86943 () Bool)

(assert (=> b!133411 (= c!24720 e!86943)))

(declare-fun res!64220 () Bool)

(assert (=> b!133411 (=> (not res!64220) (not e!86943))))

(assert (=> b!133411 (= res!64220 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!133412 () Bool)

(assert (=> b!133412 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (=> b!133412 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_values!2848 newMap!16))))))

(declare-fun e!86938 () Bool)

(assert (=> b!133412 (= e!86938 (= (apply!116 lt!69822 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!133414 () Bool)

(assert (=> b!133414 (= e!86940 e!86938)))

(assert (=> b!133414 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun res!64219 () Bool)

(assert (=> b!133414 (= res!64219 (contains!896 lt!69822 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133414 (=> (not res!64219) (not e!86938))))

(declare-fun b!133415 () Bool)

(assert (=> b!133415 (= e!86942 e!86944)))

(declare-fun c!24717 () Bool)

(assert (=> b!133415 (= c!24717 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133416 () Bool)

(declare-fun res!64218 () Bool)

(assert (=> b!133416 (=> (not res!64218) (not e!86939))))

(assert (=> b!133416 (= res!64218 (not (contains!896 lt!69822 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133417 () Bool)

(assert (=> b!133417 (= e!86940 e!86941)))

(declare-fun c!24719 () Bool)

(assert (=> b!133417 (= c!24719 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun bm!14729 () Bool)

(assert (=> bm!14729 (= call!14732 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!133418 () Bool)

(assert (=> b!133418 (= e!86943 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133418 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!133413 () Bool)

(assert (=> b!133413 (= e!86944 call!14732)))

(declare-fun d!40531 () Bool)

(assert (=> d!40531 e!86939))

(declare-fun res!64217 () Bool)

(assert (=> d!40531 (=> (not res!64217) (not e!86939))))

(assert (=> d!40531 (= res!64217 (not (contains!896 lt!69822 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40531 (= lt!69822 e!86942)))

(declare-fun c!24718 () Bool)

(assert (=> d!40531 (= c!24718 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!40531 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40531 (= (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69822)))

(assert (= (and d!40531 c!24718) b!133410))

(assert (= (and d!40531 (not c!24718)) b!133415))

(assert (= (and b!133415 c!24717) b!133407))

(assert (= (and b!133415 (not c!24717)) b!133413))

(assert (= (or b!133407 b!133413) bm!14729))

(assert (= (and d!40531 res!64217) b!133416))

(assert (= (and b!133416 res!64218) b!133411))

(assert (= (and b!133411 res!64220) b!133418))

(assert (= (and b!133411 c!24720) b!133414))

(assert (= (and b!133411 (not c!24720)) b!133417))

(assert (= (and b!133414 res!64219) b!133412))

(assert (= (and b!133417 c!24719) b!133408))

(assert (= (and b!133417 (not c!24719)) b!133409))

(declare-fun b_lambda!5967 () Bool)

(assert (=> (not b_lambda!5967) (not b!133407)))

(assert (=> b!133407 t!6205))

(declare-fun b_and!8285 () Bool)

(assert (= b_and!8281 (and (=> t!6205 result!4009) b_and!8285)))

(assert (=> b!133407 t!6207))

(declare-fun b_and!8287 () Bool)

(assert (= b_and!8283 (and (=> t!6207 result!4011) b_and!8287)))

(declare-fun b_lambda!5969 () Bool)

(assert (=> (not b_lambda!5969) (not b!133412)))

(assert (=> b!133412 t!6205))

(declare-fun b_and!8289 () Bool)

(assert (= b_and!8285 (and (=> t!6205 result!4009) b_and!8289)))

(assert (=> b!133412 t!6207))

(declare-fun b_and!8291 () Bool)

(assert (= b_and!8287 (and (=> t!6207 result!4011) b_and!8291)))

(declare-fun m!157535 () Bool)

(assert (=> d!40531 m!157535))

(assert (=> d!40531 m!156571))

(declare-fun m!157537 () Bool)

(assert (=> b!133408 m!157537))

(declare-fun m!157539 () Bool)

(assert (=> b!133407 m!157539))

(declare-fun m!157541 () Bool)

(assert (=> b!133407 m!157541))

(assert (=> b!133407 m!157539))

(assert (=> b!133407 m!156647))

(assert (=> b!133407 m!156645))

(assert (=> b!133407 m!156647))

(assert (=> b!133407 m!156649))

(declare-fun m!157543 () Bool)

(assert (=> b!133407 m!157543))

(assert (=> b!133407 m!156645))

(assert (=> b!133407 m!156533))

(declare-fun m!157545 () Bool)

(assert (=> b!133407 m!157545))

(assert (=> b!133412 m!156533))

(declare-fun m!157547 () Bool)

(assert (=> b!133412 m!157547))

(assert (=> b!133412 m!156647))

(assert (=> b!133412 m!156533))

(assert (=> b!133412 m!156645))

(assert (=> b!133412 m!156647))

(assert (=> b!133412 m!156649))

(assert (=> b!133412 m!156645))

(assert (=> bm!14729 m!157537))

(assert (=> b!133415 m!156533))

(assert (=> b!133415 m!156533))

(assert (=> b!133415 m!156557))

(declare-fun m!157549 () Bool)

(assert (=> b!133416 m!157549))

(assert (=> b!133414 m!156533))

(assert (=> b!133414 m!156533))

(declare-fun m!157551 () Bool)

(assert (=> b!133414 m!157551))

(assert (=> b!133418 m!156533))

(assert (=> b!133418 m!156533))

(assert (=> b!133418 m!156557))

(declare-fun m!157553 () Bool)

(assert (=> b!133409 m!157553))

(assert (=> b!132941 d!40531))

(declare-fun d!40533 () Bool)

(assert (=> d!40533 (= (apply!116 lt!69420 lt!69418) (get!1491 (getValueByKey!171 (toList!869 lt!69420) lt!69418)))))

(declare-fun bs!5513 () Bool)

(assert (= bs!5513 d!40533))

(declare-fun m!157555 () Bool)

(assert (=> bs!5513 m!157555))

(assert (=> bs!5513 m!157555))

(declare-fun m!157557 () Bool)

(assert (=> bs!5513 m!157557))

(assert (=> b!132941 d!40533))

(declare-fun d!40535 () Bool)

(assert (=> d!40535 (= (apply!116 (+!170 lt!69420 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))) lt!69418) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69420 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))) lt!69418)))))

(declare-fun bs!5514 () Bool)

(assert (= bs!5514 d!40535))

(declare-fun m!157559 () Bool)

(assert (=> bs!5514 m!157559))

(assert (=> bs!5514 m!157559))

(declare-fun m!157561 () Bool)

(assert (=> bs!5514 m!157561))

(assert (=> b!132941 d!40535))

(declare-fun d!40537 () Bool)

(assert (=> d!40537 (= (apply!116 (+!170 lt!69425 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))) lt!69413) (apply!116 lt!69425 lt!69413))))

(declare-fun lt!69823 () Unit!4150)

(assert (=> d!40537 (= lt!69823 (choose!828 lt!69425 lt!69427 (minValue!2720 newMap!16) lt!69413))))

(declare-fun e!86945 () Bool)

(assert (=> d!40537 e!86945))

(declare-fun res!64221 () Bool)

(assert (=> d!40537 (=> (not res!64221) (not e!86945))))

(assert (=> d!40537 (= res!64221 (contains!896 lt!69425 lt!69413))))

(assert (=> d!40537 (= (addApplyDifferent!92 lt!69425 lt!69427 (minValue!2720 newMap!16) lt!69413) lt!69823)))

(declare-fun b!133419 () Bool)

(assert (=> b!133419 (= e!86945 (not (= lt!69413 lt!69427)))))

(assert (= (and d!40537 res!64221) b!133419))

(assert (=> d!40537 m!156685))

(assert (=> d!40537 m!156671))

(assert (=> d!40537 m!156673))

(declare-fun m!157563 () Bool)

(assert (=> d!40537 m!157563))

(declare-fun m!157565 () Bool)

(assert (=> d!40537 m!157565))

(assert (=> d!40537 m!156671))

(assert (=> b!132941 d!40537))

(declare-fun d!40539 () Bool)

(assert (=> d!40539 (= (apply!116 (+!170 lt!69424 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))) lt!69423) (apply!116 lt!69424 lt!69423))))

(declare-fun lt!69824 () Unit!4150)

(assert (=> d!40539 (= lt!69824 (choose!828 lt!69424 lt!69421 (minValue!2720 newMap!16) lt!69423))))

(declare-fun e!86946 () Bool)

(assert (=> d!40539 e!86946))

(declare-fun res!64222 () Bool)

(assert (=> d!40539 (=> (not res!64222) (not e!86946))))

(assert (=> d!40539 (= res!64222 (contains!896 lt!69424 lt!69423))))

(assert (=> d!40539 (= (addApplyDifferent!92 lt!69424 lt!69421 (minValue!2720 newMap!16) lt!69423) lt!69824)))

(declare-fun b!133420 () Bool)

(assert (=> b!133420 (= e!86946 (not (= lt!69423 lt!69421)))))

(assert (= (and d!40539 res!64222) b!133420))

(assert (=> d!40539 m!156677))

(assert (=> d!40539 m!156661))

(assert (=> d!40539 m!156663))

(declare-fun m!157567 () Bool)

(assert (=> d!40539 m!157567))

(declare-fun m!157569 () Bool)

(assert (=> d!40539 m!157569))

(assert (=> d!40539 m!156661))

(assert (=> b!132941 d!40539))

(declare-fun d!40541 () Bool)

(declare-fun e!86947 () Bool)

(assert (=> d!40541 e!86947))

(declare-fun res!64223 () Bool)

(assert (=> d!40541 (=> res!64223 e!86947)))

(declare-fun lt!69825 () Bool)

(assert (=> d!40541 (= res!64223 (not lt!69825))))

(declare-fun lt!69827 () Bool)

(assert (=> d!40541 (= lt!69825 lt!69827)))

(declare-fun lt!69826 () Unit!4150)

(declare-fun e!86948 () Unit!4150)

(assert (=> d!40541 (= lt!69826 e!86948)))

(declare-fun c!24721 () Bool)

(assert (=> d!40541 (= c!24721 lt!69827)))

(assert (=> d!40541 (= lt!69827 (containsKey!175 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) lt!69422))))

(assert (=> d!40541 (= (contains!896 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))) lt!69422) lt!69825)))

(declare-fun b!133421 () Bool)

(declare-fun lt!69828 () Unit!4150)

(assert (=> b!133421 (= e!86948 lt!69828)))

(assert (=> b!133421 (= lt!69828 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) lt!69422))))

(assert (=> b!133421 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) lt!69422))))

(declare-fun b!133422 () Bool)

(declare-fun Unit!4178 () Unit!4150)

(assert (=> b!133422 (= e!86948 Unit!4178)))

(declare-fun b!133423 () Bool)

(assert (=> b!133423 (= e!86947 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) lt!69422)))))

(assert (= (and d!40541 c!24721) b!133421))

(assert (= (and d!40541 (not c!24721)) b!133422))

(assert (= (and d!40541 (not res!64223)) b!133423))

(declare-fun m!157571 () Bool)

(assert (=> d!40541 m!157571))

(declare-fun m!157573 () Bool)

(assert (=> b!133421 m!157573))

(declare-fun m!157575 () Bool)

(assert (=> b!133421 m!157575))

(assert (=> b!133421 m!157575))

(declare-fun m!157577 () Bool)

(assert (=> b!133421 m!157577))

(assert (=> b!133423 m!157575))

(assert (=> b!133423 m!157575))

(assert (=> b!133423 m!157577))

(assert (=> b!132941 d!40541))

(declare-fun d!40543 () Bool)

(declare-fun e!86949 () Bool)

(assert (=> d!40543 e!86949))

(declare-fun res!64225 () Bool)

(assert (=> d!40543 (=> (not res!64225) (not e!86949))))

(declare-fun lt!69830 () ListLongMap!1707)

(assert (=> d!40543 (= res!64225 (contains!896 lt!69830 (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))))

(declare-fun lt!69832 () List!1735)

(assert (=> d!40543 (= lt!69830 (ListLongMap!1708 lt!69832))))

(declare-fun lt!69831 () Unit!4150)

(declare-fun lt!69829 () Unit!4150)

(assert (=> d!40543 (= lt!69831 lt!69829)))

(assert (=> d!40543 (= (getValueByKey!171 lt!69832 (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))))

(assert (=> d!40543 (= lt!69829 (lemmaContainsTupThenGetReturnValue!88 lt!69832 (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))))

(assert (=> d!40543 (= lt!69832 (insertStrictlySorted!90 (toList!869 lt!69424) (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))))

(assert (=> d!40543 (= (+!170 lt!69424 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))) lt!69830)))

(declare-fun b!133424 () Bool)

(declare-fun res!64224 () Bool)

(assert (=> b!133424 (=> (not res!64224) (not e!86949))))

(assert (=> b!133424 (= res!64224 (= (getValueByKey!171 (toList!869 lt!69830) (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))))))))

(declare-fun b!133425 () Bool)

(assert (=> b!133425 (= e!86949 (contains!898 (toList!869 lt!69830) (tuple2!2609 lt!69421 (minValue!2720 newMap!16))))))

(assert (= (and d!40543 res!64225) b!133424))

(assert (= (and b!133424 res!64224) b!133425))

(declare-fun m!157579 () Bool)

(assert (=> d!40543 m!157579))

(declare-fun m!157581 () Bool)

(assert (=> d!40543 m!157581))

(declare-fun m!157583 () Bool)

(assert (=> d!40543 m!157583))

(declare-fun m!157585 () Bool)

(assert (=> d!40543 m!157585))

(declare-fun m!157587 () Bool)

(assert (=> b!133424 m!157587))

(declare-fun m!157589 () Bool)

(assert (=> b!133425 m!157589))

(assert (=> b!132941 d!40543))

(declare-fun d!40545 () Bool)

(assert (=> d!40545 (= (apply!116 (+!170 lt!69424 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))) lt!69423) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69424 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))) lt!69423)))))

(declare-fun bs!5515 () Bool)

(assert (= bs!5515 d!40545))

(declare-fun m!157591 () Bool)

(assert (=> bs!5515 m!157591))

(assert (=> bs!5515 m!157591))

(declare-fun m!157593 () Bool)

(assert (=> bs!5515 m!157593))

(assert (=> b!132941 d!40545))

(declare-fun d!40547 () Bool)

(assert (=> d!40547 (= (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (and (not (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133128 d!40547))

(declare-fun d!40549 () Bool)

(declare-fun e!86950 () Bool)

(assert (=> d!40549 e!86950))

(declare-fun res!64227 () Bool)

(assert (=> d!40549 (=> (not res!64227) (not e!86950))))

(declare-fun lt!69834 () ListLongMap!1707)

(assert (=> d!40549 (= res!64227 (contains!896 lt!69834 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69836 () List!1735)

(assert (=> d!40549 (= lt!69834 (ListLongMap!1708 lt!69836))))

(declare-fun lt!69835 () Unit!4150)

(declare-fun lt!69833 () Unit!4150)

(assert (=> d!40549 (= lt!69835 lt!69833)))

(assert (=> d!40549 (= (getValueByKey!171 lt!69836 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40549 (= lt!69833 (lemmaContainsTupThenGetReturnValue!88 lt!69836 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40549 (= lt!69836 (insertStrictlySorted!90 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40549 (= (+!170 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69834)))

(declare-fun b!133426 () Bool)

(declare-fun res!64226 () Bool)

(assert (=> b!133426 (=> (not res!64226) (not e!86950))))

(assert (=> b!133426 (= res!64226 (= (getValueByKey!171 (toList!869 lt!69834) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133427 () Bool)

(assert (=> b!133427 (= e!86950 (contains!898 (toList!869 lt!69834) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40549 res!64227) b!133426))

(assert (= (and b!133426 res!64226) b!133427))

(declare-fun m!157595 () Bool)

(assert (=> d!40549 m!157595))

(declare-fun m!157597 () Bool)

(assert (=> d!40549 m!157597))

(declare-fun m!157599 () Bool)

(assert (=> d!40549 m!157599))

(declare-fun m!157601 () Bool)

(assert (=> d!40549 m!157601))

(declare-fun m!157603 () Bool)

(assert (=> b!133426 m!157603))

(declare-fun m!157605 () Bool)

(assert (=> b!133427 m!157605))

(assert (=> b!133123 d!40549))

(assert (=> b!133123 d!40335))

(declare-fun bm!14730 () Bool)

(declare-fun call!14739 () ListLongMap!1707)

(declare-fun call!14735 () ListLongMap!1707)

(assert (=> bm!14730 (= call!14739 call!14735)))

(declare-fun b!133428 () Bool)

(declare-fun e!86960 () Bool)

(declare-fun lt!69843 () ListLongMap!1707)

(assert (=> b!133428 (= e!86960 (= (apply!116 lt!69843 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 newMap!16)))))

(declare-fun bm!14731 () Bool)

(declare-fun call!14734 () Bool)

(assert (=> bm!14731 (= call!14734 (contains!896 lt!69843 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133429 () Bool)

(declare-fun e!86963 () Bool)

(declare-fun call!14736 () Bool)

(assert (=> b!133429 (= e!86963 (not call!14736))))

(declare-fun b!133430 () Bool)

(declare-fun e!86962 () Unit!4150)

(declare-fun Unit!4179 () Unit!4150)

(assert (=> b!133430 (= e!86962 Unit!4179)))

(declare-fun d!40551 () Bool)

(declare-fun e!86959 () Bool)

(assert (=> d!40551 e!86959))

(declare-fun res!64234 () Bool)

(assert (=> d!40551 (=> (not res!64234) (not e!86959))))

(assert (=> d!40551 (= res!64234 (or (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))))

(declare-fun lt!69837 () ListLongMap!1707)

(assert (=> d!40551 (= lt!69843 lt!69837)))

(declare-fun lt!69838 () Unit!4150)

(assert (=> d!40551 (= lt!69838 e!86962)))

(declare-fun c!24723 () Bool)

(declare-fun e!86953 () Bool)

(assert (=> d!40551 (= c!24723 e!86953)))

(declare-fun res!64233 () Bool)

(assert (=> d!40551 (=> (not res!64233) (not e!86953))))

(assert (=> d!40551 (= res!64233 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun e!86951 () ListLongMap!1707)

(assert (=> d!40551 (= lt!69837 e!86951)))

(declare-fun c!24722 () Bool)

(assert (=> d!40551 (= c!24722 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40551 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40551 (= (getCurrentListMap!540 (_keys!4614 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69843)))

(declare-fun bm!14732 () Bool)

(declare-fun call!14737 () ListLongMap!1707)

(declare-fun call!14733 () ListLongMap!1707)

(declare-fun c!24725 () Bool)

(declare-fun call!14738 () ListLongMap!1707)

(assert (=> bm!14732 (= call!14735 (+!170 (ite c!24722 call!14737 (ite c!24725 call!14733 call!14738)) (ite (or c!24722 c!24725) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!133431 () Bool)

(assert (=> b!133431 (= e!86959 e!86963)))

(declare-fun c!24724 () Bool)

(assert (=> b!133431 (= c!24724 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133432 () Bool)

(declare-fun e!86957 () Bool)

(assert (=> b!133432 (= e!86957 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133433 () Bool)

(assert (=> b!133433 (= e!86953 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133434 () Bool)

(declare-fun e!86958 () ListLongMap!1707)

(assert (=> b!133434 (= e!86958 call!14738)))

(declare-fun b!133435 () Bool)

(declare-fun res!64228 () Bool)

(assert (=> b!133435 (=> (not res!64228) (not e!86959))))

(declare-fun e!86956 () Bool)

(assert (=> b!133435 (= res!64228 e!86956)))

(declare-fun c!24726 () Bool)

(assert (=> b!133435 (= c!24726 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133436 () Bool)

(declare-fun e!86954 () Bool)

(assert (=> b!133436 (= e!86956 e!86954)))

(declare-fun res!64231 () Bool)

(assert (=> b!133436 (= res!64231 call!14734)))

(assert (=> b!133436 (=> (not res!64231) (not e!86954))))

(declare-fun b!133437 () Bool)

(declare-fun e!86955 () Bool)

(declare-fun e!86952 () Bool)

(assert (=> b!133437 (= e!86955 e!86952)))

(declare-fun res!64229 () Bool)

(assert (=> b!133437 (=> (not res!64229) (not e!86952))))

(assert (=> b!133437 (= res!64229 (contains!896 lt!69843 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133437 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!133438 () Bool)

(declare-fun c!24727 () Bool)

(assert (=> b!133438 (= c!24727 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!86961 () ListLongMap!1707)

(assert (=> b!133438 (= e!86961 e!86958)))

(declare-fun b!133439 () Bool)

(assert (=> b!133439 (= e!86956 (not call!14734))))

(declare-fun b!133440 () Bool)

(assert (=> b!133440 (= e!86951 (+!170 call!14735 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun b!133441 () Bool)

(assert (=> b!133441 (= e!86963 e!86960)))

(declare-fun res!64232 () Bool)

(assert (=> b!133441 (= res!64232 call!14736)))

(assert (=> b!133441 (=> (not res!64232) (not e!86960))))

(declare-fun b!133442 () Bool)

(declare-fun lt!69844 () Unit!4150)

(assert (=> b!133442 (= e!86962 lt!69844)))

(declare-fun lt!69839 () ListLongMap!1707)

(assert (=> b!133442 (= lt!69839 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69842 () (_ BitVec 64))

(assert (=> b!133442 (= lt!69842 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69849 () (_ BitVec 64))

(assert (=> b!133442 (= lt!69849 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69853 () Unit!4150)

(assert (=> b!133442 (= lt!69853 (addStillContains!92 lt!69839 lt!69842 (zeroValue!2720 newMap!16) lt!69849))))

(assert (=> b!133442 (contains!896 (+!170 lt!69839 (tuple2!2609 lt!69842 (zeroValue!2720 newMap!16))) lt!69849)))

(declare-fun lt!69857 () Unit!4150)

(assert (=> b!133442 (= lt!69857 lt!69853)))

(declare-fun lt!69852 () ListLongMap!1707)

(assert (=> b!133442 (= lt!69852 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69854 () (_ BitVec 64))

(assert (=> b!133442 (= lt!69854 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69840 () (_ BitVec 64))

(assert (=> b!133442 (= lt!69840 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69855 () Unit!4150)

(assert (=> b!133442 (= lt!69855 (addApplyDifferent!92 lt!69852 lt!69854 (minValue!2720 newMap!16) lt!69840))))

(assert (=> b!133442 (= (apply!116 (+!170 lt!69852 (tuple2!2609 lt!69854 (minValue!2720 newMap!16))) lt!69840) (apply!116 lt!69852 lt!69840))))

(declare-fun lt!69846 () Unit!4150)

(assert (=> b!133442 (= lt!69846 lt!69855)))

(declare-fun lt!69847 () ListLongMap!1707)

(assert (=> b!133442 (= lt!69847 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69858 () (_ BitVec 64))

(assert (=> b!133442 (= lt!69858 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69845 () (_ BitVec 64))

(assert (=> b!133442 (= lt!69845 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69856 () Unit!4150)

(assert (=> b!133442 (= lt!69856 (addApplyDifferent!92 lt!69847 lt!69858 (zeroValue!2720 newMap!16) lt!69845))))

(assert (=> b!133442 (= (apply!116 (+!170 lt!69847 (tuple2!2609 lt!69858 (zeroValue!2720 newMap!16))) lt!69845) (apply!116 lt!69847 lt!69845))))

(declare-fun lt!69841 () Unit!4150)

(assert (=> b!133442 (= lt!69841 lt!69856)))

(declare-fun lt!69851 () ListLongMap!1707)

(assert (=> b!133442 (= lt!69851 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69848 () (_ BitVec 64))

(assert (=> b!133442 (= lt!69848 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69850 () (_ BitVec 64))

(assert (=> b!133442 (= lt!69850 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133442 (= lt!69844 (addApplyDifferent!92 lt!69851 lt!69848 (minValue!2720 newMap!16) lt!69850))))

(assert (=> b!133442 (= (apply!116 (+!170 lt!69851 (tuple2!2609 lt!69848 (minValue!2720 newMap!16))) lt!69850) (apply!116 lt!69851 lt!69850))))

(declare-fun bm!14733 () Bool)

(assert (=> bm!14733 (= call!14738 call!14733)))

(declare-fun b!133443 () Bool)

(assert (=> b!133443 (= e!86951 e!86961)))

(assert (=> b!133443 (= c!24725 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14734 () Bool)

(assert (=> bm!14734 (= call!14736 (contains!896 lt!69843 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133444 () Bool)

(assert (=> b!133444 (= e!86954 (= (apply!116 lt!69843 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 newMap!16)))))

(declare-fun bm!14735 () Bool)

(assert (=> bm!14735 (= call!14733 call!14737)))

(declare-fun b!133445 () Bool)

(assert (=> b!133445 (= e!86952 (= (apply!116 lt!69843 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133445 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))))))

(assert (=> b!133445 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun bm!14736 () Bool)

(assert (=> bm!14736 (= call!14737 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!133446 () Bool)

(assert (=> b!133446 (= e!86961 call!14739)))

(declare-fun b!133447 () Bool)

(assert (=> b!133447 (= e!86958 call!14739)))

(declare-fun b!133448 () Bool)

(declare-fun res!64230 () Bool)

(assert (=> b!133448 (=> (not res!64230) (not e!86959))))

(assert (=> b!133448 (= res!64230 e!86955)))

(declare-fun res!64235 () Bool)

(assert (=> b!133448 (=> res!64235 e!86955)))

(assert (=> b!133448 (= res!64235 (not e!86957))))

(declare-fun res!64236 () Bool)

(assert (=> b!133448 (=> (not res!64236) (not e!86957))))

(assert (=> b!133448 (= res!64236 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (= (and d!40551 c!24722) b!133440))

(assert (= (and d!40551 (not c!24722)) b!133443))

(assert (= (and b!133443 c!24725) b!133446))

(assert (= (and b!133443 (not c!24725)) b!133438))

(assert (= (and b!133438 c!24727) b!133447))

(assert (= (and b!133438 (not c!24727)) b!133434))

(assert (= (or b!133447 b!133434) bm!14733))

(assert (= (or b!133446 bm!14733) bm!14735))

(assert (= (or b!133446 b!133447) bm!14730))

(assert (= (or b!133440 bm!14735) bm!14736))

(assert (= (or b!133440 bm!14730) bm!14732))

(assert (= (and d!40551 res!64233) b!133433))

(assert (= (and d!40551 c!24723) b!133442))

(assert (= (and d!40551 (not c!24723)) b!133430))

(assert (= (and d!40551 res!64234) b!133448))

(assert (= (and b!133448 res!64236) b!133432))

(assert (= (and b!133448 (not res!64235)) b!133437))

(assert (= (and b!133437 res!64229) b!133445))

(assert (= (and b!133448 res!64230) b!133435))

(assert (= (and b!133435 c!24726) b!133436))

(assert (= (and b!133435 (not c!24726)) b!133439))

(assert (= (and b!133436 res!64231) b!133444))

(assert (= (or b!133436 b!133439) bm!14731))

(assert (= (and b!133435 res!64228) b!133431))

(assert (= (and b!133431 c!24724) b!133441))

(assert (= (and b!133431 (not c!24724)) b!133429))

(assert (= (and b!133441 res!64232) b!133428))

(assert (= (or b!133441 b!133429) bm!14734))

(declare-fun b_lambda!5971 () Bool)

(assert (=> (not b_lambda!5971) (not b!133445)))

(assert (=> b!133445 t!6205))

(declare-fun b_and!8293 () Bool)

(assert (= b_and!8289 (and (=> t!6205 result!4009) b_and!8293)))

(assert (=> b!133445 t!6207))

(declare-fun b_and!8295 () Bool)

(assert (= b_and!8291 (and (=> t!6207 result!4011) b_and!8295)))

(assert (=> d!40551 m!156571))

(assert (=> b!133437 m!156533))

(assert (=> b!133437 m!156533))

(declare-fun m!157607 () Bool)

(assert (=> b!133437 m!157607))

(declare-fun m!157609 () Bool)

(assert (=> b!133445 m!157609))

(assert (=> b!133445 m!156647))

(declare-fun m!157611 () Bool)

(assert (=> b!133445 m!157611))

(assert (=> b!133445 m!156533))

(declare-fun m!157613 () Bool)

(assert (=> b!133445 m!157613))

(assert (=> b!133445 m!157609))

(assert (=> b!133445 m!156533))

(assert (=> b!133445 m!156647))

(declare-fun m!157615 () Bool)

(assert (=> b!133444 m!157615))

(declare-fun m!157617 () Bool)

(assert (=> b!133428 m!157617))

(declare-fun m!157619 () Bool)

(assert (=> b!133442 m!157619))

(declare-fun m!157621 () Bool)

(assert (=> b!133442 m!157621))

(declare-fun m!157623 () Bool)

(assert (=> b!133442 m!157623))

(declare-fun m!157625 () Bool)

(assert (=> b!133442 m!157625))

(declare-fun m!157627 () Bool)

(assert (=> b!133442 m!157627))

(assert (=> b!133442 m!157623))

(declare-fun m!157629 () Bool)

(assert (=> b!133442 m!157629))

(declare-fun m!157631 () Bool)

(assert (=> b!133442 m!157631))

(declare-fun m!157633 () Bool)

(assert (=> b!133442 m!157633))

(declare-fun m!157635 () Bool)

(assert (=> b!133442 m!157635))

(assert (=> b!133442 m!157633))

(assert (=> b!133442 m!156533))

(assert (=> b!133442 m!157619))

(declare-fun m!157637 () Bool)

(assert (=> b!133442 m!157637))

(declare-fun m!157639 () Bool)

(assert (=> b!133442 m!157639))

(declare-fun m!157641 () Bool)

(assert (=> b!133442 m!157641))

(declare-fun m!157643 () Bool)

(assert (=> b!133442 m!157643))

(assert (=> b!133442 m!157629))

(declare-fun m!157645 () Bool)

(assert (=> b!133442 m!157645))

(declare-fun m!157647 () Bool)

(assert (=> b!133442 m!157647))

(declare-fun m!157649 () Bool)

(assert (=> b!133442 m!157649))

(assert (=> b!133433 m!156533))

(assert (=> b!133433 m!156533))

(assert (=> b!133433 m!156557))

(declare-fun m!157651 () Bool)

(assert (=> bm!14734 m!157651))

(declare-fun m!157653 () Bool)

(assert (=> b!133440 m!157653))

(declare-fun m!157655 () Bool)

(assert (=> bm!14732 m!157655))

(assert (=> b!133432 m!156533))

(assert (=> b!133432 m!156533))

(assert (=> b!133432 m!156557))

(assert (=> bm!14736 m!157627))

(declare-fun m!157657 () Bool)

(assert (=> bm!14731 m!157657))

(assert (=> b!133123 d!40551))

(declare-fun d!40553 () Bool)

(declare-fun e!86964 () Bool)

(assert (=> d!40553 e!86964))

(declare-fun res!64238 () Bool)

(assert (=> d!40553 (=> (not res!64238) (not e!86964))))

(declare-fun lt!69860 () ListLongMap!1707)

(assert (=> d!40553 (= res!64238 (contains!896 lt!69860 (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69862 () List!1735)

(assert (=> d!40553 (= lt!69860 (ListLongMap!1708 lt!69862))))

(declare-fun lt!69861 () Unit!4150)

(declare-fun lt!69859 () Unit!4150)

(assert (=> d!40553 (= lt!69861 lt!69859)))

(assert (=> d!40553 (= (getValueByKey!171 lt!69862 (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40553 (= lt!69859 (lemmaContainsTupThenGetReturnValue!88 lt!69862 (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40553 (= lt!69862 (insertStrictlySorted!90 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40553 (= (+!170 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69860)))

(declare-fun b!133449 () Bool)

(declare-fun res!64237 () Bool)

(assert (=> b!133449 (=> (not res!64237) (not e!86964))))

(assert (=> b!133449 (= res!64237 (= (getValueByKey!171 (toList!869 lt!69860) (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133450 () Bool)

(assert (=> b!133450 (= e!86964 (contains!898 (toList!869 lt!69860) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40553 res!64238) b!133449))

(assert (= (and b!133449 res!64237) b!133450))

(declare-fun m!157659 () Bool)

(assert (=> d!40553 m!157659))

(declare-fun m!157661 () Bool)

(assert (=> d!40553 m!157661))

(declare-fun m!157663 () Bool)

(assert (=> d!40553 m!157663))

(declare-fun m!157665 () Bool)

(assert (=> d!40553 m!157665))

(declare-fun m!157667 () Bool)

(assert (=> b!133449 m!157667))

(declare-fun m!157669 () Bool)

(assert (=> b!133450 m!157669))

(assert (=> d!40321 d!40553))

(declare-fun bm!14737 () Bool)

(declare-fun call!14746 () ListLongMap!1707)

(declare-fun call!14742 () ListLongMap!1707)

(assert (=> bm!14737 (= call!14746 call!14742)))

(declare-fun b!133451 () Bool)

(declare-fun e!86974 () Bool)

(declare-fun lt!69869 () ListLongMap!1707)

(assert (=> b!133451 (= e!86974 (= (apply!116 lt!69869 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 newMap!16)))))

(declare-fun bm!14738 () Bool)

(declare-fun call!14741 () Bool)

(assert (=> bm!14738 (= call!14741 (contains!896 lt!69869 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133452 () Bool)

(declare-fun e!86977 () Bool)

(declare-fun call!14743 () Bool)

(assert (=> b!133452 (= e!86977 (not call!14743))))

(declare-fun b!133453 () Bool)

(declare-fun e!86976 () Unit!4150)

(declare-fun Unit!4180 () Unit!4150)

(assert (=> b!133453 (= e!86976 Unit!4180)))

(declare-fun d!40555 () Bool)

(declare-fun e!86973 () Bool)

(assert (=> d!40555 e!86973))

(declare-fun res!64245 () Bool)

(assert (=> d!40555 (=> (not res!64245) (not e!86973))))

(assert (=> d!40555 (= res!64245 (or (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))))

(declare-fun lt!69863 () ListLongMap!1707)

(assert (=> d!40555 (= lt!69869 lt!69863)))

(declare-fun lt!69864 () Unit!4150)

(assert (=> d!40555 (= lt!69864 e!86976)))

(declare-fun c!24729 () Bool)

(declare-fun e!86967 () Bool)

(assert (=> d!40555 (= c!24729 e!86967)))

(declare-fun res!64244 () Bool)

(assert (=> d!40555 (=> (not res!64244) (not e!86967))))

(assert (=> d!40555 (= res!64244 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun e!86965 () ListLongMap!1707)

(assert (=> d!40555 (= lt!69863 e!86965)))

(declare-fun c!24728 () Bool)

(assert (=> d!40555 (= c!24728 (and (not (= (bvand lt!69310 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!69310 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40555 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40555 (= (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69310 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69869)))

(declare-fun call!14740 () ListLongMap!1707)

(declare-fun call!14744 () ListLongMap!1707)

(declare-fun call!14745 () ListLongMap!1707)

(declare-fun bm!14739 () Bool)

(declare-fun c!24731 () Bool)

(assert (=> bm!14739 (= call!14742 (+!170 (ite c!24728 call!14744 (ite c!24731 call!14740 call!14745)) (ite (or c!24728 c!24731) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!133454 () Bool)

(assert (=> b!133454 (= e!86973 e!86977)))

(declare-fun c!24730 () Bool)

(assert (=> b!133454 (= c!24730 (not (= (bvand lt!69310 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133455 () Bool)

(declare-fun e!86971 () Bool)

(assert (=> b!133455 (= e!86971 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133456 () Bool)

(assert (=> b!133456 (= e!86967 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133457 () Bool)

(declare-fun e!86972 () ListLongMap!1707)

(assert (=> b!133457 (= e!86972 call!14745)))

(declare-fun b!133458 () Bool)

(declare-fun res!64239 () Bool)

(assert (=> b!133458 (=> (not res!64239) (not e!86973))))

(declare-fun e!86970 () Bool)

(assert (=> b!133458 (= res!64239 e!86970)))

(declare-fun c!24732 () Bool)

(assert (=> b!133458 (= c!24732 (not (= (bvand lt!69310 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133459 () Bool)

(declare-fun e!86968 () Bool)

(assert (=> b!133459 (= e!86970 e!86968)))

(declare-fun res!64242 () Bool)

(assert (=> b!133459 (= res!64242 call!14741)))

(assert (=> b!133459 (=> (not res!64242) (not e!86968))))

(declare-fun b!133460 () Bool)

(declare-fun e!86969 () Bool)

(declare-fun e!86966 () Bool)

(assert (=> b!133460 (= e!86969 e!86966)))

(declare-fun res!64240 () Bool)

(assert (=> b!133460 (=> (not res!64240) (not e!86966))))

(assert (=> b!133460 (= res!64240 (contains!896 lt!69869 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133460 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!133461 () Bool)

(declare-fun c!24733 () Bool)

(assert (=> b!133461 (= c!24733 (and (not (= (bvand lt!69310 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!69310 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!86975 () ListLongMap!1707)

(assert (=> b!133461 (= e!86975 e!86972)))

(declare-fun b!133462 () Bool)

(assert (=> b!133462 (= e!86970 (not call!14741))))

(declare-fun b!133463 () Bool)

(assert (=> b!133463 (= e!86965 (+!170 call!14742 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun b!133464 () Bool)

(assert (=> b!133464 (= e!86977 e!86974)))

(declare-fun res!64243 () Bool)

(assert (=> b!133464 (= res!64243 call!14743)))

(assert (=> b!133464 (=> (not res!64243) (not e!86974))))

(declare-fun b!133465 () Bool)

(declare-fun lt!69870 () Unit!4150)

(assert (=> b!133465 (= e!86976 lt!69870)))

(declare-fun lt!69865 () ListLongMap!1707)

(assert (=> b!133465 (= lt!69865 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69310 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69868 () (_ BitVec 64))

(assert (=> b!133465 (= lt!69868 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69875 () (_ BitVec 64))

(assert (=> b!133465 (= lt!69875 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69879 () Unit!4150)

(assert (=> b!133465 (= lt!69879 (addStillContains!92 lt!69865 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69875))))

(assert (=> b!133465 (contains!896 (+!170 lt!69865 (tuple2!2609 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69875)))

(declare-fun lt!69883 () Unit!4150)

(assert (=> b!133465 (= lt!69883 lt!69879)))

(declare-fun lt!69878 () ListLongMap!1707)

(assert (=> b!133465 (= lt!69878 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69310 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69880 () (_ BitVec 64))

(assert (=> b!133465 (= lt!69880 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69866 () (_ BitVec 64))

(assert (=> b!133465 (= lt!69866 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69881 () Unit!4150)

(assert (=> b!133465 (= lt!69881 (addApplyDifferent!92 lt!69878 lt!69880 (minValue!2720 newMap!16) lt!69866))))

(assert (=> b!133465 (= (apply!116 (+!170 lt!69878 (tuple2!2609 lt!69880 (minValue!2720 newMap!16))) lt!69866) (apply!116 lt!69878 lt!69866))))

(declare-fun lt!69872 () Unit!4150)

(assert (=> b!133465 (= lt!69872 lt!69881)))

(declare-fun lt!69873 () ListLongMap!1707)

(assert (=> b!133465 (= lt!69873 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69310 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69884 () (_ BitVec 64))

(assert (=> b!133465 (= lt!69884 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69871 () (_ BitVec 64))

(assert (=> b!133465 (= lt!69871 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69882 () Unit!4150)

(assert (=> b!133465 (= lt!69882 (addApplyDifferent!92 lt!69873 lt!69884 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69871))))

(assert (=> b!133465 (= (apply!116 (+!170 lt!69873 (tuple2!2609 lt!69884 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69871) (apply!116 lt!69873 lt!69871))))

(declare-fun lt!69867 () Unit!4150)

(assert (=> b!133465 (= lt!69867 lt!69882)))

(declare-fun lt!69877 () ListLongMap!1707)

(assert (=> b!133465 (= lt!69877 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69310 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69874 () (_ BitVec 64))

(assert (=> b!133465 (= lt!69874 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69876 () (_ BitVec 64))

(assert (=> b!133465 (= lt!69876 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133465 (= lt!69870 (addApplyDifferent!92 lt!69877 lt!69874 (minValue!2720 newMap!16) lt!69876))))

(assert (=> b!133465 (= (apply!116 (+!170 lt!69877 (tuple2!2609 lt!69874 (minValue!2720 newMap!16))) lt!69876) (apply!116 lt!69877 lt!69876))))

(declare-fun bm!14740 () Bool)

(assert (=> bm!14740 (= call!14745 call!14740)))

(declare-fun b!133466 () Bool)

(assert (=> b!133466 (= e!86965 e!86975)))

(assert (=> b!133466 (= c!24731 (and (not (= (bvand lt!69310 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!69310 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14741 () Bool)

(assert (=> bm!14741 (= call!14743 (contains!896 lt!69869 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133467 () Bool)

(assert (=> b!133467 (= e!86968 (= (apply!116 lt!69869 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!14742 () Bool)

(assert (=> bm!14742 (= call!14740 call!14744)))

(declare-fun b!133468 () Bool)

(assert (=> b!133468 (= e!86966 (= (apply!116 lt!69869 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133468 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_values!2848 newMap!16))))))

(assert (=> b!133468 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun bm!14743 () Bool)

(assert (=> bm!14743 (= call!14744 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69310 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!133469 () Bool)

(assert (=> b!133469 (= e!86975 call!14746)))

(declare-fun b!133470 () Bool)

(assert (=> b!133470 (= e!86972 call!14746)))

(declare-fun b!133471 () Bool)

(declare-fun res!64241 () Bool)

(assert (=> b!133471 (=> (not res!64241) (not e!86973))))

(assert (=> b!133471 (= res!64241 e!86969)))

(declare-fun res!64246 () Bool)

(assert (=> b!133471 (=> res!64246 e!86969)))

(assert (=> b!133471 (= res!64246 (not e!86971))))

(declare-fun res!64247 () Bool)

(assert (=> b!133471 (=> (not res!64247) (not e!86971))))

(assert (=> b!133471 (= res!64247 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (= (and d!40555 c!24728) b!133463))

(assert (= (and d!40555 (not c!24728)) b!133466))

(assert (= (and b!133466 c!24731) b!133469))

(assert (= (and b!133466 (not c!24731)) b!133461))

(assert (= (and b!133461 c!24733) b!133470))

(assert (= (and b!133461 (not c!24733)) b!133457))

(assert (= (or b!133470 b!133457) bm!14740))

(assert (= (or b!133469 bm!14740) bm!14742))

(assert (= (or b!133469 b!133470) bm!14737))

(assert (= (or b!133463 bm!14742) bm!14743))

(assert (= (or b!133463 bm!14737) bm!14739))

(assert (= (and d!40555 res!64244) b!133456))

(assert (= (and d!40555 c!24729) b!133465))

(assert (= (and d!40555 (not c!24729)) b!133453))

(assert (= (and d!40555 res!64245) b!133471))

(assert (= (and b!133471 res!64247) b!133455))

(assert (= (and b!133471 (not res!64246)) b!133460))

(assert (= (and b!133460 res!64240) b!133468))

(assert (= (and b!133471 res!64241) b!133458))

(assert (= (and b!133458 c!24732) b!133459))

(assert (= (and b!133458 (not c!24732)) b!133462))

(assert (= (and b!133459 res!64242) b!133467))

(assert (= (or b!133459 b!133462) bm!14738))

(assert (= (and b!133458 res!64239) b!133454))

(assert (= (and b!133454 c!24730) b!133464))

(assert (= (and b!133454 (not c!24730)) b!133452))

(assert (= (and b!133464 res!64243) b!133451))

(assert (= (or b!133464 b!133452) bm!14741))

(declare-fun b_lambda!5973 () Bool)

(assert (=> (not b_lambda!5973) (not b!133468)))

(assert (=> b!133468 t!6205))

(declare-fun b_and!8297 () Bool)

(assert (= b_and!8293 (and (=> t!6205 result!4009) b_and!8297)))

(assert (=> b!133468 t!6207))

(declare-fun b_and!8299 () Bool)

(assert (= b_and!8295 (and (=> t!6207 result!4011) b_and!8299)))

(assert (=> d!40555 m!156571))

(assert (=> b!133460 m!156533))

(assert (=> b!133460 m!156533))

(declare-fun m!157671 () Bool)

(assert (=> b!133460 m!157671))

(assert (=> b!133468 m!156645))

(assert (=> b!133468 m!156647))

(assert (=> b!133468 m!156649))

(assert (=> b!133468 m!156533))

(declare-fun m!157673 () Bool)

(assert (=> b!133468 m!157673))

(assert (=> b!133468 m!156645))

(assert (=> b!133468 m!156533))

(assert (=> b!133468 m!156647))

(declare-fun m!157675 () Bool)

(assert (=> b!133467 m!157675))

(declare-fun m!157677 () Bool)

(assert (=> b!133451 m!157677))

(declare-fun m!157679 () Bool)

(assert (=> b!133465 m!157679))

(assert (=> b!133465 m!156285))

(declare-fun m!157681 () Bool)

(assert (=> b!133465 m!157681))

(declare-fun m!157683 () Bool)

(assert (=> b!133465 m!157683))

(declare-fun m!157685 () Bool)

(assert (=> b!133465 m!157685))

(assert (=> b!133465 m!156285))

(declare-fun m!157687 () Bool)

(assert (=> b!133465 m!157687))

(assert (=> b!133465 m!157683))

(declare-fun m!157689 () Bool)

(assert (=> b!133465 m!157689))

(declare-fun m!157691 () Bool)

(assert (=> b!133465 m!157691))

(declare-fun m!157693 () Bool)

(assert (=> b!133465 m!157693))

(declare-fun m!157695 () Bool)

(assert (=> b!133465 m!157695))

(assert (=> b!133465 m!157693))

(assert (=> b!133465 m!156533))

(assert (=> b!133465 m!157679))

(declare-fun m!157697 () Bool)

(assert (=> b!133465 m!157697))

(declare-fun m!157699 () Bool)

(assert (=> b!133465 m!157699))

(assert (=> b!133465 m!156285))

(declare-fun m!157701 () Bool)

(assert (=> b!133465 m!157701))

(declare-fun m!157703 () Bool)

(assert (=> b!133465 m!157703))

(assert (=> b!133465 m!157689))

(declare-fun m!157705 () Bool)

(assert (=> b!133465 m!157705))

(declare-fun m!157707 () Bool)

(assert (=> b!133465 m!157707))

(declare-fun m!157709 () Bool)

(assert (=> b!133465 m!157709))

(assert (=> b!133456 m!156533))

(assert (=> b!133456 m!156533))

(assert (=> b!133456 m!156557))

(declare-fun m!157711 () Bool)

(assert (=> bm!14741 m!157711))

(declare-fun m!157713 () Bool)

(assert (=> b!133463 m!157713))

(declare-fun m!157715 () Bool)

(assert (=> bm!14739 m!157715))

(assert (=> b!133455 m!156533))

(assert (=> b!133455 m!156533))

(assert (=> b!133455 m!156557))

(assert (=> bm!14743 m!156285))

(assert (=> bm!14743 m!157687))

(declare-fun m!157717 () Bool)

(assert (=> bm!14738 m!157717))

(assert (=> d!40321 d!40555))

(assert (=> d!40321 d!40335))

(declare-fun d!40557 () Bool)

(assert (=> d!40557 (= (+!170 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69310 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(assert (=> d!40557 true))

(declare-fun _$7!116 () Unit!4150)

(assert (=> d!40557 (= (choose!826 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) lt!69310 (zeroValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) (defaultEntry!2865 newMap!16)) _$7!116)))

(declare-fun bs!5516 () Bool)

(assert (= bs!5516 d!40557))

(assert (=> bs!5516 m!156355))

(assert (=> bs!5516 m!156355))

(assert (=> bs!5516 m!156577))

(assert (=> bs!5516 m!156285))

(assert (=> bs!5516 m!156579))

(assert (=> d!40321 d!40557))

(assert (=> d!40321 d!40475))

(declare-fun d!40559 () Bool)

(assert (=> d!40559 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!5517 () Bool)

(assert (= bs!5517 d!40559))

(assert (=> bs!5517 m!156711))

(declare-fun m!157719 () Bool)

(assert (=> bs!5517 m!157719))

(assert (=> b!133114 d!40559))

(declare-fun b!133472 () Bool)

(declare-fun e!86978 () Option!177)

(assert (=> b!133472 (= e!86978 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69221)))))))

(declare-fun b!133475 () Bool)

(declare-fun e!86979 () Option!177)

(assert (=> b!133475 (= e!86979 None!175)))

(declare-fun b!133474 () Bool)

(assert (=> b!133474 (= e!86979 (getValueByKey!171 (t!6198 (toList!869 lt!69221)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!133473 () Bool)

(assert (=> b!133473 (= e!86978 e!86979)))

(declare-fun c!24735 () Bool)

(assert (=> b!133473 (= c!24735 (and ((_ is Cons!1731) (toList!869 lt!69221)) (not (= (_1!1314 (h!2336 (toList!869 lt!69221))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun d!40561 () Bool)

(declare-fun c!24734 () Bool)

(assert (=> d!40561 (= c!24734 (and ((_ is Cons!1731) (toList!869 lt!69221)) (= (_1!1314 (h!2336 (toList!869 lt!69221))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!40561 (= (getValueByKey!171 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!86978)))

(assert (= (and d!40561 c!24734) b!133472))

(assert (= (and d!40561 (not c!24734)) b!133473))

(assert (= (and b!133473 c!24735) b!133474))

(assert (= (and b!133473 (not c!24735)) b!133475))

(assert (=> b!133474 m!156357))

(declare-fun m!157721 () Bool)

(assert (=> b!133474 m!157721))

(assert (=> b!133114 d!40561))

(declare-fun b!133478 () Bool)

(declare-fun res!64248 () Bool)

(declare-fun e!86980 () Bool)

(assert (=> b!133478 (=> (not res!64248) (not e!86980))))

(assert (=> b!133478 (= res!64248 (= (size!2533 (v!3197 (underlying!454 thiss!992))) (bvadd (_size!598 (v!3197 (underlying!454 thiss!992))) (bvsdiv (bvadd (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!133479 () Bool)

(assert (=> b!133479 (= e!86980 (and (bvsge (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!598 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!133477 () Bool)

(declare-fun res!64251 () Bool)

(assert (=> b!133477 (=> (not res!64251) (not e!86980))))

(assert (=> b!133477 (= res!64251 (bvsge (size!2533 (v!3197 (underlying!454 thiss!992))) (_size!598 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun d!40563 () Bool)

(declare-fun res!64249 () Bool)

(assert (=> d!40563 (=> (not res!64249) (not e!86980))))

(assert (=> d!40563 (= res!64249 (validMask!0 (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(assert (=> d!40563 (= (simpleValid!91 (v!3197 (underlying!454 thiss!992))) e!86980)))

(declare-fun b!133476 () Bool)

(declare-fun res!64250 () Bool)

(assert (=> b!133476 (=> (not res!64250) (not e!86980))))

(assert (=> b!133476 (= res!64250 (and (= (size!2530 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000001)) (= (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (size!2530 (_values!2848 (v!3197 (underlying!454 thiss!992))))) (bvsge (_size!598 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!598 (v!3197 (underlying!454 thiss!992))) (bvadd (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000001))))))

(assert (= (and d!40563 res!64249) b!133476))

(assert (= (and b!133476 res!64250) b!133477))

(assert (= (and b!133477 res!64251) b!133478))

(assert (= (and b!133478 res!64248) b!133479))

(declare-fun m!157723 () Bool)

(assert (=> b!133478 m!157723))

(assert (=> b!133477 m!157723))

(assert (=> d!40563 m!156295))

(assert (=> d!40413 d!40563))

(declare-fun b!133480 () Bool)

(declare-fun lt!69885 () Unit!4150)

(declare-fun lt!69889 () Unit!4150)

(assert (=> b!133480 (= lt!69885 lt!69889)))

(declare-fun lt!69887 () (_ BitVec 64))

(declare-fun lt!69888 () V!3483)

(declare-fun lt!69890 () (_ BitVec 64))

(declare-fun lt!69886 () ListLongMap!1707)

(assert (=> b!133480 (not (contains!896 (+!170 lt!69886 (tuple2!2609 lt!69890 lt!69888)) lt!69887))))

(assert (=> b!133480 (= lt!69889 (addStillNotContains!63 lt!69886 lt!69890 lt!69888 lt!69887))))

(assert (=> b!133480 (= lt!69887 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133480 (= lt!69888 (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133480 (= lt!69890 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!14747 () ListLongMap!1707)

(assert (=> b!133480 (= lt!69886 call!14747)))

(declare-fun e!86987 () ListLongMap!1707)

(assert (=> b!133480 (= e!86987 (+!170 call!14747 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133481 () Bool)

(declare-fun lt!69891 () ListLongMap!1707)

(declare-fun e!86984 () Bool)

(assert (=> b!133481 (= e!86984 (= lt!69891 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) (zeroValue!2720 newMap!16) (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!133482 () Bool)

(assert (=> b!133482 (= e!86984 (isEmpty!414 lt!69891))))

(declare-fun b!133483 () Bool)

(declare-fun e!86985 () ListLongMap!1707)

(assert (=> b!133483 (= e!86985 (ListLongMap!1708 Nil!1732))))

(declare-fun b!133484 () Bool)

(declare-fun e!86982 () Bool)

(declare-fun e!86983 () Bool)

(assert (=> b!133484 (= e!86982 e!86983)))

(declare-fun c!24739 () Bool)

(declare-fun e!86986 () Bool)

(assert (=> b!133484 (= c!24739 e!86986)))

(declare-fun res!64255 () Bool)

(assert (=> b!133484 (=> (not res!64255) (not e!86986))))

(assert (=> b!133484 (= res!64255 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!133485 () Bool)

(assert (=> b!133485 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (=> b!133485 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))))))))

(declare-fun e!86981 () Bool)

(assert (=> b!133485 (= e!86981 (= (apply!116 lt!69891 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!133487 () Bool)

(assert (=> b!133487 (= e!86983 e!86981)))

(assert (=> b!133487 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun res!64254 () Bool)

(assert (=> b!133487 (= res!64254 (contains!896 lt!69891 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133487 (=> (not res!64254) (not e!86981))))

(declare-fun b!133488 () Bool)

(assert (=> b!133488 (= e!86985 e!86987)))

(declare-fun c!24736 () Bool)

(assert (=> b!133488 (= c!24736 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133489 () Bool)

(declare-fun res!64253 () Bool)

(assert (=> b!133489 (=> (not res!64253) (not e!86982))))

(assert (=> b!133489 (= res!64253 (not (contains!896 lt!69891 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133490 () Bool)

(assert (=> b!133490 (= e!86983 e!86984)))

(declare-fun c!24738 () Bool)

(assert (=> b!133490 (= c!24738 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun bm!14744 () Bool)

(assert (=> bm!14744 (= call!14747 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) (zeroValue!2720 newMap!16) (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!133491 () Bool)

(assert (=> b!133491 (= e!86986 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133491 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!133486 () Bool)

(assert (=> b!133486 (= e!86987 call!14747)))

(declare-fun d!40565 () Bool)

(assert (=> d!40565 e!86982))

(declare-fun res!64252 () Bool)

(assert (=> d!40565 (=> (not res!64252) (not e!86982))))

(assert (=> d!40565 (= res!64252 (not (contains!896 lt!69891 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40565 (= lt!69891 e!86985)))

(declare-fun c!24737 () Bool)

(assert (=> d!40565 (= c!24737 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!40565 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40565 (= (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) (zeroValue!2720 newMap!16) (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69891)))

(assert (= (and d!40565 c!24737) b!133483))

(assert (= (and d!40565 (not c!24737)) b!133488))

(assert (= (and b!133488 c!24736) b!133480))

(assert (= (and b!133488 (not c!24736)) b!133486))

(assert (= (or b!133480 b!133486) bm!14744))

(assert (= (and d!40565 res!64252) b!133489))

(assert (= (and b!133489 res!64253) b!133484))

(assert (= (and b!133484 res!64255) b!133491))

(assert (= (and b!133484 c!24739) b!133487))

(assert (= (and b!133484 (not c!24739)) b!133490))

(assert (= (and b!133487 res!64254) b!133485))

(assert (= (and b!133490 c!24738) b!133481))

(assert (= (and b!133490 (not c!24738)) b!133482))

(declare-fun b_lambda!5975 () Bool)

(assert (=> (not b_lambda!5975) (not b!133480)))

(assert (=> b!133480 t!6205))

(declare-fun b_and!8301 () Bool)

(assert (= b_and!8297 (and (=> t!6205 result!4009) b_and!8301)))

(assert (=> b!133480 t!6207))

(declare-fun b_and!8303 () Bool)

(assert (= b_and!8299 (and (=> t!6207 result!4011) b_and!8303)))

(declare-fun b_lambda!5977 () Bool)

(assert (=> (not b_lambda!5977) (not b!133485)))

(assert (=> b!133485 t!6205))

(declare-fun b_and!8305 () Bool)

(assert (= b_and!8301 (and (=> t!6205 result!4009) b_and!8305)))

(assert (=> b!133485 t!6207))

(declare-fun b_and!8307 () Bool)

(assert (= b_and!8303 (and (=> t!6207 result!4011) b_and!8307)))

(declare-fun m!157725 () Bool)

(assert (=> d!40565 m!157725))

(assert (=> d!40565 m!156571))

(declare-fun m!157727 () Bool)

(assert (=> b!133481 m!157727))

(declare-fun m!157729 () Bool)

(assert (=> b!133480 m!157729))

(declare-fun m!157731 () Bool)

(assert (=> b!133480 m!157731))

(assert (=> b!133480 m!157729))

(assert (=> b!133480 m!156647))

(assert (=> b!133480 m!156845))

(assert (=> b!133480 m!156647))

(assert (=> b!133480 m!156847))

(declare-fun m!157733 () Bool)

(assert (=> b!133480 m!157733))

(assert (=> b!133480 m!156845))

(assert (=> b!133480 m!156533))

(declare-fun m!157735 () Bool)

(assert (=> b!133480 m!157735))

(assert (=> b!133485 m!156533))

(declare-fun m!157737 () Bool)

(assert (=> b!133485 m!157737))

(assert (=> b!133485 m!156647))

(assert (=> b!133485 m!156533))

(assert (=> b!133485 m!156845))

(assert (=> b!133485 m!156647))

(assert (=> b!133485 m!156847))

(assert (=> b!133485 m!156845))

(assert (=> bm!14744 m!157727))

(assert (=> b!133488 m!156533))

(assert (=> b!133488 m!156533))

(assert (=> b!133488 m!156557))

(declare-fun m!157739 () Bool)

(assert (=> b!133489 m!157739))

(assert (=> b!133487 m!156533))

(assert (=> b!133487 m!156533))

(declare-fun m!157741 () Bool)

(assert (=> b!133487 m!157741))

(assert (=> b!133491 m!156533))

(assert (=> b!133491 m!156533))

(assert (=> b!133491 m!156557))

(declare-fun m!157743 () Bool)

(assert (=> b!133482 m!157743))

(assert (=> b!133008 d!40565))

(declare-fun d!40567 () Bool)

(assert (=> d!40567 (= (apply!116 lt!69492 lt!69490) (get!1491 (getValueByKey!171 (toList!869 lt!69492) lt!69490)))))

(declare-fun bs!5518 () Bool)

(assert (= bs!5518 d!40567))

(declare-fun m!157745 () Bool)

(assert (=> bs!5518 m!157745))

(assert (=> bs!5518 m!157745))

(declare-fun m!157747 () Bool)

(assert (=> bs!5518 m!157747))

(assert (=> b!133008 d!40567))

(declare-fun d!40569 () Bool)

(assert (=> d!40569 (= (apply!116 (+!170 lt!69497 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69485) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69497 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!69485)))))

(declare-fun bs!5519 () Bool)

(assert (= bs!5519 d!40569))

(declare-fun m!157749 () Bool)

(assert (=> bs!5519 m!157749))

(assert (=> bs!5519 m!157749))

(declare-fun m!157751 () Bool)

(assert (=> bs!5519 m!157751))

(assert (=> b!133008 d!40569))

(declare-fun d!40571 () Bool)

(declare-fun e!86988 () Bool)

(assert (=> d!40571 e!86988))

(declare-fun res!64257 () Bool)

(assert (=> d!40571 (=> (not res!64257) (not e!86988))))

(declare-fun lt!69893 () ListLongMap!1707)

(assert (=> d!40571 (= res!64257 (contains!896 lt!69893 (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!69895 () List!1735)

(assert (=> d!40571 (= lt!69893 (ListLongMap!1708 lt!69895))))

(declare-fun lt!69894 () Unit!4150)

(declare-fun lt!69892 () Unit!4150)

(assert (=> d!40571 (= lt!69894 lt!69892)))

(assert (=> d!40571 (= (getValueByKey!171 lt!69895 (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40571 (= lt!69892 (lemmaContainsTupThenGetReturnValue!88 lt!69895 (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40571 (= lt!69895 (insertStrictlySorted!90 (toList!869 lt!69492) (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40571 (= (+!170 lt!69492 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))) lt!69893)))

(declare-fun b!133492 () Bool)

(declare-fun res!64256 () Bool)

(assert (=> b!133492 (=> (not res!64256) (not e!86988))))

(assert (=> b!133492 (= res!64256 (= (getValueByKey!171 (toList!869 lt!69893) (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))))))))

(declare-fun b!133493 () Bool)

(assert (=> b!133493 (= e!86988 (contains!898 (toList!869 lt!69893) (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))))))

(assert (= (and d!40571 res!64257) b!133492))

(assert (= (and b!133492 res!64256) b!133493))

(declare-fun m!157753 () Bool)

(assert (=> d!40571 m!157753))

(declare-fun m!157755 () Bool)

(assert (=> d!40571 m!157755))

(declare-fun m!157757 () Bool)

(assert (=> d!40571 m!157757))

(declare-fun m!157759 () Bool)

(assert (=> d!40571 m!157759))

(declare-fun m!157761 () Bool)

(assert (=> b!133492 m!157761))

(declare-fun m!157763 () Bool)

(assert (=> b!133493 m!157763))

(assert (=> b!133008 d!40571))

(declare-fun d!40573 () Bool)

(assert (=> d!40573 (contains!896 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))) lt!69494)))

(declare-fun lt!69896 () Unit!4150)

(assert (=> d!40573 (= lt!69896 (choose!829 lt!69484 lt!69487 (zeroValue!2720 newMap!16) lt!69494))))

(assert (=> d!40573 (contains!896 lt!69484 lt!69494)))

(assert (=> d!40573 (= (addStillContains!92 lt!69484 lt!69487 (zeroValue!2720 newMap!16) lt!69494) lt!69896)))

(declare-fun bs!5520 () Bool)

(assert (= bs!5520 d!40573))

(assert (=> bs!5520 m!156865))

(assert (=> bs!5520 m!156865))

(assert (=> bs!5520 m!156881))

(declare-fun m!157765 () Bool)

(assert (=> bs!5520 m!157765))

(declare-fun m!157767 () Bool)

(assert (=> bs!5520 m!157767))

(assert (=> b!133008 d!40573))

(declare-fun d!40575 () Bool)

(declare-fun e!86989 () Bool)

(assert (=> d!40575 e!86989))

(declare-fun res!64259 () Bool)

(assert (=> d!40575 (=> (not res!64259) (not e!86989))))

(declare-fun lt!69898 () ListLongMap!1707)

(assert (=> d!40575 (= res!64259 (contains!896 lt!69898 (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun lt!69900 () List!1735)

(assert (=> d!40575 (= lt!69898 (ListLongMap!1708 lt!69900))))

(declare-fun lt!69899 () Unit!4150)

(declare-fun lt!69897 () Unit!4150)

(assert (=> d!40575 (= lt!69899 lt!69897)))

(assert (=> d!40575 (= (getValueByKey!171 lt!69900 (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!40575 (= lt!69897 (lemmaContainsTupThenGetReturnValue!88 lt!69900 (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!40575 (= lt!69900 (insertStrictlySorted!90 (toList!869 lt!69497) (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!40575 (= (+!170 lt!69497 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69898)))

(declare-fun b!133494 () Bool)

(declare-fun res!64258 () Bool)

(assert (=> b!133494 (=> (not res!64258) (not e!86989))))

(assert (=> b!133494 (= res!64258 (= (getValueByKey!171 (toList!869 lt!69898) (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!133495 () Bool)

(assert (=> b!133495 (= e!86989 (contains!898 (toList!869 lt!69898) (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(assert (= (and d!40575 res!64259) b!133494))

(assert (= (and b!133494 res!64258) b!133495))

(declare-fun m!157769 () Bool)

(assert (=> d!40575 m!157769))

(declare-fun m!157771 () Bool)

(assert (=> d!40575 m!157771))

(declare-fun m!157773 () Bool)

(assert (=> d!40575 m!157773))

(declare-fun m!157775 () Bool)

(assert (=> d!40575 m!157775))

(declare-fun m!157777 () Bool)

(assert (=> b!133494 m!157777))

(declare-fun m!157779 () Bool)

(assert (=> b!133495 m!157779))

(assert (=> b!133008 d!40575))

(declare-fun d!40577 () Bool)

(assert (=> d!40577 (= (apply!116 lt!69496 lt!69495) (get!1491 (getValueByKey!171 (toList!869 lt!69496) lt!69495)))))

(declare-fun bs!5521 () Bool)

(assert (= bs!5521 d!40577))

(declare-fun m!157781 () Bool)

(assert (=> bs!5521 m!157781))

(assert (=> bs!5521 m!157781))

(declare-fun m!157783 () Bool)

(assert (=> bs!5521 m!157783))

(assert (=> b!133008 d!40577))

(declare-fun d!40579 () Bool)

(declare-fun e!86990 () Bool)

(assert (=> d!40579 e!86990))

(declare-fun res!64260 () Bool)

(assert (=> d!40579 (=> res!64260 e!86990)))

(declare-fun lt!69901 () Bool)

(assert (=> d!40579 (= res!64260 (not lt!69901))))

(declare-fun lt!69903 () Bool)

(assert (=> d!40579 (= lt!69901 lt!69903)))

(declare-fun lt!69902 () Unit!4150)

(declare-fun e!86991 () Unit!4150)

(assert (=> d!40579 (= lt!69902 e!86991)))

(declare-fun c!24740 () Bool)

(assert (=> d!40579 (= c!24740 lt!69903)))

(assert (=> d!40579 (= lt!69903 (containsKey!175 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) lt!69494))))

(assert (=> d!40579 (= (contains!896 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))) lt!69494) lt!69901)))

(declare-fun b!133496 () Bool)

(declare-fun lt!69904 () Unit!4150)

(assert (=> b!133496 (= e!86991 lt!69904)))

(assert (=> b!133496 (= lt!69904 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) lt!69494))))

(assert (=> b!133496 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) lt!69494))))

(declare-fun b!133497 () Bool)

(declare-fun Unit!4181 () Unit!4150)

(assert (=> b!133497 (= e!86991 Unit!4181)))

(declare-fun b!133498 () Bool)

(assert (=> b!133498 (= e!86990 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) lt!69494)))))

(assert (= (and d!40579 c!24740) b!133496))

(assert (= (and d!40579 (not c!24740)) b!133497))

(assert (= (and d!40579 (not res!64260)) b!133498))

(declare-fun m!157785 () Bool)

(assert (=> d!40579 m!157785))

(declare-fun m!157787 () Bool)

(assert (=> b!133496 m!157787))

(declare-fun m!157789 () Bool)

(assert (=> b!133496 m!157789))

(assert (=> b!133496 m!157789))

(declare-fun m!157791 () Bool)

(assert (=> b!133496 m!157791))

(assert (=> b!133498 m!157789))

(assert (=> b!133498 m!157789))

(assert (=> b!133498 m!157791))

(assert (=> b!133008 d!40579))

(declare-fun d!40581 () Bool)

(assert (=> d!40581 (= (apply!116 (+!170 lt!69492 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))) lt!69490) (apply!116 lt!69492 lt!69490))))

(declare-fun lt!69905 () Unit!4150)

(assert (=> d!40581 (= lt!69905 (choose!828 lt!69492 lt!69503 (zeroValue!2720 newMap!16) lt!69490))))

(declare-fun e!86992 () Bool)

(assert (=> d!40581 e!86992))

(declare-fun res!64261 () Bool)

(assert (=> d!40581 (=> (not res!64261) (not e!86992))))

(assert (=> d!40581 (= res!64261 (contains!896 lt!69492 lt!69490))))

(assert (=> d!40581 (= (addApplyDifferent!92 lt!69492 lt!69503 (zeroValue!2720 newMap!16) lt!69490) lt!69905)))

(declare-fun b!133499 () Bool)

(assert (=> b!133499 (= e!86992 (not (= lt!69490 lt!69503)))))

(assert (= (and d!40581 res!64261) b!133499))

(assert (=> d!40581 m!156885))

(assert (=> d!40581 m!156855))

(assert (=> d!40581 m!156873))

(declare-fun m!157793 () Bool)

(assert (=> d!40581 m!157793))

(declare-fun m!157795 () Bool)

(assert (=> d!40581 m!157795))

(assert (=> d!40581 m!156855))

(assert (=> b!133008 d!40581))

(declare-fun d!40583 () Bool)

(assert (=> d!40583 (= (apply!116 (+!170 lt!69496 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69495) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69496 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!69495)))))

(declare-fun bs!5522 () Bool)

(assert (= bs!5522 d!40583))

(declare-fun m!157797 () Bool)

(assert (=> bs!5522 m!157797))

(assert (=> bs!5522 m!157797))

(declare-fun m!157799 () Bool)

(assert (=> bs!5522 m!157799))

(assert (=> b!133008 d!40583))

(declare-fun d!40585 () Bool)

(declare-fun e!86993 () Bool)

(assert (=> d!40585 e!86993))

(declare-fun res!64263 () Bool)

(assert (=> d!40585 (=> (not res!64263) (not e!86993))))

(declare-fun lt!69907 () ListLongMap!1707)

(assert (=> d!40585 (= res!64263 (contains!896 lt!69907 (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun lt!69909 () List!1735)

(assert (=> d!40585 (= lt!69907 (ListLongMap!1708 lt!69909))))

(declare-fun lt!69908 () Unit!4150)

(declare-fun lt!69906 () Unit!4150)

(assert (=> d!40585 (= lt!69908 lt!69906)))

(assert (=> d!40585 (= (getValueByKey!171 lt!69909 (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!40585 (= lt!69906 (lemmaContainsTupThenGetReturnValue!88 lt!69909 (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!40585 (= lt!69909 (insertStrictlySorted!90 (toList!869 lt!69496) (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!40585 (= (+!170 lt!69496 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69907)))

(declare-fun b!133500 () Bool)

(declare-fun res!64262 () Bool)

(assert (=> b!133500 (=> (not res!64262) (not e!86993))))

(assert (=> b!133500 (= res!64262 (= (getValueByKey!171 (toList!869 lt!69907) (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!133501 () Bool)

(assert (=> b!133501 (= e!86993 (contains!898 (toList!869 lt!69907) (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(assert (= (and d!40585 res!64263) b!133500))

(assert (= (and b!133500 res!64262) b!133501))

(declare-fun m!157801 () Bool)

(assert (=> d!40585 m!157801))

(declare-fun m!157803 () Bool)

(assert (=> d!40585 m!157803))

(declare-fun m!157805 () Bool)

(assert (=> d!40585 m!157805))

(declare-fun m!157807 () Bool)

(assert (=> d!40585 m!157807))

(declare-fun m!157809 () Bool)

(assert (=> b!133500 m!157809))

(declare-fun m!157811 () Bool)

(assert (=> b!133501 m!157811))

(assert (=> b!133008 d!40585))

(declare-fun d!40587 () Bool)

(assert (=> d!40587 (= (apply!116 lt!69497 lt!69485) (get!1491 (getValueByKey!171 (toList!869 lt!69497) lt!69485)))))

(declare-fun bs!5523 () Bool)

(assert (= bs!5523 d!40587))

(declare-fun m!157813 () Bool)

(assert (=> bs!5523 m!157813))

(assert (=> bs!5523 m!157813))

(declare-fun m!157815 () Bool)

(assert (=> bs!5523 m!157815))

(assert (=> b!133008 d!40587))

(declare-fun d!40589 () Bool)

(declare-fun e!86994 () Bool)

(assert (=> d!40589 e!86994))

(declare-fun res!64265 () Bool)

(assert (=> d!40589 (=> (not res!64265) (not e!86994))))

(declare-fun lt!69911 () ListLongMap!1707)

(assert (=> d!40589 (= res!64265 (contains!896 lt!69911 (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!69913 () List!1735)

(assert (=> d!40589 (= lt!69911 (ListLongMap!1708 lt!69913))))

(declare-fun lt!69912 () Unit!4150)

(declare-fun lt!69910 () Unit!4150)

(assert (=> d!40589 (= lt!69912 lt!69910)))

(assert (=> d!40589 (= (getValueByKey!171 lt!69913 (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40589 (= lt!69910 (lemmaContainsTupThenGetReturnValue!88 lt!69913 (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40589 (= lt!69913 (insertStrictlySorted!90 (toList!869 lt!69484) (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40589 (= (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))) lt!69911)))

(declare-fun b!133502 () Bool)

(declare-fun res!64264 () Bool)

(assert (=> b!133502 (=> (not res!64264) (not e!86994))))

(assert (=> b!133502 (= res!64264 (= (getValueByKey!171 (toList!869 lt!69911) (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))))))

(declare-fun b!133503 () Bool)

(assert (=> b!133503 (= e!86994 (contains!898 (toList!869 lt!69911) (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))))

(assert (= (and d!40589 res!64265) b!133502))

(assert (= (and b!133502 res!64264) b!133503))

(declare-fun m!157817 () Bool)

(assert (=> d!40589 m!157817))

(declare-fun m!157819 () Bool)

(assert (=> d!40589 m!157819))

(declare-fun m!157821 () Bool)

(assert (=> d!40589 m!157821))

(declare-fun m!157823 () Bool)

(assert (=> d!40589 m!157823))

(declare-fun m!157825 () Bool)

(assert (=> b!133502 m!157825))

(declare-fun m!157827 () Bool)

(assert (=> b!133503 m!157827))

(assert (=> b!133008 d!40589))

(declare-fun d!40591 () Bool)

(assert (=> d!40591 (= (apply!116 (+!170 lt!69492 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))) lt!69490) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69492 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))) lt!69490)))))

(declare-fun bs!5524 () Bool)

(assert (= bs!5524 d!40591))

(declare-fun m!157829 () Bool)

(assert (=> bs!5524 m!157829))

(assert (=> bs!5524 m!157829))

(declare-fun m!157831 () Bool)

(assert (=> bs!5524 m!157831))

(assert (=> b!133008 d!40591))

(declare-fun d!40593 () Bool)

(assert (=> d!40593 (= (apply!116 (+!170 lt!69496 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69495) (apply!116 lt!69496 lt!69495))))

(declare-fun lt!69914 () Unit!4150)

(assert (=> d!40593 (= lt!69914 (choose!828 lt!69496 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) lt!69495))))

(declare-fun e!86995 () Bool)

(assert (=> d!40593 e!86995))

(declare-fun res!64266 () Bool)

(assert (=> d!40593 (=> (not res!64266) (not e!86995))))

(assert (=> d!40593 (= res!64266 (contains!896 lt!69496 lt!69495))))

(assert (=> d!40593 (= (addApplyDifferent!92 lt!69496 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) lt!69495) lt!69914)))

(declare-fun b!133504 () Bool)

(assert (=> b!133504 (= e!86995 (not (= lt!69495 lt!69493)))))

(assert (= (and d!40593 res!64266) b!133504))

(assert (=> d!40593 m!156875))

(assert (=> d!40593 m!156859))

(assert (=> d!40593 m!156861))

(declare-fun m!157833 () Bool)

(assert (=> d!40593 m!157833))

(declare-fun m!157835 () Bool)

(assert (=> d!40593 m!157835))

(assert (=> d!40593 m!156859))

(assert (=> b!133008 d!40593))

(declare-fun d!40595 () Bool)

(assert (=> d!40595 (= (apply!116 (+!170 lt!69497 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69485) (apply!116 lt!69497 lt!69485))))

(declare-fun lt!69915 () Unit!4150)

(assert (=> d!40595 (= lt!69915 (choose!828 lt!69497 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) lt!69485))))

(declare-fun e!86996 () Bool)

(assert (=> d!40595 e!86996))

(declare-fun res!64267 () Bool)

(assert (=> d!40595 (=> (not res!64267) (not e!86996))))

(assert (=> d!40595 (= res!64267 (contains!896 lt!69497 lt!69485))))

(assert (=> d!40595 (= (addApplyDifferent!92 lt!69497 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) lt!69485) lt!69915)))

(declare-fun b!133505 () Bool)

(assert (=> b!133505 (= e!86996 (not (= lt!69485 lt!69499)))))

(assert (= (and d!40595 res!64267) b!133505))

(assert (=> d!40595 m!156883))

(assert (=> d!40595 m!156869))

(assert (=> d!40595 m!156871))

(declare-fun m!157837 () Bool)

(assert (=> d!40595 m!157837))

(declare-fun m!157839 () Bool)

(assert (=> d!40595 m!157839))

(assert (=> d!40595 m!156869))

(assert (=> b!133008 d!40595))

(declare-fun b!133506 () Bool)

(declare-fun e!86997 () Option!177)

(assert (=> b!133506 (= e!86997 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69463)))))))

(declare-fun b!133509 () Bool)

(declare-fun e!86998 () Option!177)

(assert (=> b!133509 (= e!86998 None!175)))

(declare-fun b!133508 () Bool)

(assert (=> b!133508 (= e!86998 (getValueByKey!171 (t!6198 (toList!869 lt!69463)) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133507 () Bool)

(assert (=> b!133507 (= e!86997 e!86998)))

(declare-fun c!24742 () Bool)

(assert (=> b!133507 (= c!24742 (and ((_ is Cons!1731) (toList!869 lt!69463)) (not (= (_1!1314 (h!2336 (toList!869 lt!69463))) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!24741 () Bool)

(declare-fun d!40597 () Bool)

(assert (=> d!40597 (= c!24741 (and ((_ is Cons!1731) (toList!869 lt!69463)) (= (_1!1314 (h!2336 (toList!869 lt!69463))) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40597 (= (getValueByKey!171 (toList!869 lt!69463) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!86997)))

(assert (= (and d!40597 c!24741) b!133506))

(assert (= (and d!40597 (not c!24741)) b!133507))

(assert (= (and b!133507 c!24742) b!133508))

(assert (= (and b!133507 (not c!24742)) b!133509))

(declare-fun m!157841 () Bool)

(assert (=> b!133508 m!157841))

(assert (=> b!132979 d!40597))

(assert (=> b!132924 d!40331))

(declare-fun d!40599 () Bool)

(assert (=> d!40599 (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69620 #b00000000000000000000000000000000)))

(declare-fun lt!69916 () Unit!4150)

(assert (=> d!40599 (= lt!69916 (choose!13 (_keys!4614 newMap!16) lt!69620 #b00000000000000000000000000000000))))

(assert (=> d!40599 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!40599 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 newMap!16) lt!69620 #b00000000000000000000000000000000) lt!69916)))

(declare-fun bs!5525 () Bool)

(assert (= bs!5525 d!40599))

(assert (=> bs!5525 m!157017))

(declare-fun m!157843 () Bool)

(assert (=> bs!5525 m!157843))

(assert (=> b!133109 d!40599))

(declare-fun d!40601 () Bool)

(declare-fun res!64268 () Bool)

(declare-fun e!86999 () Bool)

(assert (=> d!40601 (=> res!64268 e!86999)))

(assert (=> d!40601 (= res!64268 (= (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) lt!69620))))

(assert (=> d!40601 (= (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69620 #b00000000000000000000000000000000) e!86999)))

(declare-fun b!133510 () Bool)

(declare-fun e!87000 () Bool)

(assert (=> b!133510 (= e!86999 e!87000)))

(declare-fun res!64269 () Bool)

(assert (=> b!133510 (=> (not res!64269) (not e!87000))))

(assert (=> b!133510 (= res!64269 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!133511 () Bool)

(assert (=> b!133511 (= e!87000 (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69620 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40601 (not res!64268)) b!133510))

(assert (= (and b!133510 res!64269) b!133511))

(assert (=> d!40601 m!156533))

(declare-fun m!157845 () Bool)

(assert (=> b!133511 m!157845))

(assert (=> b!133109 d!40601))

(declare-fun b!133512 () Bool)

(declare-fun e!87003 () SeekEntryResult!285)

(declare-fun lt!69918 () SeekEntryResult!285)

(assert (=> b!133512 (= e!87003 (MissingZero!285 (index!3302 lt!69918)))))

(declare-fun b!133513 () Bool)

(assert (=> b!133513 (= e!87003 (seekKeyOrZeroReturnVacant!0 (x!15602 lt!69918) (index!3302 lt!69918) (index!3302 lt!69918) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun b!133514 () Bool)

(declare-fun c!24743 () Bool)

(declare-fun lt!69919 () (_ BitVec 64))

(assert (=> b!133514 (= c!24743 (= lt!69919 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87002 () SeekEntryResult!285)

(assert (=> b!133514 (= e!87002 e!87003)))

(declare-fun b!133515 () Bool)

(declare-fun e!87001 () SeekEntryResult!285)

(assert (=> b!133515 (= e!87001 Undefined!285)))

(declare-fun b!133516 () Bool)

(assert (=> b!133516 (= e!87001 e!87002)))

(assert (=> b!133516 (= lt!69919 (select (arr!2260 (_keys!4614 newMap!16)) (index!3302 lt!69918)))))

(declare-fun c!24745 () Bool)

(assert (=> b!133516 (= c!24745 (= lt!69919 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!40603 () Bool)

(declare-fun lt!69917 () SeekEntryResult!285)

(assert (=> d!40603 (and (or ((_ is Undefined!285) lt!69917) (not ((_ is Found!285) lt!69917)) (and (bvsge (index!3301 lt!69917) #b00000000000000000000000000000000) (bvslt (index!3301 lt!69917) (size!2529 (_keys!4614 newMap!16))))) (or ((_ is Undefined!285) lt!69917) ((_ is Found!285) lt!69917) (not ((_ is MissingZero!285) lt!69917)) (and (bvsge (index!3300 lt!69917) #b00000000000000000000000000000000) (bvslt (index!3300 lt!69917) (size!2529 (_keys!4614 newMap!16))))) (or ((_ is Undefined!285) lt!69917) ((_ is Found!285) lt!69917) ((_ is MissingZero!285) lt!69917) (not ((_ is MissingVacant!285) lt!69917)) (and (bvsge (index!3303 lt!69917) #b00000000000000000000000000000000) (bvslt (index!3303 lt!69917) (size!2529 (_keys!4614 newMap!16))))) (or ((_ is Undefined!285) lt!69917) (ite ((_ is Found!285) lt!69917) (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69917)) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!285) lt!69917) (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3300 lt!69917)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!285) lt!69917) (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3303 lt!69917)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40603 (= lt!69917 e!87001)))

(declare-fun c!24744 () Bool)

(assert (=> d!40603 (= c!24744 (and ((_ is Intermediate!285) lt!69918) (undefined!1097 lt!69918)))))

(assert (=> d!40603 (= lt!69918 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (mask!7165 newMap!16)) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(assert (=> d!40603 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40603 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (_keys!4614 newMap!16) (mask!7165 newMap!16)) lt!69917)))

(declare-fun b!133517 () Bool)

(assert (=> b!133517 (= e!87002 (Found!285 (index!3302 lt!69918)))))

(assert (= (and d!40603 c!24744) b!133515))

(assert (= (and d!40603 (not c!24744)) b!133516))

(assert (= (and b!133516 c!24745) b!133517))

(assert (= (and b!133516 (not c!24745)) b!133514))

(assert (= (and b!133514 c!24743) b!133512))

(assert (= (and b!133514 (not c!24743)) b!133513))

(assert (=> b!133513 m!156533))

(declare-fun m!157847 () Bool)

(assert (=> b!133513 m!157847))

(declare-fun m!157849 () Bool)

(assert (=> b!133516 m!157849))

(declare-fun m!157851 () Bool)

(assert (=> d!40603 m!157851))

(assert (=> d!40603 m!156533))

(declare-fun m!157853 () Bool)

(assert (=> d!40603 m!157853))

(declare-fun m!157855 () Bool)

(assert (=> d!40603 m!157855))

(declare-fun m!157857 () Bool)

(assert (=> d!40603 m!157857))

(assert (=> d!40603 m!156571))

(declare-fun m!157859 () Bool)

(assert (=> d!40603 m!157859))

(assert (=> d!40603 m!156533))

(assert (=> d!40603 m!157851))

(assert (=> b!133109 d!40603))

(declare-fun d!40605 () Bool)

(declare-fun lt!69920 () Bool)

(assert (=> d!40605 (= lt!69920 (select (content!132 (toList!869 lt!69472)) (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun e!87005 () Bool)

(assert (=> d!40605 (= lt!69920 e!87005)))

(declare-fun res!64270 () Bool)

(assert (=> d!40605 (=> (not res!64270) (not e!87005))))

(assert (=> d!40605 (= res!64270 ((_ is Cons!1731) (toList!869 lt!69472)))))

(assert (=> d!40605 (= (contains!898 (toList!869 lt!69472) (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69920)))

(declare-fun b!133518 () Bool)

(declare-fun e!87004 () Bool)

(assert (=> b!133518 (= e!87005 e!87004)))

(declare-fun res!64271 () Bool)

(assert (=> b!133518 (=> res!64271 e!87004)))

(assert (=> b!133518 (= res!64271 (= (h!2336 (toList!869 lt!69472)) (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!133519 () Bool)

(assert (=> b!133519 (= e!87004 (contains!898 (t!6198 (toList!869 lt!69472)) (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(assert (= (and d!40605 res!64270) b!133518))

(assert (= (and b!133518 (not res!64271)) b!133519))

(declare-fun m!157861 () Bool)

(assert (=> d!40605 m!157861))

(declare-fun m!157863 () Bool)

(assert (=> d!40605 m!157863))

(declare-fun m!157865 () Bool)

(assert (=> b!133519 m!157865))

(assert (=> b!132986 d!40605))

(declare-fun d!40607 () Bool)

(assert (=> d!40607 (= (get!1491 (getValueByKey!171 (toList!869 lt!69225) lt!69223)) (v!3201 (getValueByKey!171 (toList!869 lt!69225) lt!69223)))))

(assert (=> d!40375 d!40607))

(declare-fun b!133520 () Bool)

(declare-fun e!87006 () Option!177)

(assert (=> b!133520 (= e!87006 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69225)))))))

(declare-fun b!133523 () Bool)

(declare-fun e!87007 () Option!177)

(assert (=> b!133523 (= e!87007 None!175)))

(declare-fun b!133522 () Bool)

(assert (=> b!133522 (= e!87007 (getValueByKey!171 (t!6198 (toList!869 lt!69225)) lt!69223))))

(declare-fun b!133521 () Bool)

(assert (=> b!133521 (= e!87006 e!87007)))

(declare-fun c!24747 () Bool)

(assert (=> b!133521 (= c!24747 (and ((_ is Cons!1731) (toList!869 lt!69225)) (not (= (_1!1314 (h!2336 (toList!869 lt!69225))) lt!69223))))))

(declare-fun d!40609 () Bool)

(declare-fun c!24746 () Bool)

(assert (=> d!40609 (= c!24746 (and ((_ is Cons!1731) (toList!869 lt!69225)) (= (_1!1314 (h!2336 (toList!869 lt!69225))) lt!69223)))))

(assert (=> d!40609 (= (getValueByKey!171 (toList!869 lt!69225) lt!69223) e!87006)))

(assert (= (and d!40609 c!24746) b!133520))

(assert (= (and d!40609 (not c!24746)) b!133521))

(assert (= (and b!133521 c!24747) b!133522))

(assert (= (and b!133521 (not c!24747)) b!133523))

(declare-fun m!157867 () Bool)

(assert (=> b!133522 m!157867))

(assert (=> d!40375 d!40609))

(assert (=> d!40415 d!40417))

(declare-fun d!40611 () Bool)

(assert (=> d!40611 (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69337 #b00000000000000000000000000000000)))

(assert (=> d!40611 true))

(declare-fun _$60!363 () Unit!4150)

(assert (=> d!40611 (= (choose!13 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69337 #b00000000000000000000000000000000) _$60!363)))

(declare-fun bs!5526 () Bool)

(assert (= bs!5526 d!40611))

(assert (=> bs!5526 m!156497))

(assert (=> d!40415 d!40611))

(declare-fun d!40613 () Bool)

(assert (=> d!40613 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5527 () Bool)

(assert (= bs!5527 d!40613))

(assert (=> bs!5527 m!156719))

(declare-fun m!157869 () Bool)

(assert (=> bs!5527 m!157869))

(assert (=> b!133131 d!40613))

(declare-fun b!133524 () Bool)

(declare-fun e!87008 () Option!177)

(assert (=> b!133524 (= e!87008 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69221)))))))

(declare-fun b!133527 () Bool)

(declare-fun e!87009 () Option!177)

(assert (=> b!133527 (= e!87009 None!175)))

(declare-fun b!133526 () Bool)

(assert (=> b!133526 (= e!87009 (getValueByKey!171 (t!6198 (toList!869 lt!69221)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133525 () Bool)

(assert (=> b!133525 (= e!87008 e!87009)))

(declare-fun c!24749 () Bool)

(assert (=> b!133525 (= c!24749 (and ((_ is Cons!1731) (toList!869 lt!69221)) (not (= (_1!1314 (h!2336 (toList!869 lt!69221))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!40615 () Bool)

(declare-fun c!24748 () Bool)

(assert (=> d!40615 (= c!24748 (and ((_ is Cons!1731) (toList!869 lt!69221)) (= (_1!1314 (h!2336 (toList!869 lt!69221))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40615 (= (getValueByKey!171 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000) e!87008)))

(assert (= (and d!40615 c!24748) b!133524))

(assert (= (and d!40615 (not c!24748)) b!133525))

(assert (= (and b!133525 c!24749) b!133526))

(assert (= (and b!133525 (not c!24749)) b!133527))

(declare-fun m!157871 () Bool)

(assert (=> b!133526 m!157871))

(assert (=> b!133131 d!40615))

(declare-fun d!40617 () Bool)

(declare-fun e!87010 () Bool)

(assert (=> d!40617 e!87010))

(declare-fun res!64272 () Bool)

(assert (=> d!40617 (=> res!64272 e!87010)))

(declare-fun lt!69921 () Bool)

(assert (=> d!40617 (= res!64272 (not lt!69921))))

(declare-fun lt!69923 () Bool)

(assert (=> d!40617 (= lt!69921 lt!69923)))

(declare-fun lt!69922 () Unit!4150)

(declare-fun e!87011 () Unit!4150)

(assert (=> d!40617 (= lt!69922 e!87011)))

(declare-fun c!24750 () Bool)

(assert (=> d!40617 (= c!24750 lt!69923)))

(assert (=> d!40617 (= lt!69923 (containsKey!175 (toList!869 lt!69463) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40617 (= (contains!896 lt!69463 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69921)))

(declare-fun b!133528 () Bool)

(declare-fun lt!69924 () Unit!4150)

(assert (=> b!133528 (= e!87011 lt!69924)))

(assert (=> b!133528 (= lt!69924 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69463) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> b!133528 (isDefined!125 (getValueByKey!171 (toList!869 lt!69463) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133529 () Bool)

(declare-fun Unit!4182 () Unit!4150)

(assert (=> b!133529 (= e!87011 Unit!4182)))

(declare-fun b!133530 () Bool)

(assert (=> b!133530 (= e!87010 (isDefined!125 (getValueByKey!171 (toList!869 lt!69463) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!40617 c!24750) b!133528))

(assert (= (and d!40617 (not c!24750)) b!133529))

(assert (= (and d!40617 (not res!64272)) b!133530))

(declare-fun m!157873 () Bool)

(assert (=> d!40617 m!157873))

(declare-fun m!157875 () Bool)

(assert (=> b!133528 m!157875))

(assert (=> b!133528 m!156793))

(assert (=> b!133528 m!156793))

(declare-fun m!157877 () Bool)

(assert (=> b!133528 m!157877))

(assert (=> b!133530 m!156793))

(assert (=> b!133530 m!156793))

(assert (=> b!133530 m!157877))

(assert (=> d!40365 d!40617))

(declare-fun b!133531 () Bool)

(declare-fun e!87012 () Option!177)

(assert (=> b!133531 (= e!87012 (Some!176 (_2!1314 (h!2336 lt!69465))))))

(declare-fun b!133534 () Bool)

(declare-fun e!87013 () Option!177)

(assert (=> b!133534 (= e!87013 None!175)))

(declare-fun b!133533 () Bool)

(assert (=> b!133533 (= e!87013 (getValueByKey!171 (t!6198 lt!69465) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133532 () Bool)

(assert (=> b!133532 (= e!87012 e!87013)))

(declare-fun c!24752 () Bool)

(assert (=> b!133532 (= c!24752 (and ((_ is Cons!1731) lt!69465) (not (= (_1!1314 (h!2336 lt!69465)) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun d!40619 () Bool)

(declare-fun c!24751 () Bool)

(assert (=> d!40619 (= c!24751 (and ((_ is Cons!1731) lt!69465) (= (_1!1314 (h!2336 lt!69465)) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40619 (= (getValueByKey!171 lt!69465 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!87012)))

(assert (= (and d!40619 c!24751) b!133531))

(assert (= (and d!40619 (not c!24751)) b!133532))

(assert (= (and b!133532 c!24752) b!133533))

(assert (= (and b!133532 (not c!24752)) b!133534))

(declare-fun m!157879 () Bool)

(assert (=> b!133533 m!157879))

(assert (=> d!40365 d!40619))

(declare-fun d!40621 () Bool)

(assert (=> d!40621 (= (getValueByKey!171 lt!69465 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun lt!69925 () Unit!4150)

(assert (=> d!40621 (= lt!69925 (choose!834 lt!69465 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun e!87014 () Bool)

(assert (=> d!40621 e!87014))

(declare-fun res!64273 () Bool)

(assert (=> d!40621 (=> (not res!64273) (not e!87014))))

(assert (=> d!40621 (= res!64273 (isStrictlySorted!317 lt!69465))))

(assert (=> d!40621 (= (lemmaContainsTupThenGetReturnValue!88 lt!69465 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69925)))

(declare-fun b!133535 () Bool)

(declare-fun res!64274 () Bool)

(assert (=> b!133535 (=> (not res!64274) (not e!87014))))

(assert (=> b!133535 (= res!64274 (containsKey!175 lt!69465 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133536 () Bool)

(assert (=> b!133536 (= e!87014 (contains!898 lt!69465 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!40621 res!64273) b!133535))

(assert (= (and b!133535 res!64274) b!133536))

(assert (=> d!40621 m!156787))

(declare-fun m!157881 () Bool)

(assert (=> d!40621 m!157881))

(declare-fun m!157883 () Bool)

(assert (=> d!40621 m!157883))

(declare-fun m!157885 () Bool)

(assert (=> b!133535 m!157885))

(declare-fun m!157887 () Bool)

(assert (=> b!133536 m!157887))

(assert (=> d!40365 d!40621))

(declare-fun bm!14745 () Bool)

(declare-fun call!14748 () List!1735)

(declare-fun call!14749 () List!1735)

(assert (=> bm!14745 (= call!14748 call!14749)))

(declare-fun lt!69926 () List!1735)

(declare-fun b!133537 () Bool)

(declare-fun e!87017 () Bool)

(assert (=> b!133537 (= e!87017 (contains!898 lt!69926 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!133538 () Bool)

(declare-fun e!87019 () List!1735)

(assert (=> b!133538 (= e!87019 call!14749)))

(declare-fun b!133539 () Bool)

(declare-fun res!64275 () Bool)

(assert (=> b!133539 (=> (not res!64275) (not e!87017))))

(assert (=> b!133539 (= res!64275 (containsKey!175 lt!69926 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133540 () Bool)

(declare-fun e!87015 () List!1735)

(assert (=> b!133540 (= e!87015 (insertStrictlySorted!90 (t!6198 (toList!869 lt!69230)) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133541 () Bool)

(declare-fun e!87016 () List!1735)

(assert (=> b!133541 (= e!87016 call!14748)))

(declare-fun bm!14746 () Bool)

(declare-fun call!14750 () List!1735)

(assert (=> bm!14746 (= call!14749 call!14750)))

(declare-fun b!133543 () Bool)

(declare-fun c!24753 () Bool)

(declare-fun c!24755 () Bool)

(assert (=> b!133543 (= e!87015 (ite c!24755 (t!6198 (toList!869 lt!69230)) (ite c!24753 (Cons!1731 (h!2336 (toList!869 lt!69230)) (t!6198 (toList!869 lt!69230))) Nil!1732)))))

(declare-fun b!133544 () Bool)

(declare-fun e!87018 () List!1735)

(assert (=> b!133544 (= e!87018 call!14750)))

(declare-fun b!133545 () Bool)

(assert (=> b!133545 (= c!24753 (and ((_ is Cons!1731) (toList!869 lt!69230)) (bvsgt (_1!1314 (h!2336 (toList!869 lt!69230))) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> b!133545 (= e!87019 e!87016)))

(declare-fun d!40623 () Bool)

(assert (=> d!40623 e!87017))

(declare-fun res!64276 () Bool)

(assert (=> d!40623 (=> (not res!64276) (not e!87017))))

(assert (=> d!40623 (= res!64276 (isStrictlySorted!317 lt!69926))))

(assert (=> d!40623 (= lt!69926 e!87018)))

(declare-fun c!24754 () Bool)

(assert (=> d!40623 (= c!24754 (and ((_ is Cons!1731) (toList!869 lt!69230)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69230))) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40623 (isStrictlySorted!317 (toList!869 lt!69230))))

(assert (=> d!40623 (= (insertStrictlySorted!90 (toList!869 lt!69230) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69926)))

(declare-fun b!133542 () Bool)

(assert (=> b!133542 (= e!87018 e!87019)))

(assert (=> b!133542 (= c!24755 (and ((_ is Cons!1731) (toList!869 lt!69230)) (= (_1!1314 (h!2336 (toList!869 lt!69230))) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!133546 () Bool)

(assert (=> b!133546 (= e!87016 call!14748)))

(declare-fun bm!14747 () Bool)

(assert (=> bm!14747 (= call!14750 ($colon$colon!91 e!87015 (ite c!24754 (h!2336 (toList!869 lt!69230)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!24756 () Bool)

(assert (=> bm!14747 (= c!24756 c!24754)))

(assert (= (and d!40623 c!24754) b!133544))

(assert (= (and d!40623 (not c!24754)) b!133542))

(assert (= (and b!133542 c!24755) b!133538))

(assert (= (and b!133542 (not c!24755)) b!133545))

(assert (= (and b!133545 c!24753) b!133546))

(assert (= (and b!133545 (not c!24753)) b!133541))

(assert (= (or b!133546 b!133541) bm!14745))

(assert (= (or b!133538 bm!14745) bm!14746))

(assert (= (or b!133544 bm!14746) bm!14747))

(assert (= (and bm!14747 c!24756) b!133540))

(assert (= (and bm!14747 (not c!24756)) b!133543))

(assert (= (and d!40623 res!64276) b!133539))

(assert (= (and b!133539 res!64275) b!133537))

(declare-fun m!157889 () Bool)

(assert (=> b!133539 m!157889))

(declare-fun m!157891 () Bool)

(assert (=> b!133537 m!157891))

(declare-fun m!157893 () Bool)

(assert (=> d!40623 m!157893))

(declare-fun m!157895 () Bool)

(assert (=> d!40623 m!157895))

(declare-fun m!157897 () Bool)

(assert (=> bm!14747 m!157897))

(declare-fun m!157899 () Bool)

(assert (=> b!133540 m!157899))

(assert (=> d!40365 d!40623))

(declare-fun b!133547 () Bool)

(declare-fun e!87021 () Bool)

(declare-fun call!14751 () Bool)

(assert (=> b!133547 (= e!87021 call!14751)))

(declare-fun b!133548 () Bool)

(declare-fun e!87022 () Bool)

(assert (=> b!133548 (= e!87021 e!87022)))

(declare-fun lt!69928 () (_ BitVec 64))

(assert (=> b!133548 (= lt!69928 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun lt!69929 () Unit!4150)

(assert (=> b!133548 (= lt!69929 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69928 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!133548 (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69928 #b00000000000000000000000000000000)))

(declare-fun lt!69927 () Unit!4150)

(assert (=> b!133548 (= lt!69927 lt!69929)))

(declare-fun res!64277 () Bool)

(assert (=> b!133548 (= res!64277 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))) (Found!285 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!133548 (=> (not res!64277) (not e!87022))))

(declare-fun b!133549 () Bool)

(assert (=> b!133549 (= e!87022 call!14751)))

(declare-fun b!133550 () Bool)

(declare-fun e!87020 () Bool)

(assert (=> b!133550 (= e!87020 e!87021)))

(declare-fun c!24757 () Bool)

(assert (=> b!133550 (= c!24757 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!14748 () Bool)

(assert (=> bm!14748 (= call!14751 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun d!40625 () Bool)

(declare-fun res!64278 () Bool)

(assert (=> d!40625 (=> res!64278 e!87020)))

(assert (=> d!40625 (= res!64278 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!40625 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))) e!87020)))

(assert (= (and d!40625 (not res!64278)) b!133550))

(assert (= (and b!133550 c!24757) b!133548))

(assert (= (and b!133550 (not c!24757)) b!133547))

(assert (= (and b!133548 res!64277) b!133549))

(assert (= (or b!133549 b!133547) bm!14748))

(declare-fun m!157901 () Bool)

(assert (=> b!133548 m!157901))

(declare-fun m!157903 () Bool)

(assert (=> b!133548 m!157903))

(declare-fun m!157905 () Bool)

(assert (=> b!133548 m!157905))

(assert (=> b!133548 m!157901))

(declare-fun m!157907 () Bool)

(assert (=> b!133548 m!157907))

(assert (=> b!133550 m!157901))

(assert (=> b!133550 m!157901))

(declare-fun m!157909 () Bool)

(assert (=> b!133550 m!157909))

(declare-fun m!157911 () Bool)

(assert (=> bm!14748 m!157911))

(assert (=> bm!14656 d!40625))

(declare-fun d!40627 () Bool)

(assert (=> d!40627 (= (+!170 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!540 (_keys!4614 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(assert (=> d!40627 true))

(declare-fun _$5!134 () Unit!4150)

(assert (=> d!40627 (= (choose!833 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (index!3301 lt!69307) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)) _$5!134)))

(declare-fun bs!5528 () Bool)

(assert (= bs!5528 d!40627))

(assert (=> bs!5528 m!156355))

(assert (=> bs!5528 m!156355))

(assert (=> bs!5528 m!156961))

(assert (=> bs!5528 m!156431))

(assert (=> bs!5528 m!157047))

(assert (=> d!40407 d!40627))

(assert (=> d!40407 d!40475))

(assert (=> d!40353 d!40357))

(declare-fun d!40629 () Bool)

(assert (=> d!40629 (= (apply!116 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69228) (apply!116 lt!69229 lt!69228))))

(assert (=> d!40629 true))

(declare-fun _$34!971 () Unit!4150)

(assert (=> d!40629 (= (choose!828 lt!69229 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))) lt!69228) _$34!971)))

(declare-fun bs!5529 () Bool)

(assert (= bs!5529 d!40629))

(assert (=> bs!5529 m!156375))

(assert (=> bs!5529 m!156375))

(assert (=> bs!5529 m!156377))

(assert (=> bs!5529 m!156391))

(assert (=> d!40353 d!40629))

(assert (=> d!40353 d!40359))

(declare-fun d!40631 () Bool)

(declare-fun e!87023 () Bool)

(assert (=> d!40631 e!87023))

(declare-fun res!64279 () Bool)

(assert (=> d!40631 (=> res!64279 e!87023)))

(declare-fun lt!69930 () Bool)

(assert (=> d!40631 (= res!64279 (not lt!69930))))

(declare-fun lt!69932 () Bool)

(assert (=> d!40631 (= lt!69930 lt!69932)))

(declare-fun lt!69931 () Unit!4150)

(declare-fun e!87024 () Unit!4150)

(assert (=> d!40631 (= lt!69931 e!87024)))

(declare-fun c!24758 () Bool)

(assert (=> d!40631 (= c!24758 lt!69932)))

(assert (=> d!40631 (= lt!69932 (containsKey!175 (toList!869 lt!69229) lt!69228))))

(assert (=> d!40631 (= (contains!896 lt!69229 lt!69228) lt!69930)))

(declare-fun b!133552 () Bool)

(declare-fun lt!69933 () Unit!4150)

(assert (=> b!133552 (= e!87024 lt!69933)))

(assert (=> b!133552 (= lt!69933 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69229) lt!69228))))

(assert (=> b!133552 (isDefined!125 (getValueByKey!171 (toList!869 lt!69229) lt!69228))))

(declare-fun b!133553 () Bool)

(declare-fun Unit!4183 () Unit!4150)

(assert (=> b!133553 (= e!87024 Unit!4183)))

(declare-fun b!133554 () Bool)

(assert (=> b!133554 (= e!87023 (isDefined!125 (getValueByKey!171 (toList!869 lt!69229) lt!69228)))))

(assert (= (and d!40631 c!24758) b!133552))

(assert (= (and d!40631 (not c!24758)) b!133553))

(assert (= (and d!40631 (not res!64279)) b!133554))

(declare-fun m!157913 () Bool)

(assert (=> d!40631 m!157913))

(declare-fun m!157915 () Bool)

(assert (=> b!133552 m!157915))

(assert (=> b!133552 m!156829))

(assert (=> b!133552 m!156829))

(declare-fun m!157917 () Bool)

(assert (=> b!133552 m!157917))

(assert (=> b!133554 m!156829))

(assert (=> b!133554 m!156829))

(assert (=> b!133554 m!157917))

(assert (=> d!40353 d!40631))

(assert (=> d!40353 d!40377))

(declare-fun d!40633 () Bool)

(assert (=> d!40633 (= (isDefined!125 (getValueByKey!171 (toList!869 call!14629) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))) (not (isEmpty!415 (getValueByKey!171 (toList!869 call!14629) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun bs!5530 () Bool)

(assert (= bs!5530 d!40633))

(assert (=> bs!5530 m!156529))

(declare-fun m!157919 () Bool)

(assert (=> bs!5530 m!157919))

(assert (=> b!132820 d!40633))

(declare-fun b!133555 () Bool)

(declare-fun e!87025 () Option!177)

(assert (=> b!133555 (= e!87025 (Some!176 (_2!1314 (h!2336 (toList!869 call!14629)))))))

(declare-fun b!133558 () Bool)

(declare-fun e!87026 () Option!177)

(assert (=> b!133558 (= e!87026 None!175)))

(declare-fun b!133557 () Bool)

(assert (=> b!133557 (= e!87026 (getValueByKey!171 (t!6198 (toList!869 call!14629)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!133556 () Bool)

(assert (=> b!133556 (= e!87025 e!87026)))

(declare-fun c!24760 () Bool)

(assert (=> b!133556 (= c!24760 (and ((_ is Cons!1731) (toList!869 call!14629)) (not (= (_1!1314 (h!2336 (toList!869 call!14629))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun d!40635 () Bool)

(declare-fun c!24759 () Bool)

(assert (=> d!40635 (= c!24759 (and ((_ is Cons!1731) (toList!869 call!14629)) (= (_1!1314 (h!2336 (toList!869 call!14629))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!40635 (= (getValueByKey!171 (toList!869 call!14629) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) e!87025)))

(assert (= (and d!40635 c!24759) b!133555))

(assert (= (and d!40635 (not c!24759)) b!133556))

(assert (= (and b!133556 c!24760) b!133557))

(assert (= (and b!133556 (not c!24760)) b!133558))

(assert (=> b!133557 m!156287))

(declare-fun m!157921 () Bool)

(assert (=> b!133557 m!157921))

(assert (=> b!132820 d!40635))

(declare-fun b!133559 () Bool)

(declare-fun e!87027 () Option!177)

(assert (=> b!133559 (= e!87027 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 lt!69161))))))))

(declare-fun b!133562 () Bool)

(declare-fun e!87028 () Option!177)

(assert (=> b!133562 (= e!87028 None!175)))

(declare-fun b!133561 () Bool)

(assert (=> b!133561 (= e!87028 (getValueByKey!171 (t!6198 (t!6198 (toList!869 lt!69161))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!133560 () Bool)

(assert (=> b!133560 (= e!87027 e!87028)))

(declare-fun c!24762 () Bool)

(assert (=> b!133560 (= c!24762 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69161))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69161)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun d!40637 () Bool)

(declare-fun c!24761 () Bool)

(assert (=> d!40637 (= c!24761 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69161))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69161)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!40637 (= (getValueByKey!171 (t!6198 (toList!869 lt!69161)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) e!87027)))

(assert (= (and d!40637 c!24761) b!133559))

(assert (= (and d!40637 (not c!24761)) b!133560))

(assert (= (and b!133560 c!24762) b!133561))

(assert (= (and b!133560 (not c!24762)) b!133562))

(assert (=> b!133561 m!156287))

(declare-fun m!157923 () Bool)

(assert (=> b!133561 m!157923))

(assert (=> b!133106 d!40637))

(declare-fun d!40639 () Bool)

(assert (=> d!40639 (isDefined!125 (getValueByKey!171 (toList!869 call!14628) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(declare-fun lt!69934 () Unit!4150)

(assert (=> d!40639 (= lt!69934 (choose!831 (toList!869 call!14628) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(declare-fun e!87029 () Bool)

(assert (=> d!40639 e!87029))

(declare-fun res!64280 () Bool)

(assert (=> d!40639 (=> (not res!64280) (not e!87029))))

(assert (=> d!40639 (= res!64280 (isStrictlySorted!317 (toList!869 call!14628)))))

(assert (=> d!40639 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 call!14628) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))) lt!69934)))

(declare-fun b!133563 () Bool)

(assert (=> b!133563 (= e!87029 (containsKey!175 (toList!869 call!14628) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(assert (= (and d!40639 res!64280) b!133563))

(assert (=> d!40639 m!156425))

(assert (=> d!40639 m!157035))

(assert (=> d!40639 m!157035))

(assert (=> d!40639 m!157037))

(assert (=> d!40639 m!156425))

(declare-fun m!157925 () Bool)

(assert (=> d!40639 m!157925))

(declare-fun m!157927 () Bool)

(assert (=> d!40639 m!157927))

(assert (=> b!133563 m!156425))

(assert (=> b!133563 m!157031))

(assert (=> b!133115 d!40639))

(declare-fun d!40641 () Bool)

(assert (=> d!40641 (= (isDefined!125 (getValueByKey!171 (toList!869 call!14628) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))) (not (isEmpty!415 (getValueByKey!171 (toList!869 call!14628) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))))

(declare-fun bs!5531 () Bool)

(assert (= bs!5531 d!40641))

(assert (=> bs!5531 m!157035))

(declare-fun m!157929 () Bool)

(assert (=> bs!5531 m!157929))

(assert (=> b!133115 d!40641))

(declare-fun b!133564 () Bool)

(declare-fun e!87030 () Option!177)

(assert (=> b!133564 (= e!87030 (Some!176 (_2!1314 (h!2336 (toList!869 call!14628)))))))

(declare-fun b!133567 () Bool)

(declare-fun e!87031 () Option!177)

(assert (=> b!133567 (= e!87031 None!175)))

(declare-fun b!133566 () Bool)

(assert (=> b!133566 (= e!87031 (getValueByKey!171 (t!6198 (toList!869 call!14628)) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(declare-fun b!133565 () Bool)

(assert (=> b!133565 (= e!87030 e!87031)))

(declare-fun c!24764 () Bool)

(assert (=> b!133565 (= c!24764 (and ((_ is Cons!1731) (toList!869 call!14628)) (not (= (_1!1314 (h!2336 (toList!869 call!14628))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))))

(declare-fun d!40643 () Bool)

(declare-fun c!24763 () Bool)

(assert (=> d!40643 (= c!24763 (and ((_ is Cons!1731) (toList!869 call!14628)) (= (_1!1314 (h!2336 (toList!869 call!14628))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))))))

(assert (=> d!40643 (= (getValueByKey!171 (toList!869 call!14628) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))) e!87030)))

(assert (= (and d!40643 c!24763) b!133564))

(assert (= (and d!40643 (not c!24763)) b!133565))

(assert (= (and b!133565 c!24764) b!133566))

(assert (= (and b!133565 (not c!24764)) b!133567))

(assert (=> b!133566 m!156425))

(declare-fun m!157931 () Bool)

(assert (=> b!133566 m!157931))

(assert (=> b!133115 d!40643))

(declare-fun d!40645 () Bool)

(declare-fun e!87032 () Bool)

(assert (=> d!40645 e!87032))

(declare-fun res!64282 () Bool)

(assert (=> d!40645 (=> (not res!64282) (not e!87032))))

(declare-fun lt!69936 () ListLongMap!1707)

(assert (=> d!40645 (= res!64282 (contains!896 lt!69936 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun lt!69938 () List!1735)

(assert (=> d!40645 (= lt!69936 (ListLongMap!1708 lt!69938))))

(declare-fun lt!69937 () Unit!4150)

(declare-fun lt!69935 () Unit!4150)

(assert (=> d!40645 (= lt!69937 lt!69935)))

(assert (=> d!40645 (= (getValueByKey!171 lt!69938 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40645 (= lt!69935 (lemmaContainsTupThenGetReturnValue!88 lt!69938 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40645 (= lt!69938 (insertStrictlySorted!90 (toList!869 call!14679) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40645 (= (+!170 call!14679 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) lt!69936)))

(declare-fun b!133568 () Bool)

(declare-fun res!64281 () Bool)

(assert (=> b!133568 (=> (not res!64281) (not e!87032))))

(assert (=> b!133568 (= res!64281 (= (getValueByKey!171 (toList!869 lt!69936) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!133569 () Bool)

(assert (=> b!133569 (= e!87032 (contains!898 (toList!869 lt!69936) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(assert (= (and d!40645 res!64282) b!133568))

(assert (= (and b!133568 res!64281) b!133569))

(declare-fun m!157933 () Bool)

(assert (=> d!40645 m!157933))

(declare-fun m!157935 () Bool)

(assert (=> d!40645 m!157935))

(declare-fun m!157937 () Bool)

(assert (=> d!40645 m!157937))

(declare-fun m!157939 () Bool)

(assert (=> d!40645 m!157939))

(declare-fun m!157941 () Bool)

(assert (=> b!133568 m!157941))

(declare-fun m!157943 () Bool)

(assert (=> b!133569 m!157943))

(assert (=> b!133027 d!40645))

(declare-fun d!40647 () Bool)

(assert (=> d!40647 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5532 () Bool)

(assert (= bs!5532 d!40647))

(assert (=> bs!5532 m!156519))

(declare-fun m!157945 () Bool)

(assert (=> bs!5532 m!157945))

(assert (=> b!132817 d!40647))

(assert (=> b!132817 d!40427))

(declare-fun d!40649 () Bool)

(assert (=> d!40649 (= (get!1491 (getValueByKey!171 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!3201 (getValueByKey!171 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!40341 d!40649))

(assert (=> d!40341 d!40561))

(declare-fun d!40651 () Bool)

(declare-fun res!64283 () Bool)

(declare-fun e!87033 () Bool)

(assert (=> d!40651 (=> res!64283 e!87033)))

(assert (=> d!40651 (= res!64283 (= (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40651 (= (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!87033)))

(declare-fun b!133570 () Bool)

(declare-fun e!87034 () Bool)

(assert (=> b!133570 (= e!87033 e!87034)))

(declare-fun res!64284 () Bool)

(assert (=> b!133570 (=> (not res!64284) (not e!87034))))

(assert (=> b!133570 (= res!64284 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!133571 () Bool)

(assert (=> b!133571 (= e!87034 (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!40651 (not res!64283)) b!133570))

(assert (= (and b!133570 res!64284) b!133571))

(assert (=> d!40651 m!157187))

(assert (=> b!133571 m!156287))

(declare-fun m!157947 () Bool)

(assert (=> b!133571 m!157947))

(assert (=> b!132826 d!40651))

(declare-fun b!133572 () Bool)

(declare-fun e!87037 () Bool)

(declare-fun e!87038 () Bool)

(assert (=> b!133572 (= e!87037 e!87038)))

(declare-fun c!24765 () Bool)

(assert (=> b!133572 (= c!24765 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(declare-fun b!133573 () Bool)

(declare-fun call!14752 () Bool)

(assert (=> b!133573 (= e!87038 call!14752)))

(declare-fun b!133574 () Bool)

(declare-fun e!87035 () Bool)

(assert (=> b!133574 (= e!87035 (contains!897 Nil!1733 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(declare-fun bm!14749 () Bool)

(assert (=> bm!14749 (= call!14752 (arrayNoDuplicates!0 (_keys!4614 (_2!1315 lt!69327)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24765 (Cons!1732 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)))))

(declare-fun d!40653 () Bool)

(declare-fun res!64287 () Bool)

(declare-fun e!87036 () Bool)

(assert (=> d!40653 (=> res!64287 e!87036)))

(assert (=> d!40653 (= res!64287 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(assert (=> d!40653 (= (arrayNoDuplicates!0 (_keys!4614 (_2!1315 lt!69327)) #b00000000000000000000000000000000 Nil!1733) e!87036)))

(declare-fun b!133575 () Bool)

(assert (=> b!133575 (= e!87038 call!14752)))

(declare-fun b!133576 () Bool)

(assert (=> b!133576 (= e!87036 e!87037)))

(declare-fun res!64285 () Bool)

(assert (=> b!133576 (=> (not res!64285) (not e!87037))))

(assert (=> b!133576 (= res!64285 (not e!87035))))

(declare-fun res!64286 () Bool)

(assert (=> b!133576 (=> (not res!64286) (not e!87035))))

(assert (=> b!133576 (= res!64286 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(assert (= (and d!40653 (not res!64287)) b!133576))

(assert (= (and b!133576 res!64286) b!133574))

(assert (= (and b!133576 res!64285) b!133572))

(assert (= (and b!133572 c!24765) b!133575))

(assert (= (and b!133572 (not c!24765)) b!133573))

(assert (= (or b!133575 b!133573) bm!14749))

(assert (=> b!133572 m!157397))

(assert (=> b!133572 m!157397))

(assert (=> b!133572 m!157445))

(assert (=> b!133574 m!157397))

(assert (=> b!133574 m!157397))

(declare-fun m!157949 () Bool)

(assert (=> b!133574 m!157949))

(assert (=> bm!14749 m!157397))

(declare-fun m!157951 () Bool)

(assert (=> bm!14749 m!157951))

(assert (=> b!133576 m!157397))

(assert (=> b!133576 m!157397))

(assert (=> b!133576 m!157445))

(assert (=> b!132814 d!40653))

(declare-fun d!40655 () Bool)

(assert (=> d!40655 (contains!896 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))))

(assert (=> d!40655 true))

(declare-fun _$16!151 () Unit!4150)

(assert (=> d!40655 (= (choose!832 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (index!3301 lt!69307) (defaultEntry!2865 newMap!16)) _$16!151)))

(declare-fun bs!5533 () Bool)

(assert (= bs!5533 d!40655))

(assert (=> bs!5533 m!157041))

(assert (=> bs!5533 m!156425))

(assert (=> bs!5533 m!157041))

(assert (=> bs!5533 m!156425))

(assert (=> bs!5533 m!157043))

(assert (=> d!40405 d!40655))

(assert (=> d!40405 d!40475))

(declare-fun d!40657 () Bool)

(declare-fun res!64288 () Bool)

(declare-fun e!87039 () Bool)

(assert (=> d!40657 (=> res!64288 e!87039)))

(assert (=> d!40657 (= res!64288 (and ((_ is Cons!1731) (toList!869 call!14628)) (= (_1!1314 (h!2336 (toList!869 call!14628))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))))))

(assert (=> d!40657 (= (containsKey!175 (toList!869 call!14628) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))) e!87039)))

(declare-fun b!133577 () Bool)

(declare-fun e!87040 () Bool)

(assert (=> b!133577 (= e!87039 e!87040)))

(declare-fun res!64289 () Bool)

(assert (=> b!133577 (=> (not res!64289) (not e!87040))))

(assert (=> b!133577 (= res!64289 (and (or (not ((_ is Cons!1731) (toList!869 call!14628))) (bvsle (_1!1314 (h!2336 (toList!869 call!14628))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))) ((_ is Cons!1731) (toList!869 call!14628)) (bvslt (_1!1314 (h!2336 (toList!869 call!14628))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))))))

(declare-fun b!133578 () Bool)

(assert (=> b!133578 (= e!87040 (containsKey!175 (t!6198 (toList!869 call!14628)) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(assert (= (and d!40657 (not res!64288)) b!133577))

(assert (= (and b!133577 res!64289) b!133578))

(assert (=> b!133578 m!156425))

(declare-fun m!157953 () Bool)

(assert (=> b!133578 m!157953))

(assert (=> d!40403 d!40657))

(declare-fun d!40659 () Bool)

(declare-fun e!87041 () Bool)

(assert (=> d!40659 e!87041))

(declare-fun res!64290 () Bool)

(assert (=> d!40659 (=> res!64290 e!87041)))

(declare-fun lt!69939 () Bool)

(assert (=> d!40659 (= res!64290 (not lt!69939))))

(declare-fun lt!69941 () Bool)

(assert (=> d!40659 (= lt!69939 lt!69941)))

(declare-fun lt!69940 () Unit!4150)

(declare-fun e!87042 () Unit!4150)

(assert (=> d!40659 (= lt!69940 e!87042)))

(declare-fun c!24766 () Bool)

(assert (=> d!40659 (= c!24766 lt!69941)))

(assert (=> d!40659 (= lt!69941 (containsKey!175 (toList!869 lt!69405) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!40659 (= (contains!896 lt!69405 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!69939)))

(declare-fun b!133579 () Bool)

(declare-fun lt!69942 () Unit!4150)

(assert (=> b!133579 (= e!87042 lt!69942)))

(assert (=> b!133579 (= lt!69942 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69405) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!133579 (isDefined!125 (getValueByKey!171 (toList!869 lt!69405) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!133580 () Bool)

(declare-fun Unit!4184 () Unit!4150)

(assert (=> b!133580 (= e!87042 Unit!4184)))

(declare-fun b!133581 () Bool)

(assert (=> b!133581 (= e!87041 (isDefined!125 (getValueByKey!171 (toList!869 lt!69405) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!40659 c!24766) b!133579))

(assert (= (and d!40659 (not c!24766)) b!133580))

(assert (= (and d!40659 (not res!64290)) b!133581))

(assert (=> d!40659 m!156357))

(declare-fun m!157955 () Bool)

(assert (=> d!40659 m!157955))

(assert (=> b!133579 m!156357))

(declare-fun m!157957 () Bool)

(assert (=> b!133579 m!157957))

(assert (=> b!133579 m!156357))

(declare-fun m!157959 () Bool)

(assert (=> b!133579 m!157959))

(assert (=> b!133579 m!157959))

(declare-fun m!157961 () Bool)

(assert (=> b!133579 m!157961))

(assert (=> b!133581 m!156357))

(assert (=> b!133581 m!157959))

(assert (=> b!133581 m!157959))

(assert (=> b!133581 m!157961))

(assert (=> b!132920 d!40659))

(declare-fun d!40661 () Bool)

(assert (=> d!40661 (= (content!131 Nil!1733) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!40327 d!40661))

(declare-fun d!40663 () Bool)

(assert (=> d!40663 (= (map!1405 (_2!1315 lt!69589)) (getCurrentListMap!540 (_keys!4614 (_2!1315 lt!69589)) (_values!2848 (_2!1315 lt!69589)) (mask!7165 (_2!1315 lt!69589)) (extraKeys!2630 (_2!1315 lt!69589)) (zeroValue!2720 (_2!1315 lt!69589)) (minValue!2720 (_2!1315 lt!69589)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1315 lt!69589))))))

(declare-fun bs!5534 () Bool)

(assert (= bs!5534 d!40663))

(declare-fun m!157963 () Bool)

(assert (=> bs!5534 m!157963))

(assert (=> b!133078 d!40663))

(declare-fun d!40665 () Bool)

(declare-fun e!87043 () Bool)

(assert (=> d!40665 e!87043))

(declare-fun res!64292 () Bool)

(assert (=> d!40665 (=> (not res!64292) (not e!87043))))

(declare-fun lt!69944 () ListLongMap!1707)

(assert (=> d!40665 (= res!64292 (contains!896 lt!69944 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69946 () List!1735)

(assert (=> d!40665 (= lt!69944 (ListLongMap!1708 lt!69946))))

(declare-fun lt!69945 () Unit!4150)

(declare-fun lt!69943 () Unit!4150)

(assert (=> d!40665 (= lt!69945 lt!69943)))

(assert (=> d!40665 (= (getValueByKey!171 lt!69946 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40665 (= lt!69943 (lemmaContainsTupThenGetReturnValue!88 lt!69946 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40665 (= lt!69946 (insertStrictlySorted!90 (toList!869 (map!1405 newMap!16)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40665 (= (+!170 (map!1405 newMap!16) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69944)))

(declare-fun b!133582 () Bool)

(declare-fun res!64291 () Bool)

(assert (=> b!133582 (=> (not res!64291) (not e!87043))))

(assert (=> b!133582 (= res!64291 (= (getValueByKey!171 (toList!869 lt!69944) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133583 () Bool)

(assert (=> b!133583 (= e!87043 (contains!898 (toList!869 lt!69944) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40665 res!64292) b!133582))

(assert (= (and b!133582 res!64291) b!133583))

(declare-fun m!157965 () Bool)

(assert (=> d!40665 m!157965))

(declare-fun m!157967 () Bool)

(assert (=> d!40665 m!157967))

(declare-fun m!157969 () Bool)

(assert (=> d!40665 m!157969))

(declare-fun m!157971 () Bool)

(assert (=> d!40665 m!157971))

(declare-fun m!157973 () Bool)

(assert (=> b!133582 m!157973))

(declare-fun m!157975 () Bool)

(assert (=> b!133583 m!157975))

(assert (=> b!133078 d!40665))

(assert (=> b!133078 d!40271))

(assert (=> b!132932 d!40473))

(declare-fun b!133584 () Bool)

(declare-fun e!87044 () Option!177)

(assert (=> b!133584 (= e!87044 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69472)))))))

(declare-fun b!133587 () Bool)

(declare-fun e!87045 () Option!177)

(assert (=> b!133587 (= e!87045 None!175)))

(declare-fun b!133586 () Bool)

(assert (=> b!133586 (= e!87045 (getValueByKey!171 (t!6198 (toList!869 lt!69472)) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133585 () Bool)

(assert (=> b!133585 (= e!87044 e!87045)))

(declare-fun c!24768 () Bool)

(assert (=> b!133585 (= c!24768 (and ((_ is Cons!1731) (toList!869 lt!69472)) (not (= (_1!1314 (h!2336 (toList!869 lt!69472))) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun d!40667 () Bool)

(declare-fun c!24767 () Bool)

(assert (=> d!40667 (= c!24767 (and ((_ is Cons!1731) (toList!869 lt!69472)) (= (_1!1314 (h!2336 (toList!869 lt!69472))) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40667 (= (getValueByKey!171 (toList!869 lt!69472) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!87044)))

(assert (= (and d!40667 c!24767) b!133584))

(assert (= (and d!40667 (not c!24767)) b!133585))

(assert (= (and b!133585 c!24768) b!133586))

(assert (= (and b!133585 (not c!24768)) b!133587))

(declare-fun m!157977 () Bool)

(assert (=> b!133586 m!157977))

(assert (=> b!132985 d!40667))

(declare-fun d!40669 () Bool)

(assert (=> d!40669 (= (size!2533 newMap!16) (bvadd (_size!598 newMap!16) (bvsdiv (bvadd (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!133153 d!40669))

(declare-fun d!40671 () Bool)

(assert (=> d!40671 (= (inRange!0 (index!3301 lt!69480) (mask!7165 newMap!16)) (and (bvsge (index!3301 lt!69480) #b00000000000000000000000000000000) (bvslt (index!3301 lt!69480) (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!132992 d!40671))

(declare-fun d!40673 () Bool)

(assert (=> d!40673 (= (apply!116 lt!69416 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!69416) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5535 () Bool)

(assert (= bs!5535 d!40673))

(declare-fun m!157979 () Bool)

(assert (=> bs!5535 m!157979))

(assert (=> bs!5535 m!157979))

(declare-fun m!157981 () Bool)

(assert (=> bs!5535 m!157981))

(assert (=> b!132943 d!40673))

(declare-fun d!40675 () Bool)

(declare-fun lt!69947 () Bool)

(assert (=> d!40675 (= lt!69947 (select (content!131 Nil!1733) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!87046 () Bool)

(assert (=> d!40675 (= lt!69947 e!87046)))

(declare-fun res!64293 () Bool)

(assert (=> d!40675 (=> (not res!64293) (not e!87046))))

(assert (=> d!40675 (= res!64293 ((_ is Cons!1732) Nil!1733))))

(assert (=> d!40675 (= (contains!897 Nil!1733 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!69947)))

(declare-fun b!133588 () Bool)

(declare-fun e!87047 () Bool)

(assert (=> b!133588 (= e!87046 e!87047)))

(declare-fun res!64294 () Bool)

(assert (=> b!133588 (=> res!64294 e!87047)))

(assert (=> b!133588 (= res!64294 (= (h!2337 Nil!1733) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133589 () Bool)

(assert (=> b!133589 (= e!87047 (contains!897 (t!6199 Nil!1733) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!40675 res!64293) b!133588))

(assert (= (and b!133588 (not res!64294)) b!133589))

(assert (=> d!40675 m!156605))

(assert (=> d!40675 m!156533))

(declare-fun m!157983 () Bool)

(assert (=> d!40675 m!157983))

(assert (=> b!133589 m!156533))

(declare-fun m!157985 () Bool)

(assert (=> b!133589 m!157985))

(assert (=> b!132838 d!40675))

(declare-fun d!40677 () Bool)

(declare-fun e!87048 () Bool)

(assert (=> d!40677 e!87048))

(declare-fun res!64295 () Bool)

(assert (=> d!40677 (=> res!64295 e!87048)))

(declare-fun lt!69948 () Bool)

(assert (=> d!40677 (= res!64295 (not lt!69948))))

(declare-fun lt!69950 () Bool)

(assert (=> d!40677 (= lt!69948 lt!69950)))

(declare-fun lt!69949 () Unit!4150)

(declare-fun e!87049 () Unit!4150)

(assert (=> d!40677 (= lt!69949 e!87049)))

(declare-fun c!24769 () Bool)

(assert (=> d!40677 (= c!24769 lt!69950)))

(assert (=> d!40677 (= lt!69950 (containsKey!175 (toList!869 lt!69472) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40677 (= (contains!896 lt!69472 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69948)))

(declare-fun b!133590 () Bool)

(declare-fun lt!69951 () Unit!4150)

(assert (=> b!133590 (= e!87049 lt!69951)))

(assert (=> b!133590 (= lt!69951 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69472) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> b!133590 (isDefined!125 (getValueByKey!171 (toList!869 lt!69472) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133591 () Bool)

(declare-fun Unit!4185 () Unit!4150)

(assert (=> b!133591 (= e!87049 Unit!4185)))

(declare-fun b!133592 () Bool)

(assert (=> b!133592 (= e!87048 (isDefined!125 (getValueByKey!171 (toList!869 lt!69472) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!40677 c!24769) b!133590))

(assert (= (and d!40677 (not c!24769)) b!133591))

(assert (= (and d!40677 (not res!64295)) b!133592))

(declare-fun m!157987 () Bool)

(assert (=> d!40677 m!157987))

(declare-fun m!157989 () Bool)

(assert (=> b!133590 m!157989))

(assert (=> b!133590 m!156817))

(assert (=> b!133590 m!156817))

(declare-fun m!157991 () Bool)

(assert (=> b!133590 m!157991))

(assert (=> b!133592 m!156817))

(assert (=> b!133592 m!156817))

(assert (=> b!133592 m!157991))

(assert (=> d!40371 d!40677))

(declare-fun b!133593 () Bool)

(declare-fun e!87050 () Option!177)

(assert (=> b!133593 (= e!87050 (Some!176 (_2!1314 (h!2336 lt!69474))))))

(declare-fun b!133596 () Bool)

(declare-fun e!87051 () Option!177)

(assert (=> b!133596 (= e!87051 None!175)))

(declare-fun b!133595 () Bool)

(assert (=> b!133595 (= e!87051 (getValueByKey!171 (t!6198 lt!69474) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133594 () Bool)

(assert (=> b!133594 (= e!87050 e!87051)))

(declare-fun c!24771 () Bool)

(assert (=> b!133594 (= c!24771 (and ((_ is Cons!1731) lt!69474) (not (= (_1!1314 (h!2336 lt!69474)) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun d!40679 () Bool)

(declare-fun c!24770 () Bool)

(assert (=> d!40679 (= c!24770 (and ((_ is Cons!1731) lt!69474) (= (_1!1314 (h!2336 lt!69474)) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40679 (= (getValueByKey!171 lt!69474 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!87050)))

(assert (= (and d!40679 c!24770) b!133593))

(assert (= (and d!40679 (not c!24770)) b!133594))

(assert (= (and b!133594 c!24771) b!133595))

(assert (= (and b!133594 (not c!24771)) b!133596))

(declare-fun m!157993 () Bool)

(assert (=> b!133595 m!157993))

(assert (=> d!40371 d!40679))

(declare-fun d!40681 () Bool)

(assert (=> d!40681 (= (getValueByKey!171 lt!69474 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun lt!69952 () Unit!4150)

(assert (=> d!40681 (= lt!69952 (choose!834 lt!69474 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun e!87052 () Bool)

(assert (=> d!40681 e!87052))

(declare-fun res!64296 () Bool)

(assert (=> d!40681 (=> (not res!64296) (not e!87052))))

(assert (=> d!40681 (= res!64296 (isStrictlySorted!317 lt!69474))))

(assert (=> d!40681 (= (lemmaContainsTupThenGetReturnValue!88 lt!69474 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69952)))

(declare-fun b!133597 () Bool)

(declare-fun res!64297 () Bool)

(assert (=> b!133597 (=> (not res!64297) (not e!87052))))

(assert (=> b!133597 (= res!64297 (containsKey!175 lt!69474 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133598 () Bool)

(assert (=> b!133598 (= e!87052 (contains!898 lt!69474 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!40681 res!64296) b!133597))

(assert (= (and b!133597 res!64297) b!133598))

(assert (=> d!40681 m!156811))

(declare-fun m!157995 () Bool)

(assert (=> d!40681 m!157995))

(declare-fun m!157997 () Bool)

(assert (=> d!40681 m!157997))

(declare-fun m!157999 () Bool)

(assert (=> b!133597 m!157999))

(declare-fun m!158001 () Bool)

(assert (=> b!133598 m!158001))

(assert (=> d!40371 d!40681))

(declare-fun bm!14750 () Bool)

(declare-fun call!14753 () List!1735)

(declare-fun call!14754 () List!1735)

(assert (=> bm!14750 (= call!14753 call!14754)))

(declare-fun e!87055 () Bool)

(declare-fun b!133599 () Bool)

(declare-fun lt!69953 () List!1735)

(assert (=> b!133599 (= e!87055 (contains!898 lt!69953 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!133600 () Bool)

(declare-fun e!87057 () List!1735)

(assert (=> b!133600 (= e!87057 call!14754)))

(declare-fun b!133601 () Bool)

(declare-fun res!64298 () Bool)

(assert (=> b!133601 (=> (not res!64298) (not e!87055))))

(assert (=> b!133601 (= res!64298 (containsKey!175 lt!69953 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133602 () Bool)

(declare-fun e!87053 () List!1735)

(assert (=> b!133602 (= e!87053 (insertStrictlySorted!90 (t!6198 (toList!869 lt!69217)) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133603 () Bool)

(declare-fun e!87054 () List!1735)

(assert (=> b!133603 (= e!87054 call!14753)))

(declare-fun bm!14751 () Bool)

(declare-fun call!14755 () List!1735)

(assert (=> bm!14751 (= call!14754 call!14755)))

(declare-fun c!24774 () Bool)

(declare-fun c!24772 () Bool)

(declare-fun b!133605 () Bool)

(assert (=> b!133605 (= e!87053 (ite c!24774 (t!6198 (toList!869 lt!69217)) (ite c!24772 (Cons!1731 (h!2336 (toList!869 lt!69217)) (t!6198 (toList!869 lt!69217))) Nil!1732)))))

(declare-fun b!133606 () Bool)

(declare-fun e!87056 () List!1735)

(assert (=> b!133606 (= e!87056 call!14755)))

(declare-fun b!133607 () Bool)

(assert (=> b!133607 (= c!24772 (and ((_ is Cons!1731) (toList!869 lt!69217)) (bvsgt (_1!1314 (h!2336 (toList!869 lt!69217))) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> b!133607 (= e!87057 e!87054)))

(declare-fun d!40683 () Bool)

(assert (=> d!40683 e!87055))

(declare-fun res!64299 () Bool)

(assert (=> d!40683 (=> (not res!64299) (not e!87055))))

(assert (=> d!40683 (= res!64299 (isStrictlySorted!317 lt!69953))))

(assert (=> d!40683 (= lt!69953 e!87056)))

(declare-fun c!24773 () Bool)

(assert (=> d!40683 (= c!24773 (and ((_ is Cons!1731) (toList!869 lt!69217)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69217))) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40683 (isStrictlySorted!317 (toList!869 lt!69217))))

(assert (=> d!40683 (= (insertStrictlySorted!90 (toList!869 lt!69217) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69953)))

(declare-fun b!133604 () Bool)

(assert (=> b!133604 (= e!87056 e!87057)))

(assert (=> b!133604 (= c!24774 (and ((_ is Cons!1731) (toList!869 lt!69217)) (= (_1!1314 (h!2336 (toList!869 lt!69217))) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!133608 () Bool)

(assert (=> b!133608 (= e!87054 call!14753)))

(declare-fun bm!14752 () Bool)

(assert (=> bm!14752 (= call!14755 ($colon$colon!91 e!87053 (ite c!24773 (h!2336 (toList!869 lt!69217)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!24775 () Bool)

(assert (=> bm!14752 (= c!24775 c!24773)))

(assert (= (and d!40683 c!24773) b!133606))

(assert (= (and d!40683 (not c!24773)) b!133604))

(assert (= (and b!133604 c!24774) b!133600))

(assert (= (and b!133604 (not c!24774)) b!133607))

(assert (= (and b!133607 c!24772) b!133608))

(assert (= (and b!133607 (not c!24772)) b!133603))

(assert (= (or b!133608 b!133603) bm!14750))

(assert (= (or b!133600 bm!14750) bm!14751))

(assert (= (or b!133606 bm!14751) bm!14752))

(assert (= (and bm!14752 c!24775) b!133602))

(assert (= (and bm!14752 (not c!24775)) b!133605))

(assert (= (and d!40683 res!64299) b!133601))

(assert (= (and b!133601 res!64298) b!133599))

(declare-fun m!158003 () Bool)

(assert (=> b!133601 m!158003))

(declare-fun m!158005 () Bool)

(assert (=> b!133599 m!158005))

(declare-fun m!158007 () Bool)

(assert (=> d!40683 m!158007))

(declare-fun m!158009 () Bool)

(assert (=> d!40683 m!158009))

(declare-fun m!158011 () Bool)

(assert (=> bm!14752 m!158011))

(declare-fun m!158013 () Bool)

(assert (=> b!133602 m!158013))

(assert (=> d!40371 d!40683))

(declare-fun d!40685 () Bool)

(assert (=> d!40685 (= (get!1491 (getValueByKey!171 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3201 (getValueByKey!171 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40345 d!40685))

(assert (=> d!40345 d!40615))

(declare-fun d!40687 () Bool)

(declare-fun e!87058 () Bool)

(assert (=> d!40687 e!87058))

(declare-fun res!64300 () Bool)

(assert (=> d!40687 (=> res!64300 e!87058)))

(declare-fun lt!69954 () Bool)

(assert (=> d!40687 (= res!64300 (not lt!69954))))

(declare-fun lt!69956 () Bool)

(assert (=> d!40687 (= lt!69954 lt!69956)))

(declare-fun lt!69955 () Unit!4150)

(declare-fun e!87059 () Unit!4150)

(assert (=> d!40687 (= lt!69955 e!87059)))

(declare-fun c!24776 () Bool)

(assert (=> d!40687 (= c!24776 lt!69956)))

(assert (=> d!40687 (= lt!69956 (containsKey!175 (toList!869 lt!69356) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40687 (= (contains!896 lt!69356 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69954)))

(declare-fun b!133609 () Bool)

(declare-fun lt!69957 () Unit!4150)

(assert (=> b!133609 (= e!87059 lt!69957)))

(assert (=> b!133609 (= lt!69957 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69356) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!133609 (isDefined!125 (getValueByKey!171 (toList!869 lt!69356) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133610 () Bool)

(declare-fun Unit!4186 () Unit!4150)

(assert (=> b!133610 (= e!87059 Unit!4186)))

(declare-fun b!133611 () Bool)

(assert (=> b!133611 (= e!87058 (isDefined!125 (getValueByKey!171 (toList!869 lt!69356) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!40687 c!24776) b!133609))

(assert (= (and d!40687 (not c!24776)) b!133610))

(assert (= (and d!40687 (not res!64300)) b!133611))

(declare-fun m!158015 () Bool)

(assert (=> d!40687 m!158015))

(declare-fun m!158017 () Bool)

(assert (=> b!133609 m!158017))

(assert (=> b!133609 m!156545))

(assert (=> b!133609 m!156545))

(declare-fun m!158019 () Bool)

(assert (=> b!133609 m!158019))

(assert (=> b!133611 m!156545))

(assert (=> b!133611 m!156545))

(assert (=> b!133611 m!158019))

(assert (=> d!40309 d!40687))

(declare-fun b!133612 () Bool)

(declare-fun e!87060 () Option!177)

(assert (=> b!133612 (= e!87060 (Some!176 (_2!1314 (h!2336 lt!69358))))))

(declare-fun b!133615 () Bool)

(declare-fun e!87061 () Option!177)

(assert (=> b!133615 (= e!87061 None!175)))

(declare-fun b!133614 () Bool)

(assert (=> b!133614 (= e!87061 (getValueByKey!171 (t!6198 lt!69358) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133613 () Bool)

(assert (=> b!133613 (= e!87060 e!87061)))

(declare-fun c!24778 () Bool)

(assert (=> b!133613 (= c!24778 (and ((_ is Cons!1731) lt!69358) (not (= (_1!1314 (h!2336 lt!69358)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!24777 () Bool)

(declare-fun d!40689 () Bool)

(assert (=> d!40689 (= c!24777 (and ((_ is Cons!1731) lt!69358) (= (_1!1314 (h!2336 lt!69358)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40689 (= (getValueByKey!171 lt!69358 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87060)))

(assert (= (and d!40689 c!24777) b!133612))

(assert (= (and d!40689 (not c!24777)) b!133613))

(assert (= (and b!133613 c!24778) b!133614))

(assert (= (and b!133613 (not c!24778)) b!133615))

(declare-fun m!158021 () Bool)

(assert (=> b!133614 m!158021))

(assert (=> d!40309 d!40689))

(declare-fun d!40691 () Bool)

(assert (=> d!40691 (= (getValueByKey!171 lt!69358 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69958 () Unit!4150)

(assert (=> d!40691 (= lt!69958 (choose!834 lt!69358 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87062 () Bool)

(assert (=> d!40691 e!87062))

(declare-fun res!64301 () Bool)

(assert (=> d!40691 (=> (not res!64301) (not e!87062))))

(assert (=> d!40691 (= res!64301 (isStrictlySorted!317 lt!69358))))

(assert (=> d!40691 (= (lemmaContainsTupThenGetReturnValue!88 lt!69358 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69958)))

(declare-fun b!133616 () Bool)

(declare-fun res!64302 () Bool)

(assert (=> b!133616 (=> (not res!64302) (not e!87062))))

(assert (=> b!133616 (= res!64302 (containsKey!175 lt!69358 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133617 () Bool)

(assert (=> b!133617 (= e!87062 (contains!898 lt!69358 (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!40691 res!64301) b!133616))

(assert (= (and b!133616 res!64302) b!133617))

(assert (=> d!40691 m!156539))

(declare-fun m!158023 () Bool)

(assert (=> d!40691 m!158023))

(declare-fun m!158025 () Bool)

(assert (=> d!40691 m!158025))

(declare-fun m!158027 () Bool)

(assert (=> b!133616 m!158027))

(declare-fun m!158029 () Bool)

(assert (=> b!133617 m!158029))

(assert (=> d!40309 d!40691))

(declare-fun bm!14753 () Bool)

(declare-fun call!14756 () List!1735)

(declare-fun call!14757 () List!1735)

(assert (=> bm!14753 (= call!14756 call!14757)))

(declare-fun e!87065 () Bool)

(declare-fun lt!69959 () List!1735)

(declare-fun b!133618 () Bool)

(assert (=> b!133618 (= e!87065 (contains!898 lt!69959 (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133619 () Bool)

(declare-fun e!87067 () List!1735)

(assert (=> b!133619 (= e!87067 call!14757)))

(declare-fun b!133620 () Bool)

(declare-fun res!64303 () Bool)

(assert (=> b!133620 (=> (not res!64303) (not e!87065))))

(assert (=> b!133620 (= res!64303 (containsKey!175 lt!69959 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133621 () Bool)

(declare-fun e!87063 () List!1735)

(assert (=> b!133621 (= e!87063 (insertStrictlySorted!90 (t!6198 (toList!869 call!14636)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133622 () Bool)

(declare-fun e!87064 () List!1735)

(assert (=> b!133622 (= e!87064 call!14756)))

(declare-fun bm!14754 () Bool)

(declare-fun call!14758 () List!1735)

(assert (=> bm!14754 (= call!14757 call!14758)))

(declare-fun c!24781 () Bool)

(declare-fun b!133624 () Bool)

(declare-fun c!24779 () Bool)

(assert (=> b!133624 (= e!87063 (ite c!24781 (t!6198 (toList!869 call!14636)) (ite c!24779 (Cons!1731 (h!2336 (toList!869 call!14636)) (t!6198 (toList!869 call!14636))) Nil!1732)))))

(declare-fun b!133625 () Bool)

(declare-fun e!87066 () List!1735)

(assert (=> b!133625 (= e!87066 call!14758)))

(declare-fun b!133626 () Bool)

(assert (=> b!133626 (= c!24779 (and ((_ is Cons!1731) (toList!869 call!14636)) (bvsgt (_1!1314 (h!2336 (toList!869 call!14636))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!133626 (= e!87067 e!87064)))

(declare-fun d!40693 () Bool)

(assert (=> d!40693 e!87065))

(declare-fun res!64304 () Bool)

(assert (=> d!40693 (=> (not res!64304) (not e!87065))))

(assert (=> d!40693 (= res!64304 (isStrictlySorted!317 lt!69959))))

(assert (=> d!40693 (= lt!69959 e!87066)))

(declare-fun c!24780 () Bool)

(assert (=> d!40693 (= c!24780 (and ((_ is Cons!1731) (toList!869 call!14636)) (bvslt (_1!1314 (h!2336 (toList!869 call!14636))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40693 (isStrictlySorted!317 (toList!869 call!14636))))

(assert (=> d!40693 (= (insertStrictlySorted!90 (toList!869 call!14636) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69959)))

(declare-fun b!133623 () Bool)

(assert (=> b!133623 (= e!87066 e!87067)))

(assert (=> b!133623 (= c!24781 (and ((_ is Cons!1731) (toList!869 call!14636)) (= (_1!1314 (h!2336 (toList!869 call!14636))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133627 () Bool)

(assert (=> b!133627 (= e!87064 call!14756)))

(declare-fun bm!14755 () Bool)

(assert (=> bm!14755 (= call!14758 ($colon$colon!91 e!87063 (ite c!24780 (h!2336 (toList!869 call!14636)) (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!24782 () Bool)

(assert (=> bm!14755 (= c!24782 c!24780)))

(assert (= (and d!40693 c!24780) b!133625))

(assert (= (and d!40693 (not c!24780)) b!133623))

(assert (= (and b!133623 c!24781) b!133619))

(assert (= (and b!133623 (not c!24781)) b!133626))

(assert (= (and b!133626 c!24779) b!133627))

(assert (= (and b!133626 (not c!24779)) b!133622))

(assert (= (or b!133627 b!133622) bm!14753))

(assert (= (or b!133619 bm!14753) bm!14754))

(assert (= (or b!133625 bm!14754) bm!14755))

(assert (= (and bm!14755 c!24782) b!133621))

(assert (= (and bm!14755 (not c!24782)) b!133624))

(assert (= (and d!40693 res!64304) b!133620))

(assert (= (and b!133620 res!64303) b!133618))

(declare-fun m!158031 () Bool)

(assert (=> b!133620 m!158031))

(declare-fun m!158033 () Bool)

(assert (=> b!133618 m!158033))

(declare-fun m!158035 () Bool)

(assert (=> d!40693 m!158035))

(declare-fun m!158037 () Bool)

(assert (=> d!40693 m!158037))

(declare-fun m!158039 () Bool)

(assert (=> bm!14755 m!158039))

(declare-fun m!158041 () Bool)

(assert (=> b!133621 m!158041))

(assert (=> d!40309 d!40693))

(declare-fun d!40695 () Bool)

(assert (=> d!40695 (= (apply!116 lt!69510 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1491 (getValueByKey!171 (toList!869 lt!69510) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5536 () Bool)

(assert (= bs!5536 d!40695))

(assert (=> bs!5536 m!156533))

(assert (=> bs!5536 m!157183))

(assert (=> bs!5536 m!157183))

(declare-fun m!158043 () Bool)

(assert (=> bs!5536 m!158043))

(assert (=> b!133032 d!40695))

(declare-fun d!40697 () Bool)

(declare-fun c!24783 () Bool)

(assert (=> d!40697 (= c!24783 ((_ is ValueCellFull!1095) (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000)))))

(declare-fun e!87068 () V!3483)

(assert (=> d!40697 (= (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87068)))

(declare-fun b!133628 () Bool)

(assert (=> b!133628 (= e!87068 (get!1489 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133629 () Bool)

(assert (=> b!133629 (= e!87068 (get!1490 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40697 c!24783) b!133628))

(assert (= (and d!40697 (not c!24783)) b!133629))

(assert (=> b!133628 m!156897))

(assert (=> b!133628 m!156647))

(declare-fun m!158045 () Bool)

(assert (=> b!133628 m!158045))

(assert (=> b!133629 m!156897))

(assert (=> b!133629 m!156647))

(declare-fun m!158047 () Bool)

(assert (=> b!133629 m!158047))

(assert (=> b!133032 d!40697))

(declare-fun d!40699 () Bool)

(declare-fun e!87069 () Bool)

(assert (=> d!40699 e!87069))

(declare-fun res!64305 () Bool)

(assert (=> d!40699 (=> res!64305 e!87069)))

(declare-fun lt!69960 () Bool)

(assert (=> d!40699 (= res!64305 (not lt!69960))))

(declare-fun lt!69962 () Bool)

(assert (=> d!40699 (= lt!69960 lt!69962)))

(declare-fun lt!69961 () Unit!4150)

(declare-fun e!87070 () Unit!4150)

(assert (=> d!40699 (= lt!69961 e!87070)))

(declare-fun c!24784 () Bool)

(assert (=> d!40699 (= c!24784 lt!69962)))

(assert (=> d!40699 (= lt!69962 (containsKey!175 (toList!869 lt!69510) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40699 (= (contains!896 lt!69510 #b0000000000000000000000000000000000000000000000000000000000000000) lt!69960)))

(declare-fun b!133630 () Bool)

(declare-fun lt!69963 () Unit!4150)

(assert (=> b!133630 (= e!87070 lt!69963)))

(assert (=> b!133630 (= lt!69963 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69510) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133630 (isDefined!125 (getValueByKey!171 (toList!869 lt!69510) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133631 () Bool)

(declare-fun Unit!4187 () Unit!4150)

(assert (=> b!133631 (= e!87070 Unit!4187)))

(declare-fun b!133632 () Bool)

(assert (=> b!133632 (= e!87069 (isDefined!125 (getValueByKey!171 (toList!869 lt!69510) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40699 c!24784) b!133630))

(assert (= (and d!40699 (not c!24784)) b!133631))

(assert (= (and d!40699 (not res!64305)) b!133632))

(declare-fun m!158049 () Bool)

(assert (=> d!40699 m!158049))

(declare-fun m!158051 () Bool)

(assert (=> b!133630 m!158051))

(declare-fun m!158053 () Bool)

(assert (=> b!133630 m!158053))

(assert (=> b!133630 m!158053))

(declare-fun m!158055 () Bool)

(assert (=> b!133630 m!158055))

(assert (=> b!133632 m!158053))

(assert (=> b!133632 m!158053))

(assert (=> b!133632 m!158055))

(assert (=> bm!14675 d!40699))

(declare-fun d!40701 () Bool)

(assert (=> d!40701 (= (apply!116 lt!69488 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!69488) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5537 () Bool)

(assert (= bs!5537 d!40701))

(declare-fun m!158057 () Bool)

(assert (=> bs!5537 m!158057))

(assert (=> bs!5537 m!158057))

(declare-fun m!158059 () Bool)

(assert (=> bs!5537 m!158059))

(assert (=> b!133010 d!40701))

(assert (=> d!40421 d!40475))

(assert (=> d!40355 d!40367))

(assert (=> d!40355 d!40371))

(declare-fun d!40703 () Bool)

(assert (=> d!40703 (contains!896 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69227)))

(assert (=> d!40703 true))

(declare-fun _$35!380 () Unit!4150)

(assert (=> d!40703 (= (choose!829 lt!69217 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) lt!69227) _$35!380)))

(declare-fun bs!5538 () Bool)

(assert (= bs!5538 d!40703))

(assert (=> bs!5538 m!156381))

(assert (=> bs!5538 m!156381))

(assert (=> bs!5538 m!156397))

(assert (=> d!40355 d!40703))

(declare-fun d!40705 () Bool)

(declare-fun e!87071 () Bool)

(assert (=> d!40705 e!87071))

(declare-fun res!64306 () Bool)

(assert (=> d!40705 (=> res!64306 e!87071)))

(declare-fun lt!69964 () Bool)

(assert (=> d!40705 (= res!64306 (not lt!69964))))

(declare-fun lt!69966 () Bool)

(assert (=> d!40705 (= lt!69964 lt!69966)))

(declare-fun lt!69965 () Unit!4150)

(declare-fun e!87072 () Unit!4150)

(assert (=> d!40705 (= lt!69965 e!87072)))

(declare-fun c!24785 () Bool)

(assert (=> d!40705 (= c!24785 lt!69966)))

(assert (=> d!40705 (= lt!69966 (containsKey!175 (toList!869 lt!69217) lt!69227))))

(assert (=> d!40705 (= (contains!896 lt!69217 lt!69227) lt!69964)))

(declare-fun b!133634 () Bool)

(declare-fun lt!69967 () Unit!4150)

(assert (=> b!133634 (= e!87072 lt!69967)))

(assert (=> b!133634 (= lt!69967 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69217) lt!69227))))

(assert (=> b!133634 (isDefined!125 (getValueByKey!171 (toList!869 lt!69217) lt!69227))))

(declare-fun b!133635 () Bool)

(declare-fun Unit!4188 () Unit!4150)

(assert (=> b!133635 (= e!87072 Unit!4188)))

(declare-fun b!133636 () Bool)

(assert (=> b!133636 (= e!87071 (isDefined!125 (getValueByKey!171 (toList!869 lt!69217) lt!69227)))))

(assert (= (and d!40705 c!24785) b!133634))

(assert (= (and d!40705 (not c!24785)) b!133635))

(assert (= (and d!40705 (not res!64306)) b!133636))

(declare-fun m!158061 () Bool)

(assert (=> d!40705 m!158061))

(declare-fun m!158063 () Bool)

(assert (=> b!133634 m!158063))

(declare-fun m!158065 () Bool)

(assert (=> b!133634 m!158065))

(assert (=> b!133634 m!158065))

(declare-fun m!158067 () Bool)

(assert (=> b!133634 m!158067))

(assert (=> b!133636 m!158065))

(assert (=> b!133636 m!158065))

(assert (=> b!133636 m!158067))

(assert (=> d!40355 d!40705))

(declare-fun d!40707 () Bool)

(declare-fun e!87073 () Bool)

(assert (=> d!40707 e!87073))

(declare-fun res!64307 () Bool)

(assert (=> d!40707 (=> res!64307 e!87073)))

(declare-fun lt!69968 () Bool)

(assert (=> d!40707 (= res!64307 (not lt!69968))))

(declare-fun lt!69970 () Bool)

(assert (=> d!40707 (= lt!69968 lt!69970)))

(declare-fun lt!69969 () Unit!4150)

(declare-fun e!87074 () Unit!4150)

(assert (=> d!40707 (= lt!69969 e!87074)))

(declare-fun c!24786 () Bool)

(assert (=> d!40707 (= c!24786 lt!69970)))

(assert (=> d!40707 (= lt!69970 (containsKey!175 (toList!869 lt!69488) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!40707 (= (contains!896 lt!69488 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!69968)))

(declare-fun b!133637 () Bool)

(declare-fun lt!69971 () Unit!4150)

(assert (=> b!133637 (= e!87074 lt!69971)))

(assert (=> b!133637 (= lt!69971 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69488) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133637 (isDefined!125 (getValueByKey!171 (toList!869 lt!69488) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133638 () Bool)

(declare-fun Unit!4189 () Unit!4150)

(assert (=> b!133638 (= e!87074 Unit!4189)))

(declare-fun b!133639 () Bool)

(assert (=> b!133639 (= e!87073 (isDefined!125 (getValueByKey!171 (toList!869 lt!69488) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!40707 c!24786) b!133637))

(assert (= (and d!40707 (not c!24786)) b!133638))

(assert (= (and d!40707 (not res!64307)) b!133639))

(assert (=> d!40707 m!156533))

(declare-fun m!158069 () Bool)

(assert (=> d!40707 m!158069))

(assert (=> b!133637 m!156533))

(declare-fun m!158071 () Bool)

(assert (=> b!133637 m!158071))

(assert (=> b!133637 m!156533))

(declare-fun m!158073 () Bool)

(assert (=> b!133637 m!158073))

(assert (=> b!133637 m!158073))

(declare-fun m!158075 () Bool)

(assert (=> b!133637 m!158075))

(assert (=> b!133639 m!156533))

(assert (=> b!133639 m!158073))

(assert (=> b!133639 m!158073))

(assert (=> b!133639 m!158075))

(assert (=> b!133003 d!40707))

(declare-fun d!40709 () Bool)

(assert (=> d!40709 (= (get!1491 (getValueByKey!171 (toList!869 lt!69229) lt!69228)) (v!3201 (getValueByKey!171 (toList!869 lt!69229) lt!69228)))))

(assert (=> d!40377 d!40709))

(declare-fun b!133640 () Bool)

(declare-fun e!87075 () Option!177)

(assert (=> b!133640 (= e!87075 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69229)))))))

(declare-fun b!133643 () Bool)

(declare-fun e!87076 () Option!177)

(assert (=> b!133643 (= e!87076 None!175)))

(declare-fun b!133642 () Bool)

(assert (=> b!133642 (= e!87076 (getValueByKey!171 (t!6198 (toList!869 lt!69229)) lt!69228))))

(declare-fun b!133641 () Bool)

(assert (=> b!133641 (= e!87075 e!87076)))

(declare-fun c!24788 () Bool)

(assert (=> b!133641 (= c!24788 (and ((_ is Cons!1731) (toList!869 lt!69229)) (not (= (_1!1314 (h!2336 (toList!869 lt!69229))) lt!69228))))))

(declare-fun d!40711 () Bool)

(declare-fun c!24787 () Bool)

(assert (=> d!40711 (= c!24787 (and ((_ is Cons!1731) (toList!869 lt!69229)) (= (_1!1314 (h!2336 (toList!869 lt!69229))) lt!69228)))))

(assert (=> d!40711 (= (getValueByKey!171 (toList!869 lt!69229) lt!69228) e!87075)))

(assert (= (and d!40711 c!24787) b!133640))

(assert (= (and d!40711 (not c!24787)) b!133641))

(assert (= (and b!133641 c!24788) b!133642))

(assert (= (and b!133641 (not c!24788)) b!133643))

(declare-fun m!158077 () Bool)

(assert (=> b!133642 m!158077))

(assert (=> d!40377 d!40711))

(declare-fun d!40713 () Bool)

(declare-fun lt!69972 () Bool)

(assert (=> d!40713 (= lt!69972 (select (content!132 (toList!869 lt!69442)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun e!87078 () Bool)

(assert (=> d!40713 (= lt!69972 e!87078)))

(declare-fun res!64308 () Bool)

(assert (=> d!40713 (=> (not res!64308) (not e!87078))))

(assert (=> d!40713 (= res!64308 ((_ is Cons!1731) (toList!869 lt!69442)))))

(assert (=> d!40713 (= (contains!898 (toList!869 lt!69442) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69972)))

(declare-fun b!133644 () Bool)

(declare-fun e!87077 () Bool)

(assert (=> b!133644 (= e!87078 e!87077)))

(declare-fun res!64309 () Bool)

(assert (=> b!133644 (=> res!64309 e!87077)))

(assert (=> b!133644 (= res!64309 (= (h!2336 (toList!869 lt!69442)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!133645 () Bool)

(assert (=> b!133645 (= e!87077 (contains!898 (t!6198 (toList!869 lt!69442)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(assert (= (and d!40713 res!64308) b!133644))

(assert (= (and b!133644 (not res!64309)) b!133645))

(declare-fun m!158079 () Bool)

(assert (=> d!40713 m!158079))

(declare-fun m!158081 () Bool)

(assert (=> d!40713 m!158081))

(declare-fun m!158083 () Bool)

(assert (=> b!133645 m!158083))

(assert (=> b!132969 d!40713))

(declare-fun d!40715 () Bool)

(assert (=> d!40715 (= (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69223)) (v!3201 (getValueByKey!171 (toList!869 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69223)))))

(assert (=> d!40361 d!40715))

(declare-fun e!87079 () Option!177)

(declare-fun b!133646 () Bool)

(assert (=> b!133646 (= e!87079 (Some!176 (_2!1314 (h!2336 (toList!869 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))))

(declare-fun b!133649 () Bool)

(declare-fun e!87080 () Option!177)

(assert (=> b!133649 (= e!87080 None!175)))

(declare-fun b!133648 () Bool)

(assert (=> b!133648 (= e!87080 (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!69223))))

(declare-fun b!133647 () Bool)

(assert (=> b!133647 (= e!87079 e!87080)))

(declare-fun c!24790 () Bool)

(assert (=> b!133647 (= c!24790 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) (not (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) lt!69223))))))

(declare-fun c!24789 () Bool)

(declare-fun d!40717 () Bool)

(assert (=> d!40717 (= c!24789 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) lt!69223)))))

(assert (=> d!40717 (= (getValueByKey!171 (toList!869 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69223) e!87079)))

(assert (= (and d!40717 c!24789) b!133646))

(assert (= (and d!40717 (not c!24789)) b!133647))

(assert (= (and b!133647 c!24790) b!133648))

(assert (= (and b!133647 (not c!24790)) b!133649))

(declare-fun m!158085 () Bool)

(assert (=> b!133648 m!158085))

(assert (=> d!40361 d!40717))

(declare-fun d!40719 () Bool)

(declare-fun lt!69973 () Bool)

(assert (=> d!40719 (= lt!69973 (select (content!132 (toList!869 lt!69449)) (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun e!87082 () Bool)

(assert (=> d!40719 (= lt!69973 e!87082)))

(declare-fun res!64310 () Bool)

(assert (=> d!40719 (=> (not res!64310) (not e!87082))))

(assert (=> d!40719 (= res!64310 ((_ is Cons!1731) (toList!869 lt!69449)))))

(assert (=> d!40719 (= (contains!898 (toList!869 lt!69449) (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69973)))

(declare-fun b!133650 () Bool)

(declare-fun e!87081 () Bool)

(assert (=> b!133650 (= e!87082 e!87081)))

(declare-fun res!64311 () Bool)

(assert (=> b!133650 (=> res!64311 e!87081)))

(assert (=> b!133650 (= res!64311 (= (h!2336 (toList!869 lt!69449)) (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!133651 () Bool)

(assert (=> b!133651 (= e!87081 (contains!898 (t!6198 (toList!869 lt!69449)) (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(assert (= (and d!40719 res!64310) b!133650))

(assert (= (and b!133650 (not res!64311)) b!133651))

(declare-fun m!158087 () Bool)

(assert (=> d!40719 m!158087))

(declare-fun m!158089 () Bool)

(assert (=> d!40719 m!158089))

(declare-fun m!158091 () Bool)

(assert (=> b!133651 m!158091))

(assert (=> b!132971 d!40719))

(declare-fun d!40721 () Bool)

(declare-fun e!87083 () Bool)

(assert (=> d!40721 e!87083))

(declare-fun res!64312 () Bool)

(assert (=> d!40721 (=> res!64312 e!87083)))

(declare-fun lt!69974 () Bool)

(assert (=> d!40721 (= res!64312 (not lt!69974))))

(declare-fun lt!69976 () Bool)

(assert (=> d!40721 (= lt!69974 lt!69976)))

(declare-fun lt!69975 () Unit!4150)

(declare-fun e!87084 () Unit!4150)

(assert (=> d!40721 (= lt!69975 e!87084)))

(declare-fun c!24791 () Bool)

(assert (=> d!40721 (= c!24791 lt!69976)))

(assert (=> d!40721 (= lt!69976 (containsKey!175 (toList!869 lt!69416) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40721 (= (contains!896 lt!69416 #b1000000000000000000000000000000000000000000000000000000000000000) lt!69974)))

(declare-fun b!133652 () Bool)

(declare-fun lt!69977 () Unit!4150)

(assert (=> b!133652 (= e!87084 lt!69977)))

(assert (=> b!133652 (= lt!69977 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69416) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133652 (isDefined!125 (getValueByKey!171 (toList!869 lt!69416) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133653 () Bool)

(declare-fun Unit!4190 () Unit!4150)

(assert (=> b!133653 (= e!87084 Unit!4190)))

(declare-fun b!133654 () Bool)

(assert (=> b!133654 (= e!87083 (isDefined!125 (getValueByKey!171 (toList!869 lt!69416) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40721 c!24791) b!133652))

(assert (= (and d!40721 (not c!24791)) b!133653))

(assert (= (and d!40721 (not res!64312)) b!133654))

(declare-fun m!158093 () Bool)

(assert (=> d!40721 m!158093))

(declare-fun m!158095 () Bool)

(assert (=> b!133652 m!158095))

(assert (=> b!133652 m!157385))

(assert (=> b!133652 m!157385))

(declare-fun m!158097 () Bool)

(assert (=> b!133652 m!158097))

(assert (=> b!133654 m!157385))

(assert (=> b!133654 m!157385))

(assert (=> b!133654 m!158097))

(assert (=> bm!14664 d!40721))

(declare-fun d!40723 () Bool)

(declare-fun e!87085 () Bool)

(assert (=> d!40723 e!87085))

(declare-fun res!64313 () Bool)

(assert (=> d!40723 (=> res!64313 e!87085)))

(declare-fun lt!69978 () Bool)

(assert (=> d!40723 (= res!64313 (not lt!69978))))

(declare-fun lt!69980 () Bool)

(assert (=> d!40723 (= lt!69978 lt!69980)))

(declare-fun lt!69979 () Unit!4150)

(declare-fun e!87086 () Unit!4150)

(assert (=> d!40723 (= lt!69979 e!87086)))

(declare-fun c!24792 () Bool)

(assert (=> d!40723 (= c!24792 lt!69980)))

(assert (=> d!40723 (= lt!69980 (containsKey!175 (toList!869 lt!69405) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40723 (= (contains!896 lt!69405 #b0000000000000000000000000000000000000000000000000000000000000000) lt!69978)))

(declare-fun b!133655 () Bool)

(declare-fun lt!69981 () Unit!4150)

(assert (=> b!133655 (= e!87086 lt!69981)))

(assert (=> b!133655 (= lt!69981 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69405) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133655 (isDefined!125 (getValueByKey!171 (toList!869 lt!69405) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133656 () Bool)

(declare-fun Unit!4191 () Unit!4150)

(assert (=> b!133656 (= e!87086 Unit!4191)))

(declare-fun b!133657 () Bool)

(assert (=> b!133657 (= e!87085 (isDefined!125 (getValueByKey!171 (toList!869 lt!69405) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40723 c!24792) b!133655))

(assert (= (and d!40723 (not c!24792)) b!133656))

(assert (= (and d!40723 (not res!64313)) b!133657))

(declare-fun m!158099 () Bool)

(assert (=> d!40723 m!158099))

(declare-fun m!158101 () Bool)

(assert (=> b!133655 m!158101))

(declare-fun m!158103 () Bool)

(assert (=> b!133655 m!158103))

(assert (=> b!133655 m!158103))

(declare-fun m!158105 () Bool)

(assert (=> b!133655 m!158105))

(assert (=> b!133657 m!158103))

(assert (=> b!133657 m!158103))

(assert (=> b!133657 m!158105))

(assert (=> d!40329 d!40723))

(assert (=> d!40329 d!40267))

(declare-fun b!133658 () Bool)

(declare-fun lt!69982 () Unit!4150)

(declare-fun lt!69986 () Unit!4150)

(assert (=> b!133658 (= lt!69982 lt!69986)))

(declare-fun lt!69983 () ListLongMap!1707)

(declare-fun lt!69987 () (_ BitVec 64))

(declare-fun lt!69984 () (_ BitVec 64))

(declare-fun lt!69985 () V!3483)

(assert (=> b!133658 (not (contains!896 (+!170 lt!69983 (tuple2!2609 lt!69987 lt!69985)) lt!69984))))

(assert (=> b!133658 (= lt!69986 (addStillNotContains!63 lt!69983 lt!69987 lt!69985 lt!69984))))

(assert (=> b!133658 (= lt!69984 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133658 (= lt!69985 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133658 (= lt!69987 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!14759 () ListLongMap!1707)

(assert (=> b!133658 (= lt!69983 call!14759)))

(declare-fun e!87093 () ListLongMap!1707)

(assert (=> b!133658 (= e!87093 (+!170 call!14759 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun lt!69988 () ListLongMap!1707)

(declare-fun e!87090 () Bool)

(declare-fun b!133659 () Bool)

(assert (=> b!133659 (= e!87090 (= lt!69988 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (_values!2848 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992))) (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) (minValue!2720 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!133660 () Bool)

(assert (=> b!133660 (= e!87090 (isEmpty!414 lt!69988))))

(declare-fun b!133661 () Bool)

(declare-fun e!87091 () ListLongMap!1707)

(assert (=> b!133661 (= e!87091 (ListLongMap!1708 Nil!1732))))

(declare-fun b!133662 () Bool)

(declare-fun e!87088 () Bool)

(declare-fun e!87089 () Bool)

(assert (=> b!133662 (= e!87088 e!87089)))

(declare-fun c!24796 () Bool)

(declare-fun e!87092 () Bool)

(assert (=> b!133662 (= c!24796 e!87092)))

(declare-fun res!64317 () Bool)

(assert (=> b!133662 (=> (not res!64317) (not e!87092))))

(assert (=> b!133662 (= res!64317 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!133663 () Bool)

(assert (=> b!133663 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> b!133663 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2530 (_values!2848 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun e!87087 () Bool)

(assert (=> b!133663 (= e!87087 (= (apply!116 lt!69988 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!133665 () Bool)

(assert (=> b!133665 (= e!87089 e!87087)))

(assert (=> b!133665 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun res!64316 () Bool)

(assert (=> b!133665 (= res!64316 (contains!896 lt!69988 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!133665 (=> (not res!64316) (not e!87087))))

(declare-fun b!133666 () Bool)

(assert (=> b!133666 (= e!87091 e!87093)))

(declare-fun c!24793 () Bool)

(assert (=> b!133666 (= c!24793 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!133667 () Bool)

(declare-fun res!64315 () Bool)

(assert (=> b!133667 (=> (not res!64315) (not e!87088))))

(assert (=> b!133667 (= res!64315 (not (contains!896 lt!69988 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133668 () Bool)

(assert (=> b!133668 (= e!87089 e!87090)))

(declare-fun c!24795 () Bool)

(assert (=> b!133668 (= c!24795 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun bm!14756 () Bool)

(assert (=> bm!14756 (= call!14759 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (_values!2848 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992))) (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) (minValue!2720 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun b!133669 () Bool)

(assert (=> b!133669 (= e!87092 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!133669 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!133664 () Bool)

(assert (=> b!133664 (= e!87093 call!14759)))

(declare-fun d!40725 () Bool)

(assert (=> d!40725 e!87088))

(declare-fun res!64314 () Bool)

(assert (=> d!40725 (=> (not res!64314) (not e!87088))))

(assert (=> d!40725 (= res!64314 (not (contains!896 lt!69988 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40725 (= lt!69988 e!87091)))

(declare-fun c!24794 () Bool)

(assert (=> d!40725 (= c!24794 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!40725 (validMask!0 (mask!7165 (v!3197 (underlying!454 thiss!992))))))

(assert (=> d!40725 (= (getCurrentListMapNoExtraKeys!137 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (_values!2848 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992))) (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) (minValue!2720 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992)))) lt!69988)))

(assert (= (and d!40725 c!24794) b!133661))

(assert (= (and d!40725 (not c!24794)) b!133666))

(assert (= (and b!133666 c!24793) b!133658))

(assert (= (and b!133666 (not c!24793)) b!133664))

(assert (= (or b!133658 b!133664) bm!14756))

(assert (= (and d!40725 res!64314) b!133667))

(assert (= (and b!133667 res!64315) b!133662))

(assert (= (and b!133662 res!64317) b!133669))

(assert (= (and b!133662 c!24796) b!133665))

(assert (= (and b!133662 (not c!24796)) b!133668))

(assert (= (and b!133665 res!64316) b!133663))

(assert (= (and b!133668 c!24795) b!133659))

(assert (= (and b!133668 (not c!24795)) b!133660))

(declare-fun b_lambda!5979 () Bool)

(assert (=> (not b_lambda!5979) (not b!133658)))

(assert (=> b!133658 t!6195))

(declare-fun b_and!8309 () Bool)

(assert (= b_and!8305 (and (=> t!6195 result!3995) b_and!8309)))

(assert (=> b!133658 t!6197))

(declare-fun b_and!8311 () Bool)

(assert (= b_and!8307 (and (=> t!6197 result!3999) b_and!8311)))

(declare-fun b_lambda!5981 () Bool)

(assert (=> (not b_lambda!5981) (not b!133663)))

(assert (=> b!133663 t!6195))

(declare-fun b_and!8313 () Bool)

(assert (= b_and!8309 (and (=> t!6195 result!3995) b_and!8313)))

(assert (=> b!133663 t!6197))

(declare-fun b_and!8315 () Bool)

(assert (= b_and!8311 (and (=> t!6197 result!3999) b_and!8315)))

(declare-fun m!158107 () Bool)

(assert (=> d!40725 m!158107))

(assert (=> d!40725 m!156295))

(declare-fun m!158109 () Bool)

(assert (=> b!133659 m!158109))

(declare-fun m!158111 () Bool)

(assert (=> b!133658 m!158111))

(declare-fun m!158113 () Bool)

(assert (=> b!133658 m!158113))

(assert (=> b!133658 m!158111))

(assert (=> b!133658 m!156283))

(declare-fun m!158115 () Bool)

(assert (=> b!133658 m!158115))

(assert (=> b!133658 m!156283))

(declare-fun m!158117 () Bool)

(assert (=> b!133658 m!158117))

(declare-fun m!158119 () Bool)

(assert (=> b!133658 m!158119))

(assert (=> b!133658 m!158115))

(declare-fun m!158121 () Bool)

(assert (=> b!133658 m!158121))

(declare-fun m!158123 () Bool)

(assert (=> b!133658 m!158123))

(assert (=> b!133663 m!158121))

(declare-fun m!158125 () Bool)

(assert (=> b!133663 m!158125))

(assert (=> b!133663 m!156283))

(assert (=> b!133663 m!158121))

(assert (=> b!133663 m!158115))

(assert (=> b!133663 m!156283))

(assert (=> b!133663 m!158117))

(assert (=> b!133663 m!158115))

(assert (=> bm!14756 m!158109))

(assert (=> b!133666 m!158121))

(assert (=> b!133666 m!158121))

(declare-fun m!158127 () Bool)

(assert (=> b!133666 m!158127))

(declare-fun m!158129 () Bool)

(assert (=> b!133667 m!158129))

(assert (=> b!133665 m!158121))

(assert (=> b!133665 m!158121))

(declare-fun m!158131 () Bool)

(assert (=> b!133665 m!158131))

(assert (=> b!133669 m!158121))

(assert (=> b!133669 m!158121))

(assert (=> b!133669 m!158127))

(declare-fun m!158133 () Bool)

(assert (=> b!133660 m!158133))

(assert (=> bm!14659 d!40725))

(declare-fun d!40727 () Bool)

(assert (=> d!40727 (isDefined!125 (getValueByKey!171 (toList!869 e!86545) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun lt!69989 () Unit!4150)

(assert (=> d!40727 (= lt!69989 (choose!831 (toList!869 e!86545) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun e!87094 () Bool)

(assert (=> d!40727 e!87094))

(declare-fun res!64318 () Bool)

(assert (=> d!40727 (=> (not res!64318) (not e!87094))))

(assert (=> d!40727 (= res!64318 (isStrictlySorted!317 (toList!869 e!86545)))))

(assert (=> d!40727 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 e!86545) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) lt!69989)))

(declare-fun b!133670 () Bool)

(assert (=> b!133670 (= e!87094 (containsKey!175 (toList!869 e!86545) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40727 res!64318) b!133670))

(assert (=> d!40727 m!156287))

(assert (=> d!40727 m!156553))

(assert (=> d!40727 m!156553))

(assert (=> d!40727 m!156555))

(assert (=> d!40727 m!156287))

(declare-fun m!158135 () Bool)

(assert (=> d!40727 m!158135))

(declare-fun m!158137 () Bool)

(assert (=> d!40727 m!158137))

(assert (=> b!133670 m!156287))

(assert (=> b!133670 m!156549))

(assert (=> b!132833 d!40727))

(assert (=> b!132833 d!40463))

(assert (=> b!132833 d!40465))

(declare-fun d!40729 () Bool)

(declare-fun res!64319 () Bool)

(declare-fun e!87095 () Bool)

(assert (=> d!40729 (=> (not res!64319) (not e!87095))))

(assert (=> d!40729 (= res!64319 (simpleValid!91 (_2!1315 lt!69589)))))

(assert (=> d!40729 (= (valid!521 (_2!1315 lt!69589)) e!87095)))

(declare-fun b!133671 () Bool)

(declare-fun res!64320 () Bool)

(assert (=> b!133671 (=> (not res!64320) (not e!87095))))

(assert (=> b!133671 (= res!64320 (= (arrayCountValidKeys!0 (_keys!4614 (_2!1315 lt!69589)) #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69589)))) (_size!598 (_2!1315 lt!69589))))))

(declare-fun b!133672 () Bool)

(declare-fun res!64321 () Bool)

(assert (=> b!133672 (=> (not res!64321) (not e!87095))))

(assert (=> b!133672 (= res!64321 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4614 (_2!1315 lt!69589)) (mask!7165 (_2!1315 lt!69589))))))

(declare-fun b!133673 () Bool)

(assert (=> b!133673 (= e!87095 (arrayNoDuplicates!0 (_keys!4614 (_2!1315 lt!69589)) #b00000000000000000000000000000000 Nil!1733))))

(assert (= (and d!40729 res!64319) b!133671))

(assert (= (and b!133671 res!64320) b!133672))

(assert (= (and b!133672 res!64321) b!133673))

(declare-fun m!158139 () Bool)

(assert (=> d!40729 m!158139))

(declare-fun m!158141 () Bool)

(assert (=> b!133671 m!158141))

(declare-fun m!158143 () Bool)

(assert (=> b!133672 m!158143))

(declare-fun m!158145 () Bool)

(assert (=> b!133673 m!158145))

(assert (=> b!133081 d!40729))

(declare-fun d!40731 () Bool)

(declare-fun e!87096 () Bool)

(assert (=> d!40731 e!87096))

(declare-fun res!64322 () Bool)

(assert (=> d!40731 (=> res!64322 e!87096)))

(declare-fun lt!69990 () Bool)

(assert (=> d!40731 (= res!64322 (not lt!69990))))

(declare-fun lt!69992 () Bool)

(assert (=> d!40731 (= lt!69990 lt!69992)))

(declare-fun lt!69991 () Unit!4150)

(declare-fun e!87097 () Unit!4150)

(assert (=> d!40731 (= lt!69991 e!87097)))

(declare-fun c!24797 () Bool)

(assert (=> d!40731 (= c!24797 lt!69992)))

(assert (=> d!40731 (= lt!69992 (containsKey!175 (toList!869 lt!69416) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!40731 (= (contains!896 lt!69416 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!69990)))

(declare-fun b!133674 () Bool)

(declare-fun lt!69993 () Unit!4150)

(assert (=> b!133674 (= e!87097 lt!69993)))

(assert (=> b!133674 (= lt!69993 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69416) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133674 (isDefined!125 (getValueByKey!171 (toList!869 lt!69416) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133675 () Bool)

(declare-fun Unit!4192 () Unit!4150)

(assert (=> b!133675 (= e!87097 Unit!4192)))

(declare-fun b!133676 () Bool)

(assert (=> b!133676 (= e!87096 (isDefined!125 (getValueByKey!171 (toList!869 lt!69416) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!40731 c!24797) b!133674))

(assert (= (and d!40731 (not c!24797)) b!133675))

(assert (= (and d!40731 (not res!64322)) b!133676))

(assert (=> d!40731 m!156533))

(declare-fun m!158147 () Bool)

(assert (=> d!40731 m!158147))

(assert (=> b!133674 m!156533))

(declare-fun m!158149 () Bool)

(assert (=> b!133674 m!158149))

(assert (=> b!133674 m!156533))

(declare-fun m!158151 () Bool)

(assert (=> b!133674 m!158151))

(assert (=> b!133674 m!158151))

(declare-fun m!158153 () Bool)

(assert (=> b!133674 m!158153))

(assert (=> b!133676 m!156533))

(assert (=> b!133676 m!158151))

(assert (=> b!133676 m!158151))

(assert (=> b!133676 m!158153))

(assert (=> b!132936 d!40731))

(declare-fun d!40733 () Bool)

(assert (not d!40733))

(assert (=> b!132888 d!40733))

(assert (=> b!132999 d!40473))

(assert (=> b!133124 d!40547))

(declare-fun d!40735 () Bool)

(declare-fun lt!69994 () Bool)

(assert (=> d!40735 (= lt!69994 (select (content!132 (toList!869 lt!69407)) (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun e!87099 () Bool)

(assert (=> d!40735 (= lt!69994 e!87099)))

(declare-fun res!64323 () Bool)

(assert (=> d!40735 (=> (not res!64323) (not e!87099))))

(assert (=> d!40735 (= res!64323 ((_ is Cons!1731) (toList!869 lt!69407)))))

(assert (=> d!40735 (= (contains!898 (toList!869 lt!69407) (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69994)))

(declare-fun b!133677 () Bool)

(declare-fun e!87098 () Bool)

(assert (=> b!133677 (= e!87099 e!87098)))

(declare-fun res!64324 () Bool)

(assert (=> b!133677 (=> res!64324 e!87098)))

(assert (=> b!133677 (= res!64324 (= (h!2336 (toList!869 lt!69407)) (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133678 () Bool)

(assert (=> b!133678 (= e!87098 (contains!898 (t!6198 (toList!869 lt!69407)) (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!40735 res!64323) b!133677))

(assert (= (and b!133677 (not res!64324)) b!133678))

(declare-fun m!158155 () Bool)

(assert (=> d!40735 m!158155))

(declare-fun m!158157 () Bool)

(assert (=> d!40735 m!158157))

(declare-fun m!158159 () Bool)

(assert (=> b!133678 m!158159))

(assert (=> b!132926 d!40735))

(assert (=> b!133111 d!40473))

(declare-fun d!40737 () Bool)

(assert (=> d!40737 (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69380 #b00000000000000000000000000000000)))

(declare-fun lt!69995 () Unit!4150)

(assert (=> d!40737 (= lt!69995 (choose!13 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69380 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> d!40737 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (=> d!40737 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69380 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!69995)))

(declare-fun bs!5539 () Bool)

(assert (= bs!5539 d!40737))

(assert (=> bs!5539 m!156597))

(declare-fun m!158161 () Bool)

(assert (=> bs!5539 m!158161))

(assert (=> b!132880 d!40737))

(declare-fun d!40739 () Bool)

(declare-fun res!64325 () Bool)

(declare-fun e!87100 () Bool)

(assert (=> d!40739 (=> res!64325 e!87100)))

(assert (=> d!40739 (= res!64325 (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) lt!69380))))

(assert (=> d!40739 (= (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69380 #b00000000000000000000000000000000) e!87100)))

(declare-fun b!133679 () Bool)

(declare-fun e!87101 () Bool)

(assert (=> b!133679 (= e!87100 e!87101)))

(declare-fun res!64326 () Bool)

(assert (=> b!133679 (=> (not res!64326) (not e!87101))))

(assert (=> b!133679 (= res!64326 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!133680 () Bool)

(assert (=> b!133680 (= e!87101 (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69380 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40739 (not res!64325)) b!133679))

(assert (= (and b!133679 res!64326) b!133680))

(assert (=> d!40739 m!156487))

(declare-fun m!158163 () Bool)

(assert (=> b!133680 m!158163))

(assert (=> b!132880 d!40739))

(declare-fun b!133681 () Bool)

(declare-fun e!87104 () SeekEntryResult!285)

(declare-fun lt!69997 () SeekEntryResult!285)

(assert (=> b!133681 (= e!87104 (MissingZero!285 (index!3302 lt!69997)))))

(declare-fun b!133682 () Bool)

(assert (=> b!133682 (= e!87104 (seekKeyOrZeroReturnVacant!0 (x!15602 lt!69997) (index!3302 lt!69997) (index!3302 lt!69997) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun b!133683 () Bool)

(declare-fun c!24798 () Bool)

(declare-fun lt!69998 () (_ BitVec 64))

(assert (=> b!133683 (= c!24798 (= lt!69998 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87103 () SeekEntryResult!285)

(assert (=> b!133683 (= e!87103 e!87104)))

(declare-fun b!133684 () Bool)

(declare-fun e!87102 () SeekEntryResult!285)

(assert (=> b!133684 (= e!87102 Undefined!285)))

(declare-fun b!133685 () Bool)

(assert (=> b!133685 (= e!87102 e!87103)))

(assert (=> b!133685 (= lt!69998 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3302 lt!69997)))))

(declare-fun c!24800 () Bool)

(assert (=> b!133685 (= c!24800 (= lt!69998 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!40741 () Bool)

(declare-fun lt!69996 () SeekEntryResult!285)

(assert (=> d!40741 (and (or ((_ is Undefined!285) lt!69996) (not ((_ is Found!285) lt!69996)) (and (bvsge (index!3301 lt!69996) #b00000000000000000000000000000000) (bvslt (index!3301 lt!69996) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))) (or ((_ is Undefined!285) lt!69996) ((_ is Found!285) lt!69996) (not ((_ is MissingZero!285) lt!69996)) (and (bvsge (index!3300 lt!69996) #b00000000000000000000000000000000) (bvslt (index!3300 lt!69996) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))) (or ((_ is Undefined!285) lt!69996) ((_ is Found!285) lt!69996) ((_ is MissingZero!285) lt!69996) (not ((_ is MissingVacant!285) lt!69996)) (and (bvsge (index!3303 lt!69996) #b00000000000000000000000000000000) (bvslt (index!3303 lt!69996) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))) (or ((_ is Undefined!285) lt!69996) (ite ((_ is Found!285) lt!69996) (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3301 lt!69996)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (ite ((_ is MissingZero!285) lt!69996) (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3300 lt!69996)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!285) lt!69996) (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3303 lt!69996)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40741 (= lt!69996 e!87102)))

(declare-fun c!24799 () Bool)

(assert (=> d!40741 (= c!24799 (and ((_ is Intermediate!285) lt!69997) (undefined!1097 lt!69997)))))

(assert (=> d!40741 (= lt!69997 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7165 (v!3197 (underlying!454 thiss!992)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(assert (=> d!40741 (validMask!0 (mask!7165 (v!3197 (underlying!454 thiss!992))))))

(assert (=> d!40741 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))) lt!69996)))

(declare-fun b!133686 () Bool)

(assert (=> b!133686 (= e!87103 (Found!285 (index!3302 lt!69997)))))

(assert (= (and d!40741 c!24799) b!133684))

(assert (= (and d!40741 (not c!24799)) b!133685))

(assert (= (and b!133685 c!24800) b!133686))

(assert (= (and b!133685 (not c!24800)) b!133683))

(assert (= (and b!133683 c!24798) b!133681))

(assert (= (and b!133683 (not c!24798)) b!133682))

(assert (=> b!133682 m!156593))

(declare-fun m!158165 () Bool)

(assert (=> b!133682 m!158165))

(declare-fun m!158167 () Bool)

(assert (=> b!133685 m!158167))

(declare-fun m!158169 () Bool)

(assert (=> d!40741 m!158169))

(assert (=> d!40741 m!156593))

(declare-fun m!158171 () Bool)

(assert (=> d!40741 m!158171))

(declare-fun m!158173 () Bool)

(assert (=> d!40741 m!158173))

(declare-fun m!158175 () Bool)

(assert (=> d!40741 m!158175))

(assert (=> d!40741 m!156295))

(declare-fun m!158177 () Bool)

(assert (=> d!40741 m!158177))

(assert (=> d!40741 m!156593))

(assert (=> d!40741 m!158169))

(assert (=> b!132880 d!40741))

(assert (=> d!40381 d!40337))

(declare-fun d!40743 () Bool)

(declare-fun e!87107 () Bool)

(assert (=> d!40743 e!87107))

(declare-fun res!64332 () Bool)

(assert (=> d!40743 (=> (not res!64332) (not e!87107))))

(declare-fun lt!70001 () SeekEntryResult!285)

(assert (=> d!40743 (= res!64332 ((_ is Found!285) lt!70001))))

(assert (=> d!40743 (= lt!70001 (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(assert (=> d!40743 true))

(declare-fun _$33!114 () Unit!4150)

(assert (=> d!40743 (= (choose!830 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)) _$33!114)))

(declare-fun b!133691 () Bool)

(declare-fun res!64331 () Bool)

(assert (=> b!133691 (=> (not res!64331) (not e!87107))))

(assert (=> b!133691 (= res!64331 (inRange!0 (index!3301 lt!70001) (mask!7165 newMap!16)))))

(declare-fun b!133692 () Bool)

(assert (=> b!133692 (= e!87107 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!70001)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40743 res!64332) b!133691))

(assert (= (and b!133691 res!64331) b!133692))

(assert (=> d!40743 m!156287))

(assert (=> d!40743 m!156445))

(declare-fun m!158179 () Bool)

(assert (=> b!133691 m!158179))

(declare-fun m!158181 () Bool)

(assert (=> b!133692 m!158181))

(assert (=> d!40381 d!40743))

(assert (=> d!40381 d!40475))

(assert (=> d!40385 d!40475))

(assert (=> b!132931 d!40473))

(assert (=> b!133077 d!40319))

(assert (=> b!133134 d!40287))

(assert (=> bm!14673 d!40565))

(declare-fun b!133693 () Bool)

(declare-fun e!87109 () Bool)

(declare-fun call!14760 () Bool)

(assert (=> b!133693 (= e!87109 call!14760)))

(declare-fun b!133694 () Bool)

(declare-fun e!87110 () Bool)

(assert (=> b!133694 (= e!87109 e!87110)))

(declare-fun lt!70003 () (_ BitVec 64))

(assert (=> b!133694 (= lt!70003 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000))))

(declare-fun lt!70004 () Unit!4150)

(assert (=> b!133694 (= lt!70004 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (_2!1315 lt!69327)) lt!70003 #b00000000000000000000000000000000))))

(assert (=> b!133694 (arrayContainsKey!0 (_keys!4614 (_2!1315 lt!69327)) lt!70003 #b00000000000000000000000000000000)))

(declare-fun lt!70002 () Unit!4150)

(assert (=> b!133694 (= lt!70002 lt!70004)))

(declare-fun res!64333 () Bool)

(assert (=> b!133694 (= res!64333 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000) (_keys!4614 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327))) (Found!285 #b00000000000000000000000000000000)))))

(assert (=> b!133694 (=> (not res!64333) (not e!87110))))

(declare-fun b!133695 () Bool)

(assert (=> b!133695 (= e!87110 call!14760)))

(declare-fun b!133696 () Bool)

(declare-fun e!87108 () Bool)

(assert (=> b!133696 (= e!87108 e!87109)))

(declare-fun c!24801 () Bool)

(assert (=> b!133696 (= c!24801 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(declare-fun bm!14757 () Bool)

(assert (=> bm!14757 (= call!14760 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4614 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327))))))

(declare-fun d!40745 () Bool)

(declare-fun res!64334 () Bool)

(assert (=> d!40745 (=> res!64334 e!87108)))

(assert (=> d!40745 (= res!64334 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(assert (=> d!40745 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4614 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327))) e!87108)))

(assert (= (and d!40745 (not res!64334)) b!133696))

(assert (= (and b!133696 c!24801) b!133694))

(assert (= (and b!133696 (not c!24801)) b!133693))

(assert (= (and b!133694 res!64333) b!133695))

(assert (= (or b!133695 b!133693) bm!14757))

(assert (=> b!133694 m!157397))

(declare-fun m!158183 () Bool)

(assert (=> b!133694 m!158183))

(declare-fun m!158185 () Bool)

(assert (=> b!133694 m!158185))

(assert (=> b!133694 m!157397))

(declare-fun m!158187 () Bool)

(assert (=> b!133694 m!158187))

(assert (=> b!133696 m!157397))

(assert (=> b!133696 m!157397))

(assert (=> b!133696 m!157445))

(declare-fun m!158189 () Bool)

(assert (=> bm!14757 m!158189))

(assert (=> b!132813 d!40745))

(assert (=> b!132852 d!40473))

(declare-fun d!40747 () Bool)

(declare-fun e!87111 () Bool)

(assert (=> d!40747 e!87111))

(declare-fun res!64335 () Bool)

(assert (=> d!40747 (=> res!64335 e!87111)))

(declare-fun lt!70005 () Bool)

(assert (=> d!40747 (= res!64335 (not lt!70005))))

(declare-fun lt!70007 () Bool)

(assert (=> d!40747 (= lt!70005 lt!70007)))

(declare-fun lt!70006 () Unit!4150)

(declare-fun e!87112 () Unit!4150)

(assert (=> d!40747 (= lt!70006 e!87112)))

(declare-fun c!24802 () Bool)

(assert (=> d!40747 (= c!24802 lt!70007)))

(assert (=> d!40747 (= lt!70007 (containsKey!175 (toList!869 lt!69442) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40747 (= (contains!896 lt!69442 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!70005)))

(declare-fun b!133697 () Bool)

(declare-fun lt!70008 () Unit!4150)

(assert (=> b!133697 (= e!87112 lt!70008)))

(assert (=> b!133697 (= lt!70008 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69442) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> b!133697 (isDefined!125 (getValueByKey!171 (toList!869 lt!69442) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133698 () Bool)

(declare-fun Unit!4193 () Unit!4150)

(assert (=> b!133698 (= e!87112 Unit!4193)))

(declare-fun b!133699 () Bool)

(assert (=> b!133699 (= e!87111 (isDefined!125 (getValueByKey!171 (toList!869 lt!69442) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!40747 c!24802) b!133697))

(assert (= (and d!40747 (not c!24802)) b!133698))

(assert (= (and d!40747 (not res!64335)) b!133699))

(declare-fun m!158191 () Bool)

(assert (=> d!40747 m!158191))

(declare-fun m!158193 () Bool)

(assert (=> b!133697 m!158193))

(assert (=> b!133697 m!156731))

(assert (=> b!133697 m!156731))

(declare-fun m!158195 () Bool)

(assert (=> b!133697 m!158195))

(assert (=> b!133699 m!156731))

(assert (=> b!133699 m!156731))

(assert (=> b!133699 m!158195))

(assert (=> d!40347 d!40747))

(declare-fun b!133700 () Bool)

(declare-fun e!87113 () Option!177)

(assert (=> b!133700 (= e!87113 (Some!176 (_2!1314 (h!2336 lt!69444))))))

(declare-fun b!133703 () Bool)

(declare-fun e!87114 () Option!177)

(assert (=> b!133703 (= e!87114 None!175)))

(declare-fun b!133702 () Bool)

(assert (=> b!133702 (= e!87114 (getValueByKey!171 (t!6198 lt!69444) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133701 () Bool)

(assert (=> b!133701 (= e!87113 e!87114)))

(declare-fun c!24804 () Bool)

(assert (=> b!133701 (= c!24804 (and ((_ is Cons!1731) lt!69444) (not (= (_1!1314 (h!2336 lt!69444)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun d!40749 () Bool)

(declare-fun c!24803 () Bool)

(assert (=> d!40749 (= c!24803 (and ((_ is Cons!1731) lt!69444) (= (_1!1314 (h!2336 lt!69444)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40749 (= (getValueByKey!171 lt!69444 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!87113)))

(assert (= (and d!40749 c!24803) b!133700))

(assert (= (and d!40749 (not c!24803)) b!133701))

(assert (= (and b!133701 c!24804) b!133702))

(assert (= (and b!133701 (not c!24804)) b!133703))

(declare-fun m!158197 () Bool)

(assert (=> b!133702 m!158197))

(assert (=> d!40347 d!40749))

(declare-fun d!40751 () Bool)

(assert (=> d!40751 (= (getValueByKey!171 lt!69444 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun lt!70009 () Unit!4150)

(assert (=> d!40751 (= lt!70009 (choose!834 lt!69444 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun e!87115 () Bool)

(assert (=> d!40751 e!87115))

(declare-fun res!64336 () Bool)

(assert (=> d!40751 (=> (not res!64336) (not e!87115))))

(assert (=> d!40751 (= res!64336 (isStrictlySorted!317 lt!69444))))

(assert (=> d!40751 (= (lemmaContainsTupThenGetReturnValue!88 lt!69444 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!70009)))

(declare-fun b!133704 () Bool)

(declare-fun res!64337 () Bool)

(assert (=> b!133704 (=> (not res!64337) (not e!87115))))

(assert (=> b!133704 (= res!64337 (containsKey!175 lt!69444 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133705 () Bool)

(assert (=> b!133705 (= e!87115 (contains!898 lt!69444 (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!40751 res!64336) b!133704))

(assert (= (and b!133704 res!64337) b!133705))

(assert (=> d!40751 m!156725))

(declare-fun m!158199 () Bool)

(assert (=> d!40751 m!158199))

(declare-fun m!158201 () Bool)

(assert (=> d!40751 m!158201))

(declare-fun m!158203 () Bool)

(assert (=> b!133704 m!158203))

(declare-fun m!158205 () Bool)

(assert (=> b!133705 m!158205))

(assert (=> d!40347 d!40751))

(declare-fun bm!14758 () Bool)

(declare-fun call!14761 () List!1735)

(declare-fun call!14762 () List!1735)

(assert (=> bm!14758 (= call!14761 call!14762)))

(declare-fun b!133706 () Bool)

(declare-fun e!87118 () Bool)

(declare-fun lt!70010 () List!1735)

(assert (=> b!133706 (= e!87118 (contains!898 lt!70010 (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!133707 () Bool)

(declare-fun e!87120 () List!1735)

(assert (=> b!133707 (= e!87120 call!14762)))

(declare-fun b!133708 () Bool)

(declare-fun res!64338 () Bool)

(assert (=> b!133708 (=> (not res!64338) (not e!87118))))

(assert (=> b!133708 (= res!64338 (containsKey!175 lt!70010 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133709 () Bool)

(declare-fun e!87116 () List!1735)

(assert (=> b!133709 (= e!87116 (insertStrictlySorted!90 (t!6198 (toList!869 call!14566)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133710 () Bool)

(declare-fun e!87117 () List!1735)

(assert (=> b!133710 (= e!87117 call!14761)))

(declare-fun bm!14759 () Bool)

(declare-fun call!14763 () List!1735)

(assert (=> bm!14759 (= call!14762 call!14763)))

(declare-fun b!133712 () Bool)

(declare-fun c!24807 () Bool)

(declare-fun c!24805 () Bool)

(assert (=> b!133712 (= e!87116 (ite c!24807 (t!6198 (toList!869 call!14566)) (ite c!24805 (Cons!1731 (h!2336 (toList!869 call!14566)) (t!6198 (toList!869 call!14566))) Nil!1732)))))

(declare-fun b!133713 () Bool)

(declare-fun e!87119 () List!1735)

(assert (=> b!133713 (= e!87119 call!14763)))

(declare-fun b!133714 () Bool)

(assert (=> b!133714 (= c!24805 (and ((_ is Cons!1731) (toList!869 call!14566)) (bvsgt (_1!1314 (h!2336 (toList!869 call!14566))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> b!133714 (= e!87120 e!87117)))

(declare-fun d!40753 () Bool)

(assert (=> d!40753 e!87118))

(declare-fun res!64339 () Bool)

(assert (=> d!40753 (=> (not res!64339) (not e!87118))))

(assert (=> d!40753 (= res!64339 (isStrictlySorted!317 lt!70010))))

(assert (=> d!40753 (= lt!70010 e!87119)))

(declare-fun c!24806 () Bool)

(assert (=> d!40753 (= c!24806 (and ((_ is Cons!1731) (toList!869 call!14566)) (bvslt (_1!1314 (h!2336 (toList!869 call!14566))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40753 (isStrictlySorted!317 (toList!869 call!14566))))

(assert (=> d!40753 (= (insertStrictlySorted!90 (toList!869 call!14566) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!70010)))

(declare-fun b!133711 () Bool)

(assert (=> b!133711 (= e!87119 e!87120)))

(assert (=> b!133711 (= c!24807 (and ((_ is Cons!1731) (toList!869 call!14566)) (= (_1!1314 (h!2336 (toList!869 call!14566))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!133715 () Bool)

(assert (=> b!133715 (= e!87117 call!14761)))

(declare-fun bm!14760 () Bool)

(assert (=> bm!14760 (= call!14763 ($colon$colon!91 e!87116 (ite c!24806 (h!2336 (toList!869 call!14566)) (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!24808 () Bool)

(assert (=> bm!14760 (= c!24808 c!24806)))

(assert (= (and d!40753 c!24806) b!133713))

(assert (= (and d!40753 (not c!24806)) b!133711))

(assert (= (and b!133711 c!24807) b!133707))

(assert (= (and b!133711 (not c!24807)) b!133714))

(assert (= (and b!133714 c!24805) b!133715))

(assert (= (and b!133714 (not c!24805)) b!133710))

(assert (= (or b!133715 b!133710) bm!14758))

(assert (= (or b!133707 bm!14758) bm!14759))

(assert (= (or b!133713 bm!14759) bm!14760))

(assert (= (and bm!14760 c!24808) b!133709))

(assert (= (and bm!14760 (not c!24808)) b!133712))

(assert (= (and d!40753 res!64339) b!133708))

(assert (= (and b!133708 res!64338) b!133706))

(declare-fun m!158207 () Bool)

(assert (=> b!133708 m!158207))

(declare-fun m!158209 () Bool)

(assert (=> b!133706 m!158209))

(declare-fun m!158211 () Bool)

(assert (=> d!40753 m!158211))

(declare-fun m!158213 () Bool)

(assert (=> d!40753 m!158213))

(declare-fun m!158215 () Bool)

(assert (=> bm!14760 m!158215))

(declare-fun m!158217 () Bool)

(assert (=> b!133709 m!158217))

(assert (=> d!40347 d!40753))

(declare-fun lt!70011 () Bool)

(declare-fun d!40755 () Bool)

(assert (=> d!40755 (= lt!70011 (select (content!132 (toList!869 lt!69376)) (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87122 () Bool)

(assert (=> d!40755 (= lt!70011 e!87122)))

(declare-fun res!64340 () Bool)

(assert (=> d!40755 (=> (not res!64340) (not e!87122))))

(assert (=> d!40755 (= res!64340 ((_ is Cons!1731) (toList!869 lt!69376)))))

(assert (=> d!40755 (= (contains!898 (toList!869 lt!69376) (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70011)))

(declare-fun b!133716 () Bool)

(declare-fun e!87121 () Bool)

(assert (=> b!133716 (= e!87122 e!87121)))

(declare-fun res!64341 () Bool)

(assert (=> b!133716 (=> res!64341 e!87121)))

(assert (=> b!133716 (= res!64341 (= (h!2336 (toList!869 lt!69376)) (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133717 () Bool)

(assert (=> b!133717 (= e!87121 (contains!898 (t!6198 (toList!869 lt!69376)) (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!40755 res!64340) b!133716))

(assert (= (and b!133716 (not res!64341)) b!133717))

(declare-fun m!158219 () Bool)

(assert (=> d!40755 m!158219))

(declare-fun m!158221 () Bool)

(assert (=> d!40755 m!158221))

(declare-fun m!158223 () Bool)

(assert (=> b!133717 m!158223))

(assert (=> b!132878 d!40755))

(declare-fun d!40757 () Bool)

(declare-fun res!64342 () Bool)

(declare-fun e!87123 () Bool)

(assert (=> d!40757 (=> res!64342 e!87123)))

(assert (=> d!40757 (= res!64342 (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!69337))))

(assert (=> d!40757 (= (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69337 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!87123)))

(declare-fun b!133718 () Bool)

(declare-fun e!87124 () Bool)

(assert (=> b!133718 (= e!87123 e!87124)))

(declare-fun res!64343 () Bool)

(assert (=> b!133718 (=> (not res!64343) (not e!87124))))

(assert (=> b!133718 (= res!64343 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!133719 () Bool)

(assert (=> b!133719 (= e!87124 (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69337 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!40757 (not res!64342)) b!133718))

(assert (= (and b!133718 res!64343) b!133719))

(assert (=> d!40757 m!156593))

(declare-fun m!158225 () Bool)

(assert (=> b!133719 m!158225))

(assert (=> b!133136 d!40757))

(assert (=> b!133152 d!40669))

(declare-fun d!40759 () Bool)

(assert (=> d!40759 (= (apply!116 lt!69510 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!69510) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5540 () Bool)

(assert (= bs!5540 d!40759))

(assert (=> bs!5540 m!157123))

(assert (=> bs!5540 m!157123))

(declare-fun m!158227 () Bool)

(assert (=> bs!5540 m!158227))

(assert (=> b!133015 d!40759))

(declare-fun d!40761 () Bool)

(assert (=> d!40761 (= (isEmpty!415 (getValueByKey!171 (toList!869 lt!69161) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))) (not ((_ is Some!176) (getValueByKey!171 (toList!869 lt!69161) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))))

(assert (=> d!40393 d!40761))

(declare-fun d!40763 () Bool)

(assert (=> d!40763 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69227))))

(declare-fun lt!70012 () Unit!4150)

(assert (=> d!40763 (= lt!70012 (choose!831 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69227))))

(declare-fun e!87125 () Bool)

(assert (=> d!40763 e!87125))

(declare-fun res!64344 () Bool)

(assert (=> d!40763 (=> (not res!64344) (not e!87125))))

(assert (=> d!40763 (= res!64344 (isStrictlySorted!317 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40763 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69227) lt!70012)))

(declare-fun b!133720 () Bool)

(assert (=> b!133720 (= e!87125 (containsKey!175 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69227))))

(assert (= (and d!40763 res!64344) b!133720))

(assert (=> d!40763 m!156801))

(assert (=> d!40763 m!156801))

(assert (=> d!40763 m!156803))

(declare-fun m!158229 () Bool)

(assert (=> d!40763 m!158229))

(declare-fun m!158231 () Bool)

(assert (=> d!40763 m!158231))

(assert (=> b!133720 m!156797))

(assert (=> b!132981 d!40763))

(assert (=> b!132981 d!40497))

(assert (=> b!132981 d!40499))

(declare-fun d!40765 () Bool)

(declare-fun isEmpty!416 (List!1735) Bool)

(assert (=> d!40765 (= (isEmpty!414 lt!69405) (isEmpty!416 (toList!869 lt!69405)))))

(declare-fun bs!5541 () Bool)

(assert (= bs!5541 d!40765))

(declare-fun m!158233 () Bool)

(assert (=> bs!5541 m!158233))

(assert (=> b!132915 d!40765))

(declare-fun b!133721 () Bool)

(declare-fun e!87127 () SeekEntryResult!285)

(declare-fun e!87128 () SeekEntryResult!285)

(assert (=> b!133721 (= e!87127 e!87128)))

(declare-fun lt!70013 () (_ BitVec 64))

(declare-fun c!24809 () Bool)

(assert (=> b!133721 (= c!24809 (= lt!70013 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!133722 () Bool)

(assert (=> b!133722 (= e!87128 (Found!285 (index!3302 lt!69439)))))

(declare-fun b!133723 () Bool)

(declare-fun e!87126 () SeekEntryResult!285)

(assert (=> b!133723 (= e!87126 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15602 lt!69439) #b00000000000000000000000000000001) (nextIndex!0 (index!3302 lt!69439) (x!15602 lt!69439) (mask!7165 newMap!16)) (index!3302 lt!69439) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun b!133724 () Bool)

(assert (=> b!133724 (= e!87126 (MissingVacant!285 (index!3302 lt!69439)))))

(declare-fun b!133725 () Bool)

(declare-fun c!24811 () Bool)

(assert (=> b!133725 (= c!24811 (= lt!70013 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133725 (= e!87128 e!87126)))

(declare-fun d!40767 () Bool)

(declare-fun lt!70014 () SeekEntryResult!285)

(assert (=> d!40767 (and (or ((_ is Undefined!285) lt!70014) (not ((_ is Found!285) lt!70014)) (and (bvsge (index!3301 lt!70014) #b00000000000000000000000000000000) (bvslt (index!3301 lt!70014) (size!2529 (_keys!4614 newMap!16))))) (or ((_ is Undefined!285) lt!70014) ((_ is Found!285) lt!70014) (not ((_ is MissingVacant!285) lt!70014)) (not (= (index!3303 lt!70014) (index!3302 lt!69439))) (and (bvsge (index!3303 lt!70014) #b00000000000000000000000000000000) (bvslt (index!3303 lt!70014) (size!2529 (_keys!4614 newMap!16))))) (or ((_ is Undefined!285) lt!70014) (ite ((_ is Found!285) lt!70014) (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!70014)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (and ((_ is MissingVacant!285) lt!70014) (= (index!3303 lt!70014) (index!3302 lt!69439)) (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3303 lt!70014)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!40767 (= lt!70014 e!87127)))

(declare-fun c!24810 () Bool)

(assert (=> d!40767 (= c!24810 (bvsge (x!15602 lt!69439) #b01111111111111111111111111111110))))

(assert (=> d!40767 (= lt!70013 (select (arr!2260 (_keys!4614 newMap!16)) (index!3302 lt!69439)))))

(assert (=> d!40767 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40767 (= (seekKeyOrZeroReturnVacant!0 (x!15602 lt!69439) (index!3302 lt!69439) (index!3302 lt!69439) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)) lt!70014)))

(declare-fun b!133726 () Bool)

(assert (=> b!133726 (= e!87127 Undefined!285)))

(assert (= (and d!40767 c!24810) b!133726))

(assert (= (and d!40767 (not c!24810)) b!133721))

(assert (= (and b!133721 c!24809) b!133722))

(assert (= (and b!133721 (not c!24809)) b!133725))

(assert (= (and b!133725 c!24811) b!133724))

(assert (= (and b!133725 (not c!24811)) b!133723))

(declare-fun m!158235 () Bool)

(assert (=> b!133723 m!158235))

(assert (=> b!133723 m!158235))

(assert (=> b!133723 m!156287))

(declare-fun m!158237 () Bool)

(assert (=> b!133723 m!158237))

(declare-fun m!158239 () Bool)

(assert (=> d!40767 m!158239))

(declare-fun m!158241 () Bool)

(assert (=> d!40767 m!158241))

(assert (=> d!40767 m!156699))

(assert (=> d!40767 m!156571))

(assert (=> b!132961 d!40767))

(assert (=> bm!14691 d!40337))

(assert (=> bm!14666 d!40531))

(assert (=> b!132840 d!40473))

(declare-fun d!40769 () Bool)

(declare-fun e!87129 () Bool)

(assert (=> d!40769 e!87129))

(declare-fun res!64345 () Bool)

(assert (=> d!40769 (=> res!64345 e!87129)))

(declare-fun lt!70015 () Bool)

(assert (=> d!40769 (= res!64345 (not lt!70015))))

(declare-fun lt!70017 () Bool)

(assert (=> d!40769 (= lt!70015 lt!70017)))

(declare-fun lt!70016 () Unit!4150)

(declare-fun e!87130 () Unit!4150)

(assert (=> d!40769 (= lt!70016 e!87130)))

(declare-fun c!24812 () Bool)

(assert (=> d!40769 (= c!24812 lt!70017)))

(assert (=> d!40769 (= lt!70017 (containsKey!175 (toList!869 lt!69488) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40769 (= (contains!896 lt!69488 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70015)))

(declare-fun b!133727 () Bool)

(declare-fun lt!70018 () Unit!4150)

(assert (=> b!133727 (= e!87130 lt!70018)))

(assert (=> b!133727 (= lt!70018 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69488) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133727 (isDefined!125 (getValueByKey!171 (toList!869 lt!69488) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133728 () Bool)

(declare-fun Unit!4194 () Unit!4150)

(assert (=> b!133728 (= e!87130 Unit!4194)))

(declare-fun b!133729 () Bool)

(assert (=> b!133729 (= e!87129 (isDefined!125 (getValueByKey!171 (toList!869 lt!69488) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40769 c!24812) b!133727))

(assert (= (and d!40769 (not c!24812)) b!133728))

(assert (= (and d!40769 (not res!64345)) b!133729))

(declare-fun m!158243 () Bool)

(assert (=> d!40769 m!158243))

(declare-fun m!158245 () Bool)

(assert (=> b!133727 m!158245))

(assert (=> b!133727 m!157459))

(assert (=> b!133727 m!157459))

(declare-fun m!158247 () Bool)

(assert (=> b!133727 m!158247))

(assert (=> b!133729 m!157459))

(assert (=> b!133729 m!157459))

(assert (=> b!133729 m!158247))

(assert (=> bm!14671 d!40769))

(declare-fun d!40771 () Bool)

(declare-fun e!87131 () Bool)

(assert (=> d!40771 e!87131))

(declare-fun res!64346 () Bool)

(assert (=> d!40771 (=> res!64346 e!87131)))

(declare-fun lt!70019 () Bool)

(assert (=> d!40771 (= res!64346 (not lt!70019))))

(declare-fun lt!70021 () Bool)

(assert (=> d!40771 (= lt!70019 lt!70021)))

(declare-fun lt!70020 () Unit!4150)

(declare-fun e!87132 () Unit!4150)

(assert (=> d!40771 (= lt!70020 e!87132)))

(declare-fun c!24813 () Bool)

(assert (=> d!40771 (= c!24813 lt!70021)))

(assert (=> d!40771 (= lt!70021 (containsKey!175 (toList!869 lt!69407) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40771 (= (contains!896 lt!69407 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!70019)))

(declare-fun b!133730 () Bool)

(declare-fun lt!70022 () Unit!4150)

(assert (=> b!133730 (= e!87132 lt!70022)))

(assert (=> b!133730 (= lt!70022 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69407) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> b!133730 (isDefined!125 (getValueByKey!171 (toList!869 lt!69407) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!133731 () Bool)

(declare-fun Unit!4195 () Unit!4150)

(assert (=> b!133731 (= e!87132 Unit!4195)))

(declare-fun b!133732 () Bool)

(assert (=> b!133732 (= e!87131 (isDefined!125 (getValueByKey!171 (toList!869 lt!69407) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(assert (= (and d!40771 c!24813) b!133730))

(assert (= (and d!40771 (not c!24813)) b!133731))

(assert (= (and d!40771 (not res!64346)) b!133732))

(declare-fun m!158249 () Bool)

(assert (=> d!40771 m!158249))

(declare-fun m!158251 () Bool)

(assert (=> b!133730 m!158251))

(assert (=> b!133730 m!156639))

(assert (=> b!133730 m!156639))

(declare-fun m!158253 () Bool)

(assert (=> b!133730 m!158253))

(assert (=> b!133732 m!156639))

(assert (=> b!133732 m!156639))

(assert (=> b!133732 m!158253))

(assert (=> d!40333 d!40771))

(declare-fun b!133733 () Bool)

(declare-fun e!87133 () Option!177)

(assert (=> b!133733 (= e!87133 (Some!176 (_2!1314 (h!2336 lt!69409))))))

(declare-fun b!133736 () Bool)

(declare-fun e!87134 () Option!177)

(assert (=> b!133736 (= e!87134 None!175)))

(declare-fun b!133735 () Bool)

(assert (=> b!133735 (= e!87134 (getValueByKey!171 (t!6198 lt!69409) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!133734 () Bool)

(assert (=> b!133734 (= e!87133 e!87134)))

(declare-fun c!24815 () Bool)

(assert (=> b!133734 (= c!24815 (and ((_ is Cons!1731) lt!69409) (not (= (_1!1314 (h!2336 lt!69409)) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))))

(declare-fun c!24814 () Bool)

(declare-fun d!40773 () Bool)

(assert (=> d!40773 (= c!24814 (and ((_ is Cons!1731) lt!69409) (= (_1!1314 (h!2336 lt!69409)) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(assert (=> d!40773 (= (getValueByKey!171 lt!69409 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) e!87133)))

(assert (= (and d!40773 c!24814) b!133733))

(assert (= (and d!40773 (not c!24814)) b!133734))

(assert (= (and b!133734 c!24815) b!133735))

(assert (= (and b!133734 (not c!24815)) b!133736))

(declare-fun m!158255 () Bool)

(assert (=> b!133735 m!158255))

(assert (=> d!40333 d!40773))

(declare-fun d!40775 () Bool)

(assert (=> d!40775 (= (getValueByKey!171 lt!69409 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) (Some!176 (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun lt!70023 () Unit!4150)

(assert (=> d!40775 (= lt!70023 (choose!834 lt!69409 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun e!87135 () Bool)

(assert (=> d!40775 e!87135))

(declare-fun res!64347 () Bool)

(assert (=> d!40775 (=> (not res!64347) (not e!87135))))

(assert (=> d!40775 (= res!64347 (isStrictlySorted!317 lt!69409))))

(assert (=> d!40775 (= (lemmaContainsTupThenGetReturnValue!88 lt!69409 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!70023)))

(declare-fun b!133737 () Bool)

(declare-fun res!64348 () Bool)

(assert (=> b!133737 (=> (not res!64348) (not e!87135))))

(assert (=> b!133737 (= res!64348 (containsKey!175 lt!69409 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!133738 () Bool)

(assert (=> b!133738 (= e!87135 (contains!898 lt!69409 (tuple2!2609 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(assert (= (and d!40775 res!64347) b!133737))

(assert (= (and b!133737 res!64348) b!133738))

(assert (=> d!40775 m!156633))

(declare-fun m!158257 () Bool)

(assert (=> d!40775 m!158257))

(declare-fun m!158259 () Bool)

(assert (=> d!40775 m!158259))

(declare-fun m!158261 () Bool)

(assert (=> b!133737 m!158261))

(declare-fun m!158263 () Bool)

(assert (=> b!133738 m!158263))

(assert (=> d!40333 d!40775))

(declare-fun bm!14761 () Bool)

(declare-fun call!14764 () List!1735)

(declare-fun call!14765 () List!1735)

(assert (=> bm!14761 (= call!14764 call!14765)))

(declare-fun lt!70024 () List!1735)

(declare-fun b!133739 () Bool)

(declare-fun e!87138 () Bool)

(assert (=> b!133739 (= e!87138 (contains!898 lt!70024 (tuple2!2609 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun b!133740 () Bool)

(declare-fun e!87140 () List!1735)

(assert (=> b!133740 (= e!87140 call!14765)))

(declare-fun b!133741 () Bool)

(declare-fun res!64349 () Bool)

(assert (=> b!133741 (=> (not res!64349) (not e!87138))))

(assert (=> b!133741 (= res!64349 (containsKey!175 lt!70024 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!133742 () Bool)

(declare-fun e!87136 () List!1735)

(assert (=> b!133742 (= e!87136 (insertStrictlySorted!90 (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!133743 () Bool)

(declare-fun e!87137 () List!1735)

(assert (=> b!133743 (= e!87137 call!14764)))

(declare-fun bm!14762 () Bool)

(declare-fun call!14766 () List!1735)

(assert (=> bm!14762 (= call!14765 call!14766)))

(declare-fun c!24816 () Bool)

(declare-fun c!24818 () Bool)

(declare-fun b!133745 () Bool)

(assert (=> b!133745 (= e!87136 (ite c!24818 (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)))) (ite c!24816 (Cons!1731 (h!2336 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)))) (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569))))) Nil!1732)))))

(declare-fun b!133746 () Bool)

(declare-fun e!87139 () List!1735)

(assert (=> b!133746 (= e!87139 call!14766)))

(declare-fun b!133747 () Bool)

(assert (=> b!133747 (= c!24816 (and ((_ is Cons!1731) (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)))) (bvsgt (_1!1314 (h!2336 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569))))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(assert (=> b!133747 (= e!87140 e!87137)))

(declare-fun d!40777 () Bool)

(assert (=> d!40777 e!87138))

(declare-fun res!64350 () Bool)

(assert (=> d!40777 (=> (not res!64350) (not e!87138))))

(assert (=> d!40777 (= res!64350 (isStrictlySorted!317 lt!70024))))

(assert (=> d!40777 (= lt!70024 e!87139)))

(declare-fun c!24817 () Bool)

(assert (=> d!40777 (= c!24817 (and ((_ is Cons!1731) (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)))) (bvslt (_1!1314 (h!2336 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569))))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(assert (=> d!40777 (isStrictlySorted!317 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569))))))

(assert (=> d!40777 (= (insertStrictlySorted!90 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!70024)))

(declare-fun b!133744 () Bool)

(assert (=> b!133744 (= e!87139 e!87140)))

(assert (=> b!133744 (= c!24818 (and ((_ is Cons!1731) (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)))) (= (_1!1314 (h!2336 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569))))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun b!133748 () Bool)

(assert (=> b!133748 (= e!87137 call!14764)))

(declare-fun bm!14763 () Bool)

(assert (=> bm!14763 (= call!14766 ($colon$colon!91 e!87136 (ite c!24817 (h!2336 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)))) (tuple2!2609 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))))

(declare-fun c!24819 () Bool)

(assert (=> bm!14763 (= c!24819 c!24817)))

(assert (= (and d!40777 c!24817) b!133746))

(assert (= (and d!40777 (not c!24817)) b!133744))

(assert (= (and b!133744 c!24818) b!133740))

(assert (= (and b!133744 (not c!24818)) b!133747))

(assert (= (and b!133747 c!24816) b!133748))

(assert (= (and b!133747 (not c!24816)) b!133743))

(assert (= (or b!133748 b!133743) bm!14761))

(assert (= (or b!133740 bm!14761) bm!14762))

(assert (= (or b!133746 bm!14762) bm!14763))

(assert (= (and bm!14763 c!24819) b!133742))

(assert (= (and bm!14763 (not c!24819)) b!133745))

(assert (= (and d!40777 res!64350) b!133741))

(assert (= (and b!133741 res!64349) b!133739))

(declare-fun m!158265 () Bool)

(assert (=> b!133741 m!158265))

(declare-fun m!158267 () Bool)

(assert (=> b!133739 m!158267))

(declare-fun m!158269 () Bool)

(assert (=> d!40777 m!158269))

(declare-fun m!158271 () Bool)

(assert (=> d!40777 m!158271))

(declare-fun m!158273 () Bool)

(assert (=> bm!14763 m!158273))

(declare-fun m!158275 () Bool)

(assert (=> b!133742 m!158275))

(assert (=> d!40333 d!40777))

(declare-fun d!40779 () Bool)

(declare-fun e!87141 () Bool)

(assert (=> d!40779 e!87141))

(declare-fun res!64352 () Bool)

(assert (=> d!40779 (=> (not res!64352) (not e!87141))))

(declare-fun lt!70026 () ListLongMap!1707)

(assert (=> d!40779 (= res!64352 (contains!896 lt!70026 (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun lt!70028 () List!1735)

(assert (=> d!40779 (= lt!70026 (ListLongMap!1708 lt!70028))))

(declare-fun lt!70027 () Unit!4150)

(declare-fun lt!70025 () Unit!4150)

(assert (=> d!40779 (= lt!70027 lt!70025)))

(assert (=> d!40779 (= (getValueByKey!171 lt!70028 (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!40779 (= lt!70025 (lemmaContainsTupThenGetReturnValue!88 lt!70028 (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!40779 (= lt!70028 (insertStrictlySorted!90 (toList!869 (ite c!24611 call!14681 (ite c!24614 call!14677 call!14682))) (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!40779 (= (+!170 (ite c!24611 call!14681 (ite c!24614 call!14677 call!14682)) (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70026)))

(declare-fun b!133749 () Bool)

(declare-fun res!64351 () Bool)

(assert (=> b!133749 (=> (not res!64351) (not e!87141))))

(assert (=> b!133749 (= res!64351 (= (getValueByKey!171 (toList!869 lt!70026) (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!133750 () Bool)

(assert (=> b!133750 (= e!87141 (contains!898 (toList!869 lt!70026) (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (= (and d!40779 res!64352) b!133749))

(assert (= (and b!133749 res!64351) b!133750))

(declare-fun m!158277 () Bool)

(assert (=> d!40779 m!158277))

(declare-fun m!158279 () Bool)

(assert (=> d!40779 m!158279))

(declare-fun m!158281 () Bool)

(assert (=> d!40779 m!158281))

(declare-fun m!158283 () Bool)

(assert (=> d!40779 m!158283))

(declare-fun m!158285 () Bool)

(assert (=> b!133749 m!158285))

(declare-fun m!158287 () Bool)

(assert (=> b!133750 m!158287))

(assert (=> bm!14676 d!40779))

(declare-fun d!40781 () Bool)

(declare-fun res!64353 () Bool)

(declare-fun e!87142 () Bool)

(assert (=> d!40781 (=> res!64353 e!87142)))

(assert (=> d!40781 (= res!64353 (and ((_ is Cons!1731) (toList!869 e!86545)) (= (_1!1314 (h!2336 (toList!869 e!86545))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!40781 (= (containsKey!175 (toList!869 e!86545) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) e!87142)))

(declare-fun b!133751 () Bool)

(declare-fun e!87143 () Bool)

(assert (=> b!133751 (= e!87142 e!87143)))

(declare-fun res!64354 () Bool)

(assert (=> b!133751 (=> (not res!64354) (not e!87143))))

(assert (=> b!133751 (= res!64354 (and (or (not ((_ is Cons!1731) (toList!869 e!86545))) (bvsle (_1!1314 (h!2336 (toList!869 e!86545))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))) ((_ is Cons!1731) (toList!869 e!86545)) (bvslt (_1!1314 (h!2336 (toList!869 e!86545))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(declare-fun b!133752 () Bool)

(assert (=> b!133752 (= e!87143 (containsKey!175 (t!6198 (toList!869 e!86545)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40781 (not res!64353)) b!133751))

(assert (= (and b!133751 res!64354) b!133752))

(assert (=> b!133752 m!156287))

(declare-fun m!158289 () Bool)

(assert (=> b!133752 m!158289))

(assert (=> d!40311 d!40781))

(declare-fun d!40783 () Bool)

(assert (=> d!40783 (= (get!1490 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132967 d!40783))

(assert (=> b!133117 d!40641))

(assert (=> b!133117 d!40643))

(declare-fun d!40785 () Bool)

(assert (=> d!40785 (= (apply!116 (+!170 lt!69519 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))) lt!69507) (apply!116 lt!69519 lt!69507))))

(declare-fun lt!70029 () Unit!4150)

(assert (=> d!40785 (= lt!70029 (choose!828 lt!69519 lt!69521 (minValue!2720 newMap!16) lt!69507))))

(declare-fun e!87144 () Bool)

(assert (=> d!40785 e!87144))

(declare-fun res!64355 () Bool)

(assert (=> d!40785 (=> (not res!64355) (not e!87144))))

(assert (=> d!40785 (= res!64355 (contains!896 lt!69519 lt!69507))))

(assert (=> d!40785 (= (addApplyDifferent!92 lt!69519 lt!69521 (minValue!2720 newMap!16) lt!69507) lt!70029)))

(declare-fun b!133753 () Bool)

(assert (=> b!133753 (= e!87144 (not (= lt!69507 lt!69521)))))

(assert (= (and d!40785 res!64355) b!133753))

(assert (=> d!40785 m!156935))

(assert (=> d!40785 m!156921))

(assert (=> d!40785 m!156923))

(declare-fun m!158291 () Bool)

(assert (=> d!40785 m!158291))

(declare-fun m!158293 () Bool)

(assert (=> d!40785 m!158293))

(assert (=> d!40785 m!156921))

(assert (=> b!133029 d!40785))

(declare-fun d!40787 () Bool)

(declare-fun e!87145 () Bool)

(assert (=> d!40787 e!87145))

(declare-fun res!64356 () Bool)

(assert (=> d!40787 (=> res!64356 e!87145)))

(declare-fun lt!70030 () Bool)

(assert (=> d!40787 (= res!64356 (not lt!70030))))

(declare-fun lt!70032 () Bool)

(assert (=> d!40787 (= lt!70030 lt!70032)))

(declare-fun lt!70031 () Unit!4150)

(declare-fun e!87146 () Unit!4150)

(assert (=> d!40787 (= lt!70031 e!87146)))

(declare-fun c!24820 () Bool)

(assert (=> d!40787 (= c!24820 lt!70032)))

(assert (=> d!40787 (= lt!70032 (containsKey!175 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69516))))

(assert (=> d!40787 (= (contains!896 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!69516) lt!70030)))

(declare-fun b!133754 () Bool)

(declare-fun lt!70033 () Unit!4150)

(assert (=> b!133754 (= e!87146 lt!70033)))

(assert (=> b!133754 (= lt!70033 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69516))))

(assert (=> b!133754 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69516))))

(declare-fun b!133755 () Bool)

(declare-fun Unit!4196 () Unit!4150)

(assert (=> b!133755 (= e!87146 Unit!4196)))

(declare-fun b!133756 () Bool)

(assert (=> b!133756 (= e!87145 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69516)))))

(assert (= (and d!40787 c!24820) b!133754))

(assert (= (and d!40787 (not c!24820)) b!133755))

(assert (= (and d!40787 (not res!64356)) b!133756))

(declare-fun m!158295 () Bool)

(assert (=> d!40787 m!158295))

(declare-fun m!158297 () Bool)

(assert (=> b!133754 m!158297))

(declare-fun m!158299 () Bool)

(assert (=> b!133754 m!158299))

(assert (=> b!133754 m!158299))

(declare-fun m!158301 () Bool)

(assert (=> b!133754 m!158301))

(assert (=> b!133756 m!158299))

(assert (=> b!133756 m!158299))

(assert (=> b!133756 m!158301))

(assert (=> b!133029 d!40787))

(declare-fun d!40789 () Bool)

(assert (=> d!40789 (contains!896 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!69516)))

(declare-fun lt!70034 () Unit!4150)

(assert (=> d!40789 (= lt!70034 (choose!829 lt!69506 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) lt!69516))))

(assert (=> d!40789 (contains!896 lt!69506 lt!69516)))

(assert (=> d!40789 (= (addStillContains!92 lt!69506 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) lt!69516) lt!70034)))

(declare-fun bs!5542 () Bool)

(assert (= bs!5542 d!40789))

(assert (=> bs!5542 m!156917))

(assert (=> bs!5542 m!156917))

(assert (=> bs!5542 m!156933))

(declare-fun m!158303 () Bool)

(assert (=> bs!5542 m!158303))

(declare-fun m!158305 () Bool)

(assert (=> bs!5542 m!158305))

(assert (=> b!133029 d!40789))

(assert (=> b!133029 d!40491))

(declare-fun d!40791 () Bool)

(assert (=> d!40791 (= (apply!116 (+!170 lt!69518 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))) lt!69517) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69518 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))) lt!69517)))))

(declare-fun bs!5543 () Bool)

(assert (= bs!5543 d!40791))

(declare-fun m!158307 () Bool)

(assert (=> bs!5543 m!158307))

(assert (=> bs!5543 m!158307))

(declare-fun m!158309 () Bool)

(assert (=> bs!5543 m!158309))

(assert (=> b!133029 d!40791))

(declare-fun d!40793 () Bool)

(declare-fun e!87147 () Bool)

(assert (=> d!40793 e!87147))

(declare-fun res!64358 () Bool)

(assert (=> d!40793 (=> (not res!64358) (not e!87147))))

(declare-fun lt!70036 () ListLongMap!1707)

(assert (=> d!40793 (= res!64358 (contains!896 lt!70036 (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun lt!70038 () List!1735)

(assert (=> d!40793 (= lt!70036 (ListLongMap!1708 lt!70038))))

(declare-fun lt!70037 () Unit!4150)

(declare-fun lt!70035 () Unit!4150)

(assert (=> d!40793 (= lt!70037 lt!70035)))

(assert (=> d!40793 (= (getValueByKey!171 lt!70038 (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) (Some!176 (_2!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> d!40793 (= lt!70035 (lemmaContainsTupThenGetReturnValue!88 lt!70038 (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> d!40793 (= lt!70038 (insertStrictlySorted!90 (toList!869 lt!69514) (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> d!40793 (= (+!170 lt!69514 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!70036)))

(declare-fun b!133757 () Bool)

(declare-fun res!64357 () Bool)

(assert (=> b!133757 (=> (not res!64357) (not e!87147))))

(assert (=> b!133757 (= res!64357 (= (getValueByKey!171 (toList!869 lt!70036) (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) (Some!176 (_2!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(declare-fun b!133758 () Bool)

(assert (=> b!133758 (= e!87147 (contains!898 (toList!869 lt!70036) (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))

(assert (= (and d!40793 res!64358) b!133757))

(assert (= (and b!133757 res!64357) b!133758))

(declare-fun m!158311 () Bool)

(assert (=> d!40793 m!158311))

(declare-fun m!158313 () Bool)

(assert (=> d!40793 m!158313))

(declare-fun m!158315 () Bool)

(assert (=> d!40793 m!158315))

(declare-fun m!158317 () Bool)

(assert (=> d!40793 m!158317))

(declare-fun m!158319 () Bool)

(assert (=> b!133757 m!158319))

(declare-fun m!158321 () Bool)

(assert (=> b!133758 m!158321))

(assert (=> b!133029 d!40793))

(declare-fun d!40795 () Bool)

(declare-fun e!87148 () Bool)

(assert (=> d!40795 e!87148))

(declare-fun res!64360 () Bool)

(assert (=> d!40795 (=> (not res!64360) (not e!87148))))

(declare-fun lt!70040 () ListLongMap!1707)

(assert (=> d!40795 (= res!64360 (contains!896 lt!70040 (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun lt!70042 () List!1735)

(assert (=> d!40795 (= lt!70040 (ListLongMap!1708 lt!70042))))

(declare-fun lt!70041 () Unit!4150)

(declare-fun lt!70039 () Unit!4150)

(assert (=> d!40795 (= lt!70041 lt!70039)))

(assert (=> d!40795 (= (getValueByKey!171 lt!70042 (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) (Some!176 (_2!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> d!40795 (= lt!70039 (lemmaContainsTupThenGetReturnValue!88 lt!70042 (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> d!40795 (= lt!70042 (insertStrictlySorted!90 (toList!869 lt!69506) (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> d!40795 (= (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!70040)))

(declare-fun b!133759 () Bool)

(declare-fun res!64359 () Bool)

(assert (=> b!133759 (=> (not res!64359) (not e!87148))))

(assert (=> b!133759 (= res!64359 (= (getValueByKey!171 (toList!869 lt!70040) (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) (Some!176 (_2!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(declare-fun b!133760 () Bool)

(assert (=> b!133760 (= e!87148 (contains!898 (toList!869 lt!70040) (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))

(assert (= (and d!40795 res!64360) b!133759))

(assert (= (and b!133759 res!64359) b!133760))

(declare-fun m!158323 () Bool)

(assert (=> d!40795 m!158323))

(declare-fun m!158325 () Bool)

(assert (=> d!40795 m!158325))

(declare-fun m!158327 () Bool)

(assert (=> d!40795 m!158327))

(declare-fun m!158329 () Bool)

(assert (=> d!40795 m!158329))

(declare-fun m!158331 () Bool)

(assert (=> b!133759 m!158331))

(declare-fun m!158333 () Bool)

(assert (=> b!133760 m!158333))

(assert (=> b!133029 d!40795))

(declare-fun d!40797 () Bool)

(assert (=> d!40797 (= (apply!116 lt!69518 lt!69517) (get!1491 (getValueByKey!171 (toList!869 lt!69518) lt!69517)))))

(declare-fun bs!5544 () Bool)

(assert (= bs!5544 d!40797))

(declare-fun m!158335 () Bool)

(assert (=> bs!5544 m!158335))

(assert (=> bs!5544 m!158335))

(declare-fun m!158337 () Bool)

(assert (=> bs!5544 m!158337))

(assert (=> b!133029 d!40797))

(declare-fun d!40799 () Bool)

(assert (=> d!40799 (= (apply!116 (+!170 lt!69514 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!69512) (apply!116 lt!69514 lt!69512))))

(declare-fun lt!70043 () Unit!4150)

(assert (=> d!40799 (= lt!70043 (choose!828 lt!69514 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) lt!69512))))

(declare-fun e!87149 () Bool)

(assert (=> d!40799 e!87149))

(declare-fun res!64361 () Bool)

(assert (=> d!40799 (=> (not res!64361) (not e!87149))))

(assert (=> d!40799 (= res!64361 (contains!896 lt!69514 lt!69512))))

(assert (=> d!40799 (= (addApplyDifferent!92 lt!69514 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) lt!69512) lt!70043)))

(declare-fun b!133761 () Bool)

(assert (=> b!133761 (= e!87149 (not (= lt!69512 lt!69525)))))

(assert (= (and d!40799 res!64361) b!133761))

(assert (=> d!40799 m!156937))

(assert (=> d!40799 m!156907))

(assert (=> d!40799 m!156925))

(declare-fun m!158339 () Bool)

(assert (=> d!40799 m!158339))

(declare-fun m!158341 () Bool)

(assert (=> d!40799 m!158341))

(assert (=> d!40799 m!156907))

(assert (=> b!133029 d!40799))

(declare-fun d!40801 () Bool)

(assert (=> d!40801 (= (apply!116 (+!170 lt!69514 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!69512) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69514 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69512)))))

(declare-fun bs!5545 () Bool)

(assert (= bs!5545 d!40801))

(declare-fun m!158343 () Bool)

(assert (=> bs!5545 m!158343))

(assert (=> bs!5545 m!158343))

(declare-fun m!158345 () Bool)

(assert (=> bs!5545 m!158345))

(assert (=> b!133029 d!40801))

(declare-fun d!40803 () Bool)

(assert (=> d!40803 (= (apply!116 (+!170 lt!69519 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))) lt!69507) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69519 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))) lt!69507)))))

(declare-fun bs!5546 () Bool)

(assert (= bs!5546 d!40803))

(declare-fun m!158347 () Bool)

(assert (=> bs!5546 m!158347))

(assert (=> bs!5546 m!158347))

(declare-fun m!158349 () Bool)

(assert (=> bs!5546 m!158349))

(assert (=> b!133029 d!40803))

(declare-fun d!40805 () Bool)

(assert (=> d!40805 (= (apply!116 (+!170 lt!69518 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))) lt!69517) (apply!116 lt!69518 lt!69517))))

(declare-fun lt!70044 () Unit!4150)

(assert (=> d!40805 (= lt!70044 (choose!828 lt!69518 lt!69515 (minValue!2720 newMap!16) lt!69517))))

(declare-fun e!87150 () Bool)

(assert (=> d!40805 e!87150))

(declare-fun res!64362 () Bool)

(assert (=> d!40805 (=> (not res!64362) (not e!87150))))

(assert (=> d!40805 (= res!64362 (contains!896 lt!69518 lt!69517))))

(assert (=> d!40805 (= (addApplyDifferent!92 lt!69518 lt!69515 (minValue!2720 newMap!16) lt!69517) lt!70044)))

(declare-fun b!133762 () Bool)

(assert (=> b!133762 (= e!87150 (not (= lt!69517 lt!69515)))))

(assert (= (and d!40805 res!64362) b!133762))

(assert (=> d!40805 m!156927))

(assert (=> d!40805 m!156911))

(assert (=> d!40805 m!156913))

(declare-fun m!158351 () Bool)

(assert (=> d!40805 m!158351))

(declare-fun m!158353 () Bool)

(assert (=> d!40805 m!158353))

(assert (=> d!40805 m!156911))

(assert (=> b!133029 d!40805))

(declare-fun d!40807 () Bool)

(assert (=> d!40807 (= (apply!116 lt!69519 lt!69507) (get!1491 (getValueByKey!171 (toList!869 lt!69519) lt!69507)))))

(declare-fun bs!5547 () Bool)

(assert (= bs!5547 d!40807))

(declare-fun m!158355 () Bool)

(assert (=> bs!5547 m!158355))

(assert (=> bs!5547 m!158355))

(declare-fun m!158357 () Bool)

(assert (=> bs!5547 m!158357))

(assert (=> b!133029 d!40807))

(declare-fun d!40809 () Bool)

(assert (=> d!40809 (= (apply!116 lt!69514 lt!69512) (get!1491 (getValueByKey!171 (toList!869 lt!69514) lt!69512)))))

(declare-fun bs!5548 () Bool)

(assert (= bs!5548 d!40809))

(declare-fun m!158359 () Bool)

(assert (=> bs!5548 m!158359))

(assert (=> bs!5548 m!158359))

(declare-fun m!158361 () Bool)

(assert (=> bs!5548 m!158361))

(assert (=> b!133029 d!40809))

(declare-fun d!40811 () Bool)

(declare-fun e!87151 () Bool)

(assert (=> d!40811 e!87151))

(declare-fun res!64364 () Bool)

(assert (=> d!40811 (=> (not res!64364) (not e!87151))))

(declare-fun lt!70046 () ListLongMap!1707)

(assert (=> d!40811 (= res!64364 (contains!896 lt!70046 (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))))

(declare-fun lt!70048 () List!1735)

(assert (=> d!40811 (= lt!70046 (ListLongMap!1708 lt!70048))))

(declare-fun lt!70047 () Unit!4150)

(declare-fun lt!70045 () Unit!4150)

(assert (=> d!40811 (= lt!70047 lt!70045)))

(assert (=> d!40811 (= (getValueByKey!171 lt!70048 (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))))

(assert (=> d!40811 (= lt!70045 (lemmaContainsTupThenGetReturnValue!88 lt!70048 (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))))

(assert (=> d!40811 (= lt!70048 (insertStrictlySorted!90 (toList!869 lt!69518) (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))))

(assert (=> d!40811 (= (+!170 lt!69518 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))) lt!70046)))

(declare-fun b!133763 () Bool)

(declare-fun res!64363 () Bool)

(assert (=> b!133763 (=> (not res!64363) (not e!87151))))

(assert (=> b!133763 (= res!64363 (= (getValueByKey!171 (toList!869 lt!70046) (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))))))))

(declare-fun b!133764 () Bool)

(assert (=> b!133764 (= e!87151 (contains!898 (toList!869 lt!70046) (tuple2!2609 lt!69515 (minValue!2720 newMap!16))))))

(assert (= (and d!40811 res!64364) b!133763))

(assert (= (and b!133763 res!64363) b!133764))

(declare-fun m!158363 () Bool)

(assert (=> d!40811 m!158363))

(declare-fun m!158365 () Bool)

(assert (=> d!40811 m!158365))

(declare-fun m!158367 () Bool)

(assert (=> d!40811 m!158367))

(declare-fun m!158369 () Bool)

(assert (=> d!40811 m!158369))

(declare-fun m!158371 () Bool)

(assert (=> b!133763 m!158371))

(declare-fun m!158373 () Bool)

(assert (=> b!133764 m!158373))

(assert (=> b!133029 d!40811))

(declare-fun d!40813 () Bool)

(declare-fun e!87152 () Bool)

(assert (=> d!40813 e!87152))

(declare-fun res!64366 () Bool)

(assert (=> d!40813 (=> (not res!64366) (not e!87152))))

(declare-fun lt!70050 () ListLongMap!1707)

(assert (=> d!40813 (= res!64366 (contains!896 lt!70050 (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))))

(declare-fun lt!70052 () List!1735)

(assert (=> d!40813 (= lt!70050 (ListLongMap!1708 lt!70052))))

(declare-fun lt!70051 () Unit!4150)

(declare-fun lt!70049 () Unit!4150)

(assert (=> d!40813 (= lt!70051 lt!70049)))

(assert (=> d!40813 (= (getValueByKey!171 lt!70052 (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))))

(assert (=> d!40813 (= lt!70049 (lemmaContainsTupThenGetReturnValue!88 lt!70052 (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))))

(assert (=> d!40813 (= lt!70052 (insertStrictlySorted!90 (toList!869 lt!69519) (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))))

(assert (=> d!40813 (= (+!170 lt!69519 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))) lt!70050)))

(declare-fun b!133765 () Bool)

(declare-fun res!64365 () Bool)

(assert (=> b!133765 (=> (not res!64365) (not e!87152))))

(assert (=> b!133765 (= res!64365 (= (getValueByKey!171 (toList!869 lt!70050) (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))))))))

(declare-fun b!133766 () Bool)

(assert (=> b!133766 (= e!87152 (contains!898 (toList!869 lt!70050) (tuple2!2609 lt!69521 (minValue!2720 newMap!16))))))

(assert (= (and d!40813 res!64366) b!133765))

(assert (= (and b!133765 res!64365) b!133766))

(declare-fun m!158375 () Bool)

(assert (=> d!40813 m!158375))

(declare-fun m!158377 () Bool)

(assert (=> d!40813 m!158377))

(declare-fun m!158379 () Bool)

(assert (=> d!40813 m!158379))

(declare-fun m!158381 () Bool)

(assert (=> d!40813 m!158381))

(declare-fun m!158383 () Bool)

(assert (=> b!133765 m!158383))

(declare-fun m!158385 () Bool)

(assert (=> b!133766 m!158385))

(assert (=> b!133029 d!40813))

(declare-fun b!133767 () Bool)

(declare-fun e!87153 () Option!177)

(assert (=> b!133767 (= e!87153 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69442)))))))

(declare-fun b!133770 () Bool)

(declare-fun e!87154 () Option!177)

(assert (=> b!133770 (= e!87154 None!175)))

(declare-fun b!133769 () Bool)

(assert (=> b!133769 (= e!87154 (getValueByKey!171 (t!6198 (toList!869 lt!69442)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133768 () Bool)

(assert (=> b!133768 (= e!87153 e!87154)))

(declare-fun c!24822 () Bool)

(assert (=> b!133768 (= c!24822 (and ((_ is Cons!1731) (toList!869 lt!69442)) (not (= (_1!1314 (h!2336 (toList!869 lt!69442))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun d!40815 () Bool)

(declare-fun c!24821 () Bool)

(assert (=> d!40815 (= c!24821 (and ((_ is Cons!1731) (toList!869 lt!69442)) (= (_1!1314 (h!2336 (toList!869 lt!69442))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40815 (= (getValueByKey!171 (toList!869 lt!69442) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!87153)))

(assert (= (and d!40815 c!24821) b!133767))

(assert (= (and d!40815 (not c!24821)) b!133768))

(assert (= (and b!133768 c!24822) b!133769))

(assert (= (and b!133768 (not c!24822)) b!133770))

(declare-fun m!158387 () Bool)

(assert (=> b!133769 m!158387))

(assert (=> b!132968 d!40815))

(declare-fun d!40817 () Bool)

(assert (=> d!40817 (isDefined!125 (getValueByKey!171 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!70053 () Unit!4150)

(assert (=> d!40817 (= lt!70053 (choose!831 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!87155 () Bool)

(assert (=> d!40817 e!87155))

(declare-fun res!64367 () Bool)

(assert (=> d!40817 (=> (not res!64367) (not e!87155))))

(assert (=> d!40817 (= res!64367 (isStrictlySorted!317 (toList!869 lt!69221)))))

(assert (=> d!40817 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!70053)))

(declare-fun b!133771 () Bool)

(assert (=> b!133771 (= e!87155 (containsKey!175 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!40817 res!64367) b!133771))

(assert (=> d!40817 m!156357))

(assert (=> d!40817 m!156711))

(assert (=> d!40817 m!156711))

(assert (=> d!40817 m!157029))

(assert (=> d!40817 m!156357))

(declare-fun m!158389 () Bool)

(assert (=> d!40817 m!158389))

(declare-fun m!158391 () Bool)

(assert (=> d!40817 m!158391))

(assert (=> b!133771 m!156357))

(assert (=> b!133771 m!157025))

(assert (=> b!133112 d!40817))

(assert (=> b!133112 d!40559))

(assert (=> b!133112 d!40561))

(assert (=> b!132882 d!40547))

(assert (=> b!132836 d!40473))

(declare-fun d!40819 () Bool)

(declare-fun e!87156 () Bool)

(assert (=> d!40819 e!87156))

(declare-fun res!64369 () Bool)

(assert (=> d!40819 (=> (not res!64369) (not e!87156))))

(declare-fun lt!70055 () ListLongMap!1707)

(assert (=> d!40819 (= res!64369 (contains!896 lt!70055 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun lt!70057 () List!1735)

(assert (=> d!40819 (= lt!70055 (ListLongMap!1708 lt!70057))))

(declare-fun lt!70056 () Unit!4150)

(declare-fun lt!70054 () Unit!4150)

(assert (=> d!40819 (= lt!70056 lt!70054)))

(assert (=> d!40819 (= (getValueByKey!171 lt!70057 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!40819 (= lt!70054 (lemmaContainsTupThenGetReturnValue!88 lt!70057 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!40819 (= lt!70057 (insertStrictlySorted!90 (toList!869 call!14672) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!40819 (= (+!170 call!14672 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!70055)))

(declare-fun b!133772 () Bool)

(declare-fun res!64368 () Bool)

(assert (=> b!133772 (=> (not res!64368) (not e!87156))))

(assert (=> b!133772 (= res!64368 (= (getValueByKey!171 (toList!869 lt!70055) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!133773 () Bool)

(assert (=> b!133773 (= e!87156 (contains!898 (toList!869 lt!70055) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(assert (= (and d!40819 res!64369) b!133772))

(assert (= (and b!133772 res!64368) b!133773))

(declare-fun m!158393 () Bool)

(assert (=> d!40819 m!158393))

(declare-fun m!158395 () Bool)

(assert (=> d!40819 m!158395))

(declare-fun m!158397 () Bool)

(assert (=> d!40819 m!158397))

(declare-fun m!158399 () Bool)

(assert (=> d!40819 m!158399))

(declare-fun m!158401 () Bool)

(assert (=> b!133772 m!158401))

(declare-fun m!158403 () Bool)

(assert (=> b!133773 m!158403))

(assert (=> b!133006 d!40819))

(declare-fun d!40821 () Bool)

(declare-fun e!87157 () Bool)

(assert (=> d!40821 e!87157))

(declare-fun res!64370 () Bool)

(assert (=> d!40821 (=> res!64370 e!87157)))

(declare-fun lt!70058 () Bool)

(assert (=> d!40821 (= res!64370 (not lt!70058))))

(declare-fun lt!70060 () Bool)

(assert (=> d!40821 (= lt!70058 lt!70060)))

(declare-fun lt!70059 () Unit!4150)

(declare-fun e!87158 () Unit!4150)

(assert (=> d!40821 (= lt!70059 e!87158)))

(declare-fun c!24823 () Bool)

(assert (=> d!40821 (= c!24823 lt!70060)))

(assert (=> d!40821 (= lt!70060 (containsKey!175 (toList!869 lt!69376) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40821 (= (contains!896 lt!69376 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70058)))

(declare-fun b!133774 () Bool)

(declare-fun lt!70061 () Unit!4150)

(assert (=> b!133774 (= e!87158 lt!70061)))

(assert (=> b!133774 (= lt!70061 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69376) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!133774 (isDefined!125 (getValueByKey!171 (toList!869 lt!69376) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133775 () Bool)

(declare-fun Unit!4197 () Unit!4150)

(assert (=> b!133775 (= e!87158 Unit!4197)))

(declare-fun b!133776 () Bool)

(assert (=> b!133776 (= e!87157 (isDefined!125 (getValueByKey!171 (toList!869 lt!69376) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!40821 c!24823) b!133774))

(assert (= (and d!40821 (not c!24823)) b!133775))

(assert (= (and d!40821 (not res!64370)) b!133776))

(declare-fun m!158405 () Bool)

(assert (=> d!40821 m!158405))

(declare-fun m!158407 () Bool)

(assert (=> b!133774 m!158407))

(assert (=> b!133774 m!156589))

(assert (=> b!133774 m!156589))

(declare-fun m!158409 () Bool)

(assert (=> b!133774 m!158409))

(assert (=> b!133776 m!156589))

(assert (=> b!133776 m!156589))

(assert (=> b!133776 m!158409))

(assert (=> d!40323 d!40821))

(declare-fun b!133777 () Bool)

(declare-fun e!87159 () Option!177)

(assert (=> b!133777 (= e!87159 (Some!176 (_2!1314 (h!2336 lt!69378))))))

(declare-fun b!133780 () Bool)

(declare-fun e!87160 () Option!177)

(assert (=> b!133780 (= e!87160 None!175)))

(declare-fun b!133779 () Bool)

(assert (=> b!133779 (= e!87160 (getValueByKey!171 (t!6198 lt!69378) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133778 () Bool)

(assert (=> b!133778 (= e!87159 e!87160)))

(declare-fun c!24825 () Bool)

(assert (=> b!133778 (= c!24825 (and ((_ is Cons!1731) lt!69378) (not (= (_1!1314 (h!2336 lt!69378)) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!24824 () Bool)

(declare-fun d!40823 () Bool)

(assert (=> d!40823 (= c!24824 (and ((_ is Cons!1731) lt!69378) (= (_1!1314 (h!2336 lt!69378)) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!40823 (= (getValueByKey!171 lt!69378 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!87159)))

(assert (= (and d!40823 c!24824) b!133777))

(assert (= (and d!40823 (not c!24824)) b!133778))

(assert (= (and b!133778 c!24825) b!133779))

(assert (= (and b!133778 (not c!24825)) b!133780))

(declare-fun m!158411 () Bool)

(assert (=> b!133779 m!158411))

(assert (=> d!40323 d!40823))

(declare-fun d!40825 () Bool)

(assert (=> d!40825 (= (getValueByKey!171 lt!69378 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!176 (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!70062 () Unit!4150)

(assert (=> d!40825 (= lt!70062 (choose!834 lt!69378 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87161 () Bool)

(assert (=> d!40825 e!87161))

(declare-fun res!64371 () Bool)

(assert (=> d!40825 (=> (not res!64371) (not e!87161))))

(assert (=> d!40825 (= res!64371 (isStrictlySorted!317 lt!69378))))

(assert (=> d!40825 (= (lemmaContainsTupThenGetReturnValue!88 lt!69378 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70062)))

(declare-fun b!133781 () Bool)

(declare-fun res!64372 () Bool)

(assert (=> b!133781 (=> (not res!64372) (not e!87161))))

(assert (=> b!133781 (= res!64372 (containsKey!175 lt!69378 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133782 () Bool)

(assert (=> b!133782 (= e!87161 (contains!898 lt!69378 (tuple2!2609 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!40825 res!64371) b!133781))

(assert (= (and b!133781 res!64372) b!133782))

(assert (=> d!40825 m!156583))

(declare-fun m!158413 () Bool)

(assert (=> d!40825 m!158413))

(declare-fun m!158415 () Bool)

(assert (=> d!40825 m!158415))

(declare-fun m!158417 () Bool)

(assert (=> b!133781 m!158417))

(declare-fun m!158419 () Bool)

(assert (=> b!133782 m!158419))

(assert (=> d!40323 d!40825))

(declare-fun bm!14764 () Bool)

(declare-fun call!14767 () List!1735)

(declare-fun call!14768 () List!1735)

(assert (=> bm!14764 (= call!14767 call!14768)))

(declare-fun e!87164 () Bool)

(declare-fun b!133783 () Bool)

(declare-fun lt!70063 () List!1735)

(assert (=> b!133783 (= e!87164 (contains!898 lt!70063 (tuple2!2609 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!133784 () Bool)

(declare-fun e!87166 () List!1735)

(assert (=> b!133784 (= e!87166 call!14768)))

(declare-fun b!133785 () Bool)

(declare-fun res!64373 () Bool)

(assert (=> b!133785 (=> (not res!64373) (not e!87164))))

(assert (=> b!133785 (= res!64373 (containsKey!175 lt!70063 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87162 () List!1735)

(declare-fun b!133786 () Bool)

(assert (=> b!133786 (= e!87162 (insertStrictlySorted!90 (t!6198 (toList!869 e!86537)) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133787 () Bool)

(declare-fun e!87163 () List!1735)

(assert (=> b!133787 (= e!87163 call!14767)))

(declare-fun bm!14765 () Bool)

(declare-fun call!14769 () List!1735)

(assert (=> bm!14765 (= call!14768 call!14769)))

(declare-fun c!24828 () Bool)

(declare-fun b!133789 () Bool)

(declare-fun c!24826 () Bool)

(assert (=> b!133789 (= e!87162 (ite c!24828 (t!6198 (toList!869 e!86537)) (ite c!24826 (Cons!1731 (h!2336 (toList!869 e!86537)) (t!6198 (toList!869 e!86537))) Nil!1732)))))

(declare-fun b!133790 () Bool)

(declare-fun e!87165 () List!1735)

(assert (=> b!133790 (= e!87165 call!14769)))

(declare-fun b!133791 () Bool)

(assert (=> b!133791 (= c!24826 (and ((_ is Cons!1731) (toList!869 e!86537)) (bvsgt (_1!1314 (h!2336 (toList!869 e!86537))) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> b!133791 (= e!87166 e!87163)))

(declare-fun d!40827 () Bool)

(assert (=> d!40827 e!87164))

(declare-fun res!64374 () Bool)

(assert (=> d!40827 (=> (not res!64374) (not e!87164))))

(assert (=> d!40827 (= res!64374 (isStrictlySorted!317 lt!70063))))

(assert (=> d!40827 (= lt!70063 e!87165)))

(declare-fun c!24827 () Bool)

(assert (=> d!40827 (= c!24827 (and ((_ is Cons!1731) (toList!869 e!86537)) (bvslt (_1!1314 (h!2336 (toList!869 e!86537))) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!40827 (isStrictlySorted!317 (toList!869 e!86537))))

(assert (=> d!40827 (= (insertStrictlySorted!90 (toList!869 e!86537) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70063)))

(declare-fun b!133788 () Bool)

(assert (=> b!133788 (= e!87165 e!87166)))

(assert (=> b!133788 (= c!24828 (and ((_ is Cons!1731) (toList!869 e!86537)) (= (_1!1314 (h!2336 (toList!869 e!86537))) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!133792 () Bool)

(assert (=> b!133792 (= e!87163 call!14767)))

(declare-fun bm!14766 () Bool)

(assert (=> bm!14766 (= call!14769 ($colon$colon!91 e!87162 (ite c!24827 (h!2336 (toList!869 e!86537)) (tuple2!2609 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!24829 () Bool)

(assert (=> bm!14766 (= c!24829 c!24827)))

(assert (= (and d!40827 c!24827) b!133790))

(assert (= (and d!40827 (not c!24827)) b!133788))

(assert (= (and b!133788 c!24828) b!133784))

(assert (= (and b!133788 (not c!24828)) b!133791))

(assert (= (and b!133791 c!24826) b!133792))

(assert (= (and b!133791 (not c!24826)) b!133787))

(assert (= (or b!133792 b!133787) bm!14764))

(assert (= (or b!133784 bm!14764) bm!14765))

(assert (= (or b!133790 bm!14765) bm!14766))

(assert (= (and bm!14766 c!24829) b!133786))

(assert (= (and bm!14766 (not c!24829)) b!133789))

(assert (= (and d!40827 res!64374) b!133785))

(assert (= (and b!133785 res!64373) b!133783))

(declare-fun m!158421 () Bool)

(assert (=> b!133785 m!158421))

(declare-fun m!158423 () Bool)

(assert (=> b!133783 m!158423))

(declare-fun m!158425 () Bool)

(assert (=> d!40827 m!158425))

(declare-fun m!158427 () Bool)

(assert (=> d!40827 m!158427))

(declare-fun m!158429 () Bool)

(assert (=> bm!14766 m!158429))

(declare-fun m!158431 () Bool)

(assert (=> b!133786 m!158431))

(assert (=> d!40323 d!40827))

(declare-fun d!40829 () Bool)

(assert (=> d!40829 (= (apply!116 lt!69510 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!69510) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5549 () Bool)

(assert (= bs!5549 d!40829))

(assert (=> bs!5549 m!158053))

(assert (=> bs!5549 m!158053))

(declare-fun m!158433 () Bool)

(assert (=> bs!5549 m!158433))

(assert (=> b!133031 d!40829))

(declare-fun b!133793 () Bool)

(declare-fun e!87167 () Option!177)

(assert (=> b!133793 (= e!87167 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69449)))))))

(declare-fun b!133796 () Bool)

(declare-fun e!87168 () Option!177)

(assert (=> b!133796 (= e!87168 None!175)))

(declare-fun b!133795 () Bool)

(assert (=> b!133795 (= e!87168 (getValueByKey!171 (t!6198 (toList!869 lt!69449)) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133794 () Bool)

(assert (=> b!133794 (= e!87167 e!87168)))

(declare-fun c!24831 () Bool)

(assert (=> b!133794 (= c!24831 (and ((_ is Cons!1731) (toList!869 lt!69449)) (not (= (_1!1314 (h!2336 (toList!869 lt!69449))) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!24830 () Bool)

(declare-fun d!40831 () Bool)

(assert (=> d!40831 (= c!24830 (and ((_ is Cons!1731) (toList!869 lt!69449)) (= (_1!1314 (h!2336 (toList!869 lt!69449))) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40831 (= (getValueByKey!171 (toList!869 lt!69449) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!87167)))

(assert (= (and d!40831 c!24830) b!133793))

(assert (= (and d!40831 (not c!24830)) b!133794))

(assert (= (and b!133794 c!24831) b!133795))

(assert (= (and b!133794 (not c!24831)) b!133796))

(declare-fun m!158435 () Bool)

(assert (=> b!133795 m!158435))

(assert (=> b!132970 d!40831))

(declare-fun d!40833 () Bool)

(assert (=> d!40833 (= (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69228)) (v!3201 (getValueByKey!171 (toList!869 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69228)))))

(assert (=> d!40357 d!40833))

(declare-fun b!133797 () Bool)

(declare-fun e!87169 () Option!177)

(assert (=> b!133797 (= e!87169 (Some!176 (_2!1314 (h!2336 (toList!869 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))))

(declare-fun b!133800 () Bool)

(declare-fun e!87170 () Option!177)

(assert (=> b!133800 (= e!87170 None!175)))

(declare-fun b!133799 () Bool)

(assert (=> b!133799 (= e!87170 (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!69228))))

(declare-fun b!133798 () Bool)

(assert (=> b!133798 (= e!87169 e!87170)))

(declare-fun c!24833 () Bool)

(assert (=> b!133798 (= c!24833 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) (not (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) lt!69228))))))

(declare-fun d!40835 () Bool)

(declare-fun c!24832 () Bool)

(assert (=> d!40835 (= c!24832 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) lt!69228)))))

(assert (=> d!40835 (= (getValueByKey!171 (toList!869 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69228) e!87169)))

(assert (= (and d!40835 c!24832) b!133797))

(assert (= (and d!40835 (not c!24832)) b!133798))

(assert (= (and b!133798 c!24833) b!133799))

(assert (= (and b!133798 (not c!24833)) b!133800))

(declare-fun m!158437 () Bool)

(assert (=> b!133799 m!158437))

(assert (=> d!40357 d!40835))

(assert (=> d!40319 d!40337))

(declare-fun b!133817 () Bool)

(declare-fun e!87179 () Bool)

(declare-fun call!14774 () Bool)

(assert (=> b!133817 (= e!87179 (not call!14774))))

(declare-fun b!133818 () Bool)

(declare-fun res!64385 () Bool)

(assert (=> b!133818 (=> (not res!64385) (not e!87179))))

(declare-fun lt!70066 () SeekEntryResult!285)

(assert (=> b!133818 (= res!64385 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3303 lt!70066)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133819 () Bool)

(declare-fun res!64384 () Bool)

(assert (=> b!133819 (= res!64384 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3300 lt!70066)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87182 () Bool)

(assert (=> b!133819 (=> (not res!64384) (not e!87182))))

(declare-fun b!133820 () Bool)

(assert (=> b!133820 (= e!87182 (not call!14774))))

(declare-fun call!14775 () Bool)

(declare-fun bm!14772 () Bool)

(declare-fun c!24838 () Bool)

(assert (=> bm!14772 (= call!14775 (inRange!0 (ite c!24838 (index!3300 lt!70066) (index!3303 lt!70066)) (mask!7165 newMap!16)))))

(declare-fun b!133821 () Bool)

(declare-fun e!87181 () Bool)

(declare-fun e!87180 () Bool)

(assert (=> b!133821 (= e!87181 e!87180)))

(declare-fun c!24839 () Bool)

(assert (=> b!133821 (= c!24839 ((_ is MissingVacant!285) lt!70066))))

(declare-fun b!133822 () Bool)

(declare-fun res!64386 () Bool)

(assert (=> b!133822 (=> (not res!64386) (not e!87179))))

(assert (=> b!133822 (= res!64386 call!14775)))

(assert (=> b!133822 (= e!87180 e!87179)))

(declare-fun b!133823 () Bool)

(assert (=> b!133823 (= e!87181 e!87182)))

(declare-fun res!64383 () Bool)

(assert (=> b!133823 (= res!64383 call!14775)))

(assert (=> b!133823 (=> (not res!64383) (not e!87182))))

(declare-fun b!133824 () Bool)

(assert (=> b!133824 (= e!87180 ((_ is Undefined!285) lt!70066))))

(declare-fun d!40837 () Bool)

(assert (=> d!40837 e!87181))

(assert (=> d!40837 (= c!24838 ((_ is MissingZero!285) lt!70066))))

(assert (=> d!40837 (= lt!70066 (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(assert (=> d!40837 true))

(declare-fun _$34!974 () Unit!4150)

(assert (=> d!40837 (= (choose!825 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)) _$34!974)))

(declare-fun bm!14771 () Bool)

(assert (=> bm!14771 (= call!14774 (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!40837 c!24838) b!133823))

(assert (= (and d!40837 (not c!24838)) b!133821))

(assert (= (and b!133823 res!64383) b!133819))

(assert (= (and b!133819 res!64384) b!133820))

(assert (= (and b!133821 c!24839) b!133822))

(assert (= (and b!133821 (not c!24839)) b!133824))

(assert (= (and b!133822 res!64386) b!133818))

(assert (= (and b!133818 res!64385) b!133817))

(assert (= (or b!133823 b!133822) bm!14772))

(assert (= (or b!133820 b!133817) bm!14771))

(declare-fun m!158439 () Bool)

(assert (=> bm!14772 m!158439))

(declare-fun m!158441 () Bool)

(assert (=> b!133819 m!158441))

(assert (=> bm!14771 m!156287))

(assert (=> bm!14771 m!156439))

(assert (=> d!40837 m!156287))

(assert (=> d!40837 m!156445))

(declare-fun m!158443 () Bool)

(assert (=> b!133818 m!158443))

(assert (=> d!40319 d!40837))

(assert (=> d!40319 d!40475))

(declare-fun d!40839 () Bool)

(assert (=> d!40839 (isDefined!125 (getValueByKey!171 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70067 () Unit!4150)

(assert (=> d!40839 (= lt!70067 (choose!831 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87183 () Bool)

(assert (=> d!40839 e!87183))

(declare-fun res!64387 () Bool)

(assert (=> d!40839 (=> (not res!64387) (not e!87183))))

(assert (=> d!40839 (= res!64387 (isStrictlySorted!317 (toList!869 lt!69221)))))

(assert (=> d!40839 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70067)))

(declare-fun b!133825 () Bool)

(assert (=> b!133825 (= e!87183 (containsKey!175 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!40839 res!64387) b!133825))

(assert (=> d!40839 m!156719))

(assert (=> d!40839 m!156719))

(assert (=> d!40839 m!157057))

(declare-fun m!158445 () Bool)

(assert (=> d!40839 m!158445))

(assert (=> d!40839 m!158391))

(assert (=> b!133825 m!157053))

(assert (=> b!133129 d!40839))

(assert (=> b!133129 d!40613))

(assert (=> b!133129 d!40615))

(assert (=> b!132998 d!40473))

(declare-fun b!133826 () Bool)

(declare-fun e!87184 () Option!177)

(assert (=> b!133826 (= e!87184 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69407)))))))

(declare-fun b!133829 () Bool)

(declare-fun e!87185 () Option!177)

(assert (=> b!133829 (= e!87185 None!175)))

(declare-fun b!133828 () Bool)

(assert (=> b!133828 (= e!87185 (getValueByKey!171 (t!6198 (toList!869 lt!69407)) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!133827 () Bool)

(assert (=> b!133827 (= e!87184 e!87185)))

(declare-fun c!24841 () Bool)

(assert (=> b!133827 (= c!24841 (and ((_ is Cons!1731) (toList!869 lt!69407)) (not (= (_1!1314 (h!2336 (toList!869 lt!69407))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))))

(declare-fun c!24840 () Bool)

(declare-fun d!40841 () Bool)

(assert (=> d!40841 (= c!24840 (and ((_ is Cons!1731) (toList!869 lt!69407)) (= (_1!1314 (h!2336 (toList!869 lt!69407))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(assert (=> d!40841 (= (getValueByKey!171 (toList!869 lt!69407) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) e!87184)))

(assert (= (and d!40841 c!24840) b!133826))

(assert (= (and d!40841 (not c!24840)) b!133827))

(assert (= (and b!133827 c!24841) b!133828))

(assert (= (and b!133827 (not c!24841)) b!133829))

(declare-fun m!158447 () Bool)

(assert (=> b!133828 m!158447))

(assert (=> b!132925 d!40841))

(declare-fun d!40843 () Bool)

(declare-fun e!87186 () Bool)

(assert (=> d!40843 e!87186))

(declare-fun res!64388 () Bool)

(assert (=> d!40843 (=> res!64388 e!87186)))

(declare-fun lt!70068 () Bool)

(assert (=> d!40843 (= res!64388 (not lt!70068))))

(declare-fun lt!70070 () Bool)

(assert (=> d!40843 (= lt!70068 lt!70070)))

(declare-fun lt!70069 () Unit!4150)

(declare-fun e!87187 () Unit!4150)

(assert (=> d!40843 (= lt!70069 e!87187)))

(declare-fun c!24842 () Bool)

(assert (=> d!40843 (= c!24842 lt!70070)))

(assert (=> d!40843 (= lt!70070 (containsKey!175 (toList!869 lt!69449) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!40843 (= (contains!896 lt!69449 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!70068)))

(declare-fun b!133830 () Bool)

(declare-fun lt!70071 () Unit!4150)

(assert (=> b!133830 (= e!87187 lt!70071)))

(assert (=> b!133830 (= lt!70071 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69449) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> b!133830 (isDefined!125 (getValueByKey!171 (toList!869 lt!69449) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133831 () Bool)

(declare-fun Unit!4198 () Unit!4150)

(assert (=> b!133831 (= e!87187 Unit!4198)))

(declare-fun b!133832 () Bool)

(assert (=> b!133832 (= e!87186 (isDefined!125 (getValueByKey!171 (toList!869 lt!69449) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!40843 c!24842) b!133830))

(assert (= (and d!40843 (not c!24842)) b!133831))

(assert (= (and d!40843 (not res!64388)) b!133832))

(declare-fun m!158449 () Bool)

(assert (=> d!40843 m!158449))

(declare-fun m!158451 () Bool)

(assert (=> b!133830 m!158451))

(assert (=> b!133830 m!156749))

(assert (=> b!133830 m!156749))

(declare-fun m!158453 () Bool)

(assert (=> b!133830 m!158453))

(assert (=> b!133832 m!156749))

(assert (=> b!133832 m!156749))

(assert (=> b!133832 m!158453))

(assert (=> d!40351 d!40843))

(declare-fun b!133833 () Bool)

(declare-fun e!87188 () Option!177)

(assert (=> b!133833 (= e!87188 (Some!176 (_2!1314 (h!2336 lt!69451))))))

(declare-fun b!133836 () Bool)

(declare-fun e!87189 () Option!177)

(assert (=> b!133836 (= e!87189 None!175)))

(declare-fun b!133835 () Bool)

(assert (=> b!133835 (= e!87189 (getValueByKey!171 (t!6198 lt!69451) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133834 () Bool)

(assert (=> b!133834 (= e!87188 e!87189)))

(declare-fun c!24844 () Bool)

(assert (=> b!133834 (= c!24844 (and ((_ is Cons!1731) lt!69451) (not (= (_1!1314 (h!2336 lt!69451)) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!24843 () Bool)

(declare-fun d!40845 () Bool)

(assert (=> d!40845 (= c!24843 (and ((_ is Cons!1731) lt!69451) (= (_1!1314 (h!2336 lt!69451)) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40845 (= (getValueByKey!171 lt!69451 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!87188)))

(assert (= (and d!40845 c!24843) b!133833))

(assert (= (and d!40845 (not c!24843)) b!133834))

(assert (= (and b!133834 c!24844) b!133835))

(assert (= (and b!133834 (not c!24844)) b!133836))

(declare-fun m!158455 () Bool)

(assert (=> b!133835 m!158455))

(assert (=> d!40351 d!40845))

(declare-fun d!40847 () Bool)

(assert (=> d!40847 (= (getValueByKey!171 lt!69451 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun lt!70072 () Unit!4150)

(assert (=> d!40847 (= lt!70072 (choose!834 lt!69451 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun e!87190 () Bool)

(assert (=> d!40847 e!87190))

(declare-fun res!64389 () Bool)

(assert (=> d!40847 (=> (not res!64389) (not e!87190))))

(assert (=> d!40847 (= res!64389 (isStrictlySorted!317 lt!69451))))

(assert (=> d!40847 (= (lemmaContainsTupThenGetReturnValue!88 lt!69451 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!70072)))

(declare-fun b!133837 () Bool)

(declare-fun res!64390 () Bool)

(assert (=> b!133837 (=> (not res!64390) (not e!87190))))

(assert (=> b!133837 (= res!64390 (containsKey!175 lt!69451 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133838 () Bool)

(assert (=> b!133838 (= e!87190 (contains!898 lt!69451 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!40847 res!64389) b!133837))

(assert (= (and b!133837 res!64390) b!133838))

(assert (=> d!40847 m!156743))

(declare-fun m!158457 () Bool)

(assert (=> d!40847 m!158457))

(declare-fun m!158459 () Bool)

(assert (=> d!40847 m!158459))

(declare-fun m!158461 () Bool)

(assert (=> b!133837 m!158461))

(declare-fun m!158463 () Bool)

(assert (=> b!133838 m!158463))

(assert (=> d!40351 d!40847))

(declare-fun bm!14773 () Bool)

(declare-fun call!14776 () List!1735)

(declare-fun call!14777 () List!1735)

(assert (=> bm!14773 (= call!14776 call!14777)))

(declare-fun lt!70073 () List!1735)

(declare-fun e!87193 () Bool)

(declare-fun b!133839 () Bool)

(assert (=> b!133839 (= e!87193 (contains!898 lt!70073 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!133840 () Bool)

(declare-fun e!87195 () List!1735)

(assert (=> b!133840 (= e!87195 call!14777)))

(declare-fun b!133841 () Bool)

(declare-fun res!64391 () Bool)

(assert (=> b!133841 (=> (not res!64391) (not e!87193))))

(assert (=> b!133841 (= res!64391 (containsKey!175 lt!70073 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133842 () Bool)

(declare-fun e!87191 () List!1735)

(assert (=> b!133842 (= e!87191 (insertStrictlySorted!90 (t!6198 (toList!869 lt!69225)) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!133843 () Bool)

(declare-fun e!87192 () List!1735)

(assert (=> b!133843 (= e!87192 call!14776)))

(declare-fun bm!14774 () Bool)

(declare-fun call!14778 () List!1735)

(assert (=> bm!14774 (= call!14777 call!14778)))

(declare-fun c!24845 () Bool)

(declare-fun c!24847 () Bool)

(declare-fun b!133845 () Bool)

(assert (=> b!133845 (= e!87191 (ite c!24847 (t!6198 (toList!869 lt!69225)) (ite c!24845 (Cons!1731 (h!2336 (toList!869 lt!69225)) (t!6198 (toList!869 lt!69225))) Nil!1732)))))

(declare-fun b!133846 () Bool)

(declare-fun e!87194 () List!1735)

(assert (=> b!133846 (= e!87194 call!14778)))

(declare-fun b!133847 () Bool)

(assert (=> b!133847 (= c!24845 (and ((_ is Cons!1731) (toList!869 lt!69225)) (bvsgt (_1!1314 (h!2336 (toList!869 lt!69225))) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> b!133847 (= e!87195 e!87192)))

(declare-fun d!40849 () Bool)

(assert (=> d!40849 e!87193))

(declare-fun res!64392 () Bool)

(assert (=> d!40849 (=> (not res!64392) (not e!87193))))

(assert (=> d!40849 (= res!64392 (isStrictlySorted!317 lt!70073))))

(assert (=> d!40849 (= lt!70073 e!87194)))

(declare-fun c!24846 () Bool)

(assert (=> d!40849 (= c!24846 (and ((_ is Cons!1731) (toList!869 lt!69225)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69225))) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40849 (isStrictlySorted!317 (toList!869 lt!69225))))

(assert (=> d!40849 (= (insertStrictlySorted!90 (toList!869 lt!69225) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!70073)))

(declare-fun b!133844 () Bool)

(assert (=> b!133844 (= e!87194 e!87195)))

(assert (=> b!133844 (= c!24847 (and ((_ is Cons!1731) (toList!869 lt!69225)) (= (_1!1314 (h!2336 (toList!869 lt!69225))) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!133848 () Bool)

(assert (=> b!133848 (= e!87192 call!14776)))

(declare-fun bm!14775 () Bool)

(assert (=> bm!14775 (= call!14778 ($colon$colon!91 e!87191 (ite c!24846 (h!2336 (toList!869 lt!69225)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!24848 () Bool)

(assert (=> bm!14775 (= c!24848 c!24846)))

(assert (= (and d!40849 c!24846) b!133846))

(assert (= (and d!40849 (not c!24846)) b!133844))

(assert (= (and b!133844 c!24847) b!133840))

(assert (= (and b!133844 (not c!24847)) b!133847))

(assert (= (and b!133847 c!24845) b!133848))

(assert (= (and b!133847 (not c!24845)) b!133843))

(assert (= (or b!133848 b!133843) bm!14773))

(assert (= (or b!133840 bm!14773) bm!14774))

(assert (= (or b!133846 bm!14774) bm!14775))

(assert (= (and bm!14775 c!24848) b!133842))

(assert (= (and bm!14775 (not c!24848)) b!133845))

(assert (= (and d!40849 res!64392) b!133841))

(assert (= (and b!133841 res!64391) b!133839))

(declare-fun m!158465 () Bool)

(assert (=> b!133841 m!158465))

(declare-fun m!158467 () Bool)

(assert (=> b!133839 m!158467))

(declare-fun m!158469 () Bool)

(assert (=> d!40849 m!158469))

(declare-fun m!158471 () Bool)

(assert (=> d!40849 m!158471))

(declare-fun m!158473 () Bool)

(assert (=> bm!14775 m!158473))

(declare-fun m!158475 () Bool)

(assert (=> b!133842 m!158475))

(assert (=> d!40351 d!40849))

(declare-fun d!40851 () Bool)

(declare-fun res!64393 () Bool)

(declare-fun e!87196 () Bool)

(assert (=> d!40851 (=> res!64393 e!87196)))

(assert (=> d!40851 (= res!64393 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) lt!69227)))))

(assert (=> d!40851 (= (containsKey!175 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69227) e!87196)))

(declare-fun b!133849 () Bool)

(declare-fun e!87197 () Bool)

(assert (=> b!133849 (= e!87196 e!87197)))

(declare-fun res!64394 () Bool)

(assert (=> b!133849 (=> (not res!64394) (not e!87197))))

(assert (=> b!133849 (= res!64394 (and (or (not ((_ is Cons!1731) (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) (bvsle (_1!1314 (h!2336 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) lt!69227)) ((_ is Cons!1731) (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) (bvslt (_1!1314 (h!2336 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) lt!69227)))))

(declare-fun b!133850 () Bool)

(assert (=> b!133850 (= e!87197 (containsKey!175 (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!69227))))

(assert (= (and d!40851 (not res!64393)) b!133849))

(assert (= (and b!133849 res!64394) b!133850))

(declare-fun m!158477 () Bool)

(assert (=> b!133850 m!158477))

(assert (=> d!40367 d!40851))

(declare-fun b!133851 () Bool)

(declare-fun lt!70074 () SeekEntryResult!285)

(assert (=> b!133851 (and (bvsge (index!3302 lt!70074) #b00000000000000000000000000000000) (bvslt (index!3302 lt!70074) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun res!64396 () Bool)

(assert (=> b!133851 (= res!64396 (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3302 lt!70074)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87201 () Bool)

(assert (=> b!133851 (=> res!64396 e!87201)))

(declare-fun b!133852 () Bool)

(declare-fun e!87198 () SeekEntryResult!285)

(assert (=> b!133852 (= e!87198 (Intermediate!285 true (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun b!133853 () Bool)

(declare-fun e!87199 () SeekEntryResult!285)

(assert (=> b!133853 (= e!87199 (Intermediate!285 false (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun b!133854 () Bool)

(assert (=> b!133854 (= e!87199 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000 (mask!7165 (v!3197 (underlying!454 thiss!992)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun d!40853 () Bool)

(declare-fun e!87200 () Bool)

(assert (=> d!40853 e!87200))

(declare-fun c!24850 () Bool)

(assert (=> d!40853 (= c!24850 (and ((_ is Intermediate!285) lt!70074) (undefined!1097 lt!70074)))))

(assert (=> d!40853 (= lt!70074 e!87198)))

(declare-fun c!24849 () Bool)

(assert (=> d!40853 (= c!24849 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!70075 () (_ BitVec 64))

(assert (=> d!40853 (= lt!70075 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!40853 (validMask!0 (mask!7165 (v!3197 (underlying!454 thiss!992))))))

(assert (=> d!40853 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3197 (underlying!454 thiss!992)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))) lt!70074)))

(declare-fun b!133855 () Bool)

(assert (=> b!133855 (and (bvsge (index!3302 lt!70074) #b00000000000000000000000000000000) (bvslt (index!3302 lt!70074) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun res!64395 () Bool)

(assert (=> b!133855 (= res!64395 (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3302 lt!70074)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> b!133855 (=> res!64395 e!87201)))

(declare-fun e!87202 () Bool)

(assert (=> b!133855 (= e!87202 e!87201)))

(declare-fun b!133856 () Bool)

(assert (=> b!133856 (= e!87200 (bvsge (x!15602 lt!70074) #b01111111111111111111111111111110))))

(declare-fun b!133857 () Bool)

(assert (=> b!133857 (and (bvsge (index!3302 lt!70074) #b00000000000000000000000000000000) (bvslt (index!3302 lt!70074) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> b!133857 (= e!87201 (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3302 lt!70074)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133858 () Bool)

(assert (=> b!133858 (= e!87198 e!87199)))

(declare-fun c!24851 () Bool)

(assert (=> b!133858 (= c!24851 (or (= lt!70075 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)) (= (bvadd lt!70075 lt!70075) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133859 () Bool)

(assert (=> b!133859 (= e!87200 e!87202)))

(declare-fun res!64397 () Bool)

(assert (=> b!133859 (= res!64397 (and ((_ is Intermediate!285) lt!70074) (not (undefined!1097 lt!70074)) (bvslt (x!15602 lt!70074) #b01111111111111111111111111111110) (bvsge (x!15602 lt!70074) #b00000000000000000000000000000000) (bvsge (x!15602 lt!70074) #b00000000000000000000000000000000)))))

(assert (=> b!133859 (=> (not res!64397) (not e!87202))))

(assert (= (and d!40853 c!24849) b!133852))

(assert (= (and d!40853 (not c!24849)) b!133858))

(assert (= (and b!133858 c!24851) b!133853))

(assert (= (and b!133858 (not c!24851)) b!133854))

(assert (= (and d!40853 c!24850) b!133856))

(assert (= (and d!40853 (not c!24850)) b!133859))

(assert (= (and b!133859 res!64397) b!133855))

(assert (= (and b!133855 (not res!64395)) b!133851))

(assert (= (and b!133851 (not res!64396)) b!133857))

(assert (=> b!133854 m!157071))

(declare-fun m!158479 () Bool)

(assert (=> b!133854 m!158479))

(assert (=> b!133854 m!158479))

(assert (=> b!133854 m!156487))

(declare-fun m!158481 () Bool)

(assert (=> b!133854 m!158481))

(declare-fun m!158483 () Bool)

(assert (=> b!133851 m!158483))

(assert (=> b!133855 m!158483))

(assert (=> d!40853 m!157071))

(declare-fun m!158485 () Bool)

(assert (=> d!40853 m!158485))

(assert (=> d!40853 m!156295))

(assert (=> b!133857 m!158483))

(assert (=> d!40419 d!40853))

(declare-fun d!40855 () Bool)

(declare-fun lt!70077 () (_ BitVec 32))

(declare-fun lt!70076 () (_ BitVec 32))

(assert (=> d!40855 (= lt!70077 (bvmul (bvxor lt!70076 (bvlshr lt!70076 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!40855 (= lt!70076 ((_ extract 31 0) (bvand (bvxor (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (bvlshr (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!40855 (and (bvsge (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000000) (let ((res!64209 (let ((h!2338 ((_ extract 31 0) (bvand (bvxor (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (bvlshr (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!15706 (bvmul (bvxor h!2338 (bvlshr h!2338 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!15706 (bvlshr x!15706 #b00000000000000000000000000001101)) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))) (and (bvslt res!64209 (bvadd (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000001)) (bvsge res!64209 #b00000000000000000000000000000000))))))

(assert (=> d!40855 (= (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3197 (underlying!454 thiss!992)))) (bvand (bvxor lt!70077 (bvlshr lt!70077 #b00000000000000000000000000001101)) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(assert (=> d!40419 d!40855))

(assert (=> d!40419 d!40267))

(declare-fun d!40857 () Bool)

(declare-fun e!87203 () Bool)

(assert (=> d!40857 e!87203))

(declare-fun res!64398 () Bool)

(assert (=> d!40857 (=> res!64398 e!87203)))

(declare-fun lt!70078 () Bool)

(assert (=> d!40857 (= res!64398 (not lt!70078))))

(declare-fun lt!70080 () Bool)

(assert (=> d!40857 (= lt!70078 lt!70080)))

(declare-fun lt!70079 () Unit!4150)

(declare-fun e!87204 () Unit!4150)

(assert (=> d!40857 (= lt!70079 e!87204)))

(declare-fun c!24852 () Bool)

(assert (=> d!40857 (= c!24852 lt!70080)))

(assert (=> d!40857 (= lt!70080 (containsKey!175 (toList!869 lt!69225) lt!69223))))

(assert (=> d!40857 (= (contains!896 lt!69225 lt!69223) lt!70078)))

(declare-fun b!133860 () Bool)

(declare-fun lt!70081 () Unit!4150)

(assert (=> b!133860 (= e!87204 lt!70081)))

(assert (=> b!133860 (= lt!70081 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69225) lt!69223))))

(assert (=> b!133860 (isDefined!125 (getValueByKey!171 (toList!869 lt!69225) lt!69223))))

(declare-fun b!133861 () Bool)

(declare-fun Unit!4199 () Unit!4150)

(assert (=> b!133861 (= e!87204 Unit!4199)))

(declare-fun b!133862 () Bool)

(assert (=> b!133862 (= e!87203 (isDefined!125 (getValueByKey!171 (toList!869 lt!69225) lt!69223)))))

(assert (= (and d!40857 c!24852) b!133860))

(assert (= (and d!40857 (not c!24852)) b!133861))

(assert (= (and d!40857 (not res!64398)) b!133862))

(declare-fun m!158487 () Bool)

(assert (=> d!40857 m!158487))

(declare-fun m!158489 () Bool)

(assert (=> b!133860 m!158489))

(assert (=> b!133860 m!156825))

(assert (=> b!133860 m!156825))

(declare-fun m!158491 () Bool)

(assert (=> b!133860 m!158491))

(assert (=> b!133862 m!156825))

(assert (=> b!133862 m!156825))

(assert (=> b!133862 m!158491))

(assert (=> d!40369 d!40857))

(assert (=> d!40369 d!40351))

(assert (=> d!40369 d!40375))

(assert (=> d!40369 d!40361))

(declare-fun d!40859 () Bool)

(assert (=> d!40859 (= (apply!116 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69223) (apply!116 lt!69225 lt!69223))))

(assert (=> d!40859 true))

(declare-fun _$34!975 () Unit!4150)

(assert (=> d!40859 (= (choose!828 lt!69225 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) lt!69223) _$34!975)))

(declare-fun bs!5550 () Bool)

(assert (= bs!5550 d!40859))

(assert (=> bs!5550 m!156371))

(assert (=> bs!5550 m!156371))

(assert (=> bs!5550 m!156389))

(assert (=> bs!5550 m!156401))

(assert (=> d!40369 d!40859))

(declare-fun d!40861 () Bool)

(assert (=> d!40861 (isDefined!125 (getValueByKey!171 (toList!869 call!14629) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun lt!70082 () Unit!4150)

(assert (=> d!40861 (= lt!70082 (choose!831 (toList!869 call!14629) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun e!87205 () Bool)

(assert (=> d!40861 e!87205))

(declare-fun res!64399 () Bool)

(assert (=> d!40861 (=> (not res!64399) (not e!87205))))

(assert (=> d!40861 (= res!64399 (isStrictlySorted!317 (toList!869 call!14629)))))

(assert (=> d!40861 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 call!14629) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) lt!70082)))

(declare-fun b!133863 () Bool)

(assert (=> b!133863 (= e!87205 (containsKey!175 (toList!869 call!14629) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40861 res!64399) b!133863))

(assert (=> d!40861 m!156287))

(assert (=> d!40861 m!156529))

(assert (=> d!40861 m!156529))

(assert (=> d!40861 m!156531))

(assert (=> d!40861 m!156287))

(declare-fun m!158493 () Bool)

(assert (=> d!40861 m!158493))

(declare-fun m!158495 () Bool)

(assert (=> d!40861 m!158495))

(assert (=> b!133863 m!156287))

(assert (=> b!133863 m!156525))

(assert (=> b!132818 d!40861))

(assert (=> b!132818 d!40633))

(assert (=> b!132818 d!40635))

(declare-fun d!40863 () Bool)

(declare-fun e!87206 () Bool)

(assert (=> d!40863 e!87206))

(declare-fun res!64401 () Bool)

(assert (=> d!40863 (=> (not res!64401) (not e!87206))))

(declare-fun lt!70084 () ListLongMap!1707)

(assert (=> d!40863 (= res!64401 (contains!896 lt!70084 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun lt!70086 () List!1735)

(assert (=> d!40863 (= lt!70084 (ListLongMap!1708 lt!70086))))

(declare-fun lt!70085 () Unit!4150)

(declare-fun lt!70083 () Unit!4150)

(assert (=> d!40863 (= lt!70085 lt!70083)))

(assert (=> d!40863 (= (getValueByKey!171 lt!70086 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40863 (= lt!70083 (lemmaContainsTupThenGetReturnValue!88 lt!70086 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40863 (= lt!70086 (insertStrictlySorted!90 (toList!869 call!14665) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40863 (= (+!170 call!14665 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) lt!70084)))

(declare-fun b!133864 () Bool)

(declare-fun res!64400 () Bool)

(assert (=> b!133864 (=> (not res!64400) (not e!87206))))

(assert (=> b!133864 (= res!64400 (= (getValueByKey!171 (toList!869 lt!70084) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!133865 () Bool)

(assert (=> b!133865 (= e!87206 (contains!898 (toList!869 lt!70084) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(assert (= (and d!40863 res!64401) b!133864))

(assert (= (and b!133864 res!64400) b!133865))

(declare-fun m!158497 () Bool)

(assert (=> d!40863 m!158497))

(declare-fun m!158499 () Bool)

(assert (=> d!40863 m!158499))

(declare-fun m!158501 () Bool)

(assert (=> d!40863 m!158501))

(declare-fun m!158503 () Bool)

(assert (=> d!40863 m!158503))

(declare-fun m!158505 () Bool)

(assert (=> b!133864 m!158505))

(declare-fun m!158507 () Bool)

(assert (=> b!133865 m!158507))

(assert (=> b!132939 d!40863))

(declare-fun b!133866 () Bool)

(declare-fun e!87209 () Bool)

(declare-fun e!87210 () Bool)

(assert (=> b!133866 (= e!87209 e!87210)))

(declare-fun c!24853 () Bool)

(assert (=> b!133866 (= c!24853 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!133867 () Bool)

(declare-fun call!14779 () Bool)

(assert (=> b!133867 (= e!87210 call!14779)))

(declare-fun e!87207 () Bool)

(declare-fun b!133868 () Bool)

(assert (=> b!133868 (= e!87207 (contains!897 (ite c!24638 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!14776 () Bool)

(assert (=> bm!14776 (= call!14779 (arrayNoDuplicates!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24853 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24638 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733))) (ite c!24638 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)))))))

(declare-fun d!40865 () Bool)

(declare-fun res!64404 () Bool)

(declare-fun e!87208 () Bool)

(assert (=> d!40865 (=> res!64404 e!87208)))

(assert (=> d!40865 (= res!64404 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!40865 (= (arrayNoDuplicates!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24638 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733))) e!87208)))

(declare-fun b!133869 () Bool)

(assert (=> b!133869 (= e!87210 call!14779)))

(declare-fun b!133870 () Bool)

(assert (=> b!133870 (= e!87208 e!87209)))

(declare-fun res!64402 () Bool)

(assert (=> b!133870 (=> (not res!64402) (not e!87209))))

(assert (=> b!133870 (= res!64402 (not e!87207))))

(declare-fun res!64403 () Bool)

(assert (=> b!133870 (=> (not res!64403) (not e!87207))))

(assert (=> b!133870 (= res!64403 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!40865 (not res!64404)) b!133870))

(assert (= (and b!133870 res!64403) b!133868))

(assert (= (and b!133870 res!64402) b!133866))

(assert (= (and b!133866 c!24853) b!133869))

(assert (= (and b!133866 (not c!24853)) b!133867))

(assert (= (or b!133869 b!133867) bm!14776))

(assert (=> b!133866 m!157901))

(assert (=> b!133866 m!157901))

(assert (=> b!133866 m!157909))

(assert (=> b!133868 m!157901))

(assert (=> b!133868 m!157901))

(declare-fun m!158509 () Bool)

(assert (=> b!133868 m!158509))

(assert (=> bm!14776 m!157901))

(declare-fun m!158511 () Bool)

(assert (=> bm!14776 m!158511))

(assert (=> b!133870 m!157901))

(assert (=> b!133870 m!157901))

(assert (=> b!133870 m!157909))

(assert (=> bm!14694 d!40865))

(declare-fun d!40867 () Bool)

(assert (=> d!40867 (= (inRange!0 (ite c!24625 (index!3301 lt!69611) (ite c!24628 (index!3300 lt!69604) (index!3303 lt!69604))) (mask!7165 newMap!16)) (and (bvsge (ite c!24625 (index!3301 lt!69611) (ite c!24628 (index!3300 lt!69604) (index!3303 lt!69604))) #b00000000000000000000000000000000) (bvslt (ite c!24625 (index!3301 lt!69611) (ite c!24628 (index!3300 lt!69604) (index!3303 lt!69604))) (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!14690 d!40867))

(assert (=> d!40389 d!40549))

(declare-fun d!40869 () Bool)

(declare-fun e!87213 () Bool)

(assert (=> d!40869 e!87213))

(declare-fun res!64407 () Bool)

(assert (=> d!40869 (=> (not res!64407) (not e!87213))))

(assert (=> d!40869 (= res!64407 (and (bvsge (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000000) (bvslt (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (size!2529 (_keys!4614 newMap!16)))))))

(declare-fun lt!70089 () Unit!4150)

(declare-fun choose!41 (array!4780 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1736) Unit!4150)

(assert (=> d!40869 (= lt!70089 (choose!41 (_keys!4614 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) lt!69610 lt!69593))))

(assert (=> d!40869 (bvslt (size!2529 (_keys!4614 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!40869 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4614 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) lt!69610 lt!69593) lt!70089)))

(declare-fun b!133873 () Bool)

(assert (=> b!133873 (= e!87213 (arrayNoDuplicates!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) lt!69610 lt!69593))))

(assert (= (and d!40869 res!64407) b!133873))

(assert (=> d!40869 m!156287))

(declare-fun m!158513 () Bool)

(assert (=> d!40869 m!158513))

(assert (=> b!133873 m!156987))

(assert (=> b!133873 m!156951))

(assert (=> d!40389 d!40869))

(declare-fun b!133874 () Bool)

(declare-fun e!87215 () (_ BitVec 32))

(assert (=> b!133874 (= e!87215 #b00000000000000000000000000000000)))

(declare-fun lt!70090 () (_ BitVec 32))

(declare-fun d!40871 () Bool)

(assert (=> d!40871 (and (bvsge lt!70090 #b00000000000000000000000000000000) (bvsle lt!70090 (bvsub (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!40871 (= lt!70090 e!87215)))

(declare-fun c!24855 () Bool)

(assert (=> d!40871 (= c!24855 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!40871 (and (bvsle #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2529 (_keys!4614 newMap!16)) (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))))

(assert (=> d!40871 (= (arrayCountValidKeys!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))) lt!70090)))

(declare-fun b!133875 () Bool)

(declare-fun e!87214 () (_ BitVec 32))

(declare-fun call!14780 () (_ BitVec 32))

(assert (=> b!133875 (= e!87214 call!14780)))

(declare-fun b!133876 () Bool)

(assert (=> b!133876 (= e!87214 (bvadd #b00000000000000000000000000000001 call!14780))))

(declare-fun bm!14777 () Bool)

(assert (=> bm!14777 (= call!14780 (arrayCountValidKeys!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!133877 () Bool)

(assert (=> b!133877 (= e!87215 e!87214)))

(declare-fun c!24854 () Bool)

(assert (=> b!133877 (= c!24854 (validKeyInArray!0 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!40871 c!24855) b!133874))

(assert (= (and d!40871 (not c!24855)) b!133877))

(assert (= (and b!133877 c!24854) b!133876))

(assert (= (and b!133877 (not c!24854)) b!133875))

(assert (= (or b!133876 b!133875) bm!14777))

(declare-fun m!158515 () Bool)

(assert (=> bm!14777 m!158515))

(declare-fun m!158517 () Bool)

(assert (=> b!133877 m!158517))

(assert (=> b!133877 m!158517))

(declare-fun m!158519 () Bool)

(assert (=> b!133877 m!158519))

(assert (=> d!40389 d!40871))

(assert (=> d!40389 d!40443))

(assert (=> d!40389 d!40285))

(assert (=> d!40389 d!40303))

(declare-fun b!133878 () Bool)

(declare-fun e!87217 () Bool)

(declare-fun call!14781 () Bool)

(assert (=> b!133878 (= e!87217 call!14781)))

(declare-fun b!133879 () Bool)

(declare-fun e!87218 () Bool)

(assert (=> b!133879 (= e!87217 e!87218)))

(declare-fun lt!70092 () (_ BitVec 64))

(assert (=> b!133879 (= lt!70092 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!70093 () Unit!4150)

(assert (=> b!133879 (= lt!70093 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) lt!70092 #b00000000000000000000000000000000))))

(assert (=> b!133879 (arrayContainsKey!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) lt!70092 #b00000000000000000000000000000000)))

(declare-fun lt!70091 () Unit!4150)

(assert (=> b!133879 (= lt!70091 lt!70093)))

(declare-fun res!64408 () Bool)

(assert (=> b!133879 (= res!64408 (= (seekEntryOrOpen!0 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000) (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (mask!7165 newMap!16)) (Found!285 #b00000000000000000000000000000000)))))

(assert (=> b!133879 (=> (not res!64408) (not e!87218))))

(declare-fun b!133880 () Bool)

(assert (=> b!133880 (= e!87218 call!14781)))

(declare-fun b!133881 () Bool)

(declare-fun e!87216 () Bool)

(assert (=> b!133881 (= e!87216 e!87217)))

(declare-fun c!24856 () Bool)

(assert (=> b!133881 (= c!24856 (validKeyInArray!0 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!14778 () Bool)

(assert (=> bm!14778 (= call!14781 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (mask!7165 newMap!16)))))

(declare-fun d!40873 () Bool)

(declare-fun res!64409 () Bool)

(assert (=> d!40873 (=> res!64409 e!87216)))

(assert (=> d!40873 (= res!64409 (bvsge #b00000000000000000000000000000000 (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))))

(assert (=> d!40873 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (mask!7165 newMap!16)) e!87216)))

(assert (= (and d!40873 (not res!64409)) b!133881))

(assert (= (and b!133881 c!24856) b!133879))

(assert (= (and b!133881 (not c!24856)) b!133878))

(assert (= (and b!133879 res!64408) b!133880))

(assert (= (or b!133880 b!133878) bm!14778))

(assert (=> b!133879 m!158517))

(declare-fun m!158521 () Bool)

(assert (=> b!133879 m!158521))

(declare-fun m!158523 () Bool)

(assert (=> b!133879 m!158523))

(assert (=> b!133879 m!158517))

(declare-fun m!158525 () Bool)

(assert (=> b!133879 m!158525))

(assert (=> b!133881 m!158517))

(assert (=> b!133881 m!158517))

(assert (=> b!133881 m!158519))

(declare-fun m!158527 () Bool)

(assert (=> bm!14778 m!158527))

(assert (=> d!40389 d!40873))

(declare-fun d!40875 () Bool)

(declare-fun e!87219 () Bool)

(assert (=> d!40875 e!87219))

(declare-fun res!64410 () Bool)

(assert (=> d!40875 (=> (not res!64410) (not e!87219))))

(assert (=> d!40875 (= res!64410 (and (bvsge (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000000) (bvslt (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (size!2529 lt!69595))))))

(declare-fun lt!70094 () Unit!4150)

(assert (=> d!40875 (= lt!70094 (choose!832 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (defaultEntry!2865 newMap!16)))))

(assert (=> d!40875 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40875 (= (lemmaValidKeyInArrayIsInListMap!119 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (defaultEntry!2865 newMap!16)) lt!70094)))

(declare-fun b!133882 () Bool)

(assert (=> b!133882 (= e!87219 (contains!896 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2260 lt!69595) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))))))

(assert (= (and d!40875 res!64410) b!133882))

(declare-fun m!158529 () Bool)

(assert (=> d!40875 m!158529))

(assert (=> d!40875 m!156571))

(assert (=> b!133882 m!156959))

(declare-fun m!158531 () Bool)

(assert (=> b!133882 m!158531))

(assert (=> b!133882 m!156959))

(assert (=> b!133882 m!158531))

(declare-fun m!158533 () Bool)

(assert (=> b!133882 m!158533))

(assert (=> d!40389 d!40875))

(declare-fun d!40877 () Bool)

(declare-fun res!64411 () Bool)

(declare-fun e!87220 () Bool)

(assert (=> d!40877 (=> res!64411 e!87220)))

(assert (=> d!40877 (= res!64411 (= (select (arr!2260 lt!69597) #b00000000000000000000000000000000) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40877 (= (arrayContainsKey!0 lt!69597 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000) e!87220)))

(declare-fun b!133883 () Bool)

(declare-fun e!87221 () Bool)

(assert (=> b!133883 (= e!87220 e!87221)))

(declare-fun res!64412 () Bool)

(assert (=> b!133883 (=> (not res!64412) (not e!87221))))

(assert (=> b!133883 (= res!64412 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 lt!69597)))))

(declare-fun b!133884 () Bool)

(assert (=> b!133884 (= e!87221 (arrayContainsKey!0 lt!69597 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40877 (not res!64411)) b!133883))

(assert (= (and b!133883 res!64412) b!133884))

(declare-fun m!158535 () Bool)

(assert (=> d!40877 m!158535))

(assert (=> b!133884 m!156287))

(declare-fun m!158537 () Bool)

(assert (=> b!133884 m!158537))

(assert (=> d!40389 d!40877))

(declare-fun b!133885 () Bool)

(declare-fun e!87224 () Bool)

(declare-fun e!87225 () Bool)

(assert (=> b!133885 (= e!87224 e!87225)))

(declare-fun c!24857 () Bool)

(assert (=> b!133885 (= c!24857 (validKeyInArray!0 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) lt!69610)))))

(declare-fun b!133886 () Bool)

(declare-fun call!14782 () Bool)

(assert (=> b!133886 (= e!87225 call!14782)))

(declare-fun b!133887 () Bool)

(declare-fun e!87222 () Bool)

(assert (=> b!133887 (= e!87222 (contains!897 lt!69593 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) lt!69610)))))

(declare-fun bm!14779 () Bool)

(assert (=> bm!14779 (= call!14782 (arrayNoDuplicates!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (bvadd lt!69610 #b00000000000000000000000000000001) (ite c!24857 (Cons!1732 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) lt!69610) lt!69593) lt!69593)))))

(declare-fun d!40879 () Bool)

(declare-fun res!64415 () Bool)

(declare-fun e!87223 () Bool)

(assert (=> d!40879 (=> res!64415 e!87223)))

(assert (=> d!40879 (= res!64415 (bvsge lt!69610 (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))))

(assert (=> d!40879 (= (arrayNoDuplicates!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) lt!69610 lt!69593) e!87223)))

(declare-fun b!133888 () Bool)

(assert (=> b!133888 (= e!87225 call!14782)))

(declare-fun b!133889 () Bool)

(assert (=> b!133889 (= e!87223 e!87224)))

(declare-fun res!64413 () Bool)

(assert (=> b!133889 (=> (not res!64413) (not e!87224))))

(assert (=> b!133889 (= res!64413 (not e!87222))))

(declare-fun res!64414 () Bool)

(assert (=> b!133889 (=> (not res!64414) (not e!87222))))

(assert (=> b!133889 (= res!64414 (validKeyInArray!0 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) lt!69610)))))

(assert (= (and d!40879 (not res!64415)) b!133889))

(assert (= (and b!133889 res!64414) b!133887))

(assert (= (and b!133889 res!64413) b!133885))

(assert (= (and b!133885 c!24857) b!133888))

(assert (= (and b!133885 (not c!24857)) b!133886))

(assert (= (or b!133888 b!133886) bm!14779))

(declare-fun m!158539 () Bool)

(assert (=> b!133885 m!158539))

(assert (=> b!133885 m!158539))

(declare-fun m!158541 () Bool)

(assert (=> b!133885 m!158541))

(assert (=> b!133887 m!158539))

(assert (=> b!133887 m!158539))

(declare-fun m!158543 () Bool)

(assert (=> b!133887 m!158543))

(assert (=> bm!14779 m!158539))

(declare-fun m!158545 () Bool)

(assert (=> bm!14779 m!158545))

(assert (=> b!133889 m!158539))

(assert (=> b!133889 m!158539))

(assert (=> b!133889 m!158541))

(assert (=> d!40389 d!40879))

(declare-fun d!40881 () Bool)

(declare-fun e!87228 () Bool)

(assert (=> d!40881 e!87228))

(declare-fun res!64418 () Bool)

(assert (=> d!40881 (=> (not res!64418) (not e!87228))))

(assert (=> d!40881 (= res!64418 (and (bvsge (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000000) (bvslt (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (size!2529 (_keys!4614 newMap!16)))))))

(declare-fun lt!70097 () Unit!4150)

(declare-fun choose!102 ((_ BitVec 64) array!4780 (_ BitVec 32) (_ BitVec 32)) Unit!4150)

(assert (=> d!40881 (= lt!70097 (choose!102 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (mask!7165 newMap!16)))))

(assert (=> d!40881 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40881 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (mask!7165 newMap!16)) lt!70097)))

(declare-fun b!133892 () Bool)

(assert (=> b!133892 (= e!87228 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (mask!7165 newMap!16)))))

(assert (= (and d!40881 res!64418) b!133892))

(assert (=> d!40881 m!156287))

(declare-fun m!158547 () Bool)

(assert (=> d!40881 m!158547))

(assert (=> d!40881 m!156571))

(assert (=> b!133892 m!156987))

(assert (=> b!133892 m!156957))

(assert (=> d!40389 d!40881))

(declare-fun d!40883 () Bool)

(declare-fun e!87231 () Bool)

(assert (=> d!40883 e!87231))

(declare-fun res!64421 () Bool)

(assert (=> d!40883 (=> (not res!64421) (not e!87231))))

(assert (=> d!40883 (= res!64421 (and (bvsge (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000000) (bvslt (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (size!2529 (_keys!4614 newMap!16))) (bvslt (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (size!2530 (_values!2848 newMap!16)))))))

(declare-fun lt!70100 () Unit!4150)

(declare-fun choose!837 (array!4780 array!4782 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 32) (_ BitVec 64) V!3483 Int) Unit!4150)

(assert (=> d!40883 (= lt!70100 (choose!837 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)))))

(assert (=> d!40883 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40883 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!42 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)) lt!70100)))

(declare-fun b!133895 () Bool)

(assert (=> b!133895 (= e!87231 (= (+!170 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!540 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))))

(assert (= (and d!40883 res!64421) b!133895))

(assert (=> d!40883 m!156287))

(assert (=> d!40883 m!156285))

(declare-fun m!158549 () Bool)

(assert (=> d!40883 m!158549))

(assert (=> d!40883 m!156571))

(assert (=> b!133895 m!156969))

(assert (=> b!133895 m!156955))

(assert (=> b!133895 m!156355))

(assert (=> b!133895 m!156961))

(assert (=> b!133895 m!156355))

(assert (=> b!133895 m!156987))

(assert (=> d!40389 d!40883))

(declare-fun d!40885 () Bool)

(assert (=> d!40885 (arrayContainsKey!0 lt!69597 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!70101 () Unit!4150)

(assert (=> d!40885 (= lt!70101 (choose!13 lt!69597 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))))))

(assert (=> d!40885 (bvsge (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000000)))

(assert (=> d!40885 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!69597 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))) lt!70101)))

(declare-fun bs!5551 () Bool)

(assert (= bs!5551 d!40885))

(assert (=> bs!5551 m!156287))

(assert (=> bs!5551 m!156981))

(assert (=> bs!5551 m!156287))

(declare-fun m!158551 () Bool)

(assert (=> bs!5551 m!158551))

(assert (=> d!40389 d!40885))

(declare-fun d!40887 () Bool)

(assert (=> d!40887 (= (arrayCountValidKeys!0 lt!69605 (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!70104 () Unit!4150)

(declare-fun choose!2 (array!4780 (_ BitVec 32)) Unit!4150)

(assert (=> d!40887 (= lt!70104 (choose!2 lt!69605 (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))))))

(declare-fun e!87234 () Bool)

(assert (=> d!40887 e!87234))

(declare-fun res!64426 () Bool)

(assert (=> d!40887 (=> (not res!64426) (not e!87234))))

(assert (=> d!40887 (= res!64426 (and (bvsge (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000000) (bvslt (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (size!2529 lt!69605))))))

(assert (=> d!40887 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!69605 (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))) lt!70104)))

(declare-fun b!133900 () Bool)

(declare-fun res!64427 () Bool)

(assert (=> b!133900 (=> (not res!64427) (not e!87234))))

(assert (=> b!133900 (= res!64427 (validKeyInArray!0 (select (arr!2260 lt!69605) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))))))

(declare-fun b!133901 () Bool)

(assert (=> b!133901 (= e!87234 (bvslt (size!2529 lt!69605) #b01111111111111111111111111111111))))

(assert (= (and d!40887 res!64426) b!133900))

(assert (= (and b!133900 res!64427) b!133901))

(assert (=> d!40887 m!156953))

(declare-fun m!158553 () Bool)

(assert (=> d!40887 m!158553))

(declare-fun m!158555 () Bool)

(assert (=> b!133900 m!158555))

(assert (=> b!133900 m!158555))

(declare-fun m!158557 () Bool)

(assert (=> b!133900 m!158557))

(assert (=> d!40389 d!40887))

(declare-fun b!133910 () Bool)

(declare-fun res!64438 () Bool)

(declare-fun e!87240 () Bool)

(assert (=> b!133910 (=> (not res!64438) (not e!87240))))

(assert (=> b!133910 (= res!64438 (not (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))))))))

(declare-fun d!40889 () Bool)

(declare-fun e!87239 () Bool)

(assert (=> d!40889 e!87239))

(declare-fun res!64437 () Bool)

(assert (=> d!40889 (=> (not res!64437) (not e!87239))))

(assert (=> d!40889 (= res!64437 (and (bvsge (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000000) (bvslt (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (size!2529 (_keys!4614 newMap!16)))))))

(declare-fun lt!70107 () Unit!4150)

(declare-fun choose!1 (array!4780 (_ BitVec 32) (_ BitVec 64)) Unit!4150)

(assert (=> d!40889 (= lt!70107 (choose!1 (_keys!4614 newMap!16) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40889 e!87240))

(declare-fun res!64436 () Bool)

(assert (=> d!40889 (=> (not res!64436) (not e!87240))))

(assert (=> d!40889 (= res!64436 (and (bvsge (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000000) (bvslt (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (size!2529 (_keys!4614 newMap!16)))))))

(assert (=> d!40889 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4614 newMap!16) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) lt!70107)))

(declare-fun b!133913 () Bool)

(assert (=> b!133913 (= e!87239 (= (arrayCountValidKeys!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4614 newMap!16) #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!133912 () Bool)

(assert (=> b!133912 (= e!87240 (bvslt (size!2529 (_keys!4614 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!133911 () Bool)

(declare-fun res!64439 () Bool)

(assert (=> b!133911 (=> (not res!64439) (not e!87240))))

(assert (=> b!133911 (= res!64439 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40889 res!64436) b!133910))

(assert (= (and b!133910 res!64438) b!133911))

(assert (= (and b!133911 res!64439) b!133912))

(assert (= (and d!40889 res!64437) b!133913))

(declare-fun m!158559 () Bool)

(assert (=> b!133910 m!158559))

(assert (=> b!133910 m!158559))

(declare-fun m!158561 () Bool)

(assert (=> b!133910 m!158561))

(assert (=> d!40889 m!156287))

(declare-fun m!158563 () Bool)

(assert (=> d!40889 m!158563))

(assert (=> b!133913 m!156987))

(assert (=> b!133913 m!156965))

(assert (=> b!133913 m!156481))

(assert (=> b!133911 m!156287))

(declare-fun m!158565 () Bool)

(assert (=> b!133911 m!158565))

(assert (=> d!40389 d!40889))

(declare-fun bm!14780 () Bool)

(declare-fun call!14789 () ListLongMap!1707)

(declare-fun call!14785 () ListLongMap!1707)

(assert (=> bm!14780 (= call!14789 call!14785)))

(declare-fun b!133914 () Bool)

(declare-fun e!87250 () Bool)

(declare-fun lt!70114 () ListLongMap!1707)

(assert (=> b!133914 (= e!87250 (= (apply!116 lt!70114 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 newMap!16)))))

(declare-fun bm!14781 () Bool)

(declare-fun call!14784 () Bool)

(assert (=> bm!14781 (= call!14784 (contains!896 lt!70114 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133915 () Bool)

(declare-fun e!87253 () Bool)

(declare-fun call!14786 () Bool)

(assert (=> b!133915 (= e!87253 (not call!14786))))

(declare-fun b!133916 () Bool)

(declare-fun e!87252 () Unit!4150)

(declare-fun Unit!4200 () Unit!4150)

(assert (=> b!133916 (= e!87252 Unit!4200)))

(declare-fun d!40891 () Bool)

(declare-fun e!87249 () Bool)

(assert (=> d!40891 e!87249))

(declare-fun res!64446 () Bool)

(assert (=> d!40891 (=> (not res!64446) (not e!87249))))

(assert (=> d!40891 (= res!64446 (or (bvsge #b00000000000000000000000000000000 (size!2529 lt!69595)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 lt!69595)))))))

(declare-fun lt!70108 () ListLongMap!1707)

(assert (=> d!40891 (= lt!70114 lt!70108)))

(declare-fun lt!70109 () Unit!4150)

(assert (=> d!40891 (= lt!70109 e!87252)))

(declare-fun c!24859 () Bool)

(declare-fun e!87243 () Bool)

(assert (=> d!40891 (= c!24859 e!87243)))

(declare-fun res!64445 () Bool)

(assert (=> d!40891 (=> (not res!64445) (not e!87243))))

(assert (=> d!40891 (= res!64445 (bvslt #b00000000000000000000000000000000 (size!2529 lt!69595)))))

(declare-fun e!87241 () ListLongMap!1707)

(assert (=> d!40891 (= lt!70108 e!87241)))

(declare-fun c!24858 () Bool)

(assert (=> d!40891 (= c!24858 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40891 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40891 (= (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!70114)))

(declare-fun c!24861 () Bool)

(declare-fun call!14787 () ListLongMap!1707)

(declare-fun call!14788 () ListLongMap!1707)

(declare-fun call!14783 () ListLongMap!1707)

(declare-fun bm!14782 () Bool)

(assert (=> bm!14782 (= call!14785 (+!170 (ite c!24858 call!14787 (ite c!24861 call!14783 call!14788)) (ite (or c!24858 c!24861) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!133917 () Bool)

(assert (=> b!133917 (= e!87249 e!87253)))

(declare-fun c!24860 () Bool)

(assert (=> b!133917 (= c!24860 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133918 () Bool)

(declare-fun e!87247 () Bool)

(assert (=> b!133918 (= e!87247 (validKeyInArray!0 (select (arr!2260 lt!69595) #b00000000000000000000000000000000)))))

(declare-fun b!133919 () Bool)

(assert (=> b!133919 (= e!87243 (validKeyInArray!0 (select (arr!2260 lt!69595) #b00000000000000000000000000000000)))))

(declare-fun b!133920 () Bool)

(declare-fun e!87248 () ListLongMap!1707)

(assert (=> b!133920 (= e!87248 call!14788)))

(declare-fun b!133921 () Bool)

(declare-fun res!64440 () Bool)

(assert (=> b!133921 (=> (not res!64440) (not e!87249))))

(declare-fun e!87246 () Bool)

(assert (=> b!133921 (= res!64440 e!87246)))

(declare-fun c!24862 () Bool)

(assert (=> b!133921 (= c!24862 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133922 () Bool)

(declare-fun e!87244 () Bool)

(assert (=> b!133922 (= e!87246 e!87244)))

(declare-fun res!64443 () Bool)

(assert (=> b!133922 (= res!64443 call!14784)))

(assert (=> b!133922 (=> (not res!64443) (not e!87244))))

(declare-fun b!133923 () Bool)

(declare-fun e!87245 () Bool)

(declare-fun e!87242 () Bool)

(assert (=> b!133923 (= e!87245 e!87242)))

(declare-fun res!64441 () Bool)

(assert (=> b!133923 (=> (not res!64441) (not e!87242))))

(assert (=> b!133923 (= res!64441 (contains!896 lt!70114 (select (arr!2260 lt!69595) #b00000000000000000000000000000000)))))

(assert (=> b!133923 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 lt!69595)))))

(declare-fun b!133924 () Bool)

(declare-fun c!24863 () Bool)

(assert (=> b!133924 (= c!24863 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!87251 () ListLongMap!1707)

(assert (=> b!133924 (= e!87251 e!87248)))

(declare-fun b!133925 () Bool)

(assert (=> b!133925 (= e!87246 (not call!14784))))

(declare-fun b!133926 () Bool)

(assert (=> b!133926 (= e!87241 (+!170 call!14785 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun b!133927 () Bool)

(assert (=> b!133927 (= e!87253 e!87250)))

(declare-fun res!64444 () Bool)

(assert (=> b!133927 (= res!64444 call!14786)))

(assert (=> b!133927 (=> (not res!64444) (not e!87250))))

(declare-fun b!133928 () Bool)

(declare-fun lt!70115 () Unit!4150)

(assert (=> b!133928 (= e!87252 lt!70115)))

(declare-fun lt!70110 () ListLongMap!1707)

(assert (=> b!133928 (= lt!70110 (getCurrentListMapNoExtraKeys!137 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!70113 () (_ BitVec 64))

(assert (=> b!133928 (= lt!70113 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70120 () (_ BitVec 64))

(assert (=> b!133928 (= lt!70120 (select (arr!2260 lt!69595) #b00000000000000000000000000000000))))

(declare-fun lt!70124 () Unit!4150)

(assert (=> b!133928 (= lt!70124 (addStillContains!92 lt!70110 lt!70113 (zeroValue!2720 newMap!16) lt!70120))))

(assert (=> b!133928 (contains!896 (+!170 lt!70110 (tuple2!2609 lt!70113 (zeroValue!2720 newMap!16))) lt!70120)))

(declare-fun lt!70128 () Unit!4150)

(assert (=> b!133928 (= lt!70128 lt!70124)))

(declare-fun lt!70123 () ListLongMap!1707)

(assert (=> b!133928 (= lt!70123 (getCurrentListMapNoExtraKeys!137 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!70125 () (_ BitVec 64))

(assert (=> b!133928 (= lt!70125 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70111 () (_ BitVec 64))

(assert (=> b!133928 (= lt!70111 (select (arr!2260 lt!69595) #b00000000000000000000000000000000))))

(declare-fun lt!70126 () Unit!4150)

(assert (=> b!133928 (= lt!70126 (addApplyDifferent!92 lt!70123 lt!70125 (minValue!2720 newMap!16) lt!70111))))

(assert (=> b!133928 (= (apply!116 (+!170 lt!70123 (tuple2!2609 lt!70125 (minValue!2720 newMap!16))) lt!70111) (apply!116 lt!70123 lt!70111))))

(declare-fun lt!70117 () Unit!4150)

(assert (=> b!133928 (= lt!70117 lt!70126)))

(declare-fun lt!70118 () ListLongMap!1707)

(assert (=> b!133928 (= lt!70118 (getCurrentListMapNoExtraKeys!137 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!70129 () (_ BitVec 64))

(assert (=> b!133928 (= lt!70129 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70116 () (_ BitVec 64))

(assert (=> b!133928 (= lt!70116 (select (arr!2260 lt!69595) #b00000000000000000000000000000000))))

(declare-fun lt!70127 () Unit!4150)

(assert (=> b!133928 (= lt!70127 (addApplyDifferent!92 lt!70118 lt!70129 (zeroValue!2720 newMap!16) lt!70116))))

(assert (=> b!133928 (= (apply!116 (+!170 lt!70118 (tuple2!2609 lt!70129 (zeroValue!2720 newMap!16))) lt!70116) (apply!116 lt!70118 lt!70116))))

(declare-fun lt!70112 () Unit!4150)

(assert (=> b!133928 (= lt!70112 lt!70127)))

(declare-fun lt!70122 () ListLongMap!1707)

(assert (=> b!133928 (= lt!70122 (getCurrentListMapNoExtraKeys!137 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!70119 () (_ BitVec 64))

(assert (=> b!133928 (= lt!70119 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70121 () (_ BitVec 64))

(assert (=> b!133928 (= lt!70121 (select (arr!2260 lt!69595) #b00000000000000000000000000000000))))

(assert (=> b!133928 (= lt!70115 (addApplyDifferent!92 lt!70122 lt!70119 (minValue!2720 newMap!16) lt!70121))))

(assert (=> b!133928 (= (apply!116 (+!170 lt!70122 (tuple2!2609 lt!70119 (minValue!2720 newMap!16))) lt!70121) (apply!116 lt!70122 lt!70121))))

(declare-fun bm!14783 () Bool)

(assert (=> bm!14783 (= call!14788 call!14783)))

(declare-fun b!133929 () Bool)

(assert (=> b!133929 (= e!87241 e!87251)))

(assert (=> b!133929 (= c!24861 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14784 () Bool)

(assert (=> bm!14784 (= call!14786 (contains!896 lt!70114 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133930 () Bool)

(assert (=> b!133930 (= e!87244 (= (apply!116 lt!70114 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 newMap!16)))))

(declare-fun bm!14785 () Bool)

(assert (=> bm!14785 (= call!14783 call!14787)))

(declare-fun b!133931 () Bool)

(assert (=> b!133931 (= e!87242 (= (apply!116 lt!70114 (select (arr!2260 lt!69595) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 lt!69607) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133931 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 lt!69607)))))

(assert (=> b!133931 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 lt!69595)))))

(declare-fun bm!14786 () Bool)

(assert (=> bm!14786 (= call!14787 (getCurrentListMapNoExtraKeys!137 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!133932 () Bool)

(assert (=> b!133932 (= e!87251 call!14789)))

(declare-fun b!133933 () Bool)

(assert (=> b!133933 (= e!87248 call!14789)))

(declare-fun b!133934 () Bool)

(declare-fun res!64442 () Bool)

(assert (=> b!133934 (=> (not res!64442) (not e!87249))))

(assert (=> b!133934 (= res!64442 e!87245)))

(declare-fun res!64447 () Bool)

(assert (=> b!133934 (=> res!64447 e!87245)))

(assert (=> b!133934 (= res!64447 (not e!87247))))

(declare-fun res!64448 () Bool)

(assert (=> b!133934 (=> (not res!64448) (not e!87247))))

(assert (=> b!133934 (= res!64448 (bvslt #b00000000000000000000000000000000 (size!2529 lt!69595)))))

(assert (= (and d!40891 c!24858) b!133926))

(assert (= (and d!40891 (not c!24858)) b!133929))

(assert (= (and b!133929 c!24861) b!133932))

(assert (= (and b!133929 (not c!24861)) b!133924))

(assert (= (and b!133924 c!24863) b!133933))

(assert (= (and b!133924 (not c!24863)) b!133920))

(assert (= (or b!133933 b!133920) bm!14783))

(assert (= (or b!133932 bm!14783) bm!14785))

(assert (= (or b!133932 b!133933) bm!14780))

(assert (= (or b!133926 bm!14785) bm!14786))

(assert (= (or b!133926 bm!14780) bm!14782))

(assert (= (and d!40891 res!64445) b!133919))

(assert (= (and d!40891 c!24859) b!133928))

(assert (= (and d!40891 (not c!24859)) b!133916))

(assert (= (and d!40891 res!64446) b!133934))

(assert (= (and b!133934 res!64448) b!133918))

(assert (= (and b!133934 (not res!64447)) b!133923))

(assert (= (and b!133923 res!64441) b!133931))

(assert (= (and b!133934 res!64442) b!133921))

(assert (= (and b!133921 c!24862) b!133922))

(assert (= (and b!133921 (not c!24862)) b!133925))

(assert (= (and b!133922 res!64443) b!133930))

(assert (= (or b!133922 b!133925) bm!14781))

(assert (= (and b!133921 res!64440) b!133917))

(assert (= (and b!133917 c!24860) b!133927))

(assert (= (and b!133917 (not c!24860)) b!133915))

(assert (= (and b!133927 res!64444) b!133914))

(assert (= (or b!133927 b!133915) bm!14784))

(declare-fun b_lambda!5983 () Bool)

(assert (=> (not b_lambda!5983) (not b!133931)))

(assert (=> b!133931 t!6205))

(declare-fun b_and!8317 () Bool)

(assert (= b_and!8313 (and (=> t!6205 result!4009) b_and!8317)))

(assert (=> b!133931 t!6207))

(declare-fun b_and!8319 () Bool)

(assert (= b_and!8315 (and (=> t!6207 result!4011) b_and!8319)))

(assert (=> d!40891 m!156571))

(declare-fun m!158567 () Bool)

(assert (=> b!133923 m!158567))

(assert (=> b!133923 m!158567))

(declare-fun m!158569 () Bool)

(assert (=> b!133923 m!158569))

(declare-fun m!158571 () Bool)

(assert (=> b!133931 m!158571))

(assert (=> b!133931 m!156647))

(declare-fun m!158573 () Bool)

(assert (=> b!133931 m!158573))

(assert (=> b!133931 m!158567))

(declare-fun m!158575 () Bool)

(assert (=> b!133931 m!158575))

(assert (=> b!133931 m!158571))

(assert (=> b!133931 m!158567))

(assert (=> b!133931 m!156647))

(declare-fun m!158577 () Bool)

(assert (=> b!133930 m!158577))

(declare-fun m!158579 () Bool)

(assert (=> b!133914 m!158579))

(declare-fun m!158581 () Bool)

(assert (=> b!133928 m!158581))

(declare-fun m!158583 () Bool)

(assert (=> b!133928 m!158583))

(declare-fun m!158585 () Bool)

(assert (=> b!133928 m!158585))

(declare-fun m!158587 () Bool)

(assert (=> b!133928 m!158587))

(declare-fun m!158589 () Bool)

(assert (=> b!133928 m!158589))

(assert (=> b!133928 m!158585))

(declare-fun m!158591 () Bool)

(assert (=> b!133928 m!158591))

(declare-fun m!158593 () Bool)

(assert (=> b!133928 m!158593))

(declare-fun m!158595 () Bool)

(assert (=> b!133928 m!158595))

(declare-fun m!158597 () Bool)

(assert (=> b!133928 m!158597))

(assert (=> b!133928 m!158595))

(assert (=> b!133928 m!158567))

(assert (=> b!133928 m!158581))

(declare-fun m!158599 () Bool)

(assert (=> b!133928 m!158599))

(declare-fun m!158601 () Bool)

(assert (=> b!133928 m!158601))

(declare-fun m!158603 () Bool)

(assert (=> b!133928 m!158603))

(declare-fun m!158605 () Bool)

(assert (=> b!133928 m!158605))

(assert (=> b!133928 m!158591))

(declare-fun m!158607 () Bool)

(assert (=> b!133928 m!158607))

(declare-fun m!158609 () Bool)

(assert (=> b!133928 m!158609))

(declare-fun m!158611 () Bool)

(assert (=> b!133928 m!158611))

(assert (=> b!133919 m!158567))

(assert (=> b!133919 m!158567))

(declare-fun m!158613 () Bool)

(assert (=> b!133919 m!158613))

(declare-fun m!158615 () Bool)

(assert (=> bm!14784 m!158615))

(declare-fun m!158617 () Bool)

(assert (=> b!133926 m!158617))

(declare-fun m!158619 () Bool)

(assert (=> bm!14782 m!158619))

(assert (=> b!133918 m!158567))

(assert (=> b!133918 m!158567))

(assert (=> b!133918 m!158613))

(assert (=> bm!14786 m!158589))

(declare-fun m!158621 () Bool)

(assert (=> bm!14781 m!158621))

(assert (=> d!40389 d!40891))

(assert (=> d!40389 d!40335))

(declare-fun bm!14787 () Bool)

(declare-fun call!14796 () ListLongMap!1707)

(declare-fun call!14792 () ListLongMap!1707)

(assert (=> bm!14787 (= call!14796 call!14792)))

(declare-fun b!133935 () Bool)

(declare-fun e!87263 () Bool)

(declare-fun lt!70136 () ListLongMap!1707)

(assert (=> b!133935 (= e!87263 (= (apply!116 lt!70136 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 newMap!16)))))

(declare-fun bm!14788 () Bool)

(declare-fun call!14791 () Bool)

(assert (=> bm!14788 (= call!14791 (contains!896 lt!70136 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133936 () Bool)

(declare-fun e!87266 () Bool)

(declare-fun call!14793 () Bool)

(assert (=> b!133936 (= e!87266 (not call!14793))))

(declare-fun b!133937 () Bool)

(declare-fun e!87265 () Unit!4150)

(declare-fun Unit!4201 () Unit!4150)

(assert (=> b!133937 (= e!87265 Unit!4201)))

(declare-fun d!40893 () Bool)

(declare-fun e!87262 () Bool)

(assert (=> d!40893 e!87262))

(declare-fun res!64455 () Bool)

(assert (=> d!40893 (=> (not res!64455) (not e!87262))))

(assert (=> d!40893 (= res!64455 (or (bvsge #b00000000000000000000000000000000 (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))))))

(declare-fun lt!70130 () ListLongMap!1707)

(assert (=> d!40893 (= lt!70136 lt!70130)))

(declare-fun lt!70131 () Unit!4150)

(assert (=> d!40893 (= lt!70131 e!87265)))

(declare-fun c!24865 () Bool)

(declare-fun e!87256 () Bool)

(assert (=> d!40893 (= c!24865 e!87256)))

(declare-fun res!64454 () Bool)

(assert (=> d!40893 (=> (not res!64454) (not e!87256))))

(assert (=> d!40893 (= res!64454 (bvslt #b00000000000000000000000000000000 (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))))

(declare-fun e!87254 () ListLongMap!1707)

(assert (=> d!40893 (= lt!70130 e!87254)))

(declare-fun c!24864 () Bool)

(assert (=> d!40893 (= c!24864 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40893 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40893 (= (getCurrentListMap!540 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!70136)))

(declare-fun call!14790 () ListLongMap!1707)

(declare-fun bm!14789 () Bool)

(declare-fun c!24867 () Bool)

(declare-fun call!14794 () ListLongMap!1707)

(declare-fun call!14795 () ListLongMap!1707)

(assert (=> bm!14789 (= call!14792 (+!170 (ite c!24864 call!14794 (ite c!24867 call!14790 call!14795)) (ite (or c!24864 c!24867) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!133938 () Bool)

(assert (=> b!133938 (= e!87262 e!87266)))

(declare-fun c!24866 () Bool)

(assert (=> b!133938 (= c!24866 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun e!87260 () Bool)

(declare-fun b!133939 () Bool)

(assert (=> b!133939 (= e!87260 (validKeyInArray!0 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!133940 () Bool)

(assert (=> b!133940 (= e!87256 (validKeyInArray!0 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!133941 () Bool)

(declare-fun e!87261 () ListLongMap!1707)

(assert (=> b!133941 (= e!87261 call!14795)))

(declare-fun b!133942 () Bool)

(declare-fun res!64449 () Bool)

(assert (=> b!133942 (=> (not res!64449) (not e!87262))))

(declare-fun e!87259 () Bool)

(assert (=> b!133942 (= res!64449 e!87259)))

(declare-fun c!24868 () Bool)

(assert (=> b!133942 (= c!24868 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133943 () Bool)

(declare-fun e!87257 () Bool)

(assert (=> b!133943 (= e!87259 e!87257)))

(declare-fun res!64452 () Bool)

(assert (=> b!133943 (= res!64452 call!14791)))

(assert (=> b!133943 (=> (not res!64452) (not e!87257))))

(declare-fun b!133944 () Bool)

(declare-fun e!87258 () Bool)

(declare-fun e!87255 () Bool)

(assert (=> b!133944 (= e!87258 e!87255)))

(declare-fun res!64450 () Bool)

(assert (=> b!133944 (=> (not res!64450) (not e!87255))))

(assert (=> b!133944 (= res!64450 (contains!896 lt!70136 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!133944 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))))

(declare-fun b!133945 () Bool)

(declare-fun c!24869 () Bool)

(assert (=> b!133945 (= c!24869 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!87264 () ListLongMap!1707)

(assert (=> b!133945 (= e!87264 e!87261)))

(declare-fun b!133946 () Bool)

(assert (=> b!133946 (= e!87259 (not call!14791))))

(declare-fun b!133947 () Bool)

(assert (=> b!133947 (= e!87254 (+!170 call!14792 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun b!133948 () Bool)

(assert (=> b!133948 (= e!87266 e!87263)))

(declare-fun res!64453 () Bool)

(assert (=> b!133948 (= res!64453 call!14793)))

(assert (=> b!133948 (=> (not res!64453) (not e!87263))))

(declare-fun b!133949 () Bool)

(declare-fun lt!70137 () Unit!4150)

(assert (=> b!133949 (= e!87265 lt!70137)))

(declare-fun lt!70132 () ListLongMap!1707)

(assert (=> b!133949 (= lt!70132 (getCurrentListMapNoExtraKeys!137 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!70135 () (_ BitVec 64))

(assert (=> b!133949 (= lt!70135 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70142 () (_ BitVec 64))

(assert (=> b!133949 (= lt!70142 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!70146 () Unit!4150)

(assert (=> b!133949 (= lt!70146 (addStillContains!92 lt!70132 lt!70135 (zeroValue!2720 newMap!16) lt!70142))))

(assert (=> b!133949 (contains!896 (+!170 lt!70132 (tuple2!2609 lt!70135 (zeroValue!2720 newMap!16))) lt!70142)))

(declare-fun lt!70150 () Unit!4150)

(assert (=> b!133949 (= lt!70150 lt!70146)))

(declare-fun lt!70145 () ListLongMap!1707)

(assert (=> b!133949 (= lt!70145 (getCurrentListMapNoExtraKeys!137 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!70147 () (_ BitVec 64))

(assert (=> b!133949 (= lt!70147 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70133 () (_ BitVec 64))

(assert (=> b!133949 (= lt!70133 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!70148 () Unit!4150)

(assert (=> b!133949 (= lt!70148 (addApplyDifferent!92 lt!70145 lt!70147 (minValue!2720 newMap!16) lt!70133))))

(assert (=> b!133949 (= (apply!116 (+!170 lt!70145 (tuple2!2609 lt!70147 (minValue!2720 newMap!16))) lt!70133) (apply!116 lt!70145 lt!70133))))

(declare-fun lt!70139 () Unit!4150)

(assert (=> b!133949 (= lt!70139 lt!70148)))

(declare-fun lt!70140 () ListLongMap!1707)

(assert (=> b!133949 (= lt!70140 (getCurrentListMapNoExtraKeys!137 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!70151 () (_ BitVec 64))

(assert (=> b!133949 (= lt!70151 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70138 () (_ BitVec 64))

(assert (=> b!133949 (= lt!70138 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!70149 () Unit!4150)

(assert (=> b!133949 (= lt!70149 (addApplyDifferent!92 lt!70140 lt!70151 (zeroValue!2720 newMap!16) lt!70138))))

(assert (=> b!133949 (= (apply!116 (+!170 lt!70140 (tuple2!2609 lt!70151 (zeroValue!2720 newMap!16))) lt!70138) (apply!116 lt!70140 lt!70138))))

(declare-fun lt!70134 () Unit!4150)

(assert (=> b!133949 (= lt!70134 lt!70149)))

(declare-fun lt!70144 () ListLongMap!1707)

(assert (=> b!133949 (= lt!70144 (getCurrentListMapNoExtraKeys!137 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!70141 () (_ BitVec 64))

(assert (=> b!133949 (= lt!70141 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70143 () (_ BitVec 64))

(assert (=> b!133949 (= lt!70143 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!133949 (= lt!70137 (addApplyDifferent!92 lt!70144 lt!70141 (minValue!2720 newMap!16) lt!70143))))

(assert (=> b!133949 (= (apply!116 (+!170 lt!70144 (tuple2!2609 lt!70141 (minValue!2720 newMap!16))) lt!70143) (apply!116 lt!70144 lt!70143))))

(declare-fun bm!14790 () Bool)

(assert (=> bm!14790 (= call!14795 call!14790)))

(declare-fun b!133950 () Bool)

(assert (=> b!133950 (= e!87254 e!87264)))

(assert (=> b!133950 (= c!24867 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14791 () Bool)

(assert (=> bm!14791 (= call!14793 (contains!896 lt!70136 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133951 () Bool)

(assert (=> b!133951 (= e!87257 (= (apply!116 lt!70136 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 newMap!16)))))

(declare-fun bm!14792 () Bool)

(assert (=> bm!14792 (= call!14790 call!14794)))

(declare-fun b!133952 () Bool)

(assert (=> b!133952 (= e!87255 (= (apply!116 lt!70136 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133952 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))))))

(assert (=> b!133952 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))))

(declare-fun bm!14793 () Bool)

(assert (=> bm!14793 (= call!14794 (getCurrentListMapNoExtraKeys!137 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!133953 () Bool)

(assert (=> b!133953 (= e!87264 call!14796)))

(declare-fun b!133954 () Bool)

(assert (=> b!133954 (= e!87261 call!14796)))

(declare-fun b!133955 () Bool)

(declare-fun res!64451 () Bool)

(assert (=> b!133955 (=> (not res!64451) (not e!87262))))

(assert (=> b!133955 (= res!64451 e!87258)))

(declare-fun res!64456 () Bool)

(assert (=> b!133955 (=> res!64456 e!87258)))

(assert (=> b!133955 (= res!64456 (not e!87260))))

(declare-fun res!64457 () Bool)

(assert (=> b!133955 (=> (not res!64457) (not e!87260))))

(assert (=> b!133955 (= res!64457 (bvslt #b00000000000000000000000000000000 (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))))

(assert (= (and d!40893 c!24864) b!133947))

(assert (= (and d!40893 (not c!24864)) b!133950))

(assert (= (and b!133950 c!24867) b!133953))

(assert (= (and b!133950 (not c!24867)) b!133945))

(assert (= (and b!133945 c!24869) b!133954))

(assert (= (and b!133945 (not c!24869)) b!133941))

(assert (= (or b!133954 b!133941) bm!14790))

(assert (= (or b!133953 bm!14790) bm!14792))

(assert (= (or b!133953 b!133954) bm!14787))

(assert (= (or b!133947 bm!14792) bm!14793))

(assert (= (or b!133947 bm!14787) bm!14789))

(assert (= (and d!40893 res!64454) b!133940))

(assert (= (and d!40893 c!24865) b!133949))

(assert (= (and d!40893 (not c!24865)) b!133937))

(assert (= (and d!40893 res!64455) b!133955))

(assert (= (and b!133955 res!64457) b!133939))

(assert (= (and b!133955 (not res!64456)) b!133944))

(assert (= (and b!133944 res!64450) b!133952))

(assert (= (and b!133955 res!64451) b!133942))

(assert (= (and b!133942 c!24868) b!133943))

(assert (= (and b!133942 (not c!24868)) b!133946))

(assert (= (and b!133943 res!64452) b!133951))

(assert (= (or b!133943 b!133946) bm!14788))

(assert (= (and b!133942 res!64449) b!133938))

(assert (= (and b!133938 c!24866) b!133948))

(assert (= (and b!133938 (not c!24866)) b!133936))

(assert (= (and b!133948 res!64453) b!133935))

(assert (= (or b!133948 b!133936) bm!14791))

(declare-fun b_lambda!5985 () Bool)

(assert (=> (not b_lambda!5985) (not b!133952)))

(assert (=> b!133952 t!6205))

(declare-fun b_and!8321 () Bool)

(assert (= b_and!8317 (and (=> t!6205 result!4009) b_and!8321)))

(assert (=> b!133952 t!6207))

(declare-fun b_and!8323 () Bool)

(assert (= b_and!8319 (and (=> t!6207 result!4011) b_and!8323)))

(assert (=> d!40893 m!156571))

(assert (=> b!133944 m!158517))

(assert (=> b!133944 m!158517))

(declare-fun m!158623 () Bool)

(assert (=> b!133944 m!158623))

(declare-fun m!158625 () Bool)

(assert (=> b!133952 m!158625))

(assert (=> b!133952 m!156647))

(declare-fun m!158627 () Bool)

(assert (=> b!133952 m!158627))

(assert (=> b!133952 m!158517))

(declare-fun m!158629 () Bool)

(assert (=> b!133952 m!158629))

(assert (=> b!133952 m!158625))

(assert (=> b!133952 m!158517))

(assert (=> b!133952 m!156647))

(declare-fun m!158631 () Bool)

(assert (=> b!133951 m!158631))

(declare-fun m!158633 () Bool)

(assert (=> b!133935 m!158633))

(declare-fun m!158635 () Bool)

(assert (=> b!133949 m!158635))

(declare-fun m!158637 () Bool)

(assert (=> b!133949 m!158637))

(declare-fun m!158639 () Bool)

(assert (=> b!133949 m!158639))

(declare-fun m!158641 () Bool)

(assert (=> b!133949 m!158641))

(declare-fun m!158643 () Bool)

(assert (=> b!133949 m!158643))

(assert (=> b!133949 m!158639))

(declare-fun m!158645 () Bool)

(assert (=> b!133949 m!158645))

(declare-fun m!158647 () Bool)

(assert (=> b!133949 m!158647))

(declare-fun m!158649 () Bool)

(assert (=> b!133949 m!158649))

(declare-fun m!158651 () Bool)

(assert (=> b!133949 m!158651))

(assert (=> b!133949 m!158649))

(assert (=> b!133949 m!158517))

(assert (=> b!133949 m!158635))

(declare-fun m!158653 () Bool)

(assert (=> b!133949 m!158653))

(declare-fun m!158655 () Bool)

(assert (=> b!133949 m!158655))

(declare-fun m!158657 () Bool)

(assert (=> b!133949 m!158657))

(declare-fun m!158659 () Bool)

(assert (=> b!133949 m!158659))

(assert (=> b!133949 m!158645))

(declare-fun m!158661 () Bool)

(assert (=> b!133949 m!158661))

(declare-fun m!158663 () Bool)

(assert (=> b!133949 m!158663))

(declare-fun m!158665 () Bool)

(assert (=> b!133949 m!158665))

(assert (=> b!133940 m!158517))

(assert (=> b!133940 m!158517))

(assert (=> b!133940 m!158519))

(declare-fun m!158667 () Bool)

(assert (=> bm!14791 m!158667))

(declare-fun m!158669 () Bool)

(assert (=> b!133947 m!158669))

(declare-fun m!158671 () Bool)

(assert (=> bm!14789 m!158671))

(assert (=> b!133939 m!158517))

(assert (=> b!133939 m!158517))

(assert (=> b!133939 m!158519))

(assert (=> bm!14793 m!158643))

(declare-fun m!158673 () Bool)

(assert (=> bm!14788 m!158673))

(assert (=> d!40389 d!40893))

(declare-fun d!40895 () Bool)

(declare-fun e!87267 () Bool)

(assert (=> d!40895 e!87267))

(declare-fun res!64458 () Bool)

(assert (=> d!40895 (=> res!64458 e!87267)))

(declare-fun lt!70152 () Bool)

(assert (=> d!40895 (= res!64458 (not lt!70152))))

(declare-fun lt!70154 () Bool)

(assert (=> d!40895 (= lt!70152 lt!70154)))

(declare-fun lt!70153 () Unit!4150)

(declare-fun e!87268 () Unit!4150)

(assert (=> d!40895 (= lt!70153 e!87268)))

(declare-fun c!24870 () Bool)

(assert (=> d!40895 (= c!24870 lt!70154)))

(assert (=> d!40895 (= lt!70154 (containsKey!175 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))))))

(assert (=> d!40895 (= (contains!896 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))) lt!70152)))

(declare-fun b!133956 () Bool)

(declare-fun lt!70155 () Unit!4150)

(assert (=> b!133956 (= e!87268 lt!70155)))

(assert (=> b!133956 (= lt!70155 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))))))

(assert (=> b!133956 (isDefined!125 (getValueByKey!171 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))))))

(declare-fun b!133957 () Bool)

(declare-fun Unit!4202 () Unit!4150)

(assert (=> b!133957 (= e!87268 Unit!4202)))

(declare-fun b!133958 () Bool)

(assert (=> b!133958 (= e!87267 (isDefined!125 (getValueByKey!171 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))))))))

(assert (= (and d!40895 c!24870) b!133956))

(assert (= (and d!40895 (not c!24870)) b!133957))

(assert (= (and d!40895 (not res!64458)) b!133958))

(assert (=> d!40895 m!156983))

(declare-fun m!158675 () Bool)

(assert (=> d!40895 m!158675))

(assert (=> b!133956 m!156983))

(declare-fun m!158677 () Bool)

(assert (=> b!133956 m!158677))

(assert (=> b!133956 m!156983))

(declare-fun m!158679 () Bool)

(assert (=> b!133956 m!158679))

(assert (=> b!133956 m!158679))

(declare-fun m!158681 () Bool)

(assert (=> b!133956 m!158681))

(assert (=> b!133958 m!156983))

(assert (=> b!133958 m!158679))

(assert (=> b!133958 m!158679))

(assert (=> b!133958 m!158681))

(assert (=> d!40389 d!40895))

(declare-fun b!133959 () Bool)

(declare-fun e!87270 () (_ BitVec 32))

(assert (=> b!133959 (= e!87270 #b00000000000000000000000000000000)))

(declare-fun lt!70156 () (_ BitVec 32))

(declare-fun d!40897 () Bool)

(assert (=> d!40897 (and (bvsge lt!70156 #b00000000000000000000000000000000) (bvsle lt!70156 (bvsub (size!2529 lt!69605) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))))))

(assert (=> d!40897 (= lt!70156 e!87270)))

(declare-fun c!24872 () Bool)

(assert (=> d!40897 (= c!24872 (bvsge (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001)))))

(assert (=> d!40897 (and (bvsle (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001)) (bvsge (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001) (size!2529 lt!69605)))))

(assert (=> d!40897 (= (arrayCountValidKeys!0 lt!69605 (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001)) lt!70156)))

(declare-fun b!133960 () Bool)

(declare-fun e!87269 () (_ BitVec 32))

(declare-fun call!14797 () (_ BitVec 32))

(assert (=> b!133960 (= e!87269 call!14797)))

(declare-fun b!133961 () Bool)

(assert (=> b!133961 (= e!87269 (bvadd #b00000000000000000000000000000001 call!14797))))

(declare-fun bm!14794 () Bool)

(assert (=> bm!14794 (= call!14797 (arrayCountValidKeys!0 lt!69605 (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001) (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001)))))

(declare-fun b!133962 () Bool)

(assert (=> b!133962 (= e!87270 e!87269)))

(declare-fun c!24871 () Bool)

(assert (=> b!133962 (= c!24871 (validKeyInArray!0 (select (arr!2260 lt!69605) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))))))

(assert (= (and d!40897 c!24872) b!133959))

(assert (= (and d!40897 (not c!24872)) b!133962))

(assert (= (and b!133962 c!24871) b!133961))

(assert (= (and b!133962 (not c!24871)) b!133960))

(assert (= (or b!133961 b!133960) bm!14794))

(declare-fun m!158683 () Bool)

(assert (=> bm!14794 m!158683))

(assert (=> b!133962 m!158555))

(assert (=> b!133962 m!158555))

(assert (=> b!133962 m!158557))

(assert (=> d!40389 d!40897))

(assert (=> d!40389 d!40317))

(declare-fun d!40899 () Bool)

(declare-fun e!87271 () Bool)

(assert (=> d!40899 e!87271))

(declare-fun res!64459 () Bool)

(assert (=> d!40899 (=> res!64459 e!87271)))

(declare-fun lt!70157 () Bool)

(assert (=> d!40899 (= res!64459 (not lt!70157))))

(declare-fun lt!70159 () Bool)

(assert (=> d!40899 (= lt!70157 lt!70159)))

(declare-fun lt!70158 () Unit!4150)

(declare-fun e!87272 () Unit!4150)

(assert (=> d!40899 (= lt!70158 e!87272)))

(declare-fun c!24873 () Bool)

(assert (=> d!40899 (= c!24873 lt!70159)))

(assert (=> d!40899 (= lt!70159 (containsKey!175 (toList!869 lt!69488) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40899 (= (contains!896 lt!69488 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70157)))

(declare-fun b!133963 () Bool)

(declare-fun lt!70160 () Unit!4150)

(assert (=> b!133963 (= e!87272 lt!70160)))

(assert (=> b!133963 (= lt!70160 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69488) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133963 (isDefined!125 (getValueByKey!171 (toList!869 lt!69488) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133964 () Bool)

(declare-fun Unit!4203 () Unit!4150)

(assert (=> b!133964 (= e!87272 Unit!4203)))

(declare-fun b!133965 () Bool)

(assert (=> b!133965 (= e!87271 (isDefined!125 (getValueByKey!171 (toList!869 lt!69488) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40899 c!24873) b!133963))

(assert (= (and d!40899 (not c!24873)) b!133964))

(assert (= (and d!40899 (not res!64459)) b!133965))

(declare-fun m!158685 () Bool)

(assert (=> d!40899 m!158685))

(declare-fun m!158687 () Bool)

(assert (=> b!133963 m!158687))

(assert (=> b!133963 m!158057))

(assert (=> b!133963 m!158057))

(declare-fun m!158689 () Bool)

(assert (=> b!133963 m!158689))

(assert (=> b!133965 m!158057))

(assert (=> b!133965 m!158057))

(assert (=> b!133965 m!158689))

(assert (=> bm!14668 d!40899))

(declare-fun lt!70161 () Bool)

(declare-fun d!40901 () Bool)

(assert (=> d!40901 (= lt!70161 (select (content!132 (toList!869 lt!69459)) (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun e!87274 () Bool)

(assert (=> d!40901 (= lt!70161 e!87274)))

(declare-fun res!64460 () Bool)

(assert (=> d!40901 (=> (not res!64460) (not e!87274))))

(assert (=> d!40901 (= res!64460 ((_ is Cons!1731) (toList!869 lt!69459)))))

(assert (=> d!40901 (= (contains!898 (toList!869 lt!69459) (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!70161)))

(declare-fun b!133966 () Bool)

(declare-fun e!87273 () Bool)

(assert (=> b!133966 (= e!87274 e!87273)))

(declare-fun res!64461 () Bool)

(assert (=> b!133966 (=> res!64461 e!87273)))

(assert (=> b!133966 (= res!64461 (= (h!2336 (toList!869 lt!69459)) (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!133967 () Bool)

(assert (=> b!133967 (= e!87273 (contains!898 (t!6198 (toList!869 lt!69459)) (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(assert (= (and d!40901 res!64460) b!133966))

(assert (= (and b!133966 (not res!64461)) b!133967))

(declare-fun m!158691 () Bool)

(assert (=> d!40901 m!158691))

(declare-fun m!158693 () Bool)

(assert (=> d!40901 m!158693))

(declare-fun m!158695 () Bool)

(assert (=> b!133967 m!158695))

(assert (=> b!132978 d!40901))

(declare-fun b!133968 () Bool)

(declare-fun e!87276 () (_ BitVec 32))

(assert (=> b!133968 (= e!87276 #b00000000000000000000000000000000)))

(declare-fun d!40903 () Bool)

(declare-fun lt!70162 () (_ BitVec 32))

(assert (=> d!40903 (and (bvsge lt!70162 #b00000000000000000000000000000000) (bvsle lt!70162 (bvsub (size!2529 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!40903 (= lt!70162 e!87276)))

(declare-fun c!24875 () Bool)

(assert (=> d!40903 (= c!24875 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!40903 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2529 (_keys!4614 newMap!16)) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!40903 (= (arrayCountValidKeys!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))) lt!70162)))

(declare-fun b!133969 () Bool)

(declare-fun e!87275 () (_ BitVec 32))

(declare-fun call!14798 () (_ BitVec 32))

(assert (=> b!133969 (= e!87275 call!14798)))

(declare-fun b!133970 () Bool)

(assert (=> b!133970 (= e!87275 (bvadd #b00000000000000000000000000000001 call!14798))))

(declare-fun bm!14795 () Bool)

(assert (=> bm!14795 (= call!14798 (arrayCountValidKeys!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!133971 () Bool)

(assert (=> b!133971 (= e!87276 e!87275)))

(declare-fun c!24874 () Bool)

(assert (=> b!133971 (= c!24874 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!40903 c!24875) b!133968))

(assert (= (and d!40903 (not c!24875)) b!133971))

(assert (= (and b!133971 c!24874) b!133970))

(assert (= (and b!133971 (not c!24874)) b!133969))

(assert (= (or b!133970 b!133969) bm!14795))

(declare-fun m!158697 () Bool)

(assert (=> bm!14795 m!158697))

(assert (=> b!133971 m!157187))

(assert (=> b!133971 m!157187))

(assert (=> b!133971 m!157195))

(assert (=> bm!14649 d!40903))

(declare-fun d!40905 () Bool)

(assert (=> d!40905 (= (get!1491 (getValueByKey!171 (toList!869 lt!69230) lt!69218)) (v!3201 (getValueByKey!171 (toList!869 lt!69230) lt!69218)))))

(assert (=> d!40363 d!40905))

(declare-fun b!133972 () Bool)

(declare-fun e!87277 () Option!177)

(assert (=> b!133972 (= e!87277 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69230)))))))

(declare-fun b!133975 () Bool)

(declare-fun e!87278 () Option!177)

(assert (=> b!133975 (= e!87278 None!175)))

(declare-fun b!133974 () Bool)

(assert (=> b!133974 (= e!87278 (getValueByKey!171 (t!6198 (toList!869 lt!69230)) lt!69218))))

(declare-fun b!133973 () Bool)

(assert (=> b!133973 (= e!87277 e!87278)))

(declare-fun c!24877 () Bool)

(assert (=> b!133973 (= c!24877 (and ((_ is Cons!1731) (toList!869 lt!69230)) (not (= (_1!1314 (h!2336 (toList!869 lt!69230))) lt!69218))))))

(declare-fun d!40907 () Bool)

(declare-fun c!24876 () Bool)

(assert (=> d!40907 (= c!24876 (and ((_ is Cons!1731) (toList!869 lt!69230)) (= (_1!1314 (h!2336 (toList!869 lt!69230))) lt!69218)))))

(assert (=> d!40907 (= (getValueByKey!171 (toList!869 lt!69230) lt!69218) e!87277)))

(assert (= (and d!40907 c!24876) b!133972))

(assert (= (and d!40907 (not c!24876)) b!133973))

(assert (= (and b!133973 c!24877) b!133974))

(assert (= (and b!133973 (not c!24877)) b!133975))

(declare-fun m!158699 () Bool)

(assert (=> b!133974 m!158699))

(assert (=> d!40363 d!40907))

(assert (=> b!133133 d!40293))

(declare-fun d!40909 () Bool)

(assert (=> d!40909 (= (apply!116 lt!69488 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1491 (getValueByKey!171 (toList!869 lt!69488) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5552 () Bool)

(assert (= bs!5552 d!40909))

(assert (=> bs!5552 m!156533))

(assert (=> bs!5552 m!158073))

(assert (=> bs!5552 m!158073))

(declare-fun m!158701 () Bool)

(assert (=> bs!5552 m!158701))

(assert (=> b!133011 d!40909))

(declare-fun d!40911 () Bool)

(declare-fun c!24878 () Bool)

(assert (=> d!40911 (= c!24878 ((_ is ValueCellFull!1095) (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!87279 () V!3483)

(assert (=> d!40911 (= (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87279)))

(declare-fun b!133976 () Bool)

(assert (=> b!133976 (= e!87279 (get!1489 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133977 () Bool)

(assert (=> b!133977 (= e!87279 (get!1490 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40911 c!24878) b!133976))

(assert (= (and d!40911 (not c!24878)) b!133977))

(assert (=> b!133976 m!156845))

(assert (=> b!133976 m!156647))

(declare-fun m!158703 () Bool)

(assert (=> b!133976 m!158703))

(assert (=> b!133977 m!156845))

(assert (=> b!133977 m!156647))

(declare-fun m!158705 () Bool)

(assert (=> b!133977 m!158705))

(assert (=> b!133011 d!40911))

(declare-fun b!133978 () Bool)

(declare-fun e!87281 () (_ BitVec 32))

(assert (=> b!133978 (= e!87281 #b00000000000000000000000000000000)))

(declare-fun d!40913 () Bool)

(declare-fun lt!70163 () (_ BitVec 32))

(assert (=> d!40913 (and (bvsge lt!70163 #b00000000000000000000000000000000) (bvsle lt!70163 (bvsub (size!2529 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(assert (=> d!40913 (= lt!70163 e!87281)))

(declare-fun c!24880 () Bool)

(assert (=> d!40913 (= c!24880 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(assert (=> d!40913 (and (bvsle #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69327)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2529 (_keys!4614 (_2!1315 lt!69327))) (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(assert (=> d!40913 (= (arrayCountValidKeys!0 (_keys!4614 (_2!1315 lt!69327)) #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69327)))) lt!70163)))

(declare-fun b!133979 () Bool)

(declare-fun e!87280 () (_ BitVec 32))

(declare-fun call!14799 () (_ BitVec 32))

(assert (=> b!133979 (= e!87280 call!14799)))

(declare-fun b!133980 () Bool)

(assert (=> b!133980 (= e!87280 (bvadd #b00000000000000000000000000000001 call!14799))))

(declare-fun bm!14796 () Bool)

(assert (=> bm!14796 (= call!14799 (arrayCountValidKeys!0 (_keys!4614 (_2!1315 lt!69327)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(declare-fun b!133981 () Bool)

(assert (=> b!133981 (= e!87281 e!87280)))

(declare-fun c!24879 () Bool)

(assert (=> b!133981 (= c!24879 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(assert (= (and d!40913 c!24880) b!133978))

(assert (= (and d!40913 (not c!24880)) b!133981))

(assert (= (and b!133981 c!24879) b!133980))

(assert (= (and b!133981 (not c!24879)) b!133979))

(assert (= (or b!133980 b!133979) bm!14796))

(declare-fun m!158707 () Bool)

(assert (=> bm!14796 m!158707))

(assert (=> b!133981 m!157397))

(assert (=> b!133981 m!157397))

(assert (=> b!133981 m!157445))

(assert (=> b!132812 d!40913))

(declare-fun b!133982 () Bool)

(declare-fun e!87282 () Option!177)

(assert (=> b!133982 (= e!87282 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69376)))))))

(declare-fun b!133985 () Bool)

(declare-fun e!87283 () Option!177)

(assert (=> b!133985 (= e!87283 None!175)))

(declare-fun b!133984 () Bool)

(assert (=> b!133984 (= e!87283 (getValueByKey!171 (t!6198 (toList!869 lt!69376)) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133983 () Bool)

(assert (=> b!133983 (= e!87282 e!87283)))

(declare-fun c!24882 () Bool)

(assert (=> b!133983 (= c!24882 (and ((_ is Cons!1731) (toList!869 lt!69376)) (not (= (_1!1314 (h!2336 (toList!869 lt!69376))) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!24881 () Bool)

(declare-fun d!40915 () Bool)

(assert (=> d!40915 (= c!24881 (and ((_ is Cons!1731) (toList!869 lt!69376)) (= (_1!1314 (h!2336 (toList!869 lt!69376))) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!40915 (= (getValueByKey!171 (toList!869 lt!69376) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!87282)))

(assert (= (and d!40915 c!24881) b!133982))

(assert (= (and d!40915 (not c!24881)) b!133983))

(assert (= (and b!133983 c!24882) b!133984))

(assert (= (and b!133983 (not c!24882)) b!133985))

(declare-fun m!158709 () Bool)

(assert (=> b!133984 m!158709))

(assert (=> b!132877 d!40915))

(assert (=> b!133020 d!40473))

(assert (=> b!133076 d!40381))

(declare-fun d!40917 () Bool)

(declare-fun e!87284 () Bool)

(assert (=> d!40917 e!87284))

(declare-fun res!64462 () Bool)

(assert (=> d!40917 (=> res!64462 e!87284)))

(declare-fun lt!70164 () Bool)

(assert (=> d!40917 (= res!64462 (not lt!70164))))

(declare-fun lt!70166 () Bool)

(assert (=> d!40917 (= lt!70164 lt!70166)))

(declare-fun lt!70165 () Unit!4150)

(declare-fun e!87285 () Unit!4150)

(assert (=> d!40917 (= lt!70165 e!87285)))

(declare-fun c!24883 () Bool)

(assert (=> d!40917 (= c!24883 lt!70166)))

(assert (=> d!40917 (= lt!70166 (containsKey!175 (toList!869 lt!69405) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40917 (= (contains!896 lt!69405 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70164)))

(declare-fun b!133986 () Bool)

(declare-fun lt!70167 () Unit!4150)

(assert (=> b!133986 (= e!87285 lt!70167)))

(assert (=> b!133986 (= lt!70167 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69405) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133986 (isDefined!125 (getValueByKey!171 (toList!869 lt!69405) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133987 () Bool)

(declare-fun Unit!4204 () Unit!4150)

(assert (=> b!133987 (= e!87285 Unit!4204)))

(declare-fun b!133988 () Bool)

(assert (=> b!133988 (= e!87284 (isDefined!125 (getValueByKey!171 (toList!869 lt!69405) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40917 c!24883) b!133986))

(assert (= (and d!40917 (not c!24883)) b!133987))

(assert (= (and d!40917 (not res!64462)) b!133988))

(declare-fun m!158711 () Bool)

(assert (=> d!40917 m!158711))

(declare-fun m!158713 () Bool)

(assert (=> b!133986 m!158713))

(declare-fun m!158715 () Bool)

(assert (=> b!133986 m!158715))

(assert (=> b!133986 m!158715))

(declare-fun m!158717 () Bool)

(assert (=> b!133986 m!158717))

(assert (=> b!133988 m!158715))

(assert (=> b!133988 m!158715))

(assert (=> b!133988 m!158717))

(assert (=> b!132922 d!40917))

(declare-fun d!40919 () Bool)

(declare-fun res!64463 () Bool)

(declare-fun e!87286 () Bool)

(assert (=> d!40919 (=> res!64463 e!87286)))

(assert (=> d!40919 (= res!64463 (and ((_ is Cons!1731) (toList!869 lt!69221)) (= (_1!1314 (h!2336 (toList!869 lt!69221))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!40919 (= (containsKey!175 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!87286)))

(declare-fun b!133989 () Bool)

(declare-fun e!87287 () Bool)

(assert (=> b!133989 (= e!87286 e!87287)))

(declare-fun res!64464 () Bool)

(assert (=> b!133989 (=> (not res!64464) (not e!87287))))

(assert (=> b!133989 (= res!64464 (and (or (not ((_ is Cons!1731) (toList!869 lt!69221))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69221))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1731) (toList!869 lt!69221)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69221))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!133990 () Bool)

(assert (=> b!133990 (= e!87287 (containsKey!175 (t!6198 (toList!869 lt!69221)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!40919 (not res!64463)) b!133989))

(assert (= (and b!133989 res!64464) b!133990))

(assert (=> b!133990 m!156357))

(declare-fun m!158719 () Bool)

(assert (=> b!133990 m!158719))

(assert (=> d!40401 d!40919))

(assert (=> b!132914 d!40725))

(declare-fun d!40921 () Bool)

(assert (=> d!40921 (= (apply!116 lt!69416 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1491 (getValueByKey!171 (toList!869 lt!69416) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5553 () Bool)

(assert (= bs!5553 d!40921))

(assert (=> bs!5553 m!156533))

(assert (=> bs!5553 m!158151))

(assert (=> bs!5553 m!158151))

(declare-fun m!158721 () Bool)

(assert (=> bs!5553 m!158721))

(assert (=> b!132944 d!40921))

(declare-fun d!40923 () Bool)

(declare-fun c!24884 () Bool)

(assert (=> d!40923 (= c!24884 ((_ is ValueCellFull!1095) (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!87288 () V!3483)

(assert (=> d!40923 (= (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87288)))

(declare-fun b!133991 () Bool)

(assert (=> b!133991 (= e!87288 (get!1489 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133992 () Bool)

(assert (=> b!133992 (= e!87288 (get!1490 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40923 c!24884) b!133991))

(assert (= (and d!40923 (not c!24884)) b!133992))

(assert (=> b!133991 m!156645))

(assert (=> b!133991 m!156647))

(declare-fun m!158723 () Bool)

(assert (=> b!133991 m!158723))

(assert (=> b!133992 m!156645))

(assert (=> b!133992 m!156647))

(declare-fun m!158725 () Bool)

(assert (=> b!133992 m!158725))

(assert (=> b!132944 d!40923))

(declare-fun d!40925 () Bool)

(declare-fun res!64465 () Bool)

(declare-fun e!87289 () Bool)

(assert (=> d!40925 (=> res!64465 e!87289)))

(assert (=> d!40925 (= res!64465 (and ((_ is Cons!1731) (toList!869 lt!69221)) (= (_1!1314 (h!2336 (toList!869 lt!69221))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40925 (= (containsKey!175 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000) e!87289)))

(declare-fun b!133993 () Bool)

(declare-fun e!87290 () Bool)

(assert (=> b!133993 (= e!87289 e!87290)))

(declare-fun res!64466 () Bool)

(assert (=> b!133993 (=> (not res!64466) (not e!87290))))

(assert (=> b!133993 (= res!64466 (and (or (not ((_ is Cons!1731) (toList!869 lt!69221))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69221))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1731) (toList!869 lt!69221)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69221))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133994 () Bool)

(assert (=> b!133994 (= e!87290 (containsKey!175 (t!6198 (toList!869 lt!69221)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!40925 (not res!64465)) b!133993))

(assert (= (and b!133993 res!64466) b!133994))

(declare-fun m!158727 () Bool)

(assert (=> b!133994 m!158727))

(assert (=> d!40411 d!40925))

(declare-fun d!40927 () Bool)

(declare-fun res!64467 () Bool)

(declare-fun e!87291 () Bool)

(assert (=> d!40927 (=> res!64467 e!87291)))

(assert (=> d!40927 (= res!64467 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69161))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69161)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!40927 (= (containsKey!175 (t!6198 (toList!869 lt!69161)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) e!87291)))

(declare-fun b!133995 () Bool)

(declare-fun e!87292 () Bool)

(assert (=> b!133995 (= e!87291 e!87292)))

(declare-fun res!64468 () Bool)

(assert (=> b!133995 (=> (not res!64468) (not e!87292))))

(assert (=> b!133995 (= res!64468 (and (or (not ((_ is Cons!1731) (t!6198 (toList!869 lt!69161)))) (bvsle (_1!1314 (h!2336 (t!6198 (toList!869 lt!69161)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))) ((_ is Cons!1731) (t!6198 (toList!869 lt!69161))) (bvslt (_1!1314 (h!2336 (t!6198 (toList!869 lt!69161)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(declare-fun b!133996 () Bool)

(assert (=> b!133996 (= e!87292 (containsKey!175 (t!6198 (t!6198 (toList!869 lt!69161))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40927 (not res!64467)) b!133995))

(assert (= (and b!133995 res!64468) b!133996))

(assert (=> b!133996 m!156287))

(declare-fun m!158729 () Bool)

(assert (=> b!133996 m!158729))

(assert (=> b!133041 d!40927))

(declare-fun d!40929 () Bool)

(declare-fun e!87293 () Bool)

(assert (=> d!40929 e!87293))

(declare-fun res!64469 () Bool)

(assert (=> d!40929 (=> res!64469 e!87293)))

(declare-fun lt!70168 () Bool)

(assert (=> d!40929 (= res!64469 (not lt!70168))))

(declare-fun lt!70170 () Bool)

(assert (=> d!40929 (= lt!70168 lt!70170)))

(declare-fun lt!70169 () Unit!4150)

(declare-fun e!87294 () Unit!4150)

(assert (=> d!40929 (= lt!70169 e!87294)))

(declare-fun c!24885 () Bool)

(assert (=> d!40929 (= c!24885 lt!70170)))

(assert (=> d!40929 (= lt!70170 (containsKey!175 (toList!869 (map!1405 (_2!1315 lt!69589))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40929 (= (contains!896 (map!1405 (_2!1315 lt!69589)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) lt!70168)))

(declare-fun b!133997 () Bool)

(declare-fun lt!70171 () Unit!4150)

(assert (=> b!133997 (= e!87294 lt!70171)))

(assert (=> b!133997 (= lt!70171 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (map!1405 (_2!1315 lt!69589))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> b!133997 (isDefined!125 (getValueByKey!171 (toList!869 (map!1405 (_2!1315 lt!69589))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!133998 () Bool)

(declare-fun Unit!4205 () Unit!4150)

(assert (=> b!133998 (= e!87294 Unit!4205)))

(declare-fun b!133999 () Bool)

(assert (=> b!133999 (= e!87293 (isDefined!125 (getValueByKey!171 (toList!869 (map!1405 (_2!1315 lt!69589))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (= (and d!40929 c!24885) b!133997))

(assert (= (and d!40929 (not c!24885)) b!133998))

(assert (= (and d!40929 (not res!64469)) b!133999))

(assert (=> d!40929 m!156287))

(declare-fun m!158731 () Bool)

(assert (=> d!40929 m!158731))

(assert (=> b!133997 m!156287))

(declare-fun m!158733 () Bool)

(assert (=> b!133997 m!158733))

(assert (=> b!133997 m!156287))

(declare-fun m!158735 () Bool)

(assert (=> b!133997 m!158735))

(assert (=> b!133997 m!158735))

(declare-fun m!158737 () Bool)

(assert (=> b!133997 m!158737))

(assert (=> b!133999 m!156287))

(assert (=> b!133999 m!158735))

(assert (=> b!133999 m!158735))

(assert (=> b!133999 m!158737))

(assert (=> b!133091 d!40929))

(assert (=> b!133091 d!40663))

(assert (=> d!40391 d!40393))

(assert (=> d!40391 d!40395))

(declare-fun d!40931 () Bool)

(assert (=> d!40931 (isDefined!125 (getValueByKey!171 (toList!869 lt!69161) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40931 true))

(declare-fun _$12!399 () Unit!4150)

(assert (=> d!40931 (= (choose!831 (toList!869 lt!69161) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) _$12!399)))

(declare-fun bs!5554 () Bool)

(assert (= bs!5554 d!40931))

(assert (=> bs!5554 m!156287))

(assert (=> bs!5554 m!156417))

(assert (=> bs!5554 m!156417))

(assert (=> bs!5554 m!156419))

(assert (=> d!40391 d!40931))

(declare-fun d!40933 () Bool)

(declare-fun res!64474 () Bool)

(declare-fun e!87299 () Bool)

(assert (=> d!40933 (=> res!64474 e!87299)))

(assert (=> d!40933 (= res!64474 (or ((_ is Nil!1732) (toList!869 lt!69161)) ((_ is Nil!1732) (t!6198 (toList!869 lt!69161)))))))

(assert (=> d!40933 (= (isStrictlySorted!317 (toList!869 lt!69161)) e!87299)))

(declare-fun b!134004 () Bool)

(declare-fun e!87300 () Bool)

(assert (=> b!134004 (= e!87299 e!87300)))

(declare-fun res!64475 () Bool)

(assert (=> b!134004 (=> (not res!64475) (not e!87300))))

(assert (=> b!134004 (= res!64475 (bvslt (_1!1314 (h!2336 (toList!869 lt!69161))) (_1!1314 (h!2336 (t!6198 (toList!869 lt!69161))))))))

(declare-fun b!134005 () Bool)

(assert (=> b!134005 (= e!87300 (isStrictlySorted!317 (t!6198 (toList!869 lt!69161))))))

(assert (= (and d!40933 (not res!64474)) b!134004))

(assert (= (and b!134004 res!64475) b!134005))

(declare-fun m!158739 () Bool)

(assert (=> b!134005 m!158739))

(assert (=> d!40391 d!40933))

(assert (=> d!40379 d!40373))

(declare-fun d!40935 () Bool)

(declare-fun e!87301 () Bool)

(assert (=> d!40935 e!87301))

(declare-fun res!64476 () Bool)

(assert (=> d!40935 (=> res!64476 e!87301)))

(declare-fun lt!70172 () Bool)

(assert (=> d!40935 (= res!64476 (not lt!70172))))

(declare-fun lt!70174 () Bool)

(assert (=> d!40935 (= lt!70172 lt!70174)))

(declare-fun lt!70173 () Unit!4150)

(declare-fun e!87302 () Unit!4150)

(assert (=> d!40935 (= lt!70173 e!87302)))

(declare-fun c!24886 () Bool)

(assert (=> d!40935 (= c!24886 lt!70174)))

(assert (=> d!40935 (= lt!70174 (containsKey!175 (toList!869 lt!69230) lt!69218))))

(assert (=> d!40935 (= (contains!896 lt!69230 lt!69218) lt!70172)))

(declare-fun b!134006 () Bool)

(declare-fun lt!70175 () Unit!4150)

(assert (=> b!134006 (= e!87302 lt!70175)))

(assert (=> b!134006 (= lt!70175 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69230) lt!69218))))

(assert (=> b!134006 (isDefined!125 (getValueByKey!171 (toList!869 lt!69230) lt!69218))))

(declare-fun b!134007 () Bool)

(declare-fun Unit!4206 () Unit!4150)

(assert (=> b!134007 (= e!87302 Unit!4206)))

(declare-fun b!134008 () Bool)

(assert (=> b!134008 (= e!87301 (isDefined!125 (getValueByKey!171 (toList!869 lt!69230) lt!69218)))))

(assert (= (and d!40935 c!24886) b!134006))

(assert (= (and d!40935 (not c!24886)) b!134007))

(assert (= (and d!40935 (not res!64476)) b!134008))

(declare-fun m!158741 () Bool)

(assert (=> d!40935 m!158741))

(declare-fun m!158743 () Bool)

(assert (=> b!134006 m!158743))

(assert (=> b!134006 m!156781))

(assert (=> b!134006 m!156781))

(declare-fun m!158745 () Bool)

(assert (=> b!134006 m!158745))

(assert (=> b!134008 m!156781))

(assert (=> b!134008 m!156781))

(assert (=> b!134008 m!158745))

(assert (=> d!40379 d!40935))

(assert (=> d!40379 d!40363))

(assert (=> d!40379 d!40365))

(declare-fun d!40937 () Bool)

(assert (=> d!40937 (= (apply!116 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!69218) (apply!116 lt!69230 lt!69218))))

(assert (=> d!40937 true))

(declare-fun _$34!976 () Unit!4150)

(assert (=> d!40937 (= (choose!828 lt!69230 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))) lt!69218) _$34!976)))

(declare-fun bs!5555 () Bool)

(assert (= bs!5555 d!40937))

(assert (=> bs!5555 m!156385))

(assert (=> bs!5555 m!156385))

(assert (=> bs!5555 m!156387))

(assert (=> bs!5555 m!156399))

(assert (=> d!40379 d!40937))

(declare-fun d!40939 () Bool)

(assert (=> d!40939 (isDefined!125 (getValueByKey!171 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70176 () Unit!4150)

(assert (=> d!40939 (= lt!70176 (choose!831 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87303 () Bool)

(assert (=> d!40939 e!87303))

(declare-fun res!64477 () Bool)

(assert (=> d!40939 (=> (not res!64477) (not e!87303))))

(assert (=> d!40939 (= res!64477 (isStrictlySorted!317 (toList!869 lt!69221)))))

(assert (=> d!40939 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000) lt!70176)))

(declare-fun b!134009 () Bool)

(assert (=> b!134009 (= e!87303 (containsKey!175 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!40939 res!64477) b!134009))

(assert (=> d!40939 m!156519))

(assert (=> d!40939 m!156519))

(assert (=> d!40939 m!156521))

(declare-fun m!158747 () Bool)

(assert (=> d!40939 m!158747))

(assert (=> d!40939 m!158391))

(assert (=> b!134009 m!156515))

(assert (=> b!132815 d!40939))

(assert (=> b!132815 d!40647))

(assert (=> b!132815 d!40427))

(declare-fun d!40941 () Bool)

(declare-fun e!87304 () Bool)

(assert (=> d!40941 e!87304))

(declare-fun res!64478 () Bool)

(assert (=> d!40941 (=> res!64478 e!87304)))

(declare-fun lt!70177 () Bool)

(assert (=> d!40941 (= res!64478 (not lt!70177))))

(declare-fun lt!70179 () Bool)

(assert (=> d!40941 (= lt!70177 lt!70179)))

(declare-fun lt!70178 () Unit!4150)

(declare-fun e!87305 () Unit!4150)

(assert (=> d!40941 (= lt!70178 e!87305)))

(declare-fun c!24887 () Bool)

(assert (=> d!40941 (= c!24887 lt!70179)))

(assert (=> d!40941 (= lt!70179 (containsKey!175 (toList!869 lt!69416) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40941 (= (contains!896 lt!69416 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70177)))

(declare-fun b!134010 () Bool)

(declare-fun lt!70180 () Unit!4150)

(assert (=> b!134010 (= e!87305 lt!70180)))

(assert (=> b!134010 (= lt!70180 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69416) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134010 (isDefined!125 (getValueByKey!171 (toList!869 lt!69416) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134011 () Bool)

(declare-fun Unit!4207 () Unit!4150)

(assert (=> b!134011 (= e!87305 Unit!4207)))

(declare-fun b!134012 () Bool)

(assert (=> b!134012 (= e!87304 (isDefined!125 (getValueByKey!171 (toList!869 lt!69416) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40941 c!24887) b!134010))

(assert (= (and d!40941 (not c!24887)) b!134011))

(assert (= (and d!40941 (not res!64478)) b!134012))

(declare-fun m!158749 () Bool)

(assert (=> d!40941 m!158749))

(declare-fun m!158751 () Bool)

(assert (=> b!134010 m!158751))

(assert (=> b!134010 m!157979))

(assert (=> b!134010 m!157979))

(declare-fun m!158753 () Bool)

(assert (=> b!134010 m!158753))

(assert (=> b!134012 m!157979))

(assert (=> b!134012 m!157979))

(assert (=> b!134012 m!158753))

(assert (=> bm!14661 d!40941))

(declare-fun d!40943 () Bool)

(assert (=> d!40943 (= (apply!116 lt!69405 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1491 (getValueByKey!171 (toList!869 lt!69405) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5556 () Bool)

(assert (= bs!5556 d!40943))

(assert (=> bs!5556 m!156357))

(assert (=> bs!5556 m!157959))

(assert (=> bs!5556 m!157959))

(declare-fun m!158755 () Bool)

(assert (=> bs!5556 m!158755))

(assert (=> b!132918 d!40943))

(assert (=> b!132918 d!40343))

(declare-fun d!40945 () Bool)

(declare-fun res!64479 () Bool)

(declare-fun e!87306 () Bool)

(assert (=> d!40945 (=> res!64479 e!87306)))

(assert (=> d!40945 (= res!64479 (and ((_ is Cons!1731) (toList!869 call!14629)) (= (_1!1314 (h!2336 (toList!869 call!14629))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!40945 (= (containsKey!175 (toList!869 call!14629) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) e!87306)))

(declare-fun b!134013 () Bool)

(declare-fun e!87307 () Bool)

(assert (=> b!134013 (= e!87306 e!87307)))

(declare-fun res!64480 () Bool)

(assert (=> b!134013 (=> (not res!64480) (not e!87307))))

(assert (=> b!134013 (= res!64480 (and (or (not ((_ is Cons!1731) (toList!869 call!14629))) (bvsle (_1!1314 (h!2336 (toList!869 call!14629))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))) ((_ is Cons!1731) (toList!869 call!14629)) (bvslt (_1!1314 (h!2336 (toList!869 call!14629))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(declare-fun b!134014 () Bool)

(assert (=> b!134014 (= e!87307 (containsKey!175 (t!6198 (toList!869 call!14629)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40945 (not res!64479)) b!134013))

(assert (= (and b!134013 res!64480) b!134014))

(assert (=> b!134014 m!156287))

(declare-fun m!158757 () Bool)

(assert (=> b!134014 m!158757))

(assert (=> d!40301 d!40945))

(declare-fun d!40947 () Bool)

(assert (=> d!40947 (= (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69218)) (v!3201 (getValueByKey!171 (toList!869 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69218)))))

(assert (=> d!40373 d!40947))

(declare-fun b!134015 () Bool)

(declare-fun e!87308 () Option!177)

(assert (=> b!134015 (= e!87308 (Some!176 (_2!1314 (h!2336 (toList!869 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))))

(declare-fun b!134018 () Bool)

(declare-fun e!87309 () Option!177)

(assert (=> b!134018 (= e!87309 None!175)))

(declare-fun b!134017 () Bool)

(assert (=> b!134017 (= e!87309 (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!69218))))

(declare-fun b!134016 () Bool)

(assert (=> b!134016 (= e!87308 e!87309)))

(declare-fun c!24889 () Bool)

(assert (=> b!134016 (= c!24889 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) (not (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) lt!69218))))))

(declare-fun c!24888 () Bool)

(declare-fun d!40949 () Bool)

(assert (=> d!40949 (= c!24888 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) lt!69218)))))

(assert (=> d!40949 (= (getValueByKey!171 (toList!869 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69218) e!87308)))

(assert (= (and d!40949 c!24888) b!134015))

(assert (= (and d!40949 (not c!24888)) b!134016))

(assert (= (and b!134016 c!24889) b!134017))

(assert (= (and b!134016 (not c!24889)) b!134018))

(declare-fun m!158759 () Bool)

(assert (=> b!134017 m!158759))

(assert (=> d!40373 d!40949))

(declare-fun mapIsEmpty!4657 () Bool)

(declare-fun mapRes!4657 () Bool)

(assert (=> mapIsEmpty!4657 mapRes!4657))

(declare-fun condMapEmpty!4657 () Bool)

(declare-fun mapDefault!4657 () ValueCell!1095)

(assert (=> mapNonEmpty!4656 (= condMapEmpty!4657 (= mapRest!4656 ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4657)))))

(declare-fun e!87311 () Bool)

(assert (=> mapNonEmpty!4656 (= tp!11226 (and e!87311 mapRes!4657))))

(declare-fun mapNonEmpty!4657 () Bool)

(declare-fun tp!11227 () Bool)

(declare-fun e!87310 () Bool)

(assert (=> mapNonEmpty!4657 (= mapRes!4657 (and tp!11227 e!87310))))

(declare-fun mapRest!4657 () (Array (_ BitVec 32) ValueCell!1095))

(declare-fun mapKey!4657 () (_ BitVec 32))

(declare-fun mapValue!4657 () ValueCell!1095)

(assert (=> mapNonEmpty!4657 (= mapRest!4656 (store mapRest!4657 mapKey!4657 mapValue!4657))))

(declare-fun b!134020 () Bool)

(assert (=> b!134020 (= e!87311 tp_is_empty!2877)))

(declare-fun b!134019 () Bool)

(assert (=> b!134019 (= e!87310 tp_is_empty!2877)))

(assert (= (and mapNonEmpty!4656 condMapEmpty!4657) mapIsEmpty!4657))

(assert (= (and mapNonEmpty!4656 (not condMapEmpty!4657)) mapNonEmpty!4657))

(assert (= (and mapNonEmpty!4657 ((_ is ValueCellFull!1095) mapValue!4657)) b!134019))

(assert (= (and mapNonEmpty!4656 ((_ is ValueCellFull!1095) mapDefault!4657)) b!134020))

(declare-fun m!158761 () Bool)

(assert (=> mapNonEmpty!4657 m!158761))

(declare-fun mapIsEmpty!4658 () Bool)

(declare-fun mapRes!4658 () Bool)

(assert (=> mapIsEmpty!4658 mapRes!4658))

(declare-fun condMapEmpty!4658 () Bool)

(declare-fun mapDefault!4658 () ValueCell!1095)

(assert (=> mapNonEmpty!4655 (= condMapEmpty!4658 (= mapRest!4655 ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4658)))))

(declare-fun e!87313 () Bool)

(assert (=> mapNonEmpty!4655 (= tp!11225 (and e!87313 mapRes!4658))))

(declare-fun mapNonEmpty!4658 () Bool)

(declare-fun tp!11228 () Bool)

(declare-fun e!87312 () Bool)

(assert (=> mapNonEmpty!4658 (= mapRes!4658 (and tp!11228 e!87312))))

(declare-fun mapValue!4658 () ValueCell!1095)

(declare-fun mapKey!4658 () (_ BitVec 32))

(declare-fun mapRest!4658 () (Array (_ BitVec 32) ValueCell!1095))

(assert (=> mapNonEmpty!4658 (= mapRest!4655 (store mapRest!4658 mapKey!4658 mapValue!4658))))

(declare-fun b!134022 () Bool)

(assert (=> b!134022 (= e!87313 tp_is_empty!2877)))

(declare-fun b!134021 () Bool)

(assert (=> b!134021 (= e!87312 tp_is_empty!2877)))

(assert (= (and mapNonEmpty!4655 condMapEmpty!4658) mapIsEmpty!4658))

(assert (= (and mapNonEmpty!4655 (not condMapEmpty!4658)) mapNonEmpty!4658))

(assert (= (and mapNonEmpty!4658 ((_ is ValueCellFull!1095) mapValue!4658)) b!134021))

(assert (= (and mapNonEmpty!4655 ((_ is ValueCellFull!1095) mapDefault!4658)) b!134022))

(declare-fun m!158763 () Bool)

(assert (=> mapNonEmpty!4658 m!158763))

(declare-fun b_lambda!5987 () Bool)

(assert (= b_lambda!5985 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!5987)))

(declare-fun b_lambda!5989 () Bool)

(assert (= b_lambda!5983 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!5989)))

(declare-fun b_lambda!5991 () Bool)

(assert (= b_lambda!5971 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!5991)))

(declare-fun b_lambda!5993 () Bool)

(assert (= b_lambda!5957 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!5993)))

(declare-fun b_lambda!5995 () Bool)

(assert (= b_lambda!5959 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!5995)))

(declare-fun b_lambda!5997 () Bool)

(assert (= b_lambda!5981 (or (and b!132488 b_free!2921) (and b!132481 b_free!2923 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))))) b_lambda!5997)))

(declare-fun b_lambda!5999 () Bool)

(assert (= b_lambda!5973 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!5999)))

(declare-fun b_lambda!6001 () Bool)

(assert (= b_lambda!5979 (or (and b!132488 b_free!2921) (and b!132481 b_free!2923 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))))) b_lambda!6001)))

(declare-fun b_lambda!6003 () Bool)

(assert (= b_lambda!5961 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6003)))

(declare-fun b_lambda!6005 () Bool)

(assert (= b_lambda!5967 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6005)))

(declare-fun b_lambda!6007 () Bool)

(assert (= b_lambda!5977 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6007)))

(declare-fun b_lambda!6009 () Bool)

(assert (= b_lambda!5975 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6009)))

(declare-fun b_lambda!6011 () Bool)

(assert (= b_lambda!5969 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6011)))

(declare-fun b_lambda!6013 () Bool)

(assert (= b_lambda!5963 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6013)))

(check-sat (not bm!14779) (not b!133353) (not d!40491) (not b!133460) (not b!133864) (not d!40885) (not d!40693) (not b!133598) (not b!133540) (not d!40467) (not d!40481) (not b_lambda!5951) (not b!133557) (not d!40889) (not b!133273) (not b_lambda!5935) (not b!133636) (not bm!14722) (not d!40641) (not d!40463) (not d!40599) (not b!133208) (not b!133930) (not d!40909) (not d!40769) (not b!133160) (not b!133568) (not b!133830) (not b!133533) (not b!133763) (not b_lambda!5949) (not b!133757) (not b!133895) (not b!133508) (not b!133210) (not b!133432) (not d!40563) (not b!134006) (not b_lambda!6013) (not d!40793) (not d!40675) (not b!133338) (not b!133211) (not b!133727) (not b!133620) (not d!40843) (not b!133928) (not d!40567) (not b!133599) (not b!133498) (not b!133654) (not b!133723) (not b!133539) (not d!40519) (not d!40613) (not d!40839) (not d!40895) (not b!133609) (not b!133427) (not bm!14728) (not b!133485) (not b!133850) (not b!133764) (not b!133835) (not b!133269) (not b!133283) (not b!133279) (not bm!14719) (not b!133999) (not b!133324) (not bm!14752) (not d!40801) (not d!40791) (not b_lambda!6007) (not b!133997) (not bm!14763) (not b!133307) (not b!133877) (not b!133231) (not b!133331) (not b!133988) (not b!133769) (not d!40553) (not d!40549) (not bm!14784) (not b!133730) (not d!40589) (not d!40763) (not bm!14781) (not b!133170) (not b!133278) (not b!133401) (not d!40515) (not d!40581) (not b!133772) (not b!133522) (not b!133500) (not d!40543) (not d!40741) (not b!133440) (not b!133719) (not b!133444) (not d!40479) (not b!133672) (not b!133918) (not b!133618) (not b!133408) (not b!133502) (not d!40691) (not bm!14771) (not d!40537) (not d!40525) (not b!133456) (not b!133581) (not d!40931) (not bm!14794) (not b!133513) (not b!133825) (not b!133394) (not b!133639) (not b!133682) (not b!133996) (not d!40541) (not mapNonEmpty!4657) (not d!40435) (not bm!14749) (not b!133326) (not b!133409) (not b!133621) (not d!40939) (not b!133503) (not b!133956) (not b!133554) (not b!133860) (not b!133468) (not bm!14704) (not bm!14706) (not b!133492) (not bm!14739) (not d!40719) (not b!133220) (not d!40743) (not b!133563) (not b!133739) (not b!133291) (not b!133951) (not bm!14707) (not d!40857) (not b!133423) (not b!133501) (not d!40617) (not b!133251) (not b!133478) (not d!40551) (not bm!14747) (not d!40695) (not b!133738) (not b!133931) (not b!133601) (not b!133949) (not b_lambda!5991) (not d!40807) (not b!133652) (not b!133595) (not b!133782) (not b!133986) (not b!133597) (not d!40893) (not b!134008) (not b!133491) (not d!40795) (not b!133795) (not bm!14720) (not b!133407) (not bm!14782) (not d!40445) (not b!133264) (not d!40789) (not b!133463) (not d!40813) (not b!133550) (not d!40787) (not d!40935) (not b!133947) (not d!40737) (not b_lambda!5995) (not b!133303) (not b!133297) (not d!40713) (not b!133766) (not d!40461) (not d!40595) (not d!40753) (not b!133634) (not d!40875) (not b!133984) (not d!40483) (not b!133773) (not d!40797) b_and!8323 (not d!40633) (not b!133974) (not d!40799) (not b!133658) (not b!133247) (not bm!14755) (not d!40509) (not b!133666) (not b!133708) (not b!133317) (not b!133477) (not d!40825) (not b!133976) (not b!133576) (not b!133632) (not bm!14718) (not d!40587) (not b!133165) (not b!133537) (not b_lambda!5987) (not b!133426) (not b!133786) (not b!133671) (not b!133223) (not d!40569) (not b!133300) (not d!40805) (not b_lambda!5965) (not d!40751) (not d!40451) (not b!133720) (not b!133218) (not bm!14791) (not b!133657) (not b!133235) (not b!133433) (not b!133582) (not b!133418) (not bm!14732) (not d!40457) (not b!133741) (not d!40811) (not bm!14796) (not d!40487) (not b_lambda!5947) (not b!133642) (not b!133754) (not d!40455) (not b!133870) (not b!133535) (not b!133994) (not d!40471) (not b!133873) (not b!133629) (not d!40511) (not b!133350) (not d!40703) (not b!133221) (not d!40883) (not d!40577) (not b!133673) (not bm!14729) (not b!133230) (not d!40593) (not d!40929) (not b!133785) (not b!133449) (not d!40611) (not b!133702) (not b_lambda!5989) (not d!40583) (not b!133752) (not d!40529) (not b!133496) (not d!40623) (not b!133442) (not b!133237) (not d!40837) (not d!40723) (not b!133319) (not b!133313) (not bm!14714) (not b!133838) (not b!133879) (not d!40631) (not d!40523) (not b!133691) (not d!40943) (not b!133868) (not b!133892) (not b!133655) (not b!133177) (not b!133467) (not b!133665) (not b!133694) (not bm!14727) (not d!40603) (not b!133465) (not b!133866) (not d!40639) (not d!40605) (not bm!14793) (not b!133450) (not b!133437) (not b!133305) (not b!133926) (not b!133832) (not b!133583) (not b!133310) (not b!133779) (not d!40575) (not bm!14776) (not b!133863) (not b!133579) (not b!133674) (not d!40707) (not b!133616) (not d!40629) (not b!133482) (not d!40521) (not b!133697) (not b!133659) (not d!40917) (not b!133774) (not b!133261) (not d!40849) (not b!133201) (not b!133589) (not b!133910) (not d!40817) (not b!133758) (not b!133414) (not b!133316) (not bm!14786) (not b!133256) (not b!133977) (not b!133981) (not b!133705) (not d!40507) (not b!133268) (not b!133965) (not d!40775) (not d!40527) (not d!40921) (not b!133548) (not b!133990) (not b!133667) (not bm!14703) (not b!133416) (not b!133222) (not b!133737) (not b!133335) (not d!40701) (not d!40627) (not b!133314) (not d!40735) (not b!133586) (not bm!14711) (not d!40683) (not b!133865) (not b!133342) (not d!40747) (not bm!14738) (not b!133312) (not b!133882) (not b!133272) (not b!133602) (not bm!14709) (not b!133765) (not b!133923) (not b!133425) (not b!133704) (not b!133530) (not bm!14736) (not b!133402) (not b!133839) (not b!133760) (not bm!14748) (not bm!14760) (not b!133967) (not b!133233) (not bm!14766) (not b!133669) (not d!40821) (not b!133884) (not d!40785) (not b!134012) (not b!133474) (not d!40431) (not d!40777) (not d!40861) (not b!133749) tp_is_empty!2877 (not b!133552) (not d!40941) (not b!133566) (not b!133729) (not mapNonEmpty!4658) (not b!133213) (not bm!14775) (not b!133163) (not b!133200) (not d!40469) (not d!40535) (not b_lambda!5931) (not d!40779) (not d!40767) (not b!133405) (not b!133590) (not b!133424) (not bm!14723) (not b!133935) (not b!133271) (not b_lambda!6003) (not b!133660) (not b!133799) (not b!133645) (not b!133911) (not b_lambda!5997) (not d!40437) (not bm!14743) (not bm!14713) (not b!133670) (not b!133663) (not bm!14725) (not d!40687) (not b!133885) (not b!133628) (not d!40901) (not bm!14744) (not d!40449) (not b!134014) (not d!40699) (not bm!14789) (not d!40441) (not b!133167) (not b!133992) (not b!133611) (not b!133536) (not b_lambda!5999) (not b!133630) (not b!133889) (not b!133239) (not b!133913) (not b!133288) (not b!133914) (not b!133415) (not d!40565) (not b!133651) (not b!133742) (not b_next!2921) (not b!133699) (not d!40891) (not b_lambda!5993) (not b!133274) (not b!133519) (not d!40533) (not b!133919) (not b!133493) (not b!133270) (not b_lambda!6001) (not b!133198) (not b_next!2923) (not d!40477) (not b!133428) (not d!40755) (not b!134010) (not bm!14778) (not b!133781) (not b!133259) (not d!40881) (not d!40847) (not b!134005) (not bm!14788) (not b!133962) (not bm!14757) (not d!40731) (not b!133526) (not b!133369) (not b!133841) (not d!40863) (not d!40443) (not b_lambda!5953) (not d!40497) (not d!40869) (not b!133881) (not b!133759) (not d!40859) (not b!133330) (not b!133958) (not bm!14795) (not b!133709) (not d!40725) (not d!40705) (not d!40899) (not b!133680) (not d!40819) (not b!133569) (not d!40555) (not b!133717) (not b!133495) (not b!134017) (not d!40663) (not d!40573) (not b!133862) (not bm!14731) (not b!133828) (not b!133971) (not d!40489) (not d!40771) (not b!133842) (not bm!14716) (not b!133480) (not d!40493) (not b!133783) (not b!133776) (not d!40571) (not b!133511) (not b!133952) (not b!133750) b_and!8321 (not b!133887) (not b!133571) (not b!133406) (not b!133481) (not bm!14734) (not b!133445) (not b!133286) (not d!40447) (not d!40585) (not b!133421) (not bm!14772) (not b!133487) (not b!133732) (not b!133940) (not b!133488) (not b!133290) (not d!40545) (not b!133991) (not b!133340) (not b!133403) (not b!133648) (not b!133592) (not d!40659) (not b!133246) (not bm!14777) (not d!40765) (not d!40665) (not d!40501) (not b!133735) (not b!133224) (not b!133963) (not b!133939) (not b!134009) (not d!40721) (not bm!14741) (not b!133678) (not b!133572) (not b!133321) (not d!40655) (not d!40809) (not d!40647) (not d!40677) (not d!40517) (not b!133455) (not b!133244) (not d!40827) (not b!133561) (not d!40829) (not d!40887) (not d!40531) (not b!133696) (not b!133676) (not b!133854) (not d!40621) (not b!133400) (not b!133944) (not b_lambda!6005) (not b!133494) (not b!133574) (not d!40681) (not b_lambda!6011) (not d!40729) (not d!40439) (not b_lambda!5955) (not b!133489) (not d!40591) (not d!40645) (not b!133451) (not b!133900) (not b!133614) (not b!133617) (not d!40559) (not d!40937) (not b!133706) (not d!40759) (not b!133263) (not b!133578) (not b!133343) (not b!133837) (not b!133306) (not d!40579) (not b!133302) (not b_lambda!6009) (not b!133756) (not b!133412) (not b!133242) (not d!40557) (not b!133252) (not d!40803) (not b!133637) (not bm!14756) (not b!133528) (not b!133176) (not d!40539) (not b!133771) (not d!40727) (not d!40673) (not d!40853))
(check-sat b_and!8321 b_and!8323 (not b_next!2921) (not b_next!2923))
(get-model)

(declare-fun d!40951 () Bool)

(declare-fun e!87314 () Bool)

(assert (=> d!40951 e!87314))

(declare-fun res!64482 () Bool)

(assert (=> d!40951 (=> (not res!64482) (not e!87314))))

(declare-fun lt!70182 () ListLongMap!1707)

(assert (=> d!40951 (= res!64482 (contains!896 lt!70182 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun lt!70184 () List!1735)

(assert (=> d!40951 (= lt!70182 (ListLongMap!1708 lt!70184))))

(declare-fun lt!70183 () Unit!4150)

(declare-fun lt!70181 () Unit!4150)

(assert (=> d!40951 (= lt!70183 lt!70181)))

(assert (=> d!40951 (= (getValueByKey!171 lt!70184 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40951 (= lt!70181 (lemmaContainsTupThenGetReturnValue!88 lt!70184 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40951 (= lt!70184 (insertStrictlySorted!90 (toList!869 call!14742) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40951 (= (+!170 call!14742 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) lt!70182)))

(declare-fun b!134023 () Bool)

(declare-fun res!64481 () Bool)

(assert (=> b!134023 (=> (not res!64481) (not e!87314))))

(assert (=> b!134023 (= res!64481 (= (getValueByKey!171 (toList!869 lt!70182) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134024 () Bool)

(assert (=> b!134024 (= e!87314 (contains!898 (toList!869 lt!70182) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(assert (= (and d!40951 res!64482) b!134023))

(assert (= (and b!134023 res!64481) b!134024))

(declare-fun m!158765 () Bool)

(assert (=> d!40951 m!158765))

(declare-fun m!158767 () Bool)

(assert (=> d!40951 m!158767))

(declare-fun m!158769 () Bool)

(assert (=> d!40951 m!158769))

(declare-fun m!158771 () Bool)

(assert (=> d!40951 m!158771))

(declare-fun m!158773 () Bool)

(assert (=> b!134023 m!158773))

(declare-fun m!158775 () Bool)

(assert (=> b!134024 m!158775))

(assert (=> b!133463 d!40951))

(declare-fun d!40953 () Bool)

(declare-fun lt!70185 () Bool)

(assert (=> d!40953 (= lt!70185 (select (content!132 (t!6198 (toList!869 lt!69463))) (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun e!87316 () Bool)

(assert (=> d!40953 (= lt!70185 e!87316)))

(declare-fun res!64483 () Bool)

(assert (=> d!40953 (=> (not res!64483) (not e!87316))))

(assert (=> d!40953 (= res!64483 ((_ is Cons!1731) (t!6198 (toList!869 lt!69463))))))

(assert (=> d!40953 (= (contains!898 (t!6198 (toList!869 lt!69463)) (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!70185)))

(declare-fun b!134025 () Bool)

(declare-fun e!87315 () Bool)

(assert (=> b!134025 (= e!87316 e!87315)))

(declare-fun res!64484 () Bool)

(assert (=> b!134025 (=> res!64484 e!87315)))

(assert (=> b!134025 (= res!64484 (= (h!2336 (t!6198 (toList!869 lt!69463))) (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!134026 () Bool)

(assert (=> b!134026 (= e!87315 (contains!898 (t!6198 (t!6198 (toList!869 lt!69463))) (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(assert (= (and d!40953 res!64483) b!134025))

(assert (= (and b!134025 (not res!64484)) b!134026))

(declare-fun m!158777 () Bool)

(assert (=> d!40953 m!158777))

(declare-fun m!158779 () Bool)

(assert (=> d!40953 m!158779))

(declare-fun m!158781 () Bool)

(assert (=> b!134026 m!158781))

(assert (=> b!133300 d!40953))

(declare-fun d!40955 () Bool)

(declare-fun e!87317 () Bool)

(assert (=> d!40955 e!87317))

(declare-fun res!64486 () Bool)

(assert (=> d!40955 (=> (not res!64486) (not e!87317))))

(declare-fun lt!70187 () ListLongMap!1707)

(assert (=> d!40955 (= res!64486 (contains!896 lt!70187 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun lt!70189 () List!1735)

(assert (=> d!40955 (= lt!70187 (ListLongMap!1708 lt!70189))))

(declare-fun lt!70188 () Unit!4150)

(declare-fun lt!70186 () Unit!4150)

(assert (=> d!40955 (= lt!70188 lt!70186)))

(assert (=> d!40955 (= (getValueByKey!171 lt!70189 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40955 (= lt!70186 (lemmaContainsTupThenGetReturnValue!88 lt!70189 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40955 (= lt!70189 (insertStrictlySorted!90 (toList!869 call!14785) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40955 (= (+!170 call!14785 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) lt!70187)))

(declare-fun b!134027 () Bool)

(declare-fun res!64485 () Bool)

(assert (=> b!134027 (=> (not res!64485) (not e!87317))))

(assert (=> b!134027 (= res!64485 (= (getValueByKey!171 (toList!869 lt!70187) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134028 () Bool)

(assert (=> b!134028 (= e!87317 (contains!898 (toList!869 lt!70187) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(assert (= (and d!40955 res!64486) b!134027))

(assert (= (and b!134027 res!64485) b!134028))

(declare-fun m!158783 () Bool)

(assert (=> d!40955 m!158783))

(declare-fun m!158785 () Bool)

(assert (=> d!40955 m!158785))

(declare-fun m!158787 () Bool)

(assert (=> d!40955 m!158787))

(declare-fun m!158789 () Bool)

(assert (=> d!40955 m!158789))

(declare-fun m!158791 () Bool)

(assert (=> b!134027 m!158791))

(declare-fun m!158793 () Bool)

(assert (=> b!134028 m!158793))

(assert (=> b!133926 d!40955))

(assert (=> d!40887 d!40897))

(declare-fun d!40957 () Bool)

(assert (=> d!40957 (= (arrayCountValidKeys!0 lt!69605 (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(assert (=> d!40957 true))

(declare-fun _$85!12 () Unit!4150)

(assert (=> d!40957 (= (choose!2 lt!69605 (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))) _$85!12)))

(declare-fun bs!5557 () Bool)

(assert (= bs!5557 d!40957))

(assert (=> bs!5557 m!156953))

(assert (=> d!40887 d!40957))

(declare-fun d!40959 () Bool)

(declare-fun e!87318 () Bool)

(assert (=> d!40959 e!87318))

(declare-fun res!64488 () Bool)

(assert (=> d!40959 (=> (not res!64488) (not e!87318))))

(declare-fun lt!70191 () ListLongMap!1707)

(assert (=> d!40959 (= res!64488 (contains!896 lt!70191 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun lt!70193 () List!1735)

(assert (=> d!40959 (= lt!70191 (ListLongMap!1708 lt!70193))))

(declare-fun lt!70192 () Unit!4150)

(declare-fun lt!70190 () Unit!4150)

(assert (=> d!40959 (= lt!70192 lt!70190)))

(assert (=> d!40959 (= (getValueByKey!171 lt!70193 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40959 (= lt!70190 (lemmaContainsTupThenGetReturnValue!88 lt!70193 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40959 (= lt!70193 (insertStrictlySorted!90 (toList!869 call!14735) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40959 (= (+!170 call!14735 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) lt!70191)))

(declare-fun b!134029 () Bool)

(declare-fun res!64487 () Bool)

(assert (=> b!134029 (=> (not res!64487) (not e!87318))))

(assert (=> b!134029 (= res!64487 (= (getValueByKey!171 (toList!869 lt!70191) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134030 () Bool)

(assert (=> b!134030 (= e!87318 (contains!898 (toList!869 lt!70191) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(assert (= (and d!40959 res!64488) b!134029))

(assert (= (and b!134029 res!64487) b!134030))

(declare-fun m!158795 () Bool)

(assert (=> d!40959 m!158795))

(declare-fun m!158797 () Bool)

(assert (=> d!40959 m!158797))

(declare-fun m!158799 () Bool)

(assert (=> d!40959 m!158799))

(declare-fun m!158801 () Bool)

(assert (=> d!40959 m!158801))

(declare-fun m!158803 () Bool)

(assert (=> b!134029 m!158803))

(declare-fun m!158805 () Bool)

(assert (=> b!134030 m!158805))

(assert (=> b!133440 d!40959))

(declare-fun d!40961 () Bool)

(assert (=> d!40961 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69510) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69510) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5558 () Bool)

(assert (= bs!5558 d!40961))

(assert (=> bs!5558 m!157183))

(declare-fun m!158807 () Bool)

(assert (=> bs!5558 m!158807))

(assert (=> b!133233 d!40961))

(declare-fun b!134031 () Bool)

(declare-fun e!87319 () Option!177)

(assert (=> b!134031 (= e!87319 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69510)))))))

(declare-fun b!134034 () Bool)

(declare-fun e!87320 () Option!177)

(assert (=> b!134034 (= e!87320 None!175)))

(declare-fun b!134033 () Bool)

(assert (=> b!134033 (= e!87320 (getValueByKey!171 (t!6198 (toList!869 lt!69510)) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134032 () Bool)

(assert (=> b!134032 (= e!87319 e!87320)))

(declare-fun c!24891 () Bool)

(assert (=> b!134032 (= c!24891 (and ((_ is Cons!1731) (toList!869 lt!69510)) (not (= (_1!1314 (h!2336 (toList!869 lt!69510))) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun d!40963 () Bool)

(declare-fun c!24890 () Bool)

(assert (=> d!40963 (= c!24890 (and ((_ is Cons!1731) (toList!869 lt!69510)) (= (_1!1314 (h!2336 (toList!869 lt!69510))) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!40963 (= (getValueByKey!171 (toList!869 lt!69510) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) e!87319)))

(assert (= (and d!40963 c!24890) b!134031))

(assert (= (and d!40963 (not c!24890)) b!134032))

(assert (= (and b!134032 c!24891) b!134033))

(assert (= (and b!134032 (not c!24891)) b!134034))

(assert (=> b!134033 m!156533))

(declare-fun m!158809 () Bool)

(assert (=> b!134033 m!158809))

(assert (=> b!133233 d!40963))

(declare-fun d!40965 () Bool)

(assert (=> d!40965 (= (validKeyInArray!0 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) lt!69610)) (and (not (= (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) lt!69610) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) lt!69610) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133889 d!40965))

(declare-fun b!134035 () Bool)

(declare-fun e!87321 () Option!177)

(assert (=> b!134035 (= e!87321 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69675)))))))

(declare-fun b!134038 () Bool)

(declare-fun e!87322 () Option!177)

(assert (=> b!134038 (= e!87322 None!175)))

(declare-fun b!134037 () Bool)

(assert (=> b!134037 (= e!87322 (getValueByKey!171 (t!6198 (toList!869 lt!69675)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134036 () Bool)

(assert (=> b!134036 (= e!87321 e!87322)))

(declare-fun c!24893 () Bool)

(assert (=> b!134036 (= c!24893 (and ((_ is Cons!1731) (toList!869 lt!69675)) (not (= (_1!1314 (h!2336 (toList!869 lt!69675))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!24892 () Bool)

(declare-fun d!40967 () Bool)

(assert (=> d!40967 (= c!24892 (and ((_ is Cons!1731) (toList!869 lt!69675)) (= (_1!1314 (h!2336 (toList!869 lt!69675))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40967 (= (getValueByKey!171 (toList!869 lt!69675) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87321)))

(assert (= (and d!40967 c!24892) b!134035))

(assert (= (and d!40967 (not c!24892)) b!134036))

(assert (= (and b!134036 c!24893) b!134037))

(assert (= (and b!134036 (not c!24893)) b!134038))

(declare-fun m!158811 () Bool)

(assert (=> b!134037 m!158811))

(assert (=> b!133221 d!40967))

(declare-fun b!134039 () Bool)

(declare-fun e!87324 () (_ BitVec 32))

(assert (=> b!134039 (= e!87324 #b00000000000000000000000000000000)))

(declare-fun d!40969 () Bool)

(declare-fun lt!70194 () (_ BitVec 32))

(assert (=> d!40969 (and (bvsge lt!70194 #b00000000000000000000000000000000) (bvsle lt!70194 (bvsub (size!2529 lt!69605) (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001))))))

(assert (=> d!40969 (= lt!70194 e!87324)))

(declare-fun c!24895 () Bool)

(assert (=> d!40969 (= c!24895 (bvsge (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001) (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001)))))

(assert (=> d!40969 (and (bvsle (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001) (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001)) (bvsge (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001) (size!2529 lt!69605)))))

(assert (=> d!40969 (= (arrayCountValidKeys!0 lt!69605 (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001) (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001)) lt!70194)))

(declare-fun b!134040 () Bool)

(declare-fun e!87323 () (_ BitVec 32))

(declare-fun call!14800 () (_ BitVec 32))

(assert (=> b!134040 (= e!87323 call!14800)))

(declare-fun b!134041 () Bool)

(assert (=> b!134041 (= e!87323 (bvadd #b00000000000000000000000000000001 call!14800))))

(declare-fun bm!14797 () Bool)

(assert (=> bm!14797 (= call!14800 (arrayCountValidKeys!0 lt!69605 (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001)))))

(declare-fun b!134042 () Bool)

(assert (=> b!134042 (= e!87324 e!87323)))

(declare-fun c!24894 () Bool)

(assert (=> b!134042 (= c!24894 (validKeyInArray!0 (select (arr!2260 lt!69605) (bvadd (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) #b00000000000000000000000000000001))))))

(assert (= (and d!40969 c!24895) b!134039))

(assert (= (and d!40969 (not c!24895)) b!134042))

(assert (= (and b!134042 c!24894) b!134041))

(assert (= (and b!134042 (not c!24894)) b!134040))

(assert (= (or b!134041 b!134040) bm!14797))

(declare-fun m!158813 () Bool)

(assert (=> bm!14797 m!158813))

(declare-fun m!158815 () Bool)

(assert (=> b!134042 m!158815))

(assert (=> b!134042 m!158815))

(declare-fun m!158817 () Bool)

(assert (=> b!134042 m!158817))

(assert (=> bm!14794 d!40969))

(declare-fun b!134043 () Bool)

(declare-fun e!87325 () Option!177)

(assert (=> b!134043 (= e!87325 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69911)))))))

(declare-fun b!134046 () Bool)

(declare-fun e!87326 () Option!177)

(assert (=> b!134046 (= e!87326 None!175)))

(declare-fun b!134045 () Bool)

(assert (=> b!134045 (= e!87326 (getValueByKey!171 (t!6198 (toList!869 lt!69911)) (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))))

(declare-fun b!134044 () Bool)

(assert (=> b!134044 (= e!87325 e!87326)))

(declare-fun c!24897 () Bool)

(assert (=> b!134044 (= c!24897 (and ((_ is Cons!1731) (toList!869 lt!69911)) (not (= (_1!1314 (h!2336 (toList!869 lt!69911))) (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))))))

(declare-fun d!40971 () Bool)

(declare-fun c!24896 () Bool)

(assert (=> d!40971 (= c!24896 (and ((_ is Cons!1731) (toList!869 lt!69911)) (= (_1!1314 (h!2336 (toList!869 lt!69911))) (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))))))

(assert (=> d!40971 (= (getValueByKey!171 (toList!869 lt!69911) (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) e!87325)))

(assert (= (and d!40971 c!24896) b!134043))

(assert (= (and d!40971 (not c!24896)) b!134044))

(assert (= (and b!134044 c!24897) b!134045))

(assert (= (and b!134044 (not c!24897)) b!134046))

(declare-fun m!158819 () Bool)

(assert (=> b!134045 m!158819))

(assert (=> b!133502 d!40971))

(declare-fun d!40973 () Bool)

(declare-fun e!87327 () Bool)

(assert (=> d!40973 e!87327))

(declare-fun res!64489 () Bool)

(assert (=> d!40973 (=> res!64489 e!87327)))

(declare-fun lt!70195 () Bool)

(assert (=> d!40973 (= res!64489 (not lt!70195))))

(declare-fun lt!70197 () Bool)

(assert (=> d!40973 (= lt!70195 lt!70197)))

(declare-fun lt!70196 () Unit!4150)

(declare-fun e!87328 () Unit!4150)

(assert (=> d!40973 (= lt!70196 e!87328)))

(declare-fun c!24898 () Bool)

(assert (=> d!40973 (= c!24898 lt!70197)))

(assert (=> d!40973 (= lt!70197 (containsKey!175 (toList!869 lt!70026) (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!40973 (= (contains!896 lt!70026 (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) lt!70195)))

(declare-fun b!134047 () Bool)

(declare-fun lt!70198 () Unit!4150)

(assert (=> b!134047 (= e!87328 lt!70198)))

(assert (=> b!134047 (= lt!70198 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!70026) (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> b!134047 (isDefined!125 (getValueByKey!171 (toList!869 lt!70026) (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134048 () Bool)

(declare-fun Unit!4208 () Unit!4150)

(assert (=> b!134048 (= e!87328 Unit!4208)))

(declare-fun b!134049 () Bool)

(assert (=> b!134049 (= e!87327 (isDefined!125 (getValueByKey!171 (toList!869 lt!70026) (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (= (and d!40973 c!24898) b!134047))

(assert (= (and d!40973 (not c!24898)) b!134048))

(assert (= (and d!40973 (not res!64489)) b!134049))

(declare-fun m!158821 () Bool)

(assert (=> d!40973 m!158821))

(declare-fun m!158823 () Bool)

(assert (=> b!134047 m!158823))

(assert (=> b!134047 m!158285))

(assert (=> b!134047 m!158285))

(declare-fun m!158825 () Bool)

(assert (=> b!134047 m!158825))

(assert (=> b!134049 m!158285))

(assert (=> b!134049 m!158285))

(assert (=> b!134049 m!158825))

(assert (=> d!40779 d!40973))

(declare-fun b!134050 () Bool)

(declare-fun e!87329 () Option!177)

(assert (=> b!134050 (= e!87329 (Some!176 (_2!1314 (h!2336 lt!70028))))))

(declare-fun b!134053 () Bool)

(declare-fun e!87330 () Option!177)

(assert (=> b!134053 (= e!87330 None!175)))

(declare-fun b!134052 () Bool)

(assert (=> b!134052 (= e!87330 (getValueByKey!171 (t!6198 lt!70028) (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134051 () Bool)

(assert (=> b!134051 (= e!87329 e!87330)))

(declare-fun c!24900 () Bool)

(assert (=> b!134051 (= c!24900 (and ((_ is Cons!1731) lt!70028) (not (= (_1!1314 (h!2336 lt!70028)) (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))))

(declare-fun c!24899 () Bool)

(declare-fun d!40975 () Bool)

(assert (=> d!40975 (= c!24899 (and ((_ is Cons!1731) lt!70028) (= (_1!1314 (h!2336 lt!70028)) (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (=> d!40975 (= (getValueByKey!171 lt!70028 (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) e!87329)))

(assert (= (and d!40975 c!24899) b!134050))

(assert (= (and d!40975 (not c!24899)) b!134051))

(assert (= (and b!134051 c!24900) b!134052))

(assert (= (and b!134051 (not c!24900)) b!134053))

(declare-fun m!158827 () Bool)

(assert (=> b!134052 m!158827))

(assert (=> d!40779 d!40975))

(declare-fun d!40977 () Bool)

(assert (=> d!40977 (= (getValueByKey!171 lt!70028 (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun lt!70199 () Unit!4150)

(assert (=> d!40977 (= lt!70199 (choose!834 lt!70028 (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun e!87331 () Bool)

(assert (=> d!40977 e!87331))

(declare-fun res!64490 () Bool)

(assert (=> d!40977 (=> (not res!64490) (not e!87331))))

(assert (=> d!40977 (= res!64490 (isStrictlySorted!317 lt!70028))))

(assert (=> d!40977 (= (lemmaContainsTupThenGetReturnValue!88 lt!70028 (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) lt!70199)))

(declare-fun b!134054 () Bool)

(declare-fun res!64491 () Bool)

(assert (=> b!134054 (=> (not res!64491) (not e!87331))))

(assert (=> b!134054 (= res!64491 (containsKey!175 lt!70028 (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134055 () Bool)

(assert (=> b!134055 (= e!87331 (contains!898 lt!70028 (tuple2!2609 (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (= (and d!40977 res!64490) b!134054))

(assert (= (and b!134054 res!64491) b!134055))

(assert (=> d!40977 m!158279))

(declare-fun m!158829 () Bool)

(assert (=> d!40977 m!158829))

(declare-fun m!158831 () Bool)

(assert (=> d!40977 m!158831))

(declare-fun m!158833 () Bool)

(assert (=> b!134054 m!158833))

(declare-fun m!158835 () Bool)

(assert (=> b!134055 m!158835))

(assert (=> d!40779 d!40977))

(declare-fun bm!14798 () Bool)

(declare-fun call!14801 () List!1735)

(declare-fun call!14802 () List!1735)

(assert (=> bm!14798 (= call!14801 call!14802)))

(declare-fun b!134056 () Bool)

(declare-fun lt!70200 () List!1735)

(declare-fun e!87334 () Bool)

(assert (=> b!134056 (= e!87334 (contains!898 lt!70200 (tuple2!2609 (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!134057 () Bool)

(declare-fun e!87336 () List!1735)

(assert (=> b!134057 (= e!87336 call!14802)))

(declare-fun b!134058 () Bool)

(declare-fun res!64492 () Bool)

(assert (=> b!134058 (=> (not res!64492) (not e!87334))))

(assert (=> b!134058 (= res!64492 (containsKey!175 lt!70200 (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun e!87332 () List!1735)

(declare-fun b!134059 () Bool)

(assert (=> b!134059 (= e!87332 (insertStrictlySorted!90 (t!6198 (toList!869 (ite c!24611 call!14681 (ite c!24614 call!14677 call!14682)))) (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134060 () Bool)

(declare-fun e!87333 () List!1735)

(assert (=> b!134060 (= e!87333 call!14801)))

(declare-fun bm!14799 () Bool)

(declare-fun call!14803 () List!1735)

(assert (=> bm!14799 (= call!14802 call!14803)))

(declare-fun c!24903 () Bool)

(declare-fun b!134062 () Bool)

(declare-fun c!24901 () Bool)

(assert (=> b!134062 (= e!87332 (ite c!24903 (t!6198 (toList!869 (ite c!24611 call!14681 (ite c!24614 call!14677 call!14682)))) (ite c!24901 (Cons!1731 (h!2336 (toList!869 (ite c!24611 call!14681 (ite c!24614 call!14677 call!14682)))) (t!6198 (toList!869 (ite c!24611 call!14681 (ite c!24614 call!14677 call!14682))))) Nil!1732)))))

(declare-fun b!134063 () Bool)

(declare-fun e!87335 () List!1735)

(assert (=> b!134063 (= e!87335 call!14803)))

(declare-fun b!134064 () Bool)

(assert (=> b!134064 (= c!24901 (and ((_ is Cons!1731) (toList!869 (ite c!24611 call!14681 (ite c!24614 call!14677 call!14682)))) (bvsgt (_1!1314 (h!2336 (toList!869 (ite c!24611 call!14681 (ite c!24614 call!14677 call!14682))))) (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (=> b!134064 (= e!87336 e!87333)))

(declare-fun d!40979 () Bool)

(assert (=> d!40979 e!87334))

(declare-fun res!64493 () Bool)

(assert (=> d!40979 (=> (not res!64493) (not e!87334))))

(assert (=> d!40979 (= res!64493 (isStrictlySorted!317 lt!70200))))

(assert (=> d!40979 (= lt!70200 e!87335)))

(declare-fun c!24902 () Bool)

(assert (=> d!40979 (= c!24902 (and ((_ is Cons!1731) (toList!869 (ite c!24611 call!14681 (ite c!24614 call!14677 call!14682)))) (bvslt (_1!1314 (h!2336 (toList!869 (ite c!24611 call!14681 (ite c!24614 call!14677 call!14682))))) (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (=> d!40979 (isStrictlySorted!317 (toList!869 (ite c!24611 call!14681 (ite c!24614 call!14677 call!14682))))))

(assert (=> d!40979 (= (insertStrictlySorted!90 (toList!869 (ite c!24611 call!14681 (ite c!24614 call!14677 call!14682))) (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) lt!70200)))

(declare-fun b!134061 () Bool)

(assert (=> b!134061 (= e!87335 e!87336)))

(assert (=> b!134061 (= c!24903 (and ((_ is Cons!1731) (toList!869 (ite c!24611 call!14681 (ite c!24614 call!14677 call!14682)))) (= (_1!1314 (h!2336 (toList!869 (ite c!24611 call!14681 (ite c!24614 call!14677 call!14682))))) (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!134065 () Bool)

(assert (=> b!134065 (= e!87333 call!14801)))

(declare-fun bm!14800 () Bool)

(assert (=> bm!14800 (= call!14803 ($colon$colon!91 e!87332 (ite c!24902 (h!2336 (toList!869 (ite c!24611 call!14681 (ite c!24614 call!14677 call!14682)))) (tuple2!2609 (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))))

(declare-fun c!24904 () Bool)

(assert (=> bm!14800 (= c!24904 c!24902)))

(assert (= (and d!40979 c!24902) b!134063))

(assert (= (and d!40979 (not c!24902)) b!134061))

(assert (= (and b!134061 c!24903) b!134057))

(assert (= (and b!134061 (not c!24903)) b!134064))

(assert (= (and b!134064 c!24901) b!134065))

(assert (= (and b!134064 (not c!24901)) b!134060))

(assert (= (or b!134065 b!134060) bm!14798))

(assert (= (or b!134057 bm!14798) bm!14799))

(assert (= (or b!134063 bm!14799) bm!14800))

(assert (= (and bm!14800 c!24904) b!134059))

(assert (= (and bm!14800 (not c!24904)) b!134062))

(assert (= (and d!40979 res!64493) b!134058))

(assert (= (and b!134058 res!64492) b!134056))

(declare-fun m!158837 () Bool)

(assert (=> b!134058 m!158837))

(declare-fun m!158839 () Bool)

(assert (=> b!134056 m!158839))

(declare-fun m!158841 () Bool)

(assert (=> d!40979 m!158841))

(declare-fun m!158843 () Bool)

(assert (=> d!40979 m!158843))

(declare-fun m!158845 () Bool)

(assert (=> bm!14800 m!158845))

(declare-fun m!158847 () Bool)

(assert (=> b!134059 m!158847))

(assert (=> d!40779 d!40979))

(declare-fun d!40981 () Bool)

(assert (=> d!40981 (= (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133576 d!40981))

(declare-fun b!134066 () Bool)

(declare-fun e!87337 () Option!177)

(assert (=> b!134066 (= e!87337 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 lt!69442))))))))

(declare-fun b!134069 () Bool)

(declare-fun e!87338 () Option!177)

(assert (=> b!134069 (= e!87338 None!175)))

(declare-fun b!134068 () Bool)

(assert (=> b!134068 (= e!87338 (getValueByKey!171 (t!6198 (t!6198 (toList!869 lt!69442))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!134067 () Bool)

(assert (=> b!134067 (= e!87337 e!87338)))

(declare-fun c!24906 () Bool)

(assert (=> b!134067 (= c!24906 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69442))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69442)))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun d!40983 () Bool)

(declare-fun c!24905 () Bool)

(assert (=> d!40983 (= c!24905 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69442))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69442)))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!40983 (= (getValueByKey!171 (t!6198 (toList!869 lt!69442)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!87337)))

(assert (= (and d!40983 c!24905) b!134066))

(assert (= (and d!40983 (not c!24905)) b!134067))

(assert (= (and b!134067 c!24906) b!134068))

(assert (= (and b!134067 (not c!24906)) b!134069))

(declare-fun m!158849 () Bool)

(assert (=> b!134068 m!158849))

(assert (=> b!133769 d!40983))

(declare-fun d!40985 () Bool)

(assert (=> d!40985 (= (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (and (not (= (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133971 d!40985))

(declare-fun d!40987 () Bool)

(assert (=> d!40987 (= (apply!116 (+!170 lt!70144 (tuple2!2609 lt!70141 (minValue!2720 newMap!16))) lt!70143) (apply!116 lt!70144 lt!70143))))

(declare-fun lt!70201 () Unit!4150)

(assert (=> d!40987 (= lt!70201 (choose!828 lt!70144 lt!70141 (minValue!2720 newMap!16) lt!70143))))

(declare-fun e!87339 () Bool)

(assert (=> d!40987 e!87339))

(declare-fun res!64494 () Bool)

(assert (=> d!40987 (=> (not res!64494) (not e!87339))))

(assert (=> d!40987 (= res!64494 (contains!896 lt!70144 lt!70143))))

(assert (=> d!40987 (= (addApplyDifferent!92 lt!70144 lt!70141 (minValue!2720 newMap!16) lt!70143) lt!70201)))

(declare-fun b!134070 () Bool)

(assert (=> b!134070 (= e!87339 (not (= lt!70143 lt!70141)))))

(assert (= (and d!40987 res!64494) b!134070))

(assert (=> d!40987 m!158655))

(assert (=> d!40987 m!158639))

(assert (=> d!40987 m!158641))

(declare-fun m!158851 () Bool)

(assert (=> d!40987 m!158851))

(declare-fun m!158853 () Bool)

(assert (=> d!40987 m!158853))

(assert (=> d!40987 m!158639))

(assert (=> b!133949 d!40987))

(declare-fun d!40989 () Bool)

(assert (=> d!40989 (= (apply!116 lt!70144 lt!70143) (get!1491 (getValueByKey!171 (toList!869 lt!70144) lt!70143)))))

(declare-fun bs!5559 () Bool)

(assert (= bs!5559 d!40989))

(declare-fun m!158855 () Bool)

(assert (=> bs!5559 m!158855))

(assert (=> bs!5559 m!158855))

(declare-fun m!158857 () Bool)

(assert (=> bs!5559 m!158857))

(assert (=> b!133949 d!40989))

(declare-fun d!40991 () Bool)

(assert (=> d!40991 (= (apply!116 (+!170 lt!70145 (tuple2!2609 lt!70147 (minValue!2720 newMap!16))) lt!70133) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!70145 (tuple2!2609 lt!70147 (minValue!2720 newMap!16)))) lt!70133)))))

(declare-fun bs!5560 () Bool)

(assert (= bs!5560 d!40991))

(declare-fun m!158859 () Bool)

(assert (=> bs!5560 m!158859))

(assert (=> bs!5560 m!158859))

(declare-fun m!158861 () Bool)

(assert (=> bs!5560 m!158861))

(assert (=> b!133949 d!40991))

(declare-fun b!134071 () Bool)

(declare-fun lt!70202 () Unit!4150)

(declare-fun lt!70206 () Unit!4150)

(assert (=> b!134071 (= lt!70202 lt!70206)))

(declare-fun lt!70207 () (_ BitVec 64))

(declare-fun lt!70205 () V!3483)

(declare-fun lt!70204 () (_ BitVec 64))

(declare-fun lt!70203 () ListLongMap!1707)

(assert (=> b!134071 (not (contains!896 (+!170 lt!70203 (tuple2!2609 lt!70207 lt!70205)) lt!70204))))

(assert (=> b!134071 (= lt!70206 (addStillNotContains!63 lt!70203 lt!70207 lt!70205 lt!70204))))

(assert (=> b!134071 (= lt!70204 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134071 (= lt!70205 (get!1488 (select (arr!2261 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134071 (= lt!70207 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun call!14804 () ListLongMap!1707)

(assert (=> b!134071 (= lt!70203 call!14804)))

(declare-fun e!87346 () ListLongMap!1707)

(assert (=> b!134071 (= e!87346 (+!170 call!14804 (tuple2!2609 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!87343 () Bool)

(declare-fun b!134072 () Bool)

(declare-fun lt!70208 () ListLongMap!1707)

(assert (=> b!134072 (= e!87343 (= lt!70208 (getCurrentListMapNoExtraKeys!137 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!134073 () Bool)

(assert (=> b!134073 (= e!87343 (isEmpty!414 lt!70208))))

(declare-fun b!134074 () Bool)

(declare-fun e!87344 () ListLongMap!1707)

(assert (=> b!134074 (= e!87344 (ListLongMap!1708 Nil!1732))))

(declare-fun b!134075 () Bool)

(declare-fun e!87341 () Bool)

(declare-fun e!87342 () Bool)

(assert (=> b!134075 (= e!87341 e!87342)))

(declare-fun c!24910 () Bool)

(declare-fun e!87345 () Bool)

(assert (=> b!134075 (= c!24910 e!87345)))

(declare-fun res!64498 () Bool)

(assert (=> b!134075 (=> (not res!64498) (not e!87345))))

(assert (=> b!134075 (= res!64498 (bvslt #b00000000000000000000000000000000 (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))))

(declare-fun b!134076 () Bool)

(assert (=> b!134076 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))))

(assert (=> b!134076 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))))))

(declare-fun e!87340 () Bool)

(assert (=> b!134076 (= e!87340 (= (apply!116 lt!70208 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134078 () Bool)

(assert (=> b!134078 (= e!87342 e!87340)))

(assert (=> b!134078 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))))

(declare-fun res!64497 () Bool)

(assert (=> b!134078 (= res!64497 (contains!896 lt!70208 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!134078 (=> (not res!64497) (not e!87340))))

(declare-fun b!134079 () Bool)

(assert (=> b!134079 (= e!87344 e!87346)))

(declare-fun c!24907 () Bool)

(assert (=> b!134079 (= c!24907 (validKeyInArray!0 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!134080 () Bool)

(declare-fun res!64496 () Bool)

(assert (=> b!134080 (=> (not res!64496) (not e!87341))))

(assert (=> b!134080 (= res!64496 (not (contains!896 lt!70208 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134081 () Bool)

(assert (=> b!134081 (= e!87342 e!87343)))

(declare-fun c!24909 () Bool)

(assert (=> b!134081 (= c!24909 (bvslt #b00000000000000000000000000000000 (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))))

(declare-fun bm!14801 () Bool)

(assert (=> bm!14801 (= call!14804 (getCurrentListMapNoExtraKeys!137 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!134082 () Bool)

(assert (=> b!134082 (= e!87345 (validKeyInArray!0 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!134082 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134077 () Bool)

(assert (=> b!134077 (= e!87346 call!14804)))

(declare-fun d!40993 () Bool)

(assert (=> d!40993 e!87341))

(declare-fun res!64495 () Bool)

(assert (=> d!40993 (=> (not res!64495) (not e!87341))))

(assert (=> d!40993 (= res!64495 (not (contains!896 lt!70208 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40993 (= lt!70208 e!87344)))

(declare-fun c!24908 () Bool)

(assert (=> d!40993 (= c!24908 (bvsge #b00000000000000000000000000000000 (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))))

(assert (=> d!40993 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40993 (= (getCurrentListMapNoExtraKeys!137 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!70208)))

(assert (= (and d!40993 c!24908) b!134074))

(assert (= (and d!40993 (not c!24908)) b!134079))

(assert (= (and b!134079 c!24907) b!134071))

(assert (= (and b!134079 (not c!24907)) b!134077))

(assert (= (or b!134071 b!134077) bm!14801))

(assert (= (and d!40993 res!64495) b!134080))

(assert (= (and b!134080 res!64496) b!134075))

(assert (= (and b!134075 res!64498) b!134082))

(assert (= (and b!134075 c!24910) b!134078))

(assert (= (and b!134075 (not c!24910)) b!134081))

(assert (= (and b!134078 res!64497) b!134076))

(assert (= (and b!134081 c!24909) b!134072))

(assert (= (and b!134081 (not c!24909)) b!134073))

(declare-fun b_lambda!6015 () Bool)

(assert (=> (not b_lambda!6015) (not b!134071)))

(assert (=> b!134071 t!6205))

(declare-fun b_and!8325 () Bool)

(assert (= b_and!8321 (and (=> t!6205 result!4009) b_and!8325)))

(assert (=> b!134071 t!6207))

(declare-fun b_and!8327 () Bool)

(assert (= b_and!8323 (and (=> t!6207 result!4011) b_and!8327)))

(declare-fun b_lambda!6017 () Bool)

(assert (=> (not b_lambda!6017) (not b!134076)))

(assert (=> b!134076 t!6205))

(declare-fun b_and!8329 () Bool)

(assert (= b_and!8325 (and (=> t!6205 result!4009) b_and!8329)))

(assert (=> b!134076 t!6207))

(declare-fun b_and!8331 () Bool)

(assert (= b_and!8327 (and (=> t!6207 result!4011) b_and!8331)))

(declare-fun m!158863 () Bool)

(assert (=> d!40993 m!158863))

(assert (=> d!40993 m!156571))

(declare-fun m!158865 () Bool)

(assert (=> b!134072 m!158865))

(declare-fun m!158867 () Bool)

(assert (=> b!134071 m!158867))

(declare-fun m!158869 () Bool)

(assert (=> b!134071 m!158869))

(assert (=> b!134071 m!158867))

(assert (=> b!134071 m!156647))

(assert (=> b!134071 m!158625))

(assert (=> b!134071 m!156647))

(assert (=> b!134071 m!158627))

(declare-fun m!158871 () Bool)

(assert (=> b!134071 m!158871))

(assert (=> b!134071 m!158625))

(assert (=> b!134071 m!158517))

(declare-fun m!158873 () Bool)

(assert (=> b!134071 m!158873))

(assert (=> b!134076 m!158517))

(declare-fun m!158875 () Bool)

(assert (=> b!134076 m!158875))

(assert (=> b!134076 m!156647))

(assert (=> b!134076 m!158517))

(assert (=> b!134076 m!158625))

(assert (=> b!134076 m!156647))

(assert (=> b!134076 m!158627))

(assert (=> b!134076 m!158625))

(assert (=> bm!14801 m!158865))

(assert (=> b!134079 m!158517))

(assert (=> b!134079 m!158517))

(assert (=> b!134079 m!158519))

(declare-fun m!158877 () Bool)

(assert (=> b!134080 m!158877))

(assert (=> b!134078 m!158517))

(assert (=> b!134078 m!158517))

(declare-fun m!158879 () Bool)

(assert (=> b!134078 m!158879))

(assert (=> b!134082 m!158517))

(assert (=> b!134082 m!158517))

(assert (=> b!134082 m!158519))

(declare-fun m!158881 () Bool)

(assert (=> b!134073 m!158881))

(assert (=> b!133949 d!40993))

(declare-fun d!40995 () Bool)

(assert (=> d!40995 (contains!896 (+!170 lt!70132 (tuple2!2609 lt!70135 (zeroValue!2720 newMap!16))) lt!70142)))

(declare-fun lt!70209 () Unit!4150)

(assert (=> d!40995 (= lt!70209 (choose!829 lt!70132 lt!70135 (zeroValue!2720 newMap!16) lt!70142))))

(assert (=> d!40995 (contains!896 lt!70132 lt!70142)))

(assert (=> d!40995 (= (addStillContains!92 lt!70132 lt!70135 (zeroValue!2720 newMap!16) lt!70142) lt!70209)))

(declare-fun bs!5561 () Bool)

(assert (= bs!5561 d!40995))

(assert (=> bs!5561 m!158645))

(assert (=> bs!5561 m!158645))

(assert (=> bs!5561 m!158661))

(declare-fun m!158883 () Bool)

(assert (=> bs!5561 m!158883))

(declare-fun m!158885 () Bool)

(assert (=> bs!5561 m!158885))

(assert (=> b!133949 d!40995))

(declare-fun d!40997 () Bool)

(assert (=> d!40997 (= (apply!116 lt!70145 lt!70133) (get!1491 (getValueByKey!171 (toList!869 lt!70145) lt!70133)))))

(declare-fun bs!5562 () Bool)

(assert (= bs!5562 d!40997))

(declare-fun m!158887 () Bool)

(assert (=> bs!5562 m!158887))

(assert (=> bs!5562 m!158887))

(declare-fun m!158889 () Bool)

(assert (=> bs!5562 m!158889))

(assert (=> b!133949 d!40997))

(declare-fun d!40999 () Bool)

(declare-fun e!87347 () Bool)

(assert (=> d!40999 e!87347))

(declare-fun res!64499 () Bool)

(assert (=> d!40999 (=> res!64499 e!87347)))

(declare-fun lt!70210 () Bool)

(assert (=> d!40999 (= res!64499 (not lt!70210))))

(declare-fun lt!70212 () Bool)

(assert (=> d!40999 (= lt!70210 lt!70212)))

(declare-fun lt!70211 () Unit!4150)

(declare-fun e!87348 () Unit!4150)

(assert (=> d!40999 (= lt!70211 e!87348)))

(declare-fun c!24911 () Bool)

(assert (=> d!40999 (= c!24911 lt!70212)))

(assert (=> d!40999 (= lt!70212 (containsKey!175 (toList!869 (+!170 lt!70132 (tuple2!2609 lt!70135 (zeroValue!2720 newMap!16)))) lt!70142))))

(assert (=> d!40999 (= (contains!896 (+!170 lt!70132 (tuple2!2609 lt!70135 (zeroValue!2720 newMap!16))) lt!70142) lt!70210)))

(declare-fun b!134083 () Bool)

(declare-fun lt!70213 () Unit!4150)

(assert (=> b!134083 (= e!87348 lt!70213)))

(assert (=> b!134083 (= lt!70213 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!70132 (tuple2!2609 lt!70135 (zeroValue!2720 newMap!16)))) lt!70142))))

(assert (=> b!134083 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!70132 (tuple2!2609 lt!70135 (zeroValue!2720 newMap!16)))) lt!70142))))

(declare-fun b!134084 () Bool)

(declare-fun Unit!4209 () Unit!4150)

(assert (=> b!134084 (= e!87348 Unit!4209)))

(declare-fun b!134085 () Bool)

(assert (=> b!134085 (= e!87347 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!70132 (tuple2!2609 lt!70135 (zeroValue!2720 newMap!16)))) lt!70142)))))

(assert (= (and d!40999 c!24911) b!134083))

(assert (= (and d!40999 (not c!24911)) b!134084))

(assert (= (and d!40999 (not res!64499)) b!134085))

(declare-fun m!158891 () Bool)

(assert (=> d!40999 m!158891))

(declare-fun m!158893 () Bool)

(assert (=> b!134083 m!158893))

(declare-fun m!158895 () Bool)

(assert (=> b!134083 m!158895))

(assert (=> b!134083 m!158895))

(declare-fun m!158897 () Bool)

(assert (=> b!134083 m!158897))

(assert (=> b!134085 m!158895))

(assert (=> b!134085 m!158895))

(assert (=> b!134085 m!158897))

(assert (=> b!133949 d!40999))

(declare-fun d!41001 () Bool)

(assert (=> d!41001 (= (apply!116 (+!170 lt!70145 (tuple2!2609 lt!70147 (minValue!2720 newMap!16))) lt!70133) (apply!116 lt!70145 lt!70133))))

(declare-fun lt!70214 () Unit!4150)

(assert (=> d!41001 (= lt!70214 (choose!828 lt!70145 lt!70147 (minValue!2720 newMap!16) lt!70133))))

(declare-fun e!87349 () Bool)

(assert (=> d!41001 e!87349))

(declare-fun res!64500 () Bool)

(assert (=> d!41001 (=> (not res!64500) (not e!87349))))

(assert (=> d!41001 (= res!64500 (contains!896 lt!70145 lt!70133))))

(assert (=> d!41001 (= (addApplyDifferent!92 lt!70145 lt!70147 (minValue!2720 newMap!16) lt!70133) lt!70214)))

(declare-fun b!134086 () Bool)

(assert (=> b!134086 (= e!87349 (not (= lt!70133 lt!70147)))))

(assert (= (and d!41001 res!64500) b!134086))

(assert (=> d!41001 m!158663))

(assert (=> d!41001 m!158649))

(assert (=> d!41001 m!158651))

(declare-fun m!158899 () Bool)

(assert (=> d!41001 m!158899))

(declare-fun m!158901 () Bool)

(assert (=> d!41001 m!158901))

(assert (=> d!41001 m!158649))

(assert (=> b!133949 d!41001))

(declare-fun d!41003 () Bool)

(declare-fun e!87350 () Bool)

(assert (=> d!41003 e!87350))

(declare-fun res!64502 () Bool)

(assert (=> d!41003 (=> (not res!64502) (not e!87350))))

(declare-fun lt!70216 () ListLongMap!1707)

(assert (=> d!41003 (= res!64502 (contains!896 lt!70216 (_1!1314 (tuple2!2609 lt!70135 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70218 () List!1735)

(assert (=> d!41003 (= lt!70216 (ListLongMap!1708 lt!70218))))

(declare-fun lt!70217 () Unit!4150)

(declare-fun lt!70215 () Unit!4150)

(assert (=> d!41003 (= lt!70217 lt!70215)))

(assert (=> d!41003 (= (getValueByKey!171 lt!70218 (_1!1314 (tuple2!2609 lt!70135 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!70135 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41003 (= lt!70215 (lemmaContainsTupThenGetReturnValue!88 lt!70218 (_1!1314 (tuple2!2609 lt!70135 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!70135 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41003 (= lt!70218 (insertStrictlySorted!90 (toList!869 lt!70132) (_1!1314 (tuple2!2609 lt!70135 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!70135 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41003 (= (+!170 lt!70132 (tuple2!2609 lt!70135 (zeroValue!2720 newMap!16))) lt!70216)))

(declare-fun b!134087 () Bool)

(declare-fun res!64501 () Bool)

(assert (=> b!134087 (=> (not res!64501) (not e!87350))))

(assert (=> b!134087 (= res!64501 (= (getValueByKey!171 (toList!869 lt!70216) (_1!1314 (tuple2!2609 lt!70135 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!70135 (zeroValue!2720 newMap!16))))))))

(declare-fun b!134088 () Bool)

(assert (=> b!134088 (= e!87350 (contains!898 (toList!869 lt!70216) (tuple2!2609 lt!70135 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41003 res!64502) b!134087))

(assert (= (and b!134087 res!64501) b!134088))

(declare-fun m!158903 () Bool)

(assert (=> d!41003 m!158903))

(declare-fun m!158905 () Bool)

(assert (=> d!41003 m!158905))

(declare-fun m!158907 () Bool)

(assert (=> d!41003 m!158907))

(declare-fun m!158909 () Bool)

(assert (=> d!41003 m!158909))

(declare-fun m!158911 () Bool)

(assert (=> b!134087 m!158911))

(declare-fun m!158913 () Bool)

(assert (=> b!134088 m!158913))

(assert (=> b!133949 d!41003))

(declare-fun d!41005 () Bool)

(declare-fun e!87351 () Bool)

(assert (=> d!41005 e!87351))

(declare-fun res!64504 () Bool)

(assert (=> d!41005 (=> (not res!64504) (not e!87351))))

(declare-fun lt!70220 () ListLongMap!1707)

(assert (=> d!41005 (= res!64504 (contains!896 lt!70220 (_1!1314 (tuple2!2609 lt!70151 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70222 () List!1735)

(assert (=> d!41005 (= lt!70220 (ListLongMap!1708 lt!70222))))

(declare-fun lt!70221 () Unit!4150)

(declare-fun lt!70219 () Unit!4150)

(assert (=> d!41005 (= lt!70221 lt!70219)))

(assert (=> d!41005 (= (getValueByKey!171 lt!70222 (_1!1314 (tuple2!2609 lt!70151 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!70151 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41005 (= lt!70219 (lemmaContainsTupThenGetReturnValue!88 lt!70222 (_1!1314 (tuple2!2609 lt!70151 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!70151 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41005 (= lt!70222 (insertStrictlySorted!90 (toList!869 lt!70140) (_1!1314 (tuple2!2609 lt!70151 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!70151 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41005 (= (+!170 lt!70140 (tuple2!2609 lt!70151 (zeroValue!2720 newMap!16))) lt!70220)))

(declare-fun b!134089 () Bool)

(declare-fun res!64503 () Bool)

(assert (=> b!134089 (=> (not res!64503) (not e!87351))))

(assert (=> b!134089 (= res!64503 (= (getValueByKey!171 (toList!869 lt!70220) (_1!1314 (tuple2!2609 lt!70151 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!70151 (zeroValue!2720 newMap!16))))))))

(declare-fun b!134090 () Bool)

(assert (=> b!134090 (= e!87351 (contains!898 (toList!869 lt!70220) (tuple2!2609 lt!70151 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41005 res!64504) b!134089))

(assert (= (and b!134089 res!64503) b!134090))

(declare-fun m!158915 () Bool)

(assert (=> d!41005 m!158915))

(declare-fun m!158917 () Bool)

(assert (=> d!41005 m!158917))

(declare-fun m!158919 () Bool)

(assert (=> d!41005 m!158919))

(declare-fun m!158921 () Bool)

(assert (=> d!41005 m!158921))

(declare-fun m!158923 () Bool)

(assert (=> b!134089 m!158923))

(declare-fun m!158925 () Bool)

(assert (=> b!134090 m!158925))

(assert (=> b!133949 d!41005))

(declare-fun d!41007 () Bool)

(declare-fun e!87352 () Bool)

(assert (=> d!41007 e!87352))

(declare-fun res!64506 () Bool)

(assert (=> d!41007 (=> (not res!64506) (not e!87352))))

(declare-fun lt!70224 () ListLongMap!1707)

(assert (=> d!41007 (= res!64506 (contains!896 lt!70224 (_1!1314 (tuple2!2609 lt!70141 (minValue!2720 newMap!16)))))))

(declare-fun lt!70226 () List!1735)

(assert (=> d!41007 (= lt!70224 (ListLongMap!1708 lt!70226))))

(declare-fun lt!70225 () Unit!4150)

(declare-fun lt!70223 () Unit!4150)

(assert (=> d!41007 (= lt!70225 lt!70223)))

(assert (=> d!41007 (= (getValueByKey!171 lt!70226 (_1!1314 (tuple2!2609 lt!70141 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!70141 (minValue!2720 newMap!16)))))))

(assert (=> d!41007 (= lt!70223 (lemmaContainsTupThenGetReturnValue!88 lt!70226 (_1!1314 (tuple2!2609 lt!70141 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!70141 (minValue!2720 newMap!16)))))))

(assert (=> d!41007 (= lt!70226 (insertStrictlySorted!90 (toList!869 lt!70144) (_1!1314 (tuple2!2609 lt!70141 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!70141 (minValue!2720 newMap!16)))))))

(assert (=> d!41007 (= (+!170 lt!70144 (tuple2!2609 lt!70141 (minValue!2720 newMap!16))) lt!70224)))

(declare-fun b!134091 () Bool)

(declare-fun res!64505 () Bool)

(assert (=> b!134091 (=> (not res!64505) (not e!87352))))

(assert (=> b!134091 (= res!64505 (= (getValueByKey!171 (toList!869 lt!70224) (_1!1314 (tuple2!2609 lt!70141 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!70141 (minValue!2720 newMap!16))))))))

(declare-fun b!134092 () Bool)

(assert (=> b!134092 (= e!87352 (contains!898 (toList!869 lt!70224) (tuple2!2609 lt!70141 (minValue!2720 newMap!16))))))

(assert (= (and d!41007 res!64506) b!134091))

(assert (= (and b!134091 res!64505) b!134092))

(declare-fun m!158927 () Bool)

(assert (=> d!41007 m!158927))

(declare-fun m!158929 () Bool)

(assert (=> d!41007 m!158929))

(declare-fun m!158931 () Bool)

(assert (=> d!41007 m!158931))

(declare-fun m!158933 () Bool)

(assert (=> d!41007 m!158933))

(declare-fun m!158935 () Bool)

(assert (=> b!134091 m!158935))

(declare-fun m!158937 () Bool)

(assert (=> b!134092 m!158937))

(assert (=> b!133949 d!41007))

(declare-fun d!41009 () Bool)

(assert (=> d!41009 (= (apply!116 (+!170 lt!70140 (tuple2!2609 lt!70151 (zeroValue!2720 newMap!16))) lt!70138) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!70140 (tuple2!2609 lt!70151 (zeroValue!2720 newMap!16)))) lt!70138)))))

(declare-fun bs!5563 () Bool)

(assert (= bs!5563 d!41009))

(declare-fun m!158939 () Bool)

(assert (=> bs!5563 m!158939))

(assert (=> bs!5563 m!158939))

(declare-fun m!158941 () Bool)

(assert (=> bs!5563 m!158941))

(assert (=> b!133949 d!41009))

(declare-fun d!41011 () Bool)

(assert (=> d!41011 (= (apply!116 lt!70140 lt!70138) (get!1491 (getValueByKey!171 (toList!869 lt!70140) lt!70138)))))

(declare-fun bs!5564 () Bool)

(assert (= bs!5564 d!41011))

(declare-fun m!158943 () Bool)

(assert (=> bs!5564 m!158943))

(assert (=> bs!5564 m!158943))

(declare-fun m!158945 () Bool)

(assert (=> bs!5564 m!158945))

(assert (=> b!133949 d!41011))

(declare-fun d!41013 () Bool)

(assert (=> d!41013 (= (apply!116 (+!170 lt!70140 (tuple2!2609 lt!70151 (zeroValue!2720 newMap!16))) lt!70138) (apply!116 lt!70140 lt!70138))))

(declare-fun lt!70227 () Unit!4150)

(assert (=> d!41013 (= lt!70227 (choose!828 lt!70140 lt!70151 (zeroValue!2720 newMap!16) lt!70138))))

(declare-fun e!87353 () Bool)

(assert (=> d!41013 e!87353))

(declare-fun res!64507 () Bool)

(assert (=> d!41013 (=> (not res!64507) (not e!87353))))

(assert (=> d!41013 (= res!64507 (contains!896 lt!70140 lt!70138))))

(assert (=> d!41013 (= (addApplyDifferent!92 lt!70140 lt!70151 (zeroValue!2720 newMap!16) lt!70138) lt!70227)))

(declare-fun b!134093 () Bool)

(assert (=> b!134093 (= e!87353 (not (= lt!70138 lt!70151)))))

(assert (= (and d!41013 res!64507) b!134093))

(assert (=> d!41013 m!158665))

(assert (=> d!41013 m!158635))

(assert (=> d!41013 m!158653))

(declare-fun m!158947 () Bool)

(assert (=> d!41013 m!158947))

(declare-fun m!158949 () Bool)

(assert (=> d!41013 m!158949))

(assert (=> d!41013 m!158635))

(assert (=> b!133949 d!41013))

(declare-fun d!41015 () Bool)

(declare-fun e!87354 () Bool)

(assert (=> d!41015 e!87354))

(declare-fun res!64509 () Bool)

(assert (=> d!41015 (=> (not res!64509) (not e!87354))))

(declare-fun lt!70229 () ListLongMap!1707)

(assert (=> d!41015 (= res!64509 (contains!896 lt!70229 (_1!1314 (tuple2!2609 lt!70147 (minValue!2720 newMap!16)))))))

(declare-fun lt!70231 () List!1735)

(assert (=> d!41015 (= lt!70229 (ListLongMap!1708 lt!70231))))

(declare-fun lt!70230 () Unit!4150)

(declare-fun lt!70228 () Unit!4150)

(assert (=> d!41015 (= lt!70230 lt!70228)))

(assert (=> d!41015 (= (getValueByKey!171 lt!70231 (_1!1314 (tuple2!2609 lt!70147 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!70147 (minValue!2720 newMap!16)))))))

(assert (=> d!41015 (= lt!70228 (lemmaContainsTupThenGetReturnValue!88 lt!70231 (_1!1314 (tuple2!2609 lt!70147 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!70147 (minValue!2720 newMap!16)))))))

(assert (=> d!41015 (= lt!70231 (insertStrictlySorted!90 (toList!869 lt!70145) (_1!1314 (tuple2!2609 lt!70147 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!70147 (minValue!2720 newMap!16)))))))

(assert (=> d!41015 (= (+!170 lt!70145 (tuple2!2609 lt!70147 (minValue!2720 newMap!16))) lt!70229)))

(declare-fun b!134094 () Bool)

(declare-fun res!64508 () Bool)

(assert (=> b!134094 (=> (not res!64508) (not e!87354))))

(assert (=> b!134094 (= res!64508 (= (getValueByKey!171 (toList!869 lt!70229) (_1!1314 (tuple2!2609 lt!70147 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!70147 (minValue!2720 newMap!16))))))))

(declare-fun b!134095 () Bool)

(assert (=> b!134095 (= e!87354 (contains!898 (toList!869 lt!70229) (tuple2!2609 lt!70147 (minValue!2720 newMap!16))))))

(assert (= (and d!41015 res!64509) b!134094))

(assert (= (and b!134094 res!64508) b!134095))

(declare-fun m!158951 () Bool)

(assert (=> d!41015 m!158951))

(declare-fun m!158953 () Bool)

(assert (=> d!41015 m!158953))

(declare-fun m!158955 () Bool)

(assert (=> d!41015 m!158955))

(declare-fun m!158957 () Bool)

(assert (=> d!41015 m!158957))

(declare-fun m!158959 () Bool)

(assert (=> b!134094 m!158959))

(declare-fun m!158961 () Bool)

(assert (=> b!134095 m!158961))

(assert (=> b!133949 d!41015))

(declare-fun d!41017 () Bool)

(assert (=> d!41017 (= (apply!116 (+!170 lt!70144 (tuple2!2609 lt!70141 (minValue!2720 newMap!16))) lt!70143) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!70144 (tuple2!2609 lt!70141 (minValue!2720 newMap!16)))) lt!70143)))))

(declare-fun bs!5565 () Bool)

(assert (= bs!5565 d!41017))

(declare-fun m!158963 () Bool)

(assert (=> bs!5565 m!158963))

(assert (=> bs!5565 m!158963))

(declare-fun m!158965 () Bool)

(assert (=> bs!5565 m!158965))

(assert (=> b!133949 d!41017))

(declare-fun b!134096 () Bool)

(declare-fun lt!70232 () Unit!4150)

(declare-fun lt!70236 () Unit!4150)

(assert (=> b!134096 (= lt!70232 lt!70236)))

(declare-fun lt!70235 () V!3483)

(declare-fun lt!70234 () (_ BitVec 64))

(declare-fun lt!70233 () ListLongMap!1707)

(declare-fun lt!70237 () (_ BitVec 64))

(assert (=> b!134096 (not (contains!896 (+!170 lt!70233 (tuple2!2609 lt!70237 lt!70235)) lt!70234))))

(assert (=> b!134096 (= lt!70236 (addStillNotContains!63 lt!70233 lt!70237 lt!70235 lt!70234))))

(assert (=> b!134096 (= lt!70234 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134096 (= lt!70235 (get!1488 (select (arr!2261 (_values!2848 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134096 (= lt!70237 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun call!14805 () ListLongMap!1707)

(assert (=> b!134096 (= lt!70233 call!14805)))

(declare-fun e!87361 () ListLongMap!1707)

(assert (=> b!134096 (= e!87361 (+!170 call!14805 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134097 () Bool)

(declare-fun e!87358 () Bool)

(declare-fun lt!70238 () ListLongMap!1707)

(assert (=> b!134097 (= e!87358 (= lt!70238 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!134098 () Bool)

(assert (=> b!134098 (= e!87358 (isEmpty!414 lt!70238))))

(declare-fun b!134099 () Bool)

(declare-fun e!87359 () ListLongMap!1707)

(assert (=> b!134099 (= e!87359 (ListLongMap!1708 Nil!1732))))

(declare-fun b!134100 () Bool)

(declare-fun e!87356 () Bool)

(declare-fun e!87357 () Bool)

(assert (=> b!134100 (= e!87356 e!87357)))

(declare-fun c!24915 () Bool)

(declare-fun e!87360 () Bool)

(assert (=> b!134100 (= c!24915 e!87360)))

(declare-fun res!64513 () Bool)

(assert (=> b!134100 (=> (not res!64513) (not e!87360))))

(assert (=> b!134100 (= res!64513 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!134101 () Bool)

(assert (=> b!134101 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> b!134101 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_values!2848 newMap!16))))))

(declare-fun e!87355 () Bool)

(assert (=> b!134101 (= e!87355 (= (apply!116 lt!70238 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134103 () Bool)

(assert (=> b!134103 (= e!87357 e!87355)))

(assert (=> b!134103 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun res!64512 () Bool)

(assert (=> b!134103 (= res!64512 (contains!896 lt!70238 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134103 (=> (not res!64512) (not e!87355))))

(declare-fun b!134104 () Bool)

(assert (=> b!134104 (= e!87359 e!87361)))

(declare-fun c!24912 () Bool)

(assert (=> b!134104 (= c!24912 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!134105 () Bool)

(declare-fun res!64511 () Bool)

(assert (=> b!134105 (=> (not res!64511) (not e!87356))))

(assert (=> b!134105 (= res!64511 (not (contains!896 lt!70238 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134106 () Bool)

(assert (=> b!134106 (= e!87357 e!87358)))

(declare-fun c!24914 () Bool)

(assert (=> b!134106 (= c!24914 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun bm!14802 () Bool)

(assert (=> bm!14802 (= call!14805 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!134107 () Bool)

(assert (=> b!134107 (= e!87360 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134107 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!134102 () Bool)

(assert (=> b!134102 (= e!87361 call!14805)))

(declare-fun d!41019 () Bool)

(assert (=> d!41019 e!87356))

(declare-fun res!64510 () Bool)

(assert (=> d!41019 (=> (not res!64510) (not e!87356))))

(assert (=> d!41019 (= res!64510 (not (contains!896 lt!70238 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41019 (= lt!70238 e!87359)))

(declare-fun c!24913 () Bool)

(assert (=> d!41019 (= c!24913 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!41019 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41019 (= (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)) lt!70238)))

(assert (= (and d!41019 c!24913) b!134099))

(assert (= (and d!41019 (not c!24913)) b!134104))

(assert (= (and b!134104 c!24912) b!134096))

(assert (= (and b!134104 (not c!24912)) b!134102))

(assert (= (or b!134096 b!134102) bm!14802))

(assert (= (and d!41019 res!64510) b!134105))

(assert (= (and b!134105 res!64511) b!134100))

(assert (= (and b!134100 res!64513) b!134107))

(assert (= (and b!134100 c!24915) b!134103))

(assert (= (and b!134100 (not c!24915)) b!134106))

(assert (= (and b!134103 res!64512) b!134101))

(assert (= (and b!134106 c!24914) b!134097))

(assert (= (and b!134106 (not c!24914)) b!134098))

(declare-fun b_lambda!6019 () Bool)

(assert (=> (not b_lambda!6019) (not b!134096)))

(assert (=> b!134096 t!6205))

(declare-fun b_and!8333 () Bool)

(assert (= b_and!8329 (and (=> t!6205 result!4009) b_and!8333)))

(assert (=> b!134096 t!6207))

(declare-fun b_and!8335 () Bool)

(assert (= b_and!8331 (and (=> t!6207 result!4011) b_and!8335)))

(declare-fun b_lambda!6021 () Bool)

(assert (=> (not b_lambda!6021) (not b!134101)))

(assert (=> b!134101 t!6205))

(declare-fun b_and!8337 () Bool)

(assert (= b_and!8333 (and (=> t!6205 result!4009) b_and!8337)))

(assert (=> b!134101 t!6207))

(declare-fun b_and!8339 () Bool)

(assert (= b_and!8335 (and (=> t!6207 result!4011) b_and!8339)))

(declare-fun m!158967 () Bool)

(assert (=> d!41019 m!158967))

(assert (=> d!41019 m!156571))

(declare-fun m!158969 () Bool)

(assert (=> b!134097 m!158969))

(declare-fun m!158971 () Bool)

(assert (=> b!134096 m!158971))

(declare-fun m!158973 () Bool)

(assert (=> b!134096 m!158973))

(assert (=> b!134096 m!158971))

(assert (=> b!134096 m!156647))

(declare-fun m!158975 () Bool)

(assert (=> b!134096 m!158975))

(assert (=> b!134096 m!156647))

(declare-fun m!158977 () Bool)

(assert (=> b!134096 m!158977))

(declare-fun m!158979 () Bool)

(assert (=> b!134096 m!158979))

(assert (=> b!134096 m!158975))

(assert (=> b!134096 m!157187))

(declare-fun m!158981 () Bool)

(assert (=> b!134096 m!158981))

(assert (=> b!134101 m!157187))

(declare-fun m!158983 () Bool)

(assert (=> b!134101 m!158983))

(assert (=> b!134101 m!156647))

(assert (=> b!134101 m!157187))

(assert (=> b!134101 m!158975))

(assert (=> b!134101 m!156647))

(assert (=> b!134101 m!158977))

(assert (=> b!134101 m!158975))

(assert (=> bm!14802 m!158969))

(assert (=> b!134104 m!157187))

(assert (=> b!134104 m!157187))

(assert (=> b!134104 m!157195))

(declare-fun m!158985 () Bool)

(assert (=> b!134105 m!158985))

(assert (=> b!134103 m!157187))

(assert (=> b!134103 m!157187))

(declare-fun m!158987 () Bool)

(assert (=> b!134103 m!158987))

(assert (=> b!134107 m!157187))

(assert (=> b!134107 m!157187))

(assert (=> b!134107 m!157195))

(declare-fun m!158989 () Bool)

(assert (=> b!134098 m!158989))

(assert (=> bm!14729 d!41019))

(assert (=> b!133491 d!40473))

(declare-fun d!41021 () Bool)

(assert (=> d!41021 (= (get!1491 (getValueByKey!171 (toList!869 lt!69519) lt!69507)) (v!3201 (getValueByKey!171 (toList!869 lt!69519) lt!69507)))))

(assert (=> d!40807 d!41021))

(declare-fun b!134108 () Bool)

(declare-fun e!87362 () Option!177)

(assert (=> b!134108 (= e!87362 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69519)))))))

(declare-fun b!134111 () Bool)

(declare-fun e!87363 () Option!177)

(assert (=> b!134111 (= e!87363 None!175)))

(declare-fun b!134110 () Bool)

(assert (=> b!134110 (= e!87363 (getValueByKey!171 (t!6198 (toList!869 lt!69519)) lt!69507))))

(declare-fun b!134109 () Bool)

(assert (=> b!134109 (= e!87362 e!87363)))

(declare-fun c!24917 () Bool)

(assert (=> b!134109 (= c!24917 (and ((_ is Cons!1731) (toList!869 lt!69519)) (not (= (_1!1314 (h!2336 (toList!869 lt!69519))) lt!69507))))))

(declare-fun d!41023 () Bool)

(declare-fun c!24916 () Bool)

(assert (=> d!41023 (= c!24916 (and ((_ is Cons!1731) (toList!869 lt!69519)) (= (_1!1314 (h!2336 (toList!869 lt!69519))) lt!69507)))))

(assert (=> d!41023 (= (getValueByKey!171 (toList!869 lt!69519) lt!69507) e!87362)))

(assert (= (and d!41023 c!24916) b!134108))

(assert (= (and d!41023 (not c!24916)) b!134109))

(assert (= (and b!134109 c!24917) b!134110))

(assert (= (and b!134109 (not c!24917)) b!134111))

(declare-fun m!158991 () Bool)

(assert (=> b!134110 m!158991))

(assert (=> d!40807 d!41023))

(declare-fun d!41025 () Bool)

(declare-fun res!64514 () Bool)

(declare-fun e!87364 () Bool)

(assert (=> d!41025 (=> res!64514 e!87364)))

(assert (=> d!41025 (= res!64514 (and ((_ is Cons!1731) (toList!869 lt!69225)) (= (_1!1314 (h!2336 (toList!869 lt!69225))) lt!69223)))))

(assert (=> d!41025 (= (containsKey!175 (toList!869 lt!69225) lt!69223) e!87364)))

(declare-fun b!134112 () Bool)

(declare-fun e!87365 () Bool)

(assert (=> b!134112 (= e!87364 e!87365)))

(declare-fun res!64515 () Bool)

(assert (=> b!134112 (=> (not res!64515) (not e!87365))))

(assert (=> b!134112 (= res!64515 (and (or (not ((_ is Cons!1731) (toList!869 lt!69225))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69225))) lt!69223)) ((_ is Cons!1731) (toList!869 lt!69225)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69225))) lt!69223)))))

(declare-fun b!134113 () Bool)

(assert (=> b!134113 (= e!87365 (containsKey!175 (t!6198 (toList!869 lt!69225)) lt!69223))))

(assert (= (and d!41025 (not res!64514)) b!134112))

(assert (= (and b!134112 res!64515) b!134113))

(declare-fun m!158993 () Bool)

(assert (=> b!134113 m!158993))

(assert (=> d!40857 d!41025))

(assert (=> b!133825 d!40925))

(declare-fun d!41027 () Bool)

(assert (=> d!41027 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69217) lt!69227)) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69217) lt!69227))))))

(declare-fun bs!5566 () Bool)

(assert (= bs!5566 d!41027))

(assert (=> bs!5566 m!158065))

(declare-fun m!158995 () Bool)

(assert (=> bs!5566 m!158995))

(assert (=> b!133636 d!41027))

(declare-fun b!134114 () Bool)

(declare-fun e!87366 () Option!177)

(assert (=> b!134114 (= e!87366 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69217)))))))

(declare-fun b!134117 () Bool)

(declare-fun e!87367 () Option!177)

(assert (=> b!134117 (= e!87367 None!175)))

(declare-fun b!134116 () Bool)

(assert (=> b!134116 (= e!87367 (getValueByKey!171 (t!6198 (toList!869 lt!69217)) lt!69227))))

(declare-fun b!134115 () Bool)

(assert (=> b!134115 (= e!87366 e!87367)))

(declare-fun c!24919 () Bool)

(assert (=> b!134115 (= c!24919 (and ((_ is Cons!1731) (toList!869 lt!69217)) (not (= (_1!1314 (h!2336 (toList!869 lt!69217))) lt!69227))))))

(declare-fun d!41029 () Bool)

(declare-fun c!24918 () Bool)

(assert (=> d!41029 (= c!24918 (and ((_ is Cons!1731) (toList!869 lt!69217)) (= (_1!1314 (h!2336 (toList!869 lt!69217))) lt!69227)))))

(assert (=> d!41029 (= (getValueByKey!171 (toList!869 lt!69217) lt!69227) e!87366)))

(assert (= (and d!41029 c!24918) b!134114))

(assert (= (and d!41029 (not c!24918)) b!134115))

(assert (= (and b!134115 c!24919) b!134116))

(assert (= (and b!134115 (not c!24919)) b!134117))

(declare-fun m!158997 () Bool)

(assert (=> b!134116 m!158997))

(assert (=> b!133636 d!41029))

(assert (=> d!40799 d!40801))

(declare-fun d!41031 () Bool)

(assert (=> d!41031 (= (apply!116 (+!170 lt!69514 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!69512) (apply!116 lt!69514 lt!69512))))

(assert (=> d!41031 true))

(declare-fun _$34!977 () Unit!4150)

(assert (=> d!41031 (= (choose!828 lt!69514 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) lt!69512) _$34!977)))

(declare-fun bs!5567 () Bool)

(assert (= bs!5567 d!41031))

(assert (=> bs!5567 m!156907))

(assert (=> bs!5567 m!156907))

(assert (=> bs!5567 m!156925))

(assert (=> bs!5567 m!156937))

(assert (=> d!40799 d!41031))

(assert (=> d!40799 d!40793))

(declare-fun d!41033 () Bool)

(declare-fun e!87368 () Bool)

(assert (=> d!41033 e!87368))

(declare-fun res!64516 () Bool)

(assert (=> d!41033 (=> res!64516 e!87368)))

(declare-fun lt!70239 () Bool)

(assert (=> d!41033 (= res!64516 (not lt!70239))))

(declare-fun lt!70241 () Bool)

(assert (=> d!41033 (= lt!70239 lt!70241)))

(declare-fun lt!70240 () Unit!4150)

(declare-fun e!87369 () Unit!4150)

(assert (=> d!41033 (= lt!70240 e!87369)))

(declare-fun c!24920 () Bool)

(assert (=> d!41033 (= c!24920 lt!70241)))

(assert (=> d!41033 (= lt!70241 (containsKey!175 (toList!869 lt!69514) lt!69512))))

(assert (=> d!41033 (= (contains!896 lt!69514 lt!69512) lt!70239)))

(declare-fun b!134118 () Bool)

(declare-fun lt!70242 () Unit!4150)

(assert (=> b!134118 (= e!87369 lt!70242)))

(assert (=> b!134118 (= lt!70242 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69514) lt!69512))))

(assert (=> b!134118 (isDefined!125 (getValueByKey!171 (toList!869 lt!69514) lt!69512))))

(declare-fun b!134119 () Bool)

(declare-fun Unit!4210 () Unit!4150)

(assert (=> b!134119 (= e!87369 Unit!4210)))

(declare-fun b!134120 () Bool)

(assert (=> b!134120 (= e!87368 (isDefined!125 (getValueByKey!171 (toList!869 lt!69514) lt!69512)))))

(assert (= (and d!41033 c!24920) b!134118))

(assert (= (and d!41033 (not c!24920)) b!134119))

(assert (= (and d!41033 (not res!64516)) b!134120))

(declare-fun m!158999 () Bool)

(assert (=> d!41033 m!158999))

(declare-fun m!159001 () Bool)

(assert (=> b!134118 m!159001))

(assert (=> b!134118 m!158359))

(assert (=> b!134118 m!158359))

(declare-fun m!159003 () Bool)

(assert (=> b!134118 m!159003))

(assert (=> b!134120 m!158359))

(assert (=> b!134120 m!158359))

(assert (=> b!134120 m!159003))

(assert (=> d!40799 d!41033))

(assert (=> d!40799 d!40809))

(declare-fun d!41035 () Bool)

(assert (=> d!41035 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69472) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69472) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun bs!5568 () Bool)

(assert (= bs!5568 d!41035))

(assert (=> bs!5568 m!156817))

(declare-fun m!159005 () Bool)

(assert (=> bs!5568 m!159005))

(assert (=> b!133592 d!41035))

(assert (=> b!133592 d!40667))

(assert (=> d!40743 d!40337))

(declare-fun b!134121 () Bool)

(declare-fun e!87371 () Bool)

(declare-fun call!14806 () Bool)

(assert (=> b!134121 (= e!87371 call!14806)))

(declare-fun b!134122 () Bool)

(declare-fun e!87372 () Bool)

(assert (=> b!134122 (= e!87371 e!87372)))

(declare-fun lt!70244 () (_ BitVec 64))

(assert (=> b!134122 (= lt!70244 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!70245 () Unit!4150)

(assert (=> b!134122 (= lt!70245 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) lt!70244 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!134122 (arrayContainsKey!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) lt!70244 #b00000000000000000000000000000000)))

(declare-fun lt!70243 () Unit!4150)

(assert (=> b!134122 (= lt!70243 lt!70245)))

(declare-fun res!64517 () Bool)

(assert (=> b!134122 (= res!64517 (= (seekEntryOrOpen!0 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (mask!7165 newMap!16)) (Found!285 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134122 (=> (not res!64517) (not e!87372))))

(declare-fun b!134123 () Bool)

(assert (=> b!134123 (= e!87372 call!14806)))

(declare-fun b!134124 () Bool)

(declare-fun e!87370 () Bool)

(assert (=> b!134124 (= e!87370 e!87371)))

(declare-fun c!24921 () Bool)

(assert (=> b!134124 (= c!24921 (validKeyInArray!0 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!14803 () Bool)

(assert (=> bm!14803 (= call!14806 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (mask!7165 newMap!16)))))

(declare-fun d!41037 () Bool)

(declare-fun res!64518 () Bool)

(assert (=> d!41037 (=> res!64518 e!87370)))

(assert (=> d!41037 (= res!64518 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))))

(assert (=> d!41037 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (mask!7165 newMap!16)) e!87370)))

(assert (= (and d!41037 (not res!64518)) b!134124))

(assert (= (and b!134124 c!24921) b!134122))

(assert (= (and b!134124 (not c!24921)) b!134121))

(assert (= (and b!134122 res!64517) b!134123))

(assert (= (or b!134123 b!134121) bm!14803))

(declare-fun m!159007 () Bool)

(assert (=> b!134122 m!159007))

(declare-fun m!159009 () Bool)

(assert (=> b!134122 m!159009))

(declare-fun m!159011 () Bool)

(assert (=> b!134122 m!159011))

(assert (=> b!134122 m!159007))

(declare-fun m!159013 () Bool)

(assert (=> b!134122 m!159013))

(assert (=> b!134124 m!159007))

(assert (=> b!134124 m!159007))

(declare-fun m!159015 () Bool)

(assert (=> b!134124 m!159015))

(declare-fun m!159017 () Bool)

(assert (=> bm!14803 m!159017))

(assert (=> bm!14778 d!41037))

(declare-fun b!134125 () Bool)

(declare-fun e!87373 () Option!177)

(assert (=> b!134125 (= e!87373 (Some!176 (_2!1314 (h!2336 (t!6198 lt!69465)))))))

(declare-fun b!134128 () Bool)

(declare-fun e!87374 () Option!177)

(assert (=> b!134128 (= e!87374 None!175)))

(declare-fun b!134127 () Bool)

(assert (=> b!134127 (= e!87374 (getValueByKey!171 (t!6198 (t!6198 lt!69465)) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!134126 () Bool)

(assert (=> b!134126 (= e!87373 e!87374)))

(declare-fun c!24923 () Bool)

(assert (=> b!134126 (= c!24923 (and ((_ is Cons!1731) (t!6198 lt!69465)) (not (= (_1!1314 (h!2336 (t!6198 lt!69465))) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun d!41039 () Bool)

(declare-fun c!24922 () Bool)

(assert (=> d!41039 (= c!24922 (and ((_ is Cons!1731) (t!6198 lt!69465)) (= (_1!1314 (h!2336 (t!6198 lt!69465))) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!41039 (= (getValueByKey!171 (t!6198 lt!69465) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!87373)))

(assert (= (and d!41039 c!24922) b!134125))

(assert (= (and d!41039 (not c!24922)) b!134126))

(assert (= (and b!134126 c!24923) b!134127))

(assert (= (and b!134126 (not c!24923)) b!134128))

(declare-fun m!159019 () Bool)

(assert (=> b!134127 m!159019))

(assert (=> b!133533 d!41039))

(assert (=> d!40509 d!40267))

(declare-fun d!41041 () Bool)

(assert (=> d!41041 (= (apply!116 (+!170 lt!69420 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))) lt!69418) (apply!116 lt!69420 lt!69418))))

(assert (=> d!41041 true))

(declare-fun _$34!978 () Unit!4150)

(assert (=> d!41041 (= (choose!828 lt!69420 lt!69431 (zeroValue!2720 newMap!16) lt!69418) _$34!978)))

(declare-fun bs!5569 () Bool)

(assert (= bs!5569 d!41041))

(assert (=> bs!5569 m!156657))

(assert (=> bs!5569 m!156657))

(assert (=> bs!5569 m!156675))

(assert (=> bs!5569 m!156687))

(assert (=> d!40527 d!41041))

(assert (=> d!40527 d!40529))

(declare-fun d!41043 () Bool)

(declare-fun e!87375 () Bool)

(assert (=> d!41043 e!87375))

(declare-fun res!64519 () Bool)

(assert (=> d!41043 (=> res!64519 e!87375)))

(declare-fun lt!70246 () Bool)

(assert (=> d!41043 (= res!64519 (not lt!70246))))

(declare-fun lt!70248 () Bool)

(assert (=> d!41043 (= lt!70246 lt!70248)))

(declare-fun lt!70247 () Unit!4150)

(declare-fun e!87376 () Unit!4150)

(assert (=> d!41043 (= lt!70247 e!87376)))

(declare-fun c!24924 () Bool)

(assert (=> d!41043 (= c!24924 lt!70248)))

(assert (=> d!41043 (= lt!70248 (containsKey!175 (toList!869 lt!69420) lt!69418))))

(assert (=> d!41043 (= (contains!896 lt!69420 lt!69418) lt!70246)))

(declare-fun b!134129 () Bool)

(declare-fun lt!70249 () Unit!4150)

(assert (=> b!134129 (= e!87376 lt!70249)))

(assert (=> b!134129 (= lt!70249 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69420) lt!69418))))

(assert (=> b!134129 (isDefined!125 (getValueByKey!171 (toList!869 lt!69420) lt!69418))))

(declare-fun b!134130 () Bool)

(declare-fun Unit!4211 () Unit!4150)

(assert (=> b!134130 (= e!87376 Unit!4211)))

(declare-fun b!134131 () Bool)

(assert (=> b!134131 (= e!87375 (isDefined!125 (getValueByKey!171 (toList!869 lt!69420) lt!69418)))))

(assert (= (and d!41043 c!24924) b!134129))

(assert (= (and d!41043 (not c!24924)) b!134130))

(assert (= (and d!41043 (not res!64519)) b!134131))

(declare-fun m!159021 () Bool)

(assert (=> d!41043 m!159021))

(declare-fun m!159023 () Bool)

(assert (=> b!134129 m!159023))

(assert (=> b!134129 m!157555))

(assert (=> b!134129 m!157555))

(declare-fun m!159025 () Bool)

(assert (=> b!134129 m!159025))

(assert (=> b!134131 m!157555))

(assert (=> b!134131 m!157555))

(assert (=> b!134131 m!159025))

(assert (=> d!40527 d!41043))

(assert (=> d!40527 d!40533))

(assert (=> d!40527 d!40535))

(declare-fun d!41045 () Bool)

(assert (=> d!41045 (= (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69519 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))) lt!69507)) (v!3201 (getValueByKey!171 (toList!869 (+!170 lt!69519 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))) lt!69507)))))

(assert (=> d!40803 d!41045))

(declare-fun e!87377 () Option!177)

(declare-fun b!134132 () Bool)

(assert (=> b!134132 (= e!87377 (Some!176 (_2!1314 (h!2336 (toList!869 (+!170 lt!69519 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))))))))))

(declare-fun b!134135 () Bool)

(declare-fun e!87378 () Option!177)

(assert (=> b!134135 (= e!87378 None!175)))

(declare-fun b!134134 () Bool)

(assert (=> b!134134 (= e!87378 (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69519 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))))) lt!69507))))

(declare-fun b!134133 () Bool)

(assert (=> b!134133 (= e!87377 e!87378)))

(declare-fun c!24926 () Bool)

(assert (=> b!134133 (= c!24926 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69519 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))))) (not (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69519 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))) lt!69507))))))

(declare-fun c!24925 () Bool)

(declare-fun d!41047 () Bool)

(assert (=> d!41047 (= c!24925 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69519 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69519 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))) lt!69507)))))

(assert (=> d!41047 (= (getValueByKey!171 (toList!869 (+!170 lt!69519 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))) lt!69507) e!87377)))

(assert (= (and d!41047 c!24925) b!134132))

(assert (= (and d!41047 (not c!24925)) b!134133))

(assert (= (and b!134133 c!24926) b!134134))

(assert (= (and b!134133 (not c!24926)) b!134135))

(declare-fun m!159027 () Bool)

(assert (=> b!134134 m!159027))

(assert (=> d!40803 d!41047))

(declare-fun d!41049 () Bool)

(assert (=> d!41049 (= (apply!116 lt!69737 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!69737) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5570 () Bool)

(assert (= bs!5570 d!41049))

(declare-fun m!159029 () Bool)

(assert (=> bs!5570 m!159029))

(assert (=> bs!5570 m!159029))

(declare-fun m!159031 () Bool)

(assert (=> bs!5570 m!159031))

(assert (=> b!133274 d!41049))

(declare-fun d!41051 () Bool)

(assert (=> d!41051 (= (apply!116 lt!69703 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!69703) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5571 () Bool)

(assert (= bs!5571 d!41051))

(declare-fun m!159033 () Bool)

(assert (=> bs!5571 m!159033))

(assert (=> bs!5571 m!159033))

(declare-fun m!159035 () Bool)

(assert (=> bs!5571 m!159035))

(assert (=> b!133247 d!41051))

(declare-fun d!41053 () Bool)

(assert (not d!41053))

(assert (=> b!133589 d!41053))

(declare-fun d!41055 () Bool)

(declare-fun e!87379 () Bool)

(assert (=> d!41055 e!87379))

(declare-fun res!64520 () Bool)

(assert (=> d!41055 (=> res!64520 e!87379)))

(declare-fun lt!70250 () Bool)

(assert (=> d!41055 (= res!64520 (not lt!70250))))

(declare-fun lt!70252 () Bool)

(assert (=> d!41055 (= lt!70250 lt!70252)))

(declare-fun lt!70251 () Unit!4150)

(declare-fun e!87380 () Unit!4150)

(assert (=> d!41055 (= lt!70251 e!87380)))

(declare-fun c!24927 () Bool)

(assert (=> d!41055 (= c!24927 lt!70252)))

(assert (=> d!41055 (= lt!70252 (containsKey!175 (toList!869 lt!70084) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!41055 (= (contains!896 lt!70084 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70250)))

(declare-fun b!134136 () Bool)

(declare-fun lt!70253 () Unit!4150)

(assert (=> b!134136 (= e!87380 lt!70253)))

(assert (=> b!134136 (= lt!70253 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!70084) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> b!134136 (isDefined!125 (getValueByKey!171 (toList!869 lt!70084) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134137 () Bool)

(declare-fun Unit!4212 () Unit!4150)

(assert (=> b!134137 (= e!87380 Unit!4212)))

(declare-fun b!134138 () Bool)

(assert (=> b!134138 (= e!87379 (isDefined!125 (getValueByKey!171 (toList!869 lt!70084) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (= (and d!41055 c!24927) b!134136))

(assert (= (and d!41055 (not c!24927)) b!134137))

(assert (= (and d!41055 (not res!64520)) b!134138))

(declare-fun m!159037 () Bool)

(assert (=> d!41055 m!159037))

(declare-fun m!159039 () Bool)

(assert (=> b!134136 m!159039))

(assert (=> b!134136 m!158505))

(assert (=> b!134136 m!158505))

(declare-fun m!159041 () Bool)

(assert (=> b!134136 m!159041))

(assert (=> b!134138 m!158505))

(assert (=> b!134138 m!158505))

(assert (=> b!134138 m!159041))

(assert (=> d!40863 d!41055))

(declare-fun b!134139 () Bool)

(declare-fun e!87381 () Option!177)

(assert (=> b!134139 (= e!87381 (Some!176 (_2!1314 (h!2336 lt!70086))))))

(declare-fun b!134142 () Bool)

(declare-fun e!87382 () Option!177)

(assert (=> b!134142 (= e!87382 None!175)))

(declare-fun b!134141 () Bool)

(assert (=> b!134141 (= e!87382 (getValueByKey!171 (t!6198 lt!70086) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134140 () Bool)

(assert (=> b!134140 (= e!87381 e!87382)))

(declare-fun c!24929 () Bool)

(assert (=> b!134140 (= c!24929 (and ((_ is Cons!1731) lt!70086) (not (= (_1!1314 (h!2336 lt!70086)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun d!41057 () Bool)

(declare-fun c!24928 () Bool)

(assert (=> d!41057 (= c!24928 (and ((_ is Cons!1731) lt!70086) (= (_1!1314 (h!2336 lt!70086)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!41057 (= (getValueByKey!171 lt!70086 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) e!87381)))

(assert (= (and d!41057 c!24928) b!134139))

(assert (= (and d!41057 (not c!24928)) b!134140))

(assert (= (and b!134140 c!24929) b!134141))

(assert (= (and b!134140 (not c!24929)) b!134142))

(declare-fun m!159043 () Bool)

(assert (=> b!134141 m!159043))

(assert (=> d!40863 d!41057))

(declare-fun d!41059 () Bool)

(assert (=> d!41059 (= (getValueByKey!171 lt!70086 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun lt!70254 () Unit!4150)

(assert (=> d!41059 (= lt!70254 (choose!834 lt!70086 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun e!87383 () Bool)

(assert (=> d!41059 e!87383))

(declare-fun res!64521 () Bool)

(assert (=> d!41059 (=> (not res!64521) (not e!87383))))

(assert (=> d!41059 (= res!64521 (isStrictlySorted!317 lt!70086))))

(assert (=> d!41059 (= (lemmaContainsTupThenGetReturnValue!88 lt!70086 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70254)))

(declare-fun b!134143 () Bool)

(declare-fun res!64522 () Bool)

(assert (=> b!134143 (=> (not res!64522) (not e!87383))))

(assert (=> b!134143 (= res!64522 (containsKey!175 lt!70086 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134144 () Bool)

(assert (=> b!134144 (= e!87383 (contains!898 lt!70086 (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (= (and d!41059 res!64521) b!134143))

(assert (= (and b!134143 res!64522) b!134144))

(assert (=> d!41059 m!158499))

(declare-fun m!159045 () Bool)

(assert (=> d!41059 m!159045))

(declare-fun m!159047 () Bool)

(assert (=> d!41059 m!159047))

(declare-fun m!159049 () Bool)

(assert (=> b!134143 m!159049))

(declare-fun m!159051 () Bool)

(assert (=> b!134144 m!159051))

(assert (=> d!40863 d!41059))

(declare-fun bm!14804 () Bool)

(declare-fun call!14807 () List!1735)

(declare-fun call!14808 () List!1735)

(assert (=> bm!14804 (= call!14807 call!14808)))

(declare-fun b!134145 () Bool)

(declare-fun e!87386 () Bool)

(declare-fun lt!70255 () List!1735)

(assert (=> b!134145 (= e!87386 (contains!898 lt!70255 (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134146 () Bool)

(declare-fun e!87388 () List!1735)

(assert (=> b!134146 (= e!87388 call!14808)))

(declare-fun b!134147 () Bool)

(declare-fun res!64523 () Bool)

(assert (=> b!134147 (=> (not res!64523) (not e!87386))))

(assert (=> b!134147 (= res!64523 (containsKey!175 lt!70255 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134148 () Bool)

(declare-fun e!87384 () List!1735)

(assert (=> b!134148 (= e!87384 (insertStrictlySorted!90 (t!6198 (toList!869 call!14665)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134149 () Bool)

(declare-fun e!87385 () List!1735)

(assert (=> b!134149 (= e!87385 call!14807)))

(declare-fun bm!14805 () Bool)

(declare-fun call!14809 () List!1735)

(assert (=> bm!14805 (= call!14808 call!14809)))

(declare-fun c!24930 () Bool)

(declare-fun b!134151 () Bool)

(declare-fun c!24932 () Bool)

(assert (=> b!134151 (= e!87384 (ite c!24932 (t!6198 (toList!869 call!14665)) (ite c!24930 (Cons!1731 (h!2336 (toList!869 call!14665)) (t!6198 (toList!869 call!14665))) Nil!1732)))))

(declare-fun b!134152 () Bool)

(declare-fun e!87387 () List!1735)

(assert (=> b!134152 (= e!87387 call!14809)))

(declare-fun b!134153 () Bool)

(assert (=> b!134153 (= c!24930 (and ((_ is Cons!1731) (toList!869 call!14665)) (bvsgt (_1!1314 (h!2336 (toList!869 call!14665))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> b!134153 (= e!87388 e!87385)))

(declare-fun d!41061 () Bool)

(assert (=> d!41061 e!87386))

(declare-fun res!64524 () Bool)

(assert (=> d!41061 (=> (not res!64524) (not e!87386))))

(assert (=> d!41061 (= res!64524 (isStrictlySorted!317 lt!70255))))

(assert (=> d!41061 (= lt!70255 e!87387)))

(declare-fun c!24931 () Bool)

(assert (=> d!41061 (= c!24931 (and ((_ is Cons!1731) (toList!869 call!14665)) (bvslt (_1!1314 (h!2336 (toList!869 call!14665))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!41061 (isStrictlySorted!317 (toList!869 call!14665))))

(assert (=> d!41061 (= (insertStrictlySorted!90 (toList!869 call!14665) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70255)))

(declare-fun b!134150 () Bool)

(assert (=> b!134150 (= e!87387 e!87388)))

(assert (=> b!134150 (= c!24932 (and ((_ is Cons!1731) (toList!869 call!14665)) (= (_1!1314 (h!2336 (toList!869 call!14665))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134154 () Bool)

(assert (=> b!134154 (= e!87385 call!14807)))

(declare-fun bm!14806 () Bool)

(assert (=> bm!14806 (= call!14809 ($colon$colon!91 e!87384 (ite c!24931 (h!2336 (toList!869 call!14665)) (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun c!24933 () Bool)

(assert (=> bm!14806 (= c!24933 c!24931)))

(assert (= (and d!41061 c!24931) b!134152))

(assert (= (and d!41061 (not c!24931)) b!134150))

(assert (= (and b!134150 c!24932) b!134146))

(assert (= (and b!134150 (not c!24932)) b!134153))

(assert (= (and b!134153 c!24930) b!134154))

(assert (= (and b!134153 (not c!24930)) b!134149))

(assert (= (or b!134154 b!134149) bm!14804))

(assert (= (or b!134146 bm!14804) bm!14805))

(assert (= (or b!134152 bm!14805) bm!14806))

(assert (= (and bm!14806 c!24933) b!134148))

(assert (= (and bm!14806 (not c!24933)) b!134151))

(assert (= (and d!41061 res!64524) b!134147))

(assert (= (and b!134147 res!64523) b!134145))

(declare-fun m!159053 () Bool)

(assert (=> b!134147 m!159053))

(declare-fun m!159055 () Bool)

(assert (=> b!134145 m!159055))

(declare-fun m!159057 () Bool)

(assert (=> d!41061 m!159057))

(declare-fun m!159059 () Bool)

(assert (=> d!41061 m!159059))

(declare-fun m!159061 () Bool)

(assert (=> bm!14806 m!159061))

(declare-fun m!159063 () Bool)

(assert (=> b!134148 m!159063))

(assert (=> d!40863 d!41061))

(assert (=> d!40937 d!40373))

(assert (=> d!40937 d!40365))

(assert (=> d!40937 d!40363))

(declare-fun d!41063 () Bool)

(assert (=> d!41063 (isDefined!125 (getValueByKey!171 (toList!869 lt!69463) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun lt!70256 () Unit!4150)

(assert (=> d!41063 (= lt!70256 (choose!831 (toList!869 lt!69463) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun e!87389 () Bool)

(assert (=> d!41063 e!87389))

(declare-fun res!64525 () Bool)

(assert (=> d!41063 (=> (not res!64525) (not e!87389))))

(assert (=> d!41063 (= res!64525 (isStrictlySorted!317 (toList!869 lt!69463)))))

(assert (=> d!41063 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69463) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!70256)))

(declare-fun b!134155 () Bool)

(assert (=> b!134155 (= e!87389 (containsKey!175 (toList!869 lt!69463) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!41063 res!64525) b!134155))

(assert (=> d!41063 m!156793))

(assert (=> d!41063 m!156793))

(assert (=> d!41063 m!157877))

(declare-fun m!159065 () Bool)

(assert (=> d!41063 m!159065))

(declare-fun m!159067 () Bool)

(assert (=> d!41063 m!159067))

(assert (=> b!134155 m!157873))

(assert (=> b!133528 d!41063))

(declare-fun d!41065 () Bool)

(assert (=> d!41065 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69463) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69463) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun bs!5572 () Bool)

(assert (= bs!5572 d!41065))

(assert (=> bs!5572 m!156793))

(declare-fun m!159069 () Bool)

(assert (=> bs!5572 m!159069))

(assert (=> b!133528 d!41065))

(assert (=> b!133528 d!40597))

(declare-fun d!41067 () Bool)

(declare-fun e!87390 () Bool)

(assert (=> d!41067 e!87390))

(declare-fun res!64527 () Bool)

(assert (=> d!41067 (=> (not res!64527) (not e!87390))))

(declare-fun lt!70258 () ListLongMap!1707)

(assert (=> d!41067 (= res!64527 (contains!896 lt!70258 (_1!1314 (ite (or c!24689 c!24692) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1315 lt!69327))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327)))))))))

(declare-fun lt!70260 () List!1735)

(assert (=> d!41067 (= lt!70258 (ListLongMap!1708 lt!70260))))

(declare-fun lt!70259 () Unit!4150)

(declare-fun lt!70257 () Unit!4150)

(assert (=> d!41067 (= lt!70259 lt!70257)))

(assert (=> d!41067 (= (getValueByKey!171 lt!70260 (_1!1314 (ite (or c!24689 c!24692) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1315 lt!69327))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327)))))) (Some!176 (_2!1314 (ite (or c!24689 c!24692) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1315 lt!69327))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327)))))))))

(assert (=> d!41067 (= lt!70257 (lemmaContainsTupThenGetReturnValue!88 lt!70260 (_1!1314 (ite (or c!24689 c!24692) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1315 lt!69327))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327))))) (_2!1314 (ite (or c!24689 c!24692) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1315 lt!69327))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327)))))))))

(assert (=> d!41067 (= lt!70260 (insertStrictlySorted!90 (toList!869 (ite c!24689 call!14728 (ite c!24692 call!14724 call!14729))) (_1!1314 (ite (or c!24689 c!24692) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1315 lt!69327))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327))))) (_2!1314 (ite (or c!24689 c!24692) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1315 lt!69327))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327)))))))))

(assert (=> d!41067 (= (+!170 (ite c!24689 call!14728 (ite c!24692 call!14724 call!14729)) (ite (or c!24689 c!24692) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1315 lt!69327))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327))))) lt!70258)))

(declare-fun b!134156 () Bool)

(declare-fun res!64526 () Bool)

(assert (=> b!134156 (=> (not res!64526) (not e!87390))))

(assert (=> b!134156 (= res!64526 (= (getValueByKey!171 (toList!869 lt!70258) (_1!1314 (ite (or c!24689 c!24692) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1315 lt!69327))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327)))))) (Some!176 (_2!1314 (ite (or c!24689 c!24692) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1315 lt!69327))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327))))))))))

(declare-fun b!134157 () Bool)

(assert (=> b!134157 (= e!87390 (contains!898 (toList!869 lt!70258) (ite (or c!24689 c!24692) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1315 lt!69327))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327))))))))

(assert (= (and d!41067 res!64527) b!134156))

(assert (= (and b!134156 res!64526) b!134157))

(declare-fun m!159071 () Bool)

(assert (=> d!41067 m!159071))

(declare-fun m!159073 () Bool)

(assert (=> d!41067 m!159073))

(declare-fun m!159075 () Bool)

(assert (=> d!41067 m!159075))

(declare-fun m!159077 () Bool)

(assert (=> d!41067 m!159077))

(declare-fun m!159079 () Bool)

(assert (=> b!134156 m!159079))

(declare-fun m!159081 () Bool)

(assert (=> b!134157 m!159081))

(assert (=> bm!14723 d!41067))

(declare-fun d!41069 () Bool)

(assert (=> d!41069 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69488) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69488) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5573 () Bool)

(assert (= bs!5573 d!41069))

(assert (=> bs!5573 m!158057))

(declare-fun m!159083 () Bool)

(assert (=> bs!5573 m!159083))

(assert (=> b!133965 d!41069))

(declare-fun b!134158 () Bool)

(declare-fun e!87391 () Option!177)

(assert (=> b!134158 (= e!87391 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69488)))))))

(declare-fun b!134161 () Bool)

(declare-fun e!87392 () Option!177)

(assert (=> b!134161 (= e!87392 None!175)))

(declare-fun b!134160 () Bool)

(assert (=> b!134160 (= e!87392 (getValueByKey!171 (t!6198 (toList!869 lt!69488)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134159 () Bool)

(assert (=> b!134159 (= e!87391 e!87392)))

(declare-fun c!24935 () Bool)

(assert (=> b!134159 (= c!24935 (and ((_ is Cons!1731) (toList!869 lt!69488)) (not (= (_1!1314 (h!2336 (toList!869 lt!69488))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!41071 () Bool)

(declare-fun c!24934 () Bool)

(assert (=> d!41071 (= c!24934 (and ((_ is Cons!1731) (toList!869 lt!69488)) (= (_1!1314 (h!2336 (toList!869 lt!69488))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41071 (= (getValueByKey!171 (toList!869 lt!69488) #b0000000000000000000000000000000000000000000000000000000000000000) e!87391)))

(assert (= (and d!41071 c!24934) b!134158))

(assert (= (and d!41071 (not c!24934)) b!134159))

(assert (= (and b!134159 c!24935) b!134160))

(assert (= (and b!134159 (not c!24935)) b!134161))

(declare-fun m!159085 () Bool)

(assert (=> b!134160 m!159085))

(assert (=> b!133965 d!41071))

(declare-fun d!41073 () Bool)

(declare-fun c!24938 () Bool)

(assert (=> d!41073 (= c!24938 ((_ is Nil!1732) (toList!869 lt!69376)))))

(declare-fun e!87395 () (InoxSet tuple2!2608))

(assert (=> d!41073 (= (content!132 (toList!869 lt!69376)) e!87395)))

(declare-fun b!134166 () Bool)

(assert (=> b!134166 (= e!87395 ((as const (Array tuple2!2608 Bool)) false))))

(declare-fun b!134167 () Bool)

(assert (=> b!134167 (= e!87395 ((_ map or) (store ((as const (Array tuple2!2608 Bool)) false) (h!2336 (toList!869 lt!69376)) true) (content!132 (t!6198 (toList!869 lt!69376)))))))

(assert (= (and d!41073 c!24938) b!134166))

(assert (= (and d!41073 (not c!24938)) b!134167))

(declare-fun m!159087 () Bool)

(assert (=> b!134167 m!159087))

(declare-fun m!159089 () Bool)

(assert (=> b!134167 m!159089))

(assert (=> d!40755 d!41073))

(declare-fun d!41075 () Bool)

(declare-fun e!87396 () Bool)

(assert (=> d!41075 e!87396))

(declare-fun res!64529 () Bool)

(assert (=> d!41075 (=> (not res!64529) (not e!87396))))

(declare-fun lt!70262 () ListLongMap!1707)

(assert (=> d!41075 (= res!64529 (contains!896 lt!70262 (_1!1314 (tuple2!2609 lt!69752 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70264 () List!1735)

(assert (=> d!41075 (= lt!70262 (ListLongMap!1708 lt!70264))))

(declare-fun lt!70263 () Unit!4150)

(declare-fun lt!70261 () Unit!4150)

(assert (=> d!41075 (= lt!70263 lt!70261)))

(assert (=> d!41075 (= (getValueByKey!171 lt!70264 (_1!1314 (tuple2!2609 lt!69752 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69752 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41075 (= lt!70261 (lemmaContainsTupThenGetReturnValue!88 lt!70264 (_1!1314 (tuple2!2609 lt!69752 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69752 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41075 (= lt!70264 (insertStrictlySorted!90 (toList!869 lt!69741) (_1!1314 (tuple2!2609 lt!69752 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69752 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41075 (= (+!170 lt!69741 (tuple2!2609 lt!69752 (zeroValue!2720 newMap!16))) lt!70262)))

(declare-fun b!134168 () Bool)

(declare-fun res!64528 () Bool)

(assert (=> b!134168 (=> (not res!64528) (not e!87396))))

(assert (=> b!134168 (= res!64528 (= (getValueByKey!171 (toList!869 lt!70262) (_1!1314 (tuple2!2609 lt!69752 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69752 (zeroValue!2720 newMap!16))))))))

(declare-fun b!134169 () Bool)

(assert (=> b!134169 (= e!87396 (contains!898 (toList!869 lt!70262) (tuple2!2609 lt!69752 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41075 res!64529) b!134168))

(assert (= (and b!134168 res!64528) b!134169))

(declare-fun m!159091 () Bool)

(assert (=> d!41075 m!159091))

(declare-fun m!159093 () Bool)

(assert (=> d!41075 m!159093))

(declare-fun m!159095 () Bool)

(assert (=> d!41075 m!159095))

(declare-fun m!159097 () Bool)

(assert (=> d!41075 m!159097))

(declare-fun m!159099 () Bool)

(assert (=> b!134168 m!159099))

(declare-fun m!159101 () Bool)

(assert (=> b!134169 m!159101))

(assert (=> b!133288 d!41075))

(declare-fun d!41077 () Bool)

(assert (=> d!41077 (= (apply!116 lt!69745 lt!69744) (get!1491 (getValueByKey!171 (toList!869 lt!69745) lt!69744)))))

(declare-fun bs!5574 () Bool)

(assert (= bs!5574 d!41077))

(declare-fun m!159103 () Bool)

(assert (=> bs!5574 m!159103))

(assert (=> bs!5574 m!159103))

(declare-fun m!159105 () Bool)

(assert (=> bs!5574 m!159105))

(assert (=> b!133288 d!41077))

(declare-fun d!41079 () Bool)

(assert (=> d!41079 (= (apply!116 (+!170 lt!69741 (tuple2!2609 lt!69752 (zeroValue!2720 newMap!16))) lt!69739) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69741 (tuple2!2609 lt!69752 (zeroValue!2720 newMap!16)))) lt!69739)))))

(declare-fun bs!5575 () Bool)

(assert (= bs!5575 d!41079))

(declare-fun m!159107 () Bool)

(assert (=> bs!5575 m!159107))

(assert (=> bs!5575 m!159107))

(declare-fun m!159109 () Bool)

(assert (=> bs!5575 m!159109))

(assert (=> b!133288 d!41079))

(declare-fun d!41081 () Bool)

(assert (=> d!41081 (= (apply!116 (+!170 lt!69745 (tuple2!2609 lt!69742 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69744) (apply!116 lt!69745 lt!69744))))

(declare-fun lt!70265 () Unit!4150)

(assert (=> d!41081 (= lt!70265 (choose!828 lt!69745 lt!69742 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69744))))

(declare-fun e!87397 () Bool)

(assert (=> d!41081 e!87397))

(declare-fun res!64530 () Bool)

(assert (=> d!41081 (=> (not res!64530) (not e!87397))))

(assert (=> d!41081 (= res!64530 (contains!896 lt!69745 lt!69744))))

(assert (=> d!41081 (= (addApplyDifferent!92 lt!69745 lt!69742 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69744) lt!70265)))

(declare-fun b!134170 () Bool)

(assert (=> b!134170 (= e!87397 (not (= lt!69744 lt!69742)))))

(assert (= (and d!41081 res!64530) b!134170))

(assert (=> d!41081 m!157333))

(assert (=> d!41081 m!157317))

(assert (=> d!41081 m!157319))

(assert (=> d!41081 m!156285))

(declare-fun m!159111 () Bool)

(assert (=> d!41081 m!159111))

(declare-fun m!159113 () Bool)

(assert (=> d!41081 m!159113))

(assert (=> d!41081 m!157317))

(assert (=> b!133288 d!41081))

(declare-fun d!41083 () Bool)

(assert (=> d!41083 (= (apply!116 (+!170 lt!69741 (tuple2!2609 lt!69752 (zeroValue!2720 newMap!16))) lt!69739) (apply!116 lt!69741 lt!69739))))

(declare-fun lt!70266 () Unit!4150)

(assert (=> d!41083 (= lt!70266 (choose!828 lt!69741 lt!69752 (zeroValue!2720 newMap!16) lt!69739))))

(declare-fun e!87398 () Bool)

(assert (=> d!41083 e!87398))

(declare-fun res!64531 () Bool)

(assert (=> d!41083 (=> (not res!64531) (not e!87398))))

(assert (=> d!41083 (= res!64531 (contains!896 lt!69741 lt!69739))))

(assert (=> d!41083 (= (addApplyDifferent!92 lt!69741 lt!69752 (zeroValue!2720 newMap!16) lt!69739) lt!70266)))

(declare-fun b!134171 () Bool)

(assert (=> b!134171 (= e!87398 (not (= lt!69739 lt!69752)))))

(assert (= (and d!41083 res!64531) b!134171))

(assert (=> d!41083 m!157343))

(assert (=> d!41083 m!157313))

(assert (=> d!41083 m!157331))

(declare-fun m!159115 () Bool)

(assert (=> d!41083 m!159115))

(declare-fun m!159117 () Bool)

(assert (=> d!41083 m!159117))

(assert (=> d!41083 m!157313))

(assert (=> b!133288 d!41083))

(declare-fun d!41085 () Bool)

(declare-fun e!87399 () Bool)

(assert (=> d!41085 e!87399))

(declare-fun res!64533 () Bool)

(assert (=> d!41085 (=> (not res!64533) (not e!87399))))

(declare-fun lt!70268 () ListLongMap!1707)

(assert (=> d!41085 (= res!64533 (contains!896 lt!70268 (_1!1314 (tuple2!2609 lt!69736 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70270 () List!1735)

(assert (=> d!41085 (= lt!70268 (ListLongMap!1708 lt!70270))))

(declare-fun lt!70269 () Unit!4150)

(declare-fun lt!70267 () Unit!4150)

(assert (=> d!41085 (= lt!70269 lt!70267)))

(assert (=> d!41085 (= (getValueByKey!171 lt!70270 (_1!1314 (tuple2!2609 lt!69736 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69736 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41085 (= lt!70267 (lemmaContainsTupThenGetReturnValue!88 lt!70270 (_1!1314 (tuple2!2609 lt!69736 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69736 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41085 (= lt!70270 (insertStrictlySorted!90 (toList!869 lt!69733) (_1!1314 (tuple2!2609 lt!69736 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69736 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41085 (= (+!170 lt!69733 (tuple2!2609 lt!69736 (zeroValue!2720 newMap!16))) lt!70268)))

(declare-fun b!134172 () Bool)

(declare-fun res!64532 () Bool)

(assert (=> b!134172 (=> (not res!64532) (not e!87399))))

(assert (=> b!134172 (= res!64532 (= (getValueByKey!171 (toList!869 lt!70268) (_1!1314 (tuple2!2609 lt!69736 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69736 (zeroValue!2720 newMap!16))))))))

(declare-fun b!134173 () Bool)

(assert (=> b!134173 (= e!87399 (contains!898 (toList!869 lt!70268) (tuple2!2609 lt!69736 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41085 res!64533) b!134172))

(assert (= (and b!134172 res!64532) b!134173))

(declare-fun m!159119 () Bool)

(assert (=> d!41085 m!159119))

(declare-fun m!159121 () Bool)

(assert (=> d!41085 m!159121))

(declare-fun m!159123 () Bool)

(assert (=> d!41085 m!159123))

(declare-fun m!159125 () Bool)

(assert (=> d!41085 m!159125))

(declare-fun m!159127 () Bool)

(assert (=> b!134172 m!159127))

(declare-fun m!159129 () Bool)

(assert (=> b!134173 m!159129))

(assert (=> b!133288 d!41085))

(declare-fun d!41087 () Bool)

(assert (=> d!41087 (= (apply!116 (+!170 lt!69745 (tuple2!2609 lt!69742 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69744) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69745 (tuple2!2609 lt!69742 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69744)))))

(declare-fun bs!5576 () Bool)

(assert (= bs!5576 d!41087))

(declare-fun m!159131 () Bool)

(assert (=> bs!5576 m!159131))

(assert (=> bs!5576 m!159131))

(declare-fun m!159133 () Bool)

(assert (=> bs!5576 m!159133))

(assert (=> b!133288 d!41087))

(declare-fun d!41089 () Bool)

(assert (=> d!41089 (= (apply!116 lt!69741 lt!69739) (get!1491 (getValueByKey!171 (toList!869 lt!69741) lt!69739)))))

(declare-fun bs!5577 () Bool)

(assert (= bs!5577 d!41089))

(declare-fun m!159135 () Bool)

(assert (=> bs!5577 m!159135))

(assert (=> bs!5577 m!159135))

(declare-fun m!159137 () Bool)

(assert (=> bs!5577 m!159137))

(assert (=> b!133288 d!41089))

(declare-fun d!41091 () Bool)

(assert (=> d!41091 (= (apply!116 lt!69746 lt!69734) (get!1491 (getValueByKey!171 (toList!869 lt!69746) lt!69734)))))

(declare-fun bs!5578 () Bool)

(assert (= bs!5578 d!41091))

(declare-fun m!159139 () Bool)

(assert (=> bs!5578 m!159139))

(assert (=> bs!5578 m!159139))

(declare-fun m!159141 () Bool)

(assert (=> bs!5578 m!159141))

(assert (=> b!133288 d!41091))

(declare-fun d!41093 () Bool)

(declare-fun e!87400 () Bool)

(assert (=> d!41093 e!87400))

(declare-fun res!64535 () Bool)

(assert (=> d!41093 (=> (not res!64535) (not e!87400))))

(declare-fun lt!70272 () ListLongMap!1707)

(assert (=> d!41093 (= res!64535 (contains!896 lt!70272 (_1!1314 (tuple2!2609 lt!69742 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70274 () List!1735)

(assert (=> d!41093 (= lt!70272 (ListLongMap!1708 lt!70274))))

(declare-fun lt!70273 () Unit!4150)

(declare-fun lt!70271 () Unit!4150)

(assert (=> d!41093 (= lt!70273 lt!70271)))

(assert (=> d!41093 (= (getValueByKey!171 lt!70274 (_1!1314 (tuple2!2609 lt!69742 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 lt!69742 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41093 (= lt!70271 (lemmaContainsTupThenGetReturnValue!88 lt!70274 (_1!1314 (tuple2!2609 lt!69742 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 lt!69742 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41093 (= lt!70274 (insertStrictlySorted!90 (toList!869 lt!69745) (_1!1314 (tuple2!2609 lt!69742 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 lt!69742 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41093 (= (+!170 lt!69745 (tuple2!2609 lt!69742 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70272)))

(declare-fun b!134174 () Bool)

(declare-fun res!64534 () Bool)

(assert (=> b!134174 (=> (not res!64534) (not e!87400))))

(assert (=> b!134174 (= res!64534 (= (getValueByKey!171 (toList!869 lt!70272) (_1!1314 (tuple2!2609 lt!69742 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 lt!69742 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134175 () Bool)

(assert (=> b!134175 (= e!87400 (contains!898 (toList!869 lt!70272) (tuple2!2609 lt!69742 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41093 res!64535) b!134174))

(assert (= (and b!134174 res!64534) b!134175))

(declare-fun m!159143 () Bool)

(assert (=> d!41093 m!159143))

(declare-fun m!159145 () Bool)

(assert (=> d!41093 m!159145))

(declare-fun m!159147 () Bool)

(assert (=> d!41093 m!159147))

(declare-fun m!159149 () Bool)

(assert (=> d!41093 m!159149))

(declare-fun m!159151 () Bool)

(assert (=> b!134174 m!159151))

(declare-fun m!159153 () Bool)

(assert (=> b!134175 m!159153))

(assert (=> b!133288 d!41093))

(declare-fun d!41095 () Bool)

(declare-fun e!87401 () Bool)

(assert (=> d!41095 e!87401))

(declare-fun res!64537 () Bool)

(assert (=> d!41095 (=> (not res!64537) (not e!87401))))

(declare-fun lt!70276 () ListLongMap!1707)

(assert (=> d!41095 (= res!64537 (contains!896 lt!70276 (_1!1314 (tuple2!2609 lt!69748 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70278 () List!1735)

(assert (=> d!41095 (= lt!70276 (ListLongMap!1708 lt!70278))))

(declare-fun lt!70277 () Unit!4150)

(declare-fun lt!70275 () Unit!4150)

(assert (=> d!41095 (= lt!70277 lt!70275)))

(assert (=> d!41095 (= (getValueByKey!171 lt!70278 (_1!1314 (tuple2!2609 lt!69748 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 lt!69748 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41095 (= lt!70275 (lemmaContainsTupThenGetReturnValue!88 lt!70278 (_1!1314 (tuple2!2609 lt!69748 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 lt!69748 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41095 (= lt!70278 (insertStrictlySorted!90 (toList!869 lt!69746) (_1!1314 (tuple2!2609 lt!69748 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 lt!69748 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41095 (= (+!170 lt!69746 (tuple2!2609 lt!69748 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70276)))

(declare-fun b!134176 () Bool)

(declare-fun res!64536 () Bool)

(assert (=> b!134176 (=> (not res!64536) (not e!87401))))

(assert (=> b!134176 (= res!64536 (= (getValueByKey!171 (toList!869 lt!70276) (_1!1314 (tuple2!2609 lt!69748 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 lt!69748 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134177 () Bool)

(assert (=> b!134177 (= e!87401 (contains!898 (toList!869 lt!70276) (tuple2!2609 lt!69748 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41095 res!64537) b!134176))

(assert (= (and b!134176 res!64536) b!134177))

(declare-fun m!159155 () Bool)

(assert (=> d!41095 m!159155))

(declare-fun m!159157 () Bool)

(assert (=> d!41095 m!159157))

(declare-fun m!159159 () Bool)

(assert (=> d!41095 m!159159))

(declare-fun m!159161 () Bool)

(assert (=> d!41095 m!159161))

(declare-fun m!159163 () Bool)

(assert (=> b!134176 m!159163))

(declare-fun m!159165 () Bool)

(assert (=> b!134177 m!159165))

(assert (=> b!133288 d!41095))

(declare-fun d!41097 () Bool)

(assert (=> d!41097 (= (apply!116 (+!170 lt!69746 (tuple2!2609 lt!69748 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69734) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69746 (tuple2!2609 lt!69748 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69734)))))

(declare-fun bs!5579 () Bool)

(assert (= bs!5579 d!41097))

(declare-fun m!159167 () Bool)

(assert (=> bs!5579 m!159167))

(assert (=> bs!5579 m!159167))

(declare-fun m!159169 () Bool)

(assert (=> bs!5579 m!159169))

(assert (=> b!133288 d!41097))

(declare-fun d!41099 () Bool)

(declare-fun e!87402 () Bool)

(assert (=> d!41099 e!87402))

(declare-fun res!64538 () Bool)

(assert (=> d!41099 (=> res!64538 e!87402)))

(declare-fun lt!70279 () Bool)

(assert (=> d!41099 (= res!64538 (not lt!70279))))

(declare-fun lt!70281 () Bool)

(assert (=> d!41099 (= lt!70279 lt!70281)))

(declare-fun lt!70280 () Unit!4150)

(declare-fun e!87403 () Unit!4150)

(assert (=> d!41099 (= lt!70280 e!87403)))

(declare-fun c!24939 () Bool)

(assert (=> d!41099 (= c!24939 lt!70281)))

(assert (=> d!41099 (= lt!70281 (containsKey!175 (toList!869 (+!170 lt!69733 (tuple2!2609 lt!69736 (zeroValue!2720 newMap!16)))) lt!69743))))

(assert (=> d!41099 (= (contains!896 (+!170 lt!69733 (tuple2!2609 lt!69736 (zeroValue!2720 newMap!16))) lt!69743) lt!70279)))

(declare-fun b!134178 () Bool)

(declare-fun lt!70282 () Unit!4150)

(assert (=> b!134178 (= e!87403 lt!70282)))

(assert (=> b!134178 (= lt!70282 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69733 (tuple2!2609 lt!69736 (zeroValue!2720 newMap!16)))) lt!69743))))

(assert (=> b!134178 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69733 (tuple2!2609 lt!69736 (zeroValue!2720 newMap!16)))) lt!69743))))

(declare-fun b!134179 () Bool)

(declare-fun Unit!4213 () Unit!4150)

(assert (=> b!134179 (= e!87403 Unit!4213)))

(declare-fun b!134180 () Bool)

(assert (=> b!134180 (= e!87402 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69733 (tuple2!2609 lt!69736 (zeroValue!2720 newMap!16)))) lt!69743)))))

(assert (= (and d!41099 c!24939) b!134178))

(assert (= (and d!41099 (not c!24939)) b!134179))

(assert (= (and d!41099 (not res!64538)) b!134180))

(declare-fun m!159171 () Bool)

(assert (=> d!41099 m!159171))

(declare-fun m!159173 () Bool)

(assert (=> b!134178 m!159173))

(declare-fun m!159175 () Bool)

(assert (=> b!134178 m!159175))

(assert (=> b!134178 m!159175))

(declare-fun m!159177 () Bool)

(assert (=> b!134178 m!159177))

(assert (=> b!134180 m!159175))

(assert (=> b!134180 m!159175))

(assert (=> b!134180 m!159177))

(assert (=> b!133288 d!41099))

(declare-fun b!134181 () Bool)

(declare-fun lt!70283 () Unit!4150)

(declare-fun lt!70287 () Unit!4150)

(assert (=> b!134181 (= lt!70283 lt!70287)))

(declare-fun lt!70285 () (_ BitVec 64))

(declare-fun lt!70284 () ListLongMap!1707)

(declare-fun lt!70288 () (_ BitVec 64))

(declare-fun lt!70286 () V!3483)

(assert (=> b!134181 (not (contains!896 (+!170 lt!70284 (tuple2!2609 lt!70288 lt!70286)) lt!70285))))

(assert (=> b!134181 (= lt!70287 (addStillNotContains!63 lt!70284 lt!70288 lt!70286 lt!70285))))

(assert (=> b!134181 (= lt!70285 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134181 (= lt!70286 (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134181 (= lt!70288 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!14810 () ListLongMap!1707)

(assert (=> b!134181 (= lt!70284 call!14810)))

(declare-fun e!87410 () ListLongMap!1707)

(assert (=> b!134181 (= e!87410 (+!170 call!14810 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun lt!70289 () ListLongMap!1707)

(declare-fun b!134182 () Bool)

(declare-fun e!87407 () Bool)

(assert (=> b!134182 (= e!87407 (= lt!70289 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69304 (zeroValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!134183 () Bool)

(assert (=> b!134183 (= e!87407 (isEmpty!414 lt!70289))))

(declare-fun b!134184 () Bool)

(declare-fun e!87408 () ListLongMap!1707)

(assert (=> b!134184 (= e!87408 (ListLongMap!1708 Nil!1732))))

(declare-fun b!134185 () Bool)

(declare-fun e!87405 () Bool)

(declare-fun e!87406 () Bool)

(assert (=> b!134185 (= e!87405 e!87406)))

(declare-fun c!24943 () Bool)

(declare-fun e!87409 () Bool)

(assert (=> b!134185 (= c!24943 e!87409)))

(declare-fun res!64542 () Bool)

(assert (=> b!134185 (=> (not res!64542) (not e!87409))))

(assert (=> b!134185 (= res!64542 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!134186 () Bool)

(assert (=> b!134186 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (=> b!134186 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_values!2848 newMap!16))))))

(declare-fun e!87404 () Bool)

(assert (=> b!134186 (= e!87404 (= (apply!116 lt!70289 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134188 () Bool)

(assert (=> b!134188 (= e!87406 e!87404)))

(assert (=> b!134188 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun res!64541 () Bool)

(assert (=> b!134188 (= res!64541 (contains!896 lt!70289 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134188 (=> (not res!64541) (not e!87404))))

(declare-fun b!134189 () Bool)

(assert (=> b!134189 (= e!87408 e!87410)))

(declare-fun c!24940 () Bool)

(assert (=> b!134189 (= c!24940 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134190 () Bool)

(declare-fun res!64540 () Bool)

(assert (=> b!134190 (=> (not res!64540) (not e!87405))))

(assert (=> b!134190 (= res!64540 (not (contains!896 lt!70289 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134191 () Bool)

(assert (=> b!134191 (= e!87406 e!87407)))

(declare-fun c!24942 () Bool)

(assert (=> b!134191 (= c!24942 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun bm!14807 () Bool)

(assert (=> bm!14807 (= call!14810 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69304 (zeroValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!134192 () Bool)

(assert (=> b!134192 (= e!87409 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134192 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134187 () Bool)

(assert (=> b!134187 (= e!87410 call!14810)))

(declare-fun d!41101 () Bool)

(assert (=> d!41101 e!87405))

(declare-fun res!64539 () Bool)

(assert (=> d!41101 (=> (not res!64539) (not e!87405))))

(assert (=> d!41101 (= res!64539 (not (contains!896 lt!70289 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41101 (= lt!70289 e!87408)))

(declare-fun c!24941 () Bool)

(assert (=> d!41101 (= c!24941 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!41101 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41101 (= (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69304 (zeroValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!70289)))

(assert (= (and d!41101 c!24941) b!134184))

(assert (= (and d!41101 (not c!24941)) b!134189))

(assert (= (and b!134189 c!24940) b!134181))

(assert (= (and b!134189 (not c!24940)) b!134187))

(assert (= (or b!134181 b!134187) bm!14807))

(assert (= (and d!41101 res!64539) b!134190))

(assert (= (and b!134190 res!64540) b!134185))

(assert (= (and b!134185 res!64542) b!134192))

(assert (= (and b!134185 c!24943) b!134188))

(assert (= (and b!134185 (not c!24943)) b!134191))

(assert (= (and b!134188 res!64541) b!134186))

(assert (= (and b!134191 c!24942) b!134182))

(assert (= (and b!134191 (not c!24942)) b!134183))

(declare-fun b_lambda!6023 () Bool)

(assert (=> (not b_lambda!6023) (not b!134181)))

(assert (=> b!134181 t!6205))

(declare-fun b_and!8341 () Bool)

(assert (= b_and!8337 (and (=> t!6205 result!4009) b_and!8341)))

(assert (=> b!134181 t!6207))

(declare-fun b_and!8343 () Bool)

(assert (= b_and!8339 (and (=> t!6207 result!4011) b_and!8343)))

(declare-fun b_lambda!6025 () Bool)

(assert (=> (not b_lambda!6025) (not b!134186)))

(assert (=> b!134186 t!6205))

(declare-fun b_and!8345 () Bool)

(assert (= b_and!8341 (and (=> t!6205 result!4009) b_and!8345)))

(assert (=> b!134186 t!6207))

(declare-fun b_and!8347 () Bool)

(assert (= b_and!8343 (and (=> t!6207 result!4011) b_and!8347)))

(declare-fun m!159179 () Bool)

(assert (=> d!41101 m!159179))

(assert (=> d!41101 m!156571))

(assert (=> b!134182 m!156285))

(declare-fun m!159181 () Bool)

(assert (=> b!134182 m!159181))

(declare-fun m!159183 () Bool)

(assert (=> b!134181 m!159183))

(declare-fun m!159185 () Bool)

(assert (=> b!134181 m!159185))

(assert (=> b!134181 m!159183))

(assert (=> b!134181 m!156647))

(assert (=> b!134181 m!156645))

(assert (=> b!134181 m!156647))

(assert (=> b!134181 m!156649))

(declare-fun m!159187 () Bool)

(assert (=> b!134181 m!159187))

(assert (=> b!134181 m!156645))

(assert (=> b!134181 m!156533))

(declare-fun m!159189 () Bool)

(assert (=> b!134181 m!159189))

(assert (=> b!134186 m!156533))

(declare-fun m!159191 () Bool)

(assert (=> b!134186 m!159191))

(assert (=> b!134186 m!156647))

(assert (=> b!134186 m!156533))

(assert (=> b!134186 m!156645))

(assert (=> b!134186 m!156647))

(assert (=> b!134186 m!156649))

(assert (=> b!134186 m!156645))

(assert (=> bm!14807 m!156285))

(assert (=> bm!14807 m!159181))

(assert (=> b!134189 m!156533))

(assert (=> b!134189 m!156533))

(assert (=> b!134189 m!156557))

(declare-fun m!159193 () Bool)

(assert (=> b!134190 m!159193))

(assert (=> b!134188 m!156533))

(assert (=> b!134188 m!156533))

(declare-fun m!159195 () Bool)

(assert (=> b!134188 m!159195))

(assert (=> b!134192 m!156533))

(assert (=> b!134192 m!156533))

(assert (=> b!134192 m!156557))

(declare-fun m!159197 () Bool)

(assert (=> b!134183 m!159197))

(assert (=> b!133288 d!41101))

(declare-fun d!41103 () Bool)

(assert (=> d!41103 (contains!896 (+!170 lt!69733 (tuple2!2609 lt!69736 (zeroValue!2720 newMap!16))) lt!69743)))

(declare-fun lt!70290 () Unit!4150)

(assert (=> d!41103 (= lt!70290 (choose!829 lt!69733 lt!69736 (zeroValue!2720 newMap!16) lt!69743))))

(assert (=> d!41103 (contains!896 lt!69733 lt!69743)))

(assert (=> d!41103 (= (addStillContains!92 lt!69733 lt!69736 (zeroValue!2720 newMap!16) lt!69743) lt!70290)))

(declare-fun bs!5580 () Bool)

(assert (= bs!5580 d!41103))

(assert (=> bs!5580 m!157323))

(assert (=> bs!5580 m!157323))

(assert (=> bs!5580 m!157339))

(declare-fun m!159199 () Bool)

(assert (=> bs!5580 m!159199))

(declare-fun m!159201 () Bool)

(assert (=> bs!5580 m!159201))

(assert (=> b!133288 d!41103))

(declare-fun d!41105 () Bool)

(assert (=> d!41105 (= (apply!116 (+!170 lt!69746 (tuple2!2609 lt!69748 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69734) (apply!116 lt!69746 lt!69734))))

(declare-fun lt!70291 () Unit!4150)

(assert (=> d!41105 (= lt!70291 (choose!828 lt!69746 lt!69748 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69734))))

(declare-fun e!87411 () Bool)

(assert (=> d!41105 e!87411))

(declare-fun res!64543 () Bool)

(assert (=> d!41105 (=> (not res!64543) (not e!87411))))

(assert (=> d!41105 (= res!64543 (contains!896 lt!69746 lt!69734))))

(assert (=> d!41105 (= (addApplyDifferent!92 lt!69746 lt!69748 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69734) lt!70291)))

(declare-fun b!134193 () Bool)

(assert (=> b!134193 (= e!87411 (not (= lt!69734 lt!69748)))))

(assert (= (and d!41105 res!64543) b!134193))

(assert (=> d!41105 m!157341))

(assert (=> d!41105 m!157327))

(assert (=> d!41105 m!157329))

(assert (=> d!41105 m!156285))

(declare-fun m!159203 () Bool)

(assert (=> d!41105 m!159203))

(declare-fun m!159205 () Bool)

(assert (=> d!41105 m!159205))

(assert (=> d!41105 m!157327))

(assert (=> b!133288 d!41105))

(declare-fun d!41107 () Bool)

(assert (=> d!41107 (isDefined!125 (getValueByKey!171 (toList!869 lt!69405) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70292 () Unit!4150)

(assert (=> d!41107 (= lt!70292 (choose!831 (toList!869 lt!69405) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87412 () Bool)

(assert (=> d!41107 e!87412))

(declare-fun res!64544 () Bool)

(assert (=> d!41107 (=> (not res!64544) (not e!87412))))

(assert (=> d!41107 (= res!64544 (isStrictlySorted!317 (toList!869 lt!69405)))))

(assert (=> d!41107 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69405) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70292)))

(declare-fun b!134194 () Bool)

(assert (=> b!134194 (= e!87412 (containsKey!175 (toList!869 lt!69405) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41107 res!64544) b!134194))

(assert (=> d!41107 m!158103))

(assert (=> d!41107 m!158103))

(assert (=> d!41107 m!158105))

(declare-fun m!159207 () Bool)

(assert (=> d!41107 m!159207))

(declare-fun m!159209 () Bool)

(assert (=> d!41107 m!159209))

(assert (=> b!134194 m!158099))

(assert (=> b!133655 d!41107))

(declare-fun d!41109 () Bool)

(assert (=> d!41109 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69405) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69405) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5581 () Bool)

(assert (= bs!5581 d!41109))

(assert (=> bs!5581 m!158103))

(declare-fun m!159211 () Bool)

(assert (=> bs!5581 m!159211))

(assert (=> b!133655 d!41109))

(declare-fun b!134195 () Bool)

(declare-fun e!87413 () Option!177)

(assert (=> b!134195 (= e!87413 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69405)))))))

(declare-fun b!134198 () Bool)

(declare-fun e!87414 () Option!177)

(assert (=> b!134198 (= e!87414 None!175)))

(declare-fun b!134197 () Bool)

(assert (=> b!134197 (= e!87414 (getValueByKey!171 (t!6198 (toList!869 lt!69405)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134196 () Bool)

(assert (=> b!134196 (= e!87413 e!87414)))

(declare-fun c!24945 () Bool)

(assert (=> b!134196 (= c!24945 (and ((_ is Cons!1731) (toList!869 lt!69405)) (not (= (_1!1314 (h!2336 (toList!869 lt!69405))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!41111 () Bool)

(declare-fun c!24944 () Bool)

(assert (=> d!41111 (= c!24944 (and ((_ is Cons!1731) (toList!869 lt!69405)) (= (_1!1314 (h!2336 (toList!869 lt!69405))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41111 (= (getValueByKey!171 (toList!869 lt!69405) #b0000000000000000000000000000000000000000000000000000000000000000) e!87413)))

(assert (= (and d!41111 c!24944) b!134195))

(assert (= (and d!41111 (not c!24944)) b!134196))

(assert (= (and b!134196 c!24945) b!134197))

(assert (= (and b!134196 (not c!24945)) b!134198))

(declare-fun m!159213 () Bool)

(assert (=> b!134197 m!159213))

(assert (=> b!133655 d!41111))

(declare-fun d!41113 () Bool)

(assert (=> d!41113 (contains!896 (+!170 lt!69699 (tuple2!2609 lt!69702 (zeroValue!2720 newMap!16))) lt!69709)))

(declare-fun lt!70293 () Unit!4150)

(assert (=> d!41113 (= lt!70293 (choose!829 lt!69699 lt!69702 (zeroValue!2720 newMap!16) lt!69709))))

(assert (=> d!41113 (contains!896 lt!69699 lt!69709)))

(assert (=> d!41113 (= (addStillContains!92 lt!69699 lt!69702 (zeroValue!2720 newMap!16) lt!69709) lt!70293)))

(declare-fun bs!5582 () Bool)

(assert (= bs!5582 d!41113))

(assert (=> bs!5582 m!157239))

(assert (=> bs!5582 m!157239))

(assert (=> bs!5582 m!157255))

(declare-fun m!159215 () Bool)

(assert (=> bs!5582 m!159215))

(declare-fun m!159217 () Bool)

(assert (=> bs!5582 m!159217))

(assert (=> b!133261 d!41113))

(declare-fun d!41115 () Bool)

(assert (=> d!41115 (= (apply!116 (+!170 lt!69707 (tuple2!2609 lt!69718 (zeroValue!2720 newMap!16))) lt!69705) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69707 (tuple2!2609 lt!69718 (zeroValue!2720 newMap!16)))) lt!69705)))))

(declare-fun bs!5583 () Bool)

(assert (= bs!5583 d!41115))

(declare-fun m!159219 () Bool)

(assert (=> bs!5583 m!159219))

(assert (=> bs!5583 m!159219))

(declare-fun m!159221 () Bool)

(assert (=> bs!5583 m!159221))

(assert (=> b!133261 d!41115))

(declare-fun d!41117 () Bool)

(assert (=> d!41117 (= (apply!116 (+!170 lt!69712 (tuple2!2609 lt!69714 (minValue!2720 newMap!16))) lt!69700) (apply!116 lt!69712 lt!69700))))

(declare-fun lt!70294 () Unit!4150)

(assert (=> d!41117 (= lt!70294 (choose!828 lt!69712 lt!69714 (minValue!2720 newMap!16) lt!69700))))

(declare-fun e!87415 () Bool)

(assert (=> d!41117 e!87415))

(declare-fun res!64545 () Bool)

(assert (=> d!41117 (=> (not res!64545) (not e!87415))))

(assert (=> d!41117 (= res!64545 (contains!896 lt!69712 lt!69700))))

(assert (=> d!41117 (= (addApplyDifferent!92 lt!69712 lt!69714 (minValue!2720 newMap!16) lt!69700) lt!70294)))

(declare-fun b!134199 () Bool)

(assert (=> b!134199 (= e!87415 (not (= lt!69700 lt!69714)))))

(assert (= (and d!41117 res!64545) b!134199))

(assert (=> d!41117 m!157257))

(assert (=> d!41117 m!157243))

(assert (=> d!41117 m!157245))

(declare-fun m!159223 () Bool)

(assert (=> d!41117 m!159223))

(declare-fun m!159225 () Bool)

(assert (=> d!41117 m!159225))

(assert (=> d!41117 m!157243))

(assert (=> b!133261 d!41117))

(declare-fun b!134200 () Bool)

(declare-fun lt!70295 () Unit!4150)

(declare-fun lt!70299 () Unit!4150)

(assert (=> b!134200 (= lt!70295 lt!70299)))

(declare-fun lt!70300 () (_ BitVec 64))

(declare-fun lt!70297 () (_ BitVec 64))

(declare-fun lt!70298 () V!3483)

(declare-fun lt!70296 () ListLongMap!1707)

(assert (=> b!134200 (not (contains!896 (+!170 lt!70296 (tuple2!2609 lt!70300 lt!70298)) lt!70297))))

(assert (=> b!134200 (= lt!70299 (addStillNotContains!63 lt!70296 lt!70300 lt!70298 lt!70297))))

(assert (=> b!134200 (= lt!70297 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134200 (= lt!70298 (get!1488 (select (arr!2261 lt!69317) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134200 (= lt!70300 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!14811 () ListLongMap!1707)

(assert (=> b!134200 (= lt!70296 call!14811)))

(declare-fun e!87422 () ListLongMap!1707)

(assert (=> b!134200 (= e!87422 (+!170 call!14811 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 lt!69317) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun lt!70301 () ListLongMap!1707)

(declare-fun e!87419 () Bool)

(declare-fun b!134201 () Bool)

(assert (=> b!134201 (= e!87419 (= lt!70301 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!134202 () Bool)

(assert (=> b!134202 (= e!87419 (isEmpty!414 lt!70301))))

(declare-fun b!134203 () Bool)

(declare-fun e!87420 () ListLongMap!1707)

(assert (=> b!134203 (= e!87420 (ListLongMap!1708 Nil!1732))))

(declare-fun b!134204 () Bool)

(declare-fun e!87417 () Bool)

(declare-fun e!87418 () Bool)

(assert (=> b!134204 (= e!87417 e!87418)))

(declare-fun c!24949 () Bool)

(declare-fun e!87421 () Bool)

(assert (=> b!134204 (= c!24949 e!87421)))

(declare-fun res!64549 () Bool)

(assert (=> b!134204 (=> (not res!64549) (not e!87421))))

(assert (=> b!134204 (= res!64549 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!134205 () Bool)

(assert (=> b!134205 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (=> b!134205 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 lt!69317)))))

(declare-fun e!87416 () Bool)

(assert (=> b!134205 (= e!87416 (= (apply!116 lt!70301 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 lt!69317) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134207 () Bool)

(assert (=> b!134207 (= e!87418 e!87416)))

(assert (=> b!134207 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun res!64548 () Bool)

(assert (=> b!134207 (= res!64548 (contains!896 lt!70301 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134207 (=> (not res!64548) (not e!87416))))

(declare-fun b!134208 () Bool)

(assert (=> b!134208 (= e!87420 e!87422)))

(declare-fun c!24946 () Bool)

(assert (=> b!134208 (= c!24946 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134209 () Bool)

(declare-fun res!64547 () Bool)

(assert (=> b!134209 (=> (not res!64547) (not e!87417))))

(assert (=> b!134209 (= res!64547 (not (contains!896 lt!70301 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134210 () Bool)

(assert (=> b!134210 (= e!87418 e!87419)))

(declare-fun c!24948 () Bool)

(assert (=> b!134210 (= c!24948 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun bm!14808 () Bool)

(assert (=> bm!14808 (= call!14811 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!134211 () Bool)

(assert (=> b!134211 (= e!87421 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134211 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134206 () Bool)

(assert (=> b!134206 (= e!87422 call!14811)))

(declare-fun d!41119 () Bool)

(assert (=> d!41119 e!87417))

(declare-fun res!64546 () Bool)

(assert (=> d!41119 (=> (not res!64546) (not e!87417))))

(assert (=> d!41119 (= res!64546 (not (contains!896 lt!70301 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41119 (= lt!70301 e!87420)))

(declare-fun c!24947 () Bool)

(assert (=> d!41119 (= c!24947 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!41119 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41119 (= (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!70301)))

(assert (= (and d!41119 c!24947) b!134203))

(assert (= (and d!41119 (not c!24947)) b!134208))

(assert (= (and b!134208 c!24946) b!134200))

(assert (= (and b!134208 (not c!24946)) b!134206))

(assert (= (or b!134200 b!134206) bm!14808))

(assert (= (and d!41119 res!64546) b!134209))

(assert (= (and b!134209 res!64547) b!134204))

(assert (= (and b!134204 res!64549) b!134211))

(assert (= (and b!134204 c!24949) b!134207))

(assert (= (and b!134204 (not c!24949)) b!134210))

(assert (= (and b!134207 res!64548) b!134205))

(assert (= (and b!134210 c!24948) b!134201))

(assert (= (and b!134210 (not c!24948)) b!134202))

(declare-fun b_lambda!6027 () Bool)

(assert (=> (not b_lambda!6027) (not b!134200)))

(assert (=> b!134200 t!6205))

(declare-fun b_and!8349 () Bool)

(assert (= b_and!8345 (and (=> t!6205 result!4009) b_and!8349)))

(assert (=> b!134200 t!6207))

(declare-fun b_and!8351 () Bool)

(assert (= b_and!8347 (and (=> t!6207 result!4011) b_and!8351)))

(declare-fun b_lambda!6029 () Bool)

(assert (=> (not b_lambda!6029) (not b!134205)))

(assert (=> b!134205 t!6205))

(declare-fun b_and!8353 () Bool)

(assert (= b_and!8349 (and (=> t!6205 result!4009) b_and!8353)))

(assert (=> b!134205 t!6207))

(declare-fun b_and!8355 () Bool)

(assert (= b_and!8351 (and (=> t!6207 result!4011) b_and!8355)))

(declare-fun m!159227 () Bool)

(assert (=> d!41119 m!159227))

(assert (=> d!41119 m!156571))

(declare-fun m!159229 () Bool)

(assert (=> b!134201 m!159229))

(declare-fun m!159231 () Bool)

(assert (=> b!134200 m!159231))

(declare-fun m!159233 () Bool)

(assert (=> b!134200 m!159233))

(assert (=> b!134200 m!159231))

(assert (=> b!134200 m!156647))

(assert (=> b!134200 m!157219))

(assert (=> b!134200 m!156647))

(assert (=> b!134200 m!157221))

(declare-fun m!159235 () Bool)

(assert (=> b!134200 m!159235))

(assert (=> b!134200 m!157219))

(assert (=> b!134200 m!156533))

(declare-fun m!159237 () Bool)

(assert (=> b!134200 m!159237))

(assert (=> b!134205 m!156533))

(declare-fun m!159239 () Bool)

(assert (=> b!134205 m!159239))

(assert (=> b!134205 m!156647))

(assert (=> b!134205 m!156533))

(assert (=> b!134205 m!157219))

(assert (=> b!134205 m!156647))

(assert (=> b!134205 m!157221))

(assert (=> b!134205 m!157219))

(assert (=> bm!14808 m!159229))

(assert (=> b!134208 m!156533))

(assert (=> b!134208 m!156533))

(assert (=> b!134208 m!156557))

(declare-fun m!159241 () Bool)

(assert (=> b!134209 m!159241))

(assert (=> b!134207 m!156533))

(assert (=> b!134207 m!156533))

(declare-fun m!159243 () Bool)

(assert (=> b!134207 m!159243))

(assert (=> b!134211 m!156533))

(assert (=> b!134211 m!156533))

(assert (=> b!134211 m!156557))

(declare-fun m!159245 () Bool)

(assert (=> b!134202 m!159245))

(assert (=> b!133261 d!41119))

(declare-fun d!41121 () Bool)

(assert (=> d!41121 (= (apply!116 lt!69707 lt!69705) (get!1491 (getValueByKey!171 (toList!869 lt!69707) lt!69705)))))

(declare-fun bs!5584 () Bool)

(assert (= bs!5584 d!41121))

(declare-fun m!159247 () Bool)

(assert (=> bs!5584 m!159247))

(assert (=> bs!5584 m!159247))

(declare-fun m!159249 () Bool)

(assert (=> bs!5584 m!159249))

(assert (=> b!133261 d!41121))

(declare-fun d!41123 () Bool)

(declare-fun e!87423 () Bool)

(assert (=> d!41123 e!87423))

(declare-fun res!64551 () Bool)

(assert (=> d!41123 (=> (not res!64551) (not e!87423))))

(declare-fun lt!70303 () ListLongMap!1707)

(assert (=> d!41123 (= res!64551 (contains!896 lt!70303 (_1!1314 (tuple2!2609 lt!69714 (minValue!2720 newMap!16)))))))

(declare-fun lt!70305 () List!1735)

(assert (=> d!41123 (= lt!70303 (ListLongMap!1708 lt!70305))))

(declare-fun lt!70304 () Unit!4150)

(declare-fun lt!70302 () Unit!4150)

(assert (=> d!41123 (= lt!70304 lt!70302)))

(assert (=> d!41123 (= (getValueByKey!171 lt!70305 (_1!1314 (tuple2!2609 lt!69714 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69714 (minValue!2720 newMap!16)))))))

(assert (=> d!41123 (= lt!70302 (lemmaContainsTupThenGetReturnValue!88 lt!70305 (_1!1314 (tuple2!2609 lt!69714 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69714 (minValue!2720 newMap!16)))))))

(assert (=> d!41123 (= lt!70305 (insertStrictlySorted!90 (toList!869 lt!69712) (_1!1314 (tuple2!2609 lt!69714 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69714 (minValue!2720 newMap!16)))))))

(assert (=> d!41123 (= (+!170 lt!69712 (tuple2!2609 lt!69714 (minValue!2720 newMap!16))) lt!70303)))

(declare-fun b!134212 () Bool)

(declare-fun res!64550 () Bool)

(assert (=> b!134212 (=> (not res!64550) (not e!87423))))

(assert (=> b!134212 (= res!64550 (= (getValueByKey!171 (toList!869 lt!70303) (_1!1314 (tuple2!2609 lt!69714 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69714 (minValue!2720 newMap!16))))))))

(declare-fun b!134213 () Bool)

(assert (=> b!134213 (= e!87423 (contains!898 (toList!869 lt!70303) (tuple2!2609 lt!69714 (minValue!2720 newMap!16))))))

(assert (= (and d!41123 res!64551) b!134212))

(assert (= (and b!134212 res!64550) b!134213))

(declare-fun m!159251 () Bool)

(assert (=> d!41123 m!159251))

(declare-fun m!159253 () Bool)

(assert (=> d!41123 m!159253))

(declare-fun m!159255 () Bool)

(assert (=> d!41123 m!159255))

(declare-fun m!159257 () Bool)

(assert (=> d!41123 m!159257))

(declare-fun m!159259 () Bool)

(assert (=> b!134212 m!159259))

(declare-fun m!159261 () Bool)

(assert (=> b!134213 m!159261))

(assert (=> b!133261 d!41123))

(declare-fun d!41125 () Bool)

(assert (=> d!41125 (= (apply!116 lt!69711 lt!69710) (get!1491 (getValueByKey!171 (toList!869 lt!69711) lt!69710)))))

(declare-fun bs!5585 () Bool)

(assert (= bs!5585 d!41125))

(declare-fun m!159263 () Bool)

(assert (=> bs!5585 m!159263))

(assert (=> bs!5585 m!159263))

(declare-fun m!159265 () Bool)

(assert (=> bs!5585 m!159265))

(assert (=> b!133261 d!41125))

(declare-fun d!41127 () Bool)

(declare-fun e!87424 () Bool)

(assert (=> d!41127 e!87424))

(declare-fun res!64553 () Bool)

(assert (=> d!41127 (=> (not res!64553) (not e!87424))))

(declare-fun lt!70307 () ListLongMap!1707)

(assert (=> d!41127 (= res!64553 (contains!896 lt!70307 (_1!1314 (tuple2!2609 lt!69708 (minValue!2720 newMap!16)))))))

(declare-fun lt!70309 () List!1735)

(assert (=> d!41127 (= lt!70307 (ListLongMap!1708 lt!70309))))

(declare-fun lt!70308 () Unit!4150)

(declare-fun lt!70306 () Unit!4150)

(assert (=> d!41127 (= lt!70308 lt!70306)))

(assert (=> d!41127 (= (getValueByKey!171 lt!70309 (_1!1314 (tuple2!2609 lt!69708 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69708 (minValue!2720 newMap!16)))))))

(assert (=> d!41127 (= lt!70306 (lemmaContainsTupThenGetReturnValue!88 lt!70309 (_1!1314 (tuple2!2609 lt!69708 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69708 (minValue!2720 newMap!16)))))))

(assert (=> d!41127 (= lt!70309 (insertStrictlySorted!90 (toList!869 lt!69711) (_1!1314 (tuple2!2609 lt!69708 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69708 (minValue!2720 newMap!16)))))))

(assert (=> d!41127 (= (+!170 lt!69711 (tuple2!2609 lt!69708 (minValue!2720 newMap!16))) lt!70307)))

(declare-fun b!134214 () Bool)

(declare-fun res!64552 () Bool)

(assert (=> b!134214 (=> (not res!64552) (not e!87424))))

(assert (=> b!134214 (= res!64552 (= (getValueByKey!171 (toList!869 lt!70307) (_1!1314 (tuple2!2609 lt!69708 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69708 (minValue!2720 newMap!16))))))))

(declare-fun b!134215 () Bool)

(assert (=> b!134215 (= e!87424 (contains!898 (toList!869 lt!70307) (tuple2!2609 lt!69708 (minValue!2720 newMap!16))))))

(assert (= (and d!41127 res!64553) b!134214))

(assert (= (and b!134214 res!64552) b!134215))

(declare-fun m!159267 () Bool)

(assert (=> d!41127 m!159267))

(declare-fun m!159269 () Bool)

(assert (=> d!41127 m!159269))

(declare-fun m!159271 () Bool)

(assert (=> d!41127 m!159271))

(declare-fun m!159273 () Bool)

(assert (=> d!41127 m!159273))

(declare-fun m!159275 () Bool)

(assert (=> b!134214 m!159275))

(declare-fun m!159277 () Bool)

(assert (=> b!134215 m!159277))

(assert (=> b!133261 d!41127))

(declare-fun d!41129 () Bool)

(assert (=> d!41129 (= (apply!116 (+!170 lt!69707 (tuple2!2609 lt!69718 (zeroValue!2720 newMap!16))) lt!69705) (apply!116 lt!69707 lt!69705))))

(declare-fun lt!70310 () Unit!4150)

(assert (=> d!41129 (= lt!70310 (choose!828 lt!69707 lt!69718 (zeroValue!2720 newMap!16) lt!69705))))

(declare-fun e!87425 () Bool)

(assert (=> d!41129 e!87425))

(declare-fun res!64554 () Bool)

(assert (=> d!41129 (=> (not res!64554) (not e!87425))))

(assert (=> d!41129 (= res!64554 (contains!896 lt!69707 lt!69705))))

(assert (=> d!41129 (= (addApplyDifferent!92 lt!69707 lt!69718 (zeroValue!2720 newMap!16) lt!69705) lt!70310)))

(declare-fun b!134216 () Bool)

(assert (=> b!134216 (= e!87425 (not (= lt!69705 lt!69718)))))

(assert (= (and d!41129 res!64554) b!134216))

(assert (=> d!41129 m!157259))

(assert (=> d!41129 m!157229))

(assert (=> d!41129 m!157247))

(declare-fun m!159279 () Bool)

(assert (=> d!41129 m!159279))

(declare-fun m!159281 () Bool)

(assert (=> d!41129 m!159281))

(assert (=> d!41129 m!157229))

(assert (=> b!133261 d!41129))

(declare-fun d!41131 () Bool)

(assert (=> d!41131 (= (apply!116 lt!69712 lt!69700) (get!1491 (getValueByKey!171 (toList!869 lt!69712) lt!69700)))))

(declare-fun bs!5586 () Bool)

(assert (= bs!5586 d!41131))

(declare-fun m!159283 () Bool)

(assert (=> bs!5586 m!159283))

(assert (=> bs!5586 m!159283))

(declare-fun m!159285 () Bool)

(assert (=> bs!5586 m!159285))

(assert (=> b!133261 d!41131))

(declare-fun d!41133 () Bool)

(assert (=> d!41133 (= (apply!116 (+!170 lt!69711 (tuple2!2609 lt!69708 (minValue!2720 newMap!16))) lt!69710) (apply!116 lt!69711 lt!69710))))

(declare-fun lt!70311 () Unit!4150)

(assert (=> d!41133 (= lt!70311 (choose!828 lt!69711 lt!69708 (minValue!2720 newMap!16) lt!69710))))

(declare-fun e!87426 () Bool)

(assert (=> d!41133 e!87426))

(declare-fun res!64555 () Bool)

(assert (=> d!41133 (=> (not res!64555) (not e!87426))))

(assert (=> d!41133 (= res!64555 (contains!896 lt!69711 lt!69710))))

(assert (=> d!41133 (= (addApplyDifferent!92 lt!69711 lt!69708 (minValue!2720 newMap!16) lt!69710) lt!70311)))

(declare-fun b!134217 () Bool)

(assert (=> b!134217 (= e!87426 (not (= lt!69710 lt!69708)))))

(assert (= (and d!41133 res!64555) b!134217))

(assert (=> d!41133 m!157249))

(assert (=> d!41133 m!157233))

(assert (=> d!41133 m!157235))

(declare-fun m!159287 () Bool)

(assert (=> d!41133 m!159287))

(declare-fun m!159289 () Bool)

(assert (=> d!41133 m!159289))

(assert (=> d!41133 m!157233))

(assert (=> b!133261 d!41133))

(declare-fun d!41135 () Bool)

(declare-fun e!87427 () Bool)

(assert (=> d!41135 e!87427))

(declare-fun res!64556 () Bool)

(assert (=> d!41135 (=> res!64556 e!87427)))

(declare-fun lt!70312 () Bool)

(assert (=> d!41135 (= res!64556 (not lt!70312))))

(declare-fun lt!70314 () Bool)

(assert (=> d!41135 (= lt!70312 lt!70314)))

(declare-fun lt!70313 () Unit!4150)

(declare-fun e!87428 () Unit!4150)

(assert (=> d!41135 (= lt!70313 e!87428)))

(declare-fun c!24950 () Bool)

(assert (=> d!41135 (= c!24950 lt!70314)))

(assert (=> d!41135 (= lt!70314 (containsKey!175 (toList!869 (+!170 lt!69699 (tuple2!2609 lt!69702 (zeroValue!2720 newMap!16)))) lt!69709))))

(assert (=> d!41135 (= (contains!896 (+!170 lt!69699 (tuple2!2609 lt!69702 (zeroValue!2720 newMap!16))) lt!69709) lt!70312)))

(declare-fun b!134218 () Bool)

(declare-fun lt!70315 () Unit!4150)

(assert (=> b!134218 (= e!87428 lt!70315)))

(assert (=> b!134218 (= lt!70315 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69699 (tuple2!2609 lt!69702 (zeroValue!2720 newMap!16)))) lt!69709))))

(assert (=> b!134218 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69699 (tuple2!2609 lt!69702 (zeroValue!2720 newMap!16)))) lt!69709))))

(declare-fun b!134219 () Bool)

(declare-fun Unit!4214 () Unit!4150)

(assert (=> b!134219 (= e!87428 Unit!4214)))

(declare-fun b!134220 () Bool)

(assert (=> b!134220 (= e!87427 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69699 (tuple2!2609 lt!69702 (zeroValue!2720 newMap!16)))) lt!69709)))))

(assert (= (and d!41135 c!24950) b!134218))

(assert (= (and d!41135 (not c!24950)) b!134219))

(assert (= (and d!41135 (not res!64556)) b!134220))

(declare-fun m!159291 () Bool)

(assert (=> d!41135 m!159291))

(declare-fun m!159293 () Bool)

(assert (=> b!134218 m!159293))

(declare-fun m!159295 () Bool)

(assert (=> b!134218 m!159295))

(assert (=> b!134218 m!159295))

(declare-fun m!159297 () Bool)

(assert (=> b!134218 m!159297))

(assert (=> b!134220 m!159295))

(assert (=> b!134220 m!159295))

(assert (=> b!134220 m!159297))

(assert (=> b!133261 d!41135))

(declare-fun d!41137 () Bool)

(declare-fun e!87429 () Bool)

(assert (=> d!41137 e!87429))

(declare-fun res!64558 () Bool)

(assert (=> d!41137 (=> (not res!64558) (not e!87429))))

(declare-fun lt!70317 () ListLongMap!1707)

(assert (=> d!41137 (= res!64558 (contains!896 lt!70317 (_1!1314 (tuple2!2609 lt!69702 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70319 () List!1735)

(assert (=> d!41137 (= lt!70317 (ListLongMap!1708 lt!70319))))

(declare-fun lt!70318 () Unit!4150)

(declare-fun lt!70316 () Unit!4150)

(assert (=> d!41137 (= lt!70318 lt!70316)))

(assert (=> d!41137 (= (getValueByKey!171 lt!70319 (_1!1314 (tuple2!2609 lt!69702 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69702 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41137 (= lt!70316 (lemmaContainsTupThenGetReturnValue!88 lt!70319 (_1!1314 (tuple2!2609 lt!69702 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69702 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41137 (= lt!70319 (insertStrictlySorted!90 (toList!869 lt!69699) (_1!1314 (tuple2!2609 lt!69702 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69702 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41137 (= (+!170 lt!69699 (tuple2!2609 lt!69702 (zeroValue!2720 newMap!16))) lt!70317)))

(declare-fun b!134221 () Bool)

(declare-fun res!64557 () Bool)

(assert (=> b!134221 (=> (not res!64557) (not e!87429))))

(assert (=> b!134221 (= res!64557 (= (getValueByKey!171 (toList!869 lt!70317) (_1!1314 (tuple2!2609 lt!69702 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69702 (zeroValue!2720 newMap!16))))))))

(declare-fun b!134222 () Bool)

(assert (=> b!134222 (= e!87429 (contains!898 (toList!869 lt!70317) (tuple2!2609 lt!69702 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41137 res!64558) b!134221))

(assert (= (and b!134221 res!64557) b!134222))

(declare-fun m!159299 () Bool)

(assert (=> d!41137 m!159299))

(declare-fun m!159301 () Bool)

(assert (=> d!41137 m!159301))

(declare-fun m!159303 () Bool)

(assert (=> d!41137 m!159303))

(declare-fun m!159305 () Bool)

(assert (=> d!41137 m!159305))

(declare-fun m!159307 () Bool)

(assert (=> b!134221 m!159307))

(declare-fun m!159309 () Bool)

(assert (=> b!134222 m!159309))

(assert (=> b!133261 d!41137))

(declare-fun d!41139 () Bool)

(declare-fun e!87430 () Bool)

(assert (=> d!41139 e!87430))

(declare-fun res!64560 () Bool)

(assert (=> d!41139 (=> (not res!64560) (not e!87430))))

(declare-fun lt!70321 () ListLongMap!1707)

(assert (=> d!41139 (= res!64560 (contains!896 lt!70321 (_1!1314 (tuple2!2609 lt!69718 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70323 () List!1735)

(assert (=> d!41139 (= lt!70321 (ListLongMap!1708 lt!70323))))

(declare-fun lt!70322 () Unit!4150)

(declare-fun lt!70320 () Unit!4150)

(assert (=> d!41139 (= lt!70322 lt!70320)))

(assert (=> d!41139 (= (getValueByKey!171 lt!70323 (_1!1314 (tuple2!2609 lt!69718 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69718 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41139 (= lt!70320 (lemmaContainsTupThenGetReturnValue!88 lt!70323 (_1!1314 (tuple2!2609 lt!69718 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69718 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41139 (= lt!70323 (insertStrictlySorted!90 (toList!869 lt!69707) (_1!1314 (tuple2!2609 lt!69718 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69718 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41139 (= (+!170 lt!69707 (tuple2!2609 lt!69718 (zeroValue!2720 newMap!16))) lt!70321)))

(declare-fun b!134223 () Bool)

(declare-fun res!64559 () Bool)

(assert (=> b!134223 (=> (not res!64559) (not e!87430))))

(assert (=> b!134223 (= res!64559 (= (getValueByKey!171 (toList!869 lt!70321) (_1!1314 (tuple2!2609 lt!69718 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69718 (zeroValue!2720 newMap!16))))))))

(declare-fun b!134224 () Bool)

(assert (=> b!134224 (= e!87430 (contains!898 (toList!869 lt!70321) (tuple2!2609 lt!69718 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41139 res!64560) b!134223))

(assert (= (and b!134223 res!64559) b!134224))

(declare-fun m!159311 () Bool)

(assert (=> d!41139 m!159311))

(declare-fun m!159313 () Bool)

(assert (=> d!41139 m!159313))

(declare-fun m!159315 () Bool)

(assert (=> d!41139 m!159315))

(declare-fun m!159317 () Bool)

(assert (=> d!41139 m!159317))

(declare-fun m!159319 () Bool)

(assert (=> b!134223 m!159319))

(declare-fun m!159321 () Bool)

(assert (=> b!134224 m!159321))

(assert (=> b!133261 d!41139))

(declare-fun d!41141 () Bool)

(assert (=> d!41141 (= (apply!116 (+!170 lt!69712 (tuple2!2609 lt!69714 (minValue!2720 newMap!16))) lt!69700) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69712 (tuple2!2609 lt!69714 (minValue!2720 newMap!16)))) lt!69700)))))

(declare-fun bs!5587 () Bool)

(assert (= bs!5587 d!41141))

(declare-fun m!159323 () Bool)

(assert (=> bs!5587 m!159323))

(assert (=> bs!5587 m!159323))

(declare-fun m!159325 () Bool)

(assert (=> bs!5587 m!159325))

(assert (=> b!133261 d!41141))

(declare-fun d!41143 () Bool)

(assert (=> d!41143 (= (apply!116 (+!170 lt!69711 (tuple2!2609 lt!69708 (minValue!2720 newMap!16))) lt!69710) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69711 (tuple2!2609 lt!69708 (minValue!2720 newMap!16)))) lt!69710)))))

(declare-fun bs!5588 () Bool)

(assert (= bs!5588 d!41143))

(declare-fun m!159327 () Bool)

(assert (=> bs!5588 m!159327))

(assert (=> bs!5588 m!159327))

(declare-fun m!159329 () Bool)

(assert (=> bs!5588 m!159329))

(assert (=> b!133261 d!41143))

(declare-fun lt!70324 () Bool)

(declare-fun d!41145 () Bool)

(assert (=> d!41145 (= lt!70324 (select (content!132 lt!69358) (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87432 () Bool)

(assert (=> d!41145 (= lt!70324 e!87432)))

(declare-fun res!64561 () Bool)

(assert (=> d!41145 (=> (not res!64561) (not e!87432))))

(assert (=> d!41145 (= res!64561 ((_ is Cons!1731) lt!69358))))

(assert (=> d!41145 (= (contains!898 lt!69358 (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70324)))

(declare-fun b!134225 () Bool)

(declare-fun e!87431 () Bool)

(assert (=> b!134225 (= e!87432 e!87431)))

(declare-fun res!64562 () Bool)

(assert (=> b!134225 (=> res!64562 e!87431)))

(assert (=> b!134225 (= res!64562 (= (h!2336 lt!69358) (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134226 () Bool)

(assert (=> b!134226 (= e!87431 (contains!898 (t!6198 lt!69358) (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41145 res!64561) b!134225))

(assert (= (and b!134225 (not res!64562)) b!134226))

(declare-fun m!159331 () Bool)

(assert (=> d!41145 m!159331))

(declare-fun m!159333 () Bool)

(assert (=> d!41145 m!159333))

(declare-fun m!159335 () Bool)

(assert (=> b!134226 m!159335))

(assert (=> b!133617 d!41145))

(declare-fun bm!14809 () Bool)

(declare-fun call!14812 () List!1735)

(declare-fun call!14813 () List!1735)

(assert (=> bm!14809 (= call!14812 call!14813)))

(declare-fun b!134227 () Bool)

(declare-fun e!87435 () Bool)

(declare-fun lt!70325 () List!1735)

(assert (=> b!134227 (= e!87435 (contains!898 lt!70325 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!134228 () Bool)

(declare-fun e!87437 () List!1735)

(assert (=> b!134228 (= e!87437 call!14813)))

(declare-fun b!134229 () Bool)

(declare-fun res!64563 () Bool)

(assert (=> b!134229 (=> (not res!64563) (not e!87435))))

(assert (=> b!134229 (= res!64563 (containsKey!175 lt!70325 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun e!87433 () List!1735)

(declare-fun b!134230 () Bool)

(assert (=> b!134230 (= e!87433 (insertStrictlySorted!90 (t!6198 (t!6198 (toList!869 lt!69225))) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!134231 () Bool)

(declare-fun e!87434 () List!1735)

(assert (=> b!134231 (= e!87434 call!14812)))

(declare-fun bm!14810 () Bool)

(declare-fun call!14814 () List!1735)

(assert (=> bm!14810 (= call!14813 call!14814)))

(declare-fun b!134233 () Bool)

(declare-fun c!24951 () Bool)

(declare-fun c!24953 () Bool)

(assert (=> b!134233 (= e!87433 (ite c!24953 (t!6198 (t!6198 (toList!869 lt!69225))) (ite c!24951 (Cons!1731 (h!2336 (t!6198 (toList!869 lt!69225))) (t!6198 (t!6198 (toList!869 lt!69225)))) Nil!1732)))))

(declare-fun b!134234 () Bool)

(declare-fun e!87436 () List!1735)

(assert (=> b!134234 (= e!87436 call!14814)))

(declare-fun b!134235 () Bool)

(assert (=> b!134235 (= c!24951 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69225))) (bvsgt (_1!1314 (h!2336 (t!6198 (toList!869 lt!69225)))) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> b!134235 (= e!87437 e!87434)))

(declare-fun d!41147 () Bool)

(assert (=> d!41147 e!87435))

(declare-fun res!64564 () Bool)

(assert (=> d!41147 (=> (not res!64564) (not e!87435))))

(assert (=> d!41147 (= res!64564 (isStrictlySorted!317 lt!70325))))

(assert (=> d!41147 (= lt!70325 e!87436)))

(declare-fun c!24952 () Bool)

(assert (=> d!41147 (= c!24952 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69225))) (bvslt (_1!1314 (h!2336 (t!6198 (toList!869 lt!69225)))) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!41147 (isStrictlySorted!317 (t!6198 (toList!869 lt!69225)))))

(assert (=> d!41147 (= (insertStrictlySorted!90 (t!6198 (toList!869 lt!69225)) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!70325)))

(declare-fun b!134232 () Bool)

(assert (=> b!134232 (= e!87436 e!87437)))

(assert (=> b!134232 (= c!24953 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69225))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69225)))) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!134236 () Bool)

(assert (=> b!134236 (= e!87434 call!14812)))

(declare-fun bm!14811 () Bool)

(assert (=> bm!14811 (= call!14814 ($colon$colon!91 e!87433 (ite c!24952 (h!2336 (t!6198 (toList!869 lt!69225))) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!24954 () Bool)

(assert (=> bm!14811 (= c!24954 c!24952)))

(assert (= (and d!41147 c!24952) b!134234))

(assert (= (and d!41147 (not c!24952)) b!134232))

(assert (= (and b!134232 c!24953) b!134228))

(assert (= (and b!134232 (not c!24953)) b!134235))

(assert (= (and b!134235 c!24951) b!134236))

(assert (= (and b!134235 (not c!24951)) b!134231))

(assert (= (or b!134236 b!134231) bm!14809))

(assert (= (or b!134228 bm!14809) bm!14810))

(assert (= (or b!134234 bm!14810) bm!14811))

(assert (= (and bm!14811 c!24954) b!134230))

(assert (= (and bm!14811 (not c!24954)) b!134233))

(assert (= (and d!41147 res!64564) b!134229))

(assert (= (and b!134229 res!64563) b!134227))

(declare-fun m!159337 () Bool)

(assert (=> b!134229 m!159337))

(declare-fun m!159339 () Bool)

(assert (=> b!134227 m!159339))

(declare-fun m!159341 () Bool)

(assert (=> d!41147 m!159341))

(declare-fun m!159343 () Bool)

(assert (=> d!41147 m!159343))

(declare-fun m!159345 () Bool)

(assert (=> bm!14811 m!159345))

(declare-fun m!159347 () Bool)

(assert (=> b!134230 m!159347))

(assert (=> b!133842 d!41147))

(declare-fun d!41149 () Bool)

(assert (=> d!41149 (= (get!1490 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133992 d!41149))

(declare-fun d!41151 () Bool)

(declare-fun res!64565 () Bool)

(declare-fun e!87438 () Bool)

(assert (=> d!41151 (=> res!64565 e!87438)))

(assert (=> d!41151 (= res!64565 (= (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!69620))))

(assert (=> d!41151 (= (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69620 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!87438)))

(declare-fun b!134237 () Bool)

(declare-fun e!87439 () Bool)

(assert (=> b!134237 (= e!87438 e!87439)))

(declare-fun res!64566 () Bool)

(assert (=> b!134237 (=> (not res!64566) (not e!87439))))

(assert (=> b!134237 (= res!64566 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!134238 () Bool)

(assert (=> b!134238 (= e!87439 (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69620 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!41151 (not res!64565)) b!134237))

(assert (= (and b!134237 res!64566) b!134238))

(assert (=> d!41151 m!157187))

(declare-fun m!159349 () Bool)

(assert (=> b!134238 m!159349))

(assert (=> b!133511 d!41151))

(declare-fun d!41153 () Bool)

(assert (=> d!41153 (= (apply!116 lt!69767 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!69767) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5589 () Bool)

(assert (= bs!5589 d!41153))

(declare-fun m!159351 () Bool)

(assert (=> bs!5589 m!159351))

(assert (=> bs!5589 m!159351))

(declare-fun m!159353 () Bool)

(assert (=> bs!5589 m!159353))

(assert (=> b!133342 d!41153))

(declare-fun b!134239 () Bool)

(declare-fun e!87441 () Bool)

(declare-fun call!14815 () Bool)

(assert (=> b!134239 (= e!87441 call!14815)))

(declare-fun b!134240 () Bool)

(declare-fun e!87442 () Bool)

(assert (=> b!134240 (= e!87441 e!87442)))

(declare-fun lt!70327 () (_ BitVec 64))

(assert (=> b!134240 (= lt!70327 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!70328 () Unit!4150)

(assert (=> b!134240 (= lt!70328 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (_2!1315 lt!69327)) lt!70327 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!134240 (arrayContainsKey!0 (_keys!4614 (_2!1315 lt!69327)) lt!70327 #b00000000000000000000000000000000)))

(declare-fun lt!70326 () Unit!4150)

(assert (=> b!134240 (= lt!70326 lt!70328)))

(declare-fun res!64567 () Bool)

(assert (=> b!134240 (= res!64567 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327))) (Found!285 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134240 (=> (not res!64567) (not e!87442))))

(declare-fun b!134241 () Bool)

(assert (=> b!134241 (= e!87442 call!14815)))

(declare-fun b!134242 () Bool)

(declare-fun e!87440 () Bool)

(assert (=> b!134242 (= e!87440 e!87441)))

(declare-fun c!24955 () Bool)

(assert (=> b!134242 (= c!24955 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!14812 () Bool)

(assert (=> bm!14812 (= call!14815 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4614 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327))))))

(declare-fun d!41155 () Bool)

(declare-fun res!64568 () Bool)

(assert (=> d!41155 (=> res!64568 e!87440)))

(assert (=> d!41155 (= res!64568 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(assert (=> d!41155 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4614 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327))) e!87440)))

(assert (= (and d!41155 (not res!64568)) b!134242))

(assert (= (and b!134242 c!24955) b!134240))

(assert (= (and b!134242 (not c!24955)) b!134239))

(assert (= (and b!134240 res!64567) b!134241))

(assert (= (or b!134241 b!134239) bm!14812))

(declare-fun m!159355 () Bool)

(assert (=> b!134240 m!159355))

(declare-fun m!159357 () Bool)

(assert (=> b!134240 m!159357))

(declare-fun m!159359 () Bool)

(assert (=> b!134240 m!159359))

(assert (=> b!134240 m!159355))

(declare-fun m!159361 () Bool)

(assert (=> b!134240 m!159361))

(assert (=> b!134242 m!159355))

(assert (=> b!134242 m!159355))

(declare-fun m!159363 () Bool)

(assert (=> b!134242 m!159363))

(declare-fun m!159365 () Bool)

(assert (=> bm!14812 m!159365))

(assert (=> bm!14757 d!41155))

(declare-fun d!41157 () Bool)

(declare-fun res!64569 () Bool)

(declare-fun e!87443 () Bool)

(assert (=> d!41157 (=> res!64569 e!87443)))

(assert (=> d!41157 (= res!64569 (and ((_ is Cons!1731) (toList!869 lt!69449)) (= (_1!1314 (h!2336 (toList!869 lt!69449))) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!41157 (= (containsKey!175 (toList!869 lt!69449) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!87443)))

(declare-fun b!134243 () Bool)

(declare-fun e!87444 () Bool)

(assert (=> b!134243 (= e!87443 e!87444)))

(declare-fun res!64570 () Bool)

(assert (=> b!134243 (=> (not res!64570) (not e!87444))))

(assert (=> b!134243 (= res!64570 (and (or (not ((_ is Cons!1731) (toList!869 lt!69449))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69449))) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) ((_ is Cons!1731) (toList!869 lt!69449)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69449))) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!134244 () Bool)

(assert (=> b!134244 (= e!87444 (containsKey!175 (t!6198 (toList!869 lt!69449)) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!41157 (not res!64569)) b!134243))

(assert (= (and b!134243 res!64570) b!134244))

(declare-fun m!159367 () Bool)

(assert (=> b!134244 m!159367))

(assert (=> d!40843 d!41157))

(declare-fun d!41159 () Bool)

(declare-fun e!87445 () Bool)

(assert (=> d!41159 e!87445))

(declare-fun res!64571 () Bool)

(assert (=> d!41159 (=> res!64571 e!87445)))

(declare-fun lt!70329 () Bool)

(assert (=> d!41159 (= res!64571 (not lt!70329))))

(declare-fun lt!70331 () Bool)

(assert (=> d!41159 (= lt!70329 lt!70331)))

(declare-fun lt!70330 () Unit!4150)

(declare-fun e!87446 () Unit!4150)

(assert (=> d!41159 (= lt!70330 e!87446)))

(declare-fun c!24956 () Bool)

(assert (=> d!41159 (= c!24956 lt!70331)))

(assert (=> d!41159 (= lt!70331 (containsKey!175 (toList!869 lt!69425) lt!69413))))

(assert (=> d!41159 (= (contains!896 lt!69425 lt!69413) lt!70329)))

(declare-fun b!134245 () Bool)

(declare-fun lt!70332 () Unit!4150)

(assert (=> b!134245 (= e!87446 lt!70332)))

(assert (=> b!134245 (= lt!70332 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69425) lt!69413))))

(assert (=> b!134245 (isDefined!125 (getValueByKey!171 (toList!869 lt!69425) lt!69413))))

(declare-fun b!134246 () Bool)

(declare-fun Unit!4215 () Unit!4150)

(assert (=> b!134246 (= e!87446 Unit!4215)))

(declare-fun b!134247 () Bool)

(assert (=> b!134247 (= e!87445 (isDefined!125 (getValueByKey!171 (toList!869 lt!69425) lt!69413)))))

(assert (= (and d!41159 c!24956) b!134245))

(assert (= (and d!41159 (not c!24956)) b!134246))

(assert (= (and d!41159 (not res!64571)) b!134247))

(declare-fun m!159369 () Bool)

(assert (=> d!41159 m!159369))

(declare-fun m!159371 () Bool)

(assert (=> b!134245 m!159371))

(assert (=> b!134245 m!157491))

(assert (=> b!134245 m!157491))

(declare-fun m!159373 () Bool)

(assert (=> b!134245 m!159373))

(assert (=> b!134247 m!157491))

(assert (=> b!134247 m!157491))

(assert (=> b!134247 m!159373))

(assert (=> d!40537 d!41159))

(declare-fun d!41161 () Bool)

(assert (=> d!41161 (= (apply!116 (+!170 lt!69425 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))) lt!69413) (apply!116 lt!69425 lt!69413))))

(assert (=> d!41161 true))

(declare-fun _$34!979 () Unit!4150)

(assert (=> d!41161 (= (choose!828 lt!69425 lt!69427 (minValue!2720 newMap!16) lt!69413) _$34!979)))

(declare-fun bs!5590 () Bool)

(assert (= bs!5590 d!41161))

(assert (=> bs!5590 m!156671))

(assert (=> bs!5590 m!156671))

(assert (=> bs!5590 m!156673))

(assert (=> bs!5590 m!156685))

(assert (=> d!40537 d!41161))

(assert (=> d!40537 d!40517))

(assert (=> d!40537 d!40521))

(assert (=> d!40537 d!40523))

(declare-fun e!87447 () Option!177)

(declare-fun b!134248 () Bool)

(assert (=> b!134248 (= e!87447 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))))

(declare-fun b!134251 () Bool)

(declare-fun e!87448 () Option!177)

(assert (=> b!134251 (= e!87448 None!175)))

(declare-fun b!134250 () Bool)

(assert (=> b!134250 (= e!87448 (getValueByKey!171 (t!6198 (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) lt!69227))))

(declare-fun b!134249 () Bool)

(assert (=> b!134249 (= e!87447 e!87448)))

(declare-fun c!24958 () Bool)

(assert (=> b!134249 (= c!24958 (and ((_ is Cons!1731) (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))) lt!69227))))))

(declare-fun c!24957 () Bool)

(declare-fun d!41163 () Bool)

(assert (=> d!41163 (= c!24957 (and ((_ is Cons!1731) (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) (= (_1!1314 (h!2336 (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))) lt!69227)))))

(assert (=> d!41163 (= (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!69227) e!87447)))

(assert (= (and d!41163 c!24957) b!134248))

(assert (= (and d!41163 (not c!24957)) b!134249))

(assert (= (and b!134249 c!24958) b!134250))

(assert (= (and b!134249 (not c!24958)) b!134251))

(declare-fun m!159375 () Bool)

(assert (=> b!134250 m!159375))

(assert (=> b!133324 d!41163))

(declare-fun d!41165 () Bool)

(assert (=> d!41165 (= (size!2533 (_2!1315 lt!69327)) (bvadd (_size!598 (_2!1315 lt!69327)) (bvsdiv (bvadd (extraKeys!2630 (_2!1315 lt!69327)) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!133303 d!41165))

(declare-fun d!41167 () Bool)

(assert (=> d!41167 (= (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (and (not (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133866 d!41167))

(declare-fun d!41169 () Bool)

(assert (=> d!41169 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69416) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69416) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5591 () Bool)

(assert (= bs!5591 d!41169))

(assert (=> bs!5591 m!157385))

(declare-fun m!159377 () Bool)

(assert (=> bs!5591 m!159377))

(assert (=> b!133654 d!41169))

(declare-fun b!134252 () Bool)

(declare-fun e!87449 () Option!177)

(assert (=> b!134252 (= e!87449 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69416)))))))

(declare-fun b!134255 () Bool)

(declare-fun e!87450 () Option!177)

(assert (=> b!134255 (= e!87450 None!175)))

(declare-fun b!134254 () Bool)

(assert (=> b!134254 (= e!87450 (getValueByKey!171 (t!6198 (toList!869 lt!69416)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134253 () Bool)

(assert (=> b!134253 (= e!87449 e!87450)))

(declare-fun c!24960 () Bool)

(assert (=> b!134253 (= c!24960 (and ((_ is Cons!1731) (toList!869 lt!69416)) (not (= (_1!1314 (h!2336 (toList!869 lt!69416))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!41171 () Bool)

(declare-fun c!24959 () Bool)

(assert (=> d!41171 (= c!24959 (and ((_ is Cons!1731) (toList!869 lt!69416)) (= (_1!1314 (h!2336 (toList!869 lt!69416))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41171 (= (getValueByKey!171 (toList!869 lt!69416) #b1000000000000000000000000000000000000000000000000000000000000000) e!87449)))

(assert (= (and d!41171 c!24959) b!134252))

(assert (= (and d!41171 (not c!24959)) b!134253))

(assert (= (and b!134253 c!24960) b!134254))

(assert (= (and b!134253 (not c!24960)) b!134255))

(declare-fun m!159379 () Bool)

(assert (=> b!134254 m!159379))

(assert (=> b!133654 d!41171))

(declare-fun d!41173 () Bool)

(declare-fun e!87451 () Bool)

(assert (=> d!41173 e!87451))

(declare-fun res!64572 () Bool)

(assert (=> d!41173 (=> res!64572 e!87451)))

(declare-fun lt!70333 () Bool)

(assert (=> d!41173 (= res!64572 (not lt!70333))))

(declare-fun lt!70335 () Bool)

(assert (=> d!41173 (= lt!70333 lt!70335)))

(declare-fun lt!70334 () Unit!4150)

(declare-fun e!87452 () Unit!4150)

(assert (=> d!41173 (= lt!70334 e!87452)))

(declare-fun c!24961 () Bool)

(assert (=> d!41173 (= c!24961 lt!70335)))

(assert (=> d!41173 (= lt!70335 (containsKey!175 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 lt!69595) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))))))

(assert (=> d!41173 (= (contains!896 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2260 lt!69595) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))) lt!70333)))

(declare-fun b!134256 () Bool)

(declare-fun lt!70336 () Unit!4150)

(assert (=> b!134256 (= e!87452 lt!70336)))

(assert (=> b!134256 (= lt!70336 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 lt!69595) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))))))

(assert (=> b!134256 (isDefined!125 (getValueByKey!171 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 lt!69595) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))))))

(declare-fun b!134257 () Bool)

(declare-fun Unit!4216 () Unit!4150)

(assert (=> b!134257 (= e!87452 Unit!4216)))

(declare-fun b!134258 () Bool)

(assert (=> b!134258 (= e!87451 (isDefined!125 (getValueByKey!171 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 lt!69595) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))))))))

(assert (= (and d!41173 c!24961) b!134256))

(assert (= (and d!41173 (not c!24961)) b!134257))

(assert (= (and d!41173 (not res!64572)) b!134258))

(assert (=> d!41173 m!158531))

(declare-fun m!159381 () Bool)

(assert (=> d!41173 m!159381))

(assert (=> b!134256 m!158531))

(declare-fun m!159383 () Bool)

(assert (=> b!134256 m!159383))

(assert (=> b!134256 m!158531))

(declare-fun m!159385 () Bool)

(assert (=> b!134256 m!159385))

(assert (=> b!134256 m!159385))

(declare-fun m!159387 () Bool)

(assert (=> b!134256 m!159387))

(assert (=> b!134258 m!158531))

(assert (=> b!134258 m!159385))

(assert (=> b!134258 m!159385))

(assert (=> b!134258 m!159387))

(assert (=> b!133882 d!41173))

(assert (=> b!133882 d!40891))

(declare-fun d!41175 () Bool)

(declare-fun res!64573 () Bool)

(declare-fun e!87453 () Bool)

(assert (=> d!41175 (=> res!64573 e!87453)))

(assert (=> d!41175 (= res!64573 (and ((_ is Cons!1731) (toList!869 lt!69510)) (= (_1!1314 (h!2336 (toList!869 lt!69510))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41175 (= (containsKey!175 (toList!869 lt!69510) #b0000000000000000000000000000000000000000000000000000000000000000) e!87453)))

(declare-fun b!134259 () Bool)

(declare-fun e!87454 () Bool)

(assert (=> b!134259 (= e!87453 e!87454)))

(declare-fun res!64574 () Bool)

(assert (=> b!134259 (=> (not res!64574) (not e!87454))))

(assert (=> b!134259 (= res!64574 (and (or (not ((_ is Cons!1731) (toList!869 lt!69510))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69510))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1731) (toList!869 lt!69510)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69510))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134260 () Bool)

(assert (=> b!134260 (= e!87454 (containsKey!175 (t!6198 (toList!869 lt!69510)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41175 (not res!64573)) b!134259))

(assert (= (and b!134259 res!64574) b!134260))

(declare-fun m!159389 () Bool)

(assert (=> b!134260 m!159389))

(assert (=> d!40699 d!41175))

(declare-fun b!134261 () Bool)

(declare-fun e!87456 () (_ BitVec 32))

(assert (=> b!134261 (= e!87456 #b00000000000000000000000000000000)))

(declare-fun d!41177 () Bool)

(declare-fun lt!70337 () (_ BitVec 32))

(assert (=> d!41177 (and (bvsge lt!70337 #b00000000000000000000000000000000) (bvsle lt!70337 (bvsub (size!2529 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> d!41177 (= lt!70337 e!87456)))

(declare-fun c!24963 () Bool)

(assert (=> d!41177 (= c!24963 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!41177 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2529 (_keys!4614 newMap!16)) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!41177 (= (arrayCountValidKeys!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))) lt!70337)))

(declare-fun b!134262 () Bool)

(declare-fun e!87455 () (_ BitVec 32))

(declare-fun call!14816 () (_ BitVec 32))

(assert (=> b!134262 (= e!87455 call!14816)))

(declare-fun b!134263 () Bool)

(assert (=> b!134263 (= e!87455 (bvadd #b00000000000000000000000000000001 call!14816))))

(declare-fun bm!14813 () Bool)

(assert (=> bm!14813 (= call!14816 (arrayCountValidKeys!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!134264 () Bool)

(assert (=> b!134264 (= e!87456 e!87455)))

(declare-fun c!24962 () Bool)

(assert (=> b!134264 (= c!24962 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!41177 c!24963) b!134261))

(assert (= (and d!41177 (not c!24963)) b!134264))

(assert (= (and b!134264 c!24962) b!134263))

(assert (= (and b!134264 (not c!24962)) b!134262))

(assert (= (or b!134263 b!134262) bm!14813))

(declare-fun m!159391 () Bool)

(assert (=> bm!14813 m!159391))

(declare-fun m!159393 () Bool)

(assert (=> b!134264 m!159393))

(assert (=> b!134264 m!159393))

(declare-fun m!159395 () Bool)

(assert (=> b!134264 m!159395))

(assert (=> bm!14795 d!41177))

(declare-fun b!134265 () Bool)

(declare-fun e!87457 () Option!177)

(assert (=> b!134265 (= e!87457 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 lt!69463))))))))

(declare-fun b!134268 () Bool)

(declare-fun e!87458 () Option!177)

(assert (=> b!134268 (= e!87458 None!175)))

(declare-fun b!134267 () Bool)

(assert (=> b!134267 (= e!87458 (getValueByKey!171 (t!6198 (t!6198 (toList!869 lt!69463))) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!134266 () Bool)

(assert (=> b!134266 (= e!87457 e!87458)))

(declare-fun c!24965 () Bool)

(assert (=> b!134266 (= c!24965 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69463))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69463)))) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!24964 () Bool)

(declare-fun d!41179 () Bool)

(assert (=> d!41179 (= c!24964 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69463))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69463)))) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!41179 (= (getValueByKey!171 (t!6198 (toList!869 lt!69463)) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!87457)))

(assert (= (and d!41179 c!24964) b!134265))

(assert (= (and d!41179 (not c!24964)) b!134266))

(assert (= (and b!134266 c!24965) b!134267))

(assert (= (and b!134266 (not c!24965)) b!134268))

(declare-fun m!159397 () Bool)

(assert (=> b!134267 m!159397))

(assert (=> b!133508 d!41179))

(declare-fun b!134269 () Bool)

(declare-fun lt!70338 () Unit!4150)

(declare-fun lt!70342 () Unit!4150)

(assert (=> b!134269 (= lt!70338 lt!70342)))

(declare-fun lt!70339 () ListLongMap!1707)

(declare-fun lt!70341 () V!3483)

(declare-fun lt!70340 () (_ BitVec 64))

(declare-fun lt!70343 () (_ BitVec 64))

(assert (=> b!134269 (not (contains!896 (+!170 lt!70339 (tuple2!2609 lt!70343 lt!70341)) lt!70340))))

(assert (=> b!134269 (= lt!70342 (addStillNotContains!63 lt!70339 lt!70343 lt!70341 lt!70340))))

(assert (=> b!134269 (= lt!70340 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134269 (= lt!70341 (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134269 (= lt!70343 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun call!14817 () ListLongMap!1707)

(assert (=> b!134269 (= lt!70339 call!14817)))

(declare-fun e!87465 () ListLongMap!1707)

(assert (=> b!134269 (= e!87465 (+!170 call!14817 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun lt!70344 () ListLongMap!1707)

(declare-fun b!134270 () Bool)

(declare-fun e!87462 () Bool)

(assert (=> b!134270 (= e!87462 (= lt!70344 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) (zeroValue!2720 newMap!16) (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!134271 () Bool)

(assert (=> b!134271 (= e!87462 (isEmpty!414 lt!70344))))

(declare-fun b!134272 () Bool)

(declare-fun e!87463 () ListLongMap!1707)

(assert (=> b!134272 (= e!87463 (ListLongMap!1708 Nil!1732))))

(declare-fun b!134273 () Bool)

(declare-fun e!87460 () Bool)

(declare-fun e!87461 () Bool)

(assert (=> b!134273 (= e!87460 e!87461)))

(declare-fun c!24969 () Bool)

(declare-fun e!87464 () Bool)

(assert (=> b!134273 (= c!24969 e!87464)))

(declare-fun res!64578 () Bool)

(assert (=> b!134273 (=> (not res!64578) (not e!87464))))

(assert (=> b!134273 (= res!64578 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!134274 () Bool)

(assert (=> b!134274 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> b!134274 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))))))))

(declare-fun e!87459 () Bool)

(assert (=> b!134274 (= e!87459 (= (apply!116 lt!70344 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134276 () Bool)

(assert (=> b!134276 (= e!87461 e!87459)))

(assert (=> b!134276 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun res!64577 () Bool)

(assert (=> b!134276 (= res!64577 (contains!896 lt!70344 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134276 (=> (not res!64577) (not e!87459))))

(declare-fun b!134277 () Bool)

(assert (=> b!134277 (= e!87463 e!87465)))

(declare-fun c!24966 () Bool)

(assert (=> b!134277 (= c!24966 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!134278 () Bool)

(declare-fun res!64576 () Bool)

(assert (=> b!134278 (=> (not res!64576) (not e!87460))))

(assert (=> b!134278 (= res!64576 (not (contains!896 lt!70344 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134279 () Bool)

(assert (=> b!134279 (= e!87461 e!87462)))

(declare-fun c!24968 () Bool)

(assert (=> b!134279 (= c!24968 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun bm!14814 () Bool)

(assert (=> bm!14814 (= call!14817 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) (zeroValue!2720 newMap!16) (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!134280 () Bool)

(assert (=> b!134280 (= e!87464 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134280 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!134275 () Bool)

(assert (=> b!134275 (= e!87465 call!14817)))

(declare-fun d!41181 () Bool)

(assert (=> d!41181 e!87460))

(declare-fun res!64575 () Bool)

(assert (=> d!41181 (=> (not res!64575) (not e!87460))))

(assert (=> d!41181 (= res!64575 (not (contains!896 lt!70344 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41181 (= lt!70344 e!87463)))

(declare-fun c!24967 () Bool)

(assert (=> d!41181 (= c!24967 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!41181 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41181 (= (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (ite c!24541 (ite c!24549 (extraKeys!2630 newMap!16) lt!69304) (extraKeys!2630 newMap!16)) (zeroValue!2720 newMap!16) (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)) lt!70344)))

(assert (= (and d!41181 c!24967) b!134272))

(assert (= (and d!41181 (not c!24967)) b!134277))

(assert (= (and b!134277 c!24966) b!134269))

(assert (= (and b!134277 (not c!24966)) b!134275))

(assert (= (or b!134269 b!134275) bm!14814))

(assert (= (and d!41181 res!64575) b!134278))

(assert (= (and b!134278 res!64576) b!134273))

(assert (= (and b!134273 res!64578) b!134280))

(assert (= (and b!134273 c!24969) b!134276))

(assert (= (and b!134273 (not c!24969)) b!134279))

(assert (= (and b!134276 res!64577) b!134274))

(assert (= (and b!134279 c!24968) b!134270))

(assert (= (and b!134279 (not c!24968)) b!134271))

(declare-fun b_lambda!6031 () Bool)

(assert (=> (not b_lambda!6031) (not b!134269)))

(assert (=> b!134269 t!6205))

(declare-fun b_and!8357 () Bool)

(assert (= b_and!8353 (and (=> t!6205 result!4009) b_and!8357)))

(assert (=> b!134269 t!6207))

(declare-fun b_and!8359 () Bool)

(assert (= b_and!8355 (and (=> t!6207 result!4011) b_and!8359)))

(declare-fun b_lambda!6033 () Bool)

(assert (=> (not b_lambda!6033) (not b!134274)))

(assert (=> b!134274 t!6205))

(declare-fun b_and!8361 () Bool)

(assert (= b_and!8357 (and (=> t!6205 result!4009) b_and!8361)))

(assert (=> b!134274 t!6207))

(declare-fun b_and!8363 () Bool)

(assert (= b_and!8359 (and (=> t!6207 result!4011) b_and!8363)))

(declare-fun m!159399 () Bool)

(assert (=> d!41181 m!159399))

(assert (=> d!41181 m!156571))

(declare-fun m!159401 () Bool)

(assert (=> b!134270 m!159401))

(declare-fun m!159403 () Bool)

(assert (=> b!134269 m!159403))

(declare-fun m!159405 () Bool)

(assert (=> b!134269 m!159405))

(assert (=> b!134269 m!159403))

(assert (=> b!134269 m!156647))

(declare-fun m!159407 () Bool)

(assert (=> b!134269 m!159407))

(assert (=> b!134269 m!156647))

(declare-fun m!159409 () Bool)

(assert (=> b!134269 m!159409))

(declare-fun m!159411 () Bool)

(assert (=> b!134269 m!159411))

(assert (=> b!134269 m!159407))

(assert (=> b!134269 m!157187))

(declare-fun m!159413 () Bool)

(assert (=> b!134269 m!159413))

(assert (=> b!134274 m!157187))

(declare-fun m!159415 () Bool)

(assert (=> b!134274 m!159415))

(assert (=> b!134274 m!156647))

(assert (=> b!134274 m!157187))

(assert (=> b!134274 m!159407))

(assert (=> b!134274 m!156647))

(assert (=> b!134274 m!159409))

(assert (=> b!134274 m!159407))

(assert (=> bm!14814 m!159401))

(assert (=> b!134277 m!157187))

(assert (=> b!134277 m!157187))

(assert (=> b!134277 m!157195))

(declare-fun m!159417 () Bool)

(assert (=> b!134278 m!159417))

(assert (=> b!134276 m!157187))

(assert (=> b!134276 m!157187))

(declare-fun m!159419 () Bool)

(assert (=> b!134276 m!159419))

(assert (=> b!134280 m!157187))

(assert (=> b!134280 m!157187))

(assert (=> b!134280 m!157195))

(declare-fun m!159421 () Bool)

(assert (=> b!134271 m!159421))

(assert (=> bm!14744 d!41181))

(declare-fun d!41183 () Bool)

(assert (=> d!41183 (= (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (and (not (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133911 d!41183))

(declare-fun d!41185 () Bool)

(assert (=> d!41185 (= (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69425 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))) lt!69413)) (v!3201 (getValueByKey!171 (toList!869 (+!170 lt!69425 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))) lt!69413)))))

(assert (=> d!40517 d!41185))

(declare-fun b!134281 () Bool)

(declare-fun e!87466 () Option!177)

(assert (=> b!134281 (= e!87466 (Some!176 (_2!1314 (h!2336 (toList!869 (+!170 lt!69425 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))))))))))

(declare-fun b!134284 () Bool)

(declare-fun e!87467 () Option!177)

(assert (=> b!134284 (= e!87467 None!175)))

(declare-fun b!134283 () Bool)

(assert (=> b!134283 (= e!87467 (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69425 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))))) lt!69413))))

(declare-fun b!134282 () Bool)

(assert (=> b!134282 (= e!87466 e!87467)))

(declare-fun c!24971 () Bool)

(assert (=> b!134282 (= c!24971 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69425 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))))) (not (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69425 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))) lt!69413))))))

(declare-fun c!24970 () Bool)

(declare-fun d!41187 () Bool)

(assert (=> d!41187 (= c!24970 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69425 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69425 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))) lt!69413)))))

(assert (=> d!41187 (= (getValueByKey!171 (toList!869 (+!170 lt!69425 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))) lt!69413) e!87466)))

(assert (= (and d!41187 c!24970) b!134281))

(assert (= (and d!41187 (not c!24970)) b!134282))

(assert (= (and b!134282 c!24971) b!134283))

(assert (= (and b!134282 (not c!24971)) b!134284))

(declare-fun m!159423 () Bool)

(assert (=> b!134283 m!159423))

(assert (=> d!40517 d!41187))

(declare-fun d!41189 () Bool)

(assert (=> d!41189 (= (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69492 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))) lt!69490)) (v!3201 (getValueByKey!171 (toList!869 (+!170 lt!69492 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))) lt!69490)))))

(assert (=> d!40591 d!41189))

(declare-fun e!87468 () Option!177)

(declare-fun b!134285 () Bool)

(assert (=> b!134285 (= e!87468 (Some!176 (_2!1314 (h!2336 (toList!869 (+!170 lt!69492 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))))))))))

(declare-fun b!134288 () Bool)

(declare-fun e!87469 () Option!177)

(assert (=> b!134288 (= e!87469 None!175)))

(declare-fun b!134287 () Bool)

(assert (=> b!134287 (= e!87469 (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69492 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))))) lt!69490))))

(declare-fun b!134286 () Bool)

(assert (=> b!134286 (= e!87468 e!87469)))

(declare-fun c!24973 () Bool)

(assert (=> b!134286 (= c!24973 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69492 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))))) (not (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69492 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))) lt!69490))))))

(declare-fun c!24972 () Bool)

(declare-fun d!41191 () Bool)

(assert (=> d!41191 (= c!24972 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69492 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69492 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))) lt!69490)))))

(assert (=> d!41191 (= (getValueByKey!171 (toList!869 (+!170 lt!69492 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))) lt!69490) e!87468)))

(assert (= (and d!41191 c!24972) b!134285))

(assert (= (and d!41191 (not c!24972)) b!134286))

(assert (= (and b!134286 c!24973) b!134287))

(assert (= (and b!134286 (not c!24973)) b!134288))

(declare-fun m!159425 () Bool)

(assert (=> b!134287 m!159425))

(assert (=> d!40591 d!41191))

(declare-fun lt!70345 () Bool)

(declare-fun d!41193 () Bool)

(assert (=> d!41193 (= lt!70345 (select (content!132 (toList!869 lt!69830)) (tuple2!2609 lt!69421 (minValue!2720 newMap!16))))))

(declare-fun e!87471 () Bool)

(assert (=> d!41193 (= lt!70345 e!87471)))

(declare-fun res!64579 () Bool)

(assert (=> d!41193 (=> (not res!64579) (not e!87471))))

(assert (=> d!41193 (= res!64579 ((_ is Cons!1731) (toList!869 lt!69830)))))

(assert (=> d!41193 (= (contains!898 (toList!869 lt!69830) (tuple2!2609 lt!69421 (minValue!2720 newMap!16))) lt!70345)))

(declare-fun b!134289 () Bool)

(declare-fun e!87470 () Bool)

(assert (=> b!134289 (= e!87471 e!87470)))

(declare-fun res!64580 () Bool)

(assert (=> b!134289 (=> res!64580 e!87470)))

(assert (=> b!134289 (= res!64580 (= (h!2336 (toList!869 lt!69830)) (tuple2!2609 lt!69421 (minValue!2720 newMap!16))))))

(declare-fun b!134290 () Bool)

(assert (=> b!134290 (= e!87470 (contains!898 (t!6198 (toList!869 lt!69830)) (tuple2!2609 lt!69421 (minValue!2720 newMap!16))))))

(assert (= (and d!41193 res!64579) b!134289))

(assert (= (and b!134289 (not res!64580)) b!134290))

(declare-fun m!159427 () Bool)

(assert (=> d!41193 m!159427))

(declare-fun m!159429 () Bool)

(assert (=> d!41193 m!159429))

(declare-fun m!159431 () Bool)

(assert (=> b!134290 m!159431))

(assert (=> b!133425 d!41193))

(declare-fun d!41195 () Bool)

(declare-fun res!64581 () Bool)

(declare-fun e!87472 () Bool)

(assert (=> d!41195 (=> res!64581 e!87472)))

(assert (=> d!41195 (= res!64581 (and ((_ is Cons!1731) (toList!869 lt!69416)) (= (_1!1314 (h!2336 (toList!869 lt!69416))) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!41195 (= (containsKey!175 (toList!869 lt!69416) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) e!87472)))

(declare-fun b!134291 () Bool)

(declare-fun e!87473 () Bool)

(assert (=> b!134291 (= e!87472 e!87473)))

(declare-fun res!64582 () Bool)

(assert (=> b!134291 (=> (not res!64582) (not e!87473))))

(assert (=> b!134291 (= res!64582 (and (or (not ((_ is Cons!1731) (toList!869 lt!69416))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69416))) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1731) (toList!869 lt!69416)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69416))) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!134292 () Bool)

(assert (=> b!134292 (= e!87473 (containsKey!175 (t!6198 (toList!869 lt!69416)) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41195 (not res!64581)) b!134291))

(assert (= (and b!134291 res!64582) b!134292))

(assert (=> b!134292 m!156533))

(declare-fun m!159433 () Bool)

(assert (=> b!134292 m!159433))

(assert (=> d!40731 d!41195))

(declare-fun d!41197 () Bool)

(assert (=> d!41197 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69459) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69459) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun bs!5592 () Bool)

(assert (= bs!5592 d!41197))

(assert (=> bs!5592 m!156773))

(declare-fun m!159435 () Bool)

(assert (=> bs!5592 m!159435))

(assert (=> b!133167 d!41197))

(assert (=> b!133167 d!40505))

(declare-fun d!41199 () Bool)

(assert (=> d!41199 (arrayContainsKey!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) lt!70092 #b00000000000000000000000000000000)))

(declare-fun lt!70346 () Unit!4150)

(assert (=> d!41199 (= lt!70346 (choose!13 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) lt!70092 #b00000000000000000000000000000000))))

(assert (=> d!41199 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!41199 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) lt!70092 #b00000000000000000000000000000000) lt!70346)))

(declare-fun bs!5593 () Bool)

(assert (= bs!5593 d!41199))

(assert (=> bs!5593 m!158523))

(declare-fun m!159437 () Bool)

(assert (=> bs!5593 m!159437))

(assert (=> b!133879 d!41199))

(declare-fun d!41201 () Bool)

(declare-fun res!64583 () Bool)

(declare-fun e!87474 () Bool)

(assert (=> d!41201 (=> res!64583 e!87474)))

(assert (=> d!41201 (= res!64583 (= (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000) lt!70092))))

(assert (=> d!41201 (= (arrayContainsKey!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) lt!70092 #b00000000000000000000000000000000) e!87474)))

(declare-fun b!134293 () Bool)

(declare-fun e!87475 () Bool)

(assert (=> b!134293 (= e!87474 e!87475)))

(declare-fun res!64584 () Bool)

(assert (=> b!134293 (=> (not res!64584) (not e!87475))))

(assert (=> b!134293 (= res!64584 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))))

(declare-fun b!134294 () Bool)

(assert (=> b!134294 (= e!87475 (arrayContainsKey!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) lt!70092 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!41201 (not res!64583)) b!134293))

(assert (= (and b!134293 res!64584) b!134294))

(assert (=> d!41201 m!158517))

(declare-fun m!159439 () Bool)

(assert (=> b!134294 m!159439))

(assert (=> b!133879 d!41201))

(declare-fun b!134295 () Bool)

(declare-fun e!87478 () SeekEntryResult!285)

(declare-fun lt!70348 () SeekEntryResult!285)

(assert (=> b!134295 (= e!87478 (MissingZero!285 (index!3302 lt!70348)))))

(declare-fun b!134296 () Bool)

(assert (=> b!134296 (= e!87478 (seekKeyOrZeroReturnVacant!0 (x!15602 lt!70348) (index!3302 lt!70348) (index!3302 lt!70348) (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000) (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (mask!7165 newMap!16)))))

(declare-fun b!134297 () Bool)

(declare-fun c!24974 () Bool)

(declare-fun lt!70349 () (_ BitVec 64))

(assert (=> b!134297 (= c!24974 (= lt!70349 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87477 () SeekEntryResult!285)

(assert (=> b!134297 (= e!87477 e!87478)))

(declare-fun b!134298 () Bool)

(declare-fun e!87476 () SeekEntryResult!285)

(assert (=> b!134298 (= e!87476 Undefined!285)))

(declare-fun b!134299 () Bool)

(assert (=> b!134299 (= e!87476 e!87477)))

(assert (=> b!134299 (= lt!70349 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) (index!3302 lt!70348)))))

(declare-fun c!24976 () Bool)

(assert (=> b!134299 (= c!24976 (= lt!70349 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!41203 () Bool)

(declare-fun lt!70347 () SeekEntryResult!285)

(assert (=> d!41203 (and (or ((_ is Undefined!285) lt!70347) (not ((_ is Found!285) lt!70347)) (and (bvsge (index!3301 lt!70347) #b00000000000000000000000000000000) (bvslt (index!3301 lt!70347) (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))) (or ((_ is Undefined!285) lt!70347) ((_ is Found!285) lt!70347) (not ((_ is MissingZero!285) lt!70347)) (and (bvsge (index!3300 lt!70347) #b00000000000000000000000000000000) (bvslt (index!3300 lt!70347) (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))) (or ((_ is Undefined!285) lt!70347) ((_ is Found!285) lt!70347) ((_ is MissingZero!285) lt!70347) (not ((_ is MissingVacant!285) lt!70347)) (and (bvsge (index!3303 lt!70347) #b00000000000000000000000000000000) (bvslt (index!3303 lt!70347) (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))) (or ((_ is Undefined!285) lt!70347) (ite ((_ is Found!285) lt!70347) (= (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) (index!3301 lt!70347)) (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!285) lt!70347) (= (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) (index!3300 lt!70347)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!285) lt!70347) (= (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) (index!3303 lt!70347)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41203 (= lt!70347 e!87476)))

(declare-fun c!24975 () Bool)

(assert (=> d!41203 (= c!24975 (and ((_ is Intermediate!285) lt!70348) (undefined!1097 lt!70348)))))

(assert (=> d!41203 (= lt!70348 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000) (mask!7165 newMap!16)) (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000) (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (mask!7165 newMap!16)))))

(assert (=> d!41203 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41203 (= (seekEntryOrOpen!0 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000) (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (mask!7165 newMap!16)) lt!70347)))

(declare-fun b!134300 () Bool)

(assert (=> b!134300 (= e!87477 (Found!285 (index!3302 lt!70348)))))

(assert (= (and d!41203 c!24975) b!134298))

(assert (= (and d!41203 (not c!24975)) b!134299))

(assert (= (and b!134299 c!24976) b!134300))

(assert (= (and b!134299 (not c!24976)) b!134297))

(assert (= (and b!134297 c!24974) b!134295))

(assert (= (and b!134297 (not c!24974)) b!134296))

(assert (=> b!134296 m!158517))

(declare-fun m!159441 () Bool)

(assert (=> b!134296 m!159441))

(declare-fun m!159443 () Bool)

(assert (=> b!134299 m!159443))

(declare-fun m!159445 () Bool)

(assert (=> d!41203 m!159445))

(assert (=> d!41203 m!158517))

(declare-fun m!159447 () Bool)

(assert (=> d!41203 m!159447))

(declare-fun m!159449 () Bool)

(assert (=> d!41203 m!159449))

(declare-fun m!159451 () Bool)

(assert (=> d!41203 m!159451))

(assert (=> d!41203 m!156571))

(declare-fun m!159453 () Bool)

(assert (=> d!41203 m!159453))

(assert (=> d!41203 m!158517))

(assert (=> d!41203 m!159445))

(assert (=> b!133879 d!41203))

(assert (=> b!133302 d!41165))

(assert (=> d!40789 d!40787))

(assert (=> d!40789 d!40795))

(declare-fun d!41205 () Bool)

(assert (=> d!41205 (contains!896 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!69516)))

(assert (=> d!41205 true))

(declare-fun _$35!381 () Unit!4150)

(assert (=> d!41205 (= (choose!829 lt!69506 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) lt!69516) _$35!381)))

(declare-fun bs!5594 () Bool)

(assert (= bs!5594 d!41205))

(assert (=> bs!5594 m!156917))

(assert (=> bs!5594 m!156917))

(assert (=> bs!5594 m!156933))

(assert (=> d!40789 d!41205))

(declare-fun d!41207 () Bool)

(declare-fun e!87479 () Bool)

(assert (=> d!41207 e!87479))

(declare-fun res!64585 () Bool)

(assert (=> d!41207 (=> res!64585 e!87479)))

(declare-fun lt!70350 () Bool)

(assert (=> d!41207 (= res!64585 (not lt!70350))))

(declare-fun lt!70352 () Bool)

(assert (=> d!41207 (= lt!70350 lt!70352)))

(declare-fun lt!70351 () Unit!4150)

(declare-fun e!87480 () Unit!4150)

(assert (=> d!41207 (= lt!70351 e!87480)))

(declare-fun c!24977 () Bool)

(assert (=> d!41207 (= c!24977 lt!70352)))

(assert (=> d!41207 (= lt!70352 (containsKey!175 (toList!869 lt!69506) lt!69516))))

(assert (=> d!41207 (= (contains!896 lt!69506 lt!69516) lt!70350)))

(declare-fun b!134301 () Bool)

(declare-fun lt!70353 () Unit!4150)

(assert (=> b!134301 (= e!87480 lt!70353)))

(assert (=> b!134301 (= lt!70353 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69506) lt!69516))))

(assert (=> b!134301 (isDefined!125 (getValueByKey!171 (toList!869 lt!69506) lt!69516))))

(declare-fun b!134302 () Bool)

(declare-fun Unit!4217 () Unit!4150)

(assert (=> b!134302 (= e!87480 Unit!4217)))

(declare-fun b!134303 () Bool)

(assert (=> b!134303 (= e!87479 (isDefined!125 (getValueByKey!171 (toList!869 lt!69506) lt!69516)))))

(assert (= (and d!41207 c!24977) b!134301))

(assert (= (and d!41207 (not c!24977)) b!134302))

(assert (= (and d!41207 (not res!64585)) b!134303))

(declare-fun m!159455 () Bool)

(assert (=> d!41207 m!159455))

(declare-fun m!159457 () Bool)

(assert (=> b!134301 m!159457))

(declare-fun m!159459 () Bool)

(assert (=> b!134301 m!159459))

(assert (=> b!134301 m!159459))

(declare-fun m!159461 () Bool)

(assert (=> b!134301 m!159461))

(assert (=> b!134303 m!159459))

(assert (=> b!134303 m!159459))

(assert (=> b!134303 m!159461))

(assert (=> d!40789 d!41207))

(declare-fun d!41209 () Bool)

(assert (=> d!41209 (= (+!170 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!540 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(assert (=> d!41209 true))

(declare-fun _$3!46 () Unit!4150)

(assert (=> d!41209 (= (choose!837 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)) _$3!46)))

(declare-fun bs!5595 () Bool)

(assert (= bs!5595 d!41209))

(assert (=> bs!5595 m!156955))

(assert (=> bs!5595 m!156355))

(assert (=> bs!5595 m!156355))

(assert (=> bs!5595 m!156961))

(assert (=> bs!5595 m!156969))

(assert (=> bs!5595 m!156987))

(assert (=> d!40883 d!41209))

(assert (=> d!40883 d!40475))

(declare-fun d!41211 () Bool)

(declare-fun e!87481 () Bool)

(assert (=> d!41211 e!87481))

(declare-fun res!64586 () Bool)

(assert (=> d!41211 (=> res!64586 e!87481)))

(declare-fun lt!70354 () Bool)

(assert (=> d!41211 (= res!64586 (not lt!70354))))

(declare-fun lt!70356 () Bool)

(assert (=> d!41211 (= lt!70354 lt!70356)))

(declare-fun lt!70355 () Unit!4150)

(declare-fun e!87482 () Unit!4150)

(assert (=> d!41211 (= lt!70355 e!87482)))

(declare-fun c!24978 () Bool)

(assert (=> d!41211 (= c!24978 lt!70356)))

(assert (=> d!41211 (= lt!70356 (containsKey!175 (toList!869 lt!69497) lt!69485))))

(assert (=> d!41211 (= (contains!896 lt!69497 lt!69485) lt!70354)))

(declare-fun b!134304 () Bool)

(declare-fun lt!70357 () Unit!4150)

(assert (=> b!134304 (= e!87482 lt!70357)))

(assert (=> b!134304 (= lt!70357 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69497) lt!69485))))

(assert (=> b!134304 (isDefined!125 (getValueByKey!171 (toList!869 lt!69497) lt!69485))))

(declare-fun b!134305 () Bool)

(declare-fun Unit!4218 () Unit!4150)

(assert (=> b!134305 (= e!87482 Unit!4218)))

(declare-fun b!134306 () Bool)

(assert (=> b!134306 (= e!87481 (isDefined!125 (getValueByKey!171 (toList!869 lt!69497) lt!69485)))))

(assert (= (and d!41211 c!24978) b!134304))

(assert (= (and d!41211 (not c!24978)) b!134305))

(assert (= (and d!41211 (not res!64586)) b!134306))

(declare-fun m!159463 () Bool)

(assert (=> d!41211 m!159463))

(declare-fun m!159465 () Bool)

(assert (=> b!134304 m!159465))

(assert (=> b!134304 m!157813))

(assert (=> b!134304 m!157813))

(declare-fun m!159467 () Bool)

(assert (=> b!134304 m!159467))

(assert (=> b!134306 m!157813))

(assert (=> b!134306 m!157813))

(assert (=> b!134306 m!159467))

(assert (=> d!40595 d!41211))

(assert (=> d!40595 d!40569))

(assert (=> d!40595 d!40587))

(assert (=> d!40595 d!40575))

(declare-fun d!41213 () Bool)

(assert (=> d!41213 (= (apply!116 (+!170 lt!69497 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69485) (apply!116 lt!69497 lt!69485))))

(assert (=> d!41213 true))

(declare-fun _$34!980 () Unit!4150)

(assert (=> d!41213 (= (choose!828 lt!69497 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) lt!69485) _$34!980)))

(declare-fun bs!5596 () Bool)

(assert (= bs!5596 d!41213))

(assert (=> bs!5596 m!156869))

(assert (=> bs!5596 m!156869))

(assert (=> bs!5596 m!156871))

(assert (=> bs!5596 m!156883))

(assert (=> d!40595 d!41213))

(declare-fun b!134307 () Bool)

(declare-fun e!87483 () Option!177)

(assert (=> b!134307 (= e!87483 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 e!86545))))))))

(declare-fun b!134310 () Bool)

(declare-fun e!87484 () Option!177)

(assert (=> b!134310 (= e!87484 None!175)))

(declare-fun b!134309 () Bool)

(assert (=> b!134309 (= e!87484 (getValueByKey!171 (t!6198 (t!6198 (toList!869 e!86545))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!134308 () Bool)

(assert (=> b!134308 (= e!87483 e!87484)))

(declare-fun c!24980 () Bool)

(assert (=> b!134308 (= c!24980 (and ((_ is Cons!1731) (t!6198 (toList!869 e!86545))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 e!86545)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun d!41215 () Bool)

(declare-fun c!24979 () Bool)

(assert (=> d!41215 (= c!24979 (and ((_ is Cons!1731) (t!6198 (toList!869 e!86545))) (= (_1!1314 (h!2336 (t!6198 (toList!869 e!86545)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!41215 (= (getValueByKey!171 (t!6198 (toList!869 e!86545)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) e!87483)))

(assert (= (and d!41215 c!24979) b!134307))

(assert (= (and d!41215 (not c!24979)) b!134308))

(assert (= (and b!134308 c!24980) b!134309))

(assert (= (and b!134308 (not c!24980)) b!134310))

(assert (=> b!134309 m!156287))

(declare-fun m!159469 () Bool)

(assert (=> b!134309 m!159469))

(assert (=> b!133242 d!41215))

(declare-fun d!41217 () Bool)

(declare-fun e!87485 () Bool)

(assert (=> d!41217 e!87485))

(declare-fun res!64587 () Bool)

(assert (=> d!41217 (=> res!64587 e!87485)))

(declare-fun lt!70358 () Bool)

(assert (=> d!41217 (= res!64587 (not lt!70358))))

(declare-fun lt!70360 () Bool)

(assert (=> d!41217 (= lt!70358 lt!70360)))

(declare-fun lt!70359 () Unit!4150)

(declare-fun e!87486 () Unit!4150)

(assert (=> d!41217 (= lt!70359 e!87486)))

(declare-fun c!24981 () Bool)

(assert (=> d!41217 (= c!24981 lt!70360)))

(assert (=> d!41217 (= lt!70360 (containsKey!175 (toList!869 lt!69822) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41217 (= (contains!896 lt!69822 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70358)))

(declare-fun b!134311 () Bool)

(declare-fun lt!70361 () Unit!4150)

(assert (=> b!134311 (= e!87486 lt!70361)))

(assert (=> b!134311 (= lt!70361 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69822) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134311 (isDefined!125 (getValueByKey!171 (toList!869 lt!69822) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134312 () Bool)

(declare-fun Unit!4219 () Unit!4150)

(assert (=> b!134312 (= e!87486 Unit!4219)))

(declare-fun b!134313 () Bool)

(assert (=> b!134313 (= e!87485 (isDefined!125 (getValueByKey!171 (toList!869 lt!69822) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41217 c!24981) b!134311))

(assert (= (and d!41217 (not c!24981)) b!134312))

(assert (= (and d!41217 (not res!64587)) b!134313))

(declare-fun m!159471 () Bool)

(assert (=> d!41217 m!159471))

(declare-fun m!159473 () Bool)

(assert (=> b!134311 m!159473))

(declare-fun m!159475 () Bool)

(assert (=> b!134311 m!159475))

(assert (=> b!134311 m!159475))

(declare-fun m!159477 () Bool)

(assert (=> b!134311 m!159477))

(assert (=> b!134313 m!159475))

(assert (=> b!134313 m!159475))

(assert (=> b!134313 m!159477))

(assert (=> d!40531 d!41217))

(assert (=> d!40531 d!40475))

(declare-fun d!41219 () Bool)

(assert (=> d!41219 (arrayContainsKey!0 (_keys!4614 (_2!1315 lt!69327)) lt!70003 #b00000000000000000000000000000000)))

(declare-fun lt!70362 () Unit!4150)

(assert (=> d!41219 (= lt!70362 (choose!13 (_keys!4614 (_2!1315 lt!69327)) lt!70003 #b00000000000000000000000000000000))))

(assert (=> d!41219 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!41219 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (_2!1315 lt!69327)) lt!70003 #b00000000000000000000000000000000) lt!70362)))

(declare-fun bs!5597 () Bool)

(assert (= bs!5597 d!41219))

(assert (=> bs!5597 m!158185))

(declare-fun m!159479 () Bool)

(assert (=> bs!5597 m!159479))

(assert (=> b!133694 d!41219))

(declare-fun d!41221 () Bool)

(declare-fun res!64588 () Bool)

(declare-fun e!87487 () Bool)

(assert (=> d!41221 (=> res!64588 e!87487)))

(assert (=> d!41221 (= res!64588 (= (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000) lt!70003))))

(assert (=> d!41221 (= (arrayContainsKey!0 (_keys!4614 (_2!1315 lt!69327)) lt!70003 #b00000000000000000000000000000000) e!87487)))

(declare-fun b!134314 () Bool)

(declare-fun e!87488 () Bool)

(assert (=> b!134314 (= e!87487 e!87488)))

(declare-fun res!64589 () Bool)

(assert (=> b!134314 (=> (not res!64589) (not e!87488))))

(assert (=> b!134314 (= res!64589 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(declare-fun b!134315 () Bool)

(assert (=> b!134315 (= e!87488 (arrayContainsKey!0 (_keys!4614 (_2!1315 lt!69327)) lt!70003 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!41221 (not res!64588)) b!134314))

(assert (= (and b!134314 res!64589) b!134315))

(assert (=> d!41221 m!157397))

(declare-fun m!159481 () Bool)

(assert (=> b!134315 m!159481))

(assert (=> b!133694 d!41221))

(declare-fun b!134316 () Bool)

(declare-fun e!87491 () SeekEntryResult!285)

(declare-fun lt!70364 () SeekEntryResult!285)

(assert (=> b!134316 (= e!87491 (MissingZero!285 (index!3302 lt!70364)))))

(declare-fun b!134317 () Bool)

(assert (=> b!134317 (= e!87491 (seekKeyOrZeroReturnVacant!0 (x!15602 lt!70364) (index!3302 lt!70364) (index!3302 lt!70364) (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000) (_keys!4614 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327))))))

(declare-fun b!134318 () Bool)

(declare-fun c!24982 () Bool)

(declare-fun lt!70365 () (_ BitVec 64))

(assert (=> b!134318 (= c!24982 (= lt!70365 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87490 () SeekEntryResult!285)

(assert (=> b!134318 (= e!87490 e!87491)))

(declare-fun b!134319 () Bool)

(declare-fun e!87489 () SeekEntryResult!285)

(assert (=> b!134319 (= e!87489 Undefined!285)))

(declare-fun b!134320 () Bool)

(assert (=> b!134320 (= e!87489 e!87490)))

(assert (=> b!134320 (= lt!70365 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) (index!3302 lt!70364)))))

(declare-fun c!24984 () Bool)

(assert (=> b!134320 (= c!24984 (= lt!70365 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(declare-fun d!41223 () Bool)

(declare-fun lt!70363 () SeekEntryResult!285)

(assert (=> d!41223 (and (or ((_ is Undefined!285) lt!70363) (not ((_ is Found!285) lt!70363)) (and (bvsge (index!3301 lt!70363) #b00000000000000000000000000000000) (bvslt (index!3301 lt!70363) (size!2529 (_keys!4614 (_2!1315 lt!69327)))))) (or ((_ is Undefined!285) lt!70363) ((_ is Found!285) lt!70363) (not ((_ is MissingZero!285) lt!70363)) (and (bvsge (index!3300 lt!70363) #b00000000000000000000000000000000) (bvslt (index!3300 lt!70363) (size!2529 (_keys!4614 (_2!1315 lt!69327)))))) (or ((_ is Undefined!285) lt!70363) ((_ is Found!285) lt!70363) ((_ is MissingZero!285) lt!70363) (not ((_ is MissingVacant!285) lt!70363)) (and (bvsge (index!3303 lt!70363) #b00000000000000000000000000000000) (bvslt (index!3303 lt!70363) (size!2529 (_keys!4614 (_2!1315 lt!69327)))))) (or ((_ is Undefined!285) lt!70363) (ite ((_ is Found!285) lt!70363) (= (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) (index!3301 lt!70363)) (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!285) lt!70363) (= (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) (index!3300 lt!70363)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!285) lt!70363) (= (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) (index!3303 lt!70363)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41223 (= lt!70363 e!87489)))

(declare-fun c!24983 () Bool)

(assert (=> d!41223 (= c!24983 (and ((_ is Intermediate!285) lt!70364) (undefined!1097 lt!70364)))))

(assert (=> d!41223 (= lt!70364 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000) (mask!7165 (_2!1315 lt!69327))) (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000) (_keys!4614 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327))))))

(assert (=> d!41223 (validMask!0 (mask!7165 (_2!1315 lt!69327)))))

(assert (=> d!41223 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000) (_keys!4614 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327))) lt!70363)))

(declare-fun b!134321 () Bool)

(assert (=> b!134321 (= e!87490 (Found!285 (index!3302 lt!70364)))))

(assert (= (and d!41223 c!24983) b!134319))

(assert (= (and d!41223 (not c!24983)) b!134320))

(assert (= (and b!134320 c!24984) b!134321))

(assert (= (and b!134320 (not c!24984)) b!134318))

(assert (= (and b!134318 c!24982) b!134316))

(assert (= (and b!134318 (not c!24982)) b!134317))

(assert (=> b!134317 m!157397))

(declare-fun m!159483 () Bool)

(assert (=> b!134317 m!159483))

(declare-fun m!159485 () Bool)

(assert (=> b!134320 m!159485))

(declare-fun m!159487 () Bool)

(assert (=> d!41223 m!159487))

(assert (=> d!41223 m!157397))

(declare-fun m!159489 () Bool)

(assert (=> d!41223 m!159489))

(declare-fun m!159491 () Bool)

(assert (=> d!41223 m!159491))

(declare-fun m!159493 () Bool)

(assert (=> d!41223 m!159493))

(assert (=> d!41223 m!157363))

(declare-fun m!159495 () Bool)

(assert (=> d!41223 m!159495))

(assert (=> d!41223 m!157397))

(assert (=> d!41223 m!159487))

(assert (=> b!133694 d!41223))

(declare-fun d!41225 () Bool)

(assert (=> d!41225 (= (isEmpty!414 lt!69760) (isEmpty!416 (toList!869 lt!69760)))))

(declare-fun bs!5598 () Bool)

(assert (= bs!5598 d!41225))

(declare-fun m!159497 () Bool)

(assert (=> bs!5598 m!159497))

(assert (=> b!133307 d!41225))

(declare-fun d!41227 () Bool)

(declare-fun res!64590 () Bool)

(declare-fun e!87492 () Bool)

(assert (=> d!41227 (=> res!64590 e!87492)))

(assert (=> d!41227 (= res!64590 (and ((_ is Cons!1731) (toList!869 lt!69405)) (= (_1!1314 (h!2336 (toList!869 lt!69405))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!41227 (= (containsKey!175 (toList!869 lt!69405) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!87492)))

(declare-fun b!134322 () Bool)

(declare-fun e!87493 () Bool)

(assert (=> b!134322 (= e!87492 e!87493)))

(declare-fun res!64591 () Bool)

(assert (=> b!134322 (=> (not res!64591) (not e!87493))))

(assert (=> b!134322 (= res!64591 (and (or (not ((_ is Cons!1731) (toList!869 lt!69405))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69405))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1731) (toList!869 lt!69405)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69405))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!134323 () Bool)

(assert (=> b!134323 (= e!87493 (containsKey!175 (t!6198 (toList!869 lt!69405)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!41227 (not res!64590)) b!134322))

(assert (= (and b!134322 res!64591) b!134323))

(assert (=> b!134323 m!156357))

(declare-fun m!159499 () Bool)

(assert (=> b!134323 m!159499))

(assert (=> d!40659 d!41227))

(declare-fun d!41229 () Bool)

(assert (=> d!41229 (= ($colon$colon!91 e!87015 (ite c!24754 (h!2336 (toList!869 lt!69230)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) (Cons!1731 (ite c!24754 (h!2336 (toList!869 lt!69230)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) e!87015))))

(assert (=> bm!14747 d!41229))

(declare-fun b!134326 () Bool)

(declare-fun res!64592 () Bool)

(declare-fun e!87494 () Bool)

(assert (=> b!134326 (=> (not res!64592) (not e!87494))))

(assert (=> b!134326 (= res!64592 (= (size!2533 (_2!1315 lt!69589)) (bvadd (_size!598 (_2!1315 lt!69589)) (bvsdiv (bvadd (extraKeys!2630 (_2!1315 lt!69589)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!134327 () Bool)

(assert (=> b!134327 (= e!87494 (and (bvsge (extraKeys!2630 (_2!1315 lt!69589)) #b00000000000000000000000000000000) (bvsle (extraKeys!2630 (_2!1315 lt!69589)) #b00000000000000000000000000000011) (bvsge (_vacant!598 (_2!1315 lt!69589)) #b00000000000000000000000000000000)))))

(declare-fun b!134325 () Bool)

(declare-fun res!64595 () Bool)

(assert (=> b!134325 (=> (not res!64595) (not e!87494))))

(assert (=> b!134325 (= res!64595 (bvsge (size!2533 (_2!1315 lt!69589)) (_size!598 (_2!1315 lt!69589))))))

(declare-fun d!41231 () Bool)

(declare-fun res!64593 () Bool)

(assert (=> d!41231 (=> (not res!64593) (not e!87494))))

(assert (=> d!41231 (= res!64593 (validMask!0 (mask!7165 (_2!1315 lt!69589))))))

(assert (=> d!41231 (= (simpleValid!91 (_2!1315 lt!69589)) e!87494)))

(declare-fun b!134324 () Bool)

(declare-fun res!64594 () Bool)

(assert (=> b!134324 (=> (not res!64594) (not e!87494))))

(assert (=> b!134324 (= res!64594 (and (= (size!2530 (_values!2848 (_2!1315 lt!69589))) (bvadd (mask!7165 (_2!1315 lt!69589)) #b00000000000000000000000000000001)) (= (size!2529 (_keys!4614 (_2!1315 lt!69589))) (size!2530 (_values!2848 (_2!1315 lt!69589)))) (bvsge (_size!598 (_2!1315 lt!69589)) #b00000000000000000000000000000000) (bvsle (_size!598 (_2!1315 lt!69589)) (bvadd (mask!7165 (_2!1315 lt!69589)) #b00000000000000000000000000000001))))))

(assert (= (and d!41231 res!64593) b!134324))

(assert (= (and b!134324 res!64594) b!134325))

(assert (= (and b!134325 res!64595) b!134326))

(assert (= (and b!134326 res!64592) b!134327))

(declare-fun m!159501 () Bool)

(assert (=> b!134326 m!159501))

(assert (=> b!134325 m!159501))

(declare-fun m!159503 () Bool)

(assert (=> d!41231 m!159503))

(assert (=> d!40729 d!41231))

(declare-fun b!134328 () Bool)

(declare-fun e!87497 () Bool)

(declare-fun e!87498 () Bool)

(assert (=> b!134328 (= e!87497 e!87498)))

(declare-fun c!24985 () Bool)

(assert (=> b!134328 (= c!24985 (validKeyInArray!0 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) (bvadd lt!69610 #b00000000000000000000000000000001))))))

(declare-fun b!134329 () Bool)

(declare-fun call!14818 () Bool)

(assert (=> b!134329 (= e!87498 call!14818)))

(declare-fun b!134330 () Bool)

(declare-fun e!87495 () Bool)

(assert (=> b!134330 (= e!87495 (contains!897 (ite c!24857 (Cons!1732 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) lt!69610) lt!69593) lt!69593) (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) (bvadd lt!69610 #b00000000000000000000000000000001))))))

(declare-fun bm!14815 () Bool)

(assert (=> bm!14815 (= call!14818 (arrayNoDuplicates!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (bvadd lt!69610 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24985 (Cons!1732 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) (bvadd lt!69610 #b00000000000000000000000000000001)) (ite c!24857 (Cons!1732 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) lt!69610) lt!69593) lt!69593)) (ite c!24857 (Cons!1732 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) lt!69610) lt!69593) lt!69593))))))

(declare-fun d!41233 () Bool)

(declare-fun res!64598 () Bool)

(declare-fun e!87496 () Bool)

(assert (=> d!41233 (=> res!64598 e!87496)))

(assert (=> d!41233 (= res!64598 (bvsge (bvadd lt!69610 #b00000000000000000000000000000001) (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))))

(assert (=> d!41233 (= (arrayNoDuplicates!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (bvadd lt!69610 #b00000000000000000000000000000001) (ite c!24857 (Cons!1732 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) lt!69610) lt!69593) lt!69593)) e!87496)))

(declare-fun b!134331 () Bool)

(assert (=> b!134331 (= e!87498 call!14818)))

(declare-fun b!134332 () Bool)

(assert (=> b!134332 (= e!87496 e!87497)))

(declare-fun res!64596 () Bool)

(assert (=> b!134332 (=> (not res!64596) (not e!87497))))

(assert (=> b!134332 (= res!64596 (not e!87495))))

(declare-fun res!64597 () Bool)

(assert (=> b!134332 (=> (not res!64597) (not e!87495))))

(assert (=> b!134332 (= res!64597 (validKeyInArray!0 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) (bvadd lt!69610 #b00000000000000000000000000000001))))))

(assert (= (and d!41233 (not res!64598)) b!134332))

(assert (= (and b!134332 res!64597) b!134330))

(assert (= (and b!134332 res!64596) b!134328))

(assert (= (and b!134328 c!24985) b!134331))

(assert (= (and b!134328 (not c!24985)) b!134329))

(assert (= (or b!134331 b!134329) bm!14815))

(declare-fun m!159505 () Bool)

(assert (=> b!134328 m!159505))

(assert (=> b!134328 m!159505))

(declare-fun m!159507 () Bool)

(assert (=> b!134328 m!159507))

(assert (=> b!134330 m!159505))

(assert (=> b!134330 m!159505))

(declare-fun m!159509 () Bool)

(assert (=> b!134330 m!159509))

(assert (=> bm!14815 m!159505))

(declare-fun m!159511 () Bool)

(assert (=> bm!14815 m!159511))

(assert (=> b!134332 m!159505))

(assert (=> b!134332 m!159505))

(assert (=> b!134332 m!159507))

(assert (=> bm!14779 d!41233))

(declare-fun d!41235 () Bool)

(assert (=> d!41235 (= (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402))) lt!69401)) (not (isEmpty!415 (getValueByKey!171 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402))) lt!69401))))))

(declare-fun bs!5599 () Bool)

(assert (= bs!5599 d!41235))

(assert (=> bs!5599 m!157145))

(declare-fun m!159513 () Bool)

(assert (=> bs!5599 m!159513))

(assert (=> b!133220 d!41235))

(declare-fun b!134333 () Bool)

(declare-fun e!87499 () Option!177)

(assert (=> b!134333 (= e!87499 (Some!176 (_2!1314 (h!2336 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402)))))))))

(declare-fun b!134336 () Bool)

(declare-fun e!87500 () Option!177)

(assert (=> b!134336 (= e!87500 None!175)))

(declare-fun b!134335 () Bool)

(assert (=> b!134335 (= e!87500 (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402)))) lt!69401))))

(declare-fun b!134334 () Bool)

(assert (=> b!134334 (= e!87499 e!87500)))

(declare-fun c!24987 () Bool)

(assert (=> b!134334 (= c!24987 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402)))) (not (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402))))) lt!69401))))))

(declare-fun c!24986 () Bool)

(declare-fun d!41237 () Bool)

(assert (=> d!41237 (= c!24986 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402)))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402))))) lt!69401)))))

(assert (=> d!41237 (= (getValueByKey!171 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402))) lt!69401) e!87499)))

(assert (= (and d!41237 c!24986) b!134333))

(assert (= (and d!41237 (not c!24986)) b!134334))

(assert (= (and b!134334 c!24987) b!134335))

(assert (= (and b!134334 (not c!24987)) b!134336))

(declare-fun m!159515 () Bool)

(assert (=> b!134335 m!159515))

(assert (=> b!133220 d!41237))

(declare-fun d!41239 () Bool)

(assert (=> d!41239 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69229) lt!69228)) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69229) lt!69228))))))

(declare-fun bs!5600 () Bool)

(assert (= bs!5600 d!41239))

(assert (=> bs!5600 m!156829))

(declare-fun m!159517 () Bool)

(assert (=> bs!5600 m!159517))

(assert (=> b!133554 d!41239))

(assert (=> b!133554 d!40711))

(declare-fun d!41241 () Bool)

(assert (=> d!41241 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69376) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69376) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun bs!5601 () Bool)

(assert (= bs!5601 d!41241))

(assert (=> bs!5601 m!156589))

(declare-fun m!159519 () Bool)

(assert (=> bs!5601 m!159519))

(assert (=> b!133776 d!41241))

(assert (=> b!133776 d!40915))

(declare-fun b!134337 () Bool)

(declare-fun lt!70366 () SeekEntryResult!285)

(assert (=> b!134337 (and (bvsge (index!3302 lt!70366) #b00000000000000000000000000000000) (bvslt (index!3302 lt!70366) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun res!64600 () Bool)

(assert (=> b!134337 (= res!64600 (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3302 lt!70366)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87504 () Bool)

(assert (=> b!134337 (=> res!64600 e!87504)))

(declare-fun b!134338 () Bool)

(declare-fun e!87501 () SeekEntryResult!285)

(assert (=> b!134338 (= e!87501 (Intermediate!285 true (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7165 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun b!134339 () Bool)

(declare-fun e!87502 () SeekEntryResult!285)

(assert (=> b!134339 (= e!87502 (Intermediate!285 false (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7165 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun b!134340 () Bool)

(assert (=> b!134340 (= e!87502 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7165 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000 (mask!7165 (v!3197 (underlying!454 thiss!992)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun d!41243 () Bool)

(declare-fun e!87503 () Bool)

(assert (=> d!41243 e!87503))

(declare-fun c!24989 () Bool)

(assert (=> d!41243 (= c!24989 (and ((_ is Intermediate!285) lt!70366) (undefined!1097 lt!70366)))))

(assert (=> d!41243 (= lt!70366 e!87501)))

(declare-fun c!24988 () Bool)

(assert (=> d!41243 (= c!24988 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!70367 () (_ BitVec 64))

(assert (=> d!41243 (= lt!70367 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7165 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!41243 (validMask!0 (mask!7165 (v!3197 (underlying!454 thiss!992))))))

(assert (=> d!41243 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7165 (v!3197 (underlying!454 thiss!992)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))) lt!70366)))

(declare-fun b!134341 () Bool)

(assert (=> b!134341 (and (bvsge (index!3302 lt!70366) #b00000000000000000000000000000000) (bvslt (index!3302 lt!70366) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun res!64599 () Bool)

(assert (=> b!134341 (= res!64599 (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3302 lt!70366)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134341 (=> res!64599 e!87504)))

(declare-fun e!87505 () Bool)

(assert (=> b!134341 (= e!87505 e!87504)))

(declare-fun b!134342 () Bool)

(assert (=> b!134342 (= e!87503 (bvsge (x!15602 lt!70366) #b01111111111111111111111111111110))))

(declare-fun b!134343 () Bool)

(assert (=> b!134343 (and (bvsge (index!3302 lt!70366) #b00000000000000000000000000000000) (bvslt (index!3302 lt!70366) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> b!134343 (= e!87504 (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3302 lt!70366)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134344 () Bool)

(assert (=> b!134344 (= e!87501 e!87502)))

(declare-fun c!24990 () Bool)

(assert (=> b!134344 (= c!24990 (or (= lt!70367 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (= (bvadd lt!70367 lt!70367) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134345 () Bool)

(assert (=> b!134345 (= e!87503 e!87505)))

(declare-fun res!64601 () Bool)

(assert (=> b!134345 (= res!64601 (and ((_ is Intermediate!285) lt!70366) (not (undefined!1097 lt!70366)) (bvslt (x!15602 lt!70366) #b01111111111111111111111111111110) (bvsge (x!15602 lt!70366) #b00000000000000000000000000000000) (bvsge (x!15602 lt!70366) #b00000000000000000000000000000000)))))

(assert (=> b!134345 (=> (not res!64601) (not e!87505))))

(assert (= (and d!41243 c!24988) b!134338))

(assert (= (and d!41243 (not c!24988)) b!134344))

(assert (= (and b!134344 c!24990) b!134339))

(assert (= (and b!134344 (not c!24990)) b!134340))

(assert (= (and d!41243 c!24989) b!134342))

(assert (= (and d!41243 (not c!24989)) b!134345))

(assert (= (and b!134345 res!64601) b!134341))

(assert (= (and b!134341 (not res!64599)) b!134337))

(assert (= (and b!134337 (not res!64600)) b!134343))

(assert (=> b!134340 m!158169))

(declare-fun m!159521 () Bool)

(assert (=> b!134340 m!159521))

(assert (=> b!134340 m!159521))

(assert (=> b!134340 m!156593))

(declare-fun m!159523 () Bool)

(assert (=> b!134340 m!159523))

(declare-fun m!159525 () Bool)

(assert (=> b!134337 m!159525))

(assert (=> b!134341 m!159525))

(assert (=> d!41243 m!158169))

(declare-fun m!159527 () Bool)

(assert (=> d!41243 m!159527))

(assert (=> d!41243 m!156295))

(assert (=> b!134343 m!159525))

(assert (=> d!40741 d!41243))

(declare-fun d!41245 () Bool)

(declare-fun lt!70369 () (_ BitVec 32))

(declare-fun lt!70368 () (_ BitVec 32))

(assert (=> d!41245 (= lt!70369 (bvmul (bvxor lt!70368 (bvlshr lt!70368 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!41245 (= lt!70368 ((_ extract 31 0) (bvand (bvxor (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (bvlshr (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!41245 (and (bvsge (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000000) (let ((res!64209 (let ((h!2338 ((_ extract 31 0) (bvand (bvxor (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (bvlshr (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!15706 (bvmul (bvxor h!2338 (bvlshr h!2338 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!15706 (bvlshr x!15706 #b00000000000000000000000000001101)) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))) (and (bvslt res!64209 (bvadd (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000001)) (bvsge res!64209 #b00000000000000000000000000000000))))))

(assert (=> d!41245 (= (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7165 (v!3197 (underlying!454 thiss!992)))) (bvand (bvxor lt!70369 (bvlshr lt!70369 #b00000000000000000000000000001101)) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(assert (=> d!40741 d!41245))

(assert (=> d!40741 d!40267))

(declare-fun d!41247 () Bool)

(declare-fun lt!70370 () Bool)

(assert (=> d!41247 (= lt!70370 (select (content!132 lt!69953) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun e!87507 () Bool)

(assert (=> d!41247 (= lt!70370 e!87507)))

(declare-fun res!64602 () Bool)

(assert (=> d!41247 (=> (not res!64602) (not e!87507))))

(assert (=> d!41247 (= res!64602 ((_ is Cons!1731) lt!69953))))

(assert (=> d!41247 (= (contains!898 lt!69953 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!70370)))

(declare-fun b!134346 () Bool)

(declare-fun e!87506 () Bool)

(assert (=> b!134346 (= e!87507 e!87506)))

(declare-fun res!64603 () Bool)

(assert (=> b!134346 (=> res!64603 e!87506)))

(assert (=> b!134346 (= res!64603 (= (h!2336 lt!69953) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!134347 () Bool)

(assert (=> b!134347 (= e!87506 (contains!898 (t!6198 lt!69953) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!41247 res!64602) b!134346))

(assert (= (and b!134346 (not res!64603)) b!134347))

(declare-fun m!159529 () Bool)

(assert (=> d!41247 m!159529))

(declare-fun m!159531 () Bool)

(assert (=> d!41247 m!159531))

(declare-fun m!159533 () Bool)

(assert (=> b!134347 m!159533))

(assert (=> b!133599 d!41247))

(assert (=> d!40859 d!40361))

(assert (=> d!40859 d!40351))

(assert (=> d!40859 d!40375))

(declare-fun d!41249 () Bool)

(declare-fun lt!70371 () Bool)

(assert (=> d!41249 (= lt!70371 (select (content!132 (toList!869 lt!69808)) (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))))

(declare-fun e!87509 () Bool)

(assert (=> d!41249 (= lt!70371 e!87509)))

(declare-fun res!64604 () Bool)

(assert (=> d!41249 (=> (not res!64604) (not e!87509))))

(assert (=> d!41249 (= res!64604 ((_ is Cons!1731) (toList!869 lt!69808)))))

(assert (=> d!41249 (= (contains!898 (toList!869 lt!69808) (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))) lt!70371)))

(declare-fun b!134348 () Bool)

(declare-fun e!87508 () Bool)

(assert (=> b!134348 (= e!87509 e!87508)))

(declare-fun res!64605 () Bool)

(assert (=> b!134348 (=> res!64605 e!87508)))

(assert (=> b!134348 (= res!64605 (= (h!2336 (toList!869 lt!69808)) (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))))

(declare-fun b!134349 () Bool)

(assert (=> b!134349 (= e!87508 (contains!898 (t!6198 (toList!869 lt!69808)) (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41249 res!64604) b!134348))

(assert (= (and b!134348 (not res!64605)) b!134349))

(declare-fun m!159535 () Bool)

(assert (=> d!41249 m!159535))

(declare-fun m!159537 () Bool)

(assert (=> d!41249 m!159537))

(declare-fun m!159539 () Bool)

(assert (=> b!134349 m!159539))

(assert (=> b!133403 d!41249))

(declare-fun b!134350 () Bool)

(declare-fun e!87510 () Option!177)

(assert (=> b!134350 (= e!87510 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 lt!69221))))))))

(declare-fun b!134353 () Bool)

(declare-fun e!87511 () Option!177)

(assert (=> b!134353 (= e!87511 None!175)))

(declare-fun b!134352 () Bool)

(assert (=> b!134352 (= e!87511 (getValueByKey!171 (t!6198 (t!6198 (toList!869 lt!69221))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134351 () Bool)

(assert (=> b!134351 (= e!87510 e!87511)))

(declare-fun c!24992 () Bool)

(assert (=> b!134351 (= c!24992 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69221))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69221)))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!41251 () Bool)

(declare-fun c!24991 () Bool)

(assert (=> d!41251 (= c!24991 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69221))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69221)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41251 (= (getValueByKey!171 (t!6198 (toList!869 lt!69221)) #b0000000000000000000000000000000000000000000000000000000000000000) e!87510)))

(assert (= (and d!41251 c!24991) b!134350))

(assert (= (and d!41251 (not c!24991)) b!134351))

(assert (= (and b!134351 c!24992) b!134352))

(assert (= (and b!134351 (not c!24992)) b!134353))

(declare-fun m!159541 () Bool)

(assert (=> b!134352 m!159541))

(assert (=> b!133526 d!41251))

(declare-fun d!41253 () Bool)

(assert (=> d!41253 (= (apply!116 lt!69878 lt!69866) (get!1491 (getValueByKey!171 (toList!869 lt!69878) lt!69866)))))

(declare-fun bs!5602 () Bool)

(assert (= bs!5602 d!41253))

(declare-fun m!159543 () Bool)

(assert (=> bs!5602 m!159543))

(assert (=> bs!5602 m!159543))

(declare-fun m!159545 () Bool)

(assert (=> bs!5602 m!159545))

(assert (=> b!133465 d!41253))

(declare-fun d!41255 () Bool)

(assert (=> d!41255 (= (apply!116 (+!170 lt!69877 (tuple2!2609 lt!69874 (minValue!2720 newMap!16))) lt!69876) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69877 (tuple2!2609 lt!69874 (minValue!2720 newMap!16)))) lt!69876)))))

(declare-fun bs!5603 () Bool)

(assert (= bs!5603 d!41255))

(declare-fun m!159547 () Bool)

(assert (=> bs!5603 m!159547))

(assert (=> bs!5603 m!159547))

(declare-fun m!159549 () Bool)

(assert (=> bs!5603 m!159549))

(assert (=> b!133465 d!41255))

(declare-fun d!41257 () Bool)

(declare-fun e!87512 () Bool)

(assert (=> d!41257 e!87512))

(declare-fun res!64606 () Bool)

(assert (=> d!41257 (=> res!64606 e!87512)))

(declare-fun lt!70372 () Bool)

(assert (=> d!41257 (= res!64606 (not lt!70372))))

(declare-fun lt!70374 () Bool)

(assert (=> d!41257 (= lt!70372 lt!70374)))

(declare-fun lt!70373 () Unit!4150)

(declare-fun e!87513 () Unit!4150)

(assert (=> d!41257 (= lt!70373 e!87513)))

(declare-fun c!24993 () Bool)

(assert (=> d!41257 (= c!24993 lt!70374)))

(assert (=> d!41257 (= lt!70374 (containsKey!175 (toList!869 (+!170 lt!69865 (tuple2!2609 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69875))))

(assert (=> d!41257 (= (contains!896 (+!170 lt!69865 (tuple2!2609 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69875) lt!70372)))

(declare-fun b!134354 () Bool)

(declare-fun lt!70375 () Unit!4150)

(assert (=> b!134354 (= e!87513 lt!70375)))

(assert (=> b!134354 (= lt!70375 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69865 (tuple2!2609 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69875))))

(assert (=> b!134354 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69865 (tuple2!2609 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69875))))

(declare-fun b!134355 () Bool)

(declare-fun Unit!4220 () Unit!4150)

(assert (=> b!134355 (= e!87513 Unit!4220)))

(declare-fun b!134356 () Bool)

(assert (=> b!134356 (= e!87512 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69865 (tuple2!2609 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69875)))))

(assert (= (and d!41257 c!24993) b!134354))

(assert (= (and d!41257 (not c!24993)) b!134355))

(assert (= (and d!41257 (not res!64606)) b!134356))

(declare-fun m!159551 () Bool)

(assert (=> d!41257 m!159551))

(declare-fun m!159553 () Bool)

(assert (=> b!134354 m!159553))

(declare-fun m!159555 () Bool)

(assert (=> b!134354 m!159555))

(assert (=> b!134354 m!159555))

(declare-fun m!159557 () Bool)

(assert (=> b!134354 m!159557))

(assert (=> b!134356 m!159555))

(assert (=> b!134356 m!159555))

(assert (=> b!134356 m!159557))

(assert (=> b!133465 d!41257))

(declare-fun d!41259 () Bool)

(declare-fun e!87514 () Bool)

(assert (=> d!41259 e!87514))

(declare-fun res!64608 () Bool)

(assert (=> d!41259 (=> (not res!64608) (not e!87514))))

(declare-fun lt!70377 () ListLongMap!1707)

(assert (=> d!41259 (= res!64608 (contains!896 lt!70377 (_1!1314 (tuple2!2609 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70379 () List!1735)

(assert (=> d!41259 (= lt!70377 (ListLongMap!1708 lt!70379))))

(declare-fun lt!70378 () Unit!4150)

(declare-fun lt!70376 () Unit!4150)

(assert (=> d!41259 (= lt!70378 lt!70376)))

(assert (=> d!41259 (= (getValueByKey!171 lt!70379 (_1!1314 (tuple2!2609 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41259 (= lt!70376 (lemmaContainsTupThenGetReturnValue!88 lt!70379 (_1!1314 (tuple2!2609 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41259 (= lt!70379 (insertStrictlySorted!90 (toList!869 lt!69865) (_1!1314 (tuple2!2609 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41259 (= (+!170 lt!69865 (tuple2!2609 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70377)))

(declare-fun b!134357 () Bool)

(declare-fun res!64607 () Bool)

(assert (=> b!134357 (=> (not res!64607) (not e!87514))))

(assert (=> b!134357 (= res!64607 (= (getValueByKey!171 (toList!869 lt!70377) (_1!1314 (tuple2!2609 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134358 () Bool)

(assert (=> b!134358 (= e!87514 (contains!898 (toList!869 lt!70377) (tuple2!2609 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41259 res!64608) b!134357))

(assert (= (and b!134357 res!64607) b!134358))

(declare-fun m!159559 () Bool)

(assert (=> d!41259 m!159559))

(declare-fun m!159561 () Bool)

(assert (=> d!41259 m!159561))

(declare-fun m!159563 () Bool)

(assert (=> d!41259 m!159563))

(declare-fun m!159565 () Bool)

(assert (=> d!41259 m!159565))

(declare-fun m!159567 () Bool)

(assert (=> b!134357 m!159567))

(declare-fun m!159569 () Bool)

(assert (=> b!134358 m!159569))

(assert (=> b!133465 d!41259))

(declare-fun d!41261 () Bool)

(assert (=> d!41261 (= (apply!116 (+!170 lt!69878 (tuple2!2609 lt!69880 (minValue!2720 newMap!16))) lt!69866) (apply!116 lt!69878 lt!69866))))

(declare-fun lt!70380 () Unit!4150)

(assert (=> d!41261 (= lt!70380 (choose!828 lt!69878 lt!69880 (minValue!2720 newMap!16) lt!69866))))

(declare-fun e!87515 () Bool)

(assert (=> d!41261 e!87515))

(declare-fun res!64609 () Bool)

(assert (=> d!41261 (=> (not res!64609) (not e!87515))))

(assert (=> d!41261 (= res!64609 (contains!896 lt!69878 lt!69866))))

(assert (=> d!41261 (= (addApplyDifferent!92 lt!69878 lt!69880 (minValue!2720 newMap!16) lt!69866) lt!70380)))

(declare-fun b!134359 () Bool)

(assert (=> b!134359 (= e!87515 (not (= lt!69866 lt!69880)))))

(assert (= (and d!41261 res!64609) b!134359))

(assert (=> d!41261 m!157707))

(assert (=> d!41261 m!157693))

(assert (=> d!41261 m!157695))

(declare-fun m!159571 () Bool)

(assert (=> d!41261 m!159571))

(declare-fun m!159573 () Bool)

(assert (=> d!41261 m!159573))

(assert (=> d!41261 m!157693))

(assert (=> b!133465 d!41261))

(declare-fun d!41263 () Bool)

(assert (=> d!41263 (= (apply!116 (+!170 lt!69877 (tuple2!2609 lt!69874 (minValue!2720 newMap!16))) lt!69876) (apply!116 lt!69877 lt!69876))))

(declare-fun lt!70381 () Unit!4150)

(assert (=> d!41263 (= lt!70381 (choose!828 lt!69877 lt!69874 (minValue!2720 newMap!16) lt!69876))))

(declare-fun e!87516 () Bool)

(assert (=> d!41263 e!87516))

(declare-fun res!64610 () Bool)

(assert (=> d!41263 (=> (not res!64610) (not e!87516))))

(assert (=> d!41263 (= res!64610 (contains!896 lt!69877 lt!69876))))

(assert (=> d!41263 (= (addApplyDifferent!92 lt!69877 lt!69874 (minValue!2720 newMap!16) lt!69876) lt!70381)))

(declare-fun b!134360 () Bool)

(assert (=> b!134360 (= e!87516 (not (= lt!69876 lt!69874)))))

(assert (= (and d!41263 res!64610) b!134360))

(assert (=> d!41263 m!157699))

(assert (=> d!41263 m!157683))

(assert (=> d!41263 m!157685))

(declare-fun m!159575 () Bool)

(assert (=> d!41263 m!159575))

(declare-fun m!159577 () Bool)

(assert (=> d!41263 m!159577))

(assert (=> d!41263 m!157683))

(assert (=> b!133465 d!41263))

(declare-fun d!41265 () Bool)

(assert (=> d!41265 (contains!896 (+!170 lt!69865 (tuple2!2609 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69875)))

(declare-fun lt!70382 () Unit!4150)

(assert (=> d!41265 (= lt!70382 (choose!829 lt!69865 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69875))))

(assert (=> d!41265 (contains!896 lt!69865 lt!69875)))

(assert (=> d!41265 (= (addStillContains!92 lt!69865 lt!69868 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69875) lt!70382)))

(declare-fun bs!5604 () Bool)

(assert (= bs!5604 d!41265))

(assert (=> bs!5604 m!157689))

(assert (=> bs!5604 m!157689))

(assert (=> bs!5604 m!157705))

(assert (=> bs!5604 m!156285))

(declare-fun m!159579 () Bool)

(assert (=> bs!5604 m!159579))

(declare-fun m!159581 () Bool)

(assert (=> bs!5604 m!159581))

(assert (=> b!133465 d!41265))

(declare-fun d!41267 () Bool)

(assert (=> d!41267 (= (apply!116 (+!170 lt!69878 (tuple2!2609 lt!69880 (minValue!2720 newMap!16))) lt!69866) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69878 (tuple2!2609 lt!69880 (minValue!2720 newMap!16)))) lt!69866)))))

(declare-fun bs!5605 () Bool)

(assert (= bs!5605 d!41267))

(declare-fun m!159583 () Bool)

(assert (=> bs!5605 m!159583))

(assert (=> bs!5605 m!159583))

(declare-fun m!159585 () Bool)

(assert (=> bs!5605 m!159585))

(assert (=> b!133465 d!41267))

(declare-fun d!41269 () Bool)

(declare-fun e!87517 () Bool)

(assert (=> d!41269 e!87517))

(declare-fun res!64612 () Bool)

(assert (=> d!41269 (=> (not res!64612) (not e!87517))))

(declare-fun lt!70384 () ListLongMap!1707)

(assert (=> d!41269 (= res!64612 (contains!896 lt!70384 (_1!1314 (tuple2!2609 lt!69880 (minValue!2720 newMap!16)))))))

(declare-fun lt!70386 () List!1735)

(assert (=> d!41269 (= lt!70384 (ListLongMap!1708 lt!70386))))

(declare-fun lt!70385 () Unit!4150)

(declare-fun lt!70383 () Unit!4150)

(assert (=> d!41269 (= lt!70385 lt!70383)))

(assert (=> d!41269 (= (getValueByKey!171 lt!70386 (_1!1314 (tuple2!2609 lt!69880 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69880 (minValue!2720 newMap!16)))))))

(assert (=> d!41269 (= lt!70383 (lemmaContainsTupThenGetReturnValue!88 lt!70386 (_1!1314 (tuple2!2609 lt!69880 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69880 (minValue!2720 newMap!16)))))))

(assert (=> d!41269 (= lt!70386 (insertStrictlySorted!90 (toList!869 lt!69878) (_1!1314 (tuple2!2609 lt!69880 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69880 (minValue!2720 newMap!16)))))))

(assert (=> d!41269 (= (+!170 lt!69878 (tuple2!2609 lt!69880 (minValue!2720 newMap!16))) lt!70384)))

(declare-fun b!134361 () Bool)

(declare-fun res!64611 () Bool)

(assert (=> b!134361 (=> (not res!64611) (not e!87517))))

(assert (=> b!134361 (= res!64611 (= (getValueByKey!171 (toList!869 lt!70384) (_1!1314 (tuple2!2609 lt!69880 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69880 (minValue!2720 newMap!16))))))))

(declare-fun b!134362 () Bool)

(assert (=> b!134362 (= e!87517 (contains!898 (toList!869 lt!70384) (tuple2!2609 lt!69880 (minValue!2720 newMap!16))))))

(assert (= (and d!41269 res!64612) b!134361))

(assert (= (and b!134361 res!64611) b!134362))

(declare-fun m!159587 () Bool)

(assert (=> d!41269 m!159587))

(declare-fun m!159589 () Bool)

(assert (=> d!41269 m!159589))

(declare-fun m!159591 () Bool)

(assert (=> d!41269 m!159591))

(declare-fun m!159593 () Bool)

(assert (=> d!41269 m!159593))

(declare-fun m!159595 () Bool)

(assert (=> b!134361 m!159595))

(declare-fun m!159597 () Bool)

(assert (=> b!134362 m!159597))

(assert (=> b!133465 d!41269))

(declare-fun d!41271 () Bool)

(assert (=> d!41271 (= (apply!116 (+!170 lt!69873 (tuple2!2609 lt!69884 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69871) (apply!116 lt!69873 lt!69871))))

(declare-fun lt!70387 () Unit!4150)

(assert (=> d!41271 (= lt!70387 (choose!828 lt!69873 lt!69884 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69871))))

(declare-fun e!87518 () Bool)

(assert (=> d!41271 e!87518))

(declare-fun res!64613 () Bool)

(assert (=> d!41271 (=> (not res!64613) (not e!87518))))

(assert (=> d!41271 (= res!64613 (contains!896 lt!69873 lt!69871))))

(assert (=> d!41271 (= (addApplyDifferent!92 lt!69873 lt!69884 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69871) lt!70387)))

(declare-fun b!134363 () Bool)

(assert (=> b!134363 (= e!87518 (not (= lt!69871 lt!69884)))))

(assert (= (and d!41271 res!64613) b!134363))

(assert (=> d!41271 m!157709))

(assert (=> d!41271 m!157679))

(assert (=> d!41271 m!157697))

(assert (=> d!41271 m!156285))

(declare-fun m!159599 () Bool)

(assert (=> d!41271 m!159599))

(declare-fun m!159601 () Bool)

(assert (=> d!41271 m!159601))

(assert (=> d!41271 m!157679))

(assert (=> b!133465 d!41271))

(declare-fun d!41273 () Bool)

(assert (=> d!41273 (= (apply!116 lt!69873 lt!69871) (get!1491 (getValueByKey!171 (toList!869 lt!69873) lt!69871)))))

(declare-fun bs!5606 () Bool)

(assert (= bs!5606 d!41273))

(declare-fun m!159603 () Bool)

(assert (=> bs!5606 m!159603))

(assert (=> bs!5606 m!159603))

(declare-fun m!159605 () Bool)

(assert (=> bs!5606 m!159605))

(assert (=> b!133465 d!41273))

(declare-fun d!41275 () Bool)

(declare-fun e!87519 () Bool)

(assert (=> d!41275 e!87519))

(declare-fun res!64615 () Bool)

(assert (=> d!41275 (=> (not res!64615) (not e!87519))))

(declare-fun lt!70389 () ListLongMap!1707)

(assert (=> d!41275 (= res!64615 (contains!896 lt!70389 (_1!1314 (tuple2!2609 lt!69874 (minValue!2720 newMap!16)))))))

(declare-fun lt!70391 () List!1735)

(assert (=> d!41275 (= lt!70389 (ListLongMap!1708 lt!70391))))

(declare-fun lt!70390 () Unit!4150)

(declare-fun lt!70388 () Unit!4150)

(assert (=> d!41275 (= lt!70390 lt!70388)))

(assert (=> d!41275 (= (getValueByKey!171 lt!70391 (_1!1314 (tuple2!2609 lt!69874 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69874 (minValue!2720 newMap!16)))))))

(assert (=> d!41275 (= lt!70388 (lemmaContainsTupThenGetReturnValue!88 lt!70391 (_1!1314 (tuple2!2609 lt!69874 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69874 (minValue!2720 newMap!16)))))))

(assert (=> d!41275 (= lt!70391 (insertStrictlySorted!90 (toList!869 lt!69877) (_1!1314 (tuple2!2609 lt!69874 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69874 (minValue!2720 newMap!16)))))))

(assert (=> d!41275 (= (+!170 lt!69877 (tuple2!2609 lt!69874 (minValue!2720 newMap!16))) lt!70389)))

(declare-fun b!134364 () Bool)

(declare-fun res!64614 () Bool)

(assert (=> b!134364 (=> (not res!64614) (not e!87519))))

(assert (=> b!134364 (= res!64614 (= (getValueByKey!171 (toList!869 lt!70389) (_1!1314 (tuple2!2609 lt!69874 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69874 (minValue!2720 newMap!16))))))))

(declare-fun b!134365 () Bool)

(assert (=> b!134365 (= e!87519 (contains!898 (toList!869 lt!70389) (tuple2!2609 lt!69874 (minValue!2720 newMap!16))))))

(assert (= (and d!41275 res!64615) b!134364))

(assert (= (and b!134364 res!64614) b!134365))

(declare-fun m!159607 () Bool)

(assert (=> d!41275 m!159607))

(declare-fun m!159609 () Bool)

(assert (=> d!41275 m!159609))

(declare-fun m!159611 () Bool)

(assert (=> d!41275 m!159611))

(declare-fun m!159613 () Bool)

(assert (=> d!41275 m!159613))

(declare-fun m!159615 () Bool)

(assert (=> b!134364 m!159615))

(declare-fun m!159617 () Bool)

(assert (=> b!134365 m!159617))

(assert (=> b!133465 d!41275))

(declare-fun d!41277 () Bool)

(assert (=> d!41277 (= (apply!116 (+!170 lt!69873 (tuple2!2609 lt!69884 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69871) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69873 (tuple2!2609 lt!69884 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69871)))))

(declare-fun bs!5607 () Bool)

(assert (= bs!5607 d!41277))

(declare-fun m!159619 () Bool)

(assert (=> bs!5607 m!159619))

(assert (=> bs!5607 m!159619))

(declare-fun m!159621 () Bool)

(assert (=> bs!5607 m!159621))

(assert (=> b!133465 d!41277))

(declare-fun b!134366 () Bool)

(declare-fun lt!70392 () Unit!4150)

(declare-fun lt!70396 () Unit!4150)

(assert (=> b!134366 (= lt!70392 lt!70396)))

(declare-fun lt!70395 () V!3483)

(declare-fun lt!70397 () (_ BitVec 64))

(declare-fun lt!70393 () ListLongMap!1707)

(declare-fun lt!70394 () (_ BitVec 64))

(assert (=> b!134366 (not (contains!896 (+!170 lt!70393 (tuple2!2609 lt!70397 lt!70395)) lt!70394))))

(assert (=> b!134366 (= lt!70396 (addStillNotContains!63 lt!70393 lt!70397 lt!70395 lt!70394))))

(assert (=> b!134366 (= lt!70394 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134366 (= lt!70395 (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134366 (= lt!70397 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!14819 () ListLongMap!1707)

(assert (=> b!134366 (= lt!70393 call!14819)))

(declare-fun e!87526 () ListLongMap!1707)

(assert (=> b!134366 (= e!87526 (+!170 call!14819 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!87523 () Bool)

(declare-fun lt!70398 () ListLongMap!1707)

(declare-fun b!134367 () Bool)

(assert (=> b!134367 (= e!87523 (= lt!70398 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69310 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!134368 () Bool)

(assert (=> b!134368 (= e!87523 (isEmpty!414 lt!70398))))

(declare-fun b!134369 () Bool)

(declare-fun e!87524 () ListLongMap!1707)

(assert (=> b!134369 (= e!87524 (ListLongMap!1708 Nil!1732))))

(declare-fun b!134370 () Bool)

(declare-fun e!87521 () Bool)

(declare-fun e!87522 () Bool)

(assert (=> b!134370 (= e!87521 e!87522)))

(declare-fun c!24997 () Bool)

(declare-fun e!87525 () Bool)

(assert (=> b!134370 (= c!24997 e!87525)))

(declare-fun res!64619 () Bool)

(assert (=> b!134370 (=> (not res!64619) (not e!87525))))

(assert (=> b!134370 (= res!64619 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!134371 () Bool)

(assert (=> b!134371 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (=> b!134371 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_values!2848 newMap!16))))))

(declare-fun e!87520 () Bool)

(assert (=> b!134371 (= e!87520 (= (apply!116 lt!70398 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134373 () Bool)

(assert (=> b!134373 (= e!87522 e!87520)))

(assert (=> b!134373 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun res!64618 () Bool)

(assert (=> b!134373 (= res!64618 (contains!896 lt!70398 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134373 (=> (not res!64618) (not e!87520))))

(declare-fun b!134374 () Bool)

(assert (=> b!134374 (= e!87524 e!87526)))

(declare-fun c!24994 () Bool)

(assert (=> b!134374 (= c!24994 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134375 () Bool)

(declare-fun res!64617 () Bool)

(assert (=> b!134375 (=> (not res!64617) (not e!87521))))

(assert (=> b!134375 (= res!64617 (not (contains!896 lt!70398 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134376 () Bool)

(assert (=> b!134376 (= e!87522 e!87523)))

(declare-fun c!24996 () Bool)

(assert (=> b!134376 (= c!24996 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun bm!14816 () Bool)

(assert (=> bm!14816 (= call!14819 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69310 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!134377 () Bool)

(assert (=> b!134377 (= e!87525 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134377 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134372 () Bool)

(assert (=> b!134372 (= e!87526 call!14819)))

(declare-fun d!41279 () Bool)

(assert (=> d!41279 e!87521))

(declare-fun res!64616 () Bool)

(assert (=> d!41279 (=> (not res!64616) (not e!87521))))

(assert (=> d!41279 (= res!64616 (not (contains!896 lt!70398 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41279 (= lt!70398 e!87524)))

(declare-fun c!24995 () Bool)

(assert (=> d!41279 (= c!24995 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!41279 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41279 (= (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69310 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!70398)))

(assert (= (and d!41279 c!24995) b!134369))

(assert (= (and d!41279 (not c!24995)) b!134374))

(assert (= (and b!134374 c!24994) b!134366))

(assert (= (and b!134374 (not c!24994)) b!134372))

(assert (= (or b!134366 b!134372) bm!14816))

(assert (= (and d!41279 res!64616) b!134375))

(assert (= (and b!134375 res!64617) b!134370))

(assert (= (and b!134370 res!64619) b!134377))

(assert (= (and b!134370 c!24997) b!134373))

(assert (= (and b!134370 (not c!24997)) b!134376))

(assert (= (and b!134373 res!64618) b!134371))

(assert (= (and b!134376 c!24996) b!134367))

(assert (= (and b!134376 (not c!24996)) b!134368))

(declare-fun b_lambda!6035 () Bool)

(assert (=> (not b_lambda!6035) (not b!134366)))

(assert (=> b!134366 t!6205))

(declare-fun b_and!8365 () Bool)

(assert (= b_and!8361 (and (=> t!6205 result!4009) b_and!8365)))

(assert (=> b!134366 t!6207))

(declare-fun b_and!8367 () Bool)

(assert (= b_and!8363 (and (=> t!6207 result!4011) b_and!8367)))

(declare-fun b_lambda!6037 () Bool)

(assert (=> (not b_lambda!6037) (not b!134371)))

(assert (=> b!134371 t!6205))

(declare-fun b_and!8369 () Bool)

(assert (= b_and!8365 (and (=> t!6205 result!4009) b_and!8369)))

(assert (=> b!134371 t!6207))

(declare-fun b_and!8371 () Bool)

(assert (= b_and!8367 (and (=> t!6207 result!4011) b_and!8371)))

(declare-fun m!159623 () Bool)

(assert (=> d!41279 m!159623))

(assert (=> d!41279 m!156571))

(assert (=> b!134367 m!156285))

(declare-fun m!159625 () Bool)

(assert (=> b!134367 m!159625))

(declare-fun m!159627 () Bool)

(assert (=> b!134366 m!159627))

(declare-fun m!159629 () Bool)

(assert (=> b!134366 m!159629))

(assert (=> b!134366 m!159627))

(assert (=> b!134366 m!156647))

(assert (=> b!134366 m!156645))

(assert (=> b!134366 m!156647))

(assert (=> b!134366 m!156649))

(declare-fun m!159631 () Bool)

(assert (=> b!134366 m!159631))

(assert (=> b!134366 m!156645))

(assert (=> b!134366 m!156533))

(declare-fun m!159633 () Bool)

(assert (=> b!134366 m!159633))

(assert (=> b!134371 m!156533))

(declare-fun m!159635 () Bool)

(assert (=> b!134371 m!159635))

(assert (=> b!134371 m!156647))

(assert (=> b!134371 m!156533))

(assert (=> b!134371 m!156645))

(assert (=> b!134371 m!156647))

(assert (=> b!134371 m!156649))

(assert (=> b!134371 m!156645))

(assert (=> bm!14816 m!156285))

(assert (=> bm!14816 m!159625))

(assert (=> b!134374 m!156533))

(assert (=> b!134374 m!156533))

(assert (=> b!134374 m!156557))

(declare-fun m!159637 () Bool)

(assert (=> b!134375 m!159637))

(assert (=> b!134373 m!156533))

(assert (=> b!134373 m!156533))

(declare-fun m!159639 () Bool)

(assert (=> b!134373 m!159639))

(assert (=> b!134377 m!156533))

(assert (=> b!134377 m!156533))

(assert (=> b!134377 m!156557))

(declare-fun m!159641 () Bool)

(assert (=> b!134368 m!159641))

(assert (=> b!133465 d!41279))

(declare-fun d!41281 () Bool)

(declare-fun e!87527 () Bool)

(assert (=> d!41281 e!87527))

(declare-fun res!64621 () Bool)

(assert (=> d!41281 (=> (not res!64621) (not e!87527))))

(declare-fun lt!70400 () ListLongMap!1707)

(assert (=> d!41281 (= res!64621 (contains!896 lt!70400 (_1!1314 (tuple2!2609 lt!69884 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70402 () List!1735)

(assert (=> d!41281 (= lt!70400 (ListLongMap!1708 lt!70402))))

(declare-fun lt!70401 () Unit!4150)

(declare-fun lt!70399 () Unit!4150)

(assert (=> d!41281 (= lt!70401 lt!70399)))

(assert (=> d!41281 (= (getValueByKey!171 lt!70402 (_1!1314 (tuple2!2609 lt!69884 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 lt!69884 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41281 (= lt!70399 (lemmaContainsTupThenGetReturnValue!88 lt!70402 (_1!1314 (tuple2!2609 lt!69884 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 lt!69884 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41281 (= lt!70402 (insertStrictlySorted!90 (toList!869 lt!69873) (_1!1314 (tuple2!2609 lt!69884 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 lt!69884 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41281 (= (+!170 lt!69873 (tuple2!2609 lt!69884 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70400)))

(declare-fun b!134378 () Bool)

(declare-fun res!64620 () Bool)

(assert (=> b!134378 (=> (not res!64620) (not e!87527))))

(assert (=> b!134378 (= res!64620 (= (getValueByKey!171 (toList!869 lt!70400) (_1!1314 (tuple2!2609 lt!69884 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 lt!69884 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134379 () Bool)

(assert (=> b!134379 (= e!87527 (contains!898 (toList!869 lt!70400) (tuple2!2609 lt!69884 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41281 res!64621) b!134378))

(assert (= (and b!134378 res!64620) b!134379))

(declare-fun m!159643 () Bool)

(assert (=> d!41281 m!159643))

(declare-fun m!159645 () Bool)

(assert (=> d!41281 m!159645))

(declare-fun m!159647 () Bool)

(assert (=> d!41281 m!159647))

(declare-fun m!159649 () Bool)

(assert (=> d!41281 m!159649))

(declare-fun m!159651 () Bool)

(assert (=> b!134378 m!159651))

(declare-fun m!159653 () Bool)

(assert (=> b!134379 m!159653))

(assert (=> b!133465 d!41281))

(declare-fun d!41283 () Bool)

(assert (=> d!41283 (= (apply!116 lt!69877 lt!69876) (get!1491 (getValueByKey!171 (toList!869 lt!69877) lt!69876)))))

(declare-fun bs!5608 () Bool)

(assert (= bs!5608 d!41283))

(declare-fun m!159655 () Bool)

(assert (=> bs!5608 m!159655))

(assert (=> bs!5608 m!159655))

(declare-fun m!159657 () Bool)

(assert (=> bs!5608 m!159657))

(assert (=> b!133465 d!41283))

(declare-fun d!41285 () Bool)

(declare-fun e!87528 () Bool)

(assert (=> d!41285 e!87528))

(declare-fun res!64622 () Bool)

(assert (=> d!41285 (=> res!64622 e!87528)))

(declare-fun lt!70403 () Bool)

(assert (=> d!41285 (= res!64622 (not lt!70403))))

(declare-fun lt!70405 () Bool)

(assert (=> d!41285 (= lt!70403 lt!70405)))

(declare-fun lt!70404 () Unit!4150)

(declare-fun e!87529 () Unit!4150)

(assert (=> d!41285 (= lt!70404 e!87529)))

(declare-fun c!24998 () Bool)

(assert (=> d!41285 (= c!24998 lt!70405)))

(assert (=> d!41285 (= lt!70405 (containsKey!175 (toList!869 lt!69703) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41285 (= (contains!896 lt!69703 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70403)))

(declare-fun b!134380 () Bool)

(declare-fun lt!70406 () Unit!4150)

(assert (=> b!134380 (= e!87529 lt!70406)))

(assert (=> b!134380 (= lt!70406 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69703) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134380 (isDefined!125 (getValueByKey!171 (toList!869 lt!69703) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134381 () Bool)

(declare-fun Unit!4221 () Unit!4150)

(assert (=> b!134381 (= e!87529 Unit!4221)))

(declare-fun b!134382 () Bool)

(assert (=> b!134382 (= e!87528 (isDefined!125 (getValueByKey!171 (toList!869 lt!69703) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41285 c!24998) b!134380))

(assert (= (and d!41285 (not c!24998)) b!134381))

(assert (= (and d!41285 (not res!64622)) b!134382))

(declare-fun m!159659 () Bool)

(assert (=> d!41285 m!159659))

(declare-fun m!159661 () Bool)

(assert (=> b!134380 m!159661))

(assert (=> b!134380 m!159033))

(assert (=> b!134380 m!159033))

(declare-fun m!159663 () Bool)

(assert (=> b!134380 m!159663))

(assert (=> b!134382 m!159033))

(assert (=> b!134382 m!159033))

(assert (=> b!134382 m!159663))

(assert (=> bm!14709 d!41285))

(declare-fun d!41287 () Bool)

(declare-fun res!64623 () Bool)

(declare-fun e!87530 () Bool)

(assert (=> d!41287 (=> res!64623 e!87530)))

(assert (=> d!41287 (= res!64623 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))) lt!69422)))))

(assert (=> d!41287 (= (containsKey!175 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) lt!69422) e!87530)))

(declare-fun b!134383 () Bool)

(declare-fun e!87531 () Bool)

(assert (=> b!134383 (= e!87530 e!87531)))

(declare-fun res!64624 () Bool)

(assert (=> b!134383 (=> (not res!64624) (not e!87531))))

(assert (=> b!134383 (= res!64624 (and (or (not ((_ is Cons!1731) (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))) (bvsle (_1!1314 (h!2336 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))) lt!69422)) ((_ is Cons!1731) (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))) (bvslt (_1!1314 (h!2336 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))) lt!69422)))))

(declare-fun b!134384 () Bool)

(assert (=> b!134384 (= e!87531 (containsKey!175 (t!6198 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))) lt!69422))))

(assert (= (and d!41287 (not res!64623)) b!134383))

(assert (= (and b!134383 res!64624) b!134384))

(declare-fun m!159665 () Bool)

(assert (=> b!134384 m!159665))

(assert (=> d!40541 d!41287))

(declare-fun d!41289 () Bool)

(assert (=> d!41289 (= ($colon$colon!91 e!87116 (ite c!24806 (h!2336 (toList!869 call!14566)) (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) (Cons!1731 (ite c!24806 (h!2336 (toList!869 call!14566)) (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) e!87116))))

(assert (=> bm!14760 d!41289))

(declare-fun d!41291 () Bool)

(declare-fun e!87532 () Bool)

(assert (=> d!41291 e!87532))

(declare-fun res!64625 () Bool)

(assert (=> d!41291 (=> res!64625 e!87532)))

(declare-fun lt!70407 () Bool)

(assert (=> d!41291 (= res!64625 (not lt!70407))))

(declare-fun lt!70409 () Bool)

(assert (=> d!41291 (= lt!70407 lt!70409)))

(declare-fun lt!70408 () Unit!4150)

(declare-fun e!87533 () Unit!4150)

(assert (=> d!41291 (= lt!70408 e!87533)))

(declare-fun c!24999 () Bool)

(assert (=> d!41291 (= c!24999 lt!70409)))

(assert (=> d!41291 (= lt!70409 (containsKey!175 (toList!869 lt!69737) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41291 (= (contains!896 lt!69737 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70407)))

(declare-fun b!134385 () Bool)

(declare-fun lt!70410 () Unit!4150)

(assert (=> b!134385 (= e!87533 lt!70410)))

(assert (=> b!134385 (= lt!70410 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69737) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134385 (isDefined!125 (getValueByKey!171 (toList!869 lt!69737) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134386 () Bool)

(declare-fun Unit!4222 () Unit!4150)

(assert (=> b!134386 (= e!87533 Unit!4222)))

(declare-fun b!134387 () Bool)

(assert (=> b!134387 (= e!87532 (isDefined!125 (getValueByKey!171 (toList!869 lt!69737) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41291 c!24999) b!134385))

(assert (= (and d!41291 (not c!24999)) b!134386))

(assert (= (and d!41291 (not res!64625)) b!134387))

(declare-fun m!159667 () Bool)

(assert (=> d!41291 m!159667))

(declare-fun m!159669 () Bool)

(assert (=> b!134385 m!159669))

(assert (=> b!134385 m!159029))

(assert (=> b!134385 m!159029))

(declare-fun m!159671 () Bool)

(assert (=> b!134385 m!159671))

(assert (=> b!134387 m!159029))

(assert (=> b!134387 m!159029))

(assert (=> b!134387 m!159671))

(assert (=> bm!14716 d!41291))

(declare-fun d!41293 () Bool)

(assert (=> d!41293 (isDefined!125 (getValueByKey!171 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun lt!70411 () Unit!4150)

(assert (=> d!41293 (= lt!70411 (choose!831 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun e!87534 () Bool)

(assert (=> d!41293 e!87534))

(declare-fun res!64626 () Bool)

(assert (=> d!41293 (=> (not res!64626) (not e!87534))))

(assert (=> d!41293 (= res!64626 (isStrictlySorted!317 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))))

(assert (=> d!41293 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) lt!70411)))

(declare-fun b!134388 () Bool)

(assert (=> b!134388 (= e!87534 (containsKey!175 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!41293 res!64626) b!134388))

(assert (=> d!41293 m!156287))

(assert (=> d!41293 m!157133))

(assert (=> d!41293 m!157133))

(assert (=> d!41293 m!157135))

(assert (=> d!41293 m!156287))

(declare-fun m!159673 () Bool)

(assert (=> d!41293 m!159673))

(declare-fun m!159675 () Bool)

(assert (=> d!41293 m!159675))

(assert (=> b!134388 m!156287))

(assert (=> b!134388 m!157129))

(assert (=> b!133211 d!41293))

(declare-fun d!41295 () Bool)

(assert (=> d!41295 (= (isDefined!125 (getValueByKey!171 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))) (not (isEmpty!415 (getValueByKey!171 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun bs!5609 () Bool)

(assert (= bs!5609 d!41295))

(assert (=> bs!5609 m!157133))

(declare-fun m!159677 () Bool)

(assert (=> bs!5609 m!159677))

(assert (=> b!133211 d!41295))

(declare-fun b!134389 () Bool)

(declare-fun e!87535 () Option!177)

(assert (=> b!134389 (= e!87535 (Some!176 (_2!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))))))

(declare-fun b!134392 () Bool)

(declare-fun e!87536 () Option!177)

(assert (=> b!134392 (= e!87536 None!175)))

(declare-fun b!134391 () Bool)

(assert (=> b!134391 (= e!87536 (getValueByKey!171 (t!6198 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!134390 () Bool)

(assert (=> b!134390 (= e!87535 e!87536)))

(declare-fun c!25001 () Bool)

(assert (=> b!134390 (= c!25001 (and ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (not (= (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun c!25000 () Bool)

(declare-fun d!41297 () Bool)

(assert (=> d!41297 (= c!25000 (and ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (= (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!41297 (= (getValueByKey!171 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) e!87535)))

(assert (= (and d!41297 c!25000) b!134389))

(assert (= (and d!41297 (not c!25000)) b!134390))

(assert (= (and b!134390 c!25001) b!134391))

(assert (= (and b!134390 (not c!25001)) b!134392))

(assert (=> b!134391 m!156287))

(declare-fun m!159679 () Bool)

(assert (=> b!134391 m!159679))

(assert (=> b!133211 d!41297))

(declare-fun d!41299 () Bool)

(assert (=> d!41299 (= (apply!116 (+!170 lt!69847 (tuple2!2609 lt!69858 (zeroValue!2720 newMap!16))) lt!69845) (apply!116 lt!69847 lt!69845))))

(declare-fun lt!70412 () Unit!4150)

(assert (=> d!41299 (= lt!70412 (choose!828 lt!69847 lt!69858 (zeroValue!2720 newMap!16) lt!69845))))

(declare-fun e!87537 () Bool)

(assert (=> d!41299 e!87537))

(declare-fun res!64627 () Bool)

(assert (=> d!41299 (=> (not res!64627) (not e!87537))))

(assert (=> d!41299 (= res!64627 (contains!896 lt!69847 lt!69845))))

(assert (=> d!41299 (= (addApplyDifferent!92 lt!69847 lt!69858 (zeroValue!2720 newMap!16) lt!69845) lt!70412)))

(declare-fun b!134393 () Bool)

(assert (=> b!134393 (= e!87537 (not (= lt!69845 lt!69858)))))

(assert (= (and d!41299 res!64627) b!134393))

(assert (=> d!41299 m!157649))

(assert (=> d!41299 m!157619))

(assert (=> d!41299 m!157637))

(declare-fun m!159681 () Bool)

(assert (=> d!41299 m!159681))

(declare-fun m!159683 () Bool)

(assert (=> d!41299 m!159683))

(assert (=> d!41299 m!157619))

(assert (=> b!133442 d!41299))

(declare-fun d!41301 () Bool)

(assert (=> d!41301 (= (apply!116 lt!69847 lt!69845) (get!1491 (getValueByKey!171 (toList!869 lt!69847) lt!69845)))))

(declare-fun bs!5610 () Bool)

(assert (= bs!5610 d!41301))

(declare-fun m!159685 () Bool)

(assert (=> bs!5610 m!159685))

(assert (=> bs!5610 m!159685))

(declare-fun m!159687 () Bool)

(assert (=> bs!5610 m!159687))

(assert (=> b!133442 d!41301))

(declare-fun d!41303 () Bool)

(declare-fun e!87538 () Bool)

(assert (=> d!41303 e!87538))

(declare-fun res!64629 () Bool)

(assert (=> d!41303 (=> (not res!64629) (not e!87538))))

(declare-fun lt!70414 () ListLongMap!1707)

(assert (=> d!41303 (= res!64629 (contains!896 lt!70414 (_1!1314 (tuple2!2609 lt!69858 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70416 () List!1735)

(assert (=> d!41303 (= lt!70414 (ListLongMap!1708 lt!70416))))

(declare-fun lt!70415 () Unit!4150)

(declare-fun lt!70413 () Unit!4150)

(assert (=> d!41303 (= lt!70415 lt!70413)))

(assert (=> d!41303 (= (getValueByKey!171 lt!70416 (_1!1314 (tuple2!2609 lt!69858 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69858 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41303 (= lt!70413 (lemmaContainsTupThenGetReturnValue!88 lt!70416 (_1!1314 (tuple2!2609 lt!69858 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69858 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41303 (= lt!70416 (insertStrictlySorted!90 (toList!869 lt!69847) (_1!1314 (tuple2!2609 lt!69858 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69858 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41303 (= (+!170 lt!69847 (tuple2!2609 lt!69858 (zeroValue!2720 newMap!16))) lt!70414)))

(declare-fun b!134394 () Bool)

(declare-fun res!64628 () Bool)

(assert (=> b!134394 (=> (not res!64628) (not e!87538))))

(assert (=> b!134394 (= res!64628 (= (getValueByKey!171 (toList!869 lt!70414) (_1!1314 (tuple2!2609 lt!69858 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69858 (zeroValue!2720 newMap!16))))))))

(declare-fun b!134395 () Bool)

(assert (=> b!134395 (= e!87538 (contains!898 (toList!869 lt!70414) (tuple2!2609 lt!69858 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41303 res!64629) b!134394))

(assert (= (and b!134394 res!64628) b!134395))

(declare-fun m!159689 () Bool)

(assert (=> d!41303 m!159689))

(declare-fun m!159691 () Bool)

(assert (=> d!41303 m!159691))

(declare-fun m!159693 () Bool)

(assert (=> d!41303 m!159693))

(declare-fun m!159695 () Bool)

(assert (=> d!41303 m!159695))

(declare-fun m!159697 () Bool)

(assert (=> b!134394 m!159697))

(declare-fun m!159699 () Bool)

(assert (=> b!134395 m!159699))

(assert (=> b!133442 d!41303))

(declare-fun d!41305 () Bool)

(assert (=> d!41305 (= (apply!116 lt!69852 lt!69840) (get!1491 (getValueByKey!171 (toList!869 lt!69852) lt!69840)))))

(declare-fun bs!5611 () Bool)

(assert (= bs!5611 d!41305))

(declare-fun m!159701 () Bool)

(assert (=> bs!5611 m!159701))

(assert (=> bs!5611 m!159701))

(declare-fun m!159703 () Bool)

(assert (=> bs!5611 m!159703))

(assert (=> b!133442 d!41305))

(declare-fun b!134396 () Bool)

(declare-fun lt!70417 () Unit!4150)

(declare-fun lt!70421 () Unit!4150)

(assert (=> b!134396 (= lt!70417 lt!70421)))

(declare-fun lt!70418 () ListLongMap!1707)

(declare-fun lt!70420 () V!3483)

(declare-fun lt!70419 () (_ BitVec 64))

(declare-fun lt!70422 () (_ BitVec 64))

(assert (=> b!134396 (not (contains!896 (+!170 lt!70418 (tuple2!2609 lt!70422 lt!70420)) lt!70419))))

(assert (=> b!134396 (= lt!70421 (addStillNotContains!63 lt!70418 lt!70422 lt!70420 lt!70419))))

(assert (=> b!134396 (= lt!70419 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134396 (= lt!70420 (get!1488 (select (arr!2261 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134396 (= lt!70422 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!14820 () ListLongMap!1707)

(assert (=> b!134396 (= lt!70418 call!14820)))

(declare-fun e!87545 () ListLongMap!1707)

(assert (=> b!134396 (= e!87545 (+!170 call!14820 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134397 () Bool)

(declare-fun lt!70423 () ListLongMap!1707)

(declare-fun e!87542 () Bool)

(assert (=> b!134397 (= e!87542 (= lt!70423 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!134398 () Bool)

(assert (=> b!134398 (= e!87542 (isEmpty!414 lt!70423))))

(declare-fun b!134399 () Bool)

(declare-fun e!87543 () ListLongMap!1707)

(assert (=> b!134399 (= e!87543 (ListLongMap!1708 Nil!1732))))

(declare-fun b!134400 () Bool)

(declare-fun e!87540 () Bool)

(declare-fun e!87541 () Bool)

(assert (=> b!134400 (= e!87540 e!87541)))

(declare-fun c!25005 () Bool)

(declare-fun e!87544 () Bool)

(assert (=> b!134400 (= c!25005 e!87544)))

(declare-fun res!64633 () Bool)

(assert (=> b!134400 (=> (not res!64633) (not e!87544))))

(assert (=> b!134400 (= res!64633 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!134401 () Bool)

(assert (=> b!134401 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (=> b!134401 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))))))

(declare-fun e!87539 () Bool)

(assert (=> b!134401 (= e!87539 (= (apply!116 lt!70423 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134403 () Bool)

(assert (=> b!134403 (= e!87541 e!87539)))

(assert (=> b!134403 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun res!64632 () Bool)

(assert (=> b!134403 (= res!64632 (contains!896 lt!70423 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134403 (=> (not res!64632) (not e!87539))))

(declare-fun b!134404 () Bool)

(assert (=> b!134404 (= e!87543 e!87545)))

(declare-fun c!25002 () Bool)

(assert (=> b!134404 (= c!25002 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134405 () Bool)

(declare-fun res!64631 () Bool)

(assert (=> b!134405 (=> (not res!64631) (not e!87540))))

(assert (=> b!134405 (= res!64631 (not (contains!896 lt!70423 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134406 () Bool)

(assert (=> b!134406 (= e!87541 e!87542)))

(declare-fun c!25004 () Bool)

(assert (=> b!134406 (= c!25004 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(declare-fun bm!14817 () Bool)

(assert (=> bm!14817 (= call!14820 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!134407 () Bool)

(assert (=> b!134407 (= e!87544 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134407 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134402 () Bool)

(assert (=> b!134402 (= e!87545 call!14820)))

(declare-fun d!41307 () Bool)

(assert (=> d!41307 e!87540))

(declare-fun res!64630 () Bool)

(assert (=> d!41307 (=> (not res!64630) (not e!87540))))

(assert (=> d!41307 (= res!64630 (not (contains!896 lt!70423 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41307 (= lt!70423 e!87543)))

(declare-fun c!25003 () Bool)

(assert (=> d!41307 (= c!25003 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!41307 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41307 (= (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!70423)))

(assert (= (and d!41307 c!25003) b!134399))

(assert (= (and d!41307 (not c!25003)) b!134404))

(assert (= (and b!134404 c!25002) b!134396))

(assert (= (and b!134404 (not c!25002)) b!134402))

(assert (= (or b!134396 b!134402) bm!14817))

(assert (= (and d!41307 res!64630) b!134405))

(assert (= (and b!134405 res!64631) b!134400))

(assert (= (and b!134400 res!64633) b!134407))

(assert (= (and b!134400 c!25005) b!134403))

(assert (= (and b!134400 (not c!25005)) b!134406))

(assert (= (and b!134403 res!64632) b!134401))

(assert (= (and b!134406 c!25004) b!134397))

(assert (= (and b!134406 (not c!25004)) b!134398))

(declare-fun b_lambda!6039 () Bool)

(assert (=> (not b_lambda!6039) (not b!134396)))

(assert (=> b!134396 t!6205))

(declare-fun b_and!8373 () Bool)

(assert (= b_and!8369 (and (=> t!6205 result!4009) b_and!8373)))

(assert (=> b!134396 t!6207))

(declare-fun b_and!8375 () Bool)

(assert (= b_and!8371 (and (=> t!6207 result!4011) b_and!8375)))

(declare-fun b_lambda!6041 () Bool)

(assert (=> (not b_lambda!6041) (not b!134401)))

(assert (=> b!134401 t!6205))

(declare-fun b_and!8377 () Bool)

(assert (= b_and!8373 (and (=> t!6205 result!4009) b_and!8377)))

(assert (=> b!134401 t!6207))

(declare-fun b_and!8379 () Bool)

(assert (= b_and!8375 (and (=> t!6207 result!4011) b_and!8379)))

(declare-fun m!159705 () Bool)

(assert (=> d!41307 m!159705))

(assert (=> d!41307 m!156571))

(declare-fun m!159707 () Bool)

(assert (=> b!134397 m!159707))

(declare-fun m!159709 () Bool)

(assert (=> b!134396 m!159709))

(declare-fun m!159711 () Bool)

(assert (=> b!134396 m!159711))

(assert (=> b!134396 m!159709))

(assert (=> b!134396 m!156647))

(assert (=> b!134396 m!157609))

(assert (=> b!134396 m!156647))

(assert (=> b!134396 m!157611))

(declare-fun m!159713 () Bool)

(assert (=> b!134396 m!159713))

(assert (=> b!134396 m!157609))

(assert (=> b!134396 m!156533))

(declare-fun m!159715 () Bool)

(assert (=> b!134396 m!159715))

(assert (=> b!134401 m!156533))

(declare-fun m!159717 () Bool)

(assert (=> b!134401 m!159717))

(assert (=> b!134401 m!156647))

(assert (=> b!134401 m!156533))

(assert (=> b!134401 m!157609))

(assert (=> b!134401 m!156647))

(assert (=> b!134401 m!157611))

(assert (=> b!134401 m!157609))

(assert (=> bm!14817 m!159707))

(assert (=> b!134404 m!156533))

(assert (=> b!134404 m!156533))

(assert (=> b!134404 m!156557))

(declare-fun m!159719 () Bool)

(assert (=> b!134405 m!159719))

(assert (=> b!134403 m!156533))

(assert (=> b!134403 m!156533))

(declare-fun m!159721 () Bool)

(assert (=> b!134403 m!159721))

(assert (=> b!134407 m!156533))

(assert (=> b!134407 m!156533))

(assert (=> b!134407 m!156557))

(declare-fun m!159723 () Bool)

(assert (=> b!134398 m!159723))

(assert (=> b!133442 d!41307))

(declare-fun d!41309 () Bool)

(assert (=> d!41309 (contains!896 (+!170 lt!69839 (tuple2!2609 lt!69842 (zeroValue!2720 newMap!16))) lt!69849)))

(declare-fun lt!70424 () Unit!4150)

(assert (=> d!41309 (= lt!70424 (choose!829 lt!69839 lt!69842 (zeroValue!2720 newMap!16) lt!69849))))

(assert (=> d!41309 (contains!896 lt!69839 lt!69849)))

(assert (=> d!41309 (= (addStillContains!92 lt!69839 lt!69842 (zeroValue!2720 newMap!16) lt!69849) lt!70424)))

(declare-fun bs!5612 () Bool)

(assert (= bs!5612 d!41309))

(assert (=> bs!5612 m!157629))

(assert (=> bs!5612 m!157629))

(assert (=> bs!5612 m!157645))

(declare-fun m!159725 () Bool)

(assert (=> bs!5612 m!159725))

(declare-fun m!159727 () Bool)

(assert (=> bs!5612 m!159727))

(assert (=> b!133442 d!41309))

(declare-fun d!41311 () Bool)

(assert (=> d!41311 (= (apply!116 (+!170 lt!69852 (tuple2!2609 lt!69854 (minValue!2720 newMap!16))) lt!69840) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69852 (tuple2!2609 lt!69854 (minValue!2720 newMap!16)))) lt!69840)))))

(declare-fun bs!5613 () Bool)

(assert (= bs!5613 d!41311))

(declare-fun m!159729 () Bool)

(assert (=> bs!5613 m!159729))

(assert (=> bs!5613 m!159729))

(declare-fun m!159731 () Bool)

(assert (=> bs!5613 m!159731))

(assert (=> b!133442 d!41311))

(declare-fun d!41313 () Bool)

(assert (=> d!41313 (= (apply!116 (+!170 lt!69852 (tuple2!2609 lt!69854 (minValue!2720 newMap!16))) lt!69840) (apply!116 lt!69852 lt!69840))))

(declare-fun lt!70425 () Unit!4150)

(assert (=> d!41313 (= lt!70425 (choose!828 lt!69852 lt!69854 (minValue!2720 newMap!16) lt!69840))))

(declare-fun e!87546 () Bool)

(assert (=> d!41313 e!87546))

(declare-fun res!64634 () Bool)

(assert (=> d!41313 (=> (not res!64634) (not e!87546))))

(assert (=> d!41313 (= res!64634 (contains!896 lt!69852 lt!69840))))

(assert (=> d!41313 (= (addApplyDifferent!92 lt!69852 lt!69854 (minValue!2720 newMap!16) lt!69840) lt!70425)))

(declare-fun b!134408 () Bool)

(assert (=> b!134408 (= e!87546 (not (= lt!69840 lt!69854)))))

(assert (= (and d!41313 res!64634) b!134408))

(assert (=> d!41313 m!157647))

(assert (=> d!41313 m!157633))

(assert (=> d!41313 m!157635))

(declare-fun m!159733 () Bool)

(assert (=> d!41313 m!159733))

(declare-fun m!159735 () Bool)

(assert (=> d!41313 m!159735))

(assert (=> d!41313 m!157633))

(assert (=> b!133442 d!41313))

(declare-fun d!41315 () Bool)

(assert (=> d!41315 (= (apply!116 (+!170 lt!69851 (tuple2!2609 lt!69848 (minValue!2720 newMap!16))) lt!69850) (apply!116 lt!69851 lt!69850))))

(declare-fun lt!70426 () Unit!4150)

(assert (=> d!41315 (= lt!70426 (choose!828 lt!69851 lt!69848 (minValue!2720 newMap!16) lt!69850))))

(declare-fun e!87547 () Bool)

(assert (=> d!41315 e!87547))

(declare-fun res!64635 () Bool)

(assert (=> d!41315 (=> (not res!64635) (not e!87547))))

(assert (=> d!41315 (= res!64635 (contains!896 lt!69851 lt!69850))))

(assert (=> d!41315 (= (addApplyDifferent!92 lt!69851 lt!69848 (minValue!2720 newMap!16) lt!69850) lt!70426)))

(declare-fun b!134409 () Bool)

(assert (=> b!134409 (= e!87547 (not (= lt!69850 lt!69848)))))

(assert (= (and d!41315 res!64635) b!134409))

(assert (=> d!41315 m!157639))

(assert (=> d!41315 m!157623))

(assert (=> d!41315 m!157625))

(declare-fun m!159737 () Bool)

(assert (=> d!41315 m!159737))

(declare-fun m!159739 () Bool)

(assert (=> d!41315 m!159739))

(assert (=> d!41315 m!157623))

(assert (=> b!133442 d!41315))

(declare-fun d!41317 () Bool)

(declare-fun e!87548 () Bool)

(assert (=> d!41317 e!87548))

(declare-fun res!64637 () Bool)

(assert (=> d!41317 (=> (not res!64637) (not e!87548))))

(declare-fun lt!70428 () ListLongMap!1707)

(assert (=> d!41317 (= res!64637 (contains!896 lt!70428 (_1!1314 (tuple2!2609 lt!69842 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70430 () List!1735)

(assert (=> d!41317 (= lt!70428 (ListLongMap!1708 lt!70430))))

(declare-fun lt!70429 () Unit!4150)

(declare-fun lt!70427 () Unit!4150)

(assert (=> d!41317 (= lt!70429 lt!70427)))

(assert (=> d!41317 (= (getValueByKey!171 lt!70430 (_1!1314 (tuple2!2609 lt!69842 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69842 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41317 (= lt!70427 (lemmaContainsTupThenGetReturnValue!88 lt!70430 (_1!1314 (tuple2!2609 lt!69842 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69842 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41317 (= lt!70430 (insertStrictlySorted!90 (toList!869 lt!69839) (_1!1314 (tuple2!2609 lt!69842 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69842 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41317 (= (+!170 lt!69839 (tuple2!2609 lt!69842 (zeroValue!2720 newMap!16))) lt!70428)))

(declare-fun b!134410 () Bool)

(declare-fun res!64636 () Bool)

(assert (=> b!134410 (=> (not res!64636) (not e!87548))))

(assert (=> b!134410 (= res!64636 (= (getValueByKey!171 (toList!869 lt!70428) (_1!1314 (tuple2!2609 lt!69842 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69842 (zeroValue!2720 newMap!16))))))))

(declare-fun b!134411 () Bool)

(assert (=> b!134411 (= e!87548 (contains!898 (toList!869 lt!70428) (tuple2!2609 lt!69842 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41317 res!64637) b!134410))

(assert (= (and b!134410 res!64636) b!134411))

(declare-fun m!159741 () Bool)

(assert (=> d!41317 m!159741))

(declare-fun m!159743 () Bool)

(assert (=> d!41317 m!159743))

(declare-fun m!159745 () Bool)

(assert (=> d!41317 m!159745))

(declare-fun m!159747 () Bool)

(assert (=> d!41317 m!159747))

(declare-fun m!159749 () Bool)

(assert (=> b!134410 m!159749))

(declare-fun m!159751 () Bool)

(assert (=> b!134411 m!159751))

(assert (=> b!133442 d!41317))

(declare-fun d!41319 () Bool)

(assert (=> d!41319 (= (apply!116 (+!170 lt!69851 (tuple2!2609 lt!69848 (minValue!2720 newMap!16))) lt!69850) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69851 (tuple2!2609 lt!69848 (minValue!2720 newMap!16)))) lt!69850)))))

(declare-fun bs!5614 () Bool)

(assert (= bs!5614 d!41319))

(declare-fun m!159753 () Bool)

(assert (=> bs!5614 m!159753))

(assert (=> bs!5614 m!159753))

(declare-fun m!159755 () Bool)

(assert (=> bs!5614 m!159755))

(assert (=> b!133442 d!41319))

(declare-fun d!41321 () Bool)

(declare-fun e!87549 () Bool)

(assert (=> d!41321 e!87549))

(declare-fun res!64638 () Bool)

(assert (=> d!41321 (=> res!64638 e!87549)))

(declare-fun lt!70431 () Bool)

(assert (=> d!41321 (= res!64638 (not lt!70431))))

(declare-fun lt!70433 () Bool)

(assert (=> d!41321 (= lt!70431 lt!70433)))

(declare-fun lt!70432 () Unit!4150)

(declare-fun e!87550 () Unit!4150)

(assert (=> d!41321 (= lt!70432 e!87550)))

(declare-fun c!25006 () Bool)

(assert (=> d!41321 (= c!25006 lt!70433)))

(assert (=> d!41321 (= lt!70433 (containsKey!175 (toList!869 (+!170 lt!69839 (tuple2!2609 lt!69842 (zeroValue!2720 newMap!16)))) lt!69849))))

(assert (=> d!41321 (= (contains!896 (+!170 lt!69839 (tuple2!2609 lt!69842 (zeroValue!2720 newMap!16))) lt!69849) lt!70431)))

(declare-fun b!134412 () Bool)

(declare-fun lt!70434 () Unit!4150)

(assert (=> b!134412 (= e!87550 lt!70434)))

(assert (=> b!134412 (= lt!70434 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69839 (tuple2!2609 lt!69842 (zeroValue!2720 newMap!16)))) lt!69849))))

(assert (=> b!134412 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69839 (tuple2!2609 lt!69842 (zeroValue!2720 newMap!16)))) lt!69849))))

(declare-fun b!134413 () Bool)

(declare-fun Unit!4223 () Unit!4150)

(assert (=> b!134413 (= e!87550 Unit!4223)))

(declare-fun b!134414 () Bool)

(assert (=> b!134414 (= e!87549 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69839 (tuple2!2609 lt!69842 (zeroValue!2720 newMap!16)))) lt!69849)))))

(assert (= (and d!41321 c!25006) b!134412))

(assert (= (and d!41321 (not c!25006)) b!134413))

(assert (= (and d!41321 (not res!64638)) b!134414))

(declare-fun m!159757 () Bool)

(assert (=> d!41321 m!159757))

(declare-fun m!159759 () Bool)

(assert (=> b!134412 m!159759))

(declare-fun m!159761 () Bool)

(assert (=> b!134412 m!159761))

(assert (=> b!134412 m!159761))

(declare-fun m!159763 () Bool)

(assert (=> b!134412 m!159763))

(assert (=> b!134414 m!159761))

(assert (=> b!134414 m!159761))

(assert (=> b!134414 m!159763))

(assert (=> b!133442 d!41321))

(declare-fun d!41323 () Bool)

(assert (=> d!41323 (= (apply!116 (+!170 lt!69847 (tuple2!2609 lt!69858 (zeroValue!2720 newMap!16))) lt!69845) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69847 (tuple2!2609 lt!69858 (zeroValue!2720 newMap!16)))) lt!69845)))))

(declare-fun bs!5615 () Bool)

(assert (= bs!5615 d!41323))

(declare-fun m!159765 () Bool)

(assert (=> bs!5615 m!159765))

(assert (=> bs!5615 m!159765))

(declare-fun m!159767 () Bool)

(assert (=> bs!5615 m!159767))

(assert (=> b!133442 d!41323))

(declare-fun d!41325 () Bool)

(assert (=> d!41325 (= (apply!116 lt!69851 lt!69850) (get!1491 (getValueByKey!171 (toList!869 lt!69851) lt!69850)))))

(declare-fun bs!5616 () Bool)

(assert (= bs!5616 d!41325))

(declare-fun m!159769 () Bool)

(assert (=> bs!5616 m!159769))

(assert (=> bs!5616 m!159769))

(declare-fun m!159771 () Bool)

(assert (=> bs!5616 m!159771))

(assert (=> b!133442 d!41325))

(declare-fun d!41327 () Bool)

(declare-fun e!87551 () Bool)

(assert (=> d!41327 e!87551))

(declare-fun res!64640 () Bool)

(assert (=> d!41327 (=> (not res!64640) (not e!87551))))

(declare-fun lt!70436 () ListLongMap!1707)

(assert (=> d!41327 (= res!64640 (contains!896 lt!70436 (_1!1314 (tuple2!2609 lt!69848 (minValue!2720 newMap!16)))))))

(declare-fun lt!70438 () List!1735)

(assert (=> d!41327 (= lt!70436 (ListLongMap!1708 lt!70438))))

(declare-fun lt!70437 () Unit!4150)

(declare-fun lt!70435 () Unit!4150)

(assert (=> d!41327 (= lt!70437 lt!70435)))

(assert (=> d!41327 (= (getValueByKey!171 lt!70438 (_1!1314 (tuple2!2609 lt!69848 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69848 (minValue!2720 newMap!16)))))))

(assert (=> d!41327 (= lt!70435 (lemmaContainsTupThenGetReturnValue!88 lt!70438 (_1!1314 (tuple2!2609 lt!69848 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69848 (minValue!2720 newMap!16)))))))

(assert (=> d!41327 (= lt!70438 (insertStrictlySorted!90 (toList!869 lt!69851) (_1!1314 (tuple2!2609 lt!69848 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69848 (minValue!2720 newMap!16)))))))

(assert (=> d!41327 (= (+!170 lt!69851 (tuple2!2609 lt!69848 (minValue!2720 newMap!16))) lt!70436)))

(declare-fun b!134415 () Bool)

(declare-fun res!64639 () Bool)

(assert (=> b!134415 (=> (not res!64639) (not e!87551))))

(assert (=> b!134415 (= res!64639 (= (getValueByKey!171 (toList!869 lt!70436) (_1!1314 (tuple2!2609 lt!69848 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69848 (minValue!2720 newMap!16))))))))

(declare-fun b!134416 () Bool)

(assert (=> b!134416 (= e!87551 (contains!898 (toList!869 lt!70436) (tuple2!2609 lt!69848 (minValue!2720 newMap!16))))))

(assert (= (and d!41327 res!64640) b!134415))

(assert (= (and b!134415 res!64639) b!134416))

(declare-fun m!159773 () Bool)

(assert (=> d!41327 m!159773))

(declare-fun m!159775 () Bool)

(assert (=> d!41327 m!159775))

(declare-fun m!159777 () Bool)

(assert (=> d!41327 m!159777))

(declare-fun m!159779 () Bool)

(assert (=> d!41327 m!159779))

(declare-fun m!159781 () Bool)

(assert (=> b!134415 m!159781))

(declare-fun m!159783 () Bool)

(assert (=> b!134416 m!159783))

(assert (=> b!133442 d!41327))

(declare-fun d!41329 () Bool)

(declare-fun e!87552 () Bool)

(assert (=> d!41329 e!87552))

(declare-fun res!64642 () Bool)

(assert (=> d!41329 (=> (not res!64642) (not e!87552))))

(declare-fun lt!70440 () ListLongMap!1707)

(assert (=> d!41329 (= res!64642 (contains!896 lt!70440 (_1!1314 (tuple2!2609 lt!69854 (minValue!2720 newMap!16)))))))

(declare-fun lt!70442 () List!1735)

(assert (=> d!41329 (= lt!70440 (ListLongMap!1708 lt!70442))))

(declare-fun lt!70441 () Unit!4150)

(declare-fun lt!70439 () Unit!4150)

(assert (=> d!41329 (= lt!70441 lt!70439)))

(assert (=> d!41329 (= (getValueByKey!171 lt!70442 (_1!1314 (tuple2!2609 lt!69854 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69854 (minValue!2720 newMap!16)))))))

(assert (=> d!41329 (= lt!70439 (lemmaContainsTupThenGetReturnValue!88 lt!70442 (_1!1314 (tuple2!2609 lt!69854 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69854 (minValue!2720 newMap!16)))))))

(assert (=> d!41329 (= lt!70442 (insertStrictlySorted!90 (toList!869 lt!69852) (_1!1314 (tuple2!2609 lt!69854 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69854 (minValue!2720 newMap!16)))))))

(assert (=> d!41329 (= (+!170 lt!69852 (tuple2!2609 lt!69854 (minValue!2720 newMap!16))) lt!70440)))

(declare-fun b!134417 () Bool)

(declare-fun res!64641 () Bool)

(assert (=> b!134417 (=> (not res!64641) (not e!87552))))

(assert (=> b!134417 (= res!64641 (= (getValueByKey!171 (toList!869 lt!70440) (_1!1314 (tuple2!2609 lt!69854 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69854 (minValue!2720 newMap!16))))))))

(declare-fun b!134418 () Bool)

(assert (=> b!134418 (= e!87552 (contains!898 (toList!869 lt!70440) (tuple2!2609 lt!69854 (minValue!2720 newMap!16))))))

(assert (= (and d!41329 res!64642) b!134417))

(assert (= (and b!134417 res!64641) b!134418))

(declare-fun m!159785 () Bool)

(assert (=> d!41329 m!159785))

(declare-fun m!159787 () Bool)

(assert (=> d!41329 m!159787))

(declare-fun m!159789 () Bool)

(assert (=> d!41329 m!159789))

(declare-fun m!159791 () Bool)

(assert (=> d!41329 m!159791))

(declare-fun m!159793 () Bool)

(assert (=> b!134417 m!159793))

(declare-fun m!159795 () Bool)

(assert (=> b!134418 m!159795))

(assert (=> b!133442 d!41329))

(declare-fun d!41331 () Bool)

(declare-fun res!64643 () Bool)

(declare-fun e!87553 () Bool)

(assert (=> d!41331 (=> res!64643 e!87553)))

(assert (=> d!41331 (= res!64643 (or ((_ is Nil!1732) lt!69953) ((_ is Nil!1732) (t!6198 lt!69953))))))

(assert (=> d!41331 (= (isStrictlySorted!317 lt!69953) e!87553)))

(declare-fun b!134419 () Bool)

(declare-fun e!87554 () Bool)

(assert (=> b!134419 (= e!87553 e!87554)))

(declare-fun res!64644 () Bool)

(assert (=> b!134419 (=> (not res!64644) (not e!87554))))

(assert (=> b!134419 (= res!64644 (bvslt (_1!1314 (h!2336 lt!69953)) (_1!1314 (h!2336 (t!6198 lt!69953)))))))

(declare-fun b!134420 () Bool)

(assert (=> b!134420 (= e!87554 (isStrictlySorted!317 (t!6198 lt!69953)))))

(assert (= (and d!41331 (not res!64643)) b!134419))

(assert (= (and b!134419 res!64644) b!134420))

(declare-fun m!159797 () Bool)

(assert (=> b!134420 m!159797))

(assert (=> d!40683 d!41331))

(declare-fun d!41333 () Bool)

(declare-fun res!64645 () Bool)

(declare-fun e!87555 () Bool)

(assert (=> d!41333 (=> res!64645 e!87555)))

(assert (=> d!41333 (= res!64645 (or ((_ is Nil!1732) (toList!869 lt!69217)) ((_ is Nil!1732) (t!6198 (toList!869 lt!69217)))))))

(assert (=> d!41333 (= (isStrictlySorted!317 (toList!869 lt!69217)) e!87555)))

(declare-fun b!134421 () Bool)

(declare-fun e!87556 () Bool)

(assert (=> b!134421 (= e!87555 e!87556)))

(declare-fun res!64646 () Bool)

(assert (=> b!134421 (=> (not res!64646) (not e!87556))))

(assert (=> b!134421 (= res!64646 (bvslt (_1!1314 (h!2336 (toList!869 lt!69217))) (_1!1314 (h!2336 (t!6198 (toList!869 lt!69217))))))))

(declare-fun b!134422 () Bool)

(assert (=> b!134422 (= e!87556 (isStrictlySorted!317 (t!6198 (toList!869 lt!69217))))))

(assert (= (and d!41333 (not res!64645)) b!134421))

(assert (= (and b!134421 res!64646) b!134422))

(declare-fun m!159799 () Bool)

(assert (=> b!134422 m!159799))

(assert (=> d!40683 d!41333))

(declare-fun d!41335 () Bool)

(assert (=> d!41335 (= (apply!116 (+!170 lt!70122 (tuple2!2609 lt!70119 (minValue!2720 newMap!16))) lt!70121) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!70122 (tuple2!2609 lt!70119 (minValue!2720 newMap!16)))) lt!70121)))))

(declare-fun bs!5617 () Bool)

(assert (= bs!5617 d!41335))

(declare-fun m!159801 () Bool)

(assert (=> bs!5617 m!159801))

(assert (=> bs!5617 m!159801))

(declare-fun m!159803 () Bool)

(assert (=> bs!5617 m!159803))

(assert (=> b!133928 d!41335))

(declare-fun d!41337 () Bool)

(declare-fun e!87557 () Bool)

(assert (=> d!41337 e!87557))

(declare-fun res!64648 () Bool)

(assert (=> d!41337 (=> (not res!64648) (not e!87557))))

(declare-fun lt!70444 () ListLongMap!1707)

(assert (=> d!41337 (= res!64648 (contains!896 lt!70444 (_1!1314 (tuple2!2609 lt!70119 (minValue!2720 newMap!16)))))))

(declare-fun lt!70446 () List!1735)

(assert (=> d!41337 (= lt!70444 (ListLongMap!1708 lt!70446))))

(declare-fun lt!70445 () Unit!4150)

(declare-fun lt!70443 () Unit!4150)

(assert (=> d!41337 (= lt!70445 lt!70443)))

(assert (=> d!41337 (= (getValueByKey!171 lt!70446 (_1!1314 (tuple2!2609 lt!70119 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!70119 (minValue!2720 newMap!16)))))))

(assert (=> d!41337 (= lt!70443 (lemmaContainsTupThenGetReturnValue!88 lt!70446 (_1!1314 (tuple2!2609 lt!70119 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!70119 (minValue!2720 newMap!16)))))))

(assert (=> d!41337 (= lt!70446 (insertStrictlySorted!90 (toList!869 lt!70122) (_1!1314 (tuple2!2609 lt!70119 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!70119 (minValue!2720 newMap!16)))))))

(assert (=> d!41337 (= (+!170 lt!70122 (tuple2!2609 lt!70119 (minValue!2720 newMap!16))) lt!70444)))

(declare-fun b!134423 () Bool)

(declare-fun res!64647 () Bool)

(assert (=> b!134423 (=> (not res!64647) (not e!87557))))

(assert (=> b!134423 (= res!64647 (= (getValueByKey!171 (toList!869 lt!70444) (_1!1314 (tuple2!2609 lt!70119 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!70119 (minValue!2720 newMap!16))))))))

(declare-fun b!134424 () Bool)

(assert (=> b!134424 (= e!87557 (contains!898 (toList!869 lt!70444) (tuple2!2609 lt!70119 (minValue!2720 newMap!16))))))

(assert (= (and d!41337 res!64648) b!134423))

(assert (= (and b!134423 res!64647) b!134424))

(declare-fun m!159805 () Bool)

(assert (=> d!41337 m!159805))

(declare-fun m!159807 () Bool)

(assert (=> d!41337 m!159807))

(declare-fun m!159809 () Bool)

(assert (=> d!41337 m!159809))

(declare-fun m!159811 () Bool)

(assert (=> d!41337 m!159811))

(declare-fun m!159813 () Bool)

(assert (=> b!134423 m!159813))

(declare-fun m!159815 () Bool)

(assert (=> b!134424 m!159815))

(assert (=> b!133928 d!41337))

(declare-fun d!41339 () Bool)

(assert (=> d!41339 (= (apply!116 (+!170 lt!70118 (tuple2!2609 lt!70129 (zeroValue!2720 newMap!16))) lt!70116) (apply!116 lt!70118 lt!70116))))

(declare-fun lt!70447 () Unit!4150)

(assert (=> d!41339 (= lt!70447 (choose!828 lt!70118 lt!70129 (zeroValue!2720 newMap!16) lt!70116))))

(declare-fun e!87558 () Bool)

(assert (=> d!41339 e!87558))

(declare-fun res!64649 () Bool)

(assert (=> d!41339 (=> (not res!64649) (not e!87558))))

(assert (=> d!41339 (= res!64649 (contains!896 lt!70118 lt!70116))))

(assert (=> d!41339 (= (addApplyDifferent!92 lt!70118 lt!70129 (zeroValue!2720 newMap!16) lt!70116) lt!70447)))

(declare-fun b!134425 () Bool)

(assert (=> b!134425 (= e!87558 (not (= lt!70116 lt!70129)))))

(assert (= (and d!41339 res!64649) b!134425))

(assert (=> d!41339 m!158611))

(assert (=> d!41339 m!158581))

(assert (=> d!41339 m!158599))

(declare-fun m!159817 () Bool)

(assert (=> d!41339 m!159817))

(declare-fun m!159819 () Bool)

(assert (=> d!41339 m!159819))

(assert (=> d!41339 m!158581))

(assert (=> b!133928 d!41339))

(declare-fun d!41341 () Bool)

(assert (=> d!41341 (= (apply!116 (+!170 lt!70123 (tuple2!2609 lt!70125 (minValue!2720 newMap!16))) lt!70111) (apply!116 lt!70123 lt!70111))))

(declare-fun lt!70448 () Unit!4150)

(assert (=> d!41341 (= lt!70448 (choose!828 lt!70123 lt!70125 (minValue!2720 newMap!16) lt!70111))))

(declare-fun e!87559 () Bool)

(assert (=> d!41341 e!87559))

(declare-fun res!64650 () Bool)

(assert (=> d!41341 (=> (not res!64650) (not e!87559))))

(assert (=> d!41341 (= res!64650 (contains!896 lt!70123 lt!70111))))

(assert (=> d!41341 (= (addApplyDifferent!92 lt!70123 lt!70125 (minValue!2720 newMap!16) lt!70111) lt!70448)))

(declare-fun b!134426 () Bool)

(assert (=> b!134426 (= e!87559 (not (= lt!70111 lt!70125)))))

(assert (= (and d!41341 res!64650) b!134426))

(assert (=> d!41341 m!158609))

(assert (=> d!41341 m!158595))

(assert (=> d!41341 m!158597))

(declare-fun m!159821 () Bool)

(assert (=> d!41341 m!159821))

(declare-fun m!159823 () Bool)

(assert (=> d!41341 m!159823))

(assert (=> d!41341 m!158595))

(assert (=> b!133928 d!41341))

(declare-fun d!41343 () Bool)

(assert (=> d!41343 (= (apply!116 (+!170 lt!70122 (tuple2!2609 lt!70119 (minValue!2720 newMap!16))) lt!70121) (apply!116 lt!70122 lt!70121))))

(declare-fun lt!70449 () Unit!4150)

(assert (=> d!41343 (= lt!70449 (choose!828 lt!70122 lt!70119 (minValue!2720 newMap!16) lt!70121))))

(declare-fun e!87560 () Bool)

(assert (=> d!41343 e!87560))

(declare-fun res!64651 () Bool)

(assert (=> d!41343 (=> (not res!64651) (not e!87560))))

(assert (=> d!41343 (= res!64651 (contains!896 lt!70122 lt!70121))))

(assert (=> d!41343 (= (addApplyDifferent!92 lt!70122 lt!70119 (minValue!2720 newMap!16) lt!70121) lt!70449)))

(declare-fun b!134427 () Bool)

(assert (=> b!134427 (= e!87560 (not (= lt!70121 lt!70119)))))

(assert (= (and d!41343 res!64651) b!134427))

(assert (=> d!41343 m!158601))

(assert (=> d!41343 m!158585))

(assert (=> d!41343 m!158587))

(declare-fun m!159825 () Bool)

(assert (=> d!41343 m!159825))

(declare-fun m!159827 () Bool)

(assert (=> d!41343 m!159827))

(assert (=> d!41343 m!158585))

(assert (=> b!133928 d!41343))

(declare-fun d!41345 () Bool)

(assert (=> d!41345 (= (apply!116 lt!70123 lt!70111) (get!1491 (getValueByKey!171 (toList!869 lt!70123) lt!70111)))))

(declare-fun bs!5618 () Bool)

(assert (= bs!5618 d!41345))

(declare-fun m!159829 () Bool)

(assert (=> bs!5618 m!159829))

(assert (=> bs!5618 m!159829))

(declare-fun m!159831 () Bool)

(assert (=> bs!5618 m!159831))

(assert (=> b!133928 d!41345))

(declare-fun d!41347 () Bool)

(declare-fun e!87561 () Bool)

(assert (=> d!41347 e!87561))

(declare-fun res!64653 () Bool)

(assert (=> d!41347 (=> (not res!64653) (not e!87561))))

(declare-fun lt!70451 () ListLongMap!1707)

(assert (=> d!41347 (= res!64653 (contains!896 lt!70451 (_1!1314 (tuple2!2609 lt!70113 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70453 () List!1735)

(assert (=> d!41347 (= lt!70451 (ListLongMap!1708 lt!70453))))

(declare-fun lt!70452 () Unit!4150)

(declare-fun lt!70450 () Unit!4150)

(assert (=> d!41347 (= lt!70452 lt!70450)))

(assert (=> d!41347 (= (getValueByKey!171 lt!70453 (_1!1314 (tuple2!2609 lt!70113 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!70113 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41347 (= lt!70450 (lemmaContainsTupThenGetReturnValue!88 lt!70453 (_1!1314 (tuple2!2609 lt!70113 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!70113 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41347 (= lt!70453 (insertStrictlySorted!90 (toList!869 lt!70110) (_1!1314 (tuple2!2609 lt!70113 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!70113 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41347 (= (+!170 lt!70110 (tuple2!2609 lt!70113 (zeroValue!2720 newMap!16))) lt!70451)))

(declare-fun b!134428 () Bool)

(declare-fun res!64652 () Bool)

(assert (=> b!134428 (=> (not res!64652) (not e!87561))))

(assert (=> b!134428 (= res!64652 (= (getValueByKey!171 (toList!869 lt!70451) (_1!1314 (tuple2!2609 lt!70113 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!70113 (zeroValue!2720 newMap!16))))))))

(declare-fun b!134429 () Bool)

(assert (=> b!134429 (= e!87561 (contains!898 (toList!869 lt!70451) (tuple2!2609 lt!70113 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41347 res!64653) b!134428))

(assert (= (and b!134428 res!64652) b!134429))

(declare-fun m!159833 () Bool)

(assert (=> d!41347 m!159833))

(declare-fun m!159835 () Bool)

(assert (=> d!41347 m!159835))

(declare-fun m!159837 () Bool)

(assert (=> d!41347 m!159837))

(declare-fun m!159839 () Bool)

(assert (=> d!41347 m!159839))

(declare-fun m!159841 () Bool)

(assert (=> b!134428 m!159841))

(declare-fun m!159843 () Bool)

(assert (=> b!134429 m!159843))

(assert (=> b!133928 d!41347))

(declare-fun d!41349 () Bool)

(assert (=> d!41349 (= (apply!116 lt!70122 lt!70121) (get!1491 (getValueByKey!171 (toList!869 lt!70122) lt!70121)))))

(declare-fun bs!5619 () Bool)

(assert (= bs!5619 d!41349))

(declare-fun m!159845 () Bool)

(assert (=> bs!5619 m!159845))

(assert (=> bs!5619 m!159845))

(declare-fun m!159847 () Bool)

(assert (=> bs!5619 m!159847))

(assert (=> b!133928 d!41349))

(declare-fun d!41351 () Bool)

(assert (=> d!41351 (= (apply!116 (+!170 lt!70118 (tuple2!2609 lt!70129 (zeroValue!2720 newMap!16))) lt!70116) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!70118 (tuple2!2609 lt!70129 (zeroValue!2720 newMap!16)))) lt!70116)))))

(declare-fun bs!5620 () Bool)

(assert (= bs!5620 d!41351))

(declare-fun m!159849 () Bool)

(assert (=> bs!5620 m!159849))

(assert (=> bs!5620 m!159849))

(declare-fun m!159851 () Bool)

(assert (=> bs!5620 m!159851))

(assert (=> b!133928 d!41351))

(declare-fun d!41353 () Bool)

(assert (=> d!41353 (contains!896 (+!170 lt!70110 (tuple2!2609 lt!70113 (zeroValue!2720 newMap!16))) lt!70120)))

(declare-fun lt!70454 () Unit!4150)

(assert (=> d!41353 (= lt!70454 (choose!829 lt!70110 lt!70113 (zeroValue!2720 newMap!16) lt!70120))))

(assert (=> d!41353 (contains!896 lt!70110 lt!70120)))

(assert (=> d!41353 (= (addStillContains!92 lt!70110 lt!70113 (zeroValue!2720 newMap!16) lt!70120) lt!70454)))

(declare-fun bs!5621 () Bool)

(assert (= bs!5621 d!41353))

(assert (=> bs!5621 m!158591))

(assert (=> bs!5621 m!158591))

(assert (=> bs!5621 m!158607))

(declare-fun m!159853 () Bool)

(assert (=> bs!5621 m!159853))

(declare-fun m!159855 () Bool)

(assert (=> bs!5621 m!159855))

(assert (=> b!133928 d!41353))

(declare-fun d!41355 () Bool)

(declare-fun e!87562 () Bool)

(assert (=> d!41355 e!87562))

(declare-fun res!64655 () Bool)

(assert (=> d!41355 (=> (not res!64655) (not e!87562))))

(declare-fun lt!70456 () ListLongMap!1707)

(assert (=> d!41355 (= res!64655 (contains!896 lt!70456 (_1!1314 (tuple2!2609 lt!70125 (minValue!2720 newMap!16)))))))

(declare-fun lt!70458 () List!1735)

(assert (=> d!41355 (= lt!70456 (ListLongMap!1708 lt!70458))))

(declare-fun lt!70457 () Unit!4150)

(declare-fun lt!70455 () Unit!4150)

(assert (=> d!41355 (= lt!70457 lt!70455)))

(assert (=> d!41355 (= (getValueByKey!171 lt!70458 (_1!1314 (tuple2!2609 lt!70125 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!70125 (minValue!2720 newMap!16)))))))

(assert (=> d!41355 (= lt!70455 (lemmaContainsTupThenGetReturnValue!88 lt!70458 (_1!1314 (tuple2!2609 lt!70125 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!70125 (minValue!2720 newMap!16)))))))

(assert (=> d!41355 (= lt!70458 (insertStrictlySorted!90 (toList!869 lt!70123) (_1!1314 (tuple2!2609 lt!70125 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!70125 (minValue!2720 newMap!16)))))))

(assert (=> d!41355 (= (+!170 lt!70123 (tuple2!2609 lt!70125 (minValue!2720 newMap!16))) lt!70456)))

(declare-fun b!134430 () Bool)

(declare-fun res!64654 () Bool)

(assert (=> b!134430 (=> (not res!64654) (not e!87562))))

(assert (=> b!134430 (= res!64654 (= (getValueByKey!171 (toList!869 lt!70456) (_1!1314 (tuple2!2609 lt!70125 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!70125 (minValue!2720 newMap!16))))))))

(declare-fun b!134431 () Bool)

(assert (=> b!134431 (= e!87562 (contains!898 (toList!869 lt!70456) (tuple2!2609 lt!70125 (minValue!2720 newMap!16))))))

(assert (= (and d!41355 res!64655) b!134430))

(assert (= (and b!134430 res!64654) b!134431))

(declare-fun m!159857 () Bool)

(assert (=> d!41355 m!159857))

(declare-fun m!159859 () Bool)

(assert (=> d!41355 m!159859))

(declare-fun m!159861 () Bool)

(assert (=> d!41355 m!159861))

(declare-fun m!159863 () Bool)

(assert (=> d!41355 m!159863))

(declare-fun m!159865 () Bool)

(assert (=> b!134430 m!159865))

(declare-fun m!159867 () Bool)

(assert (=> b!134431 m!159867))

(assert (=> b!133928 d!41355))

(declare-fun d!41357 () Bool)

(assert (=> d!41357 (= (apply!116 lt!70118 lt!70116) (get!1491 (getValueByKey!171 (toList!869 lt!70118) lt!70116)))))

(declare-fun bs!5622 () Bool)

(assert (= bs!5622 d!41357))

(declare-fun m!159869 () Bool)

(assert (=> bs!5622 m!159869))

(assert (=> bs!5622 m!159869))

(declare-fun m!159871 () Bool)

(assert (=> bs!5622 m!159871))

(assert (=> b!133928 d!41357))

(declare-fun d!41359 () Bool)

(assert (=> d!41359 (= (apply!116 (+!170 lt!70123 (tuple2!2609 lt!70125 (minValue!2720 newMap!16))) lt!70111) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!70123 (tuple2!2609 lt!70125 (minValue!2720 newMap!16)))) lt!70111)))))

(declare-fun bs!5623 () Bool)

(assert (= bs!5623 d!41359))

(declare-fun m!159873 () Bool)

(assert (=> bs!5623 m!159873))

(assert (=> bs!5623 m!159873))

(declare-fun m!159875 () Bool)

(assert (=> bs!5623 m!159875))

(assert (=> b!133928 d!41359))

(declare-fun d!41361 () Bool)

(declare-fun e!87563 () Bool)

(assert (=> d!41361 e!87563))

(declare-fun res!64656 () Bool)

(assert (=> d!41361 (=> res!64656 e!87563)))

(declare-fun lt!70459 () Bool)

(assert (=> d!41361 (= res!64656 (not lt!70459))))

(declare-fun lt!70461 () Bool)

(assert (=> d!41361 (= lt!70459 lt!70461)))

(declare-fun lt!70460 () Unit!4150)

(declare-fun e!87564 () Unit!4150)

(assert (=> d!41361 (= lt!70460 e!87564)))

(declare-fun c!25007 () Bool)

(assert (=> d!41361 (= c!25007 lt!70461)))

(assert (=> d!41361 (= lt!70461 (containsKey!175 (toList!869 (+!170 lt!70110 (tuple2!2609 lt!70113 (zeroValue!2720 newMap!16)))) lt!70120))))

(assert (=> d!41361 (= (contains!896 (+!170 lt!70110 (tuple2!2609 lt!70113 (zeroValue!2720 newMap!16))) lt!70120) lt!70459)))

(declare-fun b!134432 () Bool)

(declare-fun lt!70462 () Unit!4150)

(assert (=> b!134432 (= e!87564 lt!70462)))

(assert (=> b!134432 (= lt!70462 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!70110 (tuple2!2609 lt!70113 (zeroValue!2720 newMap!16)))) lt!70120))))

(assert (=> b!134432 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!70110 (tuple2!2609 lt!70113 (zeroValue!2720 newMap!16)))) lt!70120))))

(declare-fun b!134433 () Bool)

(declare-fun Unit!4224 () Unit!4150)

(assert (=> b!134433 (= e!87564 Unit!4224)))

(declare-fun b!134434 () Bool)

(assert (=> b!134434 (= e!87563 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!70110 (tuple2!2609 lt!70113 (zeroValue!2720 newMap!16)))) lt!70120)))))

(assert (= (and d!41361 c!25007) b!134432))

(assert (= (and d!41361 (not c!25007)) b!134433))

(assert (= (and d!41361 (not res!64656)) b!134434))

(declare-fun m!159877 () Bool)

(assert (=> d!41361 m!159877))

(declare-fun m!159879 () Bool)

(assert (=> b!134432 m!159879))

(declare-fun m!159881 () Bool)

(assert (=> b!134432 m!159881))

(assert (=> b!134432 m!159881))

(declare-fun m!159883 () Bool)

(assert (=> b!134432 m!159883))

(assert (=> b!134434 m!159881))

(assert (=> b!134434 m!159881))

(assert (=> b!134434 m!159883))

(assert (=> b!133928 d!41361))

(declare-fun d!41363 () Bool)

(declare-fun e!87565 () Bool)

(assert (=> d!41363 e!87565))

(declare-fun res!64658 () Bool)

(assert (=> d!41363 (=> (not res!64658) (not e!87565))))

(declare-fun lt!70464 () ListLongMap!1707)

(assert (=> d!41363 (= res!64658 (contains!896 lt!70464 (_1!1314 (tuple2!2609 lt!70129 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70466 () List!1735)

(assert (=> d!41363 (= lt!70464 (ListLongMap!1708 lt!70466))))

(declare-fun lt!70465 () Unit!4150)

(declare-fun lt!70463 () Unit!4150)

(assert (=> d!41363 (= lt!70465 lt!70463)))

(assert (=> d!41363 (= (getValueByKey!171 lt!70466 (_1!1314 (tuple2!2609 lt!70129 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!70129 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41363 (= lt!70463 (lemmaContainsTupThenGetReturnValue!88 lt!70466 (_1!1314 (tuple2!2609 lt!70129 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!70129 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41363 (= lt!70466 (insertStrictlySorted!90 (toList!869 lt!70118) (_1!1314 (tuple2!2609 lt!70129 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!70129 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41363 (= (+!170 lt!70118 (tuple2!2609 lt!70129 (zeroValue!2720 newMap!16))) lt!70464)))

(declare-fun b!134435 () Bool)

(declare-fun res!64657 () Bool)

(assert (=> b!134435 (=> (not res!64657) (not e!87565))))

(assert (=> b!134435 (= res!64657 (= (getValueByKey!171 (toList!869 lt!70464) (_1!1314 (tuple2!2609 lt!70129 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!70129 (zeroValue!2720 newMap!16))))))))

(declare-fun b!134436 () Bool)

(assert (=> b!134436 (= e!87565 (contains!898 (toList!869 lt!70464) (tuple2!2609 lt!70129 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41363 res!64658) b!134435))

(assert (= (and b!134435 res!64657) b!134436))

(declare-fun m!159885 () Bool)

(assert (=> d!41363 m!159885))

(declare-fun m!159887 () Bool)

(assert (=> d!41363 m!159887))

(declare-fun m!159889 () Bool)

(assert (=> d!41363 m!159889))

(declare-fun m!159891 () Bool)

(assert (=> d!41363 m!159891))

(declare-fun m!159893 () Bool)

(assert (=> b!134435 m!159893))

(declare-fun m!159895 () Bool)

(assert (=> b!134436 m!159895))

(assert (=> b!133928 d!41363))

(declare-fun b!134437 () Bool)

(declare-fun lt!70467 () Unit!4150)

(declare-fun lt!70471 () Unit!4150)

(assert (=> b!134437 (= lt!70467 lt!70471)))

(declare-fun lt!70470 () V!3483)

(declare-fun lt!70469 () (_ BitVec 64))

(declare-fun lt!70468 () ListLongMap!1707)

(declare-fun lt!70472 () (_ BitVec 64))

(assert (=> b!134437 (not (contains!896 (+!170 lt!70468 (tuple2!2609 lt!70472 lt!70470)) lt!70469))))

(assert (=> b!134437 (= lt!70471 (addStillNotContains!63 lt!70468 lt!70472 lt!70470 lt!70469))))

(assert (=> b!134437 (= lt!70469 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134437 (= lt!70470 (get!1488 (select (arr!2261 lt!69607) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134437 (= lt!70472 (select (arr!2260 lt!69595) #b00000000000000000000000000000000))))

(declare-fun call!14821 () ListLongMap!1707)

(assert (=> b!134437 (= lt!70468 call!14821)))

(declare-fun e!87572 () ListLongMap!1707)

(assert (=> b!134437 (= e!87572 (+!170 call!14821 (tuple2!2609 (select (arr!2260 lt!69595) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 lt!69607) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!87569 () Bool)

(declare-fun b!134438 () Bool)

(declare-fun lt!70473 () ListLongMap!1707)

(assert (=> b!134438 (= e!87569 (= lt!70473 (getCurrentListMapNoExtraKeys!137 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!134439 () Bool)

(assert (=> b!134439 (= e!87569 (isEmpty!414 lt!70473))))

(declare-fun b!134440 () Bool)

(declare-fun e!87570 () ListLongMap!1707)

(assert (=> b!134440 (= e!87570 (ListLongMap!1708 Nil!1732))))

(declare-fun b!134441 () Bool)

(declare-fun e!87567 () Bool)

(declare-fun e!87568 () Bool)

(assert (=> b!134441 (= e!87567 e!87568)))

(declare-fun c!25011 () Bool)

(declare-fun e!87571 () Bool)

(assert (=> b!134441 (= c!25011 e!87571)))

(declare-fun res!64662 () Bool)

(assert (=> b!134441 (=> (not res!64662) (not e!87571))))

(assert (=> b!134441 (= res!64662 (bvslt #b00000000000000000000000000000000 (size!2529 lt!69595)))))

(declare-fun b!134442 () Bool)

(assert (=> b!134442 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 lt!69595)))))

(assert (=> b!134442 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 lt!69607)))))

(declare-fun e!87566 () Bool)

(assert (=> b!134442 (= e!87566 (= (apply!116 lt!70473 (select (arr!2260 lt!69595) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 lt!69607) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134444 () Bool)

(assert (=> b!134444 (= e!87568 e!87566)))

(assert (=> b!134444 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 lt!69595)))))

(declare-fun res!64661 () Bool)

(assert (=> b!134444 (= res!64661 (contains!896 lt!70473 (select (arr!2260 lt!69595) #b00000000000000000000000000000000)))))

(assert (=> b!134444 (=> (not res!64661) (not e!87566))))

(declare-fun b!134445 () Bool)

(assert (=> b!134445 (= e!87570 e!87572)))

(declare-fun c!25008 () Bool)

(assert (=> b!134445 (= c!25008 (validKeyInArray!0 (select (arr!2260 lt!69595) #b00000000000000000000000000000000)))))

(declare-fun b!134446 () Bool)

(declare-fun res!64660 () Bool)

(assert (=> b!134446 (=> (not res!64660) (not e!87567))))

(assert (=> b!134446 (= res!64660 (not (contains!896 lt!70473 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134447 () Bool)

(assert (=> b!134447 (= e!87568 e!87569)))

(declare-fun c!25010 () Bool)

(assert (=> b!134447 (= c!25010 (bvslt #b00000000000000000000000000000000 (size!2529 lt!69595)))))

(declare-fun bm!14818 () Bool)

(assert (=> bm!14818 (= call!14821 (getCurrentListMapNoExtraKeys!137 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!134448 () Bool)

(assert (=> b!134448 (= e!87571 (validKeyInArray!0 (select (arr!2260 lt!69595) #b00000000000000000000000000000000)))))

(assert (=> b!134448 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134443 () Bool)

(assert (=> b!134443 (= e!87572 call!14821)))

(declare-fun d!41365 () Bool)

(assert (=> d!41365 e!87567))

(declare-fun res!64659 () Bool)

(assert (=> d!41365 (=> (not res!64659) (not e!87567))))

(assert (=> d!41365 (= res!64659 (not (contains!896 lt!70473 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41365 (= lt!70473 e!87570)))

(declare-fun c!25009 () Bool)

(assert (=> d!41365 (= c!25009 (bvsge #b00000000000000000000000000000000 (size!2529 lt!69595)))))

(assert (=> d!41365 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41365 (= (getCurrentListMapNoExtraKeys!137 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!70473)))

(assert (= (and d!41365 c!25009) b!134440))

(assert (= (and d!41365 (not c!25009)) b!134445))

(assert (= (and b!134445 c!25008) b!134437))

(assert (= (and b!134445 (not c!25008)) b!134443))

(assert (= (or b!134437 b!134443) bm!14818))

(assert (= (and d!41365 res!64659) b!134446))

(assert (= (and b!134446 res!64660) b!134441))

(assert (= (and b!134441 res!64662) b!134448))

(assert (= (and b!134441 c!25011) b!134444))

(assert (= (and b!134441 (not c!25011)) b!134447))

(assert (= (and b!134444 res!64661) b!134442))

(assert (= (and b!134447 c!25010) b!134438))

(assert (= (and b!134447 (not c!25010)) b!134439))

(declare-fun b_lambda!6043 () Bool)

(assert (=> (not b_lambda!6043) (not b!134437)))

(assert (=> b!134437 t!6205))

(declare-fun b_and!8381 () Bool)

(assert (= b_and!8377 (and (=> t!6205 result!4009) b_and!8381)))

(assert (=> b!134437 t!6207))

(declare-fun b_and!8383 () Bool)

(assert (= b_and!8379 (and (=> t!6207 result!4011) b_and!8383)))

(declare-fun b_lambda!6045 () Bool)

(assert (=> (not b_lambda!6045) (not b!134442)))

(assert (=> b!134442 t!6205))

(declare-fun b_and!8385 () Bool)

(assert (= b_and!8381 (and (=> t!6205 result!4009) b_and!8385)))

(assert (=> b!134442 t!6207))

(declare-fun b_and!8387 () Bool)

(assert (= b_and!8383 (and (=> t!6207 result!4011) b_and!8387)))

(declare-fun m!159897 () Bool)

(assert (=> d!41365 m!159897))

(assert (=> d!41365 m!156571))

(declare-fun m!159899 () Bool)

(assert (=> b!134438 m!159899))

(declare-fun m!159901 () Bool)

(assert (=> b!134437 m!159901))

(declare-fun m!159903 () Bool)

(assert (=> b!134437 m!159903))

(assert (=> b!134437 m!159901))

(assert (=> b!134437 m!156647))

(assert (=> b!134437 m!158571))

(assert (=> b!134437 m!156647))

(assert (=> b!134437 m!158573))

(declare-fun m!159905 () Bool)

(assert (=> b!134437 m!159905))

(assert (=> b!134437 m!158571))

(assert (=> b!134437 m!158567))

(declare-fun m!159907 () Bool)

(assert (=> b!134437 m!159907))

(assert (=> b!134442 m!158567))

(declare-fun m!159909 () Bool)

(assert (=> b!134442 m!159909))

(assert (=> b!134442 m!156647))

(assert (=> b!134442 m!158567))

(assert (=> b!134442 m!158571))

(assert (=> b!134442 m!156647))

(assert (=> b!134442 m!158573))

(assert (=> b!134442 m!158571))

(assert (=> bm!14818 m!159899))

(assert (=> b!134445 m!158567))

(assert (=> b!134445 m!158567))

(assert (=> b!134445 m!158613))

(declare-fun m!159911 () Bool)

(assert (=> b!134446 m!159911))

(assert (=> b!134444 m!158567))

(assert (=> b!134444 m!158567))

(declare-fun m!159913 () Bool)

(assert (=> b!134444 m!159913))

(assert (=> b!134448 m!158567))

(assert (=> b!134448 m!158567))

(assert (=> b!134448 m!158613))

(declare-fun m!159915 () Bool)

(assert (=> b!134439 m!159915))

(assert (=> b!133928 d!41365))

(declare-fun d!41367 () Bool)

(assert (=> d!41367 (= (get!1491 (getValueByKey!171 (toList!869 lt!69497) lt!69485)) (v!3201 (getValueByKey!171 (toList!869 lt!69497) lt!69485)))))

(assert (=> d!40587 d!41367))

(declare-fun b!134449 () Bool)

(declare-fun e!87573 () Option!177)

(assert (=> b!134449 (= e!87573 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69497)))))))

(declare-fun b!134452 () Bool)

(declare-fun e!87574 () Option!177)

(assert (=> b!134452 (= e!87574 None!175)))

(declare-fun b!134451 () Bool)

(assert (=> b!134451 (= e!87574 (getValueByKey!171 (t!6198 (toList!869 lt!69497)) lt!69485))))

(declare-fun b!134450 () Bool)

(assert (=> b!134450 (= e!87573 e!87574)))

(declare-fun c!25013 () Bool)

(assert (=> b!134450 (= c!25013 (and ((_ is Cons!1731) (toList!869 lt!69497)) (not (= (_1!1314 (h!2336 (toList!869 lt!69497))) lt!69485))))))

(declare-fun d!41369 () Bool)

(declare-fun c!25012 () Bool)

(assert (=> d!41369 (= c!25012 (and ((_ is Cons!1731) (toList!869 lt!69497)) (= (_1!1314 (h!2336 (toList!869 lt!69497))) lt!69485)))))

(assert (=> d!41369 (= (getValueByKey!171 (toList!869 lt!69497) lt!69485) e!87573)))

(assert (= (and d!41369 c!25012) b!134449))

(assert (= (and d!41369 (not c!25012)) b!134450))

(assert (= (and b!134450 c!25013) b!134451))

(assert (= (and b!134450 (not c!25013)) b!134452))

(declare-fun m!159917 () Bool)

(assert (=> b!134451 m!159917))

(assert (=> d!40587 d!41369))

(declare-fun d!41371 () Bool)

(assert (=> d!41371 (= (get!1491 (getValueByKey!171 (toList!869 lt!69416) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3201 (getValueByKey!171 (toList!869 lt!69416) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40673 d!41371))

(declare-fun b!134453 () Bool)

(declare-fun e!87575 () Option!177)

(assert (=> b!134453 (= e!87575 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69416)))))))

(declare-fun b!134456 () Bool)

(declare-fun e!87576 () Option!177)

(assert (=> b!134456 (= e!87576 None!175)))

(declare-fun b!134455 () Bool)

(assert (=> b!134455 (= e!87576 (getValueByKey!171 (t!6198 (toList!869 lt!69416)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134454 () Bool)

(assert (=> b!134454 (= e!87575 e!87576)))

(declare-fun c!25015 () Bool)

(assert (=> b!134454 (= c!25015 (and ((_ is Cons!1731) (toList!869 lt!69416)) (not (= (_1!1314 (h!2336 (toList!869 lt!69416))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!41373 () Bool)

(declare-fun c!25014 () Bool)

(assert (=> d!41373 (= c!25014 (and ((_ is Cons!1731) (toList!869 lt!69416)) (= (_1!1314 (h!2336 (toList!869 lt!69416))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41373 (= (getValueByKey!171 (toList!869 lt!69416) #b0000000000000000000000000000000000000000000000000000000000000000) e!87575)))

(assert (= (and d!41373 c!25014) b!134453))

(assert (= (and d!41373 (not c!25014)) b!134454))

(assert (= (and b!134454 c!25015) b!134455))

(assert (= (and b!134454 (not c!25015)) b!134456))

(declare-fun m!159919 () Bool)

(assert (=> b!134455 m!159919))

(assert (=> d!40673 d!41373))

(assert (=> d!40767 d!40475))

(assert (=> d!40435 d!40433))

(declare-fun d!41375 () Bool)

(assert (=> d!41375 (= (getValueByKey!171 lt!69461 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!41375 true))

(declare-fun _$22!484 () Unit!4150)

(assert (=> d!41375 (= (choose!834 lt!69461 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) _$22!484)))

(declare-fun bs!5624 () Bool)

(assert (= bs!5624 d!41375))

(assert (=> bs!5624 m!156767))

(assert (=> d!40435 d!41375))

(declare-fun d!41377 () Bool)

(declare-fun res!64663 () Bool)

(declare-fun e!87577 () Bool)

(assert (=> d!41377 (=> res!64663 e!87577)))

(assert (=> d!41377 (= res!64663 (or ((_ is Nil!1732) lt!69461) ((_ is Nil!1732) (t!6198 lt!69461))))))

(assert (=> d!41377 (= (isStrictlySorted!317 lt!69461) e!87577)))

(declare-fun b!134457 () Bool)

(declare-fun e!87578 () Bool)

(assert (=> b!134457 (= e!87577 e!87578)))

(declare-fun res!64664 () Bool)

(assert (=> b!134457 (=> (not res!64664) (not e!87578))))

(assert (=> b!134457 (= res!64664 (bvslt (_1!1314 (h!2336 lt!69461)) (_1!1314 (h!2336 (t!6198 lt!69461)))))))

(declare-fun b!134458 () Bool)

(assert (=> b!134458 (= e!87578 (isStrictlySorted!317 (t!6198 lt!69461)))))

(assert (= (and d!41377 (not res!64663)) b!134457))

(assert (= (and b!134457 res!64664) b!134458))

(declare-fun m!159921 () Bool)

(assert (=> b!134458 m!159921))

(assert (=> d!40435 d!41377))

(declare-fun d!41379 () Bool)

(declare-fun res!64665 () Bool)

(declare-fun e!87579 () Bool)

(assert (=> d!41379 (=> res!64665 e!87579)))

(assert (=> d!41379 (= res!64665 (and ((_ is Cons!1731) lt!69451) (= (_1!1314 (h!2336 lt!69451)) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!41379 (= (containsKey!175 lt!69451 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!87579)))

(declare-fun b!134459 () Bool)

(declare-fun e!87580 () Bool)

(assert (=> b!134459 (= e!87579 e!87580)))

(declare-fun res!64666 () Bool)

(assert (=> b!134459 (=> (not res!64666) (not e!87580))))

(assert (=> b!134459 (= res!64666 (and (or (not ((_ is Cons!1731) lt!69451)) (bvsle (_1!1314 (h!2336 lt!69451)) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) ((_ is Cons!1731) lt!69451) (bvslt (_1!1314 (h!2336 lt!69451)) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!134460 () Bool)

(assert (=> b!134460 (= e!87580 (containsKey!175 (t!6198 lt!69451) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!41379 (not res!64665)) b!134459))

(assert (= (and b!134459 res!64666) b!134460))

(declare-fun m!159923 () Bool)

(assert (=> b!134460 m!159923))

(assert (=> b!133837 d!41379))

(assert (=> b!133330 d!40981))

(assert (=> d!40825 d!40823))

(declare-fun d!41381 () Bool)

(assert (=> d!41381 (= (getValueByKey!171 lt!69378 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!176 (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41381 true))

(declare-fun _$22!485 () Unit!4150)

(assert (=> d!41381 (= (choose!834 lt!69378 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) _$22!485)))

(declare-fun bs!5625 () Bool)

(assert (= bs!5625 d!41381))

(assert (=> bs!5625 m!156583))

(assert (=> d!40825 d!41381))

(declare-fun d!41383 () Bool)

(declare-fun res!64667 () Bool)

(declare-fun e!87581 () Bool)

(assert (=> d!41383 (=> res!64667 e!87581)))

(assert (=> d!41383 (= res!64667 (or ((_ is Nil!1732) lt!69378) ((_ is Nil!1732) (t!6198 lt!69378))))))

(assert (=> d!41383 (= (isStrictlySorted!317 lt!69378) e!87581)))

(declare-fun b!134461 () Bool)

(declare-fun e!87582 () Bool)

(assert (=> b!134461 (= e!87581 e!87582)))

(declare-fun res!64668 () Bool)

(assert (=> b!134461 (=> (not res!64668) (not e!87582))))

(assert (=> b!134461 (= res!64668 (bvslt (_1!1314 (h!2336 lt!69378)) (_1!1314 (h!2336 (t!6198 lt!69378)))))))

(declare-fun b!134462 () Bool)

(assert (=> b!134462 (= e!87582 (isStrictlySorted!317 (t!6198 lt!69378)))))

(assert (= (and d!41383 (not res!64667)) b!134461))

(assert (= (and b!134461 res!64668) b!134462))

(declare-fun m!159925 () Bool)

(assert (=> b!134462 m!159925))

(assert (=> d!40825 d!41383))

(declare-fun d!41385 () Bool)

(assert (=> d!41385 (= (get!1491 (getValueByKey!171 (toList!869 lt!69420) lt!69418)) (v!3201 (getValueByKey!171 (toList!869 lt!69420) lt!69418)))))

(assert (=> d!40533 d!41385))

(declare-fun b!134463 () Bool)

(declare-fun e!87583 () Option!177)

(assert (=> b!134463 (= e!87583 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69420)))))))

(declare-fun b!134466 () Bool)

(declare-fun e!87584 () Option!177)

(assert (=> b!134466 (= e!87584 None!175)))

(declare-fun b!134465 () Bool)

(assert (=> b!134465 (= e!87584 (getValueByKey!171 (t!6198 (toList!869 lt!69420)) lt!69418))))

(declare-fun b!134464 () Bool)

(assert (=> b!134464 (= e!87583 e!87584)))

(declare-fun c!25017 () Bool)

(assert (=> b!134464 (= c!25017 (and ((_ is Cons!1731) (toList!869 lt!69420)) (not (= (_1!1314 (h!2336 (toList!869 lt!69420))) lt!69418))))))

(declare-fun d!41387 () Bool)

(declare-fun c!25016 () Bool)

(assert (=> d!41387 (= c!25016 (and ((_ is Cons!1731) (toList!869 lt!69420)) (= (_1!1314 (h!2336 (toList!869 lt!69420))) lt!69418)))))

(assert (=> d!41387 (= (getValueByKey!171 (toList!869 lt!69420) lt!69418) e!87583)))

(assert (= (and d!41387 c!25016) b!134463))

(assert (= (and d!41387 (not c!25016)) b!134464))

(assert (= (and b!134464 c!25017) b!134465))

(assert (= (and b!134464 (not c!25017)) b!134466))

(declare-fun m!159927 () Bool)

(assert (=> b!134465 m!159927))

(assert (=> d!40533 d!41387))

(declare-fun d!41389 () Bool)

(assert (=> d!41389 (= (validKeyInArray!0 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133881 d!41389))

(declare-fun b!134467 () Bool)

(declare-fun e!87585 () Option!177)

(assert (=> b!134467 (= e!87585 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69944)))))))

(declare-fun b!134470 () Bool)

(declare-fun e!87586 () Option!177)

(assert (=> b!134470 (= e!87586 None!175)))

(declare-fun b!134469 () Bool)

(assert (=> b!134469 (= e!87586 (getValueByKey!171 (t!6198 (toList!869 lt!69944)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134468 () Bool)

(assert (=> b!134468 (= e!87585 e!87586)))

(declare-fun c!25019 () Bool)

(assert (=> b!134468 (= c!25019 (and ((_ is Cons!1731) (toList!869 lt!69944)) (not (= (_1!1314 (h!2336 (toList!869 lt!69944))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!41391 () Bool)

(declare-fun c!25018 () Bool)

(assert (=> d!41391 (= c!25018 (and ((_ is Cons!1731) (toList!869 lt!69944)) (= (_1!1314 (h!2336 (toList!869 lt!69944))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41391 (= (getValueByKey!171 (toList!869 lt!69944) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87585)))

(assert (= (and d!41391 c!25018) b!134467))

(assert (= (and d!41391 (not c!25018)) b!134468))

(assert (= (and b!134468 c!25019) b!134469))

(assert (= (and b!134468 (not c!25019)) b!134470))

(declare-fun m!159929 () Bool)

(assert (=> b!134469 m!159929))

(assert (=> b!133582 d!41391))

(declare-fun d!41393 () Bool)

(assert (=> d!41393 (isDefined!125 (getValueByKey!171 (toList!869 lt!69405) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70474 () Unit!4150)

(assert (=> d!41393 (= lt!70474 (choose!831 (toList!869 lt!69405) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87587 () Bool)

(assert (=> d!41393 e!87587))

(declare-fun res!64669 () Bool)

(assert (=> d!41393 (=> (not res!64669) (not e!87587))))

(assert (=> d!41393 (= res!64669 (isStrictlySorted!317 (toList!869 lt!69405)))))

(assert (=> d!41393 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69405) #b1000000000000000000000000000000000000000000000000000000000000000) lt!70474)))

(declare-fun b!134471 () Bool)

(assert (=> b!134471 (= e!87587 (containsKey!175 (toList!869 lt!69405) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41393 res!64669) b!134471))

(assert (=> d!41393 m!158715))

(assert (=> d!41393 m!158715))

(assert (=> d!41393 m!158717))

(declare-fun m!159931 () Bool)

(assert (=> d!41393 m!159931))

(assert (=> d!41393 m!159209))

(assert (=> b!134471 m!158711))

(assert (=> b!133986 d!41393))

(declare-fun d!41395 () Bool)

(assert (=> d!41395 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69405) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69405) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5626 () Bool)

(assert (= bs!5626 d!41395))

(assert (=> bs!5626 m!158715))

(declare-fun m!159933 () Bool)

(assert (=> bs!5626 m!159933))

(assert (=> b!133986 d!41395))

(declare-fun b!134472 () Bool)

(declare-fun e!87588 () Option!177)

(assert (=> b!134472 (= e!87588 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69405)))))))

(declare-fun b!134475 () Bool)

(declare-fun e!87589 () Option!177)

(assert (=> b!134475 (= e!87589 None!175)))

(declare-fun b!134474 () Bool)

(assert (=> b!134474 (= e!87589 (getValueByKey!171 (t!6198 (toList!869 lt!69405)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134473 () Bool)

(assert (=> b!134473 (= e!87588 e!87589)))

(declare-fun c!25021 () Bool)

(assert (=> b!134473 (= c!25021 (and ((_ is Cons!1731) (toList!869 lt!69405)) (not (= (_1!1314 (h!2336 (toList!869 lt!69405))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!41397 () Bool)

(declare-fun c!25020 () Bool)

(assert (=> d!41397 (= c!25020 (and ((_ is Cons!1731) (toList!869 lt!69405)) (= (_1!1314 (h!2336 (toList!869 lt!69405))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41397 (= (getValueByKey!171 (toList!869 lt!69405) #b1000000000000000000000000000000000000000000000000000000000000000) e!87588)))

(assert (= (and d!41397 c!25020) b!134472))

(assert (= (and d!41397 (not c!25020)) b!134473))

(assert (= (and b!134473 c!25021) b!134474))

(assert (= (and b!134473 (not c!25021)) b!134475))

(declare-fun m!159935 () Bool)

(assert (=> b!134474 m!159935))

(assert (=> b!133986 d!41397))

(declare-fun b!134476 () Bool)

(declare-fun e!87590 () Option!177)

(assert (=> b!134476 (= e!87590 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))))

(declare-fun b!134479 () Bool)

(declare-fun e!87591 () Option!177)

(assert (=> b!134479 (= e!87591 None!175)))

(declare-fun b!134478 () Bool)

(assert (=> b!134478 (= e!87591 (getValueByKey!171 (t!6198 (t!6198 (toList!869 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) lt!69228))))

(declare-fun b!134477 () Bool)

(assert (=> b!134477 (= e!87590 e!87591)))

(declare-fun c!25023 () Bool)

(assert (=> b!134477 (= c!25023 (and ((_ is Cons!1731) (t!6198 (toList!869 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))) lt!69228))))))

(declare-fun d!41399 () Bool)

(declare-fun c!25022 () Bool)

(assert (=> d!41399 (= c!25022 (and ((_ is Cons!1731) (t!6198 (toList!869 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) (= (_1!1314 (h!2336 (t!6198 (toList!869 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))) lt!69228)))))

(assert (=> d!41399 (= (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69229 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!69228) e!87590)))

(assert (= (and d!41399 c!25022) b!134476))

(assert (= (and d!41399 (not c!25022)) b!134477))

(assert (= (and b!134477 c!25023) b!134478))

(assert (= (and b!134477 (not c!25023)) b!134479))

(declare-fun m!159937 () Bool)

(assert (=> b!134478 m!159937))

(assert (=> b!133799 d!41399))

(declare-fun d!41401 () Bool)

(declare-fun lt!70475 () Bool)

(assert (=> d!41401 (= lt!70475 (select (content!132 (toList!869 lt!69813)) (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))))))

(declare-fun e!87593 () Bool)

(assert (=> d!41401 (= lt!70475 e!87593)))

(declare-fun res!64670 () Bool)

(assert (=> d!41401 (=> (not res!64670) (not e!87593))))

(assert (=> d!41401 (= res!64670 ((_ is Cons!1731) (toList!869 lt!69813)))))

(assert (=> d!41401 (= (contains!898 (toList!869 lt!69813) (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))) lt!70475)))

(declare-fun b!134480 () Bool)

(declare-fun e!87592 () Bool)

(assert (=> b!134480 (= e!87593 e!87592)))

(declare-fun res!64671 () Bool)

(assert (=> b!134480 (=> res!64671 e!87592)))

(assert (=> b!134480 (= res!64671 (= (h!2336 (toList!869 lt!69813)) (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))))))

(declare-fun b!134481 () Bool)

(assert (=> b!134481 (= e!87592 (contains!898 (t!6198 (toList!869 lt!69813)) (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41401 res!64670) b!134480))

(assert (= (and b!134480 (not res!64671)) b!134481))

(declare-fun m!159939 () Bool)

(assert (=> d!41401 m!159939))

(declare-fun m!159941 () Bool)

(assert (=> d!41401 m!159941))

(declare-fun m!159943 () Bool)

(assert (=> b!134481 m!159943))

(assert (=> b!133406 d!41401))

(declare-fun d!41403 () Bool)

(assert (=> d!41403 (isDefined!125 (getValueByKey!171 (toList!869 lt!69488) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!70476 () Unit!4150)

(assert (=> d!41403 (= lt!70476 (choose!831 (toList!869 lt!69488) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!87594 () Bool)

(assert (=> d!41403 e!87594))

(declare-fun res!64672 () Bool)

(assert (=> d!41403 (=> (not res!64672) (not e!87594))))

(assert (=> d!41403 (= res!64672 (isStrictlySorted!317 (toList!869 lt!69488)))))

(assert (=> d!41403 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69488) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70476)))

(declare-fun b!134482 () Bool)

(assert (=> b!134482 (= e!87594 (containsKey!175 (toList!869 lt!69488) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41403 res!64672) b!134482))

(assert (=> d!41403 m!156533))

(assert (=> d!41403 m!158073))

(assert (=> d!41403 m!158073))

(assert (=> d!41403 m!158075))

(assert (=> d!41403 m!156533))

(declare-fun m!159945 () Bool)

(assert (=> d!41403 m!159945))

(declare-fun m!159947 () Bool)

(assert (=> d!41403 m!159947))

(assert (=> b!134482 m!156533))

(assert (=> b!134482 m!158069))

(assert (=> b!133637 d!41403))

(declare-fun d!41405 () Bool)

(assert (=> d!41405 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69488) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69488) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5627 () Bool)

(assert (= bs!5627 d!41405))

(assert (=> bs!5627 m!158073))

(declare-fun m!159949 () Bool)

(assert (=> bs!5627 m!159949))

(assert (=> b!133637 d!41405))

(declare-fun b!134483 () Bool)

(declare-fun e!87595 () Option!177)

(assert (=> b!134483 (= e!87595 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69488)))))))

(declare-fun b!134486 () Bool)

(declare-fun e!87596 () Option!177)

(assert (=> b!134486 (= e!87596 None!175)))

(declare-fun b!134485 () Bool)

(assert (=> b!134485 (= e!87596 (getValueByKey!171 (t!6198 (toList!869 lt!69488)) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134484 () Bool)

(assert (=> b!134484 (= e!87595 e!87596)))

(declare-fun c!25025 () Bool)

(assert (=> b!134484 (= c!25025 (and ((_ is Cons!1731) (toList!869 lt!69488)) (not (= (_1!1314 (h!2336 (toList!869 lt!69488))) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun d!41407 () Bool)

(declare-fun c!25024 () Bool)

(assert (=> d!41407 (= c!25024 (and ((_ is Cons!1731) (toList!869 lt!69488)) (= (_1!1314 (h!2336 (toList!869 lt!69488))) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!41407 (= (getValueByKey!171 (toList!869 lt!69488) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) e!87595)))

(assert (= (and d!41407 c!25024) b!134483))

(assert (= (and d!41407 (not c!25024)) b!134484))

(assert (= (and b!134484 c!25025) b!134485))

(assert (= (and b!134484 (not c!25025)) b!134486))

(assert (=> b!134485 m!156533))

(declare-fun m!159951 () Bool)

(assert (=> b!134485 m!159951))

(assert (=> b!133637 d!41407))

(declare-fun b!134487 () Bool)

(declare-fun e!87599 () Bool)

(declare-fun e!87600 () Bool)

(assert (=> b!134487 (= e!87599 e!87600)))

(declare-fun c!25026 () Bool)

(assert (=> b!134487 (= c!25026 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134488 () Bool)

(declare-fun call!14822 () Bool)

(assert (=> b!134488 (= e!87600 call!14822)))

(declare-fun e!87597 () Bool)

(declare-fun b!134489 () Bool)

(assert (=> b!134489 (= e!87597 (contains!897 (ite c!24853 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24638 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733))) (ite c!24638 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!14819 () Bool)

(assert (=> bm!14819 (= call!14822 (arrayNoDuplicates!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!25026 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24853 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24638 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733))) (ite c!24638 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)))) (ite c!24853 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24638 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733))) (ite c!24638 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733))))))))

(declare-fun d!41409 () Bool)

(declare-fun res!64675 () Bool)

(declare-fun e!87598 () Bool)

(assert (=> d!41409 (=> res!64675 e!87598)))

(assert (=> d!41409 (= res!64675 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!41409 (= (arrayNoDuplicates!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24853 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24638 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733))) (ite c!24638 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)))) e!87598)))

(declare-fun b!134490 () Bool)

(assert (=> b!134490 (= e!87600 call!14822)))

(declare-fun b!134491 () Bool)

(assert (=> b!134491 (= e!87598 e!87599)))

(declare-fun res!64673 () Bool)

(assert (=> b!134491 (=> (not res!64673) (not e!87599))))

(assert (=> b!134491 (= res!64673 (not e!87597))))

(declare-fun res!64674 () Bool)

(assert (=> b!134491 (=> (not res!64674) (not e!87597))))

(assert (=> b!134491 (= res!64674 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!41409 (not res!64675)) b!134491))

(assert (= (and b!134491 res!64674) b!134489))

(assert (= (and b!134491 res!64673) b!134487))

(assert (= (and b!134487 c!25026) b!134490))

(assert (= (and b!134487 (not c!25026)) b!134488))

(assert (= (or b!134490 b!134488) bm!14819))

(declare-fun m!159953 () Bool)

(assert (=> b!134487 m!159953))

(assert (=> b!134487 m!159953))

(declare-fun m!159955 () Bool)

(assert (=> b!134487 m!159955))

(assert (=> b!134489 m!159953))

(assert (=> b!134489 m!159953))

(declare-fun m!159957 () Bool)

(assert (=> b!134489 m!159957))

(assert (=> bm!14819 m!159953))

(declare-fun m!159959 () Bool)

(assert (=> bm!14819 m!159959))

(assert (=> b!134491 m!159953))

(assert (=> b!134491 m!159953))

(assert (=> b!134491 m!159955))

(assert (=> bm!14776 d!41409))

(declare-fun d!41411 () Bool)

(declare-fun e!87601 () Bool)

(assert (=> d!41411 e!87601))

(declare-fun res!64676 () Bool)

(assert (=> d!41411 (=> res!64676 e!87601)))

(declare-fun lt!70477 () Bool)

(assert (=> d!41411 (= res!64676 (not lt!70477))))

(declare-fun lt!70479 () Bool)

(assert (=> d!41411 (= lt!70477 lt!70479)))

(declare-fun lt!70478 () Unit!4150)

(declare-fun e!87602 () Unit!4150)

(assert (=> d!41411 (= lt!70478 e!87602)))

(declare-fun c!25027 () Bool)

(assert (=> d!41411 (= c!25027 lt!70479)))

(assert (=> d!41411 (= lt!70479 (containsKey!175 (toList!869 lt!69728) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41411 (= (contains!896 lt!69728 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70477)))

(declare-fun b!134492 () Bool)

(declare-fun lt!70480 () Unit!4150)

(assert (=> b!134492 (= e!87602 lt!70480)))

(assert (=> b!134492 (= lt!70480 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69728) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!134492 (isDefined!125 (getValueByKey!171 (toList!869 lt!69728) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134493 () Bool)

(declare-fun Unit!4225 () Unit!4150)

(assert (=> b!134493 (= e!87602 Unit!4225)))

(declare-fun b!134494 () Bool)

(assert (=> b!134494 (= e!87601 (isDefined!125 (getValueByKey!171 (toList!869 lt!69728) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41411 c!25027) b!134492))

(assert (= (and d!41411 (not c!25027)) b!134493))

(assert (= (and d!41411 (not res!64676)) b!134494))

(declare-fun m!159961 () Bool)

(assert (=> d!41411 m!159961))

(declare-fun m!159963 () Bool)

(assert (=> b!134492 m!159963))

(assert (=> b!134492 m!157301))

(assert (=> b!134492 m!157301))

(declare-fun m!159965 () Bool)

(assert (=> b!134492 m!159965))

(assert (=> b!134494 m!157301))

(assert (=> b!134494 m!157301))

(assert (=> b!134494 m!159965))

(assert (=> d!40479 d!41411))

(declare-fun b!134495 () Bool)

(declare-fun e!87603 () Option!177)

(assert (=> b!134495 (= e!87603 (Some!176 (_2!1314 (h!2336 lt!69730))))))

(declare-fun b!134498 () Bool)

(declare-fun e!87604 () Option!177)

(assert (=> b!134498 (= e!87604 None!175)))

(declare-fun b!134497 () Bool)

(assert (=> b!134497 (= e!87604 (getValueByKey!171 (t!6198 lt!69730) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134496 () Bool)

(assert (=> b!134496 (= e!87603 e!87604)))

(declare-fun c!25029 () Bool)

(assert (=> b!134496 (= c!25029 (and ((_ is Cons!1731) lt!69730) (not (= (_1!1314 (h!2336 lt!69730)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!41413 () Bool)

(declare-fun c!25028 () Bool)

(assert (=> d!41413 (= c!25028 (and ((_ is Cons!1731) lt!69730) (= (_1!1314 (h!2336 lt!69730)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41413 (= (getValueByKey!171 lt!69730 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87603)))

(assert (= (and d!41413 c!25028) b!134495))

(assert (= (and d!41413 (not c!25028)) b!134496))

(assert (= (and b!134496 c!25029) b!134497))

(assert (= (and b!134496 (not c!25029)) b!134498))

(declare-fun m!159967 () Bool)

(assert (=> b!134497 m!159967))

(assert (=> d!40479 d!41413))

(declare-fun d!41415 () Bool)

(assert (=> d!41415 (= (getValueByKey!171 lt!69730 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70481 () Unit!4150)

(assert (=> d!41415 (= lt!70481 (choose!834 lt!69730 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87605 () Bool)

(assert (=> d!41415 e!87605))

(declare-fun res!64677 () Bool)

(assert (=> d!41415 (=> (not res!64677) (not e!87605))))

(assert (=> d!41415 (= res!64677 (isStrictlySorted!317 lt!69730))))

(assert (=> d!41415 (= (lemmaContainsTupThenGetReturnValue!88 lt!69730 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70481)))

(declare-fun b!134499 () Bool)

(declare-fun res!64678 () Bool)

(assert (=> b!134499 (=> (not res!64678) (not e!87605))))

(assert (=> b!134499 (= res!64678 (containsKey!175 lt!69730 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134500 () Bool)

(assert (=> b!134500 (= e!87605 (contains!898 lt!69730 (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41415 res!64677) b!134499))

(assert (= (and b!134499 res!64678) b!134500))

(assert (=> d!41415 m!157295))

(declare-fun m!159969 () Bool)

(assert (=> d!41415 m!159969))

(declare-fun m!159971 () Bool)

(assert (=> d!41415 m!159971))

(declare-fun m!159973 () Bool)

(assert (=> b!134499 m!159973))

(declare-fun m!159975 () Bool)

(assert (=> b!134500 m!159975))

(assert (=> d!40479 d!41415))

(declare-fun bm!14820 () Bool)

(declare-fun call!14823 () List!1735)

(declare-fun call!14824 () List!1735)

(assert (=> bm!14820 (= call!14823 call!14824)))

(declare-fun lt!70482 () List!1735)

(declare-fun b!134501 () Bool)

(declare-fun e!87608 () Bool)

(assert (=> b!134501 (= e!87608 (contains!898 lt!70482 (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134502 () Bool)

(declare-fun e!87610 () List!1735)

(assert (=> b!134502 (= e!87610 call!14824)))

(declare-fun b!134503 () Bool)

(declare-fun res!64679 () Bool)

(assert (=> b!134503 (=> (not res!64679) (not e!87608))))

(assert (=> b!134503 (= res!64679 (containsKey!175 lt!70482 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87606 () List!1735)

(declare-fun b!134504 () Bool)

(assert (=> b!134504 (= e!87606 (insertStrictlySorted!90 (t!6198 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134505 () Bool)

(declare-fun e!87607 () List!1735)

(assert (=> b!134505 (= e!87607 call!14823)))

(declare-fun bm!14821 () Bool)

(declare-fun call!14825 () List!1735)

(assert (=> bm!14821 (= call!14824 call!14825)))

(declare-fun c!25032 () Bool)

(declare-fun b!134507 () Bool)

(declare-fun c!25030 () Bool)

(assert (=> b!134507 (= e!87606 (ite c!25032 (t!6198 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (ite c!25030 (Cons!1731 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (t!6198 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) Nil!1732)))))

(declare-fun b!134508 () Bool)

(declare-fun e!87609 () List!1735)

(assert (=> b!134508 (= e!87609 call!14825)))

(declare-fun b!134509 () Bool)

(assert (=> b!134509 (= c!25030 (and ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (bvsgt (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!134509 (= e!87610 e!87607)))

(declare-fun d!41417 () Bool)

(assert (=> d!41417 e!87608))

(declare-fun res!64680 () Bool)

(assert (=> d!41417 (=> (not res!64680) (not e!87608))))

(assert (=> d!41417 (= res!64680 (isStrictlySorted!317 lt!70482))))

(assert (=> d!41417 (= lt!70482 e!87609)))

(declare-fun c!25031 () Bool)

(assert (=> d!41417 (= c!25031 (and ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (bvslt (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41417 (isStrictlySorted!317 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))))

(assert (=> d!41417 (= (insertStrictlySorted!90 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70482)))

(declare-fun b!134506 () Bool)

(assert (=> b!134506 (= e!87609 e!87610)))

(assert (=> b!134506 (= c!25032 (and ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (= (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134510 () Bool)

(assert (=> b!134510 (= e!87607 call!14823)))

(declare-fun bm!14822 () Bool)

(assert (=> bm!14822 (= call!14825 ($colon$colon!91 e!87606 (ite c!25031 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25033 () Bool)

(assert (=> bm!14822 (= c!25033 c!25031)))

(assert (= (and d!41417 c!25031) b!134508))

(assert (= (and d!41417 (not c!25031)) b!134506))

(assert (= (and b!134506 c!25032) b!134502))

(assert (= (and b!134506 (not c!25032)) b!134509))

(assert (= (and b!134509 c!25030) b!134510))

(assert (= (and b!134509 (not c!25030)) b!134505))

(assert (= (or b!134510 b!134505) bm!14820))

(assert (= (or b!134502 bm!14820) bm!14821))

(assert (= (or b!134508 bm!14821) bm!14822))

(assert (= (and bm!14822 c!25033) b!134504))

(assert (= (and bm!14822 (not c!25033)) b!134507))

(assert (= (and d!41417 res!64680) b!134503))

(assert (= (and b!134503 res!64679) b!134501))

(declare-fun m!159977 () Bool)

(assert (=> b!134503 m!159977))

(declare-fun m!159979 () Bool)

(assert (=> b!134501 m!159979))

(declare-fun m!159981 () Bool)

(assert (=> d!41417 m!159981))

(assert (=> d!41417 m!159675))

(declare-fun m!159983 () Bool)

(assert (=> bm!14822 m!159983))

(declare-fun m!159985 () Bool)

(assert (=> b!134504 m!159985))

(assert (=> d!40479 d!41417))

(assert (=> d!40639 d!40641))

(assert (=> d!40639 d!40643))

(declare-fun d!41419 () Bool)

(assert (=> d!41419 (isDefined!125 (getValueByKey!171 (toList!869 call!14628) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(assert (=> d!41419 true))

(declare-fun _$12!400 () Unit!4150)

(assert (=> d!41419 (= (choose!831 (toList!869 call!14628) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))) _$12!400)))

(declare-fun bs!5628 () Bool)

(assert (= bs!5628 d!41419))

(assert (=> bs!5628 m!156425))

(assert (=> bs!5628 m!157035))

(assert (=> bs!5628 m!157035))

(assert (=> bs!5628 m!157037))

(assert (=> d!40639 d!41419))

(declare-fun d!41421 () Bool)

(declare-fun res!64681 () Bool)

(declare-fun e!87611 () Bool)

(assert (=> d!41421 (=> res!64681 e!87611)))

(assert (=> d!41421 (= res!64681 (or ((_ is Nil!1732) (toList!869 call!14628)) ((_ is Nil!1732) (t!6198 (toList!869 call!14628)))))))

(assert (=> d!41421 (= (isStrictlySorted!317 (toList!869 call!14628)) e!87611)))

(declare-fun b!134511 () Bool)

(declare-fun e!87612 () Bool)

(assert (=> b!134511 (= e!87611 e!87612)))

(declare-fun res!64682 () Bool)

(assert (=> b!134511 (=> (not res!64682) (not e!87612))))

(assert (=> b!134511 (= res!64682 (bvslt (_1!1314 (h!2336 (toList!869 call!14628))) (_1!1314 (h!2336 (t!6198 (toList!869 call!14628))))))))

(declare-fun b!134512 () Bool)

(assert (=> b!134512 (= e!87612 (isStrictlySorted!317 (t!6198 (toList!869 call!14628))))))

(assert (= (and d!41421 (not res!64681)) b!134511))

(assert (= (and b!134511 res!64682) b!134512))

(declare-fun m!159987 () Bool)

(assert (=> b!134512 m!159987))

(assert (=> d!40639 d!41421))

(declare-fun d!41423 () Bool)

(declare-fun e!87613 () Bool)

(assert (=> d!41423 e!87613))

(declare-fun res!64683 () Bool)

(assert (=> d!41423 (=> res!64683 e!87613)))

(declare-fun lt!70483 () Bool)

(assert (=> d!41423 (= res!64683 (not lt!70483))))

(declare-fun lt!70485 () Bool)

(assert (=> d!41423 (= lt!70483 lt!70485)))

(declare-fun lt!70484 () Unit!4150)

(declare-fun e!87614 () Unit!4150)

(assert (=> d!41423 (= lt!70484 e!87614)))

(declare-fun c!25034 () Bool)

(assert (=> d!41423 (= c!25034 lt!70485)))

(assert (=> d!41423 (= lt!70485 (containsKey!175 (toList!869 lt!70136) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41423 (= (contains!896 lt!70136 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70483)))

(declare-fun b!134513 () Bool)

(declare-fun lt!70486 () Unit!4150)

(assert (=> b!134513 (= e!87614 lt!70486)))

(assert (=> b!134513 (= lt!70486 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!70136) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134513 (isDefined!125 (getValueByKey!171 (toList!869 lt!70136) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134514 () Bool)

(declare-fun Unit!4226 () Unit!4150)

(assert (=> b!134514 (= e!87614 Unit!4226)))

(declare-fun b!134515 () Bool)

(assert (=> b!134515 (= e!87613 (isDefined!125 (getValueByKey!171 (toList!869 lt!70136) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41423 c!25034) b!134513))

(assert (= (and d!41423 (not c!25034)) b!134514))

(assert (= (and d!41423 (not res!64683)) b!134515))

(declare-fun m!159989 () Bool)

(assert (=> d!41423 m!159989))

(declare-fun m!159991 () Bool)

(assert (=> b!134513 m!159991))

(declare-fun m!159993 () Bool)

(assert (=> b!134513 m!159993))

(assert (=> b!134513 m!159993))

(declare-fun m!159995 () Bool)

(assert (=> b!134513 m!159995))

(assert (=> b!134515 m!159993))

(assert (=> b!134515 m!159993))

(assert (=> b!134515 m!159995))

(assert (=> bm!14788 d!41423))

(declare-fun b!134516 () Bool)

(declare-fun e!87615 () Option!177)

(assert (=> b!134516 (= e!87615 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))))

(declare-fun b!134519 () Bool)

(declare-fun e!87616 () Option!177)

(assert (=> b!134519 (= e!87616 None!175)))

(declare-fun b!134518 () Bool)

(assert (=> b!134518 (= e!87616 (getValueByKey!171 (t!6198 (t!6198 (toList!869 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) lt!69223))))

(declare-fun b!134517 () Bool)

(assert (=> b!134517 (= e!87615 e!87616)))

(declare-fun c!25036 () Bool)

(assert (=> b!134517 (= c!25036 (and ((_ is Cons!1731) (t!6198 (toList!869 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))) lt!69223))))))

(declare-fun c!25035 () Bool)

(declare-fun d!41425 () Bool)

(assert (=> d!41425 (= c!25035 (and ((_ is Cons!1731) (t!6198 (toList!869 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) (= (_1!1314 (h!2336 (t!6198 (toList!869 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))) lt!69223)))))

(assert (=> d!41425 (= (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69225 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!69223) e!87615)))

(assert (= (and d!41425 c!25035) b!134516))

(assert (= (and d!41425 (not c!25035)) b!134517))

(assert (= (and b!134517 c!25036) b!134518))

(assert (= (and b!134517 (not c!25036)) b!134519))

(declare-fun m!159997 () Bool)

(assert (=> b!134518 m!159997))

(assert (=> b!133648 d!41425))

(declare-fun d!41427 () Bool)

(declare-fun e!87617 () Bool)

(assert (=> d!41427 e!87617))

(declare-fun res!64684 () Bool)

(assert (=> d!41427 (=> res!64684 e!87617)))

(declare-fun lt!70487 () Bool)

(assert (=> d!41427 (= res!64684 (not lt!70487))))

(declare-fun lt!70489 () Bool)

(assert (=> d!41427 (= lt!70487 lt!70489)))

(declare-fun lt!70488 () Unit!4150)

(declare-fun e!87618 () Unit!4150)

(assert (=> d!41427 (= lt!70488 e!87618)))

(declare-fun c!25037 () Bool)

(assert (=> d!41427 (= c!25037 lt!70489)))

(assert (=> d!41427 (= lt!70489 (containsKey!175 (toList!869 lt!69720) (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!41427 (= (contains!896 lt!69720 (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) lt!70487)))

(declare-fun b!134520 () Bool)

(declare-fun lt!70490 () Unit!4150)

(assert (=> b!134520 (= e!87618 lt!70490)))

(assert (=> b!134520 (= lt!70490 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69720) (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> b!134520 (isDefined!125 (getValueByKey!171 (toList!869 lt!69720) (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134521 () Bool)

(declare-fun Unit!4227 () Unit!4150)

(assert (=> b!134521 (= e!87618 Unit!4227)))

(declare-fun b!134522 () Bool)

(assert (=> b!134522 (= e!87617 (isDefined!125 (getValueByKey!171 (toList!869 lt!69720) (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (= (and d!41427 c!25037) b!134520))

(assert (= (and d!41427 (not c!25037)) b!134521))

(assert (= (and d!41427 (not res!64684)) b!134522))

(declare-fun m!159999 () Bool)

(assert (=> d!41427 m!159999))

(declare-fun m!160001 () Bool)

(assert (=> b!134520 m!160001))

(assert (=> b!134520 m!157277))

(assert (=> b!134520 m!157277))

(declare-fun m!160003 () Bool)

(assert (=> b!134520 m!160003))

(assert (=> b!134522 m!157277))

(assert (=> b!134522 m!157277))

(assert (=> b!134522 m!160003))

(assert (=> d!40471 d!41427))

(declare-fun b!134523 () Bool)

(declare-fun e!87619 () Option!177)

(assert (=> b!134523 (= e!87619 (Some!176 (_2!1314 (h!2336 lt!69722))))))

(declare-fun b!134526 () Bool)

(declare-fun e!87620 () Option!177)

(assert (=> b!134526 (= e!87620 None!175)))

(declare-fun b!134525 () Bool)

(assert (=> b!134525 (= e!87620 (getValueByKey!171 (t!6198 lt!69722) (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134524 () Bool)

(assert (=> b!134524 (= e!87619 e!87620)))

(declare-fun c!25039 () Bool)

(assert (=> b!134524 (= c!25039 (and ((_ is Cons!1731) lt!69722) (not (= (_1!1314 (h!2336 lt!69722)) (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))))

(declare-fun d!41429 () Bool)

(declare-fun c!25038 () Bool)

(assert (=> d!41429 (= c!25038 (and ((_ is Cons!1731) lt!69722) (= (_1!1314 (h!2336 lt!69722)) (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (=> d!41429 (= (getValueByKey!171 lt!69722 (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) e!87619)))

(assert (= (and d!41429 c!25038) b!134523))

(assert (= (and d!41429 (not c!25038)) b!134524))

(assert (= (and b!134524 c!25039) b!134525))

(assert (= (and b!134524 (not c!25039)) b!134526))

(declare-fun m!160005 () Bool)

(assert (=> b!134525 m!160005))

(assert (=> d!40471 d!41429))

(declare-fun d!41431 () Bool)

(assert (=> d!41431 (= (getValueByKey!171 lt!69722 (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun lt!70491 () Unit!4150)

(assert (=> d!41431 (= lt!70491 (choose!834 lt!69722 (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun e!87621 () Bool)

(assert (=> d!41431 e!87621))

(declare-fun res!64685 () Bool)

(assert (=> d!41431 (=> (not res!64685) (not e!87621))))

(assert (=> d!41431 (= res!64685 (isStrictlySorted!317 lt!69722))))

(assert (=> d!41431 (= (lemmaContainsTupThenGetReturnValue!88 lt!69722 (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) lt!70491)))

(declare-fun b!134527 () Bool)

(declare-fun res!64686 () Bool)

(assert (=> b!134527 (=> (not res!64686) (not e!87621))))

(assert (=> b!134527 (= res!64686 (containsKey!175 lt!69722 (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134528 () Bool)

(assert (=> b!134528 (= e!87621 (contains!898 lt!69722 (tuple2!2609 (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (= (and d!41431 res!64685) b!134527))

(assert (= (and b!134527 res!64686) b!134528))

(assert (=> d!41431 m!157271))

(declare-fun m!160007 () Bool)

(assert (=> d!41431 m!160007))

(declare-fun m!160009 () Bool)

(assert (=> d!41431 m!160009))

(declare-fun m!160011 () Bool)

(assert (=> b!134527 m!160011))

(declare-fun m!160013 () Bool)

(assert (=> b!134528 m!160013))

(assert (=> d!40471 d!41431))

(declare-fun bm!14823 () Bool)

(declare-fun call!14826 () List!1735)

(declare-fun call!14827 () List!1735)

(assert (=> bm!14823 (= call!14826 call!14827)))

(declare-fun lt!70492 () List!1735)

(declare-fun b!134529 () Bool)

(declare-fun e!87624 () Bool)

(assert (=> b!134529 (= e!87624 (contains!898 lt!70492 (tuple2!2609 (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!134530 () Bool)

(declare-fun e!87626 () List!1735)

(assert (=> b!134530 (= e!87626 call!14827)))

(declare-fun b!134531 () Bool)

(declare-fun res!64687 () Bool)

(assert (=> b!134531 (=> (not res!64687) (not e!87624))))

(assert (=> b!134531 (= res!64687 (containsKey!175 lt!70492 (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134532 () Bool)

(declare-fun e!87622 () List!1735)

(assert (=> b!134532 (= e!87622 (insertStrictlySorted!90 (t!6198 (toList!869 (ite c!24588 call!14667 (ite c!24591 call!14663 call!14668)))) (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134533 () Bool)

(declare-fun e!87623 () List!1735)

(assert (=> b!134533 (= e!87623 call!14826)))

(declare-fun bm!14824 () Bool)

(declare-fun call!14828 () List!1735)

(assert (=> bm!14824 (= call!14827 call!14828)))

(declare-fun c!25042 () Bool)

(declare-fun b!134535 () Bool)

(declare-fun c!25040 () Bool)

(assert (=> b!134535 (= e!87622 (ite c!25042 (t!6198 (toList!869 (ite c!24588 call!14667 (ite c!24591 call!14663 call!14668)))) (ite c!25040 (Cons!1731 (h!2336 (toList!869 (ite c!24588 call!14667 (ite c!24591 call!14663 call!14668)))) (t!6198 (toList!869 (ite c!24588 call!14667 (ite c!24591 call!14663 call!14668))))) Nil!1732)))))

(declare-fun b!134536 () Bool)

(declare-fun e!87625 () List!1735)

(assert (=> b!134536 (= e!87625 call!14828)))

(declare-fun b!134537 () Bool)

(assert (=> b!134537 (= c!25040 (and ((_ is Cons!1731) (toList!869 (ite c!24588 call!14667 (ite c!24591 call!14663 call!14668)))) (bvsgt (_1!1314 (h!2336 (toList!869 (ite c!24588 call!14667 (ite c!24591 call!14663 call!14668))))) (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (=> b!134537 (= e!87626 e!87623)))

(declare-fun d!41433 () Bool)

(assert (=> d!41433 e!87624))

(declare-fun res!64688 () Bool)

(assert (=> d!41433 (=> (not res!64688) (not e!87624))))

(assert (=> d!41433 (= res!64688 (isStrictlySorted!317 lt!70492))))

(assert (=> d!41433 (= lt!70492 e!87625)))

(declare-fun c!25041 () Bool)

(assert (=> d!41433 (= c!25041 (and ((_ is Cons!1731) (toList!869 (ite c!24588 call!14667 (ite c!24591 call!14663 call!14668)))) (bvslt (_1!1314 (h!2336 (toList!869 (ite c!24588 call!14667 (ite c!24591 call!14663 call!14668))))) (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (=> d!41433 (isStrictlySorted!317 (toList!869 (ite c!24588 call!14667 (ite c!24591 call!14663 call!14668))))))

(assert (=> d!41433 (= (insertStrictlySorted!90 (toList!869 (ite c!24588 call!14667 (ite c!24591 call!14663 call!14668))) (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) lt!70492)))

(declare-fun b!134534 () Bool)

(assert (=> b!134534 (= e!87625 e!87626)))

(assert (=> b!134534 (= c!25042 (and ((_ is Cons!1731) (toList!869 (ite c!24588 call!14667 (ite c!24591 call!14663 call!14668)))) (= (_1!1314 (h!2336 (toList!869 (ite c!24588 call!14667 (ite c!24591 call!14663 call!14668))))) (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!134538 () Bool)

(assert (=> b!134538 (= e!87623 call!14826)))

(declare-fun bm!14825 () Bool)

(assert (=> bm!14825 (= call!14828 ($colon$colon!91 e!87622 (ite c!25041 (h!2336 (toList!869 (ite c!24588 call!14667 (ite c!24591 call!14663 call!14668)))) (tuple2!2609 (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))))

(declare-fun c!25043 () Bool)

(assert (=> bm!14825 (= c!25043 c!25041)))

(assert (= (and d!41433 c!25041) b!134536))

(assert (= (and d!41433 (not c!25041)) b!134534))

(assert (= (and b!134534 c!25042) b!134530))

(assert (= (and b!134534 (not c!25042)) b!134537))

(assert (= (and b!134537 c!25040) b!134538))

(assert (= (and b!134537 (not c!25040)) b!134533))

(assert (= (or b!134538 b!134533) bm!14823))

(assert (= (or b!134530 bm!14823) bm!14824))

(assert (= (or b!134536 bm!14824) bm!14825))

(assert (= (and bm!14825 c!25043) b!134532))

(assert (= (and bm!14825 (not c!25043)) b!134535))

(assert (= (and d!41433 res!64688) b!134531))

(assert (= (and b!134531 res!64687) b!134529))

(declare-fun m!160015 () Bool)

(assert (=> b!134531 m!160015))

(declare-fun m!160017 () Bool)

(assert (=> b!134529 m!160017))

(declare-fun m!160019 () Bool)

(assert (=> d!41433 m!160019))

(declare-fun m!160021 () Bool)

(assert (=> d!41433 m!160021))

(declare-fun m!160023 () Bool)

(assert (=> bm!14825 m!160023))

(declare-fun m!160025 () Bool)

(assert (=> b!134532 m!160025))

(assert (=> d!40471 d!41433))

(declare-fun d!41435 () Bool)

(assert (=> d!41435 (= (isEmpty!415 (getValueByKey!171 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000)) (not ((_ is Some!176) (getValueByKey!171 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!40647 d!41435))

(declare-fun b!134539 () Bool)

(declare-fun lt!70493 () Unit!4150)

(declare-fun lt!70497 () Unit!4150)

(assert (=> b!134539 (= lt!70493 lt!70497)))

(declare-fun lt!70494 () ListLongMap!1707)

(declare-fun lt!70496 () V!3483)

(declare-fun lt!70495 () (_ BitVec 64))

(declare-fun lt!70498 () (_ BitVec 64))

(assert (=> b!134539 (not (contains!896 (+!170 lt!70494 (tuple2!2609 lt!70498 lt!70496)) lt!70495))))

(assert (=> b!134539 (= lt!70497 (addStillNotContains!63 lt!70494 lt!70498 lt!70496 lt!70495))))

(assert (=> b!134539 (= lt!70495 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134539 (= lt!70496 (get!1488 (select (arr!2261 (_values!2848 (_2!1315 lt!69327))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 (_2!1315 lt!69327)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134539 (= lt!70498 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000))))

(declare-fun call!14829 () ListLongMap!1707)

(assert (=> b!134539 (= lt!70494 call!14829)))

(declare-fun e!87633 () ListLongMap!1707)

(assert (=> b!134539 (= e!87633 (+!170 call!14829 (tuple2!2609 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2848 (_2!1315 lt!69327))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 (_2!1315 lt!69327)) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134540 () Bool)

(declare-fun e!87630 () Bool)

(declare-fun lt!70499 () ListLongMap!1707)

(assert (=> b!134540 (= e!87630 (= lt!70499 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (_2!1315 lt!69327)) (_values!2848 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327)) (extraKeys!2630 (_2!1315 lt!69327)) (zeroValue!2720 (_2!1315 lt!69327)) (minValue!2720 (_2!1315 lt!69327)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 (_2!1315 lt!69327)))))))

(declare-fun b!134541 () Bool)

(assert (=> b!134541 (= e!87630 (isEmpty!414 lt!70499))))

(declare-fun b!134542 () Bool)

(declare-fun e!87631 () ListLongMap!1707)

(assert (=> b!134542 (= e!87631 (ListLongMap!1708 Nil!1732))))

(declare-fun b!134543 () Bool)

(declare-fun e!87628 () Bool)

(declare-fun e!87629 () Bool)

(assert (=> b!134543 (= e!87628 e!87629)))

(declare-fun c!25047 () Bool)

(declare-fun e!87632 () Bool)

(assert (=> b!134543 (= c!25047 e!87632)))

(declare-fun res!64692 () Bool)

(assert (=> b!134543 (=> (not res!64692) (not e!87632))))

(assert (=> b!134543 (= res!64692 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(declare-fun b!134544 () Bool)

(assert (=> b!134544 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(assert (=> b!134544 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_values!2848 (_2!1315 lt!69327)))))))

(declare-fun e!87627 () Bool)

(assert (=> b!134544 (= e!87627 (= (apply!116 lt!70499 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (_values!2848 (_2!1315 lt!69327))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 (_2!1315 lt!69327)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134546 () Bool)

(assert (=> b!134546 (= e!87629 e!87627)))

(assert (=> b!134546 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(declare-fun res!64691 () Bool)

(assert (=> b!134546 (= res!64691 (contains!896 lt!70499 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(assert (=> b!134546 (=> (not res!64691) (not e!87627))))

(declare-fun b!134547 () Bool)

(assert (=> b!134547 (= e!87631 e!87633)))

(declare-fun c!25044 () Bool)

(assert (=> b!134547 (= c!25044 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(declare-fun b!134548 () Bool)

(declare-fun res!64690 () Bool)

(assert (=> b!134548 (=> (not res!64690) (not e!87628))))

(assert (=> b!134548 (= res!64690 (not (contains!896 lt!70499 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134549 () Bool)

(assert (=> b!134549 (= e!87629 e!87630)))

(declare-fun c!25046 () Bool)

(assert (=> b!134549 (= c!25046 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(declare-fun bm!14826 () Bool)

(assert (=> bm!14826 (= call!14829 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (_2!1315 lt!69327)) (_values!2848 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327)) (extraKeys!2630 (_2!1315 lt!69327)) (zeroValue!2720 (_2!1315 lt!69327)) (minValue!2720 (_2!1315 lt!69327)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 (_2!1315 lt!69327))))))

(declare-fun b!134550 () Bool)

(assert (=> b!134550 (= e!87632 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(assert (=> b!134550 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134545 () Bool)

(assert (=> b!134545 (= e!87633 call!14829)))

(declare-fun d!41437 () Bool)

(assert (=> d!41437 e!87628))

(declare-fun res!64689 () Bool)

(assert (=> d!41437 (=> (not res!64689) (not e!87628))))

(assert (=> d!41437 (= res!64689 (not (contains!896 lt!70499 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41437 (= lt!70499 e!87631)))

(declare-fun c!25045 () Bool)

(assert (=> d!41437 (= c!25045 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(assert (=> d!41437 (validMask!0 (mask!7165 (_2!1315 lt!69327)))))

(assert (=> d!41437 (= (getCurrentListMapNoExtraKeys!137 (_keys!4614 (_2!1315 lt!69327)) (_values!2848 (_2!1315 lt!69327)) (mask!7165 (_2!1315 lt!69327)) (extraKeys!2630 (_2!1315 lt!69327)) (zeroValue!2720 (_2!1315 lt!69327)) (minValue!2720 (_2!1315 lt!69327)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1315 lt!69327))) lt!70499)))

(assert (= (and d!41437 c!25045) b!134542))

(assert (= (and d!41437 (not c!25045)) b!134547))

(assert (= (and b!134547 c!25044) b!134539))

(assert (= (and b!134547 (not c!25044)) b!134545))

(assert (= (or b!134539 b!134545) bm!14826))

(assert (= (and d!41437 res!64689) b!134548))

(assert (= (and b!134548 res!64690) b!134543))

(assert (= (and b!134543 res!64692) b!134550))

(assert (= (and b!134543 c!25047) b!134546))

(assert (= (and b!134543 (not c!25047)) b!134549))

(assert (= (and b!134546 res!64691) b!134544))

(assert (= (and b!134549 c!25046) b!134540))

(assert (= (and b!134549 (not c!25046)) b!134541))

(declare-fun b_lambda!6047 () Bool)

(assert (=> (not b_lambda!6047) (not b!134539)))

(assert (=> b!134539 t!6209))

(declare-fun b_and!8389 () Bool)

(assert (= b_and!8385 (and (=> t!6209 result!4013) b_and!8389)))

(assert (=> b!134539 t!6211))

(declare-fun b_and!8391 () Bool)

(assert (= b_and!8387 (and (=> t!6211 result!4015) b_and!8391)))

(declare-fun b_lambda!6049 () Bool)

(assert (=> (not b_lambda!6049) (not b!134544)))

(assert (=> b!134544 t!6209))

(declare-fun b_and!8393 () Bool)

(assert (= b_and!8389 (and (=> t!6209 result!4013) b_and!8393)))

(assert (=> b!134544 t!6211))

(declare-fun b_and!8395 () Bool)

(assert (= b_and!8391 (and (=> t!6211 result!4015) b_and!8395)))

(declare-fun m!160027 () Bool)

(assert (=> d!41437 m!160027))

(assert (=> d!41437 m!157363))

(declare-fun m!160029 () Bool)

(assert (=> b!134540 m!160029))

(declare-fun m!160031 () Bool)

(assert (=> b!134539 m!160031))

(declare-fun m!160033 () Bool)

(assert (=> b!134539 m!160033))

(assert (=> b!134539 m!160031))

(assert (=> b!134539 m!157403))

(assert (=> b!134539 m!157401))

(assert (=> b!134539 m!157403))

(assert (=> b!134539 m!157405))

(declare-fun m!160035 () Bool)

(assert (=> b!134539 m!160035))

(assert (=> b!134539 m!157401))

(assert (=> b!134539 m!157397))

(declare-fun m!160037 () Bool)

(assert (=> b!134539 m!160037))

(assert (=> b!134544 m!157397))

(declare-fun m!160039 () Bool)

(assert (=> b!134544 m!160039))

(assert (=> b!134544 m!157403))

(assert (=> b!134544 m!157397))

(assert (=> b!134544 m!157401))

(assert (=> b!134544 m!157403))

(assert (=> b!134544 m!157405))

(assert (=> b!134544 m!157401))

(assert (=> bm!14826 m!160029))

(assert (=> b!134547 m!157397))

(assert (=> b!134547 m!157397))

(assert (=> b!134547 m!157445))

(declare-fun m!160041 () Bool)

(assert (=> b!134548 m!160041))

(assert (=> b!134546 m!157397))

(assert (=> b!134546 m!157397))

(declare-fun m!160043 () Bool)

(assert (=> b!134546 m!160043))

(assert (=> b!134550 m!157397))

(assert (=> b!134550 m!157397))

(assert (=> b!134550 m!157445))

(declare-fun m!160045 () Bool)

(assert (=> b!134541 m!160045))

(assert (=> bm!14727 d!41437))

(assert (=> b!133530 d!41065))

(assert (=> b!133530 d!40597))

(declare-fun d!41439 () Bool)

(declare-fun c!25048 () Bool)

(assert (=> d!41439 (= c!25048 ((_ is ValueCellFull!1095) (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!87634 () V!3483)

(assert (=> d!41439 (= (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87634)))

(declare-fun b!134551 () Bool)

(assert (=> b!134551 (= e!87634 (get!1489 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134552 () Bool)

(assert (=> b!134552 (= e!87634 (get!1490 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41439 c!25048) b!134551))

(assert (= (and d!41439 (not c!25048)) b!134552))

(assert (=> b!134551 m!158115))

(assert (=> b!134551 m!156283))

(declare-fun m!160047 () Bool)

(assert (=> b!134551 m!160047))

(assert (=> b!134552 m!158115))

(assert (=> b!134552 m!156283))

(declare-fun m!160049 () Bool)

(assert (=> b!134552 m!160049))

(assert (=> b!133658 d!41439))

(declare-fun d!41441 () Bool)

(declare-fun e!87635 () Bool)

(assert (=> d!41441 e!87635))

(declare-fun res!64693 () Bool)

(assert (=> d!41441 (=> res!64693 e!87635)))

(declare-fun lt!70500 () Bool)

(assert (=> d!41441 (= res!64693 (not lt!70500))))

(declare-fun lt!70502 () Bool)

(assert (=> d!41441 (= lt!70500 lt!70502)))

(declare-fun lt!70501 () Unit!4150)

(declare-fun e!87636 () Unit!4150)

(assert (=> d!41441 (= lt!70501 e!87636)))

(declare-fun c!25049 () Bool)

(assert (=> d!41441 (= c!25049 lt!70502)))

(assert (=> d!41441 (= lt!70502 (containsKey!175 (toList!869 (+!170 lt!69983 (tuple2!2609 lt!69987 lt!69985))) lt!69984))))

(assert (=> d!41441 (= (contains!896 (+!170 lt!69983 (tuple2!2609 lt!69987 lt!69985)) lt!69984) lt!70500)))

(declare-fun b!134553 () Bool)

(declare-fun lt!70503 () Unit!4150)

(assert (=> b!134553 (= e!87636 lt!70503)))

(assert (=> b!134553 (= lt!70503 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69983 (tuple2!2609 lt!69987 lt!69985))) lt!69984))))

(assert (=> b!134553 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69983 (tuple2!2609 lt!69987 lt!69985))) lt!69984))))

(declare-fun b!134554 () Bool)

(declare-fun Unit!4228 () Unit!4150)

(assert (=> b!134554 (= e!87636 Unit!4228)))

(declare-fun b!134555 () Bool)

(assert (=> b!134555 (= e!87635 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69983 (tuple2!2609 lt!69987 lt!69985))) lt!69984)))))

(assert (= (and d!41441 c!25049) b!134553))

(assert (= (and d!41441 (not c!25049)) b!134554))

(assert (= (and d!41441 (not res!64693)) b!134555))

(declare-fun m!160051 () Bool)

(assert (=> d!41441 m!160051))

(declare-fun m!160053 () Bool)

(assert (=> b!134553 m!160053))

(declare-fun m!160055 () Bool)

(assert (=> b!134553 m!160055))

(assert (=> b!134553 m!160055))

(declare-fun m!160057 () Bool)

(assert (=> b!134553 m!160057))

(assert (=> b!134555 m!160055))

(assert (=> b!134555 m!160055))

(assert (=> b!134555 m!160057))

(assert (=> b!133658 d!41441))

(declare-fun d!41443 () Bool)

(declare-fun e!87637 () Bool)

(assert (=> d!41443 e!87637))

(declare-fun res!64695 () Bool)

(assert (=> d!41443 (=> (not res!64695) (not e!87637))))

(declare-fun lt!70505 () ListLongMap!1707)

(assert (=> d!41443 (= res!64695 (contains!896 lt!70505 (_1!1314 (tuple2!2609 lt!69987 lt!69985))))))

(declare-fun lt!70507 () List!1735)

(assert (=> d!41443 (= lt!70505 (ListLongMap!1708 lt!70507))))

(declare-fun lt!70506 () Unit!4150)

(declare-fun lt!70504 () Unit!4150)

(assert (=> d!41443 (= lt!70506 lt!70504)))

(assert (=> d!41443 (= (getValueByKey!171 lt!70507 (_1!1314 (tuple2!2609 lt!69987 lt!69985))) (Some!176 (_2!1314 (tuple2!2609 lt!69987 lt!69985))))))

(assert (=> d!41443 (= lt!70504 (lemmaContainsTupThenGetReturnValue!88 lt!70507 (_1!1314 (tuple2!2609 lt!69987 lt!69985)) (_2!1314 (tuple2!2609 lt!69987 lt!69985))))))

(assert (=> d!41443 (= lt!70507 (insertStrictlySorted!90 (toList!869 lt!69983) (_1!1314 (tuple2!2609 lt!69987 lt!69985)) (_2!1314 (tuple2!2609 lt!69987 lt!69985))))))

(assert (=> d!41443 (= (+!170 lt!69983 (tuple2!2609 lt!69987 lt!69985)) lt!70505)))

(declare-fun b!134556 () Bool)

(declare-fun res!64694 () Bool)

(assert (=> b!134556 (=> (not res!64694) (not e!87637))))

(assert (=> b!134556 (= res!64694 (= (getValueByKey!171 (toList!869 lt!70505) (_1!1314 (tuple2!2609 lt!69987 lt!69985))) (Some!176 (_2!1314 (tuple2!2609 lt!69987 lt!69985)))))))

(declare-fun b!134557 () Bool)

(assert (=> b!134557 (= e!87637 (contains!898 (toList!869 lt!70505) (tuple2!2609 lt!69987 lt!69985)))))

(assert (= (and d!41443 res!64695) b!134556))

(assert (= (and b!134556 res!64694) b!134557))

(declare-fun m!160059 () Bool)

(assert (=> d!41443 m!160059))

(declare-fun m!160061 () Bool)

(assert (=> d!41443 m!160061))

(declare-fun m!160063 () Bool)

(assert (=> d!41443 m!160063))

(declare-fun m!160065 () Bool)

(assert (=> d!41443 m!160065))

(declare-fun m!160067 () Bool)

(assert (=> b!134556 m!160067))

(declare-fun m!160069 () Bool)

(assert (=> b!134557 m!160069))

(assert (=> b!133658 d!41443))

(declare-fun d!41445 () Bool)

(declare-fun e!87638 () Bool)

(assert (=> d!41445 e!87638))

(declare-fun res!64697 () Bool)

(assert (=> d!41445 (=> (not res!64697) (not e!87638))))

(declare-fun lt!70509 () ListLongMap!1707)

(assert (=> d!41445 (= res!64697 (contains!896 lt!70509 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70511 () List!1735)

(assert (=> d!41445 (= lt!70509 (ListLongMap!1708 lt!70511))))

(declare-fun lt!70510 () Unit!4150)

(declare-fun lt!70508 () Unit!4150)

(assert (=> d!41445 (= lt!70510 lt!70508)))

(assert (=> d!41445 (= (getValueByKey!171 lt!70511 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41445 (= lt!70508 (lemmaContainsTupThenGetReturnValue!88 lt!70511 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41445 (= lt!70511 (insertStrictlySorted!90 (toList!869 call!14759) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41445 (= (+!170 call!14759 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70509)))

(declare-fun b!134558 () Bool)

(declare-fun res!64696 () Bool)

(assert (=> b!134558 (=> (not res!64696) (not e!87638))))

(assert (=> b!134558 (= res!64696 (= (getValueByKey!171 (toList!869 lt!70509) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134559 () Bool)

(assert (=> b!134559 (= e!87638 (contains!898 (toList!869 lt!70509) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41445 res!64697) b!134558))

(assert (= (and b!134558 res!64696) b!134559))

(declare-fun m!160071 () Bool)

(assert (=> d!41445 m!160071))

(declare-fun m!160073 () Bool)

(assert (=> d!41445 m!160073))

(declare-fun m!160075 () Bool)

(assert (=> d!41445 m!160075))

(declare-fun m!160077 () Bool)

(assert (=> d!41445 m!160077))

(declare-fun m!160079 () Bool)

(assert (=> b!134558 m!160079))

(declare-fun m!160081 () Bool)

(assert (=> b!134559 m!160081))

(assert (=> b!133658 d!41445))

(declare-fun d!41447 () Bool)

(assert (=> d!41447 (not (contains!896 (+!170 lt!69983 (tuple2!2609 lt!69987 lt!69985)) lt!69984))))

(declare-fun lt!70512 () Unit!4150)

(assert (=> d!41447 (= lt!70512 (choose!836 lt!69983 lt!69987 lt!69985 lt!69984))))

(declare-fun e!87639 () Bool)

(assert (=> d!41447 e!87639))

(declare-fun res!64698 () Bool)

(assert (=> d!41447 (=> (not res!64698) (not e!87639))))

(assert (=> d!41447 (= res!64698 (not (contains!896 lt!69983 lt!69984)))))

(assert (=> d!41447 (= (addStillNotContains!63 lt!69983 lt!69987 lt!69985 lt!69984) lt!70512)))

(declare-fun b!134560 () Bool)

(assert (=> b!134560 (= e!87639 (not (= lt!69987 lt!69984)))))

(assert (= (and d!41447 res!64698) b!134560))

(assert (=> d!41447 m!158111))

(assert (=> d!41447 m!158111))

(assert (=> d!41447 m!158113))

(declare-fun m!160083 () Bool)

(assert (=> d!41447 m!160083))

(declare-fun m!160085 () Bool)

(assert (=> d!41447 m!160085))

(assert (=> b!133658 d!41447))

(declare-fun b!134561 () Bool)

(declare-fun e!87640 () Option!177)

(assert (=> b!134561 (= e!87640 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 call!14629))))))))

(declare-fun b!134564 () Bool)

(declare-fun e!87641 () Option!177)

(assert (=> b!134564 (= e!87641 None!175)))

(declare-fun b!134563 () Bool)

(assert (=> b!134563 (= e!87641 (getValueByKey!171 (t!6198 (t!6198 (toList!869 call!14629))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!134562 () Bool)

(assert (=> b!134562 (= e!87640 e!87641)))

(declare-fun c!25051 () Bool)

(assert (=> b!134562 (= c!25051 (and ((_ is Cons!1731) (t!6198 (toList!869 call!14629))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 call!14629)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun c!25050 () Bool)

(declare-fun d!41449 () Bool)

(assert (=> d!41449 (= c!25050 (and ((_ is Cons!1731) (t!6198 (toList!869 call!14629))) (= (_1!1314 (h!2336 (t!6198 (toList!869 call!14629)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!41449 (= (getValueByKey!171 (t!6198 (toList!869 call!14629)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) e!87640)))

(assert (= (and d!41449 c!25050) b!134561))

(assert (= (and d!41449 (not c!25050)) b!134562))

(assert (= (and b!134562 c!25051) b!134563))

(assert (= (and b!134562 (not c!25051)) b!134564))

(assert (=> b!134563 m!156287))

(declare-fun m!160087 () Bool)

(assert (=> b!134563 m!160087))

(assert (=> b!133557 d!41449))

(declare-fun d!41451 () Bool)

(assert (=> d!41451 (= (apply!116 lt!69760 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1491 (getValueByKey!171 (toList!869 lt!69760) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5629 () Bool)

(assert (= bs!5629 d!41451))

(assert (=> bs!5629 m!156533))

(declare-fun m!160089 () Bool)

(assert (=> bs!5629 m!160089))

(assert (=> bs!5629 m!160089))

(declare-fun m!160091 () Bool)

(assert (=> bs!5629 m!160091))

(assert (=> b!133310 d!41451))

(assert (=> b!133310 d!40697))

(declare-fun d!41453 () Bool)

(assert (=> d!41453 (isDefined!125 (getValueByKey!171 (toList!869 lt!69488) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70513 () Unit!4150)

(assert (=> d!41453 (= lt!70513 (choose!831 (toList!869 lt!69488) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87642 () Bool)

(assert (=> d!41453 e!87642))

(declare-fun res!64699 () Bool)

(assert (=> d!41453 (=> (not res!64699) (not e!87642))))

(assert (=> d!41453 (= res!64699 (isStrictlySorted!317 (toList!869 lt!69488)))))

(assert (=> d!41453 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69488) #b1000000000000000000000000000000000000000000000000000000000000000) lt!70513)))

(declare-fun b!134565 () Bool)

(assert (=> b!134565 (= e!87642 (containsKey!175 (toList!869 lt!69488) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41453 res!64699) b!134565))

(assert (=> d!41453 m!157459))

(assert (=> d!41453 m!157459))

(assert (=> d!41453 m!158247))

(declare-fun m!160093 () Bool)

(assert (=> d!41453 m!160093))

(assert (=> d!41453 m!159947))

(assert (=> b!134565 m!158243))

(assert (=> b!133727 d!41453))

(declare-fun d!41455 () Bool)

(assert (=> d!41455 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69488) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69488) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5630 () Bool)

(assert (= bs!5630 d!41455))

(assert (=> bs!5630 m!157459))

(declare-fun m!160095 () Bool)

(assert (=> bs!5630 m!160095))

(assert (=> b!133727 d!41455))

(declare-fun b!134566 () Bool)

(declare-fun e!87643 () Option!177)

(assert (=> b!134566 (= e!87643 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69488)))))))

(declare-fun b!134569 () Bool)

(declare-fun e!87644 () Option!177)

(assert (=> b!134569 (= e!87644 None!175)))

(declare-fun b!134568 () Bool)

(assert (=> b!134568 (= e!87644 (getValueByKey!171 (t!6198 (toList!869 lt!69488)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134567 () Bool)

(assert (=> b!134567 (= e!87643 e!87644)))

(declare-fun c!25053 () Bool)

(assert (=> b!134567 (= c!25053 (and ((_ is Cons!1731) (toList!869 lt!69488)) (not (= (_1!1314 (h!2336 (toList!869 lt!69488))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!41457 () Bool)

(declare-fun c!25052 () Bool)

(assert (=> d!41457 (= c!25052 (and ((_ is Cons!1731) (toList!869 lt!69488)) (= (_1!1314 (h!2336 (toList!869 lt!69488))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41457 (= (getValueByKey!171 (toList!869 lt!69488) #b1000000000000000000000000000000000000000000000000000000000000000) e!87643)))

(assert (= (and d!41457 c!25052) b!134566))

(assert (= (and d!41457 (not c!25052)) b!134567))

(assert (= (and b!134567 c!25053) b!134568))

(assert (= (and b!134567 (not c!25053)) b!134569))

(declare-fun m!160097 () Bool)

(assert (=> b!134568 m!160097))

(assert (=> b!133727 d!41457))

(declare-fun b!134570 () Bool)

(declare-fun e!87645 () Option!177)

(assert (=> b!134570 (= e!87645 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69808)))))))

(declare-fun b!134573 () Bool)

(declare-fun e!87646 () Option!177)

(assert (=> b!134573 (= e!87646 None!175)))

(declare-fun b!134572 () Bool)

(assert (=> b!134572 (= e!87646 (getValueByKey!171 (t!6198 (toList!869 lt!69808)) (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))))

(declare-fun b!134571 () Bool)

(assert (=> b!134571 (= e!87645 e!87646)))

(declare-fun c!25055 () Bool)

(assert (=> b!134571 (= c!25055 (and ((_ is Cons!1731) (toList!869 lt!69808)) (not (= (_1!1314 (h!2336 (toList!869 lt!69808))) (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))))))

(declare-fun d!41459 () Bool)

(declare-fun c!25054 () Bool)

(assert (=> d!41459 (= c!25054 (and ((_ is Cons!1731) (toList!869 lt!69808)) (= (_1!1314 (h!2336 (toList!869 lt!69808))) (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))))))

(assert (=> d!41459 (= (getValueByKey!171 (toList!869 lt!69808) (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) e!87645)))

(assert (= (and d!41459 c!25054) b!134570))

(assert (= (and d!41459 (not c!25054)) b!134571))

(assert (= (and b!134571 c!25055) b!134572))

(assert (= (and b!134571 (not c!25055)) b!134573))

(declare-fun m!160099 () Bool)

(assert (=> b!134572 m!160099))

(assert (=> b!133402 d!41459))

(declare-fun d!41461 () Bool)

(declare-fun lt!70514 () Bool)

(assert (=> d!41461 (= lt!70514 (select (content!132 lt!70063) (tuple2!2609 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!87648 () Bool)

(assert (=> d!41461 (= lt!70514 e!87648)))

(declare-fun res!64700 () Bool)

(assert (=> d!41461 (=> (not res!64700) (not e!87648))))

(assert (=> d!41461 (= res!64700 ((_ is Cons!1731) lt!70063))))

(assert (=> d!41461 (= (contains!898 lt!70063 (tuple2!2609 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) lt!70514)))

(declare-fun b!134574 () Bool)

(declare-fun e!87647 () Bool)

(assert (=> b!134574 (= e!87648 e!87647)))

(declare-fun res!64701 () Bool)

(assert (=> b!134574 (=> res!64701 e!87647)))

(assert (=> b!134574 (= res!64701 (= (h!2336 lt!70063) (tuple2!2609 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134575 () Bool)

(assert (=> b!134575 (= e!87647 (contains!898 (t!6198 lt!70063) (tuple2!2609 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!41461 res!64700) b!134574))

(assert (= (and b!134574 (not res!64701)) b!134575))

(declare-fun m!160101 () Bool)

(assert (=> d!41461 m!160101))

(declare-fun m!160103 () Bool)

(assert (=> d!41461 m!160103))

(declare-fun m!160105 () Bool)

(assert (=> b!134575 m!160105))

(assert (=> b!133783 d!41461))

(declare-fun d!41463 () Bool)

(assert (=> d!41463 (= (get!1491 (getValueByKey!171 (toList!869 lt!69488) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))) (v!3201 (getValueByKey!171 (toList!869 lt!69488) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!40909 d!41463))

(assert (=> d!40909 d!41407))

(declare-fun d!41465 () Bool)

(declare-fun lt!70515 () Bool)

(assert (=> d!41465 (= lt!70515 (select (content!132 (t!6198 (toList!869 lt!69442))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun e!87650 () Bool)

(assert (=> d!41465 (= lt!70515 e!87650)))

(declare-fun res!64702 () Bool)

(assert (=> d!41465 (=> (not res!64702) (not e!87650))))

(assert (=> d!41465 (= res!64702 ((_ is Cons!1731) (t!6198 (toList!869 lt!69442))))))

(assert (=> d!41465 (= (contains!898 (t!6198 (toList!869 lt!69442)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!70515)))

(declare-fun b!134576 () Bool)

(declare-fun e!87649 () Bool)

(assert (=> b!134576 (= e!87650 e!87649)))

(declare-fun res!64703 () Bool)

(assert (=> b!134576 (=> res!64703 e!87649)))

(assert (=> b!134576 (= res!64703 (= (h!2336 (t!6198 (toList!869 lt!69442))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!134577 () Bool)

(assert (=> b!134577 (= e!87649 (contains!898 (t!6198 (t!6198 (toList!869 lt!69442))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(assert (= (and d!41465 res!64702) b!134576))

(assert (= (and b!134576 (not res!64703)) b!134577))

(declare-fun m!160107 () Bool)

(assert (=> d!41465 m!160107))

(declare-fun m!160109 () Bool)

(assert (=> d!41465 m!160109))

(declare-fun m!160111 () Bool)

(assert (=> b!134577 m!160111))

(assert (=> b!133645 d!41465))

(declare-fun d!41467 () Bool)

(declare-fun res!64704 () Bool)

(declare-fun e!87651 () Bool)

(assert (=> d!41467 (=> res!64704 e!87651)))

(assert (=> d!41467 (= res!64704 (or ((_ is Nil!1732) lt!69655) ((_ is Nil!1732) (t!6198 lt!69655))))))

(assert (=> d!41467 (= (isStrictlySorted!317 lt!69655) e!87651)))

(declare-fun b!134578 () Bool)

(declare-fun e!87652 () Bool)

(assert (=> b!134578 (= e!87651 e!87652)))

(declare-fun res!64705 () Bool)

(assert (=> b!134578 (=> (not res!64705) (not e!87652))))

(assert (=> b!134578 (= res!64705 (bvslt (_1!1314 (h!2336 lt!69655)) (_1!1314 (h!2336 (t!6198 lt!69655)))))))

(declare-fun b!134579 () Bool)

(assert (=> b!134579 (= e!87652 (isStrictlySorted!317 (t!6198 lt!69655)))))

(assert (= (and d!41467 (not res!64704)) b!134578))

(assert (= (and b!134578 res!64705) b!134579))

(declare-fun m!160113 () Bool)

(assert (=> b!134579 m!160113))

(assert (=> d!40437 d!41467))

(declare-fun d!41469 () Bool)

(declare-fun res!64706 () Bool)

(declare-fun e!87653 () Bool)

(assert (=> d!41469 (=> res!64706 e!87653)))

(assert (=> d!41469 (= res!64706 (or ((_ is Nil!1732) (toList!869 lt!69229)) ((_ is Nil!1732) (t!6198 (toList!869 lt!69229)))))))

(assert (=> d!41469 (= (isStrictlySorted!317 (toList!869 lt!69229)) e!87653)))

(declare-fun b!134580 () Bool)

(declare-fun e!87654 () Bool)

(assert (=> b!134580 (= e!87653 e!87654)))

(declare-fun res!64707 () Bool)

(assert (=> b!134580 (=> (not res!64707) (not e!87654))))

(assert (=> b!134580 (= res!64707 (bvslt (_1!1314 (h!2336 (toList!869 lt!69229))) (_1!1314 (h!2336 (t!6198 (toList!869 lt!69229))))))))

(declare-fun b!134581 () Bool)

(assert (=> b!134581 (= e!87654 (isStrictlySorted!317 (t!6198 (toList!869 lt!69229))))))

(assert (= (and d!41469 (not res!64706)) b!134580))

(assert (= (and b!134580 res!64707) b!134581))

(declare-fun m!160115 () Bool)

(assert (=> b!134581 m!160115))

(assert (=> d!40437 d!41469))

(assert (=> b!133696 d!40981))

(declare-fun d!41471 () Bool)

(assert (=> d!41471 (= (get!1491 (getValueByKey!171 (toList!869 lt!69496) lt!69495)) (v!3201 (getValueByKey!171 (toList!869 lt!69496) lt!69495)))))

(assert (=> d!40577 d!41471))

(declare-fun b!134582 () Bool)

(declare-fun e!87655 () Option!177)

(assert (=> b!134582 (= e!87655 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69496)))))))

(declare-fun b!134585 () Bool)

(declare-fun e!87656 () Option!177)

(assert (=> b!134585 (= e!87656 None!175)))

(declare-fun b!134584 () Bool)

(assert (=> b!134584 (= e!87656 (getValueByKey!171 (t!6198 (toList!869 lt!69496)) lt!69495))))

(declare-fun b!134583 () Bool)

(assert (=> b!134583 (= e!87655 e!87656)))

(declare-fun c!25057 () Bool)

(assert (=> b!134583 (= c!25057 (and ((_ is Cons!1731) (toList!869 lt!69496)) (not (= (_1!1314 (h!2336 (toList!869 lt!69496))) lt!69495))))))

(declare-fun d!41473 () Bool)

(declare-fun c!25056 () Bool)

(assert (=> d!41473 (= c!25056 (and ((_ is Cons!1731) (toList!869 lt!69496)) (= (_1!1314 (h!2336 (toList!869 lt!69496))) lt!69495)))))

(assert (=> d!41473 (= (getValueByKey!171 (toList!869 lt!69496) lt!69495) e!87655)))

(assert (= (and d!41473 c!25056) b!134582))

(assert (= (and d!41473 (not c!25056)) b!134583))

(assert (= (and b!134583 c!25057) b!134584))

(assert (= (and b!134583 (not c!25057)) b!134585))

(declare-fun m!160117 () Bool)

(assert (=> b!134584 m!160117))

(assert (=> d!40577 d!41473))

(assert (=> d!40785 d!40803))

(declare-fun d!41475 () Bool)

(assert (=> d!41475 (= (apply!116 (+!170 lt!69519 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))) lt!69507) (apply!116 lt!69519 lt!69507))))

(assert (=> d!41475 true))

(declare-fun _$34!981 () Unit!4150)

(assert (=> d!41475 (= (choose!828 lt!69519 lt!69521 (minValue!2720 newMap!16) lt!69507) _$34!981)))

(declare-fun bs!5631 () Bool)

(assert (= bs!5631 d!41475))

(assert (=> bs!5631 m!156921))

(assert (=> bs!5631 m!156921))

(assert (=> bs!5631 m!156923))

(assert (=> bs!5631 m!156935))

(assert (=> d!40785 d!41475))

(declare-fun d!41477 () Bool)

(declare-fun e!87657 () Bool)

(assert (=> d!41477 e!87657))

(declare-fun res!64708 () Bool)

(assert (=> d!41477 (=> res!64708 e!87657)))

(declare-fun lt!70516 () Bool)

(assert (=> d!41477 (= res!64708 (not lt!70516))))

(declare-fun lt!70518 () Bool)

(assert (=> d!41477 (= lt!70516 lt!70518)))

(declare-fun lt!70517 () Unit!4150)

(declare-fun e!87658 () Unit!4150)

(assert (=> d!41477 (= lt!70517 e!87658)))

(declare-fun c!25058 () Bool)

(assert (=> d!41477 (= c!25058 lt!70518)))

(assert (=> d!41477 (= lt!70518 (containsKey!175 (toList!869 lt!69519) lt!69507))))

(assert (=> d!41477 (= (contains!896 lt!69519 lt!69507) lt!70516)))

(declare-fun b!134586 () Bool)

(declare-fun lt!70519 () Unit!4150)

(assert (=> b!134586 (= e!87658 lt!70519)))

(assert (=> b!134586 (= lt!70519 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69519) lt!69507))))

(assert (=> b!134586 (isDefined!125 (getValueByKey!171 (toList!869 lt!69519) lt!69507))))

(declare-fun b!134587 () Bool)

(declare-fun Unit!4229 () Unit!4150)

(assert (=> b!134587 (= e!87658 Unit!4229)))

(declare-fun b!134588 () Bool)

(assert (=> b!134588 (= e!87657 (isDefined!125 (getValueByKey!171 (toList!869 lt!69519) lt!69507)))))

(assert (= (and d!41477 c!25058) b!134586))

(assert (= (and d!41477 (not c!25058)) b!134587))

(assert (= (and d!41477 (not res!64708)) b!134588))

(declare-fun m!160119 () Bool)

(assert (=> d!41477 m!160119))

(declare-fun m!160121 () Bool)

(assert (=> b!134586 m!160121))

(assert (=> b!134586 m!158355))

(assert (=> b!134586 m!158355))

(declare-fun m!160123 () Bool)

(assert (=> b!134586 m!160123))

(assert (=> b!134588 m!158355))

(assert (=> b!134588 m!158355))

(assert (=> b!134588 m!160123))

(assert (=> d!40785 d!41477))

(assert (=> d!40785 d!40807))

(assert (=> d!40785 d!40813))

(declare-fun d!41479 () Bool)

(assert (=> d!41479 (= (validKeyInArray!0 (select (arr!2260 lt!69605) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))) (and (not (= (select (arr!2260 lt!69605) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 lt!69605) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133962 d!41479))

(assert (=> d!40557 d!40553))

(assert (=> d!40557 d!40335))

(assert (=> d!40557 d!40555))

(declare-fun d!41481 () Bool)

(declare-fun lt!70520 () Bool)

(assert (=> d!41481 (= lt!70520 (select (content!132 (toList!869 lt!69911)) (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))))

(declare-fun e!87660 () Bool)

(assert (=> d!41481 (= lt!70520 e!87660)))

(declare-fun res!64709 () Bool)

(assert (=> d!41481 (=> (not res!64709) (not e!87660))))

(assert (=> d!41481 (= res!64709 ((_ is Cons!1731) (toList!869 lt!69911)))))

(assert (=> d!41481 (= (contains!898 (toList!869 lt!69911) (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))) lt!70520)))

(declare-fun b!134589 () Bool)

(declare-fun e!87659 () Bool)

(assert (=> b!134589 (= e!87660 e!87659)))

(declare-fun res!64710 () Bool)

(assert (=> b!134589 (=> res!64710 e!87659)))

(assert (=> b!134589 (= res!64710 (= (h!2336 (toList!869 lt!69911)) (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))))

(declare-fun b!134590 () Bool)

(assert (=> b!134590 (= e!87659 (contains!898 (t!6198 (toList!869 lt!69911)) (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41481 res!64709) b!134589))

(assert (= (and b!134589 (not res!64710)) b!134590))

(declare-fun m!160125 () Bool)

(assert (=> d!41481 m!160125))

(declare-fun m!160127 () Bool)

(assert (=> d!41481 m!160127))

(declare-fun m!160129 () Bool)

(assert (=> b!134590 m!160129))

(assert (=> b!133503 d!41481))

(assert (=> d!40563 d!40267))

(declare-fun d!41483 () Bool)

(declare-fun res!64711 () Bool)

(declare-fun e!87661 () Bool)

(assert (=> d!41483 (=> res!64711 e!87661)))

(assert (=> d!41483 (= res!64711 (or ((_ is Nil!1732) lt!70063) ((_ is Nil!1732) (t!6198 lt!70063))))))

(assert (=> d!41483 (= (isStrictlySorted!317 lt!70063) e!87661)))

(declare-fun b!134591 () Bool)

(declare-fun e!87662 () Bool)

(assert (=> b!134591 (= e!87661 e!87662)))

(declare-fun res!64712 () Bool)

(assert (=> b!134591 (=> (not res!64712) (not e!87662))))

(assert (=> b!134591 (= res!64712 (bvslt (_1!1314 (h!2336 lt!70063)) (_1!1314 (h!2336 (t!6198 lt!70063)))))))

(declare-fun b!134592 () Bool)

(assert (=> b!134592 (= e!87662 (isStrictlySorted!317 (t!6198 lt!70063)))))

(assert (= (and d!41483 (not res!64711)) b!134591))

(assert (= (and b!134591 res!64712) b!134592))

(declare-fun m!160131 () Bool)

(assert (=> b!134592 m!160131))

(assert (=> d!40827 d!41483))

(declare-fun d!41485 () Bool)

(declare-fun res!64713 () Bool)

(declare-fun e!87663 () Bool)

(assert (=> d!41485 (=> res!64713 e!87663)))

(assert (=> d!41485 (= res!64713 (or ((_ is Nil!1732) (toList!869 e!86537)) ((_ is Nil!1732) (t!6198 (toList!869 e!86537)))))))

(assert (=> d!41485 (= (isStrictlySorted!317 (toList!869 e!86537)) e!87663)))

(declare-fun b!134593 () Bool)

(declare-fun e!87664 () Bool)

(assert (=> b!134593 (= e!87663 e!87664)))

(declare-fun res!64714 () Bool)

(assert (=> b!134593 (=> (not res!64714) (not e!87664))))

(assert (=> b!134593 (= res!64714 (bvslt (_1!1314 (h!2336 (toList!869 e!86537))) (_1!1314 (h!2336 (t!6198 (toList!869 e!86537))))))))

(declare-fun b!134594 () Bool)

(assert (=> b!134594 (= e!87664 (isStrictlySorted!317 (t!6198 (toList!869 e!86537))))))

(assert (= (and d!41485 (not res!64713)) b!134593))

(assert (= (and b!134593 res!64714) b!134594))

(declare-fun m!160133 () Bool)

(assert (=> b!134594 m!160133))

(assert (=> d!40827 d!41485))

(assert (=> d!40763 d!40497))

(assert (=> d!40763 d!40499))

(declare-fun d!41487 () Bool)

(assert (=> d!41487 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69227))))

(assert (=> d!41487 true))

(declare-fun _$12!401 () Unit!4150)

(assert (=> d!41487 (= (choose!831 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69227) _$12!401)))

(declare-fun bs!5632 () Bool)

(assert (= bs!5632 d!41487))

(assert (=> bs!5632 m!156801))

(assert (=> bs!5632 m!156801))

(assert (=> bs!5632 m!156803))

(assert (=> d!40763 d!41487))

(declare-fun d!41489 () Bool)

(declare-fun res!64715 () Bool)

(declare-fun e!87665 () Bool)

(assert (=> d!41489 (=> res!64715 e!87665)))

(assert (=> d!41489 (= res!64715 (or ((_ is Nil!1732) (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) ((_ is Nil!1732) (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))))

(assert (=> d!41489 (= (isStrictlySorted!317 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) e!87665)))

(declare-fun b!134595 () Bool)

(declare-fun e!87666 () Bool)

(assert (=> b!134595 (= e!87665 e!87666)))

(declare-fun res!64716 () Bool)

(assert (=> b!134595 (=> (not res!64716) (not e!87666))))

(assert (=> b!134595 (= res!64716 (bvslt (_1!1314 (h!2336 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) (_1!1314 (h!2336 (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))))

(declare-fun b!134596 () Bool)

(assert (=> b!134596 (= e!87666 (isStrictlySorted!317 (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(assert (= (and d!41489 (not res!64715)) b!134595))

(assert (= (and b!134595 res!64716) b!134596))

(declare-fun m!160135 () Bool)

(assert (=> b!134596 m!160135))

(assert (=> d!40763 d!41489))

(assert (=> b!133657 d!41109))

(assert (=> b!133657 d!41111))

(assert (=> b!133913 d!40871))

(assert (=> b!133913 d!40317))

(assert (=> b!133418 d!40473))

(declare-fun d!41491 () Bool)

(assert (=> d!41491 (= (isEmpty!415 (getValueByKey!171 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not ((_ is Some!176) (getValueByKey!171 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (=> d!40559 d!41491))

(declare-fun d!41493 () Bool)

(declare-fun c!25059 () Bool)

(assert (=> d!41493 (= c!25059 ((_ is Nil!1732) (toList!869 lt!69472)))))

(declare-fun e!87667 () (InoxSet tuple2!2608))

(assert (=> d!41493 (= (content!132 (toList!869 lt!69472)) e!87667)))

(declare-fun b!134597 () Bool)

(assert (=> b!134597 (= e!87667 ((as const (Array tuple2!2608 Bool)) false))))

(declare-fun b!134598 () Bool)

(assert (=> b!134598 (= e!87667 ((_ map or) (store ((as const (Array tuple2!2608 Bool)) false) (h!2336 (toList!869 lt!69472)) true) (content!132 (t!6198 (toList!869 lt!69472)))))))

(assert (= (and d!41493 c!25059) b!134597))

(assert (= (and d!41493 (not c!25059)) b!134598))

(declare-fun m!160137 () Bool)

(assert (=> b!134598 m!160137))

(declare-fun m!160139 () Bool)

(assert (=> b!134598 m!160139))

(assert (=> d!40605 d!41493))

(declare-fun d!41495 () Bool)

(assert (=> d!41495 (isDefined!125 (getValueByKey!171 (toList!869 (map!1405 (_2!1315 lt!69589))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun lt!70521 () Unit!4150)

(assert (=> d!41495 (= lt!70521 (choose!831 (toList!869 (map!1405 (_2!1315 lt!69589))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun e!87668 () Bool)

(assert (=> d!41495 e!87668))

(declare-fun res!64717 () Bool)

(assert (=> d!41495 (=> (not res!64717) (not e!87668))))

(assert (=> d!41495 (= res!64717 (isStrictlySorted!317 (toList!869 (map!1405 (_2!1315 lt!69589)))))))

(assert (=> d!41495 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (map!1405 (_2!1315 lt!69589))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) lt!70521)))

(declare-fun b!134599 () Bool)

(assert (=> b!134599 (= e!87668 (containsKey!175 (toList!869 (map!1405 (_2!1315 lt!69589))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!41495 res!64717) b!134599))

(assert (=> d!41495 m!156287))

(assert (=> d!41495 m!158735))

(assert (=> d!41495 m!158735))

(assert (=> d!41495 m!158737))

(assert (=> d!41495 m!156287))

(declare-fun m!160141 () Bool)

(assert (=> d!41495 m!160141))

(declare-fun m!160143 () Bool)

(assert (=> d!41495 m!160143))

(assert (=> b!134599 m!156287))

(assert (=> b!134599 m!158731))

(assert (=> b!133997 d!41495))

(declare-fun d!41497 () Bool)

(assert (=> d!41497 (= (isDefined!125 (getValueByKey!171 (toList!869 (map!1405 (_2!1315 lt!69589))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))) (not (isEmpty!415 (getValueByKey!171 (toList!869 (map!1405 (_2!1315 lt!69589))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun bs!5633 () Bool)

(assert (= bs!5633 d!41497))

(assert (=> bs!5633 m!158735))

(declare-fun m!160145 () Bool)

(assert (=> bs!5633 m!160145))

(assert (=> b!133997 d!41497))

(declare-fun b!134600 () Bool)

(declare-fun e!87669 () Option!177)

(assert (=> b!134600 (= e!87669 (Some!176 (_2!1314 (h!2336 (toList!869 (map!1405 (_2!1315 lt!69589)))))))))

(declare-fun b!134603 () Bool)

(declare-fun e!87670 () Option!177)

(assert (=> b!134603 (= e!87670 None!175)))

(declare-fun b!134602 () Bool)

(assert (=> b!134602 (= e!87670 (getValueByKey!171 (t!6198 (toList!869 (map!1405 (_2!1315 lt!69589)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!134601 () Bool)

(assert (=> b!134601 (= e!87669 e!87670)))

(declare-fun c!25061 () Bool)

(assert (=> b!134601 (= c!25061 (and ((_ is Cons!1731) (toList!869 (map!1405 (_2!1315 lt!69589)))) (not (= (_1!1314 (h!2336 (toList!869 (map!1405 (_2!1315 lt!69589))))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun c!25060 () Bool)

(declare-fun d!41499 () Bool)

(assert (=> d!41499 (= c!25060 (and ((_ is Cons!1731) (toList!869 (map!1405 (_2!1315 lt!69589)))) (= (_1!1314 (h!2336 (toList!869 (map!1405 (_2!1315 lt!69589))))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!41499 (= (getValueByKey!171 (toList!869 (map!1405 (_2!1315 lt!69589))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) e!87669)))

(assert (= (and d!41499 c!25060) b!134600))

(assert (= (and d!41499 (not c!25060)) b!134601))

(assert (= (and b!134601 c!25061) b!134602))

(assert (= (and b!134601 (not c!25061)) b!134603))

(assert (=> b!134602 m!156287))

(declare-fun m!160147 () Bool)

(assert (=> b!134602 m!160147))

(assert (=> b!133997 d!41499))

(declare-fun b!134604 () Bool)

(declare-fun e!87671 () Option!177)

(assert (=> b!134604 (= e!87671 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69813)))))))

(declare-fun b!134607 () Bool)

(declare-fun e!87672 () Option!177)

(assert (=> b!134607 (= e!87672 None!175)))

(declare-fun b!134606 () Bool)

(assert (=> b!134606 (= e!87672 (getValueByKey!171 (t!6198 (toList!869 lt!69813)) (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))))

(declare-fun b!134605 () Bool)

(assert (=> b!134605 (= e!87671 e!87672)))

(declare-fun c!25063 () Bool)

(assert (=> b!134605 (= c!25063 (and ((_ is Cons!1731) (toList!869 lt!69813)) (not (= (_1!1314 (h!2336 (toList!869 lt!69813))) (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))))))

(declare-fun d!41501 () Bool)

(declare-fun c!25062 () Bool)

(assert (=> d!41501 (= c!25062 (and ((_ is Cons!1731) (toList!869 lt!69813)) (= (_1!1314 (h!2336 (toList!869 lt!69813))) (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))))))))

(assert (=> d!41501 (= (getValueByKey!171 (toList!869 lt!69813) (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))) e!87671)))

(assert (= (and d!41501 c!25062) b!134604))

(assert (= (and d!41501 (not c!25062)) b!134605))

(assert (= (and b!134605 c!25063) b!134606))

(assert (= (and b!134605 (not c!25063)) b!134607))

(declare-fun m!160149 () Bool)

(assert (=> b!134606 m!160149))

(assert (=> b!133405 d!41501))

(declare-fun d!41503 () Bool)

(assert (=> d!41503 (= (get!1491 (getValueByKey!171 (toList!869 lt!69510) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))) (v!3201 (getValueByKey!171 (toList!869 lt!69510) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!40695 d!41503))

(assert (=> d!40695 d!40963))

(declare-fun d!41505 () Bool)

(assert (=> d!41505 (= (apply!116 lt!70136 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!70136) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5634 () Bool)

(assert (= bs!5634 d!41505))

(declare-fun m!160151 () Bool)

(assert (=> bs!5634 m!160151))

(assert (=> bs!5634 m!160151))

(declare-fun m!160153 () Bool)

(assert (=> bs!5634 m!160153))

(assert (=> b!133935 d!41505))

(declare-fun d!41507 () Bool)

(assert (=> d!41507 (= (inRange!0 (ite c!24838 (index!3300 lt!70066) (index!3303 lt!70066)) (mask!7165 newMap!16)) (and (bvsge (ite c!24838 (index!3300 lt!70066) (index!3303 lt!70066)) #b00000000000000000000000000000000) (bvslt (ite c!24838 (index!3300 lt!70066) (index!3303 lt!70066)) (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!14772 d!41507))

(declare-fun lt!70522 () Bool)

(declare-fun d!41509 () Bool)

(assert (=> d!41509 (= lt!70522 (select (content!131 (ite c!24638 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun e!87673 () Bool)

(assert (=> d!41509 (= lt!70522 e!87673)))

(declare-fun res!64718 () Bool)

(assert (=> d!41509 (=> (not res!64718) (not e!87673))))

(assert (=> d!41509 (= res!64718 ((_ is Cons!1732) (ite c!24638 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733))))))

(assert (=> d!41509 (= (contains!897 (ite c!24638 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) lt!70522)))

(declare-fun b!134608 () Bool)

(declare-fun e!87674 () Bool)

(assert (=> b!134608 (= e!87673 e!87674)))

(declare-fun res!64719 () Bool)

(assert (=> b!134608 (=> res!64719 e!87674)))

(assert (=> b!134608 (= res!64719 (= (h!2337 (ite c!24638 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134609 () Bool)

(assert (=> b!134609 (= e!87674 (contains!897 (t!6199 (ite c!24638 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!41509 res!64718) b!134608))

(assert (= (and b!134608 (not res!64719)) b!134609))

(declare-fun m!160155 () Bool)

(assert (=> d!41509 m!160155))

(assert (=> d!41509 m!157901))

(declare-fun m!160157 () Bool)

(assert (=> d!41509 m!160157))

(assert (=> b!134609 m!157901))

(declare-fun m!160159 () Bool)

(assert (=> b!134609 m!160159))

(assert (=> b!133868 d!41509))

(declare-fun d!41511 () Bool)

(assert (=> d!41511 (= (apply!116 lt!69767 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)) (get!1491 (getValueByKey!171 (toList!869 lt!69767) (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000))))))

(declare-fun bs!5635 () Bool)

(assert (= bs!5635 d!41511))

(assert (=> bs!5635 m!157397))

(declare-fun m!160161 () Bool)

(assert (=> bs!5635 m!160161))

(assert (=> bs!5635 m!160161))

(declare-fun m!160163 () Bool)

(assert (=> bs!5635 m!160163))

(assert (=> b!133343 d!41511))

(declare-fun d!41513 () Bool)

(declare-fun c!25064 () Bool)

(assert (=> d!41513 (= c!25064 ((_ is ValueCellFull!1095) (select (arr!2261 (_values!2848 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(declare-fun e!87675 () V!3483)

(assert (=> d!41513 (= (get!1488 (select (arr!2261 (_values!2848 (_2!1315 lt!69327))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 (_2!1315 lt!69327)) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87675)))

(declare-fun b!134610 () Bool)

(assert (=> b!134610 (= e!87675 (get!1489 (select (arr!2261 (_values!2848 (_2!1315 lt!69327))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 (_2!1315 lt!69327)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134611 () Bool)

(assert (=> b!134611 (= e!87675 (get!1490 (select (arr!2261 (_values!2848 (_2!1315 lt!69327))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 (_2!1315 lt!69327)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41513 c!25064) b!134610))

(assert (= (and d!41513 (not c!25064)) b!134611))

(assert (=> b!134610 m!157401))

(assert (=> b!134610 m!157403))

(declare-fun m!160165 () Bool)

(assert (=> b!134610 m!160165))

(assert (=> b!134611 m!157401))

(assert (=> b!134611 m!157403))

(declare-fun m!160167 () Bool)

(assert (=> b!134611 m!160167))

(assert (=> b!133343 d!41513))

(declare-fun d!41515 () Bool)

(declare-fun e!87676 () Bool)

(assert (=> d!41515 e!87676))

(declare-fun res!64720 () Bool)

(assert (=> d!41515 (=> res!64720 e!87676)))

(declare-fun lt!70523 () Bool)

(assert (=> d!41515 (= res!64720 (not lt!70523))))

(declare-fun lt!70525 () Bool)

(assert (=> d!41515 (= lt!70523 lt!70525)))

(declare-fun lt!70524 () Unit!4150)

(declare-fun e!87677 () Unit!4150)

(assert (=> d!41515 (= lt!70524 e!87677)))

(declare-fun c!25065 () Bool)

(assert (=> d!41515 (= c!25065 lt!70525)))

(assert (=> d!41515 (= lt!70525 (containsKey!175 (toList!869 lt!69703) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41515 (= (contains!896 lt!69703 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70523)))

(declare-fun b!134612 () Bool)

(declare-fun lt!70526 () Unit!4150)

(assert (=> b!134612 (= e!87677 lt!70526)))

(assert (=> b!134612 (= lt!70526 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69703) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134612 (isDefined!125 (getValueByKey!171 (toList!869 lt!69703) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134613 () Bool)

(declare-fun Unit!4230 () Unit!4150)

(assert (=> b!134613 (= e!87677 Unit!4230)))

(declare-fun b!134614 () Bool)

(assert (=> b!134614 (= e!87676 (isDefined!125 (getValueByKey!171 (toList!869 lt!69703) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41515 c!25065) b!134612))

(assert (= (and d!41515 (not c!25065)) b!134613))

(assert (= (and d!41515 (not res!64720)) b!134614))

(declare-fun m!160169 () Bool)

(assert (=> d!41515 m!160169))

(declare-fun m!160171 () Bool)

(assert (=> b!134612 m!160171))

(declare-fun m!160173 () Bool)

(assert (=> b!134612 m!160173))

(assert (=> b!134612 m!160173))

(declare-fun m!160175 () Bool)

(assert (=> b!134612 m!160175))

(assert (=> b!134614 m!160173))

(assert (=> b!134614 m!160173))

(assert (=> b!134614 m!160175))

(assert (=> bm!14706 d!41515))

(declare-fun d!41517 () Bool)

(declare-fun lt!70527 () Bool)

(assert (=> d!41517 (= lt!70527 (select (content!132 (toList!869 lt!69675)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!87679 () Bool)

(assert (=> d!41517 (= lt!70527 e!87679)))

(declare-fun res!64721 () Bool)

(assert (=> d!41517 (=> (not res!64721) (not e!87679))))

(assert (=> d!41517 (= res!64721 ((_ is Cons!1731) (toList!869 lt!69675)))))

(assert (=> d!41517 (= (contains!898 (toList!869 lt!69675) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70527)))

(declare-fun b!134615 () Bool)

(declare-fun e!87678 () Bool)

(assert (=> b!134615 (= e!87679 e!87678)))

(declare-fun res!64722 () Bool)

(assert (=> b!134615 (=> res!64722 e!87678)))

(assert (=> b!134615 (= res!64722 (= (h!2336 (toList!869 lt!69675)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134616 () Bool)

(assert (=> b!134616 (= e!87678 (contains!898 (t!6198 (toList!869 lt!69675)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41517 res!64721) b!134615))

(assert (= (and b!134615 (not res!64722)) b!134616))

(declare-fun m!160177 () Bool)

(assert (=> d!41517 m!160177))

(declare-fun m!160179 () Bool)

(assert (=> d!41517 m!160179))

(declare-fun m!160181 () Bool)

(assert (=> b!134616 m!160181))

(assert (=> b!133222 d!41517))

(declare-fun d!41519 () Bool)

(assert (=> d!41519 (= (get!1491 (getValueByKey!171 (toList!869 lt!69492) lt!69490)) (v!3201 (getValueByKey!171 (toList!869 lt!69492) lt!69490)))))

(assert (=> d!40567 d!41519))

(declare-fun b!134617 () Bool)

(declare-fun e!87680 () Option!177)

(assert (=> b!134617 (= e!87680 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69492)))))))

(declare-fun b!134620 () Bool)

(declare-fun e!87681 () Option!177)

(assert (=> b!134620 (= e!87681 None!175)))

(declare-fun b!134619 () Bool)

(assert (=> b!134619 (= e!87681 (getValueByKey!171 (t!6198 (toList!869 lt!69492)) lt!69490))))

(declare-fun b!134618 () Bool)

(assert (=> b!134618 (= e!87680 e!87681)))

(declare-fun c!25067 () Bool)

(assert (=> b!134618 (= c!25067 (and ((_ is Cons!1731) (toList!869 lt!69492)) (not (= (_1!1314 (h!2336 (toList!869 lt!69492))) lt!69490))))))

(declare-fun d!41521 () Bool)

(declare-fun c!25066 () Bool)

(assert (=> d!41521 (= c!25066 (and ((_ is Cons!1731) (toList!869 lt!69492)) (= (_1!1314 (h!2336 (toList!869 lt!69492))) lt!69490)))))

(assert (=> d!41521 (= (getValueByKey!171 (toList!869 lt!69492) lt!69490) e!87680)))

(assert (= (and d!41521 c!25066) b!134617))

(assert (= (and d!41521 (not c!25066)) b!134618))

(assert (= (and b!134618 c!25067) b!134619))

(assert (= (and b!134618 (not c!25067)) b!134620))

(declare-fun m!160183 () Bool)

(assert (=> b!134619 m!160183))

(assert (=> d!40567 d!41521))

(declare-fun d!41523 () Bool)

(declare-fun e!87682 () Bool)

(assert (=> d!41523 e!87682))

(declare-fun res!64723 () Bool)

(assert (=> d!41523 (=> res!64723 e!87682)))

(declare-fun lt!70528 () Bool)

(assert (=> d!41523 (= res!64723 (not lt!70528))))

(declare-fun lt!70530 () Bool)

(assert (=> d!41523 (= lt!70528 lt!70530)))

(declare-fun lt!70529 () Unit!4150)

(declare-fun e!87683 () Unit!4150)

(assert (=> d!41523 (= lt!70529 e!87683)))

(declare-fun c!25068 () Bool)

(assert (=> d!41523 (= c!25068 lt!70530)))

(assert (=> d!41523 (= lt!70530 (containsKey!175 (toList!869 lt!69737) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41523 (= (contains!896 lt!69737 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70528)))

(declare-fun b!134621 () Bool)

(declare-fun lt!70531 () Unit!4150)

(assert (=> b!134621 (= e!87683 lt!70531)))

(assert (=> b!134621 (= lt!70531 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69737) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134621 (isDefined!125 (getValueByKey!171 (toList!869 lt!69737) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134622 () Bool)

(declare-fun Unit!4231 () Unit!4150)

(assert (=> b!134622 (= e!87683 Unit!4231)))

(declare-fun b!134623 () Bool)

(assert (=> b!134623 (= e!87682 (isDefined!125 (getValueByKey!171 (toList!869 lt!69737) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41523 c!25068) b!134621))

(assert (= (and d!41523 (not c!25068)) b!134622))

(assert (= (and d!41523 (not res!64723)) b!134623))

(declare-fun m!160185 () Bool)

(assert (=> d!41523 m!160185))

(declare-fun m!160187 () Bool)

(assert (=> b!134621 m!160187))

(declare-fun m!160189 () Bool)

(assert (=> b!134621 m!160189))

(assert (=> b!134621 m!160189))

(declare-fun m!160191 () Bool)

(assert (=> b!134621 m!160191))

(assert (=> b!134623 m!160189))

(assert (=> b!134623 m!160189))

(assert (=> b!134623 m!160191))

(assert (=> bm!14713 d!41523))

(declare-fun d!41525 () Bool)

(assert (=> d!41525 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) lt!69494))))

(declare-fun lt!70532 () Unit!4150)

(assert (=> d!41525 (= lt!70532 (choose!831 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) lt!69494))))

(declare-fun e!87684 () Bool)

(assert (=> d!41525 e!87684))

(declare-fun res!64724 () Bool)

(assert (=> d!41525 (=> (not res!64724) (not e!87684))))

(assert (=> d!41525 (= res!64724 (isStrictlySorted!317 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))))))

(assert (=> d!41525 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) lt!69494) lt!70532)))

(declare-fun b!134624 () Bool)

(assert (=> b!134624 (= e!87684 (containsKey!175 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) lt!69494))))

(assert (= (and d!41525 res!64724) b!134624))

(assert (=> d!41525 m!157789))

(assert (=> d!41525 m!157789))

(assert (=> d!41525 m!157791))

(declare-fun m!160193 () Bool)

(assert (=> d!41525 m!160193))

(declare-fun m!160195 () Bool)

(assert (=> d!41525 m!160195))

(assert (=> b!134624 m!157785))

(assert (=> b!133496 d!41525))

(declare-fun d!41527 () Bool)

(assert (=> d!41527 (= (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) lt!69494)) (not (isEmpty!415 (getValueByKey!171 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) lt!69494))))))

(declare-fun bs!5636 () Bool)

(assert (= bs!5636 d!41527))

(assert (=> bs!5636 m!157789))

(declare-fun m!160197 () Bool)

(assert (=> bs!5636 m!160197))

(assert (=> b!133496 d!41527))

(declare-fun b!134625 () Bool)

(declare-fun e!87685 () Option!177)

(assert (=> b!134625 (= e!87685 (Some!176 (_2!1314 (h!2336 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))))))))

(declare-fun b!134628 () Bool)

(declare-fun e!87686 () Option!177)

(assert (=> b!134628 (= e!87686 None!175)))

(declare-fun b!134627 () Bool)

(assert (=> b!134627 (= e!87686 (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))) lt!69494))))

(declare-fun b!134626 () Bool)

(assert (=> b!134626 (= e!87685 e!87686)))

(declare-fun c!25070 () Bool)

(assert (=> b!134626 (= c!25070 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))) (not (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))) lt!69494))))))

(declare-fun c!25069 () Bool)

(declare-fun d!41529 () Bool)

(assert (=> d!41529 (= c!25069 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))) lt!69494)))))

(assert (=> d!41529 (= (getValueByKey!171 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) lt!69494) e!87685)))

(assert (= (and d!41529 c!25069) b!134625))

(assert (= (and d!41529 (not c!25069)) b!134626))

(assert (= (and b!134626 c!25070) b!134627))

(assert (= (and b!134626 (not c!25070)) b!134628))

(declare-fun m!160199 () Bool)

(assert (=> b!134627 m!160199))

(assert (=> b!133496 d!41529))

(declare-fun b!134629 () Bool)

(declare-fun e!87687 () Option!177)

(assert (=> b!134629 (= e!87687 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69834)))))))

(declare-fun b!134632 () Bool)

(declare-fun e!87688 () Option!177)

(assert (=> b!134632 (= e!87688 None!175)))

(declare-fun b!134631 () Bool)

(assert (=> b!134631 (= e!87688 (getValueByKey!171 (t!6198 (toList!869 lt!69834)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134630 () Bool)

(assert (=> b!134630 (= e!87687 e!87688)))

(declare-fun c!25072 () Bool)

(assert (=> b!134630 (= c!25072 (and ((_ is Cons!1731) (toList!869 lt!69834)) (not (= (_1!1314 (h!2336 (toList!869 lt!69834))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!41531 () Bool)

(declare-fun c!25071 () Bool)

(assert (=> d!41531 (= c!25071 (and ((_ is Cons!1731) (toList!869 lt!69834)) (= (_1!1314 (h!2336 (toList!869 lt!69834))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41531 (= (getValueByKey!171 (toList!869 lt!69834) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87687)))

(assert (= (and d!41531 c!25071) b!134629))

(assert (= (and d!41531 (not c!25071)) b!134630))

(assert (= (and b!134630 c!25072) b!134631))

(assert (= (and b!134630 (not c!25072)) b!134632))

(declare-fun m!160201 () Bool)

(assert (=> b!134631 m!160201))

(assert (=> b!133426 d!41531))

(declare-fun d!41533 () Bool)

(declare-fun e!87689 () Bool)

(assert (=> d!41533 e!87689))

(declare-fun res!64725 () Bool)

(assert (=> d!41533 (=> res!64725 e!87689)))

(declare-fun lt!70533 () Bool)

(assert (=> d!41533 (= res!64725 (not lt!70533))))

(declare-fun lt!70535 () Bool)

(assert (=> d!41533 (= lt!70533 lt!70535)))

(declare-fun lt!70534 () Unit!4150)

(declare-fun e!87690 () Unit!4150)

(assert (=> d!41533 (= lt!70534 e!87690)))

(declare-fun c!25073 () Bool)

(assert (=> d!41533 (= c!25073 lt!70535)))

(assert (=> d!41533 (= lt!70535 (containsKey!175 (toList!869 lt!69907) (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!41533 (= (contains!896 lt!69907 (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70533)))

(declare-fun b!134633 () Bool)

(declare-fun lt!70536 () Unit!4150)

(assert (=> b!134633 (= e!87690 lt!70536)))

(assert (=> b!134633 (= lt!70536 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69907) (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> b!134633 (isDefined!125 (getValueByKey!171 (toList!869 lt!69907) (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134634 () Bool)

(declare-fun Unit!4232 () Unit!4150)

(assert (=> b!134634 (= e!87690 Unit!4232)))

(declare-fun b!134635 () Bool)

(assert (=> b!134635 (= e!87689 (isDefined!125 (getValueByKey!171 (toList!869 lt!69907) (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (= (and d!41533 c!25073) b!134633))

(assert (= (and d!41533 (not c!25073)) b!134634))

(assert (= (and d!41533 (not res!64725)) b!134635))

(declare-fun m!160203 () Bool)

(assert (=> d!41533 m!160203))

(declare-fun m!160205 () Bool)

(assert (=> b!134633 m!160205))

(assert (=> b!134633 m!157809))

(assert (=> b!134633 m!157809))

(declare-fun m!160207 () Bool)

(assert (=> b!134633 m!160207))

(assert (=> b!134635 m!157809))

(assert (=> b!134635 m!157809))

(assert (=> b!134635 m!160207))

(assert (=> d!40585 d!41533))

(declare-fun b!134636 () Bool)

(declare-fun e!87691 () Option!177)

(assert (=> b!134636 (= e!87691 (Some!176 (_2!1314 (h!2336 lt!69909))))))

(declare-fun b!134639 () Bool)

(declare-fun e!87692 () Option!177)

(assert (=> b!134639 (= e!87692 None!175)))

(declare-fun b!134638 () Bool)

(assert (=> b!134638 (= e!87692 (getValueByKey!171 (t!6198 lt!69909) (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134637 () Bool)

(assert (=> b!134637 (= e!87691 e!87692)))

(declare-fun c!25075 () Bool)

(assert (=> b!134637 (= c!25075 (and ((_ is Cons!1731) lt!69909) (not (= (_1!1314 (h!2336 lt!69909)) (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun d!41535 () Bool)

(declare-fun c!25074 () Bool)

(assert (=> d!41535 (= c!25074 (and ((_ is Cons!1731) lt!69909) (= (_1!1314 (h!2336 lt!69909)) (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!41535 (= (getValueByKey!171 lt!69909 (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) e!87691)))

(assert (= (and d!41535 c!25074) b!134636))

(assert (= (and d!41535 (not c!25074)) b!134637))

(assert (= (and b!134637 c!25075) b!134638))

(assert (= (and b!134637 (not c!25075)) b!134639))

(declare-fun m!160209 () Bool)

(assert (=> b!134638 m!160209))

(assert (=> d!40585 d!41535))

(declare-fun d!41537 () Bool)

(assert (=> d!41537 (= (getValueByKey!171 lt!69909 (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun lt!70537 () Unit!4150)

(assert (=> d!41537 (= lt!70537 (choose!834 lt!69909 (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun e!87693 () Bool)

(assert (=> d!41537 e!87693))

(declare-fun res!64726 () Bool)

(assert (=> d!41537 (=> (not res!64726) (not e!87693))))

(assert (=> d!41537 (= res!64726 (isStrictlySorted!317 lt!69909))))

(assert (=> d!41537 (= (lemmaContainsTupThenGetReturnValue!88 lt!69909 (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70537)))

(declare-fun b!134640 () Bool)

(declare-fun res!64727 () Bool)

(assert (=> b!134640 (=> (not res!64727) (not e!87693))))

(assert (=> b!134640 (= res!64727 (containsKey!175 lt!69909 (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134641 () Bool)

(assert (=> b!134641 (= e!87693 (contains!898 lt!69909 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (= (and d!41537 res!64726) b!134640))

(assert (= (and b!134640 res!64727) b!134641))

(assert (=> d!41537 m!157803))

(declare-fun m!160211 () Bool)

(assert (=> d!41537 m!160211))

(declare-fun m!160213 () Bool)

(assert (=> d!41537 m!160213))

(declare-fun m!160215 () Bool)

(assert (=> b!134640 m!160215))

(declare-fun m!160217 () Bool)

(assert (=> b!134641 m!160217))

(assert (=> d!40585 d!41537))

(declare-fun bm!14827 () Bool)

(declare-fun call!14830 () List!1735)

(declare-fun call!14831 () List!1735)

(assert (=> bm!14827 (= call!14830 call!14831)))

(declare-fun lt!70538 () List!1735)

(declare-fun e!87696 () Bool)

(declare-fun b!134642 () Bool)

(assert (=> b!134642 (= e!87696 (contains!898 lt!70538 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!134643 () Bool)

(declare-fun e!87698 () List!1735)

(assert (=> b!134643 (= e!87698 call!14831)))

(declare-fun b!134644 () Bool)

(declare-fun res!64728 () Bool)

(assert (=> b!134644 (=> (not res!64728) (not e!87696))))

(assert (=> b!134644 (= res!64728 (containsKey!175 lt!70538 (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134645 () Bool)

(declare-fun e!87694 () List!1735)

(assert (=> b!134645 (= e!87694 (insertStrictlySorted!90 (t!6198 (toList!869 lt!69496)) (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134646 () Bool)

(declare-fun e!87695 () List!1735)

(assert (=> b!134646 (= e!87695 call!14830)))

(declare-fun bm!14828 () Bool)

(declare-fun call!14832 () List!1735)

(assert (=> bm!14828 (= call!14831 call!14832)))

(declare-fun c!25078 () Bool)

(declare-fun c!25076 () Bool)

(declare-fun b!134648 () Bool)

(assert (=> b!134648 (= e!87694 (ite c!25078 (t!6198 (toList!869 lt!69496)) (ite c!25076 (Cons!1731 (h!2336 (toList!869 lt!69496)) (t!6198 (toList!869 lt!69496))) Nil!1732)))))

(declare-fun b!134649 () Bool)

(declare-fun e!87697 () List!1735)

(assert (=> b!134649 (= e!87697 call!14832)))

(declare-fun b!134650 () Bool)

(assert (=> b!134650 (= c!25076 (and ((_ is Cons!1731) (toList!869 lt!69496)) (bvsgt (_1!1314 (h!2336 (toList!869 lt!69496))) (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> b!134650 (= e!87698 e!87695)))

(declare-fun d!41539 () Bool)

(assert (=> d!41539 e!87696))

(declare-fun res!64729 () Bool)

(assert (=> d!41539 (=> (not res!64729) (not e!87696))))

(assert (=> d!41539 (= res!64729 (isStrictlySorted!317 lt!70538))))

(assert (=> d!41539 (= lt!70538 e!87697)))

(declare-fun c!25077 () Bool)

(assert (=> d!41539 (= c!25077 (and ((_ is Cons!1731) (toList!869 lt!69496)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69496))) (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!41539 (isStrictlySorted!317 (toList!869 lt!69496))))

(assert (=> d!41539 (= (insertStrictlySorted!90 (toList!869 lt!69496) (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70538)))

(declare-fun b!134647 () Bool)

(assert (=> b!134647 (= e!87697 e!87698)))

(assert (=> b!134647 (= c!25078 (and ((_ is Cons!1731) (toList!869 lt!69496)) (= (_1!1314 (h!2336 (toList!869 lt!69496))) (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!134651 () Bool)

(assert (=> b!134651 (= e!87695 call!14830)))

(declare-fun bm!14829 () Bool)

(assert (=> bm!14829 (= call!14832 ($colon$colon!91 e!87694 (ite c!25077 (h!2336 (toList!869 lt!69496)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun c!25079 () Bool)

(assert (=> bm!14829 (= c!25079 c!25077)))

(assert (= (and d!41539 c!25077) b!134649))

(assert (= (and d!41539 (not c!25077)) b!134647))

(assert (= (and b!134647 c!25078) b!134643))

(assert (= (and b!134647 (not c!25078)) b!134650))

(assert (= (and b!134650 c!25076) b!134651))

(assert (= (and b!134650 (not c!25076)) b!134646))

(assert (= (or b!134651 b!134646) bm!14827))

(assert (= (or b!134643 bm!14827) bm!14828))

(assert (= (or b!134649 bm!14828) bm!14829))

(assert (= (and bm!14829 c!25079) b!134645))

(assert (= (and bm!14829 (not c!25079)) b!134648))

(assert (= (and d!41539 res!64729) b!134644))

(assert (= (and b!134644 res!64728) b!134642))

(declare-fun m!160219 () Bool)

(assert (=> b!134644 m!160219))

(declare-fun m!160221 () Bool)

(assert (=> b!134642 m!160221))

(declare-fun m!160223 () Bool)

(assert (=> d!41539 m!160223))

(declare-fun m!160225 () Bool)

(assert (=> d!41539 m!160225))

(declare-fun m!160227 () Bool)

(assert (=> bm!14829 m!160227))

(declare-fun m!160229 () Bool)

(assert (=> b!134645 m!160229))

(assert (=> d!40585 d!41539))

(declare-fun d!41541 () Bool)

(declare-fun res!64730 () Bool)

(declare-fun e!87699 () Bool)

(assert (=> d!41541 (=> res!64730 e!87699)))

(assert (=> d!41541 (= res!64730 (or ((_ is Nil!1732) lt!70073) ((_ is Nil!1732) (t!6198 lt!70073))))))

(assert (=> d!41541 (= (isStrictlySorted!317 lt!70073) e!87699)))

(declare-fun b!134652 () Bool)

(declare-fun e!87700 () Bool)

(assert (=> b!134652 (= e!87699 e!87700)))

(declare-fun res!64731 () Bool)

(assert (=> b!134652 (=> (not res!64731) (not e!87700))))

(assert (=> b!134652 (= res!64731 (bvslt (_1!1314 (h!2336 lt!70073)) (_1!1314 (h!2336 (t!6198 lt!70073)))))))

(declare-fun b!134653 () Bool)

(assert (=> b!134653 (= e!87700 (isStrictlySorted!317 (t!6198 lt!70073)))))

(assert (= (and d!41541 (not res!64730)) b!134652))

(assert (= (and b!134652 res!64731) b!134653))

(declare-fun m!160231 () Bool)

(assert (=> b!134653 m!160231))

(assert (=> d!40849 d!41541))

(declare-fun d!41543 () Bool)

(declare-fun res!64732 () Bool)

(declare-fun e!87701 () Bool)

(assert (=> d!41543 (=> res!64732 e!87701)))

(assert (=> d!41543 (= res!64732 (or ((_ is Nil!1732) (toList!869 lt!69225)) ((_ is Nil!1732) (t!6198 (toList!869 lt!69225)))))))

(assert (=> d!41543 (= (isStrictlySorted!317 (toList!869 lt!69225)) e!87701)))

(declare-fun b!134654 () Bool)

(declare-fun e!87702 () Bool)

(assert (=> b!134654 (= e!87701 e!87702)))

(declare-fun res!64733 () Bool)

(assert (=> b!134654 (=> (not res!64733) (not e!87702))))

(assert (=> b!134654 (= res!64733 (bvslt (_1!1314 (h!2336 (toList!869 lt!69225))) (_1!1314 (h!2336 (t!6198 (toList!869 lt!69225))))))))

(declare-fun b!134655 () Bool)

(assert (=> b!134655 (= e!87702 (isStrictlySorted!317 (t!6198 (toList!869 lt!69225))))))

(assert (= (and d!41543 (not res!64732)) b!134654))

(assert (= (and b!134654 res!64733) b!134655))

(assert (=> b!134655 m!159343))

(assert (=> d!40849 d!41543))

(assert (=> b!133488 d!40473))

(declare-fun d!41545 () Bool)

(assert (=> d!41545 (= (inRange!0 (index!3301 lt!70001) (mask!7165 newMap!16)) (and (bvsge (index!3301 lt!70001) #b00000000000000000000000000000000) (bvslt (index!3301 lt!70001) (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!133691 d!41545))

(assert (=> d!40611 d!40417))

(assert (=> d!40839 d!40613))

(assert (=> d!40839 d!40615))

(declare-fun d!41547 () Bool)

(assert (=> d!41547 (isDefined!125 (getValueByKey!171 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41547 true))

(declare-fun _$12!402 () Unit!4150)

(assert (=> d!41547 (= (choose!831 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000) _$12!402)))

(declare-fun bs!5637 () Bool)

(assert (= bs!5637 d!41547))

(assert (=> bs!5637 m!156719))

(assert (=> bs!5637 m!156719))

(assert (=> bs!5637 m!157057))

(assert (=> d!40839 d!41547))

(declare-fun d!41549 () Bool)

(declare-fun res!64734 () Bool)

(declare-fun e!87703 () Bool)

(assert (=> d!41549 (=> res!64734 e!87703)))

(assert (=> d!41549 (= res!64734 (or ((_ is Nil!1732) (toList!869 lt!69221)) ((_ is Nil!1732) (t!6198 (toList!869 lt!69221)))))))

(assert (=> d!41549 (= (isStrictlySorted!317 (toList!869 lt!69221)) e!87703)))

(declare-fun b!134656 () Bool)

(declare-fun e!87704 () Bool)

(assert (=> b!134656 (= e!87703 e!87704)))

(declare-fun res!64735 () Bool)

(assert (=> b!134656 (=> (not res!64735) (not e!87704))))

(assert (=> b!134656 (= res!64735 (bvslt (_1!1314 (h!2336 (toList!869 lt!69221))) (_1!1314 (h!2336 (t!6198 (toList!869 lt!69221))))))))

(declare-fun b!134657 () Bool)

(assert (=> b!134657 (= e!87704 (isStrictlySorted!317 (t!6198 (toList!869 lt!69221))))))

(assert (= (and d!41549 (not res!64734)) b!134656))

(assert (= (and b!134656 res!64735) b!134657))

(declare-fun m!160233 () Bool)

(assert (=> b!134657 m!160233))

(assert (=> d!40839 d!41549))

(declare-fun d!41551 () Bool)

(declare-fun lt!70539 () Bool)

(assert (=> d!41551 (= lt!70539 (select (content!132 lt!70073) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun e!87706 () Bool)

(assert (=> d!41551 (= lt!70539 e!87706)))

(declare-fun res!64736 () Bool)

(assert (=> d!41551 (=> (not res!64736) (not e!87706))))

(assert (=> d!41551 (= res!64736 ((_ is Cons!1731) lt!70073))))

(assert (=> d!41551 (= (contains!898 lt!70073 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!70539)))

(declare-fun b!134658 () Bool)

(declare-fun e!87705 () Bool)

(assert (=> b!134658 (= e!87706 e!87705)))

(declare-fun res!64737 () Bool)

(assert (=> b!134658 (=> res!64737 e!87705)))

(assert (=> b!134658 (= res!64737 (= (h!2336 lt!70073) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!134659 () Bool)

(assert (=> b!134659 (= e!87705 (contains!898 (t!6198 lt!70073) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!41551 res!64736) b!134658))

(assert (= (and b!134658 (not res!64737)) b!134659))

(declare-fun m!160235 () Bool)

(assert (=> d!41551 m!160235))

(declare-fun m!160237 () Bool)

(assert (=> d!41551 m!160237))

(declare-fun m!160239 () Bool)

(assert (=> b!134659 m!160239))

(assert (=> b!133839 d!41551))

(declare-fun d!41553 () Bool)

(assert (=> d!41553 (= (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69424 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))) lt!69423)) (v!3201 (getValueByKey!171 (toList!869 (+!170 lt!69424 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))) lt!69423)))))

(assert (=> d!40545 d!41553))

(declare-fun b!134660 () Bool)

(declare-fun e!87707 () Option!177)

(assert (=> b!134660 (= e!87707 (Some!176 (_2!1314 (h!2336 (toList!869 (+!170 lt!69424 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))))))))))

(declare-fun b!134663 () Bool)

(declare-fun e!87708 () Option!177)

(assert (=> b!134663 (= e!87708 None!175)))

(declare-fun b!134662 () Bool)

(assert (=> b!134662 (= e!87708 (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69424 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))))) lt!69423))))

(declare-fun b!134661 () Bool)

(assert (=> b!134661 (= e!87707 e!87708)))

(declare-fun c!25081 () Bool)

(assert (=> b!134661 (= c!25081 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69424 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))))) (not (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69424 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))) lt!69423))))))

(declare-fun d!41555 () Bool)

(declare-fun c!25080 () Bool)

(assert (=> d!41555 (= c!25080 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69424 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69424 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))) lt!69423)))))

(assert (=> d!41555 (= (getValueByKey!171 (toList!869 (+!170 lt!69424 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))) lt!69423) e!87707)))

(assert (= (and d!41555 c!25080) b!134660))

(assert (= (and d!41555 (not c!25080)) b!134661))

(assert (= (and b!134661 c!25081) b!134662))

(assert (= (and b!134661 (not c!25081)) b!134663))

(declare-fun m!160241 () Bool)

(assert (=> b!134662 m!160241))

(assert (=> d!40545 d!41555))

(declare-fun b!134664 () Bool)

(declare-fun e!87709 () Option!177)

(assert (=> b!134664 (= e!87709 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 lt!69230))))))))

(declare-fun b!134667 () Bool)

(declare-fun e!87710 () Option!177)

(assert (=> b!134667 (= e!87710 None!175)))

(declare-fun b!134666 () Bool)

(assert (=> b!134666 (= e!87710 (getValueByKey!171 (t!6198 (t!6198 (toList!869 lt!69230))) lt!69218))))

(declare-fun b!134665 () Bool)

(assert (=> b!134665 (= e!87709 e!87710)))

(declare-fun c!25083 () Bool)

(assert (=> b!134665 (= c!25083 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69230))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69230)))) lt!69218))))))

(declare-fun d!41557 () Bool)

(declare-fun c!25082 () Bool)

(assert (=> d!41557 (= c!25082 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69230))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69230)))) lt!69218)))))

(assert (=> d!41557 (= (getValueByKey!171 (t!6198 (toList!869 lt!69230)) lt!69218) e!87709)))

(assert (= (and d!41557 c!25082) b!134664))

(assert (= (and d!41557 (not c!25082)) b!134665))

(assert (= (and b!134665 c!25083) b!134666))

(assert (= (and b!134665 (not c!25083)) b!134667))

(declare-fun m!160243 () Bool)

(assert (=> b!134666 m!160243))

(assert (=> b!133974 d!41557))

(declare-fun d!41559 () Bool)

(assert (=> d!41559 (= (apply!116 lt!69767 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!69767) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5638 () Bool)

(assert (= bs!5638 d!41559))

(declare-fun m!160245 () Bool)

(assert (=> bs!5638 m!160245))

(assert (=> bs!5638 m!160245))

(declare-fun m!160247 () Bool)

(assert (=> bs!5638 m!160247))

(assert (=> b!133326 d!41559))

(declare-fun d!41561 () Bool)

(declare-fun res!64738 () Bool)

(declare-fun e!87711 () Bool)

(assert (=> d!41561 (=> res!64738 e!87711)))

(assert (=> d!41561 (= res!64738 (= (select (arr!2260 lt!69597) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!41561 (= (arrayContainsKey!0 lt!69597 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!87711)))

(declare-fun b!134668 () Bool)

(declare-fun e!87712 () Bool)

(assert (=> b!134668 (= e!87711 e!87712)))

(declare-fun res!64739 () Bool)

(assert (=> b!134668 (=> (not res!64739) (not e!87712))))

(assert (=> b!134668 (= res!64739 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 lt!69597)))))

(declare-fun b!134669 () Bool)

(assert (=> b!134669 (= e!87712 (arrayContainsKey!0 lt!69597 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!41561 (not res!64738)) b!134668))

(assert (= (and b!134668 res!64739) b!134669))

(declare-fun m!160249 () Bool)

(assert (=> d!41561 m!160249))

(assert (=> b!134669 m!156287))

(declare-fun m!160251 () Bool)

(assert (=> b!134669 m!160251))

(assert (=> b!133884 d!41561))

(declare-fun lt!70540 () Bool)

(declare-fun d!41563 () Bool)

(assert (=> d!41563 (= lt!70540 (select (content!132 (toList!869 lt!70050)) (tuple2!2609 lt!69521 (minValue!2720 newMap!16))))))

(declare-fun e!87714 () Bool)

(assert (=> d!41563 (= lt!70540 e!87714)))

(declare-fun res!64740 () Bool)

(assert (=> d!41563 (=> (not res!64740) (not e!87714))))

(assert (=> d!41563 (= res!64740 ((_ is Cons!1731) (toList!869 lt!70050)))))

(assert (=> d!41563 (= (contains!898 (toList!869 lt!70050) (tuple2!2609 lt!69521 (minValue!2720 newMap!16))) lt!70540)))

(declare-fun b!134670 () Bool)

(declare-fun e!87713 () Bool)

(assert (=> b!134670 (= e!87714 e!87713)))

(declare-fun res!64741 () Bool)

(assert (=> b!134670 (=> res!64741 e!87713)))

(assert (=> b!134670 (= res!64741 (= (h!2336 (toList!869 lt!70050)) (tuple2!2609 lt!69521 (minValue!2720 newMap!16))))))

(declare-fun b!134671 () Bool)

(assert (=> b!134671 (= e!87713 (contains!898 (t!6198 (toList!869 lt!70050)) (tuple2!2609 lt!69521 (minValue!2720 newMap!16))))))

(assert (= (and d!41563 res!64740) b!134670))

(assert (= (and b!134670 (not res!64741)) b!134671))

(declare-fun m!160253 () Bool)

(assert (=> d!41563 m!160253))

(declare-fun m!160255 () Bool)

(assert (=> d!41563 m!160255))

(declare-fun m!160257 () Bool)

(assert (=> b!134671 m!160257))

(assert (=> b!133766 d!41563))

(declare-fun d!41565 () Bool)

(declare-fun res!64742 () Bool)

(declare-fun e!87715 () Bool)

(assert (=> d!41565 (=> res!64742 e!87715)))

(assert (=> d!41565 (= res!64742 (and ((_ is Cons!1731) (toList!869 lt!69356)) (= (_1!1314 (h!2336 (toList!869 lt!69356))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41565 (= (containsKey!175 (toList!869 lt!69356) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87715)))

(declare-fun b!134672 () Bool)

(declare-fun e!87716 () Bool)

(assert (=> b!134672 (= e!87715 e!87716)))

(declare-fun res!64743 () Bool)

(assert (=> b!134672 (=> (not res!64743) (not e!87716))))

(assert (=> b!134672 (= res!64743 (and (or (not ((_ is Cons!1731) (toList!869 lt!69356))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69356))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1731) (toList!869 lt!69356)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69356))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134673 () Bool)

(assert (=> b!134673 (= e!87716 (containsKey!175 (t!6198 (toList!869 lt!69356)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!41565 (not res!64742)) b!134672))

(assert (= (and b!134672 res!64743) b!134673))

(declare-fun m!160259 () Bool)

(assert (=> b!134673 m!160259))

(assert (=> d!40687 d!41565))

(declare-fun d!41567 () Bool)

(declare-fun e!87717 () Bool)

(assert (=> d!41567 e!87717))

(declare-fun res!64744 () Bool)

(assert (=> d!41567 (=> res!64744 e!87717)))

(declare-fun lt!70541 () Bool)

(assert (=> d!41567 (= res!64744 (not lt!70541))))

(declare-fun lt!70543 () Bool)

(assert (=> d!41567 (= lt!70541 lt!70543)))

(declare-fun lt!70542 () Unit!4150)

(declare-fun e!87718 () Unit!4150)

(assert (=> d!41567 (= lt!70542 e!87718)))

(declare-fun c!25084 () Bool)

(assert (=> d!41567 (= c!25084 lt!70543)))

(assert (=> d!41567 (= lt!70543 (containsKey!175 (toList!869 lt!69492) lt!69490))))

(assert (=> d!41567 (= (contains!896 lt!69492 lt!69490) lt!70541)))

(declare-fun b!134674 () Bool)

(declare-fun lt!70544 () Unit!4150)

(assert (=> b!134674 (= e!87718 lt!70544)))

(assert (=> b!134674 (= lt!70544 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69492) lt!69490))))

(assert (=> b!134674 (isDefined!125 (getValueByKey!171 (toList!869 lt!69492) lt!69490))))

(declare-fun b!134675 () Bool)

(declare-fun Unit!4233 () Unit!4150)

(assert (=> b!134675 (= e!87718 Unit!4233)))

(declare-fun b!134676 () Bool)

(assert (=> b!134676 (= e!87717 (isDefined!125 (getValueByKey!171 (toList!869 lt!69492) lt!69490)))))

(assert (= (and d!41567 c!25084) b!134674))

(assert (= (and d!41567 (not c!25084)) b!134675))

(assert (= (and d!41567 (not res!64744)) b!134676))

(declare-fun m!160261 () Bool)

(assert (=> d!41567 m!160261))

(declare-fun m!160263 () Bool)

(assert (=> b!134674 m!160263))

(assert (=> b!134674 m!157745))

(assert (=> b!134674 m!157745))

(declare-fun m!160265 () Bool)

(assert (=> b!134674 m!160265))

(assert (=> b!134676 m!157745))

(assert (=> b!134676 m!157745))

(assert (=> b!134676 m!160265))

(assert (=> d!40581 d!41567))

(declare-fun d!41569 () Bool)

(assert (=> d!41569 (= (apply!116 (+!170 lt!69492 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))) lt!69490) (apply!116 lt!69492 lt!69490))))

(assert (=> d!41569 true))

(declare-fun _$34!982 () Unit!4150)

(assert (=> d!41569 (= (choose!828 lt!69492 lt!69503 (zeroValue!2720 newMap!16) lt!69490) _$34!982)))

(declare-fun bs!5639 () Bool)

(assert (= bs!5639 d!41569))

(assert (=> bs!5639 m!156855))

(assert (=> bs!5639 m!156855))

(assert (=> bs!5639 m!156873))

(assert (=> bs!5639 m!156885))

(assert (=> d!40581 d!41569))

(assert (=> d!40581 d!40567))

(assert (=> d!40581 d!40571))

(assert (=> d!40581 d!40591))

(declare-fun b!134677 () Bool)

(declare-fun lt!70545 () Unit!4150)

(declare-fun lt!70549 () Unit!4150)

(assert (=> b!134677 (= lt!70545 lt!70549)))

(declare-fun lt!70550 () (_ BitVec 64))

(declare-fun lt!70547 () (_ BitVec 64))

(declare-fun lt!70548 () V!3483)

(declare-fun lt!70546 () ListLongMap!1707)

(assert (=> b!134677 (not (contains!896 (+!170 lt!70546 (tuple2!2609 lt!70550 lt!70548)) lt!70547))))

(assert (=> b!134677 (= lt!70549 (addStillNotContains!63 lt!70546 lt!70550 lt!70548 lt!70547))))

(assert (=> b!134677 (= lt!70547 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134677 (= lt!70548 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134677 (= lt!70550 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!14833 () ListLongMap!1707)

(assert (=> b!134677 (= lt!70546 call!14833)))

(declare-fun e!87725 () ListLongMap!1707)

(assert (=> b!134677 (= e!87725 (+!170 call!14833 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!87722 () Bool)

(declare-fun lt!70551 () ListLongMap!1707)

(declare-fun b!134678 () Bool)

(assert (=> b!134678 (= e!87722 (= lt!70551 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (_values!2848 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992))) (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) (minValue!2720 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!134679 () Bool)

(assert (=> b!134679 (= e!87722 (isEmpty!414 lt!70551))))

(declare-fun b!134680 () Bool)

(declare-fun e!87723 () ListLongMap!1707)

(assert (=> b!134680 (= e!87723 (ListLongMap!1708 Nil!1732))))

(declare-fun b!134681 () Bool)

(declare-fun e!87720 () Bool)

(declare-fun e!87721 () Bool)

(assert (=> b!134681 (= e!87720 e!87721)))

(declare-fun c!25088 () Bool)

(declare-fun e!87724 () Bool)

(assert (=> b!134681 (= c!25088 e!87724)))

(declare-fun res!64748 () Bool)

(assert (=> b!134681 (=> (not res!64748) (not e!87724))))

(assert (=> b!134681 (= res!64748 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!134682 () Bool)

(assert (=> b!134682 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> b!134682 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_values!2848 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun e!87719 () Bool)

(assert (=> b!134682 (= e!87719 (= (apply!116 lt!70551 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134684 () Bool)

(assert (=> b!134684 (= e!87721 e!87719)))

(assert (=> b!134684 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun res!64747 () Bool)

(assert (=> b!134684 (= res!64747 (contains!896 lt!70551 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!134684 (=> (not res!64747) (not e!87719))))

(declare-fun b!134685 () Bool)

(assert (=> b!134685 (= e!87723 e!87725)))

(declare-fun c!25085 () Bool)

(assert (=> b!134685 (= c!25085 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134686 () Bool)

(declare-fun res!64746 () Bool)

(assert (=> b!134686 (=> (not res!64746) (not e!87720))))

(assert (=> b!134686 (= res!64746 (not (contains!896 lt!70551 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134687 () Bool)

(assert (=> b!134687 (= e!87721 e!87722)))

(declare-fun c!25087 () Bool)

(assert (=> b!134687 (= c!25087 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun bm!14830 () Bool)

(assert (=> bm!14830 (= call!14833 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (_values!2848 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992))) (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) (minValue!2720 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun b!134688 () Bool)

(assert (=> b!134688 (= e!87724 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!134688 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!134683 () Bool)

(assert (=> b!134683 (= e!87725 call!14833)))

(declare-fun d!41571 () Bool)

(assert (=> d!41571 e!87720))

(declare-fun res!64745 () Bool)

(assert (=> d!41571 (=> (not res!64745) (not e!87720))))

(assert (=> d!41571 (= res!64745 (not (contains!896 lt!70551 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41571 (= lt!70551 e!87723)))

(declare-fun c!25086 () Bool)

(assert (=> d!41571 (= c!25086 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!41571 (validMask!0 (mask!7165 (v!3197 (underlying!454 thiss!992))))))

(assert (=> d!41571 (= (getCurrentListMapNoExtraKeys!137 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (_values!2848 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992))) (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) (zeroValue!2720 (v!3197 (underlying!454 thiss!992))) (minValue!2720 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992)))) lt!70551)))

(assert (= (and d!41571 c!25086) b!134680))

(assert (= (and d!41571 (not c!25086)) b!134685))

(assert (= (and b!134685 c!25085) b!134677))

(assert (= (and b!134685 (not c!25085)) b!134683))

(assert (= (or b!134677 b!134683) bm!14830))

(assert (= (and d!41571 res!64745) b!134686))

(assert (= (and b!134686 res!64746) b!134681))

(assert (= (and b!134681 res!64748) b!134688))

(assert (= (and b!134681 c!25088) b!134684))

(assert (= (and b!134681 (not c!25088)) b!134687))

(assert (= (and b!134684 res!64747) b!134682))

(assert (= (and b!134687 c!25087) b!134678))

(assert (= (and b!134687 (not c!25087)) b!134679))

(declare-fun b_lambda!6051 () Bool)

(assert (=> (not b_lambda!6051) (not b!134677)))

(assert (=> b!134677 t!6195))

(declare-fun b_and!8397 () Bool)

(assert (= b_and!8393 (and (=> t!6195 result!3995) b_and!8397)))

(assert (=> b!134677 t!6197))

(declare-fun b_and!8399 () Bool)

(assert (= b_and!8395 (and (=> t!6197 result!3999) b_and!8399)))

(declare-fun b_lambda!6053 () Bool)

(assert (=> (not b_lambda!6053) (not b!134682)))

(assert (=> b!134682 t!6195))

(declare-fun b_and!8401 () Bool)

(assert (= b_and!8397 (and (=> t!6195 result!3995) b_and!8401)))

(assert (=> b!134682 t!6197))

(declare-fun b_and!8403 () Bool)

(assert (= b_and!8399 (and (=> t!6197 result!3999) b_and!8403)))

(declare-fun m!160267 () Bool)

(assert (=> d!41571 m!160267))

(assert (=> d!41571 m!156295))

(declare-fun m!160269 () Bool)

(assert (=> b!134678 m!160269))

(declare-fun m!160271 () Bool)

(assert (=> b!134677 m!160271))

(declare-fun m!160273 () Bool)

(assert (=> b!134677 m!160273))

(assert (=> b!134677 m!160271))

(assert (=> b!134677 m!156283))

(declare-fun m!160275 () Bool)

(assert (=> b!134677 m!160275))

(assert (=> b!134677 m!156283))

(declare-fun m!160277 () Bool)

(assert (=> b!134677 m!160277))

(declare-fun m!160279 () Bool)

(assert (=> b!134677 m!160279))

(assert (=> b!134677 m!160275))

(declare-fun m!160281 () Bool)

(assert (=> b!134677 m!160281))

(declare-fun m!160283 () Bool)

(assert (=> b!134677 m!160283))

(assert (=> b!134682 m!160281))

(declare-fun m!160285 () Bool)

(assert (=> b!134682 m!160285))

(assert (=> b!134682 m!156283))

(assert (=> b!134682 m!160281))

(assert (=> b!134682 m!160275))

(assert (=> b!134682 m!156283))

(assert (=> b!134682 m!160277))

(assert (=> b!134682 m!160275))

(assert (=> bm!14830 m!160269))

(assert (=> b!134685 m!160281))

(assert (=> b!134685 m!160281))

(declare-fun m!160287 () Bool)

(assert (=> b!134685 m!160287))

(declare-fun m!160289 () Bool)

(assert (=> b!134686 m!160289))

(assert (=> b!134684 m!160281))

(assert (=> b!134684 m!160281))

(declare-fun m!160291 () Bool)

(assert (=> b!134684 m!160291))

(assert (=> b!134688 m!160281))

(assert (=> b!134688 m!160281))

(assert (=> b!134688 m!160287))

(declare-fun m!160293 () Bool)

(assert (=> b!134679 m!160293))

(assert (=> bm!14756 d!41571))

(declare-fun b!134689 () Bool)

(declare-fun e!87726 () Option!177)

(assert (=> b!134689 (= e!87726 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69860)))))))

(declare-fun b!134692 () Bool)

(declare-fun e!87727 () Option!177)

(assert (=> b!134692 (= e!87727 None!175)))

(declare-fun b!134691 () Bool)

(assert (=> b!134691 (= e!87727 (getValueByKey!171 (t!6198 (toList!869 lt!69860)) (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134690 () Bool)

(assert (=> b!134690 (= e!87726 e!87727)))

(declare-fun c!25090 () Bool)

(assert (=> b!134690 (= c!25090 (and ((_ is Cons!1731) (toList!869 lt!69860)) (not (= (_1!1314 (h!2336 (toList!869 lt!69860))) (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!41573 () Bool)

(declare-fun c!25089 () Bool)

(assert (=> d!41573 (= c!25089 (and ((_ is Cons!1731) (toList!869 lt!69860)) (= (_1!1314 (h!2336 (toList!869 lt!69860))) (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41573 (= (getValueByKey!171 (toList!869 lt!69860) (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87726)))

(assert (= (and d!41573 c!25089) b!134689))

(assert (= (and d!41573 (not c!25089)) b!134690))

(assert (= (and b!134690 c!25090) b!134691))

(assert (= (and b!134690 (not c!25090)) b!134692))

(declare-fun m!160295 () Bool)

(assert (=> b!134691 m!160295))

(assert (=> b!133449 d!41573))

(declare-fun d!41575 () Bool)

(assert (=> d!41575 (isDefined!125 (getValueByKey!171 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(declare-fun lt!70552 () Unit!4150)

(assert (=> d!41575 (= lt!70552 (choose!831 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(declare-fun e!87728 () Bool)

(assert (=> d!41575 e!87728))

(declare-fun res!64749 () Bool)

(assert (=> d!41575 (=> (not res!64749) (not e!87728))))

(assert (=> d!41575 (= res!64749 (isStrictlySorted!317 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))))

(assert (=> d!41575 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))) lt!70552)))

(declare-fun b!134693 () Bool)

(assert (=> b!134693 (= e!87728 (containsKey!175 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(assert (= (and d!41575 res!64749) b!134693))

(assert (=> d!41575 m!156425))

(assert (=> d!41575 m!157213))

(assert (=> d!41575 m!157213))

(assert (=> d!41575 m!157215))

(assert (=> d!41575 m!156425))

(declare-fun m!160297 () Bool)

(assert (=> d!41575 m!160297))

(declare-fun m!160299 () Bool)

(assert (=> d!41575 m!160299))

(assert (=> b!134693 m!156425))

(assert (=> b!134693 m!157209))

(assert (=> b!133244 d!41575))

(declare-fun d!41577 () Bool)

(assert (=> d!41577 (= (isDefined!125 (getValueByKey!171 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))) (not (isEmpty!415 (getValueByKey!171 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))))

(declare-fun bs!5640 () Bool)

(assert (= bs!5640 d!41577))

(assert (=> bs!5640 m!157213))

(declare-fun m!160301 () Bool)

(assert (=> bs!5640 m!160301))

(assert (=> b!133244 d!41577))

(declare-fun b!134694 () Bool)

(declare-fun e!87729 () Option!177)

(assert (=> b!134694 (= e!87729 (Some!176 (_2!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))))))

(declare-fun b!134697 () Bool)

(declare-fun e!87730 () Option!177)

(assert (=> b!134697 (= e!87730 None!175)))

(declare-fun b!134696 () Bool)

(assert (=> b!134696 (= e!87730 (getValueByKey!171 (t!6198 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(declare-fun b!134695 () Bool)

(assert (=> b!134695 (= e!87729 e!87730)))

(declare-fun c!25092 () Bool)

(assert (=> b!134695 (= c!25092 (and ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (not (= (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))))

(declare-fun c!25091 () Bool)

(declare-fun d!41579 () Bool)

(assert (=> d!41579 (= c!25091 (and ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (= (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))))))

(assert (=> d!41579 (= (getValueByKey!171 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))) e!87729)))

(assert (= (and d!41579 c!25091) b!134694))

(assert (= (and d!41579 (not c!25091)) b!134695))

(assert (= (and b!134695 c!25092) b!134696))

(assert (= (and b!134695 (not c!25092)) b!134697))

(assert (=> b!134696 m!156425))

(declare-fun m!160303 () Bool)

(assert (=> b!134696 m!160303))

(assert (=> b!133244 d!41579))

(declare-fun lt!70553 () Bool)

(declare-fun d!41581 () Bool)

(assert (=> d!41581 (= lt!70553 (select (content!132 (toList!869 lt!69804)) (tuple2!2609 lt!69427 (minValue!2720 newMap!16))))))

(declare-fun e!87732 () Bool)

(assert (=> d!41581 (= lt!70553 e!87732)))

(declare-fun res!64750 () Bool)

(assert (=> d!41581 (=> (not res!64750) (not e!87732))))

(assert (=> d!41581 (= res!64750 ((_ is Cons!1731) (toList!869 lt!69804)))))

(assert (=> d!41581 (= (contains!898 (toList!869 lt!69804) (tuple2!2609 lt!69427 (minValue!2720 newMap!16))) lt!70553)))

(declare-fun b!134698 () Bool)

(declare-fun e!87731 () Bool)

(assert (=> b!134698 (= e!87732 e!87731)))

(declare-fun res!64751 () Bool)

(assert (=> b!134698 (=> res!64751 e!87731)))

(assert (=> b!134698 (= res!64751 (= (h!2336 (toList!869 lt!69804)) (tuple2!2609 lt!69427 (minValue!2720 newMap!16))))))

(declare-fun b!134699 () Bool)

(assert (=> b!134699 (= e!87731 (contains!898 (t!6198 (toList!869 lt!69804)) (tuple2!2609 lt!69427 (minValue!2720 newMap!16))))))

(assert (= (and d!41581 res!64750) b!134698))

(assert (= (and b!134698 (not res!64751)) b!134699))

(declare-fun m!160305 () Bool)

(assert (=> d!41581 m!160305))

(declare-fun m!160307 () Bool)

(assert (=> d!41581 m!160307))

(declare-fun m!160309 () Bool)

(assert (=> b!134699 m!160309))

(assert (=> b!133401 d!41581))

(assert (=> d!40931 d!40393))

(assert (=> d!40931 d!40395))

(declare-fun d!41583 () Bool)

(declare-fun lt!70554 () Bool)

(assert (=> d!41583 (= lt!70554 (select (content!132 (toList!869 lt!70040)) (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))

(declare-fun e!87734 () Bool)

(assert (=> d!41583 (= lt!70554 e!87734)))

(declare-fun res!64752 () Bool)

(assert (=> d!41583 (=> (not res!64752) (not e!87734))))

(assert (=> d!41583 (= res!64752 ((_ is Cons!1731) (toList!869 lt!70040)))))

(assert (=> d!41583 (= (contains!898 (toList!869 lt!70040) (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!70554)))

(declare-fun b!134700 () Bool)

(declare-fun e!87733 () Bool)

(assert (=> b!134700 (= e!87734 e!87733)))

(declare-fun res!64753 () Bool)

(assert (=> b!134700 (=> res!64753 e!87733)))

(assert (=> b!134700 (= res!64753 (= (h!2336 (toList!869 lt!70040)) (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))

(declare-fun b!134701 () Bool)

(assert (=> b!134701 (= e!87733 (contains!898 (t!6198 (toList!869 lt!70040)) (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))

(assert (= (and d!41583 res!64752) b!134700))

(assert (= (and b!134700 (not res!64753)) b!134701))

(declare-fun m!160311 () Bool)

(assert (=> d!41583 m!160311))

(declare-fun m!160313 () Bool)

(assert (=> d!41583 m!160313))

(declare-fun m!160315 () Bool)

(assert (=> b!134701 m!160315))

(assert (=> b!133760 d!41583))

(declare-fun d!41585 () Bool)

(declare-fun e!87735 () Bool)

(assert (=> d!41585 e!87735))

(declare-fun res!64754 () Bool)

(assert (=> d!41585 (=> res!64754 e!87735)))

(declare-fun lt!70555 () Bool)

(assert (=> d!41585 (= res!64754 (not lt!70555))))

(declare-fun lt!70557 () Bool)

(assert (=> d!41585 (= lt!70555 lt!70557)))

(declare-fun lt!70556 () Unit!4150)

(declare-fun e!87736 () Unit!4150)

(assert (=> d!41585 (= lt!70556 e!87736)))

(declare-fun c!25093 () Bool)

(assert (=> d!41585 (= c!25093 lt!70557)))

(assert (=> d!41585 (= lt!70557 (containsKey!175 (toList!869 lt!69724) (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!41585 (= (contains!896 lt!69724 (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) lt!70555)))

(declare-fun b!134702 () Bool)

(declare-fun lt!70558 () Unit!4150)

(assert (=> b!134702 (= e!87736 lt!70558)))

(assert (=> b!134702 (= lt!70558 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69724) (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> b!134702 (isDefined!125 (getValueByKey!171 (toList!869 lt!69724) (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!134703 () Bool)

(declare-fun Unit!4234 () Unit!4150)

(assert (=> b!134703 (= e!87736 Unit!4234)))

(declare-fun b!134704 () Bool)

(assert (=> b!134704 (= e!87735 (isDefined!125 (getValueByKey!171 (toList!869 lt!69724) (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(assert (= (and d!41585 c!25093) b!134702))

(assert (= (and d!41585 (not c!25093)) b!134703))

(assert (= (and d!41585 (not res!64754)) b!134704))

(declare-fun m!160317 () Bool)

(assert (=> d!41585 m!160317))

(declare-fun m!160319 () Bool)

(assert (=> b!134702 m!160319))

(assert (=> b!134702 m!157289))

(assert (=> b!134702 m!157289))

(declare-fun m!160321 () Bool)

(assert (=> b!134702 m!160321))

(assert (=> b!134704 m!157289))

(assert (=> b!134704 m!157289))

(assert (=> b!134704 m!160321))

(assert (=> d!40477 d!41585))

(declare-fun b!134705 () Bool)

(declare-fun e!87737 () Option!177)

(assert (=> b!134705 (= e!87737 (Some!176 (_2!1314 (h!2336 lt!69726))))))

(declare-fun b!134708 () Bool)

(declare-fun e!87738 () Option!177)

(assert (=> b!134708 (= e!87738 None!175)))

(declare-fun b!134707 () Bool)

(assert (=> b!134707 (= e!87738 (getValueByKey!171 (t!6198 lt!69726) (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!134706 () Bool)

(assert (=> b!134706 (= e!87737 e!87738)))

(declare-fun c!25095 () Bool)

(assert (=> b!134706 (= c!25095 (and ((_ is Cons!1731) lt!69726) (not (= (_1!1314 (h!2336 lt!69726)) (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))))

(declare-fun d!41587 () Bool)

(declare-fun c!25094 () Bool)

(assert (=> d!41587 (= c!25094 (and ((_ is Cons!1731) lt!69726) (= (_1!1314 (h!2336 lt!69726)) (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(assert (=> d!41587 (= (getValueByKey!171 lt!69726 (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) e!87737)))

(assert (= (and d!41587 c!25094) b!134705))

(assert (= (and d!41587 (not c!25094)) b!134706))

(assert (= (and b!134706 c!25095) b!134707))

(assert (= (and b!134706 (not c!25095)) b!134708))

(declare-fun m!160323 () Bool)

(assert (=> b!134707 m!160323))

(assert (=> d!40477 d!41587))

(declare-fun d!41589 () Bool)

(assert (=> d!41589 (= (getValueByKey!171 lt!69726 (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) (Some!176 (_2!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun lt!70559 () Unit!4150)

(assert (=> d!41589 (= lt!70559 (choose!834 lt!69726 (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (_2!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun e!87739 () Bool)

(assert (=> d!41589 e!87739))

(declare-fun res!64755 () Bool)

(assert (=> d!41589 (=> (not res!64755) (not e!87739))))

(assert (=> d!41589 (= res!64755 (isStrictlySorted!317 lt!69726))))

(assert (=> d!41589 (= (lemmaContainsTupThenGetReturnValue!88 lt!69726 (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (_2!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) lt!70559)))

(declare-fun b!134709 () Bool)

(declare-fun res!64756 () Bool)

(assert (=> b!134709 (=> (not res!64756) (not e!87739))))

(assert (=> b!134709 (= res!64756 (containsKey!175 lt!69726 (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!134710 () Bool)

(assert (=> b!134710 (= e!87739 (contains!898 lt!69726 (tuple2!2609 (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (_2!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(assert (= (and d!41589 res!64755) b!134709))

(assert (= (and b!134709 res!64756) b!134710))

(assert (=> d!41589 m!157283))

(declare-fun m!160325 () Bool)

(assert (=> d!41589 m!160325))

(declare-fun m!160327 () Bool)

(assert (=> d!41589 m!160327))

(declare-fun m!160329 () Bool)

(assert (=> b!134709 m!160329))

(declare-fun m!160331 () Bool)

(assert (=> b!134710 m!160331))

(assert (=> d!40477 d!41589))

(declare-fun bm!14831 () Bool)

(declare-fun call!14834 () List!1735)

(declare-fun call!14835 () List!1735)

(assert (=> bm!14831 (= call!14834 call!14835)))

(declare-fun e!87742 () Bool)

(declare-fun lt!70560 () List!1735)

(declare-fun b!134711 () Bool)

(assert (=> b!134711 (= e!87742 (contains!898 lt!70560 (tuple2!2609 (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (_2!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun b!134712 () Bool)

(declare-fun e!87744 () List!1735)

(assert (=> b!134712 (= e!87744 call!14835)))

(declare-fun b!134713 () Bool)

(declare-fun res!64757 () Bool)

(assert (=> b!134713 (=> (not res!64757) (not e!87742))))

(assert (=> b!134713 (= res!64757 (containsKey!175 lt!70560 (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!134714 () Bool)

(declare-fun e!87740 () List!1735)

(assert (=> b!134714 (= e!87740 (insertStrictlySorted!90 (t!6198 (toList!869 (ite c!24605 call!14674 (ite c!24608 call!14670 call!14675)))) (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (_2!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!134715 () Bool)

(declare-fun e!87741 () List!1735)

(assert (=> b!134715 (= e!87741 call!14834)))

(declare-fun bm!14832 () Bool)

(declare-fun call!14836 () List!1735)

(assert (=> bm!14832 (= call!14835 call!14836)))

(declare-fun c!25098 () Bool)

(declare-fun b!134717 () Bool)

(declare-fun c!25096 () Bool)

(assert (=> b!134717 (= e!87740 (ite c!25098 (t!6198 (toList!869 (ite c!24605 call!14674 (ite c!24608 call!14670 call!14675)))) (ite c!25096 (Cons!1731 (h!2336 (toList!869 (ite c!24605 call!14674 (ite c!24608 call!14670 call!14675)))) (t!6198 (toList!869 (ite c!24605 call!14674 (ite c!24608 call!14670 call!14675))))) Nil!1732)))))

(declare-fun b!134718 () Bool)

(declare-fun e!87743 () List!1735)

(assert (=> b!134718 (= e!87743 call!14836)))

(declare-fun b!134719 () Bool)

(assert (=> b!134719 (= c!25096 (and ((_ is Cons!1731) (toList!869 (ite c!24605 call!14674 (ite c!24608 call!14670 call!14675)))) (bvsgt (_1!1314 (h!2336 (toList!869 (ite c!24605 call!14674 (ite c!24608 call!14670 call!14675))))) (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(assert (=> b!134719 (= e!87744 e!87741)))

(declare-fun d!41591 () Bool)

(assert (=> d!41591 e!87742))

(declare-fun res!64758 () Bool)

(assert (=> d!41591 (=> (not res!64758) (not e!87742))))

(assert (=> d!41591 (= res!64758 (isStrictlySorted!317 lt!70560))))

(assert (=> d!41591 (= lt!70560 e!87743)))

(declare-fun c!25097 () Bool)

(assert (=> d!41591 (= c!25097 (and ((_ is Cons!1731) (toList!869 (ite c!24605 call!14674 (ite c!24608 call!14670 call!14675)))) (bvslt (_1!1314 (h!2336 (toList!869 (ite c!24605 call!14674 (ite c!24608 call!14670 call!14675))))) (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(assert (=> d!41591 (isStrictlySorted!317 (toList!869 (ite c!24605 call!14674 (ite c!24608 call!14670 call!14675))))))

(assert (=> d!41591 (= (insertStrictlySorted!90 (toList!869 (ite c!24605 call!14674 (ite c!24608 call!14670 call!14675))) (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (_2!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) lt!70560)))

(declare-fun b!134716 () Bool)

(assert (=> b!134716 (= e!87743 e!87744)))

(assert (=> b!134716 (= c!25098 (and ((_ is Cons!1731) (toList!869 (ite c!24605 call!14674 (ite c!24608 call!14670 call!14675)))) (= (_1!1314 (h!2336 (toList!869 (ite c!24605 call!14674 (ite c!24608 call!14670 call!14675))))) (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun b!134720 () Bool)

(assert (=> b!134720 (= e!87741 call!14834)))

(declare-fun bm!14833 () Bool)

(assert (=> bm!14833 (= call!14836 ($colon$colon!91 e!87740 (ite c!25097 (h!2336 (toList!869 (ite c!24605 call!14674 (ite c!24608 call!14670 call!14675)))) (tuple2!2609 (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (_2!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))))

(declare-fun c!25099 () Bool)

(assert (=> bm!14833 (= c!25099 c!25097)))

(assert (= (and d!41591 c!25097) b!134718))

(assert (= (and d!41591 (not c!25097)) b!134716))

(assert (= (and b!134716 c!25098) b!134712))

(assert (= (and b!134716 (not c!25098)) b!134719))

(assert (= (and b!134719 c!25096) b!134720))

(assert (= (and b!134719 (not c!25096)) b!134715))

(assert (= (or b!134720 b!134715) bm!14831))

(assert (= (or b!134712 bm!14831) bm!14832))

(assert (= (or b!134718 bm!14832) bm!14833))

(assert (= (and bm!14833 c!25099) b!134714))

(assert (= (and bm!14833 (not c!25099)) b!134717))

(assert (= (and d!41591 res!64758) b!134713))

(assert (= (and b!134713 res!64757) b!134711))

(declare-fun m!160333 () Bool)

(assert (=> b!134713 m!160333))

(declare-fun m!160335 () Bool)

(assert (=> b!134711 m!160335))

(declare-fun m!160337 () Bool)

(assert (=> d!41591 m!160337))

(declare-fun m!160339 () Bool)

(assert (=> d!41591 m!160339))

(declare-fun m!160341 () Bool)

(assert (=> bm!14833 m!160341))

(declare-fun m!160343 () Bool)

(assert (=> b!134714 m!160343))

(assert (=> d!40477 d!41591))

(assert (=> b!133877 d!41389))

(declare-fun bm!14834 () Bool)

(declare-fun call!14837 () List!1735)

(declare-fun call!14838 () List!1735)

(assert (=> bm!14834 (= call!14837 call!14838)))

(declare-fun e!87747 () Bool)

(declare-fun b!134721 () Bool)

(declare-fun lt!70561 () List!1735)

(assert (=> b!134721 (= e!87747 (contains!898 lt!70561 (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134722 () Bool)

(declare-fun e!87749 () List!1735)

(assert (=> b!134722 (= e!87749 call!14838)))

(declare-fun b!134723 () Bool)

(declare-fun res!64759 () Bool)

(assert (=> b!134723 (=> (not res!64759) (not e!87747))))

(assert (=> b!134723 (= res!64759 (containsKey!175 lt!70561 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87745 () List!1735)

(declare-fun b!134724 () Bool)

(assert (=> b!134724 (= e!87745 (insertStrictlySorted!90 (t!6198 (t!6198 (toList!869 call!14636))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134725 () Bool)

(declare-fun e!87746 () List!1735)

(assert (=> b!134725 (= e!87746 call!14837)))

(declare-fun bm!14835 () Bool)

(declare-fun call!14839 () List!1735)

(assert (=> bm!14835 (= call!14838 call!14839)))

(declare-fun c!25102 () Bool)

(declare-fun b!134727 () Bool)

(declare-fun c!25100 () Bool)

(assert (=> b!134727 (= e!87745 (ite c!25102 (t!6198 (t!6198 (toList!869 call!14636))) (ite c!25100 (Cons!1731 (h!2336 (t!6198 (toList!869 call!14636))) (t!6198 (t!6198 (toList!869 call!14636)))) Nil!1732)))))

(declare-fun b!134728 () Bool)

(declare-fun e!87748 () List!1735)

(assert (=> b!134728 (= e!87748 call!14839)))

(declare-fun b!134729 () Bool)

(assert (=> b!134729 (= c!25100 (and ((_ is Cons!1731) (t!6198 (toList!869 call!14636))) (bvsgt (_1!1314 (h!2336 (t!6198 (toList!869 call!14636)))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!134729 (= e!87749 e!87746)))

(declare-fun d!41593 () Bool)

(assert (=> d!41593 e!87747))

(declare-fun res!64760 () Bool)

(assert (=> d!41593 (=> (not res!64760) (not e!87747))))

(assert (=> d!41593 (= res!64760 (isStrictlySorted!317 lt!70561))))

(assert (=> d!41593 (= lt!70561 e!87748)))

(declare-fun c!25101 () Bool)

(assert (=> d!41593 (= c!25101 (and ((_ is Cons!1731) (t!6198 (toList!869 call!14636))) (bvslt (_1!1314 (h!2336 (t!6198 (toList!869 call!14636)))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41593 (isStrictlySorted!317 (t!6198 (toList!869 call!14636)))))

(assert (=> d!41593 (= (insertStrictlySorted!90 (t!6198 (toList!869 call!14636)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70561)))

(declare-fun b!134726 () Bool)

(assert (=> b!134726 (= e!87748 e!87749)))

(assert (=> b!134726 (= c!25102 (and ((_ is Cons!1731) (t!6198 (toList!869 call!14636))) (= (_1!1314 (h!2336 (t!6198 (toList!869 call!14636)))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134730 () Bool)

(assert (=> b!134730 (= e!87746 call!14837)))

(declare-fun bm!14836 () Bool)

(assert (=> bm!14836 (= call!14839 ($colon$colon!91 e!87745 (ite c!25101 (h!2336 (t!6198 (toList!869 call!14636))) (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25103 () Bool)

(assert (=> bm!14836 (= c!25103 c!25101)))

(assert (= (and d!41593 c!25101) b!134728))

(assert (= (and d!41593 (not c!25101)) b!134726))

(assert (= (and b!134726 c!25102) b!134722))

(assert (= (and b!134726 (not c!25102)) b!134729))

(assert (= (and b!134729 c!25100) b!134730))

(assert (= (and b!134729 (not c!25100)) b!134725))

(assert (= (or b!134730 b!134725) bm!14834))

(assert (= (or b!134722 bm!14834) bm!14835))

(assert (= (or b!134728 bm!14835) bm!14836))

(assert (= (and bm!14836 c!25103) b!134724))

(assert (= (and bm!14836 (not c!25103)) b!134727))

(assert (= (and d!41593 res!64760) b!134723))

(assert (= (and b!134723 res!64759) b!134721))

(declare-fun m!160345 () Bool)

(assert (=> b!134723 m!160345))

(declare-fun m!160347 () Bool)

(assert (=> b!134721 m!160347))

(declare-fun m!160349 () Bool)

(assert (=> d!41593 m!160349))

(declare-fun m!160351 () Bool)

(assert (=> d!41593 m!160351))

(declare-fun m!160353 () Bool)

(assert (=> bm!14836 m!160353))

(declare-fun m!160355 () Bool)

(assert (=> b!134724 m!160355))

(assert (=> b!133621 d!41593))

(declare-fun d!41595 () Bool)

(declare-fun lt!70562 () Bool)

(assert (=> d!41595 (= lt!70562 (select (content!132 lt!69655) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun e!87751 () Bool)

(assert (=> d!41595 (= lt!70562 e!87751)))

(declare-fun res!64761 () Bool)

(assert (=> d!41595 (=> (not res!64761) (not e!87751))))

(assert (=> d!41595 (= res!64761 ((_ is Cons!1731) lt!69655))))

(assert (=> d!41595 (= (contains!898 lt!69655 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!70562)))

(declare-fun b!134731 () Bool)

(declare-fun e!87750 () Bool)

(assert (=> b!134731 (= e!87751 e!87750)))

(declare-fun res!64762 () Bool)

(assert (=> b!134731 (=> res!64762 e!87750)))

(assert (=> b!134731 (= res!64762 (= (h!2336 lt!69655) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!134732 () Bool)

(assert (=> b!134732 (= e!87750 (contains!898 (t!6198 lt!69655) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!41595 res!64761) b!134731))

(assert (= (and b!134731 (not res!64762)) b!134732))

(declare-fun m!160357 () Bool)

(assert (=> d!41595 m!160357))

(declare-fun m!160359 () Bool)

(assert (=> d!41595 m!160359))

(declare-fun m!160361 () Bool)

(assert (=> b!134732 m!160361))

(assert (=> b!133198 d!41595))

(declare-fun b!134733 () Bool)

(declare-fun e!87754 () Bool)

(declare-fun e!87755 () Bool)

(assert (=> b!134733 (= e!87754 e!87755)))

(declare-fun c!25104 () Bool)

(assert (=> b!134733 (= c!25104 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134734 () Bool)

(declare-fun call!14840 () Bool)

(assert (=> b!134734 (= e!87755 call!14840)))

(declare-fun b!134735 () Bool)

(declare-fun e!87752 () Bool)

(assert (=> b!134735 (= e!87752 (contains!897 (ite c!24686 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24562 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24562 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!14837 () Bool)

(assert (=> bm!14837 (= call!14840 (arrayNoDuplicates!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!25104 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24686 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24562 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24562 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1733) Nil!1733))) (ite c!24686 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24562 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24562 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1733) Nil!1733)))))))

(declare-fun d!41597 () Bool)

(declare-fun res!64765 () Bool)

(declare-fun e!87753 () Bool)

(assert (=> d!41597 (=> res!64765 e!87753)))

(assert (=> d!41597 (= res!64765 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!41597 (= (arrayNoDuplicates!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24686 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24562 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24562 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1733) Nil!1733))) e!87753)))

(declare-fun b!134736 () Bool)

(assert (=> b!134736 (= e!87755 call!14840)))

(declare-fun b!134737 () Bool)

(assert (=> b!134737 (= e!87753 e!87754)))

(declare-fun res!64763 () Bool)

(assert (=> b!134737 (=> (not res!64763) (not e!87754))))

(assert (=> b!134737 (= res!64763 (not e!87752))))

(declare-fun res!64764 () Bool)

(assert (=> b!134737 (=> (not res!64764) (not e!87752))))

(assert (=> b!134737 (= res!64764 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!41597 (not res!64765)) b!134737))

(assert (= (and b!134737 res!64764) b!134735))

(assert (= (and b!134737 res!64763) b!134733))

(assert (= (and b!134733 c!25104) b!134736))

(assert (= (and b!134733 (not c!25104)) b!134734))

(assert (= (or b!134736 b!134734) bm!14837))

(assert (=> b!134733 m!159393))

(assert (=> b!134733 m!159393))

(assert (=> b!134733 m!159395))

(assert (=> b!134735 m!159393))

(assert (=> b!134735 m!159393))

(declare-fun m!160363 () Bool)

(assert (=> b!134735 m!160363))

(assert (=> bm!14837 m!159393))

(declare-fun m!160365 () Bool)

(assert (=> bm!14837 m!160365))

(assert (=> b!134737 m!159393))

(assert (=> b!134737 m!159393))

(assert (=> b!134737 m!159395))

(assert (=> bm!14720 d!41597))

(declare-fun d!41599 () Bool)

(declare-fun lt!70563 () Bool)

(assert (=> d!41599 (= lt!70563 (select (content!131 (t!6199 (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!87756 () Bool)

(assert (=> d!41599 (= lt!70563 e!87756)))

(declare-fun res!64766 () Bool)

(assert (=> d!41599 (=> (not res!64766) (not e!87756))))

(assert (=> d!41599 (= res!64766 ((_ is Cons!1732) (t!6199 (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733))))))

(assert (=> d!41599 (= (contains!897 (t!6199 (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) lt!70563)))

(declare-fun b!134738 () Bool)

(declare-fun e!87757 () Bool)

(assert (=> b!134738 (= e!87756 e!87757)))

(declare-fun res!64767 () Bool)

(assert (=> b!134738 (=> res!64767 e!87757)))

(assert (=> b!134738 (= res!64767 (= (h!2337 (t!6199 (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!134739 () Bool)

(assert (=> b!134739 (= e!87757 (contains!897 (t!6199 (t!6199 (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!41599 res!64766) b!134738))

(assert (= (and b!134738 (not res!64767)) b!134739))

(declare-fun m!160367 () Bool)

(assert (=> d!41599 m!160367))

(assert (=> d!41599 m!156593))

(declare-fun m!160369 () Bool)

(assert (=> d!41599 m!160369))

(assert (=> b!134739 m!156593))

(declare-fun m!160371 () Bool)

(assert (=> b!134739 m!160371))

(assert (=> b!133239 d!41599))

(declare-fun d!41601 () Bool)

(assert (=> d!41601 (isDefined!125 (getValueByKey!171 (toList!869 lt!69510) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70564 () Unit!4150)

(assert (=> d!41601 (= lt!70564 (choose!831 (toList!869 lt!69510) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87758 () Bool)

(assert (=> d!41601 e!87758))

(declare-fun res!64768 () Bool)

(assert (=> d!41601 (=> (not res!64768) (not e!87758))))

(assert (=> d!41601 (= res!64768 (isStrictlySorted!317 (toList!869 lt!69510)))))

(assert (=> d!41601 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69510) #b1000000000000000000000000000000000000000000000000000000000000000) lt!70564)))

(declare-fun b!134740 () Bool)

(assert (=> b!134740 (= e!87758 (containsKey!175 (toList!869 lt!69510) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41601 res!64768) b!134740))

(assert (=> d!41601 m!157123))

(assert (=> d!41601 m!157123))

(assert (=> d!41601 m!157125))

(declare-fun m!160373 () Bool)

(assert (=> d!41601 m!160373))

(declare-fun m!160375 () Bool)

(assert (=> d!41601 m!160375))

(assert (=> b!134740 m!157119))

(assert (=> b!133208 d!41601))

(declare-fun d!41603 () Bool)

(assert (=> d!41603 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69510) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69510) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5641 () Bool)

(assert (= bs!5641 d!41603))

(assert (=> bs!5641 m!157123))

(declare-fun m!160377 () Bool)

(assert (=> bs!5641 m!160377))

(assert (=> b!133208 d!41603))

(declare-fun b!134741 () Bool)

(declare-fun e!87759 () Option!177)

(assert (=> b!134741 (= e!87759 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69510)))))))

(declare-fun b!134744 () Bool)

(declare-fun e!87760 () Option!177)

(assert (=> b!134744 (= e!87760 None!175)))

(declare-fun b!134743 () Bool)

(assert (=> b!134743 (= e!87760 (getValueByKey!171 (t!6198 (toList!869 lt!69510)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134742 () Bool)

(assert (=> b!134742 (= e!87759 e!87760)))

(declare-fun c!25106 () Bool)

(assert (=> b!134742 (= c!25106 (and ((_ is Cons!1731) (toList!869 lt!69510)) (not (= (_1!1314 (h!2336 (toList!869 lt!69510))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!41605 () Bool)

(declare-fun c!25105 () Bool)

(assert (=> d!41605 (= c!25105 (and ((_ is Cons!1731) (toList!869 lt!69510)) (= (_1!1314 (h!2336 (toList!869 lt!69510))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41605 (= (getValueByKey!171 (toList!869 lt!69510) #b1000000000000000000000000000000000000000000000000000000000000000) e!87759)))

(assert (= (and d!41605 c!25105) b!134741))

(assert (= (and d!41605 (not c!25105)) b!134742))

(assert (= (and b!134742 c!25106) b!134743))

(assert (= (and b!134742 (not c!25106)) b!134744))

(declare-fun m!160379 () Bool)

(assert (=> b!134743 m!160379))

(assert (=> b!133208 d!41605))

(declare-fun d!41607 () Bool)

(declare-fun e!87761 () Bool)

(assert (=> d!41607 e!87761))

(declare-fun res!64769 () Bool)

(assert (=> d!41607 (=> res!64769 e!87761)))

(declare-fun lt!70565 () Bool)

(assert (=> d!41607 (= res!64769 (not lt!70565))))

(declare-fun lt!70567 () Bool)

(assert (=> d!41607 (= lt!70565 lt!70567)))

(declare-fun lt!70566 () Unit!4150)

(declare-fun e!87762 () Unit!4150)

(assert (=> d!41607 (= lt!70566 e!87762)))

(declare-fun c!25107 () Bool)

(assert (=> d!41607 (= c!25107 lt!70567)))

(assert (=> d!41607 (= lt!70567 (containsKey!175 (toList!869 lt!69936) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!41607 (= (contains!896 lt!69936 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70565)))

(declare-fun b!134745 () Bool)

(declare-fun lt!70568 () Unit!4150)

(assert (=> b!134745 (= e!87762 lt!70568)))

(assert (=> b!134745 (= lt!70568 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69936) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> b!134745 (isDefined!125 (getValueByKey!171 (toList!869 lt!69936) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134746 () Bool)

(declare-fun Unit!4235 () Unit!4150)

(assert (=> b!134746 (= e!87762 Unit!4235)))

(declare-fun b!134747 () Bool)

(assert (=> b!134747 (= e!87761 (isDefined!125 (getValueByKey!171 (toList!869 lt!69936) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (= (and d!41607 c!25107) b!134745))

(assert (= (and d!41607 (not c!25107)) b!134746))

(assert (= (and d!41607 (not res!64769)) b!134747))

(declare-fun m!160381 () Bool)

(assert (=> d!41607 m!160381))

(declare-fun m!160383 () Bool)

(assert (=> b!134745 m!160383))

(assert (=> b!134745 m!157941))

(assert (=> b!134745 m!157941))

(declare-fun m!160385 () Bool)

(assert (=> b!134745 m!160385))

(assert (=> b!134747 m!157941))

(assert (=> b!134747 m!157941))

(assert (=> b!134747 m!160385))

(assert (=> d!40645 d!41607))

(declare-fun b!134748 () Bool)

(declare-fun e!87763 () Option!177)

(assert (=> b!134748 (= e!87763 (Some!176 (_2!1314 (h!2336 lt!69938))))))

(declare-fun b!134751 () Bool)

(declare-fun e!87764 () Option!177)

(assert (=> b!134751 (= e!87764 None!175)))

(declare-fun b!134750 () Bool)

(assert (=> b!134750 (= e!87764 (getValueByKey!171 (t!6198 lt!69938) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134749 () Bool)

(assert (=> b!134749 (= e!87763 e!87764)))

(declare-fun c!25109 () Bool)

(assert (=> b!134749 (= c!25109 (and ((_ is Cons!1731) lt!69938) (not (= (_1!1314 (h!2336 lt!69938)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun d!41609 () Bool)

(declare-fun c!25108 () Bool)

(assert (=> d!41609 (= c!25108 (and ((_ is Cons!1731) lt!69938) (= (_1!1314 (h!2336 lt!69938)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!41609 (= (getValueByKey!171 lt!69938 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) e!87763)))

(assert (= (and d!41609 c!25108) b!134748))

(assert (= (and d!41609 (not c!25108)) b!134749))

(assert (= (and b!134749 c!25109) b!134750))

(assert (= (and b!134749 (not c!25109)) b!134751))

(declare-fun m!160387 () Bool)

(assert (=> b!134750 m!160387))

(assert (=> d!40645 d!41609))

(declare-fun d!41611 () Bool)

(assert (=> d!41611 (= (getValueByKey!171 lt!69938 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun lt!70569 () Unit!4150)

(assert (=> d!41611 (= lt!70569 (choose!834 lt!69938 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun e!87765 () Bool)

(assert (=> d!41611 e!87765))

(declare-fun res!64770 () Bool)

(assert (=> d!41611 (=> (not res!64770) (not e!87765))))

(assert (=> d!41611 (= res!64770 (isStrictlySorted!317 lt!69938))))

(assert (=> d!41611 (= (lemmaContainsTupThenGetReturnValue!88 lt!69938 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70569)))

(declare-fun b!134752 () Bool)

(declare-fun res!64771 () Bool)

(assert (=> b!134752 (=> (not res!64771) (not e!87765))))

(assert (=> b!134752 (= res!64771 (containsKey!175 lt!69938 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134753 () Bool)

(assert (=> b!134753 (= e!87765 (contains!898 lt!69938 (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (= (and d!41611 res!64770) b!134752))

(assert (= (and b!134752 res!64771) b!134753))

(assert (=> d!41611 m!157935))

(declare-fun m!160389 () Bool)

(assert (=> d!41611 m!160389))

(declare-fun m!160391 () Bool)

(assert (=> d!41611 m!160391))

(declare-fun m!160393 () Bool)

(assert (=> b!134752 m!160393))

(declare-fun m!160395 () Bool)

(assert (=> b!134753 m!160395))

(assert (=> d!40645 d!41611))

(declare-fun bm!14838 () Bool)

(declare-fun call!14841 () List!1735)

(declare-fun call!14842 () List!1735)

(assert (=> bm!14838 (= call!14841 call!14842)))

(declare-fun b!134754 () Bool)

(declare-fun e!87768 () Bool)

(declare-fun lt!70570 () List!1735)

(assert (=> b!134754 (= e!87768 (contains!898 lt!70570 (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134755 () Bool)

(declare-fun e!87770 () List!1735)

(assert (=> b!134755 (= e!87770 call!14842)))

(declare-fun b!134756 () Bool)

(declare-fun res!64772 () Bool)

(assert (=> b!134756 (=> (not res!64772) (not e!87768))))

(assert (=> b!134756 (= res!64772 (containsKey!175 lt!70570 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134757 () Bool)

(declare-fun e!87766 () List!1735)

(assert (=> b!134757 (= e!87766 (insertStrictlySorted!90 (t!6198 (toList!869 call!14679)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134758 () Bool)

(declare-fun e!87767 () List!1735)

(assert (=> b!134758 (= e!87767 call!14841)))

(declare-fun bm!14839 () Bool)

(declare-fun call!14843 () List!1735)

(assert (=> bm!14839 (= call!14842 call!14843)))

(declare-fun c!25112 () Bool)

(declare-fun c!25110 () Bool)

(declare-fun b!134760 () Bool)

(assert (=> b!134760 (= e!87766 (ite c!25112 (t!6198 (toList!869 call!14679)) (ite c!25110 (Cons!1731 (h!2336 (toList!869 call!14679)) (t!6198 (toList!869 call!14679))) Nil!1732)))))

(declare-fun b!134761 () Bool)

(declare-fun e!87769 () List!1735)

(assert (=> b!134761 (= e!87769 call!14843)))

(declare-fun b!134762 () Bool)

(assert (=> b!134762 (= c!25110 (and ((_ is Cons!1731) (toList!869 call!14679)) (bvsgt (_1!1314 (h!2336 (toList!869 call!14679))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> b!134762 (= e!87770 e!87767)))

(declare-fun d!41613 () Bool)

(assert (=> d!41613 e!87768))

(declare-fun res!64773 () Bool)

(assert (=> d!41613 (=> (not res!64773) (not e!87768))))

(assert (=> d!41613 (= res!64773 (isStrictlySorted!317 lt!70570))))

(assert (=> d!41613 (= lt!70570 e!87769)))

(declare-fun c!25111 () Bool)

(assert (=> d!41613 (= c!25111 (and ((_ is Cons!1731) (toList!869 call!14679)) (bvslt (_1!1314 (h!2336 (toList!869 call!14679))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!41613 (isStrictlySorted!317 (toList!869 call!14679))))

(assert (=> d!41613 (= (insertStrictlySorted!90 (toList!869 call!14679) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70570)))

(declare-fun b!134759 () Bool)

(assert (=> b!134759 (= e!87769 e!87770)))

(assert (=> b!134759 (= c!25112 (and ((_ is Cons!1731) (toList!869 call!14679)) (= (_1!1314 (h!2336 (toList!869 call!14679))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134763 () Bool)

(assert (=> b!134763 (= e!87767 call!14841)))

(declare-fun bm!14840 () Bool)

(assert (=> bm!14840 (= call!14843 ($colon$colon!91 e!87766 (ite c!25111 (h!2336 (toList!869 call!14679)) (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun c!25113 () Bool)

(assert (=> bm!14840 (= c!25113 c!25111)))

(assert (= (and d!41613 c!25111) b!134761))

(assert (= (and d!41613 (not c!25111)) b!134759))

(assert (= (and b!134759 c!25112) b!134755))

(assert (= (and b!134759 (not c!25112)) b!134762))

(assert (= (and b!134762 c!25110) b!134763))

(assert (= (and b!134762 (not c!25110)) b!134758))

(assert (= (or b!134763 b!134758) bm!14838))

(assert (= (or b!134755 bm!14838) bm!14839))

(assert (= (or b!134761 bm!14839) bm!14840))

(assert (= (and bm!14840 c!25113) b!134757))

(assert (= (and bm!14840 (not c!25113)) b!134760))

(assert (= (and d!41613 res!64773) b!134756))

(assert (= (and b!134756 res!64772) b!134754))

(declare-fun m!160397 () Bool)

(assert (=> b!134756 m!160397))

(declare-fun m!160399 () Bool)

(assert (=> b!134754 m!160399))

(declare-fun m!160401 () Bool)

(assert (=> d!41613 m!160401))

(declare-fun m!160403 () Bool)

(assert (=> d!41613 m!160403))

(declare-fun m!160405 () Bool)

(assert (=> bm!14840 m!160405))

(declare-fun m!160407 () Bool)

(assert (=> b!134757 m!160407))

(assert (=> d!40645 d!41613))

(declare-fun d!41615 () Bool)

(declare-fun res!64774 () Bool)

(declare-fun e!87771 () Bool)

(assert (=> d!41615 (=> res!64774 e!87771)))

(assert (=> d!41615 (= res!64774 (and ((_ is Cons!1731) (t!6198 (toList!869 e!86545))) (= (_1!1314 (h!2336 (t!6198 (toList!869 e!86545)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!41615 (= (containsKey!175 (t!6198 (toList!869 e!86545)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) e!87771)))

(declare-fun b!134764 () Bool)

(declare-fun e!87772 () Bool)

(assert (=> b!134764 (= e!87771 e!87772)))

(declare-fun res!64775 () Bool)

(assert (=> b!134764 (=> (not res!64775) (not e!87772))))

(assert (=> b!134764 (= res!64775 (and (or (not ((_ is Cons!1731) (t!6198 (toList!869 e!86545)))) (bvsle (_1!1314 (h!2336 (t!6198 (toList!869 e!86545)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))) ((_ is Cons!1731) (t!6198 (toList!869 e!86545))) (bvslt (_1!1314 (h!2336 (t!6198 (toList!869 e!86545)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(declare-fun b!134765 () Bool)

(assert (=> b!134765 (= e!87772 (containsKey!175 (t!6198 (t!6198 (toList!869 e!86545))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!41615 (not res!64774)) b!134764))

(assert (= (and b!134764 res!64775) b!134765))

(assert (=> b!134765 m!156287))

(declare-fun m!160409 () Bool)

(assert (=> b!134765 m!160409))

(assert (=> b!133752 d!41615))

(declare-fun d!41617 () Bool)

(assert (=> d!41617 (= ($colon$colon!91 e!87162 (ite c!24827 (h!2336 (toList!869 e!86537)) (tuple2!2609 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))) (Cons!1731 (ite c!24827 (h!2336 (toList!869 e!86537)) (tuple2!2609 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) e!87162))))

(assert (=> bm!14766 d!41617))

(assert (=> b!133885 d!40965))

(declare-fun d!41619 () Bool)

(assert (=> d!41619 (contains!896 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2260 lt!69595) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))))))

(assert (=> d!41619 true))

(declare-fun _$16!152 () Unit!4150)

(assert (=> d!41619 (= (choose!832 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (defaultEntry!2865 newMap!16)) _$16!152)))

(declare-fun bs!5642 () Bool)

(assert (= bs!5642 d!41619))

(assert (=> bs!5642 m!156959))

(assert (=> bs!5642 m!158531))

(assert (=> bs!5642 m!156959))

(assert (=> bs!5642 m!158531))

(assert (=> bs!5642 m!158533))

(assert (=> d!40875 d!41619))

(assert (=> d!40875 d!40475))

(assert (=> b!133572 d!40981))

(declare-fun d!41621 () Bool)

(declare-fun e!87773 () Bool)

(assert (=> d!41621 e!87773))

(declare-fun res!64776 () Bool)

(assert (=> d!41621 (=> res!64776 e!87773)))

(declare-fun lt!70571 () Bool)

(assert (=> d!41621 (= res!64776 (not lt!70571))))

(declare-fun lt!70573 () Bool)

(assert (=> d!41621 (= lt!70571 lt!70573)))

(declare-fun lt!70572 () Unit!4150)

(declare-fun e!87774 () Unit!4150)

(assert (=> d!41621 (= lt!70572 e!87774)))

(declare-fun c!25114 () Bool)

(assert (=> d!41621 (= c!25114 lt!70573)))

(assert (=> d!41621 (= lt!70573 (containsKey!175 (toList!869 lt!70136) (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!41621 (= (contains!896 lt!70136 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)) lt!70571)))

(declare-fun b!134766 () Bool)

(declare-fun lt!70574 () Unit!4150)

(assert (=> b!134766 (= e!87774 lt!70574)))

(assert (=> b!134766 (= lt!70574 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!70136) (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!134766 (isDefined!125 (getValueByKey!171 (toList!869 lt!70136) (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!134767 () Bool)

(declare-fun Unit!4236 () Unit!4150)

(assert (=> b!134767 (= e!87774 Unit!4236)))

(declare-fun b!134768 () Bool)

(assert (=> b!134768 (= e!87773 (isDefined!125 (getValueByKey!171 (toList!869 lt!70136) (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000))))))

(assert (= (and d!41621 c!25114) b!134766))

(assert (= (and d!41621 (not c!25114)) b!134767))

(assert (= (and d!41621 (not res!64776)) b!134768))

(assert (=> d!41621 m!158517))

(declare-fun m!160411 () Bool)

(assert (=> d!41621 m!160411))

(assert (=> b!134766 m!158517))

(declare-fun m!160413 () Bool)

(assert (=> b!134766 m!160413))

(assert (=> b!134766 m!158517))

(declare-fun m!160415 () Bool)

(assert (=> b!134766 m!160415))

(assert (=> b!134766 m!160415))

(declare-fun m!160417 () Bool)

(assert (=> b!134766 m!160417))

(assert (=> b!134768 m!158517))

(assert (=> b!134768 m!160415))

(assert (=> b!134768 m!160415))

(assert (=> b!134768 m!160417))

(assert (=> b!133944 d!41621))

(declare-fun d!41623 () Bool)

(declare-fun e!87775 () Bool)

(assert (=> d!41623 e!87775))

(declare-fun res!64777 () Bool)

(assert (=> d!41623 (=> res!64777 e!87775)))

(declare-fun lt!70575 () Bool)

(assert (=> d!41623 (= res!64777 (not lt!70575))))

(declare-fun lt!70577 () Bool)

(assert (=> d!41623 (= lt!70575 lt!70577)))

(declare-fun lt!70576 () Unit!4150)

(declare-fun e!87776 () Unit!4150)

(assert (=> d!41623 (= lt!70576 e!87776)))

(declare-fun c!25115 () Bool)

(assert (=> d!41623 (= c!25115 lt!70577)))

(assert (=> d!41623 (= lt!70577 (containsKey!175 (toList!869 lt!69891) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!41623 (= (contains!896 lt!69891 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70575)))

(declare-fun b!134769 () Bool)

(declare-fun lt!70578 () Unit!4150)

(assert (=> b!134769 (= e!87776 lt!70578)))

(assert (=> b!134769 (= lt!70578 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69891) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134769 (isDefined!125 (getValueByKey!171 (toList!869 lt!69891) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134770 () Bool)

(declare-fun Unit!4237 () Unit!4150)

(assert (=> b!134770 (= e!87776 Unit!4237)))

(declare-fun b!134771 () Bool)

(assert (=> b!134771 (= e!87775 (isDefined!125 (getValueByKey!171 (toList!869 lt!69891) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!41623 c!25115) b!134769))

(assert (= (and d!41623 (not c!25115)) b!134770))

(assert (= (and d!41623 (not res!64777)) b!134771))

(assert (=> d!41623 m!156533))

(declare-fun m!160419 () Bool)

(assert (=> d!41623 m!160419))

(assert (=> b!134769 m!156533))

(declare-fun m!160421 () Bool)

(assert (=> b!134769 m!160421))

(assert (=> b!134769 m!156533))

(declare-fun m!160423 () Bool)

(assert (=> b!134769 m!160423))

(assert (=> b!134769 m!160423))

(declare-fun m!160425 () Bool)

(assert (=> b!134769 m!160425))

(assert (=> b!134771 m!156533))

(assert (=> b!134771 m!160423))

(assert (=> b!134771 m!160423))

(assert (=> b!134771 m!160425))

(assert (=> b!133487 d!41623))

(declare-fun d!41625 () Bool)

(declare-fun lt!70579 () Bool)

(assert (=> d!41625 (= lt!70579 (select (content!132 (t!6198 (toList!869 lt!69407))) (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun e!87778 () Bool)

(assert (=> d!41625 (= lt!70579 e!87778)))

(declare-fun res!64778 () Bool)

(assert (=> d!41625 (=> (not res!64778) (not e!87778))))

(assert (=> d!41625 (= res!64778 ((_ is Cons!1731) (t!6198 (toList!869 lt!69407))))))

(assert (=> d!41625 (= (contains!898 (t!6198 (toList!869 lt!69407)) (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!70579)))

(declare-fun b!134772 () Bool)

(declare-fun e!87777 () Bool)

(assert (=> b!134772 (= e!87778 e!87777)))

(declare-fun res!64779 () Bool)

(assert (=> b!134772 (=> res!64779 e!87777)))

(assert (=> b!134772 (= res!64779 (= (h!2336 (t!6198 (toList!869 lt!69407))) (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!134773 () Bool)

(assert (=> b!134773 (= e!87777 (contains!898 (t!6198 (t!6198 (toList!869 lt!69407))) (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!41625 res!64778) b!134772))

(assert (= (and b!134772 (not res!64779)) b!134773))

(declare-fun m!160427 () Bool)

(assert (=> d!41625 m!160427))

(declare-fun m!160429 () Bool)

(assert (=> d!41625 m!160429))

(declare-fun m!160431 () Bool)

(assert (=> b!134773 m!160431))

(assert (=> b!133678 d!41625))

(declare-fun d!41627 () Bool)

(assert (=> d!41627 (= (isEmpty!415 (getValueByKey!171 (toList!869 call!14628) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))) (not ((_ is Some!176) (getValueByKey!171 (toList!869 call!14628) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))))

(assert (=> d!40641 d!41627))

(declare-fun d!41629 () Bool)

(assert (=> d!41629 (isDefined!125 (getValueByKey!171 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))))))

(declare-fun lt!70580 () Unit!4150)

(assert (=> d!41629 (= lt!70580 (choose!831 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))))))

(declare-fun e!87779 () Bool)

(assert (=> d!41629 e!87779))

(declare-fun res!64780 () Bool)

(assert (=> d!41629 (=> (not res!64780) (not e!87779))))

(assert (=> d!41629 (= res!64780 (isStrictlySorted!317 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))))

(assert (=> d!41629 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))) lt!70580)))

(declare-fun b!134774 () Bool)

(assert (=> b!134774 (= e!87779 (containsKey!175 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))))))

(assert (= (and d!41629 res!64780) b!134774))

(assert (=> d!41629 m!156983))

(assert (=> d!41629 m!158679))

(assert (=> d!41629 m!158679))

(assert (=> d!41629 m!158681))

(assert (=> d!41629 m!156983))

(declare-fun m!160433 () Bool)

(assert (=> d!41629 m!160433))

(declare-fun m!160435 () Bool)

(assert (=> d!41629 m!160435))

(assert (=> b!134774 m!156983))

(assert (=> b!134774 m!158675))

(assert (=> b!133956 d!41629))

(declare-fun d!41631 () Bool)

(assert (=> d!41631 (= (isDefined!125 (getValueByKey!171 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))))) (not (isEmpty!415 (getValueByKey!171 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))))))))

(declare-fun bs!5643 () Bool)

(assert (= bs!5643 d!41631))

(assert (=> bs!5643 m!158679))

(declare-fun m!160437 () Bool)

(assert (=> bs!5643 m!160437))

(assert (=> b!133956 d!41631))

(declare-fun e!87780 () Option!177)

(declare-fun b!134775 () Bool)

(assert (=> b!134775 (= e!87780 (Some!176 (_2!1314 (h!2336 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))))))

(declare-fun b!134778 () Bool)

(declare-fun e!87781 () Option!177)

(assert (=> b!134778 (= e!87781 None!175)))

(declare-fun b!134777 () Bool)

(assert (=> b!134777 (= e!87781 (getValueByKey!171 (t!6198 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))))))

(declare-fun b!134776 () Bool)

(assert (=> b!134776 (= e!87780 e!87781)))

(declare-fun c!25117 () Bool)

(assert (=> b!134776 (= c!25117 (and ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (not (= (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))))))))

(declare-fun d!41633 () Bool)

(declare-fun c!25116 () Bool)

(assert (=> d!41633 (= c!25116 (and ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (= (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))))))))

(assert (=> d!41633 (= (getValueByKey!171 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))) e!87780)))

(assert (= (and d!41633 c!25116) b!134775))

(assert (= (and d!41633 (not c!25116)) b!134776))

(assert (= (and b!134776 c!25117) b!134777))

(assert (= (and b!134776 (not c!25117)) b!134778))

(assert (=> b!134777 m!156983))

(declare-fun m!160439 () Bool)

(assert (=> b!134777 m!160439))

(assert (=> b!133956 d!41633))

(declare-fun d!41635 () Bool)

(declare-fun e!87782 () Bool)

(assert (=> d!41635 e!87782))

(declare-fun res!64781 () Bool)

(assert (=> d!41635 (=> res!64781 e!87782)))

(declare-fun lt!70581 () Bool)

(assert (=> d!41635 (= res!64781 (not lt!70581))))

(declare-fun lt!70583 () Bool)

(assert (=> d!41635 (= lt!70581 lt!70583)))

(declare-fun lt!70582 () Unit!4150)

(declare-fun e!87783 () Unit!4150)

(assert (=> d!41635 (= lt!70582 e!87783)))

(declare-fun c!25118 () Bool)

(assert (=> d!41635 (= c!25118 lt!70583)))

(assert (=> d!41635 (= lt!70583 (containsKey!175 (toList!869 lt!69898) (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!41635 (= (contains!896 lt!69898 (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70581)))

(declare-fun b!134779 () Bool)

(declare-fun lt!70584 () Unit!4150)

(assert (=> b!134779 (= e!87783 lt!70584)))

(assert (=> b!134779 (= lt!70584 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69898) (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> b!134779 (isDefined!125 (getValueByKey!171 (toList!869 lt!69898) (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134780 () Bool)

(declare-fun Unit!4238 () Unit!4150)

(assert (=> b!134780 (= e!87783 Unit!4238)))

(declare-fun b!134781 () Bool)

(assert (=> b!134781 (= e!87782 (isDefined!125 (getValueByKey!171 (toList!869 lt!69898) (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (= (and d!41635 c!25118) b!134779))

(assert (= (and d!41635 (not c!25118)) b!134780))

(assert (= (and d!41635 (not res!64781)) b!134781))

(declare-fun m!160441 () Bool)

(assert (=> d!41635 m!160441))

(declare-fun m!160443 () Bool)

(assert (=> b!134779 m!160443))

(assert (=> b!134779 m!157777))

(assert (=> b!134779 m!157777))

(declare-fun m!160445 () Bool)

(assert (=> b!134779 m!160445))

(assert (=> b!134781 m!157777))

(assert (=> b!134781 m!157777))

(assert (=> b!134781 m!160445))

(assert (=> d!40575 d!41635))

(declare-fun b!134782 () Bool)

(declare-fun e!87784 () Option!177)

(assert (=> b!134782 (= e!87784 (Some!176 (_2!1314 (h!2336 lt!69900))))))

(declare-fun b!134785 () Bool)

(declare-fun e!87785 () Option!177)

(assert (=> b!134785 (= e!87785 None!175)))

(declare-fun b!134784 () Bool)

(assert (=> b!134784 (= e!87785 (getValueByKey!171 (t!6198 lt!69900) (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134783 () Bool)

(assert (=> b!134783 (= e!87784 e!87785)))

(declare-fun c!25120 () Bool)

(assert (=> b!134783 (= c!25120 (and ((_ is Cons!1731) lt!69900) (not (= (_1!1314 (h!2336 lt!69900)) (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun c!25119 () Bool)

(declare-fun d!41637 () Bool)

(assert (=> d!41637 (= c!25119 (and ((_ is Cons!1731) lt!69900) (= (_1!1314 (h!2336 lt!69900)) (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!41637 (= (getValueByKey!171 lt!69900 (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) e!87784)))

(assert (= (and d!41637 c!25119) b!134782))

(assert (= (and d!41637 (not c!25119)) b!134783))

(assert (= (and b!134783 c!25120) b!134784))

(assert (= (and b!134783 (not c!25120)) b!134785))

(declare-fun m!160447 () Bool)

(assert (=> b!134784 m!160447))

(assert (=> d!40575 d!41637))

(declare-fun d!41639 () Bool)

(assert (=> d!41639 (= (getValueByKey!171 lt!69900 (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun lt!70585 () Unit!4150)

(assert (=> d!41639 (= lt!70585 (choose!834 lt!69900 (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun e!87786 () Bool)

(assert (=> d!41639 e!87786))

(declare-fun res!64782 () Bool)

(assert (=> d!41639 (=> (not res!64782) (not e!87786))))

(assert (=> d!41639 (= res!64782 (isStrictlySorted!317 lt!69900))))

(assert (=> d!41639 (= (lemmaContainsTupThenGetReturnValue!88 lt!69900 (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70585)))

(declare-fun b!134786 () Bool)

(declare-fun res!64783 () Bool)

(assert (=> b!134786 (=> (not res!64783) (not e!87786))))

(assert (=> b!134786 (= res!64783 (containsKey!175 lt!69900 (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134787 () Bool)

(assert (=> b!134787 (= e!87786 (contains!898 lt!69900 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (= (and d!41639 res!64782) b!134786))

(assert (= (and b!134786 res!64783) b!134787))

(assert (=> d!41639 m!157771))

(declare-fun m!160449 () Bool)

(assert (=> d!41639 m!160449))

(declare-fun m!160451 () Bool)

(assert (=> d!41639 m!160451))

(declare-fun m!160453 () Bool)

(assert (=> b!134786 m!160453))

(declare-fun m!160455 () Bool)

(assert (=> b!134787 m!160455))

(assert (=> d!40575 d!41639))

(declare-fun bm!14841 () Bool)

(declare-fun call!14844 () List!1735)

(declare-fun call!14845 () List!1735)

(assert (=> bm!14841 (= call!14844 call!14845)))

(declare-fun e!87789 () Bool)

(declare-fun lt!70586 () List!1735)

(declare-fun b!134788 () Bool)

(assert (=> b!134788 (= e!87789 (contains!898 lt!70586 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!134789 () Bool)

(declare-fun e!87791 () List!1735)

(assert (=> b!134789 (= e!87791 call!14845)))

(declare-fun b!134790 () Bool)

(declare-fun res!64784 () Bool)

(assert (=> b!134790 (=> (not res!64784) (not e!87789))))

(assert (=> b!134790 (= res!64784 (containsKey!175 lt!70586 (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134791 () Bool)

(declare-fun e!87787 () List!1735)

(assert (=> b!134791 (= e!87787 (insertStrictlySorted!90 (t!6198 (toList!869 lt!69497)) (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134792 () Bool)

(declare-fun e!87788 () List!1735)

(assert (=> b!134792 (= e!87788 call!14844)))

(declare-fun bm!14842 () Bool)

(declare-fun call!14846 () List!1735)

(assert (=> bm!14842 (= call!14845 call!14846)))

(declare-fun c!25123 () Bool)

(declare-fun c!25121 () Bool)

(declare-fun b!134794 () Bool)

(assert (=> b!134794 (= e!87787 (ite c!25123 (t!6198 (toList!869 lt!69497)) (ite c!25121 (Cons!1731 (h!2336 (toList!869 lt!69497)) (t!6198 (toList!869 lt!69497))) Nil!1732)))))

(declare-fun b!134795 () Bool)

(declare-fun e!87790 () List!1735)

(assert (=> b!134795 (= e!87790 call!14846)))

(declare-fun b!134796 () Bool)

(assert (=> b!134796 (= c!25121 (and ((_ is Cons!1731) (toList!869 lt!69497)) (bvsgt (_1!1314 (h!2336 (toList!869 lt!69497))) (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> b!134796 (= e!87791 e!87788)))

(declare-fun d!41641 () Bool)

(assert (=> d!41641 e!87789))

(declare-fun res!64785 () Bool)

(assert (=> d!41641 (=> (not res!64785) (not e!87789))))

(assert (=> d!41641 (= res!64785 (isStrictlySorted!317 lt!70586))))

(assert (=> d!41641 (= lt!70586 e!87790)))

(declare-fun c!25122 () Bool)

(assert (=> d!41641 (= c!25122 (and ((_ is Cons!1731) (toList!869 lt!69497)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69497))) (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!41641 (isStrictlySorted!317 (toList!869 lt!69497))))

(assert (=> d!41641 (= (insertStrictlySorted!90 (toList!869 lt!69497) (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70586)))

(declare-fun b!134793 () Bool)

(assert (=> b!134793 (= e!87790 e!87791)))

(assert (=> b!134793 (= c!25123 (and ((_ is Cons!1731) (toList!869 lt!69497)) (= (_1!1314 (h!2336 (toList!869 lt!69497))) (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!134797 () Bool)

(assert (=> b!134797 (= e!87788 call!14844)))

(declare-fun bm!14843 () Bool)

(assert (=> bm!14843 (= call!14846 ($colon$colon!91 e!87787 (ite c!25122 (h!2336 (toList!869 lt!69497)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun c!25124 () Bool)

(assert (=> bm!14843 (= c!25124 c!25122)))

(assert (= (and d!41641 c!25122) b!134795))

(assert (= (and d!41641 (not c!25122)) b!134793))

(assert (= (and b!134793 c!25123) b!134789))

(assert (= (and b!134793 (not c!25123)) b!134796))

(assert (= (and b!134796 c!25121) b!134797))

(assert (= (and b!134796 (not c!25121)) b!134792))

(assert (= (or b!134797 b!134792) bm!14841))

(assert (= (or b!134789 bm!14841) bm!14842))

(assert (= (or b!134795 bm!14842) bm!14843))

(assert (= (and bm!14843 c!25124) b!134791))

(assert (= (and bm!14843 (not c!25124)) b!134794))

(assert (= (and d!41641 res!64785) b!134790))

(assert (= (and b!134790 res!64784) b!134788))

(declare-fun m!160457 () Bool)

(assert (=> b!134790 m!160457))

(declare-fun m!160459 () Bool)

(assert (=> b!134788 m!160459))

(declare-fun m!160461 () Bool)

(assert (=> d!41641 m!160461))

(declare-fun m!160463 () Bool)

(assert (=> d!41641 m!160463))

(declare-fun m!160465 () Bool)

(assert (=> bm!14843 m!160465))

(declare-fun m!160467 () Bool)

(assert (=> b!134791 m!160467))

(assert (=> d!40575 d!41641))

(declare-fun d!41643 () Bool)

(assert (=> d!41643 (arrayNoDuplicates!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) lt!69610 lt!69593)))

(assert (=> d!41643 true))

(declare-fun _$65!62 () Unit!4150)

(assert (=> d!41643 (= (choose!41 (_keys!4614 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) lt!69610 lt!69593) _$65!62)))

(declare-fun bs!5644 () Bool)

(assert (= bs!5644 d!41643))

(assert (=> bs!5644 m!156987))

(assert (=> bs!5644 m!156951))

(assert (=> d!40869 d!41643))

(declare-fun b!134798 () Bool)

(declare-fun lt!70587 () SeekEntryResult!285)

(assert (=> b!134798 (and (bvsge (index!3302 lt!70587) #b00000000000000000000000000000000) (bvslt (index!3302 lt!70587) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun res!64787 () Bool)

(assert (=> b!134798 (= res!64787 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3302 lt!70587)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87795 () Bool)

(assert (=> b!134798 (=> res!64787 e!87795)))

(declare-fun b!134799 () Bool)

(declare-fun e!87792 () SeekEntryResult!285)

(assert (=> b!134799 (= e!87792 (Intermediate!285 true (nextIndex!0 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000 (mask!7165 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun e!87793 () SeekEntryResult!285)

(declare-fun b!134800 () Bool)

(assert (=> b!134800 (= e!87793 (Intermediate!285 false (nextIndex!0 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000 (mask!7165 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!134801 () Bool)

(assert (=> b!134801 (= e!87793 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000 (mask!7165 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7165 newMap!16)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun d!41645 () Bool)

(declare-fun e!87794 () Bool)

(assert (=> d!41645 e!87794))

(declare-fun c!25126 () Bool)

(assert (=> d!41645 (= c!25126 (and ((_ is Intermediate!285) lt!70587) (undefined!1097 lt!70587)))))

(assert (=> d!41645 (= lt!70587 e!87792)))

(declare-fun c!25125 () Bool)

(assert (=> d!41645 (= c!25125 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(declare-fun lt!70588 () (_ BitVec 64))

(assert (=> d!41645 (= lt!70588 (select (arr!2260 (_keys!4614 newMap!16)) (nextIndex!0 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000 (mask!7165 newMap!16))))))

(assert (=> d!41645 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41645 (= (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000 (mask!7165 newMap!16)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)) lt!70587)))

(declare-fun b!134802 () Bool)

(assert (=> b!134802 (and (bvsge (index!3302 lt!70587) #b00000000000000000000000000000000) (bvslt (index!3302 lt!70587) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun res!64786 () Bool)

(assert (=> b!134802 (= res!64786 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3302 lt!70587)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> b!134802 (=> res!64786 e!87795)))

(declare-fun e!87796 () Bool)

(assert (=> b!134802 (= e!87796 e!87795)))

(declare-fun b!134803 () Bool)

(assert (=> b!134803 (= e!87794 (bvsge (x!15602 lt!70587) #b01111111111111111111111111111110))))

(declare-fun b!134804 () Bool)

(assert (=> b!134804 (and (bvsge (index!3302 lt!70587) #b00000000000000000000000000000000) (bvslt (index!3302 lt!70587) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> b!134804 (= e!87795 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3302 lt!70587)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134805 () Bool)

(assert (=> b!134805 (= e!87792 e!87793)))

(declare-fun c!25127 () Bool)

(assert (=> b!134805 (= c!25127 (or (= lt!70588 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (= (bvadd lt!70588 lt!70588) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134806 () Bool)

(assert (=> b!134806 (= e!87794 e!87796)))

(declare-fun res!64788 () Bool)

(assert (=> b!134806 (= res!64788 (and ((_ is Intermediate!285) lt!70587) (not (undefined!1097 lt!70587)) (bvslt (x!15602 lt!70587) #b01111111111111111111111111111110) (bvsge (x!15602 lt!70587) #b00000000000000000000000000000000) (bvsge (x!15602 lt!70587) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134806 (=> (not res!64788) (not e!87796))))

(assert (= (and d!41645 c!25125) b!134799))

(assert (= (and d!41645 (not c!25125)) b!134805))

(assert (= (and b!134805 c!25127) b!134800))

(assert (= (and b!134805 (not c!25127)) b!134801))

(assert (= (and d!41645 c!25126) b!134803))

(assert (= (and d!41645 (not c!25126)) b!134806))

(assert (= (and b!134806 res!64788) b!134802))

(assert (= (and b!134802 (not res!64786)) b!134798))

(assert (= (and b!134798 (not res!64787)) b!134804))

(assert (=> b!134801 m!157471))

(declare-fun m!160469 () Bool)

(assert (=> b!134801 m!160469))

(assert (=> b!134801 m!160469))

(assert (=> b!134801 m!156287))

(declare-fun m!160471 () Bool)

(assert (=> b!134801 m!160471))

(declare-fun m!160473 () Bool)

(assert (=> b!134798 m!160473))

(assert (=> b!134802 m!160473))

(assert (=> d!41645 m!157471))

(declare-fun m!160475 () Bool)

(assert (=> d!41645 m!160475))

(assert (=> d!41645 m!156571))

(assert (=> b!134804 m!160473))

(assert (=> b!133394 d!41645))

(declare-fun d!41647 () Bool)

(declare-fun lt!70591 () (_ BitVec 32))

(assert (=> d!41647 (and (bvsge lt!70591 #b00000000000000000000000000000000) (bvslt lt!70591 (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001)))))

(declare-fun choose!52 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!41647 (= lt!70591 (choose!52 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000 (mask!7165 newMap!16)))))

(assert (=> d!41647 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41647 (= (nextIndex!0 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000 (mask!7165 newMap!16)) lt!70591)))

(declare-fun bs!5645 () Bool)

(assert (= bs!5645 d!41647))

(assert (=> bs!5645 m!156701))

(declare-fun m!160477 () Bool)

(assert (=> bs!5645 m!160477))

(assert (=> bs!5645 m!156571))

(assert (=> b!133394 d!41647))

(declare-fun bm!14844 () Bool)

(declare-fun call!14847 () List!1735)

(declare-fun call!14848 () List!1735)

(assert (=> bm!14844 (= call!14847 call!14848)))

(declare-fun lt!70592 () List!1735)

(declare-fun b!134807 () Bool)

(declare-fun e!87799 () Bool)

(assert (=> b!134807 (= e!87799 (contains!898 lt!70592 (tuple2!2609 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun b!134808 () Bool)

(declare-fun e!87801 () List!1735)

(assert (=> b!134808 (= e!87801 call!14848)))

(declare-fun b!134809 () Bool)

(declare-fun res!64789 () Bool)

(assert (=> b!134809 (=> (not res!64789) (not e!87799))))

(assert (=> b!134809 (= res!64789 (containsKey!175 lt!70592 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun e!87797 () List!1735)

(declare-fun b!134810 () Bool)

(assert (=> b!134810 (= e!87797 (insertStrictlySorted!90 (t!6198 (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569))))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!134811 () Bool)

(declare-fun e!87798 () List!1735)

(assert (=> b!134811 (= e!87798 call!14847)))

(declare-fun bm!14845 () Bool)

(declare-fun call!14849 () List!1735)

(assert (=> bm!14845 (= call!14848 call!14849)))

(declare-fun b!134813 () Bool)

(declare-fun c!25130 () Bool)

(declare-fun c!25128 () Bool)

(assert (=> b!134813 (= e!87797 (ite c!25130 (t!6198 (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569))))) (ite c!25128 (Cons!1731 (h!2336 (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569))))) (t!6198 (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)))))) Nil!1732)))))

(declare-fun b!134814 () Bool)

(declare-fun e!87800 () List!1735)

(assert (=> b!134814 (= e!87800 call!14849)))

(declare-fun b!134815 () Bool)

(assert (=> b!134815 (= c!25128 (and ((_ is Cons!1731) (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569))))) (bvsgt (_1!1314 (h!2336 (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)))))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(assert (=> b!134815 (= e!87801 e!87798)))

(declare-fun d!41649 () Bool)

(assert (=> d!41649 e!87799))

(declare-fun res!64790 () Bool)

(assert (=> d!41649 (=> (not res!64790) (not e!87799))))

(assert (=> d!41649 (= res!64790 (isStrictlySorted!317 lt!70592))))

(assert (=> d!41649 (= lt!70592 e!87800)))

(declare-fun c!25129 () Bool)

(assert (=> d!41649 (= c!25129 (and ((_ is Cons!1731) (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569))))) (bvslt (_1!1314 (h!2336 (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)))))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(assert (=> d!41649 (isStrictlySorted!317 (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)))))))

(assert (=> d!41649 (= (insertStrictlySorted!90 (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!70592)))

(declare-fun b!134812 () Bool)

(assert (=> b!134812 (= e!87800 e!87801)))

(assert (=> b!134812 (= c!25130 (and ((_ is Cons!1731) (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569))))) (= (_1!1314 (h!2336 (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)))))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun b!134816 () Bool)

(assert (=> b!134816 (= e!87798 call!14847)))

(declare-fun bm!14846 () Bool)

(assert (=> bm!14846 (= call!14849 ($colon$colon!91 e!87797 (ite c!25129 (h!2336 (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569))))) (tuple2!2609 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))))

(declare-fun c!25131 () Bool)

(assert (=> bm!14846 (= c!25131 c!25129)))

(assert (= (and d!41649 c!25129) b!134814))

(assert (= (and d!41649 (not c!25129)) b!134812))

(assert (= (and b!134812 c!25130) b!134808))

(assert (= (and b!134812 (not c!25130)) b!134815))

(assert (= (and b!134815 c!25128) b!134816))

(assert (= (and b!134815 (not c!25128)) b!134811))

(assert (= (or b!134816 b!134811) bm!14844))

(assert (= (or b!134808 bm!14844) bm!14845))

(assert (= (or b!134814 bm!14845) bm!14846))

(assert (= (and bm!14846 c!25131) b!134810))

(assert (= (and bm!14846 (not c!25131)) b!134813))

(assert (= (and d!41649 res!64790) b!134809))

(assert (= (and b!134809 res!64789) b!134807))

(declare-fun m!160479 () Bool)

(assert (=> b!134809 m!160479))

(declare-fun m!160481 () Bool)

(assert (=> b!134807 m!160481))

(declare-fun m!160483 () Bool)

(assert (=> d!41649 m!160483))

(declare-fun m!160485 () Bool)

(assert (=> d!41649 m!160485))

(declare-fun m!160487 () Bool)

(assert (=> bm!14846 m!160487))

(declare-fun m!160489 () Bool)

(assert (=> b!134810 m!160489))

(assert (=> b!133742 d!41649))

(declare-fun b!134817 () Bool)

(declare-fun e!87802 () Option!177)

(assert (=> b!134817 (= e!87802 (Some!176 (_2!1314 (h!2336 (toList!869 lt!70050)))))))

(declare-fun b!134820 () Bool)

(declare-fun e!87803 () Option!177)

(assert (=> b!134820 (= e!87803 None!175)))

(declare-fun b!134819 () Bool)

(assert (=> b!134819 (= e!87803 (getValueByKey!171 (t!6198 (toList!869 lt!70050)) (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))))

(declare-fun b!134818 () Bool)

(assert (=> b!134818 (= e!87802 e!87803)))

(declare-fun c!25133 () Bool)

(assert (=> b!134818 (= c!25133 (and ((_ is Cons!1731) (toList!869 lt!70050)) (not (= (_1!1314 (h!2336 (toList!869 lt!70050))) (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))))))

(declare-fun c!25132 () Bool)

(declare-fun d!41651 () Bool)

(assert (=> d!41651 (= c!25132 (and ((_ is Cons!1731) (toList!869 lt!70050)) (= (_1!1314 (h!2336 (toList!869 lt!70050))) (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))))))))

(assert (=> d!41651 (= (getValueByKey!171 (toList!869 lt!70050) (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))) e!87802)))

(assert (= (and d!41651 c!25132) b!134817))

(assert (= (and d!41651 (not c!25132)) b!134818))

(assert (= (and b!134818 c!25133) b!134819))

(assert (= (and b!134818 (not c!25133)) b!134820))

(declare-fun m!160491 () Bool)

(assert (=> b!134819 m!160491))

(assert (=> b!133765 d!41651))

(declare-fun d!41653 () Bool)

(declare-fun res!64791 () Bool)

(declare-fun e!87804 () Bool)

(assert (=> d!41653 (=> res!64791 e!87804)))

(assert (=> d!41653 (= res!64791 (and ((_ is Cons!1731) (toList!869 lt!69416)) (= (_1!1314 (h!2336 (toList!869 lt!69416))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41653 (= (containsKey!175 (toList!869 lt!69416) #b0000000000000000000000000000000000000000000000000000000000000000) e!87804)))

(declare-fun b!134821 () Bool)

(declare-fun e!87805 () Bool)

(assert (=> b!134821 (= e!87804 e!87805)))

(declare-fun res!64792 () Bool)

(assert (=> b!134821 (=> (not res!64792) (not e!87805))))

(assert (=> b!134821 (= res!64792 (and (or (not ((_ is Cons!1731) (toList!869 lt!69416))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69416))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1731) (toList!869 lt!69416)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69416))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134822 () Bool)

(assert (=> b!134822 (= e!87805 (containsKey!175 (t!6198 (toList!869 lt!69416)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41653 (not res!64791)) b!134821))

(assert (= (and b!134821 res!64792) b!134822))

(declare-fun m!160493 () Bool)

(assert (=> b!134822 m!160493))

(assert (=> d!40941 d!41653))

(assert (=> b!133892 d!40873))

(declare-fun b!134823 () Bool)

(declare-fun e!87806 () Option!177)

(assert (=> b!134823 (= e!87806 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69804)))))))

(declare-fun b!134826 () Bool)

(declare-fun e!87807 () Option!177)

(assert (=> b!134826 (= e!87807 None!175)))

(declare-fun b!134825 () Bool)

(assert (=> b!134825 (= e!87807 (getValueByKey!171 (t!6198 (toList!869 lt!69804)) (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))))

(declare-fun b!134824 () Bool)

(assert (=> b!134824 (= e!87806 e!87807)))

(declare-fun c!25135 () Bool)

(assert (=> b!134824 (= c!25135 (and ((_ is Cons!1731) (toList!869 lt!69804)) (not (= (_1!1314 (h!2336 (toList!869 lt!69804))) (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))))))

(declare-fun d!41655 () Bool)

(declare-fun c!25134 () Bool)

(assert (=> d!41655 (= c!25134 (and ((_ is Cons!1731) (toList!869 lt!69804)) (= (_1!1314 (h!2336 (toList!869 lt!69804))) (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))))))))

(assert (=> d!41655 (= (getValueByKey!171 (toList!869 lt!69804) (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))) e!87806)))

(assert (= (and d!41655 c!25134) b!134823))

(assert (= (and d!41655 (not c!25134)) b!134824))

(assert (= (and b!134824 c!25135) b!134825))

(assert (= (and b!134824 (not c!25135)) b!134826))

(declare-fun m!160495 () Bool)

(assert (=> b!134825 m!160495))

(assert (=> b!133400 d!41655))

(declare-fun d!41657 () Bool)

(assert (=> d!41657 (contains!896 (+!170 lt!69763 (tuple2!2609 lt!69766 (zeroValue!2720 (_2!1315 lt!69327)))) lt!69773)))

(declare-fun lt!70593 () Unit!4150)

(assert (=> d!41657 (= lt!70593 (choose!829 lt!69763 lt!69766 (zeroValue!2720 (_2!1315 lt!69327)) lt!69773))))

(assert (=> d!41657 (contains!896 lt!69763 lt!69773)))

(assert (=> d!41657 (= (addStillContains!92 lt!69763 lt!69766 (zeroValue!2720 (_2!1315 lt!69327)) lt!69773) lt!70593)))

(declare-fun bs!5646 () Bool)

(assert (= bs!5646 d!41657))

(assert (=> bs!5646 m!157423))

(assert (=> bs!5646 m!157423))

(assert (=> bs!5646 m!157439))

(declare-fun m!160497 () Bool)

(assert (=> bs!5646 m!160497))

(declare-fun m!160499 () Bool)

(assert (=> bs!5646 m!160499))

(assert (=> b!133340 d!41657))

(declare-fun d!41659 () Bool)

(declare-fun e!87808 () Bool)

(assert (=> d!41659 e!87808))

(declare-fun res!64794 () Bool)

(assert (=> d!41659 (=> (not res!64794) (not e!87808))))

(declare-fun lt!70595 () ListLongMap!1707)

(assert (=> d!41659 (= res!64794 (contains!896 lt!70595 (_1!1314 (tuple2!2609 lt!69782 (zeroValue!2720 (_2!1315 lt!69327))))))))

(declare-fun lt!70597 () List!1735)

(assert (=> d!41659 (= lt!70595 (ListLongMap!1708 lt!70597))))

(declare-fun lt!70596 () Unit!4150)

(declare-fun lt!70594 () Unit!4150)

(assert (=> d!41659 (= lt!70596 lt!70594)))

(assert (=> d!41659 (= (getValueByKey!171 lt!70597 (_1!1314 (tuple2!2609 lt!69782 (zeroValue!2720 (_2!1315 lt!69327))))) (Some!176 (_2!1314 (tuple2!2609 lt!69782 (zeroValue!2720 (_2!1315 lt!69327))))))))

(assert (=> d!41659 (= lt!70594 (lemmaContainsTupThenGetReturnValue!88 lt!70597 (_1!1314 (tuple2!2609 lt!69782 (zeroValue!2720 (_2!1315 lt!69327)))) (_2!1314 (tuple2!2609 lt!69782 (zeroValue!2720 (_2!1315 lt!69327))))))))

(assert (=> d!41659 (= lt!70597 (insertStrictlySorted!90 (toList!869 lt!69771) (_1!1314 (tuple2!2609 lt!69782 (zeroValue!2720 (_2!1315 lt!69327)))) (_2!1314 (tuple2!2609 lt!69782 (zeroValue!2720 (_2!1315 lt!69327))))))))

(assert (=> d!41659 (= (+!170 lt!69771 (tuple2!2609 lt!69782 (zeroValue!2720 (_2!1315 lt!69327)))) lt!70595)))

(declare-fun b!134827 () Bool)

(declare-fun res!64793 () Bool)

(assert (=> b!134827 (=> (not res!64793) (not e!87808))))

(assert (=> b!134827 (= res!64793 (= (getValueByKey!171 (toList!869 lt!70595) (_1!1314 (tuple2!2609 lt!69782 (zeroValue!2720 (_2!1315 lt!69327))))) (Some!176 (_2!1314 (tuple2!2609 lt!69782 (zeroValue!2720 (_2!1315 lt!69327)))))))))

(declare-fun b!134828 () Bool)

(assert (=> b!134828 (= e!87808 (contains!898 (toList!869 lt!70595) (tuple2!2609 lt!69782 (zeroValue!2720 (_2!1315 lt!69327)))))))

(assert (= (and d!41659 res!64794) b!134827))

(assert (= (and b!134827 res!64793) b!134828))

(declare-fun m!160501 () Bool)

(assert (=> d!41659 m!160501))

(declare-fun m!160503 () Bool)

(assert (=> d!41659 m!160503))

(declare-fun m!160505 () Bool)

(assert (=> d!41659 m!160505))

(declare-fun m!160507 () Bool)

(assert (=> d!41659 m!160507))

(declare-fun m!160509 () Bool)

(assert (=> b!134827 m!160509))

(declare-fun m!160511 () Bool)

(assert (=> b!134828 m!160511))

(assert (=> b!133340 d!41659))

(declare-fun d!41661 () Bool)

(declare-fun e!87809 () Bool)

(assert (=> d!41661 e!87809))

(declare-fun res!64795 () Bool)

(assert (=> d!41661 (=> res!64795 e!87809)))

(declare-fun lt!70598 () Bool)

(assert (=> d!41661 (= res!64795 (not lt!70598))))

(declare-fun lt!70600 () Bool)

(assert (=> d!41661 (= lt!70598 lt!70600)))

(declare-fun lt!70599 () Unit!4150)

(declare-fun e!87810 () Unit!4150)

(assert (=> d!41661 (= lt!70599 e!87810)))

(declare-fun c!25136 () Bool)

(assert (=> d!41661 (= c!25136 lt!70600)))

(assert (=> d!41661 (= lt!70600 (containsKey!175 (toList!869 (+!170 lt!69763 (tuple2!2609 lt!69766 (zeroValue!2720 (_2!1315 lt!69327))))) lt!69773))))

(assert (=> d!41661 (= (contains!896 (+!170 lt!69763 (tuple2!2609 lt!69766 (zeroValue!2720 (_2!1315 lt!69327)))) lt!69773) lt!70598)))

(declare-fun b!134829 () Bool)

(declare-fun lt!70601 () Unit!4150)

(assert (=> b!134829 (= e!87810 lt!70601)))

(assert (=> b!134829 (= lt!70601 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69763 (tuple2!2609 lt!69766 (zeroValue!2720 (_2!1315 lt!69327))))) lt!69773))))

(assert (=> b!134829 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69763 (tuple2!2609 lt!69766 (zeroValue!2720 (_2!1315 lt!69327))))) lt!69773))))

(declare-fun b!134830 () Bool)

(declare-fun Unit!4239 () Unit!4150)

(assert (=> b!134830 (= e!87810 Unit!4239)))

(declare-fun b!134831 () Bool)

(assert (=> b!134831 (= e!87809 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69763 (tuple2!2609 lt!69766 (zeroValue!2720 (_2!1315 lt!69327))))) lt!69773)))))

(assert (= (and d!41661 c!25136) b!134829))

(assert (= (and d!41661 (not c!25136)) b!134830))

(assert (= (and d!41661 (not res!64795)) b!134831))

(declare-fun m!160513 () Bool)

(assert (=> d!41661 m!160513))

(declare-fun m!160515 () Bool)

(assert (=> b!134829 m!160515))

(declare-fun m!160517 () Bool)

(assert (=> b!134829 m!160517))

(assert (=> b!134829 m!160517))

(declare-fun m!160519 () Bool)

(assert (=> b!134829 m!160519))

(assert (=> b!134831 m!160517))

(assert (=> b!134831 m!160517))

(assert (=> b!134831 m!160519))

(assert (=> b!133340 d!41661))

(declare-fun d!41663 () Bool)

(assert (=> d!41663 (= (apply!116 lt!69775 lt!69774) (get!1491 (getValueByKey!171 (toList!869 lt!69775) lt!69774)))))

(declare-fun bs!5647 () Bool)

(assert (= bs!5647 d!41663))

(declare-fun m!160521 () Bool)

(assert (=> bs!5647 m!160521))

(assert (=> bs!5647 m!160521))

(declare-fun m!160523 () Bool)

(assert (=> bs!5647 m!160523))

(assert (=> b!133340 d!41663))

(declare-fun d!41665 () Bool)

(assert (=> d!41665 (= (apply!116 (+!170 lt!69771 (tuple2!2609 lt!69782 (zeroValue!2720 (_2!1315 lt!69327)))) lt!69769) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69771 (tuple2!2609 lt!69782 (zeroValue!2720 (_2!1315 lt!69327))))) lt!69769)))))

(declare-fun bs!5648 () Bool)

(assert (= bs!5648 d!41665))

(declare-fun m!160525 () Bool)

(assert (=> bs!5648 m!160525))

(assert (=> bs!5648 m!160525))

(declare-fun m!160527 () Bool)

(assert (=> bs!5648 m!160527))

(assert (=> b!133340 d!41665))

(declare-fun d!41667 () Bool)

(assert (=> d!41667 (= (apply!116 (+!170 lt!69776 (tuple2!2609 lt!69778 (minValue!2720 (_2!1315 lt!69327)))) lt!69764) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69776 (tuple2!2609 lt!69778 (minValue!2720 (_2!1315 lt!69327))))) lt!69764)))))

(declare-fun bs!5649 () Bool)

(assert (= bs!5649 d!41667))

(declare-fun m!160529 () Bool)

(assert (=> bs!5649 m!160529))

(assert (=> bs!5649 m!160529))

(declare-fun m!160531 () Bool)

(assert (=> bs!5649 m!160531))

(assert (=> b!133340 d!41667))

(declare-fun d!41669 () Bool)

(assert (=> d!41669 (= (apply!116 (+!170 lt!69775 (tuple2!2609 lt!69772 (minValue!2720 (_2!1315 lt!69327)))) lt!69774) (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69775 (tuple2!2609 lt!69772 (minValue!2720 (_2!1315 lt!69327))))) lt!69774)))))

(declare-fun bs!5650 () Bool)

(assert (= bs!5650 d!41669))

(declare-fun m!160533 () Bool)

(assert (=> bs!5650 m!160533))

(assert (=> bs!5650 m!160533))

(declare-fun m!160535 () Bool)

(assert (=> bs!5650 m!160535))

(assert (=> b!133340 d!41669))

(declare-fun d!41671 () Bool)

(assert (=> d!41671 (= (apply!116 lt!69776 lt!69764) (get!1491 (getValueByKey!171 (toList!869 lt!69776) lt!69764)))))

(declare-fun bs!5651 () Bool)

(assert (= bs!5651 d!41671))

(declare-fun m!160537 () Bool)

(assert (=> bs!5651 m!160537))

(assert (=> bs!5651 m!160537))

(declare-fun m!160539 () Bool)

(assert (=> bs!5651 m!160539))

(assert (=> b!133340 d!41671))

(declare-fun d!41673 () Bool)

(assert (=> d!41673 (= (apply!116 (+!170 lt!69775 (tuple2!2609 lt!69772 (minValue!2720 (_2!1315 lt!69327)))) lt!69774) (apply!116 lt!69775 lt!69774))))

(declare-fun lt!70602 () Unit!4150)

(assert (=> d!41673 (= lt!70602 (choose!828 lt!69775 lt!69772 (minValue!2720 (_2!1315 lt!69327)) lt!69774))))

(declare-fun e!87811 () Bool)

(assert (=> d!41673 e!87811))

(declare-fun res!64796 () Bool)

(assert (=> d!41673 (=> (not res!64796) (not e!87811))))

(assert (=> d!41673 (= res!64796 (contains!896 lt!69775 lt!69774))))

(assert (=> d!41673 (= (addApplyDifferent!92 lt!69775 lt!69772 (minValue!2720 (_2!1315 lt!69327)) lt!69774) lt!70602)))

(declare-fun b!134832 () Bool)

(assert (=> b!134832 (= e!87811 (not (= lt!69774 lt!69772)))))

(assert (= (and d!41673 res!64796) b!134832))

(assert (=> d!41673 m!157433))

(assert (=> d!41673 m!157417))

(assert (=> d!41673 m!157419))

(declare-fun m!160541 () Bool)

(assert (=> d!41673 m!160541))

(declare-fun m!160543 () Bool)

(assert (=> d!41673 m!160543))

(assert (=> d!41673 m!157417))

(assert (=> b!133340 d!41673))

(declare-fun d!41675 () Bool)

(assert (=> d!41675 (= (apply!116 (+!170 lt!69771 (tuple2!2609 lt!69782 (zeroValue!2720 (_2!1315 lt!69327)))) lt!69769) (apply!116 lt!69771 lt!69769))))

(declare-fun lt!70603 () Unit!4150)

(assert (=> d!41675 (= lt!70603 (choose!828 lt!69771 lt!69782 (zeroValue!2720 (_2!1315 lt!69327)) lt!69769))))

(declare-fun e!87812 () Bool)

(assert (=> d!41675 e!87812))

(declare-fun res!64797 () Bool)

(assert (=> d!41675 (=> (not res!64797) (not e!87812))))

(assert (=> d!41675 (= res!64797 (contains!896 lt!69771 lt!69769))))

(assert (=> d!41675 (= (addApplyDifferent!92 lt!69771 lt!69782 (zeroValue!2720 (_2!1315 lt!69327)) lt!69769) lt!70603)))

(declare-fun b!134833 () Bool)

(assert (=> b!134833 (= e!87812 (not (= lt!69769 lt!69782)))))

(assert (= (and d!41675 res!64797) b!134833))

(assert (=> d!41675 m!157443))

(assert (=> d!41675 m!157413))

(assert (=> d!41675 m!157431))

(declare-fun m!160545 () Bool)

(assert (=> d!41675 m!160545))

(declare-fun m!160547 () Bool)

(assert (=> d!41675 m!160547))

(assert (=> d!41675 m!157413))

(assert (=> b!133340 d!41675))

(declare-fun d!41677 () Bool)

(declare-fun e!87813 () Bool)

(assert (=> d!41677 e!87813))

(declare-fun res!64799 () Bool)

(assert (=> d!41677 (=> (not res!64799) (not e!87813))))

(declare-fun lt!70605 () ListLongMap!1707)

(assert (=> d!41677 (= res!64799 (contains!896 lt!70605 (_1!1314 (tuple2!2609 lt!69772 (minValue!2720 (_2!1315 lt!69327))))))))

(declare-fun lt!70607 () List!1735)

(assert (=> d!41677 (= lt!70605 (ListLongMap!1708 lt!70607))))

(declare-fun lt!70606 () Unit!4150)

(declare-fun lt!70604 () Unit!4150)

(assert (=> d!41677 (= lt!70606 lt!70604)))

(assert (=> d!41677 (= (getValueByKey!171 lt!70607 (_1!1314 (tuple2!2609 lt!69772 (minValue!2720 (_2!1315 lt!69327))))) (Some!176 (_2!1314 (tuple2!2609 lt!69772 (minValue!2720 (_2!1315 lt!69327))))))))

(assert (=> d!41677 (= lt!70604 (lemmaContainsTupThenGetReturnValue!88 lt!70607 (_1!1314 (tuple2!2609 lt!69772 (minValue!2720 (_2!1315 lt!69327)))) (_2!1314 (tuple2!2609 lt!69772 (minValue!2720 (_2!1315 lt!69327))))))))

(assert (=> d!41677 (= lt!70607 (insertStrictlySorted!90 (toList!869 lt!69775) (_1!1314 (tuple2!2609 lt!69772 (minValue!2720 (_2!1315 lt!69327)))) (_2!1314 (tuple2!2609 lt!69772 (minValue!2720 (_2!1315 lt!69327))))))))

(assert (=> d!41677 (= (+!170 lt!69775 (tuple2!2609 lt!69772 (minValue!2720 (_2!1315 lt!69327)))) lt!70605)))

(declare-fun b!134834 () Bool)

(declare-fun res!64798 () Bool)

(assert (=> b!134834 (=> (not res!64798) (not e!87813))))

(assert (=> b!134834 (= res!64798 (= (getValueByKey!171 (toList!869 lt!70605) (_1!1314 (tuple2!2609 lt!69772 (minValue!2720 (_2!1315 lt!69327))))) (Some!176 (_2!1314 (tuple2!2609 lt!69772 (minValue!2720 (_2!1315 lt!69327)))))))))

(declare-fun b!134835 () Bool)

(assert (=> b!134835 (= e!87813 (contains!898 (toList!869 lt!70605) (tuple2!2609 lt!69772 (minValue!2720 (_2!1315 lt!69327)))))))

(assert (= (and d!41677 res!64799) b!134834))

(assert (= (and b!134834 res!64798) b!134835))

(declare-fun m!160549 () Bool)

(assert (=> d!41677 m!160549))

(declare-fun m!160551 () Bool)

(assert (=> d!41677 m!160551))

(declare-fun m!160553 () Bool)

(assert (=> d!41677 m!160553))

(declare-fun m!160555 () Bool)

(assert (=> d!41677 m!160555))

(declare-fun m!160557 () Bool)

(assert (=> b!134834 m!160557))

(declare-fun m!160559 () Bool)

(assert (=> b!134835 m!160559))

(assert (=> b!133340 d!41677))

(declare-fun d!41679 () Bool)

(declare-fun e!87814 () Bool)

(assert (=> d!41679 e!87814))

(declare-fun res!64801 () Bool)

(assert (=> d!41679 (=> (not res!64801) (not e!87814))))

(declare-fun lt!70609 () ListLongMap!1707)

(assert (=> d!41679 (= res!64801 (contains!896 lt!70609 (_1!1314 (tuple2!2609 lt!69778 (minValue!2720 (_2!1315 lt!69327))))))))

(declare-fun lt!70611 () List!1735)

(assert (=> d!41679 (= lt!70609 (ListLongMap!1708 lt!70611))))

(declare-fun lt!70610 () Unit!4150)

(declare-fun lt!70608 () Unit!4150)

(assert (=> d!41679 (= lt!70610 lt!70608)))

(assert (=> d!41679 (= (getValueByKey!171 lt!70611 (_1!1314 (tuple2!2609 lt!69778 (minValue!2720 (_2!1315 lt!69327))))) (Some!176 (_2!1314 (tuple2!2609 lt!69778 (minValue!2720 (_2!1315 lt!69327))))))))

(assert (=> d!41679 (= lt!70608 (lemmaContainsTupThenGetReturnValue!88 lt!70611 (_1!1314 (tuple2!2609 lt!69778 (minValue!2720 (_2!1315 lt!69327)))) (_2!1314 (tuple2!2609 lt!69778 (minValue!2720 (_2!1315 lt!69327))))))))

(assert (=> d!41679 (= lt!70611 (insertStrictlySorted!90 (toList!869 lt!69776) (_1!1314 (tuple2!2609 lt!69778 (minValue!2720 (_2!1315 lt!69327)))) (_2!1314 (tuple2!2609 lt!69778 (minValue!2720 (_2!1315 lt!69327))))))))

(assert (=> d!41679 (= (+!170 lt!69776 (tuple2!2609 lt!69778 (minValue!2720 (_2!1315 lt!69327)))) lt!70609)))

(declare-fun b!134836 () Bool)

(declare-fun res!64800 () Bool)

(assert (=> b!134836 (=> (not res!64800) (not e!87814))))

(assert (=> b!134836 (= res!64800 (= (getValueByKey!171 (toList!869 lt!70609) (_1!1314 (tuple2!2609 lt!69778 (minValue!2720 (_2!1315 lt!69327))))) (Some!176 (_2!1314 (tuple2!2609 lt!69778 (minValue!2720 (_2!1315 lt!69327)))))))))

(declare-fun b!134837 () Bool)

(assert (=> b!134837 (= e!87814 (contains!898 (toList!869 lt!70609) (tuple2!2609 lt!69778 (minValue!2720 (_2!1315 lt!69327)))))))

(assert (= (and d!41679 res!64801) b!134836))

(assert (= (and b!134836 res!64800) b!134837))

(declare-fun m!160561 () Bool)

(assert (=> d!41679 m!160561))

(declare-fun m!160563 () Bool)

(assert (=> d!41679 m!160563))

(declare-fun m!160565 () Bool)

(assert (=> d!41679 m!160565))

(declare-fun m!160567 () Bool)

(assert (=> d!41679 m!160567))

(declare-fun m!160569 () Bool)

(assert (=> b!134836 m!160569))

(declare-fun m!160571 () Bool)

(assert (=> b!134837 m!160571))

(assert (=> b!133340 d!41679))

(assert (=> b!133340 d!41437))

(declare-fun d!41681 () Bool)

(assert (=> d!41681 (= (apply!116 (+!170 lt!69776 (tuple2!2609 lt!69778 (minValue!2720 (_2!1315 lt!69327)))) lt!69764) (apply!116 lt!69776 lt!69764))))

(declare-fun lt!70612 () Unit!4150)

(assert (=> d!41681 (= lt!70612 (choose!828 lt!69776 lt!69778 (minValue!2720 (_2!1315 lt!69327)) lt!69764))))

(declare-fun e!87815 () Bool)

(assert (=> d!41681 e!87815))

(declare-fun res!64802 () Bool)

(assert (=> d!41681 (=> (not res!64802) (not e!87815))))

(assert (=> d!41681 (= res!64802 (contains!896 lt!69776 lt!69764))))

(assert (=> d!41681 (= (addApplyDifferent!92 lt!69776 lt!69778 (minValue!2720 (_2!1315 lt!69327)) lt!69764) lt!70612)))

(declare-fun b!134838 () Bool)

(assert (=> b!134838 (= e!87815 (not (= lt!69764 lt!69778)))))

(assert (= (and d!41681 res!64802) b!134838))

(assert (=> d!41681 m!157441))

(assert (=> d!41681 m!157427))

(assert (=> d!41681 m!157429))

(declare-fun m!160573 () Bool)

(assert (=> d!41681 m!160573))

(declare-fun m!160575 () Bool)

(assert (=> d!41681 m!160575))

(assert (=> d!41681 m!157427))

(assert (=> b!133340 d!41681))

(declare-fun d!41683 () Bool)

(assert (=> d!41683 (= (apply!116 lt!69771 lt!69769) (get!1491 (getValueByKey!171 (toList!869 lt!69771) lt!69769)))))

(declare-fun bs!5652 () Bool)

(assert (= bs!5652 d!41683))

(declare-fun m!160577 () Bool)

(assert (=> bs!5652 m!160577))

(assert (=> bs!5652 m!160577))

(declare-fun m!160579 () Bool)

(assert (=> bs!5652 m!160579))

(assert (=> b!133340 d!41683))

(declare-fun d!41685 () Bool)

(declare-fun e!87816 () Bool)

(assert (=> d!41685 e!87816))

(declare-fun res!64804 () Bool)

(assert (=> d!41685 (=> (not res!64804) (not e!87816))))

(declare-fun lt!70614 () ListLongMap!1707)

(assert (=> d!41685 (= res!64804 (contains!896 lt!70614 (_1!1314 (tuple2!2609 lt!69766 (zeroValue!2720 (_2!1315 lt!69327))))))))

(declare-fun lt!70616 () List!1735)

(assert (=> d!41685 (= lt!70614 (ListLongMap!1708 lt!70616))))

(declare-fun lt!70615 () Unit!4150)

(declare-fun lt!70613 () Unit!4150)

(assert (=> d!41685 (= lt!70615 lt!70613)))

(assert (=> d!41685 (= (getValueByKey!171 lt!70616 (_1!1314 (tuple2!2609 lt!69766 (zeroValue!2720 (_2!1315 lt!69327))))) (Some!176 (_2!1314 (tuple2!2609 lt!69766 (zeroValue!2720 (_2!1315 lt!69327))))))))

(assert (=> d!41685 (= lt!70613 (lemmaContainsTupThenGetReturnValue!88 lt!70616 (_1!1314 (tuple2!2609 lt!69766 (zeroValue!2720 (_2!1315 lt!69327)))) (_2!1314 (tuple2!2609 lt!69766 (zeroValue!2720 (_2!1315 lt!69327))))))))

(assert (=> d!41685 (= lt!70616 (insertStrictlySorted!90 (toList!869 lt!69763) (_1!1314 (tuple2!2609 lt!69766 (zeroValue!2720 (_2!1315 lt!69327)))) (_2!1314 (tuple2!2609 lt!69766 (zeroValue!2720 (_2!1315 lt!69327))))))))

(assert (=> d!41685 (= (+!170 lt!69763 (tuple2!2609 lt!69766 (zeroValue!2720 (_2!1315 lt!69327)))) lt!70614)))

(declare-fun b!134839 () Bool)

(declare-fun res!64803 () Bool)

(assert (=> b!134839 (=> (not res!64803) (not e!87816))))

(assert (=> b!134839 (= res!64803 (= (getValueByKey!171 (toList!869 lt!70614) (_1!1314 (tuple2!2609 lt!69766 (zeroValue!2720 (_2!1315 lt!69327))))) (Some!176 (_2!1314 (tuple2!2609 lt!69766 (zeroValue!2720 (_2!1315 lt!69327)))))))))

(declare-fun b!134840 () Bool)

(assert (=> b!134840 (= e!87816 (contains!898 (toList!869 lt!70614) (tuple2!2609 lt!69766 (zeroValue!2720 (_2!1315 lt!69327)))))))

(assert (= (and d!41685 res!64804) b!134839))

(assert (= (and b!134839 res!64803) b!134840))

(declare-fun m!160581 () Bool)

(assert (=> d!41685 m!160581))

(declare-fun m!160583 () Bool)

(assert (=> d!41685 m!160583))

(declare-fun m!160585 () Bool)

(assert (=> d!41685 m!160585))

(declare-fun m!160587 () Bool)

(assert (=> d!41685 m!160587))

(declare-fun m!160589 () Bool)

(assert (=> b!134839 m!160589))

(declare-fun m!160591 () Bool)

(assert (=> b!134840 m!160591))

(assert (=> b!133340 d!41685))

(declare-fun d!41687 () Bool)

(declare-fun res!64805 () Bool)

(declare-fun e!87817 () Bool)

(assert (=> d!41687 (=> res!64805 e!87817)))

(assert (=> d!41687 (= res!64805 (and ((_ is Cons!1731) (toList!869 lt!69407)) (= (_1!1314 (h!2336 (toList!869 lt!69407))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(assert (=> d!41687 (= (containsKey!175 (toList!869 lt!69407) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) e!87817)))

(declare-fun b!134841 () Bool)

(declare-fun e!87818 () Bool)

(assert (=> b!134841 (= e!87817 e!87818)))

(declare-fun res!64806 () Bool)

(assert (=> b!134841 (=> (not res!64806) (not e!87818))))

(assert (=> b!134841 (= res!64806 (and (or (not ((_ is Cons!1731) (toList!869 lt!69407))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69407))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) ((_ is Cons!1731) (toList!869 lt!69407)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69407))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun b!134842 () Bool)

(assert (=> b!134842 (= e!87818 (containsKey!175 (t!6198 (toList!869 lt!69407)) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!41687 (not res!64805)) b!134841))

(assert (= (and b!134841 res!64806) b!134842))

(declare-fun m!160593 () Bool)

(assert (=> b!134842 m!160593))

(assert (=> d!40771 d!41687))

(declare-fun bm!14847 () Bool)

(declare-fun call!14850 () List!1735)

(declare-fun call!14851 () List!1735)

(assert (=> bm!14847 (= call!14850 call!14851)))

(declare-fun b!134843 () Bool)

(declare-fun e!87821 () Bool)

(declare-fun lt!70617 () List!1735)

(assert (=> b!134843 (= e!87821 (contains!898 lt!70617 (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!134844 () Bool)

(declare-fun e!87823 () List!1735)

(assert (=> b!134844 (= e!87823 call!14851)))

(declare-fun b!134845 () Bool)

(declare-fun res!64807 () Bool)

(assert (=> b!134845 (=> (not res!64807) (not e!87821))))

(assert (=> b!134845 (= res!64807 (containsKey!175 lt!70617 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!134846 () Bool)

(declare-fun e!87819 () List!1735)

(assert (=> b!134846 (= e!87819 (insertStrictlySorted!90 (t!6198 (t!6198 (toList!869 call!14566))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!134847 () Bool)

(declare-fun e!87820 () List!1735)

(assert (=> b!134847 (= e!87820 call!14850)))

(declare-fun bm!14848 () Bool)

(declare-fun call!14852 () List!1735)

(assert (=> bm!14848 (= call!14851 call!14852)))

(declare-fun c!25137 () Bool)

(declare-fun c!25139 () Bool)

(declare-fun b!134849 () Bool)

(assert (=> b!134849 (= e!87819 (ite c!25139 (t!6198 (t!6198 (toList!869 call!14566))) (ite c!25137 (Cons!1731 (h!2336 (t!6198 (toList!869 call!14566))) (t!6198 (t!6198 (toList!869 call!14566)))) Nil!1732)))))

(declare-fun b!134850 () Bool)

(declare-fun e!87822 () List!1735)

(assert (=> b!134850 (= e!87822 call!14852)))

(declare-fun b!134851 () Bool)

(assert (=> b!134851 (= c!25137 (and ((_ is Cons!1731) (t!6198 (toList!869 call!14566))) (bvsgt (_1!1314 (h!2336 (t!6198 (toList!869 call!14566)))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> b!134851 (= e!87823 e!87820)))

(declare-fun d!41689 () Bool)

(assert (=> d!41689 e!87821))

(declare-fun res!64808 () Bool)

(assert (=> d!41689 (=> (not res!64808) (not e!87821))))

(assert (=> d!41689 (= res!64808 (isStrictlySorted!317 lt!70617))))

(assert (=> d!41689 (= lt!70617 e!87822)))

(declare-fun c!25138 () Bool)

(assert (=> d!41689 (= c!25138 (and ((_ is Cons!1731) (t!6198 (toList!869 call!14566))) (bvslt (_1!1314 (h!2336 (t!6198 (toList!869 call!14566)))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!41689 (isStrictlySorted!317 (t!6198 (toList!869 call!14566)))))

(assert (=> d!41689 (= (insertStrictlySorted!90 (t!6198 (toList!869 call!14566)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!70617)))

(declare-fun b!134848 () Bool)

(assert (=> b!134848 (= e!87822 e!87823)))

(assert (=> b!134848 (= c!25139 (and ((_ is Cons!1731) (t!6198 (toList!869 call!14566))) (= (_1!1314 (h!2336 (t!6198 (toList!869 call!14566)))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!134852 () Bool)

(assert (=> b!134852 (= e!87820 call!14850)))

(declare-fun bm!14849 () Bool)

(assert (=> bm!14849 (= call!14852 ($colon$colon!91 e!87819 (ite c!25138 (h!2336 (t!6198 (toList!869 call!14566))) (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!25140 () Bool)

(assert (=> bm!14849 (= c!25140 c!25138)))

(assert (= (and d!41689 c!25138) b!134850))

(assert (= (and d!41689 (not c!25138)) b!134848))

(assert (= (and b!134848 c!25139) b!134844))

(assert (= (and b!134848 (not c!25139)) b!134851))

(assert (= (and b!134851 c!25137) b!134852))

(assert (= (and b!134851 (not c!25137)) b!134847))

(assert (= (or b!134852 b!134847) bm!14847))

(assert (= (or b!134844 bm!14847) bm!14848))

(assert (= (or b!134850 bm!14848) bm!14849))

(assert (= (and bm!14849 c!25140) b!134846))

(assert (= (and bm!14849 (not c!25140)) b!134849))

(assert (= (and d!41689 res!64808) b!134845))

(assert (= (and b!134845 res!64807) b!134843))

(declare-fun m!160595 () Bool)

(assert (=> b!134845 m!160595))

(declare-fun m!160597 () Bool)

(assert (=> b!134843 m!160597))

(declare-fun m!160599 () Bool)

(assert (=> d!41689 m!160599))

(declare-fun m!160601 () Bool)

(assert (=> d!41689 m!160601))

(declare-fun m!160603 () Bool)

(assert (=> bm!14849 m!160603))

(declare-fun m!160605 () Bool)

(assert (=> b!134846 m!160605))

(assert (=> b!133709 d!41689))

(declare-fun b!134853 () Bool)

(declare-fun e!87824 () Option!177)

(assert (=> b!134853 (= e!87824 (Some!176 (_2!1314 (h!2336 (toList!869 lt!70040)))))))

(declare-fun b!134856 () Bool)

(declare-fun e!87825 () Option!177)

(assert (=> b!134856 (= e!87825 None!175)))

(declare-fun b!134855 () Bool)

(assert (=> b!134855 (= e!87825 (getValueByKey!171 (t!6198 (toList!869 lt!70040)) (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!134854 () Bool)

(assert (=> b!134854 (= e!87824 e!87825)))

(declare-fun c!25142 () Bool)

(assert (=> b!134854 (= c!25142 (and ((_ is Cons!1731) (toList!869 lt!70040)) (not (= (_1!1314 (h!2336 (toList!869 lt!70040))) (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))))

(declare-fun c!25141 () Bool)

(declare-fun d!41691 () Bool)

(assert (=> d!41691 (= c!25141 (and ((_ is Cons!1731) (toList!869 lt!70040)) (= (_1!1314 (h!2336 (toList!869 lt!70040))) (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (=> d!41691 (= (getValueByKey!171 (toList!869 lt!70040) (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) e!87824)))

(assert (= (and d!41691 c!25141) b!134853))

(assert (= (and d!41691 (not c!25141)) b!134854))

(assert (= (and b!134854 c!25142) b!134855))

(assert (= (and b!134854 (not c!25142)) b!134856))

(declare-fun m!160607 () Bool)

(assert (=> b!134855 m!160607))

(assert (=> b!133759 d!41691))

(declare-fun d!41693 () Bool)

(assert (=> d!41693 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) lt!69422))))

(declare-fun lt!70618 () Unit!4150)

(assert (=> d!41693 (= lt!70618 (choose!831 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) lt!69422))))

(declare-fun e!87826 () Bool)

(assert (=> d!41693 e!87826))

(declare-fun res!64809 () Bool)

(assert (=> d!41693 (=> (not res!64809) (not e!87826))))

(assert (=> d!41693 (= res!64809 (isStrictlySorted!317 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))))))

(assert (=> d!41693 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) lt!69422) lt!70618)))

(declare-fun b!134857 () Bool)

(assert (=> b!134857 (= e!87826 (containsKey!175 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) lt!69422))))

(assert (= (and d!41693 res!64809) b!134857))

(assert (=> d!41693 m!157575))

(assert (=> d!41693 m!157575))

(assert (=> d!41693 m!157577))

(declare-fun m!160609 () Bool)

(assert (=> d!41693 m!160609))

(declare-fun m!160611 () Bool)

(assert (=> d!41693 m!160611))

(assert (=> b!134857 m!157571))

(assert (=> b!133421 d!41693))

(declare-fun d!41695 () Bool)

(assert (=> d!41695 (= (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) lt!69422)) (not (isEmpty!415 (getValueByKey!171 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) lt!69422))))))

(declare-fun bs!5653 () Bool)

(assert (= bs!5653 d!41695))

(assert (=> bs!5653 m!157575))

(declare-fun m!160613 () Bool)

(assert (=> bs!5653 m!160613))

(assert (=> b!133421 d!41695))

(declare-fun b!134858 () Bool)

(declare-fun e!87827 () Option!177)

(assert (=> b!134858 (= e!87827 (Some!176 (_2!1314 (h!2336 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))))))))

(declare-fun b!134861 () Bool)

(declare-fun e!87828 () Option!177)

(assert (=> b!134861 (= e!87828 None!175)))

(declare-fun b!134860 () Bool)

(assert (=> b!134860 (= e!87828 (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))) lt!69422))))

(declare-fun b!134859 () Bool)

(assert (=> b!134859 (= e!87827 e!87828)))

(declare-fun c!25144 () Bool)

(assert (=> b!134859 (= c!25144 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))) (not (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))) lt!69422))))))

(declare-fun c!25143 () Bool)

(declare-fun d!41697 () Bool)

(assert (=> d!41697 (= c!25143 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))) lt!69422)))))

(assert (=> d!41697 (= (getValueByKey!171 (toList!869 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) lt!69422) e!87827)))

(assert (= (and d!41697 c!25143) b!134858))

(assert (= (and d!41697 (not c!25143)) b!134859))

(assert (= (and b!134859 c!25144) b!134860))

(assert (= (and b!134859 (not c!25144)) b!134861))

(declare-fun m!160615 () Bool)

(assert (=> b!134860 m!160615))

(assert (=> b!133421 d!41697))

(declare-fun d!41699 () Bool)

(declare-fun res!64810 () Bool)

(declare-fun e!87829 () Bool)

(assert (=> d!41699 (=> res!64810 e!87829)))

(assert (=> d!41699 (= res!64810 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69221))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69221)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41699 (= (containsKey!175 (t!6198 (toList!869 lt!69221)) #b0000000000000000000000000000000000000000000000000000000000000000) e!87829)))

(declare-fun b!134862 () Bool)

(declare-fun e!87830 () Bool)

(assert (=> b!134862 (= e!87829 e!87830)))

(declare-fun res!64811 () Bool)

(assert (=> b!134862 (=> (not res!64811) (not e!87830))))

(assert (=> b!134862 (= res!64811 (and (or (not ((_ is Cons!1731) (t!6198 (toList!869 lt!69221)))) (bvsle (_1!1314 (h!2336 (t!6198 (toList!869 lt!69221)))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1731) (t!6198 (toList!869 lt!69221))) (bvslt (_1!1314 (h!2336 (t!6198 (toList!869 lt!69221)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134863 () Bool)

(assert (=> b!134863 (= e!87830 (containsKey!175 (t!6198 (t!6198 (toList!869 lt!69221))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41699 (not res!64810)) b!134862))

(assert (= (and b!134862 res!64811) b!134863))

(declare-fun m!160617 () Bool)

(assert (=> b!134863 m!160617))

(assert (=> b!133994 d!41699))

(assert (=> d!40555 d!40475))

(assert (=> d!40511 d!40475))

(declare-fun d!41701 () Bool)

(assert (=> d!41701 (= (apply!116 lt!69822 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1491 (getValueByKey!171 (toList!869 lt!69822) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5654 () Bool)

(assert (= bs!5654 d!41701))

(assert (=> bs!5654 m!156533))

(declare-fun m!160619 () Bool)

(assert (=> bs!5654 m!160619))

(assert (=> bs!5654 m!160619))

(declare-fun m!160621 () Bool)

(assert (=> bs!5654 m!160621))

(assert (=> b!133412 d!41701))

(assert (=> b!133412 d!40923))

(declare-fun d!41703 () Bool)

(declare-fun res!64812 () Bool)

(declare-fun e!87831 () Bool)

(assert (=> d!41703 (=> res!64812 e!87831)))

(assert (=> d!41703 (= res!64812 (and ((_ is Cons!1731) (toList!869 lt!69442)) (= (_1!1314 (h!2336 (toList!869 lt!69442))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!41703 (= (containsKey!175 (toList!869 lt!69442) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!87831)))

(declare-fun b!134864 () Bool)

(declare-fun e!87832 () Bool)

(assert (=> b!134864 (= e!87831 e!87832)))

(declare-fun res!64813 () Bool)

(assert (=> b!134864 (=> (not res!64813) (not e!87832))))

(assert (=> b!134864 (= res!64813 (and (or (not ((_ is Cons!1731) (toList!869 lt!69442))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69442))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) ((_ is Cons!1731) (toList!869 lt!69442)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69442))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!134865 () Bool)

(assert (=> b!134865 (= e!87832 (containsKey!175 (t!6198 (toList!869 lt!69442)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!41703 (not res!64812)) b!134864))

(assert (= (and b!134864 res!64813) b!134865))

(declare-fun m!160623 () Bool)

(assert (=> b!134865 m!160623))

(assert (=> d!40747 d!41703))

(declare-fun d!41705 () Bool)

(declare-fun res!64814 () Bool)

(declare-fun e!87833 () Bool)

(assert (=> d!41705 (=> res!64814 e!87833)))

(assert (=> d!41705 (= res!64814 (and ((_ is Cons!1731) lt!69959) (= (_1!1314 (h!2336 lt!69959)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41705 (= (containsKey!175 lt!69959 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87833)))

(declare-fun b!134866 () Bool)

(declare-fun e!87834 () Bool)

(assert (=> b!134866 (= e!87833 e!87834)))

(declare-fun res!64815 () Bool)

(assert (=> b!134866 (=> (not res!64815) (not e!87834))))

(assert (=> b!134866 (= res!64815 (and (or (not ((_ is Cons!1731) lt!69959)) (bvsle (_1!1314 (h!2336 lt!69959)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1731) lt!69959) (bvslt (_1!1314 (h!2336 lt!69959)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134867 () Bool)

(assert (=> b!134867 (= e!87834 (containsKey!175 (t!6198 lt!69959) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!41705 (not res!64814)) b!134866))

(assert (= (and b!134866 res!64815) b!134867))

(declare-fun m!160625 () Bool)

(assert (=> b!134867 m!160625))

(assert (=> b!133620 d!41705))

(declare-fun b!134868 () Bool)

(declare-fun e!87836 () (_ BitVec 32))

(assert (=> b!134868 (= e!87836 #b00000000000000000000000000000000)))

(declare-fun d!41707 () Bool)

(declare-fun lt!70619 () (_ BitVec 32))

(assert (=> d!41707 (and (bvsge lt!70619 #b00000000000000000000000000000000) (bvsle lt!70619 (bvsub (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!41707 (= lt!70619 e!87836)))

(declare-fun c!25146 () Bool)

(assert (=> d!41707 (= c!25146 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!41707 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2529 (_keys!4614 newMap!16)) (size!2529 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))))))))

(assert (=> d!41707 (= (arrayCountValidKeys!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))) lt!70619)))

(declare-fun b!134869 () Bool)

(declare-fun e!87835 () (_ BitVec 32))

(declare-fun call!14853 () (_ BitVec 32))

(assert (=> b!134869 (= e!87835 call!14853)))

(declare-fun b!134870 () Bool)

(assert (=> b!134870 (= e!87835 (bvadd #b00000000000000000000000000000001 call!14853))))

(declare-fun bm!14850 () Bool)

(assert (=> bm!14850 (= call!14853 (arrayCountValidKeys!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!134871 () Bool)

(assert (=> b!134871 (= e!87836 e!87835)))

(declare-fun c!25145 () Bool)

(assert (=> b!134871 (= c!25145 (validKeyInArray!0 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!41707 c!25146) b!134868))

(assert (= (and d!41707 (not c!25146)) b!134871))

(assert (= (and b!134871 c!25145) b!134870))

(assert (= (and b!134871 (not c!25145)) b!134869))

(assert (= (or b!134870 b!134869) bm!14850))

(declare-fun m!160627 () Bool)

(assert (=> bm!14850 m!160627))

(assert (=> b!134871 m!159007))

(assert (=> b!134871 m!159007))

(assert (=> b!134871 m!159015))

(assert (=> bm!14777 d!41707))

(declare-fun d!41709 () Bool)

(declare-fun lt!70620 () Bool)

(assert (=> d!41709 (= lt!70620 (select (content!132 (toList!869 lt!69720)) (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun e!87838 () Bool)

(assert (=> d!41709 (= lt!70620 e!87838)))

(declare-fun res!64816 () Bool)

(assert (=> d!41709 (=> (not res!64816) (not e!87838))))

(assert (=> d!41709 (= res!64816 ((_ is Cons!1731) (toList!869 lt!69720)))))

(assert (=> d!41709 (= (contains!898 (toList!869 lt!69720) (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70620)))

(declare-fun b!134872 () Bool)

(declare-fun e!87837 () Bool)

(assert (=> b!134872 (= e!87838 e!87837)))

(declare-fun res!64817 () Bool)

(assert (=> b!134872 (=> res!64817 e!87837)))

(assert (=> b!134872 (= res!64817 (= (h!2336 (toList!869 lt!69720)) (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134873 () Bool)

(assert (=> b!134873 (= e!87837 (contains!898 (t!6198 (toList!869 lt!69720)) (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (= (and d!41709 res!64816) b!134872))

(assert (= (and b!134872 (not res!64817)) b!134873))

(declare-fun m!160629 () Bool)

(assert (=> d!41709 m!160629))

(declare-fun m!160631 () Bool)

(assert (=> d!41709 m!160631))

(declare-fun m!160633 () Bool)

(assert (=> b!134873 m!160633))

(assert (=> b!133269 d!41709))

(assert (=> d!40551 d!40475))

(declare-fun d!41711 () Bool)

(declare-fun res!64818 () Bool)

(declare-fun e!87839 () Bool)

(assert (=> d!41711 (=> res!64818 e!87839)))

(assert (=> d!41711 (= res!64818 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))) lt!69516)))))

(assert (=> d!41711 (= (containsKey!175 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69516) e!87839)))

(declare-fun b!134874 () Bool)

(declare-fun e!87840 () Bool)

(assert (=> b!134874 (= e!87839 e!87840)))

(declare-fun res!64819 () Bool)

(assert (=> b!134874 (=> (not res!64819) (not e!87840))))

(assert (=> b!134874 (= res!64819 (and (or (not ((_ is Cons!1731) (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))) (bvsle (_1!1314 (h!2336 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))) lt!69516)) ((_ is Cons!1731) (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))) (bvslt (_1!1314 (h!2336 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))) lt!69516)))))

(declare-fun b!134875 () Bool)

(assert (=> b!134875 (= e!87840 (containsKey!175 (t!6198 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))) lt!69516))))

(assert (= (and d!41711 (not res!64818)) b!134874))

(assert (= (and b!134874 res!64819) b!134875))

(declare-fun m!160635 () Bool)

(assert (=> b!134875 m!160635))

(assert (=> d!40787 d!41711))

(declare-fun d!41713 () Bool)

(declare-fun lt!70621 () Bool)

(assert (=> d!41713 (= lt!70621 (select (content!131 (ite c!24562 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!87841 () Bool)

(assert (=> d!41713 (= lt!70621 e!87841)))

(declare-fun res!64820 () Bool)

(assert (=> d!41713 (=> (not res!64820) (not e!87841))))

(assert (=> d!41713 (= res!64820 ((_ is Cons!1732) (ite c!24562 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1733) Nil!1733)))))

(assert (=> d!41713 (= (contains!897 (ite c!24562 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1733) Nil!1733) (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) lt!70621)))

(declare-fun b!134876 () Bool)

(declare-fun e!87842 () Bool)

(assert (=> b!134876 (= e!87841 e!87842)))

(declare-fun res!64821 () Bool)

(assert (=> b!134876 (=> res!64821 e!87842)))

(assert (=> b!134876 (= res!64821 (= (h!2337 (ite c!24562 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!134877 () Bool)

(assert (=> b!134877 (= e!87842 (contains!897 (t!6199 (ite c!24562 (Cons!1732 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!41713 res!64820) b!134876))

(assert (= (and b!134876 (not res!64821)) b!134877))

(declare-fun m!160637 () Bool)

(assert (=> d!41713 m!160637))

(assert (=> d!41713 m!157187))

(declare-fun m!160639 () Bool)

(assert (=> d!41713 m!160639))

(assert (=> b!134877 m!157187))

(declare-fun m!160641 () Bool)

(assert (=> b!134877 m!160641))

(assert (=> b!133319 d!41713))

(assert (=> d!40885 d!40877))

(declare-fun d!41715 () Bool)

(assert (=> d!41715 (arrayContainsKey!0 lt!69597 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!41715 true))

(declare-fun _$60!364 () Unit!4150)

(assert (=> d!41715 (= (choose!13 lt!69597 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))) _$60!364)))

(declare-fun bs!5655 () Bool)

(assert (= bs!5655 d!41715))

(assert (=> bs!5655 m!156287))

(assert (=> bs!5655 m!156981))

(assert (=> d!40885 d!41715))

(declare-fun d!41717 () Bool)

(assert (=> d!41717 (= (isEmpty!416 (toList!869 lt!69405)) ((_ is Nil!1732) (toList!869 lt!69405)))))

(assert (=> d!40765 d!41717))

(declare-fun d!41719 () Bool)

(declare-fun c!25147 () Bool)

(assert (=> d!41719 (= c!25147 ((_ is Nil!1732) (toList!869 lt!69442)))))

(declare-fun e!87843 () (InoxSet tuple2!2608))

(assert (=> d!41719 (= (content!132 (toList!869 lt!69442)) e!87843)))

(declare-fun b!134878 () Bool)

(assert (=> b!134878 (= e!87843 ((as const (Array tuple2!2608 Bool)) false))))

(declare-fun b!134879 () Bool)

(assert (=> b!134879 (= e!87843 ((_ map or) (store ((as const (Array tuple2!2608 Bool)) false) (h!2336 (toList!869 lt!69442)) true) (content!132 (t!6198 (toList!869 lt!69442)))))))

(assert (= (and d!41719 c!25147) b!134878))

(assert (= (and d!41719 (not c!25147)) b!134879))

(declare-fun m!160643 () Bool)

(assert (=> b!134879 m!160643))

(assert (=> b!134879 m!160107))

(assert (=> d!40713 d!41719))

(assert (=> d!40891 d!40475))

(declare-fun d!41721 () Bool)

(assert (=> d!41721 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69225) lt!69223)) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69225) lt!69223))))))

(declare-fun bs!5656 () Bool)

(assert (= bs!5656 d!41721))

(assert (=> bs!5656 m!156825))

(declare-fun m!160645 () Bool)

(assert (=> bs!5656 m!160645))

(assert (=> b!133862 d!41721))

(assert (=> b!133862 d!40609))

(declare-fun d!41723 () Bool)

(declare-fun e!87844 () Bool)

(assert (=> d!41723 e!87844))

(declare-fun res!64822 () Bool)

(assert (=> d!41723 (=> res!64822 e!87844)))

(declare-fun lt!70622 () Bool)

(assert (=> d!41723 (= res!64822 (not lt!70622))))

(declare-fun lt!70624 () Bool)

(assert (=> d!41723 (= lt!70622 lt!70624)))

(declare-fun lt!70623 () Unit!4150)

(declare-fun e!87845 () Unit!4150)

(assert (=> d!41723 (= lt!70623 e!87845)))

(declare-fun c!25148 () Bool)

(assert (=> d!41723 (= c!25148 lt!70624)))

(assert (=> d!41723 (= lt!70624 (containsKey!175 (toList!869 lt!69988) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41723 (= (contains!896 lt!69988 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70622)))

(declare-fun b!134880 () Bool)

(declare-fun lt!70625 () Unit!4150)

(assert (=> b!134880 (= e!87845 lt!70625)))

(assert (=> b!134880 (= lt!70625 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69988) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134880 (isDefined!125 (getValueByKey!171 (toList!869 lt!69988) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134881 () Bool)

(declare-fun Unit!4240 () Unit!4150)

(assert (=> b!134881 (= e!87845 Unit!4240)))

(declare-fun b!134882 () Bool)

(assert (=> b!134882 (= e!87844 (isDefined!125 (getValueByKey!171 (toList!869 lt!69988) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41723 c!25148) b!134880))

(assert (= (and d!41723 (not c!25148)) b!134881))

(assert (= (and d!41723 (not res!64822)) b!134882))

(declare-fun m!160647 () Bool)

(assert (=> d!41723 m!160647))

(declare-fun m!160649 () Bool)

(assert (=> b!134880 m!160649))

(declare-fun m!160651 () Bool)

(assert (=> b!134880 m!160651))

(assert (=> b!134880 m!160651))

(declare-fun m!160653 () Bool)

(assert (=> b!134880 m!160653))

(assert (=> b!134882 m!160651))

(assert (=> b!134882 m!160651))

(assert (=> b!134882 m!160653))

(assert (=> d!40725 d!41723))

(assert (=> d!40725 d!40267))

(declare-fun d!41725 () Bool)

(declare-fun res!64823 () Bool)

(declare-fun e!87846 () Bool)

(assert (=> d!41725 (=> res!64823 e!87846)))

(assert (=> d!41725 (= res!64823 (and ((_ is Cons!1731) (t!6198 (toList!869 call!14628))) (= (_1!1314 (h!2336 (t!6198 (toList!869 call!14628)))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))))))

(assert (=> d!41725 (= (containsKey!175 (t!6198 (toList!869 call!14628)) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))) e!87846)))

(declare-fun b!134883 () Bool)

(declare-fun e!87847 () Bool)

(assert (=> b!134883 (= e!87846 e!87847)))

(declare-fun res!64824 () Bool)

(assert (=> b!134883 (=> (not res!64824) (not e!87847))))

(assert (=> b!134883 (= res!64824 (and (or (not ((_ is Cons!1731) (t!6198 (toList!869 call!14628)))) (bvsle (_1!1314 (h!2336 (t!6198 (toList!869 call!14628)))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))) ((_ is Cons!1731) (t!6198 (toList!869 call!14628))) (bvslt (_1!1314 (h!2336 (t!6198 (toList!869 call!14628)))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))))))

(declare-fun b!134884 () Bool)

(assert (=> b!134884 (= e!87847 (containsKey!175 (t!6198 (t!6198 (toList!869 call!14628))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(assert (= (and d!41725 (not res!64823)) b!134883))

(assert (= (and b!134883 res!64824) b!134884))

(assert (=> b!134884 m!156425))

(declare-fun m!160655 () Bool)

(assert (=> b!134884 m!160655))

(assert (=> b!133578 d!41725))

(declare-fun b!134885 () Bool)

(declare-fun e!87848 () Option!177)

(assert (=> b!134885 (= e!87848 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 lt!69407))))))))

(declare-fun b!134888 () Bool)

(declare-fun e!87849 () Option!177)

(assert (=> b!134888 (= e!87849 None!175)))

(declare-fun b!134887 () Bool)

(assert (=> b!134887 (= e!87849 (getValueByKey!171 (t!6198 (t!6198 (toList!869 lt!69407))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!134886 () Bool)

(assert (=> b!134886 (= e!87848 e!87849)))

(declare-fun c!25150 () Bool)

(assert (=> b!134886 (= c!25150 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69407))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69407)))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))))

(declare-fun d!41727 () Bool)

(declare-fun c!25149 () Bool)

(assert (=> d!41727 (= c!25149 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69407))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69407)))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(assert (=> d!41727 (= (getValueByKey!171 (t!6198 (toList!869 lt!69407)) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) e!87848)))

(assert (= (and d!41727 c!25149) b!134885))

(assert (= (and d!41727 (not c!25149)) b!134886))

(assert (= (and b!134886 c!25150) b!134887))

(assert (= (and b!134886 (not c!25150)) b!134888))

(declare-fun m!160657 () Bool)

(assert (=> b!134887 m!160657))

(assert (=> b!133828 d!41727))

(assert (=> b!133246 d!41577))

(assert (=> b!133246 d!41579))

(declare-fun b!134889 () Bool)

(declare-fun e!87851 () SeekEntryResult!285)

(declare-fun e!87852 () SeekEntryResult!285)

(assert (=> b!134889 (= e!87851 e!87852)))

(declare-fun c!25151 () Bool)

(declare-fun lt!70626 () (_ BitVec 64))

(assert (=> b!134889 (= c!25151 (= lt!70626 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!134890 () Bool)

(assert (=> b!134890 (= e!87852 (Found!285 (nextIndex!0 (index!3302 lt!69644) (x!15602 lt!69644) (mask!7165 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!134891 () Bool)

(declare-fun e!87850 () SeekEntryResult!285)

(assert (=> b!134891 (= e!87850 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15602 lt!69644) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (index!3302 lt!69644) (x!15602 lt!69644) (mask!7165 (v!3197 (underlying!454 thiss!992)))) (bvadd (x!15602 lt!69644) #b00000000000000000000000000000001) (mask!7165 (v!3197 (underlying!454 thiss!992)))) (index!3302 lt!69644) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun b!134892 () Bool)

(assert (=> b!134892 (= e!87850 (MissingVacant!285 (index!3302 lt!69644)))))

(declare-fun b!134893 () Bool)

(declare-fun c!25153 () Bool)

(assert (=> b!134893 (= c!25153 (= lt!70626 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134893 (= e!87852 e!87850)))

(declare-fun d!41729 () Bool)

(declare-fun lt!70627 () SeekEntryResult!285)

(assert (=> d!41729 (and (or ((_ is Undefined!285) lt!70627) (not ((_ is Found!285) lt!70627)) (and (bvsge (index!3301 lt!70627) #b00000000000000000000000000000000) (bvslt (index!3301 lt!70627) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))) (or ((_ is Undefined!285) lt!70627) ((_ is Found!285) lt!70627) (not ((_ is MissingVacant!285) lt!70627)) (not (= (index!3303 lt!70627) (index!3302 lt!69644))) (and (bvsge (index!3303 lt!70627) #b00000000000000000000000000000000) (bvslt (index!3303 lt!70627) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))) (or ((_ is Undefined!285) lt!70627) (ite ((_ is Found!285) lt!70627) (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3301 lt!70627)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)) (and ((_ is MissingVacant!285) lt!70627) (= (index!3303 lt!70627) (index!3302 lt!69644)) (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3303 lt!70627)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!41729 (= lt!70627 e!87851)))

(declare-fun c!25152 () Bool)

(assert (=> d!41729 (= c!25152 (bvsge (bvadd (x!15602 lt!69644) #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(assert (=> d!41729 (= lt!70626 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (nextIndex!0 (index!3302 lt!69644) (x!15602 lt!69644) (mask!7165 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!41729 (validMask!0 (mask!7165 (v!3197 (underlying!454 thiss!992))))))

(assert (=> d!41729 (= (seekKeyOrZeroReturnVacant!0 (bvadd (x!15602 lt!69644) #b00000000000000000000000000000001) (nextIndex!0 (index!3302 lt!69644) (x!15602 lt!69644) (mask!7165 (v!3197 (underlying!454 thiss!992)))) (index!3302 lt!69644) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))) lt!70627)))

(declare-fun b!134894 () Bool)

(assert (=> b!134894 (= e!87851 Undefined!285)))

(assert (= (and d!41729 c!25152) b!134894))

(assert (= (and d!41729 (not c!25152)) b!134889))

(assert (= (and b!134889 c!25151) b!134890))

(assert (= (and b!134889 (not c!25151)) b!134893))

(assert (= (and b!134893 c!25153) b!134892))

(assert (= (and b!134893 (not c!25153)) b!134891))

(assert (=> b!134891 m!157463))

(declare-fun m!160659 () Bool)

(assert (=> b!134891 m!160659))

(assert (=> b!134891 m!160659))

(assert (=> b!134891 m!156487))

(declare-fun m!160661 () Bool)

(assert (=> b!134891 m!160661))

(declare-fun m!160663 () Bool)

(assert (=> d!41729 m!160663))

(declare-fun m!160665 () Bool)

(assert (=> d!41729 m!160665))

(assert (=> d!41729 m!157463))

(declare-fun m!160667 () Bool)

(assert (=> d!41729 m!160667))

(assert (=> d!41729 m!156295))

(assert (=> b!133369 d!41729))

(declare-fun d!41731 () Bool)

(declare-fun lt!70628 () (_ BitVec 32))

(assert (=> d!41731 (and (bvsge lt!70628 #b00000000000000000000000000000000) (bvslt lt!70628 (bvadd (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000001)))))

(assert (=> d!41731 (= lt!70628 (choose!52 (index!3302 lt!69644) (x!15602 lt!69644) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(assert (=> d!41731 (validMask!0 (mask!7165 (v!3197 (underlying!454 thiss!992))))))

(assert (=> d!41731 (= (nextIndex!0 (index!3302 lt!69644) (x!15602 lt!69644) (mask!7165 (v!3197 (underlying!454 thiss!992)))) lt!70628)))

(declare-fun bs!5657 () Bool)

(assert (= bs!5657 d!41731))

(declare-fun m!160669 () Bool)

(assert (=> bs!5657 m!160669))

(assert (=> bs!5657 m!156295))

(assert (=> b!133369 d!41731))

(declare-fun d!41733 () Bool)

(assert (=> d!41733 (= (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))) (and (not (= (select (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133910 d!41733))

(declare-fun d!41735 () Bool)

(declare-fun e!87853 () Bool)

(assert (=> d!41735 e!87853))

(declare-fun res!64826 () Bool)

(assert (=> d!41735 (=> (not res!64826) (not e!87853))))

(declare-fun lt!70630 () ListLongMap!1707)

(assert (=> d!41735 (= res!64826 (contains!896 lt!70630 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun lt!70632 () List!1735)

(assert (=> d!41735 (= lt!70630 (ListLongMap!1708 lt!70632))))

(declare-fun lt!70631 () Unit!4150)

(declare-fun lt!70629 () Unit!4150)

(assert (=> d!41735 (= lt!70631 lt!70629)))

(assert (=> d!41735 (= (getValueByKey!171 lt!70632 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!41735 (= lt!70629 (lemmaContainsTupThenGetReturnValue!88 lt!70632 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!41735 (= lt!70632 (insertStrictlySorted!90 (toList!869 call!14792) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!41735 (= (+!170 call!14792 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) lt!70630)))

(declare-fun b!134895 () Bool)

(declare-fun res!64825 () Bool)

(assert (=> b!134895 (=> (not res!64825) (not e!87853))))

(assert (=> b!134895 (= res!64825 (= (getValueByKey!171 (toList!869 lt!70630) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134896 () Bool)

(assert (=> b!134896 (= e!87853 (contains!898 (toList!869 lt!70630) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(assert (= (and d!41735 res!64826) b!134895))

(assert (= (and b!134895 res!64825) b!134896))

(declare-fun m!160671 () Bool)

(assert (=> d!41735 m!160671))

(declare-fun m!160673 () Bool)

(assert (=> d!41735 m!160673))

(declare-fun m!160675 () Bool)

(assert (=> d!41735 m!160675))

(declare-fun m!160677 () Bool)

(assert (=> d!41735 m!160677))

(declare-fun m!160679 () Bool)

(assert (=> b!134895 m!160679))

(declare-fun m!160681 () Bool)

(assert (=> b!134896 m!160681))

(assert (=> b!133947 d!41735))

(declare-fun d!41737 () Bool)

(assert (=> d!41737 (isDefined!125 (getValueByKey!171 (toList!869 lt!69510) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!70633 () Unit!4150)

(assert (=> d!41737 (= lt!70633 (choose!831 (toList!869 lt!69510) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!87854 () Bool)

(assert (=> d!41737 e!87854))

(declare-fun res!64827 () Bool)

(assert (=> d!41737 (=> (not res!64827) (not e!87854))))

(assert (=> d!41737 (= res!64827 (isStrictlySorted!317 (toList!869 lt!69510)))))

(assert (=> d!41737 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69510) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70633)))

(declare-fun b!134897 () Bool)

(assert (=> b!134897 (= e!87854 (containsKey!175 (toList!869 lt!69510) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41737 res!64827) b!134897))

(assert (=> d!41737 m!156533))

(assert (=> d!41737 m!157183))

(assert (=> d!41737 m!157183))

(assert (=> d!41737 m!157185))

(assert (=> d!41737 m!156533))

(declare-fun m!160683 () Bool)

(assert (=> d!41737 m!160683))

(assert (=> d!41737 m!160375))

(assert (=> b!134897 m!156533))

(assert (=> b!134897 m!157179))

(assert (=> b!133231 d!41737))

(assert (=> b!133231 d!40961))

(assert (=> b!133231 d!40963))

(declare-fun d!41739 () Bool)

(declare-fun e!87855 () Bool)

(assert (=> d!41739 e!87855))

(declare-fun res!64828 () Bool)

(assert (=> d!41739 (=> res!64828 e!87855)))

(declare-fun lt!70634 () Bool)

(assert (=> d!41739 (= res!64828 (not lt!70634))))

(declare-fun lt!70636 () Bool)

(assert (=> d!41739 (= lt!70634 lt!70636)))

(declare-fun lt!70635 () Unit!4150)

(declare-fun e!87856 () Unit!4150)

(assert (=> d!41739 (= lt!70635 e!87856)))

(declare-fun c!25154 () Bool)

(assert (=> d!41739 (= c!25154 lt!70636)))

(assert (=> d!41739 (= lt!70636 (containsKey!175 (toList!869 lt!70055) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!41739 (= (contains!896 lt!70055 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70634)))

(declare-fun b!134898 () Bool)

(declare-fun lt!70637 () Unit!4150)

(assert (=> b!134898 (= e!87856 lt!70637)))

(assert (=> b!134898 (= lt!70637 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!70055) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> b!134898 (isDefined!125 (getValueByKey!171 (toList!869 lt!70055) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134899 () Bool)

(declare-fun Unit!4241 () Unit!4150)

(assert (=> b!134899 (= e!87856 Unit!4241)))

(declare-fun b!134900 () Bool)

(assert (=> b!134900 (= e!87855 (isDefined!125 (getValueByKey!171 (toList!869 lt!70055) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (= (and d!41739 c!25154) b!134898))

(assert (= (and d!41739 (not c!25154)) b!134899))

(assert (= (and d!41739 (not res!64828)) b!134900))

(declare-fun m!160685 () Bool)

(assert (=> d!41739 m!160685))

(declare-fun m!160687 () Bool)

(assert (=> b!134898 m!160687))

(assert (=> b!134898 m!158401))

(assert (=> b!134898 m!158401))

(declare-fun m!160689 () Bool)

(assert (=> b!134898 m!160689))

(assert (=> b!134900 m!158401))

(assert (=> b!134900 m!158401))

(assert (=> b!134900 m!160689))

(assert (=> d!40819 d!41739))

(declare-fun b!134901 () Bool)

(declare-fun e!87857 () Option!177)

(assert (=> b!134901 (= e!87857 (Some!176 (_2!1314 (h!2336 lt!70057))))))

(declare-fun b!134904 () Bool)

(declare-fun e!87858 () Option!177)

(assert (=> b!134904 (= e!87858 None!175)))

(declare-fun b!134903 () Bool)

(assert (=> b!134903 (= e!87858 (getValueByKey!171 (t!6198 lt!70057) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134902 () Bool)

(assert (=> b!134902 (= e!87857 e!87858)))

(declare-fun c!25156 () Bool)

(assert (=> b!134902 (= c!25156 (and ((_ is Cons!1731) lt!70057) (not (= (_1!1314 (h!2336 lt!70057)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun d!41741 () Bool)

(declare-fun c!25155 () Bool)

(assert (=> d!41741 (= c!25155 (and ((_ is Cons!1731) lt!70057) (= (_1!1314 (h!2336 lt!70057)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!41741 (= (getValueByKey!171 lt!70057 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) e!87857)))

(assert (= (and d!41741 c!25155) b!134901))

(assert (= (and d!41741 (not c!25155)) b!134902))

(assert (= (and b!134902 c!25156) b!134903))

(assert (= (and b!134902 (not c!25156)) b!134904))

(declare-fun m!160691 () Bool)

(assert (=> b!134903 m!160691))

(assert (=> d!40819 d!41741))

(declare-fun d!41743 () Bool)

(assert (=> d!41743 (= (getValueByKey!171 lt!70057 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun lt!70638 () Unit!4150)

(assert (=> d!41743 (= lt!70638 (choose!834 lt!70057 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun e!87859 () Bool)

(assert (=> d!41743 e!87859))

(declare-fun res!64829 () Bool)

(assert (=> d!41743 (=> (not res!64829) (not e!87859))))

(assert (=> d!41743 (= res!64829 (isStrictlySorted!317 lt!70057))))

(assert (=> d!41743 (= (lemmaContainsTupThenGetReturnValue!88 lt!70057 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70638)))

(declare-fun b!134905 () Bool)

(declare-fun res!64830 () Bool)

(assert (=> b!134905 (=> (not res!64830) (not e!87859))))

(assert (=> b!134905 (= res!64830 (containsKey!175 lt!70057 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134906 () Bool)

(assert (=> b!134906 (= e!87859 (contains!898 lt!70057 (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (= (and d!41743 res!64829) b!134905))

(assert (= (and b!134905 res!64830) b!134906))

(assert (=> d!41743 m!158395))

(declare-fun m!160693 () Bool)

(assert (=> d!41743 m!160693))

(declare-fun m!160695 () Bool)

(assert (=> d!41743 m!160695))

(declare-fun m!160697 () Bool)

(assert (=> b!134905 m!160697))

(declare-fun m!160699 () Bool)

(assert (=> b!134906 m!160699))

(assert (=> d!40819 d!41743))

(declare-fun bm!14851 () Bool)

(declare-fun call!14854 () List!1735)

(declare-fun call!14855 () List!1735)

(assert (=> bm!14851 (= call!14854 call!14855)))

(declare-fun b!134907 () Bool)

(declare-fun lt!70639 () List!1735)

(declare-fun e!87862 () Bool)

(assert (=> b!134907 (= e!87862 (contains!898 lt!70639 (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!134908 () Bool)

(declare-fun e!87864 () List!1735)

(assert (=> b!134908 (= e!87864 call!14855)))

(declare-fun b!134909 () Bool)

(declare-fun res!64831 () Bool)

(assert (=> b!134909 (=> (not res!64831) (not e!87862))))

(assert (=> b!134909 (= res!64831 (containsKey!175 lt!70639 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134910 () Bool)

(declare-fun e!87860 () List!1735)

(assert (=> b!134910 (= e!87860 (insertStrictlySorted!90 (t!6198 (toList!869 call!14672)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134911 () Bool)

(declare-fun e!87861 () List!1735)

(assert (=> b!134911 (= e!87861 call!14854)))

(declare-fun bm!14852 () Bool)

(declare-fun call!14856 () List!1735)

(assert (=> bm!14852 (= call!14855 call!14856)))

(declare-fun c!25157 () Bool)

(declare-fun b!134913 () Bool)

(declare-fun c!25159 () Bool)

(assert (=> b!134913 (= e!87860 (ite c!25159 (t!6198 (toList!869 call!14672)) (ite c!25157 (Cons!1731 (h!2336 (toList!869 call!14672)) (t!6198 (toList!869 call!14672))) Nil!1732)))))

(declare-fun b!134914 () Bool)

(declare-fun e!87863 () List!1735)

(assert (=> b!134914 (= e!87863 call!14856)))

(declare-fun b!134915 () Bool)

(assert (=> b!134915 (= c!25157 (and ((_ is Cons!1731) (toList!869 call!14672)) (bvsgt (_1!1314 (h!2336 (toList!869 call!14672))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> b!134915 (= e!87864 e!87861)))

(declare-fun d!41745 () Bool)

(assert (=> d!41745 e!87862))

(declare-fun res!64832 () Bool)

(assert (=> d!41745 (=> (not res!64832) (not e!87862))))

(assert (=> d!41745 (= res!64832 (isStrictlySorted!317 lt!70639))))

(assert (=> d!41745 (= lt!70639 e!87863)))

(declare-fun c!25158 () Bool)

(assert (=> d!41745 (= c!25158 (and ((_ is Cons!1731) (toList!869 call!14672)) (bvslt (_1!1314 (h!2336 (toList!869 call!14672))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!41745 (isStrictlySorted!317 (toList!869 call!14672))))

(assert (=> d!41745 (= (insertStrictlySorted!90 (toList!869 call!14672) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70639)))

(declare-fun b!134912 () Bool)

(assert (=> b!134912 (= e!87863 e!87864)))

(assert (=> b!134912 (= c!25159 (and ((_ is Cons!1731) (toList!869 call!14672)) (= (_1!1314 (h!2336 (toList!869 call!14672))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!134916 () Bool)

(assert (=> b!134916 (= e!87861 call!14854)))

(declare-fun bm!14853 () Bool)

(assert (=> bm!14853 (= call!14856 ($colon$colon!91 e!87860 (ite c!25158 (h!2336 (toList!869 call!14672)) (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun c!25160 () Bool)

(assert (=> bm!14853 (= c!25160 c!25158)))

(assert (= (and d!41745 c!25158) b!134914))

(assert (= (and d!41745 (not c!25158)) b!134912))

(assert (= (and b!134912 c!25159) b!134908))

(assert (= (and b!134912 (not c!25159)) b!134915))

(assert (= (and b!134915 c!25157) b!134916))

(assert (= (and b!134915 (not c!25157)) b!134911))

(assert (= (or b!134916 b!134911) bm!14851))

(assert (= (or b!134908 bm!14851) bm!14852))

(assert (= (or b!134914 bm!14852) bm!14853))

(assert (= (and bm!14853 c!25160) b!134910))

(assert (= (and bm!14853 (not c!25160)) b!134913))

(assert (= (and d!41745 res!64832) b!134909))

(assert (= (and b!134909 res!64831) b!134907))

(declare-fun m!160701 () Bool)

(assert (=> b!134909 m!160701))

(declare-fun m!160703 () Bool)

(assert (=> b!134907 m!160703))

(declare-fun m!160705 () Bool)

(assert (=> d!41745 m!160705))

(declare-fun m!160707 () Bool)

(assert (=> d!41745 m!160707))

(declare-fun m!160709 () Bool)

(assert (=> bm!14853 m!160709))

(declare-fun m!160711 () Bool)

(assert (=> b!134910 m!160711))

(assert (=> d!40819 d!41745))

(declare-fun d!41747 () Bool)

(declare-fun res!64833 () Bool)

(declare-fun e!87865 () Bool)

(assert (=> d!41747 (=> res!64833 e!87865)))

(assert (=> d!41747 (= res!64833 (and ((_ is Cons!1731) lt!69358) (= (_1!1314 (h!2336 lt!69358)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41747 (= (containsKey!175 lt!69358 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87865)))

(declare-fun b!134917 () Bool)

(declare-fun e!87866 () Bool)

(assert (=> b!134917 (= e!87865 e!87866)))

(declare-fun res!64834 () Bool)

(assert (=> b!134917 (=> (not res!64834) (not e!87866))))

(assert (=> b!134917 (= res!64834 (and (or (not ((_ is Cons!1731) lt!69358)) (bvsle (_1!1314 (h!2336 lt!69358)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1731) lt!69358) (bvslt (_1!1314 (h!2336 lt!69358)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134918 () Bool)

(assert (=> b!134918 (= e!87866 (containsKey!175 (t!6198 lt!69358) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!41747 (not res!64833)) b!134917))

(assert (= (and b!134917 res!64834) b!134918))

(declare-fun m!160713 () Bool)

(assert (=> b!134918 m!160713))

(assert (=> b!133616 d!41747))

(declare-fun d!41749 () Bool)

(declare-fun e!87867 () Bool)

(assert (=> d!41749 e!87867))

(declare-fun res!64835 () Bool)

(assert (=> d!41749 (=> res!64835 e!87867)))

(declare-fun lt!70640 () Bool)

(assert (=> d!41749 (= res!64835 (not lt!70640))))

(declare-fun lt!70642 () Bool)

(assert (=> d!41749 (= lt!70640 lt!70642)))

(declare-fun lt!70641 () Unit!4150)

(declare-fun e!87868 () Unit!4150)

(assert (=> d!41749 (= lt!70641 e!87868)))

(declare-fun c!25161 () Bool)

(assert (=> d!41749 (= c!25161 lt!70642)))

(assert (=> d!41749 (= lt!70642 (containsKey!175 (toList!869 lt!69767) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41749 (= (contains!896 lt!69767 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70640)))

(declare-fun b!134919 () Bool)

(declare-fun lt!70643 () Unit!4150)

(assert (=> b!134919 (= e!87868 lt!70643)))

(assert (=> b!134919 (= lt!70643 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69767) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134919 (isDefined!125 (getValueByKey!171 (toList!869 lt!69767) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134920 () Bool)

(declare-fun Unit!4242 () Unit!4150)

(assert (=> b!134920 (= e!87868 Unit!4242)))

(declare-fun b!134921 () Bool)

(assert (=> b!134921 (= e!87867 (isDefined!125 (getValueByKey!171 (toList!869 lt!69767) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41749 c!25161) b!134919))

(assert (= (and d!41749 (not c!25161)) b!134920))

(assert (= (and d!41749 (not res!64835)) b!134921))

(declare-fun m!160715 () Bool)

(assert (=> d!41749 m!160715))

(declare-fun m!160717 () Bool)

(assert (=> b!134919 m!160717))

(assert (=> b!134919 m!160245))

(assert (=> b!134919 m!160245))

(declare-fun m!160719 () Bool)

(assert (=> b!134919 m!160719))

(assert (=> b!134921 m!160245))

(assert (=> b!134921 m!160245))

(assert (=> b!134921 m!160719))

(assert (=> bm!14725 d!41749))

(declare-fun d!41751 () Bool)

(declare-fun res!64836 () Bool)

(declare-fun e!87869 () Bool)

(assert (=> d!41751 (=> res!64836 e!87869)))

(assert (=> d!41751 (= res!64836 (and ((_ is Cons!1731) lt!70073) (= (_1!1314 (h!2336 lt!70073)) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!41751 (= (containsKey!175 lt!70073 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!87869)))

(declare-fun b!134922 () Bool)

(declare-fun e!87870 () Bool)

(assert (=> b!134922 (= e!87869 e!87870)))

(declare-fun res!64837 () Bool)

(assert (=> b!134922 (=> (not res!64837) (not e!87870))))

(assert (=> b!134922 (= res!64837 (and (or (not ((_ is Cons!1731) lt!70073)) (bvsle (_1!1314 (h!2336 lt!70073)) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) ((_ is Cons!1731) lt!70073) (bvslt (_1!1314 (h!2336 lt!70073)) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!134923 () Bool)

(assert (=> b!134923 (= e!87870 (containsKey!175 (t!6198 lt!70073) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!41751 (not res!64836)) b!134922))

(assert (= (and b!134922 res!64837) b!134923))

(declare-fun m!160721 () Bool)

(assert (=> b!134923 m!160721))

(assert (=> b!133841 d!41751))

(declare-fun d!41753 () Bool)

(declare-fun res!64838 () Bool)

(declare-fun e!87871 () Bool)

(assert (=> d!41753 (=> res!64838 e!87871)))

(assert (=> d!41753 (= res!64838 (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!69380))))

(assert (=> d!41753 (= (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69380 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!87871)))

(declare-fun b!134924 () Bool)

(declare-fun e!87872 () Bool)

(assert (=> b!134924 (= e!87871 e!87872)))

(declare-fun res!64839 () Bool)

(assert (=> b!134924 (=> (not res!64839) (not e!87872))))

(assert (=> b!134924 (= res!64839 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!134925 () Bool)

(assert (=> b!134925 (= e!87872 (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69380 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!41753 (not res!64838)) b!134924))

(assert (= (and b!134924 res!64839) b!134925))

(assert (=> d!41753 m!156593))

(declare-fun m!160723 () Bool)

(assert (=> b!134925 m!160723))

(assert (=> b!133680 d!41753))

(declare-fun lt!70644 () Bool)

(declare-fun d!41755 () Bool)

(assert (=> d!41755 (= lt!70644 (select (content!132 lt!69409) (tuple2!2609 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun e!87874 () Bool)

(assert (=> d!41755 (= lt!70644 e!87874)))

(declare-fun res!64840 () Bool)

(assert (=> d!41755 (=> (not res!64840) (not e!87874))))

(assert (=> d!41755 (= res!64840 ((_ is Cons!1731) lt!69409))))

(assert (=> d!41755 (= (contains!898 lt!69409 (tuple2!2609 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) lt!70644)))

(declare-fun b!134926 () Bool)

(declare-fun e!87873 () Bool)

(assert (=> b!134926 (= e!87874 e!87873)))

(declare-fun res!64841 () Bool)

(assert (=> b!134926 (=> res!64841 e!87873)))

(assert (=> b!134926 (= res!64841 (= (h!2336 lt!69409) (tuple2!2609 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun b!134927 () Bool)

(assert (=> b!134927 (= e!87873 (contains!898 (t!6198 lt!69409) (tuple2!2609 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(assert (= (and d!41755 res!64840) b!134926))

(assert (= (and b!134926 (not res!64841)) b!134927))

(declare-fun m!160725 () Bool)

(assert (=> d!41755 m!160725))

(declare-fun m!160727 () Bool)

(assert (=> d!41755 m!160727))

(declare-fun m!160729 () Bool)

(assert (=> b!134927 m!160729))

(assert (=> b!133738 d!41755))

(declare-fun d!41757 () Bool)

(assert (=> d!41757 (= (get!1489 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3196 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133991 d!41757))

(declare-fun b!134928 () Bool)

(declare-fun lt!70645 () SeekEntryResult!285)

(assert (=> b!134928 (and (bvsge (index!3302 lt!70645) #b00000000000000000000000000000000) (bvslt (index!3302 lt!70645) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun res!64843 () Bool)

(assert (=> b!134928 (= res!64843 (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3302 lt!70645)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87878 () Bool)

(assert (=> b!134928 (=> res!64843 e!87878)))

(declare-fun b!134929 () Bool)

(declare-fun e!87875 () SeekEntryResult!285)

(assert (=> b!134929 (= e!87875 (Intermediate!285 true (nextIndex!0 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000 (mask!7165 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!134930 () Bool)

(declare-fun e!87876 () SeekEntryResult!285)

(assert (=> b!134930 (= e!87876 (Intermediate!285 false (nextIndex!0 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000 (mask!7165 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!134931 () Bool)

(assert (=> b!134931 (= e!87876 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000 (mask!7165 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7165 (v!3197 (underlying!454 thiss!992)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun d!41759 () Bool)

(declare-fun e!87877 () Bool)

(assert (=> d!41759 e!87877))

(declare-fun c!25163 () Bool)

(assert (=> d!41759 (= c!25163 (and ((_ is Intermediate!285) lt!70645) (undefined!1097 lt!70645)))))

(assert (=> d!41759 (= lt!70645 e!87875)))

(declare-fun c!25162 () Bool)

(assert (=> d!41759 (= c!25162 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(declare-fun lt!70646 () (_ BitVec 64))

(assert (=> d!41759 (= lt!70646 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (nextIndex!0 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000 (mask!7165 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!41759 (validMask!0 (mask!7165 (v!3197 (underlying!454 thiss!992))))))

(assert (=> d!41759 (= (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000 (mask!7165 (v!3197 (underlying!454 thiss!992)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))) lt!70645)))

(declare-fun b!134932 () Bool)

(assert (=> b!134932 (and (bvsge (index!3302 lt!70645) #b00000000000000000000000000000000) (bvslt (index!3302 lt!70645) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun res!64842 () Bool)

(assert (=> b!134932 (= res!64842 (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3302 lt!70645)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> b!134932 (=> res!64842 e!87878)))

(declare-fun e!87879 () Bool)

(assert (=> b!134932 (= e!87879 e!87878)))

(declare-fun b!134933 () Bool)

(assert (=> b!134933 (= e!87877 (bvsge (x!15602 lt!70645) #b01111111111111111111111111111110))))

(declare-fun b!134934 () Bool)

(assert (=> b!134934 (and (bvsge (index!3302 lt!70645) #b00000000000000000000000000000000) (bvslt (index!3302 lt!70645) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> b!134934 (= e!87878 (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3302 lt!70645)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134935 () Bool)

(assert (=> b!134935 (= e!87875 e!87876)))

(declare-fun c!25164 () Bool)

(assert (=> b!134935 (= c!25164 (or (= lt!70646 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)) (= (bvadd lt!70646 lt!70646) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134936 () Bool)

(assert (=> b!134936 (= e!87877 e!87879)))

(declare-fun res!64844 () Bool)

(assert (=> b!134936 (= res!64844 (and ((_ is Intermediate!285) lt!70645) (not (undefined!1097 lt!70645)) (bvslt (x!15602 lt!70645) #b01111111111111111111111111111110) (bvsge (x!15602 lt!70645) #b00000000000000000000000000000000) (bvsge (x!15602 lt!70645) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134936 (=> (not res!64844) (not e!87879))))

(assert (= (and d!41759 c!25162) b!134929))

(assert (= (and d!41759 (not c!25162)) b!134935))

(assert (= (and b!134935 c!25164) b!134930))

(assert (= (and b!134935 (not c!25164)) b!134931))

(assert (= (and d!41759 c!25163) b!134933))

(assert (= (and d!41759 (not c!25163)) b!134936))

(assert (= (and b!134936 res!64844) b!134932))

(assert (= (and b!134932 (not res!64842)) b!134928))

(assert (= (and b!134928 (not res!64843)) b!134934))

(assert (=> b!134931 m!158479))

(declare-fun m!160731 () Bool)

(assert (=> b!134931 m!160731))

(assert (=> b!134931 m!160731))

(assert (=> b!134931 m!156487))

(declare-fun m!160733 () Bool)

(assert (=> b!134931 m!160733))

(declare-fun m!160735 () Bool)

(assert (=> b!134928 m!160735))

(assert (=> b!134932 m!160735))

(assert (=> d!41759 m!158479))

(declare-fun m!160737 () Bool)

(assert (=> d!41759 m!160737))

(assert (=> d!41759 m!156295))

(assert (=> b!134934 m!160735))

(assert (=> b!133854 d!41759))

(declare-fun d!41761 () Bool)

(declare-fun lt!70647 () (_ BitVec 32))

(assert (=> d!41761 (and (bvsge lt!70647 #b00000000000000000000000000000000) (bvslt lt!70647 (bvadd (mask!7165 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000001)))))

(assert (=> d!41761 (= lt!70647 (choose!52 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000 (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(assert (=> d!41761 (validMask!0 (mask!7165 (v!3197 (underlying!454 thiss!992))))))

(assert (=> d!41761 (= (nextIndex!0 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000 (mask!7165 (v!3197 (underlying!454 thiss!992)))) lt!70647)))

(declare-fun bs!5658 () Bool)

(assert (= bs!5658 d!41761))

(assert (=> bs!5658 m!157071))

(declare-fun m!160739 () Bool)

(assert (=> bs!5658 m!160739))

(assert (=> bs!5658 m!156295))

(assert (=> b!133854 d!41761))

(declare-fun d!41763 () Bool)

(declare-fun e!87880 () Bool)

(assert (=> d!41763 e!87880))

(declare-fun res!64845 () Bool)

(assert (=> d!41763 (=> res!64845 e!87880)))

(declare-fun lt!70648 () Bool)

(assert (=> d!41763 (= res!64845 (not lt!70648))))

(declare-fun lt!70650 () Bool)

(assert (=> d!41763 (= lt!70648 lt!70650)))

(declare-fun lt!70649 () Unit!4150)

(declare-fun e!87881 () Unit!4150)

(assert (=> d!41763 (= lt!70649 e!87881)))

(declare-fun c!25165 () Bool)

(assert (=> d!41763 (= c!25165 lt!70650)))

(assert (=> d!41763 (= lt!70650 (containsKey!175 (toList!869 lt!69822) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41763 (= (contains!896 lt!69822 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70648)))

(declare-fun b!134937 () Bool)

(declare-fun lt!70651 () Unit!4150)

(assert (=> b!134937 (= e!87881 lt!70651)))

(assert (=> b!134937 (= lt!70651 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69822) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134937 (isDefined!125 (getValueByKey!171 (toList!869 lt!69822) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134938 () Bool)

(declare-fun Unit!4243 () Unit!4150)

(assert (=> b!134938 (= e!87881 Unit!4243)))

(declare-fun b!134939 () Bool)

(assert (=> b!134939 (= e!87880 (isDefined!125 (getValueByKey!171 (toList!869 lt!69822) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41763 c!25165) b!134937))

(assert (= (and d!41763 (not c!25165)) b!134938))

(assert (= (and d!41763 (not res!64845)) b!134939))

(declare-fun m!160741 () Bool)

(assert (=> d!41763 m!160741))

(declare-fun m!160743 () Bool)

(assert (=> b!134937 m!160743))

(declare-fun m!160745 () Bool)

(assert (=> b!134937 m!160745))

(assert (=> b!134937 m!160745))

(declare-fun m!160747 () Bool)

(assert (=> b!134937 m!160747))

(assert (=> b!134939 m!160745))

(assert (=> b!134939 m!160745))

(assert (=> b!134939 m!160747))

(assert (=> b!133416 d!41763))

(declare-fun b!134940 () Bool)

(declare-fun e!87882 () Option!177)

(assert (=> b!134940 (= e!87882 (Some!176 (_2!1314 (h!2336 (t!6198 lt!69474)))))))

(declare-fun b!134943 () Bool)

(declare-fun e!87883 () Option!177)

(assert (=> b!134943 (= e!87883 None!175)))

(declare-fun b!134942 () Bool)

(assert (=> b!134942 (= e!87883 (getValueByKey!171 (t!6198 (t!6198 lt!69474)) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!134941 () Bool)

(assert (=> b!134941 (= e!87882 e!87883)))

(declare-fun c!25167 () Bool)

(assert (=> b!134941 (= c!25167 (and ((_ is Cons!1731) (t!6198 lt!69474)) (not (= (_1!1314 (h!2336 (t!6198 lt!69474))) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!25166 () Bool)

(declare-fun d!41765 () Bool)

(assert (=> d!41765 (= c!25166 (and ((_ is Cons!1731) (t!6198 lt!69474)) (= (_1!1314 (h!2336 (t!6198 lt!69474))) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!41765 (= (getValueByKey!171 (t!6198 lt!69474) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!87882)))

(assert (= (and d!41765 c!25166) b!134940))

(assert (= (and d!41765 (not c!25166)) b!134941))

(assert (= (and b!134941 c!25167) b!134942))

(assert (= (and b!134941 (not c!25167)) b!134943))

(declare-fun m!160749 () Bool)

(assert (=> b!134942 m!160749))

(assert (=> b!133595 d!41765))

(declare-fun bm!14854 () Bool)

(declare-fun call!14857 () List!1735)

(declare-fun call!14858 () List!1735)

(assert (=> bm!14854 (= call!14857 call!14858)))

(declare-fun b!134944 () Bool)

(declare-fun lt!70652 () List!1735)

(declare-fun e!87886 () Bool)

(assert (=> b!134944 (= e!87886 (contains!898 lt!70652 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!134945 () Bool)

(declare-fun e!87888 () List!1735)

(assert (=> b!134945 (= e!87888 call!14858)))

(declare-fun b!134946 () Bool)

(declare-fun res!64846 () Bool)

(assert (=> b!134946 (=> (not res!64846) (not e!87886))))

(assert (=> b!134946 (= res!64846 (containsKey!175 lt!70652 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!134947 () Bool)

(declare-fun e!87884 () List!1735)

(assert (=> b!134947 (= e!87884 (insertStrictlySorted!90 (t!6198 (t!6198 (toList!869 lt!69229))) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!134948 () Bool)

(declare-fun e!87885 () List!1735)

(assert (=> b!134948 (= e!87885 call!14857)))

(declare-fun bm!14855 () Bool)

(declare-fun call!14859 () List!1735)

(assert (=> bm!14855 (= call!14858 call!14859)))

(declare-fun b!134950 () Bool)

(declare-fun c!25168 () Bool)

(declare-fun c!25170 () Bool)

(assert (=> b!134950 (= e!87884 (ite c!25170 (t!6198 (t!6198 (toList!869 lt!69229))) (ite c!25168 (Cons!1731 (h!2336 (t!6198 (toList!869 lt!69229))) (t!6198 (t!6198 (toList!869 lt!69229)))) Nil!1732)))))

(declare-fun b!134951 () Bool)

(declare-fun e!87887 () List!1735)

(assert (=> b!134951 (= e!87887 call!14859)))

(declare-fun b!134952 () Bool)

(assert (=> b!134952 (= c!25168 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69229))) (bvsgt (_1!1314 (h!2336 (t!6198 (toList!869 lt!69229)))) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> b!134952 (= e!87888 e!87885)))

(declare-fun d!41767 () Bool)

(assert (=> d!41767 e!87886))

(declare-fun res!64847 () Bool)

(assert (=> d!41767 (=> (not res!64847) (not e!87886))))

(assert (=> d!41767 (= res!64847 (isStrictlySorted!317 lt!70652))))

(assert (=> d!41767 (= lt!70652 e!87887)))

(declare-fun c!25169 () Bool)

(assert (=> d!41767 (= c!25169 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69229))) (bvslt (_1!1314 (h!2336 (t!6198 (toList!869 lt!69229)))) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!41767 (isStrictlySorted!317 (t!6198 (toList!869 lt!69229)))))

(assert (=> d!41767 (= (insertStrictlySorted!90 (t!6198 (toList!869 lt!69229)) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!70652)))

(declare-fun b!134949 () Bool)

(assert (=> b!134949 (= e!87887 e!87888)))

(assert (=> b!134949 (= c!25170 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69229))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69229)))) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!134953 () Bool)

(assert (=> b!134953 (= e!87885 call!14857)))

(declare-fun bm!14856 () Bool)

(assert (=> bm!14856 (= call!14859 ($colon$colon!91 e!87884 (ite c!25169 (h!2336 (t!6198 (toList!869 lt!69229))) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!25171 () Bool)

(assert (=> bm!14856 (= c!25171 c!25169)))

(assert (= (and d!41767 c!25169) b!134951))

(assert (= (and d!41767 (not c!25169)) b!134949))

(assert (= (and b!134949 c!25170) b!134945))

(assert (= (and b!134949 (not c!25170)) b!134952))

(assert (= (and b!134952 c!25168) b!134953))

(assert (= (and b!134952 (not c!25168)) b!134948))

(assert (= (or b!134953 b!134948) bm!14854))

(assert (= (or b!134945 bm!14854) bm!14855))

(assert (= (or b!134951 bm!14855) bm!14856))

(assert (= (and bm!14856 c!25171) b!134947))

(assert (= (and bm!14856 (not c!25171)) b!134950))

(assert (= (and d!41767 res!64847) b!134946))

(assert (= (and b!134946 res!64846) b!134944))

(declare-fun m!160751 () Bool)

(assert (=> b!134946 m!160751))

(declare-fun m!160753 () Bool)

(assert (=> b!134944 m!160753))

(declare-fun m!160755 () Bool)

(assert (=> d!41767 m!160755))

(assert (=> d!41767 m!160115))

(declare-fun m!160757 () Bool)

(assert (=> bm!14856 m!160757))

(declare-fun m!160759 () Bool)

(assert (=> b!134947 m!160759))

(assert (=> b!133201 d!41767))

(assert (=> bm!14771 d!40303))

(declare-fun b!134954 () Bool)

(declare-fun e!87891 () Bool)

(declare-fun e!87892 () Bool)

(assert (=> b!134954 (= e!87891 e!87892)))

(declare-fun c!25172 () Bool)

(assert (=> b!134954 (= c!25172 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!134955 () Bool)

(declare-fun call!14860 () Bool)

(assert (=> b!134955 (= e!87892 call!14860)))

(declare-fun b!134956 () Bool)

(declare-fun e!87889 () Bool)

(assert (=> b!134956 (= e!87889 (contains!897 (ite c!24765 (Cons!1732 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000) Nil!1733) Nil!1733) (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!14857 () Bool)

(assert (=> bm!14857 (= call!14860 (arrayNoDuplicates!0 (_keys!4614 (_2!1315 lt!69327)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!25172 (Cons!1732 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24765 (Cons!1732 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) (ite c!24765 (Cons!1732 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000) Nil!1733) Nil!1733))))))

(declare-fun d!41769 () Bool)

(declare-fun res!64850 () Bool)

(declare-fun e!87890 () Bool)

(assert (=> d!41769 (=> res!64850 e!87890)))

(assert (=> d!41769 (= res!64850 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(assert (=> d!41769 (= (arrayNoDuplicates!0 (_keys!4614 (_2!1315 lt!69327)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24765 (Cons!1732 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) e!87890)))

(declare-fun b!134957 () Bool)

(assert (=> b!134957 (= e!87892 call!14860)))

(declare-fun b!134958 () Bool)

(assert (=> b!134958 (= e!87890 e!87891)))

(declare-fun res!64848 () Bool)

(assert (=> b!134958 (=> (not res!64848) (not e!87891))))

(assert (=> b!134958 (= res!64848 (not e!87889))))

(declare-fun res!64849 () Bool)

(assert (=> b!134958 (=> (not res!64849) (not e!87889))))

(assert (=> b!134958 (= res!64849 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!41769 (not res!64850)) b!134958))

(assert (= (and b!134958 res!64849) b!134956))

(assert (= (and b!134958 res!64848) b!134954))

(assert (= (and b!134954 c!25172) b!134957))

(assert (= (and b!134954 (not c!25172)) b!134955))

(assert (= (or b!134957 b!134955) bm!14857))

(assert (=> b!134954 m!159355))

(assert (=> b!134954 m!159355))

(assert (=> b!134954 m!159363))

(assert (=> b!134956 m!159355))

(assert (=> b!134956 m!159355))

(declare-fun m!160761 () Bool)

(assert (=> b!134956 m!160761))

(assert (=> bm!14857 m!159355))

(declare-fun m!160763 () Bool)

(assert (=> bm!14857 m!160763))

(assert (=> b!134958 m!159355))

(assert (=> b!134958 m!159355))

(assert (=> b!134958 m!159363))

(assert (=> bm!14749 d!41769))

(declare-fun d!41771 () Bool)

(declare-fun lt!70653 () Bool)

(assert (=> d!41771 (= lt!70653 (select (content!132 lt!69444) (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun e!87894 () Bool)

(assert (=> d!41771 (= lt!70653 e!87894)))

(declare-fun res!64851 () Bool)

(assert (=> d!41771 (=> (not res!64851) (not e!87894))))

(assert (=> d!41771 (= res!64851 ((_ is Cons!1731) lt!69444))))

(assert (=> d!41771 (= (contains!898 lt!69444 (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!70653)))

(declare-fun b!134959 () Bool)

(declare-fun e!87893 () Bool)

(assert (=> b!134959 (= e!87894 e!87893)))

(declare-fun res!64852 () Bool)

(assert (=> b!134959 (=> res!64852 e!87893)))

(assert (=> b!134959 (= res!64852 (= (h!2336 lt!69444) (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!134960 () Bool)

(assert (=> b!134960 (= e!87893 (contains!898 (t!6198 lt!69444) (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!41771 res!64851) b!134959))

(assert (= (and b!134959 (not res!64852)) b!134960))

(declare-fun m!160765 () Bool)

(assert (=> d!41771 m!160765))

(declare-fun m!160767 () Bool)

(assert (=> d!41771 m!160767))

(declare-fun m!160769 () Bool)

(assert (=> b!134960 m!160769))

(assert (=> b!133705 d!41771))

(declare-fun d!41773 () Bool)

(declare-fun e!87895 () Bool)

(assert (=> d!41773 e!87895))

(declare-fun res!64853 () Bool)

(assert (=> d!41773 (=> res!64853 e!87895)))

(declare-fun lt!70654 () Bool)

(assert (=> d!41773 (= res!64853 (not lt!70654))))

(declare-fun lt!70656 () Bool)

(assert (=> d!41773 (= lt!70654 lt!70656)))

(declare-fun lt!70655 () Unit!4150)

(declare-fun e!87896 () Unit!4150)

(assert (=> d!41773 (= lt!70655 e!87896)))

(declare-fun c!25173 () Bool)

(assert (=> d!41773 (= c!25173 lt!70656)))

(assert (=> d!41773 (= lt!70656 (containsKey!175 (toList!869 lt!69679) (_1!1314 (tuple2!2609 lt!69404 lt!69402))))))

(assert (=> d!41773 (= (contains!896 lt!69679 (_1!1314 (tuple2!2609 lt!69404 lt!69402))) lt!70654)))

(declare-fun b!134961 () Bool)

(declare-fun lt!70657 () Unit!4150)

(assert (=> b!134961 (= e!87896 lt!70657)))

(assert (=> b!134961 (= lt!70657 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69679) (_1!1314 (tuple2!2609 lt!69404 lt!69402))))))

(assert (=> b!134961 (isDefined!125 (getValueByKey!171 (toList!869 lt!69679) (_1!1314 (tuple2!2609 lt!69404 lt!69402))))))

(declare-fun b!134962 () Bool)

(declare-fun Unit!4244 () Unit!4150)

(assert (=> b!134962 (= e!87896 Unit!4244)))

(declare-fun b!134963 () Bool)

(assert (=> b!134963 (= e!87895 (isDefined!125 (getValueByKey!171 (toList!869 lt!69679) (_1!1314 (tuple2!2609 lt!69404 lt!69402)))))))

(assert (= (and d!41773 c!25173) b!134961))

(assert (= (and d!41773 (not c!25173)) b!134962))

(assert (= (and d!41773 (not res!64853)) b!134963))

(declare-fun m!160771 () Bool)

(assert (=> d!41773 m!160771))

(declare-fun m!160773 () Bool)

(assert (=> b!134961 m!160773))

(assert (=> b!134961 m!157169))

(assert (=> b!134961 m!157169))

(declare-fun m!160775 () Bool)

(assert (=> b!134961 m!160775))

(assert (=> b!134963 m!157169))

(assert (=> b!134963 m!157169))

(assert (=> b!134963 m!160775))

(assert (=> d!40451 d!41773))

(declare-fun b!134964 () Bool)

(declare-fun e!87897 () Option!177)

(assert (=> b!134964 (= e!87897 (Some!176 (_2!1314 (h!2336 lt!69681))))))

(declare-fun b!134967 () Bool)

(declare-fun e!87898 () Option!177)

(assert (=> b!134967 (= e!87898 None!175)))

(declare-fun b!134966 () Bool)

(assert (=> b!134966 (= e!87898 (getValueByKey!171 (t!6198 lt!69681) (_1!1314 (tuple2!2609 lt!69404 lt!69402))))))

(declare-fun b!134965 () Bool)

(assert (=> b!134965 (= e!87897 e!87898)))

(declare-fun c!25175 () Bool)

(assert (=> b!134965 (= c!25175 (and ((_ is Cons!1731) lt!69681) (not (= (_1!1314 (h!2336 lt!69681)) (_1!1314 (tuple2!2609 lt!69404 lt!69402))))))))

(declare-fun c!25174 () Bool)

(declare-fun d!41775 () Bool)

(assert (=> d!41775 (= c!25174 (and ((_ is Cons!1731) lt!69681) (= (_1!1314 (h!2336 lt!69681)) (_1!1314 (tuple2!2609 lt!69404 lt!69402)))))))

(assert (=> d!41775 (= (getValueByKey!171 lt!69681 (_1!1314 (tuple2!2609 lt!69404 lt!69402))) e!87897)))

(assert (= (and d!41775 c!25174) b!134964))

(assert (= (and d!41775 (not c!25174)) b!134965))

(assert (= (and b!134965 c!25175) b!134966))

(assert (= (and b!134965 (not c!25175)) b!134967))

(declare-fun m!160777 () Bool)

(assert (=> b!134966 m!160777))

(assert (=> d!40451 d!41775))

(declare-fun d!41777 () Bool)

(assert (=> d!41777 (= (getValueByKey!171 lt!69681 (_1!1314 (tuple2!2609 lt!69404 lt!69402))) (Some!176 (_2!1314 (tuple2!2609 lt!69404 lt!69402))))))

(declare-fun lt!70658 () Unit!4150)

(assert (=> d!41777 (= lt!70658 (choose!834 lt!69681 (_1!1314 (tuple2!2609 lt!69404 lt!69402)) (_2!1314 (tuple2!2609 lt!69404 lt!69402))))))

(declare-fun e!87899 () Bool)

(assert (=> d!41777 e!87899))

(declare-fun res!64854 () Bool)

(assert (=> d!41777 (=> (not res!64854) (not e!87899))))

(assert (=> d!41777 (= res!64854 (isStrictlySorted!317 lt!69681))))

(assert (=> d!41777 (= (lemmaContainsTupThenGetReturnValue!88 lt!69681 (_1!1314 (tuple2!2609 lt!69404 lt!69402)) (_2!1314 (tuple2!2609 lt!69404 lt!69402))) lt!70658)))

(declare-fun b!134968 () Bool)

(declare-fun res!64855 () Bool)

(assert (=> b!134968 (=> (not res!64855) (not e!87899))))

(assert (=> b!134968 (= res!64855 (containsKey!175 lt!69681 (_1!1314 (tuple2!2609 lt!69404 lt!69402))))))

(declare-fun b!134969 () Bool)

(assert (=> b!134969 (= e!87899 (contains!898 lt!69681 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69404 lt!69402)) (_2!1314 (tuple2!2609 lt!69404 lt!69402)))))))

(assert (= (and d!41777 res!64854) b!134968))

(assert (= (and b!134968 res!64855) b!134969))

(assert (=> d!41777 m!157163))

(declare-fun m!160779 () Bool)

(assert (=> d!41777 m!160779))

(declare-fun m!160781 () Bool)

(assert (=> d!41777 m!160781))

(declare-fun m!160783 () Bool)

(assert (=> b!134968 m!160783))

(declare-fun m!160785 () Bool)

(assert (=> b!134969 m!160785))

(assert (=> d!40451 d!41777))

(declare-fun bm!14858 () Bool)

(declare-fun call!14861 () List!1735)

(declare-fun call!14862 () List!1735)

(assert (=> bm!14858 (= call!14861 call!14862)))

(declare-fun b!134970 () Bool)

(declare-fun e!87902 () Bool)

(declare-fun lt!70659 () List!1735)

(assert (=> b!134970 (= e!87902 (contains!898 lt!70659 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69404 lt!69402)) (_2!1314 (tuple2!2609 lt!69404 lt!69402)))))))

(declare-fun b!134971 () Bool)

(declare-fun e!87904 () List!1735)

(assert (=> b!134971 (= e!87904 call!14862)))

(declare-fun b!134972 () Bool)

(declare-fun res!64856 () Bool)

(assert (=> b!134972 (=> (not res!64856) (not e!87902))))

(assert (=> b!134972 (= res!64856 (containsKey!175 lt!70659 (_1!1314 (tuple2!2609 lt!69404 lt!69402))))))

(declare-fun b!134973 () Bool)

(declare-fun e!87900 () List!1735)

(assert (=> b!134973 (= e!87900 (insertStrictlySorted!90 (t!6198 (toList!869 lt!69400)) (_1!1314 (tuple2!2609 lt!69404 lt!69402)) (_2!1314 (tuple2!2609 lt!69404 lt!69402))))))

(declare-fun b!134974 () Bool)

(declare-fun e!87901 () List!1735)

(assert (=> b!134974 (= e!87901 call!14861)))

(declare-fun bm!14859 () Bool)

(declare-fun call!14863 () List!1735)

(assert (=> bm!14859 (= call!14862 call!14863)))

(declare-fun c!25178 () Bool)

(declare-fun c!25176 () Bool)

(declare-fun b!134976 () Bool)

(assert (=> b!134976 (= e!87900 (ite c!25178 (t!6198 (toList!869 lt!69400)) (ite c!25176 (Cons!1731 (h!2336 (toList!869 lt!69400)) (t!6198 (toList!869 lt!69400))) Nil!1732)))))

(declare-fun b!134977 () Bool)

(declare-fun e!87903 () List!1735)

(assert (=> b!134977 (= e!87903 call!14863)))

(declare-fun b!134978 () Bool)

(assert (=> b!134978 (= c!25176 (and ((_ is Cons!1731) (toList!869 lt!69400)) (bvsgt (_1!1314 (h!2336 (toList!869 lt!69400))) (_1!1314 (tuple2!2609 lt!69404 lt!69402)))))))

(assert (=> b!134978 (= e!87904 e!87901)))

(declare-fun d!41779 () Bool)

(assert (=> d!41779 e!87902))

(declare-fun res!64857 () Bool)

(assert (=> d!41779 (=> (not res!64857) (not e!87902))))

(assert (=> d!41779 (= res!64857 (isStrictlySorted!317 lt!70659))))

(assert (=> d!41779 (= lt!70659 e!87903)))

(declare-fun c!25177 () Bool)

(assert (=> d!41779 (= c!25177 (and ((_ is Cons!1731) (toList!869 lt!69400)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69400))) (_1!1314 (tuple2!2609 lt!69404 lt!69402)))))))

(assert (=> d!41779 (isStrictlySorted!317 (toList!869 lt!69400))))

(assert (=> d!41779 (= (insertStrictlySorted!90 (toList!869 lt!69400) (_1!1314 (tuple2!2609 lt!69404 lt!69402)) (_2!1314 (tuple2!2609 lt!69404 lt!69402))) lt!70659)))

(declare-fun b!134975 () Bool)

(assert (=> b!134975 (= e!87903 e!87904)))

(assert (=> b!134975 (= c!25178 (and ((_ is Cons!1731) (toList!869 lt!69400)) (= (_1!1314 (h!2336 (toList!869 lt!69400))) (_1!1314 (tuple2!2609 lt!69404 lt!69402)))))))

(declare-fun b!134979 () Bool)

(assert (=> b!134979 (= e!87901 call!14861)))

(declare-fun bm!14860 () Bool)

(assert (=> bm!14860 (= call!14863 ($colon$colon!91 e!87900 (ite c!25177 (h!2336 (toList!869 lt!69400)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69404 lt!69402)) (_2!1314 (tuple2!2609 lt!69404 lt!69402))))))))

(declare-fun c!25179 () Bool)

(assert (=> bm!14860 (= c!25179 c!25177)))

(assert (= (and d!41779 c!25177) b!134977))

(assert (= (and d!41779 (not c!25177)) b!134975))

(assert (= (and b!134975 c!25178) b!134971))

(assert (= (and b!134975 (not c!25178)) b!134978))

(assert (= (and b!134978 c!25176) b!134979))

(assert (= (and b!134978 (not c!25176)) b!134974))

(assert (= (or b!134979 b!134974) bm!14858))

(assert (= (or b!134971 bm!14858) bm!14859))

(assert (= (or b!134977 bm!14859) bm!14860))

(assert (= (and bm!14860 c!25179) b!134973))

(assert (= (and bm!14860 (not c!25179)) b!134976))

(assert (= (and d!41779 res!64857) b!134972))

(assert (= (and b!134972 res!64856) b!134970))

(declare-fun m!160787 () Bool)

(assert (=> b!134972 m!160787))

(declare-fun m!160789 () Bool)

(assert (=> b!134970 m!160789))

(declare-fun m!160791 () Bool)

(assert (=> d!41779 m!160791))

(declare-fun m!160793 () Bool)

(assert (=> d!41779 m!160793))

(declare-fun m!160795 () Bool)

(assert (=> bm!14860 m!160795))

(declare-fun m!160797 () Bool)

(assert (=> b!134973 m!160797))

(assert (=> d!40451 d!41779))

(declare-fun d!41781 () Bool)

(declare-fun res!64858 () Bool)

(declare-fun e!87905 () Bool)

(assert (=> d!41781 (=> res!64858 e!87905)))

(assert (=> d!41781 (= res!64858 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69221))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69221)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41781 (= (containsKey!175 (t!6198 (toList!869 lt!69221)) #b1000000000000000000000000000000000000000000000000000000000000000) e!87905)))

(declare-fun b!134980 () Bool)

(declare-fun e!87906 () Bool)

(assert (=> b!134980 (= e!87905 e!87906)))

(declare-fun res!64859 () Bool)

(assert (=> b!134980 (=> (not res!64859) (not e!87906))))

(assert (=> b!134980 (= res!64859 (and (or (not ((_ is Cons!1731) (t!6198 (toList!869 lt!69221)))) (bvsle (_1!1314 (h!2336 (t!6198 (toList!869 lt!69221)))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1731) (t!6198 (toList!869 lt!69221))) (bvslt (_1!1314 (h!2336 (t!6198 (toList!869 lt!69221)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134981 () Bool)

(assert (=> b!134981 (= e!87906 (containsKey!175 (t!6198 (t!6198 (toList!869 lt!69221))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41781 (not res!64858)) b!134980))

(assert (= (and b!134980 res!64859) b!134981))

(declare-fun m!160799 () Bool)

(assert (=> b!134981 m!160799))

(assert (=> b!133160 d!41781))

(declare-fun b!134982 () Bool)

(declare-fun e!87907 () Option!177)

(assert (=> b!134982 (= e!87907 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69830)))))))

(declare-fun b!134985 () Bool)

(declare-fun e!87908 () Option!177)

(assert (=> b!134985 (= e!87908 None!175)))

(declare-fun b!134984 () Bool)

(assert (=> b!134984 (= e!87908 (getValueByKey!171 (t!6198 (toList!869 lt!69830)) (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))))

(declare-fun b!134983 () Bool)

(assert (=> b!134983 (= e!87907 e!87908)))

(declare-fun c!25181 () Bool)

(assert (=> b!134983 (= c!25181 (and ((_ is Cons!1731) (toList!869 lt!69830)) (not (= (_1!1314 (h!2336 (toList!869 lt!69830))) (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))))))

(declare-fun d!41783 () Bool)

(declare-fun c!25180 () Bool)

(assert (=> d!41783 (= c!25180 (and ((_ is Cons!1731) (toList!869 lt!69830)) (= (_1!1314 (h!2336 (toList!869 lt!69830))) (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))))))))

(assert (=> d!41783 (= (getValueByKey!171 (toList!869 lt!69830) (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))) e!87907)))

(assert (= (and d!41783 c!25180) b!134982))

(assert (= (and d!41783 (not c!25180)) b!134983))

(assert (= (and b!134983 c!25181) b!134984))

(assert (= (and b!134983 (not c!25181)) b!134985))

(declare-fun m!160801 () Bool)

(assert (=> b!134984 m!160801))

(assert (=> b!133424 d!41783))

(declare-fun d!41785 () Bool)

(assert (=> d!41785 (isDefined!125 (getValueByKey!171 (toList!869 lt!69488) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70660 () Unit!4150)

(assert (=> d!41785 (= lt!70660 (choose!831 (toList!869 lt!69488) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87909 () Bool)

(assert (=> d!41785 e!87909))

(declare-fun res!64860 () Bool)

(assert (=> d!41785 (=> (not res!64860) (not e!87909))))

(assert (=> d!41785 (= res!64860 (isStrictlySorted!317 (toList!869 lt!69488)))))

(assert (=> d!41785 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69488) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70660)))

(declare-fun b!134986 () Bool)

(assert (=> b!134986 (= e!87909 (containsKey!175 (toList!869 lt!69488) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41785 res!64860) b!134986))

(assert (=> d!41785 m!158057))

(assert (=> d!41785 m!158057))

(assert (=> d!41785 m!158689))

(declare-fun m!160803 () Bool)

(assert (=> d!41785 m!160803))

(assert (=> d!41785 m!159947))

(assert (=> b!134986 m!158685))

(assert (=> b!133963 d!41785))

(assert (=> b!133963 d!41069))

(assert (=> b!133963 d!41071))

(declare-fun d!41787 () Bool)

(assert (=> d!41787 (isDefined!125 (getValueByKey!171 (toList!869 lt!69217) lt!69227))))

(declare-fun lt!70661 () Unit!4150)

(assert (=> d!41787 (= lt!70661 (choose!831 (toList!869 lt!69217) lt!69227))))

(declare-fun e!87910 () Bool)

(assert (=> d!41787 e!87910))

(declare-fun res!64861 () Bool)

(assert (=> d!41787 (=> (not res!64861) (not e!87910))))

(assert (=> d!41787 (= res!64861 (isStrictlySorted!317 (toList!869 lt!69217)))))

(assert (=> d!41787 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69217) lt!69227) lt!70661)))

(declare-fun b!134987 () Bool)

(assert (=> b!134987 (= e!87910 (containsKey!175 (toList!869 lt!69217) lt!69227))))

(assert (= (and d!41787 res!64861) b!134987))

(assert (=> d!41787 m!158065))

(assert (=> d!41787 m!158065))

(assert (=> d!41787 m!158067))

(declare-fun m!160805 () Bool)

(assert (=> d!41787 m!160805))

(assert (=> d!41787 m!158009))

(assert (=> b!134987 m!158061))

(assert (=> b!133634 d!41787))

(assert (=> b!133634 d!41027))

(assert (=> b!133634 d!41029))

(declare-fun d!41789 () Bool)

(assert (=> d!41789 (isDefined!125 (getValueByKey!171 (toList!869 lt!69472) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun lt!70662 () Unit!4150)

(assert (=> d!41789 (= lt!70662 (choose!831 (toList!869 lt!69472) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun e!87911 () Bool)

(assert (=> d!41789 e!87911))

(declare-fun res!64862 () Bool)

(assert (=> d!41789 (=> (not res!64862) (not e!87911))))

(assert (=> d!41789 (= res!64862 (isStrictlySorted!317 (toList!869 lt!69472)))))

(assert (=> d!41789 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69472) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!70662)))

(declare-fun b!134988 () Bool)

(assert (=> b!134988 (= e!87911 (containsKey!175 (toList!869 lt!69472) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!41789 res!64862) b!134988))

(assert (=> d!41789 m!156817))

(assert (=> d!41789 m!156817))

(assert (=> d!41789 m!157991))

(declare-fun m!160807 () Bool)

(assert (=> d!41789 m!160807))

(declare-fun m!160809 () Bool)

(assert (=> d!41789 m!160809))

(assert (=> b!134988 m!157987))

(assert (=> b!133590 d!41789))

(assert (=> b!133590 d!41035))

(assert (=> b!133590 d!40667))

(assert (=> d!40853 d!40267))

(declare-fun d!41791 () Bool)

(declare-fun e!87912 () Bool)

(assert (=> d!41791 e!87912))

(declare-fun res!64863 () Bool)

(assert (=> d!41791 (=> res!64863 e!87912)))

(declare-fun lt!70663 () Bool)

(assert (=> d!41791 (= res!64863 (not lt!70663))))

(declare-fun lt!70665 () Bool)

(assert (=> d!41791 (= lt!70663 lt!70665)))

(declare-fun lt!70664 () Unit!4150)

(declare-fun e!87913 () Unit!4150)

(assert (=> d!41791 (= lt!70664 e!87913)))

(declare-fun c!25182 () Bool)

(assert (=> d!41791 (= c!25182 lt!70665)))

(assert (=> d!41791 (= lt!70665 (containsKey!175 (toList!869 lt!69893) (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41791 (= (contains!896 lt!69893 (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))) lt!70663)))

(declare-fun b!134989 () Bool)

(declare-fun lt!70666 () Unit!4150)

(assert (=> b!134989 (= e!87913 lt!70666)))

(assert (=> b!134989 (= lt!70666 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69893) (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))))

(assert (=> b!134989 (isDefined!125 (getValueByKey!171 (toList!869 lt!69893) (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))))

(declare-fun b!134990 () Bool)

(declare-fun Unit!4245 () Unit!4150)

(assert (=> b!134990 (= e!87913 Unit!4245)))

(declare-fun b!134991 () Bool)

(assert (=> b!134991 (= e!87912 (isDefined!125 (getValueByKey!171 (toList!869 lt!69893) (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!41791 c!25182) b!134989))

(assert (= (and d!41791 (not c!25182)) b!134990))

(assert (= (and d!41791 (not res!64863)) b!134991))

(declare-fun m!160811 () Bool)

(assert (=> d!41791 m!160811))

(declare-fun m!160813 () Bool)

(assert (=> b!134989 m!160813))

(assert (=> b!134989 m!157761))

(assert (=> b!134989 m!157761))

(declare-fun m!160815 () Bool)

(assert (=> b!134989 m!160815))

(assert (=> b!134991 m!157761))

(assert (=> b!134991 m!157761))

(assert (=> b!134991 m!160815))

(assert (=> d!40571 d!41791))

(declare-fun b!134992 () Bool)

(declare-fun e!87914 () Option!177)

(assert (=> b!134992 (= e!87914 (Some!176 (_2!1314 (h!2336 lt!69895))))))

(declare-fun b!134995 () Bool)

(declare-fun e!87915 () Option!177)

(assert (=> b!134995 (= e!87915 None!175)))

(declare-fun b!134994 () Bool)

(assert (=> b!134994 (= e!87915 (getValueByKey!171 (t!6198 lt!69895) (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))))

(declare-fun b!134993 () Bool)

(assert (=> b!134993 (= e!87914 e!87915)))

(declare-fun c!25184 () Bool)

(assert (=> b!134993 (= c!25184 (and ((_ is Cons!1731) lt!69895) (not (= (_1!1314 (h!2336 lt!69895)) (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))))))

(declare-fun c!25183 () Bool)

(declare-fun d!41793 () Bool)

(assert (=> d!41793 (= c!25183 (and ((_ is Cons!1731) lt!69895) (= (_1!1314 (h!2336 lt!69895)) (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))))))))

(assert (=> d!41793 (= (getValueByKey!171 lt!69895 (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))) e!87914)))

(assert (= (and d!41793 c!25183) b!134992))

(assert (= (and d!41793 (not c!25183)) b!134993))

(assert (= (and b!134993 c!25184) b!134994))

(assert (= (and b!134993 (not c!25184)) b!134995))

(declare-fun m!160817 () Bool)

(assert (=> b!134994 m!160817))

(assert (=> d!40571 d!41793))

(declare-fun d!41795 () Bool)

(assert (=> d!41795 (= (getValueByKey!171 lt!69895 (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70667 () Unit!4150)

(assert (=> d!41795 (= lt!70667 (choose!834 lt!69895 (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))))

(declare-fun e!87916 () Bool)

(assert (=> d!41795 e!87916))

(declare-fun res!64864 () Bool)

(assert (=> d!41795 (=> (not res!64864) (not e!87916))))

(assert (=> d!41795 (= res!64864 (isStrictlySorted!317 lt!69895))))

(assert (=> d!41795 (= (lemmaContainsTupThenGetReturnValue!88 lt!69895 (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))) lt!70667)))

(declare-fun b!134996 () Bool)

(declare-fun res!64865 () Bool)

(assert (=> b!134996 (=> (not res!64865) (not e!87916))))

(assert (=> b!134996 (= res!64865 (containsKey!175 lt!69895 (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))))

(declare-fun b!134997 () Bool)

(assert (=> b!134997 (= e!87916 (contains!898 lt!69895 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!41795 res!64864) b!134996))

(assert (= (and b!134996 res!64865) b!134997))

(assert (=> d!41795 m!157755))

(declare-fun m!160819 () Bool)

(assert (=> d!41795 m!160819))

(declare-fun m!160821 () Bool)

(assert (=> d!41795 m!160821))

(declare-fun m!160823 () Bool)

(assert (=> b!134996 m!160823))

(declare-fun m!160825 () Bool)

(assert (=> b!134997 m!160825))

(assert (=> d!40571 d!41795))

(declare-fun bm!14861 () Bool)

(declare-fun call!14864 () List!1735)

(declare-fun call!14865 () List!1735)

(assert (=> bm!14861 (= call!14864 call!14865)))

(declare-fun e!87919 () Bool)

(declare-fun b!134998 () Bool)

(declare-fun lt!70668 () List!1735)

(assert (=> b!134998 (= e!87919 (contains!898 lt!70668 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))))))))

(declare-fun b!134999 () Bool)

(declare-fun e!87921 () List!1735)

(assert (=> b!134999 (= e!87921 call!14865)))

(declare-fun b!135000 () Bool)

(declare-fun res!64866 () Bool)

(assert (=> b!135000 (=> (not res!64866) (not e!87919))))

(assert (=> b!135000 (= res!64866 (containsKey!175 lt!70668 (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))))

(declare-fun e!87917 () List!1735)

(declare-fun b!135001 () Bool)

(assert (=> b!135001 (= e!87917 (insertStrictlySorted!90 (t!6198 (toList!869 lt!69492)) (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135002 () Bool)

(declare-fun e!87918 () List!1735)

(assert (=> b!135002 (= e!87918 call!14864)))

(declare-fun bm!14862 () Bool)

(declare-fun call!14866 () List!1735)

(assert (=> bm!14862 (= call!14865 call!14866)))

(declare-fun c!25185 () Bool)

(declare-fun c!25187 () Bool)

(declare-fun b!135004 () Bool)

(assert (=> b!135004 (= e!87917 (ite c!25187 (t!6198 (toList!869 lt!69492)) (ite c!25185 (Cons!1731 (h!2336 (toList!869 lt!69492)) (t!6198 (toList!869 lt!69492))) Nil!1732)))))

(declare-fun b!135005 () Bool)

(declare-fun e!87920 () List!1735)

(assert (=> b!135005 (= e!87920 call!14866)))

(declare-fun b!135006 () Bool)

(assert (=> b!135006 (= c!25185 (and ((_ is Cons!1731) (toList!869 lt!69492)) (bvsgt (_1!1314 (h!2336 (toList!869 lt!69492))) (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))))))))

(assert (=> b!135006 (= e!87921 e!87918)))

(declare-fun d!41797 () Bool)

(assert (=> d!41797 e!87919))

(declare-fun res!64867 () Bool)

(assert (=> d!41797 (=> (not res!64867) (not e!87919))))

(assert (=> d!41797 (= res!64867 (isStrictlySorted!317 lt!70668))))

(assert (=> d!41797 (= lt!70668 e!87920)))

(declare-fun c!25186 () Bool)

(assert (=> d!41797 (= c!25186 (and ((_ is Cons!1731) (toList!869 lt!69492)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69492))) (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))))))))

(assert (=> d!41797 (isStrictlySorted!317 (toList!869 lt!69492))))

(assert (=> d!41797 (= (insertStrictlySorted!90 (toList!869 lt!69492) (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))) lt!70668)))

(declare-fun b!135003 () Bool)

(assert (=> b!135003 (= e!87920 e!87921)))

(assert (=> b!135003 (= c!25187 (and ((_ is Cons!1731) (toList!869 lt!69492)) (= (_1!1314 (h!2336 (toList!869 lt!69492))) (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))))))))

(declare-fun b!135007 () Bool)

(assert (=> b!135007 (= e!87918 call!14864)))

(declare-fun bm!14863 () Bool)

(assert (=> bm!14863 (= call!14866 ($colon$colon!91 e!87917 (ite c!25186 (h!2336 (toList!869 lt!69492)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))))))

(declare-fun c!25188 () Bool)

(assert (=> bm!14863 (= c!25188 c!25186)))

(assert (= (and d!41797 c!25186) b!135005))

(assert (= (and d!41797 (not c!25186)) b!135003))

(assert (= (and b!135003 c!25187) b!134999))

(assert (= (and b!135003 (not c!25187)) b!135006))

(assert (= (and b!135006 c!25185) b!135007))

(assert (= (and b!135006 (not c!25185)) b!135002))

(assert (= (or b!135007 b!135002) bm!14861))

(assert (= (or b!134999 bm!14861) bm!14862))

(assert (= (or b!135005 bm!14862) bm!14863))

(assert (= (and bm!14863 c!25188) b!135001))

(assert (= (and bm!14863 (not c!25188)) b!135004))

(assert (= (and d!41797 res!64867) b!135000))

(assert (= (and b!135000 res!64866) b!134998))

(declare-fun m!160827 () Bool)

(assert (=> b!135000 m!160827))

(declare-fun m!160829 () Bool)

(assert (=> b!134998 m!160829))

(declare-fun m!160831 () Bool)

(assert (=> d!41797 m!160831))

(declare-fun m!160833 () Bool)

(assert (=> d!41797 m!160833))

(declare-fun m!160835 () Bool)

(assert (=> bm!14863 m!160835))

(declare-fun m!160837 () Bool)

(assert (=> b!135001 m!160837))

(assert (=> d!40571 d!41797))

(declare-fun d!41799 () Bool)

(declare-fun res!64868 () Bool)

(declare-fun e!87922 () Bool)

(assert (=> d!41799 (=> res!64868 e!87922)))

(assert (=> d!41799 (= res!64868 (= (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!41799 (= (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!87922)))

(declare-fun b!135008 () Bool)

(declare-fun e!87923 () Bool)

(assert (=> b!135008 (= e!87922 e!87923)))

(declare-fun res!64869 () Bool)

(assert (=> b!135008 (=> (not res!64869) (not e!87923))))

(assert (=> b!135008 (= res!64869 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!135009 () Bool)

(assert (=> b!135009 (= e!87923 (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!41799 (not res!64868)) b!135008))

(assert (= (and b!135008 res!64869) b!135009))

(assert (=> d!41799 m!159393))

(assert (=> b!135009 m!156287))

(declare-fun m!160839 () Bool)

(assert (=> b!135009 m!160839))

(assert (=> b!133571 d!41799))

(declare-fun lt!70669 () Bool)

(declare-fun d!41801 () Bool)

(assert (=> d!41801 (= lt!70669 (select (content!132 (t!6198 (toList!869 lt!69459))) (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun e!87925 () Bool)

(assert (=> d!41801 (= lt!70669 e!87925)))

(declare-fun res!64870 () Bool)

(assert (=> d!41801 (=> (not res!64870) (not e!87925))))

(assert (=> d!41801 (= res!64870 ((_ is Cons!1731) (t!6198 (toList!869 lt!69459))))))

(assert (=> d!41801 (= (contains!898 (t!6198 (toList!869 lt!69459)) (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!70669)))

(declare-fun b!135010 () Bool)

(declare-fun e!87924 () Bool)

(assert (=> b!135010 (= e!87925 e!87924)))

(declare-fun res!64871 () Bool)

(assert (=> b!135010 (=> res!64871 e!87924)))

(assert (=> b!135010 (= res!64871 (= (h!2336 (t!6198 (toList!869 lt!69459))) (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!135011 () Bool)

(assert (=> b!135011 (= e!87924 (contains!898 (t!6198 (t!6198 (toList!869 lt!69459))) (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(assert (= (and d!41801 res!64870) b!135010))

(assert (= (and b!135010 (not res!64871)) b!135011))

(declare-fun m!160841 () Bool)

(assert (=> d!41801 m!160841))

(declare-fun m!160843 () Bool)

(assert (=> d!41801 m!160843))

(declare-fun m!160845 () Bool)

(assert (=> b!135011 m!160845))

(assert (=> b!133967 d!41801))

(declare-fun b!135012 () Bool)

(declare-fun e!87926 () Option!177)

(assert (=> b!135012 (= e!87926 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 lt!69221))))))))

(declare-fun b!135015 () Bool)

(declare-fun e!87927 () Option!177)

(assert (=> b!135015 (= e!87927 None!175)))

(declare-fun b!135014 () Bool)

(assert (=> b!135014 (= e!87927 (getValueByKey!171 (t!6198 (t!6198 (toList!869 lt!69221))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135013 () Bool)

(assert (=> b!135013 (= e!87926 e!87927)))

(declare-fun c!25190 () Bool)

(assert (=> b!135013 (= c!25190 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69221))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69221)))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!41803 () Bool)

(declare-fun c!25189 () Bool)

(assert (=> d!41803 (= c!25189 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69221))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69221)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41803 (= (getValueByKey!171 (t!6198 (toList!869 lt!69221)) #b1000000000000000000000000000000000000000000000000000000000000000) e!87926)))

(assert (= (and d!41803 c!25189) b!135012))

(assert (= (and d!41803 (not c!25189)) b!135013))

(assert (= (and b!135013 c!25190) b!135014))

(assert (= (and b!135013 (not c!25190)) b!135015))

(declare-fun m!160847 () Bool)

(assert (=> b!135014 m!160847))

(assert (=> b!133163 d!41803))

(declare-fun d!41805 () Bool)

(declare-fun e!87928 () Bool)

(assert (=> d!41805 e!87928))

(declare-fun res!64872 () Bool)

(assert (=> d!41805 (=> res!64872 e!87928)))

(declare-fun lt!70670 () Bool)

(assert (=> d!41805 (= res!64872 (not lt!70670))))

(declare-fun lt!70672 () Bool)

(assert (=> d!41805 (= lt!70670 lt!70672)))

(declare-fun lt!70671 () Unit!4150)

(declare-fun e!87929 () Unit!4150)

(assert (=> d!41805 (= lt!70671 e!87929)))

(declare-fun c!25191 () Bool)

(assert (=> d!41805 (= c!25191 lt!70672)))

(assert (=> d!41805 (= lt!70672 (containsKey!175 (toList!869 lt!70046) (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))))

(assert (=> d!41805 (= (contains!896 lt!70046 (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))) lt!70670)))

(declare-fun b!135016 () Bool)

(declare-fun lt!70673 () Unit!4150)

(assert (=> b!135016 (= e!87929 lt!70673)))

(assert (=> b!135016 (= lt!70673 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!70046) (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))))

(assert (=> b!135016 (isDefined!125 (getValueByKey!171 (toList!869 lt!70046) (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))))

(declare-fun b!135017 () Bool)

(declare-fun Unit!4246 () Unit!4150)

(assert (=> b!135017 (= e!87929 Unit!4246)))

(declare-fun b!135018 () Bool)

(assert (=> b!135018 (= e!87928 (isDefined!125 (getValueByKey!171 (toList!869 lt!70046) (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))))))))

(assert (= (and d!41805 c!25191) b!135016))

(assert (= (and d!41805 (not c!25191)) b!135017))

(assert (= (and d!41805 (not res!64872)) b!135018))

(declare-fun m!160849 () Bool)

(assert (=> d!41805 m!160849))

(declare-fun m!160851 () Bool)

(assert (=> b!135016 m!160851))

(assert (=> b!135016 m!158371))

(assert (=> b!135016 m!158371))

(declare-fun m!160853 () Bool)

(assert (=> b!135016 m!160853))

(assert (=> b!135018 m!158371))

(assert (=> b!135018 m!158371))

(assert (=> b!135018 m!160853))

(assert (=> d!40811 d!41805))

(declare-fun b!135019 () Bool)

(declare-fun e!87930 () Option!177)

(assert (=> b!135019 (= e!87930 (Some!176 (_2!1314 (h!2336 lt!70048))))))

(declare-fun b!135022 () Bool)

(declare-fun e!87931 () Option!177)

(assert (=> b!135022 (= e!87931 None!175)))

(declare-fun b!135021 () Bool)

(assert (=> b!135021 (= e!87931 (getValueByKey!171 (t!6198 lt!70048) (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))))

(declare-fun b!135020 () Bool)

(assert (=> b!135020 (= e!87930 e!87931)))

(declare-fun c!25193 () Bool)

(assert (=> b!135020 (= c!25193 (and ((_ is Cons!1731) lt!70048) (not (= (_1!1314 (h!2336 lt!70048)) (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))))))

(declare-fun d!41807 () Bool)

(declare-fun c!25192 () Bool)

(assert (=> d!41807 (= c!25192 (and ((_ is Cons!1731) lt!70048) (= (_1!1314 (h!2336 lt!70048)) (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))))))))

(assert (=> d!41807 (= (getValueByKey!171 lt!70048 (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))) e!87930)))

(assert (= (and d!41807 c!25192) b!135019))

(assert (= (and d!41807 (not c!25192)) b!135020))

(assert (= (and b!135020 c!25193) b!135021))

(assert (= (and b!135020 (not c!25193)) b!135022))

(declare-fun m!160855 () Bool)

(assert (=> b!135021 m!160855))

(assert (=> d!40811 d!41807))

(declare-fun d!41809 () Bool)

(assert (=> d!41809 (= (getValueByKey!171 lt!70048 (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))))

(declare-fun lt!70674 () Unit!4150)

(assert (=> d!41809 (= lt!70674 (choose!834 lt!70048 (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))))

(declare-fun e!87932 () Bool)

(assert (=> d!41809 e!87932))

(declare-fun res!64873 () Bool)

(assert (=> d!41809 (=> (not res!64873) (not e!87932))))

(assert (=> d!41809 (= res!64873 (isStrictlySorted!317 lt!70048))))

(assert (=> d!41809 (= (lemmaContainsTupThenGetReturnValue!88 lt!70048 (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))) lt!70674)))

(declare-fun b!135023 () Bool)

(declare-fun res!64874 () Bool)

(assert (=> b!135023 (=> (not res!64874) (not e!87932))))

(assert (=> b!135023 (= res!64874 (containsKey!175 lt!70048 (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))))

(declare-fun b!135024 () Bool)

(assert (=> b!135024 (= e!87932 (contains!898 lt!70048 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))))))))

(assert (= (and d!41809 res!64873) b!135023))

(assert (= (and b!135023 res!64874) b!135024))

(assert (=> d!41809 m!158365))

(declare-fun m!160857 () Bool)

(assert (=> d!41809 m!160857))

(declare-fun m!160859 () Bool)

(assert (=> d!41809 m!160859))

(declare-fun m!160861 () Bool)

(assert (=> b!135023 m!160861))

(declare-fun m!160863 () Bool)

(assert (=> b!135024 m!160863))

(assert (=> d!40811 d!41809))

(declare-fun bm!14864 () Bool)

(declare-fun call!14867 () List!1735)

(declare-fun call!14868 () List!1735)

(assert (=> bm!14864 (= call!14867 call!14868)))

(declare-fun lt!70675 () List!1735)

(declare-fun e!87935 () Bool)

(declare-fun b!135025 () Bool)

(assert (=> b!135025 (= e!87935 (contains!898 lt!70675 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))))))))

(declare-fun b!135026 () Bool)

(declare-fun e!87937 () List!1735)

(assert (=> b!135026 (= e!87937 call!14868)))

(declare-fun b!135027 () Bool)

(declare-fun res!64875 () Bool)

(assert (=> b!135027 (=> (not res!64875) (not e!87935))))

(assert (=> b!135027 (= res!64875 (containsKey!175 lt!70675 (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))))

(declare-fun b!135028 () Bool)

(declare-fun e!87933 () List!1735)

(assert (=> b!135028 (= e!87933 (insertStrictlySorted!90 (t!6198 (toList!869 lt!69518)) (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))))

(declare-fun b!135029 () Bool)

(declare-fun e!87934 () List!1735)

(assert (=> b!135029 (= e!87934 call!14867)))

(declare-fun bm!14865 () Bool)

(declare-fun call!14869 () List!1735)

(assert (=> bm!14865 (= call!14868 call!14869)))

(declare-fun b!135031 () Bool)

(declare-fun c!25194 () Bool)

(declare-fun c!25196 () Bool)

(assert (=> b!135031 (= e!87933 (ite c!25196 (t!6198 (toList!869 lt!69518)) (ite c!25194 (Cons!1731 (h!2336 (toList!869 lt!69518)) (t!6198 (toList!869 lt!69518))) Nil!1732)))))

(declare-fun b!135032 () Bool)

(declare-fun e!87936 () List!1735)

(assert (=> b!135032 (= e!87936 call!14869)))

(declare-fun b!135033 () Bool)

(assert (=> b!135033 (= c!25194 (and ((_ is Cons!1731) (toList!869 lt!69518)) (bvsgt (_1!1314 (h!2336 (toList!869 lt!69518))) (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))))))))

(assert (=> b!135033 (= e!87937 e!87934)))

(declare-fun d!41811 () Bool)

(assert (=> d!41811 e!87935))

(declare-fun res!64876 () Bool)

(assert (=> d!41811 (=> (not res!64876) (not e!87935))))

(assert (=> d!41811 (= res!64876 (isStrictlySorted!317 lt!70675))))

(assert (=> d!41811 (= lt!70675 e!87936)))

(declare-fun c!25195 () Bool)

(assert (=> d!41811 (= c!25195 (and ((_ is Cons!1731) (toList!869 lt!69518)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69518))) (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))))))))

(assert (=> d!41811 (isStrictlySorted!317 (toList!869 lt!69518))))

(assert (=> d!41811 (= (insertStrictlySorted!90 (toList!869 lt!69518) (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))) lt!70675)))

(declare-fun b!135030 () Bool)

(assert (=> b!135030 (= e!87936 e!87937)))

(assert (=> b!135030 (= c!25196 (and ((_ is Cons!1731) (toList!869 lt!69518)) (= (_1!1314 (h!2336 (toList!869 lt!69518))) (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))))))))

(declare-fun b!135034 () Bool)

(assert (=> b!135034 (= e!87934 call!14867)))

(declare-fun bm!14866 () Bool)

(assert (=> bm!14866 (= call!14869 ($colon$colon!91 e!87933 (ite c!25195 (h!2336 (toList!869 lt!69518)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))))))

(declare-fun c!25197 () Bool)

(assert (=> bm!14866 (= c!25197 c!25195)))

(assert (= (and d!41811 c!25195) b!135032))

(assert (= (and d!41811 (not c!25195)) b!135030))

(assert (= (and b!135030 c!25196) b!135026))

(assert (= (and b!135030 (not c!25196)) b!135033))

(assert (= (and b!135033 c!25194) b!135034))

(assert (= (and b!135033 (not c!25194)) b!135029))

(assert (= (or b!135034 b!135029) bm!14864))

(assert (= (or b!135026 bm!14864) bm!14865))

(assert (= (or b!135032 bm!14865) bm!14866))

(assert (= (and bm!14866 c!25197) b!135028))

(assert (= (and bm!14866 (not c!25197)) b!135031))

(assert (= (and d!41811 res!64876) b!135027))

(assert (= (and b!135027 res!64875) b!135025))

(declare-fun m!160865 () Bool)

(assert (=> b!135027 m!160865))

(declare-fun m!160867 () Bool)

(assert (=> b!135025 m!160867))

(declare-fun m!160869 () Bool)

(assert (=> d!41811 m!160869))

(declare-fun m!160871 () Bool)

(assert (=> d!41811 m!160871))

(declare-fun m!160873 () Bool)

(assert (=> bm!14866 m!160873))

(declare-fun m!160875 () Bool)

(assert (=> b!135028 m!160875))

(assert (=> d!40811 d!41811))

(declare-fun b!135035 () Bool)

(declare-fun lt!70676 () Unit!4150)

(declare-fun lt!70680 () Unit!4150)

(assert (=> b!135035 (= lt!70676 lt!70680)))

(declare-fun lt!70678 () (_ BitVec 64))

(declare-fun lt!70681 () (_ BitVec 64))

(declare-fun lt!70677 () ListLongMap!1707)

(declare-fun lt!70679 () V!3483)

(assert (=> b!135035 (not (contains!896 (+!170 lt!70677 (tuple2!2609 lt!70681 lt!70679)) lt!70678))))

(assert (=> b!135035 (= lt!70680 (addStillNotContains!63 lt!70677 lt!70681 lt!70679 lt!70678))))

(assert (=> b!135035 (= lt!70678 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!135035 (= lt!70679 (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!135035 (= lt!70681 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun call!14870 () ListLongMap!1707)

(assert (=> b!135035 (= lt!70677 call!14870)))

(declare-fun e!87944 () ListLongMap!1707)

(assert (=> b!135035 (= e!87944 (+!170 call!14870 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!87941 () Bool)

(declare-fun lt!70682 () ListLongMap!1707)

(declare-fun b!135036 () Bool)

(assert (=> b!135036 (= e!87941 (= lt!70682 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317) (mask!7165 newMap!16) (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!135037 () Bool)

(assert (=> b!135037 (= e!87941 (isEmpty!414 lt!70682))))

(declare-fun b!135038 () Bool)

(declare-fun e!87942 () ListLongMap!1707)

(assert (=> b!135038 (= e!87942 (ListLongMap!1708 Nil!1732))))

(declare-fun b!135039 () Bool)

(declare-fun e!87939 () Bool)

(declare-fun e!87940 () Bool)

(assert (=> b!135039 (= e!87939 e!87940)))

(declare-fun c!25201 () Bool)

(declare-fun e!87943 () Bool)

(assert (=> b!135039 (= c!25201 e!87943)))

(declare-fun res!64880 () Bool)

(assert (=> b!135039 (=> (not res!64880) (not e!87943))))

(assert (=> b!135039 (= res!64880 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!135040 () Bool)

(assert (=> b!135040 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> b!135040 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317))))))

(declare-fun e!87938 () Bool)

(assert (=> b!135040 (= e!87938 (= (apply!116 lt!70682 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!135042 () Bool)

(assert (=> b!135042 (= e!87940 e!87938)))

(assert (=> b!135042 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun res!64879 () Bool)

(assert (=> b!135042 (= res!64879 (contains!896 lt!70682 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135042 (=> (not res!64879) (not e!87938))))

(declare-fun b!135043 () Bool)

(assert (=> b!135043 (= e!87942 e!87944)))

(declare-fun c!25198 () Bool)

(assert (=> b!135043 (= c!25198 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!135044 () Bool)

(declare-fun res!64878 () Bool)

(assert (=> b!135044 (=> (not res!64878) (not e!87939))))

(assert (=> b!135044 (= res!64878 (not (contains!896 lt!70682 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135045 () Bool)

(assert (=> b!135045 (= e!87940 e!87941)))

(declare-fun c!25200 () Bool)

(assert (=> b!135045 (= c!25200 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun bm!14867 () Bool)

(assert (=> bm!14867 (= call!14870 (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317) (mask!7165 newMap!16) (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!135046 () Bool)

(assert (=> b!135046 (= e!87943 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135046 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!135041 () Bool)

(assert (=> b!135041 (= e!87944 call!14870)))

(declare-fun d!41813 () Bool)

(assert (=> d!41813 e!87939))

(declare-fun res!64877 () Bool)

(assert (=> d!41813 (=> (not res!64877) (not e!87939))))

(assert (=> d!41813 (= res!64877 (not (contains!896 lt!70682 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41813 (= lt!70682 e!87942)))

(declare-fun c!25199 () Bool)

(assert (=> d!41813 (= c!25199 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!41813 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41813 (= (getCurrentListMapNoExtraKeys!137 (_keys!4614 newMap!16) (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317) (mask!7165 newMap!16) (ite (and c!24541 c!24549) lt!69310 (extraKeys!2630 newMap!16)) (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)) lt!70682)))

(assert (= (and d!41813 c!25199) b!135038))

(assert (= (and d!41813 (not c!25199)) b!135043))

(assert (= (and b!135043 c!25198) b!135035))

(assert (= (and b!135043 (not c!25198)) b!135041))

(assert (= (or b!135035 b!135041) bm!14867))

(assert (= (and d!41813 res!64877) b!135044))

(assert (= (and b!135044 res!64878) b!135039))

(assert (= (and b!135039 res!64880) b!135046))

(assert (= (and b!135039 c!25201) b!135042))

(assert (= (and b!135039 (not c!25201)) b!135045))

(assert (= (and b!135042 res!64879) b!135040))

(assert (= (and b!135045 c!25200) b!135036))

(assert (= (and b!135045 (not c!25200)) b!135037))

(declare-fun b_lambda!6055 () Bool)

(assert (=> (not b_lambda!6055) (not b!135035)))

(assert (=> b!135035 t!6205))

(declare-fun b_and!8405 () Bool)

(assert (= b_and!8401 (and (=> t!6205 result!4009) b_and!8405)))

(assert (=> b!135035 t!6207))

(declare-fun b_and!8407 () Bool)

(assert (= b_and!8403 (and (=> t!6207 result!4011) b_and!8407)))

(declare-fun b_lambda!6057 () Bool)

(assert (=> (not b_lambda!6057) (not b!135040)))

(assert (=> b!135040 t!6205))

(declare-fun b_and!8409 () Bool)

(assert (= b_and!8405 (and (=> t!6205 result!4009) b_and!8409)))

(assert (=> b!135040 t!6207))

(declare-fun b_and!8411 () Bool)

(assert (= b_and!8407 (and (=> t!6207 result!4011) b_and!8411)))

(declare-fun m!160877 () Bool)

(assert (=> d!41813 m!160877))

(assert (=> d!41813 m!156571))

(declare-fun m!160879 () Bool)

(assert (=> b!135036 m!160879))

(declare-fun m!160881 () Bool)

(assert (=> b!135035 m!160881))

(declare-fun m!160883 () Bool)

(assert (=> b!135035 m!160883))

(assert (=> b!135035 m!160881))

(assert (=> b!135035 m!156647))

(declare-fun m!160885 () Bool)

(assert (=> b!135035 m!160885))

(assert (=> b!135035 m!156647))

(declare-fun m!160887 () Bool)

(assert (=> b!135035 m!160887))

(declare-fun m!160889 () Bool)

(assert (=> b!135035 m!160889))

(assert (=> b!135035 m!160885))

(assert (=> b!135035 m!157187))

(declare-fun m!160891 () Bool)

(assert (=> b!135035 m!160891))

(assert (=> b!135040 m!157187))

(declare-fun m!160893 () Bool)

(assert (=> b!135040 m!160893))

(assert (=> b!135040 m!156647))

(assert (=> b!135040 m!157187))

(assert (=> b!135040 m!160885))

(assert (=> b!135040 m!156647))

(assert (=> b!135040 m!160887))

(assert (=> b!135040 m!160885))

(assert (=> bm!14867 m!160879))

(assert (=> b!135043 m!157187))

(assert (=> b!135043 m!157187))

(assert (=> b!135043 m!157195))

(declare-fun m!160895 () Bool)

(assert (=> b!135044 m!160895))

(assert (=> b!135042 m!157187))

(assert (=> b!135042 m!157187))

(declare-fun m!160897 () Bool)

(assert (=> b!135042 m!160897))

(assert (=> b!135046 m!157187))

(assert (=> b!135046 m!157187))

(assert (=> b!135046 m!157195))

(declare-fun m!160899 () Bool)

(assert (=> b!135037 m!160899))

(assert (=> b!133306 d!41813))

(assert (=> b!133873 d!40879))

(declare-fun d!41815 () Bool)

(declare-fun lt!70683 () Bool)

(assert (=> d!41815 (= lt!70683 (select (content!132 (t!6198 (toList!869 lt!69356))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!87946 () Bool)

(assert (=> d!41815 (= lt!70683 e!87946)))

(declare-fun res!64881 () Bool)

(assert (=> d!41815 (=> (not res!64881) (not e!87946))))

(assert (=> d!41815 (= res!64881 ((_ is Cons!1731) (t!6198 (toList!869 lt!69356))))))

(assert (=> d!41815 (= (contains!898 (t!6198 (toList!869 lt!69356)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70683)))

(declare-fun b!135047 () Bool)

(declare-fun e!87945 () Bool)

(assert (=> b!135047 (= e!87946 e!87945)))

(declare-fun res!64882 () Bool)

(assert (=> b!135047 (=> res!64882 e!87945)))

(assert (=> b!135047 (= res!64882 (= (h!2336 (t!6198 (toList!869 lt!69356))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135048 () Bool)

(assert (=> b!135048 (= e!87945 (contains!898 (t!6198 (t!6198 (toList!869 lt!69356))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41815 res!64881) b!135047))

(assert (= (and b!135047 (not res!64882)) b!135048))

(declare-fun m!160901 () Bool)

(assert (=> d!41815 m!160901))

(declare-fun m!160903 () Bool)

(assert (=> d!41815 m!160903))

(declare-fun m!160905 () Bool)

(assert (=> b!135048 m!160905))

(assert (=> b!133230 d!41815))

(declare-fun d!41817 () Bool)

(declare-fun res!64883 () Bool)

(declare-fun e!87947 () Bool)

(assert (=> d!41817 (=> res!64883 e!87947)))

(assert (=> d!41817 (= res!64883 (and ((_ is Cons!1731) lt!69409) (= (_1!1314 (h!2336 lt!69409)) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(assert (=> d!41817 (= (containsKey!175 lt!69409 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) e!87947)))

(declare-fun b!135049 () Bool)

(declare-fun e!87948 () Bool)

(assert (=> b!135049 (= e!87947 e!87948)))

(declare-fun res!64884 () Bool)

(assert (=> b!135049 (=> (not res!64884) (not e!87948))))

(assert (=> b!135049 (= res!64884 (and (or (not ((_ is Cons!1731) lt!69409)) (bvsle (_1!1314 (h!2336 lt!69409)) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) ((_ is Cons!1731) lt!69409) (bvslt (_1!1314 (h!2336 lt!69409)) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun b!135050 () Bool)

(assert (=> b!135050 (= e!87948 (containsKey!175 (t!6198 lt!69409) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!41817 (not res!64883)) b!135049))

(assert (= (and b!135049 res!64884) b!135050))

(declare-fun m!160907 () Bool)

(assert (=> b!135050 m!160907))

(assert (=> b!133737 d!41817))

(declare-fun d!41819 () Bool)

(declare-fun lt!70684 () Bool)

(assert (=> d!41819 (= lt!70684 (select (content!131 lt!69593) (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) lt!69610)))))

(declare-fun e!87949 () Bool)

(assert (=> d!41819 (= lt!70684 e!87949)))

(declare-fun res!64885 () Bool)

(assert (=> d!41819 (=> (not res!64885) (not e!87949))))

(assert (=> d!41819 (= res!64885 ((_ is Cons!1732) lt!69593))))

(assert (=> d!41819 (= (contains!897 lt!69593 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) lt!69610)) lt!70684)))

(declare-fun b!135051 () Bool)

(declare-fun e!87950 () Bool)

(assert (=> b!135051 (= e!87949 e!87950)))

(declare-fun res!64886 () Bool)

(assert (=> b!135051 (=> res!64886 e!87950)))

(assert (=> b!135051 (= res!64886 (= (h!2337 lt!69593) (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) lt!69610)))))

(declare-fun b!135052 () Bool)

(assert (=> b!135052 (= e!87950 (contains!897 (t!6199 lt!69593) (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) lt!69610)))))

(assert (= (and d!41819 res!64885) b!135051))

(assert (= (and b!135051 (not res!64886)) b!135052))

(declare-fun m!160909 () Bool)

(assert (=> d!41819 m!160909))

(assert (=> d!41819 m!158539))

(declare-fun m!160911 () Bool)

(assert (=> d!41819 m!160911))

(assert (=> b!135052 m!158539))

(declare-fun m!160913 () Bool)

(assert (=> b!135052 m!160913))

(assert (=> b!133887 d!41819))

(declare-fun d!41821 () Bool)

(declare-fun res!64887 () Bool)

(declare-fun e!87951 () Bool)

(assert (=> d!41821 (=> res!64887 e!87951)))

(assert (=> d!41821 (= res!64887 (and ((_ is Cons!1731) (toList!869 lt!69230)) (= (_1!1314 (h!2336 (toList!869 lt!69230))) lt!69218)))))

(assert (=> d!41821 (= (containsKey!175 (toList!869 lt!69230) lt!69218) e!87951)))

(declare-fun b!135053 () Bool)

(declare-fun e!87952 () Bool)

(assert (=> b!135053 (= e!87951 e!87952)))

(declare-fun res!64888 () Bool)

(assert (=> b!135053 (=> (not res!64888) (not e!87952))))

(assert (=> b!135053 (= res!64888 (and (or (not ((_ is Cons!1731) (toList!869 lt!69230))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69230))) lt!69218)) ((_ is Cons!1731) (toList!869 lt!69230)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69230))) lt!69218)))))

(declare-fun b!135054 () Bool)

(assert (=> b!135054 (= e!87952 (containsKey!175 (t!6198 (toList!869 lt!69230)) lt!69218))))

(assert (= (and d!41821 (not res!64887)) b!135053))

(assert (= (and b!135053 res!64888) b!135054))

(declare-fun m!160915 () Bool)

(assert (=> b!135054 m!160915))

(assert (=> d!40935 d!41821))

(declare-fun d!41823 () Bool)

(declare-fun e!87953 () Bool)

(assert (=> d!41823 e!87953))

(declare-fun res!64889 () Bool)

(assert (=> d!41823 (=> res!64889 e!87953)))

(declare-fun lt!70685 () Bool)

(assert (=> d!41823 (= res!64889 (not lt!70685))))

(declare-fun lt!70687 () Bool)

(assert (=> d!41823 (= lt!70685 lt!70687)))

(declare-fun lt!70686 () Unit!4150)

(declare-fun e!87954 () Unit!4150)

(assert (=> d!41823 (= lt!70686 e!87954)))

(declare-fun c!25202 () Bool)

(assert (=> d!41823 (= c!25202 lt!70687)))

(assert (=> d!41823 (= lt!70687 (containsKey!175 (toList!869 lt!69891) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41823 (= (contains!896 lt!69891 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70685)))

(declare-fun b!135055 () Bool)

(declare-fun lt!70688 () Unit!4150)

(assert (=> b!135055 (= e!87954 lt!70688)))

(assert (=> b!135055 (= lt!70688 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69891) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135055 (isDefined!125 (getValueByKey!171 (toList!869 lt!69891) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135056 () Bool)

(declare-fun Unit!4247 () Unit!4150)

(assert (=> b!135056 (= e!87954 Unit!4247)))

(declare-fun b!135057 () Bool)

(assert (=> b!135057 (= e!87953 (isDefined!125 (getValueByKey!171 (toList!869 lt!69891) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41823 c!25202) b!135055))

(assert (= (and d!41823 (not c!25202)) b!135056))

(assert (= (and d!41823 (not res!64889)) b!135057))

(declare-fun m!160917 () Bool)

(assert (=> d!41823 m!160917))

(declare-fun m!160919 () Bool)

(assert (=> b!135055 m!160919))

(declare-fun m!160921 () Bool)

(assert (=> b!135055 m!160921))

(assert (=> b!135055 m!160921))

(declare-fun m!160923 () Bool)

(assert (=> b!135055 m!160923))

(assert (=> b!135057 m!160921))

(assert (=> b!135057 m!160921))

(assert (=> b!135057 m!160923))

(assert (=> d!40565 d!41823))

(assert (=> d!40565 d!40475))

(assert (=> b!133321 d!40985))

(assert (=> b!133210 d!41603))

(assert (=> b!133210 d!41605))

(declare-fun b!135058 () Bool)

(declare-fun e!87956 () SeekEntryResult!285)

(declare-fun e!87957 () SeekEntryResult!285)

(assert (=> b!135058 (= e!87956 e!87957)))

(declare-fun c!25203 () Bool)

(declare-fun lt!70689 () (_ BitVec 64))

(assert (=> b!135058 (= c!25203 (= lt!70689 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135059 () Bool)

(assert (=> b!135059 (= e!87957 (Found!285 (index!3302 lt!69918)))))

(declare-fun b!135060 () Bool)

(declare-fun e!87955 () SeekEntryResult!285)

(assert (=> b!135060 (= e!87955 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15602 lt!69918) #b00000000000000000000000000000001) (nextIndex!0 (index!3302 lt!69918) (x!15602 lt!69918) (mask!7165 newMap!16)) (index!3302 lt!69918) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun b!135061 () Bool)

(assert (=> b!135061 (= e!87955 (MissingVacant!285 (index!3302 lt!69918)))))

(declare-fun b!135062 () Bool)

(declare-fun c!25205 () Bool)

(assert (=> b!135062 (= c!25205 (= lt!70689 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135062 (= e!87957 e!87955)))

(declare-fun d!41825 () Bool)

(declare-fun lt!70690 () SeekEntryResult!285)

(assert (=> d!41825 (and (or ((_ is Undefined!285) lt!70690) (not ((_ is Found!285) lt!70690)) (and (bvsge (index!3301 lt!70690) #b00000000000000000000000000000000) (bvslt (index!3301 lt!70690) (size!2529 (_keys!4614 newMap!16))))) (or ((_ is Undefined!285) lt!70690) ((_ is Found!285) lt!70690) (not ((_ is MissingVacant!285) lt!70690)) (not (= (index!3303 lt!70690) (index!3302 lt!69918))) (and (bvsge (index!3303 lt!70690) #b00000000000000000000000000000000) (bvslt (index!3303 lt!70690) (size!2529 (_keys!4614 newMap!16))))) (or ((_ is Undefined!285) lt!70690) (ite ((_ is Found!285) lt!70690) (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!70690)) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (and ((_ is MissingVacant!285) lt!70690) (= (index!3303 lt!70690) (index!3302 lt!69918)) (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3303 lt!70690)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!41825 (= lt!70690 e!87956)))

(declare-fun c!25204 () Bool)

(assert (=> d!41825 (= c!25204 (bvsge (x!15602 lt!69918) #b01111111111111111111111111111110))))

(assert (=> d!41825 (= lt!70689 (select (arr!2260 (_keys!4614 newMap!16)) (index!3302 lt!69918)))))

(assert (=> d!41825 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41825 (= (seekKeyOrZeroReturnVacant!0 (x!15602 lt!69918) (index!3302 lt!69918) (index!3302 lt!69918) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (_keys!4614 newMap!16) (mask!7165 newMap!16)) lt!70690)))

(declare-fun b!135063 () Bool)

(assert (=> b!135063 (= e!87956 Undefined!285)))

(assert (= (and d!41825 c!25204) b!135063))

(assert (= (and d!41825 (not c!25204)) b!135058))

(assert (= (and b!135058 c!25203) b!135059))

(assert (= (and b!135058 (not c!25203)) b!135062))

(assert (= (and b!135062 c!25205) b!135061))

(assert (= (and b!135062 (not c!25205)) b!135060))

(declare-fun m!160925 () Bool)

(assert (=> b!135060 m!160925))

(assert (=> b!135060 m!160925))

(assert (=> b!135060 m!156533))

(declare-fun m!160927 () Bool)

(assert (=> b!135060 m!160927))

(declare-fun m!160929 () Bool)

(assert (=> d!41825 m!160929))

(declare-fun m!160931 () Bool)

(assert (=> d!41825 m!160931))

(assert (=> d!41825 m!157849))

(assert (=> d!41825 m!156571))

(assert (=> b!133513 d!41825))

(declare-fun d!41827 () Bool)

(declare-fun e!87958 () Bool)

(assert (=> d!41827 e!87958))

(declare-fun res!64890 () Bool)

(assert (=> d!41827 (=> res!64890 e!87958)))

(declare-fun lt!70691 () Bool)

(assert (=> d!41827 (= res!64890 (not lt!70691))))

(declare-fun lt!70693 () Bool)

(assert (=> d!41827 (= lt!70691 lt!70693)))

(declare-fun lt!70692 () Unit!4150)

(declare-fun e!87959 () Unit!4150)

(assert (=> d!41827 (= lt!70692 e!87959)))

(declare-fun c!25206 () Bool)

(assert (=> d!41827 (= c!25206 lt!70693)))

(assert (=> d!41827 (= lt!70693 (containsKey!175 (toList!869 lt!70036) (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> d!41827 (= (contains!896 lt!70036 (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!70691)))

(declare-fun b!135064 () Bool)

(declare-fun lt!70694 () Unit!4150)

(assert (=> b!135064 (= e!87959 lt!70694)))

(assert (=> b!135064 (= lt!70694 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!70036) (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> b!135064 (isDefined!125 (getValueByKey!171 (toList!869 lt!70036) (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!135065 () Bool)

(declare-fun Unit!4248 () Unit!4150)

(assert (=> b!135065 (= e!87959 Unit!4248)))

(declare-fun b!135066 () Bool)

(assert (=> b!135066 (= e!87958 (isDefined!125 (getValueByKey!171 (toList!869 lt!70036) (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (= (and d!41827 c!25206) b!135064))

(assert (= (and d!41827 (not c!25206)) b!135065))

(assert (= (and d!41827 (not res!64890)) b!135066))

(declare-fun m!160933 () Bool)

(assert (=> d!41827 m!160933))

(declare-fun m!160935 () Bool)

(assert (=> b!135064 m!160935))

(assert (=> b!135064 m!158319))

(assert (=> b!135064 m!158319))

(declare-fun m!160937 () Bool)

(assert (=> b!135064 m!160937))

(assert (=> b!135066 m!158319))

(assert (=> b!135066 m!158319))

(assert (=> b!135066 m!160937))

(assert (=> d!40793 d!41827))

(declare-fun b!135067 () Bool)

(declare-fun e!87960 () Option!177)

(assert (=> b!135067 (= e!87960 (Some!176 (_2!1314 (h!2336 lt!70038))))))

(declare-fun b!135070 () Bool)

(declare-fun e!87961 () Option!177)

(assert (=> b!135070 (= e!87961 None!175)))

(declare-fun b!135069 () Bool)

(assert (=> b!135069 (= e!87961 (getValueByKey!171 (t!6198 lt!70038) (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!135068 () Bool)

(assert (=> b!135068 (= e!87960 e!87961)))

(declare-fun c!25208 () Bool)

(assert (=> b!135068 (= c!25208 (and ((_ is Cons!1731) lt!70038) (not (= (_1!1314 (h!2336 lt!70038)) (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))))

(declare-fun d!41829 () Bool)

(declare-fun c!25207 () Bool)

(assert (=> d!41829 (= c!25207 (and ((_ is Cons!1731) lt!70038) (= (_1!1314 (h!2336 lt!70038)) (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (=> d!41829 (= (getValueByKey!171 lt!70038 (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) e!87960)))

(assert (= (and d!41829 c!25207) b!135067))

(assert (= (and d!41829 (not c!25207)) b!135068))

(assert (= (and b!135068 c!25208) b!135069))

(assert (= (and b!135068 (not c!25208)) b!135070))

(declare-fun m!160939 () Bool)

(assert (=> b!135069 m!160939))

(assert (=> d!40793 d!41829))

(declare-fun d!41831 () Bool)

(assert (=> d!41831 (= (getValueByKey!171 lt!70038 (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) (Some!176 (_2!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun lt!70695 () Unit!4150)

(assert (=> d!41831 (= lt!70695 (choose!834 lt!70038 (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun e!87962 () Bool)

(assert (=> d!41831 e!87962))

(declare-fun res!64891 () Bool)

(assert (=> d!41831 (=> (not res!64891) (not e!87962))))

(assert (=> d!41831 (= res!64891 (isStrictlySorted!317 lt!70038))))

(assert (=> d!41831 (= (lemmaContainsTupThenGetReturnValue!88 lt!70038 (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!70695)))

(declare-fun b!135071 () Bool)

(declare-fun res!64892 () Bool)

(assert (=> b!135071 (=> (not res!64892) (not e!87962))))

(assert (=> b!135071 (= res!64892 (containsKey!175 lt!70038 (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!135072 () Bool)

(assert (=> b!135072 (= e!87962 (contains!898 lt!70038 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (= (and d!41831 res!64891) b!135071))

(assert (= (and b!135071 res!64892) b!135072))

(assert (=> d!41831 m!158313))

(declare-fun m!160941 () Bool)

(assert (=> d!41831 m!160941))

(declare-fun m!160943 () Bool)

(assert (=> d!41831 m!160943))

(declare-fun m!160945 () Bool)

(assert (=> b!135071 m!160945))

(declare-fun m!160947 () Bool)

(assert (=> b!135072 m!160947))

(assert (=> d!40793 d!41831))

(declare-fun bm!14868 () Bool)

(declare-fun call!14871 () List!1735)

(declare-fun call!14872 () List!1735)

(assert (=> bm!14868 (= call!14871 call!14872)))

(declare-fun b!135073 () Bool)

(declare-fun e!87965 () Bool)

(declare-fun lt!70696 () List!1735)

(assert (=> b!135073 (= e!87965 (contains!898 lt!70696 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(declare-fun b!135074 () Bool)

(declare-fun e!87967 () List!1735)

(assert (=> b!135074 (= e!87967 call!14872)))

(declare-fun b!135075 () Bool)

(declare-fun res!64893 () Bool)

(assert (=> b!135075 (=> (not res!64893) (not e!87965))))

(assert (=> b!135075 (= res!64893 (containsKey!175 lt!70696 (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!135076 () Bool)

(declare-fun e!87963 () List!1735)

(assert (=> b!135076 (= e!87963 (insertStrictlySorted!90 (t!6198 (toList!869 lt!69514)) (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!135077 () Bool)

(declare-fun e!87964 () List!1735)

(assert (=> b!135077 (= e!87964 call!14871)))

(declare-fun bm!14869 () Bool)

(declare-fun call!14873 () List!1735)

(assert (=> bm!14869 (= call!14872 call!14873)))

(declare-fun b!135079 () Bool)

(declare-fun c!25209 () Bool)

(declare-fun c!25211 () Bool)

(assert (=> b!135079 (= e!87963 (ite c!25211 (t!6198 (toList!869 lt!69514)) (ite c!25209 (Cons!1731 (h!2336 (toList!869 lt!69514)) (t!6198 (toList!869 lt!69514))) Nil!1732)))))

(declare-fun b!135080 () Bool)

(declare-fun e!87966 () List!1735)

(assert (=> b!135080 (= e!87966 call!14873)))

(declare-fun b!135081 () Bool)

(assert (=> b!135081 (= c!25209 (and ((_ is Cons!1731) (toList!869 lt!69514)) (bvsgt (_1!1314 (h!2336 (toList!869 lt!69514))) (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (=> b!135081 (= e!87967 e!87964)))

(declare-fun d!41833 () Bool)

(assert (=> d!41833 e!87965))

(declare-fun res!64894 () Bool)

(assert (=> d!41833 (=> (not res!64894) (not e!87965))))

(assert (=> d!41833 (= res!64894 (isStrictlySorted!317 lt!70696))))

(assert (=> d!41833 (= lt!70696 e!87966)))

(declare-fun c!25210 () Bool)

(assert (=> d!41833 (= c!25210 (and ((_ is Cons!1731) (toList!869 lt!69514)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69514))) (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (=> d!41833 (isStrictlySorted!317 (toList!869 lt!69514))))

(assert (=> d!41833 (= (insertStrictlySorted!90 (toList!869 lt!69514) (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!70696)))

(declare-fun b!135078 () Bool)

(assert (=> b!135078 (= e!87966 e!87967)))

(assert (=> b!135078 (= c!25211 (and ((_ is Cons!1731) (toList!869 lt!69514)) (= (_1!1314 (h!2336 (toList!869 lt!69514))) (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(declare-fun b!135082 () Bool)

(assert (=> b!135082 (= e!87964 call!14871)))

(declare-fun bm!14870 () Bool)

(assert (=> bm!14870 (= call!14873 ($colon$colon!91 e!87963 (ite c!25210 (h!2336 (toList!869 lt!69514)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))))

(declare-fun c!25212 () Bool)

(assert (=> bm!14870 (= c!25212 c!25210)))

(assert (= (and d!41833 c!25210) b!135080))

(assert (= (and d!41833 (not c!25210)) b!135078))

(assert (= (and b!135078 c!25211) b!135074))

(assert (= (and b!135078 (not c!25211)) b!135081))

(assert (= (and b!135081 c!25209) b!135082))

(assert (= (and b!135081 (not c!25209)) b!135077))

(assert (= (or b!135082 b!135077) bm!14868))

(assert (= (or b!135074 bm!14868) bm!14869))

(assert (= (or b!135080 bm!14869) bm!14870))

(assert (= (and bm!14870 c!25212) b!135076))

(assert (= (and bm!14870 (not c!25212)) b!135079))

(assert (= (and d!41833 res!64894) b!135075))

(assert (= (and b!135075 res!64893) b!135073))

(declare-fun m!160949 () Bool)

(assert (=> b!135075 m!160949))

(declare-fun m!160951 () Bool)

(assert (=> b!135073 m!160951))

(declare-fun m!160953 () Bool)

(assert (=> d!41833 m!160953))

(declare-fun m!160955 () Bool)

(assert (=> d!41833 m!160955))

(declare-fun m!160957 () Bool)

(assert (=> bm!14870 m!160957))

(declare-fun m!160959 () Bool)

(assert (=> b!135076 m!160959))

(assert (=> d!40793 d!41833))

(declare-fun lt!70697 () Bool)

(declare-fun d!41835 () Bool)

(assert (=> d!41835 (= lt!70697 (select (content!132 (toList!869 lt!69834)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!87969 () Bool)

(assert (=> d!41835 (= lt!70697 e!87969)))

(declare-fun res!64895 () Bool)

(assert (=> d!41835 (=> (not res!64895) (not e!87969))))

(assert (=> d!41835 (= res!64895 ((_ is Cons!1731) (toList!869 lt!69834)))))

(assert (=> d!41835 (= (contains!898 (toList!869 lt!69834) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70697)))

(declare-fun b!135083 () Bool)

(declare-fun e!87968 () Bool)

(assert (=> b!135083 (= e!87969 e!87968)))

(declare-fun res!64896 () Bool)

(assert (=> b!135083 (=> res!64896 e!87968)))

(assert (=> b!135083 (= res!64896 (= (h!2336 (toList!869 lt!69834)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135084 () Bool)

(assert (=> b!135084 (= e!87968 (contains!898 (t!6198 (toList!869 lt!69834)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41835 res!64895) b!135083))

(assert (= (and b!135083 (not res!64896)) b!135084))

(declare-fun m!160961 () Bool)

(assert (=> d!41835 m!160961))

(declare-fun m!160963 () Bool)

(assert (=> d!41835 m!160963))

(declare-fun m!160965 () Bool)

(assert (=> b!135084 m!160965))

(assert (=> b!133427 d!41835))

(declare-fun d!41837 () Bool)

(declare-fun e!87970 () Bool)

(assert (=> d!41837 e!87970))

(declare-fun res!64897 () Bool)

(assert (=> d!41837 (=> res!64897 e!87970)))

(declare-fun lt!70698 () Bool)

(assert (=> d!41837 (= res!64897 (not lt!70698))))

(declare-fun lt!70700 () Bool)

(assert (=> d!41837 (= lt!70698 lt!70700)))

(declare-fun lt!70699 () Unit!4150)

(declare-fun e!87971 () Unit!4150)

(assert (=> d!41837 (= lt!70699 e!87971)))

(declare-fun c!25213 () Bool)

(assert (=> d!41837 (= c!25213 lt!70700)))

(assert (=> d!41837 (= lt!70700 (containsKey!175 (toList!869 lt!69891) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41837 (= (contains!896 lt!69891 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70698)))

(declare-fun b!135085 () Bool)

(declare-fun lt!70701 () Unit!4150)

(assert (=> b!135085 (= e!87971 lt!70701)))

(assert (=> b!135085 (= lt!70701 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69891) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135085 (isDefined!125 (getValueByKey!171 (toList!869 lt!69891) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135086 () Bool)

(declare-fun Unit!4249 () Unit!4150)

(assert (=> b!135086 (= e!87971 Unit!4249)))

(declare-fun b!135087 () Bool)

(assert (=> b!135087 (= e!87970 (isDefined!125 (getValueByKey!171 (toList!869 lt!69891) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41837 c!25213) b!135085))

(assert (= (and d!41837 (not c!25213)) b!135086))

(assert (= (and d!41837 (not res!64897)) b!135087))

(declare-fun m!160967 () Bool)

(assert (=> d!41837 m!160967))

(declare-fun m!160969 () Bool)

(assert (=> b!135085 m!160969))

(declare-fun m!160971 () Bool)

(assert (=> b!135085 m!160971))

(assert (=> b!135085 m!160971))

(declare-fun m!160973 () Bool)

(assert (=> b!135085 m!160973))

(assert (=> b!135087 m!160971))

(assert (=> b!135087 m!160971))

(assert (=> b!135087 m!160973))

(assert (=> b!133489 d!41837))

(assert (=> b!133958 d!41631))

(assert (=> b!133958 d!41633))

(declare-fun d!41839 () Bool)

(declare-fun e!87972 () Bool)

(assert (=> d!41839 e!87972))

(declare-fun res!64898 () Bool)

(assert (=> d!41839 (=> res!64898 e!87972)))

(declare-fun lt!70702 () Bool)

(assert (=> d!41839 (= res!64898 (not lt!70702))))

(declare-fun lt!70704 () Bool)

(assert (=> d!41839 (= lt!70702 lt!70704)))

(declare-fun lt!70703 () Unit!4150)

(declare-fun e!87973 () Unit!4150)

(assert (=> d!41839 (= lt!70703 e!87973)))

(declare-fun c!25214 () Bool)

(assert (=> d!41839 (= c!25214 lt!70704)))

(assert (=> d!41839 (= lt!70704 (containsKey!175 (toList!869 lt!70114) (select (arr!2260 lt!69595) #b00000000000000000000000000000000)))))

(assert (=> d!41839 (= (contains!896 lt!70114 (select (arr!2260 lt!69595) #b00000000000000000000000000000000)) lt!70702)))

(declare-fun b!135088 () Bool)

(declare-fun lt!70705 () Unit!4150)

(assert (=> b!135088 (= e!87973 lt!70705)))

(assert (=> b!135088 (= lt!70705 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!70114) (select (arr!2260 lt!69595) #b00000000000000000000000000000000)))))

(assert (=> b!135088 (isDefined!125 (getValueByKey!171 (toList!869 lt!70114) (select (arr!2260 lt!69595) #b00000000000000000000000000000000)))))

(declare-fun b!135089 () Bool)

(declare-fun Unit!4250 () Unit!4150)

(assert (=> b!135089 (= e!87973 Unit!4250)))

(declare-fun b!135090 () Bool)

(assert (=> b!135090 (= e!87972 (isDefined!125 (getValueByKey!171 (toList!869 lt!70114) (select (arr!2260 lt!69595) #b00000000000000000000000000000000))))))

(assert (= (and d!41839 c!25214) b!135088))

(assert (= (and d!41839 (not c!25214)) b!135089))

(assert (= (and d!41839 (not res!64898)) b!135090))

(assert (=> d!41839 m!158567))

(declare-fun m!160975 () Bool)

(assert (=> d!41839 m!160975))

(assert (=> b!135088 m!158567))

(declare-fun m!160977 () Bool)

(assert (=> b!135088 m!160977))

(assert (=> b!135088 m!158567))

(declare-fun m!160979 () Bool)

(assert (=> b!135088 m!160979))

(assert (=> b!135088 m!160979))

(declare-fun m!160981 () Bool)

(assert (=> b!135088 m!160981))

(assert (=> b!135090 m!158567))

(assert (=> b!135090 m!160979))

(assert (=> b!135090 m!160979))

(assert (=> b!135090 m!160981))

(assert (=> b!133923 d!41839))

(declare-fun d!41841 () Bool)

(declare-fun e!87974 () Bool)

(assert (=> d!41841 e!87974))

(declare-fun res!64900 () Bool)

(assert (=> d!41841 (=> (not res!64900) (not e!87974))))

(declare-fun lt!70707 () ListLongMap!1707)

(assert (=> d!41841 (= res!64900 (contains!896 lt!70707 (_1!1314 (tuple2!2609 lt!69759 lt!69757))))))

(declare-fun lt!70709 () List!1735)

(assert (=> d!41841 (= lt!70707 (ListLongMap!1708 lt!70709))))

(declare-fun lt!70708 () Unit!4150)

(declare-fun lt!70706 () Unit!4150)

(assert (=> d!41841 (= lt!70708 lt!70706)))

(assert (=> d!41841 (= (getValueByKey!171 lt!70709 (_1!1314 (tuple2!2609 lt!69759 lt!69757))) (Some!176 (_2!1314 (tuple2!2609 lt!69759 lt!69757))))))

(assert (=> d!41841 (= lt!70706 (lemmaContainsTupThenGetReturnValue!88 lt!70709 (_1!1314 (tuple2!2609 lt!69759 lt!69757)) (_2!1314 (tuple2!2609 lt!69759 lt!69757))))))

(assert (=> d!41841 (= lt!70709 (insertStrictlySorted!90 (toList!869 lt!69755) (_1!1314 (tuple2!2609 lt!69759 lt!69757)) (_2!1314 (tuple2!2609 lt!69759 lt!69757))))))

(assert (=> d!41841 (= (+!170 lt!69755 (tuple2!2609 lt!69759 lt!69757)) lt!70707)))

(declare-fun b!135091 () Bool)

(declare-fun res!64899 () Bool)

(assert (=> b!135091 (=> (not res!64899) (not e!87974))))

(assert (=> b!135091 (= res!64899 (= (getValueByKey!171 (toList!869 lt!70707) (_1!1314 (tuple2!2609 lt!69759 lt!69757))) (Some!176 (_2!1314 (tuple2!2609 lt!69759 lt!69757)))))))

(declare-fun b!135092 () Bool)

(assert (=> b!135092 (= e!87974 (contains!898 (toList!869 lt!70707) (tuple2!2609 lt!69759 lt!69757)))))

(assert (= (and d!41841 res!64900) b!135091))

(assert (= (and b!135091 res!64899) b!135092))

(declare-fun m!160983 () Bool)

(assert (=> d!41841 m!160983))

(declare-fun m!160985 () Bool)

(assert (=> d!41841 m!160985))

(declare-fun m!160987 () Bool)

(assert (=> d!41841 m!160987))

(declare-fun m!160989 () Bool)

(assert (=> d!41841 m!160989))

(declare-fun m!160991 () Bool)

(assert (=> b!135091 m!160991))

(declare-fun m!160993 () Bool)

(assert (=> b!135092 m!160993))

(assert (=> b!133305 d!41841))

(declare-fun d!41843 () Bool)

(assert (=> d!41843 (not (contains!896 (+!170 lt!69755 (tuple2!2609 lt!69759 lt!69757)) lt!69756))))

(declare-fun lt!70710 () Unit!4150)

(assert (=> d!41843 (= lt!70710 (choose!836 lt!69755 lt!69759 lt!69757 lt!69756))))

(declare-fun e!87975 () Bool)

(assert (=> d!41843 e!87975))

(declare-fun res!64901 () Bool)

(assert (=> d!41843 (=> (not res!64901) (not e!87975))))

(assert (=> d!41843 (= res!64901 (not (contains!896 lt!69755 lt!69756)))))

(assert (=> d!41843 (= (addStillNotContains!63 lt!69755 lt!69759 lt!69757 lt!69756) lt!70710)))

(declare-fun b!135093 () Bool)

(assert (=> b!135093 (= e!87975 (not (= lt!69759 lt!69756)))))

(assert (= (and d!41843 res!64901) b!135093))

(assert (=> d!41843 m!157369))

(assert (=> d!41843 m!157369))

(assert (=> d!41843 m!157371))

(declare-fun m!160995 () Bool)

(assert (=> d!41843 m!160995))

(declare-fun m!160997 () Bool)

(assert (=> d!41843 m!160997))

(assert (=> b!133305 d!41843))

(assert (=> b!133305 d!40697))

(declare-fun d!41845 () Bool)

(declare-fun e!87976 () Bool)

(assert (=> d!41845 e!87976))

(declare-fun res!64903 () Bool)

(assert (=> d!41845 (=> (not res!64903) (not e!87976))))

(declare-fun lt!70712 () ListLongMap!1707)

(assert (=> d!41845 (= res!64903 (contains!896 lt!70712 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70714 () List!1735)

(assert (=> d!41845 (= lt!70712 (ListLongMap!1708 lt!70714))))

(declare-fun lt!70713 () Unit!4150)

(declare-fun lt!70711 () Unit!4150)

(assert (=> d!41845 (= lt!70713 lt!70711)))

(assert (=> d!41845 (= (getValueByKey!171 lt!70714 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41845 (= lt!70711 (lemmaContainsTupThenGetReturnValue!88 lt!70714 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41845 (= lt!70714 (insertStrictlySorted!90 (toList!869 call!14722) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41845 (= (+!170 call!14722 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70712)))

(declare-fun b!135094 () Bool)

(declare-fun res!64902 () Bool)

(assert (=> b!135094 (=> (not res!64902) (not e!87976))))

(assert (=> b!135094 (= res!64902 (= (getValueByKey!171 (toList!869 lt!70712) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135095 () Bool)

(assert (=> b!135095 (= e!87976 (contains!898 (toList!869 lt!70712) (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41845 res!64903) b!135094))

(assert (= (and b!135094 res!64902) b!135095))

(declare-fun m!160999 () Bool)

(assert (=> d!41845 m!160999))

(declare-fun m!161001 () Bool)

(assert (=> d!41845 m!161001))

(declare-fun m!161003 () Bool)

(assert (=> d!41845 m!161003))

(declare-fun m!161005 () Bool)

(assert (=> d!41845 m!161005))

(declare-fun m!161007 () Bool)

(assert (=> b!135094 m!161007))

(declare-fun m!161009 () Bool)

(assert (=> b!135095 m!161009))

(assert (=> b!133305 d!41845))

(declare-fun d!41847 () Bool)

(declare-fun e!87977 () Bool)

(assert (=> d!41847 e!87977))

(declare-fun res!64904 () Bool)

(assert (=> d!41847 (=> res!64904 e!87977)))

(declare-fun lt!70715 () Bool)

(assert (=> d!41847 (= res!64904 (not lt!70715))))

(declare-fun lt!70717 () Bool)

(assert (=> d!41847 (= lt!70715 lt!70717)))

(declare-fun lt!70716 () Unit!4150)

(declare-fun e!87978 () Unit!4150)

(assert (=> d!41847 (= lt!70716 e!87978)))

(declare-fun c!25215 () Bool)

(assert (=> d!41847 (= c!25215 lt!70717)))

(assert (=> d!41847 (= lt!70717 (containsKey!175 (toList!869 (+!170 lt!69755 (tuple2!2609 lt!69759 lt!69757))) lt!69756))))

(assert (=> d!41847 (= (contains!896 (+!170 lt!69755 (tuple2!2609 lt!69759 lt!69757)) lt!69756) lt!70715)))

(declare-fun b!135096 () Bool)

(declare-fun lt!70718 () Unit!4150)

(assert (=> b!135096 (= e!87978 lt!70718)))

(assert (=> b!135096 (= lt!70718 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69755 (tuple2!2609 lt!69759 lt!69757))) lt!69756))))

(assert (=> b!135096 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69755 (tuple2!2609 lt!69759 lt!69757))) lt!69756))))

(declare-fun b!135097 () Bool)

(declare-fun Unit!4251 () Unit!4150)

(assert (=> b!135097 (= e!87978 Unit!4251)))

(declare-fun b!135098 () Bool)

(assert (=> b!135098 (= e!87977 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69755 (tuple2!2609 lt!69759 lt!69757))) lt!69756)))))

(assert (= (and d!41847 c!25215) b!135096))

(assert (= (and d!41847 (not c!25215)) b!135097))

(assert (= (and d!41847 (not res!64904)) b!135098))

(declare-fun m!161011 () Bool)

(assert (=> d!41847 m!161011))

(declare-fun m!161013 () Bool)

(assert (=> b!135096 m!161013))

(declare-fun m!161015 () Bool)

(assert (=> b!135096 m!161015))

(assert (=> b!135096 m!161015))

(declare-fun m!161017 () Bool)

(assert (=> b!135096 m!161017))

(assert (=> b!135098 m!161015))

(assert (=> b!135098 m!161015))

(assert (=> b!135098 m!161017))

(assert (=> b!133305 d!41847))

(declare-fun d!41849 () Bool)

(assert (=> d!41849 (= (get!1491 (getValueByKey!171 (toList!869 lt!69425) lt!69413)) (v!3201 (getValueByKey!171 (toList!869 lt!69425) lt!69413)))))

(assert (=> d!40521 d!41849))

(declare-fun b!135099 () Bool)

(declare-fun e!87979 () Option!177)

(assert (=> b!135099 (= e!87979 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69425)))))))

(declare-fun b!135102 () Bool)

(declare-fun e!87980 () Option!177)

(assert (=> b!135102 (= e!87980 None!175)))

(declare-fun b!135101 () Bool)

(assert (=> b!135101 (= e!87980 (getValueByKey!171 (t!6198 (toList!869 lt!69425)) lt!69413))))

(declare-fun b!135100 () Bool)

(assert (=> b!135100 (= e!87979 e!87980)))

(declare-fun c!25217 () Bool)

(assert (=> b!135100 (= c!25217 (and ((_ is Cons!1731) (toList!869 lt!69425)) (not (= (_1!1314 (h!2336 (toList!869 lt!69425))) lt!69413))))))

(declare-fun d!41851 () Bool)

(declare-fun c!25216 () Bool)

(assert (=> d!41851 (= c!25216 (and ((_ is Cons!1731) (toList!869 lt!69425)) (= (_1!1314 (h!2336 (toList!869 lt!69425))) lt!69413)))))

(assert (=> d!41851 (= (getValueByKey!171 (toList!869 lt!69425) lt!69413) e!87979)))

(assert (= (and d!41851 c!25216) b!135099))

(assert (= (and d!41851 (not c!25216)) b!135100))

(assert (= (and b!135100 c!25217) b!135101))

(assert (= (and b!135100 (not c!25217)) b!135102))

(declare-fun m!161019 () Bool)

(assert (=> b!135101 m!161019))

(assert (=> d!40521 d!41851))

(declare-fun d!41853 () Bool)

(assert (=> d!41853 (= (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133669 d!41853))

(assert (=> d!40445 d!40447))

(assert (=> d!40445 d!40451))

(declare-fun d!41855 () Bool)

(assert (=> d!41855 (not (contains!896 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402)) lt!69401))))

(assert (=> d!41855 true))

(declare-fun _$36!333 () Unit!4150)

(assert (=> d!41855 (= (choose!836 lt!69400 lt!69404 lt!69402 lt!69401) _$36!333)))

(declare-fun bs!5659 () Bool)

(assert (= bs!5659 d!41855))

(assert (=> bs!5659 m!156615))

(assert (=> bs!5659 m!156615))

(assert (=> bs!5659 m!156617))

(assert (=> d!40445 d!41855))

(declare-fun d!41857 () Bool)

(declare-fun e!87981 () Bool)

(assert (=> d!41857 e!87981))

(declare-fun res!64905 () Bool)

(assert (=> d!41857 (=> res!64905 e!87981)))

(declare-fun lt!70719 () Bool)

(assert (=> d!41857 (= res!64905 (not lt!70719))))

(declare-fun lt!70721 () Bool)

(assert (=> d!41857 (= lt!70719 lt!70721)))

(declare-fun lt!70720 () Unit!4150)

(declare-fun e!87982 () Unit!4150)

(assert (=> d!41857 (= lt!70720 e!87982)))

(declare-fun c!25218 () Bool)

(assert (=> d!41857 (= c!25218 lt!70721)))

(assert (=> d!41857 (= lt!70721 (containsKey!175 (toList!869 lt!69400) lt!69401))))

(assert (=> d!41857 (= (contains!896 lt!69400 lt!69401) lt!70719)))

(declare-fun b!135104 () Bool)

(declare-fun lt!70722 () Unit!4150)

(assert (=> b!135104 (= e!87982 lt!70722)))

(assert (=> b!135104 (= lt!70722 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69400) lt!69401))))

(assert (=> b!135104 (isDefined!125 (getValueByKey!171 (toList!869 lt!69400) lt!69401))))

(declare-fun b!135105 () Bool)

(declare-fun Unit!4252 () Unit!4150)

(assert (=> b!135105 (= e!87982 Unit!4252)))

(declare-fun b!135106 () Bool)

(assert (=> b!135106 (= e!87981 (isDefined!125 (getValueByKey!171 (toList!869 lt!69400) lt!69401)))))

(assert (= (and d!41857 c!25218) b!135104))

(assert (= (and d!41857 (not c!25218)) b!135105))

(assert (= (and d!41857 (not res!64905)) b!135106))

(declare-fun m!161021 () Bool)

(assert (=> d!41857 m!161021))

(declare-fun m!161023 () Bool)

(assert (=> b!135104 m!161023))

(declare-fun m!161025 () Bool)

(assert (=> b!135104 m!161025))

(assert (=> b!135104 m!161025))

(declare-fun m!161027 () Bool)

(assert (=> b!135104 m!161027))

(assert (=> b!135106 m!161025))

(assert (=> b!135106 m!161025))

(assert (=> b!135106 m!161027))

(assert (=> d!40445 d!41857))

(assert (=> b!133415 d!40473))

(declare-fun b!135107 () Bool)

(declare-fun e!87983 () Option!177)

(assert (=> b!135107 (= e!87983 (Some!176 (_2!1314 (h!2336 (t!6198 lt!69378)))))))

(declare-fun b!135110 () Bool)

(declare-fun e!87984 () Option!177)

(assert (=> b!135110 (= e!87984 None!175)))

(declare-fun b!135109 () Bool)

(assert (=> b!135109 (= e!87984 (getValueByKey!171 (t!6198 (t!6198 lt!69378)) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135108 () Bool)

(assert (=> b!135108 (= e!87983 e!87984)))

(declare-fun c!25220 () Bool)

(assert (=> b!135108 (= c!25220 (and ((_ is Cons!1731) (t!6198 lt!69378)) (not (= (_1!1314 (h!2336 (t!6198 lt!69378))) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!25219 () Bool)

(declare-fun d!41859 () Bool)

(assert (=> d!41859 (= c!25219 (and ((_ is Cons!1731) (t!6198 lt!69378)) (= (_1!1314 (h!2336 (t!6198 lt!69378))) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!41859 (= (getValueByKey!171 (t!6198 lt!69378) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!87983)))

(assert (= (and d!41859 c!25219) b!135107))

(assert (= (and d!41859 (not c!25219)) b!135108))

(assert (= (and b!135108 c!25220) b!135109))

(assert (= (and b!135108 (not c!25220)) b!135110))

(declare-fun m!161029 () Bool)

(assert (=> b!135109 m!161029))

(assert (=> b!133779 d!41859))

(assert (=> d!40847 d!40845))

(declare-fun d!41861 () Bool)

(assert (=> d!41861 (= (getValueByKey!171 lt!69451 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!41861 true))

(declare-fun _$22!486 () Unit!4150)

(assert (=> d!41861 (= (choose!834 lt!69451 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) _$22!486)))

(declare-fun bs!5660 () Bool)

(assert (= bs!5660 d!41861))

(assert (=> bs!5660 m!156743))

(assert (=> d!40847 d!41861))

(declare-fun d!41863 () Bool)

(declare-fun res!64906 () Bool)

(declare-fun e!87985 () Bool)

(assert (=> d!41863 (=> res!64906 e!87985)))

(assert (=> d!41863 (= res!64906 (or ((_ is Nil!1732) lt!69451) ((_ is Nil!1732) (t!6198 lt!69451))))))

(assert (=> d!41863 (= (isStrictlySorted!317 lt!69451) e!87985)))

(declare-fun b!135111 () Bool)

(declare-fun e!87986 () Bool)

(assert (=> b!135111 (= e!87985 e!87986)))

(declare-fun res!64907 () Bool)

(assert (=> b!135111 (=> (not res!64907) (not e!87986))))

(assert (=> b!135111 (= res!64907 (bvslt (_1!1314 (h!2336 lt!69451)) (_1!1314 (h!2336 (t!6198 lt!69451)))))))

(declare-fun b!135112 () Bool)

(assert (=> b!135112 (= e!87986 (isStrictlySorted!317 (t!6198 lt!69451)))))

(assert (= (and d!41863 (not res!64906)) b!135111))

(assert (= (and b!135111 res!64907) b!135112))

(declare-fun m!161031 () Bool)

(assert (=> b!135112 m!161031))

(assert (=> d!40847 d!41863))

(declare-fun d!41865 () Bool)

(declare-fun res!64908 () Bool)

(declare-fun e!87987 () Bool)

(assert (=> d!41865 (=> res!64908 e!87987)))

(assert (=> d!41865 (= res!64908 (and ((_ is Cons!1731) lt!69655) (= (_1!1314 (h!2336 lt!69655)) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!41865 (= (containsKey!175 lt!69655 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!87987)))

(declare-fun b!135113 () Bool)

(declare-fun e!87988 () Bool)

(assert (=> b!135113 (= e!87987 e!87988)))

(declare-fun res!64909 () Bool)

(assert (=> b!135113 (=> (not res!64909) (not e!87988))))

(assert (=> b!135113 (= res!64909 (and (or (not ((_ is Cons!1731) lt!69655)) (bvsle (_1!1314 (h!2336 lt!69655)) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) ((_ is Cons!1731) lt!69655) (bvslt (_1!1314 (h!2336 lt!69655)) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135114 () Bool)

(assert (=> b!135114 (= e!87988 (containsKey!175 (t!6198 lt!69655) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!41865 (not res!64908)) b!135113))

(assert (= (and b!135113 res!64909) b!135114))

(declare-fun m!161033 () Bool)

(assert (=> b!135114 m!161033))

(assert (=> b!133200 d!41865))

(declare-fun d!41867 () Bool)

(declare-fun e!87989 () Bool)

(assert (=> d!41867 e!87989))

(declare-fun res!64910 () Bool)

(assert (=> d!41867 (=> res!64910 e!87989)))

(declare-fun lt!70723 () Bool)

(assert (=> d!41867 (= res!64910 (not lt!70723))))

(declare-fun lt!70725 () Bool)

(assert (=> d!41867 (= lt!70723 lt!70725)))

(declare-fun lt!70724 () Unit!4150)

(declare-fun e!87990 () Unit!4150)

(assert (=> d!41867 (= lt!70724 e!87990)))

(declare-fun c!25221 () Bool)

(assert (=> d!41867 (= c!25221 lt!70725)))

(assert (=> d!41867 (= lt!70725 (containsKey!175 (toList!869 lt!69869) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!41867 (= (contains!896 lt!69869 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70723)))

(declare-fun b!135115 () Bool)

(declare-fun lt!70726 () Unit!4150)

(assert (=> b!135115 (= e!87990 lt!70726)))

(assert (=> b!135115 (= lt!70726 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69869) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135115 (isDefined!125 (getValueByKey!171 (toList!869 lt!69869) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135116 () Bool)

(declare-fun Unit!4253 () Unit!4150)

(assert (=> b!135116 (= e!87990 Unit!4253)))

(declare-fun b!135117 () Bool)

(assert (=> b!135117 (= e!87989 (isDefined!125 (getValueByKey!171 (toList!869 lt!69869) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!41867 c!25221) b!135115))

(assert (= (and d!41867 (not c!25221)) b!135116))

(assert (= (and d!41867 (not res!64910)) b!135117))

(assert (=> d!41867 m!156533))

(declare-fun m!161035 () Bool)

(assert (=> d!41867 m!161035))

(assert (=> b!135115 m!156533))

(declare-fun m!161037 () Bool)

(assert (=> b!135115 m!161037))

(assert (=> b!135115 m!156533))

(declare-fun m!161039 () Bool)

(assert (=> b!135115 m!161039))

(assert (=> b!135115 m!161039))

(declare-fun m!161041 () Bool)

(assert (=> b!135115 m!161041))

(assert (=> b!135117 m!156533))

(assert (=> b!135117 m!161039))

(assert (=> b!135117 m!161039))

(assert (=> b!135117 m!161041))

(assert (=> b!133460 d!41867))

(declare-fun b!135118 () Bool)

(declare-fun e!87991 () Option!177)

(assert (=> b!135118 (= e!87991 (Some!176 (_2!1314 (h!2336 (t!6198 (t!6198 (toList!869 lt!69161)))))))))

(declare-fun b!135121 () Bool)

(declare-fun e!87992 () Option!177)

(assert (=> b!135121 (= e!87992 None!175)))

(declare-fun b!135120 () Bool)

(assert (=> b!135120 (= e!87992 (getValueByKey!171 (t!6198 (t!6198 (t!6198 (toList!869 lt!69161)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!135119 () Bool)

(assert (=> b!135119 (= e!87991 e!87992)))

(declare-fun c!25223 () Bool)

(assert (=> b!135119 (= c!25223 (and ((_ is Cons!1731) (t!6198 (t!6198 (toList!869 lt!69161)))) (not (= (_1!1314 (h!2336 (t!6198 (t!6198 (toList!869 lt!69161))))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun c!25222 () Bool)

(declare-fun d!41869 () Bool)

(assert (=> d!41869 (= c!25222 (and ((_ is Cons!1731) (t!6198 (t!6198 (toList!869 lt!69161)))) (= (_1!1314 (h!2336 (t!6198 (t!6198 (toList!869 lt!69161))))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!41869 (= (getValueByKey!171 (t!6198 (t!6198 (toList!869 lt!69161))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) e!87991)))

(assert (= (and d!41869 c!25222) b!135118))

(assert (= (and d!41869 (not c!25222)) b!135119))

(assert (= (and b!135119 c!25223) b!135120))

(assert (= (and b!135119 (not c!25223)) b!135121))

(assert (=> b!135120 m!156287))

(declare-fun m!161043 () Bool)

(assert (=> b!135120 m!161043))

(assert (=> b!133561 d!41869))

(declare-fun d!41871 () Bool)

(declare-fun e!87993 () Bool)

(assert (=> d!41871 e!87993))

(declare-fun res!64912 () Bool)

(assert (=> d!41871 (=> (not res!64912) (not e!87993))))

(declare-fun lt!70728 () ListLongMap!1707)

(assert (=> d!41871 (= res!64912 (contains!896 lt!70728 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70730 () List!1735)

(assert (=> d!41871 (= lt!70728 (ListLongMap!1708 lt!70730))))

(declare-fun lt!70729 () Unit!4150)

(declare-fun lt!70727 () Unit!4150)

(assert (=> d!41871 (= lt!70729 lt!70727)))

(assert (=> d!41871 (= (getValueByKey!171 lt!70730 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41871 (= lt!70727 (lemmaContainsTupThenGetReturnValue!88 lt!70730 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41871 (= lt!70730 (insertStrictlySorted!90 (toList!869 call!14717) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41871 (= (+!170 call!14717 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70728)))

(declare-fun b!135122 () Bool)

(declare-fun res!64911 () Bool)

(assert (=> b!135122 (=> (not res!64911) (not e!87993))))

(assert (=> b!135122 (= res!64911 (= (getValueByKey!171 (toList!869 lt!70728) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135123 () Bool)

(assert (=> b!135123 (= e!87993 (contains!898 (toList!869 lt!70728) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41871 res!64912) b!135122))

(assert (= (and b!135122 res!64911) b!135123))

(declare-fun m!161045 () Bool)

(assert (=> d!41871 m!161045))

(declare-fun m!161047 () Bool)

(assert (=> d!41871 m!161047))

(declare-fun m!161049 () Bool)

(assert (=> d!41871 m!161049))

(declare-fun m!161051 () Bool)

(assert (=> d!41871 m!161051))

(declare-fun m!161053 () Bool)

(assert (=> b!135122 m!161053))

(declare-fun m!161055 () Bool)

(assert (=> b!135123 m!161055))

(assert (=> b!133286 d!41871))

(declare-fun d!41873 () Bool)

(declare-fun e!87994 () Bool)

(assert (=> d!41873 e!87994))

(declare-fun res!64914 () Bool)

(assert (=> d!41873 (=> (not res!64914) (not e!87994))))

(declare-fun lt!70732 () ListLongMap!1707)

(assert (=> d!41873 (= res!64914 (contains!896 lt!70732 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun lt!70734 () List!1735)

(assert (=> d!41873 (= lt!70732 (ListLongMap!1708 lt!70734))))

(declare-fun lt!70733 () Unit!4150)

(declare-fun lt!70731 () Unit!4150)

(assert (=> d!41873 (= lt!70733 lt!70731)))

(assert (=> d!41873 (= (getValueByKey!171 lt!70734 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!41873 (= lt!70731 (lemmaContainsTupThenGetReturnValue!88 lt!70734 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!41873 (= lt!70734 (insertStrictlySorted!90 (toList!869 call!14710) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!41873 (= (+!170 call!14710 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) lt!70732)))

(declare-fun b!135124 () Bool)

(declare-fun res!64913 () Bool)

(assert (=> b!135124 (=> (not res!64913) (not e!87994))))

(assert (=> b!135124 (= res!64913 (= (getValueByKey!171 (toList!869 lt!70732) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!135125 () Bool)

(assert (=> b!135125 (= e!87994 (contains!898 (toList!869 lt!70732) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(assert (= (and d!41873 res!64914) b!135124))

(assert (= (and b!135124 res!64913) b!135125))

(declare-fun m!161057 () Bool)

(assert (=> d!41873 m!161057))

(declare-fun m!161059 () Bool)

(assert (=> d!41873 m!161059))

(declare-fun m!161061 () Bool)

(assert (=> d!41873 m!161061))

(declare-fun m!161063 () Bool)

(assert (=> d!41873 m!161063))

(declare-fun m!161065 () Bool)

(assert (=> b!135124 m!161065))

(declare-fun m!161067 () Bool)

(assert (=> b!135125 m!161067))

(assert (=> b!133259 d!41873))

(declare-fun lt!70735 () Bool)

(declare-fun d!41875 () Bool)

(assert (=> d!41875 (= lt!70735 (select (content!132 (toList!869 lt!69860)) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!87996 () Bool)

(assert (=> d!41875 (= lt!70735 e!87996)))

(declare-fun res!64915 () Bool)

(assert (=> d!41875 (=> (not res!64915) (not e!87996))))

(assert (=> d!41875 (= res!64915 ((_ is Cons!1731) (toList!869 lt!69860)))))

(assert (=> d!41875 (= (contains!898 (toList!869 lt!69860) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70735)))

(declare-fun b!135126 () Bool)

(declare-fun e!87995 () Bool)

(assert (=> b!135126 (= e!87996 e!87995)))

(declare-fun res!64916 () Bool)

(assert (=> b!135126 (=> res!64916 e!87995)))

(assert (=> b!135126 (= res!64916 (= (h!2336 (toList!869 lt!69860)) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135127 () Bool)

(assert (=> b!135127 (= e!87995 (contains!898 (t!6198 (toList!869 lt!69860)) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41875 res!64915) b!135126))

(assert (= (and b!135126 (not res!64916)) b!135127))

(declare-fun m!161069 () Bool)

(assert (=> d!41875 m!161069))

(declare-fun m!161071 () Bool)

(assert (=> d!41875 m!161071))

(declare-fun m!161073 () Bool)

(assert (=> b!135127 m!161073))

(assert (=> b!133450 d!41875))

(declare-fun d!41877 () Bool)

(assert (=> d!41877 (isDefined!125 (getValueByKey!171 (toList!869 lt!69416) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70736 () Unit!4150)

(assert (=> d!41877 (= lt!70736 (choose!831 (toList!869 lt!69416) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87997 () Bool)

(assert (=> d!41877 e!87997))

(declare-fun res!64917 () Bool)

(assert (=> d!41877 (=> (not res!64917) (not e!87997))))

(assert (=> d!41877 (= res!64917 (isStrictlySorted!317 (toList!869 lt!69416)))))

(assert (=> d!41877 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69416) #b1000000000000000000000000000000000000000000000000000000000000000) lt!70736)))

(declare-fun b!135128 () Bool)

(assert (=> b!135128 (= e!87997 (containsKey!175 (toList!869 lt!69416) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41877 res!64917) b!135128))

(assert (=> d!41877 m!157385))

(assert (=> d!41877 m!157385))

(assert (=> d!41877 m!158097))

(declare-fun m!161075 () Bool)

(assert (=> d!41877 m!161075))

(declare-fun m!161077 () Bool)

(assert (=> d!41877 m!161077))

(assert (=> b!135128 m!158093))

(assert (=> b!133652 d!41877))

(assert (=> b!133652 d!41169))

(assert (=> b!133652 d!41171))

(declare-fun d!41879 () Bool)

(declare-fun lt!70737 () Bool)

(assert (=> d!41879 (= lt!70737 (select (content!131 Nil!1733) (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(declare-fun e!87998 () Bool)

(assert (=> d!41879 (= lt!70737 e!87998)))

(declare-fun res!64918 () Bool)

(assert (=> d!41879 (=> (not res!64918) (not e!87998))))

(assert (=> d!41879 (= res!64918 ((_ is Cons!1732) Nil!1733))))

(assert (=> d!41879 (= (contains!897 Nil!1733 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)) lt!70737)))

(declare-fun b!135129 () Bool)

(declare-fun e!87999 () Bool)

(assert (=> b!135129 (= e!87998 e!87999)))

(declare-fun res!64919 () Bool)

(assert (=> b!135129 (=> res!64919 e!87999)))

(assert (=> b!135129 (= res!64919 (= (h!2337 Nil!1733) (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(declare-fun b!135130 () Bool)

(assert (=> b!135130 (= e!87999 (contains!897 (t!6199 Nil!1733) (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(assert (= (and d!41879 res!64918) b!135129))

(assert (= (and b!135129 (not res!64919)) b!135130))

(assert (=> d!41879 m!156605))

(assert (=> d!41879 m!157397))

(declare-fun m!161079 () Bool)

(assert (=> d!41879 m!161079))

(assert (=> b!135130 m!157397))

(declare-fun m!161081 () Bool)

(assert (=> b!135130 m!161081))

(assert (=> b!133574 d!41879))

(declare-fun d!41881 () Bool)

(declare-fun res!64920 () Bool)

(declare-fun e!88000 () Bool)

(assert (=> d!41881 (=> res!64920 e!88000)))

(assert (=> d!41881 (= res!64920 (and ((_ is Cons!1731) lt!69444) (= (_1!1314 (h!2336 lt!69444)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!41881 (= (containsKey!175 lt!69444 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!88000)))

(declare-fun b!135131 () Bool)

(declare-fun e!88001 () Bool)

(assert (=> b!135131 (= e!88000 e!88001)))

(declare-fun res!64921 () Bool)

(assert (=> b!135131 (=> (not res!64921) (not e!88001))))

(assert (=> b!135131 (= res!64921 (and (or (not ((_ is Cons!1731) lt!69444)) (bvsle (_1!1314 (h!2336 lt!69444)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) ((_ is Cons!1731) lt!69444) (bvslt (_1!1314 (h!2336 lt!69444)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135132 () Bool)

(assert (=> b!135132 (= e!88001 (containsKey!175 (t!6198 lt!69444) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!41881 (not res!64920)) b!135131))

(assert (= (and b!135131 res!64921) b!135132))

(declare-fun m!161083 () Bool)

(assert (=> b!135132 m!161083))

(assert (=> b!133704 d!41881))

(declare-fun d!41883 () Bool)

(assert (=> d!41883 (= (get!1491 (getValueByKey!171 (toList!869 lt!69405) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!3201 (getValueByKey!171 (toList!869 lt!69405) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!40943 d!41883))

(declare-fun b!135133 () Bool)

(declare-fun e!88002 () Option!177)

(assert (=> b!135133 (= e!88002 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69405)))))))

(declare-fun b!135136 () Bool)

(declare-fun e!88003 () Option!177)

(assert (=> b!135136 (= e!88003 None!175)))

(declare-fun b!135135 () Bool)

(assert (=> b!135135 (= e!88003 (getValueByKey!171 (t!6198 (toList!869 lt!69405)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!135134 () Bool)

(assert (=> b!135134 (= e!88002 e!88003)))

(declare-fun c!25225 () Bool)

(assert (=> b!135134 (= c!25225 (and ((_ is Cons!1731) (toList!869 lt!69405)) (not (= (_1!1314 (h!2336 (toList!869 lt!69405))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun c!25224 () Bool)

(declare-fun d!41885 () Bool)

(assert (=> d!41885 (= c!25224 (and ((_ is Cons!1731) (toList!869 lt!69405)) (= (_1!1314 (h!2336 (toList!869 lt!69405))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!41885 (= (getValueByKey!171 (toList!869 lt!69405) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!88002)))

(assert (= (and d!41885 c!25224) b!135133))

(assert (= (and d!41885 (not c!25224)) b!135134))

(assert (= (and b!135134 c!25225) b!135135))

(assert (= (and b!135134 (not c!25225)) b!135136))

(assert (=> b!135135 m!156357))

(declare-fun m!161085 () Bool)

(assert (=> b!135135 m!161085))

(assert (=> d!40943 d!41885))

(declare-fun d!41887 () Bool)

(declare-fun e!88004 () Bool)

(assert (=> d!41887 e!88004))

(declare-fun res!64922 () Bool)

(assert (=> d!41887 (=> res!64922 e!88004)))

(declare-fun lt!70738 () Bool)

(assert (=> d!41887 (= res!64922 (not lt!70738))))

(declare-fun lt!70740 () Bool)

(assert (=> d!41887 (= lt!70738 lt!70740)))

(declare-fun lt!70739 () Unit!4150)

(declare-fun e!88005 () Unit!4150)

(assert (=> d!41887 (= lt!70739 e!88005)))

(declare-fun c!25226 () Bool)

(assert (=> d!41887 (= c!25226 lt!70740)))

(assert (=> d!41887 (= lt!70740 (containsKey!175 (toList!869 lt!69843) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!41887 (= (contains!896 lt!69843 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70738)))

(declare-fun b!135137 () Bool)

(declare-fun lt!70741 () Unit!4150)

(assert (=> b!135137 (= e!88005 lt!70741)))

(assert (=> b!135137 (= lt!70741 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69843) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135137 (isDefined!125 (getValueByKey!171 (toList!869 lt!69843) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135138 () Bool)

(declare-fun Unit!4254 () Unit!4150)

(assert (=> b!135138 (= e!88005 Unit!4254)))

(declare-fun b!135139 () Bool)

(assert (=> b!135139 (= e!88004 (isDefined!125 (getValueByKey!171 (toList!869 lt!69843) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!41887 c!25226) b!135137))

(assert (= (and d!41887 (not c!25226)) b!135138))

(assert (= (and d!41887 (not res!64922)) b!135139))

(assert (=> d!41887 m!156533))

(declare-fun m!161087 () Bool)

(assert (=> d!41887 m!161087))

(assert (=> b!135137 m!156533))

(declare-fun m!161089 () Bool)

(assert (=> b!135137 m!161089))

(assert (=> b!135137 m!156533))

(declare-fun m!161091 () Bool)

(assert (=> b!135137 m!161091))

(assert (=> b!135137 m!161091))

(declare-fun m!161093 () Bool)

(assert (=> b!135137 m!161093))

(assert (=> b!135139 m!156533))

(assert (=> b!135139 m!161091))

(assert (=> b!135139 m!161091))

(assert (=> b!135139 m!161093))

(assert (=> b!133437 d!41887))

(declare-fun d!41889 () Bool)

(assert (=> d!41889 (= ($colon$colon!91 e!87053 (ite c!24773 (h!2336 (toList!869 lt!69217)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) (Cons!1731 (ite c!24773 (h!2336 (toList!869 lt!69217)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) e!87053))))

(assert (=> bm!14752 d!41889))

(declare-fun b!135140 () Bool)

(declare-fun e!88006 () Option!177)

(assert (=> b!135140 (= e!88006 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 lt!69221))))))))

(declare-fun b!135143 () Bool)

(declare-fun e!88007 () Option!177)

(assert (=> b!135143 (= e!88007 None!175)))

(declare-fun b!135142 () Bool)

(assert (=> b!135142 (= e!88007 (getValueByKey!171 (t!6198 (t!6198 (toList!869 lt!69221))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!135141 () Bool)

(assert (=> b!135141 (= e!88006 e!88007)))

(declare-fun c!25228 () Bool)

(assert (=> b!135141 (= c!25228 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69221))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69221)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun c!25227 () Bool)

(declare-fun d!41891 () Bool)

(assert (=> d!41891 (= c!25227 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69221))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69221)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!41891 (= (getValueByKey!171 (t!6198 (toList!869 lt!69221)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!88006)))

(assert (= (and d!41891 c!25227) b!135140))

(assert (= (and d!41891 (not c!25227)) b!135141))

(assert (= (and b!135141 c!25228) b!135142))

(assert (= (and b!135141 (not c!25228)) b!135143))

(assert (=> b!135142 m!156357))

(declare-fun m!161095 () Bool)

(assert (=> b!135142 m!161095))

(assert (=> b!133474 d!41891))

(declare-fun d!41893 () Bool)

(assert (=> d!41893 (isDefined!125 (getValueByKey!171 (toList!869 lt!69376) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!70742 () Unit!4150)

(assert (=> d!41893 (= lt!70742 (choose!831 (toList!869 lt!69376) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88008 () Bool)

(assert (=> d!41893 e!88008))

(declare-fun res!64923 () Bool)

(assert (=> d!41893 (=> (not res!64923) (not e!88008))))

(assert (=> d!41893 (= res!64923 (isStrictlySorted!317 (toList!869 lt!69376)))))

(assert (=> d!41893 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69376) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70742)))

(declare-fun b!135144 () Bool)

(assert (=> b!135144 (= e!88008 (containsKey!175 (toList!869 lt!69376) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41893 res!64923) b!135144))

(assert (=> d!41893 m!156589))

(assert (=> d!41893 m!156589))

(assert (=> d!41893 m!158409))

(declare-fun m!161097 () Bool)

(assert (=> d!41893 m!161097))

(declare-fun m!161099 () Bool)

(assert (=> d!41893 m!161099))

(assert (=> b!135144 m!158405))

(assert (=> b!133774 d!41893))

(assert (=> b!133774 d!41241))

(assert (=> b!133774 d!40915))

(declare-fun d!41895 () Bool)

(assert (=> d!41895 (= (arrayCountValidKeys!0 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4614 newMap!16) #b00000000000000000000000000000000 (size!2529 (_keys!4614 newMap!16))) #b00000000000000000000000000000001))))

(assert (=> d!41895 true))

(declare-fun _$84!12 () Unit!4150)

(assert (=> d!41895 (= (choose!1 (_keys!4614 newMap!16) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) _$84!12)))

(declare-fun bs!5661 () Bool)

(assert (= bs!5661 d!41895))

(assert (=> bs!5661 m!156987))

(assert (=> bs!5661 m!156965))

(assert (=> bs!5661 m!156481))

(assert (=> d!40889 d!41895))

(assert (=> b!133423 d!41695))

(assert (=> b!133423 d!41697))

(declare-fun d!41897 () Bool)

(declare-fun lt!70743 () Bool)

(assert (=> d!41897 (= lt!70743 (select (content!132 (t!6198 (toList!869 lt!69449))) (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun e!88010 () Bool)

(assert (=> d!41897 (= lt!70743 e!88010)))

(declare-fun res!64924 () Bool)

(assert (=> d!41897 (=> (not res!64924) (not e!88010))))

(assert (=> d!41897 (= res!64924 ((_ is Cons!1731) (t!6198 (toList!869 lt!69449))))))

(assert (=> d!41897 (= (contains!898 (t!6198 (toList!869 lt!69449)) (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!70743)))

(declare-fun b!135145 () Bool)

(declare-fun e!88009 () Bool)

(assert (=> b!135145 (= e!88010 e!88009)))

(declare-fun res!64925 () Bool)

(assert (=> b!135145 (=> res!64925 e!88009)))

(assert (=> b!135145 (= res!64925 (= (h!2336 (t!6198 (toList!869 lt!69449))) (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!135146 () Bool)

(assert (=> b!135146 (= e!88009 (contains!898 (t!6198 (t!6198 (toList!869 lt!69449))) (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(assert (= (and d!41897 res!64924) b!135145))

(assert (= (and b!135145 (not res!64925)) b!135146))

(declare-fun m!161101 () Bool)

(assert (=> d!41897 m!161101))

(declare-fun m!161103 () Bool)

(assert (=> d!41897 m!161103))

(declare-fun m!161105 () Bool)

(assert (=> b!135146 m!161105))

(assert (=> b!133651 d!41897))

(declare-fun d!41899 () Bool)

(declare-fun e!88011 () Bool)

(assert (=> d!41899 e!88011))

(declare-fun res!64926 () Bool)

(assert (=> d!41899 (=> res!64926 e!88011)))

(declare-fun lt!70744 () Bool)

(assert (=> d!41899 (= res!64926 (not lt!70744))))

(declare-fun lt!70746 () Bool)

(assert (=> d!41899 (= lt!70744 lt!70746)))

(declare-fun lt!70745 () Unit!4150)

(declare-fun e!88012 () Unit!4150)

(assert (=> d!41899 (= lt!70745 e!88012)))

(declare-fun c!25229 () Bool)

(assert (=> d!41899 (= c!25229 lt!70746)))

(assert (=> d!41899 (= lt!70746 (containsKey!175 (toList!869 lt!69822) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!41899 (= (contains!896 lt!69822 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70744)))

(declare-fun b!135147 () Bool)

(declare-fun lt!70747 () Unit!4150)

(assert (=> b!135147 (= e!88012 lt!70747)))

(assert (=> b!135147 (= lt!70747 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69822) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135147 (isDefined!125 (getValueByKey!171 (toList!869 lt!69822) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135148 () Bool)

(declare-fun Unit!4255 () Unit!4150)

(assert (=> b!135148 (= e!88012 Unit!4255)))

(declare-fun b!135149 () Bool)

(assert (=> b!135149 (= e!88011 (isDefined!125 (getValueByKey!171 (toList!869 lt!69822) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!41899 c!25229) b!135147))

(assert (= (and d!41899 (not c!25229)) b!135148))

(assert (= (and d!41899 (not res!64926)) b!135149))

(assert (=> d!41899 m!156533))

(declare-fun m!161107 () Bool)

(assert (=> d!41899 m!161107))

(assert (=> b!135147 m!156533))

(declare-fun m!161109 () Bool)

(assert (=> b!135147 m!161109))

(assert (=> b!135147 m!156533))

(assert (=> b!135147 m!160619))

(assert (=> b!135147 m!160619))

(declare-fun m!161111 () Bool)

(assert (=> b!135147 m!161111))

(assert (=> b!135149 m!156533))

(assert (=> b!135149 m!160619))

(assert (=> b!135149 m!160619))

(assert (=> b!135149 m!161111))

(assert (=> b!133414 d!41899))

(declare-fun d!41901 () Bool)

(assert (=> d!41901 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402))) lt!69401))))

(declare-fun lt!70748 () Unit!4150)

(assert (=> d!41901 (= lt!70748 (choose!831 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402))) lt!69401))))

(declare-fun e!88013 () Bool)

(assert (=> d!41901 e!88013))

(declare-fun res!64927 () Bool)

(assert (=> d!41901 (=> (not res!64927) (not e!88013))))

(assert (=> d!41901 (= res!64927 (isStrictlySorted!317 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402)))))))

(assert (=> d!41901 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402))) lt!69401) lt!70748)))

(declare-fun b!135150 () Bool)

(assert (=> b!135150 (= e!88013 (containsKey!175 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402))) lt!69401))))

(assert (= (and d!41901 res!64927) b!135150))

(assert (=> d!41901 m!157145))

(assert (=> d!41901 m!157145))

(assert (=> d!41901 m!157147))

(declare-fun m!161113 () Bool)

(assert (=> d!41901 m!161113))

(declare-fun m!161115 () Bool)

(assert (=> d!41901 m!161115))

(assert (=> b!135150 m!157141))

(assert (=> b!133218 d!41901))

(assert (=> b!133218 d!41235))

(assert (=> b!133218 d!41237))

(declare-fun d!41903 () Bool)

(declare-fun e!88014 () Bool)

(assert (=> d!41903 e!88014))

(declare-fun res!64928 () Bool)

(assert (=> d!41903 (=> res!64928 e!88014)))

(declare-fun lt!70749 () Bool)

(assert (=> d!41903 (= res!64928 (not lt!70749))))

(declare-fun lt!70751 () Bool)

(assert (=> d!41903 (= lt!70749 lt!70751)))

(declare-fun lt!70750 () Unit!4150)

(declare-fun e!88015 () Unit!4150)

(assert (=> d!41903 (= lt!70750 e!88015)))

(declare-fun c!25230 () Bool)

(assert (=> d!41903 (= c!25230 lt!70751)))

(assert (=> d!41903 (= lt!70751 (containsKey!175 (toList!869 lt!69767) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41903 (= (contains!896 lt!69767 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70749)))

(declare-fun b!135151 () Bool)

(declare-fun lt!70752 () Unit!4150)

(assert (=> b!135151 (= e!88015 lt!70752)))

(assert (=> b!135151 (= lt!70752 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69767) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135151 (isDefined!125 (getValueByKey!171 (toList!869 lt!69767) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135152 () Bool)

(declare-fun Unit!4256 () Unit!4150)

(assert (=> b!135152 (= e!88015 Unit!4256)))

(declare-fun b!135153 () Bool)

(assert (=> b!135153 (= e!88014 (isDefined!125 (getValueByKey!171 (toList!869 lt!69767) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41903 c!25230) b!135151))

(assert (= (and d!41903 (not c!25230)) b!135152))

(assert (= (and d!41903 (not res!64928)) b!135153))

(declare-fun m!161117 () Bool)

(assert (=> d!41903 m!161117))

(declare-fun m!161119 () Bool)

(assert (=> b!135151 m!161119))

(assert (=> b!135151 m!159351))

(assert (=> b!135151 m!159351))

(declare-fun m!161121 () Bool)

(assert (=> b!135151 m!161121))

(assert (=> b!135153 m!159351))

(assert (=> b!135153 m!159351))

(assert (=> b!135153 m!161121))

(assert (=> bm!14722 d!41903))

(declare-fun b!135154 () Bool)

(declare-fun e!88016 () Option!177)

(assert (=> b!135154 (= e!88016 (Some!176 (_2!1314 (h!2336 (t!6198 lt!69461)))))))

(declare-fun b!135157 () Bool)

(declare-fun e!88017 () Option!177)

(assert (=> b!135157 (= e!88017 None!175)))

(declare-fun b!135156 () Bool)

(assert (=> b!135156 (= e!88017 (getValueByKey!171 (t!6198 (t!6198 lt!69461)) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!135155 () Bool)

(assert (=> b!135155 (= e!88016 e!88017)))

(declare-fun c!25232 () Bool)

(assert (=> b!135155 (= c!25232 (and ((_ is Cons!1731) (t!6198 lt!69461)) (not (= (_1!1314 (h!2336 (t!6198 lt!69461))) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!25231 () Bool)

(declare-fun d!41905 () Bool)

(assert (=> d!41905 (= c!25231 (and ((_ is Cons!1731) (t!6198 lt!69461)) (= (_1!1314 (h!2336 (t!6198 lt!69461))) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!41905 (= (getValueByKey!171 (t!6198 lt!69461) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!88016)))

(assert (= (and d!41905 c!25231) b!135154))

(assert (= (and d!41905 (not c!25231)) b!135155))

(assert (= (and b!135155 c!25232) b!135156))

(assert (= (and b!135155 (not c!25232)) b!135157))

(declare-fun m!161123 () Bool)

(assert (=> b!135156 m!161123))

(assert (=> b!133170 d!41905))

(declare-fun d!41907 () Bool)

(assert (=> d!41907 (isDefined!125 (getValueByKey!171 (toList!869 lt!69459) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun lt!70753 () Unit!4150)

(assert (=> d!41907 (= lt!70753 (choose!831 (toList!869 lt!69459) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun e!88018 () Bool)

(assert (=> d!41907 e!88018))

(declare-fun res!64929 () Bool)

(assert (=> d!41907 (=> (not res!64929) (not e!88018))))

(assert (=> d!41907 (= res!64929 (isStrictlySorted!317 (toList!869 lt!69459)))))

(assert (=> d!41907 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69459) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!70753)))

(declare-fun b!135158 () Bool)

(assert (=> b!135158 (= e!88018 (containsKey!175 (toList!869 lt!69459) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!41907 res!64929) b!135158))

(assert (=> d!41907 m!156773))

(assert (=> d!41907 m!156773))

(assert (=> d!41907 m!157095))

(declare-fun m!161125 () Bool)

(assert (=> d!41907 m!161125))

(declare-fun m!161127 () Bool)

(assert (=> d!41907 m!161127))

(assert (=> b!135158 m!157091))

(assert (=> b!133165 d!41907))

(assert (=> b!133165 d!41197))

(assert (=> b!133165 d!40505))

(declare-fun d!41909 () Bool)

(assert (=> d!41909 (isDefined!125 (getValueByKey!171 (toList!869 lt!69229) lt!69228))))

(declare-fun lt!70754 () Unit!4150)

(assert (=> d!41909 (= lt!70754 (choose!831 (toList!869 lt!69229) lt!69228))))

(declare-fun e!88019 () Bool)

(assert (=> d!41909 e!88019))

(declare-fun res!64930 () Bool)

(assert (=> d!41909 (=> (not res!64930) (not e!88019))))

(assert (=> d!41909 (= res!64930 (isStrictlySorted!317 (toList!869 lt!69229)))))

(assert (=> d!41909 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69229) lt!69228) lt!70754)))

(declare-fun b!135159 () Bool)

(assert (=> b!135159 (= e!88019 (containsKey!175 (toList!869 lt!69229) lt!69228))))

(assert (= (and d!41909 res!64930) b!135159))

(assert (=> d!41909 m!156829))

(assert (=> d!41909 m!156829))

(assert (=> d!41909 m!157917))

(declare-fun m!161129 () Bool)

(assert (=> d!41909 m!161129))

(assert (=> d!41909 m!157113))

(assert (=> b!135159 m!157913))

(assert (=> b!133552 d!41909))

(assert (=> b!133552 d!41239))

(assert (=> b!133552 d!40711))

(declare-fun b!135160 () Bool)

(declare-fun e!88021 () SeekEntryResult!285)

(declare-fun e!88022 () SeekEntryResult!285)

(assert (=> b!135160 (= e!88021 e!88022)))

(declare-fun c!25233 () Bool)

(declare-fun lt!70755 () (_ BitVec 64))

(assert (=> b!135160 (= c!25233 (= lt!70755 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!135161 () Bool)

(assert (=> b!135161 (= e!88022 (Found!285 (index!3302 lt!69997)))))

(declare-fun b!135162 () Bool)

(declare-fun e!88020 () SeekEntryResult!285)

(assert (=> b!135162 (= e!88020 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15602 lt!69997) #b00000000000000000000000000000001) (nextIndex!0 (index!3302 lt!69997) (x!15602 lt!69997) (mask!7165 (v!3197 (underlying!454 thiss!992)))) (index!3302 lt!69997) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun b!135163 () Bool)

(assert (=> b!135163 (= e!88020 (MissingVacant!285 (index!3302 lt!69997)))))

(declare-fun b!135164 () Bool)

(declare-fun c!25235 () Bool)

(assert (=> b!135164 (= c!25235 (= lt!70755 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135164 (= e!88022 e!88020)))

(declare-fun d!41911 () Bool)

(declare-fun lt!70756 () SeekEntryResult!285)

(assert (=> d!41911 (and (or ((_ is Undefined!285) lt!70756) (not ((_ is Found!285) lt!70756)) (and (bvsge (index!3301 lt!70756) #b00000000000000000000000000000000) (bvslt (index!3301 lt!70756) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))) (or ((_ is Undefined!285) lt!70756) ((_ is Found!285) lt!70756) (not ((_ is MissingVacant!285) lt!70756)) (not (= (index!3303 lt!70756) (index!3302 lt!69997))) (and (bvsge (index!3303 lt!70756) #b00000000000000000000000000000000) (bvslt (index!3303 lt!70756) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))) (or ((_ is Undefined!285) lt!70756) (ite ((_ is Found!285) lt!70756) (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3301 lt!70756)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (and ((_ is MissingVacant!285) lt!70756) (= (index!3303 lt!70756) (index!3302 lt!69997)) (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3303 lt!70756)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!41911 (= lt!70756 e!88021)))

(declare-fun c!25234 () Bool)

(assert (=> d!41911 (= c!25234 (bvsge (x!15602 lt!69997) #b01111111111111111111111111111110))))

(assert (=> d!41911 (= lt!70755 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3302 lt!69997)))))

(assert (=> d!41911 (validMask!0 (mask!7165 (v!3197 (underlying!454 thiss!992))))))

(assert (=> d!41911 (= (seekKeyOrZeroReturnVacant!0 (x!15602 lt!69997) (index!3302 lt!69997) (index!3302 lt!69997) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))) lt!70756)))

(declare-fun b!135165 () Bool)

(assert (=> b!135165 (= e!88021 Undefined!285)))

(assert (= (and d!41911 c!25234) b!135165))

(assert (= (and d!41911 (not c!25234)) b!135160))

(assert (= (and b!135160 c!25233) b!135161))

(assert (= (and b!135160 (not c!25233)) b!135164))

(assert (= (and b!135164 c!25235) b!135163))

(assert (= (and b!135164 (not c!25235)) b!135162))

(declare-fun m!161131 () Bool)

(assert (=> b!135162 m!161131))

(assert (=> b!135162 m!161131))

(assert (=> b!135162 m!156593))

(declare-fun m!161133 () Bool)

(assert (=> b!135162 m!161133))

(declare-fun m!161135 () Bool)

(assert (=> d!41911 m!161135))

(declare-fun m!161137 () Bool)

(assert (=> d!41911 m!161137))

(assert (=> d!41911 m!158167))

(assert (=> d!41911 m!156295))

(assert (=> b!133682 d!41911))

(declare-fun b!135166 () Bool)

(declare-fun e!88024 () SeekEntryResult!285)

(declare-fun e!88025 () SeekEntryResult!285)

(assert (=> b!135166 (= e!88024 e!88025)))

(declare-fun c!25236 () Bool)

(declare-fun lt!70757 () (_ BitVec 64))

(assert (=> b!135166 (= c!25236 (= lt!70757 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!135167 () Bool)

(assert (=> b!135167 (= e!88025 (Found!285 (nextIndex!0 (index!3302 lt!69439) (x!15602 lt!69439) (mask!7165 newMap!16))))))

(declare-fun b!135168 () Bool)

(declare-fun e!88023 () SeekEntryResult!285)

(assert (=> b!135168 (= e!88023 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15602 lt!69439) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (index!3302 lt!69439) (x!15602 lt!69439) (mask!7165 newMap!16)) (bvadd (x!15602 lt!69439) #b00000000000000000000000000000001) (mask!7165 newMap!16)) (index!3302 lt!69439) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun b!135169 () Bool)

(assert (=> b!135169 (= e!88023 (MissingVacant!285 (index!3302 lt!69439)))))

(declare-fun b!135170 () Bool)

(declare-fun c!25238 () Bool)

(assert (=> b!135170 (= c!25238 (= lt!70757 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135170 (= e!88025 e!88023)))

(declare-fun lt!70758 () SeekEntryResult!285)

(declare-fun d!41913 () Bool)

(assert (=> d!41913 (and (or ((_ is Undefined!285) lt!70758) (not ((_ is Found!285) lt!70758)) (and (bvsge (index!3301 lt!70758) #b00000000000000000000000000000000) (bvslt (index!3301 lt!70758) (size!2529 (_keys!4614 newMap!16))))) (or ((_ is Undefined!285) lt!70758) ((_ is Found!285) lt!70758) (not ((_ is MissingVacant!285) lt!70758)) (not (= (index!3303 lt!70758) (index!3302 lt!69439))) (and (bvsge (index!3303 lt!70758) #b00000000000000000000000000000000) (bvslt (index!3303 lt!70758) (size!2529 (_keys!4614 newMap!16))))) (or ((_ is Undefined!285) lt!70758) (ite ((_ is Found!285) lt!70758) (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!70758)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (and ((_ is MissingVacant!285) lt!70758) (= (index!3303 lt!70758) (index!3302 lt!69439)) (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3303 lt!70758)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!41913 (= lt!70758 e!88024)))

(declare-fun c!25237 () Bool)

(assert (=> d!41913 (= c!25237 (bvsge (bvadd (x!15602 lt!69439) #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(assert (=> d!41913 (= lt!70757 (select (arr!2260 (_keys!4614 newMap!16)) (nextIndex!0 (index!3302 lt!69439) (x!15602 lt!69439) (mask!7165 newMap!16))))))

(assert (=> d!41913 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41913 (= (seekKeyOrZeroReturnVacant!0 (bvadd (x!15602 lt!69439) #b00000000000000000000000000000001) (nextIndex!0 (index!3302 lt!69439) (x!15602 lt!69439) (mask!7165 newMap!16)) (index!3302 lt!69439) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)) lt!70758)))

(declare-fun b!135171 () Bool)

(assert (=> b!135171 (= e!88024 Undefined!285)))

(assert (= (and d!41913 c!25237) b!135171))

(assert (= (and d!41913 (not c!25237)) b!135166))

(assert (= (and b!135166 c!25236) b!135167))

(assert (= (and b!135166 (not c!25236)) b!135170))

(assert (= (and b!135170 c!25238) b!135169))

(assert (= (and b!135170 (not c!25238)) b!135168))

(assert (=> b!135168 m!158235))

(declare-fun m!161139 () Bool)

(assert (=> b!135168 m!161139))

(assert (=> b!135168 m!161139))

(assert (=> b!135168 m!156287))

(declare-fun m!161141 () Bool)

(assert (=> b!135168 m!161141))

(declare-fun m!161143 () Bool)

(assert (=> d!41913 m!161143))

(declare-fun m!161145 () Bool)

(assert (=> d!41913 m!161145))

(assert (=> d!41913 m!158235))

(declare-fun m!161147 () Bool)

(assert (=> d!41913 m!161147))

(assert (=> d!41913 m!156571))

(assert (=> b!133723 d!41913))

(declare-fun d!41915 () Bool)

(declare-fun lt!70759 () (_ BitVec 32))

(assert (=> d!41915 (and (bvsge lt!70759 #b00000000000000000000000000000000) (bvslt lt!70759 (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001)))))

(assert (=> d!41915 (= lt!70759 (choose!52 (index!3302 lt!69439) (x!15602 lt!69439) (mask!7165 newMap!16)))))

(assert (=> d!41915 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41915 (= (nextIndex!0 (index!3302 lt!69439) (x!15602 lt!69439) (mask!7165 newMap!16)) lt!70759)))

(declare-fun bs!5662 () Bool)

(assert (= bs!5662 d!41915))

(declare-fun m!161149 () Bool)

(assert (=> bs!5662 m!161149))

(assert (=> bs!5662 m!156571))

(assert (=> b!133723 d!41915))

(declare-fun d!41917 () Bool)

(declare-fun e!88026 () Bool)

(assert (=> d!41917 e!88026))

(declare-fun res!64931 () Bool)

(assert (=> d!41917 (=> res!64931 e!88026)))

(declare-fun lt!70760 () Bool)

(assert (=> d!41917 (= res!64931 (not lt!70760))))

(declare-fun lt!70762 () Bool)

(assert (=> d!41917 (= lt!70760 lt!70762)))

(declare-fun lt!70761 () Unit!4150)

(declare-fun e!88027 () Unit!4150)

(assert (=> d!41917 (= lt!70761 e!88027)))

(declare-fun c!25239 () Bool)

(assert (=> d!41917 (= c!25239 lt!70762)))

(assert (=> d!41917 (= lt!70762 (containsKey!175 (toList!869 lt!69988) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!41917 (= (contains!896 lt!69988 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!70760)))

(declare-fun b!135172 () Bool)

(declare-fun lt!70763 () Unit!4150)

(assert (=> b!135172 (= e!88027 lt!70763)))

(assert (=> b!135172 (= lt!70763 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69988) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!135172 (isDefined!125 (getValueByKey!171 (toList!869 lt!69988) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!135173 () Bool)

(declare-fun Unit!4257 () Unit!4150)

(assert (=> b!135173 (= e!88027 Unit!4257)))

(declare-fun b!135174 () Bool)

(assert (=> b!135174 (= e!88026 (isDefined!125 (getValueByKey!171 (toList!869 lt!69988) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!41917 c!25239) b!135172))

(assert (= (and d!41917 (not c!25239)) b!135173))

(assert (= (and d!41917 (not res!64931)) b!135174))

(assert (=> d!41917 m!158121))

(declare-fun m!161151 () Bool)

(assert (=> d!41917 m!161151))

(assert (=> b!135172 m!158121))

(declare-fun m!161153 () Bool)

(assert (=> b!135172 m!161153))

(assert (=> b!135172 m!158121))

(declare-fun m!161155 () Bool)

(assert (=> b!135172 m!161155))

(assert (=> b!135172 m!161155))

(declare-fun m!161157 () Bool)

(assert (=> b!135172 m!161157))

(assert (=> b!135174 m!158121))

(assert (=> b!135174 m!161155))

(assert (=> b!135174 m!161155))

(assert (=> b!135174 m!161157))

(assert (=> b!133665 d!41917))

(declare-fun b!135175 () Bool)

(declare-fun e!88028 () Option!177)

(assert (=> b!135175 (= e!88028 (Some!176 (_2!1314 (h!2336 (t!6198 lt!69451)))))))

(declare-fun b!135178 () Bool)

(declare-fun e!88029 () Option!177)

(assert (=> b!135178 (= e!88029 None!175)))

(declare-fun b!135177 () Bool)

(assert (=> b!135177 (= e!88029 (getValueByKey!171 (t!6198 (t!6198 lt!69451)) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!135176 () Bool)

(assert (=> b!135176 (= e!88028 e!88029)))

(declare-fun c!25241 () Bool)

(assert (=> b!135176 (= c!25241 (and ((_ is Cons!1731) (t!6198 lt!69451)) (not (= (_1!1314 (h!2336 (t!6198 lt!69451))) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun d!41919 () Bool)

(declare-fun c!25240 () Bool)

(assert (=> d!41919 (= c!25240 (and ((_ is Cons!1731) (t!6198 lt!69451)) (= (_1!1314 (h!2336 (t!6198 lt!69451))) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!41919 (= (getValueByKey!171 (t!6198 lt!69451) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!88028)))

(assert (= (and d!41919 c!25240) b!135175))

(assert (= (and d!41919 (not c!25240)) b!135176))

(assert (= (and b!135176 c!25241) b!135177))

(assert (= (and b!135176 (not c!25241)) b!135178))

(declare-fun m!161159 () Bool)

(assert (=> b!135177 m!161159))

(assert (=> b!133835 d!41919))

(declare-fun b!135179 () Bool)

(declare-fun e!88031 () Bool)

(declare-fun call!14874 () Bool)

(assert (=> b!135179 (= e!88031 call!14874)))

(declare-fun b!135180 () Bool)

(declare-fun e!88032 () Bool)

(assert (=> b!135180 (= e!88031 e!88032)))

(declare-fun lt!70765 () (_ BitVec 64))

(assert (=> b!135180 (= lt!70765 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun lt!70766 () Unit!4150)

(assert (=> b!135180 (= lt!70766 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!70765 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!135180 (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!70765 #b00000000000000000000000000000000)))

(declare-fun lt!70764 () Unit!4150)

(assert (=> b!135180 (= lt!70764 lt!70766)))

(declare-fun res!64932 () Bool)

(assert (=> b!135180 (= res!64932 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))) (Found!285 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!135180 (=> (not res!64932) (not e!88032))))

(declare-fun b!135181 () Bool)

(assert (=> b!135181 (= e!88032 call!14874)))

(declare-fun b!135182 () Bool)

(declare-fun e!88030 () Bool)

(assert (=> b!135182 (= e!88030 e!88031)))

(declare-fun c!25242 () Bool)

(assert (=> b!135182 (= c!25242 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!14871 () Bool)

(assert (=> bm!14871 (= call!14874 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun d!41921 () Bool)

(declare-fun res!64933 () Bool)

(assert (=> d!41921 (=> res!64933 e!88030)))

(assert (=> d!41921 (= res!64933 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!41921 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))) e!88030)))

(assert (= (and d!41921 (not res!64933)) b!135182))

(assert (= (and b!135182 c!25242) b!135180))

(assert (= (and b!135182 (not c!25242)) b!135179))

(assert (= (and b!135180 res!64932) b!135181))

(assert (= (or b!135181 b!135179) bm!14871))

(assert (=> b!135180 m!159953))

(declare-fun m!161161 () Bool)

(assert (=> b!135180 m!161161))

(declare-fun m!161163 () Bool)

(assert (=> b!135180 m!161163))

(assert (=> b!135180 m!159953))

(declare-fun m!161165 () Bool)

(assert (=> b!135180 m!161165))

(assert (=> b!135182 m!159953))

(assert (=> b!135182 m!159953))

(assert (=> b!135182 m!159955))

(declare-fun m!161167 () Bool)

(assert (=> bm!14871 m!161167))

(assert (=> bm!14748 d!41921))

(declare-fun d!41923 () Bool)

(assert (=> d!41923 (= (size!2533 (v!3197 (underlying!454 thiss!992))) (bvadd (_size!598 (v!3197 (underlying!454 thiss!992))) (bvsdiv (bvadd (extraKeys!2630 (v!3197 (underlying!454 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!133477 d!41923))

(declare-fun d!41925 () Bool)

(assert (=> d!41925 (= (get!1491 (getValueByKey!171 (toList!869 lt!69424) lt!69423)) (v!3201 (getValueByKey!171 (toList!869 lt!69424) lt!69423)))))

(assert (=> d!40515 d!41925))

(declare-fun b!135183 () Bool)

(declare-fun e!88033 () Option!177)

(assert (=> b!135183 (= e!88033 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69424)))))))

(declare-fun b!135186 () Bool)

(declare-fun e!88034 () Option!177)

(assert (=> b!135186 (= e!88034 None!175)))

(declare-fun b!135185 () Bool)

(assert (=> b!135185 (= e!88034 (getValueByKey!171 (t!6198 (toList!869 lt!69424)) lt!69423))))

(declare-fun b!135184 () Bool)

(assert (=> b!135184 (= e!88033 e!88034)))

(declare-fun c!25244 () Bool)

(assert (=> b!135184 (= c!25244 (and ((_ is Cons!1731) (toList!869 lt!69424)) (not (= (_1!1314 (h!2336 (toList!869 lt!69424))) lt!69423))))))

(declare-fun d!41927 () Bool)

(declare-fun c!25243 () Bool)

(assert (=> d!41927 (= c!25243 (and ((_ is Cons!1731) (toList!869 lt!69424)) (= (_1!1314 (h!2336 (toList!869 lt!69424))) lt!69423)))))

(assert (=> d!41927 (= (getValueByKey!171 (toList!869 lt!69424) lt!69423) e!88033)))

(assert (= (and d!41927 c!25243) b!135183))

(assert (= (and d!41927 (not c!25243)) b!135184))

(assert (= (and b!135184 c!25244) b!135185))

(assert (= (and b!135184 (not c!25244)) b!135186))

(declare-fun m!161169 () Bool)

(assert (=> b!135185 m!161169))

(assert (=> d!40515 d!41927))

(assert (=> d!40751 d!40749))

(declare-fun d!41929 () Bool)

(assert (=> d!41929 (= (getValueByKey!171 lt!69444 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!41929 true))

(declare-fun _$22!487 () Unit!4150)

(assert (=> d!41929 (= (choose!834 lt!69444 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) _$22!487)))

(declare-fun bs!5663 () Bool)

(assert (= bs!5663 d!41929))

(assert (=> bs!5663 m!156725))

(assert (=> d!40751 d!41929))

(declare-fun d!41931 () Bool)

(declare-fun res!64934 () Bool)

(declare-fun e!88035 () Bool)

(assert (=> d!41931 (=> res!64934 e!88035)))

(assert (=> d!41931 (= res!64934 (or ((_ is Nil!1732) lt!69444) ((_ is Nil!1732) (t!6198 lt!69444))))))

(assert (=> d!41931 (= (isStrictlySorted!317 lt!69444) e!88035)))

(declare-fun b!135187 () Bool)

(declare-fun e!88036 () Bool)

(assert (=> b!135187 (= e!88035 e!88036)))

(declare-fun res!64935 () Bool)

(assert (=> b!135187 (=> (not res!64935) (not e!88036))))

(assert (=> b!135187 (= res!64935 (bvslt (_1!1314 (h!2336 lt!69444)) (_1!1314 (h!2336 (t!6198 lt!69444)))))))

(declare-fun b!135188 () Bool)

(assert (=> b!135188 (= e!88036 (isStrictlySorted!317 (t!6198 lt!69444)))))

(assert (= (and d!41931 (not res!64934)) b!135187))

(assert (= (and b!135187 res!64935) b!135188))

(declare-fun m!161171 () Bool)

(assert (=> b!135188 m!161171))

(assert (=> d!40751 d!41931))

(declare-fun d!41933 () Bool)

(assert (=> d!41933 (= (get!1489 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3196 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000)))))

(assert (=> b!133628 d!41933))

(assert (=> b!133316 d!40473))

(assert (=> b!133432 d!40473))

(declare-fun d!41935 () Bool)

(declare-fun res!64936 () Bool)

(declare-fun e!88037 () Bool)

(assert (=> d!41935 (=> res!64936 e!88037)))

(assert (=> d!41935 (= res!64936 (or ((_ is Nil!1732) lt!70024) ((_ is Nil!1732) (t!6198 lt!70024))))))

(assert (=> d!41935 (= (isStrictlySorted!317 lt!70024) e!88037)))

(declare-fun b!135189 () Bool)

(declare-fun e!88038 () Bool)

(assert (=> b!135189 (= e!88037 e!88038)))

(declare-fun res!64937 () Bool)

(assert (=> b!135189 (=> (not res!64937) (not e!88038))))

(assert (=> b!135189 (= res!64937 (bvslt (_1!1314 (h!2336 lt!70024)) (_1!1314 (h!2336 (t!6198 lt!70024)))))))

(declare-fun b!135190 () Bool)

(assert (=> b!135190 (= e!88038 (isStrictlySorted!317 (t!6198 lt!70024)))))

(assert (= (and d!41935 (not res!64936)) b!135189))

(assert (= (and b!135189 res!64937) b!135190))

(declare-fun m!161173 () Bool)

(assert (=> b!135190 m!161173))

(assert (=> d!40777 d!41935))

(declare-fun d!41937 () Bool)

(declare-fun res!64938 () Bool)

(declare-fun e!88039 () Bool)

(assert (=> d!41937 (=> res!64938 e!88039)))

(assert (=> d!41937 (= res!64938 (or ((_ is Nil!1732) (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)))) ((_ is Nil!1732) (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)))))))))

(assert (=> d!41937 (= (isStrictlySorted!317 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)))) e!88039)))

(declare-fun b!135191 () Bool)

(declare-fun e!88040 () Bool)

(assert (=> b!135191 (= e!88039 e!88040)))

(declare-fun res!64939 () Bool)

(assert (=> b!135191 (=> (not res!64939) (not e!88040))))

(assert (=> b!135191 (= res!64939 (bvslt (_1!1314 (h!2336 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569))))) (_1!1314 (h!2336 (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569))))))))))

(declare-fun b!135192 () Bool)

(assert (=> b!135192 (= e!88040 (isStrictlySorted!317 (t!6198 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569))))))))

(assert (= (and d!41937 (not res!64938)) b!135191))

(assert (= (and b!135191 res!64939) b!135192))

(assert (=> b!135192 m!160485))

(assert (=> d!40777 d!41937))

(declare-fun d!41939 () Bool)

(assert (=> d!41939 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69230) lt!69218)) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69230) lt!69218))))))

(declare-fun bs!5664 () Bool)

(assert (= bs!5664 d!41939))

(assert (=> bs!5664 m!156781))

(declare-fun m!161175 () Bool)

(assert (=> bs!5664 m!161175))

(assert (=> b!134008 d!41939))

(assert (=> b!134008 d!40907))

(declare-fun d!41941 () Bool)

(assert (=> d!41941 (isDefined!125 (getValueByKey!171 (toList!869 lt!69449) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun lt!70767 () Unit!4150)

(assert (=> d!41941 (= lt!70767 (choose!831 (toList!869 lt!69449) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun e!88041 () Bool)

(assert (=> d!41941 e!88041))

(declare-fun res!64940 () Bool)

(assert (=> d!41941 (=> (not res!64940) (not e!88041))))

(assert (=> d!41941 (= res!64940 (isStrictlySorted!317 (toList!869 lt!69449)))))

(assert (=> d!41941 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69449) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!70767)))

(declare-fun b!135193 () Bool)

(assert (=> b!135193 (= e!88041 (containsKey!175 (toList!869 lt!69449) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!41941 res!64940) b!135193))

(assert (=> d!41941 m!156749))

(assert (=> d!41941 m!156749))

(assert (=> d!41941 m!158453))

(declare-fun m!161177 () Bool)

(assert (=> d!41941 m!161177))

(declare-fun m!161179 () Bool)

(assert (=> d!41941 m!161179))

(assert (=> b!135193 m!158449))

(assert (=> b!133830 d!41941))

(declare-fun d!41943 () Bool)

(assert (=> d!41943 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69449) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69449) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun bs!5665 () Bool)

(assert (= bs!5665 d!41943))

(assert (=> bs!5665 m!156749))

(declare-fun m!161181 () Bool)

(assert (=> bs!5665 m!161181))

(assert (=> b!133830 d!41943))

(assert (=> b!133830 d!40831))

(declare-fun d!41945 () Bool)

(declare-fun res!64941 () Bool)

(declare-fun e!88042 () Bool)

(assert (=> d!41945 (=> res!64941 e!88042)))

(assert (=> d!41945 (= res!64941 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))) lt!69494)))))

(assert (=> d!41945 (= (containsKey!175 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) lt!69494) e!88042)))

(declare-fun b!135194 () Bool)

(declare-fun e!88043 () Bool)

(assert (=> b!135194 (= e!88042 e!88043)))

(declare-fun res!64942 () Bool)

(assert (=> b!135194 (=> (not res!64942) (not e!88043))))

(assert (=> b!135194 (= res!64942 (and (or (not ((_ is Cons!1731) (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))) (bvsle (_1!1314 (h!2336 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))) lt!69494)) ((_ is Cons!1731) (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))) (bvslt (_1!1314 (h!2336 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))) lt!69494)))))

(declare-fun b!135195 () Bool)

(assert (=> b!135195 (= e!88043 (containsKey!175 (t!6198 (toList!869 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))) lt!69494))))

(assert (= (and d!41945 (not res!64941)) b!135194))

(assert (= (and b!135194 res!64942) b!135195))

(declare-fun m!161183 () Bool)

(assert (=> b!135195 m!161183))

(assert (=> d!40579 d!41945))

(declare-fun d!41947 () Bool)

(declare-fun e!88044 () Bool)

(assert (=> d!41947 e!88044))

(declare-fun res!64943 () Bool)

(assert (=> d!41947 (=> res!64943 e!88044)))

(declare-fun lt!70768 () Bool)

(assert (=> d!41947 (= res!64943 (not lt!70768))))

(declare-fun lt!70770 () Bool)

(assert (=> d!41947 (= lt!70768 lt!70770)))

(declare-fun lt!70769 () Unit!4150)

(declare-fun e!88045 () Unit!4150)

(assert (=> d!41947 (= lt!70769 e!88045)))

(declare-fun c!25245 () Bool)

(assert (=> d!41947 (= c!25245 lt!70770)))

(assert (=> d!41947 (= lt!70770 (containsKey!175 (toList!869 lt!69675) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41947 (= (contains!896 lt!69675 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70768)))

(declare-fun b!135196 () Bool)

(declare-fun lt!70771 () Unit!4150)

(assert (=> b!135196 (= e!88045 lt!70771)))

(assert (=> b!135196 (= lt!70771 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69675) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!135196 (isDefined!125 (getValueByKey!171 (toList!869 lt!69675) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135197 () Bool)

(declare-fun Unit!4258 () Unit!4150)

(assert (=> b!135197 (= e!88045 Unit!4258)))

(declare-fun b!135198 () Bool)

(assert (=> b!135198 (= e!88044 (isDefined!125 (getValueByKey!171 (toList!869 lt!69675) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41947 c!25245) b!135196))

(assert (= (and d!41947 (not c!25245)) b!135197))

(assert (= (and d!41947 (not res!64943)) b!135198))

(declare-fun m!161185 () Bool)

(assert (=> d!41947 m!161185))

(declare-fun m!161187 () Bool)

(assert (=> b!135196 m!161187))

(assert (=> b!135196 m!157157))

(assert (=> b!135196 m!157157))

(declare-fun m!161189 () Bool)

(assert (=> b!135196 m!161189))

(assert (=> b!135198 m!157157))

(assert (=> b!135198 m!157157))

(assert (=> b!135198 m!161189))

(assert (=> d!40449 d!41947))

(declare-fun b!135199 () Bool)

(declare-fun e!88046 () Option!177)

(assert (=> b!135199 (= e!88046 (Some!176 (_2!1314 (h!2336 lt!69677))))))

(declare-fun b!135202 () Bool)

(declare-fun e!88047 () Option!177)

(assert (=> b!135202 (= e!88047 None!175)))

(declare-fun b!135201 () Bool)

(assert (=> b!135201 (= e!88047 (getValueByKey!171 (t!6198 lt!69677) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135200 () Bool)

(assert (=> b!135200 (= e!88046 e!88047)))

(declare-fun c!25247 () Bool)

(assert (=> b!135200 (= c!25247 (and ((_ is Cons!1731) lt!69677) (not (= (_1!1314 (h!2336 lt!69677)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25246 () Bool)

(declare-fun d!41949 () Bool)

(assert (=> d!41949 (= c!25246 (and ((_ is Cons!1731) lt!69677) (= (_1!1314 (h!2336 lt!69677)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41949 (= (getValueByKey!171 lt!69677 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88046)))

(assert (= (and d!41949 c!25246) b!135199))

(assert (= (and d!41949 (not c!25246)) b!135200))

(assert (= (and b!135200 c!25247) b!135201))

(assert (= (and b!135200 (not c!25247)) b!135202))

(declare-fun m!161191 () Bool)

(assert (=> b!135201 m!161191))

(assert (=> d!40449 d!41949))

(declare-fun d!41951 () Bool)

(assert (=> d!41951 (= (getValueByKey!171 lt!69677 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70772 () Unit!4150)

(assert (=> d!41951 (= lt!70772 (choose!834 lt!69677 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88048 () Bool)

(assert (=> d!41951 e!88048))

(declare-fun res!64944 () Bool)

(assert (=> d!41951 (=> (not res!64944) (not e!88048))))

(assert (=> d!41951 (= res!64944 (isStrictlySorted!317 lt!69677))))

(assert (=> d!41951 (= (lemmaContainsTupThenGetReturnValue!88 lt!69677 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70772)))

(declare-fun b!135203 () Bool)

(declare-fun res!64945 () Bool)

(assert (=> b!135203 (=> (not res!64945) (not e!88048))))

(assert (=> b!135203 (= res!64945 (containsKey!175 lt!69677 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135204 () Bool)

(assert (=> b!135204 (= e!88048 (contains!898 lt!69677 (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41951 res!64944) b!135203))

(assert (= (and b!135203 res!64945) b!135204))

(assert (=> d!41951 m!157151))

(declare-fun m!161193 () Bool)

(assert (=> d!41951 m!161193))

(declare-fun m!161195 () Bool)

(assert (=> d!41951 m!161195))

(declare-fun m!161197 () Bool)

(assert (=> b!135203 m!161197))

(declare-fun m!161199 () Bool)

(assert (=> b!135204 m!161199))

(assert (=> d!40449 d!41951))

(declare-fun bm!14872 () Bool)

(declare-fun call!14875 () List!1735)

(declare-fun call!14876 () List!1735)

(assert (=> bm!14872 (= call!14875 call!14876)))

(declare-fun lt!70773 () List!1735)

(declare-fun b!135205 () Bool)

(declare-fun e!88051 () Bool)

(assert (=> b!135205 (= e!88051 (contains!898 lt!70773 (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135206 () Bool)

(declare-fun e!88053 () List!1735)

(assert (=> b!135206 (= e!88053 call!14876)))

(declare-fun b!135207 () Bool)

(declare-fun res!64946 () Bool)

(assert (=> b!135207 (=> (not res!64946) (not e!88051))))

(assert (=> b!135207 (= res!64946 (containsKey!175 lt!70773 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135208 () Bool)

(declare-fun e!88049 () List!1735)

(assert (=> b!135208 (= e!88049 (insertStrictlySorted!90 (t!6198 (toList!869 call!14662)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135209 () Bool)

(declare-fun e!88050 () List!1735)

(assert (=> b!135209 (= e!88050 call!14875)))

(declare-fun bm!14873 () Bool)

(declare-fun call!14877 () List!1735)

(assert (=> bm!14873 (= call!14876 call!14877)))

(declare-fun c!25250 () Bool)

(declare-fun c!25248 () Bool)

(declare-fun b!135211 () Bool)

(assert (=> b!135211 (= e!88049 (ite c!25250 (t!6198 (toList!869 call!14662)) (ite c!25248 (Cons!1731 (h!2336 (toList!869 call!14662)) (t!6198 (toList!869 call!14662))) Nil!1732)))))

(declare-fun b!135212 () Bool)

(declare-fun e!88052 () List!1735)

(assert (=> b!135212 (= e!88052 call!14877)))

(declare-fun b!135213 () Bool)

(assert (=> b!135213 (= c!25248 (and ((_ is Cons!1731) (toList!869 call!14662)) (bvsgt (_1!1314 (h!2336 (toList!869 call!14662))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!135213 (= e!88053 e!88050)))

(declare-fun d!41953 () Bool)

(assert (=> d!41953 e!88051))

(declare-fun res!64947 () Bool)

(assert (=> d!41953 (=> (not res!64947) (not e!88051))))

(assert (=> d!41953 (= res!64947 (isStrictlySorted!317 lt!70773))))

(assert (=> d!41953 (= lt!70773 e!88052)))

(declare-fun c!25249 () Bool)

(assert (=> d!41953 (= c!25249 (and ((_ is Cons!1731) (toList!869 call!14662)) (bvslt (_1!1314 (h!2336 (toList!869 call!14662))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41953 (isStrictlySorted!317 (toList!869 call!14662))))

(assert (=> d!41953 (= (insertStrictlySorted!90 (toList!869 call!14662) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70773)))

(declare-fun b!135210 () Bool)

(assert (=> b!135210 (= e!88052 e!88053)))

(assert (=> b!135210 (= c!25250 (and ((_ is Cons!1731) (toList!869 call!14662)) (= (_1!1314 (h!2336 (toList!869 call!14662))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135214 () Bool)

(assert (=> b!135214 (= e!88050 call!14875)))

(declare-fun bm!14874 () Bool)

(assert (=> bm!14874 (= call!14877 ($colon$colon!91 e!88049 (ite c!25249 (h!2336 (toList!869 call!14662)) (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25251 () Bool)

(assert (=> bm!14874 (= c!25251 c!25249)))

(assert (= (and d!41953 c!25249) b!135212))

(assert (= (and d!41953 (not c!25249)) b!135210))

(assert (= (and b!135210 c!25250) b!135206))

(assert (= (and b!135210 (not c!25250)) b!135213))

(assert (= (and b!135213 c!25248) b!135214))

(assert (= (and b!135213 (not c!25248)) b!135209))

(assert (= (or b!135214 b!135209) bm!14872))

(assert (= (or b!135206 bm!14872) bm!14873))

(assert (= (or b!135212 bm!14873) bm!14874))

(assert (= (and bm!14874 c!25251) b!135208))

(assert (= (and bm!14874 (not c!25251)) b!135211))

(assert (= (and d!41953 res!64947) b!135207))

(assert (= (and b!135207 res!64946) b!135205))

(declare-fun m!161201 () Bool)

(assert (=> b!135207 m!161201))

(declare-fun m!161203 () Bool)

(assert (=> b!135205 m!161203))

(declare-fun m!161205 () Bool)

(assert (=> d!41953 m!161205))

(declare-fun m!161207 () Bool)

(assert (=> d!41953 m!161207))

(declare-fun m!161209 () Bool)

(assert (=> bm!14874 m!161209))

(declare-fun m!161211 () Bool)

(assert (=> b!135208 m!161211))

(assert (=> d!40449 d!41953))

(declare-fun d!41955 () Bool)

(assert (=> d!41955 (= (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69420 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))) lt!69418)) (v!3201 (getValueByKey!171 (toList!869 (+!170 lt!69420 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))) lt!69418)))))

(assert (=> d!40535 d!41955))

(declare-fun b!135215 () Bool)

(declare-fun e!88054 () Option!177)

(assert (=> b!135215 (= e!88054 (Some!176 (_2!1314 (h!2336 (toList!869 (+!170 lt!69420 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))))))))))

(declare-fun b!135218 () Bool)

(declare-fun e!88055 () Option!177)

(assert (=> b!135218 (= e!88055 None!175)))

(declare-fun b!135217 () Bool)

(assert (=> b!135217 (= e!88055 (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69420 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))))) lt!69418))))

(declare-fun b!135216 () Bool)

(assert (=> b!135216 (= e!88054 e!88055)))

(declare-fun c!25253 () Bool)

(assert (=> b!135216 (= c!25253 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69420 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))))) (not (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69420 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))) lt!69418))))))

(declare-fun c!25252 () Bool)

(declare-fun d!41957 () Bool)

(assert (=> d!41957 (= c!25252 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69420 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69420 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))) lt!69418)))))

(assert (=> d!41957 (= (getValueByKey!171 (toList!869 (+!170 lt!69420 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))) lt!69418) e!88054)))

(assert (= (and d!41957 c!25252) b!135215))

(assert (= (and d!41957 (not c!25252)) b!135216))

(assert (= (and b!135216 c!25253) b!135217))

(assert (= (and b!135216 (not c!25253)) b!135218))

(declare-fun m!161213 () Bool)

(assert (=> b!135217 m!161213))

(assert (=> d!40535 d!41957))

(declare-fun d!41959 () Bool)

(declare-fun lt!70774 () Bool)

(assert (=> d!41959 (= lt!70774 (select (content!132 (toList!869 lt!70084)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun e!88057 () Bool)

(assert (=> d!41959 (= lt!70774 e!88057)))

(declare-fun res!64948 () Bool)

(assert (=> d!41959 (=> (not res!64948) (not e!88057))))

(assert (=> d!41959 (= res!64948 ((_ is Cons!1731) (toList!869 lt!70084)))))

(assert (=> d!41959 (= (contains!898 (toList!869 lt!70084) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) lt!70774)))

(declare-fun b!135219 () Bool)

(declare-fun e!88056 () Bool)

(assert (=> b!135219 (= e!88057 e!88056)))

(declare-fun res!64949 () Bool)

(assert (=> b!135219 (=> res!64949 e!88056)))

(assert (=> b!135219 (= res!64949 (= (h!2336 (toList!869 lt!70084)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun b!135220 () Bool)

(assert (=> b!135220 (= e!88056 (contains!898 (t!6198 (toList!869 lt!70084)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(assert (= (and d!41959 res!64948) b!135219))

(assert (= (and b!135219 (not res!64949)) b!135220))

(declare-fun m!161215 () Bool)

(assert (=> d!41959 m!161215))

(declare-fun m!161217 () Bool)

(assert (=> d!41959 m!161217))

(declare-fun m!161219 () Bool)

(assert (=> b!135220 m!161219))

(assert (=> b!133865 d!41959))

(declare-fun d!41961 () Bool)

(declare-fun res!64950 () Bool)

(declare-fun e!88058 () Bool)

(assert (=> d!41961 (=> res!64950 e!88058)))

(assert (=> d!41961 (= res!64950 (and ((_ is Cons!1731) (toList!869 (map!1405 (_2!1315 lt!69589)))) (= (_1!1314 (h!2336 (toList!869 (map!1405 (_2!1315 lt!69589))))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!41961 (= (containsKey!175 (toList!869 (map!1405 (_2!1315 lt!69589))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) e!88058)))

(declare-fun b!135221 () Bool)

(declare-fun e!88059 () Bool)

(assert (=> b!135221 (= e!88058 e!88059)))

(declare-fun res!64951 () Bool)

(assert (=> b!135221 (=> (not res!64951) (not e!88059))))

(assert (=> b!135221 (= res!64951 (and (or (not ((_ is Cons!1731) (toList!869 (map!1405 (_2!1315 lt!69589))))) (bvsle (_1!1314 (h!2336 (toList!869 (map!1405 (_2!1315 lt!69589))))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))) ((_ is Cons!1731) (toList!869 (map!1405 (_2!1315 lt!69589)))) (bvslt (_1!1314 (h!2336 (toList!869 (map!1405 (_2!1315 lt!69589))))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(declare-fun b!135222 () Bool)

(assert (=> b!135222 (= e!88059 (containsKey!175 (t!6198 (toList!869 (map!1405 (_2!1315 lt!69589)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!41961 (not res!64950)) b!135221))

(assert (= (and b!135221 res!64951) b!135222))

(assert (=> b!135222 m!156287))

(declare-fun m!161221 () Bool)

(assert (=> b!135222 m!161221))

(assert (=> d!40929 d!41961))

(declare-fun d!41963 () Bool)

(declare-fun lt!70775 () Bool)

(assert (=> d!41963 (= lt!70775 (select (content!132 lt!70024) (tuple2!2609 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun e!88061 () Bool)

(assert (=> d!41963 (= lt!70775 e!88061)))

(declare-fun res!64952 () Bool)

(assert (=> d!41963 (=> (not res!64952) (not e!88061))))

(assert (=> d!41963 (= res!64952 ((_ is Cons!1731) lt!70024))))

(assert (=> d!41963 (= (contains!898 lt!70024 (tuple2!2609 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) lt!70775)))

(declare-fun b!135223 () Bool)

(declare-fun e!88060 () Bool)

(assert (=> b!135223 (= e!88061 e!88060)))

(declare-fun res!64953 () Bool)

(assert (=> b!135223 (=> res!64953 e!88060)))

(assert (=> b!135223 (= res!64953 (= (h!2336 lt!70024) (tuple2!2609 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun b!135224 () Bool)

(assert (=> b!135224 (= e!88060 (contains!898 (t!6198 lt!70024) (tuple2!2609 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(assert (= (and d!41963 res!64952) b!135223))

(assert (= (and b!135223 (not res!64953)) b!135224))

(declare-fun m!161223 () Bool)

(assert (=> d!41963 m!161223))

(declare-fun m!161225 () Bool)

(assert (=> d!41963 m!161225))

(declare-fun m!161227 () Bool)

(assert (=> b!135224 m!161227))

(assert (=> b!133739 d!41963))

(declare-fun d!41965 () Bool)

(assert (=> d!41965 (= (apply!116 lt!69843 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1491 (getValueByKey!171 (toList!869 lt!69843) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5666 () Bool)

(assert (= bs!5666 d!41965))

(assert (=> bs!5666 m!156533))

(assert (=> bs!5666 m!161091))

(assert (=> bs!5666 m!161091))

(declare-fun m!161229 () Bool)

(assert (=> bs!5666 m!161229))

(assert (=> b!133445 d!41965))

(declare-fun c!25254 () Bool)

(declare-fun d!41967 () Bool)

(assert (=> d!41967 (= c!25254 ((_ is ValueCellFull!1095) (select (arr!2261 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!88062 () V!3483)

(assert (=> d!41967 (= (get!1488 (select (arr!2261 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!88062)))

(declare-fun b!135225 () Bool)

(assert (=> b!135225 (= e!88062 (get!1489 (select (arr!2261 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135226 () Bool)

(assert (=> b!135226 (= e!88062 (get!1490 (select (arr!2261 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41967 c!25254) b!135225))

(assert (= (and d!41967 (not c!25254)) b!135226))

(assert (=> b!135225 m!157609))

(assert (=> b!135225 m!156647))

(declare-fun m!161231 () Bool)

(assert (=> b!135225 m!161231))

(assert (=> b!135226 m!157609))

(assert (=> b!135226 m!156647))

(declare-fun m!161233 () Bool)

(assert (=> b!135226 m!161233))

(assert (=> b!133445 d!41967))

(assert (=> d!40483 d!40475))

(declare-fun d!41969 () Bool)

(declare-fun lt!70776 () Bool)

(assert (=> d!41969 (= lt!70776 (select (content!132 lt!69461) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun e!88064 () Bool)

(assert (=> d!41969 (= lt!70776 e!88064)))

(declare-fun res!64954 () Bool)

(assert (=> d!41969 (=> (not res!64954) (not e!88064))))

(assert (=> d!41969 (= res!64954 ((_ is Cons!1731) lt!69461))))

(assert (=> d!41969 (= (contains!898 lt!69461 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!70776)))

(declare-fun b!135227 () Bool)

(declare-fun e!88063 () Bool)

(assert (=> b!135227 (= e!88064 e!88063)))

(declare-fun res!64955 () Bool)

(assert (=> b!135227 (=> res!64955 e!88063)))

(assert (=> b!135227 (= res!64955 (= (h!2336 lt!69461) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135228 () Bool)

(assert (=> b!135228 (= e!88063 (contains!898 (t!6198 lt!69461) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!41969 res!64954) b!135227))

(assert (= (and b!135227 (not res!64955)) b!135228))

(declare-fun m!161235 () Bool)

(assert (=> d!41969 m!161235))

(declare-fun m!161237 () Bool)

(assert (=> d!41969 m!161237))

(declare-fun m!161239 () Bool)

(assert (=> b!135228 m!161239))

(assert (=> b!133177 d!41969))

(declare-fun d!41971 () Bool)

(declare-fun lt!70777 () Bool)

(assert (=> d!41971 (= lt!70777 (select (content!132 lt!70010) (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun e!88066 () Bool)

(assert (=> d!41971 (= lt!70777 e!88066)))

(declare-fun res!64956 () Bool)

(assert (=> d!41971 (=> (not res!64956) (not e!88066))))

(assert (=> d!41971 (= res!64956 ((_ is Cons!1731) lt!70010))))

(assert (=> d!41971 (= (contains!898 lt!70010 (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!70777)))

(declare-fun b!135229 () Bool)

(declare-fun e!88065 () Bool)

(assert (=> b!135229 (= e!88066 e!88065)))

(declare-fun res!64957 () Bool)

(assert (=> b!135229 (=> res!64957 e!88065)))

(assert (=> b!135229 (= res!64957 (= (h!2336 lt!70010) (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135230 () Bool)

(assert (=> b!135230 (= e!88065 (contains!898 (t!6198 lt!70010) (tuple2!2609 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!41971 res!64956) b!135229))

(assert (= (and b!135229 (not res!64957)) b!135230))

(declare-fun m!161241 () Bool)

(assert (=> d!41971 m!161241))

(declare-fun m!161243 () Bool)

(assert (=> d!41971 m!161243))

(declare-fun m!161245 () Bool)

(assert (=> b!135230 m!161245))

(assert (=> b!133706 d!41971))

(declare-fun d!41973 () Bool)

(assert (=> d!41973 (= (apply!116 lt!70114 (select (arr!2260 lt!69595) #b00000000000000000000000000000000)) (get!1491 (getValueByKey!171 (toList!869 lt!70114) (select (arr!2260 lt!69595) #b00000000000000000000000000000000))))))

(declare-fun bs!5667 () Bool)

(assert (= bs!5667 d!41973))

(assert (=> bs!5667 m!158567))

(assert (=> bs!5667 m!160979))

(assert (=> bs!5667 m!160979))

(declare-fun m!161247 () Bool)

(assert (=> bs!5667 m!161247))

(assert (=> b!133931 d!41973))

(declare-fun d!41975 () Bool)

(declare-fun c!25255 () Bool)

(assert (=> d!41975 (= c!25255 ((_ is ValueCellFull!1095) (select (arr!2261 lt!69607) #b00000000000000000000000000000000)))))

(declare-fun e!88067 () V!3483)

(assert (=> d!41975 (= (get!1488 (select (arr!2261 lt!69607) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!88067)))

(declare-fun b!135231 () Bool)

(assert (=> b!135231 (= e!88067 (get!1489 (select (arr!2261 lt!69607) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135232 () Bool)

(assert (=> b!135232 (= e!88067 (get!1490 (select (arr!2261 lt!69607) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41975 c!25255) b!135231))

(assert (= (and d!41975 (not c!25255)) b!135232))

(assert (=> b!135231 m!158571))

(assert (=> b!135231 m!156647))

(declare-fun m!161249 () Bool)

(assert (=> b!135231 m!161249))

(assert (=> b!135232 m!158571))

(assert (=> b!135232 m!156647))

(declare-fun m!161251 () Bool)

(assert (=> b!135232 m!161251))

(assert (=> b!133931 d!41975))

(assert (=> d!40481 d!40479))

(assert (=> d!40481 d!40335))

(assert (=> d!40481 d!40483))

(assert (=> bm!14719 d!41813))

(declare-fun d!41977 () Bool)

(declare-fun lt!70778 () Bool)

(assert (=> d!41977 (= lt!70778 (select (content!132 lt!69378) (tuple2!2609 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!88069 () Bool)

(assert (=> d!41977 (= lt!70778 e!88069)))

(declare-fun res!64958 () Bool)

(assert (=> d!41977 (=> (not res!64958) (not e!88069))))

(assert (=> d!41977 (= res!64958 ((_ is Cons!1731) lt!69378))))

(assert (=> d!41977 (= (contains!898 lt!69378 (tuple2!2609 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) lt!70778)))

(declare-fun b!135233 () Bool)

(declare-fun e!88068 () Bool)

(assert (=> b!135233 (= e!88069 e!88068)))

(declare-fun res!64959 () Bool)

(assert (=> b!135233 (=> res!64959 e!88068)))

(assert (=> b!135233 (= res!64959 (= (h!2336 lt!69378) (tuple2!2609 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135234 () Bool)

(assert (=> b!135234 (= e!88068 (contains!898 (t!6198 lt!69378) (tuple2!2609 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!41977 res!64958) b!135233))

(assert (= (and b!135233 (not res!64959)) b!135234))

(declare-fun m!161253 () Bool)

(assert (=> d!41977 m!161253))

(declare-fun m!161255 () Bool)

(assert (=> d!41977 m!161255))

(declare-fun m!161257 () Bool)

(assert (=> b!135234 m!161257))

(assert (=> b!133782 d!41977))

(declare-fun d!41979 () Bool)

(assert (=> d!41979 (= (get!1491 (getValueByKey!171 (toList!869 lt!69510) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3201 (getValueByKey!171 (toList!869 lt!69510) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40759 d!41979))

(assert (=> d!40759 d!41605))

(assert (=> d!40627 d!40549))

(assert (=> d!40627 d!40335))

(assert (=> d!40627 d!40551))

(assert (=> b!133940 d!41389))

(declare-fun d!41981 () Bool)

(declare-fun res!64960 () Bool)

(declare-fun e!88070 () Bool)

(assert (=> d!41981 (=> res!64960 e!88070)))

(assert (=> d!41981 (= res!64960 (and ((_ is Cons!1731) lt!69474) (= (_1!1314 (h!2336 lt!69474)) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!41981 (= (containsKey!175 lt!69474 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!88070)))

(declare-fun b!135235 () Bool)

(declare-fun e!88071 () Bool)

(assert (=> b!135235 (= e!88070 e!88071)))

(declare-fun res!64961 () Bool)

(assert (=> b!135235 (=> (not res!64961) (not e!88071))))

(assert (=> b!135235 (= res!64961 (and (or (not ((_ is Cons!1731) lt!69474)) (bvsle (_1!1314 (h!2336 lt!69474)) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) ((_ is Cons!1731) lt!69474) (bvslt (_1!1314 (h!2336 lt!69474)) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135236 () Bool)

(assert (=> b!135236 (= e!88071 (containsKey!175 (t!6198 lt!69474) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!41981 (not res!64960)) b!135235))

(assert (= (and b!135235 res!64961) b!135236))

(declare-fun m!161259 () Bool)

(assert (=> b!135236 m!161259))

(assert (=> b!133597 d!41981))

(assert (=> b!133237 d!40985))

(declare-fun d!41983 () Bool)

(assert (=> d!41983 (= (apply!116 lt!69869 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1491 (getValueByKey!171 (toList!869 lt!69869) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5668 () Bool)

(assert (= bs!5668 d!41983))

(assert (=> bs!5668 m!156533))

(assert (=> bs!5668 m!161039))

(assert (=> bs!5668 m!161039))

(declare-fun m!161261 () Bool)

(assert (=> bs!5668 m!161261))

(assert (=> b!133468 d!41983))

(assert (=> b!133468 d!40923))

(declare-fun b!135237 () Bool)

(declare-fun e!88072 () Option!177)

(assert (=> b!135237 (= e!88072 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 lt!69225))))))))

(declare-fun b!135240 () Bool)

(declare-fun e!88073 () Option!177)

(assert (=> b!135240 (= e!88073 None!175)))

(declare-fun b!135239 () Bool)

(assert (=> b!135239 (= e!88073 (getValueByKey!171 (t!6198 (t!6198 (toList!869 lt!69225))) lt!69223))))

(declare-fun b!135238 () Bool)

(assert (=> b!135238 (= e!88072 e!88073)))

(declare-fun c!25257 () Bool)

(assert (=> b!135238 (= c!25257 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69225))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69225)))) lt!69223))))))

(declare-fun d!41985 () Bool)

(declare-fun c!25256 () Bool)

(assert (=> d!41985 (= c!25256 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69225))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69225)))) lt!69223)))))

(assert (=> d!41985 (= (getValueByKey!171 (t!6198 (toList!869 lt!69225)) lt!69223) e!88072)))

(assert (= (and d!41985 c!25256) b!135237))

(assert (= (and d!41985 (not c!25256)) b!135238))

(assert (= (and b!135238 c!25257) b!135239))

(assert (= (and b!135238 (not c!25257)) b!135240))

(declare-fun m!161263 () Bool)

(assert (=> b!135239 m!161263))

(assert (=> b!133522 d!41985))

(declare-fun d!41987 () Bool)

(assert (=> d!41987 (= (validMask!0 (mask!7165 (_2!1315 lt!69327))) (and (or (= (mask!7165 (_2!1315 lt!69327)) #b00000000000000000000000000000111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000000000000000000000001111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000000000000000000000011111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000000000000000000000111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000000000000000000001111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000000000000000000011111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000000000000000000111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000000000000000001111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000000000000000011111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000000000000000111111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000000000000001111111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000000000000011111111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000000000000111111111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000000000001111111111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000000000011111111111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000000000111111111111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000000001111111111111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000000011111111111111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000000111111111111111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000001111111111111111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000011111111111111111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000000111111111111111111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000001111111111111111111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000011111111111111111111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00000111111111111111111111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00001111111111111111111111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00011111111111111111111111111111) (= (mask!7165 (_2!1315 lt!69327)) #b00111111111111111111111111111111)) (bvsle (mask!7165 (_2!1315 lt!69327)) #b00111111111111111111111111111111)))))

(assert (=> d!40489 d!41987))

(declare-fun b!135241 () Bool)

(declare-fun e!88074 () Option!177)

(assert (=> b!135241 (= e!88074 (Some!176 (_2!1314 (h!2336 (toList!869 lt!70026)))))))

(declare-fun b!135244 () Bool)

(declare-fun e!88075 () Option!177)

(assert (=> b!135244 (= e!88075 None!175)))

(declare-fun b!135243 () Bool)

(assert (=> b!135243 (= e!88075 (getValueByKey!171 (t!6198 (toList!869 lt!70026)) (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!135242 () Bool)

(assert (=> b!135242 (= e!88074 e!88075)))

(declare-fun c!25259 () Bool)

(assert (=> b!135242 (= c!25259 (and ((_ is Cons!1731) (toList!869 lt!70026)) (not (= (_1!1314 (h!2336 (toList!869 lt!70026))) (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))))

(declare-fun c!25258 () Bool)

(declare-fun d!41989 () Bool)

(assert (=> d!41989 (= c!25258 (and ((_ is Cons!1731) (toList!869 lt!70026)) (= (_1!1314 (h!2336 (toList!869 lt!70026))) (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (=> d!41989 (= (getValueByKey!171 (toList!869 lt!70026) (_1!1314 (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) e!88074)))

(assert (= (and d!41989 c!25258) b!135241))

(assert (= (and d!41989 (not c!25258)) b!135242))

(assert (= (and b!135242 c!25259) b!135243))

(assert (= (and b!135242 (not c!25259)) b!135244))

(declare-fun m!161265 () Bool)

(assert (=> b!135243 m!161265))

(assert (=> b!133749 d!41989))

(declare-fun d!41991 () Bool)

(declare-fun res!64962 () Bool)

(declare-fun e!88076 () Bool)

(assert (=> d!41991 (=> res!64962 e!88076)))

(assert (=> d!41991 (= res!64962 (or ((_ is Nil!1732) lt!70010) ((_ is Nil!1732) (t!6198 lt!70010))))))

(assert (=> d!41991 (= (isStrictlySorted!317 lt!70010) e!88076)))

(declare-fun b!135245 () Bool)

(declare-fun e!88077 () Bool)

(assert (=> b!135245 (= e!88076 e!88077)))

(declare-fun res!64963 () Bool)

(assert (=> b!135245 (=> (not res!64963) (not e!88077))))

(assert (=> b!135245 (= res!64963 (bvslt (_1!1314 (h!2336 lt!70010)) (_1!1314 (h!2336 (t!6198 lt!70010)))))))

(declare-fun b!135246 () Bool)

(assert (=> b!135246 (= e!88077 (isStrictlySorted!317 (t!6198 lt!70010)))))

(assert (= (and d!41991 (not res!64962)) b!135245))

(assert (= (and b!135245 res!64963) b!135246))

(declare-fun m!161267 () Bool)

(assert (=> b!135246 m!161267))

(assert (=> d!40753 d!41991))

(declare-fun d!41993 () Bool)

(declare-fun res!64964 () Bool)

(declare-fun e!88078 () Bool)

(assert (=> d!41993 (=> res!64964 e!88078)))

(assert (=> d!41993 (= res!64964 (or ((_ is Nil!1732) (toList!869 call!14566)) ((_ is Nil!1732) (t!6198 (toList!869 call!14566)))))))

(assert (=> d!41993 (= (isStrictlySorted!317 (toList!869 call!14566)) e!88078)))

(declare-fun b!135247 () Bool)

(declare-fun e!88079 () Bool)

(assert (=> b!135247 (= e!88078 e!88079)))

(declare-fun res!64965 () Bool)

(assert (=> b!135247 (=> (not res!64965) (not e!88079))))

(assert (=> b!135247 (= res!64965 (bvslt (_1!1314 (h!2336 (toList!869 call!14566))) (_1!1314 (h!2336 (t!6198 (toList!869 call!14566))))))))

(declare-fun b!135248 () Bool)

(assert (=> b!135248 (= e!88079 (isStrictlySorted!317 (t!6198 (toList!869 call!14566))))))

(assert (= (and d!41993 (not res!64964)) b!135247))

(assert (= (and b!135247 res!64965) b!135248))

(assert (=> b!135248 m!160601))

(assert (=> d!40753 d!41993))

(assert (=> d!40469 d!40475))

(declare-fun d!41995 () Bool)

(assert (=> d!41995 (isDefined!125 (getValueByKey!171 (toList!869 lt!69510) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70779 () Unit!4150)

(assert (=> d!41995 (= lt!70779 (choose!831 (toList!869 lt!69510) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88080 () Bool)

(assert (=> d!41995 e!88080))

(declare-fun res!64966 () Bool)

(assert (=> d!41995 (=> (not res!64966) (not e!88080))))

(assert (=> d!41995 (= res!64966 (isStrictlySorted!317 (toList!869 lt!69510)))))

(assert (=> d!41995 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69510) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70779)))

(declare-fun b!135249 () Bool)

(assert (=> b!135249 (= e!88080 (containsKey!175 (toList!869 lt!69510) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41995 res!64966) b!135249))

(assert (=> d!41995 m!158053))

(assert (=> d!41995 m!158053))

(assert (=> d!41995 m!158055))

(declare-fun m!161269 () Bool)

(assert (=> d!41995 m!161269))

(assert (=> d!41995 m!160375))

(assert (=> b!135249 m!158049))

(assert (=> b!133630 d!41995))

(declare-fun d!41997 () Bool)

(assert (=> d!41997 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69510) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69510) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5669 () Bool)

(assert (= bs!5669 d!41997))

(assert (=> bs!5669 m!158053))

(declare-fun m!161271 () Bool)

(assert (=> bs!5669 m!161271))

(assert (=> b!133630 d!41997))

(declare-fun b!135250 () Bool)

(declare-fun e!88081 () Option!177)

(assert (=> b!135250 (= e!88081 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69510)))))))

(declare-fun b!135253 () Bool)

(declare-fun e!88082 () Option!177)

(assert (=> b!135253 (= e!88082 None!175)))

(declare-fun b!135252 () Bool)

(assert (=> b!135252 (= e!88082 (getValueByKey!171 (t!6198 (toList!869 lt!69510)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135251 () Bool)

(assert (=> b!135251 (= e!88081 e!88082)))

(declare-fun c!25261 () Bool)

(assert (=> b!135251 (= c!25261 (and ((_ is Cons!1731) (toList!869 lt!69510)) (not (= (_1!1314 (h!2336 (toList!869 lt!69510))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!41999 () Bool)

(declare-fun c!25260 () Bool)

(assert (=> d!41999 (= c!25260 (and ((_ is Cons!1731) (toList!869 lt!69510)) (= (_1!1314 (h!2336 (toList!869 lt!69510))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41999 (= (getValueByKey!171 (toList!869 lt!69510) #b0000000000000000000000000000000000000000000000000000000000000000) e!88081)))

(assert (= (and d!41999 c!25260) b!135250))

(assert (= (and d!41999 (not c!25260)) b!135251))

(assert (= (and b!135251 c!25261) b!135252))

(assert (= (and b!135251 (not c!25261)) b!135253))

(declare-fun m!161273 () Bool)

(assert (=> b!135252 m!161273))

(assert (=> b!133630 d!41999))

(declare-fun d!42001 () Bool)

(declare-fun res!64967 () Bool)

(declare-fun e!88083 () Bool)

(assert (=> d!42001 (=> res!64967 e!88083)))

(assert (=> d!42001 (= res!64967 (and ((_ is Cons!1731) (t!6198 (toList!869 call!14629))) (= (_1!1314 (h!2336 (t!6198 (toList!869 call!14629)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!42001 (= (containsKey!175 (t!6198 (toList!869 call!14629)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) e!88083)))

(declare-fun b!135254 () Bool)

(declare-fun e!88084 () Bool)

(assert (=> b!135254 (= e!88083 e!88084)))

(declare-fun res!64968 () Bool)

(assert (=> b!135254 (=> (not res!64968) (not e!88084))))

(assert (=> b!135254 (= res!64968 (and (or (not ((_ is Cons!1731) (t!6198 (toList!869 call!14629)))) (bvsle (_1!1314 (h!2336 (t!6198 (toList!869 call!14629)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))) ((_ is Cons!1731) (t!6198 (toList!869 call!14629))) (bvslt (_1!1314 (h!2336 (t!6198 (toList!869 call!14629)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(declare-fun b!135255 () Bool)

(assert (=> b!135255 (= e!88084 (containsKey!175 (t!6198 (t!6198 (toList!869 call!14629))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!42001 (not res!64967)) b!135254))

(assert (= (and b!135254 res!64968) b!135255))

(assert (=> b!135255 m!156287))

(declare-fun m!161275 () Bool)

(assert (=> b!135255 m!161275))

(assert (=> b!134014 d!42001))

(declare-fun d!42003 () Bool)

(assert (=> d!42003 (= (isEmpty!414 lt!69822) (isEmpty!416 (toList!869 lt!69822)))))

(declare-fun bs!5670 () Bool)

(assert (= bs!5670 d!42003))

(declare-fun m!161277 () Bool)

(assert (=> bs!5670 m!161277))

(assert (=> b!133409 d!42003))

(assert (=> b!134009 d!40423))

(declare-fun d!42005 () Bool)

(assert (=> d!42005 (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69928 #b00000000000000000000000000000000)))

(declare-fun lt!70780 () Unit!4150)

(assert (=> d!42005 (= lt!70780 (choose!13 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69928 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> d!42005 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (=> d!42005 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69928 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) lt!70780)))

(declare-fun bs!5671 () Bool)

(assert (= bs!5671 d!42005))

(assert (=> bs!5671 m!157905))

(declare-fun m!161279 () Bool)

(assert (=> bs!5671 m!161279))

(assert (=> b!133548 d!42005))

(declare-fun d!42007 () Bool)

(declare-fun res!64969 () Bool)

(declare-fun e!88085 () Bool)

(assert (=> d!42007 (=> res!64969 e!88085)))

(assert (=> d!42007 (= res!64969 (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) lt!69928))))

(assert (=> d!42007 (= (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69928 #b00000000000000000000000000000000) e!88085)))

(declare-fun b!135256 () Bool)

(declare-fun e!88086 () Bool)

(assert (=> b!135256 (= e!88085 e!88086)))

(declare-fun res!64970 () Bool)

(assert (=> b!135256 (=> (not res!64970) (not e!88086))))

(assert (=> b!135256 (= res!64970 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!135257 () Bool)

(assert (=> b!135257 (= e!88086 (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69928 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!42007 (not res!64969)) b!135256))

(assert (= (and b!135256 res!64970) b!135257))

(assert (=> d!42007 m!156487))

(declare-fun m!161281 () Bool)

(assert (=> b!135257 m!161281))

(assert (=> b!133548 d!42007))

(declare-fun b!135258 () Bool)

(declare-fun e!88089 () SeekEntryResult!285)

(declare-fun lt!70782 () SeekEntryResult!285)

(assert (=> b!135258 (= e!88089 (MissingZero!285 (index!3302 lt!70782)))))

(declare-fun b!135259 () Bool)

(assert (=> b!135259 (= e!88089 (seekKeyOrZeroReturnVacant!0 (x!15602 lt!70782) (index!3302 lt!70782) (index!3302 lt!70782) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(declare-fun b!135260 () Bool)

(declare-fun c!25262 () Bool)

(declare-fun lt!70783 () (_ BitVec 64))

(assert (=> b!135260 (= c!25262 (= lt!70783 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88088 () SeekEntryResult!285)

(assert (=> b!135260 (= e!88088 e!88089)))

(declare-fun b!135261 () Bool)

(declare-fun e!88087 () SeekEntryResult!285)

(assert (=> b!135261 (= e!88087 Undefined!285)))

(declare-fun b!135262 () Bool)

(assert (=> b!135262 (= e!88087 e!88088)))

(assert (=> b!135262 (= lt!70783 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3302 lt!70782)))))

(declare-fun c!25264 () Bool)

(assert (=> b!135262 (= c!25264 (= lt!70783 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!42009 () Bool)

(declare-fun lt!70781 () SeekEntryResult!285)

(assert (=> d!42009 (and (or ((_ is Undefined!285) lt!70781) (not ((_ is Found!285) lt!70781)) (and (bvsge (index!3301 lt!70781) #b00000000000000000000000000000000) (bvslt (index!3301 lt!70781) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))) (or ((_ is Undefined!285) lt!70781) ((_ is Found!285) lt!70781) (not ((_ is MissingZero!285) lt!70781)) (and (bvsge (index!3300 lt!70781) #b00000000000000000000000000000000) (bvslt (index!3300 lt!70781) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))) (or ((_ is Undefined!285) lt!70781) ((_ is Found!285) lt!70781) ((_ is MissingZero!285) lt!70781) (not ((_ is MissingVacant!285) lt!70781)) (and (bvsge (index!3303 lt!70781) #b00000000000000000000000000000000) (bvslt (index!3303 lt!70781) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))) (or ((_ is Undefined!285) lt!70781) (ite ((_ is Found!285) lt!70781) (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3301 lt!70781)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (ite ((_ is MissingZero!285) lt!70781) (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3300 lt!70781)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!285) lt!70781) (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (index!3303 lt!70781)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42009 (= lt!70781 e!88087)))

(declare-fun c!25263 () Bool)

(assert (=> d!42009 (= c!25263 (and ((_ is Intermediate!285) lt!70782) (undefined!1097 lt!70782)))))

(assert (=> d!42009 (= lt!70782 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (mask!7165 (v!3197 (underlying!454 thiss!992)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))))))

(assert (=> d!42009 (validMask!0 (mask!7165 (v!3197 (underlying!454 thiss!992))))))

(assert (=> d!42009 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4614 (v!3197 (underlying!454 thiss!992))) (mask!7165 (v!3197 (underlying!454 thiss!992)))) lt!70781)))

(declare-fun b!135263 () Bool)

(assert (=> b!135263 (= e!88088 (Found!285 (index!3302 lt!70782)))))

(assert (= (and d!42009 c!25263) b!135261))

(assert (= (and d!42009 (not c!25263)) b!135262))

(assert (= (and b!135262 c!25264) b!135263))

(assert (= (and b!135262 (not c!25264)) b!135260))

(assert (= (and b!135260 c!25262) b!135258))

(assert (= (and b!135260 (not c!25262)) b!135259))

(assert (=> b!135259 m!157901))

(declare-fun m!161283 () Bool)

(assert (=> b!135259 m!161283))

(declare-fun m!161285 () Bool)

(assert (=> b!135262 m!161285))

(declare-fun m!161287 () Bool)

(assert (=> d!42009 m!161287))

(assert (=> d!42009 m!157901))

(declare-fun m!161289 () Bool)

(assert (=> d!42009 m!161289))

(declare-fun m!161291 () Bool)

(assert (=> d!42009 m!161291))

(declare-fun m!161293 () Bool)

(assert (=> d!42009 m!161293))

(assert (=> d!42009 m!156295))

(declare-fun m!161295 () Bool)

(assert (=> d!42009 m!161295))

(assert (=> d!42009 m!157901))

(assert (=> d!42009 m!161287))

(assert (=> b!133548 d!42009))

(declare-fun d!42011 () Bool)

(assert (=> d!42011 (isDefined!125 (getValueByKey!171 (toList!869 lt!69416) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!70784 () Unit!4150)

(assert (=> d!42011 (= lt!70784 (choose!831 (toList!869 lt!69416) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!88090 () Bool)

(assert (=> d!42011 e!88090))

(declare-fun res!64971 () Bool)

(assert (=> d!42011 (=> (not res!64971) (not e!88090))))

(assert (=> d!42011 (= res!64971 (isStrictlySorted!317 (toList!869 lt!69416)))))

(assert (=> d!42011 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69416) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70784)))

(declare-fun b!135264 () Bool)

(assert (=> b!135264 (= e!88090 (containsKey!175 (toList!869 lt!69416) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!42011 res!64971) b!135264))

(assert (=> d!42011 m!156533))

(assert (=> d!42011 m!158151))

(assert (=> d!42011 m!158151))

(assert (=> d!42011 m!158153))

(assert (=> d!42011 m!156533))

(declare-fun m!161297 () Bool)

(assert (=> d!42011 m!161297))

(assert (=> d!42011 m!161077))

(assert (=> b!135264 m!156533))

(assert (=> b!135264 m!158147))

(assert (=> b!133674 d!42011))

(declare-fun d!42013 () Bool)

(assert (=> d!42013 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69416) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69416) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5672 () Bool)

(assert (= bs!5672 d!42013))

(assert (=> bs!5672 m!158151))

(declare-fun m!161299 () Bool)

(assert (=> bs!5672 m!161299))

(assert (=> b!133674 d!42013))

(declare-fun b!135265 () Bool)

(declare-fun e!88091 () Option!177)

(assert (=> b!135265 (= e!88091 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69416)))))))

(declare-fun b!135268 () Bool)

(declare-fun e!88092 () Option!177)

(assert (=> b!135268 (= e!88092 None!175)))

(declare-fun b!135267 () Bool)

(assert (=> b!135267 (= e!88092 (getValueByKey!171 (t!6198 (toList!869 lt!69416)) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135266 () Bool)

(assert (=> b!135266 (= e!88091 e!88092)))

(declare-fun c!25266 () Bool)

(assert (=> b!135266 (= c!25266 (and ((_ is Cons!1731) (toList!869 lt!69416)) (not (= (_1!1314 (h!2336 (toList!869 lt!69416))) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun d!42015 () Bool)

(declare-fun c!25265 () Bool)

(assert (=> d!42015 (= c!25265 (and ((_ is Cons!1731) (toList!869 lt!69416)) (= (_1!1314 (h!2336 (toList!869 lt!69416))) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!42015 (= (getValueByKey!171 (toList!869 lt!69416) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) e!88091)))

(assert (= (and d!42015 c!25265) b!135265))

(assert (= (and d!42015 (not c!25265)) b!135266))

(assert (= (and b!135266 c!25266) b!135267))

(assert (= (and b!135266 (not c!25266)) b!135268))

(assert (=> b!135267 m!156533))

(declare-fun m!161301 () Bool)

(assert (=> b!135267 m!161301))

(assert (=> b!133674 d!42015))

(declare-fun d!42017 () Bool)

(declare-fun c!25267 () Bool)

(assert (=> d!42017 (= c!25267 ((_ is Nil!1732) (toList!869 lt!69459)))))

(declare-fun e!88093 () (InoxSet tuple2!2608))

(assert (=> d!42017 (= (content!132 (toList!869 lt!69459)) e!88093)))

(declare-fun b!135269 () Bool)

(assert (=> b!135269 (= e!88093 ((as const (Array tuple2!2608 Bool)) false))))

(declare-fun b!135270 () Bool)

(assert (=> b!135270 (= e!88093 ((_ map or) (store ((as const (Array tuple2!2608 Bool)) false) (h!2336 (toList!869 lt!69459)) true) (content!132 (t!6198 (toList!869 lt!69459)))))))

(assert (= (and d!42017 c!25267) b!135269))

(assert (= (and d!42017 (not c!25267)) b!135270))

(declare-fun m!161303 () Bool)

(assert (=> b!135270 m!161303))

(assert (=> b!135270 m!160841))

(assert (=> d!40901 d!42017))

(declare-fun lt!70785 () Bool)

(declare-fun d!42019 () Bool)

(assert (=> d!42019 (= lt!70785 (select (content!132 (t!6198 (toList!869 lt!69472))) (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun e!88095 () Bool)

(assert (=> d!42019 (= lt!70785 e!88095)))

(declare-fun res!64972 () Bool)

(assert (=> d!42019 (=> (not res!64972) (not e!88095))))

(assert (=> d!42019 (= res!64972 ((_ is Cons!1731) (t!6198 (toList!869 lt!69472))))))

(assert (=> d!42019 (= (contains!898 (t!6198 (toList!869 lt!69472)) (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) lt!70785)))

(declare-fun b!135271 () Bool)

(declare-fun e!88094 () Bool)

(assert (=> b!135271 (= e!88095 e!88094)))

(declare-fun res!64973 () Bool)

(assert (=> b!135271 (=> res!64973 e!88094)))

(assert (=> b!135271 (= res!64973 (= (h!2336 (t!6198 (toList!869 lt!69472))) (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!135272 () Bool)

(assert (=> b!135272 (= e!88094 (contains!898 (t!6198 (t!6198 (toList!869 lt!69472))) (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))

(assert (= (and d!42019 res!64972) b!135271))

(assert (= (and b!135271 (not res!64973)) b!135272))

(assert (=> d!42019 m!160139))

(declare-fun m!161305 () Bool)

(assert (=> d!42019 m!161305))

(declare-fun m!161307 () Bool)

(assert (=> b!135272 m!161307))

(assert (=> b!133519 d!42019))

(declare-fun d!42021 () Bool)

(declare-fun res!64974 () Bool)

(declare-fun e!88096 () Bool)

(assert (=> d!42021 (=> res!64974 e!88096)))

(assert (=> d!42021 (= res!64974 (and ((_ is Cons!1731) (toList!869 lt!69463)) (= (_1!1314 (h!2336 (toList!869 lt!69463))) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!42021 (= (containsKey!175 (toList!869 lt!69463) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!88096)))

(declare-fun b!135273 () Bool)

(declare-fun e!88097 () Bool)

(assert (=> b!135273 (= e!88096 e!88097)))

(declare-fun res!64975 () Bool)

(assert (=> b!135273 (=> (not res!64975) (not e!88097))))

(assert (=> b!135273 (= res!64975 (and (or (not ((_ is Cons!1731) (toList!869 lt!69463))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69463))) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) ((_ is Cons!1731) (toList!869 lt!69463)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69463))) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135274 () Bool)

(assert (=> b!135274 (= e!88097 (containsKey!175 (t!6198 (toList!869 lt!69463)) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!42021 (not res!64974)) b!135273))

(assert (= (and b!135273 res!64975) b!135274))

(declare-fun m!161309 () Bool)

(assert (=> b!135274 m!161309))

(assert (=> d!40617 d!42021))

(declare-fun d!42023 () Bool)

(assert (=> d!42023 (isDefined!125 (getValueByKey!171 (toList!869 lt!69405) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!70786 () Unit!4150)

(assert (=> d!42023 (= lt!70786 (choose!831 (toList!869 lt!69405) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!88098 () Bool)

(assert (=> d!42023 e!88098))

(declare-fun res!64976 () Bool)

(assert (=> d!42023 (=> (not res!64976) (not e!88098))))

(assert (=> d!42023 (= res!64976 (isStrictlySorted!317 (toList!869 lt!69405)))))

(assert (=> d!42023 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69405) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!70786)))

(declare-fun b!135275 () Bool)

(assert (=> b!135275 (= e!88098 (containsKey!175 (toList!869 lt!69405) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!42023 res!64976) b!135275))

(assert (=> d!42023 m!156357))

(assert (=> d!42023 m!157959))

(assert (=> d!42023 m!157959))

(assert (=> d!42023 m!157961))

(assert (=> d!42023 m!156357))

(declare-fun m!161311 () Bool)

(assert (=> d!42023 m!161311))

(assert (=> d!42023 m!159209))

(assert (=> b!135275 m!156357))

(assert (=> b!135275 m!157955))

(assert (=> b!133579 d!42023))

(declare-fun d!42025 () Bool)

(assert (=> d!42025 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69405) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69405) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!5673 () Bool)

(assert (= bs!5673 d!42025))

(assert (=> bs!5673 m!157959))

(declare-fun m!161313 () Bool)

(assert (=> bs!5673 m!161313))

(assert (=> b!133579 d!42025))

(assert (=> b!133579 d!41885))

(assert (=> d!40441 d!40443))

(assert (=> d!40441 d!40335))

(declare-fun d!42027 () Bool)

(assert (=> d!42027 (contains!896 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))

(assert (=> d!42027 true))

(declare-fun _$17!56 () Unit!4150)

(assert (=> d!42027 (= (choose!835 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) _$17!56)))

(declare-fun bs!5674 () Bool)

(assert (= bs!5674 d!42027))

(assert (=> bs!5674 m!156355))

(assert (=> bs!5674 m!156355))

(assert (=> bs!5674 m!156287))

(assert (=> bs!5674 m!156963))

(assert (=> d!40441 d!42027))

(assert (=> d!40441 d!40475))

(declare-fun b!135276 () Bool)

(declare-fun e!88099 () Option!177)

(assert (=> b!135276 (= e!88099 (Some!176 (_2!1314 (h!2336 (toList!869 lt!70084)))))))

(declare-fun b!135279 () Bool)

(declare-fun e!88100 () Option!177)

(assert (=> b!135279 (= e!88100 None!175)))

(declare-fun b!135278 () Bool)

(assert (=> b!135278 (= e!88100 (getValueByKey!171 (t!6198 (toList!869 lt!70084)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!135277 () Bool)

(assert (=> b!135277 (= e!88099 e!88100)))

(declare-fun c!25269 () Bool)

(assert (=> b!135277 (= c!25269 (and ((_ is Cons!1731) (toList!869 lt!70084)) (not (= (_1!1314 (h!2336 (toList!869 lt!70084))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun d!42029 () Bool)

(declare-fun c!25268 () Bool)

(assert (=> d!42029 (= c!25268 (and ((_ is Cons!1731) (toList!869 lt!70084)) (= (_1!1314 (h!2336 (toList!869 lt!70084))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42029 (= (getValueByKey!171 (toList!869 lt!70084) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) e!88099)))

(assert (= (and d!42029 c!25268) b!135276))

(assert (= (and d!42029 (not c!25268)) b!135277))

(assert (= (and b!135277 c!25269) b!135278))

(assert (= (and b!135277 (not c!25269)) b!135279))

(declare-fun m!161315 () Bool)

(assert (=> b!135278 m!161315))

(assert (=> b!133864 d!42029))

(declare-fun d!42031 () Bool)

(assert (=> d!42031 (= (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69497 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!69485)) (v!3201 (getValueByKey!171 (toList!869 (+!170 lt!69497 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!69485)))))

(assert (=> d!40569 d!42031))

(declare-fun b!135280 () Bool)

(declare-fun e!88101 () Option!177)

(assert (=> b!135280 (= e!88101 (Some!176 (_2!1314 (h!2336 (toList!869 (+!170 lt!69497 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))))

(declare-fun b!135283 () Bool)

(declare-fun e!88102 () Option!177)

(assert (=> b!135283 (= e!88102 None!175)))

(declare-fun b!135282 () Bool)

(assert (=> b!135282 (= e!88102 (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69497 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) lt!69485))))

(declare-fun b!135281 () Bool)

(assert (=> b!135281 (= e!88101 e!88102)))

(declare-fun c!25271 () Bool)

(assert (=> b!135281 (= c!25271 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69497 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) (not (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69497 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))) lt!69485))))))

(declare-fun c!25270 () Bool)

(declare-fun d!42033 () Bool)

(assert (=> d!42033 (= c!25270 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69497 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69497 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))) lt!69485)))))

(assert (=> d!42033 (= (getValueByKey!171 (toList!869 (+!170 lt!69497 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!69485) e!88101)))

(assert (= (and d!42033 c!25270) b!135280))

(assert (= (and d!42033 (not c!25270)) b!135281))

(assert (= (and b!135281 c!25271) b!135282))

(assert (= (and b!135281 (not c!25271)) b!135283))

(declare-fun m!161317 () Bool)

(assert (=> b!135282 m!161317))

(assert (=> d!40569 d!42033))

(assert (=> b!133895 d!40549))

(assert (=> b!133895 d!40335))

(assert (=> b!133895 d!40893))

(declare-fun d!42035 () Bool)

(declare-fun res!64977 () Bool)

(declare-fun e!88103 () Bool)

(assert (=> d!42035 (=> res!64977 e!88103)))

(assert (=> d!42035 (= res!64977 (and ((_ is Cons!1731) lt!69461) (= (_1!1314 (h!2336 lt!69461)) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!42035 (= (containsKey!175 lt!69461 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!88103)))

(declare-fun b!135284 () Bool)

(declare-fun e!88104 () Bool)

(assert (=> b!135284 (= e!88103 e!88104)))

(declare-fun res!64978 () Bool)

(assert (=> b!135284 (=> (not res!64978) (not e!88104))))

(assert (=> b!135284 (= res!64978 (and (or (not ((_ is Cons!1731) lt!69461)) (bvsle (_1!1314 (h!2336 lt!69461)) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) ((_ is Cons!1731) lt!69461) (bvslt (_1!1314 (h!2336 lt!69461)) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135285 () Bool)

(assert (=> b!135285 (= e!88104 (containsKey!175 (t!6198 lt!69461) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!42035 (not res!64977)) b!135284))

(assert (= (and b!135284 res!64978) b!135285))

(declare-fun m!161319 () Bool)

(assert (=> b!135285 m!161319))

(assert (=> b!133176 d!42035))

(declare-fun d!42037 () Bool)

(declare-fun e!88105 () Bool)

(assert (=> d!42037 e!88105))

(declare-fun res!64980 () Bool)

(assert (=> d!42037 (=> (not res!64980) (not e!88105))))

(declare-fun lt!70788 () ListLongMap!1707)

(assert (=> d!42037 (= res!64980 (contains!896 lt!70788 (_1!1314 (ite (or c!24728 c!24731) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun lt!70790 () List!1735)

(assert (=> d!42037 (= lt!70788 (ListLongMap!1708 lt!70790))))

(declare-fun lt!70789 () Unit!4150)

(declare-fun lt!70787 () Unit!4150)

(assert (=> d!42037 (= lt!70789 lt!70787)))

(assert (=> d!42037 (= (getValueByKey!171 lt!70790 (_1!1314 (ite (or c!24728 c!24731) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (ite (or c!24728 c!24731) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42037 (= lt!70787 (lemmaContainsTupThenGetReturnValue!88 lt!70790 (_1!1314 (ite (or c!24728 c!24731) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24728 c!24731) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42037 (= lt!70790 (insertStrictlySorted!90 (toList!869 (ite c!24728 call!14744 (ite c!24731 call!14740 call!14745))) (_1!1314 (ite (or c!24728 c!24731) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24728 c!24731) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42037 (= (+!170 (ite c!24728 call!14744 (ite c!24731 call!14740 call!14745)) (ite (or c!24728 c!24731) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70788)))

(declare-fun b!135286 () Bool)

(declare-fun res!64979 () Bool)

(assert (=> b!135286 (=> (not res!64979) (not e!88105))))

(assert (=> b!135286 (= res!64979 (= (getValueByKey!171 (toList!869 lt!70788) (_1!1314 (ite (or c!24728 c!24731) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (ite (or c!24728 c!24731) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!135287 () Bool)

(assert (=> b!135287 (= e!88105 (contains!898 (toList!869 lt!70788) (ite (or c!24728 c!24731) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (= (and d!42037 res!64980) b!135286))

(assert (= (and b!135286 res!64979) b!135287))

(declare-fun m!161321 () Bool)

(assert (=> d!42037 m!161321))

(declare-fun m!161323 () Bool)

(assert (=> d!42037 m!161323))

(declare-fun m!161325 () Bool)

(assert (=> d!42037 m!161325))

(declare-fun m!161327 () Bool)

(assert (=> d!42037 m!161327))

(declare-fun m!161329 () Bool)

(assert (=> b!135286 m!161329))

(declare-fun m!161331 () Bool)

(assert (=> b!135287 m!161331))

(assert (=> bm!14739 d!42037))

(declare-fun b!135288 () Bool)

(declare-fun e!88106 () Option!177)

(assert (=> b!135288 (= e!88106 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 lt!69472))))))))

(declare-fun b!135291 () Bool)

(declare-fun e!88107 () Option!177)

(assert (=> b!135291 (= e!88107 None!175)))

(declare-fun b!135290 () Bool)

(assert (=> b!135290 (= e!88107 (getValueByKey!171 (t!6198 (t!6198 (toList!869 lt!69472))) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!135289 () Bool)

(assert (=> b!135289 (= e!88106 e!88107)))

(declare-fun c!25273 () Bool)

(assert (=> b!135289 (= c!25273 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69472))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69472)))) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun d!42039 () Bool)

(declare-fun c!25272 () Bool)

(assert (=> d!42039 (= c!25272 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69472))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69472)))) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!42039 (= (getValueByKey!171 (t!6198 (toList!869 lt!69472)) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!88106)))

(assert (= (and d!42039 c!25272) b!135288))

(assert (= (and d!42039 (not c!25272)) b!135289))

(assert (= (and b!135289 c!25273) b!135290))

(assert (= (and b!135289 (not c!25273)) b!135291))

(declare-fun m!161333 () Bool)

(assert (=> b!135290 m!161333))

(assert (=> b!133586 d!42039))

(assert (=> b!133252 d!40473))

(assert (=> bm!14793 d!40993))

(assert (=> b!133279 d!40473))

(declare-fun b!135292 () Bool)

(declare-fun e!88108 () Option!177)

(assert (=> b!135292 (= e!88108 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 call!14628))))))))

(declare-fun b!135295 () Bool)

(declare-fun e!88109 () Option!177)

(assert (=> b!135295 (= e!88109 None!175)))

(declare-fun b!135294 () Bool)

(assert (=> b!135294 (= e!88109 (getValueByKey!171 (t!6198 (t!6198 (toList!869 call!14628))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(declare-fun b!135293 () Bool)

(assert (=> b!135293 (= e!88108 e!88109)))

(declare-fun c!25275 () Bool)

(assert (=> b!135293 (= c!25275 (and ((_ is Cons!1731) (t!6198 (toList!869 call!14628))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 call!14628)))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))))

(declare-fun d!42041 () Bool)

(declare-fun c!25274 () Bool)

(assert (=> d!42041 (= c!25274 (and ((_ is Cons!1731) (t!6198 (toList!869 call!14628))) (= (_1!1314 (h!2336 (t!6198 (toList!869 call!14628)))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))))))

(assert (=> d!42041 (= (getValueByKey!171 (t!6198 (toList!869 call!14628)) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))) e!88108)))

(assert (= (and d!42041 c!25274) b!135292))

(assert (= (and d!42041 (not c!25274)) b!135293))

(assert (= (and b!135293 c!25275) b!135294))

(assert (= (and b!135293 (not c!25275)) b!135295))

(assert (=> b!135294 m!156425))

(declare-fun m!161335 () Bool)

(assert (=> b!135294 m!161335))

(assert (=> b!133566 d!42041))

(declare-fun d!42043 () Bool)

(assert (=> d!42043 (= (get!1491 (getValueByKey!171 (toList!869 lt!69514) lt!69512)) (v!3201 (getValueByKey!171 (toList!869 lt!69514) lt!69512)))))

(assert (=> d!40809 d!42043))

(declare-fun b!135296 () Bool)

(declare-fun e!88110 () Option!177)

(assert (=> b!135296 (= e!88110 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69514)))))))

(declare-fun b!135299 () Bool)

(declare-fun e!88111 () Option!177)

(assert (=> b!135299 (= e!88111 None!175)))

(declare-fun b!135298 () Bool)

(assert (=> b!135298 (= e!88111 (getValueByKey!171 (t!6198 (toList!869 lt!69514)) lt!69512))))

(declare-fun b!135297 () Bool)

(assert (=> b!135297 (= e!88110 e!88111)))

(declare-fun c!25277 () Bool)

(assert (=> b!135297 (= c!25277 (and ((_ is Cons!1731) (toList!869 lt!69514)) (not (= (_1!1314 (h!2336 (toList!869 lt!69514))) lt!69512))))))

(declare-fun d!42045 () Bool)

(declare-fun c!25276 () Bool)

(assert (=> d!42045 (= c!25276 (and ((_ is Cons!1731) (toList!869 lt!69514)) (= (_1!1314 (h!2336 (toList!869 lt!69514))) lt!69512)))))

(assert (=> d!42045 (= (getValueByKey!171 (toList!869 lt!69514) lt!69512) e!88110)))

(assert (= (and d!42045 c!25276) b!135296))

(assert (= (and d!42045 (not c!25276)) b!135297))

(assert (= (and b!135297 c!25277) b!135298))

(assert (= (and b!135297 (not c!25277)) b!135299))

(declare-fun m!161337 () Bool)

(assert (=> b!135298 m!161337))

(assert (=> d!40809 d!42045))

(declare-fun d!42047 () Bool)

(assert (=> d!42047 (= (get!1491 (getValueByKey!171 (toList!869 lt!69416) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))) (v!3201 (getValueByKey!171 (toList!869 lt!69416) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!40921 d!42047))

(assert (=> d!40921 d!42015))

(declare-fun d!42049 () Bool)

(assert (=> d!42049 (= (isEmpty!415 (getValueByKey!171 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000)) (not ((_ is Some!176) (getValueByKey!171 (toList!869 lt!69221) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!40613 d!42049))

(declare-fun d!42051 () Bool)

(declare-fun e!88112 () Bool)

(assert (=> d!42051 e!88112))

(declare-fun res!64982 () Bool)

(assert (=> d!42051 (=> (not res!64982) (not e!88112))))

(declare-fun lt!70792 () ListLongMap!1707)

(assert (=> d!42051 (= res!64982 (contains!896 lt!70792 (_1!1314 (ite (or c!24722 c!24725) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun lt!70794 () List!1735)

(assert (=> d!42051 (= lt!70792 (ListLongMap!1708 lt!70794))))

(declare-fun lt!70793 () Unit!4150)

(declare-fun lt!70791 () Unit!4150)

(assert (=> d!42051 (= lt!70793 lt!70791)))

(assert (=> d!42051 (= (getValueByKey!171 lt!70794 (_1!1314 (ite (or c!24722 c!24725) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (ite (or c!24722 c!24725) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42051 (= lt!70791 (lemmaContainsTupThenGetReturnValue!88 lt!70794 (_1!1314 (ite (or c!24722 c!24725) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24722 c!24725) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42051 (= lt!70794 (insertStrictlySorted!90 (toList!869 (ite c!24722 call!14737 (ite c!24725 call!14733 call!14738))) (_1!1314 (ite (or c!24722 c!24725) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24722 c!24725) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42051 (= (+!170 (ite c!24722 call!14737 (ite c!24725 call!14733 call!14738)) (ite (or c!24722 c!24725) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70792)))

(declare-fun b!135300 () Bool)

(declare-fun res!64981 () Bool)

(assert (=> b!135300 (=> (not res!64981) (not e!88112))))

(assert (=> b!135300 (= res!64981 (= (getValueByKey!171 (toList!869 lt!70792) (_1!1314 (ite (or c!24722 c!24725) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (ite (or c!24722 c!24725) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!135301 () Bool)

(assert (=> b!135301 (= e!88112 (contains!898 (toList!869 lt!70792) (ite (or c!24722 c!24725) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (= (and d!42051 res!64982) b!135300))

(assert (= (and b!135300 res!64981) b!135301))

(declare-fun m!161339 () Bool)

(assert (=> d!42051 m!161339))

(declare-fun m!161341 () Bool)

(assert (=> d!42051 m!161341))

(declare-fun m!161343 () Bool)

(assert (=> d!42051 m!161343))

(declare-fun m!161345 () Bool)

(assert (=> d!42051 m!161345))

(declare-fun m!161347 () Bool)

(assert (=> b!135300 m!161347))

(declare-fun m!161349 () Bool)

(assert (=> b!135301 m!161349))

(assert (=> bm!14732 d!42051))

(declare-fun d!42053 () Bool)

(declare-fun lt!70795 () Bool)

(assert (=> d!42053 (= lt!70795 (select (content!132 (toList!869 lt!70055)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(declare-fun e!88114 () Bool)

(assert (=> d!42053 (= lt!70795 e!88114)))

(declare-fun res!64983 () Bool)

(assert (=> d!42053 (=> (not res!64983) (not e!88114))))

(assert (=> d!42053 (= res!64983 ((_ is Cons!1731) (toList!869 lt!70055)))))

(assert (=> d!42053 (= (contains!898 (toList!869 lt!70055) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!70795)))

(declare-fun b!135302 () Bool)

(declare-fun e!88113 () Bool)

(assert (=> b!135302 (= e!88114 e!88113)))

(declare-fun res!64984 () Bool)

(assert (=> b!135302 (=> res!64984 e!88113)))

(assert (=> b!135302 (= res!64984 (= (h!2336 (toList!869 lt!70055)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(declare-fun b!135303 () Bool)

(assert (=> b!135303 (= e!88113 (contains!898 (t!6198 (toList!869 lt!70055)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(assert (= (and d!42053 res!64983) b!135302))

(assert (= (and b!135302 (not res!64984)) b!135303))

(declare-fun m!161351 () Bool)

(assert (=> d!42053 m!161351))

(declare-fun m!161353 () Bool)

(assert (=> d!42053 m!161353))

(declare-fun m!161355 () Bool)

(assert (=> b!135303 m!161355))

(assert (=> b!133773 d!42053))

(declare-fun bm!14875 () Bool)

(declare-fun call!14878 () List!1735)

(declare-fun call!14879 () List!1735)

(assert (=> bm!14875 (= call!14878 call!14879)))

(declare-fun e!88117 () Bool)

(declare-fun b!135304 () Bool)

(declare-fun lt!70796 () List!1735)

(assert (=> b!135304 (= e!88117 (contains!898 lt!70796 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135305 () Bool)

(declare-fun e!88119 () List!1735)

(assert (=> b!135305 (= e!88119 call!14879)))

(declare-fun b!135306 () Bool)

(declare-fun res!64985 () Bool)

(assert (=> b!135306 (=> (not res!64985) (not e!88117))))

(assert (=> b!135306 (= res!64985 (containsKey!175 lt!70796 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!135307 () Bool)

(declare-fun e!88115 () List!1735)

(assert (=> b!135307 (= e!88115 (insertStrictlySorted!90 (t!6198 (t!6198 (toList!869 lt!69230))) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!135308 () Bool)

(declare-fun e!88116 () List!1735)

(assert (=> b!135308 (= e!88116 call!14878)))

(declare-fun bm!14876 () Bool)

(declare-fun call!14880 () List!1735)

(assert (=> bm!14876 (= call!14879 call!14880)))

(declare-fun b!135310 () Bool)

(declare-fun c!25280 () Bool)

(declare-fun c!25278 () Bool)

(assert (=> b!135310 (= e!88115 (ite c!25280 (t!6198 (t!6198 (toList!869 lt!69230))) (ite c!25278 (Cons!1731 (h!2336 (t!6198 (toList!869 lt!69230))) (t!6198 (t!6198 (toList!869 lt!69230)))) Nil!1732)))))

(declare-fun b!135311 () Bool)

(declare-fun e!88118 () List!1735)

(assert (=> b!135311 (= e!88118 call!14880)))

(declare-fun b!135312 () Bool)

(assert (=> b!135312 (= c!25278 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69230))) (bvsgt (_1!1314 (h!2336 (t!6198 (toList!869 lt!69230)))) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> b!135312 (= e!88119 e!88116)))

(declare-fun d!42055 () Bool)

(assert (=> d!42055 e!88117))

(declare-fun res!64986 () Bool)

(assert (=> d!42055 (=> (not res!64986) (not e!88117))))

(assert (=> d!42055 (= res!64986 (isStrictlySorted!317 lt!70796))))

(assert (=> d!42055 (= lt!70796 e!88118)))

(declare-fun c!25279 () Bool)

(assert (=> d!42055 (= c!25279 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69230))) (bvslt (_1!1314 (h!2336 (t!6198 (toList!869 lt!69230)))) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!42055 (isStrictlySorted!317 (t!6198 (toList!869 lt!69230)))))

(assert (=> d!42055 (= (insertStrictlySorted!90 (t!6198 (toList!869 lt!69230)) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!70796)))

(declare-fun b!135309 () Bool)

(assert (=> b!135309 (= e!88118 e!88119)))

(assert (=> b!135309 (= c!25280 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69230))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69230)))) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135313 () Bool)

(assert (=> b!135313 (= e!88116 call!14878)))

(declare-fun bm!14877 () Bool)

(assert (=> bm!14877 (= call!14880 ($colon$colon!91 e!88115 (ite c!25279 (h!2336 (t!6198 (toList!869 lt!69230))) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!25281 () Bool)

(assert (=> bm!14877 (= c!25281 c!25279)))

(assert (= (and d!42055 c!25279) b!135311))

(assert (= (and d!42055 (not c!25279)) b!135309))

(assert (= (and b!135309 c!25280) b!135305))

(assert (= (and b!135309 (not c!25280)) b!135312))

(assert (= (and b!135312 c!25278) b!135313))

(assert (= (and b!135312 (not c!25278)) b!135308))

(assert (= (or b!135313 b!135308) bm!14875))

(assert (= (or b!135305 bm!14875) bm!14876))

(assert (= (or b!135311 bm!14876) bm!14877))

(assert (= (and bm!14877 c!25281) b!135307))

(assert (= (and bm!14877 (not c!25281)) b!135310))

(assert (= (and d!42055 res!64986) b!135306))

(assert (= (and b!135306 res!64985) b!135304))

(declare-fun m!161357 () Bool)

(assert (=> b!135306 m!161357))

(declare-fun m!161359 () Bool)

(assert (=> b!135304 m!161359))

(declare-fun m!161361 () Bool)

(assert (=> d!42055 m!161361))

(declare-fun m!161363 () Bool)

(assert (=> d!42055 m!161363))

(declare-fun m!161365 () Bool)

(assert (=> bm!14877 m!161365))

(declare-fun m!161367 () Bool)

(assert (=> b!135307 m!161367))

(assert (=> b!133540 d!42055))

(declare-fun d!42057 () Bool)

(assert (=> d!42057 (= ($colon$colon!91 e!87191 (ite c!24846 (h!2336 (toList!869 lt!69225)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) (Cons!1731 (ite c!24846 (h!2336 (toList!869 lt!69225)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) e!87191))))

(assert (=> bm!14775 d!42057))

(declare-fun d!42059 () Bool)

(assert (=> d!42059 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69356) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69356) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun bs!5675 () Bool)

(assert (= bs!5675 d!42059))

(assert (=> bs!5675 m!156545))

(declare-fun m!161369 () Bool)

(assert (=> bs!5675 m!161369))

(assert (=> b!133611 d!42059))

(assert (=> b!133611 d!40485))

(declare-fun d!42061 () Bool)

(assert (=> d!42061 (= (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69518 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))) lt!69517)) (v!3201 (getValueByKey!171 (toList!869 (+!170 lt!69518 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))) lt!69517)))))

(assert (=> d!40791 d!42061))

(declare-fun b!135314 () Bool)

(declare-fun e!88120 () Option!177)

(assert (=> b!135314 (= e!88120 (Some!176 (_2!1314 (h!2336 (toList!869 (+!170 lt!69518 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))))))))))

(declare-fun b!135317 () Bool)

(declare-fun e!88121 () Option!177)

(assert (=> b!135317 (= e!88121 None!175)))

(declare-fun b!135316 () Bool)

(assert (=> b!135316 (= e!88121 (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69518 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))))) lt!69517))))

(declare-fun b!135315 () Bool)

(assert (=> b!135315 (= e!88120 e!88121)))

(declare-fun c!25283 () Bool)

(assert (=> b!135315 (= c!25283 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69518 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))))) (not (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69518 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))) lt!69517))))))

(declare-fun c!25282 () Bool)

(declare-fun d!42063 () Bool)

(assert (=> d!42063 (= c!25282 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69518 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69518 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))) lt!69517)))))

(assert (=> d!42063 (= (getValueByKey!171 (toList!869 (+!170 lt!69518 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))) lt!69517) e!88120)))

(assert (= (and d!42063 c!25282) b!135314))

(assert (= (and d!42063 (not c!25282)) b!135315))

(assert (= (and b!135315 c!25283) b!135316))

(assert (= (and b!135315 (not c!25283)) b!135317))

(declare-fun m!161371 () Bool)

(assert (=> b!135316 m!161371))

(assert (=> d!40791 d!42063))

(declare-fun d!42065 () Bool)

(declare-fun res!64987 () Bool)

(declare-fun e!88122 () Bool)

(assert (=> d!42065 (=> res!64987 e!88122)))

(assert (=> d!42065 (= res!64987 (and ((_ is Cons!1731) lt!69378) (= (_1!1314 (h!2336 lt!69378)) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!42065 (= (containsKey!175 lt!69378 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!88122)))

(declare-fun b!135318 () Bool)

(declare-fun e!88123 () Bool)

(assert (=> b!135318 (= e!88122 e!88123)))

(declare-fun res!64988 () Bool)

(assert (=> b!135318 (=> (not res!64988) (not e!88123))))

(assert (=> b!135318 (= res!64988 (and (or (not ((_ is Cons!1731) lt!69378)) (bvsle (_1!1314 (h!2336 lt!69378)) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1731) lt!69378) (bvslt (_1!1314 (h!2336 lt!69378)) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135319 () Bool)

(assert (=> b!135319 (= e!88123 (containsKey!175 (t!6198 lt!69378) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42065 (not res!64987)) b!135318))

(assert (= (and b!135318 res!64988) b!135319))

(declare-fun m!161373 () Bool)

(assert (=> b!135319 m!161373))

(assert (=> b!133781 d!42065))

(declare-fun d!42067 () Bool)

(declare-fun lt!70797 () Bool)

(assert (=> d!42067 (= lt!70797 (select (content!132 (toList!869 lt!69679)) (tuple2!2609 lt!69404 lt!69402)))))

(declare-fun e!88125 () Bool)

(assert (=> d!42067 (= lt!70797 e!88125)))

(declare-fun res!64989 () Bool)

(assert (=> d!42067 (=> (not res!64989) (not e!88125))))

(assert (=> d!42067 (= res!64989 ((_ is Cons!1731) (toList!869 lt!69679)))))

(assert (=> d!42067 (= (contains!898 (toList!869 lt!69679) (tuple2!2609 lt!69404 lt!69402)) lt!70797)))

(declare-fun b!135320 () Bool)

(declare-fun e!88124 () Bool)

(assert (=> b!135320 (= e!88125 e!88124)))

(declare-fun res!64990 () Bool)

(assert (=> b!135320 (=> res!64990 e!88124)))

(assert (=> b!135320 (= res!64990 (= (h!2336 (toList!869 lt!69679)) (tuple2!2609 lt!69404 lt!69402)))))

(declare-fun b!135321 () Bool)

(assert (=> b!135321 (= e!88124 (contains!898 (t!6198 (toList!869 lt!69679)) (tuple2!2609 lt!69404 lt!69402)))))

(assert (= (and d!42067 res!64989) b!135320))

(assert (= (and b!135320 (not res!64990)) b!135321))

(declare-fun m!161375 () Bool)

(assert (=> d!42067 m!161375))

(declare-fun m!161377 () Bool)

(assert (=> d!42067 m!161377))

(declare-fun m!161379 () Bool)

(assert (=> b!135321 m!161379))

(assert (=> b!133224 d!42067))

(declare-fun d!42069 () Bool)

(assert (=> d!42069 (= (isEmpty!414 lt!69891) (isEmpty!416 (toList!869 lt!69891)))))

(declare-fun bs!5676 () Bool)

(assert (= bs!5676 d!42069))

(declare-fun m!161381 () Bool)

(assert (=> bs!5676 m!161381))

(assert (=> b!133482 d!42069))

(declare-fun d!42071 () Bool)

(declare-fun e!88126 () Bool)

(assert (=> d!42071 e!88126))

(declare-fun res!64991 () Bool)

(assert (=> d!42071 (=> res!64991 e!88126)))

(declare-fun lt!70798 () Bool)

(assert (=> d!42071 (= res!64991 (not lt!70798))))

(declare-fun lt!70800 () Bool)

(assert (=> d!42071 (= lt!70798 lt!70800)))

(declare-fun lt!70799 () Unit!4150)

(declare-fun e!88127 () Unit!4150)

(assert (=> d!42071 (= lt!70799 e!88127)))

(declare-fun c!25284 () Bool)

(assert (=> d!42071 (= c!25284 lt!70800)))

(assert (=> d!42071 (= lt!70800 (containsKey!175 (toList!869 lt!69518) lt!69517))))

(assert (=> d!42071 (= (contains!896 lt!69518 lt!69517) lt!70798)))

(declare-fun b!135322 () Bool)

(declare-fun lt!70801 () Unit!4150)

(assert (=> b!135322 (= e!88127 lt!70801)))

(assert (=> b!135322 (= lt!70801 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69518) lt!69517))))

(assert (=> b!135322 (isDefined!125 (getValueByKey!171 (toList!869 lt!69518) lt!69517))))

(declare-fun b!135323 () Bool)

(declare-fun Unit!4259 () Unit!4150)

(assert (=> b!135323 (= e!88127 Unit!4259)))

(declare-fun b!135324 () Bool)

(assert (=> b!135324 (= e!88126 (isDefined!125 (getValueByKey!171 (toList!869 lt!69518) lt!69517)))))

(assert (= (and d!42071 c!25284) b!135322))

(assert (= (and d!42071 (not c!25284)) b!135323))

(assert (= (and d!42071 (not res!64991)) b!135324))

(declare-fun m!161383 () Bool)

(assert (=> d!42071 m!161383))

(declare-fun m!161385 () Bool)

(assert (=> b!135322 m!161385))

(assert (=> b!135322 m!158335))

(assert (=> b!135322 m!158335))

(declare-fun m!161387 () Bool)

(assert (=> b!135322 m!161387))

(assert (=> b!135324 m!158335))

(assert (=> b!135324 m!158335))

(assert (=> b!135324 m!161387))

(assert (=> d!40805 d!42071))

(assert (=> d!40805 d!40791))

(assert (=> d!40805 d!40811))

(declare-fun d!42073 () Bool)

(assert (=> d!42073 (= (apply!116 (+!170 lt!69518 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))) lt!69517) (apply!116 lt!69518 lt!69517))))

(assert (=> d!42073 true))

(declare-fun _$34!983 () Unit!4150)

(assert (=> d!42073 (= (choose!828 lt!69518 lt!69515 (minValue!2720 newMap!16) lt!69517) _$34!983)))

(declare-fun bs!5677 () Bool)

(assert (= bs!5677 d!42073))

(assert (=> bs!5677 m!156911))

(assert (=> bs!5677 m!156911))

(assert (=> bs!5677 m!156913))

(assert (=> bs!5677 m!156927))

(assert (=> d!40805 d!42073))

(assert (=> d!40805 d!40797))

(assert (=> d!40837 d!40337))

(assert (=> b!133939 d!41389))

(assert (=> b!133408 d!41019))

(declare-fun d!42075 () Bool)

(declare-fun e!88128 () Bool)

(assert (=> d!42075 e!88128))

(declare-fun res!64993 () Bool)

(assert (=> d!42075 (=> (not res!64993) (not e!88128))))

(declare-fun lt!70803 () ListLongMap!1707)

(assert (=> d!42075 (= res!64993 (contains!896 lt!70803 (_1!1314 (ite (or c!24858 c!24861) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun lt!70805 () List!1735)

(assert (=> d!42075 (= lt!70803 (ListLongMap!1708 lt!70805))))

(declare-fun lt!70804 () Unit!4150)

(declare-fun lt!70802 () Unit!4150)

(assert (=> d!42075 (= lt!70804 lt!70802)))

(assert (=> d!42075 (= (getValueByKey!171 lt!70805 (_1!1314 (ite (or c!24858 c!24861) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (ite (or c!24858 c!24861) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42075 (= lt!70802 (lemmaContainsTupThenGetReturnValue!88 lt!70805 (_1!1314 (ite (or c!24858 c!24861) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24858 c!24861) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42075 (= lt!70805 (insertStrictlySorted!90 (toList!869 (ite c!24858 call!14787 (ite c!24861 call!14783 call!14788))) (_1!1314 (ite (or c!24858 c!24861) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24858 c!24861) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42075 (= (+!170 (ite c!24858 call!14787 (ite c!24861 call!14783 call!14788)) (ite (or c!24858 c!24861) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70803)))

(declare-fun b!135325 () Bool)

(declare-fun res!64992 () Bool)

(assert (=> b!135325 (=> (not res!64992) (not e!88128))))

(assert (=> b!135325 (= res!64992 (= (getValueByKey!171 (toList!869 lt!70803) (_1!1314 (ite (or c!24858 c!24861) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (ite (or c!24858 c!24861) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!135326 () Bool)

(assert (=> b!135326 (= e!88128 (contains!898 (toList!869 lt!70803) (ite (or c!24858 c!24861) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (= (and d!42075 res!64993) b!135325))

(assert (= (and b!135325 res!64992) b!135326))

(declare-fun m!161389 () Bool)

(assert (=> d!42075 m!161389))

(declare-fun m!161391 () Bool)

(assert (=> d!42075 m!161391))

(declare-fun m!161393 () Bool)

(assert (=> d!42075 m!161393))

(declare-fun m!161395 () Bool)

(assert (=> d!42075 m!161395))

(declare-fun m!161397 () Bool)

(assert (=> b!135325 m!161397))

(declare-fun m!161399 () Bool)

(assert (=> b!135326 m!161399))

(assert (=> bm!14782 d!42075))

(declare-fun d!42077 () Bool)

(declare-fun res!64994 () Bool)

(declare-fun e!88129 () Bool)

(assert (=> d!42077 (=> res!64994 e!88129)))

(assert (=> d!42077 (= res!64994 (and ((_ is Cons!1731) (toList!869 lt!69405)) (= (_1!1314 (h!2336 (toList!869 lt!69405))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42077 (= (containsKey!175 (toList!869 lt!69405) #b0000000000000000000000000000000000000000000000000000000000000000) e!88129)))

(declare-fun b!135327 () Bool)

(declare-fun e!88130 () Bool)

(assert (=> b!135327 (= e!88129 e!88130)))

(declare-fun res!64995 () Bool)

(assert (=> b!135327 (=> (not res!64995) (not e!88130))))

(assert (=> b!135327 (= res!64995 (and (or (not ((_ is Cons!1731) (toList!869 lt!69405))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69405))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1731) (toList!869 lt!69405)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69405))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135328 () Bool)

(assert (=> b!135328 (= e!88130 (containsKey!175 (t!6198 (toList!869 lt!69405)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42077 (not res!64994)) b!135327))

(assert (= (and b!135327 res!64995) b!135328))

(declare-fun m!161401 () Bool)

(assert (=> b!135328 m!161401))

(assert (=> d!40723 d!42077))

(declare-fun d!42079 () Bool)

(declare-fun lt!70806 () Bool)

(assert (=> d!42079 (= lt!70806 (select (content!132 (toList!869 lt!69728)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!88132 () Bool)

(assert (=> d!42079 (= lt!70806 e!88132)))

(declare-fun res!64996 () Bool)

(assert (=> d!42079 (=> (not res!64996) (not e!88132))))

(assert (=> d!42079 (= res!64996 ((_ is Cons!1731) (toList!869 lt!69728)))))

(assert (=> d!42079 (= (contains!898 (toList!869 lt!69728) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70806)))

(declare-fun b!135329 () Bool)

(declare-fun e!88131 () Bool)

(assert (=> b!135329 (= e!88132 e!88131)))

(declare-fun res!64997 () Bool)

(assert (=> b!135329 (=> res!64997 e!88131)))

(assert (=> b!135329 (= res!64997 (= (h!2336 (toList!869 lt!69728)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135330 () Bool)

(assert (=> b!135330 (= e!88131 (contains!898 (t!6198 (toList!869 lt!69728)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42079 res!64996) b!135329))

(assert (= (and b!135329 (not res!64997)) b!135330))

(declare-fun m!161403 () Bool)

(assert (=> d!42079 m!161403))

(declare-fun m!161405 () Bool)

(assert (=> d!42079 m!161405))

(declare-fun m!161407 () Bool)

(assert (=> b!135330 m!161407))

(assert (=> b!133273 d!42079))

(declare-fun d!42081 () Bool)

(declare-fun lt!70807 () Bool)

(assert (=> d!42081 (= lt!70807 (select (content!132 lt!69465) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun e!88134 () Bool)

(assert (=> d!42081 (= lt!70807 e!88134)))

(declare-fun res!64998 () Bool)

(assert (=> d!42081 (=> (not res!64998) (not e!88134))))

(assert (=> d!42081 (= res!64998 ((_ is Cons!1731) lt!69465))))

(assert (=> d!42081 (= (contains!898 lt!69465 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!70807)))

(declare-fun b!135331 () Bool)

(declare-fun e!88133 () Bool)

(assert (=> b!135331 (= e!88134 e!88133)))

(declare-fun res!64999 () Bool)

(assert (=> b!135331 (=> res!64999 e!88133)))

(assert (=> b!135331 (= res!64999 (= (h!2336 lt!69465) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135332 () Bool)

(assert (=> b!135332 (= e!88133 (contains!898 (t!6198 lt!69465) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!42081 res!64998) b!135331))

(assert (= (and b!135331 (not res!64999)) b!135332))

(declare-fun m!161409 () Bool)

(assert (=> d!42081 m!161409))

(declare-fun m!161411 () Bool)

(assert (=> d!42081 m!161411))

(declare-fun m!161413 () Bool)

(assert (=> b!135332 m!161413))

(assert (=> b!133536 d!42081))

(declare-fun d!42083 () Bool)

(declare-fun e!88135 () Bool)

(assert (=> d!42083 e!88135))

(declare-fun res!65000 () Bool)

(assert (=> d!42083 (=> res!65000 e!88135)))

(declare-fun lt!70808 () Bool)

(assert (=> d!42083 (= res!65000 (not lt!70808))))

(declare-fun lt!70810 () Bool)

(assert (=> d!42083 (= lt!70808 lt!70810)))

(declare-fun lt!70809 () Unit!4150)

(declare-fun e!88136 () Unit!4150)

(assert (=> d!42083 (= lt!70809 e!88136)))

(declare-fun c!25285 () Bool)

(assert (=> d!42083 (= c!25285 lt!70810)))

(assert (=> d!42083 (= lt!70810 (containsKey!175 (toList!869 lt!69703) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!42083 (= (contains!896 lt!69703 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70808)))

(declare-fun b!135333 () Bool)

(declare-fun lt!70811 () Unit!4150)

(assert (=> b!135333 (= e!88136 lt!70811)))

(assert (=> b!135333 (= lt!70811 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69703) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135333 (isDefined!125 (getValueByKey!171 (toList!869 lt!69703) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135334 () Bool)

(declare-fun Unit!4260 () Unit!4150)

(assert (=> b!135334 (= e!88136 Unit!4260)))

(declare-fun b!135335 () Bool)

(assert (=> b!135335 (= e!88135 (isDefined!125 (getValueByKey!171 (toList!869 lt!69703) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!42083 c!25285) b!135333))

(assert (= (and d!42083 (not c!25285)) b!135334))

(assert (= (and d!42083 (not res!65000)) b!135335))

(assert (=> d!42083 m!156533))

(declare-fun m!161415 () Bool)

(assert (=> d!42083 m!161415))

(assert (=> b!135333 m!156533))

(declare-fun m!161417 () Bool)

(assert (=> b!135333 m!161417))

(assert (=> b!135333 m!156533))

(declare-fun m!161419 () Bool)

(assert (=> b!135333 m!161419))

(assert (=> b!135333 m!161419))

(declare-fun m!161421 () Bool)

(assert (=> b!135333 m!161421))

(assert (=> b!135335 m!156533))

(assert (=> b!135335 m!161419))

(assert (=> b!135335 m!161419))

(assert (=> b!135335 m!161421))

(assert (=> b!133256 d!42083))

(assert (=> b!133981 d!40981))

(declare-fun d!42085 () Bool)

(assert (=> d!42085 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16))) (mask!7165 newMap!16))))

(assert (=> d!42085 true))

(declare-fun _$56!12 () Unit!4150)

(assert (=> d!42085 (= (choose!102 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (_keys!4614 newMap!16) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (mask!7165 newMap!16)) _$56!12)))

(declare-fun bs!5678 () Bool)

(assert (= bs!5678 d!42085))

(assert (=> bs!5678 m!156987))

(assert (=> bs!5678 m!156957))

(assert (=> d!40881 d!42085))

(assert (=> d!40881 d!40475))

(declare-fun d!42087 () Bool)

(declare-fun e!88137 () Bool)

(assert (=> d!42087 e!88137))

(declare-fun res!65001 () Bool)

(assert (=> d!42087 (=> res!65001 e!88137)))

(declare-fun lt!70812 () Bool)

(assert (=> d!42087 (= res!65001 (not lt!70812))))

(declare-fun lt!70814 () Bool)

(assert (=> d!42087 (= lt!70812 lt!70814)))

(declare-fun lt!70813 () Unit!4150)

(declare-fun e!88138 () Unit!4150)

(assert (=> d!42087 (= lt!70813 e!88138)))

(declare-fun c!25286 () Bool)

(assert (=> d!42087 (= c!25286 lt!70814)))

(assert (=> d!42087 (= lt!70814 (containsKey!175 (toList!869 lt!69737) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!42087 (= (contains!896 lt!69737 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70812)))

(declare-fun b!135336 () Bool)

(declare-fun lt!70815 () Unit!4150)

(assert (=> b!135336 (= e!88138 lt!70815)))

(assert (=> b!135336 (= lt!70815 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69737) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135336 (isDefined!125 (getValueByKey!171 (toList!869 lt!69737) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135337 () Bool)

(declare-fun Unit!4261 () Unit!4150)

(assert (=> b!135337 (= e!88138 Unit!4261)))

(declare-fun b!135338 () Bool)

(assert (=> b!135338 (= e!88137 (isDefined!125 (getValueByKey!171 (toList!869 lt!69737) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!42087 c!25286) b!135336))

(assert (= (and d!42087 (not c!25286)) b!135337))

(assert (= (and d!42087 (not res!65001)) b!135338))

(assert (=> d!42087 m!156533))

(declare-fun m!161423 () Bool)

(assert (=> d!42087 m!161423))

(assert (=> b!135336 m!156533))

(declare-fun m!161425 () Bool)

(assert (=> b!135336 m!161425))

(assert (=> b!135336 m!156533))

(declare-fun m!161427 () Bool)

(assert (=> b!135336 m!161427))

(assert (=> b!135336 m!161427))

(declare-fun m!161429 () Bool)

(assert (=> b!135336 m!161429))

(assert (=> b!135338 m!156533))

(assert (=> b!135338 m!161427))

(assert (=> b!135338 m!161427))

(assert (=> b!135338 m!161429))

(assert (=> b!133283 d!42087))

(declare-fun d!42089 () Bool)

(declare-fun res!65002 () Bool)

(declare-fun e!88139 () Bool)

(assert (=> d!42089 (=> res!65002 e!88139)))

(assert (=> d!42089 (= res!65002 (and ((_ is Cons!1731) (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) (= (_1!1314 (h!2336 (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))) lt!69227)))))

(assert (=> d!42089 (= (containsKey!175 (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!69227) e!88139)))

(declare-fun b!135339 () Bool)

(declare-fun e!88140 () Bool)

(assert (=> b!135339 (= e!88139 e!88140)))

(declare-fun res!65003 () Bool)

(assert (=> b!135339 (=> (not res!65003) (not e!88140))))

(assert (=> b!135339 (= res!65003 (and (or (not ((_ is Cons!1731) (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))) (bvsle (_1!1314 (h!2336 (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))) lt!69227)) ((_ is Cons!1731) (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) (bvslt (_1!1314 (h!2336 (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))) lt!69227)))))

(declare-fun b!135340 () Bool)

(assert (=> b!135340 (= e!88140 (containsKey!175 (t!6198 (t!6198 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))) lt!69227))))

(assert (= (and d!42089 (not res!65002)) b!135339))

(assert (= (and b!135339 res!65003) b!135340))

(declare-fun m!161431 () Bool)

(assert (=> b!135340 m!161431))

(assert (=> b!133850 d!42089))

(declare-fun d!42091 () Bool)

(declare-fun res!65004 () Bool)

(declare-fun e!88141 () Bool)

(assert (=> d!42091 (=> res!65004 e!88141)))

(assert (=> d!42091 (= res!65004 (and ((_ is Cons!1731) lt!70024) (= (_1!1314 (h!2336 lt!70024)) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(assert (=> d!42091 (= (containsKey!175 lt!70024 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) e!88141)))

(declare-fun b!135341 () Bool)

(declare-fun e!88142 () Bool)

(assert (=> b!135341 (= e!88141 e!88142)))

(declare-fun res!65005 () Bool)

(assert (=> b!135341 (=> (not res!65005) (not e!88142))))

(assert (=> b!135341 (= res!65005 (and (or (not ((_ is Cons!1731) lt!70024)) (bvsle (_1!1314 (h!2336 lt!70024)) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) ((_ is Cons!1731) lt!70024) (bvslt (_1!1314 (h!2336 lt!70024)) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun b!135342 () Bool)

(assert (=> b!135342 (= e!88142 (containsKey!175 (t!6198 lt!70024) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!42091 (not res!65004)) b!135341))

(assert (= (and b!135341 res!65005) b!135342))

(declare-fun m!161433 () Bool)

(assert (=> b!135342 m!161433))

(assert (=> b!133741 d!42091))

(declare-fun d!42093 () Bool)

(declare-fun e!88143 () Bool)

(assert (=> d!42093 e!88143))

(declare-fun res!65006 () Bool)

(assert (=> d!42093 (=> res!65006 e!88143)))

(declare-fun lt!70816 () Bool)

(assert (=> d!42093 (= res!65006 (not lt!70816))))

(declare-fun lt!70818 () Bool)

(assert (=> d!42093 (= lt!70816 lt!70818)))

(declare-fun lt!70817 () Unit!4150)

(declare-fun e!88144 () Unit!4150)

(assert (=> d!42093 (= lt!70817 e!88144)))

(declare-fun c!25287 () Bool)

(assert (=> d!42093 (= c!25287 lt!70818)))

(assert (=> d!42093 (= lt!70818 (containsKey!175 (toList!869 lt!69988) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42093 (= (contains!896 lt!69988 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70816)))

(declare-fun b!135343 () Bool)

(declare-fun lt!70819 () Unit!4150)

(assert (=> b!135343 (= e!88144 lt!70819)))

(assert (=> b!135343 (= lt!70819 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69988) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135343 (isDefined!125 (getValueByKey!171 (toList!869 lt!69988) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135344 () Bool)

(declare-fun Unit!4262 () Unit!4150)

(assert (=> b!135344 (= e!88144 Unit!4262)))

(declare-fun b!135345 () Bool)

(assert (=> b!135345 (= e!88143 (isDefined!125 (getValueByKey!171 (toList!869 lt!69988) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42093 c!25287) b!135343))

(assert (= (and d!42093 (not c!25287)) b!135344))

(assert (= (and d!42093 (not res!65006)) b!135345))

(declare-fun m!161435 () Bool)

(assert (=> d!42093 m!161435))

(declare-fun m!161437 () Bool)

(assert (=> b!135343 m!161437))

(declare-fun m!161439 () Bool)

(assert (=> b!135343 m!161439))

(assert (=> b!135343 m!161439))

(declare-fun m!161441 () Bool)

(assert (=> b!135343 m!161441))

(assert (=> b!135345 m!161439))

(assert (=> b!135345 m!161439))

(assert (=> b!135345 m!161441))

(assert (=> b!133667 d!42093))

(declare-fun d!42095 () Bool)

(declare-fun e!88145 () Bool)

(assert (=> d!42095 e!88145))

(declare-fun res!65007 () Bool)

(assert (=> d!42095 (=> res!65007 e!88145)))

(declare-fun lt!70820 () Bool)

(assert (=> d!42095 (= res!65007 (not lt!70820))))

(declare-fun lt!70822 () Bool)

(assert (=> d!42095 (= lt!70820 lt!70822)))

(declare-fun lt!70821 () Unit!4150)

(declare-fun e!88146 () Unit!4150)

(assert (=> d!42095 (= lt!70821 e!88146)))

(declare-fun c!25288 () Bool)

(assert (=> d!42095 (= c!25288 lt!70822)))

(assert (=> d!42095 (= lt!70822 (containsKey!175 (toList!869 lt!69944) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42095 (= (contains!896 lt!69944 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70820)))

(declare-fun b!135346 () Bool)

(declare-fun lt!70823 () Unit!4150)

(assert (=> b!135346 (= e!88146 lt!70823)))

(assert (=> b!135346 (= lt!70823 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69944) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!135346 (isDefined!125 (getValueByKey!171 (toList!869 lt!69944) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135347 () Bool)

(declare-fun Unit!4263 () Unit!4150)

(assert (=> b!135347 (= e!88146 Unit!4263)))

(declare-fun b!135348 () Bool)

(assert (=> b!135348 (= e!88145 (isDefined!125 (getValueByKey!171 (toList!869 lt!69944) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42095 c!25288) b!135346))

(assert (= (and d!42095 (not c!25288)) b!135347))

(assert (= (and d!42095 (not res!65007)) b!135348))

(declare-fun m!161443 () Bool)

(assert (=> d!42095 m!161443))

(declare-fun m!161445 () Bool)

(assert (=> b!135346 m!161445))

(assert (=> b!135346 m!157973))

(assert (=> b!135346 m!157973))

(declare-fun m!161447 () Bool)

(assert (=> b!135346 m!161447))

(assert (=> b!135348 m!157973))

(assert (=> b!135348 m!157973))

(assert (=> b!135348 m!161447))

(assert (=> d!40665 d!42095))

(declare-fun b!135349 () Bool)

(declare-fun e!88147 () Option!177)

(assert (=> b!135349 (= e!88147 (Some!176 (_2!1314 (h!2336 lt!69946))))))

(declare-fun b!135352 () Bool)

(declare-fun e!88148 () Option!177)

(assert (=> b!135352 (= e!88148 None!175)))

(declare-fun b!135351 () Bool)

(assert (=> b!135351 (= e!88148 (getValueByKey!171 (t!6198 lt!69946) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135350 () Bool)

(assert (=> b!135350 (= e!88147 e!88148)))

(declare-fun c!25290 () Bool)

(assert (=> b!135350 (= c!25290 (and ((_ is Cons!1731) lt!69946) (not (= (_1!1314 (h!2336 lt!69946)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!42097 () Bool)

(declare-fun c!25289 () Bool)

(assert (=> d!42097 (= c!25289 (and ((_ is Cons!1731) lt!69946) (= (_1!1314 (h!2336 lt!69946)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42097 (= (getValueByKey!171 lt!69946 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88147)))

(assert (= (and d!42097 c!25289) b!135349))

(assert (= (and d!42097 (not c!25289)) b!135350))

(assert (= (and b!135350 c!25290) b!135351))

(assert (= (and b!135350 (not c!25290)) b!135352))

(declare-fun m!161449 () Bool)

(assert (=> b!135351 m!161449))

(assert (=> d!40665 d!42097))

(declare-fun d!42099 () Bool)

(assert (=> d!42099 (= (getValueByKey!171 lt!69946 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70824 () Unit!4150)

(assert (=> d!42099 (= lt!70824 (choose!834 lt!69946 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88149 () Bool)

(assert (=> d!42099 e!88149))

(declare-fun res!65008 () Bool)

(assert (=> d!42099 (=> (not res!65008) (not e!88149))))

(assert (=> d!42099 (= res!65008 (isStrictlySorted!317 lt!69946))))

(assert (=> d!42099 (= (lemmaContainsTupThenGetReturnValue!88 lt!69946 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70824)))

(declare-fun b!135353 () Bool)

(declare-fun res!65009 () Bool)

(assert (=> b!135353 (=> (not res!65009) (not e!88149))))

(assert (=> b!135353 (= res!65009 (containsKey!175 lt!69946 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135354 () Bool)

(assert (=> b!135354 (= e!88149 (contains!898 lt!69946 (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42099 res!65008) b!135353))

(assert (= (and b!135353 res!65009) b!135354))

(assert (=> d!42099 m!157967))

(declare-fun m!161451 () Bool)

(assert (=> d!42099 m!161451))

(declare-fun m!161453 () Bool)

(assert (=> d!42099 m!161453))

(declare-fun m!161455 () Bool)

(assert (=> b!135353 m!161455))

(declare-fun m!161457 () Bool)

(assert (=> b!135354 m!161457))

(assert (=> d!40665 d!42099))

(declare-fun bm!14878 () Bool)

(declare-fun call!14881 () List!1735)

(declare-fun call!14882 () List!1735)

(assert (=> bm!14878 (= call!14881 call!14882)))

(declare-fun lt!70825 () List!1735)

(declare-fun e!88152 () Bool)

(declare-fun b!135355 () Bool)

(assert (=> b!135355 (= e!88152 (contains!898 lt!70825 (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135356 () Bool)

(declare-fun e!88154 () List!1735)

(assert (=> b!135356 (= e!88154 call!14882)))

(declare-fun b!135357 () Bool)

(declare-fun res!65010 () Bool)

(assert (=> b!135357 (=> (not res!65010) (not e!88152))))

(assert (=> b!135357 (= res!65010 (containsKey!175 lt!70825 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135358 () Bool)

(declare-fun e!88150 () List!1735)

(assert (=> b!135358 (= e!88150 (insertStrictlySorted!90 (t!6198 (toList!869 (map!1405 newMap!16))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135359 () Bool)

(declare-fun e!88151 () List!1735)

(assert (=> b!135359 (= e!88151 call!14881)))

(declare-fun bm!14879 () Bool)

(declare-fun call!14883 () List!1735)

(assert (=> bm!14879 (= call!14882 call!14883)))

(declare-fun c!25293 () Bool)

(declare-fun b!135361 () Bool)

(declare-fun c!25291 () Bool)

(assert (=> b!135361 (= e!88150 (ite c!25293 (t!6198 (toList!869 (map!1405 newMap!16))) (ite c!25291 (Cons!1731 (h!2336 (toList!869 (map!1405 newMap!16))) (t!6198 (toList!869 (map!1405 newMap!16)))) Nil!1732)))))

(declare-fun b!135362 () Bool)

(declare-fun e!88153 () List!1735)

(assert (=> b!135362 (= e!88153 call!14883)))

(declare-fun b!135363 () Bool)

(assert (=> b!135363 (= c!25291 (and ((_ is Cons!1731) (toList!869 (map!1405 newMap!16))) (bvsgt (_1!1314 (h!2336 (toList!869 (map!1405 newMap!16)))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!135363 (= e!88154 e!88151)))

(declare-fun d!42101 () Bool)

(assert (=> d!42101 e!88152))

(declare-fun res!65011 () Bool)

(assert (=> d!42101 (=> (not res!65011) (not e!88152))))

(assert (=> d!42101 (= res!65011 (isStrictlySorted!317 lt!70825))))

(assert (=> d!42101 (= lt!70825 e!88153)))

(declare-fun c!25292 () Bool)

(assert (=> d!42101 (= c!25292 (and ((_ is Cons!1731) (toList!869 (map!1405 newMap!16))) (bvslt (_1!1314 (h!2336 (toList!869 (map!1405 newMap!16)))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42101 (isStrictlySorted!317 (toList!869 (map!1405 newMap!16)))))

(assert (=> d!42101 (= (insertStrictlySorted!90 (toList!869 (map!1405 newMap!16)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70825)))

(declare-fun b!135360 () Bool)

(assert (=> b!135360 (= e!88153 e!88154)))

(assert (=> b!135360 (= c!25293 (and ((_ is Cons!1731) (toList!869 (map!1405 newMap!16))) (= (_1!1314 (h!2336 (toList!869 (map!1405 newMap!16)))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135364 () Bool)

(assert (=> b!135364 (= e!88151 call!14881)))

(declare-fun bm!14880 () Bool)

(assert (=> bm!14880 (= call!14883 ($colon$colon!91 e!88150 (ite c!25292 (h!2336 (toList!869 (map!1405 newMap!16))) (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25294 () Bool)

(assert (=> bm!14880 (= c!25294 c!25292)))

(assert (= (and d!42101 c!25292) b!135362))

(assert (= (and d!42101 (not c!25292)) b!135360))

(assert (= (and b!135360 c!25293) b!135356))

(assert (= (and b!135360 (not c!25293)) b!135363))

(assert (= (and b!135363 c!25291) b!135364))

(assert (= (and b!135363 (not c!25291)) b!135359))

(assert (= (or b!135364 b!135359) bm!14878))

(assert (= (or b!135356 bm!14878) bm!14879))

(assert (= (or b!135362 bm!14879) bm!14880))

(assert (= (and bm!14880 c!25294) b!135358))

(assert (= (and bm!14880 (not c!25294)) b!135361))

(assert (= (and d!42101 res!65011) b!135357))

(assert (= (and b!135357 res!65010) b!135355))

(declare-fun m!161459 () Bool)

(assert (=> b!135357 m!161459))

(declare-fun m!161461 () Bool)

(assert (=> b!135355 m!161461))

(declare-fun m!161463 () Bool)

(assert (=> d!42101 m!161463))

(declare-fun m!161465 () Bool)

(assert (=> d!42101 m!161465))

(declare-fun m!161467 () Bool)

(assert (=> bm!14880 m!161467))

(declare-fun m!161469 () Bool)

(assert (=> b!135358 m!161469))

(assert (=> d!40665 d!42101))

(assert (=> b!133550 d!41167))

(declare-fun d!42103 () Bool)

(declare-fun res!65012 () Bool)

(declare-fun e!88155 () Bool)

(assert (=> d!42103 (=> res!65012 e!88155)))

(assert (=> d!42103 (= res!65012 (and ((_ is Cons!1731) lt!70010) (= (_1!1314 (h!2336 lt!70010)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!42103 (= (containsKey!175 lt!70010 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!88155)))

(declare-fun b!135365 () Bool)

(declare-fun e!88156 () Bool)

(assert (=> b!135365 (= e!88155 e!88156)))

(declare-fun res!65013 () Bool)

(assert (=> b!135365 (=> (not res!65013) (not e!88156))))

(assert (=> b!135365 (= res!65013 (and (or (not ((_ is Cons!1731) lt!70010)) (bvsle (_1!1314 (h!2336 lt!70010)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) ((_ is Cons!1731) lt!70010) (bvslt (_1!1314 (h!2336 lt!70010)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135366 () Bool)

(assert (=> b!135366 (= e!88156 (containsKey!175 (t!6198 lt!70010) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!42103 (not res!65012)) b!135365))

(assert (= (and b!135365 res!65013) b!135366))

(declare-fun m!161471 () Bool)

(assert (=> b!135366 m!161471))

(assert (=> b!133708 d!42103))

(declare-fun d!42105 () Bool)

(declare-fun res!65014 () Bool)

(declare-fun e!88157 () Bool)

(assert (=> d!42105 (=> res!65014 e!88157)))

(assert (=> d!42105 (= res!65014 (or ((_ is Nil!1732) (t!6198 (toList!869 lt!69161))) ((_ is Nil!1732) (t!6198 (t!6198 (toList!869 lt!69161))))))))

(assert (=> d!42105 (= (isStrictlySorted!317 (t!6198 (toList!869 lt!69161))) e!88157)))

(declare-fun b!135367 () Bool)

(declare-fun e!88158 () Bool)

(assert (=> b!135367 (= e!88157 e!88158)))

(declare-fun res!65015 () Bool)

(assert (=> b!135367 (=> (not res!65015) (not e!88158))))

(assert (=> b!135367 (= res!65015 (bvslt (_1!1314 (h!2336 (t!6198 (toList!869 lt!69161)))) (_1!1314 (h!2336 (t!6198 (t!6198 (toList!869 lt!69161)))))))))

(declare-fun b!135368 () Bool)

(assert (=> b!135368 (= e!88158 (isStrictlySorted!317 (t!6198 (t!6198 (toList!869 lt!69161)))))))

(assert (= (and d!42105 (not res!65014)) b!135367))

(assert (= (and b!135367 res!65015) b!135368))

(declare-fun m!161473 () Bool)

(assert (=> b!135368 m!161473))

(assert (=> b!134005 d!42105))

(assert (=> d!40703 d!40367))

(assert (=> d!40703 d!40371))

(declare-fun d!42107 () Bool)

(assert (=> d!42107 (= (get!1490 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133977 d!42107))

(assert (=> b!133350 d!40307))

(declare-fun d!42109 () Bool)

(declare-fun e!88159 () Bool)

(assert (=> d!42109 e!88159))

(declare-fun res!65016 () Bool)

(assert (=> d!42109 (=> res!65016 e!88159)))

(declare-fun lt!70826 () Bool)

(assert (=> d!42109 (= res!65016 (not lt!70826))))

(declare-fun lt!70828 () Bool)

(assert (=> d!42109 (= lt!70826 lt!70828)))

(declare-fun lt!70827 () Unit!4150)

(declare-fun e!88160 () Unit!4150)

(assert (=> d!42109 (= lt!70827 e!88160)))

(declare-fun c!25295 () Bool)

(assert (=> d!42109 (= c!25295 lt!70828)))

(assert (=> d!42109 (= lt!70828 (containsKey!175 (toList!869 lt!69808) (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))))

(assert (=> d!42109 (= (contains!896 lt!69808 (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) lt!70826)))

(declare-fun b!135369 () Bool)

(declare-fun lt!70829 () Unit!4150)

(assert (=> b!135369 (= e!88160 lt!70829)))

(assert (=> b!135369 (= lt!70829 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69808) (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))))

(assert (=> b!135369 (isDefined!125 (getValueByKey!171 (toList!869 lt!69808) (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135370 () Bool)

(declare-fun Unit!4264 () Unit!4150)

(assert (=> b!135370 (= e!88160 Unit!4264)))

(declare-fun b!135371 () Bool)

(assert (=> b!135371 (= e!88159 (isDefined!125 (getValueByKey!171 (toList!869 lt!69808) (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!42109 c!25295) b!135369))

(assert (= (and d!42109 (not c!25295)) b!135370))

(assert (= (and d!42109 (not res!65016)) b!135371))

(declare-fun m!161475 () Bool)

(assert (=> d!42109 m!161475))

(declare-fun m!161477 () Bool)

(assert (=> b!135369 m!161477))

(assert (=> b!135369 m!157515))

(assert (=> b!135369 m!157515))

(declare-fun m!161479 () Bool)

(assert (=> b!135369 m!161479))

(assert (=> b!135371 m!157515))

(assert (=> b!135371 m!157515))

(assert (=> b!135371 m!161479))

(assert (=> d!40525 d!42109))

(declare-fun b!135372 () Bool)

(declare-fun e!88161 () Option!177)

(assert (=> b!135372 (= e!88161 (Some!176 (_2!1314 (h!2336 lt!69810))))))

(declare-fun b!135375 () Bool)

(declare-fun e!88162 () Option!177)

(assert (=> b!135375 (= e!88162 None!175)))

(declare-fun b!135374 () Bool)

(assert (=> b!135374 (= e!88162 (getValueByKey!171 (t!6198 lt!69810) (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135373 () Bool)

(assert (=> b!135373 (= e!88161 e!88162)))

(declare-fun c!25297 () Bool)

(assert (=> b!135373 (= c!25297 (and ((_ is Cons!1731) lt!69810) (not (= (_1!1314 (h!2336 lt!69810)) (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))))))

(declare-fun d!42111 () Bool)

(declare-fun c!25296 () Bool)

(assert (=> d!42111 (= c!25296 (and ((_ is Cons!1731) lt!69810) (= (_1!1314 (h!2336 lt!69810)) (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))))))

(assert (=> d!42111 (= (getValueByKey!171 lt!69810 (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) e!88161)))

(assert (= (and d!42111 c!25296) b!135372))

(assert (= (and d!42111 (not c!25296)) b!135373))

(assert (= (and b!135373 c!25297) b!135374))

(assert (= (and b!135373 (not c!25297)) b!135375))

(declare-fun m!161481 () Bool)

(assert (=> b!135374 m!161481))

(assert (=> d!40525 d!42111))

(declare-fun d!42113 () Bool)

(assert (=> d!42113 (= (getValueByKey!171 lt!69810 (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70830 () Unit!4150)

(assert (=> d!42113 (= lt!70830 (choose!834 lt!69810 (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))))

(declare-fun e!88163 () Bool)

(assert (=> d!42113 e!88163))

(declare-fun res!65017 () Bool)

(assert (=> d!42113 (=> (not res!65017) (not e!88163))))

(assert (=> d!42113 (= res!65017 (isStrictlySorted!317 lt!69810))))

(assert (=> d!42113 (= (lemmaContainsTupThenGetReturnValue!88 lt!69810 (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) lt!70830)))

(declare-fun b!135376 () Bool)

(declare-fun res!65018 () Bool)

(assert (=> b!135376 (=> (not res!65018) (not e!88163))))

(assert (=> b!135376 (= res!65018 (containsKey!175 lt!69810 (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135377 () Bool)

(assert (=> b!135377 (= e!88163 (contains!898 lt!69810 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!42113 res!65017) b!135376))

(assert (= (and b!135376 res!65018) b!135377))

(assert (=> d!42113 m!157509))

(declare-fun m!161483 () Bool)

(assert (=> d!42113 m!161483))

(declare-fun m!161485 () Bool)

(assert (=> d!42113 m!161485))

(declare-fun m!161487 () Bool)

(assert (=> b!135376 m!161487))

(declare-fun m!161489 () Bool)

(assert (=> b!135377 m!161489))

(assert (=> d!40525 d!42113))

(declare-fun bm!14881 () Bool)

(declare-fun call!14884 () List!1735)

(declare-fun call!14885 () List!1735)

(assert (=> bm!14881 (= call!14884 call!14885)))

(declare-fun lt!70831 () List!1735)

(declare-fun e!88166 () Bool)

(declare-fun b!135378 () Bool)

(assert (=> b!135378 (= e!88166 (contains!898 lt!70831 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))))))

(declare-fun b!135379 () Bool)

(declare-fun e!88168 () List!1735)

(assert (=> b!135379 (= e!88168 call!14885)))

(declare-fun b!135380 () Bool)

(declare-fun res!65019 () Bool)

(assert (=> b!135380 (=> (not res!65019) (not e!88166))))

(assert (=> b!135380 (= res!65019 (containsKey!175 lt!70831 (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135381 () Bool)

(declare-fun e!88164 () List!1735)

(assert (=> b!135381 (= e!88164 (insertStrictlySorted!90 (t!6198 (toList!869 lt!69412)) (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135382 () Bool)

(declare-fun e!88165 () List!1735)

(assert (=> b!135382 (= e!88165 call!14884)))

(declare-fun bm!14882 () Bool)

(declare-fun call!14886 () List!1735)

(assert (=> bm!14882 (= call!14885 call!14886)))

(declare-fun c!25298 () Bool)

(declare-fun b!135384 () Bool)

(declare-fun c!25300 () Bool)

(assert (=> b!135384 (= e!88164 (ite c!25300 (t!6198 (toList!869 lt!69412)) (ite c!25298 (Cons!1731 (h!2336 (toList!869 lt!69412)) (t!6198 (toList!869 lt!69412))) Nil!1732)))))

(declare-fun b!135385 () Bool)

(declare-fun e!88167 () List!1735)

(assert (=> b!135385 (= e!88167 call!14886)))

(declare-fun b!135386 () Bool)

(assert (=> b!135386 (= c!25298 (and ((_ is Cons!1731) (toList!869 lt!69412)) (bvsgt (_1!1314 (h!2336 (toList!869 lt!69412))) (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))))))

(assert (=> b!135386 (= e!88168 e!88165)))

(declare-fun d!42115 () Bool)

(assert (=> d!42115 e!88166))

(declare-fun res!65020 () Bool)

(assert (=> d!42115 (=> (not res!65020) (not e!88166))))

(assert (=> d!42115 (= res!65020 (isStrictlySorted!317 lt!70831))))

(assert (=> d!42115 (= lt!70831 e!88167)))

(declare-fun c!25299 () Bool)

(assert (=> d!42115 (= c!25299 (and ((_ is Cons!1731) (toList!869 lt!69412)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69412))) (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))))))

(assert (=> d!42115 (isStrictlySorted!317 (toList!869 lt!69412))))

(assert (=> d!42115 (= (insertStrictlySorted!90 (toList!869 lt!69412) (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))) lt!70831)))

(declare-fun b!135383 () Bool)

(assert (=> b!135383 (= e!88167 e!88168)))

(assert (=> b!135383 (= c!25300 (and ((_ is Cons!1731) (toList!869 lt!69412)) (= (_1!1314 (h!2336 (toList!869 lt!69412))) (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))))))))

(declare-fun b!135387 () Bool)

(assert (=> b!135387 (= e!88165 call!14884)))

(declare-fun bm!14883 () Bool)

(assert (=> bm!14883 (= call!14886 ($colon$colon!91 e!88164 (ite c!25299 (h!2336 (toList!869 lt!69412)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16)))))))))

(declare-fun c!25301 () Bool)

(assert (=> bm!14883 (= c!25301 c!25299)))

(assert (= (and d!42115 c!25299) b!135385))

(assert (= (and d!42115 (not c!25299)) b!135383))

(assert (= (and b!135383 c!25300) b!135379))

(assert (= (and b!135383 (not c!25300)) b!135386))

(assert (= (and b!135386 c!25298) b!135387))

(assert (= (and b!135386 (not c!25298)) b!135382))

(assert (= (or b!135387 b!135382) bm!14881))

(assert (= (or b!135379 bm!14881) bm!14882))

(assert (= (or b!135385 bm!14882) bm!14883))

(assert (= (and bm!14883 c!25301) b!135381))

(assert (= (and bm!14883 (not c!25301)) b!135384))

(assert (= (and d!42115 res!65020) b!135380))

(assert (= (and b!135380 res!65019) b!135378))

(declare-fun m!161491 () Bool)

(assert (=> b!135380 m!161491))

(declare-fun m!161493 () Bool)

(assert (=> b!135378 m!161493))

(declare-fun m!161495 () Bool)

(assert (=> d!42115 m!161495))

(declare-fun m!161497 () Bool)

(assert (=> d!42115 m!161497))

(declare-fun m!161499 () Bool)

(assert (=> bm!14883 m!161499))

(declare-fun m!161501 () Bool)

(assert (=> b!135381 m!161501))

(assert (=> d!40525 d!42115))

(declare-fun d!42117 () Bool)

(declare-fun c!25302 () Bool)

(assert (=> d!42117 (= c!25302 ((_ is Nil!1732) (toList!869 lt!69463)))))

(declare-fun e!88169 () (InoxSet tuple2!2608))

(assert (=> d!42117 (= (content!132 (toList!869 lt!69463)) e!88169)))

(declare-fun b!135388 () Bool)

(assert (=> b!135388 (= e!88169 ((as const (Array tuple2!2608 Bool)) false))))

(declare-fun b!135389 () Bool)

(assert (=> b!135389 (= e!88169 ((_ map or) (store ((as const (Array tuple2!2608 Bool)) false) (h!2336 (toList!869 lt!69463)) true) (content!132 (t!6198 (toList!869 lt!69463)))))))

(assert (= (and d!42117 c!25302) b!135388))

(assert (= (and d!42117 (not c!25302)) b!135389))

(declare-fun m!161503 () Bool)

(assert (=> b!135389 m!161503))

(assert (=> b!135389 m!158777))

(assert (=> d!40487 d!42117))

(assert (=> b!133863 d!40945))

(declare-fun b!135390 () Bool)

(declare-fun e!88170 () Option!177)

(assert (=> b!135390 (= e!88170 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69720)))))))

(declare-fun b!135393 () Bool)

(declare-fun e!88171 () Option!177)

(assert (=> b!135393 (= e!88171 None!175)))

(declare-fun b!135392 () Bool)

(assert (=> b!135392 (= e!88171 (getValueByKey!171 (t!6198 (toList!869 lt!69720)) (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!135391 () Bool)

(assert (=> b!135391 (= e!88170 e!88171)))

(declare-fun c!25304 () Bool)

(assert (=> b!135391 (= c!25304 (and ((_ is Cons!1731) (toList!869 lt!69720)) (not (= (_1!1314 (h!2336 (toList!869 lt!69720))) (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))))

(declare-fun d!42119 () Bool)

(declare-fun c!25303 () Bool)

(assert (=> d!42119 (= c!25303 (and ((_ is Cons!1731) (toList!869 lt!69720)) (= (_1!1314 (h!2336 (toList!869 lt!69720))) (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (=> d!42119 (= (getValueByKey!171 (toList!869 lt!69720) (_1!1314 (ite (or c!24588 c!24591) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) e!88170)))

(assert (= (and d!42119 c!25303) b!135390))

(assert (= (and d!42119 (not c!25303)) b!135391))

(assert (= (and b!135391 c!25304) b!135392))

(assert (= (and b!135391 (not c!25304)) b!135393))

(declare-fun m!161505 () Bool)

(assert (=> b!135392 m!161505))

(assert (=> b!133268 d!42119))

(assert (=> b!133456 d!40473))

(assert (=> b!133832 d!41943))

(assert (=> b!133832 d!40831))

(assert (=> d!40691 d!40689))

(declare-fun d!42121 () Bool)

(assert (=> d!42121 (= (getValueByKey!171 lt!69358 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42121 true))

(declare-fun _$22!488 () Unit!4150)

(assert (=> d!42121 (= (choose!834 lt!69358 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) _$22!488)))

(declare-fun bs!5679 () Bool)

(assert (= bs!5679 d!42121))

(assert (=> bs!5679 m!156539))

(assert (=> d!40691 d!42121))

(declare-fun d!42123 () Bool)

(declare-fun res!65021 () Bool)

(declare-fun e!88172 () Bool)

(assert (=> d!42123 (=> res!65021 e!88172)))

(assert (=> d!42123 (= res!65021 (or ((_ is Nil!1732) lt!69358) ((_ is Nil!1732) (t!6198 lt!69358))))))

(assert (=> d!42123 (= (isStrictlySorted!317 lt!69358) e!88172)))

(declare-fun b!135394 () Bool)

(declare-fun e!88173 () Bool)

(assert (=> b!135394 (= e!88172 e!88173)))

(declare-fun res!65022 () Bool)

(assert (=> b!135394 (=> (not res!65022) (not e!88173))))

(assert (=> b!135394 (= res!65022 (bvslt (_1!1314 (h!2336 lt!69358)) (_1!1314 (h!2336 (t!6198 lt!69358)))))))

(declare-fun b!135395 () Bool)

(assert (=> b!135395 (= e!88173 (isStrictlySorted!317 (t!6198 lt!69358)))))

(assert (= (and d!42123 (not res!65021)) b!135394))

(assert (= (and b!135394 res!65022) b!135395))

(declare-fun m!161507 () Bool)

(assert (=> b!135395 m!161507))

(assert (=> d!40691 d!42123))

(declare-fun d!42125 () Bool)

(assert (=> d!42125 (= (validKeyInArray!0 (select (arr!2260 lt!69595) #b00000000000000000000000000000000)) (and (not (= (select (arr!2260 lt!69595) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 lt!69595) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133919 d!42125))

(assert (=> b!133632 d!41997))

(assert (=> b!133632 d!41999))

(assert (=> b!133676 d!42013))

(assert (=> b!133676 d!42015))

(declare-fun d!42127 () Bool)

(declare-fun res!65023 () Bool)

(declare-fun e!88174 () Bool)

(assert (=> d!42127 (=> res!65023 e!88174)))

(assert (=> d!42127 (= res!65023 (and ((_ is Cons!1731) (toList!869 lt!69405)) (= (_1!1314 (h!2336 (toList!869 lt!69405))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42127 (= (containsKey!175 (toList!869 lt!69405) #b1000000000000000000000000000000000000000000000000000000000000000) e!88174)))

(declare-fun b!135396 () Bool)

(declare-fun e!88175 () Bool)

(assert (=> b!135396 (= e!88174 e!88175)))

(declare-fun res!65024 () Bool)

(assert (=> b!135396 (=> (not res!65024) (not e!88175))))

(assert (=> b!135396 (= res!65024 (and (or (not ((_ is Cons!1731) (toList!869 lt!69405))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69405))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1731) (toList!869 lt!69405)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69405))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135397 () Bool)

(assert (=> b!135397 (= e!88175 (containsKey!175 (t!6198 (toList!869 lt!69405)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42127 (not res!65023)) b!135396))

(assert (= (and b!135396 res!65024) b!135397))

(declare-fun m!161509 () Bool)

(assert (=> b!135397 m!161509))

(assert (=> d!40917 d!42127))

(declare-fun b!135398 () Bool)

(declare-fun e!88176 () Option!177)

(assert (=> b!135398 (= e!88176 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69728)))))))

(declare-fun b!135401 () Bool)

(declare-fun e!88177 () Option!177)

(assert (=> b!135401 (= e!88177 None!175)))

(declare-fun b!135400 () Bool)

(assert (=> b!135400 (= e!88177 (getValueByKey!171 (t!6198 (toList!869 lt!69728)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135399 () Bool)

(assert (=> b!135399 (= e!88176 e!88177)))

(declare-fun c!25306 () Bool)

(assert (=> b!135399 (= c!25306 (and ((_ is Cons!1731) (toList!869 lt!69728)) (not (= (_1!1314 (h!2336 (toList!869 lt!69728))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25305 () Bool)

(declare-fun d!42129 () Bool)

(assert (=> d!42129 (= c!25305 (and ((_ is Cons!1731) (toList!869 lt!69728)) (= (_1!1314 (h!2336 (toList!869 lt!69728))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42129 (= (getValueByKey!171 (toList!869 lt!69728) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88176)))

(assert (= (and d!42129 c!25305) b!135398))

(assert (= (and d!42129 (not c!25305)) b!135399))

(assert (= (and b!135399 c!25306) b!135400))

(assert (= (and b!135399 (not c!25306)) b!135401))

(declare-fun m!161511 () Bool)

(assert (=> b!135400 m!161511))

(assert (=> b!133272 d!42129))

(declare-fun d!42131 () Bool)

(declare-fun res!65025 () Bool)

(declare-fun e!88178 () Bool)

(assert (=> d!42131 (=> res!65025 e!88178)))

(assert (=> d!42131 (= res!65025 (and ((_ is Cons!1731) (toList!869 lt!69488)) (= (_1!1314 (h!2336 (toList!869 lt!69488))) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!42131 (= (containsKey!175 (toList!869 lt!69488) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) e!88178)))

(declare-fun b!135402 () Bool)

(declare-fun e!88179 () Bool)

(assert (=> b!135402 (= e!88178 e!88179)))

(declare-fun res!65026 () Bool)

(assert (=> b!135402 (=> (not res!65026) (not e!88179))))

(assert (=> b!135402 (= res!65026 (and (or (not ((_ is Cons!1731) (toList!869 lt!69488))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69488))) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1731) (toList!869 lt!69488)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69488))) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!135403 () Bool)

(assert (=> b!135403 (= e!88179 (containsKey!175 (t!6198 (toList!869 lt!69488)) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!42131 (not res!65025)) b!135402))

(assert (= (and b!135402 res!65026) b!135403))

(assert (=> b!135403 m!156533))

(declare-fun m!161513 () Bool)

(assert (=> b!135403 m!161513))

(assert (=> d!40707 d!42131))

(declare-fun d!42133 () Bool)

(assert (=> d!42133 (= (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69514 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69512)) (v!3201 (getValueByKey!171 (toList!869 (+!170 lt!69514 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69512)))))

(assert (=> d!40801 d!42133))

(declare-fun e!88180 () Option!177)

(declare-fun b!135404 () Bool)

(assert (=> b!135404 (= e!88180 (Some!176 (_2!1314 (h!2336 (toList!869 (+!170 lt!69514 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))))

(declare-fun b!135407 () Bool)

(declare-fun e!88181 () Option!177)

(assert (=> b!135407 (= e!88181 None!175)))

(declare-fun b!135406 () Bool)

(assert (=> b!135406 (= e!88181 (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69514 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))) lt!69512))))

(declare-fun b!135405 () Bool)

(assert (=> b!135405 (= e!88180 e!88181)))

(declare-fun c!25308 () Bool)

(assert (=> b!135405 (= c!25308 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69514 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))) (not (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69514 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))) lt!69512))))))

(declare-fun c!25307 () Bool)

(declare-fun d!42135 () Bool)

(assert (=> d!42135 (= c!25307 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69514 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69514 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))) lt!69512)))))

(assert (=> d!42135 (= (getValueByKey!171 (toList!869 (+!170 lt!69514 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69512) e!88180)))

(assert (= (and d!42135 c!25307) b!135404))

(assert (= (and d!42135 (not c!25307)) b!135405))

(assert (= (and b!135405 c!25308) b!135406))

(assert (= (and b!135405 (not c!25308)) b!135407))

(declare-fun m!161515 () Bool)

(assert (=> b!135406 m!161515))

(assert (=> d!40801 d!42135))

(declare-fun d!42137 () Bool)

(declare-fun res!65027 () Bool)

(declare-fun e!88182 () Bool)

(assert (=> d!42137 (=> res!65027 e!88182)))

(assert (=> d!42137 (= res!65027 (and ((_ is Cons!1731) lt!69465) (= (_1!1314 (h!2336 lt!69465)) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!42137 (= (containsKey!175 lt!69465 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!88182)))

(declare-fun b!135408 () Bool)

(declare-fun e!88183 () Bool)

(assert (=> b!135408 (= e!88182 e!88183)))

(declare-fun res!65028 () Bool)

(assert (=> b!135408 (=> (not res!65028) (not e!88183))))

(assert (=> b!135408 (= res!65028 (and (or (not ((_ is Cons!1731) lt!69465)) (bvsle (_1!1314 (h!2336 lt!69465)) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) ((_ is Cons!1731) lt!69465) (bvslt (_1!1314 (h!2336 lt!69465)) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135409 () Bool)

(assert (=> b!135409 (= e!88183 (containsKey!175 (t!6198 lt!69465) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!42137 (not res!65027)) b!135408))

(assert (= (and b!135408 res!65028) b!135409))

(declare-fun m!161517 () Bool)

(assert (=> b!135409 m!161517))

(assert (=> b!133535 d!42137))

(assert (=> b!133478 d!41923))

(assert (=> b!133317 d!40985))

(declare-fun d!42139 () Bool)

(assert (=> d!42139 (= (get!1490 (select (arr!2261 (ite (or c!24541 c!24536) (_values!2848 newMap!16) lt!69317)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133629 d!42139))

(declare-fun d!42141 () Bool)

(declare-fun e!88184 () Bool)

(assert (=> d!42141 e!88184))

(declare-fun res!65029 () Bool)

(assert (=> d!42141 (=> res!65029 e!88184)))

(declare-fun lt!70832 () Bool)

(assert (=> d!42141 (= res!65029 (not lt!70832))))

(declare-fun lt!70834 () Bool)

(assert (=> d!42141 (= lt!70832 lt!70834)))

(declare-fun lt!70833 () Unit!4150)

(declare-fun e!88185 () Unit!4150)

(assert (=> d!42141 (= lt!70833 e!88185)))

(declare-fun c!25309 () Bool)

(assert (=> d!42141 (= c!25309 lt!70834)))

(assert (=> d!42141 (= lt!70834 (containsKey!175 (toList!869 lt!69813) (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))))

(assert (=> d!42141 (= (contains!896 lt!69813 (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))) lt!70832)))

(declare-fun b!135410 () Bool)

(declare-fun lt!70835 () Unit!4150)

(assert (=> b!135410 (= e!88185 lt!70835)))

(assert (=> b!135410 (= lt!70835 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69813) (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))))

(assert (=> b!135410 (isDefined!125 (getValueByKey!171 (toList!869 lt!69813) (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135411 () Bool)

(declare-fun Unit!4265 () Unit!4150)

(assert (=> b!135411 (= e!88185 Unit!4265)))

(declare-fun b!135412 () Bool)

(assert (=> b!135412 (= e!88184 (isDefined!125 (getValueByKey!171 (toList!869 lt!69813) (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!42141 c!25309) b!135410))

(assert (= (and d!42141 (not c!25309)) b!135411))

(assert (= (and d!42141 (not res!65029)) b!135412))

(declare-fun m!161519 () Bool)

(assert (=> d!42141 m!161519))

(declare-fun m!161521 () Bool)

(assert (=> b!135410 m!161521))

(assert (=> b!135410 m!157531))

(assert (=> b!135410 m!157531))

(declare-fun m!161523 () Bool)

(assert (=> b!135410 m!161523))

(assert (=> b!135412 m!157531))

(assert (=> b!135412 m!157531))

(assert (=> b!135412 m!161523))

(assert (=> d!40529 d!42141))

(declare-fun b!135413 () Bool)

(declare-fun e!88186 () Option!177)

(assert (=> b!135413 (= e!88186 (Some!176 (_2!1314 (h!2336 lt!69815))))))

(declare-fun b!135416 () Bool)

(declare-fun e!88187 () Option!177)

(assert (=> b!135416 (= e!88187 None!175)))

(declare-fun b!135415 () Bool)

(assert (=> b!135415 (= e!88187 (getValueByKey!171 (t!6198 lt!69815) (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135414 () Bool)

(assert (=> b!135414 (= e!88186 e!88187)))

(declare-fun c!25311 () Bool)

(assert (=> b!135414 (= c!25311 (and ((_ is Cons!1731) lt!69815) (not (= (_1!1314 (h!2336 lt!69815)) (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))))))

(declare-fun c!25310 () Bool)

(declare-fun d!42143 () Bool)

(assert (=> d!42143 (= c!25310 (and ((_ is Cons!1731) lt!69815) (= (_1!1314 (h!2336 lt!69815)) (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))))))))

(assert (=> d!42143 (= (getValueByKey!171 lt!69815 (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))) e!88186)))

(assert (= (and d!42143 c!25310) b!135413))

(assert (= (and d!42143 (not c!25310)) b!135414))

(assert (= (and b!135414 c!25311) b!135415))

(assert (= (and b!135414 (not c!25311)) b!135416))

(declare-fun m!161525 () Bool)

(assert (=> b!135415 m!161525))

(assert (=> d!40529 d!42143))

(declare-fun d!42145 () Bool)

(assert (=> d!42145 (= (getValueByKey!171 lt!69815 (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70836 () Unit!4150)

(assert (=> d!42145 (= lt!70836 (choose!834 lt!69815 (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))))

(declare-fun e!88188 () Bool)

(assert (=> d!42145 e!88188))

(declare-fun res!65030 () Bool)

(assert (=> d!42145 (=> (not res!65030) (not e!88188))))

(assert (=> d!42145 (= res!65030 (isStrictlySorted!317 lt!69815))))

(assert (=> d!42145 (= (lemmaContainsTupThenGetReturnValue!88 lt!69815 (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))) lt!70836)))

(declare-fun b!135417 () Bool)

(declare-fun res!65031 () Bool)

(assert (=> b!135417 (=> (not res!65031) (not e!88188))))

(assert (=> b!135417 (= res!65031 (containsKey!175 lt!69815 (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135418 () Bool)

(assert (=> b!135418 (= e!88188 (contains!898 lt!69815 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!42145 res!65030) b!135417))

(assert (= (and b!135417 res!65031) b!135418))

(assert (=> d!42145 m!157525))

(declare-fun m!161527 () Bool)

(assert (=> d!42145 m!161527))

(declare-fun m!161529 () Bool)

(assert (=> d!42145 m!161529))

(declare-fun m!161531 () Bool)

(assert (=> b!135417 m!161531))

(declare-fun m!161533 () Bool)

(assert (=> b!135418 m!161533))

(assert (=> d!40529 d!42145))

(declare-fun bm!14884 () Bool)

(declare-fun call!14887 () List!1735)

(declare-fun call!14888 () List!1735)

(assert (=> bm!14884 (= call!14887 call!14888)))

(declare-fun b!135419 () Bool)

(declare-fun lt!70837 () List!1735)

(declare-fun e!88191 () Bool)

(assert (=> b!135419 (= e!88191 (contains!898 lt!70837 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))))))))

(declare-fun b!135420 () Bool)

(declare-fun e!88193 () List!1735)

(assert (=> b!135420 (= e!88193 call!14888)))

(declare-fun b!135421 () Bool)

(declare-fun res!65032 () Bool)

(assert (=> b!135421 (=> (not res!65032) (not e!88191))))

(assert (=> b!135421 (= res!65032 (containsKey!175 lt!70837 (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))))

(declare-fun e!88189 () List!1735)

(declare-fun b!135422 () Bool)

(assert (=> b!135422 (= e!88189 (insertStrictlySorted!90 (t!6198 (toList!869 lt!69420)) (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135423 () Bool)

(declare-fun e!88190 () List!1735)

(assert (=> b!135423 (= e!88190 call!14887)))

(declare-fun bm!14885 () Bool)

(declare-fun call!14889 () List!1735)

(assert (=> bm!14885 (= call!14888 call!14889)))

(declare-fun b!135425 () Bool)

(declare-fun c!25312 () Bool)

(declare-fun c!25314 () Bool)

(assert (=> b!135425 (= e!88189 (ite c!25314 (t!6198 (toList!869 lt!69420)) (ite c!25312 (Cons!1731 (h!2336 (toList!869 lt!69420)) (t!6198 (toList!869 lt!69420))) Nil!1732)))))

(declare-fun b!135426 () Bool)

(declare-fun e!88192 () List!1735)

(assert (=> b!135426 (= e!88192 call!14889)))

(declare-fun b!135427 () Bool)

(assert (=> b!135427 (= c!25312 (and ((_ is Cons!1731) (toList!869 lt!69420)) (bvsgt (_1!1314 (h!2336 (toList!869 lt!69420))) (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))))))))

(assert (=> b!135427 (= e!88193 e!88190)))

(declare-fun d!42147 () Bool)

(assert (=> d!42147 e!88191))

(declare-fun res!65033 () Bool)

(assert (=> d!42147 (=> (not res!65033) (not e!88191))))

(assert (=> d!42147 (= res!65033 (isStrictlySorted!317 lt!70837))))

(assert (=> d!42147 (= lt!70837 e!88192)))

(declare-fun c!25313 () Bool)

(assert (=> d!42147 (= c!25313 (and ((_ is Cons!1731) (toList!869 lt!69420)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69420))) (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))))))))

(assert (=> d!42147 (isStrictlySorted!317 (toList!869 lt!69420))))

(assert (=> d!42147 (= (insertStrictlySorted!90 (toList!869 lt!69420) (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))) lt!70837)))

(declare-fun b!135424 () Bool)

(assert (=> b!135424 (= e!88192 e!88193)))

(assert (=> b!135424 (= c!25314 (and ((_ is Cons!1731) (toList!869 lt!69420)) (= (_1!1314 (h!2336 (toList!869 lt!69420))) (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))))))))

(declare-fun b!135428 () Bool)

(assert (=> b!135428 (= e!88190 call!14887)))

(declare-fun bm!14886 () Bool)

(assert (=> bm!14886 (= call!14889 ($colon$colon!91 e!88189 (ite c!25313 (h!2336 (toList!869 lt!69420)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69431 (zeroValue!2720 newMap!16)))))))))

(declare-fun c!25315 () Bool)

(assert (=> bm!14886 (= c!25315 c!25313)))

(assert (= (and d!42147 c!25313) b!135426))

(assert (= (and d!42147 (not c!25313)) b!135424))

(assert (= (and b!135424 c!25314) b!135420))

(assert (= (and b!135424 (not c!25314)) b!135427))

(assert (= (and b!135427 c!25312) b!135428))

(assert (= (and b!135427 (not c!25312)) b!135423))

(assert (= (or b!135428 b!135423) bm!14884))

(assert (= (or b!135420 bm!14884) bm!14885))

(assert (= (or b!135426 bm!14885) bm!14886))

(assert (= (and bm!14886 c!25315) b!135422))

(assert (= (and bm!14886 (not c!25315)) b!135425))

(assert (= (and d!42147 res!65033) b!135421))

(assert (= (and b!135421 res!65032) b!135419))

(declare-fun m!161535 () Bool)

(assert (=> b!135421 m!161535))

(declare-fun m!161537 () Bool)

(assert (=> b!135419 m!161537))

(declare-fun m!161539 () Bool)

(assert (=> d!42147 m!161539))

(declare-fun m!161541 () Bool)

(assert (=> d!42147 m!161541))

(declare-fun m!161543 () Bool)

(assert (=> bm!14886 m!161543))

(declare-fun m!161545 () Bool)

(assert (=> b!135422 m!161545))

(assert (=> d!40529 d!42147))

(declare-fun d!42149 () Bool)

(assert (=> d!42149 (= (apply!116 lt!69891 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1491 (getValueByKey!171 (toList!869 lt!69891) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5680 () Bool)

(assert (= bs!5680 d!42149))

(assert (=> bs!5680 m!156533))

(assert (=> bs!5680 m!160423))

(assert (=> bs!5680 m!160423))

(declare-fun m!161547 () Bool)

(assert (=> bs!5680 m!161547))

(assert (=> b!133485 d!42149))

(assert (=> b!133485 d!40911))

(declare-fun d!42151 () Bool)

(declare-fun res!65034 () Bool)

(declare-fun e!88194 () Bool)

(assert (=> d!42151 (=> res!65034 e!88194)))

(assert (=> d!42151 (= res!65034 (and ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (= (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!42151 (= (containsKey!175 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) e!88194)))

(declare-fun b!135429 () Bool)

(declare-fun e!88195 () Bool)

(assert (=> b!135429 (= e!88194 e!88195)))

(declare-fun res!65035 () Bool)

(assert (=> b!135429 (=> (not res!65035) (not e!88195))))

(assert (=> b!135429 (= res!65035 (and (or (not ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (bvsle (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))) ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (bvslt (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(declare-fun b!135430 () Bool)

(assert (=> b!135430 (= e!88195 (containsKey!175 (t!6198 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!42151 (not res!65034)) b!135429))

(assert (= (and b!135429 res!65035) b!135430))

(assert (=> b!135430 m!156287))

(declare-fun m!161549 () Bool)

(assert (=> b!135430 m!161549))

(assert (=> d!40443 d!42151))

(declare-fun d!42153 () Bool)

(declare-fun lt!70838 () Bool)

(assert (=> d!42153 (= lt!70838 (select (content!132 lt!69959) (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88197 () Bool)

(assert (=> d!42153 (= lt!70838 e!88197)))

(declare-fun res!65036 () Bool)

(assert (=> d!42153 (=> (not res!65036) (not e!88197))))

(assert (=> d!42153 (= res!65036 ((_ is Cons!1731) lt!69959))))

(assert (=> d!42153 (= (contains!898 lt!69959 (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70838)))

(declare-fun b!135431 () Bool)

(declare-fun e!88196 () Bool)

(assert (=> b!135431 (= e!88197 e!88196)))

(declare-fun res!65037 () Bool)

(assert (=> b!135431 (=> res!65037 e!88196)))

(assert (=> b!135431 (= res!65037 (= (h!2336 lt!69959) (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135432 () Bool)

(assert (=> b!135432 (= e!88196 (contains!898 (t!6198 lt!69959) (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42153 res!65036) b!135431))

(assert (= (and b!135431 (not res!65037)) b!135432))

(declare-fun m!161551 () Bool)

(assert (=> d!42153 m!161551))

(declare-fun m!161553 () Bool)

(assert (=> d!42153 m!161553))

(declare-fun m!161555 () Bool)

(assert (=> b!135432 m!161555))

(assert (=> b!133618 d!42153))

(assert (=> b!133581 d!42025))

(assert (=> b!133581 d!41885))

(assert (=> b!133433 d!40473))

(declare-fun d!42155 () Bool)

(assert (=> d!42155 (= (get!1491 (getValueByKey!171 (toList!869 lt!69510) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3201 (getValueByKey!171 (toList!869 lt!69510) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40829 d!42155))

(assert (=> d!40829 d!41999))

(declare-fun d!42157 () Bool)

(declare-fun res!65038 () Bool)

(declare-fun e!88198 () Bool)

(assert (=> d!42157 (=> res!65038 e!88198)))

(assert (=> d!42157 (= res!65038 (and ((_ is Cons!1731) (toList!869 lt!69488)) (= (_1!1314 (h!2336 (toList!869 lt!69488))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42157 (= (containsKey!175 (toList!869 lt!69488) #b1000000000000000000000000000000000000000000000000000000000000000) e!88198)))

(declare-fun b!135433 () Bool)

(declare-fun e!88199 () Bool)

(assert (=> b!135433 (= e!88198 e!88199)))

(declare-fun res!65039 () Bool)

(assert (=> b!135433 (=> (not res!65039) (not e!88199))))

(assert (=> b!135433 (= res!65039 (and (or (not ((_ is Cons!1731) (toList!869 lt!69488))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69488))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1731) (toList!869 lt!69488)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69488))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135434 () Bool)

(assert (=> b!135434 (= e!88199 (containsKey!175 (t!6198 (toList!869 lt!69488)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42157 (not res!65038)) b!135433))

(assert (= (and b!135433 res!65039) b!135434))

(declare-fun m!161557 () Bool)

(assert (=> b!135434 m!161557))

(assert (=> d!40769 d!42157))

(declare-fun d!42159 () Bool)

(assert (=> d!42159 (= (get!1491 (getValueByKey!171 (toList!869 lt!69518) lt!69517)) (v!3201 (getValueByKey!171 (toList!869 lt!69518) lt!69517)))))

(assert (=> d!40797 d!42159))

(declare-fun b!135435 () Bool)

(declare-fun e!88200 () Option!177)

(assert (=> b!135435 (= e!88200 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69518)))))))

(declare-fun b!135438 () Bool)

(declare-fun e!88201 () Option!177)

(assert (=> b!135438 (= e!88201 None!175)))

(declare-fun b!135437 () Bool)

(assert (=> b!135437 (= e!88201 (getValueByKey!171 (t!6198 (toList!869 lt!69518)) lt!69517))))

(declare-fun b!135436 () Bool)

(assert (=> b!135436 (= e!88200 e!88201)))

(declare-fun c!25317 () Bool)

(assert (=> b!135436 (= c!25317 (and ((_ is Cons!1731) (toList!869 lt!69518)) (not (= (_1!1314 (h!2336 (toList!869 lt!69518))) lt!69517))))))

(declare-fun d!42161 () Bool)

(declare-fun c!25316 () Bool)

(assert (=> d!42161 (= c!25316 (and ((_ is Cons!1731) (toList!869 lt!69518)) (= (_1!1314 (h!2336 (toList!869 lt!69518))) lt!69517)))))

(assert (=> d!42161 (= (getValueByKey!171 (toList!869 lt!69518) lt!69517) e!88200)))

(assert (= (and d!42161 c!25316) b!135435))

(assert (= (and d!42161 (not c!25316)) b!135436))

(assert (= (and b!135436 c!25317) b!135437))

(assert (= (and b!135436 (not c!25317)) b!135438))

(declare-fun m!161559 () Bool)

(assert (=> b!135437 m!161559))

(assert (=> d!40797 d!42161))

(declare-fun b!135439 () Bool)

(declare-fun e!88203 () (_ BitVec 32))

(assert (=> b!135439 (= e!88203 #b00000000000000000000000000000000)))

(declare-fun d!42163 () Bool)

(declare-fun lt!70839 () (_ BitVec 32))

(assert (=> d!42163 (and (bvsge lt!70839 #b00000000000000000000000000000000) (bvsle lt!70839 (bvsub (size!2529 (_keys!4614 (_2!1315 lt!69327))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!42163 (= lt!70839 e!88203)))

(declare-fun c!25319 () Bool)

(assert (=> d!42163 (= c!25319 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(assert (=> d!42163 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (_2!1315 lt!69327)))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2529 (_keys!4614 (_2!1315 lt!69327))) (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(assert (=> d!42163 (= (arrayCountValidKeys!0 (_keys!4614 (_2!1315 lt!69327)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (_2!1315 lt!69327)))) lt!70839)))

(declare-fun b!135440 () Bool)

(declare-fun e!88202 () (_ BitVec 32))

(declare-fun call!14890 () (_ BitVec 32))

(assert (=> b!135440 (= e!88202 call!14890)))

(declare-fun b!135441 () Bool)

(assert (=> b!135441 (= e!88202 (bvadd #b00000000000000000000000000000001 call!14890))))

(declare-fun bm!14887 () Bool)

(assert (=> bm!14887 (= call!14890 (arrayCountValidKeys!0 (_keys!4614 (_2!1315 lt!69327)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (_2!1315 lt!69327)))))))

(declare-fun b!135442 () Bool)

(assert (=> b!135442 (= e!88203 e!88202)))

(declare-fun c!25318 () Bool)

(assert (=> b!135442 (= c!25318 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!42163 c!25319) b!135439))

(assert (= (and d!42163 (not c!25319)) b!135442))

(assert (= (and b!135442 c!25318) b!135441))

(assert (= (and b!135442 (not c!25318)) b!135440))

(assert (= (or b!135441 b!135440) bm!14887))

(declare-fun m!161561 () Bool)

(assert (=> bm!14887 m!161561))

(assert (=> b!135442 m!159355))

(assert (=> b!135442 m!159355))

(assert (=> b!135442 m!159363))

(assert (=> bm!14796 d!42163))

(declare-fun d!42165 () Bool)

(declare-fun e!88204 () Bool)

(assert (=> d!42165 e!88204))

(declare-fun res!65041 () Bool)

(assert (=> d!42165 (=> (not res!65041) (not e!88204))))

(declare-fun lt!70841 () ListLongMap!1707)

(assert (=> d!42165 (= res!65041 (contains!896 lt!70841 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327))))))))

(declare-fun lt!70843 () List!1735)

(assert (=> d!42165 (= lt!70841 (ListLongMap!1708 lt!70843))))

(declare-fun lt!70842 () Unit!4150)

(declare-fun lt!70840 () Unit!4150)

(assert (=> d!42165 (= lt!70842 lt!70840)))

(assert (=> d!42165 (= (getValueByKey!171 lt!70843 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327))))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327))))))))

(assert (=> d!42165 (= lt!70840 (lemmaContainsTupThenGetReturnValue!88 lt!70843 (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327))))))))

(assert (=> d!42165 (= lt!70843 (insertStrictlySorted!90 (toList!869 call!14726) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327)))) (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327))))))))

(assert (=> d!42165 (= (+!170 call!14726 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327)))) lt!70841)))

(declare-fun b!135443 () Bool)

(declare-fun res!65040 () Bool)

(assert (=> b!135443 (=> (not res!65040) (not e!88204))))

(assert (=> b!135443 (= res!65040 (= (getValueByKey!171 (toList!869 lt!70841) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327))))) (Some!176 (_2!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327)))))))))

(declare-fun b!135444 () Bool)

(assert (=> b!135444 (= e!88204 (contains!898 (toList!869 lt!70841) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69327)))))))

(assert (= (and d!42165 res!65041) b!135443))

(assert (= (and b!135443 res!65040) b!135444))

(declare-fun m!161563 () Bool)

(assert (=> d!42165 m!161563))

(declare-fun m!161565 () Bool)

(assert (=> d!42165 m!161565))

(declare-fun m!161567 () Bool)

(assert (=> d!42165 m!161567))

(declare-fun m!161569 () Bool)

(assert (=> d!42165 m!161569))

(declare-fun m!161571 () Bool)

(assert (=> b!135443 m!161571))

(declare-fun m!161573 () Bool)

(assert (=> b!135444 m!161573))

(assert (=> b!133338 d!42165))

(assert (=> b!133666 d!41853))

(assert (=> d!40775 d!40773))

(declare-fun d!42167 () Bool)

(assert (=> d!42167 (= (getValueByKey!171 lt!69409 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) (Some!176 (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!42167 true))

(declare-fun _$22!489 () Unit!4150)

(assert (=> d!42167 (= (choose!834 lt!69409 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) _$22!489)))

(declare-fun bs!5681 () Bool)

(assert (= bs!5681 d!42167))

(assert (=> bs!5681 m!156633))

(assert (=> d!40775 d!42167))

(declare-fun d!42169 () Bool)

(declare-fun res!65042 () Bool)

(declare-fun e!88205 () Bool)

(assert (=> d!42169 (=> res!65042 e!88205)))

(assert (=> d!42169 (= res!65042 (or ((_ is Nil!1732) lt!69409) ((_ is Nil!1732) (t!6198 lt!69409))))))

(assert (=> d!42169 (= (isStrictlySorted!317 lt!69409) e!88205)))

(declare-fun b!135445 () Bool)

(declare-fun e!88206 () Bool)

(assert (=> b!135445 (= e!88205 e!88206)))

(declare-fun res!65043 () Bool)

(assert (=> b!135445 (=> (not res!65043) (not e!88206))))

(assert (=> b!135445 (= res!65043 (bvslt (_1!1314 (h!2336 lt!69409)) (_1!1314 (h!2336 (t!6198 lt!69409)))))))

(declare-fun b!135446 () Bool)

(assert (=> b!135446 (= e!88206 (isStrictlySorted!317 (t!6198 lt!69409)))))

(assert (= (and d!42169 (not res!65042)) b!135445))

(assert (= (and b!135445 res!65043) b!135446))

(declare-fun m!161575 () Bool)

(assert (=> b!135446 m!161575))

(assert (=> d!40775 d!42169))

(assert (=> bm!14736 d!41307))

(declare-fun d!42171 () Bool)

(declare-fun res!65044 () Bool)

(declare-fun e!88207 () Bool)

(assert (=> d!42171 (=> res!65044 e!88207)))

(assert (=> d!42171 (= res!65044 (or ((_ is Nil!1732) lt!69959) ((_ is Nil!1732) (t!6198 lt!69959))))))

(assert (=> d!42171 (= (isStrictlySorted!317 lt!69959) e!88207)))

(declare-fun b!135447 () Bool)

(declare-fun e!88208 () Bool)

(assert (=> b!135447 (= e!88207 e!88208)))

(declare-fun res!65045 () Bool)

(assert (=> b!135447 (=> (not res!65045) (not e!88208))))

(assert (=> b!135447 (= res!65045 (bvslt (_1!1314 (h!2336 lt!69959)) (_1!1314 (h!2336 (t!6198 lt!69959)))))))

(declare-fun b!135448 () Bool)

(assert (=> b!135448 (= e!88208 (isStrictlySorted!317 (t!6198 lt!69959)))))

(assert (= (and d!42171 (not res!65044)) b!135447))

(assert (= (and b!135447 res!65045) b!135448))

(declare-fun m!161577 () Bool)

(assert (=> b!135448 m!161577))

(assert (=> d!40693 d!42171))

(declare-fun d!42173 () Bool)

(declare-fun res!65046 () Bool)

(declare-fun e!88209 () Bool)

(assert (=> d!42173 (=> res!65046 e!88209)))

(assert (=> d!42173 (= res!65046 (or ((_ is Nil!1732) (toList!869 call!14636)) ((_ is Nil!1732) (t!6198 (toList!869 call!14636)))))))

(assert (=> d!42173 (= (isStrictlySorted!317 (toList!869 call!14636)) e!88209)))

(declare-fun b!135449 () Bool)

(declare-fun e!88210 () Bool)

(assert (=> b!135449 (= e!88209 e!88210)))

(declare-fun res!65047 () Bool)

(assert (=> b!135449 (=> (not res!65047) (not e!88210))))

(assert (=> b!135449 (= res!65047 (bvslt (_1!1314 (h!2336 (toList!869 call!14636))) (_1!1314 (h!2336 (t!6198 (toList!869 call!14636))))))))

(declare-fun b!135450 () Bool)

(assert (=> b!135450 (= e!88210 (isStrictlySorted!317 (t!6198 (toList!869 call!14636))))))

(assert (= (and d!42173 (not res!65046)) b!135449))

(assert (= (and b!135449 res!65047) b!135450))

(assert (=> b!135450 m!160351))

(assert (=> d!40693 d!42173))

(declare-fun b!135451 () Bool)

(declare-fun e!88212 () (_ BitVec 32))

(assert (=> b!135451 (= e!88212 #b00000000000000000000000000000000)))

(declare-fun d!42175 () Bool)

(declare-fun lt!70844 () (_ BitVec 32))

(assert (=> d!42175 (and (bvsge lt!70844 #b00000000000000000000000000000000) (bvsle lt!70844 (bvsub (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!42175 (= lt!70844 e!88212)))

(declare-fun c!25321 () Bool)

(assert (=> d!42175 (= c!25321 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!42175 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(assert (=> d!42175 (= (arrayCountValidKeys!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))) lt!70844)))

(declare-fun b!135452 () Bool)

(declare-fun e!88211 () (_ BitVec 32))

(declare-fun call!14891 () (_ BitVec 32))

(assert (=> b!135452 (= e!88211 call!14891)))

(declare-fun b!135453 () Bool)

(assert (=> b!135453 (= e!88211 (bvadd #b00000000000000000000000000000001 call!14891))))

(declare-fun bm!14888 () Bool)

(assert (=> bm!14888 (= call!14891 (arrayCountValidKeys!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!135454 () Bool)

(assert (=> b!135454 (= e!88212 e!88211)))

(declare-fun c!25320 () Bool)

(assert (=> b!135454 (= c!25320 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!42175 c!25321) b!135451))

(assert (= (and d!42175 (not c!25321)) b!135454))

(assert (= (and b!135454 c!25320) b!135453))

(assert (= (and b!135454 (not c!25320)) b!135452))

(assert (= (or b!135453 b!135452) bm!14888))

(declare-fun m!161579 () Bool)

(assert (=> bm!14888 m!161579))

(assert (=> b!135454 m!156593))

(assert (=> b!135454 m!156593))

(assert (=> b!135454 m!156601))

(assert (=> bm!14728 d!42175))

(assert (=> b!133670 d!40781))

(declare-fun d!42177 () Bool)

(declare-fun e!88213 () Bool)

(assert (=> d!42177 e!88213))

(declare-fun res!65048 () Bool)

(assert (=> d!42177 (=> res!65048 e!88213)))

(declare-fun lt!70845 () Bool)

(assert (=> d!42177 (= res!65048 (not lt!70845))))

(declare-fun lt!70847 () Bool)

(assert (=> d!42177 (= lt!70845 lt!70847)))

(declare-fun lt!70846 () Unit!4150)

(declare-fun e!88214 () Unit!4150)

(assert (=> d!42177 (= lt!70846 e!88214)))

(declare-fun c!25322 () Bool)

(assert (=> d!42177 (= c!25322 lt!70847)))

(assert (=> d!42177 (= lt!70847 (containsKey!175 (toList!869 lt!69911) (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))))

(assert (=> d!42177 (= (contains!896 lt!69911 (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) lt!70845)))

(declare-fun b!135455 () Bool)

(declare-fun lt!70848 () Unit!4150)

(assert (=> b!135455 (= e!88214 lt!70848)))

(assert (=> b!135455 (= lt!70848 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69911) (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))))

(assert (=> b!135455 (isDefined!125 (getValueByKey!171 (toList!869 lt!69911) (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135456 () Bool)

(declare-fun Unit!4266 () Unit!4150)

(assert (=> b!135456 (= e!88214 Unit!4266)))

(declare-fun b!135457 () Bool)

(assert (=> b!135457 (= e!88213 (isDefined!125 (getValueByKey!171 (toList!869 lt!69911) (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!42177 c!25322) b!135455))

(assert (= (and d!42177 (not c!25322)) b!135456))

(assert (= (and d!42177 (not res!65048)) b!135457))

(declare-fun m!161581 () Bool)

(assert (=> d!42177 m!161581))

(declare-fun m!161583 () Bool)

(assert (=> b!135455 m!161583))

(assert (=> b!135455 m!157825))

(assert (=> b!135455 m!157825))

(declare-fun m!161585 () Bool)

(assert (=> b!135455 m!161585))

(assert (=> b!135457 m!157825))

(assert (=> b!135457 m!157825))

(assert (=> b!135457 m!161585))

(assert (=> d!40589 d!42177))

(declare-fun b!135458 () Bool)

(declare-fun e!88215 () Option!177)

(assert (=> b!135458 (= e!88215 (Some!176 (_2!1314 (h!2336 lt!69913))))))

(declare-fun b!135461 () Bool)

(declare-fun e!88216 () Option!177)

(assert (=> b!135461 (= e!88216 None!175)))

(declare-fun b!135460 () Bool)

(assert (=> b!135460 (= e!88216 (getValueByKey!171 (t!6198 lt!69913) (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135459 () Bool)

(assert (=> b!135459 (= e!88215 e!88216)))

(declare-fun c!25324 () Bool)

(assert (=> b!135459 (= c!25324 (and ((_ is Cons!1731) lt!69913) (not (= (_1!1314 (h!2336 lt!69913)) (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))))))

(declare-fun d!42179 () Bool)

(declare-fun c!25323 () Bool)

(assert (=> d!42179 (= c!25323 (and ((_ is Cons!1731) lt!69913) (= (_1!1314 (h!2336 lt!69913)) (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))))))

(assert (=> d!42179 (= (getValueByKey!171 lt!69913 (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) e!88215)))

(assert (= (and d!42179 c!25323) b!135458))

(assert (= (and d!42179 (not c!25323)) b!135459))

(assert (= (and b!135459 c!25324) b!135460))

(assert (= (and b!135459 (not c!25324)) b!135461))

(declare-fun m!161587 () Bool)

(assert (=> b!135460 m!161587))

(assert (=> d!40589 d!42179))

(declare-fun d!42181 () Bool)

(assert (=> d!42181 (= (getValueByKey!171 lt!69913 (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70849 () Unit!4150)

(assert (=> d!42181 (= lt!70849 (choose!834 lt!69913 (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))))

(declare-fun e!88217 () Bool)

(assert (=> d!42181 e!88217))

(declare-fun res!65049 () Bool)

(assert (=> d!42181 (=> (not res!65049) (not e!88217))))

(assert (=> d!42181 (= res!65049 (isStrictlySorted!317 lt!69913))))

(assert (=> d!42181 (= (lemmaContainsTupThenGetReturnValue!88 lt!69913 (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) lt!70849)))

(declare-fun b!135462 () Bool)

(declare-fun res!65050 () Bool)

(assert (=> b!135462 (=> (not res!65050) (not e!88217))))

(assert (=> b!135462 (= res!65050 (containsKey!175 lt!69913 (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135463 () Bool)

(assert (=> b!135463 (= e!88217 (contains!898 lt!69913 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!42181 res!65049) b!135462))

(assert (= (and b!135462 res!65050) b!135463))

(assert (=> d!42181 m!157819))

(declare-fun m!161589 () Bool)

(assert (=> d!42181 m!161589))

(declare-fun m!161591 () Bool)

(assert (=> d!42181 m!161591))

(declare-fun m!161593 () Bool)

(assert (=> b!135462 m!161593))

(declare-fun m!161595 () Bool)

(assert (=> b!135463 m!161595))

(assert (=> d!40589 d!42181))

(declare-fun bm!14889 () Bool)

(declare-fun call!14892 () List!1735)

(declare-fun call!14893 () List!1735)

(assert (=> bm!14889 (= call!14892 call!14893)))

(declare-fun e!88220 () Bool)

(declare-fun lt!70850 () List!1735)

(declare-fun b!135464 () Bool)

(assert (=> b!135464 (= e!88220 (contains!898 lt!70850 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))))))

(declare-fun b!135465 () Bool)

(declare-fun e!88222 () List!1735)

(assert (=> b!135465 (= e!88222 call!14893)))

(declare-fun b!135466 () Bool)

(declare-fun res!65051 () Bool)

(assert (=> b!135466 (=> (not res!65051) (not e!88220))))

(assert (=> b!135466 (= res!65051 (containsKey!175 lt!70850 (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135467 () Bool)

(declare-fun e!88218 () List!1735)

(assert (=> b!135467 (= e!88218 (insertStrictlySorted!90 (t!6198 (toList!869 lt!69484)) (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135468 () Bool)

(declare-fun e!88219 () List!1735)

(assert (=> b!135468 (= e!88219 call!14892)))

(declare-fun bm!14890 () Bool)

(declare-fun call!14894 () List!1735)

(assert (=> bm!14890 (= call!14893 call!14894)))

(declare-fun c!25327 () Bool)

(declare-fun c!25325 () Bool)

(declare-fun b!135470 () Bool)

(assert (=> b!135470 (= e!88218 (ite c!25327 (t!6198 (toList!869 lt!69484)) (ite c!25325 (Cons!1731 (h!2336 (toList!869 lt!69484)) (t!6198 (toList!869 lt!69484))) Nil!1732)))))

(declare-fun b!135471 () Bool)

(declare-fun e!88221 () List!1735)

(assert (=> b!135471 (= e!88221 call!14894)))

(declare-fun b!135472 () Bool)

(assert (=> b!135472 (= c!25325 (and ((_ is Cons!1731) (toList!869 lt!69484)) (bvsgt (_1!1314 (h!2336 (toList!869 lt!69484))) (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))))))

(assert (=> b!135472 (= e!88222 e!88219)))

(declare-fun d!42183 () Bool)

(assert (=> d!42183 e!88220))

(declare-fun res!65052 () Bool)

(assert (=> d!42183 (=> (not res!65052) (not e!88220))))

(assert (=> d!42183 (= res!65052 (isStrictlySorted!317 lt!70850))))

(assert (=> d!42183 (= lt!70850 e!88221)))

(declare-fun c!25326 () Bool)

(assert (=> d!42183 (= c!25326 (and ((_ is Cons!1731) (toList!869 lt!69484)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69484))) (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))))))

(assert (=> d!42183 (isStrictlySorted!317 (toList!869 lt!69484))))

(assert (=> d!42183 (= (insertStrictlySorted!90 (toList!869 lt!69484) (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))) lt!70850)))

(declare-fun b!135469 () Bool)

(assert (=> b!135469 (= e!88221 e!88222)))

(assert (=> b!135469 (= c!25327 (and ((_ is Cons!1731) (toList!869 lt!69484)) (= (_1!1314 (h!2336 (toList!869 lt!69484))) (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))))))))

(declare-fun b!135473 () Bool)

(assert (=> b!135473 (= e!88219 call!14892)))

(declare-fun bm!14891 () Bool)

(assert (=> bm!14891 (= call!14894 ($colon$colon!91 e!88218 (ite c!25326 (h!2336 (toList!869 lt!69484)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16)))))))))

(declare-fun c!25328 () Bool)

(assert (=> bm!14891 (= c!25328 c!25326)))

(assert (= (and d!42183 c!25326) b!135471))

(assert (= (and d!42183 (not c!25326)) b!135469))

(assert (= (and b!135469 c!25327) b!135465))

(assert (= (and b!135469 (not c!25327)) b!135472))

(assert (= (and b!135472 c!25325) b!135473))

(assert (= (and b!135472 (not c!25325)) b!135468))

(assert (= (or b!135473 b!135468) bm!14889))

(assert (= (or b!135465 bm!14889) bm!14890))

(assert (= (or b!135471 bm!14890) bm!14891))

(assert (= (and bm!14891 c!25328) b!135467))

(assert (= (and bm!14891 (not c!25328)) b!135470))

(assert (= (and d!42183 res!65052) b!135466))

(assert (= (and b!135466 res!65051) b!135464))

(declare-fun m!161597 () Bool)

(assert (=> b!135466 m!161597))

(declare-fun m!161599 () Bool)

(assert (=> b!135464 m!161599))

(declare-fun m!161601 () Bool)

(assert (=> d!42183 m!161601))

(declare-fun m!161603 () Bool)

(assert (=> d!42183 m!161603))

(declare-fun m!161605 () Bool)

(assert (=> bm!14891 m!161605))

(declare-fun m!161607 () Bool)

(assert (=> b!135467 m!161607))

(assert (=> d!40589 d!42183))

(assert (=> bm!14786 d!41365))

(assert (=> b!133455 d!40473))

(assert (=> d!40675 d!40661))

(declare-fun d!42185 () Bool)

(assert (=> d!42185 (= (get!1489 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3196 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000)))))

(assert (=> b!133976 d!42185))

(declare-fun d!42187 () Bool)

(assert (=> d!42187 (= (apply!116 (+!170 lt!69424 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))) lt!69423) (apply!116 lt!69424 lt!69423))))

(assert (=> d!42187 true))

(declare-fun _$34!984 () Unit!4150)

(assert (=> d!42187 (= (choose!828 lt!69424 lt!69421 (minValue!2720 newMap!16) lt!69423) _$34!984)))

(declare-fun bs!5682 () Bool)

(assert (= bs!5682 d!42187))

(assert (=> bs!5682 m!156661))

(assert (=> bs!5682 m!156661))

(assert (=> bs!5682 m!156663))

(assert (=> bs!5682 m!156677))

(assert (=> d!40539 d!42187))

(assert (=> d!40539 d!40515))

(declare-fun d!42189 () Bool)

(declare-fun e!88223 () Bool)

(assert (=> d!42189 e!88223))

(declare-fun res!65053 () Bool)

(assert (=> d!42189 (=> res!65053 e!88223)))

(declare-fun lt!70851 () Bool)

(assert (=> d!42189 (= res!65053 (not lt!70851))))

(declare-fun lt!70853 () Bool)

(assert (=> d!42189 (= lt!70851 lt!70853)))

(declare-fun lt!70852 () Unit!4150)

(declare-fun e!88224 () Unit!4150)

(assert (=> d!42189 (= lt!70852 e!88224)))

(declare-fun c!25329 () Bool)

(assert (=> d!42189 (= c!25329 lt!70853)))

(assert (=> d!42189 (= lt!70853 (containsKey!175 (toList!869 lt!69424) lt!69423))))

(assert (=> d!42189 (= (contains!896 lt!69424 lt!69423) lt!70851)))

(declare-fun b!135474 () Bool)

(declare-fun lt!70854 () Unit!4150)

(assert (=> b!135474 (= e!88224 lt!70854)))

(assert (=> b!135474 (= lt!70854 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69424) lt!69423))))

(assert (=> b!135474 (isDefined!125 (getValueByKey!171 (toList!869 lt!69424) lt!69423))))

(declare-fun b!135475 () Bool)

(declare-fun Unit!4267 () Unit!4150)

(assert (=> b!135475 (= e!88224 Unit!4267)))

(declare-fun b!135476 () Bool)

(assert (=> b!135476 (= e!88223 (isDefined!125 (getValueByKey!171 (toList!869 lt!69424) lt!69423)))))

(assert (= (and d!42189 c!25329) b!135474))

(assert (= (and d!42189 (not c!25329)) b!135475))

(assert (= (and d!42189 (not res!65053)) b!135476))

(declare-fun m!161609 () Bool)

(assert (=> d!42189 m!161609))

(declare-fun m!161611 () Bool)

(assert (=> b!135474 m!161611))

(assert (=> b!135474 m!157479))

(assert (=> b!135474 m!157479))

(declare-fun m!161613 () Bool)

(assert (=> b!135474 m!161613))

(assert (=> b!135476 m!157479))

(assert (=> b!135476 m!157479))

(assert (=> b!135476 m!161613))

(assert (=> d!40539 d!42189))

(assert (=> d!40539 d!40543))

(assert (=> d!40539 d!40545))

(declare-fun d!42191 () Bool)

(declare-fun lt!70855 () Bool)

(assert (=> d!42191 (= lt!70855 (select (content!132 lt!69474) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun e!88226 () Bool)

(assert (=> d!42191 (= lt!70855 e!88226)))

(declare-fun res!65054 () Bool)

(assert (=> d!42191 (=> (not res!65054) (not e!88226))))

(assert (=> d!42191 (= res!65054 ((_ is Cons!1731) lt!69474))))

(assert (=> d!42191 (= (contains!898 lt!69474 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!70855)))

(declare-fun b!135477 () Bool)

(declare-fun e!88225 () Bool)

(assert (=> b!135477 (= e!88226 e!88225)))

(declare-fun res!65055 () Bool)

(assert (=> b!135477 (=> res!65055 e!88225)))

(assert (=> b!135477 (= res!65055 (= (h!2336 lt!69474) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135478 () Bool)

(assert (=> b!135478 (= e!88225 (contains!898 (t!6198 lt!69474) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!42191 res!65054) b!135477))

(assert (= (and b!135477 (not res!65055)) b!135478))

(declare-fun m!161615 () Bool)

(assert (=> d!42191 m!161615))

(declare-fun m!161617 () Bool)

(assert (=> d!42191 m!161617))

(declare-fun m!161619 () Bool)

(assert (=> b!135478 m!161619))

(assert (=> b!133598 d!42191))

(assert (=> b!133771 d!40919))

(declare-fun d!42193 () Bool)

(assert (=> d!42193 (= (get!1491 (getValueByKey!171 (toList!869 lt!69416) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3201 (getValueByKey!171 (toList!869 lt!69416) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40493 d!42193))

(assert (=> d!40493 d!41171))

(declare-fun d!42195 () Bool)

(assert (=> d!42195 (= (get!1491 (getValueByKey!171 (toList!869 lt!69488) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3201 (getValueByKey!171 (toList!869 lt!69488) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40507 d!42195))

(assert (=> d!40507 d!41457))

(declare-fun lt!70856 () Bool)

(declare-fun d!42197 () Bool)

(assert (=> d!42197 (= lt!70856 (select (content!132 (toList!869 lt!70026)) (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun e!88228 () Bool)

(assert (=> d!42197 (= lt!70856 e!88228)))

(declare-fun res!65056 () Bool)

(assert (=> d!42197 (=> (not res!65056) (not e!88228))))

(assert (=> d!42197 (= res!65056 ((_ is Cons!1731) (toList!869 lt!70026)))))

(assert (=> d!42197 (= (contains!898 (toList!869 lt!70026) (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70856)))

(declare-fun b!135479 () Bool)

(declare-fun e!88227 () Bool)

(assert (=> b!135479 (= e!88228 e!88227)))

(declare-fun res!65057 () Bool)

(assert (=> b!135479 (=> res!65057 e!88227)))

(assert (=> b!135479 (= res!65057 (= (h!2336 (toList!869 lt!70026)) (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!135480 () Bool)

(assert (=> b!135480 (= e!88227 (contains!898 (t!6198 (toList!869 lt!70026)) (ite (or c!24611 c!24614) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (= (and d!42197 res!65056) b!135479))

(assert (= (and b!135479 (not res!65057)) b!135480))

(declare-fun m!161621 () Bool)

(assert (=> d!42197 m!161621))

(declare-fun m!161623 () Bool)

(assert (=> d!42197 m!161623))

(declare-fun m!161625 () Bool)

(assert (=> b!135480 m!161625))

(assert (=> b!133750 d!42197))

(assert (=> b!133918 d!42125))

(assert (=> bm!14743 d!41279))

(declare-fun d!42199 () Bool)

(assert (=> d!42199 (isDefined!125 (getValueByKey!171 (toList!869 lt!69225) lt!69223))))

(declare-fun lt!70857 () Unit!4150)

(assert (=> d!42199 (= lt!70857 (choose!831 (toList!869 lt!69225) lt!69223))))

(declare-fun e!88229 () Bool)

(assert (=> d!42199 e!88229))

(declare-fun res!65058 () Bool)

(assert (=> d!42199 (=> (not res!65058) (not e!88229))))

(assert (=> d!42199 (= res!65058 (isStrictlySorted!317 (toList!869 lt!69225)))))

(assert (=> d!42199 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69225) lt!69223) lt!70857)))

(declare-fun b!135481 () Bool)

(assert (=> b!135481 (= e!88229 (containsKey!175 (toList!869 lt!69225) lt!69223))))

(assert (= (and d!42199 res!65058) b!135481))

(assert (=> d!42199 m!156825))

(assert (=> d!42199 m!156825))

(assert (=> d!42199 m!158491))

(declare-fun m!161627 () Bool)

(assert (=> d!42199 m!161627))

(assert (=> d!42199 m!158471))

(assert (=> b!135481 m!158487))

(assert (=> b!133860 d!42199))

(assert (=> b!133860 d!41721))

(assert (=> b!133860 d!40609))

(assert (=> d!40629 d!40357))

(assert (=> d!40629 d!40359))

(assert (=> d!40629 d!40377))

(assert (=> d!40893 d!40475))

(declare-fun d!42201 () Bool)

(declare-fun res!65059 () Bool)

(declare-fun e!88230 () Bool)

(assert (=> d!42201 (=> res!65059 e!88230)))

(assert (=> d!42201 (= res!65059 (and ((_ is Cons!1731) (toList!869 lt!69376)) (= (_1!1314 (h!2336 (toList!869 lt!69376))) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!42201 (= (containsKey!175 (toList!869 lt!69376) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!88230)))

(declare-fun b!135482 () Bool)

(declare-fun e!88231 () Bool)

(assert (=> b!135482 (= e!88230 e!88231)))

(declare-fun res!65060 () Bool)

(assert (=> b!135482 (=> (not res!65060) (not e!88231))))

(assert (=> b!135482 (= res!65060 (and (or (not ((_ is Cons!1731) (toList!869 lt!69376))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69376))) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1731) (toList!869 lt!69376)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69376))) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135483 () Bool)

(assert (=> b!135483 (= e!88231 (containsKey!175 (t!6198 (toList!869 lt!69376)) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42201 (not res!65059)) b!135482))

(assert (= (and b!135482 res!65060) b!135483))

(declare-fun m!161629 () Bool)

(assert (=> b!135483 m!161629))

(assert (=> d!40821 d!42201))

(declare-fun b!135484 () Bool)

(declare-fun e!88233 () Bool)

(declare-fun call!14895 () Bool)

(assert (=> b!135484 (= e!88233 call!14895)))

(declare-fun b!135485 () Bool)

(declare-fun e!88234 () Bool)

(assert (=> b!135485 (= e!88233 e!88234)))

(declare-fun lt!70859 () (_ BitVec 64))

(assert (=> b!135485 (= lt!70859 (select (arr!2260 (_keys!4614 (_2!1315 lt!69589))) #b00000000000000000000000000000000))))

(declare-fun lt!70860 () Unit!4150)

(assert (=> b!135485 (= lt!70860 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (_2!1315 lt!69589)) lt!70859 #b00000000000000000000000000000000))))

(assert (=> b!135485 (arrayContainsKey!0 (_keys!4614 (_2!1315 lt!69589)) lt!70859 #b00000000000000000000000000000000)))

(declare-fun lt!70858 () Unit!4150)

(assert (=> b!135485 (= lt!70858 lt!70860)))

(declare-fun res!65061 () Bool)

(assert (=> b!135485 (= res!65061 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69589))) #b00000000000000000000000000000000) (_keys!4614 (_2!1315 lt!69589)) (mask!7165 (_2!1315 lt!69589))) (Found!285 #b00000000000000000000000000000000)))))

(assert (=> b!135485 (=> (not res!65061) (not e!88234))))

(declare-fun b!135486 () Bool)

(assert (=> b!135486 (= e!88234 call!14895)))

(declare-fun b!135487 () Bool)

(declare-fun e!88232 () Bool)

(assert (=> b!135487 (= e!88232 e!88233)))

(declare-fun c!25330 () Bool)

(assert (=> b!135487 (= c!25330 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69589))) #b00000000000000000000000000000000)))))

(declare-fun bm!14892 () Bool)

(assert (=> bm!14892 (= call!14895 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4614 (_2!1315 lt!69589)) (mask!7165 (_2!1315 lt!69589))))))

(declare-fun d!42203 () Bool)

(declare-fun res!65062 () Bool)

(assert (=> d!42203 (=> res!65062 e!88232)))

(assert (=> d!42203 (= res!65062 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69589)))))))

(assert (=> d!42203 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4614 (_2!1315 lt!69589)) (mask!7165 (_2!1315 lt!69589))) e!88232)))

(assert (= (and d!42203 (not res!65062)) b!135487))

(assert (= (and b!135487 c!25330) b!135485))

(assert (= (and b!135487 (not c!25330)) b!135484))

(assert (= (and b!135485 res!65061) b!135486))

(assert (= (or b!135486 b!135484) bm!14892))

(declare-fun m!161631 () Bool)

(assert (=> b!135485 m!161631))

(declare-fun m!161633 () Bool)

(assert (=> b!135485 m!161633))

(declare-fun m!161635 () Bool)

(assert (=> b!135485 m!161635))

(assert (=> b!135485 m!161631))

(declare-fun m!161637 () Bool)

(assert (=> b!135485 m!161637))

(assert (=> b!135487 m!161631))

(assert (=> b!135487 m!161631))

(declare-fun m!161639 () Bool)

(assert (=> b!135487 m!161639))

(declare-fun m!161641 () Bool)

(assert (=> bm!14892 m!161641))

(assert (=> b!133672 d!42203))

(assert (=> b!133900 d!41479))

(declare-fun d!42205 () Bool)

(declare-fun res!65063 () Bool)

(declare-fun e!88235 () Bool)

(assert (=> d!42205 (=> res!65063 e!88235)))

(assert (=> d!42205 (= res!65063 (and ((_ is Cons!1731) (toList!869 lt!69459)) (= (_1!1314 (h!2336 (toList!869 lt!69459))) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!42205 (= (containsKey!175 (toList!869 lt!69459) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!88235)))

(declare-fun b!135488 () Bool)

(declare-fun e!88236 () Bool)

(assert (=> b!135488 (= e!88235 e!88236)))

(declare-fun res!65064 () Bool)

(assert (=> b!135488 (=> (not res!65064) (not e!88236))))

(assert (=> b!135488 (= res!65064 (and (or (not ((_ is Cons!1731) (toList!869 lt!69459))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69459))) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) ((_ is Cons!1731) (toList!869 lt!69459)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69459))) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135489 () Bool)

(assert (=> b!135489 (= e!88236 (containsKey!175 (t!6198 (toList!869 lt!69459)) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!42205 (not res!65063)) b!135488))

(assert (= (and b!135488 res!65064) b!135489))

(declare-fun m!161643 () Bool)

(assert (=> b!135489 m!161643))

(assert (=> d!40431 d!42205))

(declare-fun b!135490 () Bool)

(declare-fun e!88237 () Option!177)

(assert (=> b!135490 (= e!88237 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 lt!69459))))))))

(declare-fun b!135493 () Bool)

(declare-fun e!88238 () Option!177)

(assert (=> b!135493 (= e!88238 None!175)))

(declare-fun b!135492 () Bool)

(assert (=> b!135492 (= e!88238 (getValueByKey!171 (t!6198 (t!6198 (toList!869 lt!69459))) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!135491 () Bool)

(assert (=> b!135491 (= e!88237 e!88238)))

(declare-fun c!25332 () Bool)

(assert (=> b!135491 (= c!25332 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69459))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69459)))) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!25331 () Bool)

(declare-fun d!42207 () Bool)

(assert (=> d!42207 (= c!25331 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69459))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69459)))) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!42207 (= (getValueByKey!171 (t!6198 (toList!869 lt!69459)) (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!88237)))

(assert (= (and d!42207 c!25331) b!135490))

(assert (= (and d!42207 (not c!25331)) b!135491))

(assert (= (and b!135491 c!25332) b!135492))

(assert (= (and b!135491 (not c!25332)) b!135493))

(declare-fun m!161645 () Bool)

(assert (=> b!135492 m!161645))

(assert (=> b!133353 d!42207))

(declare-fun d!42209 () Bool)

(declare-fun res!65065 () Bool)

(declare-fun e!88239 () Bool)

(assert (=> d!42209 (=> res!65065 e!88239)))

(assert (=> d!42209 (= res!65065 (and ((_ is Cons!1731) (t!6198 (t!6198 (toList!869 lt!69161)))) (= (_1!1314 (h!2336 (t!6198 (t!6198 (toList!869 lt!69161))))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!42209 (= (containsKey!175 (t!6198 (t!6198 (toList!869 lt!69161))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) e!88239)))

(declare-fun b!135494 () Bool)

(declare-fun e!88240 () Bool)

(assert (=> b!135494 (= e!88239 e!88240)))

(declare-fun res!65066 () Bool)

(assert (=> b!135494 (=> (not res!65066) (not e!88240))))

(assert (=> b!135494 (= res!65066 (and (or (not ((_ is Cons!1731) (t!6198 (t!6198 (toList!869 lt!69161))))) (bvsle (_1!1314 (h!2336 (t!6198 (t!6198 (toList!869 lt!69161))))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))) ((_ is Cons!1731) (t!6198 (t!6198 (toList!869 lt!69161)))) (bvslt (_1!1314 (h!2336 (t!6198 (t!6198 (toList!869 lt!69161))))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))))))

(declare-fun b!135495 () Bool)

(assert (=> b!135495 (= e!88240 (containsKey!175 (t!6198 (t!6198 (t!6198 (toList!869 lt!69161)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!42209 (not res!65065)) b!135494))

(assert (= (and b!135494 res!65066) b!135495))

(assert (=> b!135495 m!156287))

(declare-fun m!161647 () Bool)

(assert (=> b!135495 m!161647))

(assert (=> b!133996 d!42209))

(declare-fun b!135496 () Bool)

(declare-fun e!88241 () Option!177)

(assert (=> b!135496 (= e!88241 (Some!176 (_2!1314 (h!2336 (t!6198 lt!69409)))))))

(declare-fun b!135499 () Bool)

(declare-fun e!88242 () Option!177)

(assert (=> b!135499 (= e!88242 None!175)))

(declare-fun b!135498 () Bool)

(assert (=> b!135498 (= e!88242 (getValueByKey!171 (t!6198 (t!6198 lt!69409)) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135497 () Bool)

(assert (=> b!135497 (= e!88241 e!88242)))

(declare-fun c!25334 () Bool)

(assert (=> b!135497 (= c!25334 (and ((_ is Cons!1731) (t!6198 lt!69409)) (not (= (_1!1314 (h!2336 (t!6198 lt!69409))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))))

(declare-fun d!42211 () Bool)

(declare-fun c!25333 () Bool)

(assert (=> d!42211 (= c!25333 (and ((_ is Cons!1731) (t!6198 lt!69409)) (= (_1!1314 (h!2336 (t!6198 lt!69409))) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(assert (=> d!42211 (= (getValueByKey!171 (t!6198 lt!69409) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) e!88241)))

(assert (= (and d!42211 c!25333) b!135496))

(assert (= (and d!42211 (not c!25333)) b!135497))

(assert (= (and b!135497 c!25334) b!135498))

(assert (= (and b!135497 (not c!25334)) b!135499))

(declare-fun m!161649 () Bool)

(assert (=> b!135498 m!161649))

(assert (=> b!133735 d!42211))

(declare-fun d!42213 () Bool)

(declare-fun lt!70861 () Bool)

(assert (=> d!42213 (= lt!70861 (select (content!132 (toList!869 lt!69898)) (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(declare-fun e!88244 () Bool)

(assert (=> d!42213 (= lt!70861 e!88244)))

(declare-fun res!65067 () Bool)

(assert (=> d!42213 (=> (not res!65067) (not e!88244))))

(assert (=> d!42213 (= res!65067 ((_ is Cons!1731) (toList!869 lt!69898)))))

(assert (=> d!42213 (= (contains!898 (toList!869 lt!69898) (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!70861)))

(declare-fun b!135500 () Bool)

(declare-fun e!88243 () Bool)

(assert (=> b!135500 (= e!88244 e!88243)))

(declare-fun res!65068 () Bool)

(assert (=> b!135500 (=> res!65068 e!88243)))

(assert (=> b!135500 (= res!65068 (= (h!2336 (toList!869 lt!69898)) (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(declare-fun b!135501 () Bool)

(assert (=> b!135501 (= e!88243 (contains!898 (t!6198 (toList!869 lt!69898)) (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(assert (= (and d!42213 res!65067) b!135500))

(assert (= (and b!135500 (not res!65068)) b!135501))

(declare-fun m!161651 () Bool)

(assert (=> d!42213 m!161651))

(declare-fun m!161653 () Bool)

(assert (=> d!42213 m!161653))

(declare-fun m!161655 () Bool)

(assert (=> b!135501 m!161655))

(assert (=> b!133495 d!42213))

(declare-fun lt!70862 () Bool)

(declare-fun d!42215 () Bool)

(assert (=> d!42215 (= lt!70862 (select (content!132 lt!69926) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun e!88246 () Bool)

(assert (=> d!42215 (= lt!70862 e!88246)))

(declare-fun res!65069 () Bool)

(assert (=> d!42215 (=> (not res!65069) (not e!88246))))

(assert (=> d!42215 (= res!65069 ((_ is Cons!1731) lt!69926))))

(assert (=> d!42215 (= (contains!898 lt!69926 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!70862)))

(declare-fun b!135502 () Bool)

(declare-fun e!88245 () Bool)

(assert (=> b!135502 (= e!88246 e!88245)))

(declare-fun res!65070 () Bool)

(assert (=> b!135502 (=> res!65070 e!88245)))

(assert (=> b!135502 (= res!65070 (= (h!2336 lt!69926) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135503 () Bool)

(assert (=> b!135503 (= e!88245 (contains!898 (t!6198 lt!69926) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!42215 res!65069) b!135502))

(assert (= (and b!135502 (not res!65070)) b!135503))

(declare-fun m!161657 () Bool)

(assert (=> d!42215 m!161657))

(declare-fun m!161659 () Bool)

(assert (=> d!42215 m!161659))

(declare-fun m!161661 () Bool)

(assert (=> b!135503 m!161661))

(assert (=> b!133537 d!42215))

(declare-fun e!88247 () Option!177)

(declare-fun b!135504 () Bool)

(assert (=> b!135504 (= e!88247 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))))

(declare-fun b!135507 () Bool)

(declare-fun e!88248 () Option!177)

(assert (=> b!135507 (= e!88248 None!175)))

(declare-fun b!135506 () Bool)

(assert (=> b!135506 (= e!88248 (getValueByKey!171 (t!6198 (t!6198 (toList!869 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) lt!69218))))

(declare-fun b!135505 () Bool)

(assert (=> b!135505 (= e!88247 e!88248)))

(declare-fun c!25336 () Bool)

(assert (=> b!135505 (= c!25336 (and ((_ is Cons!1731) (t!6198 (toList!869 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))) lt!69218))))))

(declare-fun c!25335 () Bool)

(declare-fun d!42217 () Bool)

(assert (=> d!42217 (= c!25335 (and ((_ is Cons!1731) (t!6198 (toList!869 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) (= (_1!1314 (h!2336 (t!6198 (toList!869 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))) lt!69218)))))

(assert (=> d!42217 (= (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69230 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!69218) e!88247)))

(assert (= (and d!42217 c!25335) b!135504))

(assert (= (and d!42217 (not c!25335)) b!135505))

(assert (= (and b!135505 c!25336) b!135506))

(assert (= (and b!135505 (not c!25336)) b!135507))

(declare-fun m!161663 () Bool)

(assert (=> b!135506 m!161663))

(assert (=> b!134017 d!42217))

(declare-fun bm!14893 () Bool)

(declare-fun call!14896 () List!1735)

(declare-fun call!14897 () List!1735)

(assert (=> bm!14893 (= call!14896 call!14897)))

(declare-fun e!88251 () Bool)

(declare-fun b!135508 () Bool)

(declare-fun lt!70863 () List!1735)

(assert (=> b!135508 (= e!88251 (contains!898 lt!70863 (tuple2!2609 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135509 () Bool)

(declare-fun e!88253 () List!1735)

(assert (=> b!135509 (= e!88253 call!14897)))

(declare-fun b!135510 () Bool)

(declare-fun res!65071 () Bool)

(assert (=> b!135510 (=> (not res!65071) (not e!88251))))

(assert (=> b!135510 (= res!65071 (containsKey!175 lt!70863 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135511 () Bool)

(declare-fun e!88249 () List!1735)

(assert (=> b!135511 (= e!88249 (insertStrictlySorted!90 (t!6198 (t!6198 (toList!869 e!86537))) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135512 () Bool)

(declare-fun e!88250 () List!1735)

(assert (=> b!135512 (= e!88250 call!14896)))

(declare-fun bm!14894 () Bool)

(declare-fun call!14898 () List!1735)

(assert (=> bm!14894 (= call!14897 call!14898)))

(declare-fun b!135514 () Bool)

(declare-fun c!25337 () Bool)

(declare-fun c!25339 () Bool)

(assert (=> b!135514 (= e!88249 (ite c!25339 (t!6198 (t!6198 (toList!869 e!86537))) (ite c!25337 (Cons!1731 (h!2336 (t!6198 (toList!869 e!86537))) (t!6198 (t!6198 (toList!869 e!86537)))) Nil!1732)))))

(declare-fun b!135515 () Bool)

(declare-fun e!88252 () List!1735)

(assert (=> b!135515 (= e!88252 call!14898)))

(declare-fun b!135516 () Bool)

(assert (=> b!135516 (= c!25337 (and ((_ is Cons!1731) (t!6198 (toList!869 e!86537))) (bvsgt (_1!1314 (h!2336 (t!6198 (toList!869 e!86537)))) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> b!135516 (= e!88253 e!88250)))

(declare-fun d!42219 () Bool)

(assert (=> d!42219 e!88251))

(declare-fun res!65072 () Bool)

(assert (=> d!42219 (=> (not res!65072) (not e!88251))))

(assert (=> d!42219 (= res!65072 (isStrictlySorted!317 lt!70863))))

(assert (=> d!42219 (= lt!70863 e!88252)))

(declare-fun c!25338 () Bool)

(assert (=> d!42219 (= c!25338 (and ((_ is Cons!1731) (t!6198 (toList!869 e!86537))) (bvslt (_1!1314 (h!2336 (t!6198 (toList!869 e!86537)))) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!42219 (isStrictlySorted!317 (t!6198 (toList!869 e!86537)))))

(assert (=> d!42219 (= (insertStrictlySorted!90 (t!6198 (toList!869 e!86537)) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70863)))

(declare-fun b!135513 () Bool)

(assert (=> b!135513 (= e!88252 e!88253)))

(assert (=> b!135513 (= c!25339 (and ((_ is Cons!1731) (t!6198 (toList!869 e!86537))) (= (_1!1314 (h!2336 (t!6198 (toList!869 e!86537)))) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135517 () Bool)

(assert (=> b!135517 (= e!88250 call!14896)))

(declare-fun bm!14895 () Bool)

(assert (=> bm!14895 (= call!14898 ($colon$colon!91 e!88249 (ite c!25338 (h!2336 (t!6198 (toList!869 e!86537))) (tuple2!2609 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!25340 () Bool)

(assert (=> bm!14895 (= c!25340 c!25338)))

(assert (= (and d!42219 c!25338) b!135515))

(assert (= (and d!42219 (not c!25338)) b!135513))

(assert (= (and b!135513 c!25339) b!135509))

(assert (= (and b!135513 (not c!25339)) b!135516))

(assert (= (and b!135516 c!25337) b!135517))

(assert (= (and b!135516 (not c!25337)) b!135512))

(assert (= (or b!135517 b!135512) bm!14893))

(assert (= (or b!135509 bm!14893) bm!14894))

(assert (= (or b!135515 bm!14894) bm!14895))

(assert (= (and bm!14895 c!25340) b!135511))

(assert (= (and bm!14895 (not c!25340)) b!135514))

(assert (= (and d!42219 res!65072) b!135510))

(assert (= (and b!135510 res!65071) b!135508))

(declare-fun m!161665 () Bool)

(assert (=> b!135510 m!161665))

(declare-fun m!161667 () Bool)

(assert (=> b!135508 m!161667))

(declare-fun m!161669 () Bool)

(assert (=> d!42219 m!161669))

(assert (=> d!42219 m!160133))

(declare-fun m!161671 () Bool)

(assert (=> bm!14895 m!161671))

(declare-fun m!161673 () Bool)

(assert (=> b!135511 m!161673))

(assert (=> b!133786 d!42219))

(declare-fun d!42221 () Bool)

(declare-fun res!65073 () Bool)

(declare-fun e!88254 () Bool)

(assert (=> d!42221 (=> res!65073 e!88254)))

(assert (=> d!42221 (= res!65073 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402)))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402))))) lt!69401)))))

(assert (=> d!42221 (= (containsKey!175 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402))) lt!69401) e!88254)))

(declare-fun b!135518 () Bool)

(declare-fun e!88255 () Bool)

(assert (=> b!135518 (= e!88254 e!88255)))

(declare-fun res!65074 () Bool)

(assert (=> b!135518 (=> (not res!65074) (not e!88255))))

(assert (=> b!135518 (= res!65074 (and (or (not ((_ is Cons!1731) (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402))))) (bvsle (_1!1314 (h!2336 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402))))) lt!69401)) ((_ is Cons!1731) (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402)))) (bvslt (_1!1314 (h!2336 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402))))) lt!69401)))))

(declare-fun b!135519 () Bool)

(assert (=> b!135519 (= e!88255 (containsKey!175 (t!6198 (toList!869 (+!170 lt!69400 (tuple2!2609 lt!69404 lt!69402)))) lt!69401))))

(assert (= (and d!42221 (not res!65073)) b!135518))

(assert (= (and b!135518 res!65074) b!135519))

(declare-fun m!161675 () Bool)

(assert (=> b!135519 m!161675))

(assert (=> d!40447 d!42221))

(declare-fun d!42223 () Bool)

(declare-fun res!65075 () Bool)

(declare-fun e!88256 () Bool)

(assert (=> d!42223 (=> res!65075 e!88256)))

(assert (=> d!42223 (= res!65075 (and ((_ is Cons!1731) (toList!869 lt!69229)) (= (_1!1314 (h!2336 (toList!869 lt!69229))) lt!69228)))))

(assert (=> d!42223 (= (containsKey!175 (toList!869 lt!69229) lt!69228) e!88256)))

(declare-fun b!135520 () Bool)

(declare-fun e!88257 () Bool)

(assert (=> b!135520 (= e!88256 e!88257)))

(declare-fun res!65076 () Bool)

(assert (=> b!135520 (=> (not res!65076) (not e!88257))))

(assert (=> b!135520 (= res!65076 (and (or (not ((_ is Cons!1731) (toList!869 lt!69229))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69229))) lt!69228)) ((_ is Cons!1731) (toList!869 lt!69229)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69229))) lt!69228)))))

(declare-fun b!135521 () Bool)

(assert (=> b!135521 (= e!88257 (containsKey!175 (t!6198 (toList!869 lt!69229)) lt!69228))))

(assert (= (and d!42223 (not res!65075)) b!135520))

(assert (= (and b!135520 res!65076) b!135521))

(declare-fun m!161677 () Bool)

(assert (=> b!135521 m!161677))

(assert (=> d!40631 d!42223))

(declare-fun d!42225 () Bool)

(declare-fun res!65077 () Bool)

(declare-fun e!88258 () Bool)

(assert (=> d!42225 (=> res!65077 e!88258)))

(assert (=> d!42225 (= res!65077 (and ((_ is Cons!1731) lt!69953) (= (_1!1314 (h!2336 lt!69953)) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!42225 (= (containsKey!175 lt!69953 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!88258)))

(declare-fun b!135522 () Bool)

(declare-fun e!88259 () Bool)

(assert (=> b!135522 (= e!88258 e!88259)))

(declare-fun res!65078 () Bool)

(assert (=> b!135522 (=> (not res!65078) (not e!88259))))

(assert (=> b!135522 (= res!65078 (and (or (not ((_ is Cons!1731) lt!69953)) (bvsle (_1!1314 (h!2336 lt!69953)) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) ((_ is Cons!1731) lt!69953) (bvslt (_1!1314 (h!2336 lt!69953)) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135523 () Bool)

(assert (=> b!135523 (= e!88259 (containsKey!175 (t!6198 lt!69953) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!42225 (not res!65077)) b!135522))

(assert (= (and b!135522 res!65078) b!135523))

(declare-fun m!161679 () Bool)

(assert (=> b!135523 m!161679))

(assert (=> b!133601 d!42225))

(declare-fun d!42227 () Bool)

(declare-fun lt!70864 () Bool)

(assert (=> d!42227 (= lt!70864 (select (content!132 (toList!869 lt!69936)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun e!88261 () Bool)

(assert (=> d!42227 (= lt!70864 e!88261)))

(declare-fun res!65079 () Bool)

(assert (=> d!42227 (=> (not res!65079) (not e!88261))))

(assert (=> d!42227 (= res!65079 ((_ is Cons!1731) (toList!869 lt!69936)))))

(assert (=> d!42227 (= (contains!898 (toList!869 lt!69936) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) lt!70864)))

(declare-fun b!135524 () Bool)

(declare-fun e!88260 () Bool)

(assert (=> b!135524 (= e!88261 e!88260)))

(declare-fun res!65080 () Bool)

(assert (=> b!135524 (=> res!65080 e!88260)))

(assert (=> b!135524 (= res!65080 (= (h!2336 (toList!869 lt!69936)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun b!135525 () Bool)

(assert (=> b!135525 (= e!88260 (contains!898 (t!6198 (toList!869 lt!69936)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(assert (= (and d!42227 res!65079) b!135524))

(assert (= (and b!135524 (not res!65080)) b!135525))

(declare-fun m!161681 () Bool)

(assert (=> d!42227 m!161681))

(declare-fun m!161683 () Bool)

(assert (=> d!42227 m!161683))

(declare-fun m!161685 () Bool)

(assert (=> b!135525 m!161685))

(assert (=> b!133569 d!42227))

(declare-fun lt!70865 () Bool)

(declare-fun d!42229 () Bool)

(assert (=> d!42229 (= lt!70865 (select (content!132 (toList!869 lt!69724)) (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun e!88263 () Bool)

(assert (=> d!42229 (= lt!70865 e!88263)))

(declare-fun res!65081 () Bool)

(assert (=> d!42229 (=> (not res!65081) (not e!88263))))

(assert (=> d!42229 (= res!65081 ((_ is Cons!1731) (toList!869 lt!69724)))))

(assert (=> d!42229 (= (contains!898 (toList!869 lt!69724) (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70865)))

(declare-fun b!135526 () Bool)

(declare-fun e!88262 () Bool)

(assert (=> b!135526 (= e!88263 e!88262)))

(declare-fun res!65082 () Bool)

(assert (=> b!135526 (=> res!65082 e!88262)))

(assert (=> b!135526 (= res!65082 (= (h!2336 (toList!869 lt!69724)) (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!135527 () Bool)

(assert (=> b!135527 (= e!88262 (contains!898 (t!6198 (toList!869 lt!69724)) (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (= (and d!42229 res!65081) b!135526))

(assert (= (and b!135526 (not res!65082)) b!135527))

(declare-fun m!161687 () Bool)

(assert (=> d!42229 m!161687))

(declare-fun m!161689 () Bool)

(assert (=> d!42229 m!161689))

(declare-fun m!161691 () Bool)

(assert (=> b!135527 m!161691))

(assert (=> b!133271 d!42229))

(declare-fun d!42231 () Bool)

(declare-fun res!65083 () Bool)

(declare-fun e!88264 () Bool)

(assert (=> d!42231 (=> res!65083 e!88264)))

(assert (=> d!42231 (= res!65083 (and ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (= (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))))))

(assert (=> d!42231 (= (containsKey!175 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))) e!88264)))

(declare-fun b!135528 () Bool)

(declare-fun e!88265 () Bool)

(assert (=> b!135528 (= e!88264 e!88265)))

(declare-fun res!65084 () Bool)

(assert (=> b!135528 (=> (not res!65084) (not e!88265))))

(assert (=> b!135528 (= res!65084 (and (or (not ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (bvsle (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))) ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (bvslt (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307)))))))

(declare-fun b!135529 () Bool)

(assert (=> b!135529 (= e!88265 (containsKey!175 (t!6198 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) lt!69317 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!69307))))))

(assert (= (and d!42231 (not res!65083)) b!135528))

(assert (= (and b!135528 res!65084) b!135529))

(assert (=> b!135529 m!156425))

(declare-fun m!161693 () Bool)

(assert (=> b!135529 m!161693))

(assert (=> d!40467 d!42231))

(declare-fun d!42233 () Bool)

(declare-fun e!88266 () Bool)

(assert (=> d!42233 e!88266))

(declare-fun res!65085 () Bool)

(assert (=> d!42233 (=> res!65085 e!88266)))

(declare-fun lt!70866 () Bool)

(assert (=> d!42233 (= res!65085 (not lt!70866))))

(declare-fun lt!70868 () Bool)

(assert (=> d!42233 (= lt!70866 lt!70868)))

(declare-fun lt!70867 () Unit!4150)

(declare-fun e!88267 () Unit!4150)

(assert (=> d!42233 (= lt!70867 e!88267)))

(declare-fun c!25341 () Bool)

(assert (=> d!42233 (= c!25341 lt!70868)))

(assert (=> d!42233 (= lt!70868 (containsKey!175 (toList!869 lt!69843) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42233 (= (contains!896 lt!69843 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70866)))

(declare-fun b!135530 () Bool)

(declare-fun lt!70869 () Unit!4150)

(assert (=> b!135530 (= e!88267 lt!70869)))

(assert (=> b!135530 (= lt!70869 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69843) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135530 (isDefined!125 (getValueByKey!171 (toList!869 lt!69843) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135531 () Bool)

(declare-fun Unit!4268 () Unit!4150)

(assert (=> b!135531 (= e!88267 Unit!4268)))

(declare-fun b!135532 () Bool)

(assert (=> b!135532 (= e!88266 (isDefined!125 (getValueByKey!171 (toList!869 lt!69843) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42233 c!25341) b!135530))

(assert (= (and d!42233 (not c!25341)) b!135531))

(assert (= (and d!42233 (not res!65085)) b!135532))

(declare-fun m!161695 () Bool)

(assert (=> d!42233 m!161695))

(declare-fun m!161697 () Bool)

(assert (=> b!135530 m!161697))

(declare-fun m!161699 () Bool)

(assert (=> b!135530 m!161699))

(assert (=> b!135530 m!161699))

(declare-fun m!161701 () Bool)

(assert (=> b!135530 m!161701))

(assert (=> b!135532 m!161699))

(assert (=> b!135532 m!161699))

(assert (=> b!135532 m!161701))

(assert (=> bm!14731 d!42233))

(assert (=> b!133639 d!41405))

(assert (=> b!133639 d!41407))

(declare-fun d!42235 () Bool)

(assert (=> d!42235 (isDefined!125 (getValueByKey!171 (toList!869 lt!69407) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun lt!70870 () Unit!4150)

(assert (=> d!42235 (= lt!70870 (choose!831 (toList!869 lt!69407) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun e!88268 () Bool)

(assert (=> d!42235 e!88268))

(declare-fun res!65086 () Bool)

(assert (=> d!42235 (=> (not res!65086) (not e!88268))))

(assert (=> d!42235 (= res!65086 (isStrictlySorted!317 (toList!869 lt!69407)))))

(assert (=> d!42235 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69407) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!70870)))

(declare-fun b!135533 () Bool)

(assert (=> b!135533 (= e!88268 (containsKey!175 (toList!869 lt!69407) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!42235 res!65086) b!135533))

(assert (=> d!42235 m!156639))

(assert (=> d!42235 m!156639))

(assert (=> d!42235 m!158253))

(declare-fun m!161703 () Bool)

(assert (=> d!42235 m!161703))

(declare-fun m!161705 () Bool)

(assert (=> d!42235 m!161705))

(assert (=> b!135533 m!158249))

(assert (=> b!133730 d!42235))

(declare-fun d!42237 () Bool)

(assert (=> d!42237 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69407) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69407) (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))))

(declare-fun bs!5683 () Bool)

(assert (= bs!5683 d!42237))

(assert (=> bs!5683 m!156639))

(declare-fun m!161707 () Bool)

(assert (=> bs!5683 m!161707))

(assert (=> b!133730 d!42237))

(assert (=> b!133730 d!40841))

(declare-fun d!42239 () Bool)

(declare-fun e!88269 () Bool)

(assert (=> d!42239 e!88269))

(declare-fun res!65087 () Bool)

(assert (=> d!42239 (=> res!65087 e!88269)))

(declare-fun lt!70871 () Bool)

(assert (=> d!42239 (= res!65087 (not lt!70871))))

(declare-fun lt!70873 () Bool)

(assert (=> d!42239 (= lt!70871 lt!70873)))

(declare-fun lt!70872 () Unit!4150)

(declare-fun e!88270 () Unit!4150)

(assert (=> d!42239 (= lt!70872 e!88270)))

(declare-fun c!25342 () Bool)

(assert (=> d!42239 (= c!25342 lt!70873)))

(assert (=> d!42239 (= lt!70873 (containsKey!175 (toList!869 lt!69760) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!42239 (= (contains!896 lt!69760 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70871)))

(declare-fun b!135534 () Bool)

(declare-fun lt!70874 () Unit!4150)

(assert (=> b!135534 (= e!88270 lt!70874)))

(assert (=> b!135534 (= lt!70874 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69760) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135534 (isDefined!125 (getValueByKey!171 (toList!869 lt!69760) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135535 () Bool)

(declare-fun Unit!4269 () Unit!4150)

(assert (=> b!135535 (= e!88270 Unit!4269)))

(declare-fun b!135536 () Bool)

(assert (=> b!135536 (= e!88269 (isDefined!125 (getValueByKey!171 (toList!869 lt!69760) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!42239 c!25342) b!135534))

(assert (= (and d!42239 (not c!25342)) b!135535))

(assert (= (and d!42239 (not res!65087)) b!135536))

(assert (=> d!42239 m!156533))

(declare-fun m!161709 () Bool)

(assert (=> d!42239 m!161709))

(assert (=> b!135534 m!156533))

(declare-fun m!161711 () Bool)

(assert (=> b!135534 m!161711))

(assert (=> b!135534 m!156533))

(assert (=> b!135534 m!160089))

(assert (=> b!135534 m!160089))

(declare-fun m!161713 () Bool)

(assert (=> b!135534 m!161713))

(assert (=> b!135536 m!156533))

(assert (=> b!135536 m!160089))

(assert (=> b!135536 m!160089))

(assert (=> b!135536 m!161713))

(assert (=> b!133312 d!42239))

(assert (=> b!133988 d!41395))

(assert (=> b!133988 d!41397))

(declare-fun d!42241 () Bool)

(declare-fun e!88271 () Bool)

(assert (=> d!42241 e!88271))

(declare-fun res!65088 () Bool)

(assert (=> d!42241 (=> res!65088 e!88271)))

(declare-fun lt!70875 () Bool)

(assert (=> d!42241 (= res!65088 (not lt!70875))))

(declare-fun lt!70877 () Bool)

(assert (=> d!42241 (= lt!70875 lt!70877)))

(declare-fun lt!70876 () Unit!4150)

(declare-fun e!88272 () Unit!4150)

(assert (=> d!42241 (= lt!70876 e!88272)))

(declare-fun c!25343 () Bool)

(assert (=> d!42241 (= c!25343 lt!70877)))

(assert (=> d!42241 (= lt!70877 (containsKey!175 (toList!869 lt!69804) (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))))

(assert (=> d!42241 (= (contains!896 lt!69804 (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))) lt!70875)))

(declare-fun b!135537 () Bool)

(declare-fun lt!70878 () Unit!4150)

(assert (=> b!135537 (= e!88272 lt!70878)))

(assert (=> b!135537 (= lt!70878 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69804) (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))))

(assert (=> b!135537 (isDefined!125 (getValueByKey!171 (toList!869 lt!69804) (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))))

(declare-fun b!135538 () Bool)

(declare-fun Unit!4270 () Unit!4150)

(assert (=> b!135538 (= e!88272 Unit!4270)))

(declare-fun b!135539 () Bool)

(assert (=> b!135539 (= e!88271 (isDefined!125 (getValueByKey!171 (toList!869 lt!69804) (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))))))))

(assert (= (and d!42241 c!25343) b!135537))

(assert (= (and d!42241 (not c!25343)) b!135538))

(assert (= (and d!42241 (not res!65088)) b!135539))

(declare-fun m!161715 () Bool)

(assert (=> d!42241 m!161715))

(declare-fun m!161717 () Bool)

(assert (=> b!135537 m!161717))

(assert (=> b!135537 m!157503))

(assert (=> b!135537 m!157503))

(declare-fun m!161719 () Bool)

(assert (=> b!135537 m!161719))

(assert (=> b!135539 m!157503))

(assert (=> b!135539 m!157503))

(assert (=> b!135539 m!161719))

(assert (=> d!40523 d!42241))

(declare-fun b!135540 () Bool)

(declare-fun e!88273 () Option!177)

(assert (=> b!135540 (= e!88273 (Some!176 (_2!1314 (h!2336 lt!69806))))))

(declare-fun b!135543 () Bool)

(declare-fun e!88274 () Option!177)

(assert (=> b!135543 (= e!88274 None!175)))

(declare-fun b!135542 () Bool)

(assert (=> b!135542 (= e!88274 (getValueByKey!171 (t!6198 lt!69806) (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))))

(declare-fun b!135541 () Bool)

(assert (=> b!135541 (= e!88273 e!88274)))

(declare-fun c!25345 () Bool)

(assert (=> b!135541 (= c!25345 (and ((_ is Cons!1731) lt!69806) (not (= (_1!1314 (h!2336 lt!69806)) (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))))))

(declare-fun c!25344 () Bool)

(declare-fun d!42243 () Bool)

(assert (=> d!42243 (= c!25344 (and ((_ is Cons!1731) lt!69806) (= (_1!1314 (h!2336 lt!69806)) (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))))))))

(assert (=> d!42243 (= (getValueByKey!171 lt!69806 (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))) e!88273)))

(assert (= (and d!42243 c!25344) b!135540))

(assert (= (and d!42243 (not c!25344)) b!135541))

(assert (= (and b!135541 c!25345) b!135542))

(assert (= (and b!135541 (not c!25345)) b!135543))

(declare-fun m!161721 () Bool)

(assert (=> b!135542 m!161721))

(assert (=> d!40523 d!42243))

(declare-fun d!42245 () Bool)

(assert (=> d!42245 (= (getValueByKey!171 lt!69806 (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))))

(declare-fun lt!70879 () Unit!4150)

(assert (=> d!42245 (= lt!70879 (choose!834 lt!69806 (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))))

(declare-fun e!88275 () Bool)

(assert (=> d!42245 e!88275))

(declare-fun res!65089 () Bool)

(assert (=> d!42245 (=> (not res!65089) (not e!88275))))

(assert (=> d!42245 (= res!65089 (isStrictlySorted!317 lt!69806))))

(assert (=> d!42245 (= (lemmaContainsTupThenGetReturnValue!88 lt!69806 (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))) lt!70879)))

(declare-fun b!135544 () Bool)

(declare-fun res!65090 () Bool)

(assert (=> b!135544 (=> (not res!65090) (not e!88275))))

(assert (=> b!135544 (= res!65090 (containsKey!175 lt!69806 (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))))

(declare-fun b!135545 () Bool)

(assert (=> b!135545 (= e!88275 (contains!898 lt!69806 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))))))))

(assert (= (and d!42245 res!65089) b!135544))

(assert (= (and b!135544 res!65090) b!135545))

(assert (=> d!42245 m!157497))

(declare-fun m!161723 () Bool)

(assert (=> d!42245 m!161723))

(declare-fun m!161725 () Bool)

(assert (=> d!42245 m!161725))

(declare-fun m!161727 () Bool)

(assert (=> b!135544 m!161727))

(declare-fun m!161729 () Bool)

(assert (=> b!135545 m!161729))

(assert (=> d!40523 d!42245))

(declare-fun bm!14896 () Bool)

(declare-fun call!14899 () List!1735)

(declare-fun call!14900 () List!1735)

(assert (=> bm!14896 (= call!14899 call!14900)))

(declare-fun b!135546 () Bool)

(declare-fun e!88278 () Bool)

(declare-fun lt!70880 () List!1735)

(assert (=> b!135546 (= e!88278 (contains!898 lt!70880 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))))))))

(declare-fun b!135547 () Bool)

(declare-fun e!88280 () List!1735)

(assert (=> b!135547 (= e!88280 call!14900)))

(declare-fun b!135548 () Bool)

(declare-fun res!65091 () Bool)

(assert (=> b!135548 (=> (not res!65091) (not e!88278))))

(assert (=> b!135548 (= res!65091 (containsKey!175 lt!70880 (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))))

(declare-fun e!88276 () List!1735)

(declare-fun b!135549 () Bool)

(assert (=> b!135549 (= e!88276 (insertStrictlySorted!90 (t!6198 (toList!869 lt!69425)) (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))))

(declare-fun b!135550 () Bool)

(declare-fun e!88277 () List!1735)

(assert (=> b!135550 (= e!88277 call!14899)))

(declare-fun bm!14897 () Bool)

(declare-fun call!14901 () List!1735)

(assert (=> bm!14897 (= call!14900 call!14901)))

(declare-fun c!25348 () Bool)

(declare-fun b!135552 () Bool)

(declare-fun c!25346 () Bool)

(assert (=> b!135552 (= e!88276 (ite c!25348 (t!6198 (toList!869 lt!69425)) (ite c!25346 (Cons!1731 (h!2336 (toList!869 lt!69425)) (t!6198 (toList!869 lt!69425))) Nil!1732)))))

(declare-fun b!135553 () Bool)

(declare-fun e!88279 () List!1735)

(assert (=> b!135553 (= e!88279 call!14901)))

(declare-fun b!135554 () Bool)

(assert (=> b!135554 (= c!25346 (and ((_ is Cons!1731) (toList!869 lt!69425)) (bvsgt (_1!1314 (h!2336 (toList!869 lt!69425))) (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))))))))

(assert (=> b!135554 (= e!88280 e!88277)))

(declare-fun d!42247 () Bool)

(assert (=> d!42247 e!88278))

(declare-fun res!65092 () Bool)

(assert (=> d!42247 (=> (not res!65092) (not e!88278))))

(assert (=> d!42247 (= res!65092 (isStrictlySorted!317 lt!70880))))

(assert (=> d!42247 (= lt!70880 e!88279)))

(declare-fun c!25347 () Bool)

(assert (=> d!42247 (= c!25347 (and ((_ is Cons!1731) (toList!869 lt!69425)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69425))) (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))))))))

(assert (=> d!42247 (isStrictlySorted!317 (toList!869 lt!69425))))

(assert (=> d!42247 (= (insertStrictlySorted!90 (toList!869 lt!69425) (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))) lt!70880)))

(declare-fun b!135551 () Bool)

(assert (=> b!135551 (= e!88279 e!88280)))

(assert (=> b!135551 (= c!25348 (and ((_ is Cons!1731) (toList!869 lt!69425)) (= (_1!1314 (h!2336 (toList!869 lt!69425))) (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))))))))

(declare-fun b!135555 () Bool)

(assert (=> b!135555 (= e!88277 call!14899)))

(declare-fun bm!14898 () Bool)

(assert (=> bm!14898 (= call!14901 ($colon$colon!91 e!88276 (ite c!25347 (h!2336 (toList!869 lt!69425)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69427 (minValue!2720 newMap!16)))))))))

(declare-fun c!25349 () Bool)

(assert (=> bm!14898 (= c!25349 c!25347)))

(assert (= (and d!42247 c!25347) b!135553))

(assert (= (and d!42247 (not c!25347)) b!135551))

(assert (= (and b!135551 c!25348) b!135547))

(assert (= (and b!135551 (not c!25348)) b!135554))

(assert (= (and b!135554 c!25346) b!135555))

(assert (= (and b!135554 (not c!25346)) b!135550))

(assert (= (or b!135555 b!135550) bm!14896))

(assert (= (or b!135547 bm!14896) bm!14897))

(assert (= (or b!135553 bm!14897) bm!14898))

(assert (= (and bm!14898 c!25349) b!135549))

(assert (= (and bm!14898 (not c!25349)) b!135552))

(assert (= (and d!42247 res!65092) b!135548))

(assert (= (and b!135548 res!65091) b!135546))

(declare-fun m!161731 () Bool)

(assert (=> b!135548 m!161731))

(declare-fun m!161733 () Bool)

(assert (=> b!135546 m!161733))

(declare-fun m!161735 () Bool)

(assert (=> d!42247 m!161735))

(declare-fun m!161737 () Bool)

(assert (=> d!42247 m!161737))

(declare-fun m!161739 () Bool)

(assert (=> bm!14898 m!161739))

(declare-fun m!161741 () Bool)

(assert (=> b!135549 m!161741))

(assert (=> d!40523 d!42247))

(assert (=> d!40573 d!40579))

(assert (=> d!40573 d!40589))

(declare-fun d!42249 () Bool)

(assert (=> d!42249 (contains!896 (+!170 lt!69484 (tuple2!2609 lt!69487 (zeroValue!2720 newMap!16))) lt!69494)))

(assert (=> d!42249 true))

(declare-fun _$35!382 () Unit!4150)

(assert (=> d!42249 (= (choose!829 lt!69484 lt!69487 (zeroValue!2720 newMap!16) lt!69494) _$35!382)))

(declare-fun bs!5684 () Bool)

(assert (= bs!5684 d!42249))

(assert (=> bs!5684 m!156865))

(assert (=> bs!5684 m!156865))

(assert (=> bs!5684 m!156881))

(assert (=> d!40573 d!42249))

(declare-fun d!42251 () Bool)

(declare-fun e!88281 () Bool)

(assert (=> d!42251 e!88281))

(declare-fun res!65093 () Bool)

(assert (=> d!42251 (=> res!65093 e!88281)))

(declare-fun lt!70881 () Bool)

(assert (=> d!42251 (= res!65093 (not lt!70881))))

(declare-fun lt!70883 () Bool)

(assert (=> d!42251 (= lt!70881 lt!70883)))

(declare-fun lt!70882 () Unit!4150)

(declare-fun e!88282 () Unit!4150)

(assert (=> d!42251 (= lt!70882 e!88282)))

(declare-fun c!25350 () Bool)

(assert (=> d!42251 (= c!25350 lt!70883)))

(assert (=> d!42251 (= lt!70883 (containsKey!175 (toList!869 lt!69484) lt!69494))))

(assert (=> d!42251 (= (contains!896 lt!69484 lt!69494) lt!70881)))

(declare-fun b!135556 () Bool)

(declare-fun lt!70884 () Unit!4150)

(assert (=> b!135556 (= e!88282 lt!70884)))

(assert (=> b!135556 (= lt!70884 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69484) lt!69494))))

(assert (=> b!135556 (isDefined!125 (getValueByKey!171 (toList!869 lt!69484) lt!69494))))

(declare-fun b!135557 () Bool)

(declare-fun Unit!4271 () Unit!4150)

(assert (=> b!135557 (= e!88282 Unit!4271)))

(declare-fun b!135558 () Bool)

(assert (=> b!135558 (= e!88281 (isDefined!125 (getValueByKey!171 (toList!869 lt!69484) lt!69494)))))

(assert (= (and d!42251 c!25350) b!135556))

(assert (= (and d!42251 (not c!25350)) b!135557))

(assert (= (and d!42251 (not res!65093)) b!135558))

(declare-fun m!161743 () Bool)

(assert (=> d!42251 m!161743))

(declare-fun m!161745 () Bool)

(assert (=> b!135556 m!161745))

(declare-fun m!161747 () Bool)

(assert (=> b!135556 m!161747))

(assert (=> b!135556 m!161747))

(declare-fun m!161749 () Bool)

(assert (=> b!135556 m!161749))

(assert (=> b!135558 m!161747))

(assert (=> b!135558 m!161747))

(assert (=> b!135558 m!161749))

(assert (=> d!40573 d!42251))

(declare-fun d!42253 () Bool)

(declare-fun e!88283 () Bool)

(assert (=> d!42253 e!88283))

(declare-fun res!65094 () Bool)

(assert (=> d!42253 (=> res!65094 e!88283)))

(declare-fun lt!70885 () Bool)

(assert (=> d!42253 (= res!65094 (not lt!70885))))

(declare-fun lt!70887 () Bool)

(assert (=> d!42253 (= lt!70885 lt!70887)))

(declare-fun lt!70886 () Unit!4150)

(declare-fun e!88284 () Unit!4150)

(assert (=> d!42253 (= lt!70886 e!88284)))

(declare-fun c!25351 () Bool)

(assert (=> d!42253 (= c!25351 lt!70887)))

(assert (=> d!42253 (= lt!70887 (containsKey!175 (toList!869 lt!70114) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42253 (= (contains!896 lt!70114 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70885)))

(declare-fun b!135559 () Bool)

(declare-fun lt!70888 () Unit!4150)

(assert (=> b!135559 (= e!88284 lt!70888)))

(assert (=> b!135559 (= lt!70888 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!70114) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135559 (isDefined!125 (getValueByKey!171 (toList!869 lt!70114) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135560 () Bool)

(declare-fun Unit!4272 () Unit!4150)

(assert (=> b!135560 (= e!88284 Unit!4272)))

(declare-fun b!135561 () Bool)

(assert (=> b!135561 (= e!88283 (isDefined!125 (getValueByKey!171 (toList!869 lt!70114) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42253 c!25351) b!135559))

(assert (= (and d!42253 (not c!25351)) b!135560))

(assert (= (and d!42253 (not res!65094)) b!135561))

(declare-fun m!161751 () Bool)

(assert (=> d!42253 m!161751))

(declare-fun m!161753 () Bool)

(assert (=> b!135559 m!161753))

(declare-fun m!161755 () Bool)

(assert (=> b!135559 m!161755))

(assert (=> b!135559 m!161755))

(declare-fun m!161757 () Bool)

(assert (=> b!135559 m!161757))

(assert (=> b!135561 m!161755))

(assert (=> b!135561 m!161755))

(assert (=> b!135561 m!161757))

(assert (=> bm!14781 d!42253))

(assert (=> b!133870 d!41167))

(declare-fun d!42255 () Bool)

(declare-fun res!65095 () Bool)

(declare-fun e!88285 () Bool)

(assert (=> d!42255 (=> res!65095 e!88285)))

(assert (=> d!42255 (= res!65095 (or ((_ is Nil!1732) lt!69926) ((_ is Nil!1732) (t!6198 lt!69926))))))

(assert (=> d!42255 (= (isStrictlySorted!317 lt!69926) e!88285)))

(declare-fun b!135562 () Bool)

(declare-fun e!88286 () Bool)

(assert (=> b!135562 (= e!88285 e!88286)))

(declare-fun res!65096 () Bool)

(assert (=> b!135562 (=> (not res!65096) (not e!88286))))

(assert (=> b!135562 (= res!65096 (bvslt (_1!1314 (h!2336 lt!69926)) (_1!1314 (h!2336 (t!6198 lt!69926)))))))

(declare-fun b!135563 () Bool)

(assert (=> b!135563 (= e!88286 (isStrictlySorted!317 (t!6198 lt!69926)))))

(assert (= (and d!42255 (not res!65095)) b!135562))

(assert (= (and b!135562 res!65096) b!135563))

(declare-fun m!161759 () Bool)

(assert (=> b!135563 m!161759))

(assert (=> d!40623 d!42255))

(declare-fun d!42257 () Bool)

(declare-fun res!65097 () Bool)

(declare-fun e!88287 () Bool)

(assert (=> d!42257 (=> res!65097 e!88287)))

(assert (=> d!42257 (= res!65097 (or ((_ is Nil!1732) (toList!869 lt!69230)) ((_ is Nil!1732) (t!6198 (toList!869 lt!69230)))))))

(assert (=> d!42257 (= (isStrictlySorted!317 (toList!869 lt!69230)) e!88287)))

(declare-fun b!135564 () Bool)

(declare-fun e!88288 () Bool)

(assert (=> b!135564 (= e!88287 e!88288)))

(declare-fun res!65098 () Bool)

(assert (=> b!135564 (=> (not res!65098) (not e!88288))))

(assert (=> b!135564 (= res!65098 (bvslt (_1!1314 (h!2336 (toList!869 lt!69230))) (_1!1314 (h!2336 (t!6198 (toList!869 lt!69230))))))))

(declare-fun b!135565 () Bool)

(assert (=> b!135565 (= e!88288 (isStrictlySorted!317 (t!6198 (toList!869 lt!69230))))))

(assert (= (and d!42257 (not res!65097)) b!135564))

(assert (= (and b!135564 res!65098) b!135565))

(assert (=> b!135565 m!161363))

(assert (=> d!40623 d!42257))

(declare-fun b!135566 () Bool)

(declare-fun e!88289 () Option!177)

(assert (=> b!135566 (= e!88289 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69907)))))))

(declare-fun b!135569 () Bool)

(declare-fun e!88290 () Option!177)

(assert (=> b!135569 (= e!88290 None!175)))

(declare-fun b!135568 () Bool)

(assert (=> b!135568 (= e!88290 (getValueByKey!171 (t!6198 (toList!869 lt!69907)) (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!135567 () Bool)

(assert (=> b!135567 (= e!88289 e!88290)))

(declare-fun c!25353 () Bool)

(assert (=> b!135567 (= c!25353 (and ((_ is Cons!1731) (toList!869 lt!69907)) (not (= (_1!1314 (h!2336 (toList!869 lt!69907))) (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun c!25352 () Bool)

(declare-fun d!42259 () Bool)

(assert (=> d!42259 (= c!25352 (and ((_ is Cons!1731) (toList!869 lt!69907)) (= (_1!1314 (h!2336 (toList!869 lt!69907))) (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!42259 (= (getValueByKey!171 (toList!869 lt!69907) (_1!1314 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) e!88289)))

(assert (= (and d!42259 c!25352) b!135566))

(assert (= (and d!42259 (not c!25352)) b!135567))

(assert (= (and b!135567 c!25353) b!135568))

(assert (= (and b!135567 (not c!25353)) b!135569))

(declare-fun m!161761 () Bool)

(assert (=> b!135568 m!161761))

(assert (=> b!133500 d!42259))

(declare-fun d!42261 () Bool)

(assert (=> d!42261 (= (isEmpty!415 (getValueByKey!171 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69227)) (not ((_ is Some!176) (getValueByKey!171 (toList!869 (+!170 lt!69217 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!69227))))))

(assert (=> d!40497 d!42261))

(declare-fun d!42263 () Bool)

(assert (=> d!42263 (= (isEmpty!415 (getValueByKey!171 (toList!869 e!86545) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))) (not ((_ is Some!176) (getValueByKey!171 (toList!869 e!86545) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))))

(assert (=> d!40463 d!42263))

(assert (=> d!40599 d!40601))

(declare-fun d!42265 () Bool)

(assert (=> d!42265 (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69620 #b00000000000000000000000000000000)))

(assert (=> d!42265 true))

(declare-fun _$60!365 () Unit!4150)

(assert (=> d!42265 (= (choose!13 (_keys!4614 newMap!16) lt!69620 #b00000000000000000000000000000000) _$60!365)))

(declare-fun bs!5685 () Bool)

(assert (= bs!5685 d!42265))

(assert (=> bs!5685 m!157017))

(assert (=> d!40599 d!42265))

(declare-fun d!42267 () Bool)

(assert (=> d!42267 (= (apply!116 lt!70136 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!70136) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5686 () Bool)

(assert (= bs!5686 d!42267))

(assert (=> bs!5686 m!159993))

(assert (=> bs!5686 m!159993))

(declare-fun m!161763 () Bool)

(assert (=> bs!5686 m!161763))

(assert (=> b!133951 d!42267))

(declare-fun d!42269 () Bool)

(assert (=> d!42269 (= ($colon$colon!91 e!87063 (ite c!24780 (h!2336 (toList!869 call!14636)) (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) (Cons!1731 (ite c!24780 (h!2336 (toList!869 call!14636)) (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!87063))))

(assert (=> bm!14755 d!42269))

(declare-fun d!42271 () Bool)

(assert (=> d!42271 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69516))))

(declare-fun lt!70889 () Unit!4150)

(assert (=> d!42271 (= lt!70889 (choose!831 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69516))))

(declare-fun e!88291 () Bool)

(assert (=> d!42271 e!88291))

(declare-fun res!65099 () Bool)

(assert (=> d!42271 (=> (not res!65099) (not e!88291))))

(assert (=> d!42271 (= res!65099 (isStrictlySorted!317 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (=> d!42271 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69516) lt!70889)))

(declare-fun b!135570 () Bool)

(assert (=> b!135570 (= e!88291 (containsKey!175 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69516))))

(assert (= (and d!42271 res!65099) b!135570))

(assert (=> d!42271 m!158299))

(assert (=> d!42271 m!158299))

(assert (=> d!42271 m!158301))

(declare-fun m!161765 () Bool)

(assert (=> d!42271 m!161765))

(declare-fun m!161767 () Bool)

(assert (=> d!42271 m!161767))

(assert (=> b!135570 m!158295))

(assert (=> b!133754 d!42271))

(declare-fun d!42273 () Bool)

(assert (=> d!42273 (= (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69516)) (not (isEmpty!415 (getValueByKey!171 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69516))))))

(declare-fun bs!5687 () Bool)

(assert (= bs!5687 d!42273))

(assert (=> bs!5687 m!158299))

(declare-fun m!161769 () Bool)

(assert (=> bs!5687 m!161769))

(assert (=> b!133754 d!42273))

(declare-fun e!88292 () Option!177)

(declare-fun b!135571 () Bool)

(assert (=> b!135571 (= e!88292 (Some!176 (_2!1314 (h!2336 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))))

(declare-fun b!135574 () Bool)

(declare-fun e!88293 () Option!177)

(assert (=> b!135574 (= e!88293 None!175)))

(declare-fun b!135573 () Bool)

(assert (=> b!135573 (= e!88293 (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))) lt!69516))))

(declare-fun b!135572 () Bool)

(assert (=> b!135572 (= e!88292 e!88293)))

(declare-fun c!25355 () Bool)

(assert (=> b!135572 (= c!25355 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))) (not (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))) lt!69516))))))

(declare-fun d!42275 () Bool)

(declare-fun c!25354 () Bool)

(assert (=> d!42275 (= c!25354 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))) lt!69516)))))

(assert (=> d!42275 (= (getValueByKey!171 (toList!869 (+!170 lt!69506 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69516) e!88292)))

(assert (= (and d!42275 c!25354) b!135571))

(assert (= (and d!42275 (not c!25354)) b!135572))

(assert (= (and b!135572 c!25355) b!135573))

(assert (= (and b!135572 (not c!25355)) b!135574))

(declare-fun m!161771 () Bool)

(assert (=> b!135573 m!161771))

(assert (=> b!133754 d!42275))

(assert (=> b!133213 d!41295))

(assert (=> b!133213 d!41297))

(assert (=> b!133729 d!41455))

(assert (=> b!133729 d!41457))

(declare-fun d!42277 () Bool)

(declare-fun e!88294 () Bool)

(assert (=> d!42277 e!88294))

(declare-fun res!65100 () Bool)

(assert (=> d!42277 (=> res!65100 e!88294)))

(declare-fun lt!70890 () Bool)

(assert (=> d!42277 (= res!65100 (not lt!70890))))

(declare-fun lt!70892 () Bool)

(assert (=> d!42277 (= lt!70890 lt!70892)))

(declare-fun lt!70891 () Unit!4150)

(declare-fun e!88295 () Unit!4150)

(assert (=> d!42277 (= lt!70891 e!88295)))

(declare-fun c!25356 () Bool)

(assert (=> d!42277 (= c!25356 lt!70892)))

(assert (=> d!42277 (= lt!70892 (containsKey!175 (toList!869 lt!69869) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42277 (= (contains!896 lt!69869 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70890)))

(declare-fun b!135575 () Bool)

(declare-fun lt!70893 () Unit!4150)

(assert (=> b!135575 (= e!88295 lt!70893)))

(assert (=> b!135575 (= lt!70893 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69869) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135575 (isDefined!125 (getValueByKey!171 (toList!869 lt!69869) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135576 () Bool)

(declare-fun Unit!4273 () Unit!4150)

(assert (=> b!135576 (= e!88295 Unit!4273)))

(declare-fun b!135577 () Bool)

(assert (=> b!135577 (= e!88294 (isDefined!125 (getValueByKey!171 (toList!869 lt!69869) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42277 c!25356) b!135575))

(assert (= (and d!42277 (not c!25356)) b!135576))

(assert (= (and d!42277 (not res!65100)) b!135577))

(declare-fun m!161773 () Bool)

(assert (=> d!42277 m!161773))

(declare-fun m!161775 () Bool)

(assert (=> b!135575 m!161775))

(declare-fun m!161777 () Bool)

(assert (=> b!135575 m!161777))

(assert (=> b!135575 m!161777))

(declare-fun m!161779 () Bool)

(assert (=> b!135575 m!161779))

(assert (=> b!135577 m!161777))

(assert (=> b!135577 m!161777))

(assert (=> b!135577 m!161779))

(assert (=> bm!14738 d!42277))

(declare-fun b!135578 () Bool)

(declare-fun e!88296 () Option!177)

(assert (=> b!135578 (= e!88296 (Some!176 (_2!1314 (h!2336 (t!6198 lt!69444)))))))

(declare-fun b!135581 () Bool)

(declare-fun e!88297 () Option!177)

(assert (=> b!135581 (= e!88297 None!175)))

(declare-fun b!135580 () Bool)

(assert (=> b!135580 (= e!88297 (getValueByKey!171 (t!6198 (t!6198 lt!69444)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!135579 () Bool)

(assert (=> b!135579 (= e!88296 e!88297)))

(declare-fun c!25358 () Bool)

(assert (=> b!135579 (= c!25358 (and ((_ is Cons!1731) (t!6198 lt!69444)) (not (= (_1!1314 (h!2336 (t!6198 lt!69444))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun d!42279 () Bool)

(declare-fun c!25357 () Bool)

(assert (=> d!42279 (= c!25357 (and ((_ is Cons!1731) (t!6198 lt!69444)) (= (_1!1314 (h!2336 (t!6198 lt!69444))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!42279 (= (getValueByKey!171 (t!6198 lt!69444) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!88296)))

(assert (= (and d!42279 c!25357) b!135578))

(assert (= (and d!42279 (not c!25357)) b!135579))

(assert (= (and b!135579 c!25358) b!135580))

(assert (= (and b!135579 (not c!25358)) b!135581))

(declare-fun m!161781 () Bool)

(assert (=> b!135580 m!161781))

(assert (=> b!133702 d!42279))

(declare-fun d!42281 () Bool)

(declare-fun e!88298 () Bool)

(assert (=> d!42281 e!88298))

(declare-fun res!65102 () Bool)

(assert (=> d!42281 (=> (not res!65102) (not e!88298))))

(declare-fun lt!70895 () ListLongMap!1707)

(assert (=> d!42281 (= res!65102 (contains!896 lt!70895 (_1!1314 (ite (or c!24674 c!24677) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!70897 () List!1735)

(assert (=> d!42281 (= lt!70895 (ListLongMap!1708 lt!70897))))

(declare-fun lt!70896 () Unit!4150)

(declare-fun lt!70894 () Unit!4150)

(assert (=> d!42281 (= lt!70896 lt!70894)))

(assert (=> d!42281 (= (getValueByKey!171 lt!70897 (_1!1314 (ite (or c!24674 c!24677) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!176 (_2!1314 (ite (or c!24674 c!24677) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42281 (= lt!70894 (lemmaContainsTupThenGetReturnValue!88 lt!70897 (_1!1314 (ite (or c!24674 c!24677) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite (or c!24674 c!24677) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42281 (= lt!70897 (insertStrictlySorted!90 (toList!869 (ite c!24674 call!14719 (ite c!24677 call!14715 call!14720))) (_1!1314 (ite (or c!24674 c!24677) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1314 (ite (or c!24674 c!24677) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42281 (= (+!170 (ite c!24674 call!14719 (ite c!24677 call!14715 call!14720)) (ite (or c!24674 c!24677) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70895)))

(declare-fun b!135582 () Bool)

(declare-fun res!65101 () Bool)

(assert (=> b!135582 (=> (not res!65101) (not e!88298))))

(assert (=> b!135582 (= res!65101 (= (getValueByKey!171 (toList!869 lt!70895) (_1!1314 (ite (or c!24674 c!24677) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!176 (_2!1314 (ite (or c!24674 c!24677) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135583 () Bool)

(assert (=> b!135583 (= e!88298 (contains!898 (toList!869 lt!70895) (ite (or c!24674 c!24677) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42281 res!65102) b!135582))

(assert (= (and b!135582 res!65101) b!135583))

(declare-fun m!161783 () Bool)

(assert (=> d!42281 m!161783))

(declare-fun m!161785 () Bool)

(assert (=> d!42281 m!161785))

(declare-fun m!161787 () Bool)

(assert (=> d!42281 m!161787))

(declare-fun m!161789 () Bool)

(assert (=> d!42281 m!161789))

(declare-fun m!161791 () Bool)

(assert (=> b!135582 m!161791))

(declare-fun m!161793 () Bool)

(assert (=> b!135583 m!161793))

(assert (=> bm!14714 d!42281))

(declare-fun d!42283 () Bool)

(declare-fun e!88299 () Bool)

(assert (=> d!42283 e!88299))

(declare-fun res!65104 () Bool)

(assert (=> d!42283 (=> (not res!65104) (not e!88299))))

(declare-fun lt!70899 () ListLongMap!1707)

(assert (=> d!42283 (= res!65104 (contains!896 lt!70899 (_1!1314 (ite (or c!24668 c!24671) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun lt!70901 () List!1735)

(assert (=> d!42283 (= lt!70899 (ListLongMap!1708 lt!70901))))

(declare-fun lt!70900 () Unit!4150)

(declare-fun lt!70898 () Unit!4150)

(assert (=> d!42283 (= lt!70900 lt!70898)))

(assert (=> d!42283 (= (getValueByKey!171 lt!70901 (_1!1314 (ite (or c!24668 c!24671) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (ite (or c!24668 c!24671) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42283 (= lt!70898 (lemmaContainsTupThenGetReturnValue!88 lt!70901 (_1!1314 (ite (or c!24668 c!24671) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24668 c!24671) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42283 (= lt!70901 (insertStrictlySorted!90 (toList!869 (ite c!24668 call!14712 (ite c!24671 call!14708 call!14713))) (_1!1314 (ite (or c!24668 c!24671) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24668 c!24671) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42283 (= (+!170 (ite c!24668 call!14712 (ite c!24671 call!14708 call!14713)) (ite (or c!24668 c!24671) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70899)))

(declare-fun b!135584 () Bool)

(declare-fun res!65103 () Bool)

(assert (=> b!135584 (=> (not res!65103) (not e!88299))))

(assert (=> b!135584 (= res!65103 (= (getValueByKey!171 (toList!869 lt!70899) (_1!1314 (ite (or c!24668 c!24671) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (ite (or c!24668 c!24671) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!135585 () Bool)

(assert (=> b!135585 (= e!88299 (contains!898 (toList!869 lt!70899) (ite (or c!24668 c!24671) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (= (and d!42283 res!65104) b!135584))

(assert (= (and b!135584 res!65103) b!135585))

(declare-fun m!161795 () Bool)

(assert (=> d!42283 m!161795))

(declare-fun m!161797 () Bool)

(assert (=> d!42283 m!161797))

(declare-fun m!161799 () Bool)

(assert (=> d!42283 m!161799))

(declare-fun m!161801 () Bool)

(assert (=> d!42283 m!161801))

(declare-fun m!161803 () Bool)

(assert (=> b!135584 m!161803))

(declare-fun m!161805 () Bool)

(assert (=> b!135585 m!161805))

(assert (=> bm!14707 d!42283))

(assert (=> d!40501 d!41987))

(declare-fun d!42285 () Bool)

(declare-fun res!65105 () Bool)

(declare-fun e!88300 () Bool)

(assert (=> d!42285 (=> res!65105 e!88300)))

(assert (=> d!42285 (= res!65105 (= (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) lt!69337))))

(assert (=> d!42285 (= (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69337 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!88300)))

(declare-fun b!135586 () Bool)

(declare-fun e!88301 () Bool)

(assert (=> b!135586 (= e!88300 e!88301)))

(declare-fun res!65106 () Bool)

(assert (=> b!135586 (=> (not res!65106) (not e!88301))))

(assert (=> b!135586 (= res!65106 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (v!3197 (underlying!454 thiss!992))))))))

(declare-fun b!135587 () Bool)

(assert (=> b!135587 (= e!88301 (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69337 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!42285 (not res!65105)) b!135586))

(assert (= (and b!135586 res!65106) b!135587))

(assert (=> d!42285 m!157901))

(declare-fun m!161807 () Bool)

(assert (=> b!135587 m!161807))

(assert (=> b!133719 d!42285))

(declare-fun d!42287 () Bool)

(assert (=> d!42287 (isDefined!125 (getValueByKey!171 (toList!869 lt!69416) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70902 () Unit!4150)

(assert (=> d!42287 (= lt!70902 (choose!831 (toList!869 lt!69416) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88302 () Bool)

(assert (=> d!42287 e!88302))

(declare-fun res!65107 () Bool)

(assert (=> d!42287 (=> (not res!65107) (not e!88302))))

(assert (=> d!42287 (= res!65107 (isStrictlySorted!317 (toList!869 lt!69416)))))

(assert (=> d!42287 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69416) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70902)))

(declare-fun b!135588 () Bool)

(assert (=> b!135588 (= e!88302 (containsKey!175 (toList!869 lt!69416) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42287 res!65107) b!135588))

(assert (=> d!42287 m!157979))

(assert (=> d!42287 m!157979))

(assert (=> d!42287 m!158753))

(declare-fun m!161809 () Bool)

(assert (=> d!42287 m!161809))

(assert (=> d!42287 m!161077))

(assert (=> b!135588 m!158749))

(assert (=> b!134010 d!42287))

(declare-fun d!42289 () Bool)

(assert (=> d!42289 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69416) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69416) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5688 () Bool)

(assert (= bs!5688 d!42289))

(assert (=> bs!5688 m!157979))

(declare-fun m!161811 () Bool)

(assert (=> bs!5688 m!161811))

(assert (=> b!134010 d!42289))

(assert (=> b!134010 d!41373))

(declare-fun b!135589 () Bool)

(declare-fun e!88303 () Option!177)

(assert (=> b!135589 (= e!88303 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69936)))))))

(declare-fun b!135592 () Bool)

(declare-fun e!88304 () Option!177)

(assert (=> b!135592 (= e!88304 None!175)))

(declare-fun b!135591 () Bool)

(assert (=> b!135591 (= e!88304 (getValueByKey!171 (t!6198 (toList!869 lt!69936)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!135590 () Bool)

(assert (=> b!135590 (= e!88303 e!88304)))

(declare-fun c!25360 () Bool)

(assert (=> b!135590 (= c!25360 (and ((_ is Cons!1731) (toList!869 lt!69936)) (not (= (_1!1314 (h!2336 (toList!869 lt!69936))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun d!42291 () Bool)

(declare-fun c!25359 () Bool)

(assert (=> d!42291 (= c!25359 (and ((_ is Cons!1731) (toList!869 lt!69936)) (= (_1!1314 (h!2336 (toList!869 lt!69936))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42291 (= (getValueByKey!171 (toList!869 lt!69936) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) e!88303)))

(assert (= (and d!42291 c!25359) b!135589))

(assert (= (and d!42291 (not c!25359)) b!135590))

(assert (= (and b!135590 c!25360) b!135591))

(assert (= (and b!135590 (not c!25360)) b!135592))

(declare-fun m!161813 () Bool)

(assert (=> b!135591 m!161813))

(assert (=> b!133568 d!42291))

(declare-fun b!135593 () Bool)

(declare-fun e!88306 () (_ BitVec 32))

(assert (=> b!135593 (= e!88306 #b00000000000000000000000000000000)))

(declare-fun d!42293 () Bool)

(declare-fun lt!70903 () (_ BitVec 32))

(assert (=> d!42293 (and (bvsge lt!70903 #b00000000000000000000000000000000) (bvsle lt!70903 (bvsub (size!2529 (_keys!4614 (_2!1315 lt!69589))) #b00000000000000000000000000000000)))))

(assert (=> d!42293 (= lt!70903 e!88306)))

(declare-fun c!25362 () Bool)

(assert (=> d!42293 (= c!25362 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69589)))))))

(assert (=> d!42293 (and (bvsle #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69589)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2529 (_keys!4614 (_2!1315 lt!69589))) (size!2529 (_keys!4614 (_2!1315 lt!69589)))))))

(assert (=> d!42293 (= (arrayCountValidKeys!0 (_keys!4614 (_2!1315 lt!69589)) #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69589)))) lt!70903)))

(declare-fun b!135594 () Bool)

(declare-fun e!88305 () (_ BitVec 32))

(declare-fun call!14902 () (_ BitVec 32))

(assert (=> b!135594 (= e!88305 call!14902)))

(declare-fun b!135595 () Bool)

(assert (=> b!135595 (= e!88305 (bvadd #b00000000000000000000000000000001 call!14902))))

(declare-fun bm!14899 () Bool)

(assert (=> bm!14899 (= call!14902 (arrayCountValidKeys!0 (_keys!4614 (_2!1315 lt!69589)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 (_2!1315 lt!69589)))))))

(declare-fun b!135596 () Bool)

(assert (=> b!135596 (= e!88306 e!88305)))

(declare-fun c!25361 () Bool)

(assert (=> b!135596 (= c!25361 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69589))) #b00000000000000000000000000000000)))))

(assert (= (and d!42293 c!25362) b!135593))

(assert (= (and d!42293 (not c!25362)) b!135596))

(assert (= (and b!135596 c!25361) b!135595))

(assert (= (and b!135596 (not c!25361)) b!135594))

(assert (= (or b!135595 b!135594) bm!14899))

(declare-fun m!161815 () Bool)

(assert (=> bm!14899 m!161815))

(assert (=> b!135596 m!161631))

(assert (=> b!135596 m!161631))

(assert (=> b!135596 m!161639))

(assert (=> b!133671 d!42293))

(declare-fun d!42295 () Bool)

(assert (=> d!42295 (= (apply!116 lt!69737 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!69737) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5689 () Bool)

(assert (= bs!5689 d!42295))

(assert (=> bs!5689 m!160189))

(assert (=> bs!5689 m!160189))

(declare-fun m!161817 () Bool)

(assert (=> bs!5689 m!161817))

(assert (=> b!133290 d!42295))

(declare-fun d!42297 () Bool)

(assert (=> d!42297 (= (apply!116 lt!69703 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!69703) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5690 () Bool)

(assert (= bs!5690 d!42297))

(assert (=> bs!5690 m!160173))

(assert (=> bs!5690 m!160173))

(declare-fun m!161819 () Bool)

(assert (=> bs!5690 m!161819))

(assert (=> b!133263 d!42297))

(declare-fun d!42299 () Bool)

(declare-fun e!88307 () Bool)

(assert (=> d!42299 e!88307))

(declare-fun res!65108 () Bool)

(assert (=> d!42299 (=> res!65108 e!88307)))

(declare-fun lt!70904 () Bool)

(assert (=> d!42299 (= res!65108 (not lt!70904))))

(declare-fun lt!70906 () Bool)

(assert (=> d!42299 (= lt!70904 lt!70906)))

(declare-fun lt!70905 () Unit!4150)

(declare-fun e!88308 () Unit!4150)

(assert (=> d!42299 (= lt!70905 e!88308)))

(declare-fun c!25363 () Bool)

(assert (=> d!42299 (= c!25363 lt!70906)))

(assert (=> d!42299 (= lt!70906 (containsKey!175 (toList!869 lt!70050) (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))))

(assert (=> d!42299 (= (contains!896 lt!70050 (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))) lt!70904)))

(declare-fun b!135597 () Bool)

(declare-fun lt!70907 () Unit!4150)

(assert (=> b!135597 (= e!88308 lt!70907)))

(assert (=> b!135597 (= lt!70907 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!70050) (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))))

(assert (=> b!135597 (isDefined!125 (getValueByKey!171 (toList!869 lt!70050) (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))))

(declare-fun b!135598 () Bool)

(declare-fun Unit!4274 () Unit!4150)

(assert (=> b!135598 (= e!88308 Unit!4274)))

(declare-fun b!135599 () Bool)

(assert (=> b!135599 (= e!88307 (isDefined!125 (getValueByKey!171 (toList!869 lt!70050) (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))))))))

(assert (= (and d!42299 c!25363) b!135597))

(assert (= (and d!42299 (not c!25363)) b!135598))

(assert (= (and d!42299 (not res!65108)) b!135599))

(declare-fun m!161821 () Bool)

(assert (=> d!42299 m!161821))

(declare-fun m!161823 () Bool)

(assert (=> b!135597 m!161823))

(assert (=> b!135597 m!158383))

(assert (=> b!135597 m!158383))

(declare-fun m!161825 () Bool)

(assert (=> b!135597 m!161825))

(assert (=> b!135599 m!158383))

(assert (=> b!135599 m!158383))

(assert (=> b!135599 m!161825))

(assert (=> d!40813 d!42299))

(declare-fun b!135600 () Bool)

(declare-fun e!88309 () Option!177)

(assert (=> b!135600 (= e!88309 (Some!176 (_2!1314 (h!2336 lt!70052))))))

(declare-fun b!135603 () Bool)

(declare-fun e!88310 () Option!177)

(assert (=> b!135603 (= e!88310 None!175)))

(declare-fun b!135602 () Bool)

(assert (=> b!135602 (= e!88310 (getValueByKey!171 (t!6198 lt!70052) (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))))

(declare-fun b!135601 () Bool)

(assert (=> b!135601 (= e!88309 e!88310)))

(declare-fun c!25365 () Bool)

(assert (=> b!135601 (= c!25365 (and ((_ is Cons!1731) lt!70052) (not (= (_1!1314 (h!2336 lt!70052)) (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))))))

(declare-fun c!25364 () Bool)

(declare-fun d!42301 () Bool)

(assert (=> d!42301 (= c!25364 (and ((_ is Cons!1731) lt!70052) (= (_1!1314 (h!2336 lt!70052)) (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))))))))

(assert (=> d!42301 (= (getValueByKey!171 lt!70052 (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))) e!88309)))

(assert (= (and d!42301 c!25364) b!135600))

(assert (= (and d!42301 (not c!25364)) b!135601))

(assert (= (and b!135601 c!25365) b!135602))

(assert (= (and b!135601 (not c!25365)) b!135603))

(declare-fun m!161827 () Bool)

(assert (=> b!135602 m!161827))

(assert (=> d!40813 d!42301))

(declare-fun d!42303 () Bool)

(assert (=> d!42303 (= (getValueByKey!171 lt!70052 (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))))

(declare-fun lt!70908 () Unit!4150)

(assert (=> d!42303 (= lt!70908 (choose!834 lt!70052 (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))))

(declare-fun e!88311 () Bool)

(assert (=> d!42303 e!88311))

(declare-fun res!65109 () Bool)

(assert (=> d!42303 (=> (not res!65109) (not e!88311))))

(assert (=> d!42303 (= res!65109 (isStrictlySorted!317 lt!70052))))

(assert (=> d!42303 (= (lemmaContainsTupThenGetReturnValue!88 lt!70052 (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))) lt!70908)))

(declare-fun b!135604 () Bool)

(declare-fun res!65110 () Bool)

(assert (=> b!135604 (=> (not res!65110) (not e!88311))))

(assert (=> b!135604 (= res!65110 (containsKey!175 lt!70052 (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))))

(declare-fun b!135605 () Bool)

(assert (=> b!135605 (= e!88311 (contains!898 lt!70052 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))))))))

(assert (= (and d!42303 res!65109) b!135604))

(assert (= (and b!135604 res!65110) b!135605))

(assert (=> d!42303 m!158377))

(declare-fun m!161829 () Bool)

(assert (=> d!42303 m!161829))

(declare-fun m!161831 () Bool)

(assert (=> d!42303 m!161831))

(declare-fun m!161833 () Bool)

(assert (=> b!135604 m!161833))

(declare-fun m!161835 () Bool)

(assert (=> b!135605 m!161835))

(assert (=> d!40813 d!42303))

(declare-fun bm!14900 () Bool)

(declare-fun call!14903 () List!1735)

(declare-fun call!14904 () List!1735)

(assert (=> bm!14900 (= call!14903 call!14904)))

(declare-fun e!88314 () Bool)

(declare-fun lt!70909 () List!1735)

(declare-fun b!135606 () Bool)

(assert (=> b!135606 (= e!88314 (contains!898 lt!70909 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))))))))

(declare-fun b!135607 () Bool)

(declare-fun e!88316 () List!1735)

(assert (=> b!135607 (= e!88316 call!14904)))

(declare-fun b!135608 () Bool)

(declare-fun res!65111 () Bool)

(assert (=> b!135608 (=> (not res!65111) (not e!88314))))

(assert (=> b!135608 (= res!65111 (containsKey!175 lt!70909 (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))))

(declare-fun e!88312 () List!1735)

(declare-fun b!135609 () Bool)

(assert (=> b!135609 (= e!88312 (insertStrictlySorted!90 (t!6198 (toList!869 lt!69519)) (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))))

(declare-fun b!135610 () Bool)

(declare-fun e!88313 () List!1735)

(assert (=> b!135610 (= e!88313 call!14903)))

(declare-fun bm!14901 () Bool)

(declare-fun call!14905 () List!1735)

(assert (=> bm!14901 (= call!14904 call!14905)))

(declare-fun c!25368 () Bool)

(declare-fun b!135612 () Bool)

(declare-fun c!25366 () Bool)

(assert (=> b!135612 (= e!88312 (ite c!25368 (t!6198 (toList!869 lt!69519)) (ite c!25366 (Cons!1731 (h!2336 (toList!869 lt!69519)) (t!6198 (toList!869 lt!69519))) Nil!1732)))))

(declare-fun b!135613 () Bool)

(declare-fun e!88315 () List!1735)

(assert (=> b!135613 (= e!88315 call!14905)))

(declare-fun b!135614 () Bool)

(assert (=> b!135614 (= c!25366 (and ((_ is Cons!1731) (toList!869 lt!69519)) (bvsgt (_1!1314 (h!2336 (toList!869 lt!69519))) (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))))))))

(assert (=> b!135614 (= e!88316 e!88313)))

(declare-fun d!42305 () Bool)

(assert (=> d!42305 e!88314))

(declare-fun res!65112 () Bool)

(assert (=> d!42305 (=> (not res!65112) (not e!88314))))

(assert (=> d!42305 (= res!65112 (isStrictlySorted!317 lt!70909))))

(assert (=> d!42305 (= lt!70909 e!88315)))

(declare-fun c!25367 () Bool)

(assert (=> d!42305 (= c!25367 (and ((_ is Cons!1731) (toList!869 lt!69519)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69519))) (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))))))))

(assert (=> d!42305 (isStrictlySorted!317 (toList!869 lt!69519))))

(assert (=> d!42305 (= (insertStrictlySorted!90 (toList!869 lt!69519) (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))) lt!70909)))

(declare-fun b!135611 () Bool)

(assert (=> b!135611 (= e!88315 e!88316)))

(assert (=> b!135611 (= c!25368 (and ((_ is Cons!1731) (toList!869 lt!69519)) (= (_1!1314 (h!2336 (toList!869 lt!69519))) (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))))))))

(declare-fun b!135615 () Bool)

(assert (=> b!135615 (= e!88313 call!14903)))

(declare-fun bm!14902 () Bool)

(assert (=> bm!14902 (= call!14905 ($colon$colon!91 e!88312 (ite c!25367 (h!2336 (toList!869 lt!69519)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69521 (minValue!2720 newMap!16)))))))))

(declare-fun c!25369 () Bool)

(assert (=> bm!14902 (= c!25369 c!25367)))

(assert (= (and d!42305 c!25367) b!135613))

(assert (= (and d!42305 (not c!25367)) b!135611))

(assert (= (and b!135611 c!25368) b!135607))

(assert (= (and b!135611 (not c!25368)) b!135614))

(assert (= (and b!135614 c!25366) b!135615))

(assert (= (and b!135614 (not c!25366)) b!135610))

(assert (= (or b!135615 b!135610) bm!14900))

(assert (= (or b!135607 bm!14900) bm!14901))

(assert (= (or b!135613 bm!14901) bm!14902))

(assert (= (and bm!14902 c!25369) b!135609))

(assert (= (and bm!14902 (not c!25369)) b!135612))

(assert (= (and d!42305 res!65112) b!135608))

(assert (= (and b!135608 res!65111) b!135606))

(declare-fun m!161837 () Bool)

(assert (=> b!135608 m!161837))

(declare-fun m!161839 () Bool)

(assert (=> b!135606 m!161839))

(declare-fun m!161841 () Bool)

(assert (=> d!42305 m!161841))

(declare-fun m!161843 () Bool)

(assert (=> d!42305 m!161843))

(declare-fun m!161845 () Bool)

(assert (=> bm!14902 m!161845))

(declare-fun m!161847 () Bool)

(assert (=> b!135609 m!161847))

(assert (=> d!40813 d!42305))

(assert (=> d!40939 d!40647))

(assert (=> d!40939 d!40427))

(declare-fun d!42307 () Bool)

(assert (=> d!42307 (isDefined!125 (getValueByKey!171 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42307 true))

(declare-fun _$12!403 () Unit!4150)

(assert (=> d!42307 (= (choose!831 (toList!869 lt!69221) #b1000000000000000000000000000000000000000000000000000000000000000) _$12!403)))

(declare-fun bs!5691 () Bool)

(assert (= bs!5691 d!42307))

(assert (=> bs!5691 m!156519))

(assert (=> bs!5691 m!156519))

(assert (=> bs!5691 m!156521))

(assert (=> d!40939 d!42307))

(assert (=> d!40939 d!41549))

(declare-fun d!42309 () Bool)

(assert (=> d!42309 (= (isEmpty!414 lt!69988) (isEmpty!416 (toList!869 lt!69988)))))

(declare-fun bs!5692 () Bool)

(assert (= bs!5692 d!42309))

(declare-fun m!161849 () Bool)

(assert (=> bs!5692 m!161849))

(assert (=> b!133660 d!42309))

(declare-fun d!42311 () Bool)

(assert (=> d!42311 (isDefined!125 (getValueByKey!171 (toList!869 lt!69442) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun lt!70910 () Unit!4150)

(assert (=> d!42311 (= lt!70910 (choose!831 (toList!869 lt!69442) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun e!88317 () Bool)

(assert (=> d!42311 e!88317))

(declare-fun res!65113 () Bool)

(assert (=> d!42311 (=> (not res!65113) (not e!88317))))

(assert (=> d!42311 (= res!65113 (isStrictlySorted!317 (toList!869 lt!69442)))))

(assert (=> d!42311 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69442) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!70910)))

(declare-fun b!135616 () Bool)

(assert (=> b!135616 (= e!88317 (containsKey!175 (toList!869 lt!69442) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!42311 res!65113) b!135616))

(assert (=> d!42311 m!156731))

(assert (=> d!42311 m!156731))

(assert (=> d!42311 m!158195))

(declare-fun m!161851 () Bool)

(assert (=> d!42311 m!161851))

(declare-fun m!161853 () Bool)

(assert (=> d!42311 m!161853))

(assert (=> b!135616 m!158191))

(assert (=> b!133697 d!42311))

(declare-fun d!42313 () Bool)

(assert (=> d!42313 (= (isDefined!125 (getValueByKey!171 (toList!869 lt!69442) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) (not (isEmpty!415 (getValueByKey!171 (toList!869 lt!69442) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun bs!5693 () Bool)

(assert (= bs!5693 d!42313))

(assert (=> bs!5693 m!156731))

(declare-fun m!161855 () Bool)

(assert (=> bs!5693 m!161855))

(assert (=> b!133697 d!42313))

(assert (=> b!133697 d!40815))

(declare-fun d!42315 () Bool)

(declare-fun e!88318 () Bool)

(assert (=> d!42315 e!88318))

(declare-fun res!65114 () Bool)

(assert (=> d!42315 (=> res!65114 e!88318)))

(declare-fun lt!70911 () Bool)

(assert (=> d!42315 (= res!65114 (not lt!70911))))

(declare-fun lt!70913 () Bool)

(assert (=> d!42315 (= lt!70911 lt!70913)))

(declare-fun lt!70912 () Unit!4150)

(declare-fun e!88319 () Unit!4150)

(assert (=> d!42315 (= lt!70912 e!88319)))

(declare-fun c!25370 () Bool)

(assert (=> d!42315 (= c!25370 lt!70913)))

(assert (=> d!42315 (= lt!70913 (containsKey!175 (toList!869 lt!70136) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42315 (= (contains!896 lt!70136 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70911)))

(declare-fun b!135617 () Bool)

(declare-fun lt!70914 () Unit!4150)

(assert (=> b!135617 (= e!88319 lt!70914)))

(assert (=> b!135617 (= lt!70914 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!70136) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135617 (isDefined!125 (getValueByKey!171 (toList!869 lt!70136) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135618 () Bool)

(declare-fun Unit!4275 () Unit!4150)

(assert (=> b!135618 (= e!88319 Unit!4275)))

(declare-fun b!135619 () Bool)

(assert (=> b!135619 (= e!88318 (isDefined!125 (getValueByKey!171 (toList!869 lt!70136) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42315 c!25370) b!135617))

(assert (= (and d!42315 (not c!25370)) b!135618))

(assert (= (and d!42315 (not res!65114)) b!135619))

(declare-fun m!161857 () Bool)

(assert (=> d!42315 m!161857))

(declare-fun m!161859 () Bool)

(assert (=> b!135617 m!161859))

(assert (=> b!135617 m!160151))

(assert (=> b!135617 m!160151))

(declare-fun m!161861 () Bool)

(assert (=> b!135617 m!161861))

(assert (=> b!135619 m!160151))

(assert (=> b!135619 m!160151))

(assert (=> b!135619 m!161861))

(assert (=> bm!14791 d!42315))

(assert (=> d!40737 d!40739))

(declare-fun d!42317 () Bool)

(assert (=> d!42317 (arrayContainsKey!0 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69380 #b00000000000000000000000000000000)))

(assert (=> d!42317 true))

(declare-fun _$60!366 () Unit!4150)

(assert (=> d!42317 (= (choose!13 (_keys!4614 (v!3197 (underlying!454 thiss!992))) lt!69380 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) _$60!366)))

(declare-fun bs!5694 () Bool)

(assert (= bs!5694 d!42317))

(assert (=> bs!5694 m!156597))

(assert (=> d!40737 d!42317))

(declare-fun d!42319 () Bool)

(declare-fun res!65115 () Bool)

(declare-fun e!88320 () Bool)

(assert (=> d!42319 (=> res!65115 e!88320)))

(assert (=> d!42319 (= res!65115 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69221))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69221)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!42319 (= (containsKey!175 (t!6198 (toList!869 lt!69221)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!88320)))

(declare-fun b!135620 () Bool)

(declare-fun e!88321 () Bool)

(assert (=> b!135620 (= e!88320 e!88321)))

(declare-fun res!65116 () Bool)

(assert (=> b!135620 (=> (not res!65116) (not e!88321))))

(assert (=> b!135620 (= res!65116 (and (or (not ((_ is Cons!1731) (t!6198 (toList!869 lt!69221)))) (bvsle (_1!1314 (h!2336 (t!6198 (toList!869 lt!69221)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1731) (t!6198 (toList!869 lt!69221))) (bvslt (_1!1314 (h!2336 (t!6198 (toList!869 lt!69221)))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!135621 () Bool)

(assert (=> b!135621 (= e!88321 (containsKey!175 (t!6198 (t!6198 (toList!869 lt!69221))) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!42319 (not res!65115)) b!135620))

(assert (= (and b!135620 res!65116) b!135621))

(assert (=> b!135621 m!156357))

(declare-fun m!161863 () Bool)

(assert (=> b!135621 m!161863))

(assert (=> b!133990 d!42319))

(declare-fun b!135622 () Bool)

(declare-fun e!88322 () Option!177)

(assert (=> b!135622 (= e!88322 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69898)))))))

(declare-fun b!135625 () Bool)

(declare-fun e!88323 () Option!177)

(assert (=> b!135625 (= e!88323 None!175)))

(declare-fun b!135624 () Bool)

(assert (=> b!135624 (= e!88323 (getValueByKey!171 (t!6198 (toList!869 lt!69898)) (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!135623 () Bool)

(assert (=> b!135623 (= e!88322 e!88323)))

(declare-fun c!25372 () Bool)

(assert (=> b!135623 (= c!25372 (and ((_ is Cons!1731) (toList!869 lt!69898)) (not (= (_1!1314 (h!2336 (toList!869 lt!69898))) (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun c!25371 () Bool)

(declare-fun d!42321 () Bool)

(assert (=> d!42321 (= c!25371 (and ((_ is Cons!1731) (toList!869 lt!69898)) (= (_1!1314 (h!2336 (toList!869 lt!69898))) (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!42321 (= (getValueByKey!171 (toList!869 lt!69898) (_1!1314 (tuple2!2609 lt!69499 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) e!88322)))

(assert (= (and d!42321 c!25371) b!135622))

(assert (= (and d!42321 (not c!25371)) b!135623))

(assert (= (and b!135623 c!25372) b!135624))

(assert (= (and b!135623 (not c!25372)) b!135625))

(declare-fun m!161865 () Bool)

(assert (=> b!135624 m!161865))

(assert (=> b!133494 d!42321))

(declare-fun d!42323 () Bool)

(declare-fun res!65117 () Bool)

(declare-fun e!88324 () Bool)

(assert (=> d!42323 (=> res!65117 e!88324)))

(assert (=> d!42323 (= res!65117 (and ((_ is Cons!1731) (toList!869 lt!69510)) (= (_1!1314 (h!2336 (toList!869 lt!69510))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42323 (= (containsKey!175 (toList!869 lt!69510) #b1000000000000000000000000000000000000000000000000000000000000000) e!88324)))

(declare-fun b!135626 () Bool)

(declare-fun e!88325 () Bool)

(assert (=> b!135626 (= e!88324 e!88325)))

(declare-fun res!65118 () Bool)

(assert (=> b!135626 (=> (not res!65118) (not e!88325))))

(assert (=> b!135626 (= res!65118 (and (or (not ((_ is Cons!1731) (toList!869 lt!69510))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69510))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1731) (toList!869 lt!69510)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69510))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135627 () Bool)

(assert (=> b!135627 (= e!88325 (containsKey!175 (t!6198 (toList!869 lt!69510)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42323 (not res!65117)) b!135626))

(assert (= (and b!135626 res!65118) b!135627))

(declare-fun m!161867 () Bool)

(assert (=> b!135627 m!161867))

(assert (=> d!40439 d!42323))

(declare-fun b!135628 () Bool)

(declare-fun e!88326 () Option!177)

(assert (=> b!135628 (= e!88326 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69724)))))))

(declare-fun b!135631 () Bool)

(declare-fun e!88327 () Option!177)

(assert (=> b!135631 (= e!88327 None!175)))

(declare-fun b!135630 () Bool)

(assert (=> b!135630 (= e!88327 (getValueByKey!171 (t!6198 (toList!869 lt!69724)) (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!135629 () Bool)

(assert (=> b!135629 (= e!88326 e!88327)))

(declare-fun c!25374 () Bool)

(assert (=> b!135629 (= c!25374 (and ((_ is Cons!1731) (toList!869 lt!69724)) (not (= (_1!1314 (h!2336 (toList!869 lt!69724))) (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))))

(declare-fun d!42325 () Bool)

(declare-fun c!25373 () Bool)

(assert (=> d!42325 (= c!25373 (and ((_ is Cons!1731) (toList!869 lt!69724)) (= (_1!1314 (h!2336 (toList!869 lt!69724))) (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(assert (=> d!42325 (= (getValueByKey!171 (toList!869 lt!69724) (_1!1314 (ite (or c!24605 c!24608) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) e!88326)))

(assert (= (and d!42325 c!25373) b!135628))

(assert (= (and d!42325 (not c!25373)) b!135629))

(assert (= (and b!135629 c!25374) b!135630))

(assert (= (and b!135629 (not c!25374)) b!135631))

(declare-fun m!161869 () Bool)

(assert (=> b!135630 m!161869))

(assert (=> b!133270 d!42325))

(declare-fun d!42327 () Bool)

(assert (=> d!42327 (= (get!1491 (getValueByKey!171 (toList!869 lt!69488) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3201 (getValueByKey!171 (toList!869 lt!69488) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40701 d!42327))

(assert (=> d!40701 d!41071))

(declare-fun d!42329 () Bool)

(declare-fun e!88328 () Bool)

(assert (=> d!42329 e!88328))

(declare-fun res!65119 () Bool)

(assert (=> d!42329 (=> res!65119 e!88328)))

(declare-fun lt!70915 () Bool)

(assert (=> d!42329 (= res!65119 (not lt!70915))))

(declare-fun lt!70917 () Bool)

(assert (=> d!42329 (= lt!70915 lt!70917)))

(declare-fun lt!70916 () Unit!4150)

(declare-fun e!88329 () Unit!4150)

(assert (=> d!42329 (= lt!70916 e!88329)))

(declare-fun c!25375 () Bool)

(assert (=> d!42329 (= c!25375 lt!70917)))

(assert (=> d!42329 (= lt!70917 (containsKey!175 (toList!869 lt!70040) (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> d!42329 (= (contains!896 lt!70040 (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!70915)))

(declare-fun b!135632 () Bool)

(declare-fun lt!70918 () Unit!4150)

(assert (=> b!135632 (= e!88329 lt!70918)))

(assert (=> b!135632 (= lt!70918 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!70040) (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> b!135632 (isDefined!125 (getValueByKey!171 (toList!869 lt!70040) (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!135633 () Bool)

(declare-fun Unit!4276 () Unit!4150)

(assert (=> b!135633 (= e!88329 Unit!4276)))

(declare-fun b!135634 () Bool)

(assert (=> b!135634 (= e!88328 (isDefined!125 (getValueByKey!171 (toList!869 lt!70040) (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (= (and d!42329 c!25375) b!135632))

(assert (= (and d!42329 (not c!25375)) b!135633))

(assert (= (and d!42329 (not res!65119)) b!135634))

(declare-fun m!161871 () Bool)

(assert (=> d!42329 m!161871))

(declare-fun m!161873 () Bool)

(assert (=> b!135632 m!161873))

(assert (=> b!135632 m!158331))

(assert (=> b!135632 m!158331))

(declare-fun m!161875 () Bool)

(assert (=> b!135632 m!161875))

(assert (=> b!135634 m!158331))

(assert (=> b!135634 m!158331))

(assert (=> b!135634 m!161875))

(assert (=> d!40795 d!42329))

(declare-fun b!135635 () Bool)

(declare-fun e!88330 () Option!177)

(assert (=> b!135635 (= e!88330 (Some!176 (_2!1314 (h!2336 lt!70042))))))

(declare-fun b!135638 () Bool)

(declare-fun e!88331 () Option!177)

(assert (=> b!135638 (= e!88331 None!175)))

(declare-fun b!135637 () Bool)

(assert (=> b!135637 (= e!88331 (getValueByKey!171 (t!6198 lt!70042) (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!135636 () Bool)

(assert (=> b!135636 (= e!88330 e!88331)))

(declare-fun c!25377 () Bool)

(assert (=> b!135636 (= c!25377 (and ((_ is Cons!1731) lt!70042) (not (= (_1!1314 (h!2336 lt!70042)) (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))))

(declare-fun d!42331 () Bool)

(declare-fun c!25376 () Bool)

(assert (=> d!42331 (= c!25376 (and ((_ is Cons!1731) lt!70042) (= (_1!1314 (h!2336 lt!70042)) (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (=> d!42331 (= (getValueByKey!171 lt!70042 (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) e!88330)))

(assert (= (and d!42331 c!25376) b!135635))

(assert (= (and d!42331 (not c!25376)) b!135636))

(assert (= (and b!135636 c!25377) b!135637))

(assert (= (and b!135636 (not c!25377)) b!135638))

(declare-fun m!161877 () Bool)

(assert (=> b!135637 m!161877))

(assert (=> d!40795 d!42331))

(declare-fun d!42333 () Bool)

(assert (=> d!42333 (= (getValueByKey!171 lt!70042 (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) (Some!176 (_2!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun lt!70919 () Unit!4150)

(assert (=> d!42333 (= lt!70919 (choose!834 lt!70042 (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun e!88332 () Bool)

(assert (=> d!42333 e!88332))

(declare-fun res!65120 () Bool)

(assert (=> d!42333 (=> (not res!65120) (not e!88332))))

(assert (=> d!42333 (= res!65120 (isStrictlySorted!317 lt!70042))))

(assert (=> d!42333 (= (lemmaContainsTupThenGetReturnValue!88 lt!70042 (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!70919)))

(declare-fun b!135639 () Bool)

(declare-fun res!65121 () Bool)

(assert (=> b!135639 (=> (not res!65121) (not e!88332))))

(assert (=> b!135639 (= res!65121 (containsKey!175 lt!70042 (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!135640 () Bool)

(assert (=> b!135640 (= e!88332 (contains!898 lt!70042 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (= (and d!42333 res!65120) b!135639))

(assert (= (and b!135639 res!65121) b!135640))

(assert (=> d!42333 m!158325))

(declare-fun m!161879 () Bool)

(assert (=> d!42333 m!161879))

(declare-fun m!161881 () Bool)

(assert (=> d!42333 m!161881))

(declare-fun m!161883 () Bool)

(assert (=> b!135639 m!161883))

(declare-fun m!161885 () Bool)

(assert (=> b!135640 m!161885))

(assert (=> d!40795 d!42333))

(declare-fun bm!14903 () Bool)

(declare-fun call!14906 () List!1735)

(declare-fun call!14907 () List!1735)

(assert (=> bm!14903 (= call!14906 call!14907)))

(declare-fun e!88335 () Bool)

(declare-fun b!135641 () Bool)

(declare-fun lt!70920 () List!1735)

(assert (=> b!135641 (= e!88335 (contains!898 lt!70920 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(declare-fun b!135642 () Bool)

(declare-fun e!88337 () List!1735)

(assert (=> b!135642 (= e!88337 call!14907)))

(declare-fun b!135643 () Bool)

(declare-fun res!65122 () Bool)

(assert (=> b!135643 (=> (not res!65122) (not e!88335))))

(assert (=> b!135643 (= res!65122 (containsKey!175 lt!70920 (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun e!88333 () List!1735)

(declare-fun b!135644 () Bool)

(assert (=> b!135644 (= e!88333 (insertStrictlySorted!90 (t!6198 (toList!869 lt!69506)) (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!135645 () Bool)

(declare-fun e!88334 () List!1735)

(assert (=> b!135645 (= e!88334 call!14906)))

(declare-fun bm!14904 () Bool)

(declare-fun call!14908 () List!1735)

(assert (=> bm!14904 (= call!14907 call!14908)))

(declare-fun b!135647 () Bool)

(declare-fun c!25378 () Bool)

(declare-fun c!25380 () Bool)

(assert (=> b!135647 (= e!88333 (ite c!25380 (t!6198 (toList!869 lt!69506)) (ite c!25378 (Cons!1731 (h!2336 (toList!869 lt!69506)) (t!6198 (toList!869 lt!69506))) Nil!1732)))))

(declare-fun b!135648 () Bool)

(declare-fun e!88336 () List!1735)

(assert (=> b!135648 (= e!88336 call!14908)))

(declare-fun b!135649 () Bool)

(assert (=> b!135649 (= c!25378 (and ((_ is Cons!1731) (toList!869 lt!69506)) (bvsgt (_1!1314 (h!2336 (toList!869 lt!69506))) (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (=> b!135649 (= e!88337 e!88334)))

(declare-fun d!42335 () Bool)

(assert (=> d!42335 e!88335))

(declare-fun res!65123 () Bool)

(assert (=> d!42335 (=> (not res!65123) (not e!88335))))

(assert (=> d!42335 (= res!65123 (isStrictlySorted!317 lt!70920))))

(assert (=> d!42335 (= lt!70920 e!88336)))

(declare-fun c!25379 () Bool)

(assert (=> d!42335 (= c!25379 (and ((_ is Cons!1731) (toList!869 lt!69506)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69506))) (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (=> d!42335 (isStrictlySorted!317 (toList!869 lt!69506))))

(assert (=> d!42335 (= (insertStrictlySorted!90 (toList!869 lt!69506) (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!70920)))

(declare-fun b!135646 () Bool)

(assert (=> b!135646 (= e!88336 e!88337)))

(assert (=> b!135646 (= c!25380 (and ((_ is Cons!1731) (toList!869 lt!69506)) (= (_1!1314 (h!2336 (toList!869 lt!69506))) (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(declare-fun b!135650 () Bool)

(assert (=> b!135650 (= e!88334 call!14906)))

(declare-fun bm!14905 () Bool)

(assert (=> bm!14905 (= call!14908 ($colon$colon!91 e!88333 (ite c!25379 (h!2336 (toList!869 lt!69506)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1314 (tuple2!2609 lt!69509 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))))

(declare-fun c!25381 () Bool)

(assert (=> bm!14905 (= c!25381 c!25379)))

(assert (= (and d!42335 c!25379) b!135648))

(assert (= (and d!42335 (not c!25379)) b!135646))

(assert (= (and b!135646 c!25380) b!135642))

(assert (= (and b!135646 (not c!25380)) b!135649))

(assert (= (and b!135649 c!25378) b!135650))

(assert (= (and b!135649 (not c!25378)) b!135645))

(assert (= (or b!135650 b!135645) bm!14903))

(assert (= (or b!135642 bm!14903) bm!14904))

(assert (= (or b!135648 bm!14904) bm!14905))

(assert (= (and bm!14905 c!25381) b!135644))

(assert (= (and bm!14905 (not c!25381)) b!135647))

(assert (= (and d!42335 res!65123) b!135643))

(assert (= (and b!135643 res!65122) b!135641))

(declare-fun m!161887 () Bool)

(assert (=> b!135643 m!161887))

(declare-fun m!161889 () Bool)

(assert (=> b!135641 m!161889))

(declare-fun m!161891 () Bool)

(assert (=> d!42335 m!161891))

(declare-fun m!161893 () Bool)

(assert (=> d!42335 m!161893))

(declare-fun m!161895 () Bool)

(assert (=> bm!14905 m!161895))

(declare-fun m!161897 () Bool)

(assert (=> b!135644 m!161897))

(assert (=> d!40795 d!42335))

(declare-fun d!42337 () Bool)

(declare-fun res!65124 () Bool)

(declare-fun e!88338 () Bool)

(assert (=> d!42337 (=> res!65124 e!88338)))

(assert (=> d!42337 (= res!65124 (and ((_ is Cons!1731) lt!70063) (= (_1!1314 (h!2336 lt!70063)) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!42337 (= (containsKey!175 lt!70063 (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!88338)))

(declare-fun b!135651 () Bool)

(declare-fun e!88339 () Bool)

(assert (=> b!135651 (= e!88338 e!88339)))

(declare-fun res!65125 () Bool)

(assert (=> b!135651 (=> (not res!65125) (not e!88339))))

(assert (=> b!135651 (= res!65125 (and (or (not ((_ is Cons!1731) lt!70063)) (bvsle (_1!1314 (h!2336 lt!70063)) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1731) lt!70063) (bvslt (_1!1314 (h!2336 lt!70063)) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135652 () Bool)

(assert (=> b!135652 (= e!88339 (containsKey!175 (t!6198 lt!70063) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42337 (not res!65124)) b!135651))

(assert (= (and b!135651 res!65125) b!135652))

(declare-fun m!161899 () Bool)

(assert (=> b!135652 m!161899))

(assert (=> b!133785 d!42337))

(declare-fun b!135653 () Bool)

(declare-fun lt!70921 () SeekEntryResult!285)

(assert (=> b!135653 (and (bvsge (index!3302 lt!70921) #b00000000000000000000000000000000) (bvslt (index!3302 lt!70921) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun res!65127 () Bool)

(assert (=> b!135653 (= res!65127 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3302 lt!70921)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88343 () Bool)

(assert (=> b!135653 (=> res!65127 e!88343)))

(declare-fun b!135654 () Bool)

(declare-fun e!88340 () SeekEntryResult!285)

(assert (=> b!135654 (= e!88340 (Intermediate!285 true (toIndex!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (mask!7165 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!135655 () Bool)

(declare-fun e!88341 () SeekEntryResult!285)

(assert (=> b!135655 (= e!88341 (Intermediate!285 false (toIndex!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (mask!7165 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!135656 () Bool)

(assert (=> b!135656 (= e!88341 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (mask!7165 newMap!16)) #b00000000000000000000000000000000 (mask!7165 newMap!16)) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun d!42339 () Bool)

(declare-fun e!88342 () Bool)

(assert (=> d!42339 e!88342))

(declare-fun c!25383 () Bool)

(assert (=> d!42339 (= c!25383 (and ((_ is Intermediate!285) lt!70921) (undefined!1097 lt!70921)))))

(assert (=> d!42339 (= lt!70921 e!88340)))

(declare-fun c!25382 () Bool)

(assert (=> d!42339 (= c!25382 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!70922 () (_ BitVec 64))

(assert (=> d!42339 (= lt!70922 (select (arr!2260 (_keys!4614 newMap!16)) (toIndex!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (mask!7165 newMap!16))))))

(assert (=> d!42339 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!42339 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (mask!7165 newMap!16)) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (_keys!4614 newMap!16) (mask!7165 newMap!16)) lt!70921)))

(declare-fun b!135657 () Bool)

(assert (=> b!135657 (and (bvsge (index!3302 lt!70921) #b00000000000000000000000000000000) (bvslt (index!3302 lt!70921) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun res!65126 () Bool)

(assert (=> b!135657 (= res!65126 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3302 lt!70921)) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135657 (=> res!65126 e!88343)))

(declare-fun e!88344 () Bool)

(assert (=> b!135657 (= e!88344 e!88343)))

(declare-fun b!135658 () Bool)

(assert (=> b!135658 (= e!88342 (bvsge (x!15602 lt!70921) #b01111111111111111111111111111110))))

(declare-fun b!135659 () Bool)

(assert (=> b!135659 (and (bvsge (index!3302 lt!70921) #b00000000000000000000000000000000) (bvslt (index!3302 lt!70921) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> b!135659 (= e!88343 (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3302 lt!70921)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135660 () Bool)

(assert (=> b!135660 (= e!88340 e!88341)))

(declare-fun c!25384 () Bool)

(assert (=> b!135660 (= c!25384 (or (= lt!70922 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (= (bvadd lt!70922 lt!70922) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135661 () Bool)

(assert (=> b!135661 (= e!88342 e!88344)))

(declare-fun res!65128 () Bool)

(assert (=> b!135661 (= res!65128 (and ((_ is Intermediate!285) lt!70921) (not (undefined!1097 lt!70921)) (bvslt (x!15602 lt!70921) #b01111111111111111111111111111110) (bvsge (x!15602 lt!70921) #b00000000000000000000000000000000) (bvsge (x!15602 lt!70921) #b00000000000000000000000000000000)))))

(assert (=> b!135661 (=> (not res!65128) (not e!88344))))

(assert (= (and d!42339 c!25382) b!135654))

(assert (= (and d!42339 (not c!25382)) b!135660))

(assert (= (and b!135660 c!25384) b!135655))

(assert (= (and b!135660 (not c!25384)) b!135656))

(assert (= (and d!42339 c!25383) b!135658))

(assert (= (and d!42339 (not c!25383)) b!135661))

(assert (= (and b!135661 res!65128) b!135657))

(assert (= (and b!135657 (not res!65126)) b!135653))

(assert (= (and b!135653 (not res!65127)) b!135659))

(assert (=> b!135656 m!157851))

(declare-fun m!161901 () Bool)

(assert (=> b!135656 m!161901))

(assert (=> b!135656 m!161901))

(assert (=> b!135656 m!156533))

(declare-fun m!161903 () Bool)

(assert (=> b!135656 m!161903))

(declare-fun m!161905 () Bool)

(assert (=> b!135653 m!161905))

(assert (=> b!135657 m!161905))

(assert (=> d!42339 m!157851))

(declare-fun m!161907 () Bool)

(assert (=> d!42339 m!161907))

(assert (=> d!42339 m!156571))

(assert (=> b!135659 m!161905))

(assert (=> d!40603 d!42339))

(declare-fun d!42341 () Bool)

(declare-fun lt!70924 () (_ BitVec 32))

(declare-fun lt!70923 () (_ BitVec 32))

(assert (=> d!42341 (= lt!70924 (bvmul (bvxor lt!70923 (bvlshr lt!70923 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!42341 (= lt!70923 ((_ extract 31 0) (bvand (bvxor (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (bvlshr (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!42341 (and (bvsge (mask!7165 newMap!16) #b00000000000000000000000000000000) (let ((res!64209 (let ((h!2338 ((_ extract 31 0) (bvand (bvxor (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (bvlshr (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!15706 (bvmul (bvxor h!2338 (bvlshr h!2338 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!15706 (bvlshr x!15706 #b00000000000000000000000000001101)) (mask!7165 newMap!16)))))) (and (bvslt res!64209 (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001)) (bvsge res!64209 #b00000000000000000000000000000000))))))

(assert (=> d!42341 (= (toIndex!0 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (mask!7165 newMap!16)) (bvand (bvxor lt!70924 (bvlshr lt!70924 #b00000000000000000000000000001101)) (mask!7165 newMap!16)))))

(assert (=> d!40603 d!42341))

(assert (=> d!40603 d!40475))

(declare-fun d!42343 () Bool)

(declare-fun lt!70925 () Bool)

(assert (=> d!42343 (= lt!70925 (select (content!132 (toList!869 lt!69944)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!88346 () Bool)

(assert (=> d!42343 (= lt!70925 e!88346)))

(declare-fun res!65129 () Bool)

(assert (=> d!42343 (=> (not res!65129) (not e!88346))))

(assert (=> d!42343 (= res!65129 ((_ is Cons!1731) (toList!869 lt!69944)))))

(assert (=> d!42343 (= (contains!898 (toList!869 lt!69944) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70925)))

(declare-fun b!135662 () Bool)

(declare-fun e!88345 () Bool)

(assert (=> b!135662 (= e!88346 e!88345)))

(declare-fun res!65130 () Bool)

(assert (=> b!135662 (=> res!65130 e!88345)))

(assert (=> b!135662 (= res!65130 (= (h!2336 (toList!869 lt!69944)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135663 () Bool)

(assert (=> b!135663 (= e!88345 (contains!898 (t!6198 (toList!869 lt!69944)) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42343 res!65129) b!135662))

(assert (= (and b!135662 (not res!65130)) b!135663))

(declare-fun m!161909 () Bool)

(assert (=> d!42343 m!161909))

(declare-fun m!161911 () Bool)

(assert (=> d!42343 m!161911))

(declare-fun m!161913 () Bool)

(assert (=> b!135663 m!161913))

(assert (=> b!133583 d!42343))

(assert (=> b!133331 d!40981))

(assert (=> d!40681 d!40679))

(declare-fun d!42345 () Bool)

(assert (=> d!42345 (= (getValueByKey!171 lt!69474 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!42345 true))

(declare-fun _$22!490 () Unit!4150)

(assert (=> d!42345 (= (choose!834 lt!69474 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) _$22!490)))

(declare-fun bs!5695 () Bool)

(assert (= bs!5695 d!42345))

(assert (=> bs!5695 m!156811))

(assert (=> d!40681 d!42345))

(declare-fun d!42347 () Bool)

(declare-fun res!65131 () Bool)

(declare-fun e!88347 () Bool)

(assert (=> d!42347 (=> res!65131 e!88347)))

(assert (=> d!42347 (= res!65131 (or ((_ is Nil!1732) lt!69474) ((_ is Nil!1732) (t!6198 lt!69474))))))

(assert (=> d!42347 (= (isStrictlySorted!317 lt!69474) e!88347)))

(declare-fun b!135664 () Bool)

(declare-fun e!88348 () Bool)

(assert (=> b!135664 (= e!88347 e!88348)))

(declare-fun res!65132 () Bool)

(assert (=> b!135664 (=> (not res!65132) (not e!88348))))

(assert (=> b!135664 (= res!65132 (bvslt (_1!1314 (h!2336 lt!69474)) (_1!1314 (h!2336 (t!6198 lt!69474)))))))

(declare-fun b!135665 () Bool)

(assert (=> b!135665 (= e!88348 (isStrictlySorted!317 (t!6198 lt!69474)))))

(assert (= (and d!42347 (not res!65131)) b!135664))

(assert (= (and b!135664 res!65132) b!135665))

(declare-fun m!161915 () Bool)

(assert (=> b!135665 m!161915))

(assert (=> d!40681 d!42347))

(declare-fun d!42349 () Bool)

(assert (=> d!42349 (= (apply!116 lt!70114 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!70114) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5696 () Bool)

(assert (= bs!5696 d!42349))

(declare-fun m!161917 () Bool)

(assert (=> bs!5696 m!161917))

(assert (=> bs!5696 m!161917))

(declare-fun m!161919 () Bool)

(assert (=> bs!5696 m!161919))

(assert (=> b!133914 d!42349))

(declare-fun d!42351 () Bool)

(declare-fun res!65133 () Bool)

(declare-fun e!88349 () Bool)

(assert (=> d!42351 (=> res!65133 e!88349)))

(assert (=> d!42351 (= res!65133 (and ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (= (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))))))))

(assert (=> d!42351 (= (containsKey!175 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))) e!88349)))

(declare-fun b!135666 () Bool)

(declare-fun e!88350 () Bool)

(assert (=> b!135666 (= e!88349 e!88350)))

(declare-fun res!65134 () Bool)

(assert (=> b!135666 (=> (not res!65134) (not e!88350))))

(assert (=> b!135666 (= res!65134 (and (or (not ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (bvsle (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))))) ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (bvslt (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307))))))))

(declare-fun b!135667 () Bool)

(assert (=> b!135667 (= e!88350 (containsKey!175 (t!6198 (toList!869 (getCurrentListMap!540 lt!69595 lt!69607 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (select (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)))))))

(assert (= (and d!42351 (not res!65133)) b!135666))

(assert (= (and b!135666 res!65134) b!135667))

(assert (=> b!135667 m!156983))

(declare-fun m!161921 () Bool)

(assert (=> b!135667 m!161921))

(assert (=> d!40895 d!42351))

(assert (=> b!133498 d!41527))

(assert (=> b!133498 d!41529))

(assert (=> b!133659 d!41571))

(declare-fun d!42353 () Bool)

(assert (=> d!42353 (= (apply!116 lt!69869 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!69869) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5697 () Bool)

(assert (= bs!5697 d!42353))

(declare-fun m!161923 () Bool)

(assert (=> bs!5697 m!161923))

(assert (=> bs!5697 m!161923))

(declare-fun m!161925 () Bool)

(assert (=> bs!5697 m!161925))

(assert (=> b!133451 d!42353))

(assert (=> b!133999 d!41497))

(assert (=> b!133999 d!41499))

(declare-fun d!42355 () Bool)

(assert (=> d!42355 (= ($colon$colon!91 e!87136 (ite c!24817 (h!2336 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)))) (tuple2!2609 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))) (Cons!1731 (ite c!24817 (h!2336 (toList!869 (ite c!24499 call!14568 (ite c!24502 call!14564 call!14569)))) (tuple2!2609 (_1!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (_2!1314 (ite (or c!24499 c!24502) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) e!87136))))

(assert (=> bm!14763 d!42355))

(declare-fun lt!70926 () Bool)

(declare-fun d!42357 () Bool)

(assert (=> d!42357 (= lt!70926 (select (content!132 lt!69451) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun e!88352 () Bool)

(assert (=> d!42357 (= lt!70926 e!88352)))

(declare-fun res!65135 () Bool)

(assert (=> d!42357 (=> (not res!65135) (not e!88352))))

(assert (=> d!42357 (= res!65135 ((_ is Cons!1731) lt!69451))))

(assert (=> d!42357 (= (contains!898 lt!69451 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) lt!70926)))

(declare-fun b!135668 () Bool)

(declare-fun e!88351 () Bool)

(assert (=> b!135668 (= e!88352 e!88351)))

(declare-fun res!65136 () Bool)

(assert (=> b!135668 (=> res!65136 e!88351)))

(assert (=> b!135668 (= res!65136 (= (h!2336 lt!69451) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135669 () Bool)

(assert (=> b!135669 (= e!88351 (contains!898 (t!6198 lt!69451) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (= (and d!42357 res!65135) b!135668))

(assert (= (and b!135668 (not res!65136)) b!135669))

(declare-fun m!161927 () Bool)

(assert (=> d!42357 m!161927))

(declare-fun m!161929 () Bool)

(assert (=> d!42357 m!161929))

(declare-fun m!161931 () Bool)

(assert (=> b!135669 m!161931))

(assert (=> b!133838 d!42357))

(declare-fun d!42359 () Bool)

(assert (=> d!42359 (= (apply!116 lt!69843 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!69843) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5698 () Bool)

(assert (= bs!5698 d!42359))

(declare-fun m!161933 () Bool)

(assert (=> bs!5698 m!161933))

(assert (=> bs!5698 m!161933))

(declare-fun m!161935 () Bool)

(assert (=> bs!5698 m!161935))

(assert (=> b!133428 d!42359))

(declare-fun d!42361 () Bool)

(assert (=> d!42361 (= (isEmpty!415 (getValueByKey!171 (toList!869 call!14629) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355))) (not ((_ is Some!176) (getValueByKey!171 (toList!869 call!14629) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))))

(assert (=> d!40633 d!42361))

(declare-fun d!42363 () Bool)

(declare-fun c!25385 () Bool)

(assert (=> d!42363 (= c!25385 ((_ is Nil!1732) (toList!869 lt!69449)))))

(declare-fun e!88353 () (InoxSet tuple2!2608))

(assert (=> d!42363 (= (content!132 (toList!869 lt!69449)) e!88353)))

(declare-fun b!135670 () Bool)

(assert (=> b!135670 (= e!88353 ((as const (Array tuple2!2608 Bool)) false))))

(declare-fun b!135671 () Bool)

(assert (=> b!135671 (= e!88353 ((_ map or) (store ((as const (Array tuple2!2608 Bool)) false) (h!2336 (toList!869 lt!69449)) true) (content!132 (t!6198 (toList!869 lt!69449)))))))

(assert (= (and d!42363 c!25385) b!135670))

(assert (= (and d!42363 (not c!25385)) b!135671))

(declare-fun m!161937 () Bool)

(assert (=> b!135671 m!161937))

(assert (=> b!135671 m!161101))

(assert (=> d!40719 d!42363))

(declare-fun d!42365 () Bool)

(declare-fun e!88354 () Bool)

(assert (=> d!42365 e!88354))

(declare-fun res!65137 () Bool)

(assert (=> d!42365 (=> res!65137 e!88354)))

(declare-fun lt!70927 () Bool)

(assert (=> d!42365 (= res!65137 (not lt!70927))))

(declare-fun lt!70929 () Bool)

(assert (=> d!42365 (= lt!70927 lt!70929)))

(declare-fun lt!70928 () Unit!4150)

(declare-fun e!88355 () Unit!4150)

(assert (=> d!42365 (= lt!70928 e!88355)))

(declare-fun c!25386 () Bool)

(assert (=> d!42365 (= c!25386 lt!70929)))

(assert (=> d!42365 (= lt!70929 (containsKey!175 (toList!869 lt!69760) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42365 (= (contains!896 lt!69760 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70927)))

(declare-fun b!135672 () Bool)

(declare-fun lt!70930 () Unit!4150)

(assert (=> b!135672 (= e!88355 lt!70930)))

(assert (=> b!135672 (= lt!70930 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69760) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135672 (isDefined!125 (getValueByKey!171 (toList!869 lt!69760) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135673 () Bool)

(declare-fun Unit!4277 () Unit!4150)

(assert (=> b!135673 (= e!88355 Unit!4277)))

(declare-fun b!135674 () Bool)

(assert (=> b!135674 (= e!88354 (isDefined!125 (getValueByKey!171 (toList!869 lt!69760) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42365 c!25386) b!135672))

(assert (= (and d!42365 (not c!25386)) b!135673))

(assert (= (and d!42365 (not res!65137)) b!135674))

(declare-fun m!161939 () Bool)

(assert (=> d!42365 m!161939))

(declare-fun m!161941 () Bool)

(assert (=> b!135672 m!161941))

(declare-fun m!161943 () Bool)

(assert (=> b!135672 m!161943))

(assert (=> b!135672 m!161943))

(declare-fun m!161945 () Bool)

(assert (=> b!135672 m!161945))

(assert (=> b!135674 m!161943))

(assert (=> b!135674 m!161943))

(assert (=> b!135674 m!161945))

(assert (=> d!40491 d!42365))

(assert (=> d!40491 d!40475))

(declare-fun d!42367 () Bool)

(declare-fun c!25387 () Bool)

(assert (=> d!42367 (= c!25387 ((_ is Nil!1732) (toList!869 lt!69356)))))

(declare-fun e!88356 () (InoxSet tuple2!2608))

(assert (=> d!42367 (= (content!132 (toList!869 lt!69356)) e!88356)))

(declare-fun b!135675 () Bool)

(assert (=> b!135675 (= e!88356 ((as const (Array tuple2!2608 Bool)) false))))

(declare-fun b!135676 () Bool)

(assert (=> b!135676 (= e!88356 ((_ map or) (store ((as const (Array tuple2!2608 Bool)) false) (h!2336 (toList!869 lt!69356)) true) (content!132 (t!6198 (toList!869 lt!69356)))))))

(assert (= (and d!42367 c!25387) b!135675))

(assert (= (and d!42367 (not c!25387)) b!135676))

(declare-fun m!161947 () Bool)

(assert (=> b!135676 m!161947))

(assert (=> b!135676 m!160901))

(assert (=> d!40455 d!42367))

(declare-fun d!42369 () Bool)

(assert (=> d!42369 (= (apply!116 lt!69988 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1491 (getValueByKey!171 (toList!869 lt!69988) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!5699 () Bool)

(assert (= bs!5699 d!42369))

(assert (=> bs!5699 m!158121))

(assert (=> bs!5699 m!161155))

(assert (=> bs!5699 m!161155))

(declare-fun m!161949 () Bool)

(assert (=> bs!5699 m!161949))

(assert (=> b!133663 d!42369))

(assert (=> b!133663 d!41439))

(declare-fun d!42371 () Bool)

(declare-fun e!88357 () Bool)

(assert (=> d!42371 e!88357))

(declare-fun res!65138 () Bool)

(assert (=> d!42371 (=> res!65138 e!88357)))

(declare-fun lt!70931 () Bool)

(assert (=> d!42371 (= res!65138 (not lt!70931))))

(declare-fun lt!70933 () Bool)

(assert (=> d!42371 (= lt!70931 lt!70933)))

(declare-fun lt!70932 () Unit!4150)

(declare-fun e!88358 () Unit!4150)

(assert (=> d!42371 (= lt!70932 e!88358)))

(declare-fun c!25388 () Bool)

(assert (=> d!42371 (= c!25388 lt!70933)))

(assert (=> d!42371 (= lt!70933 (containsKey!175 (toList!869 lt!69830) (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))))

(assert (=> d!42371 (= (contains!896 lt!69830 (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))) lt!70931)))

(declare-fun b!135677 () Bool)

(declare-fun lt!70934 () Unit!4150)

(assert (=> b!135677 (= e!88358 lt!70934)))

(assert (=> b!135677 (= lt!70934 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69830) (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))))

(assert (=> b!135677 (isDefined!125 (getValueByKey!171 (toList!869 lt!69830) (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))))

(declare-fun b!135678 () Bool)

(declare-fun Unit!4278 () Unit!4150)

(assert (=> b!135678 (= e!88358 Unit!4278)))

(declare-fun b!135679 () Bool)

(assert (=> b!135679 (= e!88357 (isDefined!125 (getValueByKey!171 (toList!869 lt!69830) (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))))))))

(assert (= (and d!42371 c!25388) b!135677))

(assert (= (and d!42371 (not c!25388)) b!135678))

(assert (= (and d!42371 (not res!65138)) b!135679))

(declare-fun m!161951 () Bool)

(assert (=> d!42371 m!161951))

(declare-fun m!161953 () Bool)

(assert (=> b!135677 m!161953))

(assert (=> b!135677 m!157587))

(assert (=> b!135677 m!157587))

(declare-fun m!161955 () Bool)

(assert (=> b!135677 m!161955))

(assert (=> b!135679 m!157587))

(assert (=> b!135679 m!157587))

(assert (=> b!135679 m!161955))

(assert (=> d!40543 d!42371))

(declare-fun b!135680 () Bool)

(declare-fun e!88359 () Option!177)

(assert (=> b!135680 (= e!88359 (Some!176 (_2!1314 (h!2336 lt!69832))))))

(declare-fun b!135683 () Bool)

(declare-fun e!88360 () Option!177)

(assert (=> b!135683 (= e!88360 None!175)))

(declare-fun b!135682 () Bool)

(assert (=> b!135682 (= e!88360 (getValueByKey!171 (t!6198 lt!69832) (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))))

(declare-fun b!135681 () Bool)

(assert (=> b!135681 (= e!88359 e!88360)))

(declare-fun c!25390 () Bool)

(assert (=> b!135681 (= c!25390 (and ((_ is Cons!1731) lt!69832) (not (= (_1!1314 (h!2336 lt!69832)) (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))))))

(declare-fun c!25389 () Bool)

(declare-fun d!42373 () Bool)

(assert (=> d!42373 (= c!25389 (and ((_ is Cons!1731) lt!69832) (= (_1!1314 (h!2336 lt!69832)) (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))))))))

(assert (=> d!42373 (= (getValueByKey!171 lt!69832 (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))) e!88359)))

(assert (= (and d!42373 c!25389) b!135680))

(assert (= (and d!42373 (not c!25389)) b!135681))

(assert (= (and b!135681 c!25390) b!135682))

(assert (= (and b!135681 (not c!25390)) b!135683))

(declare-fun m!161957 () Bool)

(assert (=> b!135682 m!161957))

(assert (=> d!40543 d!42373))

(declare-fun d!42375 () Bool)

(assert (=> d!42375 (= (getValueByKey!171 lt!69832 (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))) (Some!176 (_2!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))))

(declare-fun lt!70935 () Unit!4150)

(assert (=> d!42375 (= lt!70935 (choose!834 lt!69832 (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))))

(declare-fun e!88361 () Bool)

(assert (=> d!42375 e!88361))

(declare-fun res!65139 () Bool)

(assert (=> d!42375 (=> (not res!65139) (not e!88361))))

(assert (=> d!42375 (= res!65139 (isStrictlySorted!317 lt!69832))))

(assert (=> d!42375 (= (lemmaContainsTupThenGetReturnValue!88 lt!69832 (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))) lt!70935)))

(declare-fun b!135684 () Bool)

(declare-fun res!65140 () Bool)

(assert (=> b!135684 (=> (not res!65140) (not e!88361))))

(assert (=> b!135684 (= res!65140 (containsKey!175 lt!69832 (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))))

(declare-fun b!135685 () Bool)

(assert (=> b!135685 (= e!88361 (contains!898 lt!69832 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))))))))

(assert (= (and d!42375 res!65139) b!135684))

(assert (= (and b!135684 res!65140) b!135685))

(assert (=> d!42375 m!157581))

(declare-fun m!161959 () Bool)

(assert (=> d!42375 m!161959))

(declare-fun m!161961 () Bool)

(assert (=> d!42375 m!161961))

(declare-fun m!161963 () Bool)

(assert (=> b!135684 m!161963))

(declare-fun m!161965 () Bool)

(assert (=> b!135685 m!161965))

(assert (=> d!40543 d!42375))

(declare-fun bm!14906 () Bool)

(declare-fun call!14909 () List!1735)

(declare-fun call!14910 () List!1735)

(assert (=> bm!14906 (= call!14909 call!14910)))

(declare-fun b!135686 () Bool)

(declare-fun lt!70936 () List!1735)

(declare-fun e!88364 () Bool)

(assert (=> b!135686 (= e!88364 (contains!898 lt!70936 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))))))))

(declare-fun b!135687 () Bool)

(declare-fun e!88366 () List!1735)

(assert (=> b!135687 (= e!88366 call!14910)))

(declare-fun b!135688 () Bool)

(declare-fun res!65141 () Bool)

(assert (=> b!135688 (=> (not res!65141) (not e!88364))))

(assert (=> b!135688 (= res!65141 (containsKey!175 lt!70936 (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))))

(declare-fun e!88362 () List!1735)

(declare-fun b!135689 () Bool)

(assert (=> b!135689 (= e!88362 (insertStrictlySorted!90 (t!6198 (toList!869 lt!69424)) (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))))

(declare-fun b!135690 () Bool)

(declare-fun e!88363 () List!1735)

(assert (=> b!135690 (= e!88363 call!14909)))

(declare-fun bm!14907 () Bool)

(declare-fun call!14911 () List!1735)

(assert (=> bm!14907 (= call!14910 call!14911)))

(declare-fun b!135692 () Bool)

(declare-fun c!25391 () Bool)

(declare-fun c!25393 () Bool)

(assert (=> b!135692 (= e!88362 (ite c!25393 (t!6198 (toList!869 lt!69424)) (ite c!25391 (Cons!1731 (h!2336 (toList!869 lt!69424)) (t!6198 (toList!869 lt!69424))) Nil!1732)))))

(declare-fun b!135693 () Bool)

(declare-fun e!88365 () List!1735)

(assert (=> b!135693 (= e!88365 call!14911)))

(declare-fun b!135694 () Bool)

(assert (=> b!135694 (= c!25391 (and ((_ is Cons!1731) (toList!869 lt!69424)) (bvsgt (_1!1314 (h!2336 (toList!869 lt!69424))) (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))))))))

(assert (=> b!135694 (= e!88366 e!88363)))

(declare-fun d!42377 () Bool)

(assert (=> d!42377 e!88364))

(declare-fun res!65142 () Bool)

(assert (=> d!42377 (=> (not res!65142) (not e!88364))))

(assert (=> d!42377 (= res!65142 (isStrictlySorted!317 lt!70936))))

(assert (=> d!42377 (= lt!70936 e!88365)))

(declare-fun c!25392 () Bool)

(assert (=> d!42377 (= c!25392 (and ((_ is Cons!1731) (toList!869 lt!69424)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69424))) (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))))))))

(assert (=> d!42377 (isStrictlySorted!317 (toList!869 lt!69424))))

(assert (=> d!42377 (= (insertStrictlySorted!90 (toList!869 lt!69424) (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))) lt!70936)))

(declare-fun b!135691 () Bool)

(assert (=> b!135691 (= e!88365 e!88366)))

(assert (=> b!135691 (= c!25393 (and ((_ is Cons!1731) (toList!869 lt!69424)) (= (_1!1314 (h!2336 (toList!869 lt!69424))) (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))))))))

(declare-fun b!135695 () Bool)

(assert (=> b!135695 (= e!88363 call!14909)))

(declare-fun bm!14908 () Bool)

(assert (=> bm!14908 (= call!14911 ($colon$colon!91 e!88362 (ite c!25392 (h!2336 (toList!869 lt!69424)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16))) (_2!1314 (tuple2!2609 lt!69421 (minValue!2720 newMap!16)))))))))

(declare-fun c!25394 () Bool)

(assert (=> bm!14908 (= c!25394 c!25392)))

(assert (= (and d!42377 c!25392) b!135693))

(assert (= (and d!42377 (not c!25392)) b!135691))

(assert (= (and b!135691 c!25393) b!135687))

(assert (= (and b!135691 (not c!25393)) b!135694))

(assert (= (and b!135694 c!25391) b!135695))

(assert (= (and b!135694 (not c!25391)) b!135690))

(assert (= (or b!135695 b!135690) bm!14906))

(assert (= (or b!135687 bm!14906) bm!14907))

(assert (= (or b!135693 bm!14907) bm!14908))

(assert (= (and bm!14908 c!25394) b!135689))

(assert (= (and bm!14908 (not c!25394)) b!135692))

(assert (= (and d!42377 res!65142) b!135688))

(assert (= (and b!135688 res!65141) b!135686))

(declare-fun m!161967 () Bool)

(assert (=> b!135688 m!161967))

(declare-fun m!161969 () Bool)

(assert (=> b!135686 m!161969))

(declare-fun m!161971 () Bool)

(assert (=> d!42377 m!161971))

(declare-fun m!161973 () Bool)

(assert (=> d!42377 m!161973))

(declare-fun m!161975 () Bool)

(assert (=> bm!14908 m!161975))

(declare-fun m!161977 () Bool)

(assert (=> b!135689 m!161977))

(assert (=> d!40543 d!42377))

(declare-fun d!42379 () Bool)

(declare-fun lt!70937 () Bool)

(assert (=> d!42379 (= lt!70937 (select (content!132 (t!6198 (toList!869 lt!69376))) (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88368 () Bool)

(assert (=> d!42379 (= lt!70937 e!88368)))

(declare-fun res!65143 () Bool)

(assert (=> d!42379 (=> (not res!65143) (not e!88368))))

(assert (=> d!42379 (= res!65143 ((_ is Cons!1731) (t!6198 (toList!869 lt!69376))))))

(assert (=> d!42379 (= (contains!898 (t!6198 (toList!869 lt!69376)) (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70937)))

(declare-fun b!135696 () Bool)

(declare-fun e!88367 () Bool)

(assert (=> b!135696 (= e!88368 e!88367)))

(declare-fun res!65144 () Bool)

(assert (=> b!135696 (=> res!65144 e!88367)))

(assert (=> b!135696 (= res!65144 (= (h!2336 (t!6198 (toList!869 lt!69376))) (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135697 () Bool)

(assert (=> b!135697 (= e!88367 (contains!898 (t!6198 (t!6198 (toList!869 lt!69376))) (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42379 res!65143) b!135696))

(assert (= (and b!135696 (not res!65144)) b!135697))

(assert (=> d!42379 m!159089))

(declare-fun m!161979 () Bool)

(assert (=> d!42379 m!161979))

(declare-fun m!161981 () Bool)

(assert (=> b!135697 m!161981))

(assert (=> b!133717 d!42379))

(declare-fun d!42381 () Bool)

(assert (=> d!42381 (= ($colon$colon!91 e!86813 (ite c!24657 (h!2336 (toList!869 lt!69229)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))) (Cons!1731 (ite c!24657 (h!2336 (toList!869 lt!69229)) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69226 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) e!86813))))

(assert (=> bm!14703 d!42381))

(declare-fun d!42383 () Bool)

(declare-fun lt!70938 () Bool)

(assert (=> d!42383 (= lt!70938 (select (content!132 (toList!869 lt!69893)) (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))))))

(declare-fun e!88370 () Bool)

(assert (=> d!42383 (= lt!70938 e!88370)))

(declare-fun res!65145 () Bool)

(assert (=> d!42383 (=> (not res!65145) (not e!88370))))

(assert (=> d!42383 (= res!65145 ((_ is Cons!1731) (toList!869 lt!69893)))))

(assert (=> d!42383 (= (contains!898 (toList!869 lt!69893) (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))) lt!70938)))

(declare-fun b!135698 () Bool)

(declare-fun e!88369 () Bool)

(assert (=> b!135698 (= e!88370 e!88369)))

(declare-fun res!65146 () Bool)

(assert (=> b!135698 (=> res!65146 e!88369)))

(assert (=> b!135698 (= res!65146 (= (h!2336 (toList!869 lt!69893)) (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))))))

(declare-fun b!135699 () Bool)

(assert (=> b!135699 (= e!88369 (contains!898 (t!6198 (toList!869 lt!69893)) (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))))))

(assert (= (and d!42383 res!65145) b!135698))

(assert (= (and b!135698 (not res!65146)) b!135699))

(declare-fun m!161983 () Bool)

(assert (=> d!42383 m!161983))

(declare-fun m!161985 () Bool)

(assert (=> d!42383 m!161985))

(declare-fun m!161987 () Bool)

(assert (=> b!135699 m!161987))

(assert (=> b!133493 d!42383))

(declare-fun d!42385 () Bool)

(declare-fun e!88371 () Bool)

(assert (=> d!42385 e!88371))

(declare-fun res!65147 () Bool)

(assert (=> d!42385 (=> res!65147 e!88371)))

(declare-fun lt!70939 () Bool)

(assert (=> d!42385 (= res!65147 (not lt!70939))))

(declare-fun lt!70941 () Bool)

(assert (=> d!42385 (= lt!70939 lt!70941)))

(declare-fun lt!70940 () Unit!4150)

(declare-fun e!88372 () Unit!4150)

(assert (=> d!42385 (= lt!70940 e!88372)))

(declare-fun c!25395 () Bool)

(assert (=> d!42385 (= c!25395 lt!70941)))

(assert (=> d!42385 (= lt!70941 (containsKey!175 (toList!869 lt!69767) (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(assert (=> d!42385 (= (contains!896 lt!69767 (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)) lt!70939)))

(declare-fun b!135700 () Bool)

(declare-fun lt!70942 () Unit!4150)

(assert (=> b!135700 (= e!88372 lt!70942)))

(assert (=> b!135700 (= lt!70942 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69767) (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(assert (=> b!135700 (isDefined!125 (getValueByKey!171 (toList!869 lt!69767) (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000)))))

(declare-fun b!135701 () Bool)

(declare-fun Unit!4279 () Unit!4150)

(assert (=> b!135701 (= e!88372 Unit!4279)))

(declare-fun b!135702 () Bool)

(assert (=> b!135702 (= e!88371 (isDefined!125 (getValueByKey!171 (toList!869 lt!69767) (select (arr!2260 (_keys!4614 (_2!1315 lt!69327))) #b00000000000000000000000000000000))))))

(assert (= (and d!42385 c!25395) b!135700))

(assert (= (and d!42385 (not c!25395)) b!135701))

(assert (= (and d!42385 (not res!65147)) b!135702))

(assert (=> d!42385 m!157397))

(declare-fun m!161989 () Bool)

(assert (=> d!42385 m!161989))

(assert (=> b!135700 m!157397))

(declare-fun m!161991 () Bool)

(assert (=> b!135700 m!161991))

(assert (=> b!135700 m!157397))

(assert (=> b!135700 m!160161))

(assert (=> b!135700 m!160161))

(declare-fun m!161993 () Bool)

(assert (=> b!135700 m!161993))

(assert (=> b!135702 m!157397))

(assert (=> b!135702 m!160161))

(assert (=> b!135702 m!160161))

(assert (=> b!135702 m!161993))

(assert (=> b!133335 d!42385))

(assert (=> d!40861 d!40633))

(assert (=> d!40861 d!40635))

(declare-fun d!42387 () Bool)

(assert (=> d!42387 (isDefined!125 (getValueByKey!171 (toList!869 call!14629) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!42387 true))

(declare-fun _$12!404 () Unit!4150)

(assert (=> d!42387 (= (choose!831 (toList!869 call!14629) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) _$12!404)))

(declare-fun bs!5700 () Bool)

(assert (= bs!5700 d!42387))

(assert (=> bs!5700 m!156287))

(assert (=> bs!5700 m!156529))

(assert (=> bs!5700 m!156529))

(assert (=> bs!5700 m!156531))

(assert (=> d!40861 d!42387))

(declare-fun d!42389 () Bool)

(declare-fun res!65148 () Bool)

(declare-fun e!88373 () Bool)

(assert (=> d!42389 (=> res!65148 e!88373)))

(assert (=> d!42389 (= res!65148 (or ((_ is Nil!1732) (toList!869 call!14629)) ((_ is Nil!1732) (t!6198 (toList!869 call!14629)))))))

(assert (=> d!42389 (= (isStrictlySorted!317 (toList!869 call!14629)) e!88373)))

(declare-fun b!135703 () Bool)

(declare-fun e!88374 () Bool)

(assert (=> b!135703 (= e!88373 e!88374)))

(declare-fun res!65149 () Bool)

(assert (=> b!135703 (=> (not res!65149) (not e!88374))))

(assert (=> b!135703 (= res!65149 (bvslt (_1!1314 (h!2336 (toList!869 call!14629))) (_1!1314 (h!2336 (t!6198 (toList!869 call!14629))))))))

(declare-fun b!135704 () Bool)

(assert (=> b!135704 (= e!88374 (isStrictlySorted!317 (t!6198 (toList!869 call!14629))))))

(assert (= (and d!42389 (not res!65148)) b!135703))

(assert (= (and b!135703 res!65149) b!135704))

(declare-fun m!161995 () Bool)

(assert (=> b!135704 m!161995))

(assert (=> d!40861 d!42389))

(declare-fun lt!70943 () Bool)

(declare-fun d!42391 () Bool)

(assert (=> d!42391 (= lt!70943 (select (content!132 (toList!869 lt!70046)) (tuple2!2609 lt!69515 (minValue!2720 newMap!16))))))

(declare-fun e!88376 () Bool)

(assert (=> d!42391 (= lt!70943 e!88376)))

(declare-fun res!65150 () Bool)

(assert (=> d!42391 (=> (not res!65150) (not e!88376))))

(assert (=> d!42391 (= res!65150 ((_ is Cons!1731) (toList!869 lt!70046)))))

(assert (=> d!42391 (= (contains!898 (toList!869 lt!70046) (tuple2!2609 lt!69515 (minValue!2720 newMap!16))) lt!70943)))

(declare-fun b!135705 () Bool)

(declare-fun e!88375 () Bool)

(assert (=> b!135705 (= e!88376 e!88375)))

(declare-fun res!65151 () Bool)

(assert (=> b!135705 (=> res!65151 e!88375)))

(assert (=> b!135705 (= res!65151 (= (h!2336 (toList!869 lt!70046)) (tuple2!2609 lt!69515 (minValue!2720 newMap!16))))))

(declare-fun b!135706 () Bool)

(assert (=> b!135706 (= e!88375 (contains!898 (t!6198 (toList!869 lt!70046)) (tuple2!2609 lt!69515 (minValue!2720 newMap!16))))))

(assert (= (and d!42391 res!65150) b!135705))

(assert (= (and b!135705 (not res!65151)) b!135706))

(declare-fun m!161997 () Bool)

(assert (=> d!42391 m!161997))

(declare-fun m!161999 () Bool)

(assert (=> d!42391 m!161999))

(declare-fun m!162001 () Bool)

(assert (=> b!135706 m!162001))

(assert (=> b!133764 d!42391))

(declare-fun d!42393 () Bool)

(assert (=> d!42393 (isDefined!125 (getValueByKey!171 (toList!869 lt!69230) lt!69218))))

(declare-fun lt!70944 () Unit!4150)

(assert (=> d!42393 (= lt!70944 (choose!831 (toList!869 lt!69230) lt!69218))))

(declare-fun e!88377 () Bool)

(assert (=> d!42393 e!88377))

(declare-fun res!65152 () Bool)

(assert (=> d!42393 (=> (not res!65152) (not e!88377))))

(assert (=> d!42393 (= res!65152 (isStrictlySorted!317 (toList!869 lt!69230)))))

(assert (=> d!42393 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69230) lt!69218) lt!70944)))

(declare-fun b!135707 () Bool)

(assert (=> b!135707 (= e!88377 (containsKey!175 (toList!869 lt!69230) lt!69218))))

(assert (= (and d!42393 res!65152) b!135707))

(assert (=> d!42393 m!156781))

(assert (=> d!42393 m!156781))

(assert (=> d!42393 m!158745))

(declare-fun m!162003 () Bool)

(assert (=> d!42393 m!162003))

(assert (=> d!42393 m!157895))

(assert (=> b!135707 m!158741))

(assert (=> b!134006 d!42393))

(assert (=> b!134006 d!41939))

(assert (=> b!134006 d!40907))

(assert (=> d!40655 d!40467))

(assert (=> d!40655 d!40469))

(assert (=> b!133278 d!40473))

(assert (=> b!133251 d!40473))

(declare-fun lt!70945 () Bool)

(declare-fun d!42395 () Bool)

(assert (=> d!42395 (= lt!70945 (select (content!132 (toList!869 lt!70036)) (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))

(declare-fun e!88379 () Bool)

(assert (=> d!42395 (= lt!70945 e!88379)))

(declare-fun res!65153 () Bool)

(assert (=> d!42395 (=> (not res!65153) (not e!88379))))

(assert (=> d!42395 (= res!65153 ((_ is Cons!1731) (toList!869 lt!70036)))))

(assert (=> d!42395 (= (contains!898 (toList!869 lt!70036) (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!70945)))

(declare-fun b!135708 () Bool)

(declare-fun e!88378 () Bool)

(assert (=> b!135708 (= e!88379 e!88378)))

(declare-fun res!65154 () Bool)

(assert (=> b!135708 (=> res!65154 e!88378)))

(assert (=> b!135708 (= res!65154 (= (h!2336 (toList!869 lt!70036)) (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))

(declare-fun b!135709 () Bool)

(assert (=> b!135709 (= e!88378 (contains!898 (t!6198 (toList!869 lt!70036)) (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))

(assert (= (and d!42395 res!65153) b!135708))

(assert (= (and b!135708 (not res!65154)) b!135709))

(declare-fun m!162005 () Bool)

(assert (=> d!42395 m!162005))

(declare-fun m!162007 () Bool)

(assert (=> d!42395 m!162007))

(declare-fun m!162009 () Bool)

(assert (=> b!135709 m!162009))

(assert (=> b!133758 d!42395))

(declare-fun b!135710 () Bool)

(declare-fun e!88380 () Option!177)

(assert (=> b!135710 (= e!88380 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 lt!69229))))))))

(declare-fun b!135713 () Bool)

(declare-fun e!88381 () Option!177)

(assert (=> b!135713 (= e!88381 None!175)))

(declare-fun b!135712 () Bool)

(assert (=> b!135712 (= e!88381 (getValueByKey!171 (t!6198 (t!6198 (toList!869 lt!69229))) lt!69228))))

(declare-fun b!135711 () Bool)

(assert (=> b!135711 (= e!88380 e!88381)))

(declare-fun c!25397 () Bool)

(assert (=> b!135711 (= c!25397 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69229))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69229)))) lt!69228))))))

(declare-fun d!42397 () Bool)

(declare-fun c!25396 () Bool)

(assert (=> d!42397 (= c!25396 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69229))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69229)))) lt!69228)))))

(assert (=> d!42397 (= (getValueByKey!171 (t!6198 (toList!869 lt!69229)) lt!69228) e!88380)))

(assert (= (and d!42397 c!25396) b!135710))

(assert (= (and d!42397 (not c!25396)) b!135711))

(assert (= (and b!135711 c!25397) b!135712))

(assert (= (and b!135711 (not c!25397)) b!135713))

(declare-fun m!162011 () Bool)

(assert (=> b!135712 m!162011))

(assert (=> b!133642 d!42397))

(declare-fun d!42399 () Bool)

(declare-fun e!88382 () Bool)

(assert (=> d!42399 e!88382))

(declare-fun res!65155 () Bool)

(assert (=> d!42399 (=> res!65155 e!88382)))

(declare-fun lt!70946 () Bool)

(assert (=> d!42399 (= res!65155 (not lt!70946))))

(declare-fun lt!70948 () Bool)

(assert (=> d!42399 (= lt!70946 lt!70948)))

(declare-fun lt!70947 () Unit!4150)

(declare-fun e!88383 () Unit!4150)

(assert (=> d!42399 (= lt!70947 e!88383)))

(declare-fun c!25398 () Bool)

(assert (=> d!42399 (= c!25398 lt!70948)))

(assert (=> d!42399 (= lt!70948 (containsKey!175 (toList!869 lt!69760) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42399 (= (contains!896 lt!69760 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70946)))

(declare-fun b!135714 () Bool)

(declare-fun lt!70949 () Unit!4150)

(assert (=> b!135714 (= e!88383 lt!70949)))

(assert (=> b!135714 (= lt!70949 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69760) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135714 (isDefined!125 (getValueByKey!171 (toList!869 lt!69760) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135715 () Bool)

(declare-fun Unit!4280 () Unit!4150)

(assert (=> b!135715 (= e!88383 Unit!4280)))

(declare-fun b!135716 () Bool)

(assert (=> b!135716 (= e!88382 (isDefined!125 (getValueByKey!171 (toList!869 lt!69760) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42399 c!25398) b!135714))

(assert (= (and d!42399 (not c!25398)) b!135715))

(assert (= (and d!42399 (not res!65155)) b!135716))

(declare-fun m!162013 () Bool)

(assert (=> d!42399 m!162013))

(declare-fun m!162015 () Bool)

(assert (=> b!135714 m!162015))

(declare-fun m!162017 () Bool)

(assert (=> b!135714 m!162017))

(assert (=> b!135714 m!162017))

(declare-fun m!162019 () Bool)

(assert (=> b!135714 m!162019))

(assert (=> b!135716 m!162017))

(assert (=> b!135716 m!162017))

(assert (=> b!135716 m!162019))

(assert (=> b!133314 d!42399))

(declare-fun d!42401 () Bool)

(declare-fun res!65156 () Bool)

(declare-fun e!88384 () Bool)

(assert (=> d!42401 (=> res!65156 e!88384)))

(assert (=> d!42401 (= res!65156 (and ((_ is Cons!1731) (toList!869 lt!69510)) (= (_1!1314 (h!2336 (toList!869 lt!69510))) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!42401 (= (containsKey!175 (toList!869 lt!69510) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) e!88384)))

(declare-fun b!135717 () Bool)

(declare-fun e!88385 () Bool)

(assert (=> b!135717 (= e!88384 e!88385)))

(declare-fun res!65157 () Bool)

(assert (=> b!135717 (=> (not res!65157) (not e!88385))))

(assert (=> b!135717 (= res!65157 (and (or (not ((_ is Cons!1731) (toList!869 lt!69510))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69510))) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1731) (toList!869 lt!69510)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69510))) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!135718 () Bool)

(assert (=> b!135718 (= e!88385 (containsKey!175 (t!6198 (toList!869 lt!69510)) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!42401 (not res!65156)) b!135717))

(assert (= (and b!135717 res!65157) b!135718))

(assert (=> b!135718 m!156533))

(declare-fun m!162021 () Bool)

(assert (=> b!135718 m!162021))

(assert (=> d!40457 d!42401))

(declare-fun d!42403 () Bool)

(assert (=> d!42403 (= (apply!116 lt!70136 (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)) (get!1491 (getValueByKey!171 (toList!869 lt!70136) (select (arr!2260 (array!4781 (store (arr!2260 (_keys!4614 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) (size!2529 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000))))))

(declare-fun bs!5701 () Bool)

(assert (= bs!5701 d!42403))

(assert (=> bs!5701 m!158517))

(assert (=> bs!5701 m!160415))

(assert (=> bs!5701 m!160415))

(declare-fun m!162023 () Bool)

(assert (=> bs!5701 m!162023))

(assert (=> b!133952 d!42403))

(declare-fun c!25399 () Bool)

(declare-fun d!42405 () Bool)

(assert (=> d!42405 (= c!25399 ((_ is ValueCellFull!1095) (select (arr!2261 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!88386 () V!3483)

(assert (=> d!42405 (= (get!1488 (select (arr!2261 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!88386)))

(declare-fun b!135719 () Bool)

(assert (=> b!135719 (= e!88386 (get!1489 (select (arr!2261 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135720 () Bool)

(assert (=> b!135720 (= e!88386 (get!1490 (select (arr!2261 (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (ite c!24547 (index!3303 lt!69307) (index!3300 lt!69307)) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42405 c!25399) b!135719))

(assert (= (and d!42405 (not c!25399)) b!135720))

(assert (=> b!135719 m!158625))

(assert (=> b!135719 m!156647))

(declare-fun m!162025 () Bool)

(assert (=> b!135719 m!162025))

(assert (=> b!135720 m!158625))

(assert (=> b!135720 m!156647))

(declare-fun m!162027 () Bool)

(assert (=> b!135720 m!162027))

(assert (=> b!133952 d!42405))

(declare-fun b!135721 () Bool)

(declare-fun e!88387 () Option!177)

(assert (=> b!135721 (= e!88387 (Some!176 (_2!1314 (h!2336 (toList!869 lt!70055)))))))

(declare-fun b!135724 () Bool)

(declare-fun e!88388 () Option!177)

(assert (=> b!135724 (= e!88388 None!175)))

(declare-fun b!135723 () Bool)

(assert (=> b!135723 (= e!88388 (getValueByKey!171 (t!6198 (toList!869 lt!70055)) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!135722 () Bool)

(assert (=> b!135722 (= e!88387 e!88388)))

(declare-fun c!25401 () Bool)

(assert (=> b!135722 (= c!25401 (and ((_ is Cons!1731) (toList!869 lt!70055)) (not (= (_1!1314 (h!2336 (toList!869 lt!70055))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun c!25400 () Bool)

(declare-fun d!42407 () Bool)

(assert (=> d!42407 (= c!25400 (and ((_ is Cons!1731) (toList!869 lt!70055)) (= (_1!1314 (h!2336 (toList!869 lt!70055))) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!42407 (= (getValueByKey!171 (toList!869 lt!70055) (_1!1314 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) e!88387)))

(assert (= (and d!42407 c!25400) b!135721))

(assert (= (and d!42407 (not c!25400)) b!135722))

(assert (= (and b!135722 c!25401) b!135723))

(assert (= (and b!135722 (not c!25401)) b!135724))

(declare-fun m!162029 () Bool)

(assert (=> b!135723 m!162029))

(assert (=> b!133772 d!42407))

(declare-fun d!42409 () Bool)

(assert (=> d!42409 (= (apply!116 lt!70114 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!70114) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5702 () Bool)

(assert (= bs!5702 d!42409))

(assert (=> bs!5702 m!161755))

(assert (=> bs!5702 m!161755))

(declare-fun m!162031 () Bool)

(assert (=> bs!5702 m!162031))

(assert (=> b!133930 d!42409))

(declare-fun d!42411 () Bool)

(declare-fun res!65158 () Bool)

(declare-fun e!88389 () Bool)

(assert (=> d!42411 (=> res!65158 e!88389)))

(assert (=> d!42411 (= res!65158 (and ((_ is Cons!1731) lt!69926) (= (_1!1314 (h!2336 lt!69926)) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!42411 (= (containsKey!175 lt!69926 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!88389)))

(declare-fun b!135725 () Bool)

(declare-fun e!88390 () Bool)

(assert (=> b!135725 (= e!88389 e!88390)))

(declare-fun res!65159 () Bool)

(assert (=> b!135725 (=> (not res!65159) (not e!88390))))

(assert (=> b!135725 (= res!65159 (and (or (not ((_ is Cons!1731) lt!69926)) (bvsle (_1!1314 (h!2336 lt!69926)) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))) ((_ is Cons!1731) lt!69926) (bvslt (_1!1314 (h!2336 lt!69926)) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135726 () Bool)

(assert (=> b!135726 (= e!88390 (containsKey!175 (t!6198 lt!69926) (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!42411 (not res!65158)) b!135725))

(assert (= (and b!135725 res!65159) b!135726))

(declare-fun m!162033 () Bool)

(assert (=> b!135726 m!162033))

(assert (=> b!133539 d!42411))

(declare-fun b!135727 () Bool)

(declare-fun e!88392 () Bool)

(declare-fun call!14912 () Bool)

(assert (=> b!135727 (= e!88392 call!14912)))

(declare-fun b!135728 () Bool)

(declare-fun e!88393 () Bool)

(assert (=> b!135728 (= e!88392 e!88393)))

(declare-fun lt!70951 () (_ BitVec 64))

(assert (=> b!135728 (= lt!70951 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun lt!70952 () Unit!4150)

(assert (=> b!135728 (= lt!70952 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 newMap!16) lt!70951 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!135728 (arrayContainsKey!0 (_keys!4614 newMap!16) lt!70951 #b00000000000000000000000000000000)))

(declare-fun lt!70950 () Unit!4150)

(assert (=> b!135728 (= lt!70950 lt!70952)))

(declare-fun res!65160 () Bool)

(assert (=> b!135728 (= res!65160 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4614 newMap!16) (mask!7165 newMap!16)) (Found!285 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!135728 (=> (not res!65160) (not e!88393))))

(declare-fun b!135729 () Bool)

(assert (=> b!135729 (= e!88393 call!14912)))

(declare-fun b!135730 () Bool)

(declare-fun e!88391 () Bool)

(assert (=> b!135730 (= e!88391 e!88392)))

(declare-fun c!25402 () Bool)

(assert (=> b!135730 (= c!25402 (validKeyInArray!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!14909 () Bool)

(assert (=> bm!14909 (= call!14912 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun d!42413 () Bool)

(declare-fun res!65161 () Bool)

(assert (=> d!42413 (=> res!65161 e!88391)))

(assert (=> d!42413 (= res!65161 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(assert (=> d!42413 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4614 newMap!16) (mask!7165 newMap!16)) e!88391)))

(assert (= (and d!42413 (not res!65161)) b!135730))

(assert (= (and b!135730 c!25402) b!135728))

(assert (= (and b!135730 (not c!25402)) b!135727))

(assert (= (and b!135728 res!65160) b!135729))

(assert (= (or b!135729 b!135727) bm!14909))

(assert (=> b!135728 m!159393))

(declare-fun m!162035 () Bool)

(assert (=> b!135728 m!162035))

(declare-fun m!162037 () Bool)

(assert (=> b!135728 m!162037))

(assert (=> b!135728 m!159393))

(declare-fun m!162039 () Bool)

(assert (=> b!135728 m!162039))

(assert (=> b!135730 m!159393))

(assert (=> b!135730 m!159393))

(assert (=> b!135730 m!159395))

(declare-fun m!162041 () Bool)

(assert (=> bm!14909 m!162041))

(assert (=> bm!14704 d!42413))

(declare-fun d!42415 () Bool)

(assert (=> d!42415 (= (apply!116 lt!69869 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!69869) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5703 () Bool)

(assert (= bs!5703 d!42415))

(assert (=> bs!5703 m!161777))

(assert (=> bs!5703 m!161777))

(declare-fun m!162043 () Bool)

(assert (=> bs!5703 m!162043))

(assert (=> b!133467 d!42415))

(declare-fun b!135731 () Bool)

(declare-fun e!88394 () Option!177)

(assert (=> b!135731 (= e!88394 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69893)))))))

(declare-fun b!135734 () Bool)

(declare-fun e!88395 () Option!177)

(assert (=> b!135734 (= e!88395 None!175)))

(declare-fun b!135733 () Bool)

(assert (=> b!135733 (= e!88395 (getValueByKey!171 (t!6198 (toList!869 lt!69893)) (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135732 () Bool)

(assert (=> b!135732 (= e!88394 e!88395)))

(declare-fun c!25404 () Bool)

(assert (=> b!135732 (= c!25404 (and ((_ is Cons!1731) (toList!869 lt!69893)) (not (= (_1!1314 (h!2336 (toList!869 lt!69893))) (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))))))))

(declare-fun c!25403 () Bool)

(declare-fun d!42417 () Bool)

(assert (=> d!42417 (= c!25403 (and ((_ is Cons!1731) (toList!869 lt!69893)) (= (_1!1314 (h!2336 (toList!869 lt!69893))) (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16))))))))

(assert (=> d!42417 (= (getValueByKey!171 (toList!869 lt!69893) (_1!1314 (tuple2!2609 lt!69503 (zeroValue!2720 newMap!16)))) e!88394)))

(assert (= (and d!42417 c!25403) b!135731))

(assert (= (and d!42417 (not c!25403)) b!135732))

(assert (= (and b!135732 c!25404) b!135733))

(assert (= (and b!135732 (not c!25404)) b!135734))

(declare-fun m!162045 () Bool)

(assert (=> b!135733 m!162045))

(assert (=> b!133492 d!42417))

(assert (=> bm!14711 d!41119))

(declare-fun b!135735 () Bool)

(declare-fun e!88396 () Option!177)

(assert (=> b!135735 (= e!88396 (Some!176 (_2!1314 (h!2336 (toList!869 lt!69679)))))))

(declare-fun b!135738 () Bool)

(declare-fun e!88397 () Option!177)

(assert (=> b!135738 (= e!88397 None!175)))

(declare-fun b!135737 () Bool)

(assert (=> b!135737 (= e!88397 (getValueByKey!171 (t!6198 (toList!869 lt!69679)) (_1!1314 (tuple2!2609 lt!69404 lt!69402))))))

(declare-fun b!135736 () Bool)

(assert (=> b!135736 (= e!88396 e!88397)))

(declare-fun c!25406 () Bool)

(assert (=> b!135736 (= c!25406 (and ((_ is Cons!1731) (toList!869 lt!69679)) (not (= (_1!1314 (h!2336 (toList!869 lt!69679))) (_1!1314 (tuple2!2609 lt!69404 lt!69402))))))))

(declare-fun c!25405 () Bool)

(declare-fun d!42419 () Bool)

(assert (=> d!42419 (= c!25405 (and ((_ is Cons!1731) (toList!869 lt!69679)) (= (_1!1314 (h!2336 (toList!869 lt!69679))) (_1!1314 (tuple2!2609 lt!69404 lt!69402)))))))

(assert (=> d!42419 (= (getValueByKey!171 (toList!869 lt!69679) (_1!1314 (tuple2!2609 lt!69404 lt!69402))) e!88396)))

(assert (= (and d!42419 c!25405) b!135735))

(assert (= (and d!42419 (not c!25405)) b!135736))

(assert (= (and b!135736 c!25406) b!135737))

(assert (= (and b!135736 (not c!25406)) b!135738))

(declare-fun m!162047 () Bool)

(assert (=> b!135737 m!162047))

(assert (=> b!133223 d!42419))

(assert (=> b!134012 d!42289))

(assert (=> b!134012 d!41373))

(declare-fun d!42421 () Bool)

(assert (=> d!42421 (= (get!1491 (getValueByKey!171 (toList!869 (+!170 lt!69496 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!69495)) (v!3201 (getValueByKey!171 (toList!869 (+!170 lt!69496 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!69495)))))

(assert (=> d!40583 d!42421))

(declare-fun b!135739 () Bool)

(declare-fun e!88398 () Option!177)

(assert (=> b!135739 (= e!88398 (Some!176 (_2!1314 (h!2336 (toList!869 (+!170 lt!69496 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))))

(declare-fun b!135742 () Bool)

(declare-fun e!88399 () Option!177)

(assert (=> b!135742 (= e!88399 None!175)))

(declare-fun b!135741 () Bool)

(assert (=> b!135741 (= e!88399 (getValueByKey!171 (t!6198 (toList!869 (+!170 lt!69496 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) lt!69495))))

(declare-fun b!135740 () Bool)

(assert (=> b!135740 (= e!88398 e!88399)))

(declare-fun c!25408 () Bool)

(assert (=> b!135740 (= c!25408 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69496 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) (not (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69496 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))) lt!69495))))))

(declare-fun d!42423 () Bool)

(declare-fun c!25407 () Bool)

(assert (=> d!42423 (= c!25407 (and ((_ is Cons!1731) (toList!869 (+!170 lt!69496 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) (= (_1!1314 (h!2336 (toList!869 (+!170 lt!69496 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))) lt!69495)))))

(assert (=> d!42423 (= (getValueByKey!171 (toList!869 (+!170 lt!69496 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!69495) e!88398)))

(assert (= (and d!42423 c!25407) b!135739))

(assert (= (and d!42423 (not c!25407)) b!135740))

(assert (= (and b!135740 c!25408) b!135741))

(assert (= (and b!135740 (not c!25408)) b!135742))

(declare-fun m!162049 () Bool)

(assert (=> b!135741 m!162049))

(assert (=> d!40583 d!42423))

(assert (=> bm!14718 d!41101))

(assert (=> b!133407 d!40923))

(declare-fun d!42425 () Bool)

(declare-fun e!88400 () Bool)

(assert (=> d!42425 e!88400))

(declare-fun res!65162 () Bool)

(assert (=> d!42425 (=> res!65162 e!88400)))

(declare-fun lt!70953 () Bool)

(assert (=> d!42425 (= res!65162 (not lt!70953))))

(declare-fun lt!70955 () Bool)

(assert (=> d!42425 (= lt!70953 lt!70955)))

(declare-fun lt!70954 () Unit!4150)

(declare-fun e!88401 () Unit!4150)

(assert (=> d!42425 (= lt!70954 e!88401)))

(declare-fun c!25409 () Bool)

(assert (=> d!42425 (= c!25409 lt!70955)))

(assert (=> d!42425 (= lt!70955 (containsKey!175 (toList!869 (+!170 lt!69817 (tuple2!2609 lt!69821 lt!69819))) lt!69818))))

(assert (=> d!42425 (= (contains!896 (+!170 lt!69817 (tuple2!2609 lt!69821 lt!69819)) lt!69818) lt!70953)))

(declare-fun b!135743 () Bool)

(declare-fun lt!70956 () Unit!4150)

(assert (=> b!135743 (= e!88401 lt!70956)))

(assert (=> b!135743 (= lt!70956 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69817 (tuple2!2609 lt!69821 lt!69819))) lt!69818))))

(assert (=> b!135743 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69817 (tuple2!2609 lt!69821 lt!69819))) lt!69818))))

(declare-fun b!135744 () Bool)

(declare-fun Unit!4281 () Unit!4150)

(assert (=> b!135744 (= e!88401 Unit!4281)))

(declare-fun b!135745 () Bool)

(assert (=> b!135745 (= e!88400 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69817 (tuple2!2609 lt!69821 lt!69819))) lt!69818)))))

(assert (= (and d!42425 c!25409) b!135743))

(assert (= (and d!42425 (not c!25409)) b!135744))

(assert (= (and d!42425 (not res!65162)) b!135745))

(declare-fun m!162051 () Bool)

(assert (=> d!42425 m!162051))

(declare-fun m!162053 () Bool)

(assert (=> b!135743 m!162053))

(declare-fun m!162055 () Bool)

(assert (=> b!135743 m!162055))

(assert (=> b!135743 m!162055))

(declare-fun m!162057 () Bool)

(assert (=> b!135743 m!162057))

(assert (=> b!135745 m!162055))

(assert (=> b!135745 m!162055))

(assert (=> b!135745 m!162057))

(assert (=> b!133407 d!42425))

(declare-fun d!42427 () Bool)

(assert (=> d!42427 (not (contains!896 (+!170 lt!69817 (tuple2!2609 lt!69821 lt!69819)) lt!69818))))

(declare-fun lt!70957 () Unit!4150)

(assert (=> d!42427 (= lt!70957 (choose!836 lt!69817 lt!69821 lt!69819 lt!69818))))

(declare-fun e!88402 () Bool)

(assert (=> d!42427 e!88402))

(declare-fun res!65163 () Bool)

(assert (=> d!42427 (=> (not res!65163) (not e!88402))))

(assert (=> d!42427 (= res!65163 (not (contains!896 lt!69817 lt!69818)))))

(assert (=> d!42427 (= (addStillNotContains!63 lt!69817 lt!69821 lt!69819 lt!69818) lt!70957)))

(declare-fun b!135746 () Bool)

(assert (=> b!135746 (= e!88402 (not (= lt!69821 lt!69818)))))

(assert (= (and d!42427 res!65163) b!135746))

(assert (=> d!42427 m!157539))

(assert (=> d!42427 m!157539))

(assert (=> d!42427 m!157541))

(declare-fun m!162059 () Bool)

(assert (=> d!42427 m!162059))

(declare-fun m!162061 () Bool)

(assert (=> d!42427 m!162061))

(assert (=> b!133407 d!42427))

(declare-fun d!42429 () Bool)

(declare-fun e!88403 () Bool)

(assert (=> d!42429 e!88403))

(declare-fun res!65165 () Bool)

(assert (=> d!42429 (=> (not res!65165) (not e!88403))))

(declare-fun lt!70959 () ListLongMap!1707)

(assert (=> d!42429 (= res!65165 (contains!896 lt!70959 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70961 () List!1735)

(assert (=> d!42429 (= lt!70959 (ListLongMap!1708 lt!70961))))

(declare-fun lt!70960 () Unit!4150)

(declare-fun lt!70958 () Unit!4150)

(assert (=> d!42429 (= lt!70960 lt!70958)))

(assert (=> d!42429 (= (getValueByKey!171 lt!70961 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42429 (= lt!70958 (lemmaContainsTupThenGetReturnValue!88 lt!70961 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42429 (= lt!70961 (insertStrictlySorted!90 (toList!869 call!14732) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42429 (= (+!170 call!14732 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70959)))

(declare-fun b!135747 () Bool)

(declare-fun res!65164 () Bool)

(assert (=> b!135747 (=> (not res!65164) (not e!88403))))

(assert (=> b!135747 (= res!65164 (= (getValueByKey!171 (toList!869 lt!70959) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135748 () Bool)

(assert (=> b!135748 (= e!88403 (contains!898 (toList!869 lt!70959) (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42429 res!65165) b!135747))

(assert (= (and b!135747 res!65164) b!135748))

(declare-fun m!162063 () Bool)

(assert (=> d!42429 m!162063))

(declare-fun m!162065 () Bool)

(assert (=> d!42429 m!162065))

(declare-fun m!162067 () Bool)

(assert (=> d!42429 m!162067))

(declare-fun m!162069 () Bool)

(assert (=> d!42429 m!162069))

(declare-fun m!162071 () Bool)

(assert (=> b!135747 m!162071))

(declare-fun m!162073 () Bool)

(assert (=> b!135748 m!162073))

(assert (=> b!133407 d!42429))

(declare-fun d!42431 () Bool)

(declare-fun e!88404 () Bool)

(assert (=> d!42431 e!88404))

(declare-fun res!65167 () Bool)

(assert (=> d!42431 (=> (not res!65167) (not e!88404))))

(declare-fun lt!70963 () ListLongMap!1707)

(assert (=> d!42431 (= res!65167 (contains!896 lt!70963 (_1!1314 (tuple2!2609 lt!69821 lt!69819))))))

(declare-fun lt!70965 () List!1735)

(assert (=> d!42431 (= lt!70963 (ListLongMap!1708 lt!70965))))

(declare-fun lt!70964 () Unit!4150)

(declare-fun lt!70962 () Unit!4150)

(assert (=> d!42431 (= lt!70964 lt!70962)))

(assert (=> d!42431 (= (getValueByKey!171 lt!70965 (_1!1314 (tuple2!2609 lt!69821 lt!69819))) (Some!176 (_2!1314 (tuple2!2609 lt!69821 lt!69819))))))

(assert (=> d!42431 (= lt!70962 (lemmaContainsTupThenGetReturnValue!88 lt!70965 (_1!1314 (tuple2!2609 lt!69821 lt!69819)) (_2!1314 (tuple2!2609 lt!69821 lt!69819))))))

(assert (=> d!42431 (= lt!70965 (insertStrictlySorted!90 (toList!869 lt!69817) (_1!1314 (tuple2!2609 lt!69821 lt!69819)) (_2!1314 (tuple2!2609 lt!69821 lt!69819))))))

(assert (=> d!42431 (= (+!170 lt!69817 (tuple2!2609 lt!69821 lt!69819)) lt!70963)))

(declare-fun b!135749 () Bool)

(declare-fun res!65166 () Bool)

(assert (=> b!135749 (=> (not res!65166) (not e!88404))))

(assert (=> b!135749 (= res!65166 (= (getValueByKey!171 (toList!869 lt!70963) (_1!1314 (tuple2!2609 lt!69821 lt!69819))) (Some!176 (_2!1314 (tuple2!2609 lt!69821 lt!69819)))))))

(declare-fun b!135750 () Bool)

(assert (=> b!135750 (= e!88404 (contains!898 (toList!869 lt!70963) (tuple2!2609 lt!69821 lt!69819)))))

(assert (= (and d!42431 res!65167) b!135749))

(assert (= (and b!135749 res!65166) b!135750))

(declare-fun m!162075 () Bool)

(assert (=> d!42431 m!162075))

(declare-fun m!162077 () Bool)

(assert (=> d!42431 m!162077))

(declare-fun m!162079 () Bool)

(assert (=> d!42431 m!162079))

(declare-fun m!162081 () Bool)

(assert (=> d!42431 m!162081))

(declare-fun m!162083 () Bool)

(assert (=> b!135749 m!162083))

(declare-fun m!162085 () Bool)

(assert (=> b!135750 m!162085))

(assert (=> b!133407 d!42431))

(declare-fun d!42433 () Bool)

(assert (=> d!42433 (= (apply!116 lt!69843 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1491 (getValueByKey!171 (toList!869 lt!69843) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5704 () Bool)

(assert (= bs!5704 d!42433))

(assert (=> bs!5704 m!161699))

(assert (=> bs!5704 m!161699))

(declare-fun m!162087 () Bool)

(assert (=> bs!5704 m!162087))

(assert (=> b!133444 d!42433))

(assert (=> b!133481 d!41181))

(assert (=> b!133732 d!42237))

(assert (=> b!133732 d!40841))

(assert (=> b!133563 d!40657))

(declare-fun d!42435 () Bool)

(declare-fun c!25412 () Bool)

(assert (=> d!42435 (= c!25412 ((_ is Nil!1733) (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)))))

(declare-fun e!88407 () (InoxSet (_ BitVec 64)))

(assert (=> d!42435 (= (content!131 (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) e!88407)))

(declare-fun b!135755 () Bool)

(assert (=> b!135755 (= e!88407 ((as const (Array (_ BitVec 64) Bool)) false))))

(declare-fun b!135756 () Bool)

(assert (=> b!135756 (= e!88407 ((_ map or) (store ((as const (Array (_ BitVec 64) Bool)) false) (h!2337 (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)) true) (content!131 (t!6199 (ite c!24555 (Cons!1732 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)))))))

(assert (= (and d!42435 c!25412) b!135755))

(assert (= (and d!42435 (not c!25412)) b!135756))

(declare-fun m!162089 () Bool)

(assert (=> b!135756 m!162089))

(assert (=> b!135756 m!160367))

(assert (=> d!40461 d!42435))

(declare-fun d!42437 () Bool)

(declare-fun res!65168 () Bool)

(declare-fun e!88408 () Bool)

(assert (=> d!42437 (=> res!65168 e!88408)))

(assert (=> d!42437 (= res!65168 (and ((_ is Cons!1731) (toList!869 lt!69217)) (= (_1!1314 (h!2336 (toList!869 lt!69217))) lt!69227)))))

(assert (=> d!42437 (= (containsKey!175 (toList!869 lt!69217) lt!69227) e!88408)))

(declare-fun b!135757 () Bool)

(declare-fun e!88409 () Bool)

(assert (=> b!135757 (= e!88408 e!88409)))

(declare-fun res!65169 () Bool)

(assert (=> b!135757 (=> (not res!65169) (not e!88409))))

(assert (=> b!135757 (= res!65169 (and (or (not ((_ is Cons!1731) (toList!869 lt!69217))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69217))) lt!69227)) ((_ is Cons!1731) (toList!869 lt!69217)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69217))) lt!69227)))))

(declare-fun b!135758 () Bool)

(assert (=> b!135758 (= e!88409 (containsKey!175 (t!6198 (toList!869 lt!69217)) lt!69227))))

(assert (= (and d!42437 (not res!65168)) b!135757))

(assert (= (and b!135757 res!65169) b!135758))

(declare-fun m!162091 () Bool)

(assert (=> b!135758 m!162091))

(assert (=> d!40705 d!42437))

(declare-fun b!135759 () Bool)

(declare-fun e!88412 () Bool)

(declare-fun e!88413 () Bool)

(assert (=> b!135759 (= e!88412 e!88413)))

(declare-fun c!25413 () Bool)

(assert (=> b!135759 (= c!25413 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69589))) #b00000000000000000000000000000000)))))

(declare-fun b!135760 () Bool)

(declare-fun call!14913 () Bool)

(assert (=> b!135760 (= e!88413 call!14913)))

(declare-fun b!135761 () Bool)

(declare-fun e!88410 () Bool)

(assert (=> b!135761 (= e!88410 (contains!897 Nil!1733 (select (arr!2260 (_keys!4614 (_2!1315 lt!69589))) #b00000000000000000000000000000000)))))

(declare-fun bm!14910 () Bool)

(assert (=> bm!14910 (= call!14913 (arrayNoDuplicates!0 (_keys!4614 (_2!1315 lt!69589)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!25413 (Cons!1732 (select (arr!2260 (_keys!4614 (_2!1315 lt!69589))) #b00000000000000000000000000000000) Nil!1733) Nil!1733)))))

(declare-fun d!42439 () Bool)

(declare-fun res!65172 () Bool)

(declare-fun e!88411 () Bool)

(assert (=> d!42439 (=> res!65172 e!88411)))

(assert (=> d!42439 (= res!65172 (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69589)))))))

(assert (=> d!42439 (= (arrayNoDuplicates!0 (_keys!4614 (_2!1315 lt!69589)) #b00000000000000000000000000000000 Nil!1733) e!88411)))

(declare-fun b!135762 () Bool)

(assert (=> b!135762 (= e!88413 call!14913)))

(declare-fun b!135763 () Bool)

(assert (=> b!135763 (= e!88411 e!88412)))

(declare-fun res!65170 () Bool)

(assert (=> b!135763 (=> (not res!65170) (not e!88412))))

(assert (=> b!135763 (= res!65170 (not e!88410))))

(declare-fun res!65171 () Bool)

(assert (=> b!135763 (=> (not res!65171) (not e!88410))))

(assert (=> b!135763 (= res!65171 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69589))) #b00000000000000000000000000000000)))))

(assert (= (and d!42439 (not res!65172)) b!135763))

(assert (= (and b!135763 res!65171) b!135761))

(assert (= (and b!135763 res!65170) b!135759))

(assert (= (and b!135759 c!25413) b!135762))

(assert (= (and b!135759 (not c!25413)) b!135760))

(assert (= (or b!135762 b!135760) bm!14910))

(assert (=> b!135759 m!161631))

(assert (=> b!135759 m!161631))

(assert (=> b!135759 m!161639))

(assert (=> b!135761 m!161631))

(assert (=> b!135761 m!161631))

(declare-fun m!162093 () Bool)

(assert (=> b!135761 m!162093))

(assert (=> bm!14910 m!161631))

(declare-fun m!162095 () Bool)

(assert (=> bm!14910 m!162095))

(assert (=> b!135763 m!161631))

(assert (=> b!135763 m!161631))

(assert (=> b!135763 m!161639))

(assert (=> b!133673 d!42439))

(declare-fun d!42441 () Bool)

(declare-fun res!65173 () Bool)

(declare-fun e!88414 () Bool)

(assert (=> d!42441 (=> res!65173 e!88414)))

(assert (=> d!42441 (= res!65173 (and ((_ is Cons!1731) (toList!869 lt!69472)) (= (_1!1314 (h!2336 (toList!869 lt!69472))) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!42441 (= (containsKey!175 (toList!869 lt!69472) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!88414)))

(declare-fun b!135764 () Bool)

(declare-fun e!88415 () Bool)

(assert (=> b!135764 (= e!88414 e!88415)))

(declare-fun res!65174 () Bool)

(assert (=> b!135764 (=> (not res!65174) (not e!88415))))

(assert (=> b!135764 (= res!65174 (and (or (not ((_ is Cons!1731) (toList!869 lt!69472))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69472))) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))) ((_ is Cons!1731) (toList!869 lt!69472)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69472))) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135765 () Bool)

(assert (=> b!135765 (= e!88415 (containsKey!175 (t!6198 (toList!869 lt!69472)) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (= (and d!42441 (not res!65173)) b!135764))

(assert (= (and b!135764 res!65174) b!135765))

(declare-fun m!162097 () Bool)

(assert (=> b!135765 m!162097))

(assert (=> d!40677 d!42441))

(assert (=> b!133699 d!42313))

(assert (=> b!133699 d!40815))

(assert (=> b!133756 d!42273))

(assert (=> b!133756 d!42275))

(declare-fun bm!14911 () Bool)

(declare-fun call!14920 () ListLongMap!1707)

(declare-fun call!14916 () ListLongMap!1707)

(assert (=> bm!14911 (= call!14920 call!14916)))

(declare-fun b!135766 () Bool)

(declare-fun e!88425 () Bool)

(declare-fun lt!70972 () ListLongMap!1707)

(assert (=> b!135766 (= e!88425 (= (apply!116 lt!70972 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 (_2!1315 lt!69589))))))

(declare-fun bm!14912 () Bool)

(declare-fun call!14915 () Bool)

(assert (=> bm!14912 (= call!14915 (contains!896 lt!70972 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135767 () Bool)

(declare-fun e!88428 () Bool)

(declare-fun call!14917 () Bool)

(assert (=> b!135767 (= e!88428 (not call!14917))))

(declare-fun b!135768 () Bool)

(declare-fun e!88427 () Unit!4150)

(declare-fun Unit!4282 () Unit!4150)

(assert (=> b!135768 (= e!88427 Unit!4282)))

(declare-fun d!42443 () Bool)

(declare-fun e!88424 () Bool)

(assert (=> d!42443 e!88424))

(declare-fun res!65181 () Bool)

(assert (=> d!42443 (=> (not res!65181) (not e!88424))))

(assert (=> d!42443 (= res!65181 (or (bvsge #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69589)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69589)))))))))

(declare-fun lt!70966 () ListLongMap!1707)

(assert (=> d!42443 (= lt!70972 lt!70966)))

(declare-fun lt!70967 () Unit!4150)

(assert (=> d!42443 (= lt!70967 e!88427)))

(declare-fun c!25415 () Bool)

(declare-fun e!88418 () Bool)

(assert (=> d!42443 (= c!25415 e!88418)))

(declare-fun res!65180 () Bool)

(assert (=> d!42443 (=> (not res!65180) (not e!88418))))

(assert (=> d!42443 (= res!65180 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69589)))))))

(declare-fun e!88416 () ListLongMap!1707)

(assert (=> d!42443 (= lt!70966 e!88416)))

(declare-fun c!25414 () Bool)

(assert (=> d!42443 (= c!25414 (and (not (= (bvand (extraKeys!2630 (_2!1315 lt!69589)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2630 (_2!1315 lt!69589)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!42443 (validMask!0 (mask!7165 (_2!1315 lt!69589)))))

(assert (=> d!42443 (= (getCurrentListMap!540 (_keys!4614 (_2!1315 lt!69589)) (_values!2848 (_2!1315 lt!69589)) (mask!7165 (_2!1315 lt!69589)) (extraKeys!2630 (_2!1315 lt!69589)) (zeroValue!2720 (_2!1315 lt!69589)) (minValue!2720 (_2!1315 lt!69589)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1315 lt!69589))) lt!70972)))

(declare-fun c!25417 () Bool)

(declare-fun call!14914 () ListLongMap!1707)

(declare-fun call!14919 () ListLongMap!1707)

(declare-fun bm!14913 () Bool)

(declare-fun call!14918 () ListLongMap!1707)

(assert (=> bm!14913 (= call!14916 (+!170 (ite c!25414 call!14918 (ite c!25417 call!14914 call!14919)) (ite (or c!25414 c!25417) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1315 lt!69589))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69589))))))))

(declare-fun b!135769 () Bool)

(assert (=> b!135769 (= e!88424 e!88428)))

(declare-fun c!25416 () Bool)

(assert (=> b!135769 (= c!25416 (not (= (bvand (extraKeys!2630 (_2!1315 lt!69589)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!135770 () Bool)

(declare-fun e!88422 () Bool)

(assert (=> b!135770 (= e!88422 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69589))) #b00000000000000000000000000000000)))))

(declare-fun b!135771 () Bool)

(assert (=> b!135771 (= e!88418 (validKeyInArray!0 (select (arr!2260 (_keys!4614 (_2!1315 lt!69589))) #b00000000000000000000000000000000)))))

(declare-fun b!135772 () Bool)

(declare-fun e!88423 () ListLongMap!1707)

(assert (=> b!135772 (= e!88423 call!14919)))

(declare-fun b!135773 () Bool)

(declare-fun res!65175 () Bool)

(assert (=> b!135773 (=> (not res!65175) (not e!88424))))

(declare-fun e!88421 () Bool)

(assert (=> b!135773 (= res!65175 e!88421)))

(declare-fun c!25418 () Bool)

(assert (=> b!135773 (= c!25418 (not (= (bvand (extraKeys!2630 (_2!1315 lt!69589)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!135774 () Bool)

(declare-fun e!88419 () Bool)

(assert (=> b!135774 (= e!88421 e!88419)))

(declare-fun res!65178 () Bool)

(assert (=> b!135774 (= res!65178 call!14915)))

(assert (=> b!135774 (=> (not res!65178) (not e!88419))))

(declare-fun b!135775 () Bool)

(declare-fun e!88420 () Bool)

(declare-fun e!88417 () Bool)

(assert (=> b!135775 (= e!88420 e!88417)))

(declare-fun res!65176 () Bool)

(assert (=> b!135775 (=> (not res!65176) (not e!88417))))

(assert (=> b!135775 (= res!65176 (contains!896 lt!70972 (select (arr!2260 (_keys!4614 (_2!1315 lt!69589))) #b00000000000000000000000000000000)))))

(assert (=> b!135775 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69589)))))))

(declare-fun b!135776 () Bool)

(declare-fun c!25419 () Bool)

(assert (=> b!135776 (= c!25419 (and (not (= (bvand (extraKeys!2630 (_2!1315 lt!69589)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 (_2!1315 lt!69589)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!88426 () ListLongMap!1707)

(assert (=> b!135776 (= e!88426 e!88423)))

(declare-fun b!135777 () Bool)

(assert (=> b!135777 (= e!88421 (not call!14915))))

(declare-fun b!135778 () Bool)

(assert (=> b!135778 (= e!88416 (+!170 call!14916 (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1315 lt!69589)))))))

(declare-fun b!135779 () Bool)

(assert (=> b!135779 (= e!88428 e!88425)))

(declare-fun res!65179 () Bool)

(assert (=> b!135779 (= res!65179 call!14917)))

(assert (=> b!135779 (=> (not res!65179) (not e!88425))))

(declare-fun b!135780 () Bool)

(declare-fun lt!70973 () Unit!4150)

(assert (=> b!135780 (= e!88427 lt!70973)))

(declare-fun lt!70968 () ListLongMap!1707)

(assert (=> b!135780 (= lt!70968 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (_2!1315 lt!69589)) (_values!2848 (_2!1315 lt!69589)) (mask!7165 (_2!1315 lt!69589)) (extraKeys!2630 (_2!1315 lt!69589)) (zeroValue!2720 (_2!1315 lt!69589)) (minValue!2720 (_2!1315 lt!69589)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1315 lt!69589))))))

(declare-fun lt!70971 () (_ BitVec 64))

(assert (=> b!135780 (= lt!70971 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70978 () (_ BitVec 64))

(assert (=> b!135780 (= lt!70978 (select (arr!2260 (_keys!4614 (_2!1315 lt!69589))) #b00000000000000000000000000000000))))

(declare-fun lt!70982 () Unit!4150)

(assert (=> b!135780 (= lt!70982 (addStillContains!92 lt!70968 lt!70971 (zeroValue!2720 (_2!1315 lt!69589)) lt!70978))))

(assert (=> b!135780 (contains!896 (+!170 lt!70968 (tuple2!2609 lt!70971 (zeroValue!2720 (_2!1315 lt!69589)))) lt!70978)))

(declare-fun lt!70986 () Unit!4150)

(assert (=> b!135780 (= lt!70986 lt!70982)))

(declare-fun lt!70981 () ListLongMap!1707)

(assert (=> b!135780 (= lt!70981 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (_2!1315 lt!69589)) (_values!2848 (_2!1315 lt!69589)) (mask!7165 (_2!1315 lt!69589)) (extraKeys!2630 (_2!1315 lt!69589)) (zeroValue!2720 (_2!1315 lt!69589)) (minValue!2720 (_2!1315 lt!69589)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1315 lt!69589))))))

(declare-fun lt!70983 () (_ BitVec 64))

(assert (=> b!135780 (= lt!70983 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70969 () (_ BitVec 64))

(assert (=> b!135780 (= lt!70969 (select (arr!2260 (_keys!4614 (_2!1315 lt!69589))) #b00000000000000000000000000000000))))

(declare-fun lt!70984 () Unit!4150)

(assert (=> b!135780 (= lt!70984 (addApplyDifferent!92 lt!70981 lt!70983 (minValue!2720 (_2!1315 lt!69589)) lt!70969))))

(assert (=> b!135780 (= (apply!116 (+!170 lt!70981 (tuple2!2609 lt!70983 (minValue!2720 (_2!1315 lt!69589)))) lt!70969) (apply!116 lt!70981 lt!70969))))

(declare-fun lt!70975 () Unit!4150)

(assert (=> b!135780 (= lt!70975 lt!70984)))

(declare-fun lt!70976 () ListLongMap!1707)

(assert (=> b!135780 (= lt!70976 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (_2!1315 lt!69589)) (_values!2848 (_2!1315 lt!69589)) (mask!7165 (_2!1315 lt!69589)) (extraKeys!2630 (_2!1315 lt!69589)) (zeroValue!2720 (_2!1315 lt!69589)) (minValue!2720 (_2!1315 lt!69589)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1315 lt!69589))))))

(declare-fun lt!70987 () (_ BitVec 64))

(assert (=> b!135780 (= lt!70987 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70974 () (_ BitVec 64))

(assert (=> b!135780 (= lt!70974 (select (arr!2260 (_keys!4614 (_2!1315 lt!69589))) #b00000000000000000000000000000000))))

(declare-fun lt!70985 () Unit!4150)

(assert (=> b!135780 (= lt!70985 (addApplyDifferent!92 lt!70976 lt!70987 (zeroValue!2720 (_2!1315 lt!69589)) lt!70974))))

(assert (=> b!135780 (= (apply!116 (+!170 lt!70976 (tuple2!2609 lt!70987 (zeroValue!2720 (_2!1315 lt!69589)))) lt!70974) (apply!116 lt!70976 lt!70974))))

(declare-fun lt!70970 () Unit!4150)

(assert (=> b!135780 (= lt!70970 lt!70985)))

(declare-fun lt!70980 () ListLongMap!1707)

(assert (=> b!135780 (= lt!70980 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (_2!1315 lt!69589)) (_values!2848 (_2!1315 lt!69589)) (mask!7165 (_2!1315 lt!69589)) (extraKeys!2630 (_2!1315 lt!69589)) (zeroValue!2720 (_2!1315 lt!69589)) (minValue!2720 (_2!1315 lt!69589)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1315 lt!69589))))))

(declare-fun lt!70977 () (_ BitVec 64))

(assert (=> b!135780 (= lt!70977 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70979 () (_ BitVec 64))

(assert (=> b!135780 (= lt!70979 (select (arr!2260 (_keys!4614 (_2!1315 lt!69589))) #b00000000000000000000000000000000))))

(assert (=> b!135780 (= lt!70973 (addApplyDifferent!92 lt!70980 lt!70977 (minValue!2720 (_2!1315 lt!69589)) lt!70979))))

(assert (=> b!135780 (= (apply!116 (+!170 lt!70980 (tuple2!2609 lt!70977 (minValue!2720 (_2!1315 lt!69589)))) lt!70979) (apply!116 lt!70980 lt!70979))))

(declare-fun bm!14914 () Bool)

(assert (=> bm!14914 (= call!14919 call!14914)))

(declare-fun b!135781 () Bool)

(assert (=> b!135781 (= e!88416 e!88426)))

(assert (=> b!135781 (= c!25417 (and (not (= (bvand (extraKeys!2630 (_2!1315 lt!69589)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 (_2!1315 lt!69589)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14915 () Bool)

(assert (=> bm!14915 (= call!14917 (contains!896 lt!70972 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135782 () Bool)

(assert (=> b!135782 (= e!88419 (= (apply!116 lt!70972 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 (_2!1315 lt!69589))))))

(declare-fun bm!14916 () Bool)

(assert (=> bm!14916 (= call!14914 call!14918)))

(declare-fun b!135783 () Bool)

(assert (=> b!135783 (= e!88417 (= (apply!116 lt!70972 (select (arr!2260 (_keys!4614 (_2!1315 lt!69589))) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (_values!2848 (_2!1315 lt!69589))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 (_2!1315 lt!69589)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!135783 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_values!2848 (_2!1315 lt!69589)))))))

(assert (=> b!135783 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69589)))))))

(declare-fun bm!14917 () Bool)

(assert (=> bm!14917 (= call!14918 (getCurrentListMapNoExtraKeys!137 (_keys!4614 (_2!1315 lt!69589)) (_values!2848 (_2!1315 lt!69589)) (mask!7165 (_2!1315 lt!69589)) (extraKeys!2630 (_2!1315 lt!69589)) (zeroValue!2720 (_2!1315 lt!69589)) (minValue!2720 (_2!1315 lt!69589)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1315 lt!69589))))))

(declare-fun b!135784 () Bool)

(assert (=> b!135784 (= e!88426 call!14920)))

(declare-fun b!135785 () Bool)

(assert (=> b!135785 (= e!88423 call!14920)))

(declare-fun b!135786 () Bool)

(declare-fun res!65177 () Bool)

(assert (=> b!135786 (=> (not res!65177) (not e!88424))))

(assert (=> b!135786 (= res!65177 e!88420)))

(declare-fun res!65182 () Bool)

(assert (=> b!135786 (=> res!65182 e!88420)))

(assert (=> b!135786 (= res!65182 (not e!88422))))

(declare-fun res!65183 () Bool)

(assert (=> b!135786 (=> (not res!65183) (not e!88422))))

(assert (=> b!135786 (= res!65183 (bvslt #b00000000000000000000000000000000 (size!2529 (_keys!4614 (_2!1315 lt!69589)))))))

(assert (= (and d!42443 c!25414) b!135778))

(assert (= (and d!42443 (not c!25414)) b!135781))

(assert (= (and b!135781 c!25417) b!135784))

(assert (= (and b!135781 (not c!25417)) b!135776))

(assert (= (and b!135776 c!25419) b!135785))

(assert (= (and b!135776 (not c!25419)) b!135772))

(assert (= (or b!135785 b!135772) bm!14914))

(assert (= (or b!135784 bm!14914) bm!14916))

(assert (= (or b!135784 b!135785) bm!14911))

(assert (= (or b!135778 bm!14916) bm!14917))

(assert (= (or b!135778 bm!14911) bm!14913))

(assert (= (and d!42443 res!65180) b!135771))

(assert (= (and d!42443 c!25415) b!135780))

(assert (= (and d!42443 (not c!25415)) b!135768))

(assert (= (and d!42443 res!65181) b!135786))

(assert (= (and b!135786 res!65183) b!135770))

(assert (= (and b!135786 (not res!65182)) b!135775))

(assert (= (and b!135775 res!65176) b!135783))

(assert (= (and b!135786 res!65177) b!135773))

(assert (= (and b!135773 c!25418) b!135774))

(assert (= (and b!135773 (not c!25418)) b!135777))

(assert (= (and b!135774 res!65178) b!135782))

(assert (= (or b!135774 b!135777) bm!14912))

(assert (= (and b!135773 res!65175) b!135769))

(assert (= (and b!135769 c!25416) b!135779))

(assert (= (and b!135769 (not c!25416)) b!135767))

(assert (= (and b!135779 res!65179) b!135766))

(assert (= (or b!135779 b!135767) bm!14915))

(declare-fun b_lambda!6059 () Bool)

(assert (=> (not b_lambda!6059) (not b!135783)))

(declare-fun tb!2441 () Bool)

(declare-fun t!6214 () Bool)

(assert (=> (and b!132488 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 (_2!1315 lt!69589))) t!6214) tb!2441))

(declare-fun result!4017 () Bool)

(assert (=> tb!2441 (= result!4017 tp_is_empty!2877)))

(assert (=> b!135783 t!6214))

(declare-fun b_and!8413 () Bool)

(assert (= b_and!8409 (and (=> t!6214 result!4017) b_and!8413)))

(declare-fun tb!2443 () Bool)

(declare-fun t!6216 () Bool)

(assert (=> (and b!132481 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (_2!1315 lt!69589))) t!6216) tb!2443))

(declare-fun result!4019 () Bool)

(assert (= result!4019 result!4017))

(assert (=> b!135783 t!6216))

(declare-fun b_and!8415 () Bool)

(assert (= b_and!8411 (and (=> t!6216 result!4019) b_and!8415)))

(assert (=> d!42443 m!159503))

(assert (=> b!135775 m!161631))

(assert (=> b!135775 m!161631))

(declare-fun m!162099 () Bool)

(assert (=> b!135775 m!162099))

(declare-fun m!162101 () Bool)

(assert (=> b!135783 m!162101))

(declare-fun m!162103 () Bool)

(assert (=> b!135783 m!162103))

(declare-fun m!162105 () Bool)

(assert (=> b!135783 m!162105))

(assert (=> b!135783 m!161631))

(declare-fun m!162107 () Bool)

(assert (=> b!135783 m!162107))

(assert (=> b!135783 m!162101))

(assert (=> b!135783 m!161631))

(assert (=> b!135783 m!162103))

(declare-fun m!162109 () Bool)

(assert (=> b!135782 m!162109))

(declare-fun m!162111 () Bool)

(assert (=> b!135766 m!162111))

(declare-fun m!162113 () Bool)

(assert (=> b!135780 m!162113))

(declare-fun m!162115 () Bool)

(assert (=> b!135780 m!162115))

(declare-fun m!162117 () Bool)

(assert (=> b!135780 m!162117))

(declare-fun m!162119 () Bool)

(assert (=> b!135780 m!162119))

(declare-fun m!162121 () Bool)

(assert (=> b!135780 m!162121))

(assert (=> b!135780 m!162117))

(declare-fun m!162123 () Bool)

(assert (=> b!135780 m!162123))

(declare-fun m!162125 () Bool)

(assert (=> b!135780 m!162125))

(declare-fun m!162127 () Bool)

(assert (=> b!135780 m!162127))

(declare-fun m!162129 () Bool)

(assert (=> b!135780 m!162129))

(assert (=> b!135780 m!162127))

(assert (=> b!135780 m!161631))

(assert (=> b!135780 m!162113))

(declare-fun m!162131 () Bool)

(assert (=> b!135780 m!162131))

(declare-fun m!162133 () Bool)

(assert (=> b!135780 m!162133))

(declare-fun m!162135 () Bool)

(assert (=> b!135780 m!162135))

(declare-fun m!162137 () Bool)

(assert (=> b!135780 m!162137))

(assert (=> b!135780 m!162123))

(declare-fun m!162139 () Bool)

(assert (=> b!135780 m!162139))

(declare-fun m!162141 () Bool)

(assert (=> b!135780 m!162141))

(declare-fun m!162143 () Bool)

(assert (=> b!135780 m!162143))

(assert (=> b!135771 m!161631))

(assert (=> b!135771 m!161631))

(assert (=> b!135771 m!161639))

(declare-fun m!162145 () Bool)

(assert (=> bm!14915 m!162145))

(declare-fun m!162147 () Bool)

(assert (=> b!135778 m!162147))

(declare-fun m!162149 () Bool)

(assert (=> bm!14913 m!162149))

(assert (=> b!135770 m!161631))

(assert (=> b!135770 m!161631))

(assert (=> b!135770 m!161639))

(assert (=> bm!14917 m!162121))

(declare-fun m!162151 () Bool)

(assert (=> bm!14912 m!162151))

(assert (=> d!40663 d!42443))

(declare-fun d!42445 () Bool)

(assert (=> d!42445 (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69690 #b00000000000000000000000000000000)))

(declare-fun lt!70988 () Unit!4150)

(assert (=> d!42445 (= lt!70988 (choose!13 (_keys!4614 newMap!16) lt!69690 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> d!42445 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (=> d!42445 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 newMap!16) lt!69690 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!70988)))

(declare-fun bs!5705 () Bool)

(assert (= bs!5705 d!42445))

(assert (=> bs!5705 m!157191))

(declare-fun m!162153 () Bool)

(assert (=> bs!5705 m!162153))

(assert (=> b!133235 d!42445))

(declare-fun d!42447 () Bool)

(declare-fun res!65184 () Bool)

(declare-fun e!88429 () Bool)

(assert (=> d!42447 (=> res!65184 e!88429)))

(assert (=> d!42447 (= res!65184 (= (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) lt!69690))))

(assert (=> d!42447 (= (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69690 #b00000000000000000000000000000000) e!88429)))

(declare-fun b!135787 () Bool)

(declare-fun e!88430 () Bool)

(assert (=> b!135787 (= e!88429 e!88430)))

(declare-fun res!65185 () Bool)

(assert (=> b!135787 (=> (not res!65185) (not e!88430))))

(assert (=> b!135787 (= res!65185 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2529 (_keys!4614 newMap!16))))))

(declare-fun b!135788 () Bool)

(assert (=> b!135788 (= e!88430 (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69690 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!42447 (not res!65184)) b!135787))

(assert (= (and b!135787 res!65185) b!135788))

(assert (=> d!42447 m!156533))

(declare-fun m!162155 () Bool)

(assert (=> b!135788 m!162155))

(assert (=> b!133235 d!42447))

(declare-fun b!135789 () Bool)

(declare-fun e!88433 () SeekEntryResult!285)

(declare-fun lt!70990 () SeekEntryResult!285)

(assert (=> b!135789 (= e!88433 (MissingZero!285 (index!3302 lt!70990)))))

(declare-fun b!135790 () Bool)

(assert (=> b!135790 (= e!88433 (seekKeyOrZeroReturnVacant!0 (x!15602 lt!70990) (index!3302 lt!70990) (index!3302 lt!70990) (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun b!135791 () Bool)

(declare-fun c!25420 () Bool)

(declare-fun lt!70991 () (_ BitVec 64))

(assert (=> b!135791 (= c!25420 (= lt!70991 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88432 () SeekEntryResult!285)

(assert (=> b!135791 (= e!88432 e!88433)))

(declare-fun b!135792 () Bool)

(declare-fun e!88431 () SeekEntryResult!285)

(assert (=> b!135792 (= e!88431 Undefined!285)))

(declare-fun b!135793 () Bool)

(assert (=> b!135793 (= e!88431 e!88432)))

(assert (=> b!135793 (= lt!70991 (select (arr!2260 (_keys!4614 newMap!16)) (index!3302 lt!70990)))))

(declare-fun c!25422 () Bool)

(assert (=> b!135793 (= c!25422 (= lt!70991 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!42449 () Bool)

(declare-fun lt!70989 () SeekEntryResult!285)

(assert (=> d!42449 (and (or ((_ is Undefined!285) lt!70989) (not ((_ is Found!285) lt!70989)) (and (bvsge (index!3301 lt!70989) #b00000000000000000000000000000000) (bvslt (index!3301 lt!70989) (size!2529 (_keys!4614 newMap!16))))) (or ((_ is Undefined!285) lt!70989) ((_ is Found!285) lt!70989) (not ((_ is MissingZero!285) lt!70989)) (and (bvsge (index!3300 lt!70989) #b00000000000000000000000000000000) (bvslt (index!3300 lt!70989) (size!2529 (_keys!4614 newMap!16))))) (or ((_ is Undefined!285) lt!70989) ((_ is Found!285) lt!70989) ((_ is MissingZero!285) lt!70989) (not ((_ is MissingVacant!285) lt!70989)) (and (bvsge (index!3303 lt!70989) #b00000000000000000000000000000000) (bvslt (index!3303 lt!70989) (size!2529 (_keys!4614 newMap!16))))) (or ((_ is Undefined!285) lt!70989) (ite ((_ is Found!285) lt!70989) (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3301 lt!70989)) (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (ite ((_ is MissingZero!285) lt!70989) (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3300 lt!70989)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!285) lt!70989) (= (select (arr!2260 (_keys!4614 newMap!16)) (index!3303 lt!70989)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42449 (= lt!70989 e!88431)))

(declare-fun c!25421 () Bool)

(assert (=> d!42449 (= c!25421 (and ((_ is Intermediate!285) lt!70990) (undefined!1097 lt!70990)))))

(assert (=> d!42449 (= lt!70990 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7165 newMap!16)) (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(assert (=> d!42449 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!42449 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 newMap!16) (mask!7165 newMap!16)) lt!70989)))

(declare-fun b!135794 () Bool)

(assert (=> b!135794 (= e!88432 (Found!285 (index!3302 lt!70990)))))

(assert (= (and d!42449 c!25421) b!135792))

(assert (= (and d!42449 (not c!25421)) b!135793))

(assert (= (and b!135793 c!25422) b!135794))

(assert (= (and b!135793 (not c!25422)) b!135791))

(assert (= (and b!135791 c!25420) b!135789))

(assert (= (and b!135791 (not c!25420)) b!135790))

(assert (=> b!135790 m!157187))

(declare-fun m!162157 () Bool)

(assert (=> b!135790 m!162157))

(declare-fun m!162159 () Bool)

(assert (=> b!135793 m!162159))

(declare-fun m!162161 () Bool)

(assert (=> d!42449 m!162161))

(assert (=> d!42449 m!157187))

(declare-fun m!162163 () Bool)

(assert (=> d!42449 m!162163))

(declare-fun m!162165 () Bool)

(assert (=> d!42449 m!162165))

(declare-fun m!162167 () Bool)

(assert (=> d!42449 m!162167))

(assert (=> d!42449 m!156571))

(declare-fun m!162169 () Bool)

(assert (=> d!42449 m!162169))

(assert (=> d!42449 m!157187))

(assert (=> d!42449 m!162161))

(assert (=> b!133235 d!42449))

(declare-fun d!42451 () Bool)

(declare-fun e!88434 () Bool)

(assert (=> d!42451 e!88434))

(declare-fun res!65186 () Bool)

(assert (=> d!42451 (=> res!65186 e!88434)))

(declare-fun lt!70992 () Bool)

(assert (=> d!42451 (= res!65186 (not lt!70992))))

(declare-fun lt!70994 () Bool)

(assert (=> d!42451 (= lt!70992 lt!70994)))

(declare-fun lt!70993 () Unit!4150)

(declare-fun e!88435 () Unit!4150)

(assert (=> d!42451 (= lt!70993 e!88435)))

(declare-fun c!25423 () Bool)

(assert (=> d!42451 (= c!25423 lt!70994)))

(assert (=> d!42451 (= lt!70994 (containsKey!175 (toList!869 lt!69496) lt!69495))))

(assert (=> d!42451 (= (contains!896 lt!69496 lt!69495) lt!70992)))

(declare-fun b!135795 () Bool)

(declare-fun lt!70995 () Unit!4150)

(assert (=> b!135795 (= e!88435 lt!70995)))

(assert (=> b!135795 (= lt!70995 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69496) lt!69495))))

(assert (=> b!135795 (isDefined!125 (getValueByKey!171 (toList!869 lt!69496) lt!69495))))

(declare-fun b!135796 () Bool)

(declare-fun Unit!4283 () Unit!4150)

(assert (=> b!135796 (= e!88435 Unit!4283)))

(declare-fun b!135797 () Bool)

(assert (=> b!135797 (= e!88434 (isDefined!125 (getValueByKey!171 (toList!869 lt!69496) lt!69495)))))

(assert (= (and d!42451 c!25423) b!135795))

(assert (= (and d!42451 (not c!25423)) b!135796))

(assert (= (and d!42451 (not res!65186)) b!135797))

(declare-fun m!162171 () Bool)

(assert (=> d!42451 m!162171))

(declare-fun m!162173 () Bool)

(assert (=> b!135795 m!162173))

(assert (=> b!135795 m!157781))

(assert (=> b!135795 m!157781))

(declare-fun m!162175 () Bool)

(assert (=> b!135795 m!162175))

(assert (=> b!135797 m!157781))

(assert (=> b!135797 m!157781))

(assert (=> b!135797 m!162175))

(assert (=> d!40593 d!42451))

(assert (=> d!40593 d!40585))

(assert (=> d!40593 d!40577))

(declare-fun d!42453 () Bool)

(assert (=> d!42453 (= (apply!116 (+!170 lt!69496 (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69495) (apply!116 lt!69496 lt!69495))))

(assert (=> d!42453 true))

(declare-fun _$34!985 () Unit!4150)

(assert (=> d!42453 (= (choose!828 lt!69496 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) lt!69495) _$34!985)))

(declare-fun bs!5706 () Bool)

(assert (= bs!5706 d!42453))

(assert (=> bs!5706 m!156859))

(assert (=> bs!5706 m!156859))

(assert (=> bs!5706 m!156861))

(assert (=> bs!5706 m!156875))

(assert (=> d!40593 d!42453))

(assert (=> d!40593 d!40583))

(declare-fun d!42455 () Bool)

(declare-fun e!88436 () Bool)

(assert (=> d!42455 e!88436))

(declare-fun res!65187 () Bool)

(assert (=> d!42455 (=> res!65187 e!88436)))

(declare-fun lt!70996 () Bool)

(assert (=> d!42455 (= res!65187 (not lt!70996))))

(declare-fun lt!70998 () Bool)

(assert (=> d!42455 (= lt!70996 lt!70998)))

(declare-fun lt!70997 () Unit!4150)

(declare-fun e!88437 () Unit!4150)

(assert (=> d!42455 (= lt!70997 e!88437)))

(declare-fun c!25424 () Bool)

(assert (=> d!42455 (= c!25424 lt!70998)))

(assert (=> d!42455 (= lt!70998 (containsKey!175 (toList!869 lt!69869) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42455 (= (contains!896 lt!69869 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70996)))

(declare-fun b!135798 () Bool)

(declare-fun lt!70999 () Unit!4150)

(assert (=> b!135798 (= e!88437 lt!70999)))

(assert (=> b!135798 (= lt!70999 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69869) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135798 (isDefined!125 (getValueByKey!171 (toList!869 lt!69869) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135799 () Bool)

(declare-fun Unit!4284 () Unit!4150)

(assert (=> b!135799 (= e!88437 Unit!4284)))

(declare-fun b!135800 () Bool)

(assert (=> b!135800 (= e!88436 (isDefined!125 (getValueByKey!171 (toList!869 lt!69869) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42455 c!25424) b!135798))

(assert (= (and d!42455 (not c!25424)) b!135799))

(assert (= (and d!42455 (not res!65187)) b!135800))

(declare-fun m!162177 () Bool)

(assert (=> d!42455 m!162177))

(declare-fun m!162179 () Bool)

(assert (=> b!135798 m!162179))

(assert (=> b!135798 m!161923))

(assert (=> b!135798 m!161923))

(declare-fun m!162181 () Bool)

(assert (=> b!135798 m!162181))

(assert (=> b!135800 m!161923))

(assert (=> b!135800 m!161923))

(assert (=> b!135800 m!162181))

(assert (=> bm!14741 d!42455))

(assert (=> d!40727 d!40463))

(assert (=> d!40727 d!40465))

(declare-fun d!42457 () Bool)

(assert (=> d!42457 (isDefined!125 (getValueByKey!171 (toList!869 e!86545) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!42457 true))

(declare-fun _$12!405 () Unit!4150)

(assert (=> d!42457 (= (choose!831 (toList!869 e!86545) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355)) _$12!405)))

(declare-fun bs!5707 () Bool)

(assert (= bs!5707 d!42457))

(assert (=> bs!5707 m!156287))

(assert (=> bs!5707 m!156553))

(assert (=> bs!5707 m!156553))

(assert (=> bs!5707 m!156555))

(assert (=> d!40727 d!42457))

(declare-fun d!42459 () Bool)

(declare-fun res!65188 () Bool)

(declare-fun e!88438 () Bool)

(assert (=> d!42459 (=> res!65188 e!88438)))

(assert (=> d!42459 (= res!65188 (or ((_ is Nil!1732) (toList!869 e!86545)) ((_ is Nil!1732) (t!6198 (toList!869 e!86545)))))))

(assert (=> d!42459 (= (isStrictlySorted!317 (toList!869 e!86545)) e!88438)))

(declare-fun b!135801 () Bool)

(declare-fun e!88439 () Bool)

(assert (=> b!135801 (= e!88438 e!88439)))

(declare-fun res!65189 () Bool)

(assert (=> b!135801 (=> (not res!65189) (not e!88439))))

(assert (=> b!135801 (= res!65189 (bvslt (_1!1314 (h!2336 (toList!869 e!86545))) (_1!1314 (h!2336 (t!6198 (toList!869 e!86545))))))))

(declare-fun b!135802 () Bool)

(assert (=> b!135802 (= e!88439 (isStrictlySorted!317 (t!6198 (toList!869 e!86545))))))

(assert (= (and d!42459 (not res!65188)) b!135801))

(assert (= (and b!135801 res!65189) b!135802))

(declare-fun m!162183 () Bool)

(assert (=> b!135802 m!162183))

(assert (=> d!40727 d!42459))

(declare-fun d!42461 () Bool)

(declare-fun e!88440 () Bool)

(assert (=> d!42461 e!88440))

(declare-fun res!65190 () Bool)

(assert (=> d!42461 (=> res!65190 e!88440)))

(declare-fun lt!71000 () Bool)

(assert (=> d!42461 (= res!65190 (not lt!71000))))

(declare-fun lt!71002 () Bool)

(assert (=> d!42461 (= lt!71000 lt!71002)))

(declare-fun lt!71001 () Unit!4150)

(declare-fun e!88441 () Unit!4150)

(assert (=> d!42461 (= lt!71001 e!88441)))

(declare-fun c!25425 () Bool)

(assert (=> d!42461 (= c!25425 lt!71002)))

(assert (=> d!42461 (= lt!71002 (containsKey!175 (toList!869 lt!70114) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42461 (= (contains!896 lt!70114 #b1000000000000000000000000000000000000000000000000000000000000000) lt!71000)))

(declare-fun b!135803 () Bool)

(declare-fun lt!71003 () Unit!4150)

(assert (=> b!135803 (= e!88441 lt!71003)))

(assert (=> b!135803 (= lt!71003 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!70114) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135803 (isDefined!125 (getValueByKey!171 (toList!869 lt!70114) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135804 () Bool)

(declare-fun Unit!4285 () Unit!4150)

(assert (=> b!135804 (= e!88441 Unit!4285)))

(declare-fun b!135805 () Bool)

(assert (=> b!135805 (= e!88440 (isDefined!125 (getValueByKey!171 (toList!869 lt!70114) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42461 c!25425) b!135803))

(assert (= (and d!42461 (not c!25425)) b!135804))

(assert (= (and d!42461 (not res!65190)) b!135805))

(declare-fun m!162185 () Bool)

(assert (=> d!42461 m!162185))

(declare-fun m!162187 () Bool)

(assert (=> b!135803 m!162187))

(assert (=> b!135803 m!161917))

(assert (=> b!135803 m!161917))

(declare-fun m!162189 () Bool)

(assert (=> b!135803 m!162189))

(assert (=> b!135805 m!161917))

(assert (=> b!135805 m!161917))

(assert (=> b!135805 m!162189))

(assert (=> bm!14784 d!42461))

(assert (=> d!40519 d!40541))

(assert (=> d!40519 d!40525))

(declare-fun d!42463 () Bool)

(assert (=> d!42463 (contains!896 (+!170 lt!69412 (tuple2!2609 lt!69415 (zeroValue!2720 newMap!16))) lt!69422)))

(assert (=> d!42463 true))

(declare-fun _$35!383 () Unit!4150)

(assert (=> d!42463 (= (choose!829 lt!69412 lt!69415 (zeroValue!2720 newMap!16) lt!69422) _$35!383)))

(declare-fun bs!5708 () Bool)

(assert (= bs!5708 d!42463))

(assert (=> bs!5708 m!156667))

(assert (=> bs!5708 m!156667))

(assert (=> bs!5708 m!156683))

(assert (=> d!40519 d!42463))

(declare-fun d!42465 () Bool)

(declare-fun e!88442 () Bool)

(assert (=> d!42465 e!88442))

(declare-fun res!65191 () Bool)

(assert (=> d!42465 (=> res!65191 e!88442)))

(declare-fun lt!71004 () Bool)

(assert (=> d!42465 (= res!65191 (not lt!71004))))

(declare-fun lt!71006 () Bool)

(assert (=> d!42465 (= lt!71004 lt!71006)))

(declare-fun lt!71005 () Unit!4150)

(declare-fun e!88443 () Unit!4150)

(assert (=> d!42465 (= lt!71005 e!88443)))

(declare-fun c!25426 () Bool)

(assert (=> d!42465 (= c!25426 lt!71006)))

(assert (=> d!42465 (= lt!71006 (containsKey!175 (toList!869 lt!69412) lt!69422))))

(assert (=> d!42465 (= (contains!896 lt!69412 lt!69422) lt!71004)))

(declare-fun b!135806 () Bool)

(declare-fun lt!71007 () Unit!4150)

(assert (=> b!135806 (= e!88443 lt!71007)))

(assert (=> b!135806 (= lt!71007 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69412) lt!69422))))

(assert (=> b!135806 (isDefined!125 (getValueByKey!171 (toList!869 lt!69412) lt!69422))))

(declare-fun b!135807 () Bool)

(declare-fun Unit!4286 () Unit!4150)

(assert (=> b!135807 (= e!88443 Unit!4286)))

(declare-fun b!135808 () Bool)

(assert (=> b!135808 (= e!88442 (isDefined!125 (getValueByKey!171 (toList!869 lt!69412) lt!69422)))))

(assert (= (and d!42465 c!25426) b!135806))

(assert (= (and d!42465 (not c!25426)) b!135807))

(assert (= (and d!42465 (not res!65191)) b!135808))

(declare-fun m!162191 () Bool)

(assert (=> d!42465 m!162191))

(declare-fun m!162193 () Bool)

(assert (=> b!135806 m!162193))

(declare-fun m!162195 () Bool)

(assert (=> b!135806 m!162195))

(assert (=> b!135806 m!162195))

(declare-fun m!162197 () Bool)

(assert (=> b!135806 m!162197))

(assert (=> b!135808 m!162195))

(assert (=> b!135808 m!162195))

(assert (=> b!135808 m!162197))

(assert (=> d!40519 d!42465))

(declare-fun b!135809 () Bool)

(declare-fun e!88444 () Option!177)

(assert (=> b!135809 (= e!88444 (Some!176 (_2!1314 (h!2336 (toList!869 lt!70046)))))))

(declare-fun b!135812 () Bool)

(declare-fun e!88445 () Option!177)

(assert (=> b!135812 (= e!88445 None!175)))

(declare-fun b!135811 () Bool)

(assert (=> b!135811 (= e!88445 (getValueByKey!171 (t!6198 (toList!869 lt!70046)) (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))))

(declare-fun b!135810 () Bool)

(assert (=> b!135810 (= e!88444 e!88445)))

(declare-fun c!25428 () Bool)

(assert (=> b!135810 (= c!25428 (and ((_ is Cons!1731) (toList!869 lt!70046)) (not (= (_1!1314 (h!2336 (toList!869 lt!70046))) (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))))))))

(declare-fun d!42467 () Bool)

(declare-fun c!25427 () Bool)

(assert (=> d!42467 (= c!25427 (and ((_ is Cons!1731) (toList!869 lt!70046)) (= (_1!1314 (h!2336 (toList!869 lt!70046))) (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16))))))))

(assert (=> d!42467 (= (getValueByKey!171 (toList!869 lt!70046) (_1!1314 (tuple2!2609 lt!69515 (minValue!2720 newMap!16)))) e!88444)))

(assert (= (and d!42467 c!25427) b!135809))

(assert (= (and d!42467 (not c!25427)) b!135810))

(assert (= (and b!135810 c!25428) b!135811))

(assert (= (and b!135810 (not c!25428)) b!135812))

(declare-fun m!162199 () Bool)

(assert (=> b!135811 m!162199))

(assert (=> b!133763 d!42467))

(declare-fun bm!14918 () Bool)

(declare-fun call!14921 () List!1735)

(declare-fun call!14922 () List!1735)

(assert (=> bm!14918 (= call!14921 call!14922)))

(declare-fun b!135813 () Bool)

(declare-fun lt!71008 () List!1735)

(declare-fun e!88448 () Bool)

(assert (=> b!135813 (= e!88448 (contains!898 lt!71008 (tuple2!2609 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135814 () Bool)

(declare-fun e!88450 () List!1735)

(assert (=> b!135814 (= e!88450 call!14922)))

(declare-fun b!135815 () Bool)

(declare-fun res!65192 () Bool)

(assert (=> b!135815 (=> (not res!65192) (not e!88448))))

(assert (=> b!135815 (= res!65192 (containsKey!175 lt!71008 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun e!88446 () List!1735)

(declare-fun b!135816 () Bool)

(assert (=> b!135816 (= e!88446 (insertStrictlySorted!90 (t!6198 (t!6198 (toList!869 lt!69217))) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!135817 () Bool)

(declare-fun e!88447 () List!1735)

(assert (=> b!135817 (= e!88447 call!14921)))

(declare-fun bm!14919 () Bool)

(declare-fun call!14923 () List!1735)

(assert (=> bm!14919 (= call!14922 call!14923)))

(declare-fun c!25431 () Bool)

(declare-fun b!135819 () Bool)

(declare-fun c!25429 () Bool)

(assert (=> b!135819 (= e!88446 (ite c!25431 (t!6198 (t!6198 (toList!869 lt!69217))) (ite c!25429 (Cons!1731 (h!2336 (t!6198 (toList!869 lt!69217))) (t!6198 (t!6198 (toList!869 lt!69217)))) Nil!1732)))))

(declare-fun b!135820 () Bool)

(declare-fun e!88449 () List!1735)

(assert (=> b!135820 (= e!88449 call!14923)))

(declare-fun b!135821 () Bool)

(assert (=> b!135821 (= c!25429 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69217))) (bvsgt (_1!1314 (h!2336 (t!6198 (toList!869 lt!69217)))) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> b!135821 (= e!88450 e!88447)))

(declare-fun d!42469 () Bool)

(assert (=> d!42469 e!88448))

(declare-fun res!65193 () Bool)

(assert (=> d!42469 (=> (not res!65193) (not e!88448))))

(assert (=> d!42469 (= res!65193 (isStrictlySorted!317 lt!71008))))

(assert (=> d!42469 (= lt!71008 e!88449)))

(declare-fun c!25430 () Bool)

(assert (=> d!42469 (= c!25430 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69217))) (bvslt (_1!1314 (h!2336 (t!6198 (toList!869 lt!69217)))) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!42469 (isStrictlySorted!317 (t!6198 (toList!869 lt!69217)))))

(assert (=> d!42469 (= (insertStrictlySorted!90 (t!6198 (toList!869 lt!69217)) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) lt!71008)))

(declare-fun b!135818 () Bool)

(assert (=> b!135818 (= e!88449 e!88450)))

(assert (=> b!135818 (= c!25431 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69217))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69217)))) (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(declare-fun b!135822 () Bool)

(assert (=> b!135822 (= e!88447 call!14921)))

(declare-fun bm!14920 () Bool)

(assert (=> bm!14920 (= call!14923 ($colon$colon!91 e!88446 (ite c!25430 (h!2336 (t!6198 (toList!869 lt!69217))) (tuple2!2609 (_1!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69220 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!25432 () Bool)

(assert (=> bm!14920 (= c!25432 c!25430)))

(assert (= (and d!42469 c!25430) b!135820))

(assert (= (and d!42469 (not c!25430)) b!135818))

(assert (= (and b!135818 c!25431) b!135814))

(assert (= (and b!135818 (not c!25431)) b!135821))

(assert (= (and b!135821 c!25429) b!135822))

(assert (= (and b!135821 (not c!25429)) b!135817))

(assert (= (or b!135822 b!135817) bm!14918))

(assert (= (or b!135814 bm!14918) bm!14919))

(assert (= (or b!135820 bm!14919) bm!14920))

(assert (= (and bm!14920 c!25432) b!135816))

(assert (= (and bm!14920 (not c!25432)) b!135819))

(assert (= (and d!42469 res!65193) b!135815))

(assert (= (and b!135815 res!65192) b!135813))

(declare-fun m!162201 () Bool)

(assert (=> b!135815 m!162201))

(declare-fun m!162203 () Bool)

(assert (=> b!135813 m!162203))

(declare-fun m!162205 () Bool)

(assert (=> d!42469 m!162205))

(assert (=> d!42469 m!159799))

(declare-fun m!162207 () Bool)

(assert (=> bm!14920 m!162207))

(declare-fun m!162209 () Bool)

(assert (=> b!135816 m!162209))

(assert (=> b!133602 d!42469))

(declare-fun d!42471 () Bool)

(declare-fun res!65194 () Bool)

(declare-fun e!88451 () Bool)

(assert (=> d!42471 (=> res!65194 e!88451)))

(assert (=> d!42471 (= res!65194 (and ((_ is Cons!1731) (toList!869 lt!69488)) (= (_1!1314 (h!2336 (toList!869 lt!69488))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42471 (= (containsKey!175 (toList!869 lt!69488) #b0000000000000000000000000000000000000000000000000000000000000000) e!88451)))

(declare-fun b!135823 () Bool)

(declare-fun e!88452 () Bool)

(assert (=> b!135823 (= e!88451 e!88452)))

(declare-fun res!65195 () Bool)

(assert (=> b!135823 (=> (not res!65195) (not e!88452))))

(assert (=> b!135823 (= res!65195 (and (or (not ((_ is Cons!1731) (toList!869 lt!69488))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69488))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1731) (toList!869 lt!69488)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69488))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135824 () Bool)

(assert (=> b!135824 (= e!88452 (containsKey!175 (t!6198 (toList!869 lt!69488)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42471 (not res!65194)) b!135823))

(assert (= (and b!135823 res!65195) b!135824))

(declare-fun m!162211 () Bool)

(assert (=> b!135824 m!162211))

(assert (=> d!40899 d!42471))

(declare-fun d!42473 () Bool)

(declare-fun e!88453 () Bool)

(assert (=> d!42473 e!88453))

(declare-fun res!65196 () Bool)

(assert (=> d!42473 (=> res!65196 e!88453)))

(declare-fun lt!71009 () Bool)

(assert (=> d!42473 (= res!65196 (not lt!71009))))

(declare-fun lt!71011 () Bool)

(assert (=> d!42473 (= lt!71009 lt!71011)))

(declare-fun lt!71010 () Unit!4150)

(declare-fun e!88454 () Unit!4150)

(assert (=> d!42473 (= lt!71010 e!88454)))

(declare-fun c!25433 () Bool)

(assert (=> d!42473 (= c!25433 lt!71011)))

(assert (=> d!42473 (= lt!71011 (containsKey!175 (toList!869 lt!69860) (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42473 (= (contains!896 lt!69860 (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!71009)))

(declare-fun b!135825 () Bool)

(declare-fun lt!71012 () Unit!4150)

(assert (=> b!135825 (= e!88454 lt!71012)))

(assert (=> b!135825 (= lt!71012 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69860) (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!135825 (isDefined!125 (getValueByKey!171 (toList!869 lt!69860) (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135826 () Bool)

(declare-fun Unit!4287 () Unit!4150)

(assert (=> b!135826 (= e!88454 Unit!4287)))

(declare-fun b!135827 () Bool)

(assert (=> b!135827 (= e!88453 (isDefined!125 (getValueByKey!171 (toList!869 lt!69860) (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42473 c!25433) b!135825))

(assert (= (and d!42473 (not c!25433)) b!135826))

(assert (= (and d!42473 (not res!65196)) b!135827))

(declare-fun m!162213 () Bool)

(assert (=> d!42473 m!162213))

(declare-fun m!162215 () Bool)

(assert (=> b!135825 m!162215))

(assert (=> b!135825 m!157667))

(assert (=> b!135825 m!157667))

(declare-fun m!162217 () Bool)

(assert (=> b!135825 m!162217))

(assert (=> b!135827 m!157667))

(assert (=> b!135827 m!157667))

(assert (=> b!135827 m!162217))

(assert (=> d!40553 d!42473))

(declare-fun b!135828 () Bool)

(declare-fun e!88455 () Option!177)

(assert (=> b!135828 (= e!88455 (Some!176 (_2!1314 (h!2336 lt!69862))))))

(declare-fun b!135831 () Bool)

(declare-fun e!88456 () Option!177)

(assert (=> b!135831 (= e!88456 None!175)))

(declare-fun b!135830 () Bool)

(assert (=> b!135830 (= e!88456 (getValueByKey!171 (t!6198 lt!69862) (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135829 () Bool)

(assert (=> b!135829 (= e!88455 e!88456)))

(declare-fun c!25435 () Bool)

(assert (=> b!135829 (= c!25435 (and ((_ is Cons!1731) lt!69862) (not (= (_1!1314 (h!2336 lt!69862)) (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25434 () Bool)

(declare-fun d!42475 () Bool)

(assert (=> d!42475 (= c!25434 (and ((_ is Cons!1731) lt!69862) (= (_1!1314 (h!2336 lt!69862)) (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42475 (= (getValueByKey!171 lt!69862 (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88455)))

(assert (= (and d!42475 c!25434) b!135828))

(assert (= (and d!42475 (not c!25434)) b!135829))

(assert (= (and b!135829 c!25435) b!135830))

(assert (= (and b!135829 (not c!25435)) b!135831))

(declare-fun m!162219 () Bool)

(assert (=> b!135830 m!162219))

(assert (=> d!40553 d!42475))

(declare-fun d!42477 () Bool)

(assert (=> d!42477 (= (getValueByKey!171 lt!69862 (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!71013 () Unit!4150)

(assert (=> d!42477 (= lt!71013 (choose!834 lt!69862 (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88457 () Bool)

(assert (=> d!42477 e!88457))

(declare-fun res!65197 () Bool)

(assert (=> d!42477 (=> (not res!65197) (not e!88457))))

(assert (=> d!42477 (= res!65197 (isStrictlySorted!317 lt!69862))))

(assert (=> d!42477 (= (lemmaContainsTupThenGetReturnValue!88 lt!69862 (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!71013)))

(declare-fun b!135832 () Bool)

(declare-fun res!65198 () Bool)

(assert (=> b!135832 (=> (not res!65198) (not e!88457))))

(assert (=> b!135832 (= res!65198 (containsKey!175 lt!69862 (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135833 () Bool)

(assert (=> b!135833 (= e!88457 (contains!898 lt!69862 (tuple2!2609 (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42477 res!65197) b!135832))

(assert (= (and b!135832 res!65198) b!135833))

(assert (=> d!42477 m!157661))

(declare-fun m!162221 () Bool)

(assert (=> d!42477 m!162221))

(declare-fun m!162223 () Bool)

(assert (=> d!42477 m!162223))

(declare-fun m!162225 () Bool)

(assert (=> b!135832 m!162225))

(declare-fun m!162227 () Bool)

(assert (=> b!135833 m!162227))

(assert (=> d!40553 d!42477))

(declare-fun bm!14921 () Bool)

(declare-fun call!14924 () List!1735)

(declare-fun call!14925 () List!1735)

(assert (=> bm!14921 (= call!14924 call!14925)))

(declare-fun b!135834 () Bool)

(declare-fun e!88460 () Bool)

(declare-fun lt!71014 () List!1735)

(assert (=> b!135834 (= e!88460 (contains!898 lt!71014 (tuple2!2609 (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135835 () Bool)

(declare-fun e!88462 () List!1735)

(assert (=> b!135835 (= e!88462 call!14925)))

(declare-fun b!135836 () Bool)

(declare-fun res!65199 () Bool)

(assert (=> b!135836 (=> (not res!65199) (not e!88460))))

(assert (=> b!135836 (= res!65199 (containsKey!175 lt!71014 (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135837 () Bool)

(declare-fun e!88458 () List!1735)

(assert (=> b!135837 (= e!88458 (insertStrictlySorted!90 (t!6198 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135838 () Bool)

(declare-fun e!88459 () List!1735)

(assert (=> b!135838 (= e!88459 call!14924)))

(declare-fun bm!14922 () Bool)

(declare-fun call!14926 () List!1735)

(assert (=> bm!14922 (= call!14925 call!14926)))

(declare-fun c!25436 () Bool)

(declare-fun c!25438 () Bool)

(declare-fun b!135840 () Bool)

(assert (=> b!135840 (= e!88458 (ite c!25438 (t!6198 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (ite c!25436 (Cons!1731 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (t!6198 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) Nil!1732)))))

(declare-fun b!135841 () Bool)

(declare-fun e!88461 () List!1735)

(assert (=> b!135841 (= e!88461 call!14926)))

(declare-fun b!135842 () Bool)

(assert (=> b!135842 (= c!25436 (and ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (bvsgt (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!135842 (= e!88462 e!88459)))

(declare-fun d!42479 () Bool)

(assert (=> d!42479 e!88460))

(declare-fun res!65200 () Bool)

(assert (=> d!42479 (=> (not res!65200) (not e!88460))))

(assert (=> d!42479 (= res!65200 (isStrictlySorted!317 lt!71014))))

(assert (=> d!42479 (= lt!71014 e!88461)))

(declare-fun c!25437 () Bool)

(assert (=> d!42479 (= c!25437 (and ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (bvslt (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42479 (isStrictlySorted!317 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))))

(assert (=> d!42479 (= (insertStrictlySorted!90 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!71014)))

(declare-fun b!135839 () Bool)

(assert (=> b!135839 (= e!88461 e!88462)))

(assert (=> b!135839 (= c!25438 (and ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (= (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135843 () Bool)

(assert (=> b!135843 (= e!88459 call!14924)))

(declare-fun bm!14923 () Bool)

(assert (=> bm!14923 (= call!14926 ($colon$colon!91 e!88458 (ite c!25437 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (tuple2!2609 (_1!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25439 () Bool)

(assert (=> bm!14923 (= c!25439 c!25437)))

(assert (= (and d!42479 c!25437) b!135841))

(assert (= (and d!42479 (not c!25437)) b!135839))

(assert (= (and b!135839 c!25438) b!135835))

(assert (= (and b!135839 (not c!25438)) b!135842))

(assert (= (and b!135842 c!25436) b!135843))

(assert (= (and b!135842 (not c!25436)) b!135838))

(assert (= (or b!135843 b!135838) bm!14921))

(assert (= (or b!135835 bm!14921) bm!14922))

(assert (= (or b!135841 bm!14922) bm!14923))

(assert (= (and bm!14923 c!25439) b!135837))

(assert (= (and bm!14923 (not c!25439)) b!135840))

(assert (= (and d!42479 res!65200) b!135836))

(assert (= (and b!135836 res!65199) b!135834))

(declare-fun m!162229 () Bool)

(assert (=> b!135836 m!162229))

(declare-fun m!162231 () Bool)

(assert (=> b!135834 m!162231))

(declare-fun m!162233 () Bool)

(assert (=> d!42479 m!162233))

(assert (=> d!42479 m!159675))

(declare-fun m!162235 () Bool)

(assert (=> bm!14923 m!162235))

(declare-fun m!162237 () Bool)

(assert (=> b!135837 m!162237))

(assert (=> d!40553 d!42479))

(assert (=> d!40817 d!40559))

(assert (=> d!40817 d!40561))

(declare-fun d!42481 () Bool)

(assert (=> d!42481 (isDefined!125 (getValueByKey!171 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!42481 true))

(declare-fun _$12!406 () Unit!4150)

(assert (=> d!42481 (= (choose!831 (toList!869 lt!69221) (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) _$12!406)))

(declare-fun bs!5709 () Bool)

(assert (= bs!5709 d!42481))

(assert (=> bs!5709 m!156357))

(assert (=> bs!5709 m!156711))

(assert (=> bs!5709 m!156711))

(assert (=> bs!5709 m!157029))

(assert (=> d!40817 d!42481))

(assert (=> d!40817 d!41549))

(declare-fun b!135844 () Bool)

(declare-fun e!88463 () Option!177)

(assert (=> b!135844 (= e!88463 (Some!176 (_2!1314 (h!2336 (t!6198 lt!69358)))))))

(declare-fun b!135847 () Bool)

(declare-fun e!88464 () Option!177)

(assert (=> b!135847 (= e!88464 None!175)))

(declare-fun b!135846 () Bool)

(assert (=> b!135846 (= e!88464 (getValueByKey!171 (t!6198 (t!6198 lt!69358)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135845 () Bool)

(assert (=> b!135845 (= e!88463 e!88464)))

(declare-fun c!25441 () Bool)

(assert (=> b!135845 (= c!25441 (and ((_ is Cons!1731) (t!6198 lt!69358)) (not (= (_1!1314 (h!2336 (t!6198 lt!69358))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!42483 () Bool)

(declare-fun c!25440 () Bool)

(assert (=> d!42483 (= c!25440 (and ((_ is Cons!1731) (t!6198 lt!69358)) (= (_1!1314 (h!2336 (t!6198 lt!69358))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42483 (= (getValueByKey!171 (t!6198 lt!69358) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88463)))

(assert (= (and d!42483 c!25440) b!135844))

(assert (= (and d!42483 (not c!25440)) b!135845))

(assert (= (and b!135845 c!25441) b!135846))

(assert (= (and b!135845 (not c!25441)) b!135847))

(declare-fun m!162239 () Bool)

(assert (=> b!135846 m!162239))

(assert (=> b!133614 d!42483))

(assert (=> b!133313 d!40473))

(declare-fun lt!71015 () Bool)

(declare-fun d!42485 () Bool)

(assert (=> d!42485 (= lt!71015 (select (content!132 (toList!869 lt!69907)) (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(declare-fun e!88466 () Bool)

(assert (=> d!42485 (= lt!71015 e!88466)))

(declare-fun res!65201 () Bool)

(assert (=> d!42485 (=> (not res!65201) (not e!88466))))

(assert (=> d!42485 (= res!65201 ((_ is Cons!1731) (toList!869 lt!69907)))))

(assert (=> d!42485 (= (contains!898 (toList!869 lt!69907) (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!71015)))

(declare-fun b!135848 () Bool)

(declare-fun e!88465 () Bool)

(assert (=> b!135848 (= e!88466 e!88465)))

(declare-fun res!65202 () Bool)

(assert (=> b!135848 (=> res!65202 e!88465)))

(assert (=> b!135848 (= res!65202 (= (h!2336 (toList!869 lt!69907)) (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(declare-fun b!135849 () Bool)

(assert (=> b!135849 (= e!88465 (contains!898 (t!6198 (toList!869 lt!69907)) (tuple2!2609 lt!69493 (ite c!24541 (ite c!24549 (minValue!2720 newMap!16) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(assert (= (and d!42485 res!65201) b!135848))

(assert (= (and b!135848 (not res!65202)) b!135849))

(declare-fun m!162241 () Bool)

(assert (=> d!42485 m!162241))

(declare-fun m!162243 () Bool)

(assert (=> d!42485 m!162243))

(declare-fun m!162245 () Bool)

(assert (=> b!135849 m!162245))

(assert (=> b!133501 d!42485))

(declare-fun d!42487 () Bool)

(declare-fun e!88467 () Bool)

(assert (=> d!42487 e!88467))

(declare-fun res!65203 () Bool)

(assert (=> d!42487 (=> res!65203 e!88467)))

(declare-fun lt!71016 () Bool)

(assert (=> d!42487 (= res!65203 (not lt!71016))))

(declare-fun lt!71018 () Bool)

(assert (=> d!42487 (= lt!71016 lt!71018)))

(declare-fun lt!71017 () Unit!4150)

(declare-fun e!88468 () Unit!4150)

(assert (=> d!42487 (= lt!71017 e!88468)))

(declare-fun c!25442 () Bool)

(assert (=> d!42487 (= c!25442 lt!71018)))

(assert (=> d!42487 (= lt!71018 (containsKey!175 (toList!869 lt!69834) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42487 (= (contains!896 lt!69834 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!71016)))

(declare-fun b!135850 () Bool)

(declare-fun lt!71019 () Unit!4150)

(assert (=> b!135850 (= e!88468 lt!71019)))

(assert (=> b!135850 (= lt!71019 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69834) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!135850 (isDefined!125 (getValueByKey!171 (toList!869 lt!69834) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135851 () Bool)

(declare-fun Unit!4288 () Unit!4150)

(assert (=> b!135851 (= e!88468 Unit!4288)))

(declare-fun b!135852 () Bool)

(assert (=> b!135852 (= e!88467 (isDefined!125 (getValueByKey!171 (toList!869 lt!69834) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42487 c!25442) b!135850))

(assert (= (and d!42487 (not c!25442)) b!135851))

(assert (= (and d!42487 (not res!65203)) b!135852))

(declare-fun m!162247 () Bool)

(assert (=> d!42487 m!162247))

(declare-fun m!162249 () Bool)

(assert (=> b!135850 m!162249))

(assert (=> b!135850 m!157603))

(assert (=> b!135850 m!157603))

(declare-fun m!162251 () Bool)

(assert (=> b!135850 m!162251))

(assert (=> b!135852 m!157603))

(assert (=> b!135852 m!157603))

(assert (=> b!135852 m!162251))

(assert (=> d!40549 d!42487))

(declare-fun b!135853 () Bool)

(declare-fun e!88469 () Option!177)

(assert (=> b!135853 (= e!88469 (Some!176 (_2!1314 (h!2336 lt!69836))))))

(declare-fun b!135856 () Bool)

(declare-fun e!88470 () Option!177)

(assert (=> b!135856 (= e!88470 None!175)))

(declare-fun b!135855 () Bool)

(assert (=> b!135855 (= e!88470 (getValueByKey!171 (t!6198 lt!69836) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135854 () Bool)

(assert (=> b!135854 (= e!88469 e!88470)))

(declare-fun c!25444 () Bool)

(assert (=> b!135854 (= c!25444 (and ((_ is Cons!1731) lt!69836) (not (= (_1!1314 (h!2336 lt!69836)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25443 () Bool)

(declare-fun d!42489 () Bool)

(assert (=> d!42489 (= c!25443 (and ((_ is Cons!1731) lt!69836) (= (_1!1314 (h!2336 lt!69836)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42489 (= (getValueByKey!171 lt!69836 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88469)))

(assert (= (and d!42489 c!25443) b!135853))

(assert (= (and d!42489 (not c!25443)) b!135854))

(assert (= (and b!135854 c!25444) b!135855))

(assert (= (and b!135854 (not c!25444)) b!135856))

(declare-fun m!162253 () Bool)

(assert (=> b!135855 m!162253))

(assert (=> d!40549 d!42489))

(declare-fun d!42491 () Bool)

(assert (=> d!42491 (= (getValueByKey!171 lt!69836 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!71020 () Unit!4150)

(assert (=> d!42491 (= lt!71020 (choose!834 lt!69836 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88471 () Bool)

(assert (=> d!42491 e!88471))

(declare-fun res!65204 () Bool)

(assert (=> d!42491 (=> (not res!65204) (not e!88471))))

(assert (=> d!42491 (= res!65204 (isStrictlySorted!317 lt!69836))))

(assert (=> d!42491 (= (lemmaContainsTupThenGetReturnValue!88 lt!69836 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!71020)))

(declare-fun b!135857 () Bool)

(declare-fun res!65205 () Bool)

(assert (=> b!135857 (=> (not res!65205) (not e!88471))))

(assert (=> b!135857 (= res!65205 (containsKey!175 lt!69836 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135858 () Bool)

(assert (=> b!135858 (= e!88471 (contains!898 lt!69836 (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42491 res!65204) b!135857))

(assert (= (and b!135857 res!65205) b!135858))

(assert (=> d!42491 m!157597))

(declare-fun m!162255 () Bool)

(assert (=> d!42491 m!162255))

(declare-fun m!162257 () Bool)

(assert (=> d!42491 m!162257))

(declare-fun m!162259 () Bool)

(assert (=> b!135857 m!162259))

(declare-fun m!162261 () Bool)

(assert (=> b!135858 m!162261))

(assert (=> d!40549 d!42491))

(declare-fun bm!14924 () Bool)

(declare-fun call!14927 () List!1735)

(declare-fun call!14928 () List!1735)

(assert (=> bm!14924 (= call!14927 call!14928)))

(declare-fun lt!71021 () List!1735)

(declare-fun b!135859 () Bool)

(declare-fun e!88474 () Bool)

(assert (=> b!135859 (= e!88474 (contains!898 lt!71021 (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135860 () Bool)

(declare-fun e!88476 () List!1735)

(assert (=> b!135860 (= e!88476 call!14928)))

(declare-fun b!135861 () Bool)

(declare-fun res!65206 () Bool)

(assert (=> b!135861 (=> (not res!65206) (not e!88474))))

(assert (=> b!135861 (= res!65206 (containsKey!175 lt!71021 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88472 () List!1735)

(declare-fun b!135862 () Bool)

(assert (=> b!135862 (= e!88472 (insertStrictlySorted!90 (t!6198 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135863 () Bool)

(declare-fun e!88473 () List!1735)

(assert (=> b!135863 (= e!88473 call!14927)))

(declare-fun bm!14925 () Bool)

(declare-fun call!14929 () List!1735)

(assert (=> bm!14925 (= call!14928 call!14929)))

(declare-fun c!25447 () Bool)

(declare-fun b!135865 () Bool)

(declare-fun c!25445 () Bool)

(assert (=> b!135865 (= e!88472 (ite c!25447 (t!6198 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (ite c!25445 (Cons!1731 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (t!6198 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) Nil!1732)))))

(declare-fun b!135866 () Bool)

(declare-fun e!88475 () List!1735)

(assert (=> b!135866 (= e!88475 call!14929)))

(declare-fun b!135867 () Bool)

(assert (=> b!135867 (= c!25445 (and ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (bvsgt (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!135867 (= e!88476 e!88473)))

(declare-fun d!42493 () Bool)

(assert (=> d!42493 e!88474))

(declare-fun res!65207 () Bool)

(assert (=> d!42493 (=> (not res!65207) (not e!88474))))

(assert (=> d!42493 (= res!65207 (isStrictlySorted!317 lt!71021))))

(assert (=> d!42493 (= lt!71021 e!88475)))

(declare-fun c!25446 () Bool)

(assert (=> d!42493 (= c!25446 (and ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (bvslt (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42493 (isStrictlySorted!317 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))))

(assert (=> d!42493 (= (insertStrictlySorted!90 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!71021)))

(declare-fun b!135864 () Bool)

(assert (=> b!135864 (= e!88475 e!88476)))

(assert (=> b!135864 (= c!25447 (and ((_ is Cons!1731) (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (= (_1!1314 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135868 () Bool)

(assert (=> b!135868 (= e!88473 call!14927)))

(declare-fun bm!14926 () Bool)

(assert (=> bm!14926 (= call!14929 ($colon$colon!91 e!88472 (ite c!25446 (h!2336 (toList!869 (getCurrentListMap!540 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (tuple2!2609 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25448 () Bool)

(assert (=> bm!14926 (= c!25448 c!25446)))

(assert (= (and d!42493 c!25446) b!135866))

(assert (= (and d!42493 (not c!25446)) b!135864))

(assert (= (and b!135864 c!25447) b!135860))

(assert (= (and b!135864 (not c!25447)) b!135867))

(assert (= (and b!135867 c!25445) b!135868))

(assert (= (and b!135867 (not c!25445)) b!135863))

(assert (= (or b!135868 b!135863) bm!14924))

(assert (= (or b!135860 bm!14924) bm!14925))

(assert (= (or b!135866 bm!14925) bm!14926))

(assert (= (and bm!14926 c!25448) b!135862))

(assert (= (and bm!14926 (not c!25448)) b!135865))

(assert (= (and d!42493 res!65207) b!135861))

(assert (= (and b!135861 res!65206) b!135859))

(declare-fun m!162263 () Bool)

(assert (=> b!135861 m!162263))

(declare-fun m!162265 () Bool)

(assert (=> b!135859 m!162265))

(declare-fun m!162267 () Bool)

(assert (=> d!42493 m!162267))

(assert (=> d!42493 m!159675))

(declare-fun m!162269 () Bool)

(assert (=> bm!14926 m!162269))

(declare-fun m!162271 () Bool)

(assert (=> b!135862 m!162271))

(assert (=> d!40549 d!42493))

(assert (=> b!133720 d!40851))

(declare-fun b!135869 () Bool)

(declare-fun e!88477 () Option!177)

(assert (=> b!135869 (= e!88477 (Some!176 (_2!1314 (h!2336 (toList!869 lt!70036)))))))

(declare-fun b!135872 () Bool)

(declare-fun e!88478 () Option!177)

(assert (=> b!135872 (= e!88478 None!175)))

(declare-fun b!135871 () Bool)

(assert (=> b!135871 (= e!88478 (getValueByKey!171 (t!6198 (toList!869 lt!70036)) (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!135870 () Bool)

(assert (=> b!135870 (= e!88477 e!88478)))

(declare-fun c!25450 () Bool)

(assert (=> b!135870 (= c!25450 (and ((_ is Cons!1731) (toList!869 lt!70036)) (not (= (_1!1314 (h!2336 (toList!869 lt!70036))) (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))))

(declare-fun c!25449 () Bool)

(declare-fun d!42495 () Bool)

(assert (=> d!42495 (= c!25449 (and ((_ is Cons!1731) (toList!869 lt!70036)) (= (_1!1314 (h!2336 (toList!869 lt!70036))) (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (=> d!42495 (= (getValueByKey!171 (toList!869 lt!70036) (_1!1314 (tuple2!2609 lt!69525 (ite (and c!24541 c!24549) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) e!88477)))

(assert (= (and d!42495 c!25449) b!135869))

(assert (= (and d!42495 (not c!25449)) b!135870))

(assert (= (and b!135870 c!25450) b!135871))

(assert (= (and b!135870 (not c!25450)) b!135872))

(declare-fun m!162273 () Bool)

(assert (=> b!135871 m!162273))

(assert (=> b!133757 d!42495))

(declare-fun b!135873 () Bool)

(declare-fun e!88479 () Option!177)

(assert (=> b!135873 (= e!88479 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 lt!69449))))))))

(declare-fun b!135876 () Bool)

(declare-fun e!88480 () Option!177)

(assert (=> b!135876 (= e!88480 None!175)))

(declare-fun b!135875 () Bool)

(assert (=> b!135875 (= e!88480 (getValueByKey!171 (t!6198 (t!6198 (toList!869 lt!69449))) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(declare-fun b!135874 () Bool)

(assert (=> b!135874 (= e!88479 e!88480)))

(declare-fun c!25452 () Bool)

(assert (=> b!135874 (= c!25452 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69449))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69449)))) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))))))))

(declare-fun c!25451 () Bool)

(declare-fun d!42497 () Bool)

(assert (=> d!42497 (= c!25451 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69449))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69449)))) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992))))))))))

(assert (=> d!42497 (= (getValueByKey!171 (t!6198 (toList!869 lt!69449)) (_1!1314 (tuple2!2609 lt!69236 (zeroValue!2720 (v!3197 (underlying!454 thiss!992)))))) e!88479)))

(assert (= (and d!42497 c!25451) b!135873))

(assert (= (and d!42497 (not c!25451)) b!135874))

(assert (= (and b!135874 c!25452) b!135875))

(assert (= (and b!135874 (not c!25452)) b!135876))

(declare-fun m!162275 () Bool)

(assert (=> b!135875 m!162275))

(assert (=> b!133795 d!42497))

(declare-fun d!42499 () Bool)

(assert (=> d!42499 (= (apply!116 lt!69737 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1491 (getValueByKey!171 (toList!869 lt!69737) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5710 () Bool)

(assert (= bs!5710 d!42499))

(assert (=> bs!5710 m!156533))

(assert (=> bs!5710 m!161427))

(assert (=> bs!5710 m!161427))

(declare-fun m!162277 () Bool)

(assert (=> bs!5710 m!162277))

(assert (=> b!133291 d!42499))

(assert (=> b!133291 d!40923))

(declare-fun d!42501 () Bool)

(assert (=> d!42501 (= (apply!116 lt!69703 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1491 (getValueByKey!171 (toList!869 lt!69703) (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5711 () Bool)

(assert (= bs!5711 d!42501))

(assert (=> bs!5711 m!156533))

(assert (=> bs!5711 m!161419))

(assert (=> bs!5711 m!161419))

(declare-fun m!162279 () Bool)

(assert (=> bs!5711 m!162279))

(assert (=> b!133264 d!42501))

(declare-fun d!42503 () Bool)

(declare-fun c!25453 () Bool)

(assert (=> d!42503 (= c!25453 ((_ is ValueCellFull!1095) (select (arr!2261 lt!69317) #b00000000000000000000000000000000)))))

(declare-fun e!88481 () V!3483)

(assert (=> d!42503 (= (get!1488 (select (arr!2261 lt!69317) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!88481)))

(declare-fun b!135877 () Bool)

(assert (=> b!135877 (= e!88481 (get!1489 (select (arr!2261 lt!69317) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135878 () Bool)

(assert (=> b!135878 (= e!88481 (get!1490 (select (arr!2261 lt!69317) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42503 c!25453) b!135877))

(assert (= (and d!42503 (not c!25453)) b!135878))

(assert (=> b!135877 m!157219))

(assert (=> b!135877 m!156647))

(declare-fun m!162281 () Bool)

(assert (=> b!135877 m!162281))

(assert (=> b!135878 m!157219))

(assert (=> b!135878 m!156647))

(declare-fun m!162283 () Bool)

(assert (=> b!135878 m!162283))

(assert (=> b!133264 d!42503))

(declare-fun b!135879 () Bool)

(declare-fun e!88482 () Option!177)

(assert (=> b!135879 (= e!88482 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 lt!69376))))))))

(declare-fun b!135882 () Bool)

(declare-fun e!88483 () Option!177)

(assert (=> b!135882 (= e!88483 None!175)))

(declare-fun b!135881 () Bool)

(assert (=> b!135881 (= e!88483 (getValueByKey!171 (t!6198 (t!6198 (toList!869 lt!69376))) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135880 () Bool)

(assert (=> b!135880 (= e!88482 e!88483)))

(declare-fun c!25455 () Bool)

(assert (=> b!135880 (= c!25455 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69376))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69376)))) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!25454 () Bool)

(declare-fun d!42505 () Bool)

(assert (=> d!42505 (= c!25454 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69376))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69376)))) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!42505 (= (getValueByKey!171 (t!6198 (toList!869 lt!69376)) (_1!1314 (ite c!24541 (ite c!24549 (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!88482)))

(assert (= (and d!42505 c!25454) b!135879))

(assert (= (and d!42505 (not c!25454)) b!135880))

(assert (= (and b!135880 c!25455) b!135881))

(assert (= (and b!135880 (not c!25455)) b!135882))

(declare-fun m!162285 () Bool)

(assert (=> b!135881 m!162285))

(assert (=> b!133984 d!42505))

(declare-fun d!42507 () Bool)

(declare-fun res!65208 () Bool)

(declare-fun e!88484 () Bool)

(assert (=> d!42507 (=> res!65208 e!88484)))

(assert (=> d!42507 (= res!65208 (and ((_ is Cons!1731) (toList!869 lt!69416)) (= (_1!1314 (h!2336 (toList!869 lt!69416))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42507 (= (containsKey!175 (toList!869 lt!69416) #b1000000000000000000000000000000000000000000000000000000000000000) e!88484)))

(declare-fun b!135883 () Bool)

(declare-fun e!88485 () Bool)

(assert (=> b!135883 (= e!88484 e!88485)))

(declare-fun res!65209 () Bool)

(assert (=> b!135883 (=> (not res!65209) (not e!88485))))

(assert (=> b!135883 (= res!65209 (and (or (not ((_ is Cons!1731) (toList!869 lt!69416))) (bvsle (_1!1314 (h!2336 (toList!869 lt!69416))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1731) (toList!869 lt!69416)) (bvslt (_1!1314 (h!2336 (toList!869 lt!69416))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135884 () Bool)

(assert (=> b!135884 (= e!88485 (containsKey!175 (t!6198 (toList!869 lt!69416)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42507 (not res!65208)) b!135883))

(assert (= (and b!135883 res!65209) b!135884))

(declare-fun m!162287 () Bool)

(assert (=> b!135884 m!162287))

(assert (=> d!40721 d!42507))

(declare-fun d!42509 () Bool)

(assert (=> d!42509 (isDefined!125 (getValueByKey!171 (toList!869 lt!69356) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!71022 () Unit!4150)

(assert (=> d!42509 (= lt!71022 (choose!831 (toList!869 lt!69356) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88486 () Bool)

(assert (=> d!42509 e!88486))

(declare-fun res!65210 () Bool)

(assert (=> d!42509 (=> (not res!65210) (not e!88486))))

(assert (=> d!42509 (= res!65210 (isStrictlySorted!317 (toList!869 lt!69356)))))

(assert (=> d!42509 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69356) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!71022)))

(declare-fun b!135885 () Bool)

(assert (=> b!135885 (= e!88486 (containsKey!175 (toList!869 lt!69356) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42509 res!65210) b!135885))

(assert (=> d!42509 m!156545))

(assert (=> d!42509 m!156545))

(assert (=> d!42509 m!158019))

(declare-fun m!162289 () Bool)

(assert (=> d!42509 m!162289))

(declare-fun m!162291 () Bool)

(assert (=> d!42509 m!162291))

(assert (=> b!135885 m!158015))

(assert (=> b!133609 d!42509))

(assert (=> b!133609 d!42059))

(assert (=> b!133609 d!40485))

(declare-fun d!42511 () Bool)

(declare-fun e!88487 () Bool)

(assert (=> d!42511 e!88487))

(declare-fun res!65211 () Bool)

(assert (=> d!42511 (=> res!65211 e!88487)))

(declare-fun lt!71023 () Bool)

(assert (=> d!42511 (= res!65211 (not lt!71023))))

(declare-fun lt!71025 () Bool)

(assert (=> d!42511 (= lt!71023 lt!71025)))

(declare-fun lt!71024 () Unit!4150)

(declare-fun e!88488 () Unit!4150)

(assert (=> d!42511 (= lt!71024 e!88488)))

(declare-fun c!25456 () Bool)

(assert (=> d!42511 (= c!25456 lt!71025)))

(assert (=> d!42511 (= lt!71025 (containsKey!175 (toList!869 lt!69843) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42511 (= (contains!896 lt!69843 #b1000000000000000000000000000000000000000000000000000000000000000) lt!71023)))

(declare-fun b!135886 () Bool)

(declare-fun lt!71026 () Unit!4150)

(assert (=> b!135886 (= e!88488 lt!71026)))

(assert (=> b!135886 (= lt!71026 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69843) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135886 (isDefined!125 (getValueByKey!171 (toList!869 lt!69843) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135887 () Bool)

(declare-fun Unit!4289 () Unit!4150)

(assert (=> b!135887 (= e!88488 Unit!4289)))

(declare-fun b!135888 () Bool)

(assert (=> b!135888 (= e!88487 (isDefined!125 (getValueByKey!171 (toList!869 lt!69843) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42511 c!25456) b!135886))

(assert (= (and d!42511 (not c!25456)) b!135887))

(assert (= (and d!42511 (not res!65211)) b!135888))

(declare-fun m!162293 () Bool)

(assert (=> d!42511 m!162293))

(declare-fun m!162295 () Bool)

(assert (=> b!135886 m!162295))

(assert (=> b!135886 m!161933))

(assert (=> b!135886 m!161933))

(declare-fun m!162297 () Bool)

(assert (=> b!135886 m!162297))

(assert (=> b!135888 m!161933))

(assert (=> b!135888 m!161933))

(assert (=> b!135888 m!162297))

(assert (=> bm!14734 d!42511))

(assert (=> d!40621 d!40619))

(declare-fun d!42513 () Bool)

(assert (=> d!42513 (= (getValueByKey!171 lt!69465 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) (Some!176 (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))))))

(assert (=> d!42513 true))

(declare-fun _$22!491 () Unit!4150)

(assert (=> d!42513 (= (choose!834 lt!69465 (_1!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992))))) (_2!1314 (tuple2!2609 lt!69232 (minValue!2720 (v!3197 (underlying!454 thiss!992)))))) _$22!491)))

(declare-fun bs!5712 () Bool)

(assert (= bs!5712 d!42513))

(assert (=> bs!5712 m!156787))

(assert (=> d!40621 d!42513))

(declare-fun d!42515 () Bool)

(declare-fun res!65212 () Bool)

(declare-fun e!88489 () Bool)

(assert (=> d!42515 (=> res!65212 e!88489)))

(assert (=> d!42515 (= res!65212 (or ((_ is Nil!1732) lt!69465) ((_ is Nil!1732) (t!6198 lt!69465))))))

(assert (=> d!42515 (= (isStrictlySorted!317 lt!69465) e!88489)))

(declare-fun b!135889 () Bool)

(declare-fun e!88490 () Bool)

(assert (=> b!135889 (= e!88489 e!88490)))

(declare-fun res!65213 () Bool)

(assert (=> b!135889 (=> (not res!65213) (not e!88490))))

(assert (=> b!135889 (= res!65213 (bvslt (_1!1314 (h!2336 lt!69465)) (_1!1314 (h!2336 (t!6198 lt!69465)))))))

(declare-fun b!135890 () Bool)

(assert (=> b!135890 (= e!88490 (isStrictlySorted!317 (t!6198 lt!69465)))))

(assert (= (and d!42515 (not res!65212)) b!135889))

(assert (= (and b!135889 res!65213) b!135890))

(declare-fun m!162299 () Bool)

(assert (=> b!135890 m!162299))

(assert (=> d!40621 d!42515))

(declare-fun d!42517 () Bool)

(declare-fun c!25457 () Bool)

(assert (=> d!42517 (= c!25457 ((_ is Nil!1732) (toList!869 lt!69407)))))

(declare-fun e!88491 () (InoxSet tuple2!2608))

(assert (=> d!42517 (= (content!132 (toList!869 lt!69407)) e!88491)))

(declare-fun b!135891 () Bool)

(assert (=> b!135891 (= e!88491 ((as const (Array tuple2!2608 Bool)) false))))

(declare-fun b!135892 () Bool)

(assert (=> b!135892 (= e!88491 ((_ map or) (store ((as const (Array tuple2!2608 Bool)) false) (h!2336 (toList!869 lt!69407)) true) (content!132 (t!6198 (toList!869 lt!69407)))))))

(assert (= (and d!42517 c!25457) b!135891))

(assert (= (and d!42517 (not c!25457)) b!135892))

(declare-fun m!162301 () Bool)

(assert (=> b!135892 m!162301))

(assert (=> b!135892 m!160427))

(assert (=> d!40735 d!42517))

(declare-fun b!135893 () Bool)

(declare-fun e!88492 () Option!177)

(assert (=> b!135893 (= e!88492 (Some!176 (_2!1314 (h!2336 (t!6198 (toList!869 lt!69356))))))))

(declare-fun b!135896 () Bool)

(declare-fun e!88493 () Option!177)

(assert (=> b!135896 (= e!88493 None!175)))

(declare-fun b!135895 () Bool)

(assert (=> b!135895 (= e!88493 (getValueByKey!171 (t!6198 (t!6198 (toList!869 lt!69356))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135894 () Bool)

(assert (=> b!135894 (= e!88492 e!88493)))

(declare-fun c!25459 () Bool)

(assert (=> b!135894 (= c!25459 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69356))) (not (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69356)))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!42519 () Bool)

(declare-fun c!25458 () Bool)

(assert (=> d!42519 (= c!25458 (and ((_ is Cons!1731) (t!6198 (toList!869 lt!69356))) (= (_1!1314 (h!2336 (t!6198 (toList!869 lt!69356)))) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42519 (= (getValueByKey!171 (t!6198 (toList!869 lt!69356)) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 (v!3197 (underlying!454 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88492)))

(assert (= (and d!42519 c!25458) b!135893))

(assert (= (and d!42519 (not c!25458)) b!135894))

(assert (= (and b!135894 c!25459) b!135895))

(assert (= (and b!135894 (not c!25459)) b!135896))

(declare-fun m!162303 () Bool)

(assert (=> b!135895 m!162303))

(assert (=> b!133297 d!42519))

(declare-fun d!42521 () Bool)

(declare-fun e!88494 () Bool)

(assert (=> d!42521 e!88494))

(declare-fun res!65215 () Bool)

(assert (=> d!42521 (=> (not res!65215) (not e!88494))))

(declare-fun lt!71028 () ListLongMap!1707)

(assert (=> d!42521 (= res!65215 (contains!896 lt!71028 (_1!1314 (ite (or c!24864 c!24867) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun lt!71030 () List!1735)

(assert (=> d!42521 (= lt!71028 (ListLongMap!1708 lt!71030))))

(declare-fun lt!71029 () Unit!4150)

(declare-fun lt!71027 () Unit!4150)

(assert (=> d!42521 (= lt!71029 lt!71027)))

(assert (=> d!42521 (= (getValueByKey!171 lt!71030 (_1!1314 (ite (or c!24864 c!24867) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (ite (or c!24864 c!24867) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42521 (= lt!71027 (lemmaContainsTupThenGetReturnValue!88 lt!71030 (_1!1314 (ite (or c!24864 c!24867) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24864 c!24867) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42521 (= lt!71030 (insertStrictlySorted!90 (toList!869 (ite c!24864 call!14794 (ite c!24867 call!14790 call!14795))) (_1!1314 (ite (or c!24864 c!24867) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1314 (ite (or c!24864 c!24867) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42521 (= (+!170 (ite c!24864 call!14794 (ite c!24867 call!14790 call!14795)) (ite (or c!24864 c!24867) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!71028)))

(declare-fun b!135897 () Bool)

(declare-fun res!65214 () Bool)

(assert (=> b!135897 (=> (not res!65214) (not e!88494))))

(assert (=> b!135897 (= res!65214 (= (getValueByKey!171 (toList!869 lt!71028) (_1!1314 (ite (or c!24864 c!24867) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!176 (_2!1314 (ite (or c!24864 c!24867) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!135898 () Bool)

(assert (=> b!135898 (= e!88494 (contains!898 (toList!869 lt!71028) (ite (or c!24864 c!24867) (tuple2!2609 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2609 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (= (and d!42521 res!65215) b!135897))

(assert (= (and b!135897 res!65214) b!135898))

(declare-fun m!162305 () Bool)

(assert (=> d!42521 m!162305))

(declare-fun m!162307 () Bool)

(assert (=> d!42521 m!162307))

(declare-fun m!162309 () Bool)

(assert (=> d!42521 m!162309))

(declare-fun m!162311 () Bool)

(assert (=> d!42521 m!162311))

(declare-fun m!162313 () Bool)

(assert (=> b!135897 m!162313))

(declare-fun m!162315 () Bool)

(assert (=> b!135898 m!162315))

(assert (=> bm!14789 d!42521))

(declare-fun d!42523 () Bool)

(declare-fun e!88495 () Bool)

(assert (=> d!42523 e!88495))

(declare-fun res!65216 () Bool)

(assert (=> d!42523 (=> res!65216 e!88495)))

(declare-fun lt!71031 () Bool)

(assert (=> d!42523 (= res!65216 (not lt!71031))))

(declare-fun lt!71033 () Bool)

(assert (=> d!42523 (= lt!71031 lt!71033)))

(declare-fun lt!71032 () Unit!4150)

(declare-fun e!88496 () Unit!4150)

(assert (=> d!42523 (= lt!71032 e!88496)))

(declare-fun c!25460 () Bool)

(assert (=> d!42523 (= c!25460 lt!71033)))

(assert (=> d!42523 (= lt!71033 (containsKey!175 (toList!869 (+!170 lt!69886 (tuple2!2609 lt!69890 lt!69888))) lt!69887))))

(assert (=> d!42523 (= (contains!896 (+!170 lt!69886 (tuple2!2609 lt!69890 lt!69888)) lt!69887) lt!71031)))

(declare-fun b!135899 () Bool)

(declare-fun lt!71034 () Unit!4150)

(assert (=> b!135899 (= e!88496 lt!71034)))

(assert (=> b!135899 (= lt!71034 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!170 lt!69886 (tuple2!2609 lt!69890 lt!69888))) lt!69887))))

(assert (=> b!135899 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69886 (tuple2!2609 lt!69890 lt!69888))) lt!69887))))

(declare-fun b!135900 () Bool)

(declare-fun Unit!4290 () Unit!4150)

(assert (=> b!135900 (= e!88496 Unit!4290)))

(declare-fun b!135901 () Bool)

(assert (=> b!135901 (= e!88495 (isDefined!125 (getValueByKey!171 (toList!869 (+!170 lt!69886 (tuple2!2609 lt!69890 lt!69888))) lt!69887)))))

(assert (= (and d!42523 c!25460) b!135899))

(assert (= (and d!42523 (not c!25460)) b!135900))

(assert (= (and d!42523 (not res!65216)) b!135901))

(declare-fun m!162317 () Bool)

(assert (=> d!42523 m!162317))

(declare-fun m!162319 () Bool)

(assert (=> b!135899 m!162319))

(declare-fun m!162321 () Bool)

(assert (=> b!135899 m!162321))

(assert (=> b!135899 m!162321))

(declare-fun m!162323 () Bool)

(assert (=> b!135899 m!162323))

(assert (=> b!135901 m!162321))

(assert (=> b!135901 m!162321))

(assert (=> b!135901 m!162323))

(assert (=> b!133480 d!42523))

(declare-fun d!42525 () Bool)

(declare-fun e!88497 () Bool)

(assert (=> d!42525 e!88497))

(declare-fun res!65218 () Bool)

(assert (=> d!42525 (=> (not res!65218) (not e!88497))))

(declare-fun lt!71036 () ListLongMap!1707)

(assert (=> d!42525 (= res!65218 (contains!896 lt!71036 (_1!1314 (tuple2!2609 lt!69890 lt!69888))))))

(declare-fun lt!71038 () List!1735)

(assert (=> d!42525 (= lt!71036 (ListLongMap!1708 lt!71038))))

(declare-fun lt!71037 () Unit!4150)

(declare-fun lt!71035 () Unit!4150)

(assert (=> d!42525 (= lt!71037 lt!71035)))

(assert (=> d!42525 (= (getValueByKey!171 lt!71038 (_1!1314 (tuple2!2609 lt!69890 lt!69888))) (Some!176 (_2!1314 (tuple2!2609 lt!69890 lt!69888))))))

(assert (=> d!42525 (= lt!71035 (lemmaContainsTupThenGetReturnValue!88 lt!71038 (_1!1314 (tuple2!2609 lt!69890 lt!69888)) (_2!1314 (tuple2!2609 lt!69890 lt!69888))))))

(assert (=> d!42525 (= lt!71038 (insertStrictlySorted!90 (toList!869 lt!69886) (_1!1314 (tuple2!2609 lt!69890 lt!69888)) (_2!1314 (tuple2!2609 lt!69890 lt!69888))))))

(assert (=> d!42525 (= (+!170 lt!69886 (tuple2!2609 lt!69890 lt!69888)) lt!71036)))

(declare-fun b!135902 () Bool)

(declare-fun res!65217 () Bool)

(assert (=> b!135902 (=> (not res!65217) (not e!88497))))

(assert (=> b!135902 (= res!65217 (= (getValueByKey!171 (toList!869 lt!71036) (_1!1314 (tuple2!2609 lt!69890 lt!69888))) (Some!176 (_2!1314 (tuple2!2609 lt!69890 lt!69888)))))))

(declare-fun b!135903 () Bool)

(assert (=> b!135903 (= e!88497 (contains!898 (toList!869 lt!71036) (tuple2!2609 lt!69890 lt!69888)))))

(assert (= (and d!42525 res!65218) b!135902))

(assert (= (and b!135902 res!65217) b!135903))

(declare-fun m!162325 () Bool)

(assert (=> d!42525 m!162325))

(declare-fun m!162327 () Bool)

(assert (=> d!42525 m!162327))

(declare-fun m!162329 () Bool)

(assert (=> d!42525 m!162329))

(declare-fun m!162331 () Bool)

(assert (=> d!42525 m!162331))

(declare-fun m!162333 () Bool)

(assert (=> b!135902 m!162333))

(declare-fun m!162335 () Bool)

(assert (=> b!135903 m!162335))

(assert (=> b!133480 d!42525))

(assert (=> b!133480 d!40911))

(declare-fun d!42527 () Bool)

(declare-fun e!88498 () Bool)

(assert (=> d!42527 e!88498))

(declare-fun res!65220 () Bool)

(assert (=> d!42527 (=> (not res!65220) (not e!88498))))

(declare-fun lt!71040 () ListLongMap!1707)

(assert (=> d!42527 (= res!65220 (contains!896 lt!71040 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!71042 () List!1735)

(assert (=> d!42527 (= lt!71040 (ListLongMap!1708 lt!71042))))

(declare-fun lt!71041 () Unit!4150)

(declare-fun lt!71039 () Unit!4150)

(assert (=> d!42527 (= lt!71041 lt!71039)))

(assert (=> d!42527 (= (getValueByKey!171 lt!71042 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42527 (= lt!71039 (lemmaContainsTupThenGetReturnValue!88 lt!71042 (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42527 (= lt!71042 (insertStrictlySorted!90 (toList!869 call!14747) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42527 (= (+!170 call!14747 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!71040)))

(declare-fun b!135904 () Bool)

(declare-fun res!65219 () Bool)

(assert (=> b!135904 (=> (not res!65219) (not e!88498))))

(assert (=> b!135904 (= res!65219 (= (getValueByKey!171 (toList!869 lt!71040) (_1!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1314 (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135905 () Bool)

(assert (=> b!135905 (= e!88498 (contains!898 (toList!869 lt!71040) (tuple2!2609 (select (arr!2260 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite c!24541 (_values!2848 newMap!16) (array!4783 (store (arr!2261 (_values!2848 newMap!16)) (index!3301 lt!69307) (ValueCellFull!1095 (get!1488 (select (arr!2261 (_values!2848 (v!3197 (underlying!454 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2530 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42527 res!65220) b!135904))

(assert (= (and b!135904 res!65219) b!135905))

(declare-fun m!162337 () Bool)

(assert (=> d!42527 m!162337))

(declare-fun m!162339 () Bool)

(assert (=> d!42527 m!162339))

(declare-fun m!162341 () Bool)

(assert (=> d!42527 m!162341))

(declare-fun m!162343 () Bool)

(assert (=> d!42527 m!162343))

(declare-fun m!162345 () Bool)

(assert (=> b!135904 m!162345))

(declare-fun m!162347 () Bool)

(assert (=> b!135905 m!162347))

(assert (=> b!133480 d!42527))

(declare-fun d!42529 () Bool)

(assert (=> d!42529 (not (contains!896 (+!170 lt!69886 (tuple2!2609 lt!69890 lt!69888)) lt!69887))))

(declare-fun lt!71043 () Unit!4150)

(assert (=> d!42529 (= lt!71043 (choose!836 lt!69886 lt!69890 lt!69888 lt!69887))))

(declare-fun e!88499 () Bool)

(assert (=> d!42529 e!88499))

(declare-fun res!65221 () Bool)

(assert (=> d!42529 (=> (not res!65221) (not e!88499))))

(assert (=> d!42529 (= res!65221 (not (contains!896 lt!69886 lt!69887)))))

(assert (=> d!42529 (= (addStillNotContains!63 lt!69886 lt!69890 lt!69888 lt!69887) lt!71043)))

(declare-fun b!135906 () Bool)

(assert (=> b!135906 (= e!88499 (not (= lt!69890 lt!69887)))))

(assert (= (and d!42529 res!65221) b!135906))

(assert (=> d!42529 m!157729))

(assert (=> d!42529 m!157729))

(assert (=> d!42529 m!157731))

(declare-fun m!162349 () Bool)

(assert (=> d!42529 m!162349))

(declare-fun m!162351 () Bool)

(assert (=> d!42529 m!162351))

(assert (=> b!133480 d!42529))

(declare-fun mapIsEmpty!4659 () Bool)

(declare-fun mapRes!4659 () Bool)

(assert (=> mapIsEmpty!4659 mapRes!4659))

(declare-fun condMapEmpty!4659 () Bool)

(declare-fun mapDefault!4659 () ValueCell!1095)

(assert (=> mapNonEmpty!4658 (= condMapEmpty!4659 (= mapRest!4658 ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4659)))))

(declare-fun e!88501 () Bool)

(assert (=> mapNonEmpty!4658 (= tp!11228 (and e!88501 mapRes!4659))))

(declare-fun mapNonEmpty!4659 () Bool)

(declare-fun tp!11229 () Bool)

(declare-fun e!88500 () Bool)

(assert (=> mapNonEmpty!4659 (= mapRes!4659 (and tp!11229 e!88500))))

(declare-fun mapRest!4659 () (Array (_ BitVec 32) ValueCell!1095))

(declare-fun mapKey!4659 () (_ BitVec 32))

(declare-fun mapValue!4659 () ValueCell!1095)

(assert (=> mapNonEmpty!4659 (= mapRest!4658 (store mapRest!4659 mapKey!4659 mapValue!4659))))

(declare-fun b!135908 () Bool)

(assert (=> b!135908 (= e!88501 tp_is_empty!2877)))

(declare-fun b!135907 () Bool)

(assert (=> b!135907 (= e!88500 tp_is_empty!2877)))

(assert (= (and mapNonEmpty!4658 condMapEmpty!4659) mapIsEmpty!4659))

(assert (= (and mapNonEmpty!4658 (not condMapEmpty!4659)) mapNonEmpty!4659))

(assert (= (and mapNonEmpty!4659 ((_ is ValueCellFull!1095) mapValue!4659)) b!135907))

(assert (= (and mapNonEmpty!4658 ((_ is ValueCellFull!1095) mapDefault!4659)) b!135908))

(declare-fun m!162353 () Bool)

(assert (=> mapNonEmpty!4659 m!162353))

(declare-fun mapIsEmpty!4660 () Bool)

(declare-fun mapRes!4660 () Bool)

(assert (=> mapIsEmpty!4660 mapRes!4660))

(declare-fun condMapEmpty!4660 () Bool)

(declare-fun mapDefault!4660 () ValueCell!1095)

(assert (=> mapNonEmpty!4657 (= condMapEmpty!4660 (= mapRest!4657 ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4660)))))

(declare-fun e!88503 () Bool)

(assert (=> mapNonEmpty!4657 (= tp!11227 (and e!88503 mapRes!4660))))

(declare-fun mapNonEmpty!4660 () Bool)

(declare-fun tp!11230 () Bool)

(declare-fun e!88502 () Bool)

(assert (=> mapNonEmpty!4660 (= mapRes!4660 (and tp!11230 e!88502))))

(declare-fun mapValue!4660 () ValueCell!1095)

(declare-fun mapKey!4660 () (_ BitVec 32))

(declare-fun mapRest!4660 () (Array (_ BitVec 32) ValueCell!1095))

(assert (=> mapNonEmpty!4660 (= mapRest!4657 (store mapRest!4660 mapKey!4660 mapValue!4660))))

(declare-fun b!135910 () Bool)

(assert (=> b!135910 (= e!88503 tp_is_empty!2877)))

(declare-fun b!135909 () Bool)

(assert (=> b!135909 (= e!88502 tp_is_empty!2877)))

(assert (= (and mapNonEmpty!4657 condMapEmpty!4660) mapIsEmpty!4660))

(assert (= (and mapNonEmpty!4657 (not condMapEmpty!4660)) mapNonEmpty!4660))

(assert (= (and mapNonEmpty!4660 ((_ is ValueCellFull!1095) mapValue!4660)) b!135909))

(assert (= (and mapNonEmpty!4657 ((_ is ValueCellFull!1095) mapDefault!4660)) b!135910))

(declare-fun m!162355 () Bool)

(assert (=> mapNonEmpty!4660 m!162355))

(declare-fun b_lambda!6061 () Bool)

(assert (= b_lambda!6035 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6061)))

(declare-fun b_lambda!6063 () Bool)

(assert (= b_lambda!6023 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6063)))

(declare-fun b_lambda!6065 () Bool)

(assert (= b_lambda!6053 (or (and b!132488 b_free!2921) (and b!132481 b_free!2923 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))))) b_lambda!6065)))

(declare-fun b_lambda!6067 () Bool)

(assert (= b_lambda!6029 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6067)))

(declare-fun b_lambda!6069 () Bool)

(assert (= b_lambda!6015 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6069)))

(declare-fun b_lambda!6071 () Bool)

(assert (= b_lambda!6055 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6071)))

(declare-fun b_lambda!6073 () Bool)

(assert (= b_lambda!6041 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6073)))

(declare-fun b_lambda!6075 () Bool)

(assert (= b_lambda!6037 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6075)))

(declare-fun b_lambda!6077 () Bool)

(assert (= b_lambda!6051 (or (and b!132488 b_free!2921) (and b!132481 b_free!2923 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))))) b_lambda!6077)))

(declare-fun b_lambda!6079 () Bool)

(assert (= b_lambda!6025 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6079)))

(declare-fun b_lambda!6081 () Bool)

(assert (= b_lambda!5965 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 (_2!1315 lt!69327)))) (and b!132481 b_free!2923 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (_2!1315 lt!69327)))) b_lambda!6081)))

(declare-fun b_lambda!6083 () Bool)

(assert (= b_lambda!6045 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6083)))

(declare-fun b_lambda!6085 () Bool)

(assert (= b_lambda!6057 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6085)))

(declare-fun b_lambda!6087 () Bool)

(assert (= b_lambda!6039 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6087)))

(declare-fun b_lambda!6089 () Bool)

(assert (= b_lambda!6017 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6089)))

(declare-fun b_lambda!6091 () Bool)

(assert (= b_lambda!6043 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6091)))

(declare-fun b_lambda!6093 () Bool)

(assert (= b_lambda!6019 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6093)))

(declare-fun b_lambda!6095 () Bool)

(assert (= b_lambda!6031 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6095)))

(declare-fun b_lambda!6097 () Bool)

(assert (= b_lambda!6021 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6097)))

(declare-fun b_lambda!6099 () Bool)

(assert (= b_lambda!6027 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6099)))

(declare-fun b_lambda!6101 () Bool)

(assert (= b_lambda!6033 (or (and b!132488 b_free!2921 (= (defaultEntry!2865 (v!3197 (underlying!454 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132481 b_free!2923) b_lambda!6101)))

(check-sat (not b!134397) (not b!134702) (not d!41351) (not b_lambda!5951) (not d!41145) (not d!41665) (not d!42183) (not b!134925) (not b_lambda!5935) (not b!135016) (not b!134679) (not b!134471) (not d!42101) (not b!135672) (not b!134657) (not b!134313) (not b!134105) (not b!134028) (not b!135415) (not b!135040) (not b!135114) (not b!135444) (not bm!14908) (not b!134326) (not b!134754) (not d!41811) (not b!135147) (not b!134678) (not b!134937) (not d!41059) (not b!134575) (not d!41903) (not d!41085) (not b!135060) (not d!41253) (not b!135877) (not b!134169) (not b!135733) (not d!42395) (not b!134361) (not b!134882) (not d!41855) (not b!134404) (not b!134568) (not d!41773) (not b!134641) (not b!135137) (not b!134379) (not b!134857) (not d!41417) (not b!135605) (not d!42287) (not b!135123) (not d!41105) (not b!134906) (not b!135151) (not bm!14808) (not d!41133) (not b!135418) (not b!134410) (not b!135278) (not b!134898) (not d!41077) (not b!134094) (not d!41819) (not b_lambda!5949) (not d!41581) (not b_lambda!6087) (not d!41749) (not d!41995) (not b!134550) (not d!42339) (not b!134598) (not b!134515) (not b!134398) (not b!134304) (not d!41255) (not b!135597) (not b!134691) (not d!42283) (not d!41823) (not b_lambda!6067) (not d!42153) (not b!135409) (not b!135577) (not b!135798) (not d!41645) (not d!41061) (not b!135747) (not b!135833) (not b!135608) (not b!134458) (not b!134357) (not b!134349) (not b_lambda!6013) (not b!134610) (not d!42309) (not b!134631) (not b!135343) (not b!134323) (not b!134834) (not b!134709) (not d!41867) (not b!135321) (not b!135585) (not bm!14888) (not b!134822) (not b!134358) (not b!134264) (not d!41481) (not b!134969) (not b!134624) (not b!134644) (not b!135345) (not b!134403) (not b!135042) (not d!41209) (not bm!14830) (not b!135756) (not b!135400) (not b!135392) (not b!135128) (not b_lambda!6047) (not b!134984) (not b!135466) (not bm!14840) (not b!134701) (not d!42087) (not b!134042) (not d!41051) (not b!134391) (not d!41649) (not d!41595) (not b!135046) (not b!135575) (not b!134842) (not d!41815) (not b!134428) (not d!42215) (not b!134385) (not d!41571) (not b!135028) (not b!134156) (not b!135700) (not d!41861) (not d!41115) (not d!42443) (not b!134183) (not d!42365) (not bm!14825) (not d!41613) (not d!41951) (not b!135580) (not b!134049) (not d!41963) (not d!41643) (not b!134315) (not b!135832) (not d!42307) (not b!135536) (not d!42311) (not d!41249) (not b!135112) (not b!135381) (not d!42247) (not b!135463) (not d!42313) (not d!41089) (not b!134555) (not b!134270) (not d!42383) (not d!41279) (not b!135525) (not b!134910) (not d!41621) (not b!134177) (not d!41019) (not d!42095) (not b!134460) (not d!41461) (not b!134903) (not bm!14811) (not bm!14867) (not b!135159) (not d!41875) (not bm!14836) (not d!42433) (not bm!14915) (not d!41081) (not b!135539) (not b!135351) (not d!41689) (not b!135467) (not d!41321) (not d!41669) (not d!41005) (not d!41511) (not b!134947) (not d!42219) (not b!134143) (not b!134181) (not d!41243) (not b!135298) (not b!134497) (not b!134621) (not b!135231) (not d!41625) (not b!135437) (not b!134423) (not d!41041) (not d!41419) (not b!134058) (not d!41423) (not d!42457) (not d!42415) (not b!134958) (not b!134438) (not b!135115) (not b!134462) (not b!134996) (not b!135537) (not d!41721) (not b!135304) (not b!134076) (not d!41809) (not d!42371) (not b!134129) (not b_lambda!6007) (not b!134098) (not d!41825) (not bm!14910) (not d!41551) (not d!42109) (not b!135066) (not bm!14846) (not d!41441) (not b!135568) (not b!134520) (not bm!14801) (not b!134377) (not d!41635) (not d!41001) (not d!40955) (not b!134831) (not d!42399) (not b!135639) (not b!135602) (not b!135591) (not b!135168) (not b!134087) (not d!42019) (not d!41093) (not b!134518) (not b!135534) (not b!134732) (not b!135652) (not d!42273) (not b!135270) (not b!135609) (not b!134469) (not b!135830) (not b!134211) (not b!135257) (not b!135849) (not d!42093) (not b!135476) (not d!42227) (not b!135627) (not b!135319) (not b!134685) (not b!135232) (not b!135274) (not b!134306) (not b!134189) (not d!41239) (not b!134194) (not d!41589) (not d!42485) (not d!40951) (not b!135336) (not b!134254) (not b!135090) (not b!135249) (not b!135264) (not d!42387) (not d!42099) (not b!134325) (not b_lambda!6069) (not b!134900) (not b!134267) (not b!134907) (not b!134178) (not d!41959) (not bm!14814) (not d!41663) (not d!41299) (not b!134258) (not b!135599) (not d!42229) (not b!134769) (not b!135770) (not b!134592) (not d!41681) (not b!134037) (not d!41231) (not b!134182) (not b_lambda!6077) (not b!134790) (not b_lambda!6097) (not b!135766) (not b!134444) (not b!134240) (not d!41207) (not d!41517) (not b!134577) (not b!135177) (not b!134988) (not b!135712) (not b!134227) (not b!135460) (not b_lambda!6061) (not b!134994) (not d!42521) (not d!42463) (not b!134104) (not d!41929) (not b!134481) (not b!134846) (not b!134113) (not b!134155) (not d!41127) (not b!135834) (not b!134909) (not b!135748) (not d!40959) (not b!135878) (not b!135511) (not b!134918) (not b!134674) (not d!41897) (not d!41785) (not b!134439) (not b!135763) (not b!135023) (not d!41095) (not bm!14913) (not b_lambda!6081) (not bm!14917) (not b!135014) (not d!41247) (not b!135076) (not b!135481) (not b!134552) (not b!134092) (not d!41337) (not d!41567) (not b!134290) (not b!134192) (not b!134987) (not b!134532) (not b!135637) (not d!42359) (not b!135285) (not b!135888) (not b!134026) (not d!41743) (not b!135259) (not b!135027) (not d!41063) (not b!135192) (not b!134531) (not b!135815) (not b!134446) (not b!135282) (not d!41219) (not b!135225) (not d!41031) (not d!41647) (not b!134896) (not d!41055) (not bm!14813) (not bm!14803) (not d!41291) (not b!135558) (not b!135054) (not b!135901) (not b!135606) (not b!135239) (not b!135188) (not d!41777) (not b_lambda!5991) (not b!134335) (not d!41695) (not b!135095) (not b!135737) (not d!42271) (not b!135353) (not b!134197) (not b!135052) (not bm!14870) (not b!134499) (not b!134956) (not d!41129) (not b_lambda!5995) (not b!134474) (not b!135316) (not d!41523) (not d!42473) (not d!42377) (not b!135905) (not d!41277) (not d!41411) (not b!134875) (not b!134095) (not d!41347) (not b!134448) (not d!41641) (not b!134411) (not b!134788) (not b!135146) (not b!135096) (not d!42379) (not d!41325) (not d!42461) b_and!8413 (not b!134418) (not b!134707) (not bm!14905) (not d!42249) (not d!41309) (not b!134773) (not d!41619) (not b!134721) (not d!41603) (not b!134753) (not d!42079) (not b!135761) (not d!42181) (not b!134527) (not d!42251) (not b!134090) (not b!134827) (not b!135333) (not d!41537) (not b!134097) (not d!41193) (not d!42509) (not b!135890) (not d!40953) (not b!134693) (not d!41415) (not b!135676) (not b!135716) (not bm!14857) (not d!41339) (not d!41685) (not b!134565) (not b!134819) (not b!135604) (not b!135474) (not d!42081) (not b!134752) (not d!42511) (not mapNonEmpty!4659) (not d!41393) (not d!41683) (not b!135300) (not b!134558) (not b!134230) (not d!41259) (not b!135430) (not b!134688) (not b!135570) (not b!135410) (not d!41301) b_and!8415 (not d!42023) (not b!134445) (not b!134218) (not b!135035) (not d!41003) (not d!42011) (not b_lambda!6095) (not d!41737) (not d!42481) (not d!41583) (not bm!14833) (not d!41075) (not b!135338) (not d!41453) (not b!135222) (not b!135348) (not d!41401) (not b!135286) (not d!42493) (not b!135217) (not b!134365) (not b!134436) (not d!41263) (not b!134579) (not d!41109) (not b!134781) (not b!134539) (not b!134662) (not b!135443) (not b!135303) (not b!134431) (not b!134981) (not d!42167) (not b!135503) (not b!134215) (not b!134860) (not b!135573) (not d!41837) (not b!134989) (not d!41877) (not d!41079) (not b_lambda!6065) (not b!134455) (not b!135346) (not b!135422) (not d!41069) (not d!41599) (not b!135196) (not d!42295) (not d!41941) (not b!134905) (not d!42199) (not b!135084) (not b_lambda!5987) (not b!135616) (not b_lambda!6085) (not b!135142) (not d!41527) (not b!135704) (not b!135446) (not d!41495) (not b!135549) (not b!134083) (not d!41173) (not b_lambda!5947) (not d!41475) (not b!135663) (not b!134572) (not b!135417) (not bm!14802) (not b!134563) (not b!134671) (not b!135226) (not b!134765) (not bm!14920) (not b!134880) (not b!134173) (not b!134638) (not d!42067) (not b!134387) (not b!134559) (not b!134494) (not b!134271) (not d!41843) (not d!41217) (not d!42409) (not b!135036) (not b!134786) (not d!41403) (not b!135064) (not bm!14797) (not d!42149) (not b!134168) (not d!41269) (not b!135009) (not d!41169) (not d!41879) (not d!41915) (not mapNonEmpty!4660) (not b_lambda!6101) (not b!135442) (not d!41895) (not b!134124) (not d!42375) (not b!134606) (not b!135621) (not b!134944) (not d!41939) (not b!134276) (not b!134278) (not d!41713) (not b_lambda!5989) (not b!135412) (not b!134556) (not b!134884) (not b!134055) (not b!135697) (not b!135679) (not b!135884) (not b!134414) (not b!134245) (not b!134482) (not b!135332) (not b!134373) (not b!134242) (not b_lambda!6091) (not d!41119) (not d!40993) (not d!41033) (not d!41539) (not d!41203) (not b!134330) (not d!41349) (not b!135203) (not d!41661) (not b!135421) (not b!134614) (not bm!14898) (not d!40977) (not b!135501) (not b!134405) (not d!42245) (not b!134407) (not b!134986) (not bm!14880) (not b!135132) (not b!134145) (not b!135709) (not b!134711) (not b!134865) (not b!135895) (not d!42357) (not b!134735) (not d!41563) (not d!41067) (not b!135857) (not d!41323) (not b!135899) (not d!41161) (not b!134362) (not b!135150) (not b!135686) (not d!42465) (not b!135025) (not d!41131) (not b!134366) (not b!135403) (not b!135236) (not b!135355) (not b!135640) (not d!41983) (not b!135584) (not d!42527) (not b!134891) (not b!134024) (not d!41365) (not d!42477) (not b!135587) (not b!134609) (not b!135790) (not b!135357) (not b!134666) (not b!134244) (not b!135665) (not d!41011) (not d!42267) (not d!41729) (not b!135120) (not bm!14892) (not b!135750) (not b!134529) (not b!134551) (not b!134417) (not b!134303) (not b!134250) (not bm!14923) (not d!40957) (not b!135674) (not b!135290) (not d!41007) (not d!41295) (not b!135106) (not b!134699) (not b!134525) (not d!42083) (not b!134616) (not b!135667) (not d!42333) (not b!134089) (not b!135677) (not d!41141) (not b!134528) (not b!135243) (not b!135246) (not b!134836) (not d!41101) (not b!135109) (not d!41827) (not d!42289) (not b!134340) (not b!134388) (not b!135643) (not b!134401) (not b!134682) (not b!134787) (not b!134879) (not d!41355) (not d!41375) (not d!42369) (not b!135055) (not d!42085) (not d!41197) (not b!135759) (not d!41307) (not b!134873) (not d!41871) (not d!41845) (not d!41267) (not b!134116) (not b!134581) (not b!134301) (not b!134998) (not b!135193) (not b!134686) (not d!41257) (not b!134212) (not b!134500) (not b!134367) (not b!135001) (not b!134311) (not b!135510) (not b!135340) (not d!42003) (not b!135174) (not b!134180) (not d!41199) (not bm!14874) (not d!41275) (not d!41791) (not b!134714) (not b!134810) (not b!134144) (not bm!14837) (not bm!14819) (not b!134590) (not b!134503) (not b!135371) (not b!135094) (not b!135718) (not b!135369) (not b!135182) (not d!41137) (not b!134807) (not d!42479) (not b_lambda!6063) (not d!40989) (not b!135377) (not d!41761) (not b!134176) (not b!134160) (not b!135723) (not d!41345) (not b!134801) (not d!42055) (not d!42455) (not d!41723) (not b!134546) (not b!135563) (not b!135530) (not d!41043) (not b!134478) (not b!134287) (not b!134068) (not b!135234) (not b!134676) (not d!41795) (not d!41943) (not d!42297) (not b!134942) (not d!41381) (not d!42299) (not d!41451) (not b!135730) (not b!134737) (not b!134919) (not b!135783) (not d!42431) (not d!41223) (not b!135252) (not b!135619) (not b!134201) (not d!42429) (not d!41585) (not d!41657) (not b!134395) (not d!42427) (not b!135172) (not b!135248) (not b!135583) (not b!134612) (not d!41103) (not b!134645) (not bm!14856) (not b!135091) (not b!135185) (not d!42253) (not b!135272) (not b!134877) (not b!135706) (not d!41629) (not b!134855) (not b!135378) (not bm!14912) (not b!134073) (not d!41113) (not d!41857) (not b!134127) (not b!134768) (not b!134704) (not d!41433) (not d!41273) (not b!135483) (not b!134968) (not d!41763) (not b!135395) (not b!134784) (not b!135376) (not b!135836) (not b!135669) (not b!135861) (not b!134134) (not b!135335) (not d!41611) (not d!42191) (not b!134422) (not b!135306) (not d!42403) (not b!135875) (not d!41335) (not d!40973) (not d!41677) (not d!41065) (not b!135588) (not b!135294) (not b!134056) (not b!134547) (not d!42445) (not b!134611) (not b!135498) (not b!134131) (not d!41117) (not b!135101) (not d!42235) (not d!41431) (not b!134424) (not b!134640) (not d!41017) (not b!135050) (not b!134157) (not b!135018) (not b!134096) (not b!134771) (not b!134696) (not b!135544) (not b!135380) (not b!135824) (not b_lambda!6075) (not d!41797) (not d!40991) (not b!135358) (not b!135719) (not b!135198) (not b!134122) (not d!42305) (not b!134260) (not d!42385) (not b_lambda!6093) (not b!135326) (not b!135641) (not b!135044) (not d!42469) (not b!134895) (not d!41359) (not d!41901) (not b!135565) (not bm!14891) (not b!135073) (not b!135330) (not d!41159) (not b!134374) (not d!41965) (not b!135850) (not b!134208) (not b!135480) (not b!135561) (not d!42329) (not b!134750) (not d!42233) (not b!135902) (not d!41361) (not d!41437) (not b!135699) (not d!42051) (not d!42025) (not b!135000) (not b!134078) (not b!135855) (not b!135644) (not b!134101) (not b!135397) (not d!41969) (not b!135124) (not d!41735) tp_is_empty!2877 (not b!134897) (not b!134023) (not b!134378) (not b!134485) (not d!41225) (not b!135506) (not b!135057) (not d!42349) (not d!41679) (not d!41395) (not d!41213) (not d!42277) (not b!134347) (not b!135728) (not b!134317) (not b!134623) (not b!135462) (not b!135088) (not d!41125) (not d!41327) (not b!135075) (not b_lambda!6079) (not d!42013) (not d!41087) (not b!134221) (not d!41593) (not b!135374) (not b!135204) (not b!135632) (not b!134364) (not b!135903) (not b!135533) (not d!41343) (not b!134437) (not b!135021) (not b!135726) (not bm!14926) (not b!134713) (not b!135556) (not b!134596) (not d!41873) (not d!42009) (not b!135139) (not d!41317) (not b!134380) (not b!134465) (not bm!14807) (not b!135464) (not b!134642) (not bm!14853) (not b!134200) (not d!42265) (not b!135795) (not d!41953) (not d!41971) (not d!42345) (not d!41771) (not b_lambda!6003) (not b!135072) (not b!134837) (not d!41591) (not b!134710) (not b!134887) (not b_lambda!5931) (not b!134033) (not b!135630) (not b_lambda!6049) (not b!134332) (not b!134188) (not b!135871) (not b!135457) (not b!135144) (not d!42027) (not d!41097) (not b!134659) (not d!40997) (not b!135478) (not d!41673) (not b!134961) (not d!41305) (not b!134354) (not d!41947) (not d!41913) (not b!134030) (not d!41319) (not b!135816) (not d!41083) (not b!135207) (not b_lambda!5997) (not b!134103) (not d!41525) (not d!41709) (not b!134202) (not d!41667) (not b!134867) (not b!134220) (not b!135745) (not b!134921) (not b!134371) (not b!134368) (not b!135224) (not b!134960) (not b!135778) (not b!135485) (not b!134238) (not b!135904) (not b!134045) (not d!42145) (not b!135837) (not d!41357) (not d!42075) (not b!134430) (not d!41283) (not b!135448) (not bm!14863) (not b!134280) (not d!41639) (not d!41015) (not d!41893) (not b!135037) (not b!135487) (not bm!14843) (not b!134269) (not b_lambda!5999) (not d!42237) (not b!134107) (not d!41833) (not b!134487) (not b!134110) (not b_lambda!6073) (not b!135892) (not d!41477) (not b!135617) (not d!41285) (not b!135389) (not b!134148) (not d!41787) (not d!41701) (not b!134602) (not b!135492) (not d!42501) (not b_lambda!5993) (not b!134599) (not d!41841) (not b!135529) (not b!134079) (not b!134845) (not b!135024) (not b!134277) (not b!134190) (not b!134757) (not b!134175) (not b!134167) (not d!42451) (not b!135802) (not b!134209) (not d!41107) (not b!135325) (not bm!14866) (not b!135130) (not bm!14887) (not bm!14800) (not d!41533) (not b!135545) (not b_lambda!6001) (not b!134296) (not b!135419) (not b!134080) (not b!135098) (not b_next!2923) (not b!134172) (not b!134207) (not b!134939) (not b!134777) (not d!41631) (not b_next!2921) (not b!134136) (not b!135811) (not d!42177) (not b!135596) (not d!42187) (not b!135366) (not d!41907) (not b!135559) (not b!134432) (not d!41329) (not d!41739) (not b!134294) (not d!42113) (not b!134141) (not b!134223) (not b!134779) (not b!135523) (not d!41135) (not b!134186) (not d!42317) (not d!41887) (not b!134174) (not b!135656) (not b!135546) (not d!42353) (not b!135328) (not b!134673) (not d!42491) (not b!135495) (not d!41099) (not d!41731) (not b!134627) (not b!134747) (not d!41205) (not b!134970) (not d!41091) (not d!41675) (not b!134214) (not b!134147) (not b!134522) (not b!134059) (not d!42453) (not b!134429) (not b!135208) (not b!134774) (not d!42059) (not d!41261) (not b!135765) (not b_lambda!5953) (not bm!14815) (not b!135454) (not d!41835) (not b!135758) (not b!134991) (not b!135156) (not b!134356) (not b!134839) (not d!41123) (not b!134541) (not b!135122) (not d!41547) (not b!134451) (not b!134927) (not b!135805) (not d!42449) (not bm!14816) (not b!135287) (not bm!14818) (not b!134088) (not bm!14826) (not b!135406) (not b!134384) (not b!135450) (not b!135301) (not d!41909) (not b!134082) (not b!134328) (not b!135489) (not b!134396) (not b!134588) (not d!41505) (not d!42315) (not d!41211) (not b!135069) (not b!135897) (not d!41839) (not b!134047) (not b!135071) (not b!134118) (not b!134828) (not b!134829) (not b!135825) (not bm!14822) (not d!42121) (not b!135048) (not d!40995) (not b!134871) (not d!42393) (not b!135519) (not b!135782) (not b!135354) (not d!41341) (not d!42487) (not b!134843) (not b!135275) (not b!134292) (not b_lambda!6083) (not d!41607) (not bm!14817) (not d!41801) (not d!41139) (not b!134946) (not d!42005) (not d!41659) (not d!41271) (not b!135852) (not d!41447) (not b!134633) (not b!135153) (not d!41265) (not d!41313) (not d!41693) (not b!135702) (not b!134072) (not b!135682) (not b!134256) (not b!135455) (not b!135532) (not d!41831) (not b!135858) (not b!134054) (not bm!14849) (not bm!14860) (not b!134222) (not b!134512) (not b!135780) (not b!135827) (not b!135797) (not b!134226) (not bm!14899) (not b!135527) (not b!134557) (not d!41575) (not d!41153) (not d!41445) (not d!42529) (not b!134415) (not b!134283) (not d!42213) (not b!134224) (not d!41899) (not d!41281) (not b!134724) (not d!41241) (not b!134677) (not b!135714) (not d!41767) (not b!135688) (not b!135267) (not d!41601) (not bm!14850) (not d!41143) (not d!42197) (not b!135205) (not d!41977) (not d!42239) (not b!134553) (not b!134972) (not b!135011) (not b!135195) (not d!42281) (not b!135117) (not b!134491) (not b!134840) (not b!134954) (not b!135125) (not b!134120) (not b_lambda!6071) (not b!134766) (not b!135685) (not bm!14877) (not b!135749) (not d!42071) (not b_lambda!6089) (not b!134205) (not b!134809) (not d!42343) (not b!135898) (not b!135800) (not b!134684) (not b!135158) (not d!42525) (not d!41303) (not d!41671) (not b!135508) (not b!135548) (not b!134501) (not d!41509) (not b!134655) (not d!42147) (not b!135775) (not d!41235) (not b!135813) (not b_lambda!6099) (not d!42425) (not b!135201) (not d!42069) (not d!41779) (not b!134416) (not d!41121) (not b!134027) (not bm!14871) (not d!40979) (not bm!14812) (not b!135808) (not bm!14895) (not b!134594) (not b!135542) (not b!134635) (not b!134723) (not d!40999) (not b!135180) (not b!135803) (not b!134420) (not d!42189) (not b!135689) (not b!134548) (not b!135220) (not b!135432) (not d!41623) (not b!134619) (not b!134756) (not d!41559) (not d!41049) (not d!41805) (not b!134085) (not b!135092) (not b!134863) (not b!135307) (not b!134743) (not bm!14902) (not b!134653) (not d!41465) (not b!134923) (not b!135741) (not b!134352) (not b!134229) (not b!134489) (not b!134973) (not b!135342) (not b!135135) (not b!135521) (not d!41911) (not d!41745) (not d!41443) (not b!135085) (not b!135885) (not d!42391) (not d!41181) (not b!134375) (not d!41715) (not b!135707) (not b!134213) (not d!41035) (not b!135806) (not b!134791) (not d!40987) (not d!41917) (not b!135087) (not b!135228) (not b!134071) (not b_lambda!6005) (not b!134382) (not d!41813) (not b!135671) (not b!135255) (not d!42335) (not b!134835) (not d!41027) (not b!135771) (not d!41009) (not b!134669) (not b!135886) (not d!42115) (not d!41755) (not b!135230) (not d!42073) (not d!41311) (not b!135788) (not b!134052) (not b!135104) (not b!134584) (not b!134029) (not d!42513) (not b_lambda!6011) (not b!134394) (not d!42165) (not b!134733) (not b!134931) (not d!40961) (not b!135846) (not d!42241) (not b_lambda!5955) (not b!134247) (not d!41569) (not b!134492) (not b!134825) (not b!134513) (not d!42037) (not b!134963) (not d!41353) (not b!134739) (not b!135190) (not b!135862) (not b!135684) (not b!134274) (not b!135720) (not b!135149) (not bm!14829) (not d!42141) (not bm!14886) (not b!134586) (not b!135634) (not b!134504) (not bm!14909) (not d!41759) (not b!135743) (not b!134091) (not b!134745) (not b!135127) (not b_lambda!6009) (not d!41405) (not b!135859) (not d!41515) (not b!135043) (not b!134309) (not d!41847) (not d!41455) (not d!41363) (not d!41997) (not d!41973) (not b!134740) (not d!41427) (not d!42499) (not d!41315) (not b!135162) (not d!42523) (not b!134434) (not b!134544) (not b!135624) (not d!41147) (not b!135434) (not d!42053) (not b!134540) (not b!135322) (not bm!14806) (not b!134138) (not b_lambda!6059) (not d!41487) (not b!134412) (not b!134435) (not d!41293) (not d!41789) (not b!134966) (not b!135582) (not d!41013) (not d!41577) (not b!134442) (not d!42303) (not b!135881) (not b!135324) (not bm!14883) (not b!135368) (not d!41497) (not b!134997))
(check-sat b_and!8413 b_and!8415 (not b_next!2921) (not b_next!2923))
