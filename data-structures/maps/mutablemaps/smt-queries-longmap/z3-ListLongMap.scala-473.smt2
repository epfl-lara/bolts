; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!9274 () Bool)

(assert start!9274)

(declare-fun b!66325 () Bool)

(declare-fun b_free!2069 () Bool)

(declare-fun b_next!2069 () Bool)

(assert (=> b!66325 (= b_free!2069 (not b_next!2069))))

(declare-fun tp!8361 () Bool)

(declare-fun b_and!4093 () Bool)

(assert (=> b!66325 (= tp!8361 b_and!4093)))

(declare-fun b!66322 () Bool)

(declare-fun b_free!2071 () Bool)

(declare-fun b_next!2071 () Bool)

(assert (=> b!66322 (= b_free!2071 (not b_next!2071))))

(declare-fun tp!8360 () Bool)

(declare-fun b_and!4095 () Bool)

(assert (=> b!66322 (= tp!8360 b_and!4095)))

(declare-fun b!66317 () Bool)

(declare-fun e!43525 () Bool)

(declare-fun tp_is_empty!2451 () Bool)

(assert (=> b!66317 (= e!43525 tp_is_empty!2451)))

(declare-fun b!66318 () Bool)

(declare-fun e!43534 () Bool)

(declare-fun mapRes!3075 () Bool)

(assert (=> b!66318 (= e!43534 (and e!43525 mapRes!3075))))

(declare-fun condMapEmpty!3075 () Bool)

(declare-datatypes ((V!2915 0))(
  ( (V!2916 (val!1270 Int)) )
))
(declare-datatypes ((array!3840 0))(
  ( (array!3841 (arr!1834 (Array (_ BitVec 32) (_ BitVec 64))) (size!2069 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!882 0))(
  ( (ValueCellFull!882 (v!2478 V!2915)) (EmptyCell!882) )
))
(declare-datatypes ((array!3842 0))(
  ( (array!3843 (arr!1835 (Array (_ BitVec 32) ValueCell!882)) (size!2070 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!672 0))(
  ( (LongMapFixedSize!673 (defaultEntry!2147 Int) (mask!6082 (_ BitVec 32)) (extraKeys!2018 (_ BitVec 32)) (zeroValue!2055 V!2915) (minValue!2055 V!2915) (_size!385 (_ BitVec 32)) (_keys!3787 array!3840) (_values!2130 array!3842) (_vacant!385 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!482 0))(
  ( (Cell!483 (v!2479 LongMapFixedSize!672)) )
))
(declare-datatypes ((LongMap!482 0))(
  ( (LongMap!483 (underlying!252 Cell!482)) )
))
(declare-fun thiss!992 () LongMap!482)

(declare-fun mapDefault!3075 () ValueCell!882)

(assert (=> b!66318 (= condMapEmpty!3075 (= (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!882)) mapDefault!3075)))))

(declare-fun b!66319 () Bool)

(declare-fun e!43519 () Bool)

(assert (=> b!66319 (= e!43519 tp_is_empty!2451)))

(declare-fun b!66320 () Bool)

(declare-fun e!43523 () Bool)

(declare-fun e!43520 () Bool)

(assert (=> b!66320 (= e!43523 (not e!43520))))

(declare-fun res!35912 () Bool)

(assert (=> b!66320 (=> res!35912 e!43520)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!66320 (= res!35912 (not (validMask!0 (mask!6082 (v!2479 (underlying!252 thiss!992))))))))

(declare-datatypes ((tuple2!2108 0))(
  ( (tuple2!2109 (_1!1064 (_ BitVec 64)) (_2!1064 V!2915)) )
))
(declare-datatypes ((List!1490 0))(
  ( (Nil!1487) (Cons!1486 (h!2070 tuple2!2108) (t!4976 List!1490)) )
))
(declare-datatypes ((ListLongMap!1415 0))(
  ( (ListLongMap!1416 (toList!723 List!1490)) )
))
(declare-fun lt!28505 () ListLongMap!1415)

(declare-fun lt!28500 () tuple2!2108)

(declare-fun lt!28503 () tuple2!2108)

(declare-fun +!87 (ListLongMap!1415 tuple2!2108) ListLongMap!1415)

(assert (=> b!66320 (= (+!87 (+!87 lt!28505 lt!28500) lt!28503) (+!87 (+!87 lt!28505 lt!28503) lt!28500))))

(assert (=> b!66320 (= lt!28503 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun lt!28502 () V!2915)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!66320 (= lt!28500 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))

(declare-datatypes ((Unit!1836 0))(
  ( (Unit!1837) )
))
(declare-fun lt!28506 () Unit!1836)

(declare-fun addCommutativeForDiffKeys!6 (ListLongMap!1415 (_ BitVec 64) V!2915 (_ BitVec 64) V!2915) Unit!1836)

(assert (=> b!66320 (= lt!28506 (addCommutativeForDiffKeys!6 lt!28505 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!51 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 32) Int) ListLongMap!1415)

(assert (=> b!66320 (= lt!28505 (getCurrentListMapNoExtraKeys!51 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun b!66321 () Bool)

(declare-fun e!43531 () Bool)

(declare-fun e!43533 () Bool)

(assert (=> b!66321 (= e!43531 e!43533)))

(declare-fun res!35914 () Bool)

(assert (=> b!66321 (=> (not res!35914) (not e!43533))))

(assert (=> b!66321 (= res!35914 (and (not (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1127 (ValueCell!882 V!2915) V!2915)

(declare-fun dynLambda!324 (Int (_ BitVec 64)) V!2915)

(assert (=> b!66321 (= lt!28502 (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) from!355) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!43535 () Bool)

(declare-fun newMap!16 () LongMapFixedSize!672)

(declare-fun e!43521 () Bool)

(declare-fun array_inv!1087 (array!3840) Bool)

(declare-fun array_inv!1088 (array!3842) Bool)

(assert (=> b!66322 (= e!43535 (and tp!8360 tp_is_empty!2451 (array_inv!1087 (_keys!3787 newMap!16)) (array_inv!1088 (_values!2130 newMap!16)) e!43521))))

(declare-fun res!35916 () Bool)

(declare-fun e!43522 () Bool)

(assert (=> start!9274 (=> (not res!35916) (not e!43522))))

(declare-fun valid!277 (LongMap!482) Bool)

(assert (=> start!9274 (= res!35916 (valid!277 thiss!992))))

(assert (=> start!9274 e!43522))

(declare-fun e!43536 () Bool)

(assert (=> start!9274 e!43536))

(assert (=> start!9274 true))

(assert (=> start!9274 e!43535))

(declare-fun b!66323 () Bool)

(declare-fun e!43528 () Bool)

(assert (=> b!66323 (= e!43536 e!43528)))

(declare-fun b!66324 () Bool)

(assert (=> b!66324 (= e!43533 e!43523)))

(declare-fun res!35910 () Bool)

(assert (=> b!66324 (=> (not res!35910) (not e!43523))))

(declare-datatypes ((tuple2!2110 0))(
  ( (tuple2!2111 (_1!1065 Bool) (_2!1065 LongMapFixedSize!672)) )
))
(declare-fun lt!28510 () tuple2!2110)

(assert (=> b!66324 (= res!35910 (and (_1!1065 lt!28510) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!28508 () Unit!1836)

(declare-fun e!43529 () Unit!1836)

(assert (=> b!66324 (= lt!28508 e!43529)))

(declare-fun c!9132 () Bool)

(declare-fun lt!28501 () ListLongMap!1415)

(declare-fun contains!716 (ListLongMap!1415 (_ BitVec 64)) Bool)

(assert (=> b!66324 (= c!9132 (contains!716 lt!28501 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun update!96 (LongMapFixedSize!672 (_ BitVec 64) V!2915) tuple2!2110)

(assert (=> b!66324 (= lt!28510 (update!96 newMap!16 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))

(declare-fun e!43524 () Bool)

(assert (=> b!66325 (= e!43524 (and tp!8361 tp_is_empty!2451 (array_inv!1087 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (array_inv!1088 (_values!2130 (v!2479 (underlying!252 thiss!992)))) e!43534))))

(declare-fun b!66326 () Bool)

(declare-fun res!35913 () Bool)

(assert (=> b!66326 (=> (not res!35913) (not e!43522))))

(assert (=> b!66326 (= res!35913 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6082 newMap!16)) (_size!385 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun b!66327 () Bool)

(assert (=> b!66327 (= e!43520 (= (size!2070 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6082 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!66328 () Bool)

(assert (=> b!66328 (= e!43528 e!43524)))

(declare-fun b!66329 () Bool)

(declare-fun Unit!1838 () Unit!1836)

(assert (=> b!66329 (= e!43529 Unit!1838)))

(declare-fun lt!28509 () Unit!1836)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!46 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 64) (_ BitVec 32) Int) Unit!1836)

(assert (=> b!66329 (= lt!28509 (lemmaListMapContainsThenArrayContainsFrom!46 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3840 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!66329 (arrayContainsKey!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!28507 () Unit!1836)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3840 (_ BitVec 32) (_ BitVec 32)) Unit!1836)

(assert (=> b!66329 (= lt!28507 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1491 0))(
  ( (Nil!1488) (Cons!1487 (h!2071 (_ BitVec 64)) (t!4977 List!1491)) )
))
(declare-fun arrayNoDuplicates!0 (array!3840 (_ BitVec 32) List!1491) Bool)

(assert (=> b!66329 (arrayNoDuplicates!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) from!355 Nil!1488)))

(declare-fun lt!28511 () Unit!1836)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3840 (_ BitVec 32) (_ BitVec 64) List!1491) Unit!1836)

(assert (=> b!66329 (= lt!28511 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488)))))

(assert (=> b!66329 false))

(declare-fun b!66330 () Bool)

(declare-fun res!35911 () Bool)

(assert (=> b!66330 (=> (not res!35911) (not e!43522))))

(assert (=> b!66330 (= res!35911 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun mapIsEmpty!3075 () Bool)

(declare-fun mapRes!3076 () Bool)

(assert (=> mapIsEmpty!3075 mapRes!3076))

(declare-fun b!66331 () Bool)

(assert (=> b!66331 (= e!43522 e!43531)))

(declare-fun res!35915 () Bool)

(assert (=> b!66331 (=> (not res!35915) (not e!43531))))

(declare-fun lt!28504 () ListLongMap!1415)

(assert (=> b!66331 (= res!35915 (= lt!28504 lt!28501))))

(declare-fun map!1143 (LongMapFixedSize!672) ListLongMap!1415)

(assert (=> b!66331 (= lt!28501 (map!1143 newMap!16))))

(declare-fun getCurrentListMap!419 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 32) Int) ListLongMap!1415)

(assert (=> b!66331 (= lt!28504 (getCurrentListMap!419 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun b!66332 () Bool)

(declare-fun e!43530 () Bool)

(assert (=> b!66332 (= e!43521 (and e!43530 mapRes!3076))))

(declare-fun condMapEmpty!3076 () Bool)

(declare-fun mapDefault!3076 () ValueCell!882)

(assert (=> b!66332 (= condMapEmpty!3076 (= (arr!1835 (_values!2130 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!882)) mapDefault!3076)))))

(declare-fun b!66333 () Bool)

(declare-fun Unit!1839 () Unit!1836)

(assert (=> b!66333 (= e!43529 Unit!1839)))

(declare-fun mapIsEmpty!3076 () Bool)

(assert (=> mapIsEmpty!3076 mapRes!3075))

(declare-fun b!66334 () Bool)

(declare-fun e!43527 () Bool)

(assert (=> b!66334 (= e!43527 tp_is_empty!2451)))

(declare-fun mapNonEmpty!3075 () Bool)

(declare-fun tp!8362 () Bool)

(assert (=> mapNonEmpty!3075 (= mapRes!3075 (and tp!8362 e!43527))))

(declare-fun mapKey!3076 () (_ BitVec 32))

(declare-fun mapValue!3075 () ValueCell!882)

(declare-fun mapRest!3075 () (Array (_ BitVec 32) ValueCell!882))

(assert (=> mapNonEmpty!3075 (= (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (store mapRest!3075 mapKey!3076 mapValue!3075))))

(declare-fun mapNonEmpty!3076 () Bool)

(declare-fun tp!8359 () Bool)

(assert (=> mapNonEmpty!3076 (= mapRes!3076 (and tp!8359 e!43519))))

(declare-fun mapValue!3076 () ValueCell!882)

(declare-fun mapKey!3075 () (_ BitVec 32))

(declare-fun mapRest!3076 () (Array (_ BitVec 32) ValueCell!882))

(assert (=> mapNonEmpty!3076 (= (arr!1835 (_values!2130 newMap!16)) (store mapRest!3076 mapKey!3075 mapValue!3076))))

(declare-fun b!66335 () Bool)

(assert (=> b!66335 (= e!43530 tp_is_empty!2451)))

(declare-fun b!66336 () Bool)

(declare-fun res!35917 () Bool)

(assert (=> b!66336 (=> (not res!35917) (not e!43522))))

(declare-fun valid!278 (LongMapFixedSize!672) Bool)

(assert (=> b!66336 (= res!35917 (valid!278 newMap!16))))

(assert (= (and start!9274 res!35916) b!66330))

(assert (= (and b!66330 res!35911) b!66336))

(assert (= (and b!66336 res!35917) b!66326))

(assert (= (and b!66326 res!35913) b!66331))

(assert (= (and b!66331 res!35915) b!66321))

(assert (= (and b!66321 res!35914) b!66324))

(assert (= (and b!66324 c!9132) b!66329))

(assert (= (and b!66324 (not c!9132)) b!66333))

(assert (= (and b!66324 res!35910) b!66320))

(assert (= (and b!66320 (not res!35912)) b!66327))

(assert (= (and b!66318 condMapEmpty!3075) mapIsEmpty!3076))

(assert (= (and b!66318 (not condMapEmpty!3075)) mapNonEmpty!3075))

(get-info :version)

(assert (= (and mapNonEmpty!3075 ((_ is ValueCellFull!882) mapValue!3075)) b!66334))

(assert (= (and b!66318 ((_ is ValueCellFull!882) mapDefault!3075)) b!66317))

(assert (= b!66325 b!66318))

(assert (= b!66328 b!66325))

(assert (= b!66323 b!66328))

(assert (= start!9274 b!66323))

(assert (= (and b!66332 condMapEmpty!3076) mapIsEmpty!3075))

(assert (= (and b!66332 (not condMapEmpty!3076)) mapNonEmpty!3076))

(assert (= (and mapNonEmpty!3076 ((_ is ValueCellFull!882) mapValue!3076)) b!66319))

(assert (= (and b!66332 ((_ is ValueCellFull!882) mapDefault!3076)) b!66335))

(assert (= b!66322 b!66332))

(assert (= start!9274 b!66322))

(declare-fun b_lambda!2977 () Bool)

(assert (=> (not b_lambda!2977) (not b!66321)))

(declare-fun t!4973 () Bool)

(declare-fun tb!1461 () Bool)

(assert (=> (and b!66325 (= (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))) t!4973) tb!1461))

(declare-fun result!2581 () Bool)

(assert (=> tb!1461 (= result!2581 tp_is_empty!2451)))

(assert (=> b!66321 t!4973))

(declare-fun b_and!4097 () Bool)

(assert (= b_and!4093 (and (=> t!4973 result!2581) b_and!4097)))

(declare-fun t!4975 () Bool)

(declare-fun tb!1463 () Bool)

(assert (=> (and b!66322 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))) t!4975) tb!1463))

(declare-fun result!2585 () Bool)

(assert (= result!2585 result!2581))

(assert (=> b!66321 t!4975))

(declare-fun b_and!4099 () Bool)

(assert (= b_and!4095 (and (=> t!4975 result!2585) b_and!4099)))

(declare-fun m!60719 () Bool)

(assert (=> b!66321 m!60719))

(declare-fun m!60721 () Bool)

(assert (=> b!66321 m!60721))

(declare-fun m!60723 () Bool)

(assert (=> b!66321 m!60723))

(assert (=> b!66321 m!60721))

(assert (=> b!66321 m!60723))

(declare-fun m!60725 () Bool)

(assert (=> b!66321 m!60725))

(declare-fun m!60727 () Bool)

(assert (=> b!66336 m!60727))

(declare-fun m!60729 () Bool)

(assert (=> b!66331 m!60729))

(declare-fun m!60731 () Bool)

(assert (=> b!66331 m!60731))

(declare-fun m!60733 () Bool)

(assert (=> start!9274 m!60733))

(declare-fun m!60735 () Bool)

(assert (=> mapNonEmpty!3075 m!60735))

(assert (=> b!66324 m!60719))

(assert (=> b!66324 m!60719))

(declare-fun m!60737 () Bool)

(assert (=> b!66324 m!60737))

(assert (=> b!66324 m!60719))

(declare-fun m!60739 () Bool)

(assert (=> b!66324 m!60739))

(declare-fun m!60741 () Bool)

(assert (=> b!66320 m!60741))

(declare-fun m!60743 () Bool)

(assert (=> b!66320 m!60743))

(declare-fun m!60745 () Bool)

(assert (=> b!66320 m!60745))

(declare-fun m!60747 () Bool)

(assert (=> b!66320 m!60747))

(assert (=> b!66320 m!60719))

(declare-fun m!60749 () Bool)

(assert (=> b!66320 m!60749))

(assert (=> b!66320 m!60719))

(assert (=> b!66320 m!60741))

(assert (=> b!66320 m!60747))

(declare-fun m!60751 () Bool)

(assert (=> b!66320 m!60751))

(declare-fun m!60753 () Bool)

(assert (=> b!66320 m!60753))

(declare-fun m!60755 () Bool)

(assert (=> b!66329 m!60755))

(declare-fun m!60757 () Bool)

(assert (=> b!66329 m!60757))

(assert (=> b!66329 m!60719))

(declare-fun m!60759 () Bool)

(assert (=> b!66329 m!60759))

(assert (=> b!66329 m!60719))

(assert (=> b!66329 m!60719))

(declare-fun m!60761 () Bool)

(assert (=> b!66329 m!60761))

(assert (=> b!66329 m!60719))

(declare-fun m!60763 () Bool)

(assert (=> b!66329 m!60763))

(declare-fun m!60765 () Bool)

(assert (=> mapNonEmpty!3076 m!60765))

(declare-fun m!60767 () Bool)

(assert (=> b!66325 m!60767))

(declare-fun m!60769 () Bool)

(assert (=> b!66325 m!60769))

(declare-fun m!60771 () Bool)

(assert (=> b!66322 m!60771))

(declare-fun m!60773 () Bool)

(assert (=> b!66322 m!60773))

(check-sat (not mapNonEmpty!3076) (not start!9274) (not b!66331) (not b!66324) (not b!66322) (not mapNonEmpty!3075) (not b_next!2071) (not b!66336) (not b_next!2069) b_and!4097 tp_is_empty!2451 (not b!66329) b_and!4099 (not b!66325) (not b!66321) (not b_lambda!2977) (not b!66320))
(check-sat b_and!4097 b_and!4099 (not b_next!2069) (not b_next!2071))
(get-model)

(declare-fun b_lambda!2981 () Bool)

(assert (= b_lambda!2977 (or (and b!66325 b_free!2069) (and b!66322 b_free!2071 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))))) b_lambda!2981)))

(check-sat (not start!9274) (not b!66331) (not b!66324) (not b!66322) (not mapNonEmpty!3075) (not b_next!2071) (not b!66336) (not b_next!2069) b_and!4097 tp_is_empty!2451 (not b!66329) b_and!4099 (not b!66320) (not mapNonEmpty!3076) (not b_lambda!2981) (not b!66325) (not b!66321))
(check-sat b_and!4097 b_and!4099 (not b_next!2069) (not b_next!2071))
(get-model)

(declare-fun d!13695 () Bool)

(assert (=> d!13695 (= (array_inv!1087 (_keys!3787 newMap!16)) (bvsge (size!2069 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66322 d!13695))

(declare-fun d!13697 () Bool)

(assert (=> d!13697 (= (array_inv!1088 (_values!2130 newMap!16)) (bvsge (size!2070 (_values!2130 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66322 d!13697))

(declare-fun d!13699 () Bool)

(declare-fun c!9138 () Bool)

(assert (=> d!13699 (= c!9138 ((_ is ValueCellFull!882) (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun e!43593 () V!2915)

(assert (=> d!13699 (= (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) from!355) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!43593)))

(declare-fun b!66405 () Bool)

(declare-fun get!1128 (ValueCell!882 V!2915) V!2915)

(assert (=> b!66405 (= e!43593 (get!1128 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) from!355) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!66406 () Bool)

(declare-fun get!1129 (ValueCell!882 V!2915) V!2915)

(assert (=> b!66406 (= e!43593 (get!1129 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) from!355) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13699 c!9138) b!66405))

(assert (= (and d!13699 (not c!9138)) b!66406))

(assert (=> b!66405 m!60721))

(assert (=> b!66405 m!60723))

(declare-fun m!60831 () Bool)

(assert (=> b!66405 m!60831))

(assert (=> b!66406 m!60721))

(assert (=> b!66406 m!60723))

(declare-fun m!60833 () Bool)

(assert (=> b!66406 m!60833))

(assert (=> b!66321 d!13699))

(declare-fun d!13701 () Bool)

(assert (=> d!13701 (= (map!1143 newMap!16) (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun bs!2842 () Bool)

(assert (= bs!2842 d!13701))

(declare-fun m!60835 () Bool)

(assert (=> bs!2842 m!60835))

(assert (=> b!66331 d!13701))

(declare-fun b!66449 () Bool)

(declare-fun e!43625 () Bool)

(declare-fun call!5485 () Bool)

(assert (=> b!66449 (= e!43625 (not call!5485))))

(declare-fun bm!5480 () Bool)

(declare-fun call!5489 () ListLongMap!1415)

(assert (=> bm!5480 (= call!5489 (getCurrentListMapNoExtraKeys!51 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun d!13703 () Bool)

(declare-fun e!43632 () Bool)

(assert (=> d!13703 e!43632))

(declare-fun res!35968 () Bool)

(assert (=> d!13703 (=> (not res!35968) (not e!43632))))

(assert (=> d!13703 (= res!35968 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun lt!28612 () ListLongMap!1415)

(declare-fun lt!28599 () ListLongMap!1415)

(assert (=> d!13703 (= lt!28612 lt!28599)))

(declare-fun lt!28595 () Unit!1836)

(declare-fun e!43628 () Unit!1836)

(assert (=> d!13703 (= lt!28595 e!43628)))

(declare-fun c!9153 () Bool)

(declare-fun e!43626 () Bool)

(assert (=> d!13703 (= c!9153 e!43626)))

(declare-fun res!35961 () Bool)

(assert (=> d!13703 (=> (not res!35961) (not e!43626))))

(assert (=> d!13703 (= res!35961 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun e!43621 () ListLongMap!1415)

(assert (=> d!13703 (= lt!28599 e!43621)))

(declare-fun c!9154 () Bool)

(assert (=> d!13703 (= c!9154 (and (not (= (bvand (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!13703 (validMask!0 (mask!6082 (v!2479 (underlying!252 thiss!992))))))

(assert (=> d!13703 (= (getCurrentListMap!419 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))) lt!28612)))

(declare-fun b!66450 () Bool)

(declare-fun call!5488 () ListLongMap!1415)

(assert (=> b!66450 (= e!43621 (+!87 call!5488 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!66451 () Bool)

(declare-fun e!43629 () Bool)

(assert (=> b!66451 (= e!43625 e!43629)))

(declare-fun res!35963 () Bool)

(assert (=> b!66451 (= res!35963 call!5485)))

(assert (=> b!66451 (=> (not res!35963) (not e!43629))))

(declare-fun b!66452 () Bool)

(declare-fun e!43623 () ListLongMap!1415)

(assert (=> b!66452 (= e!43621 e!43623)))

(declare-fun c!9156 () Bool)

(assert (=> b!66452 (= c!9156 (and (not (= (bvand (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5481 () Bool)

(declare-fun call!5486 () ListLongMap!1415)

(declare-fun call!5484 () ListLongMap!1415)

(assert (=> bm!5481 (= call!5486 call!5484)))

(declare-fun b!66453 () Bool)

(declare-fun e!43624 () Bool)

(assert (=> b!66453 (= e!43632 e!43624)))

(declare-fun c!9151 () Bool)

(assert (=> b!66453 (= c!9151 (not (= (bvand (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66454 () Bool)

(declare-fun call!5487 () Bool)

(assert (=> b!66454 (= e!43624 (not call!5487))))

(declare-fun b!66455 () Bool)

(declare-fun e!43630 () Bool)

(assert (=> b!66455 (= e!43624 e!43630)))

(declare-fun res!35967 () Bool)

(assert (=> b!66455 (= res!35967 call!5487)))

(assert (=> b!66455 (=> (not res!35967) (not e!43630))))

(declare-fun b!66456 () Bool)

(declare-fun lt!28613 () Unit!1836)

(assert (=> b!66456 (= e!43628 lt!28613)))

(declare-fun lt!28597 () ListLongMap!1415)

(assert (=> b!66456 (= lt!28597 (getCurrentListMapNoExtraKeys!51 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun lt!28606 () (_ BitVec 64))

(assert (=> b!66456 (= lt!28606 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28600 () (_ BitVec 64))

(assert (=> b!66456 (= lt!28600 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!28594 () Unit!1836)

(declare-fun addStillContains!48 (ListLongMap!1415 (_ BitVec 64) V!2915 (_ BitVec 64)) Unit!1836)

(assert (=> b!66456 (= lt!28594 (addStillContains!48 lt!28597 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) lt!28600))))

(assert (=> b!66456 (contains!716 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28600)))

(declare-fun lt!28604 () Unit!1836)

(assert (=> b!66456 (= lt!28604 lt!28594)))

(declare-fun lt!28611 () ListLongMap!1415)

(assert (=> b!66456 (= lt!28611 (getCurrentListMapNoExtraKeys!51 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun lt!28602 () (_ BitVec 64))

(assert (=> b!66456 (= lt!28602 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28598 () (_ BitVec 64))

(assert (=> b!66456 (= lt!28598 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!28609 () Unit!1836)

(declare-fun addApplyDifferent!48 (ListLongMap!1415 (_ BitVec 64) V!2915 (_ BitVec 64)) Unit!1836)

(assert (=> b!66456 (= lt!28609 (addApplyDifferent!48 lt!28611 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))) lt!28598))))

(declare-fun apply!72 (ListLongMap!1415 (_ BitVec 64)) V!2915)

(assert (=> b!66456 (= (apply!72 (+!87 lt!28611 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28598) (apply!72 lt!28611 lt!28598))))

(declare-fun lt!28592 () Unit!1836)

(assert (=> b!66456 (= lt!28592 lt!28609)))

(declare-fun lt!28608 () ListLongMap!1415)

(assert (=> b!66456 (= lt!28608 (getCurrentListMapNoExtraKeys!51 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun lt!28603 () (_ BitVec 64))

(assert (=> b!66456 (= lt!28603 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28605 () (_ BitVec 64))

(assert (=> b!66456 (= lt!28605 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!28593 () Unit!1836)

(assert (=> b!66456 (= lt!28593 (addApplyDifferent!48 lt!28608 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) lt!28605))))

(assert (=> b!66456 (= (apply!72 (+!87 lt!28608 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28605) (apply!72 lt!28608 lt!28605))))

(declare-fun lt!28607 () Unit!1836)

(assert (=> b!66456 (= lt!28607 lt!28593)))

(declare-fun lt!28596 () ListLongMap!1415)

(assert (=> b!66456 (= lt!28596 (getCurrentListMapNoExtraKeys!51 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun lt!28601 () (_ BitVec 64))

(assert (=> b!66456 (= lt!28601 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28610 () (_ BitVec 64))

(assert (=> b!66456 (= lt!28610 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!66456 (= lt!28613 (addApplyDifferent!48 lt!28596 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))) lt!28610))))

(assert (=> b!66456 (= (apply!72 (+!87 lt!28596 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28610) (apply!72 lt!28596 lt!28610))))

(declare-fun b!66457 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!66457 (= e!43626 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!66458 () Bool)

(declare-fun Unit!1843 () Unit!1836)

(assert (=> b!66458 (= e!43628 Unit!1843)))

(declare-fun b!66459 () Bool)

(declare-fun res!35966 () Bool)

(assert (=> b!66459 (=> (not res!35966) (not e!43632))))

(assert (=> b!66459 (= res!35966 e!43625)))

(declare-fun c!9152 () Bool)

(assert (=> b!66459 (= c!9152 (not (= (bvand (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5482 () Bool)

(assert (=> bm!5482 (= call!5484 call!5489)))

(declare-fun b!66460 () Bool)

(assert (=> b!66460 (= e!43630 (= (apply!72 lt!28612 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun bm!5483 () Bool)

(assert (=> bm!5483 (= call!5488 (+!87 (ite c!9154 call!5489 (ite c!9156 call!5484 call!5486)) (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!66461 () Bool)

(declare-fun res!35962 () Bool)

(assert (=> b!66461 (=> (not res!35962) (not e!43632))))

(declare-fun e!43631 () Bool)

(assert (=> b!66461 (= res!35962 e!43631)))

(declare-fun res!35965 () Bool)

(assert (=> b!66461 (=> res!35965 e!43631)))

(declare-fun e!43627 () Bool)

(assert (=> b!66461 (= res!35965 (not e!43627))))

(declare-fun res!35960 () Bool)

(assert (=> b!66461 (=> (not res!35960) (not e!43627))))

(assert (=> b!66461 (= res!35960 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!66462 () Bool)

(declare-fun c!9155 () Bool)

(assert (=> b!66462 (= c!9155 (and (not (= (bvand (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!43620 () ListLongMap!1415)

(assert (=> b!66462 (= e!43623 e!43620)))

(declare-fun b!66463 () Bool)

(assert (=> b!66463 (= e!43620 call!5486)))

(declare-fun bm!5484 () Bool)

(declare-fun call!5483 () ListLongMap!1415)

(assert (=> bm!5484 (= call!5483 call!5488)))

(declare-fun bm!5485 () Bool)

(assert (=> bm!5485 (= call!5485 (contains!716 lt!28612 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66464 () Bool)

(assert (=> b!66464 (= e!43623 call!5483)))

(declare-fun b!66465 () Bool)

(assert (=> b!66465 (= e!43627 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!66466 () Bool)

(assert (=> b!66466 (= e!43629 (= (apply!72 lt!28612 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun b!66467 () Bool)

(assert (=> b!66467 (= e!43620 call!5483)))

(declare-fun b!66468 () Bool)

(declare-fun e!43622 () Bool)

(assert (=> b!66468 (= e!43631 e!43622)))

(declare-fun res!35964 () Bool)

(assert (=> b!66468 (=> (not res!35964) (not e!43622))))

(assert (=> b!66468 (= res!35964 (contains!716 lt!28612 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66468 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun bm!5486 () Bool)

(assert (=> bm!5486 (= call!5487 (contains!716 lt!28612 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66469 () Bool)

(assert (=> b!66469 (= e!43622 (= (apply!72 lt!28612 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66469 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2070 (_values!2130 (v!2479 (underlying!252 thiss!992))))))))

(assert (=> b!66469 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(assert (= (and d!13703 c!9154) b!66450))

(assert (= (and d!13703 (not c!9154)) b!66452))

(assert (= (and b!66452 c!9156) b!66464))

(assert (= (and b!66452 (not c!9156)) b!66462))

(assert (= (and b!66462 c!9155) b!66467))

(assert (= (and b!66462 (not c!9155)) b!66463))

(assert (= (or b!66467 b!66463) bm!5481))

(assert (= (or b!66464 bm!5481) bm!5482))

(assert (= (or b!66464 b!66467) bm!5484))

(assert (= (or b!66450 bm!5482) bm!5480))

(assert (= (or b!66450 bm!5484) bm!5483))

(assert (= (and d!13703 res!35961) b!66457))

(assert (= (and d!13703 c!9153) b!66456))

(assert (= (and d!13703 (not c!9153)) b!66458))

(assert (= (and d!13703 res!35968) b!66461))

(assert (= (and b!66461 res!35960) b!66465))

(assert (= (and b!66461 (not res!35965)) b!66468))

(assert (= (and b!66468 res!35964) b!66469))

(assert (= (and b!66461 res!35962) b!66459))

(assert (= (and b!66459 c!9152) b!66451))

(assert (= (and b!66459 (not c!9152)) b!66449))

(assert (= (and b!66451 res!35963) b!66466))

(assert (= (or b!66451 b!66449) bm!5485))

(assert (= (and b!66459 res!35966) b!66453))

(assert (= (and b!66453 c!9151) b!66455))

(assert (= (and b!66453 (not c!9151)) b!66454))

(assert (= (and b!66455 res!35967) b!66460))

(assert (= (or b!66455 b!66454) bm!5486))

(declare-fun b_lambda!2983 () Bool)

(assert (=> (not b_lambda!2983) (not b!66469)))

(assert (=> b!66469 t!4973))

(declare-fun b_and!4109 () Bool)

(assert (= b_and!4097 (and (=> t!4973 result!2581) b_and!4109)))

(assert (=> b!66469 t!4975))

(declare-fun b_and!4111 () Bool)

(assert (= b_and!4099 (and (=> t!4975 result!2585) b_and!4111)))

(declare-fun m!60837 () Bool)

(assert (=> bm!5485 m!60837))

(declare-fun m!60839 () Bool)

(assert (=> b!66469 m!60839))

(assert (=> b!66469 m!60723))

(declare-fun m!60841 () Bool)

(assert (=> b!66469 m!60841))

(declare-fun m!60843 () Bool)

(assert (=> b!66469 m!60843))

(assert (=> b!66469 m!60843))

(declare-fun m!60845 () Bool)

(assert (=> b!66469 m!60845))

(assert (=> b!66469 m!60839))

(assert (=> b!66469 m!60723))

(assert (=> b!66468 m!60843))

(assert (=> b!66468 m!60843))

(declare-fun m!60847 () Bool)

(assert (=> b!66468 m!60847))

(declare-fun m!60849 () Bool)

(assert (=> b!66466 m!60849))

(assert (=> b!66465 m!60843))

(assert (=> b!66465 m!60843))

(declare-fun m!60851 () Bool)

(assert (=> b!66465 m!60851))

(declare-fun m!60853 () Bool)

(assert (=> b!66460 m!60853))

(assert (=> d!13703 m!60745))

(declare-fun m!60855 () Bool)

(assert (=> b!66450 m!60855))

(assert (=> bm!5480 m!60753))

(declare-fun m!60857 () Bool)

(assert (=> bm!5483 m!60857))

(declare-fun m!60859 () Bool)

(assert (=> b!66456 m!60859))

(declare-fun m!60861 () Bool)

(assert (=> b!66456 m!60861))

(declare-fun m!60863 () Bool)

(assert (=> b!66456 m!60863))

(declare-fun m!60865 () Bool)

(assert (=> b!66456 m!60865))

(declare-fun m!60867 () Bool)

(assert (=> b!66456 m!60867))

(declare-fun m!60869 () Bool)

(assert (=> b!66456 m!60869))

(declare-fun m!60871 () Bool)

(assert (=> b!66456 m!60871))

(assert (=> b!66456 m!60865))

(declare-fun m!60873 () Bool)

(assert (=> b!66456 m!60873))

(assert (=> b!66456 m!60753))

(declare-fun m!60875 () Bool)

(assert (=> b!66456 m!60875))

(declare-fun m!60877 () Bool)

(assert (=> b!66456 m!60877))

(assert (=> b!66456 m!60869))

(declare-fun m!60879 () Bool)

(assert (=> b!66456 m!60879))

(assert (=> b!66456 m!60859))

(declare-fun m!60881 () Bool)

(assert (=> b!66456 m!60881))

(declare-fun m!60883 () Bool)

(assert (=> b!66456 m!60883))

(assert (=> b!66456 m!60843))

(assert (=> b!66456 m!60881))

(declare-fun m!60885 () Bool)

(assert (=> b!66456 m!60885))

(declare-fun m!60887 () Bool)

(assert (=> b!66456 m!60887))

(assert (=> b!66457 m!60843))

(assert (=> b!66457 m!60843))

(assert (=> b!66457 m!60851))

(declare-fun m!60889 () Bool)

(assert (=> bm!5486 m!60889))

(assert (=> b!66331 d!13703))

(declare-fun d!13705 () Bool)

(assert (=> d!13705 (= (array_inv!1087 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvsge (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!66325 d!13705))

(declare-fun d!13707 () Bool)

(assert (=> d!13707 (= (array_inv!1088 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvsge (size!2070 (_values!2130 (v!2479 (underlying!252 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!66325 d!13707))

(declare-fun d!13709 () Bool)

(assert (=> d!13709 (= (valid!277 thiss!992) (valid!278 (v!2479 (underlying!252 thiss!992))))))

(declare-fun bs!2843 () Bool)

(assert (= bs!2843 d!13709))

(declare-fun m!60891 () Bool)

(assert (=> bs!2843 m!60891))

(assert (=> start!9274 d!13709))

(declare-fun b!66494 () Bool)

(declare-fun e!43650 () ListLongMap!1415)

(declare-fun e!43651 () ListLongMap!1415)

(assert (=> b!66494 (= e!43650 e!43651)))

(declare-fun c!9167 () Bool)

(assert (=> b!66494 (= c!9167 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!66495 () Bool)

(declare-fun e!43647 () Bool)

(assert (=> b!66495 (= e!43647 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66495 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!66496 () Bool)

(declare-fun lt!28632 () Unit!1836)

(declare-fun lt!28631 () Unit!1836)

(assert (=> b!66496 (= lt!28632 lt!28631)))

(declare-fun lt!28628 () (_ BitVec 64))

(declare-fun lt!28630 () (_ BitVec 64))

(declare-fun lt!28633 () V!2915)

(declare-fun lt!28629 () ListLongMap!1415)

(assert (=> b!66496 (not (contains!716 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633)) lt!28630))))

(declare-fun addStillNotContains!23 (ListLongMap!1415 (_ BitVec 64) V!2915 (_ BitVec 64)) Unit!1836)

(assert (=> b!66496 (= lt!28631 (addStillNotContains!23 lt!28629 lt!28628 lt!28633 lt!28630))))

(assert (=> b!66496 (= lt!28630 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!66496 (= lt!28633 (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!66496 (= lt!28628 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!5492 () ListLongMap!1415)

(assert (=> b!66496 (= lt!28629 call!5492)))

(assert (=> b!66496 (= e!43651 (+!87 call!5492 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!66497 () Bool)

(declare-fun res!35978 () Bool)

(declare-fun e!43649 () Bool)

(assert (=> b!66497 (=> (not res!35978) (not e!43649))))

(declare-fun lt!28634 () ListLongMap!1415)

(assert (=> b!66497 (= res!35978 (not (contains!716 lt!28634 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!66498 () Bool)

(declare-fun e!43648 () Bool)

(assert (=> b!66498 (= e!43648 (= lt!28634 (getCurrentListMapNoExtraKeys!51 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!66499 () Bool)

(assert (=> b!66499 (= e!43651 call!5492)))

(declare-fun b!66500 () Bool)

(assert (=> b!66500 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(assert (=> b!66500 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2070 (_values!2130 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun e!43653 () Bool)

(assert (=> b!66500 (= e!43653 (= (apply!72 lt!28634 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!13711 () Bool)

(assert (=> d!13711 e!43649))

(declare-fun res!35980 () Bool)

(assert (=> d!13711 (=> (not res!35980) (not e!43649))))

(assert (=> d!13711 (= res!35980 (not (contains!716 lt!28634 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13711 (= lt!28634 e!43650)))

(declare-fun c!9168 () Bool)

(assert (=> d!13711 (= c!9168 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(assert (=> d!13711 (validMask!0 (mask!6082 (v!2479 (underlying!252 thiss!992))))))

(assert (=> d!13711 (= (getCurrentListMapNoExtraKeys!51 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))) lt!28634)))

(declare-fun bm!5489 () Bool)

(assert (=> bm!5489 (= call!5492 (getCurrentListMapNoExtraKeys!51 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun b!66501 () Bool)

(declare-fun e!43652 () Bool)

(assert (=> b!66501 (= e!43652 e!43653)))

(assert (=> b!66501 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun res!35979 () Bool)

(assert (=> b!66501 (= res!35979 (contains!716 lt!28634 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66501 (=> (not res!35979) (not e!43653))))

(declare-fun b!66502 () Bool)

(declare-fun isEmpty!312 (ListLongMap!1415) Bool)

(assert (=> b!66502 (= e!43648 (isEmpty!312 lt!28634))))

(declare-fun b!66503 () Bool)

(assert (=> b!66503 (= e!43652 e!43648)))

(declare-fun c!9166 () Bool)

(assert (=> b!66503 (= c!9166 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!66504 () Bool)

(assert (=> b!66504 (= e!43650 (ListLongMap!1416 Nil!1487))))

(declare-fun b!66505 () Bool)

(assert (=> b!66505 (= e!43649 e!43652)))

(declare-fun c!9165 () Bool)

(assert (=> b!66505 (= c!9165 e!43647)))

(declare-fun res!35977 () Bool)

(assert (=> b!66505 (=> (not res!35977) (not e!43647))))

(assert (=> b!66505 (= res!35977 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(assert (= (and d!13711 c!9168) b!66504))

(assert (= (and d!13711 (not c!9168)) b!66494))

(assert (= (and b!66494 c!9167) b!66496))

(assert (= (and b!66494 (not c!9167)) b!66499))

(assert (= (or b!66496 b!66499) bm!5489))

(assert (= (and d!13711 res!35980) b!66497))

(assert (= (and b!66497 res!35978) b!66505))

(assert (= (and b!66505 res!35977) b!66495))

(assert (= (and b!66505 c!9165) b!66501))

(assert (= (and b!66505 (not c!9165)) b!66503))

(assert (= (and b!66501 res!35979) b!66500))

(assert (= (and b!66503 c!9166) b!66498))

(assert (= (and b!66503 (not c!9166)) b!66502))

(declare-fun b_lambda!2985 () Bool)

(assert (=> (not b_lambda!2985) (not b!66496)))

(assert (=> b!66496 t!4973))

(declare-fun b_and!4113 () Bool)

(assert (= b_and!4109 (and (=> t!4973 result!2581) b_and!4113)))

(assert (=> b!66496 t!4975))

(declare-fun b_and!4115 () Bool)

(assert (= b_and!4111 (and (=> t!4975 result!2585) b_and!4115)))

(declare-fun b_lambda!2987 () Bool)

(assert (=> (not b_lambda!2987) (not b!66500)))

(assert (=> b!66500 t!4973))

(declare-fun b_and!4117 () Bool)

(assert (= b_and!4113 (and (=> t!4973 result!2581) b_and!4117)))

(assert (=> b!66500 t!4975))

(declare-fun b_and!4119 () Bool)

(assert (= b_and!4115 (and (=> t!4975 result!2585) b_and!4119)))

(assert (=> b!66495 m!60843))

(assert (=> b!66495 m!60843))

(assert (=> b!66495 m!60851))

(declare-fun m!60893 () Bool)

(assert (=> b!66497 m!60893))

(assert (=> b!66501 m!60843))

(assert (=> b!66501 m!60843))

(declare-fun m!60895 () Bool)

(assert (=> b!66501 m!60895))

(assert (=> b!66500 m!60839))

(assert (=> b!66500 m!60843))

(assert (=> b!66500 m!60839))

(assert (=> b!66500 m!60723))

(assert (=> b!66500 m!60841))

(assert (=> b!66500 m!60723))

(assert (=> b!66500 m!60843))

(declare-fun m!60897 () Bool)

(assert (=> b!66500 m!60897))

(declare-fun m!60899 () Bool)

(assert (=> b!66502 m!60899))

(declare-fun m!60901 () Bool)

(assert (=> b!66498 m!60901))

(assert (=> b!66496 m!60839))

(declare-fun m!60903 () Bool)

(assert (=> b!66496 m!60903))

(declare-fun m!60905 () Bool)

(assert (=> b!66496 m!60905))

(assert (=> b!66496 m!60843))

(declare-fun m!60907 () Bool)

(assert (=> b!66496 m!60907))

(declare-fun m!60909 () Bool)

(assert (=> b!66496 m!60909))

(assert (=> b!66496 m!60839))

(assert (=> b!66496 m!60723))

(assert (=> b!66496 m!60841))

(assert (=> b!66496 m!60907))

(assert (=> b!66496 m!60723))

(declare-fun m!60911 () Bool)

(assert (=> d!13711 m!60911))

(assert (=> d!13711 m!60745))

(assert (=> b!66494 m!60843))

(assert (=> b!66494 m!60843))

(assert (=> b!66494 m!60851))

(assert (=> bm!5489 m!60901))

(assert (=> b!66320 d!13711))

(declare-fun d!13713 () Bool)

(declare-fun e!43656 () Bool)

(assert (=> d!13713 e!43656))

(declare-fun res!35986 () Bool)

(assert (=> d!13713 (=> (not res!35986) (not e!43656))))

(declare-fun lt!28644 () ListLongMap!1415)

(assert (=> d!13713 (= res!35986 (contains!716 lt!28644 (_1!1064 lt!28500)))))

(declare-fun lt!28646 () List!1490)

(assert (=> d!13713 (= lt!28644 (ListLongMap!1416 lt!28646))))

(declare-fun lt!28645 () Unit!1836)

(declare-fun lt!28643 () Unit!1836)

(assert (=> d!13713 (= lt!28645 lt!28643)))

(declare-datatypes ((Option!135 0))(
  ( (Some!134 (v!2483 V!2915)) (None!133) )
))
(declare-fun getValueByKey!129 (List!1490 (_ BitVec 64)) Option!135)

(assert (=> d!13713 (= (getValueByKey!129 lt!28646 (_1!1064 lt!28500)) (Some!134 (_2!1064 lt!28500)))))

(declare-fun lemmaContainsTupThenGetReturnValue!48 (List!1490 (_ BitVec 64) V!2915) Unit!1836)

(assert (=> d!13713 (= lt!28643 (lemmaContainsTupThenGetReturnValue!48 lt!28646 (_1!1064 lt!28500) (_2!1064 lt!28500)))))

(declare-fun insertStrictlySorted!50 (List!1490 (_ BitVec 64) V!2915) List!1490)

(assert (=> d!13713 (= lt!28646 (insertStrictlySorted!50 (toList!723 lt!28505) (_1!1064 lt!28500) (_2!1064 lt!28500)))))

(assert (=> d!13713 (= (+!87 lt!28505 lt!28500) lt!28644)))

(declare-fun b!66510 () Bool)

(declare-fun res!35985 () Bool)

(assert (=> b!66510 (=> (not res!35985) (not e!43656))))

(assert (=> b!66510 (= res!35985 (= (getValueByKey!129 (toList!723 lt!28644) (_1!1064 lt!28500)) (Some!134 (_2!1064 lt!28500))))))

(declare-fun b!66511 () Bool)

(declare-fun contains!718 (List!1490 tuple2!2108) Bool)

(assert (=> b!66511 (= e!43656 (contains!718 (toList!723 lt!28644) lt!28500))))

(assert (= (and d!13713 res!35986) b!66510))

(assert (= (and b!66510 res!35985) b!66511))

(declare-fun m!60913 () Bool)

(assert (=> d!13713 m!60913))

(declare-fun m!60915 () Bool)

(assert (=> d!13713 m!60915))

(declare-fun m!60917 () Bool)

(assert (=> d!13713 m!60917))

(declare-fun m!60919 () Bool)

(assert (=> d!13713 m!60919))

(declare-fun m!60921 () Bool)

(assert (=> b!66510 m!60921))

(declare-fun m!60923 () Bool)

(assert (=> b!66511 m!60923))

(assert (=> b!66320 d!13713))

(declare-fun d!13715 () Bool)

(declare-fun e!43657 () Bool)

(assert (=> d!13715 e!43657))

(declare-fun res!35988 () Bool)

(assert (=> d!13715 (=> (not res!35988) (not e!43657))))

(declare-fun lt!28648 () ListLongMap!1415)

(assert (=> d!13715 (= res!35988 (contains!716 lt!28648 (_1!1064 lt!28500)))))

(declare-fun lt!28650 () List!1490)

(assert (=> d!13715 (= lt!28648 (ListLongMap!1416 lt!28650))))

(declare-fun lt!28649 () Unit!1836)

(declare-fun lt!28647 () Unit!1836)

(assert (=> d!13715 (= lt!28649 lt!28647)))

(assert (=> d!13715 (= (getValueByKey!129 lt!28650 (_1!1064 lt!28500)) (Some!134 (_2!1064 lt!28500)))))

(assert (=> d!13715 (= lt!28647 (lemmaContainsTupThenGetReturnValue!48 lt!28650 (_1!1064 lt!28500) (_2!1064 lt!28500)))))

(assert (=> d!13715 (= lt!28650 (insertStrictlySorted!50 (toList!723 (+!87 lt!28505 lt!28503)) (_1!1064 lt!28500) (_2!1064 lt!28500)))))

(assert (=> d!13715 (= (+!87 (+!87 lt!28505 lt!28503) lt!28500) lt!28648)))

(declare-fun b!66512 () Bool)

(declare-fun res!35987 () Bool)

(assert (=> b!66512 (=> (not res!35987) (not e!43657))))

(assert (=> b!66512 (= res!35987 (= (getValueByKey!129 (toList!723 lt!28648) (_1!1064 lt!28500)) (Some!134 (_2!1064 lt!28500))))))

(declare-fun b!66513 () Bool)

(assert (=> b!66513 (= e!43657 (contains!718 (toList!723 lt!28648) lt!28500))))

(assert (= (and d!13715 res!35988) b!66512))

(assert (= (and b!66512 res!35987) b!66513))

(declare-fun m!60925 () Bool)

(assert (=> d!13715 m!60925))

(declare-fun m!60927 () Bool)

(assert (=> d!13715 m!60927))

(declare-fun m!60929 () Bool)

(assert (=> d!13715 m!60929))

(declare-fun m!60931 () Bool)

(assert (=> d!13715 m!60931))

(declare-fun m!60933 () Bool)

(assert (=> b!66512 m!60933))

(declare-fun m!60935 () Bool)

(assert (=> b!66513 m!60935))

(assert (=> b!66320 d!13715))

(declare-fun d!13717 () Bool)

(declare-fun e!43658 () Bool)

(assert (=> d!13717 e!43658))

(declare-fun res!35990 () Bool)

(assert (=> d!13717 (=> (not res!35990) (not e!43658))))

(declare-fun lt!28652 () ListLongMap!1415)

(assert (=> d!13717 (= res!35990 (contains!716 lt!28652 (_1!1064 lt!28503)))))

(declare-fun lt!28654 () List!1490)

(assert (=> d!13717 (= lt!28652 (ListLongMap!1416 lt!28654))))

(declare-fun lt!28653 () Unit!1836)

(declare-fun lt!28651 () Unit!1836)

(assert (=> d!13717 (= lt!28653 lt!28651)))

(assert (=> d!13717 (= (getValueByKey!129 lt!28654 (_1!1064 lt!28503)) (Some!134 (_2!1064 lt!28503)))))

(assert (=> d!13717 (= lt!28651 (lemmaContainsTupThenGetReturnValue!48 lt!28654 (_1!1064 lt!28503) (_2!1064 lt!28503)))))

(assert (=> d!13717 (= lt!28654 (insertStrictlySorted!50 (toList!723 (+!87 lt!28505 lt!28500)) (_1!1064 lt!28503) (_2!1064 lt!28503)))))

(assert (=> d!13717 (= (+!87 (+!87 lt!28505 lt!28500) lt!28503) lt!28652)))

(declare-fun b!66514 () Bool)

(declare-fun res!35989 () Bool)

(assert (=> b!66514 (=> (not res!35989) (not e!43658))))

(assert (=> b!66514 (= res!35989 (= (getValueByKey!129 (toList!723 lt!28652) (_1!1064 lt!28503)) (Some!134 (_2!1064 lt!28503))))))

(declare-fun b!66515 () Bool)

(assert (=> b!66515 (= e!43658 (contains!718 (toList!723 lt!28652) lt!28503))))

(assert (= (and d!13717 res!35990) b!66514))

(assert (= (and b!66514 res!35989) b!66515))

(declare-fun m!60937 () Bool)

(assert (=> d!13717 m!60937))

(declare-fun m!60939 () Bool)

(assert (=> d!13717 m!60939))

(declare-fun m!60941 () Bool)

(assert (=> d!13717 m!60941))

(declare-fun m!60943 () Bool)

(assert (=> d!13717 m!60943))

(declare-fun m!60945 () Bool)

(assert (=> b!66514 m!60945))

(declare-fun m!60947 () Bool)

(assert (=> b!66515 m!60947))

(assert (=> b!66320 d!13717))

(declare-fun d!13719 () Bool)

(assert (=> d!13719 (= (validMask!0 (mask!6082 (v!2479 (underlying!252 thiss!992)))) (and (or (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000001111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000011111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000001111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000011111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000001111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000011111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000111111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000000000001111111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000000000011111111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000000000111111111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000000001111111111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000000011111111111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000000111111111111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000001111111111111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000011111111111111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000111111111111111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000001111111111111111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000011111111111111111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000111111111111111111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000001111111111111111111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000011111111111111111111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000111111111111111111111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00001111111111111111111111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00011111111111111111111111111111) (= (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!66320 d!13719))

(declare-fun d!13721 () Bool)

(declare-fun e!43659 () Bool)

(assert (=> d!13721 e!43659))

(declare-fun res!35992 () Bool)

(assert (=> d!13721 (=> (not res!35992) (not e!43659))))

(declare-fun lt!28656 () ListLongMap!1415)

(assert (=> d!13721 (= res!35992 (contains!716 lt!28656 (_1!1064 lt!28503)))))

(declare-fun lt!28658 () List!1490)

(assert (=> d!13721 (= lt!28656 (ListLongMap!1416 lt!28658))))

(declare-fun lt!28657 () Unit!1836)

(declare-fun lt!28655 () Unit!1836)

(assert (=> d!13721 (= lt!28657 lt!28655)))

(assert (=> d!13721 (= (getValueByKey!129 lt!28658 (_1!1064 lt!28503)) (Some!134 (_2!1064 lt!28503)))))

(assert (=> d!13721 (= lt!28655 (lemmaContainsTupThenGetReturnValue!48 lt!28658 (_1!1064 lt!28503) (_2!1064 lt!28503)))))

(assert (=> d!13721 (= lt!28658 (insertStrictlySorted!50 (toList!723 lt!28505) (_1!1064 lt!28503) (_2!1064 lt!28503)))))

(assert (=> d!13721 (= (+!87 lt!28505 lt!28503) lt!28656)))

(declare-fun b!66516 () Bool)

(declare-fun res!35991 () Bool)

(assert (=> b!66516 (=> (not res!35991) (not e!43659))))

(assert (=> b!66516 (= res!35991 (= (getValueByKey!129 (toList!723 lt!28656) (_1!1064 lt!28503)) (Some!134 (_2!1064 lt!28503))))))

(declare-fun b!66517 () Bool)

(assert (=> b!66517 (= e!43659 (contains!718 (toList!723 lt!28656) lt!28503))))

(assert (= (and d!13721 res!35992) b!66516))

(assert (= (and b!66516 res!35991) b!66517))

(declare-fun m!60949 () Bool)

(assert (=> d!13721 m!60949))

(declare-fun m!60951 () Bool)

(assert (=> d!13721 m!60951))

(declare-fun m!60953 () Bool)

(assert (=> d!13721 m!60953))

(declare-fun m!60955 () Bool)

(assert (=> d!13721 m!60955))

(declare-fun m!60957 () Bool)

(assert (=> b!66516 m!60957))

(declare-fun m!60959 () Bool)

(assert (=> b!66517 m!60959))

(assert (=> b!66320 d!13721))

(declare-fun d!13723 () Bool)

(assert (=> d!13723 (= (+!87 (+!87 lt!28505 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (+!87 (+!87 lt!28505 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))

(declare-fun lt!28661 () Unit!1836)

(declare-fun choose!373 (ListLongMap!1415 (_ BitVec 64) V!2915 (_ BitVec 64) V!2915) Unit!1836)

(assert (=> d!13723 (= lt!28661 (choose!373 lt!28505 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))

(assert (=> d!13723 (not (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13723 (= (addCommutativeForDiffKeys!6 lt!28505 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) lt!28661)))

(declare-fun bs!2844 () Bool)

(assert (= bs!2844 d!13723))

(declare-fun m!60961 () Bool)

(assert (=> bs!2844 m!60961))

(assert (=> bs!2844 m!60719))

(declare-fun m!60963 () Bool)

(assert (=> bs!2844 m!60963))

(assert (=> bs!2844 m!60961))

(declare-fun m!60965 () Bool)

(assert (=> bs!2844 m!60965))

(declare-fun m!60967 () Bool)

(assert (=> bs!2844 m!60967))

(declare-fun m!60969 () Bool)

(assert (=> bs!2844 m!60969))

(assert (=> bs!2844 m!60967))

(assert (=> b!66320 d!13723))

(declare-fun d!13725 () Bool)

(assert (=> d!13725 (not (arrayContainsKey!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!28664 () Unit!1836)

(declare-fun choose!68 (array!3840 (_ BitVec 32) (_ BitVec 64) List!1491) Unit!1836)

(assert (=> d!13725 (= lt!28664 (choose!68 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488)))))

(assert (=> d!13725 (bvslt (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!13725 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488)) lt!28664)))

(declare-fun bs!2845 () Bool)

(assert (= bs!2845 d!13725))

(assert (=> bs!2845 m!60719))

(assert (=> bs!2845 m!60761))

(assert (=> bs!2845 m!60719))

(declare-fun m!60971 () Bool)

(assert (=> bs!2845 m!60971))

(assert (=> b!66329 d!13725))

(declare-fun d!13727 () Bool)

(assert (=> d!13727 (arrayNoDuplicates!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) from!355 Nil!1488)))

(declare-fun lt!28667 () Unit!1836)

(declare-fun choose!39 (array!3840 (_ BitVec 32) (_ BitVec 32)) Unit!1836)

(assert (=> d!13727 (= lt!28667 (choose!39 (_keys!3787 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!13727 (bvslt (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!13727 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000000 from!355) lt!28667)))

(declare-fun bs!2846 () Bool)

(assert (= bs!2846 d!13727))

(assert (=> bs!2846 m!60757))

(declare-fun m!60973 () Bool)

(assert (=> bs!2846 m!60973))

(assert (=> b!66329 d!13727))

(declare-fun d!13729 () Bool)

(declare-fun res!35997 () Bool)

(declare-fun e!43664 () Bool)

(assert (=> d!13729 (=> res!35997 e!43664)))

(assert (=> d!13729 (= res!35997 (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> d!13729 (= (arrayContainsKey!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!43664)))

(declare-fun b!66522 () Bool)

(declare-fun e!43665 () Bool)

(assert (=> b!66522 (= e!43664 e!43665)))

(declare-fun res!35998 () Bool)

(assert (=> b!66522 (=> (not res!35998) (not e!43665))))

(assert (=> b!66522 (= res!35998 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!66523 () Bool)

(assert (=> b!66523 (= e!43665 (arrayContainsKey!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!13729 (not res!35997)) b!66522))

(assert (= (and b!66522 res!35998) b!66523))

(assert (=> d!13729 m!60843))

(assert (=> b!66523 m!60719))

(declare-fun m!60975 () Bool)

(assert (=> b!66523 m!60975))

(assert (=> b!66329 d!13729))

(declare-fun d!13731 () Bool)

(declare-fun e!43668 () Bool)

(assert (=> d!13731 e!43668))

(declare-fun c!9171 () Bool)

(assert (=> d!13731 (= c!9171 (and (not (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!28670 () Unit!1836)

(declare-fun choose!374 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 64) (_ BitVec 32) Int) Unit!1836)

(assert (=> d!13731 (= lt!28670 (choose!374 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))))))

(assert (=> d!13731 (validMask!0 (mask!6082 (v!2479 (underlying!252 thiss!992))))))

(assert (=> d!13731 (= (lemmaListMapContainsThenArrayContainsFrom!46 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))) lt!28670)))

(declare-fun b!66528 () Bool)

(assert (=> b!66528 (= e!43668 (arrayContainsKey!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!66529 () Bool)

(assert (=> b!66529 (= e!43668 (ite (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!13731 c!9171) b!66528))

(assert (= (and d!13731 (not c!9171)) b!66529))

(assert (=> d!13731 m!60719))

(declare-fun m!60977 () Bool)

(assert (=> d!13731 m!60977))

(assert (=> d!13731 m!60745))

(assert (=> b!66528 m!60719))

(assert (=> b!66528 m!60761))

(assert (=> b!66329 d!13731))

(declare-fun b!66540 () Bool)

(declare-fun e!43678 () Bool)

(declare-fun call!5495 () Bool)

(assert (=> b!66540 (= e!43678 call!5495)))

(declare-fun b!66541 () Bool)

(declare-fun e!43679 () Bool)

(assert (=> b!66541 (= e!43679 e!43678)))

(declare-fun c!9174 () Bool)

(assert (=> b!66541 (= c!9174 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun b!66543 () Bool)

(declare-fun e!43677 () Bool)

(assert (=> b!66543 (= e!43677 e!43679)))

(declare-fun res!36005 () Bool)

(assert (=> b!66543 (=> (not res!36005) (not e!43679))))

(declare-fun e!43680 () Bool)

(assert (=> b!66543 (= res!36005 (not e!43680))))

(declare-fun res!36007 () Bool)

(assert (=> b!66543 (=> (not res!36007) (not e!43680))))

(assert (=> b!66543 (= res!36007 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun bm!5492 () Bool)

(assert (=> bm!5492 (= call!5495 (arrayNoDuplicates!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!9174 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488) Nil!1488)))))

(declare-fun b!66544 () Bool)

(declare-fun contains!719 (List!1491 (_ BitVec 64)) Bool)

(assert (=> b!66544 (= e!43680 (contains!719 Nil!1488 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun b!66542 () Bool)

(assert (=> b!66542 (= e!43678 call!5495)))

(declare-fun d!13733 () Bool)

(declare-fun res!36006 () Bool)

(assert (=> d!13733 (=> res!36006 e!43677)))

(assert (=> d!13733 (= res!36006 (bvsge from!355 (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(assert (=> d!13733 (= (arrayNoDuplicates!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) from!355 Nil!1488) e!43677)))

(assert (= (and d!13733 (not res!36006)) b!66543))

(assert (= (and b!66543 res!36007) b!66544))

(assert (= (and b!66543 res!36005) b!66541))

(assert (= (and b!66541 c!9174) b!66542))

(assert (= (and b!66541 (not c!9174)) b!66540))

(assert (= (or b!66542 b!66540) bm!5492))

(assert (=> b!66541 m!60719))

(assert (=> b!66541 m!60719))

(declare-fun m!60979 () Bool)

(assert (=> b!66541 m!60979))

(assert (=> b!66543 m!60719))

(assert (=> b!66543 m!60719))

(assert (=> b!66543 m!60979))

(assert (=> bm!5492 m!60719))

(declare-fun m!60981 () Bool)

(assert (=> bm!5492 m!60981))

(assert (=> b!66544 m!60719))

(assert (=> b!66544 m!60719))

(declare-fun m!60983 () Bool)

(assert (=> b!66544 m!60983))

(assert (=> b!66329 d!13733))

(declare-fun d!13735 () Bool)

(declare-fun e!43686 () Bool)

(assert (=> d!13735 e!43686))

(declare-fun res!36010 () Bool)

(assert (=> d!13735 (=> res!36010 e!43686)))

(declare-fun lt!28682 () Bool)

(assert (=> d!13735 (= res!36010 (not lt!28682))))

(declare-fun lt!28679 () Bool)

(assert (=> d!13735 (= lt!28682 lt!28679)))

(declare-fun lt!28680 () Unit!1836)

(declare-fun e!43685 () Unit!1836)

(assert (=> d!13735 (= lt!28680 e!43685)))

(declare-fun c!9177 () Bool)

(assert (=> d!13735 (= c!9177 lt!28679)))

(declare-fun containsKey!133 (List!1490 (_ BitVec 64)) Bool)

(assert (=> d!13735 (= lt!28679 (containsKey!133 (toList!723 lt!28501) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> d!13735 (= (contains!716 lt!28501 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) lt!28682)))

(declare-fun b!66551 () Bool)

(declare-fun lt!28681 () Unit!1836)

(assert (=> b!66551 (= e!43685 lt!28681)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!82 (List!1490 (_ BitVec 64)) Unit!1836)

(assert (=> b!66551 (= lt!28681 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28501) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun isDefined!83 (Option!135) Bool)

(assert (=> b!66551 (isDefined!83 (getValueByKey!129 (toList!723 lt!28501) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun b!66552 () Bool)

(declare-fun Unit!1844 () Unit!1836)

(assert (=> b!66552 (= e!43685 Unit!1844)))

(declare-fun b!66553 () Bool)

(assert (=> b!66553 (= e!43686 (isDefined!83 (getValueByKey!129 (toList!723 lt!28501) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))))

(assert (= (and d!13735 c!9177) b!66551))

(assert (= (and d!13735 (not c!9177)) b!66552))

(assert (= (and d!13735 (not res!36010)) b!66553))

(assert (=> d!13735 m!60719))

(declare-fun m!60985 () Bool)

(assert (=> d!13735 m!60985))

(assert (=> b!66551 m!60719))

(declare-fun m!60987 () Bool)

(assert (=> b!66551 m!60987))

(assert (=> b!66551 m!60719))

(declare-fun m!60989 () Bool)

(assert (=> b!66551 m!60989))

(assert (=> b!66551 m!60989))

(declare-fun m!60991 () Bool)

(assert (=> b!66551 m!60991))

(assert (=> b!66553 m!60719))

(assert (=> b!66553 m!60989))

(assert (=> b!66553 m!60989))

(assert (=> b!66553 m!60991))

(assert (=> b!66324 d!13735))

(declare-fun bm!5541 () Bool)

(declare-fun call!5565 () Unit!1836)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!21 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 64) Int) Unit!1836)

(assert (=> bm!5541 (= call!5565 (lemmaInListMapThenSeekEntryOrOpenFindsIt!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)))))

(declare-fun b!66634 () Bool)

(declare-fun e!43732 () tuple2!2110)

(declare-fun e!43734 () tuple2!2110)

(assert (=> b!66634 (= e!43732 e!43734)))

(declare-fun c!9215 () Bool)

(declare-datatypes ((SeekEntryResult!243 0))(
  ( (MissingZero!243 (index!3100 (_ BitVec 32))) (Found!243 (index!3101 (_ BitVec 32))) (Intermediate!243 (undefined!1055 Bool) (index!3102 (_ BitVec 32)) (x!10713 (_ BitVec 32))) (Undefined!243) (MissingVacant!243 (index!3103 (_ BitVec 32))) )
))
(declare-fun lt!28760 () SeekEntryResult!243)

(assert (=> b!66634 (= c!9215 ((_ is MissingZero!243) lt!28760))))

(declare-fun bm!5542 () Bool)

(declare-fun call!5556 () Bool)

(declare-fun call!5545 () Bool)

(assert (=> bm!5542 (= call!5556 call!5545)))

(declare-fun b!66636 () Bool)

(declare-fun e!43739 () Bool)

(declare-fun call!5557 () ListLongMap!1415)

(declare-fun call!5546 () ListLongMap!1415)

(assert (=> b!66636 (= e!43739 (= call!5557 call!5546))))

(declare-fun b!66637 () Bool)

(declare-fun e!43731 () Bool)

(declare-fun e!43744 () Bool)

(assert (=> b!66637 (= e!43731 e!43744)))

(declare-fun res!36047 () Bool)

(declare-fun call!5560 () Bool)

(assert (=> b!66637 (= res!36047 call!5560)))

(assert (=> b!66637 (=> (not res!36047) (not e!43744))))

(declare-fun b!66638 () Bool)

(declare-fun res!36046 () Bool)

(declare-fun e!43733 () Bool)

(assert (=> b!66638 (=> (not res!36046) (not e!43733))))

(declare-fun call!5544 () Bool)

(assert (=> b!66638 (= res!36046 call!5544)))

(declare-fun e!43729 () Bool)

(assert (=> b!66638 (= e!43729 e!43733)))

(declare-fun b!66639 () Bool)

(declare-fun e!43741 () Bool)

(declare-fun call!5549 () Bool)

(assert (=> b!66639 (= e!43741 (not call!5549))))

(declare-fun c!9206 () Bool)

(declare-fun bm!5543 () Bool)

(declare-fun call!5554 () tuple2!2110)

(declare-fun updateHelperNewKey!21 (LongMapFixedSize!672 (_ BitVec 64) V!2915 (_ BitVec 32)) tuple2!2110)

(assert (=> bm!5543 (= call!5554 (updateHelperNewKey!21 newMap!16 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502 (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760))))))

(declare-fun b!66640 () Bool)

(declare-fun res!36039 () Bool)

(declare-fun e!43747 () Bool)

(assert (=> b!66640 (=> (not res!36039) (not e!43747))))

(declare-fun lt!28739 () SeekEntryResult!243)

(assert (=> b!66640 (= res!36039 (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3100 lt!28739)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun c!9210 () Bool)

(declare-fun c!9213 () Bool)

(declare-fun lt!28756 () SeekEntryResult!243)

(declare-fun bm!5544 () Bool)

(declare-fun c!9208 () Bool)

(declare-fun lt!28751 () SeekEntryResult!243)

(declare-fun c!9209 () Bool)

(declare-fun lt!28747 () SeekEntryResult!243)

(declare-fun c!9214 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!5544 (= call!5545 (inRange!0 (ite c!9214 (ite c!9210 (index!3101 lt!28751) (ite c!9209 (index!3100 lt!28747) (index!3103 lt!28747))) (ite c!9208 (index!3101 lt!28756) (ite c!9213 (index!3100 lt!28739) (index!3103 lt!28739)))) (mask!6082 newMap!16)))))

(declare-fun bm!5545 () Bool)

(assert (=> bm!5545 (= call!5544 call!5556)))

(declare-fun bm!5546 () Bool)

(declare-fun call!5564 () Bool)

(assert (=> bm!5546 (= call!5564 call!5545)))

(declare-fun b!66641 () Bool)

(declare-fun c!9207 () Bool)

(assert (=> b!66641 (= c!9207 ((_ is MissingVacant!243) lt!28747))))

(declare-fun e!43749 () Bool)

(assert (=> b!66641 (= e!43729 e!43749)))

(declare-fun b!66642 () Bool)

(declare-fun e!43730 () ListLongMap!1415)

(assert (=> b!66642 (= e!43730 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun e!43736 () Bool)

(declare-fun b!66635 () Bool)

(assert (=> b!66635 (= e!43736 (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28756)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun d!13737 () Bool)

(declare-fun e!43738 () Bool)

(assert (=> d!13737 e!43738))

(declare-fun res!36041 () Bool)

(assert (=> d!13737 (=> (not res!36041) (not e!43738))))

(declare-fun lt!28753 () tuple2!2110)

(assert (=> d!13737 (= res!36041 (valid!278 (_2!1065 lt!28753)))))

(declare-fun e!43737 () tuple2!2110)

(assert (=> d!13737 (= lt!28753 e!43737)))

(declare-fun c!9205 () Bool)

(assert (=> d!13737 (= c!9205 (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvneg (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))))

(assert (=> d!13737 (valid!278 newMap!16)))

(assert (=> d!13737 (= (update!96 newMap!16 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502) lt!28753)))

(declare-fun b!66643 () Bool)

(declare-fun lt!28743 () tuple2!2110)

(assert (=> b!66643 (= lt!28743 call!5554)))

(assert (=> b!66643 (= e!43734 (tuple2!2111 (_1!1065 lt!28743) (_2!1065 lt!28743)))))

(declare-fun call!5566 () Unit!1836)

(declare-fun bm!5547 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!21 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 64) Int) Unit!1836)

(assert (=> bm!5547 (= call!5566 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)))))

(declare-fun bm!5548 () Bool)

(declare-fun call!5561 () SeekEntryResult!243)

(declare-fun call!5559 () SeekEntryResult!243)

(assert (=> bm!5548 (= call!5561 call!5559)))

(declare-fun b!66644 () Bool)

(declare-fun e!43742 () Unit!1836)

(declare-fun Unit!1845 () Unit!1836)

(assert (=> b!66644 (= e!43742 Unit!1845)))

(declare-fun lt!28738 () Unit!1836)

(assert (=> b!66644 (= lt!28738 call!5566)))

(declare-fun call!5551 () SeekEntryResult!243)

(assert (=> b!66644 (= lt!28739 call!5551)))

(assert (=> b!66644 (= c!9213 ((_ is MissingZero!243) lt!28739))))

(declare-fun e!43740 () Bool)

(assert (=> b!66644 e!43740))

(declare-fun lt!28754 () Unit!1836)

(assert (=> b!66644 (= lt!28754 lt!28738)))

(assert (=> b!66644 false))

(declare-fun bm!5549 () Bool)

(assert (=> bm!5549 (= call!5551 call!5559)))

(declare-fun b!66645 () Bool)

(assert (=> b!66645 (= e!43749 e!43741)))

(declare-fun res!36044 () Bool)

(assert (=> b!66645 (= res!36044 call!5544)))

(assert (=> b!66645 (=> (not res!36044) (not e!43741))))

(declare-fun c!9204 () Bool)

(declare-fun call!5555 () ListLongMap!1415)

(declare-fun bm!5550 () Bool)

(assert (=> bm!5550 (= call!5555 (+!87 e!43730 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun c!9212 () Bool)

(assert (=> bm!5550 (= c!9212 c!9205)))

(declare-fun b!66646 () Bool)

(declare-fun lt!28744 () Unit!1836)

(assert (=> b!66646 (= e!43742 lt!28744)))

(assert (=> b!66646 (= lt!28744 call!5565)))

(assert (=> b!66646 (= lt!28756 call!5551)))

(declare-fun res!36043 () Bool)

(assert (=> b!66646 (= res!36043 ((_ is Found!243) lt!28756))))

(assert (=> b!66646 (=> (not res!36043) (not e!43736))))

(assert (=> b!66646 e!43736))

(declare-fun b!66647 () Bool)

(assert (=> b!66647 (= e!43731 ((_ is Undefined!243) lt!28739))))

(declare-fun call!5567 () ListLongMap!1415)

(declare-fun bm!5551 () Bool)

(declare-fun call!5553 () Bool)

(assert (=> bm!5551 (= call!5553 (contains!716 call!5567 (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760)))))))

(declare-fun b!66648 () Bool)

(declare-fun e!43743 () Unit!1836)

(declare-fun Unit!1846 () Unit!1836)

(assert (=> b!66648 (= e!43743 Unit!1846)))

(declare-fun lt!28759 () Unit!1836)

(assert (=> b!66648 (= lt!28759 call!5565)))

(assert (=> b!66648 (= lt!28751 call!5561)))

(declare-fun res!36051 () Bool)

(assert (=> b!66648 (= res!36051 ((_ is Found!243) lt!28751))))

(declare-fun e!43745 () Bool)

(assert (=> b!66648 (=> (not res!36051) (not e!43745))))

(assert (=> b!66648 e!43745))

(declare-fun lt!28746 () Unit!1836)

(assert (=> b!66648 (= lt!28746 lt!28759)))

(assert (=> b!66648 false))

(declare-fun b!66649 () Bool)

(assert (=> b!66649 (= e!43745 (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28751)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun bm!5552 () Bool)

(declare-fun call!5558 () Bool)

(assert (=> bm!5552 (= call!5549 call!5558)))

(declare-fun lt!28741 () array!3842)

(declare-fun bm!5553 () Bool)

(declare-fun lt!28742 () (_ BitVec 32))

(declare-fun call!5552 () ListLongMap!1415)

(assert (=> bm!5553 (= call!5552 (getCurrentListMap!419 (_keys!3787 newMap!16) (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741) (mask!6082 newMap!16) (ite (and c!9205 c!9204) lt!28742 (extraKeys!2018 newMap!16)) (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun b!66650 () Bool)

(declare-fun lt!28750 () Unit!1836)

(declare-fun lt!28762 () Unit!1836)

(assert (=> b!66650 (= lt!28750 lt!28762)))

(declare-fun call!5548 () ListLongMap!1415)

(declare-fun call!5550 () ListLongMap!1415)

(assert (=> b!66650 (= call!5548 call!5550)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!21 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 V!2915 Int) Unit!1836)

(assert (=> b!66650 (= lt!28762 (lemmaChangeZeroKeyThenAddPairToListMap!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) lt!28742 (zeroValue!2055 newMap!16) lt!28502 (minValue!2055 newMap!16) (defaultEntry!2147 newMap!16)))))

(assert (=> b!66650 (= lt!28742 (bvor (extraKeys!2018 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!43735 () tuple2!2110)

(assert (=> b!66650 (= e!43735 (tuple2!2111 true (LongMapFixedSize!673 (defaultEntry!2147 newMap!16) (mask!6082 newMap!16) (bvor (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) lt!28502 (minValue!2055 newMap!16) (_size!385 newMap!16) (_keys!3787 newMap!16) (_values!2130 newMap!16) (_vacant!385 newMap!16))))))

(declare-fun b!66651 () Bool)

(declare-fun res!36049 () Bool)

(assert (=> b!66651 (= res!36049 (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3103 lt!28747)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66651 (=> (not res!36049) (not e!43741))))

(declare-fun b!66652 () Bool)

(declare-fun call!5562 () Bool)

(assert (=> b!66652 (= e!43744 (not call!5562))))

(declare-fun b!66653 () Bool)

(assert (=> b!66653 (= e!43738 e!43739)))

(declare-fun c!9216 () Bool)

(assert (=> b!66653 (= c!9216 (_1!1065 lt!28753))))

(declare-fun b!66654 () Bool)

(declare-fun res!36050 () Bool)

(assert (=> b!66654 (=> (not res!36050) (not e!43733))))

(assert (=> b!66654 (= res!36050 (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3100 lt!28747)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66655 () Bool)

(declare-fun lt!28745 () Unit!1836)

(declare-fun lt!28757 () Unit!1836)

(assert (=> b!66655 (= lt!28745 lt!28757)))

(declare-fun call!5547 () ListLongMap!1415)

(assert (=> b!66655 (= call!5548 call!5547)))

(declare-fun lt!28755 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!21 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 V!2915 Int) Unit!1836)

(assert (=> b!66655 (= lt!28757 (lemmaChangeLongMinValueKeyThenAddPairToListMap!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) lt!28755 (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) lt!28502 (defaultEntry!2147 newMap!16)))))

(assert (=> b!66655 (= lt!28755 (bvor (extraKeys!2018 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!66655 (= e!43735 (tuple2!2111 true (LongMapFixedSize!673 (defaultEntry!2147 newMap!16) (mask!6082 newMap!16) (bvor (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) (zeroValue!2055 newMap!16) lt!28502 (_size!385 newMap!16) (_keys!3787 newMap!16) (_values!2130 newMap!16) (_vacant!385 newMap!16))))))

(declare-fun bm!5554 () Bool)

(assert (=> bm!5554 (= call!5567 call!5552)))

(declare-fun bm!5555 () Bool)

(assert (=> bm!5555 (= call!5557 (map!1143 (_2!1065 lt!28753)))))

(declare-fun b!66656 () Bool)

(declare-fun lt!28740 () Unit!1836)

(declare-fun lt!28763 () Unit!1836)

(assert (=> b!66656 (= lt!28740 lt!28763)))

(assert (=> b!66656 call!5553))

(declare-fun lemmaValidKeyInArrayIsInListMap!79 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 32) Int) Unit!1836)

(assert (=> b!66656 (= lt!28763 (lemmaValidKeyInArrayIsInListMap!79 (_keys!3787 newMap!16) lt!28741 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (index!3101 lt!28760) (defaultEntry!2147 newMap!16)))))

(assert (=> b!66656 (= lt!28741 (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))))))

(declare-fun lt!28752 () Unit!1836)

(declare-fun lt!28737 () Unit!1836)

(assert (=> b!66656 (= lt!28752 lt!28737)))

(declare-fun call!5563 () ListLongMap!1415)

(assert (=> b!66656 (= call!5555 call!5563)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!21 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 32) (_ BitVec 64) V!2915 Int) Unit!1836)

(assert (=> b!66656 (= lt!28737 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (index!3101 lt!28760) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28761 () Unit!1836)

(assert (=> b!66656 (= lt!28761 e!43742)))

(assert (=> b!66656 (= c!9208 (contains!716 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> b!66656 (= e!43734 (tuple2!2111 true (LongMapFixedSize!673 (defaultEntry!2147 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (_size!385 newMap!16) (_keys!3787 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))) (_vacant!385 newMap!16))))))

(declare-fun bm!5556 () Bool)

(assert (=> bm!5556 (= call!5548 call!5555)))

(declare-fun bm!5557 () Bool)

(assert (=> bm!5557 (= call!5546 (map!1143 newMap!16))))

(declare-fun b!66657 () Bool)

(declare-fun res!36045 () Bool)

(assert (=> b!66657 (= res!36045 call!5564)))

(assert (=> b!66657 (=> (not res!36045) (not e!43736))))

(declare-fun b!66658 () Bool)

(declare-fun res!36048 () Bool)

(assert (=> b!66658 (= res!36048 call!5556)))

(assert (=> b!66658 (=> (not res!36048) (not e!43745))))

(declare-fun b!66659 () Bool)

(declare-fun e!43746 () Bool)

(assert (=> b!66659 (= e!43746 (= call!5557 (+!87 call!5546 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!66660 () Bool)

(assert (=> b!66660 (= e!43733 (not call!5549))))

(declare-fun b!66661 () Bool)

(assert (=> b!66661 (= e!43749 ((_ is Undefined!243) lt!28747))))

(declare-fun bm!5558 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3840 (_ BitVec 32)) SeekEntryResult!243)

(assert (=> bm!5558 (= call!5559 (seekEntryOrOpen!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun b!66662 () Bool)

(declare-fun e!43748 () tuple2!2110)

(assert (=> b!66662 (= e!43737 e!43748)))

(assert (=> b!66662 (= lt!28760 (seekEntryOrOpen!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(assert (=> b!66662 (= c!9214 ((_ is Undefined!243) lt!28760))))

(declare-fun b!66663 () Bool)

(assert (=> b!66663 (= e!43747 (not call!5562))))

(declare-fun b!66664 () Bool)

(declare-fun res!36040 () Bool)

(assert (=> b!66664 (= res!36040 (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3103 lt!28739)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66664 (=> (not res!36040) (not e!43744))))

(declare-fun b!66665 () Bool)

(declare-fun lt!28749 () tuple2!2110)

(assert (=> b!66665 (= e!43732 (tuple2!2111 (_1!1065 lt!28749) (_2!1065 lt!28749)))))

(assert (=> b!66665 (= lt!28749 call!5554)))

(declare-fun b!66666 () Bool)

(declare-fun c!9211 () Bool)

(assert (=> b!66666 (= c!9211 ((_ is MissingVacant!243) lt!28739))))

(assert (=> b!66666 (= e!43740 e!43731)))

(declare-fun bm!5559 () Bool)

(assert (=> bm!5559 (= call!5547 call!5563)))

(declare-fun b!66667 () Bool)

(assert (=> b!66667 (= e!43739 e!43746)))

(declare-fun res!36042 () Bool)

(assert (=> b!66667 (= res!36042 (contains!716 call!5557 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> b!66667 (=> (not res!36042) (not e!43746))))

(declare-fun b!66668 () Bool)

(declare-fun lt!28758 () Unit!1836)

(assert (=> b!66668 (= e!43743 lt!28758)))

(assert (=> b!66668 (= lt!28758 call!5566)))

(assert (=> b!66668 (= lt!28747 call!5561)))

(assert (=> b!66668 (= c!9209 ((_ is MissingZero!243) lt!28747))))

(assert (=> b!66668 e!43729))

(declare-fun bm!5560 () Bool)

(assert (=> bm!5560 (= call!5558 (arrayContainsKey!0 (_keys!3787 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!66669 () Bool)

(declare-fun lt!28748 () Unit!1836)

(assert (=> b!66669 (= lt!28748 e!43743)))

(assert (=> b!66669 (= c!9210 call!5553)))

(assert (=> b!66669 (= e!43748 (tuple2!2111 false newMap!16))))

(declare-fun b!66670 () Bool)

(assert (=> b!66670 (= e!43730 (ite c!9204 call!5547 call!5550))))

(declare-fun b!66671 () Bool)

(assert (=> b!66671 (= e!43737 e!43735)))

(assert (=> b!66671 (= c!9204 (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5561 () Bool)

(assert (=> bm!5561 (= call!5563 (getCurrentListMap!419 (_keys!3787 newMap!16) (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite c!9205 (ite c!9204 (extraKeys!2018 newMap!16) lt!28755) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun bm!5562 () Bool)

(assert (=> bm!5562 (= call!5562 call!5558)))

(declare-fun bm!5563 () Bool)

(assert (=> bm!5563 (= call!5550 call!5552)))

(declare-fun b!66672 () Bool)

(assert (=> b!66672 (= c!9206 ((_ is MissingVacant!243) lt!28760))))

(assert (=> b!66672 (= e!43748 e!43732)))

(declare-fun b!66673 () Bool)

(declare-fun res!36052 () Bool)

(assert (=> b!66673 (=> (not res!36052) (not e!43747))))

(assert (=> b!66673 (= res!36052 call!5560)))

(assert (=> b!66673 (= e!43740 e!43747)))

(declare-fun bm!5564 () Bool)

(assert (=> bm!5564 (= call!5560 call!5564)))

(assert (= (and d!13737 c!9205) b!66671))

(assert (= (and d!13737 (not c!9205)) b!66662))

(assert (= (and b!66671 c!9204) b!66650))

(assert (= (and b!66671 (not c!9204)) b!66655))

(assert (= (or b!66650 b!66655) bm!5563))

(assert (= (or b!66650 b!66655) bm!5559))

(assert (= (or b!66650 b!66655) bm!5556))

(assert (= (and b!66662 c!9214) b!66669))

(assert (= (and b!66662 (not c!9214)) b!66672))

(assert (= (and b!66669 c!9210) b!66648))

(assert (= (and b!66669 (not c!9210)) b!66668))

(assert (= (and b!66648 res!36051) b!66658))

(assert (= (and b!66658 res!36048) b!66649))

(assert (= (and b!66668 c!9209) b!66638))

(assert (= (and b!66668 (not c!9209)) b!66641))

(assert (= (and b!66638 res!36046) b!66654))

(assert (= (and b!66654 res!36050) b!66660))

(assert (= (and b!66641 c!9207) b!66645))

(assert (= (and b!66641 (not c!9207)) b!66661))

(assert (= (and b!66645 res!36044) b!66651))

(assert (= (and b!66651 res!36049) b!66639))

(assert (= (or b!66638 b!66645) bm!5545))

(assert (= (or b!66660 b!66639) bm!5552))

(assert (= (or b!66658 bm!5545) bm!5542))

(assert (= (or b!66648 b!66668) bm!5548))

(assert (= (and b!66672 c!9206) b!66665))

(assert (= (and b!66672 (not c!9206)) b!66634))

(assert (= (and b!66634 c!9215) b!66643))

(assert (= (and b!66634 (not c!9215)) b!66656))

(assert (= (and b!66656 c!9208) b!66646))

(assert (= (and b!66656 (not c!9208)) b!66644))

(assert (= (and b!66646 res!36043) b!66657))

(assert (= (and b!66657 res!36045) b!66635))

(assert (= (and b!66644 c!9213) b!66673))

(assert (= (and b!66644 (not c!9213)) b!66666))

(assert (= (and b!66673 res!36052) b!66640))

(assert (= (and b!66640 res!36039) b!66663))

(assert (= (and b!66666 c!9211) b!66637))

(assert (= (and b!66666 (not c!9211)) b!66647))

(assert (= (and b!66637 res!36047) b!66664))

(assert (= (and b!66664 res!36040) b!66652))

(assert (= (or b!66673 b!66637) bm!5564))

(assert (= (or b!66663 b!66652) bm!5562))

(assert (= (or b!66657 bm!5564) bm!5546))

(assert (= (or b!66646 b!66644) bm!5549))

(assert (= (or b!66665 b!66643) bm!5543))

(assert (= (or bm!5542 bm!5546) bm!5544))

(assert (= (or b!66668 b!66644) bm!5547))

(assert (= (or bm!5548 bm!5549) bm!5558))

(assert (= (or b!66648 b!66646) bm!5541))

(assert (= (or bm!5552 bm!5562) bm!5560))

(assert (= (or b!66669 b!66656) bm!5554))

(assert (= (or b!66669 b!66656) bm!5551))

(assert (= (or bm!5563 bm!5554) bm!5553))

(assert (= (or bm!5559 b!66656) bm!5561))

(assert (= (or bm!5556 b!66656) bm!5550))

(assert (= (and bm!5550 c!9212) b!66670))

(assert (= (and bm!5550 (not c!9212)) b!66642))

(assert (= (and d!13737 res!36041) b!66653))

(assert (= (and b!66653 c!9216) b!66667))

(assert (= (and b!66653 (not c!9216)) b!66636))

(assert (= (and b!66667 res!36042) b!66659))

(assert (= (or b!66667 b!66659 b!66636) bm!5555))

(assert (= (or b!66659 b!66636) bm!5557))

(assert (=> b!66662 m!60719))

(declare-fun m!60993 () Bool)

(assert (=> b!66662 m!60993))

(declare-fun m!60995 () Bool)

(assert (=> b!66659 m!60995))

(assert (=> bm!5557 m!60729))

(assert (=> bm!5541 m!60719))

(declare-fun m!60997 () Bool)

(assert (=> bm!5541 m!60997))

(assert (=> bm!5543 m!60719))

(declare-fun m!60999 () Bool)

(assert (=> bm!5543 m!60999))

(assert (=> b!66642 m!60835))

(declare-fun m!61001 () Bool)

(assert (=> b!66655 m!61001))

(declare-fun m!61003 () Bool)

(assert (=> b!66654 m!61003))

(declare-fun m!61005 () Bool)

(assert (=> b!66650 m!61005))

(declare-fun m!61007 () Bool)

(assert (=> b!66664 m!61007))

(declare-fun m!61009 () Bool)

(assert (=> bm!5551 m!61009))

(declare-fun m!61011 () Bool)

(assert (=> bm!5551 m!61011))

(declare-fun m!61013 () Bool)

(assert (=> b!66635 m!61013))

(declare-fun m!61015 () Bool)

(assert (=> bm!5555 m!61015))

(assert (=> b!66667 m!60719))

(declare-fun m!61017 () Bool)

(assert (=> b!66667 m!61017))

(declare-fun m!61019 () Bool)

(assert (=> b!66649 m!61019))

(declare-fun m!61021 () Bool)

(assert (=> b!66651 m!61021))

(declare-fun m!61023 () Bool)

(assert (=> b!66640 m!61023))

(declare-fun m!61025 () Bool)

(assert (=> d!13737 m!61025))

(assert (=> d!13737 m!60727))

(declare-fun m!61027 () Bool)

(assert (=> bm!5553 m!61027))

(assert (=> bm!5558 m!60719))

(assert (=> bm!5558 m!60993))

(assert (=> b!66656 m!60835))

(assert (=> b!66656 m!60719))

(declare-fun m!61029 () Bool)

(assert (=> b!66656 m!61029))

(assert (=> b!66656 m!60719))

(declare-fun m!61031 () Bool)

(assert (=> b!66656 m!61031))

(declare-fun m!61033 () Bool)

(assert (=> b!66656 m!61033))

(declare-fun m!61035 () Bool)

(assert (=> b!66656 m!61035))

(assert (=> b!66656 m!60835))

(assert (=> bm!5561 m!61035))

(declare-fun m!61037 () Bool)

(assert (=> bm!5561 m!61037))

(assert (=> bm!5560 m!60719))

(declare-fun m!61039 () Bool)

(assert (=> bm!5560 m!61039))

(assert (=> bm!5547 m!60719))

(declare-fun m!61041 () Bool)

(assert (=> bm!5547 m!61041))

(declare-fun m!61043 () Bool)

(assert (=> bm!5544 m!61043))

(declare-fun m!61045 () Bool)

(assert (=> bm!5550 m!61045))

(assert (=> b!66324 d!13737))

(declare-fun d!13739 () Bool)

(declare-fun res!36059 () Bool)

(declare-fun e!43752 () Bool)

(assert (=> d!13739 (=> (not res!36059) (not e!43752))))

(declare-fun simpleValid!47 (LongMapFixedSize!672) Bool)

(assert (=> d!13739 (= res!36059 (simpleValid!47 newMap!16))))

(assert (=> d!13739 (= (valid!278 newMap!16) e!43752)))

(declare-fun b!66680 () Bool)

(declare-fun res!36060 () Bool)

(assert (=> b!66680 (=> (not res!36060) (not e!43752))))

(declare-fun arrayCountValidKeys!0 (array!3840 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!66680 (= res!36060 (= (arrayCountValidKeys!0 (_keys!3787 newMap!16) #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))) (_size!385 newMap!16)))))

(declare-fun b!66681 () Bool)

(declare-fun res!36061 () Bool)

(assert (=> b!66681 (=> (not res!36061) (not e!43752))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3840 (_ BitVec 32)) Bool)

(assert (=> b!66681 (= res!36061 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun b!66682 () Bool)

(assert (=> b!66682 (= e!43752 (arrayNoDuplicates!0 (_keys!3787 newMap!16) #b00000000000000000000000000000000 Nil!1488))))

(assert (= (and d!13739 res!36059) b!66680))

(assert (= (and b!66680 res!36060) b!66681))

(assert (= (and b!66681 res!36061) b!66682))

(declare-fun m!61047 () Bool)

(assert (=> d!13739 m!61047))

(declare-fun m!61049 () Bool)

(assert (=> b!66680 m!61049))

(declare-fun m!61051 () Bool)

(assert (=> b!66681 m!61051))

(declare-fun m!61053 () Bool)

(assert (=> b!66682 m!61053))

(assert (=> b!66336 d!13739))

(declare-fun mapNonEmpty!3085 () Bool)

(declare-fun mapRes!3085 () Bool)

(declare-fun tp!8377 () Bool)

(declare-fun e!43757 () Bool)

(assert (=> mapNonEmpty!3085 (= mapRes!3085 (and tp!8377 e!43757))))

(declare-fun mapValue!3085 () ValueCell!882)

(declare-fun mapKey!3085 () (_ BitVec 32))

(declare-fun mapRest!3085 () (Array (_ BitVec 32) ValueCell!882))

(assert (=> mapNonEmpty!3085 (= mapRest!3076 (store mapRest!3085 mapKey!3085 mapValue!3085))))

(declare-fun condMapEmpty!3085 () Bool)

(declare-fun mapDefault!3085 () ValueCell!882)

(assert (=> mapNonEmpty!3076 (= condMapEmpty!3085 (= mapRest!3076 ((as const (Array (_ BitVec 32) ValueCell!882)) mapDefault!3085)))))

(declare-fun e!43758 () Bool)

(assert (=> mapNonEmpty!3076 (= tp!8359 (and e!43758 mapRes!3085))))

(declare-fun b!66689 () Bool)

(assert (=> b!66689 (= e!43757 tp_is_empty!2451)))

(declare-fun mapIsEmpty!3085 () Bool)

(assert (=> mapIsEmpty!3085 mapRes!3085))

(declare-fun b!66690 () Bool)

(assert (=> b!66690 (= e!43758 tp_is_empty!2451)))

(assert (= (and mapNonEmpty!3076 condMapEmpty!3085) mapIsEmpty!3085))

(assert (= (and mapNonEmpty!3076 (not condMapEmpty!3085)) mapNonEmpty!3085))

(assert (= (and mapNonEmpty!3085 ((_ is ValueCellFull!882) mapValue!3085)) b!66689))

(assert (= (and mapNonEmpty!3076 ((_ is ValueCellFull!882) mapDefault!3085)) b!66690))

(declare-fun m!61055 () Bool)

(assert (=> mapNonEmpty!3085 m!61055))

(declare-fun mapNonEmpty!3086 () Bool)

(declare-fun mapRes!3086 () Bool)

(declare-fun tp!8378 () Bool)

(declare-fun e!43759 () Bool)

(assert (=> mapNonEmpty!3086 (= mapRes!3086 (and tp!8378 e!43759))))

(declare-fun mapRest!3086 () (Array (_ BitVec 32) ValueCell!882))

(declare-fun mapValue!3086 () ValueCell!882)

(declare-fun mapKey!3086 () (_ BitVec 32))

(assert (=> mapNonEmpty!3086 (= mapRest!3075 (store mapRest!3086 mapKey!3086 mapValue!3086))))

(declare-fun condMapEmpty!3086 () Bool)

(declare-fun mapDefault!3086 () ValueCell!882)

(assert (=> mapNonEmpty!3075 (= condMapEmpty!3086 (= mapRest!3075 ((as const (Array (_ BitVec 32) ValueCell!882)) mapDefault!3086)))))

(declare-fun e!43760 () Bool)

(assert (=> mapNonEmpty!3075 (= tp!8362 (and e!43760 mapRes!3086))))

(declare-fun b!66691 () Bool)

(assert (=> b!66691 (= e!43759 tp_is_empty!2451)))

(declare-fun mapIsEmpty!3086 () Bool)

(assert (=> mapIsEmpty!3086 mapRes!3086))

(declare-fun b!66692 () Bool)

(assert (=> b!66692 (= e!43760 tp_is_empty!2451)))

(assert (= (and mapNonEmpty!3075 condMapEmpty!3086) mapIsEmpty!3086))

(assert (= (and mapNonEmpty!3075 (not condMapEmpty!3086)) mapNonEmpty!3086))

(assert (= (and mapNonEmpty!3086 ((_ is ValueCellFull!882) mapValue!3086)) b!66691))

(assert (= (and mapNonEmpty!3075 ((_ is ValueCellFull!882) mapDefault!3086)) b!66692))

(declare-fun m!61057 () Bool)

(assert (=> mapNonEmpty!3086 m!61057))

(declare-fun b_lambda!2989 () Bool)

(assert (= b_lambda!2985 (or (and b!66325 b_free!2069) (and b!66322 b_free!2071 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))))) b_lambda!2989)))

(declare-fun b_lambda!2991 () Bool)

(assert (= b_lambda!2983 (or (and b!66325 b_free!2069) (and b!66322 b_free!2071 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))))) b_lambda!2991)))

(declare-fun b_lambda!2993 () Bool)

(assert (= b_lambda!2987 (or (and b!66325 b_free!2069) (and b!66322 b_free!2071 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))))) b_lambda!2993)))

(check-sat (not b_next!2071) (not bm!5483) (not d!13717) (not bm!5489) (not bm!5485) (not d!13731) (not b!66515) (not d!13711) (not b_lambda!2981) (not b!66501) (not b!66680) (not bm!5553) (not d!13709) (not bm!5544) (not b!66514) (not b!66662) (not b!66406) (not b!66450) (not b!66513) (not b!66528) b_and!4119 (not bm!5555) (not d!13723) (not b_lambda!2991) (not b!66466) (not b!66516) (not bm!5558) (not bm!5541) (not b!66405) (not b!66543) (not b!66650) (not d!13703) (not b!66544) (not b!66494) (not b!66656) (not d!13713) (not b!66667) (not b!66523) (not bm!5550) (not b!66497) (not b!66460) (not bm!5480) (not b_lambda!2989) (not d!13715) (not b!66495) (not bm!5547) b_and!4117 (not b!66456) (not d!13727) (not b_lambda!2993) (not b_next!2069) (not b!66517) (not bm!5492) (not d!13725) (not b!66510) (not b!66681) (not mapNonEmpty!3086) (not b!66502) (not bm!5551) (not mapNonEmpty!3085) (not d!13737) (not b!66553) (not b!66511) (not d!13739) (not b!66655) (not bm!5557) (not d!13701) tp_is_empty!2451 (not bm!5543) (not b!66659) (not b!66457) (not b!66551) (not b!66642) (not b!66498) (not bm!5560) (not b!66468) (not d!13735) (not bm!5486) (not d!13721) (not b!66465) (not b!66496) (not b!66682) (not b!66512) (not b!66469) (not bm!5561) (not b!66500) (not b!66541))
(check-sat b_and!4117 b_and!4119 (not b_next!2069) (not b_next!2071))
(get-model)

(declare-fun d!13741 () Bool)

(declare-fun res!36066 () Bool)

(declare-fun e!43765 () Bool)

(assert (=> d!13741 (=> res!36066 e!43765)))

(assert (=> d!13741 (= res!36066 (and ((_ is Cons!1486) (toList!723 lt!28501)) (= (_1!1064 (h!2070 (toList!723 lt!28501))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))))

(assert (=> d!13741 (= (containsKey!133 (toList!723 lt!28501) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) e!43765)))

(declare-fun b!66697 () Bool)

(declare-fun e!43766 () Bool)

(assert (=> b!66697 (= e!43765 e!43766)))

(declare-fun res!36067 () Bool)

(assert (=> b!66697 (=> (not res!36067) (not e!43766))))

(assert (=> b!66697 (= res!36067 (and (or (not ((_ is Cons!1486) (toList!723 lt!28501))) (bvsle (_1!1064 (h!2070 (toList!723 lt!28501))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))) ((_ is Cons!1486) (toList!723 lt!28501)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28501))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))))

(declare-fun b!66698 () Bool)

(assert (=> b!66698 (= e!43766 (containsKey!133 (t!4976 (toList!723 lt!28501)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (= (and d!13741 (not res!36066)) b!66697))

(assert (= (and b!66697 res!36067) b!66698))

(assert (=> b!66698 m!60719))

(declare-fun m!61059 () Bool)

(assert (=> b!66698 m!61059))

(assert (=> d!13735 d!13741))

(assert (=> d!13727 d!13733))

(declare-fun d!13743 () Bool)

(assert (=> d!13743 (arrayNoDuplicates!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) from!355 Nil!1488)))

(assert (=> d!13743 true))

(declare-fun _$71!87 () Unit!1836)

(assert (=> d!13743 (= (choose!39 (_keys!3787 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!87)))

(declare-fun bs!2847 () Bool)

(assert (= bs!2847 d!13743))

(assert (=> bs!2847 m!60757))

(assert (=> d!13727 d!13743))

(declare-fun d!13745 () Bool)

(declare-fun e!43768 () Bool)

(assert (=> d!13745 e!43768))

(declare-fun res!36068 () Bool)

(assert (=> d!13745 (=> res!36068 e!43768)))

(declare-fun lt!28767 () Bool)

(assert (=> d!13745 (= res!36068 (not lt!28767))))

(declare-fun lt!28764 () Bool)

(assert (=> d!13745 (= lt!28767 lt!28764)))

(declare-fun lt!28765 () Unit!1836)

(declare-fun e!43767 () Unit!1836)

(assert (=> d!13745 (= lt!28765 e!43767)))

(declare-fun c!9217 () Bool)

(assert (=> d!13745 (= c!9217 lt!28764)))

(assert (=> d!13745 (= lt!28764 (containsKey!133 (toList!723 lt!28612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13745 (= (contains!716 lt!28612 #b1000000000000000000000000000000000000000000000000000000000000000) lt!28767)))

(declare-fun b!66699 () Bool)

(declare-fun lt!28766 () Unit!1836)

(assert (=> b!66699 (= e!43767 lt!28766)))

(assert (=> b!66699 (= lt!28766 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66699 (isDefined!83 (getValueByKey!129 (toList!723 lt!28612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66700 () Bool)

(declare-fun Unit!1847 () Unit!1836)

(assert (=> b!66700 (= e!43767 Unit!1847)))

(declare-fun b!66701 () Bool)

(assert (=> b!66701 (= e!43768 (isDefined!83 (getValueByKey!129 (toList!723 lt!28612) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13745 c!9217) b!66699))

(assert (= (and d!13745 (not c!9217)) b!66700))

(assert (= (and d!13745 (not res!36068)) b!66701))

(declare-fun m!61061 () Bool)

(assert (=> d!13745 m!61061))

(declare-fun m!61063 () Bool)

(assert (=> b!66699 m!61063))

(declare-fun m!61065 () Bool)

(assert (=> b!66699 m!61065))

(assert (=> b!66699 m!61065))

(declare-fun m!61067 () Bool)

(assert (=> b!66699 m!61067))

(assert (=> b!66701 m!61065))

(assert (=> b!66701 m!61065))

(assert (=> b!66701 m!61067))

(assert (=> bm!5486 d!13745))

(declare-fun d!13747 () Bool)

(assert (=> d!13747 (= (+!87 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28755 (zeroValue!2055 newMap!16) lt!28502 #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28770 () Unit!1836)

(declare-fun choose!375 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 V!2915 Int) Unit!1836)

(assert (=> d!13747 (= lt!28770 (choose!375 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) lt!28755 (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) lt!28502 (defaultEntry!2147 newMap!16)))))

(assert (=> d!13747 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13747 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) lt!28755 (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) lt!28502 (defaultEntry!2147 newMap!16)) lt!28770)))

(declare-fun bs!2848 () Bool)

(assert (= bs!2848 d!13747))

(declare-fun m!61069 () Bool)

(assert (=> bs!2848 m!61069))

(declare-fun m!61071 () Bool)

(assert (=> bs!2848 m!61071))

(assert (=> bs!2848 m!60835))

(declare-fun m!61073 () Bool)

(assert (=> bs!2848 m!61073))

(assert (=> bs!2848 m!60835))

(declare-fun m!61075 () Bool)

(assert (=> bs!2848 m!61075))

(assert (=> b!66655 d!13747))

(declare-fun d!13749 () Bool)

(declare-fun isEmpty!313 (List!1490) Bool)

(assert (=> d!13749 (= (isEmpty!312 lt!28634) (isEmpty!313 (toList!723 lt!28634)))))

(declare-fun bs!2849 () Bool)

(assert (= bs!2849 d!13749))

(declare-fun m!61077 () Bool)

(assert (=> bs!2849 m!61077))

(assert (=> b!66502 d!13749))

(assert (=> b!66528 d!13729))

(declare-fun b!66710 () Bool)

(declare-fun e!43773 () (_ BitVec 32))

(assert (=> b!66710 (= e!43773 #b00000000000000000000000000000000)))

(declare-fun b!66711 () Bool)

(declare-fun e!43774 () (_ BitVec 32))

(declare-fun call!5570 () (_ BitVec 32))

(assert (=> b!66711 (= e!43774 call!5570)))

(declare-fun b!66712 () Bool)

(assert (=> b!66712 (= e!43773 e!43774)))

(declare-fun c!9223 () Bool)

(assert (=> b!66712 (= c!9223 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66713 () Bool)

(assert (=> b!66713 (= e!43774 (bvadd #b00000000000000000000000000000001 call!5570))))

(declare-fun bm!5567 () Bool)

(assert (=> bm!5567 (= call!5570 (arrayCountValidKeys!0 (_keys!3787 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2069 (_keys!3787 newMap!16))))))

(declare-fun d!13751 () Bool)

(declare-fun lt!28773 () (_ BitVec 32))

(assert (=> d!13751 (and (bvsge lt!28773 #b00000000000000000000000000000000) (bvsle lt!28773 (bvsub (size!2069 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!13751 (= lt!28773 e!43773)))

(declare-fun c!9222 () Bool)

(assert (=> d!13751 (= c!9222 (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (=> d!13751 (and (bvsle #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2069 (_keys!3787 newMap!16)) (size!2069 (_keys!3787 newMap!16))))))

(assert (=> d!13751 (= (arrayCountValidKeys!0 (_keys!3787 newMap!16) #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))) lt!28773)))

(assert (= (and d!13751 c!9222) b!66710))

(assert (= (and d!13751 (not c!9222)) b!66712))

(assert (= (and b!66712 c!9223) b!66713))

(assert (= (and b!66712 (not c!9223)) b!66711))

(assert (= (or b!66713 b!66711) bm!5567))

(declare-fun m!61079 () Bool)

(assert (=> b!66712 m!61079))

(assert (=> b!66712 m!61079))

(declare-fun m!61081 () Bool)

(assert (=> b!66712 m!61081))

(declare-fun m!61083 () Bool)

(assert (=> bm!5567 m!61083))

(assert (=> b!66680 d!13751))

(declare-fun b!66714 () Bool)

(declare-fun e!43776 () Bool)

(declare-fun call!5571 () Bool)

(assert (=> b!66714 (= e!43776 call!5571)))

(declare-fun b!66715 () Bool)

(declare-fun e!43777 () Bool)

(assert (=> b!66715 (= e!43777 e!43776)))

(declare-fun c!9224 () Bool)

(assert (=> b!66715 (= c!9224 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66717 () Bool)

(declare-fun e!43775 () Bool)

(assert (=> b!66717 (= e!43775 e!43777)))

(declare-fun res!36069 () Bool)

(assert (=> b!66717 (=> (not res!36069) (not e!43777))))

(declare-fun e!43778 () Bool)

(assert (=> b!66717 (= res!36069 (not e!43778))))

(declare-fun res!36071 () Bool)

(assert (=> b!66717 (=> (not res!36071) (not e!43778))))

(assert (=> b!66717 (= res!36071 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5568 () Bool)

(assert (=> bm!5568 (= call!5571 (arrayNoDuplicates!0 (_keys!3787 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9224 (Cons!1487 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) Nil!1488) Nil!1488)))))

(declare-fun b!66718 () Bool)

(assert (=> b!66718 (= e!43778 (contains!719 Nil!1488 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66716 () Bool)

(assert (=> b!66716 (= e!43776 call!5571)))

(declare-fun d!13753 () Bool)

(declare-fun res!36070 () Bool)

(assert (=> d!13753 (=> res!36070 e!43775)))

(assert (=> d!13753 (= res!36070 (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (=> d!13753 (= (arrayNoDuplicates!0 (_keys!3787 newMap!16) #b00000000000000000000000000000000 Nil!1488) e!43775)))

(assert (= (and d!13753 (not res!36070)) b!66717))

(assert (= (and b!66717 res!36071) b!66718))

(assert (= (and b!66717 res!36069) b!66715))

(assert (= (and b!66715 c!9224) b!66716))

(assert (= (and b!66715 (not c!9224)) b!66714))

(assert (= (or b!66716 b!66714) bm!5568))

(assert (=> b!66715 m!61079))

(assert (=> b!66715 m!61079))

(assert (=> b!66715 m!61081))

(assert (=> b!66717 m!61079))

(assert (=> b!66717 m!61079))

(assert (=> b!66717 m!61081))

(assert (=> bm!5568 m!61079))

(declare-fun m!61085 () Bool)

(assert (=> bm!5568 m!61085))

(assert (=> b!66718 m!61079))

(assert (=> b!66718 m!61079))

(declare-fun m!61087 () Bool)

(assert (=> b!66718 m!61087))

(assert (=> b!66682 d!13753))

(declare-fun b!66728 () Bool)

(declare-fun e!43783 () Option!135)

(declare-fun e!43784 () Option!135)

(assert (=> b!66728 (= e!43783 e!43784)))

(declare-fun c!9230 () Bool)

(assert (=> b!66728 (= c!9230 (and ((_ is Cons!1486) (toList!723 lt!28644)) (not (= (_1!1064 (h!2070 (toList!723 lt!28644))) (_1!1064 lt!28500)))))))

(declare-fun d!13755 () Bool)

(declare-fun c!9229 () Bool)

(assert (=> d!13755 (= c!9229 (and ((_ is Cons!1486) (toList!723 lt!28644)) (= (_1!1064 (h!2070 (toList!723 lt!28644))) (_1!1064 lt!28500))))))

(assert (=> d!13755 (= (getValueByKey!129 (toList!723 lt!28644) (_1!1064 lt!28500)) e!43783)))

(declare-fun b!66729 () Bool)

(assert (=> b!66729 (= e!43784 (getValueByKey!129 (t!4976 (toList!723 lt!28644)) (_1!1064 lt!28500)))))

(declare-fun b!66727 () Bool)

(assert (=> b!66727 (= e!43783 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28644)))))))

(declare-fun b!66730 () Bool)

(assert (=> b!66730 (= e!43784 None!133)))

(assert (= (and d!13755 c!9229) b!66727))

(assert (= (and d!13755 (not c!9229)) b!66728))

(assert (= (and b!66728 c!9230) b!66729))

(assert (= (and b!66728 (not c!9230)) b!66730))

(declare-fun m!61089 () Bool)

(assert (=> b!66729 m!61089))

(assert (=> b!66510 d!13755))

(declare-fun d!13757 () Bool)

(assert (=> d!13757 (= (map!1143 (_2!1065 lt!28753)) (getCurrentListMap!419 (_keys!3787 (_2!1065 lt!28753)) (_values!2130 (_2!1065 lt!28753)) (mask!6082 (_2!1065 lt!28753)) (extraKeys!2018 (_2!1065 lt!28753)) (zeroValue!2055 (_2!1065 lt!28753)) (minValue!2055 (_2!1065 lt!28753)) #b00000000000000000000000000000000 (defaultEntry!2147 (_2!1065 lt!28753))))))

(declare-fun bs!2850 () Bool)

(assert (= bs!2850 d!13757))

(declare-fun m!61091 () Bool)

(assert (=> bs!2850 m!61091))

(assert (=> bm!5555 d!13757))

(declare-fun b!66732 () Bool)

(declare-fun e!43785 () Option!135)

(declare-fun e!43786 () Option!135)

(assert (=> b!66732 (= e!43785 e!43786)))

(declare-fun c!9232 () Bool)

(assert (=> b!66732 (= c!9232 (and ((_ is Cons!1486) (toList!723 lt!28648)) (not (= (_1!1064 (h!2070 (toList!723 lt!28648))) (_1!1064 lt!28500)))))))

(declare-fun d!13759 () Bool)

(declare-fun c!9231 () Bool)

(assert (=> d!13759 (= c!9231 (and ((_ is Cons!1486) (toList!723 lt!28648)) (= (_1!1064 (h!2070 (toList!723 lt!28648))) (_1!1064 lt!28500))))))

(assert (=> d!13759 (= (getValueByKey!129 (toList!723 lt!28648) (_1!1064 lt!28500)) e!43785)))

(declare-fun b!66733 () Bool)

(assert (=> b!66733 (= e!43786 (getValueByKey!129 (t!4976 (toList!723 lt!28648)) (_1!1064 lt!28500)))))

(declare-fun b!66731 () Bool)

(assert (=> b!66731 (= e!43785 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28648)))))))

(declare-fun b!66734 () Bool)

(assert (=> b!66734 (= e!43786 None!133)))

(assert (= (and d!13759 c!9231) b!66731))

(assert (= (and d!13759 (not c!9231)) b!66732))

(assert (= (and b!66732 c!9232) b!66733))

(assert (= (and b!66732 (not c!9232)) b!66734))

(declare-fun m!61093 () Bool)

(assert (=> b!66733 m!61093))

(assert (=> b!66512 d!13759))

(declare-fun d!13761 () Bool)

(declare-fun res!36072 () Bool)

(declare-fun e!43787 () Bool)

(assert (=> d!13761 (=> (not res!36072) (not e!43787))))

(assert (=> d!13761 (= res!36072 (simpleValid!47 (v!2479 (underlying!252 thiss!992))))))

(assert (=> d!13761 (= (valid!278 (v!2479 (underlying!252 thiss!992))) e!43787)))

(declare-fun b!66735 () Bool)

(declare-fun res!36073 () Bool)

(assert (=> b!66735 (=> (not res!36073) (not e!43787))))

(assert (=> b!66735 (= res!36073 (= (arrayCountValidKeys!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000000 (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))) (_size!385 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun b!66736 () Bool)

(declare-fun res!36074 () Bool)

(assert (=> b!66736 (=> (not res!36074) (not e!43787))))

(assert (=> b!66736 (= res!36074 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun b!66737 () Bool)

(assert (=> b!66737 (= e!43787 (arrayNoDuplicates!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000000 Nil!1488))))

(assert (= (and d!13761 res!36072) b!66735))

(assert (= (and b!66735 res!36073) b!66736))

(assert (= (and b!66736 res!36074) b!66737))

(declare-fun m!61095 () Bool)

(assert (=> d!13761 m!61095))

(declare-fun m!61097 () Bool)

(assert (=> b!66735 m!61097))

(declare-fun m!61099 () Bool)

(assert (=> b!66736 m!61099))

(declare-fun m!61101 () Bool)

(assert (=> b!66737 m!61101))

(assert (=> d!13709 d!13761))

(declare-fun d!13763 () Bool)

(declare-fun e!43789 () Bool)

(assert (=> d!13763 e!43789))

(declare-fun res!36075 () Bool)

(assert (=> d!13763 (=> res!36075 e!43789)))

(declare-fun lt!28777 () Bool)

(assert (=> d!13763 (= res!36075 (not lt!28777))))

(declare-fun lt!28774 () Bool)

(assert (=> d!13763 (= lt!28777 lt!28774)))

(declare-fun lt!28775 () Unit!1836)

(declare-fun e!43788 () Unit!1836)

(assert (=> d!13763 (= lt!28775 e!43788)))

(declare-fun c!9233 () Bool)

(assert (=> d!13763 (= c!9233 lt!28774)))

(assert (=> d!13763 (= lt!28774 (containsKey!133 (toList!723 lt!28612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13763 (= (contains!716 lt!28612 #b0000000000000000000000000000000000000000000000000000000000000000) lt!28777)))

(declare-fun b!66738 () Bool)

(declare-fun lt!28776 () Unit!1836)

(assert (=> b!66738 (= e!43788 lt!28776)))

(assert (=> b!66738 (= lt!28776 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66738 (isDefined!83 (getValueByKey!129 (toList!723 lt!28612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66739 () Bool)

(declare-fun Unit!1848 () Unit!1836)

(assert (=> b!66739 (= e!43788 Unit!1848)))

(declare-fun b!66740 () Bool)

(assert (=> b!66740 (= e!43789 (isDefined!83 (getValueByKey!129 (toList!723 lt!28612) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13763 c!9233) b!66738))

(assert (= (and d!13763 (not c!9233)) b!66739))

(assert (= (and d!13763 (not res!36075)) b!66740))

(declare-fun m!61103 () Bool)

(assert (=> d!13763 m!61103))

(declare-fun m!61105 () Bool)

(assert (=> b!66738 m!61105))

(declare-fun m!61107 () Bool)

(assert (=> b!66738 m!61107))

(assert (=> b!66738 m!61107))

(declare-fun m!61109 () Bool)

(assert (=> b!66738 m!61109))

(assert (=> b!66740 m!61107))

(assert (=> b!66740 m!61107))

(assert (=> b!66740 m!61109))

(assert (=> bm!5485 d!13763))

(declare-fun b!66741 () Bool)

(declare-fun e!43795 () Bool)

(declare-fun call!5574 () Bool)

(assert (=> b!66741 (= e!43795 (not call!5574))))

(declare-fun bm!5569 () Bool)

(declare-fun call!5578 () ListLongMap!1415)

(assert (=> bm!5569 (= call!5578 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741) (mask!6082 newMap!16) (ite (and c!9205 c!9204) lt!28742 (extraKeys!2018 newMap!16)) (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun d!13765 () Bool)

(declare-fun e!43802 () Bool)

(assert (=> d!13765 e!43802))

(declare-fun res!36084 () Bool)

(assert (=> d!13765 (=> (not res!36084) (not e!43802))))

(assert (=> d!13765 (= res!36084 (or (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))))

(declare-fun lt!28798 () ListLongMap!1415)

(declare-fun lt!28785 () ListLongMap!1415)

(assert (=> d!13765 (= lt!28798 lt!28785)))

(declare-fun lt!28781 () Unit!1836)

(declare-fun e!43798 () Unit!1836)

(assert (=> d!13765 (= lt!28781 e!43798)))

(declare-fun c!9236 () Bool)

(declare-fun e!43796 () Bool)

(assert (=> d!13765 (= c!9236 e!43796)))

(declare-fun res!36077 () Bool)

(assert (=> d!13765 (=> (not res!36077) (not e!43796))))

(assert (=> d!13765 (= res!36077 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun e!43791 () ListLongMap!1415)

(assert (=> d!13765 (= lt!28785 e!43791)))

(declare-fun c!9237 () Bool)

(assert (=> d!13765 (= c!9237 (and (not (= (bvand (ite (and c!9205 c!9204) lt!28742 (extraKeys!2018 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!9205 c!9204) lt!28742 (extraKeys!2018 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!13765 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13765 (= (getCurrentListMap!419 (_keys!3787 newMap!16) (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741) (mask!6082 newMap!16) (ite (and c!9205 c!9204) lt!28742 (extraKeys!2018 newMap!16)) (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!28798)))

(declare-fun b!66742 () Bool)

(declare-fun call!5577 () ListLongMap!1415)

(assert (=> b!66742 (= e!43791 (+!87 call!5577 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))

(declare-fun b!66743 () Bool)

(declare-fun e!43799 () Bool)

(assert (=> b!66743 (= e!43795 e!43799)))

(declare-fun res!36079 () Bool)

(assert (=> b!66743 (= res!36079 call!5574)))

(assert (=> b!66743 (=> (not res!36079) (not e!43799))))

(declare-fun b!66744 () Bool)

(declare-fun e!43793 () ListLongMap!1415)

(assert (=> b!66744 (= e!43791 e!43793)))

(declare-fun c!9239 () Bool)

(assert (=> b!66744 (= c!9239 (and (not (= (bvand (ite (and c!9205 c!9204) lt!28742 (extraKeys!2018 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!9205 c!9204) lt!28742 (extraKeys!2018 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5570 () Bool)

(declare-fun call!5575 () ListLongMap!1415)

(declare-fun call!5573 () ListLongMap!1415)

(assert (=> bm!5570 (= call!5575 call!5573)))

(declare-fun b!66745 () Bool)

(declare-fun e!43794 () Bool)

(assert (=> b!66745 (= e!43802 e!43794)))

(declare-fun c!9234 () Bool)

(assert (=> b!66745 (= c!9234 (not (= (bvand (ite (and c!9205 c!9204) lt!28742 (extraKeys!2018 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66746 () Bool)

(declare-fun call!5576 () Bool)

(assert (=> b!66746 (= e!43794 (not call!5576))))

(declare-fun b!66747 () Bool)

(declare-fun e!43800 () Bool)

(assert (=> b!66747 (= e!43794 e!43800)))

(declare-fun res!36083 () Bool)

(assert (=> b!66747 (= res!36083 call!5576)))

(assert (=> b!66747 (=> (not res!36083) (not e!43800))))

(declare-fun b!66748 () Bool)

(declare-fun lt!28799 () Unit!1836)

(assert (=> b!66748 (= e!43798 lt!28799)))

(declare-fun lt!28783 () ListLongMap!1415)

(assert (=> b!66748 (= lt!28783 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741) (mask!6082 newMap!16) (ite (and c!9205 c!9204) lt!28742 (extraKeys!2018 newMap!16)) (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28792 () (_ BitVec 64))

(assert (=> b!66748 (= lt!28792 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28786 () (_ BitVec 64))

(assert (=> b!66748 (= lt!28786 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28780 () Unit!1836)

(assert (=> b!66748 (= lt!28780 (addStillContains!48 lt!28783 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)) lt!28786))))

(assert (=> b!66748 (contains!716 (+!87 lt!28783 (tuple2!2109 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)))) lt!28786)))

(declare-fun lt!28790 () Unit!1836)

(assert (=> b!66748 (= lt!28790 lt!28780)))

(declare-fun lt!28797 () ListLongMap!1415)

(assert (=> b!66748 (= lt!28797 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741) (mask!6082 newMap!16) (ite (and c!9205 c!9204) lt!28742 (extraKeys!2018 newMap!16)) (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28788 () (_ BitVec 64))

(assert (=> b!66748 (= lt!28788 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28784 () (_ BitVec 64))

(assert (=> b!66748 (= lt!28784 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28795 () Unit!1836)

(assert (=> b!66748 (= lt!28795 (addApplyDifferent!48 lt!28797 lt!28788 (minValue!2055 newMap!16) lt!28784))))

(assert (=> b!66748 (= (apply!72 (+!87 lt!28797 (tuple2!2109 lt!28788 (minValue!2055 newMap!16))) lt!28784) (apply!72 lt!28797 lt!28784))))

(declare-fun lt!28778 () Unit!1836)

(assert (=> b!66748 (= lt!28778 lt!28795)))

(declare-fun lt!28794 () ListLongMap!1415)

(assert (=> b!66748 (= lt!28794 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741) (mask!6082 newMap!16) (ite (and c!9205 c!9204) lt!28742 (extraKeys!2018 newMap!16)) (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28789 () (_ BitVec 64))

(assert (=> b!66748 (= lt!28789 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28791 () (_ BitVec 64))

(assert (=> b!66748 (= lt!28791 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28779 () Unit!1836)

(assert (=> b!66748 (= lt!28779 (addApplyDifferent!48 lt!28794 lt!28789 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)) lt!28791))))

(assert (=> b!66748 (= (apply!72 (+!87 lt!28794 (tuple2!2109 lt!28789 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)))) lt!28791) (apply!72 lt!28794 lt!28791))))

(declare-fun lt!28793 () Unit!1836)

(assert (=> b!66748 (= lt!28793 lt!28779)))

(declare-fun lt!28782 () ListLongMap!1415)

(assert (=> b!66748 (= lt!28782 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741) (mask!6082 newMap!16) (ite (and c!9205 c!9204) lt!28742 (extraKeys!2018 newMap!16)) (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28787 () (_ BitVec 64))

(assert (=> b!66748 (= lt!28787 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28796 () (_ BitVec 64))

(assert (=> b!66748 (= lt!28796 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66748 (= lt!28799 (addApplyDifferent!48 lt!28782 lt!28787 (minValue!2055 newMap!16) lt!28796))))

(assert (=> b!66748 (= (apply!72 (+!87 lt!28782 (tuple2!2109 lt!28787 (minValue!2055 newMap!16))) lt!28796) (apply!72 lt!28782 lt!28796))))

(declare-fun b!66749 () Bool)

(assert (=> b!66749 (= e!43796 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66750 () Bool)

(declare-fun Unit!1849 () Unit!1836)

(assert (=> b!66750 (= e!43798 Unit!1849)))

(declare-fun b!66751 () Bool)

(declare-fun res!36082 () Bool)

(assert (=> b!66751 (=> (not res!36082) (not e!43802))))

(assert (=> b!66751 (= res!36082 e!43795)))

(declare-fun c!9235 () Bool)

(assert (=> b!66751 (= c!9235 (not (= (bvand (ite (and c!9205 c!9204) lt!28742 (extraKeys!2018 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5571 () Bool)

(assert (=> bm!5571 (= call!5573 call!5578)))

(declare-fun b!66752 () Bool)

(assert (=> b!66752 (= e!43800 (= (apply!72 lt!28798 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2055 newMap!16)))))

(declare-fun bm!5572 () Bool)

(assert (=> bm!5572 (= call!5577 (+!87 (ite c!9237 call!5578 (ite c!9239 call!5573 call!5575)) (ite (or c!9237 c!9239) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(declare-fun b!66753 () Bool)

(declare-fun res!36078 () Bool)

(assert (=> b!66753 (=> (not res!36078) (not e!43802))))

(declare-fun e!43801 () Bool)

(assert (=> b!66753 (= res!36078 e!43801)))

(declare-fun res!36081 () Bool)

(assert (=> b!66753 (=> res!36081 e!43801)))

(declare-fun e!43797 () Bool)

(assert (=> b!66753 (= res!36081 (not e!43797))))

(declare-fun res!36076 () Bool)

(assert (=> b!66753 (=> (not res!36076) (not e!43797))))

(assert (=> b!66753 (= res!36076 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun b!66754 () Bool)

(declare-fun c!9238 () Bool)

(assert (=> b!66754 (= c!9238 (and (not (= (bvand (ite (and c!9205 c!9204) lt!28742 (extraKeys!2018 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!9205 c!9204) lt!28742 (extraKeys!2018 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!43790 () ListLongMap!1415)

(assert (=> b!66754 (= e!43793 e!43790)))

(declare-fun b!66755 () Bool)

(assert (=> b!66755 (= e!43790 call!5575)))

(declare-fun bm!5573 () Bool)

(declare-fun call!5572 () ListLongMap!1415)

(assert (=> bm!5573 (= call!5572 call!5577)))

(declare-fun bm!5574 () Bool)

(assert (=> bm!5574 (= call!5574 (contains!716 lt!28798 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66756 () Bool)

(assert (=> b!66756 (= e!43793 call!5572)))

(declare-fun b!66757 () Bool)

(assert (=> b!66757 (= e!43797 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66758 () Bool)

(assert (=> b!66758 (= e!43799 (= (apply!72 lt!28798 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))))))

(declare-fun b!66759 () Bool)

(assert (=> b!66759 (= e!43790 call!5572)))

(declare-fun b!66760 () Bool)

(declare-fun e!43792 () Bool)

(assert (=> b!66760 (= e!43801 e!43792)))

(declare-fun res!36080 () Bool)

(assert (=> b!66760 (=> (not res!36080) (not e!43792))))

(assert (=> b!66760 (= res!36080 (contains!716 lt!28798 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!66760 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun bm!5575 () Bool)

(assert (=> bm!5575 (= call!5576 (contains!716 lt!28798 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66761 () Bool)

(assert (=> b!66761 (= e!43792 (= (apply!72 lt!28798 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1127 (select (arr!1835 (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66761 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741))))))

(assert (=> b!66761 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (= (and d!13765 c!9237) b!66742))

(assert (= (and d!13765 (not c!9237)) b!66744))

(assert (= (and b!66744 c!9239) b!66756))

(assert (= (and b!66744 (not c!9239)) b!66754))

(assert (= (and b!66754 c!9238) b!66759))

(assert (= (and b!66754 (not c!9238)) b!66755))

(assert (= (or b!66759 b!66755) bm!5570))

(assert (= (or b!66756 bm!5570) bm!5571))

(assert (= (or b!66756 b!66759) bm!5573))

(assert (= (or b!66742 bm!5571) bm!5569))

(assert (= (or b!66742 bm!5573) bm!5572))

(assert (= (and d!13765 res!36077) b!66749))

(assert (= (and d!13765 c!9236) b!66748))

(assert (= (and d!13765 (not c!9236)) b!66750))

(assert (= (and d!13765 res!36084) b!66753))

(assert (= (and b!66753 res!36076) b!66757))

(assert (= (and b!66753 (not res!36081)) b!66760))

(assert (= (and b!66760 res!36080) b!66761))

(assert (= (and b!66753 res!36078) b!66751))

(assert (= (and b!66751 c!9235) b!66743))

(assert (= (and b!66751 (not c!9235)) b!66741))

(assert (= (and b!66743 res!36079) b!66758))

(assert (= (or b!66743 b!66741) bm!5574))

(assert (= (and b!66751 res!36082) b!66745))

(assert (= (and b!66745 c!9234) b!66747))

(assert (= (and b!66745 (not c!9234)) b!66746))

(assert (= (and b!66747 res!36083) b!66752))

(assert (= (or b!66747 b!66746) bm!5575))

(declare-fun b_lambda!2995 () Bool)

(assert (=> (not b_lambda!2995) (not b!66761)))

(declare-fun tb!1469 () Bool)

(declare-fun t!4984 () Bool)

(assert (=> (and b!66325 (= (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) (defaultEntry!2147 newMap!16)) t!4984) tb!1469))

(declare-fun result!2595 () Bool)

(assert (=> tb!1469 (= result!2595 tp_is_empty!2451)))

(assert (=> b!66761 t!4984))

(declare-fun b_and!4121 () Bool)

(assert (= b_and!4117 (and (=> t!4984 result!2595) b_and!4121)))

(declare-fun t!4986 () Bool)

(declare-fun tb!1471 () Bool)

(assert (=> (and b!66322 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 newMap!16)) t!4986) tb!1471))

(declare-fun result!2597 () Bool)

(assert (= result!2597 result!2595))

(assert (=> b!66761 t!4986))

(declare-fun b_and!4123 () Bool)

(assert (= b_and!4119 (and (=> t!4986 result!2597) b_and!4123)))

(declare-fun m!61111 () Bool)

(assert (=> bm!5574 m!61111))

(declare-fun m!61113 () Bool)

(assert (=> b!66761 m!61113))

(declare-fun m!61115 () Bool)

(assert (=> b!66761 m!61115))

(declare-fun m!61117 () Bool)

(assert (=> b!66761 m!61117))

(assert (=> b!66761 m!61079))

(assert (=> b!66761 m!61079))

(declare-fun m!61119 () Bool)

(assert (=> b!66761 m!61119))

(assert (=> b!66761 m!61113))

(assert (=> b!66761 m!61115))

(assert (=> b!66760 m!61079))

(assert (=> b!66760 m!61079))

(declare-fun m!61121 () Bool)

(assert (=> b!66760 m!61121))

(declare-fun m!61123 () Bool)

(assert (=> b!66758 m!61123))

(assert (=> b!66757 m!61079))

(assert (=> b!66757 m!61079))

(assert (=> b!66757 m!61081))

(declare-fun m!61125 () Bool)

(assert (=> b!66752 m!61125))

(assert (=> d!13765 m!61069))

(declare-fun m!61127 () Bool)

(assert (=> b!66742 m!61127))

(declare-fun m!61129 () Bool)

(assert (=> bm!5569 m!61129))

(declare-fun m!61131 () Bool)

(assert (=> bm!5572 m!61131))

(declare-fun m!61133 () Bool)

(assert (=> b!66748 m!61133))

(declare-fun m!61135 () Bool)

(assert (=> b!66748 m!61135))

(declare-fun m!61137 () Bool)

(assert (=> b!66748 m!61137))

(declare-fun m!61139 () Bool)

(assert (=> b!66748 m!61139))

(declare-fun m!61141 () Bool)

(assert (=> b!66748 m!61141))

(declare-fun m!61143 () Bool)

(assert (=> b!66748 m!61143))

(declare-fun m!61145 () Bool)

(assert (=> b!66748 m!61145))

(assert (=> b!66748 m!61139))

(declare-fun m!61147 () Bool)

(assert (=> b!66748 m!61147))

(assert (=> b!66748 m!61129))

(declare-fun m!61149 () Bool)

(assert (=> b!66748 m!61149))

(declare-fun m!61151 () Bool)

(assert (=> b!66748 m!61151))

(assert (=> b!66748 m!61143))

(declare-fun m!61153 () Bool)

(assert (=> b!66748 m!61153))

(assert (=> b!66748 m!61133))

(declare-fun m!61155 () Bool)

(assert (=> b!66748 m!61155))

(declare-fun m!61157 () Bool)

(assert (=> b!66748 m!61157))

(assert (=> b!66748 m!61079))

(assert (=> b!66748 m!61155))

(declare-fun m!61159 () Bool)

(assert (=> b!66748 m!61159))

(declare-fun m!61161 () Bool)

(assert (=> b!66748 m!61161))

(assert (=> b!66749 m!61079))

(assert (=> b!66749 m!61079))

(assert (=> b!66749 m!61081))

(declare-fun m!61163 () Bool)

(assert (=> bm!5575 m!61163))

(assert (=> bm!5553 d!13765))

(declare-fun d!13767 () Bool)

(assert (=> d!13767 (= (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66465 d!13767))

(declare-fun d!13769 () Bool)

(declare-fun e!43804 () Bool)

(assert (=> d!13769 e!43804))

(declare-fun res!36085 () Bool)

(assert (=> d!13769 (=> res!36085 e!43804)))

(declare-fun lt!28803 () Bool)

(assert (=> d!13769 (= res!36085 (not lt!28803))))

(declare-fun lt!28800 () Bool)

(assert (=> d!13769 (= lt!28803 lt!28800)))

(declare-fun lt!28801 () Unit!1836)

(declare-fun e!43803 () Unit!1836)

(assert (=> d!13769 (= lt!28801 e!43803)))

(declare-fun c!9240 () Bool)

(assert (=> d!13769 (= c!9240 lt!28800)))

(assert (=> d!13769 (= lt!28800 (containsKey!133 (toList!723 lt!28648) (_1!1064 lt!28500)))))

(assert (=> d!13769 (= (contains!716 lt!28648 (_1!1064 lt!28500)) lt!28803)))

(declare-fun b!66762 () Bool)

(declare-fun lt!28802 () Unit!1836)

(assert (=> b!66762 (= e!43803 lt!28802)))

(assert (=> b!66762 (= lt!28802 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28648) (_1!1064 lt!28500)))))

(assert (=> b!66762 (isDefined!83 (getValueByKey!129 (toList!723 lt!28648) (_1!1064 lt!28500)))))

(declare-fun b!66763 () Bool)

(declare-fun Unit!1850 () Unit!1836)

(assert (=> b!66763 (= e!43803 Unit!1850)))

(declare-fun b!66764 () Bool)

(assert (=> b!66764 (= e!43804 (isDefined!83 (getValueByKey!129 (toList!723 lt!28648) (_1!1064 lt!28500))))))

(assert (= (and d!13769 c!9240) b!66762))

(assert (= (and d!13769 (not c!9240)) b!66763))

(assert (= (and d!13769 (not res!36085)) b!66764))

(declare-fun m!61165 () Bool)

(assert (=> d!13769 m!61165))

(declare-fun m!61167 () Bool)

(assert (=> b!66762 m!61167))

(assert (=> b!66762 m!60933))

(assert (=> b!66762 m!60933))

(declare-fun m!61169 () Bool)

(assert (=> b!66762 m!61169))

(assert (=> b!66764 m!60933))

(assert (=> b!66764 m!60933))

(assert (=> b!66764 m!61169))

(assert (=> d!13715 d!13769))

(declare-fun b!66766 () Bool)

(declare-fun e!43805 () Option!135)

(declare-fun e!43806 () Option!135)

(assert (=> b!66766 (= e!43805 e!43806)))

(declare-fun c!9242 () Bool)

(assert (=> b!66766 (= c!9242 (and ((_ is Cons!1486) lt!28650) (not (= (_1!1064 (h!2070 lt!28650)) (_1!1064 lt!28500)))))))

(declare-fun d!13771 () Bool)

(declare-fun c!9241 () Bool)

(assert (=> d!13771 (= c!9241 (and ((_ is Cons!1486) lt!28650) (= (_1!1064 (h!2070 lt!28650)) (_1!1064 lt!28500))))))

(assert (=> d!13771 (= (getValueByKey!129 lt!28650 (_1!1064 lt!28500)) e!43805)))

(declare-fun b!66767 () Bool)

(assert (=> b!66767 (= e!43806 (getValueByKey!129 (t!4976 lt!28650) (_1!1064 lt!28500)))))

(declare-fun b!66765 () Bool)

(assert (=> b!66765 (= e!43805 (Some!134 (_2!1064 (h!2070 lt!28650))))))

(declare-fun b!66768 () Bool)

(assert (=> b!66768 (= e!43806 None!133)))

(assert (= (and d!13771 c!9241) b!66765))

(assert (= (and d!13771 (not c!9241)) b!66766))

(assert (= (and b!66766 c!9242) b!66767))

(assert (= (and b!66766 (not c!9242)) b!66768))

(declare-fun m!61171 () Bool)

(assert (=> b!66767 m!61171))

(assert (=> d!13715 d!13771))

(declare-fun d!13773 () Bool)

(assert (=> d!13773 (= (getValueByKey!129 lt!28650 (_1!1064 lt!28500)) (Some!134 (_2!1064 lt!28500)))))

(declare-fun lt!28806 () Unit!1836)

(declare-fun choose!376 (List!1490 (_ BitVec 64) V!2915) Unit!1836)

(assert (=> d!13773 (= lt!28806 (choose!376 lt!28650 (_1!1064 lt!28500) (_2!1064 lt!28500)))))

(declare-fun e!43809 () Bool)

(assert (=> d!13773 e!43809))

(declare-fun res!36090 () Bool)

(assert (=> d!13773 (=> (not res!36090) (not e!43809))))

(declare-fun isStrictlySorted!284 (List!1490) Bool)

(assert (=> d!13773 (= res!36090 (isStrictlySorted!284 lt!28650))))

(assert (=> d!13773 (= (lemmaContainsTupThenGetReturnValue!48 lt!28650 (_1!1064 lt!28500) (_2!1064 lt!28500)) lt!28806)))

(declare-fun b!66773 () Bool)

(declare-fun res!36091 () Bool)

(assert (=> b!66773 (=> (not res!36091) (not e!43809))))

(assert (=> b!66773 (= res!36091 (containsKey!133 lt!28650 (_1!1064 lt!28500)))))

(declare-fun b!66774 () Bool)

(assert (=> b!66774 (= e!43809 (contains!718 lt!28650 (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))))))

(assert (= (and d!13773 res!36090) b!66773))

(assert (= (and b!66773 res!36091) b!66774))

(assert (=> d!13773 m!60927))

(declare-fun m!61173 () Bool)

(assert (=> d!13773 m!61173))

(declare-fun m!61175 () Bool)

(assert (=> d!13773 m!61175))

(declare-fun m!61177 () Bool)

(assert (=> b!66773 m!61177))

(declare-fun m!61179 () Bool)

(assert (=> b!66774 m!61179))

(assert (=> d!13715 d!13773))

(declare-fun b!66795 () Bool)

(declare-fun e!43821 () List!1490)

(declare-fun call!5586 () List!1490)

(assert (=> b!66795 (= e!43821 call!5586)))

(declare-fun b!66796 () Bool)

(declare-fun e!43820 () List!1490)

(declare-fun call!5585 () List!1490)

(assert (=> b!66796 (= e!43820 call!5585)))

(declare-fun bm!5582 () Bool)

(declare-fun call!5587 () List!1490)

(assert (=> bm!5582 (= call!5585 call!5587)))

(declare-fun bm!5583 () Bool)

(declare-fun c!9252 () Bool)

(declare-fun e!43824 () List!1490)

(declare-fun $colon$colon!62 (List!1490 tuple2!2108) List!1490)

(assert (=> bm!5583 (= call!5586 ($colon$colon!62 e!43824 (ite c!9252 (h!2070 (toList!723 (+!87 lt!28505 lt!28503))) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500)))))))

(declare-fun c!9254 () Bool)

(assert (=> bm!5583 (= c!9254 c!9252)))

(declare-fun d!13775 () Bool)

(declare-fun e!43822 () Bool)

(assert (=> d!13775 e!43822))

(declare-fun res!36097 () Bool)

(assert (=> d!13775 (=> (not res!36097) (not e!43822))))

(declare-fun lt!28809 () List!1490)

(assert (=> d!13775 (= res!36097 (isStrictlySorted!284 lt!28809))))

(assert (=> d!13775 (= lt!28809 e!43821)))

(assert (=> d!13775 (= c!9252 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28505 lt!28503))) (bvslt (_1!1064 (h!2070 (toList!723 (+!87 lt!28505 lt!28503)))) (_1!1064 lt!28500))))))

(assert (=> d!13775 (isStrictlySorted!284 (toList!723 (+!87 lt!28505 lt!28503)))))

(assert (=> d!13775 (= (insertStrictlySorted!50 (toList!723 (+!87 lt!28505 lt!28503)) (_1!1064 lt!28500) (_2!1064 lt!28500)) lt!28809)))

(declare-fun bm!5584 () Bool)

(assert (=> bm!5584 (= call!5587 call!5586)))

(declare-fun b!66797 () Bool)

(assert (=> b!66797 (= e!43824 (insertStrictlySorted!50 (t!4976 (toList!723 (+!87 lt!28505 lt!28503))) (_1!1064 lt!28500) (_2!1064 lt!28500)))))

(declare-fun c!9253 () Bool)

(declare-fun b!66798 () Bool)

(assert (=> b!66798 (= c!9253 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28505 lt!28503))) (bvsgt (_1!1064 (h!2070 (toList!723 (+!87 lt!28505 lt!28503)))) (_1!1064 lt!28500))))))

(declare-fun e!43823 () List!1490)

(assert (=> b!66798 (= e!43823 e!43820)))

(declare-fun b!66799 () Bool)

(assert (=> b!66799 (= e!43823 call!5587)))

(declare-fun b!66800 () Bool)

(declare-fun res!36096 () Bool)

(assert (=> b!66800 (=> (not res!36096) (not e!43822))))

(assert (=> b!66800 (= res!36096 (containsKey!133 lt!28809 (_1!1064 lt!28500)))))

(declare-fun b!66801 () Bool)

(assert (=> b!66801 (= e!43820 call!5585)))

(declare-fun b!66802 () Bool)

(declare-fun c!9251 () Bool)

(assert (=> b!66802 (= e!43824 (ite c!9251 (t!4976 (toList!723 (+!87 lt!28505 lt!28503))) (ite c!9253 (Cons!1486 (h!2070 (toList!723 (+!87 lt!28505 lt!28503))) (t!4976 (toList!723 (+!87 lt!28505 lt!28503)))) Nil!1487)))))

(declare-fun b!66803 () Bool)

(assert (=> b!66803 (= e!43822 (contains!718 lt!28809 (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))))))

(declare-fun b!66804 () Bool)

(assert (=> b!66804 (= e!43821 e!43823)))

(assert (=> b!66804 (= c!9251 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28505 lt!28503))) (= (_1!1064 (h!2070 (toList!723 (+!87 lt!28505 lt!28503)))) (_1!1064 lt!28500))))))

(assert (= (and d!13775 c!9252) b!66795))

(assert (= (and d!13775 (not c!9252)) b!66804))

(assert (= (and b!66804 c!9251) b!66799))

(assert (= (and b!66804 (not c!9251)) b!66798))

(assert (= (and b!66798 c!9253) b!66801))

(assert (= (and b!66798 (not c!9253)) b!66796))

(assert (= (or b!66801 b!66796) bm!5582))

(assert (= (or b!66799 bm!5582) bm!5584))

(assert (= (or b!66795 bm!5584) bm!5583))

(assert (= (and bm!5583 c!9254) b!66797))

(assert (= (and bm!5583 (not c!9254)) b!66802))

(assert (= (and d!13775 res!36097) b!66800))

(assert (= (and b!66800 res!36096) b!66803))

(declare-fun m!61181 () Bool)

(assert (=> bm!5583 m!61181))

(declare-fun m!61183 () Bool)

(assert (=> d!13775 m!61183))

(declare-fun m!61185 () Bool)

(assert (=> d!13775 m!61185))

(declare-fun m!61187 () Bool)

(assert (=> b!66800 m!61187))

(declare-fun m!61189 () Bool)

(assert (=> b!66797 m!61189))

(declare-fun m!61191 () Bool)

(assert (=> b!66803 m!61191))

(assert (=> d!13715 d!13775))

(declare-fun d!13777 () Bool)

(declare-fun e!43827 () Bool)

(assert (=> d!13777 e!43827))

(declare-fun c!9257 () Bool)

(assert (=> d!13777 (= c!9257 (and (not (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!13777 true))

(declare-fun _$29!81 () Unit!1836)

(assert (=> d!13777 (= (choose!374 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))) _$29!81)))

(declare-fun b!66809 () Bool)

(assert (=> b!66809 (= e!43827 (arrayContainsKey!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!66810 () Bool)

(assert (=> b!66810 (= e!43827 (ite (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!13777 c!9257) b!66809))

(assert (= (and d!13777 (not c!9257)) b!66810))

(assert (=> b!66809 m!60719))

(assert (=> b!66809 m!60761))

(assert (=> d!13731 d!13777))

(assert (=> d!13731 d!13719))

(declare-fun d!13779 () Bool)

(declare-fun e!43829 () Bool)

(assert (=> d!13779 e!43829))

(declare-fun res!36098 () Bool)

(assert (=> d!13779 (=> res!36098 e!43829)))

(declare-fun lt!28813 () Bool)

(assert (=> d!13779 (= res!36098 (not lt!28813))))

(declare-fun lt!28810 () Bool)

(assert (=> d!13779 (= lt!28813 lt!28810)))

(declare-fun lt!28811 () Unit!1836)

(declare-fun e!43828 () Unit!1836)

(assert (=> d!13779 (= lt!28811 e!43828)))

(declare-fun c!9258 () Bool)

(assert (=> d!13779 (= c!9258 lt!28810)))

(assert (=> d!13779 (= lt!28810 (containsKey!133 (toList!723 lt!28652) (_1!1064 lt!28503)))))

(assert (=> d!13779 (= (contains!716 lt!28652 (_1!1064 lt!28503)) lt!28813)))

(declare-fun b!66811 () Bool)

(declare-fun lt!28812 () Unit!1836)

(assert (=> b!66811 (= e!43828 lt!28812)))

(assert (=> b!66811 (= lt!28812 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28652) (_1!1064 lt!28503)))))

(assert (=> b!66811 (isDefined!83 (getValueByKey!129 (toList!723 lt!28652) (_1!1064 lt!28503)))))

(declare-fun b!66812 () Bool)

(declare-fun Unit!1851 () Unit!1836)

(assert (=> b!66812 (= e!43828 Unit!1851)))

(declare-fun b!66813 () Bool)

(assert (=> b!66813 (= e!43829 (isDefined!83 (getValueByKey!129 (toList!723 lt!28652) (_1!1064 lt!28503))))))

(assert (= (and d!13779 c!9258) b!66811))

(assert (= (and d!13779 (not c!9258)) b!66812))

(assert (= (and d!13779 (not res!36098)) b!66813))

(declare-fun m!61193 () Bool)

(assert (=> d!13779 m!61193))

(declare-fun m!61195 () Bool)

(assert (=> b!66811 m!61195))

(assert (=> b!66811 m!60945))

(assert (=> b!66811 m!60945))

(declare-fun m!61197 () Bool)

(assert (=> b!66811 m!61197))

(assert (=> b!66813 m!60945))

(assert (=> b!66813 m!60945))

(assert (=> b!66813 m!61197))

(assert (=> d!13717 d!13779))

(declare-fun b!66815 () Bool)

(declare-fun e!43830 () Option!135)

(declare-fun e!43831 () Option!135)

(assert (=> b!66815 (= e!43830 e!43831)))

(declare-fun c!9260 () Bool)

(assert (=> b!66815 (= c!9260 (and ((_ is Cons!1486) lt!28654) (not (= (_1!1064 (h!2070 lt!28654)) (_1!1064 lt!28503)))))))

(declare-fun d!13781 () Bool)

(declare-fun c!9259 () Bool)

(assert (=> d!13781 (= c!9259 (and ((_ is Cons!1486) lt!28654) (= (_1!1064 (h!2070 lt!28654)) (_1!1064 lt!28503))))))

(assert (=> d!13781 (= (getValueByKey!129 lt!28654 (_1!1064 lt!28503)) e!43830)))

(declare-fun b!66816 () Bool)

(assert (=> b!66816 (= e!43831 (getValueByKey!129 (t!4976 lt!28654) (_1!1064 lt!28503)))))

(declare-fun b!66814 () Bool)

(assert (=> b!66814 (= e!43830 (Some!134 (_2!1064 (h!2070 lt!28654))))))

(declare-fun b!66817 () Bool)

(assert (=> b!66817 (= e!43831 None!133)))

(assert (= (and d!13781 c!9259) b!66814))

(assert (= (and d!13781 (not c!9259)) b!66815))

(assert (= (and b!66815 c!9260) b!66816))

(assert (= (and b!66815 (not c!9260)) b!66817))

(declare-fun m!61199 () Bool)

(assert (=> b!66816 m!61199))

(assert (=> d!13717 d!13781))

(declare-fun d!13783 () Bool)

(assert (=> d!13783 (= (getValueByKey!129 lt!28654 (_1!1064 lt!28503)) (Some!134 (_2!1064 lt!28503)))))

(declare-fun lt!28814 () Unit!1836)

(assert (=> d!13783 (= lt!28814 (choose!376 lt!28654 (_1!1064 lt!28503) (_2!1064 lt!28503)))))

(declare-fun e!43832 () Bool)

(assert (=> d!13783 e!43832))

(declare-fun res!36099 () Bool)

(assert (=> d!13783 (=> (not res!36099) (not e!43832))))

(assert (=> d!13783 (= res!36099 (isStrictlySorted!284 lt!28654))))

(assert (=> d!13783 (= (lemmaContainsTupThenGetReturnValue!48 lt!28654 (_1!1064 lt!28503) (_2!1064 lt!28503)) lt!28814)))

(declare-fun b!66818 () Bool)

(declare-fun res!36100 () Bool)

(assert (=> b!66818 (=> (not res!36100) (not e!43832))))

(assert (=> b!66818 (= res!36100 (containsKey!133 lt!28654 (_1!1064 lt!28503)))))

(declare-fun b!66819 () Bool)

(assert (=> b!66819 (= e!43832 (contains!718 lt!28654 (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))))))

(assert (= (and d!13783 res!36099) b!66818))

(assert (= (and b!66818 res!36100) b!66819))

(assert (=> d!13783 m!60939))

(declare-fun m!61201 () Bool)

(assert (=> d!13783 m!61201))

(declare-fun m!61203 () Bool)

(assert (=> d!13783 m!61203))

(declare-fun m!61205 () Bool)

(assert (=> b!66818 m!61205))

(declare-fun m!61207 () Bool)

(assert (=> b!66819 m!61207))

(assert (=> d!13717 d!13783))

(declare-fun b!66820 () Bool)

(declare-fun e!43834 () List!1490)

(declare-fun call!5589 () List!1490)

(assert (=> b!66820 (= e!43834 call!5589)))

(declare-fun b!66821 () Bool)

(declare-fun e!43833 () List!1490)

(declare-fun call!5588 () List!1490)

(assert (=> b!66821 (= e!43833 call!5588)))

(declare-fun bm!5585 () Bool)

(declare-fun call!5590 () List!1490)

(assert (=> bm!5585 (= call!5588 call!5590)))

(declare-fun bm!5586 () Bool)

(declare-fun e!43837 () List!1490)

(declare-fun c!9262 () Bool)

(assert (=> bm!5586 (= call!5589 ($colon$colon!62 e!43837 (ite c!9262 (h!2070 (toList!723 (+!87 lt!28505 lt!28500))) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503)))))))

(declare-fun c!9264 () Bool)

(assert (=> bm!5586 (= c!9264 c!9262)))

(declare-fun d!13785 () Bool)

(declare-fun e!43835 () Bool)

(assert (=> d!13785 e!43835))

(declare-fun res!36102 () Bool)

(assert (=> d!13785 (=> (not res!36102) (not e!43835))))

(declare-fun lt!28815 () List!1490)

(assert (=> d!13785 (= res!36102 (isStrictlySorted!284 lt!28815))))

(assert (=> d!13785 (= lt!28815 e!43834)))

(assert (=> d!13785 (= c!9262 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28505 lt!28500))) (bvslt (_1!1064 (h!2070 (toList!723 (+!87 lt!28505 lt!28500)))) (_1!1064 lt!28503))))))

(assert (=> d!13785 (isStrictlySorted!284 (toList!723 (+!87 lt!28505 lt!28500)))))

(assert (=> d!13785 (= (insertStrictlySorted!50 (toList!723 (+!87 lt!28505 lt!28500)) (_1!1064 lt!28503) (_2!1064 lt!28503)) lt!28815)))

(declare-fun bm!5587 () Bool)

(assert (=> bm!5587 (= call!5590 call!5589)))

(declare-fun b!66822 () Bool)

(assert (=> b!66822 (= e!43837 (insertStrictlySorted!50 (t!4976 (toList!723 (+!87 lt!28505 lt!28500))) (_1!1064 lt!28503) (_2!1064 lt!28503)))))

(declare-fun c!9263 () Bool)

(declare-fun b!66823 () Bool)

(assert (=> b!66823 (= c!9263 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28505 lt!28500))) (bvsgt (_1!1064 (h!2070 (toList!723 (+!87 lt!28505 lt!28500)))) (_1!1064 lt!28503))))))

(declare-fun e!43836 () List!1490)

(assert (=> b!66823 (= e!43836 e!43833)))

(declare-fun b!66824 () Bool)

(assert (=> b!66824 (= e!43836 call!5590)))

(declare-fun b!66825 () Bool)

(declare-fun res!36101 () Bool)

(assert (=> b!66825 (=> (not res!36101) (not e!43835))))

(assert (=> b!66825 (= res!36101 (containsKey!133 lt!28815 (_1!1064 lt!28503)))))

(declare-fun b!66826 () Bool)

(assert (=> b!66826 (= e!43833 call!5588)))

(declare-fun c!9261 () Bool)

(declare-fun b!66827 () Bool)

(assert (=> b!66827 (= e!43837 (ite c!9261 (t!4976 (toList!723 (+!87 lt!28505 lt!28500))) (ite c!9263 (Cons!1486 (h!2070 (toList!723 (+!87 lt!28505 lt!28500))) (t!4976 (toList!723 (+!87 lt!28505 lt!28500)))) Nil!1487)))))

(declare-fun b!66828 () Bool)

(assert (=> b!66828 (= e!43835 (contains!718 lt!28815 (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))))))

(declare-fun b!66829 () Bool)

(assert (=> b!66829 (= e!43834 e!43836)))

(assert (=> b!66829 (= c!9261 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28505 lt!28500))) (= (_1!1064 (h!2070 (toList!723 (+!87 lt!28505 lt!28500)))) (_1!1064 lt!28503))))))

(assert (= (and d!13785 c!9262) b!66820))

(assert (= (and d!13785 (not c!9262)) b!66829))

(assert (= (and b!66829 c!9261) b!66824))

(assert (= (and b!66829 (not c!9261)) b!66823))

(assert (= (and b!66823 c!9263) b!66826))

(assert (= (and b!66823 (not c!9263)) b!66821))

(assert (= (or b!66826 b!66821) bm!5585))

(assert (= (or b!66824 bm!5585) bm!5587))

(assert (= (or b!66820 bm!5587) bm!5586))

(assert (= (and bm!5586 c!9264) b!66822))

(assert (= (and bm!5586 (not c!9264)) b!66827))

(assert (= (and d!13785 res!36102) b!66825))

(assert (= (and b!66825 res!36101) b!66828))

(declare-fun m!61209 () Bool)

(assert (=> bm!5586 m!61209))

(declare-fun m!61211 () Bool)

(assert (=> d!13785 m!61211))

(declare-fun m!61213 () Bool)

(assert (=> d!13785 m!61213))

(declare-fun m!61215 () Bool)

(assert (=> b!66825 m!61215))

(declare-fun m!61217 () Bool)

(assert (=> b!66822 m!61217))

(declare-fun m!61219 () Bool)

(assert (=> b!66828 m!61219))

(assert (=> d!13717 d!13785))

(declare-fun b!66830 () Bool)

(declare-fun e!43841 () ListLongMap!1415)

(declare-fun e!43842 () ListLongMap!1415)

(assert (=> b!66830 (= e!43841 e!43842)))

(declare-fun c!9267 () Bool)

(assert (=> b!66830 (= c!9267 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!66831 () Bool)

(declare-fun e!43838 () Bool)

(assert (=> b!66831 (= e!43838 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!66831 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!66832 () Bool)

(declare-fun lt!28820 () Unit!1836)

(declare-fun lt!28819 () Unit!1836)

(assert (=> b!66832 (= lt!28820 lt!28819)))

(declare-fun lt!28816 () (_ BitVec 64))

(declare-fun lt!28818 () (_ BitVec 64))

(declare-fun lt!28817 () ListLongMap!1415)

(declare-fun lt!28821 () V!2915)

(assert (=> b!66832 (not (contains!716 (+!87 lt!28817 (tuple2!2109 lt!28816 lt!28821)) lt!28818))))

(assert (=> b!66832 (= lt!28819 (addStillNotContains!23 lt!28817 lt!28816 lt!28821 lt!28818))))

(assert (=> b!66832 (= lt!28818 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!66832 (= lt!28821 (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!66832 (= lt!28816 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!5591 () ListLongMap!1415)

(assert (=> b!66832 (= lt!28817 call!5591)))

(assert (=> b!66832 (= e!43842 (+!87 call!5591 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!66833 () Bool)

(declare-fun res!36104 () Bool)

(declare-fun e!43840 () Bool)

(assert (=> b!66833 (=> (not res!36104) (not e!43840))))

(declare-fun lt!28822 () ListLongMap!1415)

(assert (=> b!66833 (= res!36104 (not (contains!716 lt!28822 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!66834 () Bool)

(declare-fun e!43839 () Bool)

(assert (=> b!66834 (= e!43839 (= lt!28822 (getCurrentListMapNoExtraKeys!51 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!66835 () Bool)

(assert (=> b!66835 (= e!43842 call!5591)))

(declare-fun b!66836 () Bool)

(assert (=> b!66836 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(assert (=> b!66836 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2070 (_values!2130 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun e!43844 () Bool)

(assert (=> b!66836 (= e!43844 (= (apply!72 lt!28822 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!13787 () Bool)

(assert (=> d!13787 e!43840))

(declare-fun res!36106 () Bool)

(assert (=> d!13787 (=> (not res!36106) (not e!43840))))

(assert (=> d!13787 (= res!36106 (not (contains!716 lt!28822 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13787 (= lt!28822 e!43841)))

(declare-fun c!9268 () Bool)

(assert (=> d!13787 (= c!9268 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(assert (=> d!13787 (validMask!0 (mask!6082 (v!2479 (underlying!252 thiss!992))))))

(assert (=> d!13787 (= (getCurrentListMapNoExtraKeys!51 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))) lt!28822)))

(declare-fun bm!5588 () Bool)

(assert (=> bm!5588 (= call!5591 (getCurrentListMapNoExtraKeys!51 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun b!66837 () Bool)

(declare-fun e!43843 () Bool)

(assert (=> b!66837 (= e!43843 e!43844)))

(assert (=> b!66837 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun res!36105 () Bool)

(assert (=> b!66837 (= res!36105 (contains!716 lt!28822 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!66837 (=> (not res!36105) (not e!43844))))

(declare-fun b!66838 () Bool)

(assert (=> b!66838 (= e!43839 (isEmpty!312 lt!28822))))

(declare-fun b!66839 () Bool)

(assert (=> b!66839 (= e!43843 e!43839)))

(declare-fun c!9266 () Bool)

(assert (=> b!66839 (= c!9266 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!66840 () Bool)

(assert (=> b!66840 (= e!43841 (ListLongMap!1416 Nil!1487))))

(declare-fun b!66841 () Bool)

(assert (=> b!66841 (= e!43840 e!43843)))

(declare-fun c!9265 () Bool)

(assert (=> b!66841 (= c!9265 e!43838)))

(declare-fun res!36103 () Bool)

(assert (=> b!66841 (=> (not res!36103) (not e!43838))))

(assert (=> b!66841 (= res!36103 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(assert (= (and d!13787 c!9268) b!66840))

(assert (= (and d!13787 (not c!9268)) b!66830))

(assert (= (and b!66830 c!9267) b!66832))

(assert (= (and b!66830 (not c!9267)) b!66835))

(assert (= (or b!66832 b!66835) bm!5588))

(assert (= (and d!13787 res!36106) b!66833))

(assert (= (and b!66833 res!36104) b!66841))

(assert (= (and b!66841 res!36103) b!66831))

(assert (= (and b!66841 c!9265) b!66837))

(assert (= (and b!66841 (not c!9265)) b!66839))

(assert (= (and b!66837 res!36105) b!66836))

(assert (= (and b!66839 c!9266) b!66834))

(assert (= (and b!66839 (not c!9266)) b!66838))

(declare-fun b_lambda!2997 () Bool)

(assert (=> (not b_lambda!2997) (not b!66832)))

(assert (=> b!66832 t!4973))

(declare-fun b_and!4125 () Bool)

(assert (= b_and!4121 (and (=> t!4973 result!2581) b_and!4125)))

(assert (=> b!66832 t!4975))

(declare-fun b_and!4127 () Bool)

(assert (= b_and!4123 (and (=> t!4975 result!2585) b_and!4127)))

(declare-fun b_lambda!2999 () Bool)

(assert (=> (not b_lambda!2999) (not b!66836)))

(assert (=> b!66836 t!4973))

(declare-fun b_and!4129 () Bool)

(assert (= b_and!4125 (and (=> t!4973 result!2581) b_and!4129)))

(assert (=> b!66836 t!4975))

(declare-fun b_and!4131 () Bool)

(assert (= b_and!4127 (and (=> t!4975 result!2585) b_and!4131)))

(declare-fun m!61221 () Bool)

(assert (=> b!66831 m!61221))

(assert (=> b!66831 m!61221))

(declare-fun m!61223 () Bool)

(assert (=> b!66831 m!61223))

(declare-fun m!61225 () Bool)

(assert (=> b!66833 m!61225))

(assert (=> b!66837 m!61221))

(assert (=> b!66837 m!61221))

(declare-fun m!61227 () Bool)

(assert (=> b!66837 m!61227))

(declare-fun m!61229 () Bool)

(assert (=> b!66836 m!61229))

(assert (=> b!66836 m!61221))

(assert (=> b!66836 m!61229))

(assert (=> b!66836 m!60723))

(declare-fun m!61231 () Bool)

(assert (=> b!66836 m!61231))

(assert (=> b!66836 m!60723))

(assert (=> b!66836 m!61221))

(declare-fun m!61233 () Bool)

(assert (=> b!66836 m!61233))

(declare-fun m!61235 () Bool)

(assert (=> b!66838 m!61235))

(declare-fun m!61237 () Bool)

(assert (=> b!66834 m!61237))

(assert (=> b!66832 m!61229))

(declare-fun m!61239 () Bool)

(assert (=> b!66832 m!61239))

(declare-fun m!61241 () Bool)

(assert (=> b!66832 m!61241))

(assert (=> b!66832 m!61221))

(declare-fun m!61243 () Bool)

(assert (=> b!66832 m!61243))

(declare-fun m!61245 () Bool)

(assert (=> b!66832 m!61245))

(assert (=> b!66832 m!61229))

(assert (=> b!66832 m!60723))

(assert (=> b!66832 m!61231))

(assert (=> b!66832 m!61243))

(assert (=> b!66832 m!60723))

(declare-fun m!61247 () Bool)

(assert (=> d!13787 m!61247))

(assert (=> d!13787 m!60745))

(assert (=> b!66830 m!61221))

(assert (=> b!66830 m!61221))

(assert (=> b!66830 m!61223))

(assert (=> bm!5588 m!61237))

(assert (=> bm!5489 d!13787))

(declare-fun d!13789 () Bool)

(assert (=> d!13789 (= (get!1128 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) from!355) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2478 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> b!66405 d!13789))

(assert (=> bm!5480 d!13711))

(declare-fun d!13791 () Bool)

(declare-fun e!43845 () Bool)

(assert (=> d!13791 e!43845))

(declare-fun res!36108 () Bool)

(assert (=> d!13791 (=> (not res!36108) (not e!43845))))

(declare-fun lt!28824 () ListLongMap!1415)

(assert (=> d!13791 (= res!36108 (contains!716 lt!28824 (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun lt!28826 () List!1490)

(assert (=> d!13791 (= lt!28824 (ListLongMap!1416 lt!28826))))

(declare-fun lt!28825 () Unit!1836)

(declare-fun lt!28823 () Unit!1836)

(assert (=> d!13791 (= lt!28825 lt!28823)))

(assert (=> d!13791 (= (getValueByKey!129 lt!28826 (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))) (Some!134 (_2!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!13791 (= lt!28823 (lemmaContainsTupThenGetReturnValue!48 lt!28826 (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) (_2!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!13791 (= lt!28826 (insertStrictlySorted!50 (toList!723 (ite c!9154 call!5489 (ite c!9156 call!5484 call!5486))) (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) (_2!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!13791 (= (+!87 (ite c!9154 call!5489 (ite c!9156 call!5484 call!5486)) (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28824)))

(declare-fun b!66842 () Bool)

(declare-fun res!36107 () Bool)

(assert (=> b!66842 (=> (not res!36107) (not e!43845))))

(assert (=> b!66842 (= res!36107 (= (getValueByKey!129 (toList!723 lt!28824) (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))) (Some!134 (_2!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun b!66843 () Bool)

(assert (=> b!66843 (= e!43845 (contains!718 (toList!723 lt!28824) (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (= (and d!13791 res!36108) b!66842))

(assert (= (and b!66842 res!36107) b!66843))

(declare-fun m!61249 () Bool)

(assert (=> d!13791 m!61249))

(declare-fun m!61251 () Bool)

(assert (=> d!13791 m!61251))

(declare-fun m!61253 () Bool)

(assert (=> d!13791 m!61253))

(declare-fun m!61255 () Bool)

(assert (=> d!13791 m!61255))

(declare-fun m!61257 () Bool)

(assert (=> b!66842 m!61257))

(declare-fun m!61259 () Bool)

(assert (=> b!66843 m!61259))

(assert (=> bm!5483 d!13791))

(declare-fun b!66856 () Bool)

(declare-fun e!43853 () SeekEntryResult!243)

(declare-fun lt!28834 () SeekEntryResult!243)

(assert (=> b!66856 (= e!43853 (MissingZero!243 (index!3102 lt!28834)))))

(declare-fun b!66857 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3840 (_ BitVec 32)) SeekEntryResult!243)

(assert (=> b!66857 (= e!43853 (seekKeyOrZeroReturnVacant!0 (x!10713 lt!28834) (index!3102 lt!28834) (index!3102 lt!28834) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun b!66858 () Bool)

(declare-fun e!43854 () SeekEntryResult!243)

(assert (=> b!66858 (= e!43854 Undefined!243)))

(declare-fun b!66859 () Bool)

(declare-fun e!43852 () SeekEntryResult!243)

(assert (=> b!66859 (= e!43852 (Found!243 (index!3102 lt!28834)))))

(declare-fun b!66860 () Bool)

(assert (=> b!66860 (= e!43854 e!43852)))

(declare-fun lt!28835 () (_ BitVec 64))

(assert (=> b!66860 (= lt!28835 (select (arr!1834 (_keys!3787 newMap!16)) (index!3102 lt!28834)))))

(declare-fun c!9275 () Bool)

(assert (=> b!66860 (= c!9275 (= lt!28835 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun b!66861 () Bool)

(declare-fun c!9276 () Bool)

(assert (=> b!66861 (= c!9276 (= lt!28835 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66861 (= e!43852 e!43853)))

(declare-fun d!13793 () Bool)

(declare-fun lt!28833 () SeekEntryResult!243)

(assert (=> d!13793 (and (or ((_ is Undefined!243) lt!28833) (not ((_ is Found!243) lt!28833)) (and (bvsge (index!3101 lt!28833) #b00000000000000000000000000000000) (bvslt (index!3101 lt!28833) (size!2069 (_keys!3787 newMap!16))))) (or ((_ is Undefined!243) lt!28833) ((_ is Found!243) lt!28833) (not ((_ is MissingZero!243) lt!28833)) (and (bvsge (index!3100 lt!28833) #b00000000000000000000000000000000) (bvslt (index!3100 lt!28833) (size!2069 (_keys!3787 newMap!16))))) (or ((_ is Undefined!243) lt!28833) ((_ is Found!243) lt!28833) ((_ is MissingZero!243) lt!28833) (not ((_ is MissingVacant!243) lt!28833)) (and (bvsge (index!3103 lt!28833) #b00000000000000000000000000000000) (bvslt (index!3103 lt!28833) (size!2069 (_keys!3787 newMap!16))))) (or ((_ is Undefined!243) lt!28833) (ite ((_ is Found!243) lt!28833) (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28833)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (ite ((_ is MissingZero!243) lt!28833) (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3100 lt!28833)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!243) lt!28833) (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3103 lt!28833)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13793 (= lt!28833 e!43854)))

(declare-fun c!9277 () Bool)

(assert (=> d!13793 (= c!9277 (and ((_ is Intermediate!243) lt!28834) (undefined!1055 lt!28834)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3840 (_ BitVec 32)) SeekEntryResult!243)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!13793 (= lt!28834 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (mask!6082 newMap!16)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(assert (=> d!13793 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13793 (= (seekEntryOrOpen!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)) lt!28833)))

(assert (= (and d!13793 c!9277) b!66858))

(assert (= (and d!13793 (not c!9277)) b!66860))

(assert (= (and b!66860 c!9275) b!66859))

(assert (= (and b!66860 (not c!9275)) b!66861))

(assert (= (and b!66861 c!9276) b!66856))

(assert (= (and b!66861 (not c!9276)) b!66857))

(assert (=> b!66857 m!60719))

(declare-fun m!61261 () Bool)

(assert (=> b!66857 m!61261))

(declare-fun m!61263 () Bool)

(assert (=> b!66860 m!61263))

(assert (=> d!13793 m!60719))

(declare-fun m!61265 () Bool)

(assert (=> d!13793 m!61265))

(assert (=> d!13793 m!61069))

(declare-fun m!61267 () Bool)

(assert (=> d!13793 m!61267))

(declare-fun m!61269 () Bool)

(assert (=> d!13793 m!61269))

(assert (=> d!13793 m!61265))

(assert (=> d!13793 m!60719))

(declare-fun m!61271 () Bool)

(assert (=> d!13793 m!61271))

(declare-fun m!61273 () Bool)

(assert (=> d!13793 m!61273))

(assert (=> b!66662 d!13793))

(assert (=> b!66494 d!13767))

(declare-fun d!13795 () Bool)

(declare-fun e!43856 () Bool)

(assert (=> d!13795 e!43856))

(declare-fun res!36109 () Bool)

(assert (=> d!13795 (=> res!36109 e!43856)))

(declare-fun lt!28839 () Bool)

(assert (=> d!13795 (= res!36109 (not lt!28839))))

(declare-fun lt!28836 () Bool)

(assert (=> d!13795 (= lt!28839 lt!28836)))

(declare-fun lt!28837 () Unit!1836)

(declare-fun e!43855 () Unit!1836)

(assert (=> d!13795 (= lt!28837 e!43855)))

(declare-fun c!9278 () Bool)

(assert (=> d!13795 (= c!9278 lt!28836)))

(assert (=> d!13795 (= lt!28836 (containsKey!133 (toList!723 lt!28634) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13795 (= (contains!716 lt!28634 #b0000000000000000000000000000000000000000000000000000000000000000) lt!28839)))

(declare-fun b!66862 () Bool)

(declare-fun lt!28838 () Unit!1836)

(assert (=> b!66862 (= e!43855 lt!28838)))

(assert (=> b!66862 (= lt!28838 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28634) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66862 (isDefined!83 (getValueByKey!129 (toList!723 lt!28634) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66863 () Bool)

(declare-fun Unit!1852 () Unit!1836)

(assert (=> b!66863 (= e!43855 Unit!1852)))

(declare-fun b!66864 () Bool)

(assert (=> b!66864 (= e!43856 (isDefined!83 (getValueByKey!129 (toList!723 lt!28634) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13795 c!9278) b!66862))

(assert (= (and d!13795 (not c!9278)) b!66863))

(assert (= (and d!13795 (not res!36109)) b!66864))

(declare-fun m!61275 () Bool)

(assert (=> d!13795 m!61275))

(declare-fun m!61277 () Bool)

(assert (=> b!66862 m!61277))

(declare-fun m!61279 () Bool)

(assert (=> b!66862 m!61279))

(assert (=> b!66862 m!61279))

(declare-fun m!61281 () Bool)

(assert (=> b!66862 m!61281))

(assert (=> b!66864 m!61279))

(assert (=> b!66864 m!61279))

(assert (=> b!66864 m!61281))

(assert (=> d!13711 d!13795))

(assert (=> d!13711 d!13719))

(declare-fun d!13797 () Bool)

(declare-fun c!9279 () Bool)

(assert (=> d!13797 (= c!9279 ((_ is ValueCellFull!882) (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!43857 () V!2915)

(assert (=> d!13797 (= (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!43857)))

(declare-fun b!66865 () Bool)

(assert (=> b!66865 (= e!43857 (get!1128 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!66866 () Bool)

(assert (=> b!66866 (= e!43857 (get!1129 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13797 c!9279) b!66865))

(assert (= (and d!13797 (not c!9279)) b!66866))

(assert (=> b!66865 m!60839))

(assert (=> b!66865 m!60723))

(declare-fun m!61283 () Bool)

(assert (=> b!66865 m!61283))

(assert (=> b!66866 m!60839))

(assert (=> b!66866 m!60723))

(declare-fun m!61285 () Bool)

(assert (=> b!66866 m!61285))

(assert (=> b!66496 d!13797))

(declare-fun d!13799 () Bool)

(assert (=> d!13799 (not (contains!716 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633)) lt!28630))))

(declare-fun lt!28842 () Unit!1836)

(declare-fun choose!377 (ListLongMap!1415 (_ BitVec 64) V!2915 (_ BitVec 64)) Unit!1836)

(assert (=> d!13799 (= lt!28842 (choose!377 lt!28629 lt!28628 lt!28633 lt!28630))))

(declare-fun e!43860 () Bool)

(assert (=> d!13799 e!43860))

(declare-fun res!36112 () Bool)

(assert (=> d!13799 (=> (not res!36112) (not e!43860))))

(assert (=> d!13799 (= res!36112 (not (contains!716 lt!28629 lt!28630)))))

(assert (=> d!13799 (= (addStillNotContains!23 lt!28629 lt!28628 lt!28633 lt!28630) lt!28842)))

(declare-fun b!66870 () Bool)

(assert (=> b!66870 (= e!43860 (not (= lt!28628 lt!28630)))))

(assert (= (and d!13799 res!36112) b!66870))

(assert (=> d!13799 m!60907))

(assert (=> d!13799 m!60907))

(assert (=> d!13799 m!60909))

(declare-fun m!61287 () Bool)

(assert (=> d!13799 m!61287))

(declare-fun m!61289 () Bool)

(assert (=> d!13799 m!61289))

(assert (=> b!66496 d!13799))

(declare-fun d!13801 () Bool)

(declare-fun e!43861 () Bool)

(assert (=> d!13801 e!43861))

(declare-fun res!36114 () Bool)

(assert (=> d!13801 (=> (not res!36114) (not e!43861))))

(declare-fun lt!28844 () ListLongMap!1415)

(assert (=> d!13801 (= res!36114 (contains!716 lt!28844 (_1!1064 (tuple2!2109 lt!28628 lt!28633))))))

(declare-fun lt!28846 () List!1490)

(assert (=> d!13801 (= lt!28844 (ListLongMap!1416 lt!28846))))

(declare-fun lt!28845 () Unit!1836)

(declare-fun lt!28843 () Unit!1836)

(assert (=> d!13801 (= lt!28845 lt!28843)))

(assert (=> d!13801 (= (getValueByKey!129 lt!28846 (_1!1064 (tuple2!2109 lt!28628 lt!28633))) (Some!134 (_2!1064 (tuple2!2109 lt!28628 lt!28633))))))

(assert (=> d!13801 (= lt!28843 (lemmaContainsTupThenGetReturnValue!48 lt!28846 (_1!1064 (tuple2!2109 lt!28628 lt!28633)) (_2!1064 (tuple2!2109 lt!28628 lt!28633))))))

(assert (=> d!13801 (= lt!28846 (insertStrictlySorted!50 (toList!723 lt!28629) (_1!1064 (tuple2!2109 lt!28628 lt!28633)) (_2!1064 (tuple2!2109 lt!28628 lt!28633))))))

(assert (=> d!13801 (= (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633)) lt!28844)))

(declare-fun b!66871 () Bool)

(declare-fun res!36113 () Bool)

(assert (=> b!66871 (=> (not res!36113) (not e!43861))))

(assert (=> b!66871 (= res!36113 (= (getValueByKey!129 (toList!723 lt!28844) (_1!1064 (tuple2!2109 lt!28628 lt!28633))) (Some!134 (_2!1064 (tuple2!2109 lt!28628 lt!28633)))))))

(declare-fun b!66872 () Bool)

(assert (=> b!66872 (= e!43861 (contains!718 (toList!723 lt!28844) (tuple2!2109 lt!28628 lt!28633)))))

(assert (= (and d!13801 res!36114) b!66871))

(assert (= (and b!66871 res!36113) b!66872))

(declare-fun m!61291 () Bool)

(assert (=> d!13801 m!61291))

(declare-fun m!61293 () Bool)

(assert (=> d!13801 m!61293))

(declare-fun m!61295 () Bool)

(assert (=> d!13801 m!61295))

(declare-fun m!61297 () Bool)

(assert (=> d!13801 m!61297))

(declare-fun m!61299 () Bool)

(assert (=> b!66871 m!61299))

(declare-fun m!61301 () Bool)

(assert (=> b!66872 m!61301))

(assert (=> b!66496 d!13801))

(declare-fun d!13803 () Bool)

(declare-fun e!43862 () Bool)

(assert (=> d!13803 e!43862))

(declare-fun res!36116 () Bool)

(assert (=> d!13803 (=> (not res!36116) (not e!43862))))

(declare-fun lt!28848 () ListLongMap!1415)

(assert (=> d!13803 (= res!36116 (contains!716 lt!28848 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!28850 () List!1490)

(assert (=> d!13803 (= lt!28848 (ListLongMap!1416 lt!28850))))

(declare-fun lt!28849 () Unit!1836)

(declare-fun lt!28847 () Unit!1836)

(assert (=> d!13803 (= lt!28849 lt!28847)))

(assert (=> d!13803 (= (getValueByKey!129 lt!28850 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!134 (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13803 (= lt!28847 (lemmaContainsTupThenGetReturnValue!48 lt!28850 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13803 (= lt!28850 (insertStrictlySorted!50 (toList!723 call!5492) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13803 (= (+!87 call!5492 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!28848)))

(declare-fun b!66873 () Bool)

(declare-fun res!36115 () Bool)

(assert (=> b!66873 (=> (not res!36115) (not e!43862))))

(assert (=> b!66873 (= res!36115 (= (getValueByKey!129 (toList!723 lt!28848) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!134 (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!66874 () Bool)

(assert (=> b!66874 (= e!43862 (contains!718 (toList!723 lt!28848) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!13803 res!36116) b!66873))

(assert (= (and b!66873 res!36115) b!66874))

(declare-fun m!61303 () Bool)

(assert (=> d!13803 m!61303))

(declare-fun m!61305 () Bool)

(assert (=> d!13803 m!61305))

(declare-fun m!61307 () Bool)

(assert (=> d!13803 m!61307))

(declare-fun m!61309 () Bool)

(assert (=> d!13803 m!61309))

(declare-fun m!61311 () Bool)

(assert (=> b!66873 m!61311))

(declare-fun m!61313 () Bool)

(assert (=> b!66874 m!61313))

(assert (=> b!66496 d!13803))

(declare-fun d!13805 () Bool)

(declare-fun e!43864 () Bool)

(assert (=> d!13805 e!43864))

(declare-fun res!36117 () Bool)

(assert (=> d!13805 (=> res!36117 e!43864)))

(declare-fun lt!28854 () Bool)

(assert (=> d!13805 (= res!36117 (not lt!28854))))

(declare-fun lt!28851 () Bool)

(assert (=> d!13805 (= lt!28854 lt!28851)))

(declare-fun lt!28852 () Unit!1836)

(declare-fun e!43863 () Unit!1836)

(assert (=> d!13805 (= lt!28852 e!43863)))

(declare-fun c!9280 () Bool)

(assert (=> d!13805 (= c!9280 lt!28851)))

(assert (=> d!13805 (= lt!28851 (containsKey!133 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633))) lt!28630))))

(assert (=> d!13805 (= (contains!716 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633)) lt!28630) lt!28854)))

(declare-fun b!66875 () Bool)

(declare-fun lt!28853 () Unit!1836)

(assert (=> b!66875 (= e!43863 lt!28853)))

(assert (=> b!66875 (= lt!28853 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633))) lt!28630))))

(assert (=> b!66875 (isDefined!83 (getValueByKey!129 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633))) lt!28630))))

(declare-fun b!66876 () Bool)

(declare-fun Unit!1853 () Unit!1836)

(assert (=> b!66876 (= e!43863 Unit!1853)))

(declare-fun b!66877 () Bool)

(assert (=> b!66877 (= e!43864 (isDefined!83 (getValueByKey!129 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633))) lt!28630)))))

(assert (= (and d!13805 c!9280) b!66875))

(assert (= (and d!13805 (not c!9280)) b!66876))

(assert (= (and d!13805 (not res!36117)) b!66877))

(declare-fun m!61315 () Bool)

(assert (=> d!13805 m!61315))

(declare-fun m!61317 () Bool)

(assert (=> b!66875 m!61317))

(declare-fun m!61319 () Bool)

(assert (=> b!66875 m!61319))

(assert (=> b!66875 m!61319))

(declare-fun m!61321 () Bool)

(assert (=> b!66875 m!61321))

(assert (=> b!66877 m!61319))

(assert (=> b!66877 m!61319))

(assert (=> b!66877 m!61321))

(assert (=> b!66496 d!13805))

(declare-fun d!13807 () Bool)

(declare-fun lt!28857 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!70 (List!1490) (InoxSet tuple2!2108))

(assert (=> d!13807 (= lt!28857 (select (content!70 (toList!723 lt!28656)) lt!28503))))

(declare-fun e!43869 () Bool)

(assert (=> d!13807 (= lt!28857 e!43869)))

(declare-fun res!36123 () Bool)

(assert (=> d!13807 (=> (not res!36123) (not e!43869))))

(assert (=> d!13807 (= res!36123 ((_ is Cons!1486) (toList!723 lt!28656)))))

(assert (=> d!13807 (= (contains!718 (toList!723 lt!28656) lt!28503) lt!28857)))

(declare-fun b!66882 () Bool)

(declare-fun e!43870 () Bool)

(assert (=> b!66882 (= e!43869 e!43870)))

(declare-fun res!36122 () Bool)

(assert (=> b!66882 (=> res!36122 e!43870)))

(assert (=> b!66882 (= res!36122 (= (h!2070 (toList!723 lt!28656)) lt!28503))))

(declare-fun b!66883 () Bool)

(assert (=> b!66883 (= e!43870 (contains!718 (t!4976 (toList!723 lt!28656)) lt!28503))))

(assert (= (and d!13807 res!36123) b!66882))

(assert (= (and b!66882 (not res!36122)) b!66883))

(declare-fun m!61323 () Bool)

(assert (=> d!13807 m!61323))

(declare-fun m!61325 () Bool)

(assert (=> d!13807 m!61325))

(declare-fun m!61327 () Bool)

(assert (=> b!66883 m!61327))

(assert (=> b!66517 d!13807))

(declare-fun b!66884 () Bool)

(declare-fun e!43872 () Bool)

(declare-fun call!5592 () Bool)

(assert (=> b!66884 (= e!43872 call!5592)))

(declare-fun b!66885 () Bool)

(declare-fun e!43873 () Bool)

(assert (=> b!66885 (= e!43873 e!43872)))

(declare-fun c!9281 () Bool)

(assert (=> b!66885 (= c!9281 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!66887 () Bool)

(declare-fun e!43871 () Bool)

(assert (=> b!66887 (= e!43871 e!43873)))

(declare-fun res!36124 () Bool)

(assert (=> b!66887 (=> (not res!36124) (not e!43873))))

(declare-fun e!43874 () Bool)

(assert (=> b!66887 (= res!36124 (not e!43874))))

(declare-fun res!36126 () Bool)

(assert (=> b!66887 (=> (not res!36126) (not e!43874))))

(assert (=> b!66887 (= res!36126 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!5589 () Bool)

(assert (=> bm!5589 (= call!5592 (arrayNoDuplicates!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9281 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9174 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488) Nil!1488)) (ite c!9174 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488) Nil!1488))))))

(declare-fun b!66888 () Bool)

(assert (=> b!66888 (= e!43874 (contains!719 (ite c!9174 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488) Nil!1488) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!66886 () Bool)

(assert (=> b!66886 (= e!43872 call!5592)))

(declare-fun d!13809 () Bool)

(declare-fun res!36125 () Bool)

(assert (=> d!13809 (=> res!36125 e!43871)))

(assert (=> d!13809 (= res!36125 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(assert (=> d!13809 (= (arrayNoDuplicates!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!9174 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488) Nil!1488)) e!43871)))

(assert (= (and d!13809 (not res!36125)) b!66887))

(assert (= (and b!66887 res!36126) b!66888))

(assert (= (and b!66887 res!36124) b!66885))

(assert (= (and b!66885 c!9281) b!66886))

(assert (= (and b!66885 (not c!9281)) b!66884))

(assert (= (or b!66886 b!66884) bm!5589))

(declare-fun m!61329 () Bool)

(assert (=> b!66885 m!61329))

(assert (=> b!66885 m!61329))

(declare-fun m!61331 () Bool)

(assert (=> b!66885 m!61331))

(assert (=> b!66887 m!61329))

(assert (=> b!66887 m!61329))

(assert (=> b!66887 m!61331))

(assert (=> bm!5589 m!61329))

(declare-fun m!61333 () Bool)

(assert (=> bm!5589 m!61333))

(assert (=> b!66888 m!61329))

(assert (=> b!66888 m!61329))

(declare-fun m!61335 () Bool)

(assert (=> b!66888 m!61335))

(assert (=> bm!5492 d!13809))

(declare-fun d!13811 () Bool)

(declare-fun e!43876 () Bool)

(assert (=> d!13811 e!43876))

(declare-fun res!36127 () Bool)

(assert (=> d!13811 (=> res!36127 e!43876)))

(declare-fun lt!28861 () Bool)

(assert (=> d!13811 (= res!36127 (not lt!28861))))

(declare-fun lt!28858 () Bool)

(assert (=> d!13811 (= lt!28861 lt!28858)))

(declare-fun lt!28859 () Unit!1836)

(declare-fun e!43875 () Unit!1836)

(assert (=> d!13811 (= lt!28859 e!43875)))

(declare-fun c!9282 () Bool)

(assert (=> d!13811 (= c!9282 lt!28858)))

(assert (=> d!13811 (= lt!28858 (containsKey!133 (toList!723 lt!28644) (_1!1064 lt!28500)))))

(assert (=> d!13811 (= (contains!716 lt!28644 (_1!1064 lt!28500)) lt!28861)))

(declare-fun b!66889 () Bool)

(declare-fun lt!28860 () Unit!1836)

(assert (=> b!66889 (= e!43875 lt!28860)))

(assert (=> b!66889 (= lt!28860 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28644) (_1!1064 lt!28500)))))

(assert (=> b!66889 (isDefined!83 (getValueByKey!129 (toList!723 lt!28644) (_1!1064 lt!28500)))))

(declare-fun b!66890 () Bool)

(declare-fun Unit!1854 () Unit!1836)

(assert (=> b!66890 (= e!43875 Unit!1854)))

(declare-fun b!66891 () Bool)

(assert (=> b!66891 (= e!43876 (isDefined!83 (getValueByKey!129 (toList!723 lt!28644) (_1!1064 lt!28500))))))

(assert (= (and d!13811 c!9282) b!66889))

(assert (= (and d!13811 (not c!9282)) b!66890))

(assert (= (and d!13811 (not res!36127)) b!66891))

(declare-fun m!61337 () Bool)

(assert (=> d!13811 m!61337))

(declare-fun m!61339 () Bool)

(assert (=> b!66889 m!61339))

(assert (=> b!66889 m!60921))

(assert (=> b!66889 m!60921))

(declare-fun m!61341 () Bool)

(assert (=> b!66889 m!61341))

(assert (=> b!66891 m!60921))

(assert (=> b!66891 m!60921))

(assert (=> b!66891 m!61341))

(assert (=> d!13713 d!13811))

(declare-fun b!66893 () Bool)

(declare-fun e!43877 () Option!135)

(declare-fun e!43878 () Option!135)

(assert (=> b!66893 (= e!43877 e!43878)))

(declare-fun c!9284 () Bool)

(assert (=> b!66893 (= c!9284 (and ((_ is Cons!1486) lt!28646) (not (= (_1!1064 (h!2070 lt!28646)) (_1!1064 lt!28500)))))))

(declare-fun d!13813 () Bool)

(declare-fun c!9283 () Bool)

(assert (=> d!13813 (= c!9283 (and ((_ is Cons!1486) lt!28646) (= (_1!1064 (h!2070 lt!28646)) (_1!1064 lt!28500))))))

(assert (=> d!13813 (= (getValueByKey!129 lt!28646 (_1!1064 lt!28500)) e!43877)))

(declare-fun b!66894 () Bool)

(assert (=> b!66894 (= e!43878 (getValueByKey!129 (t!4976 lt!28646) (_1!1064 lt!28500)))))

(declare-fun b!66892 () Bool)

(assert (=> b!66892 (= e!43877 (Some!134 (_2!1064 (h!2070 lt!28646))))))

(declare-fun b!66895 () Bool)

(assert (=> b!66895 (= e!43878 None!133)))

(assert (= (and d!13813 c!9283) b!66892))

(assert (= (and d!13813 (not c!9283)) b!66893))

(assert (= (and b!66893 c!9284) b!66894))

(assert (= (and b!66893 (not c!9284)) b!66895))

(declare-fun m!61343 () Bool)

(assert (=> b!66894 m!61343))

(assert (=> d!13713 d!13813))

(declare-fun d!13815 () Bool)

(assert (=> d!13815 (= (getValueByKey!129 lt!28646 (_1!1064 lt!28500)) (Some!134 (_2!1064 lt!28500)))))

(declare-fun lt!28862 () Unit!1836)

(assert (=> d!13815 (= lt!28862 (choose!376 lt!28646 (_1!1064 lt!28500) (_2!1064 lt!28500)))))

(declare-fun e!43879 () Bool)

(assert (=> d!13815 e!43879))

(declare-fun res!36128 () Bool)

(assert (=> d!13815 (=> (not res!36128) (not e!43879))))

(assert (=> d!13815 (= res!36128 (isStrictlySorted!284 lt!28646))))

(assert (=> d!13815 (= (lemmaContainsTupThenGetReturnValue!48 lt!28646 (_1!1064 lt!28500) (_2!1064 lt!28500)) lt!28862)))

(declare-fun b!66896 () Bool)

(declare-fun res!36129 () Bool)

(assert (=> b!66896 (=> (not res!36129) (not e!43879))))

(assert (=> b!66896 (= res!36129 (containsKey!133 lt!28646 (_1!1064 lt!28500)))))

(declare-fun b!66897 () Bool)

(assert (=> b!66897 (= e!43879 (contains!718 lt!28646 (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))))))

(assert (= (and d!13815 res!36128) b!66896))

(assert (= (and b!66896 res!36129) b!66897))

(assert (=> d!13815 m!60915))

(declare-fun m!61345 () Bool)

(assert (=> d!13815 m!61345))

(declare-fun m!61347 () Bool)

(assert (=> d!13815 m!61347))

(declare-fun m!61349 () Bool)

(assert (=> b!66896 m!61349))

(declare-fun m!61351 () Bool)

(assert (=> b!66897 m!61351))

(assert (=> d!13713 d!13815))

(declare-fun b!66898 () Bool)

(declare-fun e!43881 () List!1490)

(declare-fun call!5594 () List!1490)

(assert (=> b!66898 (= e!43881 call!5594)))

(declare-fun b!66899 () Bool)

(declare-fun e!43880 () List!1490)

(declare-fun call!5593 () List!1490)

(assert (=> b!66899 (= e!43880 call!5593)))

(declare-fun bm!5590 () Bool)

(declare-fun call!5595 () List!1490)

(assert (=> bm!5590 (= call!5593 call!5595)))

(declare-fun c!9286 () Bool)

(declare-fun bm!5591 () Bool)

(declare-fun e!43884 () List!1490)

(assert (=> bm!5591 (= call!5594 ($colon$colon!62 e!43884 (ite c!9286 (h!2070 (toList!723 lt!28505)) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500)))))))

(declare-fun c!9288 () Bool)

(assert (=> bm!5591 (= c!9288 c!9286)))

(declare-fun d!13817 () Bool)

(declare-fun e!43882 () Bool)

(assert (=> d!13817 e!43882))

(declare-fun res!36131 () Bool)

(assert (=> d!13817 (=> (not res!36131) (not e!43882))))

(declare-fun lt!28863 () List!1490)

(assert (=> d!13817 (= res!36131 (isStrictlySorted!284 lt!28863))))

(assert (=> d!13817 (= lt!28863 e!43881)))

(assert (=> d!13817 (= c!9286 (and ((_ is Cons!1486) (toList!723 lt!28505)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28505))) (_1!1064 lt!28500))))))

(assert (=> d!13817 (isStrictlySorted!284 (toList!723 lt!28505))))

(assert (=> d!13817 (= (insertStrictlySorted!50 (toList!723 lt!28505) (_1!1064 lt!28500) (_2!1064 lt!28500)) lt!28863)))

(declare-fun bm!5592 () Bool)

(assert (=> bm!5592 (= call!5595 call!5594)))

(declare-fun b!66900 () Bool)

(assert (=> b!66900 (= e!43884 (insertStrictlySorted!50 (t!4976 (toList!723 lt!28505)) (_1!1064 lt!28500) (_2!1064 lt!28500)))))

(declare-fun b!66901 () Bool)

(declare-fun c!9287 () Bool)

(assert (=> b!66901 (= c!9287 (and ((_ is Cons!1486) (toList!723 lt!28505)) (bvsgt (_1!1064 (h!2070 (toList!723 lt!28505))) (_1!1064 lt!28500))))))

(declare-fun e!43883 () List!1490)

(assert (=> b!66901 (= e!43883 e!43880)))

(declare-fun b!66902 () Bool)

(assert (=> b!66902 (= e!43883 call!5595)))

(declare-fun b!66903 () Bool)

(declare-fun res!36130 () Bool)

(assert (=> b!66903 (=> (not res!36130) (not e!43882))))

(assert (=> b!66903 (= res!36130 (containsKey!133 lt!28863 (_1!1064 lt!28500)))))

(declare-fun b!66904 () Bool)

(assert (=> b!66904 (= e!43880 call!5593)))

(declare-fun b!66905 () Bool)

(declare-fun c!9285 () Bool)

(assert (=> b!66905 (= e!43884 (ite c!9285 (t!4976 (toList!723 lt!28505)) (ite c!9287 (Cons!1486 (h!2070 (toList!723 lt!28505)) (t!4976 (toList!723 lt!28505))) Nil!1487)))))

(declare-fun b!66906 () Bool)

(assert (=> b!66906 (= e!43882 (contains!718 lt!28863 (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))))))

(declare-fun b!66907 () Bool)

(assert (=> b!66907 (= e!43881 e!43883)))

(assert (=> b!66907 (= c!9285 (and ((_ is Cons!1486) (toList!723 lt!28505)) (= (_1!1064 (h!2070 (toList!723 lt!28505))) (_1!1064 lt!28500))))))

(assert (= (and d!13817 c!9286) b!66898))

(assert (= (and d!13817 (not c!9286)) b!66907))

(assert (= (and b!66907 c!9285) b!66902))

(assert (= (and b!66907 (not c!9285)) b!66901))

(assert (= (and b!66901 c!9287) b!66904))

(assert (= (and b!66901 (not c!9287)) b!66899))

(assert (= (or b!66904 b!66899) bm!5590))

(assert (= (or b!66902 bm!5590) bm!5592))

(assert (= (or b!66898 bm!5592) bm!5591))

(assert (= (and bm!5591 c!9288) b!66900))

(assert (= (and bm!5591 (not c!9288)) b!66905))

(assert (= (and d!13817 res!36131) b!66903))

(assert (= (and b!66903 res!36130) b!66906))

(declare-fun m!61353 () Bool)

(assert (=> bm!5591 m!61353))

(declare-fun m!61355 () Bool)

(assert (=> d!13817 m!61355))

(declare-fun m!61357 () Bool)

(assert (=> d!13817 m!61357))

(declare-fun m!61359 () Bool)

(assert (=> b!66903 m!61359))

(declare-fun m!61361 () Bool)

(assert (=> b!66900 m!61361))

(declare-fun m!61363 () Bool)

(assert (=> b!66906 m!61363))

(assert (=> d!13713 d!13817))

(declare-fun d!13819 () Bool)

(assert (=> d!13819 (isDefined!83 (getValueByKey!129 (toList!723 lt!28501) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun lt!28866 () Unit!1836)

(declare-fun choose!378 (List!1490 (_ BitVec 64)) Unit!1836)

(assert (=> d!13819 (= lt!28866 (choose!378 (toList!723 lt!28501) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun e!43887 () Bool)

(assert (=> d!13819 e!43887))

(declare-fun res!36134 () Bool)

(assert (=> d!13819 (=> (not res!36134) (not e!43887))))

(assert (=> d!13819 (= res!36134 (isStrictlySorted!284 (toList!723 lt!28501)))))

(assert (=> d!13819 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28501) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) lt!28866)))

(declare-fun b!66910 () Bool)

(assert (=> b!66910 (= e!43887 (containsKey!133 (toList!723 lt!28501) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (= (and d!13819 res!36134) b!66910))

(assert (=> d!13819 m!60719))

(assert (=> d!13819 m!60989))

(assert (=> d!13819 m!60989))

(assert (=> d!13819 m!60991))

(assert (=> d!13819 m!60719))

(declare-fun m!61365 () Bool)

(assert (=> d!13819 m!61365))

(declare-fun m!61367 () Bool)

(assert (=> d!13819 m!61367))

(assert (=> b!66910 m!60719))

(assert (=> b!66910 m!60985))

(assert (=> b!66551 d!13819))

(declare-fun d!13821 () Bool)

(declare-fun isEmpty!314 (Option!135) Bool)

(assert (=> d!13821 (= (isDefined!83 (getValueByKey!129 (toList!723 lt!28501) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))) (not (isEmpty!314 (getValueByKey!129 (toList!723 lt!28501) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))))

(declare-fun bs!2851 () Bool)

(assert (= bs!2851 d!13821))

(assert (=> bs!2851 m!60989))

(declare-fun m!61369 () Bool)

(assert (=> bs!2851 m!61369))

(assert (=> b!66551 d!13821))

(declare-fun b!66912 () Bool)

(declare-fun e!43888 () Option!135)

(declare-fun e!43889 () Option!135)

(assert (=> b!66912 (= e!43888 e!43889)))

(declare-fun c!9290 () Bool)

(assert (=> b!66912 (= c!9290 (and ((_ is Cons!1486) (toList!723 lt!28501)) (not (= (_1!1064 (h!2070 (toList!723 lt!28501))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))))

(declare-fun c!9289 () Bool)

(declare-fun d!13823 () Bool)

(assert (=> d!13823 (= c!9289 (and ((_ is Cons!1486) (toList!723 lt!28501)) (= (_1!1064 (h!2070 (toList!723 lt!28501))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))))

(assert (=> d!13823 (= (getValueByKey!129 (toList!723 lt!28501) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) e!43888)))

(declare-fun b!66913 () Bool)

(assert (=> b!66913 (= e!43889 (getValueByKey!129 (t!4976 (toList!723 lt!28501)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun b!66911 () Bool)

(assert (=> b!66911 (= e!43888 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28501)))))))

(declare-fun b!66914 () Bool)

(assert (=> b!66914 (= e!43889 None!133)))

(assert (= (and d!13823 c!9289) b!66911))

(assert (= (and d!13823 (not c!9289)) b!66912))

(assert (= (and b!66912 c!9290) b!66913))

(assert (= (and b!66912 (not c!9290)) b!66914))

(assert (=> b!66913 m!60719))

(declare-fun m!61371 () Bool)

(assert (=> b!66913 m!61371))

(assert (=> b!66551 d!13823))

(declare-fun b!66916 () Bool)

(declare-fun e!43890 () Option!135)

(declare-fun e!43891 () Option!135)

(assert (=> b!66916 (= e!43890 e!43891)))

(declare-fun c!9292 () Bool)

(assert (=> b!66916 (= c!9292 (and ((_ is Cons!1486) (toList!723 lt!28652)) (not (= (_1!1064 (h!2070 (toList!723 lt!28652))) (_1!1064 lt!28503)))))))

(declare-fun d!13825 () Bool)

(declare-fun c!9291 () Bool)

(assert (=> d!13825 (= c!9291 (and ((_ is Cons!1486) (toList!723 lt!28652)) (= (_1!1064 (h!2070 (toList!723 lt!28652))) (_1!1064 lt!28503))))))

(assert (=> d!13825 (= (getValueByKey!129 (toList!723 lt!28652) (_1!1064 lt!28503)) e!43890)))

(declare-fun b!66917 () Bool)

(assert (=> b!66917 (= e!43891 (getValueByKey!129 (t!4976 (toList!723 lt!28652)) (_1!1064 lt!28503)))))

(declare-fun b!66915 () Bool)

(assert (=> b!66915 (= e!43890 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28652)))))))

(declare-fun b!66918 () Bool)

(assert (=> b!66918 (= e!43891 None!133)))

(assert (= (and d!13825 c!9291) b!66915))

(assert (= (and d!13825 (not c!9291)) b!66916))

(assert (= (and b!66916 c!9292) b!66917))

(assert (= (and b!66916 (not c!9292)) b!66918))

(declare-fun m!61373 () Bool)

(assert (=> b!66917 m!61373))

(assert (=> b!66514 d!13825))

(declare-fun d!13827 () Bool)

(declare-fun get!1130 (Option!135) V!2915)

(assert (=> d!13827 (= (apply!72 lt!28596 lt!28610) (get!1130 (getValueByKey!129 (toList!723 lt!28596) lt!28610)))))

(declare-fun bs!2852 () Bool)

(assert (= bs!2852 d!13827))

(declare-fun m!61375 () Bool)

(assert (=> bs!2852 m!61375))

(assert (=> bs!2852 m!61375))

(declare-fun m!61377 () Bool)

(assert (=> bs!2852 m!61377))

(assert (=> b!66456 d!13827))

(declare-fun d!13829 () Bool)

(assert (=> d!13829 (= (apply!72 (+!87 lt!28596 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28610) (get!1130 (getValueByKey!129 (toList!723 (+!87 lt!28596 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28610)))))

(declare-fun bs!2853 () Bool)

(assert (= bs!2853 d!13829))

(declare-fun m!61379 () Bool)

(assert (=> bs!2853 m!61379))

(assert (=> bs!2853 m!61379))

(declare-fun m!61381 () Bool)

(assert (=> bs!2853 m!61381))

(assert (=> b!66456 d!13829))

(declare-fun d!13831 () Bool)

(assert (=> d!13831 (= (apply!72 (+!87 lt!28608 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28605) (get!1130 (getValueByKey!129 (toList!723 (+!87 lt!28608 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28605)))))

(declare-fun bs!2854 () Bool)

(assert (= bs!2854 d!13831))

(declare-fun m!61383 () Bool)

(assert (=> bs!2854 m!61383))

(assert (=> bs!2854 m!61383))

(declare-fun m!61385 () Bool)

(assert (=> bs!2854 m!61385))

(assert (=> b!66456 d!13831))

(declare-fun d!13833 () Bool)

(assert (=> d!13833 (= (apply!72 lt!28608 lt!28605) (get!1130 (getValueByKey!129 (toList!723 lt!28608) lt!28605)))))

(declare-fun bs!2855 () Bool)

(assert (= bs!2855 d!13833))

(declare-fun m!61387 () Bool)

(assert (=> bs!2855 m!61387))

(assert (=> bs!2855 m!61387))

(declare-fun m!61389 () Bool)

(assert (=> bs!2855 m!61389))

(assert (=> b!66456 d!13833))

(declare-fun d!13835 () Bool)

(declare-fun e!43892 () Bool)

(assert (=> d!13835 e!43892))

(declare-fun res!36136 () Bool)

(assert (=> d!13835 (=> (not res!36136) (not e!43892))))

(declare-fun lt!28868 () ListLongMap!1415)

(assert (=> d!13835 (= res!36136 (contains!716 lt!28868 (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun lt!28870 () List!1490)

(assert (=> d!13835 (= lt!28868 (ListLongMap!1416 lt!28870))))

(declare-fun lt!28869 () Unit!1836)

(declare-fun lt!28867 () Unit!1836)

(assert (=> d!13835 (= lt!28869 lt!28867)))

(assert (=> d!13835 (= (getValueByKey!129 lt!28870 (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13835 (= lt!28867 (lemmaContainsTupThenGetReturnValue!48 lt!28870 (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13835 (= lt!28870 (insertStrictlySorted!50 (toList!723 lt!28611) (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13835 (= (+!87 lt!28611 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28868)))

(declare-fun b!66919 () Bool)

(declare-fun res!36135 () Bool)

(assert (=> b!66919 (=> (not res!36135) (not e!43892))))

(assert (=> b!66919 (= res!36135 (= (getValueByKey!129 (toList!723 lt!28868) (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!66920 () Bool)

(assert (=> b!66920 (= e!43892 (contains!718 (toList!723 lt!28868) (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(assert (= (and d!13835 res!36136) b!66919))

(assert (= (and b!66919 res!36135) b!66920))

(declare-fun m!61391 () Bool)

(assert (=> d!13835 m!61391))

(declare-fun m!61393 () Bool)

(assert (=> d!13835 m!61393))

(declare-fun m!61395 () Bool)

(assert (=> d!13835 m!61395))

(declare-fun m!61397 () Bool)

(assert (=> d!13835 m!61397))

(declare-fun m!61399 () Bool)

(assert (=> b!66919 m!61399))

(declare-fun m!61401 () Bool)

(assert (=> b!66920 m!61401))

(assert (=> b!66456 d!13835))

(declare-fun d!13837 () Bool)

(assert (=> d!13837 (= (apply!72 (+!87 lt!28596 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28610) (apply!72 lt!28596 lt!28610))))

(declare-fun lt!28873 () Unit!1836)

(declare-fun choose!379 (ListLongMap!1415 (_ BitVec 64) V!2915 (_ BitVec 64)) Unit!1836)

(assert (=> d!13837 (= lt!28873 (choose!379 lt!28596 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))) lt!28610))))

(declare-fun e!43895 () Bool)

(assert (=> d!13837 e!43895))

(declare-fun res!36139 () Bool)

(assert (=> d!13837 (=> (not res!36139) (not e!43895))))

(assert (=> d!13837 (= res!36139 (contains!716 lt!28596 lt!28610))))

(assert (=> d!13837 (= (addApplyDifferent!48 lt!28596 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))) lt!28610) lt!28873)))

(declare-fun b!66924 () Bool)

(assert (=> b!66924 (= e!43895 (not (= lt!28610 lt!28601)))))

(assert (= (and d!13837 res!36139) b!66924))

(assert (=> d!13837 m!60863))

(assert (=> d!13837 m!60869))

(declare-fun m!61403 () Bool)

(assert (=> d!13837 m!61403))

(declare-fun m!61405 () Bool)

(assert (=> d!13837 m!61405))

(assert (=> d!13837 m!60869))

(assert (=> d!13837 m!60879))

(assert (=> b!66456 d!13837))

(declare-fun d!13839 () Bool)

(declare-fun e!43897 () Bool)

(assert (=> d!13839 e!43897))

(declare-fun res!36140 () Bool)

(assert (=> d!13839 (=> res!36140 e!43897)))

(declare-fun lt!28877 () Bool)

(assert (=> d!13839 (= res!36140 (not lt!28877))))

(declare-fun lt!28874 () Bool)

(assert (=> d!13839 (= lt!28877 lt!28874)))

(declare-fun lt!28875 () Unit!1836)

(declare-fun e!43896 () Unit!1836)

(assert (=> d!13839 (= lt!28875 e!43896)))

(declare-fun c!9293 () Bool)

(assert (=> d!13839 (= c!9293 lt!28874)))

(assert (=> d!13839 (= lt!28874 (containsKey!133 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28600))))

(assert (=> d!13839 (= (contains!716 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28600) lt!28877)))

(declare-fun b!66925 () Bool)

(declare-fun lt!28876 () Unit!1836)

(assert (=> b!66925 (= e!43896 lt!28876)))

(assert (=> b!66925 (= lt!28876 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28600))))

(assert (=> b!66925 (isDefined!83 (getValueByKey!129 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28600))))

(declare-fun b!66926 () Bool)

(declare-fun Unit!1855 () Unit!1836)

(assert (=> b!66926 (= e!43896 Unit!1855)))

(declare-fun b!66927 () Bool)

(assert (=> b!66927 (= e!43897 (isDefined!83 (getValueByKey!129 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28600)))))

(assert (= (and d!13839 c!9293) b!66925))

(assert (= (and d!13839 (not c!9293)) b!66926))

(assert (= (and d!13839 (not res!36140)) b!66927))

(declare-fun m!61407 () Bool)

(assert (=> d!13839 m!61407))

(declare-fun m!61409 () Bool)

(assert (=> b!66925 m!61409))

(declare-fun m!61411 () Bool)

(assert (=> b!66925 m!61411))

(assert (=> b!66925 m!61411))

(declare-fun m!61413 () Bool)

(assert (=> b!66925 m!61413))

(assert (=> b!66927 m!61411))

(assert (=> b!66927 m!61411))

(assert (=> b!66927 m!61413))

(assert (=> b!66456 d!13839))

(declare-fun d!13841 () Bool)

(declare-fun e!43898 () Bool)

(assert (=> d!13841 e!43898))

(declare-fun res!36142 () Bool)

(assert (=> d!13841 (=> (not res!36142) (not e!43898))))

(declare-fun lt!28879 () ListLongMap!1415)

(assert (=> d!13841 (= res!36142 (contains!716 lt!28879 (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun lt!28881 () List!1490)

(assert (=> d!13841 (= lt!28879 (ListLongMap!1416 lt!28881))))

(declare-fun lt!28880 () Unit!1836)

(declare-fun lt!28878 () Unit!1836)

(assert (=> d!13841 (= lt!28880 lt!28878)))

(assert (=> d!13841 (= (getValueByKey!129 lt!28881 (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13841 (= lt!28878 (lemmaContainsTupThenGetReturnValue!48 lt!28881 (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13841 (= lt!28881 (insertStrictlySorted!50 (toList!723 lt!28608) (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13841 (= (+!87 lt!28608 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28879)))

(declare-fun b!66928 () Bool)

(declare-fun res!36141 () Bool)

(assert (=> b!66928 (=> (not res!36141) (not e!43898))))

(assert (=> b!66928 (= res!36141 (= (getValueByKey!129 (toList!723 lt!28879) (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!66929 () Bool)

(assert (=> b!66929 (= e!43898 (contains!718 (toList!723 lt!28879) (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(assert (= (and d!13841 res!36142) b!66928))

(assert (= (and b!66928 res!36141) b!66929))

(declare-fun m!61415 () Bool)

(assert (=> d!13841 m!61415))

(declare-fun m!61417 () Bool)

(assert (=> d!13841 m!61417))

(declare-fun m!61419 () Bool)

(assert (=> d!13841 m!61419))

(declare-fun m!61421 () Bool)

(assert (=> d!13841 m!61421))

(declare-fun m!61423 () Bool)

(assert (=> b!66928 m!61423))

(declare-fun m!61425 () Bool)

(assert (=> b!66929 m!61425))

(assert (=> b!66456 d!13841))

(declare-fun d!13843 () Bool)

(declare-fun e!43899 () Bool)

(assert (=> d!13843 e!43899))

(declare-fun res!36144 () Bool)

(assert (=> d!13843 (=> (not res!36144) (not e!43899))))

(declare-fun lt!28883 () ListLongMap!1415)

(assert (=> d!13843 (= res!36144 (contains!716 lt!28883 (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun lt!28885 () List!1490)

(assert (=> d!13843 (= lt!28883 (ListLongMap!1416 lt!28885))))

(declare-fun lt!28884 () Unit!1836)

(declare-fun lt!28882 () Unit!1836)

(assert (=> d!13843 (= lt!28884 lt!28882)))

(assert (=> d!13843 (= (getValueByKey!129 lt!28885 (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13843 (= lt!28882 (lemmaContainsTupThenGetReturnValue!48 lt!28885 (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13843 (= lt!28885 (insertStrictlySorted!50 (toList!723 lt!28597) (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13843 (= (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28883)))

(declare-fun b!66930 () Bool)

(declare-fun res!36143 () Bool)

(assert (=> b!66930 (=> (not res!36143) (not e!43899))))

(assert (=> b!66930 (= res!36143 (= (getValueByKey!129 (toList!723 lt!28883) (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!66931 () Bool)

(assert (=> b!66931 (= e!43899 (contains!718 (toList!723 lt!28883) (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(assert (= (and d!13843 res!36144) b!66930))

(assert (= (and b!66930 res!36143) b!66931))

(declare-fun m!61427 () Bool)

(assert (=> d!13843 m!61427))

(declare-fun m!61429 () Bool)

(assert (=> d!13843 m!61429))

(declare-fun m!61431 () Bool)

(assert (=> d!13843 m!61431))

(declare-fun m!61433 () Bool)

(assert (=> d!13843 m!61433))

(declare-fun m!61435 () Bool)

(assert (=> b!66930 m!61435))

(declare-fun m!61437 () Bool)

(assert (=> b!66931 m!61437))

(assert (=> b!66456 d!13843))

(declare-fun d!13845 () Bool)

(assert (=> d!13845 (= (apply!72 lt!28611 lt!28598) (get!1130 (getValueByKey!129 (toList!723 lt!28611) lt!28598)))))

(declare-fun bs!2856 () Bool)

(assert (= bs!2856 d!13845))

(declare-fun m!61439 () Bool)

(assert (=> bs!2856 m!61439))

(assert (=> bs!2856 m!61439))

(declare-fun m!61441 () Bool)

(assert (=> bs!2856 m!61441))

(assert (=> b!66456 d!13845))

(assert (=> b!66456 d!13711))

(declare-fun d!13847 () Bool)

(assert (=> d!13847 (= (apply!72 (+!87 lt!28611 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28598) (get!1130 (getValueByKey!129 (toList!723 (+!87 lt!28611 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28598)))))

(declare-fun bs!2857 () Bool)

(assert (= bs!2857 d!13847))

(declare-fun m!61443 () Bool)

(assert (=> bs!2857 m!61443))

(assert (=> bs!2857 m!61443))

(declare-fun m!61445 () Bool)

(assert (=> bs!2857 m!61445))

(assert (=> b!66456 d!13847))

(declare-fun d!13849 () Bool)

(assert (=> d!13849 (= (apply!72 (+!87 lt!28608 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28605) (apply!72 lt!28608 lt!28605))))

(declare-fun lt!28886 () Unit!1836)

(assert (=> d!13849 (= lt!28886 (choose!379 lt!28608 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) lt!28605))))

(declare-fun e!43900 () Bool)

(assert (=> d!13849 e!43900))

(declare-fun res!36145 () Bool)

(assert (=> d!13849 (=> (not res!36145) (not e!43900))))

(assert (=> d!13849 (= res!36145 (contains!716 lt!28608 lt!28605))))

(assert (=> d!13849 (= (addApplyDifferent!48 lt!28608 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) lt!28605) lt!28886)))

(declare-fun b!66932 () Bool)

(assert (=> b!66932 (= e!43900 (not (= lt!28605 lt!28603)))))

(assert (= (and d!13849 res!36145) b!66932))

(assert (=> d!13849 m!60885))

(assert (=> d!13849 m!60859))

(declare-fun m!61447 () Bool)

(assert (=> d!13849 m!61447))

(declare-fun m!61449 () Bool)

(assert (=> d!13849 m!61449))

(assert (=> d!13849 m!60859))

(assert (=> d!13849 m!60861))

(assert (=> b!66456 d!13849))

(declare-fun d!13851 () Bool)

(declare-fun e!43901 () Bool)

(assert (=> d!13851 e!43901))

(declare-fun res!36147 () Bool)

(assert (=> d!13851 (=> (not res!36147) (not e!43901))))

(declare-fun lt!28888 () ListLongMap!1415)

(assert (=> d!13851 (= res!36147 (contains!716 lt!28888 (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun lt!28890 () List!1490)

(assert (=> d!13851 (= lt!28888 (ListLongMap!1416 lt!28890))))

(declare-fun lt!28889 () Unit!1836)

(declare-fun lt!28887 () Unit!1836)

(assert (=> d!13851 (= lt!28889 lt!28887)))

(assert (=> d!13851 (= (getValueByKey!129 lt!28890 (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13851 (= lt!28887 (lemmaContainsTupThenGetReturnValue!48 lt!28890 (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13851 (= lt!28890 (insertStrictlySorted!50 (toList!723 lt!28596) (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13851 (= (+!87 lt!28596 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28888)))

(declare-fun b!66933 () Bool)

(declare-fun res!36146 () Bool)

(assert (=> b!66933 (=> (not res!36146) (not e!43901))))

(assert (=> b!66933 (= res!36146 (= (getValueByKey!129 (toList!723 lt!28888) (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!66934 () Bool)

(assert (=> b!66934 (= e!43901 (contains!718 (toList!723 lt!28888) (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(assert (= (and d!13851 res!36147) b!66933))

(assert (= (and b!66933 res!36146) b!66934))

(declare-fun m!61451 () Bool)

(assert (=> d!13851 m!61451))

(declare-fun m!61453 () Bool)

(assert (=> d!13851 m!61453))

(declare-fun m!61455 () Bool)

(assert (=> d!13851 m!61455))

(declare-fun m!61457 () Bool)

(assert (=> d!13851 m!61457))

(declare-fun m!61459 () Bool)

(assert (=> b!66933 m!61459))

(declare-fun m!61461 () Bool)

(assert (=> b!66934 m!61461))

(assert (=> b!66456 d!13851))

(declare-fun d!13853 () Bool)

(assert (=> d!13853 (= (apply!72 (+!87 lt!28611 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28598) (apply!72 lt!28611 lt!28598))))

(declare-fun lt!28891 () Unit!1836)

(assert (=> d!13853 (= lt!28891 (choose!379 lt!28611 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))) lt!28598))))

(declare-fun e!43902 () Bool)

(assert (=> d!13853 e!43902))

(declare-fun res!36148 () Bool)

(assert (=> d!13853 (=> (not res!36148) (not e!43902))))

(assert (=> d!13853 (= res!36148 (contains!716 lt!28611 lt!28598))))

(assert (=> d!13853 (= (addApplyDifferent!48 lt!28611 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))) lt!28598) lt!28891)))

(declare-fun b!66935 () Bool)

(assert (=> b!66935 (= e!43902 (not (= lt!28598 lt!28602)))))

(assert (= (and d!13853 res!36148) b!66935))

(assert (=> d!13853 m!60871))

(assert (=> d!13853 m!60881))

(declare-fun m!61463 () Bool)

(assert (=> d!13853 m!61463))

(declare-fun m!61465 () Bool)

(assert (=> d!13853 m!61465))

(assert (=> d!13853 m!60881))

(assert (=> d!13853 m!60883))

(assert (=> b!66456 d!13853))

(declare-fun d!13855 () Bool)

(assert (=> d!13855 (contains!716 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28600)))

(declare-fun lt!28894 () Unit!1836)

(declare-fun choose!380 (ListLongMap!1415 (_ BitVec 64) V!2915 (_ BitVec 64)) Unit!1836)

(assert (=> d!13855 (= lt!28894 (choose!380 lt!28597 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) lt!28600))))

(assert (=> d!13855 (contains!716 lt!28597 lt!28600)))

(assert (=> d!13855 (= (addStillContains!48 lt!28597 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) lt!28600) lt!28894)))

(declare-fun bs!2858 () Bool)

(assert (= bs!2858 d!13855))

(assert (=> bs!2858 m!60865))

(assert (=> bs!2858 m!60865))

(assert (=> bs!2858 m!60867))

(declare-fun m!61467 () Bool)

(assert (=> bs!2858 m!61467))

(declare-fun m!61469 () Bool)

(assert (=> bs!2858 m!61469))

(assert (=> b!66456 d!13855))

(declare-fun d!13857 () Bool)

(declare-fun e!43903 () Bool)

(assert (=> d!13857 e!43903))

(declare-fun res!36150 () Bool)

(assert (=> d!13857 (=> (not res!36150) (not e!43903))))

(declare-fun lt!28896 () ListLongMap!1415)

(assert (=> d!13857 (= res!36150 (contains!716 lt!28896 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun lt!28898 () List!1490)

(assert (=> d!13857 (= lt!28896 (ListLongMap!1416 lt!28898))))

(declare-fun lt!28897 () Unit!1836)

(declare-fun lt!28895 () Unit!1836)

(assert (=> d!13857 (= lt!28897 lt!28895)))

(assert (=> d!13857 (= (getValueByKey!129 lt!28898 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (Some!134 (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!13857 (= lt!28895 (lemmaContainsTupThenGetReturnValue!48 lt!28898 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!13857 (= lt!28898 (insertStrictlySorted!50 (toList!723 call!5546) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!13857 (= (+!87 call!5546 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) lt!28896)))

(declare-fun b!66937 () Bool)

(declare-fun res!36149 () Bool)

(assert (=> b!66937 (=> (not res!36149) (not e!43903))))

(assert (=> b!66937 (= res!36149 (= (getValueByKey!129 (toList!723 lt!28896) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (Some!134 (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun b!66938 () Bool)

(assert (=> b!66938 (= e!43903 (contains!718 (toList!723 lt!28896) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))

(assert (= (and d!13857 res!36150) b!66937))

(assert (= (and b!66937 res!36149) b!66938))

(declare-fun m!61471 () Bool)

(assert (=> d!13857 m!61471))

(declare-fun m!61473 () Bool)

(assert (=> d!13857 m!61473))

(declare-fun m!61475 () Bool)

(assert (=> d!13857 m!61475))

(declare-fun m!61477 () Bool)

(assert (=> d!13857 m!61477))

(declare-fun m!61479 () Bool)

(assert (=> b!66937 m!61479))

(declare-fun m!61481 () Bool)

(assert (=> b!66938 m!61481))

(assert (=> b!66659 d!13857))

(declare-fun d!13859 () Bool)

(declare-fun e!43904 () Bool)

(assert (=> d!13859 e!43904))

(declare-fun res!36152 () Bool)

(assert (=> d!13859 (=> (not res!36152) (not e!43904))))

(declare-fun lt!28900 () ListLongMap!1415)

(assert (=> d!13859 (= res!36152 (contains!716 lt!28900 (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun lt!28902 () List!1490)

(assert (=> d!13859 (= lt!28900 (ListLongMap!1416 lt!28902))))

(declare-fun lt!28901 () Unit!1836)

(declare-fun lt!28899 () Unit!1836)

(assert (=> d!13859 (= lt!28901 lt!28899)))

(assert (=> d!13859 (= (getValueByKey!129 lt!28902 (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))) (Some!134 (_2!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (=> d!13859 (= lt!28899 (lemmaContainsTupThenGetReturnValue!48 lt!28902 (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (_2!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (=> d!13859 (= lt!28902 (insertStrictlySorted!50 (toList!723 e!43730) (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (_2!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (=> d!13859 (= (+!87 e!43730 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) lt!28900)))

(declare-fun b!66939 () Bool)

(declare-fun res!36151 () Bool)

(assert (=> b!66939 (=> (not res!36151) (not e!43904))))

(assert (=> b!66939 (= res!36151 (= (getValueByKey!129 (toList!723 lt!28900) (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))) (Some!134 (_2!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))))

(declare-fun b!66940 () Bool)

(assert (=> b!66940 (= e!43904 (contains!718 (toList!723 lt!28900) (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (= (and d!13859 res!36152) b!66939))

(assert (= (and b!66939 res!36151) b!66940))

(declare-fun m!61483 () Bool)

(assert (=> d!13859 m!61483))

(declare-fun m!61485 () Bool)

(assert (=> d!13859 m!61485))

(declare-fun m!61487 () Bool)

(assert (=> d!13859 m!61487))

(declare-fun m!61489 () Bool)

(assert (=> d!13859 m!61489))

(declare-fun m!61491 () Bool)

(assert (=> b!66939 m!61491))

(declare-fun m!61493 () Bool)

(assert (=> b!66940 m!61493))

(assert (=> bm!5550 d!13859))

(declare-fun d!13861 () Bool)

(declare-fun e!43907 () Bool)

(assert (=> d!13861 e!43907))

(declare-fun res!36158 () Bool)

(assert (=> d!13861 (=> (not res!36158) (not e!43907))))

(declare-fun lt!28908 () SeekEntryResult!243)

(assert (=> d!13861 (= res!36158 ((_ is Found!243) lt!28908))))

(assert (=> d!13861 (= lt!28908 (seekEntryOrOpen!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun lt!28907 () Unit!1836)

(declare-fun choose!381 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 64) Int) Unit!1836)

(assert (=> d!13861 (= lt!28907 (choose!381 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)))))

(assert (=> d!13861 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13861 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)) lt!28907)))

(declare-fun b!66945 () Bool)

(declare-fun res!36157 () Bool)

(assert (=> b!66945 (=> (not res!36157) (not e!43907))))

(assert (=> b!66945 (= res!36157 (inRange!0 (index!3101 lt!28908) (mask!6082 newMap!16)))))

(declare-fun b!66946 () Bool)

(assert (=> b!66946 (= e!43907 (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28908)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> b!66946 (and (bvsge (index!3101 lt!28908) #b00000000000000000000000000000000) (bvslt (index!3101 lt!28908) (size!2069 (_keys!3787 newMap!16))))))

(assert (= (and d!13861 res!36158) b!66945))

(assert (= (and b!66945 res!36157) b!66946))

(assert (=> d!13861 m!60719))

(assert (=> d!13861 m!60993))

(assert (=> d!13861 m!60719))

(declare-fun m!61495 () Bool)

(assert (=> d!13861 m!61495))

(assert (=> d!13861 m!61069))

(declare-fun m!61497 () Bool)

(assert (=> b!66945 m!61497))

(declare-fun m!61499 () Bool)

(assert (=> b!66946 m!61499))

(assert (=> bm!5541 d!13861))

(declare-fun b!66956 () Bool)

(declare-fun res!36170 () Bool)

(declare-fun e!43910 () Bool)

(assert (=> b!66956 (=> (not res!36170) (not e!43910))))

(declare-fun size!2073 (LongMapFixedSize!672) (_ BitVec 32))

(assert (=> b!66956 (= res!36170 (bvsge (size!2073 newMap!16) (_size!385 newMap!16)))))

(declare-fun b!66958 () Bool)

(assert (=> b!66958 (= e!43910 (and (bvsge (extraKeys!2018 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2018 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!385 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun d!13863 () Bool)

(declare-fun res!36167 () Bool)

(assert (=> d!13863 (=> (not res!36167) (not e!43910))))

(assert (=> d!13863 (= res!36167 (validMask!0 (mask!6082 newMap!16)))))

(assert (=> d!13863 (= (simpleValid!47 newMap!16) e!43910)))

(declare-fun b!66957 () Bool)

(declare-fun res!36168 () Bool)

(assert (=> b!66957 (=> (not res!36168) (not e!43910))))

(assert (=> b!66957 (= res!36168 (= (size!2073 newMap!16) (bvadd (_size!385 newMap!16) (bvsdiv (bvadd (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!66955 () Bool)

(declare-fun res!36169 () Bool)

(assert (=> b!66955 (=> (not res!36169) (not e!43910))))

(assert (=> b!66955 (= res!36169 (and (= (size!2070 (_values!2130 newMap!16)) (bvadd (mask!6082 newMap!16) #b00000000000000000000000000000001)) (= (size!2069 (_keys!3787 newMap!16)) (size!2070 (_values!2130 newMap!16))) (bvsge (_size!385 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!385 newMap!16) (bvadd (mask!6082 newMap!16) #b00000000000000000000000000000001))))))

(assert (= (and d!13863 res!36167) b!66955))

(assert (= (and b!66955 res!36169) b!66956))

(assert (= (and b!66956 res!36170) b!66957))

(assert (= (and b!66957 res!36168) b!66958))

(declare-fun m!61501 () Bool)

(assert (=> b!66956 m!61501))

(assert (=> d!13863 m!61069))

(assert (=> b!66957 m!61501))

(assert (=> d!13739 d!13863))

(declare-fun d!13865 () Bool)

(declare-fun e!43912 () Bool)

(assert (=> d!13865 e!43912))

(declare-fun res!36171 () Bool)

(assert (=> d!13865 (=> res!36171 e!43912)))

(declare-fun lt!28912 () Bool)

(assert (=> d!13865 (= res!36171 (not lt!28912))))

(declare-fun lt!28909 () Bool)

(assert (=> d!13865 (= lt!28912 lt!28909)))

(declare-fun lt!28910 () Unit!1836)

(declare-fun e!43911 () Unit!1836)

(assert (=> d!13865 (= lt!28910 e!43911)))

(declare-fun c!9294 () Bool)

(assert (=> d!13865 (= c!9294 lt!28909)))

(assert (=> d!13865 (= lt!28909 (containsKey!133 (toList!723 lt!28612) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!13865 (= (contains!716 lt!28612 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!28912)))

(declare-fun b!66959 () Bool)

(declare-fun lt!28911 () Unit!1836)

(assert (=> b!66959 (= e!43911 lt!28911)))

(assert (=> b!66959 (= lt!28911 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28612) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66959 (isDefined!83 (getValueByKey!129 (toList!723 lt!28612) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!66960 () Bool)

(declare-fun Unit!1856 () Unit!1836)

(assert (=> b!66960 (= e!43911 Unit!1856)))

(declare-fun b!66961 () Bool)

(assert (=> b!66961 (= e!43912 (isDefined!83 (getValueByKey!129 (toList!723 lt!28612) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!13865 c!9294) b!66959))

(assert (= (and d!13865 (not c!9294)) b!66960))

(assert (= (and d!13865 (not res!36171)) b!66961))

(assert (=> d!13865 m!60843))

(declare-fun m!61503 () Bool)

(assert (=> d!13865 m!61503))

(assert (=> b!66959 m!60843))

(declare-fun m!61505 () Bool)

(assert (=> b!66959 m!61505))

(assert (=> b!66959 m!60843))

(declare-fun m!61507 () Bool)

(assert (=> b!66959 m!61507))

(assert (=> b!66959 m!61507))

(declare-fun m!61509 () Bool)

(assert (=> b!66959 m!61509))

(assert (=> b!66961 m!60843))

(assert (=> b!66961 m!61507))

(assert (=> b!66961 m!61507))

(assert (=> b!66961 m!61509))

(assert (=> b!66468 d!13865))

(declare-fun d!13867 () Bool)

(assert (=> d!13867 (= (get!1129 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) from!355) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66406 d!13867))

(declare-fun d!13869 () Bool)

(assert (=> d!13869 (= (apply!72 lt!28612 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1130 (getValueByKey!129 (toList!723 lt!28612) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2859 () Bool)

(assert (= bs!2859 d!13869))

(assert (=> bs!2859 m!60843))

(assert (=> bs!2859 m!61507))

(assert (=> bs!2859 m!61507))

(declare-fun m!61511 () Bool)

(assert (=> bs!2859 m!61511))

(assert (=> b!66469 d!13869))

(assert (=> b!66469 d!13797))

(declare-fun b!66970 () Bool)

(declare-fun e!43921 () Bool)

(declare-fun e!43920 () Bool)

(assert (=> b!66970 (= e!43921 e!43920)))

(declare-fun c!9297 () Bool)

(assert (=> b!66970 (= c!9297 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66971 () Bool)

(declare-fun e!43919 () Bool)

(assert (=> b!66971 (= e!43920 e!43919)))

(declare-fun lt!28921 () (_ BitVec 64))

(assert (=> b!66971 (= lt!28921 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28919 () Unit!1836)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3840 (_ BitVec 64) (_ BitVec 32)) Unit!1836)

(assert (=> b!66971 (= lt!28919 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3787 newMap!16) lt!28921 #b00000000000000000000000000000000))))

(assert (=> b!66971 (arrayContainsKey!0 (_keys!3787 newMap!16) lt!28921 #b00000000000000000000000000000000)))

(declare-fun lt!28920 () Unit!1836)

(assert (=> b!66971 (= lt!28920 lt!28919)))

(declare-fun res!36176 () Bool)

(assert (=> b!66971 (= res!36176 (= (seekEntryOrOpen!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) (_keys!3787 newMap!16) (mask!6082 newMap!16)) (Found!243 #b00000000000000000000000000000000)))))

(assert (=> b!66971 (=> (not res!36176) (not e!43919))))

(declare-fun d!13871 () Bool)

(declare-fun res!36177 () Bool)

(assert (=> d!13871 (=> res!36177 e!43921)))

(assert (=> d!13871 (= res!36177 (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (=> d!13871 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3787 newMap!16) (mask!6082 newMap!16)) e!43921)))

(declare-fun bm!5595 () Bool)

(declare-fun call!5598 () Bool)

(assert (=> bm!5595 (= call!5598 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun b!66972 () Bool)

(assert (=> b!66972 (= e!43920 call!5598)))

(declare-fun b!66973 () Bool)

(assert (=> b!66973 (= e!43919 call!5598)))

(assert (= (and d!13871 (not res!36177)) b!66970))

(assert (= (and b!66970 c!9297) b!66971))

(assert (= (and b!66970 (not c!9297)) b!66972))

(assert (= (and b!66971 res!36176) b!66973))

(assert (= (or b!66973 b!66972) bm!5595))

(assert (=> b!66970 m!61079))

(assert (=> b!66970 m!61079))

(assert (=> b!66970 m!61081))

(assert (=> b!66971 m!61079))

(declare-fun m!61513 () Bool)

(assert (=> b!66971 m!61513))

(declare-fun m!61515 () Bool)

(assert (=> b!66971 m!61515))

(assert (=> b!66971 m!61079))

(declare-fun m!61517 () Bool)

(assert (=> b!66971 m!61517))

(declare-fun m!61519 () Bool)

(assert (=> bm!5595 m!61519))

(assert (=> b!66681 d!13871))

(declare-fun b!66974 () Bool)

(declare-fun e!43927 () Bool)

(declare-fun call!5601 () Bool)

(assert (=> b!66974 (= e!43927 (not call!5601))))

(declare-fun bm!5596 () Bool)

(declare-fun call!5605 () ListLongMap!1415)

(assert (=> bm!5596 (= call!5605 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun d!13873 () Bool)

(declare-fun e!43934 () Bool)

(assert (=> d!13873 e!43934))

(declare-fun res!36186 () Bool)

(assert (=> d!13873 (=> (not res!36186) (not e!43934))))

(assert (=> d!13873 (= res!36186 (or (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))))

(declare-fun lt!28942 () ListLongMap!1415)

(declare-fun lt!28929 () ListLongMap!1415)

(assert (=> d!13873 (= lt!28942 lt!28929)))

(declare-fun lt!28925 () Unit!1836)

(declare-fun e!43930 () Unit!1836)

(assert (=> d!13873 (= lt!28925 e!43930)))

(declare-fun c!9300 () Bool)

(declare-fun e!43928 () Bool)

(assert (=> d!13873 (= c!9300 e!43928)))

(declare-fun res!36179 () Bool)

(assert (=> d!13873 (=> (not res!36179) (not e!43928))))

(assert (=> d!13873 (= res!36179 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun e!43923 () ListLongMap!1415)

(assert (=> d!13873 (= lt!28929 e!43923)))

(declare-fun c!9301 () Bool)

(assert (=> d!13873 (= c!9301 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!13873 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13873 (= (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!28942)))

(declare-fun b!66975 () Bool)

(declare-fun call!5604 () ListLongMap!1415)

(assert (=> b!66975 (= e!43923 (+!87 call!5604 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))

(declare-fun b!66976 () Bool)

(declare-fun e!43931 () Bool)

(assert (=> b!66976 (= e!43927 e!43931)))

(declare-fun res!36181 () Bool)

(assert (=> b!66976 (= res!36181 call!5601)))

(assert (=> b!66976 (=> (not res!36181) (not e!43931))))

(declare-fun b!66977 () Bool)

(declare-fun e!43925 () ListLongMap!1415)

(assert (=> b!66977 (= e!43923 e!43925)))

(declare-fun c!9303 () Bool)

(assert (=> b!66977 (= c!9303 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5597 () Bool)

(declare-fun call!5602 () ListLongMap!1415)

(declare-fun call!5600 () ListLongMap!1415)

(assert (=> bm!5597 (= call!5602 call!5600)))

(declare-fun b!66978 () Bool)

(declare-fun e!43926 () Bool)

(assert (=> b!66978 (= e!43934 e!43926)))

(declare-fun c!9298 () Bool)

(assert (=> b!66978 (= c!9298 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66979 () Bool)

(declare-fun call!5603 () Bool)

(assert (=> b!66979 (= e!43926 (not call!5603))))

(declare-fun b!66980 () Bool)

(declare-fun e!43932 () Bool)

(assert (=> b!66980 (= e!43926 e!43932)))

(declare-fun res!36185 () Bool)

(assert (=> b!66980 (= res!36185 call!5603)))

(assert (=> b!66980 (=> (not res!36185) (not e!43932))))

(declare-fun b!66981 () Bool)

(declare-fun lt!28943 () Unit!1836)

(assert (=> b!66981 (= e!43930 lt!28943)))

(declare-fun lt!28927 () ListLongMap!1415)

(assert (=> b!66981 (= lt!28927 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28936 () (_ BitVec 64))

(assert (=> b!66981 (= lt!28936 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28930 () (_ BitVec 64))

(assert (=> b!66981 (= lt!28930 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28924 () Unit!1836)

(assert (=> b!66981 (= lt!28924 (addStillContains!48 lt!28927 lt!28936 (zeroValue!2055 newMap!16) lt!28930))))

(assert (=> b!66981 (contains!716 (+!87 lt!28927 (tuple2!2109 lt!28936 (zeroValue!2055 newMap!16))) lt!28930)))

(declare-fun lt!28934 () Unit!1836)

(assert (=> b!66981 (= lt!28934 lt!28924)))

(declare-fun lt!28941 () ListLongMap!1415)

(assert (=> b!66981 (= lt!28941 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28932 () (_ BitVec 64))

(assert (=> b!66981 (= lt!28932 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28928 () (_ BitVec 64))

(assert (=> b!66981 (= lt!28928 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28939 () Unit!1836)

(assert (=> b!66981 (= lt!28939 (addApplyDifferent!48 lt!28941 lt!28932 (minValue!2055 newMap!16) lt!28928))))

(assert (=> b!66981 (= (apply!72 (+!87 lt!28941 (tuple2!2109 lt!28932 (minValue!2055 newMap!16))) lt!28928) (apply!72 lt!28941 lt!28928))))

(declare-fun lt!28922 () Unit!1836)

(assert (=> b!66981 (= lt!28922 lt!28939)))

(declare-fun lt!28938 () ListLongMap!1415)

(assert (=> b!66981 (= lt!28938 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28933 () (_ BitVec 64))

(assert (=> b!66981 (= lt!28933 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28935 () (_ BitVec 64))

(assert (=> b!66981 (= lt!28935 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28923 () Unit!1836)

(assert (=> b!66981 (= lt!28923 (addApplyDifferent!48 lt!28938 lt!28933 (zeroValue!2055 newMap!16) lt!28935))))

(assert (=> b!66981 (= (apply!72 (+!87 lt!28938 (tuple2!2109 lt!28933 (zeroValue!2055 newMap!16))) lt!28935) (apply!72 lt!28938 lt!28935))))

(declare-fun lt!28937 () Unit!1836)

(assert (=> b!66981 (= lt!28937 lt!28923)))

(declare-fun lt!28926 () ListLongMap!1415)

(assert (=> b!66981 (= lt!28926 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28931 () (_ BitVec 64))

(assert (=> b!66981 (= lt!28931 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28940 () (_ BitVec 64))

(assert (=> b!66981 (= lt!28940 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66981 (= lt!28943 (addApplyDifferent!48 lt!28926 lt!28931 (minValue!2055 newMap!16) lt!28940))))

(assert (=> b!66981 (= (apply!72 (+!87 lt!28926 (tuple2!2109 lt!28931 (minValue!2055 newMap!16))) lt!28940) (apply!72 lt!28926 lt!28940))))

(declare-fun b!66982 () Bool)

(assert (=> b!66982 (= e!43928 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66983 () Bool)

(declare-fun Unit!1857 () Unit!1836)

(assert (=> b!66983 (= e!43930 Unit!1857)))

(declare-fun b!66984 () Bool)

(declare-fun res!36184 () Bool)

(assert (=> b!66984 (=> (not res!36184) (not e!43934))))

(assert (=> b!66984 (= res!36184 e!43927)))

(declare-fun c!9299 () Bool)

(assert (=> b!66984 (= c!9299 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5598 () Bool)

(assert (=> bm!5598 (= call!5600 call!5605)))

(declare-fun b!66985 () Bool)

(assert (=> b!66985 (= e!43932 (= (apply!72 lt!28942 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2055 newMap!16)))))

(declare-fun bm!5599 () Bool)

(assert (=> bm!5599 (= call!5604 (+!87 (ite c!9301 call!5605 (ite c!9303 call!5600 call!5602)) (ite (or c!9301 c!9303) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(declare-fun b!66986 () Bool)

(declare-fun res!36180 () Bool)

(assert (=> b!66986 (=> (not res!36180) (not e!43934))))

(declare-fun e!43933 () Bool)

(assert (=> b!66986 (= res!36180 e!43933)))

(declare-fun res!36183 () Bool)

(assert (=> b!66986 (=> res!36183 e!43933)))

(declare-fun e!43929 () Bool)

(assert (=> b!66986 (= res!36183 (not e!43929))))

(declare-fun res!36178 () Bool)

(assert (=> b!66986 (=> (not res!36178) (not e!43929))))

(assert (=> b!66986 (= res!36178 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun b!66987 () Bool)

(declare-fun c!9302 () Bool)

(assert (=> b!66987 (= c!9302 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!43922 () ListLongMap!1415)

(assert (=> b!66987 (= e!43925 e!43922)))

(declare-fun b!66988 () Bool)

(assert (=> b!66988 (= e!43922 call!5602)))

(declare-fun bm!5600 () Bool)

(declare-fun call!5599 () ListLongMap!1415)

(assert (=> bm!5600 (= call!5599 call!5604)))

(declare-fun bm!5601 () Bool)

(assert (=> bm!5601 (= call!5601 (contains!716 lt!28942 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66989 () Bool)

(assert (=> b!66989 (= e!43925 call!5599)))

(declare-fun b!66990 () Bool)

(assert (=> b!66990 (= e!43929 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66991 () Bool)

(assert (=> b!66991 (= e!43931 (= (apply!72 lt!28942 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2055 newMap!16)))))

(declare-fun b!66992 () Bool)

(assert (=> b!66992 (= e!43922 call!5599)))

(declare-fun b!66993 () Bool)

(declare-fun e!43924 () Bool)

(assert (=> b!66993 (= e!43933 e!43924)))

(declare-fun res!36182 () Bool)

(assert (=> b!66993 (=> (not res!36182) (not e!43924))))

(assert (=> b!66993 (= res!36182 (contains!716 lt!28942 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!66993 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun bm!5602 () Bool)

(assert (=> bm!5602 (= call!5603 (contains!716 lt!28942 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66994 () Bool)

(assert (=> b!66994 (= e!43924 (= (apply!72 lt!28942 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1127 (select (arr!1835 (_values!2130 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66994 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_values!2130 newMap!16))))))

(assert (=> b!66994 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (= (and d!13873 c!9301) b!66975))

(assert (= (and d!13873 (not c!9301)) b!66977))

(assert (= (and b!66977 c!9303) b!66989))

(assert (= (and b!66977 (not c!9303)) b!66987))

(assert (= (and b!66987 c!9302) b!66992))

(assert (= (and b!66987 (not c!9302)) b!66988))

(assert (= (or b!66992 b!66988) bm!5597))

(assert (= (or b!66989 bm!5597) bm!5598))

(assert (= (or b!66989 b!66992) bm!5600))

(assert (= (or b!66975 bm!5598) bm!5596))

(assert (= (or b!66975 bm!5600) bm!5599))

(assert (= (and d!13873 res!36179) b!66982))

(assert (= (and d!13873 c!9300) b!66981))

(assert (= (and d!13873 (not c!9300)) b!66983))

(assert (= (and d!13873 res!36186) b!66986))

(assert (= (and b!66986 res!36178) b!66990))

(assert (= (and b!66986 (not res!36183)) b!66993))

(assert (= (and b!66993 res!36182) b!66994))

(assert (= (and b!66986 res!36180) b!66984))

(assert (= (and b!66984 c!9299) b!66976))

(assert (= (and b!66984 (not c!9299)) b!66974))

(assert (= (and b!66976 res!36181) b!66991))

(assert (= (or b!66976 b!66974) bm!5601))

(assert (= (and b!66984 res!36184) b!66978))

(assert (= (and b!66978 c!9298) b!66980))

(assert (= (and b!66978 (not c!9298)) b!66979))

(assert (= (and b!66980 res!36185) b!66985))

(assert (= (or b!66980 b!66979) bm!5602))

(declare-fun b_lambda!3001 () Bool)

(assert (=> (not b_lambda!3001) (not b!66994)))

(assert (=> b!66994 t!4984))

(declare-fun b_and!4133 () Bool)

(assert (= b_and!4129 (and (=> t!4984 result!2595) b_and!4133)))

(assert (=> b!66994 t!4986))

(declare-fun b_and!4135 () Bool)

(assert (= b_and!4131 (and (=> t!4986 result!2597) b_and!4135)))

(declare-fun m!61521 () Bool)

(assert (=> bm!5601 m!61521))

(declare-fun m!61523 () Bool)

(assert (=> b!66994 m!61523))

(assert (=> b!66994 m!61115))

(declare-fun m!61525 () Bool)

(assert (=> b!66994 m!61525))

(assert (=> b!66994 m!61079))

(assert (=> b!66994 m!61079))

(declare-fun m!61527 () Bool)

(assert (=> b!66994 m!61527))

(assert (=> b!66994 m!61523))

(assert (=> b!66994 m!61115))

(assert (=> b!66993 m!61079))

(assert (=> b!66993 m!61079))

(declare-fun m!61529 () Bool)

(assert (=> b!66993 m!61529))

(declare-fun m!61531 () Bool)

(assert (=> b!66991 m!61531))

(assert (=> b!66990 m!61079))

(assert (=> b!66990 m!61079))

(assert (=> b!66990 m!61081))

(declare-fun m!61533 () Bool)

(assert (=> b!66985 m!61533))

(assert (=> d!13873 m!61069))

(declare-fun m!61535 () Bool)

(assert (=> b!66975 m!61535))

(declare-fun m!61537 () Bool)

(assert (=> bm!5596 m!61537))

(declare-fun m!61539 () Bool)

(assert (=> bm!5599 m!61539))

(declare-fun m!61541 () Bool)

(assert (=> b!66981 m!61541))

(declare-fun m!61543 () Bool)

(assert (=> b!66981 m!61543))

(declare-fun m!61545 () Bool)

(assert (=> b!66981 m!61545))

(declare-fun m!61547 () Bool)

(assert (=> b!66981 m!61547))

(declare-fun m!61549 () Bool)

(assert (=> b!66981 m!61549))

(declare-fun m!61551 () Bool)

(assert (=> b!66981 m!61551))

(declare-fun m!61553 () Bool)

(assert (=> b!66981 m!61553))

(assert (=> b!66981 m!61547))

(declare-fun m!61555 () Bool)

(assert (=> b!66981 m!61555))

(assert (=> b!66981 m!61537))

(declare-fun m!61557 () Bool)

(assert (=> b!66981 m!61557))

(declare-fun m!61559 () Bool)

(assert (=> b!66981 m!61559))

(assert (=> b!66981 m!61551))

(declare-fun m!61561 () Bool)

(assert (=> b!66981 m!61561))

(assert (=> b!66981 m!61541))

(declare-fun m!61563 () Bool)

(assert (=> b!66981 m!61563))

(declare-fun m!61565 () Bool)

(assert (=> b!66981 m!61565))

(assert (=> b!66981 m!61079))

(assert (=> b!66981 m!61563))

(declare-fun m!61567 () Bool)

(assert (=> b!66981 m!61567))

(declare-fun m!61569 () Bool)

(assert (=> b!66981 m!61569))

(assert (=> b!66982 m!61079))

(assert (=> b!66982 m!61079))

(assert (=> b!66982 m!61081))

(declare-fun m!61571 () Bool)

(assert (=> bm!5602 m!61571))

(assert (=> b!66642 d!13873))

(declare-fun b!66995 () Bool)

(declare-fun e!43940 () Bool)

(declare-fun call!5608 () Bool)

(assert (=> b!66995 (= e!43940 (not call!5608))))

(declare-fun bm!5603 () Bool)

(declare-fun call!5612 () ListLongMap!1415)

(assert (=> bm!5603 (= call!5612 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite c!9205 (ite c!9204 (extraKeys!2018 newMap!16) lt!28755) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun d!13875 () Bool)

(declare-fun e!43947 () Bool)

(assert (=> d!13875 e!43947))

(declare-fun res!36195 () Bool)

(assert (=> d!13875 (=> (not res!36195) (not e!43947))))

(assert (=> d!13875 (= res!36195 (or (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))))

(declare-fun lt!28964 () ListLongMap!1415)

(declare-fun lt!28951 () ListLongMap!1415)

(assert (=> d!13875 (= lt!28964 lt!28951)))

(declare-fun lt!28947 () Unit!1836)

(declare-fun e!43943 () Unit!1836)

(assert (=> d!13875 (= lt!28947 e!43943)))

(declare-fun c!9306 () Bool)

(declare-fun e!43941 () Bool)

(assert (=> d!13875 (= c!9306 e!43941)))

(declare-fun res!36188 () Bool)

(assert (=> d!13875 (=> (not res!36188) (not e!43941))))

(assert (=> d!13875 (= res!36188 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun e!43936 () ListLongMap!1415)

(assert (=> d!13875 (= lt!28951 e!43936)))

(declare-fun c!9307 () Bool)

(assert (=> d!13875 (= c!9307 (and (not (= (bvand (ite c!9205 (ite c!9204 (extraKeys!2018 newMap!16) lt!28755) (extraKeys!2018 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!9205 (ite c!9204 (extraKeys!2018 newMap!16) lt!28755) (extraKeys!2018 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!13875 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13875 (= (getCurrentListMap!419 (_keys!3787 newMap!16) (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite c!9205 (ite c!9204 (extraKeys!2018 newMap!16) lt!28755) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!28964)))

(declare-fun call!5611 () ListLongMap!1415)

(declare-fun b!66996 () Bool)

(assert (=> b!66996 (= e!43936 (+!87 call!5611 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))))))

(declare-fun b!66997 () Bool)

(declare-fun e!43944 () Bool)

(assert (=> b!66997 (= e!43940 e!43944)))

(declare-fun res!36190 () Bool)

(assert (=> b!66997 (= res!36190 call!5608)))

(assert (=> b!66997 (=> (not res!36190) (not e!43944))))

(declare-fun b!66998 () Bool)

(declare-fun e!43938 () ListLongMap!1415)

(assert (=> b!66998 (= e!43936 e!43938)))

(declare-fun c!9309 () Bool)

(assert (=> b!66998 (= c!9309 (and (not (= (bvand (ite c!9205 (ite c!9204 (extraKeys!2018 newMap!16) lt!28755) (extraKeys!2018 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!9205 (ite c!9204 (extraKeys!2018 newMap!16) lt!28755) (extraKeys!2018 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5604 () Bool)

(declare-fun call!5609 () ListLongMap!1415)

(declare-fun call!5607 () ListLongMap!1415)

(assert (=> bm!5604 (= call!5609 call!5607)))

(declare-fun b!66999 () Bool)

(declare-fun e!43939 () Bool)

(assert (=> b!66999 (= e!43947 e!43939)))

(declare-fun c!9304 () Bool)

(assert (=> b!66999 (= c!9304 (not (= (bvand (ite c!9205 (ite c!9204 (extraKeys!2018 newMap!16) lt!28755) (extraKeys!2018 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67000 () Bool)

(declare-fun call!5610 () Bool)

(assert (=> b!67000 (= e!43939 (not call!5610))))

(declare-fun b!67001 () Bool)

(declare-fun e!43945 () Bool)

(assert (=> b!67001 (= e!43939 e!43945)))

(declare-fun res!36194 () Bool)

(assert (=> b!67001 (= res!36194 call!5610)))

(assert (=> b!67001 (=> (not res!36194) (not e!43945))))

(declare-fun b!67002 () Bool)

(declare-fun lt!28965 () Unit!1836)

(assert (=> b!67002 (= e!43943 lt!28965)))

(declare-fun lt!28949 () ListLongMap!1415)

(assert (=> b!67002 (= lt!28949 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite c!9205 (ite c!9204 (extraKeys!2018 newMap!16) lt!28755) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28958 () (_ BitVec 64))

(assert (=> b!67002 (= lt!28958 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28952 () (_ BitVec 64))

(assert (=> b!67002 (= lt!28952 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28946 () Unit!1836)

(assert (=> b!67002 (= lt!28946 (addStillContains!48 lt!28949 lt!28958 (zeroValue!2055 newMap!16) lt!28952))))

(assert (=> b!67002 (contains!716 (+!87 lt!28949 (tuple2!2109 lt!28958 (zeroValue!2055 newMap!16))) lt!28952)))

(declare-fun lt!28956 () Unit!1836)

(assert (=> b!67002 (= lt!28956 lt!28946)))

(declare-fun lt!28963 () ListLongMap!1415)

(assert (=> b!67002 (= lt!28963 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite c!9205 (ite c!9204 (extraKeys!2018 newMap!16) lt!28755) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28954 () (_ BitVec 64))

(assert (=> b!67002 (= lt!28954 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28950 () (_ BitVec 64))

(assert (=> b!67002 (= lt!28950 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28961 () Unit!1836)

(assert (=> b!67002 (= lt!28961 (addApplyDifferent!48 lt!28963 lt!28954 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)) lt!28950))))

(assert (=> b!67002 (= (apply!72 (+!87 lt!28963 (tuple2!2109 lt!28954 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))) lt!28950) (apply!72 lt!28963 lt!28950))))

(declare-fun lt!28944 () Unit!1836)

(assert (=> b!67002 (= lt!28944 lt!28961)))

(declare-fun lt!28960 () ListLongMap!1415)

(assert (=> b!67002 (= lt!28960 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite c!9205 (ite c!9204 (extraKeys!2018 newMap!16) lt!28755) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28955 () (_ BitVec 64))

(assert (=> b!67002 (= lt!28955 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28957 () (_ BitVec 64))

(assert (=> b!67002 (= lt!28957 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28945 () Unit!1836)

(assert (=> b!67002 (= lt!28945 (addApplyDifferent!48 lt!28960 lt!28955 (zeroValue!2055 newMap!16) lt!28957))))

(assert (=> b!67002 (= (apply!72 (+!87 lt!28960 (tuple2!2109 lt!28955 (zeroValue!2055 newMap!16))) lt!28957) (apply!72 lt!28960 lt!28957))))

(declare-fun lt!28959 () Unit!1836)

(assert (=> b!67002 (= lt!28959 lt!28945)))

(declare-fun lt!28948 () ListLongMap!1415)

(assert (=> b!67002 (= lt!28948 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite c!9205 (ite c!9204 (extraKeys!2018 newMap!16) lt!28755) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28953 () (_ BitVec 64))

(assert (=> b!67002 (= lt!28953 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28962 () (_ BitVec 64))

(assert (=> b!67002 (= lt!28962 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67002 (= lt!28965 (addApplyDifferent!48 lt!28948 lt!28953 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)) lt!28962))))

(assert (=> b!67002 (= (apply!72 (+!87 lt!28948 (tuple2!2109 lt!28953 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))) lt!28962) (apply!72 lt!28948 lt!28962))))

(declare-fun b!67003 () Bool)

(assert (=> b!67003 (= e!43941 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67004 () Bool)

(declare-fun Unit!1858 () Unit!1836)

(assert (=> b!67004 (= e!43943 Unit!1858)))

(declare-fun b!67005 () Bool)

(declare-fun res!36193 () Bool)

(assert (=> b!67005 (=> (not res!36193) (not e!43947))))

(assert (=> b!67005 (= res!36193 e!43940)))

(declare-fun c!9305 () Bool)

(assert (=> b!67005 (= c!9305 (not (= (bvand (ite c!9205 (ite c!9204 (extraKeys!2018 newMap!16) lt!28755) (extraKeys!2018 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5605 () Bool)

(assert (=> bm!5605 (= call!5607 call!5612)))

(declare-fun b!67006 () Bool)

(assert (=> b!67006 (= e!43945 (= (apply!72 lt!28964 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))))

(declare-fun bm!5606 () Bool)

(assert (=> bm!5606 (= call!5611 (+!87 (ite c!9307 call!5612 (ite c!9309 call!5607 call!5609)) (ite (or c!9307 c!9309) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))))))

(declare-fun b!67007 () Bool)

(declare-fun res!36189 () Bool)

(assert (=> b!67007 (=> (not res!36189) (not e!43947))))

(declare-fun e!43946 () Bool)

(assert (=> b!67007 (= res!36189 e!43946)))

(declare-fun res!36192 () Bool)

(assert (=> b!67007 (=> res!36192 e!43946)))

(declare-fun e!43942 () Bool)

(assert (=> b!67007 (= res!36192 (not e!43942))))

(declare-fun res!36187 () Bool)

(assert (=> b!67007 (=> (not res!36187) (not e!43942))))

(assert (=> b!67007 (= res!36187 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun b!67008 () Bool)

(declare-fun c!9308 () Bool)

(assert (=> b!67008 (= c!9308 (and (not (= (bvand (ite c!9205 (ite c!9204 (extraKeys!2018 newMap!16) lt!28755) (extraKeys!2018 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!9205 (ite c!9204 (extraKeys!2018 newMap!16) lt!28755) (extraKeys!2018 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!43935 () ListLongMap!1415)

(assert (=> b!67008 (= e!43938 e!43935)))

(declare-fun b!67009 () Bool)

(assert (=> b!67009 (= e!43935 call!5609)))

(declare-fun bm!5607 () Bool)

(declare-fun call!5606 () ListLongMap!1415)

(assert (=> bm!5607 (= call!5606 call!5611)))

(declare-fun bm!5608 () Bool)

(assert (=> bm!5608 (= call!5608 (contains!716 lt!28964 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67010 () Bool)

(assert (=> b!67010 (= e!43938 call!5606)))

(declare-fun b!67011 () Bool)

(assert (=> b!67011 (= e!43942 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67012 () Bool)

(assert (=> b!67012 (= e!43944 (= (apply!72 lt!28964 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2055 newMap!16)))))

(declare-fun b!67013 () Bool)

(assert (=> b!67013 (= e!43935 call!5606)))

(declare-fun b!67014 () Bool)

(declare-fun e!43937 () Bool)

(assert (=> b!67014 (= e!43946 e!43937)))

(declare-fun res!36191 () Bool)

(assert (=> b!67014 (=> (not res!36191) (not e!43937))))

(assert (=> b!67014 (= res!36191 (contains!716 lt!28964 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67014 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun bm!5609 () Bool)

(assert (=> bm!5609 (= call!5610 (contains!716 lt!28964 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67015 () Bool)

(assert (=> b!67015 (= e!43937 (= (apply!72 lt!28964 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1127 (select (arr!1835 (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67015 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16)))))))))

(assert (=> b!67015 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (= (and d!13875 c!9307) b!66996))

(assert (= (and d!13875 (not c!9307)) b!66998))

(assert (= (and b!66998 c!9309) b!67010))

(assert (= (and b!66998 (not c!9309)) b!67008))

(assert (= (and b!67008 c!9308) b!67013))

(assert (= (and b!67008 (not c!9308)) b!67009))

(assert (= (or b!67013 b!67009) bm!5604))

(assert (= (or b!67010 bm!5604) bm!5605))

(assert (= (or b!67010 b!67013) bm!5607))

(assert (= (or b!66996 bm!5605) bm!5603))

(assert (= (or b!66996 bm!5607) bm!5606))

(assert (= (and d!13875 res!36188) b!67003))

(assert (= (and d!13875 c!9306) b!67002))

(assert (= (and d!13875 (not c!9306)) b!67004))

(assert (= (and d!13875 res!36195) b!67007))

(assert (= (and b!67007 res!36187) b!67011))

(assert (= (and b!67007 (not res!36192)) b!67014))

(assert (= (and b!67014 res!36191) b!67015))

(assert (= (and b!67007 res!36189) b!67005))

(assert (= (and b!67005 c!9305) b!66997))

(assert (= (and b!67005 (not c!9305)) b!66995))

(assert (= (and b!66997 res!36190) b!67012))

(assert (= (or b!66997 b!66995) bm!5608))

(assert (= (and b!67005 res!36193) b!66999))

(assert (= (and b!66999 c!9304) b!67001))

(assert (= (and b!66999 (not c!9304)) b!67000))

(assert (= (and b!67001 res!36194) b!67006))

(assert (= (or b!67001 b!67000) bm!5609))

(declare-fun b_lambda!3003 () Bool)

(assert (=> (not b_lambda!3003) (not b!67015)))

(assert (=> b!67015 t!4984))

(declare-fun b_and!4137 () Bool)

(assert (= b_and!4133 (and (=> t!4984 result!2595) b_and!4137)))

(assert (=> b!67015 t!4986))

(declare-fun b_and!4139 () Bool)

(assert (= b_and!4135 (and (=> t!4986 result!2597) b_and!4139)))

(declare-fun m!61573 () Bool)

(assert (=> bm!5608 m!61573))

(declare-fun m!61575 () Bool)

(assert (=> b!67015 m!61575))

(assert (=> b!67015 m!61115))

(declare-fun m!61577 () Bool)

(assert (=> b!67015 m!61577))

(assert (=> b!67015 m!61079))

(assert (=> b!67015 m!61079))

(declare-fun m!61579 () Bool)

(assert (=> b!67015 m!61579))

(assert (=> b!67015 m!61575))

(assert (=> b!67015 m!61115))

(assert (=> b!67014 m!61079))

(assert (=> b!67014 m!61079))

(declare-fun m!61581 () Bool)

(assert (=> b!67014 m!61581))

(declare-fun m!61583 () Bool)

(assert (=> b!67012 m!61583))

(assert (=> b!67011 m!61079))

(assert (=> b!67011 m!61079))

(assert (=> b!67011 m!61081))

(declare-fun m!61585 () Bool)

(assert (=> b!67006 m!61585))

(assert (=> d!13875 m!61069))

(declare-fun m!61587 () Bool)

(assert (=> b!66996 m!61587))

(declare-fun m!61589 () Bool)

(assert (=> bm!5603 m!61589))

(declare-fun m!61591 () Bool)

(assert (=> bm!5606 m!61591))

(declare-fun m!61593 () Bool)

(assert (=> b!67002 m!61593))

(declare-fun m!61595 () Bool)

(assert (=> b!67002 m!61595))

(declare-fun m!61597 () Bool)

(assert (=> b!67002 m!61597))

(declare-fun m!61599 () Bool)

(assert (=> b!67002 m!61599))

(declare-fun m!61601 () Bool)

(assert (=> b!67002 m!61601))

(declare-fun m!61603 () Bool)

(assert (=> b!67002 m!61603))

(declare-fun m!61605 () Bool)

(assert (=> b!67002 m!61605))

(assert (=> b!67002 m!61599))

(declare-fun m!61607 () Bool)

(assert (=> b!67002 m!61607))

(assert (=> b!67002 m!61589))

(declare-fun m!61609 () Bool)

(assert (=> b!67002 m!61609))

(declare-fun m!61611 () Bool)

(assert (=> b!67002 m!61611))

(assert (=> b!67002 m!61603))

(declare-fun m!61613 () Bool)

(assert (=> b!67002 m!61613))

(assert (=> b!67002 m!61593))

(declare-fun m!61615 () Bool)

(assert (=> b!67002 m!61615))

(declare-fun m!61617 () Bool)

(assert (=> b!67002 m!61617))

(assert (=> b!67002 m!61079))

(assert (=> b!67002 m!61615))

(declare-fun m!61619 () Bool)

(assert (=> b!67002 m!61619))

(declare-fun m!61621 () Bool)

(assert (=> b!67002 m!61621))

(assert (=> b!67003 m!61079))

(assert (=> b!67003 m!61079))

(assert (=> b!67003 m!61081))

(declare-fun m!61623 () Bool)

(assert (=> bm!5609 m!61623))

(assert (=> bm!5561 d!13875))

(declare-fun d!13877 () Bool)

(declare-fun e!43949 () Bool)

(assert (=> d!13877 e!43949))

(declare-fun res!36196 () Bool)

(assert (=> d!13877 (=> res!36196 e!43949)))

(declare-fun lt!28969 () Bool)

(assert (=> d!13877 (= res!36196 (not lt!28969))))

(declare-fun lt!28966 () Bool)

(assert (=> d!13877 (= lt!28969 lt!28966)))

(declare-fun lt!28967 () Unit!1836)

(declare-fun e!43948 () Unit!1836)

(assert (=> d!13877 (= lt!28967 e!43948)))

(declare-fun c!9310 () Bool)

(assert (=> d!13877 (= c!9310 lt!28966)))

(assert (=> d!13877 (= lt!28966 (containsKey!133 (toList!723 lt!28656) (_1!1064 lt!28503)))))

(assert (=> d!13877 (= (contains!716 lt!28656 (_1!1064 lt!28503)) lt!28969)))

(declare-fun b!67016 () Bool)

(declare-fun lt!28968 () Unit!1836)

(assert (=> b!67016 (= e!43948 lt!28968)))

(assert (=> b!67016 (= lt!28968 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28656) (_1!1064 lt!28503)))))

(assert (=> b!67016 (isDefined!83 (getValueByKey!129 (toList!723 lt!28656) (_1!1064 lt!28503)))))

(declare-fun b!67017 () Bool)

(declare-fun Unit!1859 () Unit!1836)

(assert (=> b!67017 (= e!43948 Unit!1859)))

(declare-fun b!67018 () Bool)

(assert (=> b!67018 (= e!43949 (isDefined!83 (getValueByKey!129 (toList!723 lt!28656) (_1!1064 lt!28503))))))

(assert (= (and d!13877 c!9310) b!67016))

(assert (= (and d!13877 (not c!9310)) b!67017))

(assert (= (and d!13877 (not res!36196)) b!67018))

(declare-fun m!61625 () Bool)

(assert (=> d!13877 m!61625))

(declare-fun m!61627 () Bool)

(assert (=> b!67016 m!61627))

(assert (=> b!67016 m!60957))

(assert (=> b!67016 m!60957))

(declare-fun m!61629 () Bool)

(assert (=> b!67016 m!61629))

(assert (=> b!67018 m!60957))

(assert (=> b!67018 m!60957))

(assert (=> b!67018 m!61629))

(assert (=> d!13721 d!13877))

(declare-fun b!67020 () Bool)

(declare-fun e!43950 () Option!135)

(declare-fun e!43951 () Option!135)

(assert (=> b!67020 (= e!43950 e!43951)))

(declare-fun c!9312 () Bool)

(assert (=> b!67020 (= c!9312 (and ((_ is Cons!1486) lt!28658) (not (= (_1!1064 (h!2070 lt!28658)) (_1!1064 lt!28503)))))))

(declare-fun d!13879 () Bool)

(declare-fun c!9311 () Bool)

(assert (=> d!13879 (= c!9311 (and ((_ is Cons!1486) lt!28658) (= (_1!1064 (h!2070 lt!28658)) (_1!1064 lt!28503))))))

(assert (=> d!13879 (= (getValueByKey!129 lt!28658 (_1!1064 lt!28503)) e!43950)))

(declare-fun b!67021 () Bool)

(assert (=> b!67021 (= e!43951 (getValueByKey!129 (t!4976 lt!28658) (_1!1064 lt!28503)))))

(declare-fun b!67019 () Bool)

(assert (=> b!67019 (= e!43950 (Some!134 (_2!1064 (h!2070 lt!28658))))))

(declare-fun b!67022 () Bool)

(assert (=> b!67022 (= e!43951 None!133)))

(assert (= (and d!13879 c!9311) b!67019))

(assert (= (and d!13879 (not c!9311)) b!67020))

(assert (= (and b!67020 c!9312) b!67021))

(assert (= (and b!67020 (not c!9312)) b!67022))

(declare-fun m!61631 () Bool)

(assert (=> b!67021 m!61631))

(assert (=> d!13721 d!13879))

(declare-fun d!13881 () Bool)

(assert (=> d!13881 (= (getValueByKey!129 lt!28658 (_1!1064 lt!28503)) (Some!134 (_2!1064 lt!28503)))))

(declare-fun lt!28970 () Unit!1836)

(assert (=> d!13881 (= lt!28970 (choose!376 lt!28658 (_1!1064 lt!28503) (_2!1064 lt!28503)))))

(declare-fun e!43952 () Bool)

(assert (=> d!13881 e!43952))

(declare-fun res!36197 () Bool)

(assert (=> d!13881 (=> (not res!36197) (not e!43952))))

(assert (=> d!13881 (= res!36197 (isStrictlySorted!284 lt!28658))))

(assert (=> d!13881 (= (lemmaContainsTupThenGetReturnValue!48 lt!28658 (_1!1064 lt!28503) (_2!1064 lt!28503)) lt!28970)))

(declare-fun b!67023 () Bool)

(declare-fun res!36198 () Bool)

(assert (=> b!67023 (=> (not res!36198) (not e!43952))))

(assert (=> b!67023 (= res!36198 (containsKey!133 lt!28658 (_1!1064 lt!28503)))))

(declare-fun b!67024 () Bool)

(assert (=> b!67024 (= e!43952 (contains!718 lt!28658 (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))))))

(assert (= (and d!13881 res!36197) b!67023))

(assert (= (and b!67023 res!36198) b!67024))

(assert (=> d!13881 m!60951))

(declare-fun m!61633 () Bool)

(assert (=> d!13881 m!61633))

(declare-fun m!61635 () Bool)

(assert (=> d!13881 m!61635))

(declare-fun m!61637 () Bool)

(assert (=> b!67023 m!61637))

(declare-fun m!61639 () Bool)

(assert (=> b!67024 m!61639))

(assert (=> d!13721 d!13881))

(declare-fun b!67025 () Bool)

(declare-fun e!43954 () List!1490)

(declare-fun call!5614 () List!1490)

(assert (=> b!67025 (= e!43954 call!5614)))

(declare-fun b!67026 () Bool)

(declare-fun e!43953 () List!1490)

(declare-fun call!5613 () List!1490)

(assert (=> b!67026 (= e!43953 call!5613)))

(declare-fun bm!5610 () Bool)

(declare-fun call!5615 () List!1490)

(assert (=> bm!5610 (= call!5613 call!5615)))

(declare-fun e!43957 () List!1490)

(declare-fun c!9314 () Bool)

(declare-fun bm!5611 () Bool)

(assert (=> bm!5611 (= call!5614 ($colon$colon!62 e!43957 (ite c!9314 (h!2070 (toList!723 lt!28505)) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503)))))))

(declare-fun c!9316 () Bool)

(assert (=> bm!5611 (= c!9316 c!9314)))

(declare-fun d!13883 () Bool)

(declare-fun e!43955 () Bool)

(assert (=> d!13883 e!43955))

(declare-fun res!36200 () Bool)

(assert (=> d!13883 (=> (not res!36200) (not e!43955))))

(declare-fun lt!28971 () List!1490)

(assert (=> d!13883 (= res!36200 (isStrictlySorted!284 lt!28971))))

(assert (=> d!13883 (= lt!28971 e!43954)))

(assert (=> d!13883 (= c!9314 (and ((_ is Cons!1486) (toList!723 lt!28505)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28505))) (_1!1064 lt!28503))))))

(assert (=> d!13883 (isStrictlySorted!284 (toList!723 lt!28505))))

(assert (=> d!13883 (= (insertStrictlySorted!50 (toList!723 lt!28505) (_1!1064 lt!28503) (_2!1064 lt!28503)) lt!28971)))

(declare-fun bm!5612 () Bool)

(assert (=> bm!5612 (= call!5615 call!5614)))

(declare-fun b!67027 () Bool)

(assert (=> b!67027 (= e!43957 (insertStrictlySorted!50 (t!4976 (toList!723 lt!28505)) (_1!1064 lt!28503) (_2!1064 lt!28503)))))

(declare-fun b!67028 () Bool)

(declare-fun c!9315 () Bool)

(assert (=> b!67028 (= c!9315 (and ((_ is Cons!1486) (toList!723 lt!28505)) (bvsgt (_1!1064 (h!2070 (toList!723 lt!28505))) (_1!1064 lt!28503))))))

(declare-fun e!43956 () List!1490)

(assert (=> b!67028 (= e!43956 e!43953)))

(declare-fun b!67029 () Bool)

(assert (=> b!67029 (= e!43956 call!5615)))

(declare-fun b!67030 () Bool)

(declare-fun res!36199 () Bool)

(assert (=> b!67030 (=> (not res!36199) (not e!43955))))

(assert (=> b!67030 (= res!36199 (containsKey!133 lt!28971 (_1!1064 lt!28503)))))

(declare-fun b!67031 () Bool)

(assert (=> b!67031 (= e!43953 call!5613)))

(declare-fun c!9313 () Bool)

(declare-fun b!67032 () Bool)

(assert (=> b!67032 (= e!43957 (ite c!9313 (t!4976 (toList!723 lt!28505)) (ite c!9315 (Cons!1486 (h!2070 (toList!723 lt!28505)) (t!4976 (toList!723 lt!28505))) Nil!1487)))))

(declare-fun b!67033 () Bool)

(assert (=> b!67033 (= e!43955 (contains!718 lt!28971 (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))))))

(declare-fun b!67034 () Bool)

(assert (=> b!67034 (= e!43954 e!43956)))

(assert (=> b!67034 (= c!9313 (and ((_ is Cons!1486) (toList!723 lt!28505)) (= (_1!1064 (h!2070 (toList!723 lt!28505))) (_1!1064 lt!28503))))))

(assert (= (and d!13883 c!9314) b!67025))

(assert (= (and d!13883 (not c!9314)) b!67034))

(assert (= (and b!67034 c!9313) b!67029))

(assert (= (and b!67034 (not c!9313)) b!67028))

(assert (= (and b!67028 c!9315) b!67031))

(assert (= (and b!67028 (not c!9315)) b!67026))

(assert (= (or b!67031 b!67026) bm!5610))

(assert (= (or b!67029 bm!5610) bm!5612))

(assert (= (or b!67025 bm!5612) bm!5611))

(assert (= (and bm!5611 c!9316) b!67027))

(assert (= (and bm!5611 (not c!9316)) b!67032))

(assert (= (and d!13883 res!36200) b!67030))

(assert (= (and b!67030 res!36199) b!67033))

(declare-fun m!61641 () Bool)

(assert (=> bm!5611 m!61641))

(declare-fun m!61643 () Bool)

(assert (=> d!13883 m!61643))

(assert (=> d!13883 m!61357))

(declare-fun m!61645 () Bool)

(assert (=> b!67030 m!61645))

(declare-fun m!61647 () Bool)

(assert (=> b!67027 m!61647))

(declare-fun m!61649 () Bool)

(assert (=> b!67033 m!61649))

(assert (=> d!13721 d!13883))

(declare-fun d!13885 () Bool)

(declare-fun e!43960 () Bool)

(assert (=> d!13885 e!43960))

(declare-fun res!36203 () Bool)

(assert (=> d!13885 (=> (not res!36203) (not e!43960))))

(assert (=> d!13885 (= res!36203 (and (bvsge (index!3101 lt!28760) #b00000000000000000000000000000000) (bvslt (index!3101 lt!28760) (size!2069 (_keys!3787 newMap!16)))))))

(declare-fun lt!28974 () Unit!1836)

(declare-fun choose!382 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 32) Int) Unit!1836)

(assert (=> d!13885 (= lt!28974 (choose!382 (_keys!3787 newMap!16) lt!28741 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (index!3101 lt!28760) (defaultEntry!2147 newMap!16)))))

(assert (=> d!13885 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13885 (= (lemmaValidKeyInArrayIsInListMap!79 (_keys!3787 newMap!16) lt!28741 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (index!3101 lt!28760) (defaultEntry!2147 newMap!16)) lt!28974)))

(declare-fun b!67037 () Bool)

(assert (=> b!67037 (= e!43960 (contains!716 (getCurrentListMap!419 (_keys!3787 newMap!16) lt!28741 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760))))))

(assert (= (and d!13885 res!36203) b!67037))

(declare-fun m!61651 () Bool)

(assert (=> d!13885 m!61651))

(assert (=> d!13885 m!61069))

(declare-fun m!61653 () Bool)

(assert (=> b!67037 m!61653))

(assert (=> b!67037 m!61009))

(assert (=> b!67037 m!61653))

(assert (=> b!67037 m!61009))

(declare-fun m!61655 () Bool)

(assert (=> b!67037 m!61655))

(assert (=> b!66656 d!13885))

(declare-fun d!13887 () Bool)

(declare-fun e!43963 () Bool)

(assert (=> d!13887 e!43963))

(declare-fun res!36206 () Bool)

(assert (=> d!13887 (=> (not res!36206) (not e!43963))))

(assert (=> d!13887 (= res!36206 (and (bvsge (index!3101 lt!28760) #b00000000000000000000000000000000) (bvslt (index!3101 lt!28760) (size!2070 (_values!2130 newMap!16)))))))

(declare-fun lt!28977 () Unit!1836)

(declare-fun choose!383 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 32) (_ BitVec 64) V!2915 Int) Unit!1836)

(assert (=> d!13887 (= lt!28977 (choose!383 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (index!3101 lt!28760) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502 (defaultEntry!2147 newMap!16)))))

(assert (=> d!13887 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13887 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (index!3101 lt!28760) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502 (defaultEntry!2147 newMap!16)) lt!28977)))

(declare-fun b!67040 () Bool)

(assert (=> b!67040 (= e!43963 (= (+!87 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (getCurrentListMap!419 (_keys!3787 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))))))

(assert (= (and d!13887 res!36206) b!67040))

(assert (=> d!13887 m!60719))

(declare-fun m!61657 () Bool)

(assert (=> d!13887 m!61657))

(assert (=> d!13887 m!61069))

(assert (=> b!67040 m!60835))

(assert (=> b!67040 m!60835))

(declare-fun m!61659 () Bool)

(assert (=> b!67040 m!61659))

(assert (=> b!67040 m!61035))

(declare-fun m!61661 () Bool)

(assert (=> b!67040 m!61661))

(assert (=> b!66656 d!13887))

(declare-fun d!13889 () Bool)

(declare-fun e!43965 () Bool)

(assert (=> d!13889 e!43965))

(declare-fun res!36207 () Bool)

(assert (=> d!13889 (=> res!36207 e!43965)))

(declare-fun lt!28981 () Bool)

(assert (=> d!13889 (= res!36207 (not lt!28981))))

(declare-fun lt!28978 () Bool)

(assert (=> d!13889 (= lt!28981 lt!28978)))

(declare-fun lt!28979 () Unit!1836)

(declare-fun e!43964 () Unit!1836)

(assert (=> d!13889 (= lt!28979 e!43964)))

(declare-fun c!9317 () Bool)

(assert (=> d!13889 (= c!9317 lt!28978)))

(assert (=> d!13889 (= lt!28978 (containsKey!133 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> d!13889 (= (contains!716 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) lt!28981)))

(declare-fun b!67041 () Bool)

(declare-fun lt!28980 () Unit!1836)

(assert (=> b!67041 (= e!43964 lt!28980)))

(assert (=> b!67041 (= lt!28980 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> b!67041 (isDefined!83 (getValueByKey!129 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun b!67042 () Bool)

(declare-fun Unit!1860 () Unit!1836)

(assert (=> b!67042 (= e!43964 Unit!1860)))

(declare-fun b!67043 () Bool)

(assert (=> b!67043 (= e!43965 (isDefined!83 (getValueByKey!129 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))))

(assert (= (and d!13889 c!9317) b!67041))

(assert (= (and d!13889 (not c!9317)) b!67042))

(assert (= (and d!13889 (not res!36207)) b!67043))

(assert (=> d!13889 m!60719))

(declare-fun m!61663 () Bool)

(assert (=> d!13889 m!61663))

(assert (=> b!67041 m!60719))

(declare-fun m!61665 () Bool)

(assert (=> b!67041 m!61665))

(assert (=> b!67041 m!60719))

(declare-fun m!61667 () Bool)

(assert (=> b!67041 m!61667))

(assert (=> b!67041 m!61667))

(declare-fun m!61669 () Bool)

(assert (=> b!67041 m!61669))

(assert (=> b!67043 m!60719))

(assert (=> b!67043 m!61667))

(assert (=> b!67043 m!61667))

(assert (=> b!67043 m!61669))

(assert (=> b!66656 d!13889))

(assert (=> b!66656 d!13873))

(declare-fun d!13891 () Bool)

(declare-fun lt!28982 () Bool)

(assert (=> d!13891 (= lt!28982 (select (content!70 (toList!723 lt!28644)) lt!28500))))

(declare-fun e!43966 () Bool)

(assert (=> d!13891 (= lt!28982 e!43966)))

(declare-fun res!36209 () Bool)

(assert (=> d!13891 (=> (not res!36209) (not e!43966))))

(assert (=> d!13891 (= res!36209 ((_ is Cons!1486) (toList!723 lt!28644)))))

(assert (=> d!13891 (= (contains!718 (toList!723 lt!28644) lt!28500) lt!28982)))

(declare-fun b!67044 () Bool)

(declare-fun e!43967 () Bool)

(assert (=> b!67044 (= e!43966 e!43967)))

(declare-fun res!36208 () Bool)

(assert (=> b!67044 (=> res!36208 e!43967)))

(assert (=> b!67044 (= res!36208 (= (h!2070 (toList!723 lt!28644)) lt!28500))))

(declare-fun b!67045 () Bool)

(assert (=> b!67045 (= e!43967 (contains!718 (t!4976 (toList!723 lt!28644)) lt!28500))))

(assert (= (and d!13891 res!36209) b!67044))

(assert (= (and b!67044 (not res!36208)) b!67045))

(declare-fun m!61671 () Bool)

(assert (=> d!13891 m!61671))

(declare-fun m!61673 () Bool)

(assert (=> d!13891 m!61673))

(declare-fun m!61675 () Bool)

(assert (=> b!67045 m!61675))

(assert (=> b!66511 d!13891))

(declare-fun b!67063 () Bool)

(declare-fun res!36221 () Bool)

(declare-fun e!43976 () Bool)

(assert (=> b!67063 (=> (not res!36221) (not e!43976))))

(declare-fun lt!28988 () SeekEntryResult!243)

(assert (=> b!67063 (= res!36221 (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3103 lt!28988)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67063 (and (bvsge (index!3103 lt!28988) #b00000000000000000000000000000000) (bvslt (index!3103 lt!28988) (size!2069 (_keys!3787 newMap!16))))))

(declare-fun bm!5617 () Bool)

(declare-fun c!9323 () Bool)

(declare-fun call!5621 () Bool)

(assert (=> bm!5617 (= call!5621 (inRange!0 (ite c!9323 (index!3100 lt!28988) (index!3103 lt!28988)) (mask!6082 newMap!16)))))

(declare-fun b!67064 () Bool)

(declare-fun res!36219 () Bool)

(assert (=> b!67064 (=> (not res!36219) (not e!43976))))

(assert (=> b!67064 (= res!36219 call!5621)))

(declare-fun e!43978 () Bool)

(assert (=> b!67064 (= e!43978 e!43976)))

(declare-fun bm!5618 () Bool)

(declare-fun call!5620 () Bool)

(assert (=> bm!5618 (= call!5620 (arrayContainsKey!0 (_keys!3787 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!67065 () Bool)

(declare-fun e!43977 () Bool)

(assert (=> b!67065 (= e!43977 (not call!5620))))

(declare-fun b!67066 () Bool)

(assert (=> b!67066 (and (bvsge (index!3100 lt!28988) #b00000000000000000000000000000000) (bvslt (index!3100 lt!28988) (size!2069 (_keys!3787 newMap!16))))))

(declare-fun res!36218 () Bool)

(assert (=> b!67066 (= res!36218 (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3100 lt!28988)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67066 (=> (not res!36218) (not e!43977))))

(declare-fun b!67067 () Bool)

(assert (=> b!67067 (= e!43976 (not call!5620))))

(declare-fun b!67068 () Bool)

(declare-fun e!43979 () Bool)

(assert (=> b!67068 (= e!43979 e!43978)))

(declare-fun c!9322 () Bool)

(assert (=> b!67068 (= c!9322 ((_ is MissingVacant!243) lt!28988))))

(declare-fun b!67069 () Bool)

(assert (=> b!67069 (= e!43978 ((_ is Undefined!243) lt!28988))))

(declare-fun d!13893 () Bool)

(assert (=> d!13893 e!43979))

(assert (=> d!13893 (= c!9323 ((_ is MissingZero!243) lt!28988))))

(assert (=> d!13893 (= lt!28988 (seekEntryOrOpen!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun lt!28987 () Unit!1836)

(declare-fun choose!384 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 64) Int) Unit!1836)

(assert (=> d!13893 (= lt!28987 (choose!384 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)))))

(assert (=> d!13893 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13893 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)) lt!28987)))

(declare-fun b!67062 () Bool)

(assert (=> b!67062 (= e!43979 e!43977)))

(declare-fun res!36220 () Bool)

(assert (=> b!67062 (= res!36220 call!5621)))

(assert (=> b!67062 (=> (not res!36220) (not e!43977))))

(assert (= (and d!13893 c!9323) b!67062))

(assert (= (and d!13893 (not c!9323)) b!67068))

(assert (= (and b!67062 res!36220) b!67066))

(assert (= (and b!67066 res!36218) b!67065))

(assert (= (and b!67068 c!9322) b!67064))

(assert (= (and b!67068 (not c!9322)) b!67069))

(assert (= (and b!67064 res!36219) b!67063))

(assert (= (and b!67063 res!36221) b!67067))

(assert (= (or b!67062 b!67064) bm!5617))

(assert (= (or b!67065 b!67067) bm!5618))

(declare-fun m!61677 () Bool)

(assert (=> b!67063 m!61677))

(declare-fun m!61679 () Bool)

(assert (=> bm!5617 m!61679))

(assert (=> bm!5618 m!60719))

(assert (=> bm!5618 m!61039))

(declare-fun m!61681 () Bool)

(assert (=> b!67066 m!61681))

(assert (=> d!13893 m!60719))

(assert (=> d!13893 m!60993))

(assert (=> d!13893 m!60719))

(declare-fun m!61683 () Bool)

(assert (=> d!13893 m!61683))

(assert (=> d!13893 m!61069))

(assert (=> bm!5547 d!13893))

(assert (=> b!66553 d!13821))

(assert (=> b!66553 d!13823))

(assert (=> b!66498 d!13787))

(declare-fun d!13895 () Bool)

(assert (=> d!13895 (= (apply!72 lt!28634 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1130 (getValueByKey!129 (toList!723 lt!28634) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2860 () Bool)

(assert (= bs!2860 d!13895))

(assert (=> bs!2860 m!60843))

(declare-fun m!61685 () Bool)

(assert (=> bs!2860 m!61685))

(assert (=> bs!2860 m!61685))

(declare-fun m!61687 () Bool)

(assert (=> bs!2860 m!61687))

(assert (=> b!66500 d!13895))

(assert (=> b!66500 d!13797))

(declare-fun d!13897 () Bool)

(assert (=> d!13897 (= (+!87 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28742 lt!28502 (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28991 () Unit!1836)

(declare-fun choose!385 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 V!2915 Int) Unit!1836)

(assert (=> d!13897 (= lt!28991 (choose!385 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) lt!28742 (zeroValue!2055 newMap!16) lt!28502 (minValue!2055 newMap!16) (defaultEntry!2147 newMap!16)))))

(assert (=> d!13897 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13897 (= (lemmaChangeZeroKeyThenAddPairToListMap!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) lt!28742 (zeroValue!2055 newMap!16) lt!28502 (minValue!2055 newMap!16) (defaultEntry!2147 newMap!16)) lt!28991)))

(declare-fun bs!2861 () Bool)

(assert (= bs!2861 d!13897))

(assert (=> bs!2861 m!60835))

(assert (=> bs!2861 m!61069))

(declare-fun m!61689 () Bool)

(assert (=> bs!2861 m!61689))

(assert (=> bs!2861 m!60835))

(declare-fun m!61691 () Bool)

(assert (=> bs!2861 m!61691))

(declare-fun m!61693 () Bool)

(assert (=> bs!2861 m!61693))

(assert (=> b!66650 d!13897))

(declare-fun bm!5627 () Bool)

(declare-fun call!5631 () Bool)

(assert (=> bm!5627 (= call!5631 (arrayContainsKey!0 (_keys!3787 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!67104 () Bool)

(declare-fun e!43998 () Bool)

(declare-fun lt!29067 () SeekEntryResult!243)

(assert (=> b!67104 (= e!43998 ((_ is Undefined!243) lt!29067))))

(declare-fun lt!29056 () SeekEntryResult!243)

(declare-fun e!44001 () Bool)

(declare-fun b!67105 () Bool)

(assert (=> b!67105 (= e!44001 (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!29056)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun d!13899 () Bool)

(declare-fun e!43996 () Bool)

(assert (=> d!13899 e!43996))

(declare-fun res!36247 () Bool)

(assert (=> d!13899 (=> (not res!36247) (not e!43996))))

(declare-fun lt!29055 () tuple2!2110)

(assert (=> d!13899 (= res!36247 (_1!1065 lt!29055))))

(assert (=> d!13899 (= lt!29055 (tuple2!2111 true (LongMapFixedSize!673 (defaultEntry!2147 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (bvadd (_size!385 newMap!16) #b00000000000000000000000000000001) (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))) (_vacant!385 newMap!16))))))

(declare-fun lt!29063 () Unit!1836)

(declare-fun lt!29052 () Unit!1836)

(assert (=> d!13899 (= lt!29063 lt!29052)))

(declare-fun lt!29062 () array!3842)

(declare-fun lt!29064 () array!3840)

(assert (=> d!13899 (contains!716 (getCurrentListMap!419 lt!29064 lt!29062 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760))))))

(assert (=> d!13899 (= lt!29052 (lemmaValidKeyInArrayIsInListMap!79 lt!29064 lt!29062 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (defaultEntry!2147 newMap!16)))))

(assert (=> d!13899 (= lt!29062 (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))))))

(assert (=> d!13899 (= lt!29064 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))))))

(declare-fun lt!29079 () Unit!1836)

(declare-fun lt!29078 () Unit!1836)

(assert (=> d!13899 (= lt!29079 lt!29078)))

(declare-fun lt!29070 () array!3840)

(assert (=> d!13899 (= (arrayCountValidKeys!0 lt!29070 (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (bvadd (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3840 (_ BitVec 32)) Unit!1836)

(assert (=> d!13899 (= lt!29078 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!29070 (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760))))))

(assert (=> d!13899 (= lt!29070 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))))))

(declare-fun lt!29061 () Unit!1836)

(declare-fun lt!29071 () Unit!1836)

(assert (=> d!13899 (= lt!29061 lt!29071)))

(declare-fun lt!29074 () array!3840)

(assert (=> d!13899 (arrayContainsKey!0 lt!29074 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!13899 (= lt!29071 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!29074 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760))))))

(assert (=> d!13899 (= lt!29074 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))))))

(declare-fun lt!29072 () Unit!1836)

(declare-fun lt!29068 () Unit!1836)

(assert (=> d!13899 (= lt!29072 lt!29068)))

(assert (=> d!13899 (= (+!87 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (getCurrentListMap!419 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!10 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 32) (_ BitVec 64) V!2915 Int) Unit!1836)

(assert (=> d!13899 (= lt!29068 (lemmaAddValidKeyToArrayThenAddPairToListMap!10 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29054 () Unit!1836)

(declare-fun lt!29080 () Unit!1836)

(assert (=> d!13899 (= lt!29054 lt!29080)))

(assert (=> d!13899 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) (mask!6082 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3840 (_ BitVec 32) (_ BitVec 32)) Unit!1836)

(assert (=> d!13899 (= lt!29080 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (_keys!3787 newMap!16) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (mask!6082 newMap!16)))))

(declare-fun lt!29060 () Unit!1836)

(declare-fun lt!29053 () Unit!1836)

(assert (=> d!13899 (= lt!29060 lt!29053)))

(assert (=> d!13899 (= (arrayCountValidKeys!0 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3787 newMap!16) #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3840 (_ BitVec 32) (_ BitVec 64)) Unit!1836)

(assert (=> d!13899 (= lt!29053 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3787 newMap!16) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun lt!29059 () Unit!1836)

(declare-fun lt!29081 () Unit!1836)

(assert (=> d!13899 (= lt!29059 lt!29081)))

(declare-fun lt!29076 () (_ BitVec 32))

(declare-fun lt!29073 () List!1491)

(assert (=> d!13899 (arrayNoDuplicates!0 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) lt!29076 lt!29073)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3840 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1491) Unit!1836)

(assert (=> d!13899 (= lt!29081 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3787 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) lt!29076 lt!29073))))

(assert (=> d!13899 (= lt!29073 Nil!1488)))

(assert (=> d!13899 (= lt!29076 #b00000000000000000000000000000000)))

(declare-fun lt!29075 () Unit!1836)

(declare-fun e!44000 () Unit!1836)

(assert (=> d!13899 (= lt!29075 e!44000)))

(declare-fun c!9334 () Bool)

(assert (=> d!13899 (= c!9334 (arrayContainsKey!0 (_keys!3787 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!29057 () Unit!1836)

(declare-fun e!44002 () Unit!1836)

(assert (=> d!13899 (= lt!29057 e!44002)))

(declare-fun c!9335 () Bool)

(assert (=> d!13899 (= c!9335 (contains!716 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> d!13899 (valid!278 newMap!16)))

(assert (=> d!13899 (= (updateHelperNewKey!21 newMap!16 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502 (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760))) lt!29055)))

(declare-fun call!5633 () SeekEntryResult!243)

(declare-fun bm!5628 () Bool)

(assert (=> bm!5628 (= call!5633 (seekEntryOrOpen!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun call!5630 () Bool)

(declare-fun bm!5629 () Bool)

(declare-fun c!9332 () Bool)

(assert (=> bm!5629 (= call!5630 (inRange!0 (ite c!9335 (index!3101 lt!29056) (ite c!9332 (index!3100 lt!29067) (index!3103 lt!29067))) (mask!6082 newMap!16)))))

(declare-fun b!67106 () Bool)

(assert (=> b!67106 (= e!43996 (= (map!1143 (_2!1065 lt!29055)) (+!87 (map!1143 newMap!16) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!67107 () Bool)

(declare-fun e!44003 () Bool)

(assert (=> b!67107 (= e!44003 (not call!5631))))

(declare-fun b!67108 () Bool)

(declare-fun Unit!1861 () Unit!1836)

(assert (=> b!67108 (= e!44002 Unit!1861)))

(declare-fun lt!29065 () Unit!1836)

(assert (=> b!67108 (= lt!29065 (lemmaInListMapThenSeekEntryOrOpenFindsIt!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)))))

(assert (=> b!67108 (= lt!29056 call!5633)))

(declare-fun res!36244 () Bool)

(assert (=> b!67108 (= res!36244 ((_ is Found!243) lt!29056))))

(assert (=> b!67108 (=> (not res!36244) (not e!44001))))

(assert (=> b!67108 e!44001))

(declare-fun lt!29069 () Unit!1836)

(assert (=> b!67108 (= lt!29069 lt!29065)))

(assert (=> b!67108 false))

(declare-fun b!67109 () Bool)

(declare-fun res!36248 () Bool)

(assert (=> b!67109 (=> (not res!36248) (not e!44003))))

(assert (=> b!67109 (= res!36248 (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3100 lt!29067)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67110 () Bool)

(declare-fun Unit!1862 () Unit!1836)

(assert (=> b!67110 (= e!44000 Unit!1862)))

(declare-fun lt!29058 () Unit!1836)

(declare-fun lemmaArrayContainsKeyThenInListMap!10 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 64) (_ BitVec 32) Int) Unit!1836)

(assert (=> b!67110 (= lt!29058 (lemmaArrayContainsKeyThenInListMap!10 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(assert (=> b!67110 (contains!716 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))

(declare-fun lt!29066 () Unit!1836)

(assert (=> b!67110 (= lt!29066 lt!29058)))

(assert (=> b!67110 false))

(declare-fun b!67111 () Bool)

(declare-fun e!43997 () Bool)

(assert (=> b!67111 (= e!43998 e!43997)))

(declare-fun res!36243 () Bool)

(declare-fun call!5632 () Bool)

(assert (=> b!67111 (= res!36243 call!5632)))

(assert (=> b!67111 (=> (not res!36243) (not e!43997))))

(declare-fun b!67112 () Bool)

(declare-fun res!36240 () Bool)

(assert (=> b!67112 (= res!36240 (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3103 lt!29067)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67112 (=> (not res!36240) (not e!43997))))

(declare-fun b!67113 () Bool)

(declare-fun res!36242 () Bool)

(assert (=> b!67113 (=> (not res!36242) (not e!43996))))

(assert (=> b!67113 (= res!36242 (contains!716 (map!1143 (_2!1065 lt!29055)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun b!67114 () Bool)

(declare-fun res!36246 () Bool)

(assert (=> b!67114 (= res!36246 call!5630)))

(assert (=> b!67114 (=> (not res!36246) (not e!44001))))

(declare-fun bm!5630 () Bool)

(assert (=> bm!5630 (= call!5632 call!5630)))

(declare-fun b!67115 () Bool)

(assert (=> b!67115 (= e!43997 (not call!5631))))

(declare-fun b!67116 () Bool)

(declare-fun res!36245 () Bool)

(assert (=> b!67116 (=> (not res!36245) (not e!44003))))

(assert (=> b!67116 (= res!36245 call!5632)))

(declare-fun e!43999 () Bool)

(assert (=> b!67116 (= e!43999 e!44003)))

(declare-fun b!67117 () Bool)

(declare-fun Unit!1863 () Unit!1836)

(assert (=> b!67117 (= e!44000 Unit!1863)))

(declare-fun b!67118 () Bool)

(declare-fun res!36241 () Bool)

(assert (=> b!67118 (=> (not res!36241) (not e!43996))))

(assert (=> b!67118 (= res!36241 (valid!278 (_2!1065 lt!29055)))))

(declare-fun b!67119 () Bool)

(declare-fun lt!29077 () Unit!1836)

(assert (=> b!67119 (= e!44002 lt!29077)))

(assert (=> b!67119 (= lt!29077 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)))))

(assert (=> b!67119 (= lt!29067 call!5633)))

(assert (=> b!67119 (= c!9332 ((_ is MissingZero!243) lt!29067))))

(assert (=> b!67119 e!43999))

(declare-fun b!67120 () Bool)

(declare-fun c!9333 () Bool)

(assert (=> b!67120 (= c!9333 ((_ is MissingVacant!243) lt!29067))))

(assert (=> b!67120 (= e!43999 e!43998)))

(assert (= (and d!13899 c!9335) b!67108))

(assert (= (and d!13899 (not c!9335)) b!67119))

(assert (= (and b!67108 res!36244) b!67114))

(assert (= (and b!67114 res!36246) b!67105))

(assert (= (and b!67119 c!9332) b!67116))

(assert (= (and b!67119 (not c!9332)) b!67120))

(assert (= (and b!67116 res!36245) b!67109))

(assert (= (and b!67109 res!36248) b!67107))

(assert (= (and b!67120 c!9333) b!67111))

(assert (= (and b!67120 (not c!9333)) b!67104))

(assert (= (and b!67111 res!36243) b!67112))

(assert (= (and b!67112 res!36240) b!67115))

(assert (= (or b!67116 b!67111) bm!5630))

(assert (= (or b!67107 b!67115) bm!5627))

(assert (= (or b!67114 bm!5630) bm!5629))

(assert (= (or b!67108 b!67119) bm!5628))

(assert (= (and d!13899 c!9334) b!67110))

(assert (= (and d!13899 (not c!9334)) b!67117))

(assert (= (and d!13899 res!36247) b!67118))

(assert (= (and b!67118 res!36241) b!67113))

(assert (= (and b!67113 res!36242) b!67106))

(declare-fun m!61695 () Bool)

(assert (=> b!67106 m!61695))

(assert (=> b!67106 m!60729))

(assert (=> b!67106 m!60729))

(declare-fun m!61697 () Bool)

(assert (=> b!67106 m!61697))

(assert (=> b!67119 m!60719))

(assert (=> b!67119 m!61041))

(declare-fun m!61699 () Bool)

(assert (=> b!67105 m!61699))

(assert (=> b!67110 m!60719))

(declare-fun m!61701 () Bool)

(assert (=> b!67110 m!61701))

(assert (=> b!67110 m!60835))

(assert (=> b!67110 m!60835))

(assert (=> b!67110 m!60719))

(assert (=> b!67110 m!61029))

(assert (=> bm!5628 m!60719))

(assert (=> bm!5628 m!60993))

(assert (=> b!67113 m!61695))

(assert (=> b!67113 m!61695))

(assert (=> b!67113 m!60719))

(declare-fun m!61703 () Bool)

(assert (=> b!67113 m!61703))

(assert (=> bm!5627 m!60719))

(assert (=> bm!5627 m!61039))

(declare-fun m!61705 () Bool)

(assert (=> b!67112 m!61705))

(declare-fun m!61707 () Bool)

(assert (=> b!67118 m!61707))

(assert (=> b!67108 m!60719))

(assert (=> b!67108 m!60997))

(declare-fun m!61709 () Bool)

(assert (=> b!67109 m!61709))

(declare-fun m!61711 () Bool)

(assert (=> bm!5629 m!61711))

(declare-fun m!61713 () Bool)

(assert (=> d!13899 m!61713))

(assert (=> d!13899 m!60719))

(declare-fun m!61715 () Bool)

(assert (=> d!13899 m!61715))

(assert (=> d!13899 m!60835))

(assert (=> d!13899 m!60719))

(assert (=> d!13899 m!61029))

(declare-fun m!61717 () Bool)

(assert (=> d!13899 m!61717))

(declare-fun m!61719 () Bool)

(assert (=> d!13899 m!61719))

(declare-fun m!61721 () Bool)

(assert (=> d!13899 m!61721))

(declare-fun m!61723 () Bool)

(assert (=> d!13899 m!61723))

(declare-fun m!61725 () Bool)

(assert (=> d!13899 m!61725))

(assert (=> d!13899 m!60719))

(declare-fun m!61727 () Bool)

(assert (=> d!13899 m!61727))

(assert (=> d!13899 m!60719))

(declare-fun m!61729 () Bool)

(assert (=> d!13899 m!61729))

(assert (=> d!13899 m!60719))

(declare-fun m!61731 () Bool)

(assert (=> d!13899 m!61731))

(assert (=> d!13899 m!60719))

(assert (=> d!13899 m!61039))

(assert (=> d!13899 m!60719))

(declare-fun m!61733 () Bool)

(assert (=> d!13899 m!61733))

(assert (=> d!13899 m!60719))

(declare-fun m!61735 () Bool)

(assert (=> d!13899 m!61735))

(assert (=> d!13899 m!61719))

(assert (=> d!13899 m!61721))

(declare-fun m!61737 () Bool)

(assert (=> d!13899 m!61737))

(declare-fun m!61739 () Bool)

(assert (=> d!13899 m!61739))

(assert (=> d!13899 m!60727))

(declare-fun m!61741 () Bool)

(assert (=> d!13899 m!61741))

(declare-fun m!61743 () Bool)

(assert (=> d!13899 m!61743))

(assert (=> d!13899 m!61049))

(assert (=> d!13899 m!60835))

(assert (=> d!13899 m!60835))

(assert (=> d!13899 m!61659))

(declare-fun m!61745 () Bool)

(assert (=> d!13899 m!61745))

(declare-fun m!61747 () Bool)

(assert (=> d!13899 m!61747))

(assert (=> bm!5543 d!13899))

(declare-fun d!13901 () Bool)

(declare-fun e!44004 () Bool)

(assert (=> d!13901 e!44004))

(declare-fun res!36250 () Bool)

(assert (=> d!13901 (=> (not res!36250) (not e!44004))))

(declare-fun lt!29083 () ListLongMap!1415)

(assert (=> d!13901 (= res!36250 (contains!716 lt!29083 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun lt!29085 () List!1490)

(assert (=> d!13901 (= lt!29083 (ListLongMap!1416 lt!29085))))

(declare-fun lt!29084 () Unit!1836)

(declare-fun lt!29082 () Unit!1836)

(assert (=> d!13901 (= lt!29084 lt!29082)))

(assert (=> d!13901 (= (getValueByKey!129 lt!29085 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13901 (= lt!29082 (lemmaContainsTupThenGetReturnValue!48 lt!29085 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13901 (= lt!29085 (insertStrictlySorted!50 (toList!723 call!5488) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13901 (= (+!87 call!5488 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!29083)))

(declare-fun b!67121 () Bool)

(declare-fun res!36249 () Bool)

(assert (=> b!67121 (=> (not res!36249) (not e!44004))))

(assert (=> b!67121 (= res!36249 (= (getValueByKey!129 (toList!723 lt!29083) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!67122 () Bool)

(assert (=> b!67122 (= e!44004 (contains!718 (toList!723 lt!29083) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(assert (= (and d!13901 res!36250) b!67121))

(assert (= (and b!67121 res!36249) b!67122))

(declare-fun m!61749 () Bool)

(assert (=> d!13901 m!61749))

(declare-fun m!61751 () Bool)

(assert (=> d!13901 m!61751))

(declare-fun m!61753 () Bool)

(assert (=> d!13901 m!61753))

(declare-fun m!61755 () Bool)

(assert (=> d!13901 m!61755))

(declare-fun m!61757 () Bool)

(assert (=> b!67121 m!61757))

(declare-fun m!61759 () Bool)

(assert (=> b!67122 m!61759))

(assert (=> b!66450 d!13901))

(declare-fun d!13903 () Bool)

(assert (=> d!13903 (= (apply!72 lt!28612 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1130 (getValueByKey!129 (toList!723 lt!28612) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2862 () Bool)

(assert (= bs!2862 d!13903))

(assert (=> bs!2862 m!61107))

(assert (=> bs!2862 m!61107))

(declare-fun m!61761 () Bool)

(assert (=> bs!2862 m!61761))

(assert (=> b!66466 d!13903))

(declare-fun d!13905 () Bool)

(assert (=> d!13905 (= (inRange!0 (ite c!9214 (ite c!9210 (index!3101 lt!28751) (ite c!9209 (index!3100 lt!28747) (index!3103 lt!28747))) (ite c!9208 (index!3101 lt!28756) (ite c!9213 (index!3100 lt!28739) (index!3103 lt!28739)))) (mask!6082 newMap!16)) (and (bvsge (ite c!9214 (ite c!9210 (index!3101 lt!28751) (ite c!9209 (index!3100 lt!28747) (index!3103 lt!28747))) (ite c!9208 (index!3101 lt!28756) (ite c!9213 (index!3100 lt!28739) (index!3103 lt!28739)))) #b00000000000000000000000000000000) (bvslt (ite c!9214 (ite c!9210 (index!3101 lt!28751) (ite c!9209 (index!3100 lt!28747) (index!3103 lt!28747))) (ite c!9208 (index!3101 lt!28756) (ite c!9213 (index!3100 lt!28739) (index!3103 lt!28739)))) (bvadd (mask!6082 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5544 d!13905))

(declare-fun d!13907 () Bool)

(declare-fun e!44006 () Bool)

(assert (=> d!13907 e!44006))

(declare-fun res!36251 () Bool)

(assert (=> d!13907 (=> res!36251 e!44006)))

(declare-fun lt!29089 () Bool)

(assert (=> d!13907 (= res!36251 (not lt!29089))))

(declare-fun lt!29086 () Bool)

(assert (=> d!13907 (= lt!29089 lt!29086)))

(declare-fun lt!29087 () Unit!1836)

(declare-fun e!44005 () Unit!1836)

(assert (=> d!13907 (= lt!29087 e!44005)))

(declare-fun c!9336 () Bool)

(assert (=> d!13907 (= c!9336 lt!29086)))

(assert (=> d!13907 (= lt!29086 (containsKey!133 (toList!723 call!5557) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> d!13907 (= (contains!716 call!5557 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) lt!29089)))

(declare-fun b!67123 () Bool)

(declare-fun lt!29088 () Unit!1836)

(assert (=> b!67123 (= e!44005 lt!29088)))

(assert (=> b!67123 (= lt!29088 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 call!5557) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> b!67123 (isDefined!83 (getValueByKey!129 (toList!723 call!5557) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun b!67124 () Bool)

(declare-fun Unit!1864 () Unit!1836)

(assert (=> b!67124 (= e!44005 Unit!1864)))

(declare-fun b!67125 () Bool)

(assert (=> b!67125 (= e!44006 (isDefined!83 (getValueByKey!129 (toList!723 call!5557) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))))

(assert (= (and d!13907 c!9336) b!67123))

(assert (= (and d!13907 (not c!9336)) b!67124))

(assert (= (and d!13907 (not res!36251)) b!67125))

(assert (=> d!13907 m!60719))

(declare-fun m!61763 () Bool)

(assert (=> d!13907 m!61763))

(assert (=> b!67123 m!60719))

(declare-fun m!61765 () Bool)

(assert (=> b!67123 m!61765))

(assert (=> b!67123 m!60719))

(declare-fun m!61767 () Bool)

(assert (=> b!67123 m!61767))

(assert (=> b!67123 m!61767))

(declare-fun m!61769 () Bool)

(assert (=> b!67123 m!61769))

(assert (=> b!67125 m!60719))

(assert (=> b!67125 m!61767))

(assert (=> b!67125 m!61767))

(assert (=> b!67125 m!61769))

(assert (=> b!66667 d!13907))

(declare-fun d!13909 () Bool)

(declare-fun res!36252 () Bool)

(declare-fun e!44007 () Bool)

(assert (=> d!13909 (=> res!36252 e!44007)))

(assert (=> d!13909 (= res!36252 (= (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> d!13909 (= (arrayContainsKey!0 (_keys!3787 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b00000000000000000000000000000000) e!44007)))

(declare-fun b!67126 () Bool)

(declare-fun e!44008 () Bool)

(assert (=> b!67126 (= e!44007 e!44008)))

(declare-fun res!36253 () Bool)

(assert (=> b!67126 (=> (not res!36253) (not e!44008))))

(assert (=> b!67126 (= res!36253 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2069 (_keys!3787 newMap!16))))))

(declare-fun b!67127 () Bool)

(assert (=> b!67127 (= e!44008 (arrayContainsKey!0 (_keys!3787 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!13909 (not res!36252)) b!67126))

(assert (= (and b!67126 res!36253) b!67127))

(assert (=> d!13909 m!61079))

(assert (=> b!67127 m!60719))

(declare-fun m!61771 () Bool)

(assert (=> b!67127 m!61771))

(assert (=> bm!5560 d!13909))

(declare-fun d!13911 () Bool)

(declare-fun e!44010 () Bool)

(assert (=> d!13911 e!44010))

(declare-fun res!36254 () Bool)

(assert (=> d!13911 (=> res!36254 e!44010)))

(declare-fun lt!29093 () Bool)

(assert (=> d!13911 (= res!36254 (not lt!29093))))

(declare-fun lt!29090 () Bool)

(assert (=> d!13911 (= lt!29093 lt!29090)))

(declare-fun lt!29091 () Unit!1836)

(declare-fun e!44009 () Unit!1836)

(assert (=> d!13911 (= lt!29091 e!44009)))

(declare-fun c!9337 () Bool)

(assert (=> d!13911 (= c!9337 lt!29090)))

(assert (=> d!13911 (= lt!29090 (containsKey!133 (toList!723 lt!28634) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!13911 (= (contains!716 lt!28634 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!29093)))

(declare-fun b!67128 () Bool)

(declare-fun lt!29092 () Unit!1836)

(assert (=> b!67128 (= e!44009 lt!29092)))

(assert (=> b!67128 (= lt!29092 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28634) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!67128 (isDefined!83 (getValueByKey!129 (toList!723 lt!28634) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!67129 () Bool)

(declare-fun Unit!1865 () Unit!1836)

(assert (=> b!67129 (= e!44009 Unit!1865)))

(declare-fun b!67130 () Bool)

(assert (=> b!67130 (= e!44010 (isDefined!83 (getValueByKey!129 (toList!723 lt!28634) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!13911 c!9337) b!67128))

(assert (= (and d!13911 (not c!9337)) b!67129))

(assert (= (and d!13911 (not res!36254)) b!67130))

(assert (=> d!13911 m!60843))

(declare-fun m!61773 () Bool)

(assert (=> d!13911 m!61773))

(assert (=> b!67128 m!60843))

(declare-fun m!61775 () Bool)

(assert (=> b!67128 m!61775))

(assert (=> b!67128 m!60843))

(assert (=> b!67128 m!61685))

(assert (=> b!67128 m!61685))

(declare-fun m!61777 () Bool)

(assert (=> b!67128 m!61777))

(assert (=> b!67130 m!60843))

(assert (=> b!67130 m!61685))

(assert (=> b!67130 m!61685))

(assert (=> b!67130 m!61777))

(assert (=> b!66501 d!13911))

(declare-fun b!67132 () Bool)

(declare-fun e!44011 () Option!135)

(declare-fun e!44012 () Option!135)

(assert (=> b!67132 (= e!44011 e!44012)))

(declare-fun c!9339 () Bool)

(assert (=> b!67132 (= c!9339 (and ((_ is Cons!1486) (toList!723 lt!28656)) (not (= (_1!1064 (h!2070 (toList!723 lt!28656))) (_1!1064 lt!28503)))))))

(declare-fun d!13913 () Bool)

(declare-fun c!9338 () Bool)

(assert (=> d!13913 (= c!9338 (and ((_ is Cons!1486) (toList!723 lt!28656)) (= (_1!1064 (h!2070 (toList!723 lt!28656))) (_1!1064 lt!28503))))))

(assert (=> d!13913 (= (getValueByKey!129 (toList!723 lt!28656) (_1!1064 lt!28503)) e!44011)))

(declare-fun b!67133 () Bool)

(assert (=> b!67133 (= e!44012 (getValueByKey!129 (t!4976 (toList!723 lt!28656)) (_1!1064 lt!28503)))))

(declare-fun b!67131 () Bool)

(assert (=> b!67131 (= e!44011 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28656)))))))

(declare-fun b!67134 () Bool)

(assert (=> b!67134 (= e!44012 None!133)))

(assert (= (and d!13913 c!9338) b!67131))

(assert (= (and d!13913 (not c!9338)) b!67132))

(assert (= (and b!67132 c!9339) b!67133))

(assert (= (and b!67132 (not c!9339)) b!67134))

(declare-fun m!61779 () Bool)

(assert (=> b!67133 m!61779))

(assert (=> b!66516 d!13913))

(declare-fun d!13915 () Bool)

(assert (=> d!13915 (= (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (and (not (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66543 d!13915))

(assert (=> bm!5558 d!13793))

(declare-fun d!13917 () Bool)

(declare-fun e!44014 () Bool)

(assert (=> d!13917 e!44014))

(declare-fun res!36255 () Bool)

(assert (=> d!13917 (=> res!36255 e!44014)))

(declare-fun lt!29097 () Bool)

(assert (=> d!13917 (= res!36255 (not lt!29097))))

(declare-fun lt!29094 () Bool)

(assert (=> d!13917 (= lt!29097 lt!29094)))

(declare-fun lt!29095 () Unit!1836)

(declare-fun e!44013 () Unit!1836)

(assert (=> d!13917 (= lt!29095 e!44013)))

(declare-fun c!9340 () Bool)

(assert (=> d!13917 (= c!9340 lt!29094)))

(assert (=> d!13917 (= lt!29094 (containsKey!133 (toList!723 call!5567) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760)))))))

(assert (=> d!13917 (= (contains!716 call!5567 (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760)))) lt!29097)))

(declare-fun b!67135 () Bool)

(declare-fun lt!29096 () Unit!1836)

(assert (=> b!67135 (= e!44013 lt!29096)))

(assert (=> b!67135 (= lt!29096 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 call!5567) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760)))))))

(assert (=> b!67135 (isDefined!83 (getValueByKey!129 (toList!723 call!5567) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760)))))))

(declare-fun b!67136 () Bool)

(declare-fun Unit!1866 () Unit!1836)

(assert (=> b!67136 (= e!44013 Unit!1866)))

(declare-fun b!67137 () Bool)

(assert (=> b!67137 (= e!44014 (isDefined!83 (getValueByKey!129 (toList!723 call!5567) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760))))))))

(assert (= (and d!13917 c!9340) b!67135))

(assert (= (and d!13917 (not c!9340)) b!67136))

(assert (= (and d!13917 (not res!36255)) b!67137))

(declare-fun m!61781 () Bool)

(assert (=> d!13917 m!61781))

(declare-fun m!61783 () Bool)

(assert (=> b!67135 m!61783))

(declare-fun m!61785 () Bool)

(assert (=> b!67135 m!61785))

(assert (=> b!67135 m!61785))

(declare-fun m!61787 () Bool)

(assert (=> b!67135 m!61787))

(assert (=> b!67137 m!61785))

(assert (=> b!67137 m!61785))

(assert (=> b!67137 m!61787))

(assert (=> bm!5551 d!13917))

(declare-fun d!13919 () Bool)

(declare-fun lt!29100 () Bool)

(declare-fun content!71 (List!1491) (InoxSet (_ BitVec 64)))

(assert (=> d!13919 (= lt!29100 (select (content!71 Nil!1488) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun e!44020 () Bool)

(assert (=> d!13919 (= lt!29100 e!44020)))

(declare-fun res!36260 () Bool)

(assert (=> d!13919 (=> (not res!36260) (not e!44020))))

(assert (=> d!13919 (= res!36260 ((_ is Cons!1487) Nil!1488))))

(assert (=> d!13919 (= (contains!719 Nil!1488 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) lt!29100)))

(declare-fun b!67142 () Bool)

(declare-fun e!44019 () Bool)

(assert (=> b!67142 (= e!44020 e!44019)))

(declare-fun res!36261 () Bool)

(assert (=> b!67142 (=> res!36261 e!44019)))

(assert (=> b!67142 (= res!36261 (= (h!2071 Nil!1488) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun b!67143 () Bool)

(assert (=> b!67143 (= e!44019 (contains!719 (t!4977 Nil!1488) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (= (and d!13919 res!36260) b!67142))

(assert (= (and b!67142 (not res!36261)) b!67143))

(declare-fun m!61789 () Bool)

(assert (=> d!13919 m!61789))

(assert (=> d!13919 m!60719))

(declare-fun m!61791 () Bool)

(assert (=> d!13919 m!61791))

(assert (=> b!67143 m!60719))

(declare-fun m!61793 () Bool)

(assert (=> b!67143 m!61793))

(assert (=> b!66544 d!13919))

(assert (=> d!13703 d!13719))

(assert (=> b!66495 d!13767))

(declare-fun d!13921 () Bool)

(declare-fun res!36262 () Bool)

(declare-fun e!44021 () Bool)

(assert (=> d!13921 (=> res!36262 e!44021)))

(assert (=> d!13921 (= res!36262 (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> d!13921 (= (arrayContainsKey!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!44021)))

(declare-fun b!67144 () Bool)

(declare-fun e!44022 () Bool)

(assert (=> b!67144 (= e!44021 e!44022)))

(declare-fun res!36263 () Bool)

(assert (=> b!67144 (=> (not res!36263) (not e!44022))))

(assert (=> b!67144 (= res!36263 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!67145 () Bool)

(assert (=> b!67145 (= e!44022 (arrayContainsKey!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!13921 (not res!36262)) b!67144))

(assert (= (and b!67144 res!36263) b!67145))

(assert (=> d!13921 m!61221))

(assert (=> b!67145 m!60719))

(declare-fun m!61795 () Bool)

(assert (=> b!67145 m!61795))

(assert (=> b!66523 d!13921))

(declare-fun d!13923 () Bool)

(declare-fun e!44024 () Bool)

(assert (=> d!13923 e!44024))

(declare-fun res!36264 () Bool)

(assert (=> d!13923 (=> res!36264 e!44024)))

(declare-fun lt!29104 () Bool)

(assert (=> d!13923 (= res!36264 (not lt!29104))))

(declare-fun lt!29101 () Bool)

(assert (=> d!13923 (= lt!29104 lt!29101)))

(declare-fun lt!29102 () Unit!1836)

(declare-fun e!44023 () Unit!1836)

(assert (=> d!13923 (= lt!29102 e!44023)))

(declare-fun c!9341 () Bool)

(assert (=> d!13923 (= c!9341 lt!29101)))

(assert (=> d!13923 (= lt!29101 (containsKey!133 (toList!723 lt!28634) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13923 (= (contains!716 lt!28634 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29104)))

(declare-fun b!67146 () Bool)

(declare-fun lt!29103 () Unit!1836)

(assert (=> b!67146 (= e!44023 lt!29103)))

(assert (=> b!67146 (= lt!29103 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28634) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67146 (isDefined!83 (getValueByKey!129 (toList!723 lt!28634) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67147 () Bool)

(declare-fun Unit!1867 () Unit!1836)

(assert (=> b!67147 (= e!44023 Unit!1867)))

(declare-fun b!67148 () Bool)

(assert (=> b!67148 (= e!44024 (isDefined!83 (getValueByKey!129 (toList!723 lt!28634) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13923 c!9341) b!67146))

(assert (= (and d!13923 (not c!9341)) b!67147))

(assert (= (and d!13923 (not res!36264)) b!67148))

(declare-fun m!61797 () Bool)

(assert (=> d!13923 m!61797))

(declare-fun m!61799 () Bool)

(assert (=> b!67146 m!61799))

(declare-fun m!61801 () Bool)

(assert (=> b!67146 m!61801))

(assert (=> b!67146 m!61801))

(declare-fun m!61803 () Bool)

(assert (=> b!67146 m!61803))

(assert (=> b!67148 m!61801))

(assert (=> b!67148 m!61801))

(assert (=> b!67148 m!61803))

(assert (=> b!66497 d!13923))

(assert (=> b!66457 d!13767))

(assert (=> bm!5557 d!13701))

(declare-fun d!13925 () Bool)

(declare-fun lt!29105 () Bool)

(assert (=> d!13925 (= lt!29105 (select (content!70 (toList!723 lt!28648)) lt!28500))))

(declare-fun e!44025 () Bool)

(assert (=> d!13925 (= lt!29105 e!44025)))

(declare-fun res!36266 () Bool)

(assert (=> d!13925 (=> (not res!36266) (not e!44025))))

(assert (=> d!13925 (= res!36266 ((_ is Cons!1486) (toList!723 lt!28648)))))

(assert (=> d!13925 (= (contains!718 (toList!723 lt!28648) lt!28500) lt!29105)))

(declare-fun b!67149 () Bool)

(declare-fun e!44026 () Bool)

(assert (=> b!67149 (= e!44025 e!44026)))

(declare-fun res!36265 () Bool)

(assert (=> b!67149 (=> res!36265 e!44026)))

(assert (=> b!67149 (= res!36265 (= (h!2070 (toList!723 lt!28648)) lt!28500))))

(declare-fun b!67150 () Bool)

(assert (=> b!67150 (= e!44026 (contains!718 (t!4976 (toList!723 lt!28648)) lt!28500))))

(assert (= (and d!13925 res!36266) b!67149))

(assert (= (and b!67149 (not res!36265)) b!67150))

(declare-fun m!61805 () Bool)

(assert (=> d!13925 m!61805))

(declare-fun m!61807 () Bool)

(assert (=> d!13925 m!61807))

(declare-fun m!61809 () Bool)

(assert (=> b!67150 m!61809))

(assert (=> b!66513 d!13925))

(declare-fun d!13927 () Bool)

(declare-fun res!36267 () Bool)

(declare-fun e!44027 () Bool)

(assert (=> d!13927 (=> (not res!36267) (not e!44027))))

(assert (=> d!13927 (= res!36267 (simpleValid!47 (_2!1065 lt!28753)))))

(assert (=> d!13927 (= (valid!278 (_2!1065 lt!28753)) e!44027)))

(declare-fun b!67151 () Bool)

(declare-fun res!36268 () Bool)

(assert (=> b!67151 (=> (not res!36268) (not e!44027))))

(assert (=> b!67151 (= res!36268 (= (arrayCountValidKeys!0 (_keys!3787 (_2!1065 lt!28753)) #b00000000000000000000000000000000 (size!2069 (_keys!3787 (_2!1065 lt!28753)))) (_size!385 (_2!1065 lt!28753))))))

(declare-fun b!67152 () Bool)

(declare-fun res!36269 () Bool)

(assert (=> b!67152 (=> (not res!36269) (not e!44027))))

(assert (=> b!67152 (= res!36269 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3787 (_2!1065 lt!28753)) (mask!6082 (_2!1065 lt!28753))))))

(declare-fun b!67153 () Bool)

(assert (=> b!67153 (= e!44027 (arrayNoDuplicates!0 (_keys!3787 (_2!1065 lt!28753)) #b00000000000000000000000000000000 Nil!1488))))

(assert (= (and d!13927 res!36267) b!67151))

(assert (= (and b!67151 res!36268) b!67152))

(assert (= (and b!67152 res!36269) b!67153))

(declare-fun m!61811 () Bool)

(assert (=> d!13927 m!61811))

(declare-fun m!61813 () Bool)

(assert (=> b!67151 m!61813))

(declare-fun m!61815 () Bool)

(assert (=> b!67152 m!61815))

(declare-fun m!61817 () Bool)

(assert (=> b!67153 m!61817))

(assert (=> d!13737 d!13927))

(assert (=> d!13737 d!13739))

(declare-fun d!13929 () Bool)

(declare-fun lt!29106 () Bool)

(assert (=> d!13929 (= lt!29106 (select (content!70 (toList!723 lt!28652)) lt!28503))))

(declare-fun e!44028 () Bool)

(assert (=> d!13929 (= lt!29106 e!44028)))

(declare-fun res!36271 () Bool)

(assert (=> d!13929 (=> (not res!36271) (not e!44028))))

(assert (=> d!13929 (= res!36271 ((_ is Cons!1486) (toList!723 lt!28652)))))

(assert (=> d!13929 (= (contains!718 (toList!723 lt!28652) lt!28503) lt!29106)))

(declare-fun b!67154 () Bool)

(declare-fun e!44029 () Bool)

(assert (=> b!67154 (= e!44028 e!44029)))

(declare-fun res!36270 () Bool)

(assert (=> b!67154 (=> res!36270 e!44029)))

(assert (=> b!67154 (= res!36270 (= (h!2070 (toList!723 lt!28652)) lt!28503))))

(declare-fun b!67155 () Bool)

(assert (=> b!67155 (= e!44029 (contains!718 (t!4976 (toList!723 lt!28652)) lt!28503))))

(assert (= (and d!13929 res!36271) b!67154))

(assert (= (and b!67154 (not res!36270)) b!67155))

(declare-fun m!61819 () Bool)

(assert (=> d!13929 m!61819))

(declare-fun m!61821 () Bool)

(assert (=> d!13929 m!61821))

(declare-fun m!61823 () Bool)

(assert (=> b!67155 m!61823))

(assert (=> b!66515 d!13929))

(assert (=> d!13701 d!13873))

(declare-fun d!13931 () Bool)

(declare-fun e!44030 () Bool)

(assert (=> d!13931 e!44030))

(declare-fun res!36273 () Bool)

(assert (=> d!13931 (=> (not res!36273) (not e!44030))))

(declare-fun lt!29108 () ListLongMap!1415)

(assert (=> d!13931 (= res!36273 (contains!716 lt!29108 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun lt!29110 () List!1490)

(assert (=> d!13931 (= lt!29108 (ListLongMap!1416 lt!29110))))

(declare-fun lt!29109 () Unit!1836)

(declare-fun lt!29107 () Unit!1836)

(assert (=> d!13931 (= lt!29109 lt!29107)))

(assert (=> d!13931 (= (getValueByKey!129 lt!29110 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13931 (= lt!29107 (lemmaContainsTupThenGetReturnValue!48 lt!29110 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13931 (= lt!29110 (insertStrictlySorted!50 (toList!723 (+!87 lt!28505 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13931 (= (+!87 (+!87 lt!28505 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!29108)))

(declare-fun b!67156 () Bool)

(declare-fun res!36272 () Bool)

(assert (=> b!67156 (=> (not res!36272) (not e!44030))))

(assert (=> b!67156 (= res!36272 (= (getValueByKey!129 (toList!723 lt!29108) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!67157 () Bool)

(assert (=> b!67157 (= e!44030 (contains!718 (toList!723 lt!29108) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(assert (= (and d!13931 res!36273) b!67156))

(assert (= (and b!67156 res!36272) b!67157))

(declare-fun m!61825 () Bool)

(assert (=> d!13931 m!61825))

(declare-fun m!61827 () Bool)

(assert (=> d!13931 m!61827))

(declare-fun m!61829 () Bool)

(assert (=> d!13931 m!61829))

(declare-fun m!61831 () Bool)

(assert (=> d!13931 m!61831))

(declare-fun m!61833 () Bool)

(assert (=> b!67156 m!61833))

(declare-fun m!61835 () Bool)

(assert (=> b!67157 m!61835))

(assert (=> d!13723 d!13931))

(declare-fun d!13933 () Bool)

(declare-fun e!44031 () Bool)

(assert (=> d!13933 e!44031))

(declare-fun res!36275 () Bool)

(assert (=> d!13933 (=> (not res!36275) (not e!44031))))

(declare-fun lt!29112 () ListLongMap!1415)

(assert (=> d!13933 (= res!36275 (contains!716 lt!29112 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun lt!29114 () List!1490)

(assert (=> d!13933 (= lt!29112 (ListLongMap!1416 lt!29114))))

(declare-fun lt!29113 () Unit!1836)

(declare-fun lt!29111 () Unit!1836)

(assert (=> d!13933 (= lt!29113 lt!29111)))

(assert (=> d!13933 (= (getValueByKey!129 lt!29114 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13933 (= lt!29111 (lemmaContainsTupThenGetReturnValue!48 lt!29114 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13933 (= lt!29114 (insertStrictlySorted!50 (toList!723 lt!28505) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13933 (= (+!87 lt!28505 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!29112)))

(declare-fun b!67158 () Bool)

(declare-fun res!36274 () Bool)

(assert (=> b!67158 (=> (not res!36274) (not e!44031))))

(assert (=> b!67158 (= res!36274 (= (getValueByKey!129 (toList!723 lt!29112) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!67159 () Bool)

(assert (=> b!67159 (= e!44031 (contains!718 (toList!723 lt!29112) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(assert (= (and d!13933 res!36275) b!67158))

(assert (= (and b!67158 res!36274) b!67159))

(declare-fun m!61837 () Bool)

(assert (=> d!13933 m!61837))

(declare-fun m!61839 () Bool)

(assert (=> d!13933 m!61839))

(declare-fun m!61841 () Bool)

(assert (=> d!13933 m!61841))

(declare-fun m!61843 () Bool)

(assert (=> d!13933 m!61843))

(declare-fun m!61845 () Bool)

(assert (=> b!67158 m!61845))

(declare-fun m!61847 () Bool)

(assert (=> b!67159 m!61847))

(assert (=> d!13723 d!13933))

(declare-fun d!13935 () Bool)

(declare-fun e!44032 () Bool)

(assert (=> d!13935 e!44032))

(declare-fun res!36277 () Bool)

(assert (=> d!13935 (=> (not res!36277) (not e!44032))))

(declare-fun lt!29116 () ListLongMap!1415)

(assert (=> d!13935 (= res!36277 (contains!716 lt!29116 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun lt!29118 () List!1490)

(assert (=> d!13935 (= lt!29116 (ListLongMap!1416 lt!29118))))

(declare-fun lt!29117 () Unit!1836)

(declare-fun lt!29115 () Unit!1836)

(assert (=> d!13935 (= lt!29117 lt!29115)))

(assert (=> d!13935 (= (getValueByKey!129 lt!29118 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (Some!134 (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!13935 (= lt!29115 (lemmaContainsTupThenGetReturnValue!48 lt!29118 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!13935 (= lt!29118 (insertStrictlySorted!50 (toList!723 lt!28505) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!13935 (= (+!87 lt!28505 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) lt!29116)))

(declare-fun b!67160 () Bool)

(declare-fun res!36276 () Bool)

(assert (=> b!67160 (=> (not res!36276) (not e!44032))))

(assert (=> b!67160 (= res!36276 (= (getValueByKey!129 (toList!723 lt!29116) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (Some!134 (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun b!67161 () Bool)

(assert (=> b!67161 (= e!44032 (contains!718 (toList!723 lt!29116) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))

(assert (= (and d!13935 res!36277) b!67160))

(assert (= (and b!67160 res!36276) b!67161))

(declare-fun m!61849 () Bool)

(assert (=> d!13935 m!61849))

(declare-fun m!61851 () Bool)

(assert (=> d!13935 m!61851))

(declare-fun m!61853 () Bool)

(assert (=> d!13935 m!61853))

(declare-fun m!61855 () Bool)

(assert (=> d!13935 m!61855))

(declare-fun m!61857 () Bool)

(assert (=> b!67160 m!61857))

(declare-fun m!61859 () Bool)

(assert (=> b!67161 m!61859))

(assert (=> d!13723 d!13935))

(declare-fun d!13937 () Bool)

(assert (=> d!13937 (= (+!87 (+!87 lt!28505 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (+!87 (+!87 lt!28505 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))

(assert (=> d!13937 true))

(declare-fun _$28!112 () Unit!1836)

(assert (=> d!13937 (= (choose!373 lt!28505 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) _$28!112)))

(declare-fun bs!2863 () Bool)

(assert (= bs!2863 d!13937))

(assert (=> bs!2863 m!60961))

(assert (=> bs!2863 m!60961))

(assert (=> bs!2863 m!60965))

(assert (=> bs!2863 m!60967))

(assert (=> bs!2863 m!60967))

(assert (=> bs!2863 m!60969))

(assert (=> d!13723 d!13937))

(declare-fun d!13939 () Bool)

(declare-fun e!44033 () Bool)

(assert (=> d!13939 e!44033))

(declare-fun res!36279 () Bool)

(assert (=> d!13939 (=> (not res!36279) (not e!44033))))

(declare-fun lt!29120 () ListLongMap!1415)

(assert (=> d!13939 (= res!36279 (contains!716 lt!29120 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun lt!29122 () List!1490)

(assert (=> d!13939 (= lt!29120 (ListLongMap!1416 lt!29122))))

(declare-fun lt!29121 () Unit!1836)

(declare-fun lt!29119 () Unit!1836)

(assert (=> d!13939 (= lt!29121 lt!29119)))

(assert (=> d!13939 (= (getValueByKey!129 lt!29122 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (Some!134 (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!13939 (= lt!29119 (lemmaContainsTupThenGetReturnValue!48 lt!29122 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!13939 (= lt!29122 (insertStrictlySorted!50 (toList!723 (+!87 lt!28505 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!13939 (= (+!87 (+!87 lt!28505 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) lt!29120)))

(declare-fun b!67162 () Bool)

(declare-fun res!36278 () Bool)

(assert (=> b!67162 (=> (not res!36278) (not e!44033))))

(assert (=> b!67162 (= res!36278 (= (getValueByKey!129 (toList!723 lt!29120) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (Some!134 (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun b!67163 () Bool)

(assert (=> b!67163 (= e!44033 (contains!718 (toList!723 lt!29120) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))

(assert (= (and d!13939 res!36279) b!67162))

(assert (= (and b!67162 res!36278) b!67163))

(declare-fun m!61861 () Bool)

(assert (=> d!13939 m!61861))

(declare-fun m!61863 () Bool)

(assert (=> d!13939 m!61863))

(declare-fun m!61865 () Bool)

(assert (=> d!13939 m!61865))

(declare-fun m!61867 () Bool)

(assert (=> d!13939 m!61867))

(declare-fun m!61869 () Bool)

(assert (=> b!67162 m!61869))

(declare-fun m!61871 () Bool)

(assert (=> b!67163 m!61871))

(assert (=> d!13723 d!13939))

(assert (=> d!13725 d!13729))

(declare-fun d!13941 () Bool)

(assert (=> d!13941 (not (arrayContainsKey!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!13941 true))

(declare-fun _$68!46 () Unit!1836)

(assert (=> d!13941 (= (choose!68 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488)) _$68!46)))

(declare-fun bs!2864 () Bool)

(assert (= bs!2864 d!13941))

(assert (=> bs!2864 m!60719))

(assert (=> bs!2864 m!60761))

(assert (=> d!13725 d!13941))

(assert (=> b!66541 d!13915))

(declare-fun d!13943 () Bool)

(assert (=> d!13943 (= (apply!72 lt!28612 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1130 (getValueByKey!129 (toList!723 lt!28612) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2865 () Bool)

(assert (= bs!2865 d!13943))

(assert (=> bs!2865 m!61065))

(assert (=> bs!2865 m!61065))

(declare-fun m!61873 () Bool)

(assert (=> bs!2865 m!61873))

(assert (=> b!66460 d!13943))

(declare-fun mapNonEmpty!3087 () Bool)

(declare-fun mapRes!3087 () Bool)

(declare-fun tp!8379 () Bool)

(declare-fun e!44034 () Bool)

(assert (=> mapNonEmpty!3087 (= mapRes!3087 (and tp!8379 e!44034))))

(declare-fun mapValue!3087 () ValueCell!882)

(declare-fun mapKey!3087 () (_ BitVec 32))

(declare-fun mapRest!3087 () (Array (_ BitVec 32) ValueCell!882))

(assert (=> mapNonEmpty!3087 (= mapRest!3085 (store mapRest!3087 mapKey!3087 mapValue!3087))))

(declare-fun condMapEmpty!3087 () Bool)

(declare-fun mapDefault!3087 () ValueCell!882)

(assert (=> mapNonEmpty!3085 (= condMapEmpty!3087 (= mapRest!3085 ((as const (Array (_ BitVec 32) ValueCell!882)) mapDefault!3087)))))

(declare-fun e!44035 () Bool)

(assert (=> mapNonEmpty!3085 (= tp!8377 (and e!44035 mapRes!3087))))

(declare-fun b!67164 () Bool)

(assert (=> b!67164 (= e!44034 tp_is_empty!2451)))

(declare-fun mapIsEmpty!3087 () Bool)

(assert (=> mapIsEmpty!3087 mapRes!3087))

(declare-fun b!67165 () Bool)

(assert (=> b!67165 (= e!44035 tp_is_empty!2451)))

(assert (= (and mapNonEmpty!3085 condMapEmpty!3087) mapIsEmpty!3087))

(assert (= (and mapNonEmpty!3085 (not condMapEmpty!3087)) mapNonEmpty!3087))

(assert (= (and mapNonEmpty!3087 ((_ is ValueCellFull!882) mapValue!3087)) b!67164))

(assert (= (and mapNonEmpty!3085 ((_ is ValueCellFull!882) mapDefault!3087)) b!67165))

(declare-fun m!61875 () Bool)

(assert (=> mapNonEmpty!3087 m!61875))

(declare-fun mapNonEmpty!3088 () Bool)

(declare-fun mapRes!3088 () Bool)

(declare-fun tp!8380 () Bool)

(declare-fun e!44036 () Bool)

(assert (=> mapNonEmpty!3088 (= mapRes!3088 (and tp!8380 e!44036))))

(declare-fun mapRest!3088 () (Array (_ BitVec 32) ValueCell!882))

(declare-fun mapValue!3088 () ValueCell!882)

(declare-fun mapKey!3088 () (_ BitVec 32))

(assert (=> mapNonEmpty!3088 (= mapRest!3086 (store mapRest!3088 mapKey!3088 mapValue!3088))))

(declare-fun condMapEmpty!3088 () Bool)

(declare-fun mapDefault!3088 () ValueCell!882)

(assert (=> mapNonEmpty!3086 (= condMapEmpty!3088 (= mapRest!3086 ((as const (Array (_ BitVec 32) ValueCell!882)) mapDefault!3088)))))

(declare-fun e!44037 () Bool)

(assert (=> mapNonEmpty!3086 (= tp!8378 (and e!44037 mapRes!3088))))

(declare-fun b!67166 () Bool)

(assert (=> b!67166 (= e!44036 tp_is_empty!2451)))

(declare-fun mapIsEmpty!3088 () Bool)

(assert (=> mapIsEmpty!3088 mapRes!3088))

(declare-fun b!67167 () Bool)

(assert (=> b!67167 (= e!44037 tp_is_empty!2451)))

(assert (= (and mapNonEmpty!3086 condMapEmpty!3088) mapIsEmpty!3088))

(assert (= (and mapNonEmpty!3086 (not condMapEmpty!3088)) mapNonEmpty!3088))

(assert (= (and mapNonEmpty!3088 ((_ is ValueCellFull!882) mapValue!3088)) b!67166))

(assert (= (and mapNonEmpty!3086 ((_ is ValueCellFull!882) mapDefault!3088)) b!67167))

(declare-fun m!61877 () Bool)

(assert (=> mapNonEmpty!3088 m!61877))

(declare-fun b_lambda!3005 () Bool)

(assert (= b_lambda!3003 (or (and b!66325 b_free!2069 (= (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66322 b_free!2071) b_lambda!3005)))

(declare-fun b_lambda!3007 () Bool)

(assert (= b_lambda!2995 (or (and b!66325 b_free!2069 (= (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66322 b_free!2071) b_lambda!3007)))

(declare-fun b_lambda!3009 () Bool)

(assert (= b_lambda!2997 (or (and b!66325 b_free!2069) (and b!66322 b_free!2071 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))))) b_lambda!3009)))

(declare-fun b_lambda!3011 () Bool)

(assert (= b_lambda!2999 (or (and b!66325 b_free!2069) (and b!66322 b_free!2071 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))))) b_lambda!3011)))

(declare-fun b_lambda!3013 () Bool)

(assert (= b_lambda!3001 (or (and b!66325 b_free!2069 (= (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66322 b_free!2071) b_lambda!3013)))

(check-sat (not b!66925) (not d!13743) (not b!67143) (not bm!5599) (not bm!5618) (not b!67153) (not b!66733) (not d!13807) (not b!66981) (not b_lambda!3013) (not b!67027) (not b!66748) (not b_lambda!3009) (not b!66717) (not b_lambda!2981) (not b!66927) (not b!66913) (not b!66735) (not b!66797) (not d!13775) (not b!67033) (not bm!5583) (not b!66975) (not d!13903) (not b!67128) (not b!67016) (not b!67110) (not b!67163) (not b!67011) (not b!67145) (not d!13745) (not b!67037) (not b!67157) (not b!66809) (not d!13761) (not b!66937) (not b!67018) (not d!13829) (not d!13841) (not bm!5628) (not d!13887) (not b!67119) (not d!13791) (not b!66803) (not b!66857) (not d!13757) (not b!66760) (not d!13901) (not b!66873) (not d!13927) (not mapNonEmpty!3088) (not bm!5629) (not b!67125) (not d!13883) (not d!13837) (not b!66757) (not d!13853) (not b_lambda!2991) (not d!13877) (not d!13785) (not b!66928) (not b!66738) (not d!13873) (not b!66698) (not b!66990) (not b!66833) (not d!13891) (not bm!5568) (not b!66828) (not d!13857) (not bm!5602) b_and!4137 (not d!13835) (not b!66888) (not b!66712) (not b!67006) (not b!66996) (not b!67123) (not b!67122) (not d!13847) (not b_lambda!3007) (not b!67159) (not d!13899) (not b!66875) (not b!66956) (not b!66865) (not bm!5627) (not b!66896) (not b!66945) (not bm!5617) (not b!66906) (not d!13851) (not d!13805) (not d!13769) (not b!67146) (not bm!5589) (not d!13801) (not bm!5569) (not b!66994) (not b!67023) (not b!66874) (not b!66811) (not d!13859) (not b!66742) (not d!13773) (not b!66903) (not b!66887) (not b!66825) (not d!13819) (not b!67160) (not b!66931) (not d!13907) (not b!67148) (not b!66933) (not d!13779) (not b!66718) (not b_next!2071) (not b!66740) (not d!13881) (not d!13843) (not d!13923) (not d!13943) (not b!66761) (not d!13787) (not d!13897) (not b!66737) (not b!66991) (not bm!5586) (not bm!5609) (not d!13845) (not b!66736) (not bm!5575) (not d!13821) (not d!13839) (not d!13889) (not b_lambda!2989) (not b!67003) (not b!66970) (not b!66819) (not bm!5595) (not d!13799) (not d!13863) (not b!66934) (not b!66837) (not b!66897) (not b!66877) (not b!67158) (not b!66699) (not d!13939) (not b!66985) (not b!66834) (not bm!5591) (not b!66818) (not b!66864) (not bm!5608) (not b!67021) (not b!67151) (not d!13793) (not b!66758) (not d!13815) (not b!67127) (not b!66831) (not b_lambda!2993) (not d!13885) (not b!67121) (not b!67108) (not b_next!2069) (not b!66774) (not b!67135) (not b!67130) (not b!66940) (not d!13817) (not d!13803) (not d!13747) (not b!67133) (not b!67030) (not b!66959) (not b!66982) (not b!67040) (not bm!5567) (not b!66842) (not d!13849) (not bm!5572) (not b!66773) (not d!13855) (not b!66885) (not b!67161) (not d!13861) (not bm!5596) (not d!13917) (not d!13931) (not bm!5603) (not d!13795) (not bm!5601) (not b!66929) (not d!13875) (not b_lambda!3011) (not b!67012) (not b!66764) (not mapNonEmpty!3087) (not b!66729) (not b!67041) (not d!13941) (not b!66939) (not d!13827) (not b!67156) (not b!66919) tp_is_empty!2451 (not d!13763) (not b!66752) (not b!66917) (not b!67150) (not b!66894) (not b!66971) (not d!13937) (not b!66862) (not b!66993) (not bm!5588) (not b!66830) (not b!66930) (not b!67137) (not b!66800) (not b!67152) (not d!13919) (not b!66816) (not b!67014) (not b_lambda!3005) (not b!67043) (not b!66900) (not d!13895) (not b!66762) (not b!67162) (not b!67045) (not d!13911) (not b!66832) (not b!67015) (not b!67113) (not b!67106) (not b!66889) (not d!13929) (not bm!5611) (not b!66843) (not b!66891) (not d!13833) (not d!13749) (not b!66961) (not b!66813) (not d!13893) (not b!66838) (not b!66822) (not b!66920) (not b!66957) (not b!66883) (not b!66871) (not b!66701) (not d!13783) (not d!13765) (not b!66749) b_and!4139 (not b!66715) (not d!13933) (not b!67118) (not d!13811) (not b!67024) (not b!67155) (not bm!5574) (not d!13865) (not b!66836) (not d!13925) (not b!66866) (not b!66872) (not d!13935) (not b!66767) (not d!13869) (not b!66910) (not b!66938) (not b!67002) (not d!13831) (not bm!5606))
(check-sat b_and!4137 b_and!4139 (not b_next!2069) (not b_next!2071))
(get-model)

(declare-fun d!13945 () Bool)

(declare-fun res!36280 () Bool)

(declare-fun e!44038 () Bool)

(assert (=> d!13945 (=> res!36280 e!44038)))

(assert (=> d!13945 (= res!36280 (and ((_ is Cons!1486) (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))) (= (_1!1064 (h!2070 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))))

(assert (=> d!13945 (= (containsKey!133 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) e!44038)))

(declare-fun b!67168 () Bool)

(declare-fun e!44039 () Bool)

(assert (=> b!67168 (= e!44038 e!44039)))

(declare-fun res!36281 () Bool)

(assert (=> b!67168 (=> (not res!36281) (not e!44039))))

(assert (=> b!67168 (= res!36281 (and (or (not ((_ is Cons!1486) (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))))) (bvsle (_1!1064 (h!2070 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))) ((_ is Cons!1486) (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))) (bvslt (_1!1064 (h!2070 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))))

(declare-fun b!67169 () Bool)

(assert (=> b!67169 (= e!44039 (containsKey!133 (t!4976 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (= (and d!13945 (not res!36280)) b!67168))

(assert (= (and b!67168 res!36281) b!67169))

(assert (=> b!67169 m!60719))

(declare-fun m!61879 () Bool)

(assert (=> b!67169 m!61879))

(assert (=> d!13889 d!13945))

(declare-fun b!67171 () Bool)

(declare-fun res!36285 () Bool)

(declare-fun e!44040 () Bool)

(assert (=> b!67171 (=> (not res!36285) (not e!44040))))

(assert (=> b!67171 (= res!36285 (bvsge (size!2073 (v!2479 (underlying!252 thiss!992))) (_size!385 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun b!67173 () Bool)

(assert (=> b!67173 (= e!44040 (and (bvsge (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!385 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun d!13947 () Bool)

(declare-fun res!36282 () Bool)

(assert (=> d!13947 (=> (not res!36282) (not e!44040))))

(assert (=> d!13947 (= res!36282 (validMask!0 (mask!6082 (v!2479 (underlying!252 thiss!992)))))))

(assert (=> d!13947 (= (simpleValid!47 (v!2479 (underlying!252 thiss!992))) e!44040)))

(declare-fun b!67172 () Bool)

(declare-fun res!36283 () Bool)

(assert (=> b!67172 (=> (not res!36283) (not e!44040))))

(assert (=> b!67172 (= res!36283 (= (size!2073 (v!2479 (underlying!252 thiss!992))) (bvadd (_size!385 (v!2479 (underlying!252 thiss!992))) (bvsdiv (bvadd (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!67170 () Bool)

(declare-fun res!36284 () Bool)

(assert (=> b!67170 (=> (not res!36284) (not e!44040))))

(assert (=> b!67170 (= res!36284 (and (= (size!2070 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000001)) (= (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (size!2070 (_values!2130 (v!2479 (underlying!252 thiss!992))))) (bvsge (_size!385 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!385 (v!2479 (underlying!252 thiss!992))) (bvadd (mask!6082 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000001))))))

(assert (= (and d!13947 res!36282) b!67170))

(assert (= (and b!67170 res!36284) b!67171))

(assert (= (and b!67171 res!36285) b!67172))

(assert (= (and b!67172 res!36283) b!67173))

(declare-fun m!61881 () Bool)

(assert (=> b!67171 m!61881))

(assert (=> d!13947 m!60745))

(assert (=> b!67172 m!61881))

(assert (=> d!13761 d!13947))

(declare-fun b!67174 () Bool)

(declare-fun e!44042 () Bool)

(declare-fun call!5634 () Bool)

(assert (=> b!67174 (= e!44042 call!5634)))

(declare-fun b!67175 () Bool)

(declare-fun e!44043 () Bool)

(assert (=> b!67175 (= e!44043 e!44042)))

(declare-fun c!9342 () Bool)

(assert (=> b!67175 (= c!9342 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!67177 () Bool)

(declare-fun e!44041 () Bool)

(assert (=> b!67177 (= e!44041 e!44043)))

(declare-fun res!36286 () Bool)

(assert (=> b!67177 (=> (not res!36286) (not e!44043))))

(declare-fun e!44044 () Bool)

(assert (=> b!67177 (= res!36286 (not e!44044))))

(declare-fun res!36288 () Bool)

(assert (=> b!67177 (=> (not res!36288) (not e!44044))))

(assert (=> b!67177 (= res!36288 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!5631 () Bool)

(assert (=> bm!5631 (= call!5634 (arrayNoDuplicates!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9342 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!9281 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9174 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488) Nil!1488)) (ite c!9174 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488) Nil!1488))) (ite c!9281 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9174 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488) Nil!1488)) (ite c!9174 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488) Nil!1488)))))))

(declare-fun b!67178 () Bool)

(assert (=> b!67178 (= e!44044 (contains!719 (ite c!9281 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9174 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488) Nil!1488)) (ite c!9174 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488) Nil!1488)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!67176 () Bool)

(assert (=> b!67176 (= e!44042 call!5634)))

(declare-fun d!13949 () Bool)

(declare-fun res!36287 () Bool)

(assert (=> d!13949 (=> res!36287 e!44041)))

(assert (=> d!13949 (= res!36287 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(assert (=> d!13949 (= (arrayNoDuplicates!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9281 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9174 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488) Nil!1488)) (ite c!9174 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488) Nil!1488))) e!44041)))

(assert (= (and d!13949 (not res!36287)) b!67177))

(assert (= (and b!67177 res!36288) b!67178))

(assert (= (and b!67177 res!36286) b!67175))

(assert (= (and b!67175 c!9342) b!67176))

(assert (= (and b!67175 (not c!9342)) b!67174))

(assert (= (or b!67176 b!67174) bm!5631))

(declare-fun m!61883 () Bool)

(assert (=> b!67175 m!61883))

(assert (=> b!67175 m!61883))

(declare-fun m!61885 () Bool)

(assert (=> b!67175 m!61885))

(assert (=> b!67177 m!61883))

(assert (=> b!67177 m!61883))

(assert (=> b!67177 m!61885))

(assert (=> bm!5631 m!61883))

(declare-fun m!61887 () Bool)

(assert (=> bm!5631 m!61887))

(assert (=> b!67178 m!61883))

(assert (=> b!67178 m!61883))

(declare-fun m!61889 () Bool)

(assert (=> b!67178 m!61889))

(assert (=> bm!5589 d!13949))

(declare-fun d!13951 () Bool)

(declare-fun c!9343 () Bool)

(assert (=> d!13951 (= c!9343 ((_ is ValueCellFull!882) (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!44045 () V!2915)

(assert (=> d!13951 (= (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44045)))

(declare-fun b!67179 () Bool)

(assert (=> b!67179 (= e!44045 (get!1128 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67180 () Bool)

(assert (=> b!67180 (= e!44045 (get!1129 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13951 c!9343) b!67179))

(assert (= (and d!13951 (not c!9343)) b!67180))

(assert (=> b!67179 m!61229))

(assert (=> b!67179 m!60723))

(declare-fun m!61891 () Bool)

(assert (=> b!67179 m!61891))

(assert (=> b!67180 m!61229))

(assert (=> b!67180 m!60723))

(declare-fun m!61893 () Bool)

(assert (=> b!67180 m!61893))

(assert (=> b!66832 d!13951))

(declare-fun d!13953 () Bool)

(assert (=> d!13953 (not (contains!716 (+!87 lt!28817 (tuple2!2109 lt!28816 lt!28821)) lt!28818))))

(declare-fun lt!29123 () Unit!1836)

(assert (=> d!13953 (= lt!29123 (choose!377 lt!28817 lt!28816 lt!28821 lt!28818))))

(declare-fun e!44046 () Bool)

(assert (=> d!13953 e!44046))

(declare-fun res!36289 () Bool)

(assert (=> d!13953 (=> (not res!36289) (not e!44046))))

(assert (=> d!13953 (= res!36289 (not (contains!716 lt!28817 lt!28818)))))

(assert (=> d!13953 (= (addStillNotContains!23 lt!28817 lt!28816 lt!28821 lt!28818) lt!29123)))

(declare-fun b!67181 () Bool)

(assert (=> b!67181 (= e!44046 (not (= lt!28816 lt!28818)))))

(assert (= (and d!13953 res!36289) b!67181))

(assert (=> d!13953 m!61243))

(assert (=> d!13953 m!61243))

(assert (=> d!13953 m!61245))

(declare-fun m!61895 () Bool)

(assert (=> d!13953 m!61895))

(declare-fun m!61897 () Bool)

(assert (=> d!13953 m!61897))

(assert (=> b!66832 d!13953))

(declare-fun d!13955 () Bool)

(declare-fun e!44047 () Bool)

(assert (=> d!13955 e!44047))

(declare-fun res!36291 () Bool)

(assert (=> d!13955 (=> (not res!36291) (not e!44047))))

(declare-fun lt!29125 () ListLongMap!1415)

(assert (=> d!13955 (= res!36291 (contains!716 lt!29125 (_1!1064 (tuple2!2109 lt!28816 lt!28821))))))

(declare-fun lt!29127 () List!1490)

(assert (=> d!13955 (= lt!29125 (ListLongMap!1416 lt!29127))))

(declare-fun lt!29126 () Unit!1836)

(declare-fun lt!29124 () Unit!1836)

(assert (=> d!13955 (= lt!29126 lt!29124)))

(assert (=> d!13955 (= (getValueByKey!129 lt!29127 (_1!1064 (tuple2!2109 lt!28816 lt!28821))) (Some!134 (_2!1064 (tuple2!2109 lt!28816 lt!28821))))))

(assert (=> d!13955 (= lt!29124 (lemmaContainsTupThenGetReturnValue!48 lt!29127 (_1!1064 (tuple2!2109 lt!28816 lt!28821)) (_2!1064 (tuple2!2109 lt!28816 lt!28821))))))

(assert (=> d!13955 (= lt!29127 (insertStrictlySorted!50 (toList!723 lt!28817) (_1!1064 (tuple2!2109 lt!28816 lt!28821)) (_2!1064 (tuple2!2109 lt!28816 lt!28821))))))

(assert (=> d!13955 (= (+!87 lt!28817 (tuple2!2109 lt!28816 lt!28821)) lt!29125)))

(declare-fun b!67182 () Bool)

(declare-fun res!36290 () Bool)

(assert (=> b!67182 (=> (not res!36290) (not e!44047))))

(assert (=> b!67182 (= res!36290 (= (getValueByKey!129 (toList!723 lt!29125) (_1!1064 (tuple2!2109 lt!28816 lt!28821))) (Some!134 (_2!1064 (tuple2!2109 lt!28816 lt!28821)))))))

(declare-fun b!67183 () Bool)

(assert (=> b!67183 (= e!44047 (contains!718 (toList!723 lt!29125) (tuple2!2109 lt!28816 lt!28821)))))

(assert (= (and d!13955 res!36291) b!67182))

(assert (= (and b!67182 res!36290) b!67183))

(declare-fun m!61899 () Bool)

(assert (=> d!13955 m!61899))

(declare-fun m!61901 () Bool)

(assert (=> d!13955 m!61901))

(declare-fun m!61903 () Bool)

(assert (=> d!13955 m!61903))

(declare-fun m!61905 () Bool)

(assert (=> d!13955 m!61905))

(declare-fun m!61907 () Bool)

(assert (=> b!67182 m!61907))

(declare-fun m!61909 () Bool)

(assert (=> b!67183 m!61909))

(assert (=> b!66832 d!13955))

(declare-fun d!13957 () Bool)

(declare-fun e!44049 () Bool)

(assert (=> d!13957 e!44049))

(declare-fun res!36292 () Bool)

(assert (=> d!13957 (=> res!36292 e!44049)))

(declare-fun lt!29131 () Bool)

(assert (=> d!13957 (= res!36292 (not lt!29131))))

(declare-fun lt!29128 () Bool)

(assert (=> d!13957 (= lt!29131 lt!29128)))

(declare-fun lt!29129 () Unit!1836)

(declare-fun e!44048 () Unit!1836)

(assert (=> d!13957 (= lt!29129 e!44048)))

(declare-fun c!9344 () Bool)

(assert (=> d!13957 (= c!9344 lt!29128)))

(assert (=> d!13957 (= lt!29128 (containsKey!133 (toList!723 (+!87 lt!28817 (tuple2!2109 lt!28816 lt!28821))) lt!28818))))

(assert (=> d!13957 (= (contains!716 (+!87 lt!28817 (tuple2!2109 lt!28816 lt!28821)) lt!28818) lt!29131)))

(declare-fun b!67184 () Bool)

(declare-fun lt!29130 () Unit!1836)

(assert (=> b!67184 (= e!44048 lt!29130)))

(assert (=> b!67184 (= lt!29130 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 (+!87 lt!28817 (tuple2!2109 lt!28816 lt!28821))) lt!28818))))

(assert (=> b!67184 (isDefined!83 (getValueByKey!129 (toList!723 (+!87 lt!28817 (tuple2!2109 lt!28816 lt!28821))) lt!28818))))

(declare-fun b!67185 () Bool)

(declare-fun Unit!1868 () Unit!1836)

(assert (=> b!67185 (= e!44048 Unit!1868)))

(declare-fun b!67186 () Bool)

(assert (=> b!67186 (= e!44049 (isDefined!83 (getValueByKey!129 (toList!723 (+!87 lt!28817 (tuple2!2109 lt!28816 lt!28821))) lt!28818)))))

(assert (= (and d!13957 c!9344) b!67184))

(assert (= (and d!13957 (not c!9344)) b!67185))

(assert (= (and d!13957 (not res!36292)) b!67186))

(declare-fun m!61911 () Bool)

(assert (=> d!13957 m!61911))

(declare-fun m!61913 () Bool)

(assert (=> b!67184 m!61913))

(declare-fun m!61915 () Bool)

(assert (=> b!67184 m!61915))

(assert (=> b!67184 m!61915))

(declare-fun m!61917 () Bool)

(assert (=> b!67184 m!61917))

(assert (=> b!67186 m!61915))

(assert (=> b!67186 m!61915))

(assert (=> b!67186 m!61917))

(assert (=> b!66832 d!13957))

(declare-fun d!13959 () Bool)

(declare-fun e!44050 () Bool)

(assert (=> d!13959 e!44050))

(declare-fun res!36294 () Bool)

(assert (=> d!13959 (=> (not res!36294) (not e!44050))))

(declare-fun lt!29133 () ListLongMap!1415)

(assert (=> d!13959 (= res!36294 (contains!716 lt!29133 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!29135 () List!1490)

(assert (=> d!13959 (= lt!29133 (ListLongMap!1416 lt!29135))))

(declare-fun lt!29134 () Unit!1836)

(declare-fun lt!29132 () Unit!1836)

(assert (=> d!13959 (= lt!29134 lt!29132)))

(assert (=> d!13959 (= (getValueByKey!129 lt!29135 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!134 (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13959 (= lt!29132 (lemmaContainsTupThenGetReturnValue!48 lt!29135 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13959 (= lt!29135 (insertStrictlySorted!50 (toList!723 call!5591) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13959 (= (+!87 call!5591 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!29133)))

(declare-fun b!67187 () Bool)

(declare-fun res!36293 () Bool)

(assert (=> b!67187 (=> (not res!36293) (not e!44050))))

(assert (=> b!67187 (= res!36293 (= (getValueByKey!129 (toList!723 lt!29133) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!134 (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!67188 () Bool)

(assert (=> b!67188 (= e!44050 (contains!718 (toList!723 lt!29133) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!13959 res!36294) b!67187))

(assert (= (and b!67187 res!36293) b!67188))

(declare-fun m!61919 () Bool)

(assert (=> d!13959 m!61919))

(declare-fun m!61921 () Bool)

(assert (=> d!13959 m!61921))

(declare-fun m!61923 () Bool)

(assert (=> d!13959 m!61923))

(declare-fun m!61925 () Bool)

(assert (=> d!13959 m!61925))

(declare-fun m!61927 () Bool)

(assert (=> b!67187 m!61927))

(declare-fun m!61929 () Bool)

(assert (=> b!67188 m!61929))

(assert (=> b!66832 d!13959))

(declare-fun d!13961 () Bool)

(assert (=> d!13961 (= ($colon$colon!62 e!43957 (ite c!9314 (h!2070 (toList!723 lt!28505)) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503)))) (Cons!1486 (ite c!9314 (h!2070 (toList!723 lt!28505)) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))) e!43957))))

(assert (=> bm!5611 d!13961))

(assert (=> d!13783 d!13781))

(declare-fun d!13963 () Bool)

(assert (=> d!13963 (= (getValueByKey!129 lt!28654 (_1!1064 lt!28503)) (Some!134 (_2!1064 lt!28503)))))

(assert (=> d!13963 true))

(declare-fun _$22!367 () Unit!1836)

(assert (=> d!13963 (= (choose!376 lt!28654 (_1!1064 lt!28503) (_2!1064 lt!28503)) _$22!367)))

(declare-fun bs!2866 () Bool)

(assert (= bs!2866 d!13963))

(assert (=> bs!2866 m!60939))

(assert (=> d!13783 d!13963))

(declare-fun d!13965 () Bool)

(declare-fun res!36299 () Bool)

(declare-fun e!44055 () Bool)

(assert (=> d!13965 (=> res!36299 e!44055)))

(assert (=> d!13965 (= res!36299 (or ((_ is Nil!1487) lt!28654) ((_ is Nil!1487) (t!4976 lt!28654))))))

(assert (=> d!13965 (= (isStrictlySorted!284 lt!28654) e!44055)))

(declare-fun b!67193 () Bool)

(declare-fun e!44056 () Bool)

(assert (=> b!67193 (= e!44055 e!44056)))

(declare-fun res!36300 () Bool)

(assert (=> b!67193 (=> (not res!36300) (not e!44056))))

(assert (=> b!67193 (= res!36300 (bvslt (_1!1064 (h!2070 lt!28654)) (_1!1064 (h!2070 (t!4976 lt!28654)))))))

(declare-fun b!67194 () Bool)

(assert (=> b!67194 (= e!44056 (isStrictlySorted!284 (t!4976 lt!28654)))))

(assert (= (and d!13965 (not res!36299)) b!67193))

(assert (= (and b!67193 res!36300) b!67194))

(declare-fun m!61931 () Bool)

(assert (=> b!67194 m!61931))

(assert (=> d!13783 d!13965))

(declare-fun d!13967 () Bool)

(assert (=> d!13967 (= (isDefined!83 (getValueByKey!129 (toList!723 lt!28634) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!314 (getValueByKey!129 (toList!723 lt!28634) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2867 () Bool)

(assert (= bs!2867 d!13967))

(assert (=> bs!2867 m!61801))

(declare-fun m!61933 () Bool)

(assert (=> bs!2867 m!61933))

(assert (=> b!67148 d!13967))

(declare-fun b!67196 () Bool)

(declare-fun e!44057 () Option!135)

(declare-fun e!44058 () Option!135)

(assert (=> b!67196 (= e!44057 e!44058)))

(declare-fun c!9346 () Bool)

(assert (=> b!67196 (= c!9346 (and ((_ is Cons!1486) (toList!723 lt!28634)) (not (= (_1!1064 (h!2070 (toList!723 lt!28634))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!13969 () Bool)

(declare-fun c!9345 () Bool)

(assert (=> d!13969 (= c!9345 (and ((_ is Cons!1486) (toList!723 lt!28634)) (= (_1!1064 (h!2070 (toList!723 lt!28634))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13969 (= (getValueByKey!129 (toList!723 lt!28634) #b1000000000000000000000000000000000000000000000000000000000000000) e!44057)))

(declare-fun b!67197 () Bool)

(assert (=> b!67197 (= e!44058 (getValueByKey!129 (t!4976 (toList!723 lt!28634)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67195 () Bool)

(assert (=> b!67195 (= e!44057 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28634)))))))

(declare-fun b!67198 () Bool)

(assert (=> b!67198 (= e!44058 None!133)))

(assert (= (and d!13969 c!9345) b!67195))

(assert (= (and d!13969 (not c!9345)) b!67196))

(assert (= (and b!67196 c!9346) b!67197))

(assert (= (and b!67196 (not c!9346)) b!67198))

(declare-fun m!61935 () Bool)

(assert (=> b!67197 m!61935))

(assert (=> b!67148 d!13969))

(declare-fun d!13971 () Bool)

(assert (=> d!13971 (= (apply!72 lt!28964 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1130 (getValueByKey!129 (toList!723 lt!28964) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2868 () Bool)

(assert (= bs!2868 d!13971))

(assert (=> bs!2868 m!61079))

(declare-fun m!61937 () Bool)

(assert (=> bs!2868 m!61937))

(assert (=> bs!2868 m!61937))

(declare-fun m!61939 () Bool)

(assert (=> bs!2868 m!61939))

(assert (=> b!67015 d!13971))

(declare-fun c!9347 () Bool)

(declare-fun d!13973 () Bool)

(assert (=> d!13973 (= c!9347 ((_ is ValueCellFull!882) (select (arr!1835 (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!44059 () V!2915)

(assert (=> d!13973 (= (get!1127 (select (arr!1835 (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44059)))

(declare-fun b!67199 () Bool)

(assert (=> b!67199 (= e!44059 (get!1128 (select (arr!1835 (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67200 () Bool)

(assert (=> b!67200 (= e!44059 (get!1129 (select (arr!1835 (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13973 c!9347) b!67199))

(assert (= (and d!13973 (not c!9347)) b!67200))

(assert (=> b!67199 m!61575))

(assert (=> b!67199 m!61115))

(declare-fun m!61941 () Bool)

(assert (=> b!67199 m!61941))

(assert (=> b!67200 m!61575))

(assert (=> b!67200 m!61115))

(declare-fun m!61943 () Bool)

(assert (=> b!67200 m!61943))

(assert (=> b!67015 d!13973))

(declare-fun d!13975 () Bool)

(declare-fun lt!29136 () Bool)

(assert (=> d!13975 (= lt!29136 (select (content!70 (toList!723 lt!28824)) (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun e!44060 () Bool)

(assert (=> d!13975 (= lt!29136 e!44060)))

(declare-fun res!36302 () Bool)

(assert (=> d!13975 (=> (not res!36302) (not e!44060))))

(assert (=> d!13975 (= res!36302 ((_ is Cons!1486) (toList!723 lt!28824)))))

(assert (=> d!13975 (= (contains!718 (toList!723 lt!28824) (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29136)))

(declare-fun b!67201 () Bool)

(declare-fun e!44061 () Bool)

(assert (=> b!67201 (= e!44060 e!44061)))

(declare-fun res!36301 () Bool)

(assert (=> b!67201 (=> res!36301 e!44061)))

(assert (=> b!67201 (= res!36301 (= (h!2070 (toList!723 lt!28824)) (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67202 () Bool)

(assert (=> b!67202 (= e!44061 (contains!718 (t!4976 (toList!723 lt!28824)) (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (= (and d!13975 res!36302) b!67201))

(assert (= (and b!67201 (not res!36301)) b!67202))

(declare-fun m!61945 () Bool)

(assert (=> d!13975 m!61945))

(declare-fun m!61947 () Bool)

(assert (=> d!13975 m!61947))

(declare-fun m!61949 () Bool)

(assert (=> b!67202 m!61949))

(assert (=> b!66843 d!13975))

(declare-fun d!13977 () Bool)

(assert (=> d!13977 (isDefined!83 (getValueByKey!129 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633))) lt!28630))))

(declare-fun lt!29137 () Unit!1836)

(assert (=> d!13977 (= lt!29137 (choose!378 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633))) lt!28630))))

(declare-fun e!44062 () Bool)

(assert (=> d!13977 e!44062))

(declare-fun res!36303 () Bool)

(assert (=> d!13977 (=> (not res!36303) (not e!44062))))

(assert (=> d!13977 (= res!36303 (isStrictlySorted!284 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633)))))))

(assert (=> d!13977 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633))) lt!28630) lt!29137)))

(declare-fun b!67203 () Bool)

(assert (=> b!67203 (= e!44062 (containsKey!133 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633))) lt!28630))))

(assert (= (and d!13977 res!36303) b!67203))

(assert (=> d!13977 m!61319))

(assert (=> d!13977 m!61319))

(assert (=> d!13977 m!61321))

(declare-fun m!61951 () Bool)

(assert (=> d!13977 m!61951))

(declare-fun m!61953 () Bool)

(assert (=> d!13977 m!61953))

(assert (=> b!67203 m!61315))

(assert (=> b!66875 d!13977))

(declare-fun d!13979 () Bool)

(assert (=> d!13979 (= (isDefined!83 (getValueByKey!129 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633))) lt!28630)) (not (isEmpty!314 (getValueByKey!129 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633))) lt!28630))))))

(declare-fun bs!2869 () Bool)

(assert (= bs!2869 d!13979))

(assert (=> bs!2869 m!61319))

(declare-fun m!61955 () Bool)

(assert (=> bs!2869 m!61955))

(assert (=> b!66875 d!13979))

(declare-fun b!67205 () Bool)

(declare-fun e!44063 () Option!135)

(declare-fun e!44064 () Option!135)

(assert (=> b!67205 (= e!44063 e!44064)))

(declare-fun c!9349 () Bool)

(assert (=> b!67205 (= c!9349 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633)))) (not (= (_1!1064 (h!2070 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633))))) lt!28630))))))

(declare-fun d!13981 () Bool)

(declare-fun c!9348 () Bool)

(assert (=> d!13981 (= c!9348 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633)))) (= (_1!1064 (h!2070 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633))))) lt!28630)))))

(assert (=> d!13981 (= (getValueByKey!129 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633))) lt!28630) e!44063)))

(declare-fun b!67206 () Bool)

(assert (=> b!67206 (= e!44064 (getValueByKey!129 (t!4976 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633)))) lt!28630))))

(declare-fun b!67204 () Bool)

(assert (=> b!67204 (= e!44063 (Some!134 (_2!1064 (h!2070 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633)))))))))

(declare-fun b!67207 () Bool)

(assert (=> b!67207 (= e!44064 None!133)))

(assert (= (and d!13981 c!9348) b!67204))

(assert (= (and d!13981 (not c!9348)) b!67205))

(assert (= (and b!67205 c!9349) b!67206))

(assert (= (and b!67205 (not c!9349)) b!67207))

(declare-fun m!61957 () Bool)

(assert (=> b!67206 m!61957))

(assert (=> b!66875 d!13981))

(declare-fun d!13983 () Bool)

(assert (=> d!13983 (arrayContainsKey!0 (_keys!3787 newMap!16) lt!28921 #b00000000000000000000000000000000)))

(declare-fun lt!29140 () Unit!1836)

(declare-fun choose!13 (array!3840 (_ BitVec 64) (_ BitVec 32)) Unit!1836)

(assert (=> d!13983 (= lt!29140 (choose!13 (_keys!3787 newMap!16) lt!28921 #b00000000000000000000000000000000))))

(assert (=> d!13983 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!13983 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3787 newMap!16) lt!28921 #b00000000000000000000000000000000) lt!29140)))

(declare-fun bs!2870 () Bool)

(assert (= bs!2870 d!13983))

(assert (=> bs!2870 m!61515))

(declare-fun m!61959 () Bool)

(assert (=> bs!2870 m!61959))

(assert (=> b!66971 d!13983))

(declare-fun d!13985 () Bool)

(declare-fun res!36304 () Bool)

(declare-fun e!44065 () Bool)

(assert (=> d!13985 (=> res!36304 e!44065)))

(assert (=> d!13985 (= res!36304 (= (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) lt!28921))))

(assert (=> d!13985 (= (arrayContainsKey!0 (_keys!3787 newMap!16) lt!28921 #b00000000000000000000000000000000) e!44065)))

(declare-fun b!67208 () Bool)

(declare-fun e!44066 () Bool)

(assert (=> b!67208 (= e!44065 e!44066)))

(declare-fun res!36305 () Bool)

(assert (=> b!67208 (=> (not res!36305) (not e!44066))))

(assert (=> b!67208 (= res!36305 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2069 (_keys!3787 newMap!16))))))

(declare-fun b!67209 () Bool)

(assert (=> b!67209 (= e!44066 (arrayContainsKey!0 (_keys!3787 newMap!16) lt!28921 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!13985 (not res!36304)) b!67208))

(assert (= (and b!67208 res!36305) b!67209))

(assert (=> d!13985 m!61079))

(declare-fun m!61961 () Bool)

(assert (=> b!67209 m!61961))

(assert (=> b!66971 d!13985))

(declare-fun b!67210 () Bool)

(declare-fun e!44068 () SeekEntryResult!243)

(declare-fun lt!29142 () SeekEntryResult!243)

(assert (=> b!67210 (= e!44068 (MissingZero!243 (index!3102 lt!29142)))))

(declare-fun b!67211 () Bool)

(assert (=> b!67211 (= e!44068 (seekKeyOrZeroReturnVacant!0 (x!10713 lt!29142) (index!3102 lt!29142) (index!3102 lt!29142) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun b!67212 () Bool)

(declare-fun e!44069 () SeekEntryResult!243)

(assert (=> b!67212 (= e!44069 Undefined!243)))

(declare-fun b!67213 () Bool)

(declare-fun e!44067 () SeekEntryResult!243)

(assert (=> b!67213 (= e!44067 (Found!243 (index!3102 lt!29142)))))

(declare-fun b!67214 () Bool)

(assert (=> b!67214 (= e!44069 e!44067)))

(declare-fun lt!29143 () (_ BitVec 64))

(assert (=> b!67214 (= lt!29143 (select (arr!1834 (_keys!3787 newMap!16)) (index!3102 lt!29142)))))

(declare-fun c!9350 () Bool)

(assert (=> b!67214 (= c!9350 (= lt!29143 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67215 () Bool)

(declare-fun c!9351 () Bool)

(assert (=> b!67215 (= c!9351 (= lt!29143 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67215 (= e!44067 e!44068)))

(declare-fun d!13987 () Bool)

(declare-fun lt!29141 () SeekEntryResult!243)

(assert (=> d!13987 (and (or ((_ is Undefined!243) lt!29141) (not ((_ is Found!243) lt!29141)) (and (bvsge (index!3101 lt!29141) #b00000000000000000000000000000000) (bvslt (index!3101 lt!29141) (size!2069 (_keys!3787 newMap!16))))) (or ((_ is Undefined!243) lt!29141) ((_ is Found!243) lt!29141) (not ((_ is MissingZero!243) lt!29141)) (and (bvsge (index!3100 lt!29141) #b00000000000000000000000000000000) (bvslt (index!3100 lt!29141) (size!2069 (_keys!3787 newMap!16))))) (or ((_ is Undefined!243) lt!29141) ((_ is Found!243) lt!29141) ((_ is MissingZero!243) lt!29141) (not ((_ is MissingVacant!243) lt!29141)) (and (bvsge (index!3103 lt!29141) #b00000000000000000000000000000000) (bvslt (index!3103 lt!29141) (size!2069 (_keys!3787 newMap!16))))) (or ((_ is Undefined!243) lt!29141) (ite ((_ is Found!243) lt!29141) (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!29141)) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!243) lt!29141) (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3100 lt!29141)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!243) lt!29141) (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3103 lt!29141)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13987 (= lt!29141 e!44069)))

(declare-fun c!9352 () Bool)

(assert (=> d!13987 (= c!9352 (and ((_ is Intermediate!243) lt!29142) (undefined!1055 lt!29142)))))

(assert (=> d!13987 (= lt!29142 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) (mask!6082 newMap!16)) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(assert (=> d!13987 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13987 (= (seekEntryOrOpen!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) (_keys!3787 newMap!16) (mask!6082 newMap!16)) lt!29141)))

(assert (= (and d!13987 c!9352) b!67212))

(assert (= (and d!13987 (not c!9352)) b!67214))

(assert (= (and b!67214 c!9350) b!67213))

(assert (= (and b!67214 (not c!9350)) b!67215))

(assert (= (and b!67215 c!9351) b!67210))

(assert (= (and b!67215 (not c!9351)) b!67211))

(assert (=> b!67211 m!61079))

(declare-fun m!61963 () Bool)

(assert (=> b!67211 m!61963))

(declare-fun m!61965 () Bool)

(assert (=> b!67214 m!61965))

(assert (=> d!13987 m!61079))

(declare-fun m!61967 () Bool)

(assert (=> d!13987 m!61967))

(assert (=> d!13987 m!61069))

(declare-fun m!61969 () Bool)

(assert (=> d!13987 m!61969))

(declare-fun m!61971 () Bool)

(assert (=> d!13987 m!61971))

(assert (=> d!13987 m!61967))

(assert (=> d!13987 m!61079))

(declare-fun m!61973 () Bool)

(assert (=> d!13987 m!61973))

(declare-fun m!61975 () Bool)

(assert (=> d!13987 m!61975))

(assert (=> b!66971 d!13987))

(declare-fun d!13989 () Bool)

(declare-fun res!36306 () Bool)

(declare-fun e!44070 () Bool)

(assert (=> d!13989 (=> res!36306 e!44070)))

(assert (=> d!13989 (= res!36306 (and ((_ is Cons!1486) (toList!723 lt!28612)) (= (_1!1064 (h!2070 (toList!723 lt!28612))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13989 (= (containsKey!133 (toList!723 lt!28612) #b0000000000000000000000000000000000000000000000000000000000000000) e!44070)))

(declare-fun b!67216 () Bool)

(declare-fun e!44071 () Bool)

(assert (=> b!67216 (= e!44070 e!44071)))

(declare-fun res!36307 () Bool)

(assert (=> b!67216 (=> (not res!36307) (not e!44071))))

(assert (=> b!67216 (= res!36307 (and (or (not ((_ is Cons!1486) (toList!723 lt!28612))) (bvsle (_1!1064 (h!2070 (toList!723 lt!28612))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1486) (toList!723 lt!28612)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28612))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67217 () Bool)

(assert (=> b!67217 (= e!44071 (containsKey!133 (t!4976 (toList!723 lt!28612)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!13989 (not res!36306)) b!67216))

(assert (= (and b!67216 res!36307) b!67217))

(declare-fun m!61977 () Bool)

(assert (=> b!67217 m!61977))

(assert (=> d!13763 d!13989))

(declare-fun d!13991 () Bool)

(assert (=> d!13991 (= (size!2073 newMap!16) (bvadd (_size!385 newMap!16) (bvsdiv (bvadd (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!66957 d!13991))

(declare-fun d!13993 () Bool)

(declare-fun lt!29144 () Bool)

(assert (=> d!13993 (= lt!29144 (select (content!70 (t!4976 (toList!723 lt!28648))) lt!28500))))

(declare-fun e!44072 () Bool)

(assert (=> d!13993 (= lt!29144 e!44072)))

(declare-fun res!36309 () Bool)

(assert (=> d!13993 (=> (not res!36309) (not e!44072))))

(assert (=> d!13993 (= res!36309 ((_ is Cons!1486) (t!4976 (toList!723 lt!28648))))))

(assert (=> d!13993 (= (contains!718 (t!4976 (toList!723 lt!28648)) lt!28500) lt!29144)))

(declare-fun b!67218 () Bool)

(declare-fun e!44073 () Bool)

(assert (=> b!67218 (= e!44072 e!44073)))

(declare-fun res!36308 () Bool)

(assert (=> b!67218 (=> res!36308 e!44073)))

(assert (=> b!67218 (= res!36308 (= (h!2070 (t!4976 (toList!723 lt!28648))) lt!28500))))

(declare-fun b!67219 () Bool)

(assert (=> b!67219 (= e!44073 (contains!718 (t!4976 (t!4976 (toList!723 lt!28648))) lt!28500))))

(assert (= (and d!13993 res!36309) b!67218))

(assert (= (and b!67218 (not res!36308)) b!67219))

(declare-fun m!61979 () Bool)

(assert (=> d!13993 m!61979))

(declare-fun m!61981 () Bool)

(assert (=> d!13993 m!61981))

(declare-fun m!61983 () Bool)

(assert (=> b!67219 m!61983))

(assert (=> b!67150 d!13993))

(declare-fun d!13995 () Bool)

(declare-fun c!9355 () Bool)

(assert (=> d!13995 (= c!9355 ((_ is Nil!1487) (toList!723 lt!28652)))))

(declare-fun e!44076 () (InoxSet tuple2!2108))

(assert (=> d!13995 (= (content!70 (toList!723 lt!28652)) e!44076)))

(declare-fun b!67224 () Bool)

(assert (=> b!67224 (= e!44076 ((as const (Array tuple2!2108 Bool)) false))))

(declare-fun b!67225 () Bool)

(assert (=> b!67225 (= e!44076 ((_ map or) (store ((as const (Array tuple2!2108 Bool)) false) (h!2070 (toList!723 lt!28652)) true) (content!70 (t!4976 (toList!723 lt!28652)))))))

(assert (= (and d!13995 c!9355) b!67224))

(assert (= (and d!13995 (not c!9355)) b!67225))

(declare-fun m!61985 () Bool)

(assert (=> b!67225 m!61985))

(declare-fun m!61987 () Bool)

(assert (=> b!67225 m!61987))

(assert (=> d!13929 d!13995))

(declare-fun d!13997 () Bool)

(declare-fun e!44078 () Bool)

(assert (=> d!13997 e!44078))

(declare-fun res!36310 () Bool)

(assert (=> d!13997 (=> res!36310 e!44078)))

(declare-fun lt!29148 () Bool)

(assert (=> d!13997 (= res!36310 (not lt!29148))))

(declare-fun lt!29145 () Bool)

(assert (=> d!13997 (= lt!29148 lt!29145)))

(declare-fun lt!29146 () Unit!1836)

(declare-fun e!44077 () Unit!1836)

(assert (=> d!13997 (= lt!29146 e!44077)))

(declare-fun c!9356 () Bool)

(assert (=> d!13997 (= c!9356 lt!29145)))

(assert (=> d!13997 (= lt!29145 (containsKey!133 (toList!723 lt!28883) (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!13997 (= (contains!716 lt!28883 (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29148)))

(declare-fun b!67226 () Bool)

(declare-fun lt!29147 () Unit!1836)

(assert (=> b!67226 (= e!44077 lt!29147)))

(assert (=> b!67226 (= lt!29147 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28883) (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> b!67226 (isDefined!83 (getValueByKey!129 (toList!723 lt!28883) (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67227 () Bool)

(declare-fun Unit!1869 () Unit!1836)

(assert (=> b!67227 (= e!44077 Unit!1869)))

(declare-fun b!67228 () Bool)

(assert (=> b!67228 (= e!44078 (isDefined!83 (getValueByKey!129 (toList!723 lt!28883) (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!13997 c!9356) b!67226))

(assert (= (and d!13997 (not c!9356)) b!67227))

(assert (= (and d!13997 (not res!36310)) b!67228))

(declare-fun m!61989 () Bool)

(assert (=> d!13997 m!61989))

(declare-fun m!61991 () Bool)

(assert (=> b!67226 m!61991))

(assert (=> b!67226 m!61435))

(assert (=> b!67226 m!61435))

(declare-fun m!61993 () Bool)

(assert (=> b!67226 m!61993))

(assert (=> b!67228 m!61435))

(assert (=> b!67228 m!61435))

(assert (=> b!67228 m!61993))

(assert (=> d!13843 d!13997))

(declare-fun b!67230 () Bool)

(declare-fun e!44079 () Option!135)

(declare-fun e!44080 () Option!135)

(assert (=> b!67230 (= e!44079 e!44080)))

(declare-fun c!9358 () Bool)

(assert (=> b!67230 (= c!9358 (and ((_ is Cons!1486) lt!28885) (not (= (_1!1064 (h!2070 lt!28885)) (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun c!9357 () Bool)

(declare-fun d!13999 () Bool)

(assert (=> d!13999 (= c!9357 (and ((_ is Cons!1486) lt!28885) (= (_1!1064 (h!2070 lt!28885)) (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!13999 (= (getValueByKey!129 lt!28885 (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) e!44079)))

(declare-fun b!67231 () Bool)

(assert (=> b!67231 (= e!44080 (getValueByKey!129 (t!4976 lt!28885) (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67229 () Bool)

(assert (=> b!67229 (= e!44079 (Some!134 (_2!1064 (h!2070 lt!28885))))))

(declare-fun b!67232 () Bool)

(assert (=> b!67232 (= e!44080 None!133)))

(assert (= (and d!13999 c!9357) b!67229))

(assert (= (and d!13999 (not c!9357)) b!67230))

(assert (= (and b!67230 c!9358) b!67231))

(assert (= (and b!67230 (not c!9358)) b!67232))

(declare-fun m!61995 () Bool)

(assert (=> b!67231 m!61995))

(assert (=> d!13843 d!13999))

(declare-fun d!14001 () Bool)

(assert (=> d!14001 (= (getValueByKey!129 lt!28885 (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun lt!29149 () Unit!1836)

(assert (=> d!14001 (= lt!29149 (choose!376 lt!28885 (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun e!44081 () Bool)

(assert (=> d!14001 e!44081))

(declare-fun res!36311 () Bool)

(assert (=> d!14001 (=> (not res!36311) (not e!44081))))

(assert (=> d!14001 (= res!36311 (isStrictlySorted!284 lt!28885))))

(assert (=> d!14001 (= (lemmaContainsTupThenGetReturnValue!48 lt!28885 (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29149)))

(declare-fun b!67233 () Bool)

(declare-fun res!36312 () Bool)

(assert (=> b!67233 (=> (not res!36312) (not e!44081))))

(assert (=> b!67233 (= res!36312 (containsKey!133 lt!28885 (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67234 () Bool)

(assert (=> b!67234 (= e!44081 (contains!718 lt!28885 (tuple2!2109 (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14001 res!36311) b!67233))

(assert (= (and b!67233 res!36312) b!67234))

(assert (=> d!14001 m!61429))

(declare-fun m!61997 () Bool)

(assert (=> d!14001 m!61997))

(declare-fun m!61999 () Bool)

(assert (=> d!14001 m!61999))

(declare-fun m!62001 () Bool)

(assert (=> b!67233 m!62001))

(declare-fun m!62003 () Bool)

(assert (=> b!67234 m!62003))

(assert (=> d!13843 d!14001))

(declare-fun b!67235 () Bool)

(declare-fun e!44083 () List!1490)

(declare-fun call!5636 () List!1490)

(assert (=> b!67235 (= e!44083 call!5636)))

(declare-fun b!67236 () Bool)

(declare-fun e!44082 () List!1490)

(declare-fun call!5635 () List!1490)

(assert (=> b!67236 (= e!44082 call!5635)))

(declare-fun bm!5632 () Bool)

(declare-fun call!5637 () List!1490)

(assert (=> bm!5632 (= call!5635 call!5637)))

(declare-fun e!44086 () List!1490)

(declare-fun c!9360 () Bool)

(declare-fun bm!5633 () Bool)

(assert (=> bm!5633 (= call!5636 ($colon$colon!62 e!44086 (ite c!9360 (h!2070 (toList!723 lt!28597)) (tuple2!2109 (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun c!9362 () Bool)

(assert (=> bm!5633 (= c!9362 c!9360)))

(declare-fun d!14003 () Bool)

(declare-fun e!44084 () Bool)

(assert (=> d!14003 e!44084))

(declare-fun res!36314 () Bool)

(assert (=> d!14003 (=> (not res!36314) (not e!44084))))

(declare-fun lt!29150 () List!1490)

(assert (=> d!14003 (= res!36314 (isStrictlySorted!284 lt!29150))))

(assert (=> d!14003 (= lt!29150 e!44083)))

(assert (=> d!14003 (= c!9360 (and ((_ is Cons!1486) (toList!723 lt!28597)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28597))) (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14003 (isStrictlySorted!284 (toList!723 lt!28597))))

(assert (=> d!14003 (= (insertStrictlySorted!50 (toList!723 lt!28597) (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29150)))

(declare-fun bm!5634 () Bool)

(assert (=> bm!5634 (= call!5637 call!5636)))

(declare-fun b!67237 () Bool)

(assert (=> b!67237 (= e!44086 (insertStrictlySorted!50 (t!4976 (toList!723 lt!28597)) (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun c!9361 () Bool)

(declare-fun b!67238 () Bool)

(assert (=> b!67238 (= c!9361 (and ((_ is Cons!1486) (toList!723 lt!28597)) (bvsgt (_1!1064 (h!2070 (toList!723 lt!28597))) (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun e!44085 () List!1490)

(assert (=> b!67238 (= e!44085 e!44082)))

(declare-fun b!67239 () Bool)

(assert (=> b!67239 (= e!44085 call!5637)))

(declare-fun b!67240 () Bool)

(declare-fun res!36313 () Bool)

(assert (=> b!67240 (=> (not res!36313) (not e!44084))))

(assert (=> b!67240 (= res!36313 (containsKey!133 lt!29150 (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67241 () Bool)

(assert (=> b!67241 (= e!44082 call!5635)))

(declare-fun b!67242 () Bool)

(declare-fun c!9359 () Bool)

(assert (=> b!67242 (= e!44086 (ite c!9359 (t!4976 (toList!723 lt!28597)) (ite c!9361 (Cons!1486 (h!2070 (toList!723 lt!28597)) (t!4976 (toList!723 lt!28597))) Nil!1487)))))

(declare-fun b!67243 () Bool)

(assert (=> b!67243 (= e!44084 (contains!718 lt!29150 (tuple2!2109 (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!67244 () Bool)

(assert (=> b!67244 (= e!44083 e!44085)))

(assert (=> b!67244 (= c!9359 (and ((_ is Cons!1486) (toList!723 lt!28597)) (= (_1!1064 (h!2070 (toList!723 lt!28597))) (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14003 c!9360) b!67235))

(assert (= (and d!14003 (not c!9360)) b!67244))

(assert (= (and b!67244 c!9359) b!67239))

(assert (= (and b!67244 (not c!9359)) b!67238))

(assert (= (and b!67238 c!9361) b!67241))

(assert (= (and b!67238 (not c!9361)) b!67236))

(assert (= (or b!67241 b!67236) bm!5632))

(assert (= (or b!67239 bm!5632) bm!5634))

(assert (= (or b!67235 bm!5634) bm!5633))

(assert (= (and bm!5633 c!9362) b!67237))

(assert (= (and bm!5633 (not c!9362)) b!67242))

(assert (= (and d!14003 res!36314) b!67240))

(assert (= (and b!67240 res!36313) b!67243))

(declare-fun m!62005 () Bool)

(assert (=> bm!5633 m!62005))

(declare-fun m!62007 () Bool)

(assert (=> d!14003 m!62007))

(declare-fun m!62009 () Bool)

(assert (=> d!14003 m!62009))

(declare-fun m!62011 () Bool)

(assert (=> b!67240 m!62011))

(declare-fun m!62013 () Bool)

(assert (=> b!67237 m!62013))

(declare-fun m!62015 () Bool)

(assert (=> b!67243 m!62015))

(assert (=> d!13843 d!14003))

(assert (=> d!13937 d!13931))

(assert (=> d!13937 d!13935))

(assert (=> d!13937 d!13939))

(assert (=> d!13937 d!13933))

(assert (=> d!13815 d!13813))

(declare-fun d!14005 () Bool)

(assert (=> d!14005 (= (getValueByKey!129 lt!28646 (_1!1064 lt!28500)) (Some!134 (_2!1064 lt!28500)))))

(assert (=> d!14005 true))

(declare-fun _$22!368 () Unit!1836)

(assert (=> d!14005 (= (choose!376 lt!28646 (_1!1064 lt!28500) (_2!1064 lt!28500)) _$22!368)))

(declare-fun bs!2871 () Bool)

(assert (= bs!2871 d!14005))

(assert (=> bs!2871 m!60915))

(assert (=> d!13815 d!14005))

(declare-fun d!14007 () Bool)

(declare-fun res!36315 () Bool)

(declare-fun e!44087 () Bool)

(assert (=> d!14007 (=> res!36315 e!44087)))

(assert (=> d!14007 (= res!36315 (or ((_ is Nil!1487) lt!28646) ((_ is Nil!1487) (t!4976 lt!28646))))))

(assert (=> d!14007 (= (isStrictlySorted!284 lt!28646) e!44087)))

(declare-fun b!67245 () Bool)

(declare-fun e!44088 () Bool)

(assert (=> b!67245 (= e!44087 e!44088)))

(declare-fun res!36316 () Bool)

(assert (=> b!67245 (=> (not res!36316) (not e!44088))))

(assert (=> b!67245 (= res!36316 (bvslt (_1!1064 (h!2070 lt!28646)) (_1!1064 (h!2070 (t!4976 lt!28646)))))))

(declare-fun b!67246 () Bool)

(assert (=> b!67246 (= e!44088 (isStrictlySorted!284 (t!4976 lt!28646)))))

(assert (= (and d!14007 (not res!36315)) b!67245))

(assert (= (and b!67245 res!36316) b!67246))

(declare-fun m!62017 () Bool)

(assert (=> b!67246 m!62017))

(assert (=> d!13815 d!14007))

(declare-fun d!14009 () Bool)

(declare-fun e!44089 () Bool)

(assert (=> d!14009 e!44089))

(declare-fun res!36318 () Bool)

(assert (=> d!14009 (=> (not res!36318) (not e!44089))))

(declare-fun lt!29152 () ListLongMap!1415)

(assert (=> d!14009 (= res!36318 (contains!716 lt!29152 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))))))

(declare-fun lt!29154 () List!1490)

(assert (=> d!14009 (= lt!29152 (ListLongMap!1416 lt!29154))))

(declare-fun lt!29153 () Unit!1836)

(declare-fun lt!29151 () Unit!1836)

(assert (=> d!14009 (= lt!29153 lt!29151)))

(assert (=> d!14009 (= (getValueByKey!129 lt!29154 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))) (Some!134 (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))))))

(assert (=> d!14009 (= lt!29151 (lemmaContainsTupThenGetReturnValue!48 lt!29154 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))) (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))))))

(assert (=> d!14009 (= lt!29154 (insertStrictlySorted!50 (toList!723 call!5611) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))) (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))))))

(assert (=> d!14009 (= (+!87 call!5611 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))) lt!29152)))

(declare-fun b!67247 () Bool)

(declare-fun res!36317 () Bool)

(assert (=> b!67247 (=> (not res!36317) (not e!44089))))

(assert (=> b!67247 (= res!36317 (= (getValueByKey!129 (toList!723 lt!29152) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))) (Some!134 (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))))))))

(declare-fun b!67248 () Bool)

(assert (=> b!67248 (= e!44089 (contains!718 (toList!723 lt!29152) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))))))

(assert (= (and d!14009 res!36318) b!67247))

(assert (= (and b!67247 res!36317) b!67248))

(declare-fun m!62019 () Bool)

(assert (=> d!14009 m!62019))

(declare-fun m!62021 () Bool)

(assert (=> d!14009 m!62021))

(declare-fun m!62023 () Bool)

(assert (=> d!14009 m!62023))

(declare-fun m!62025 () Bool)

(assert (=> d!14009 m!62025))

(declare-fun m!62027 () Bool)

(assert (=> b!67247 m!62027))

(declare-fun m!62029 () Bool)

(assert (=> b!67248 m!62029))

(assert (=> b!66996 d!14009))

(assert (=> b!66809 d!13729))

(declare-fun d!14011 () Bool)

(assert (=> d!14011 (isDefined!83 (getValueByKey!129 (toList!723 lt!28634) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!29155 () Unit!1836)

(assert (=> d!14011 (= lt!29155 (choose!378 (toList!723 lt!28634) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44090 () Bool)

(assert (=> d!14011 e!44090))

(declare-fun res!36319 () Bool)

(assert (=> d!14011 (=> (not res!36319) (not e!44090))))

(assert (=> d!14011 (= res!36319 (isStrictlySorted!284 (toList!723 lt!28634)))))

(assert (=> d!14011 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28634) #b0000000000000000000000000000000000000000000000000000000000000000) lt!29155)))

(declare-fun b!67249 () Bool)

(assert (=> b!67249 (= e!44090 (containsKey!133 (toList!723 lt!28634) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14011 res!36319) b!67249))

(assert (=> d!14011 m!61279))

(assert (=> d!14011 m!61279))

(assert (=> d!14011 m!61281))

(declare-fun m!62031 () Bool)

(assert (=> d!14011 m!62031))

(declare-fun m!62033 () Bool)

(assert (=> d!14011 m!62033))

(assert (=> b!67249 m!61275))

(assert (=> b!66862 d!14011))

(declare-fun d!14013 () Bool)

(assert (=> d!14013 (= (isDefined!83 (getValueByKey!129 (toList!723 lt!28634) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!314 (getValueByKey!129 (toList!723 lt!28634) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2872 () Bool)

(assert (= bs!2872 d!14013))

(assert (=> bs!2872 m!61279))

(declare-fun m!62035 () Bool)

(assert (=> bs!2872 m!62035))

(assert (=> b!66862 d!14013))

(declare-fun b!67251 () Bool)

(declare-fun e!44091 () Option!135)

(declare-fun e!44092 () Option!135)

(assert (=> b!67251 (= e!44091 e!44092)))

(declare-fun c!9364 () Bool)

(assert (=> b!67251 (= c!9364 (and ((_ is Cons!1486) (toList!723 lt!28634)) (not (= (_1!1064 (h!2070 (toList!723 lt!28634))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!14015 () Bool)

(declare-fun c!9363 () Bool)

(assert (=> d!14015 (= c!9363 (and ((_ is Cons!1486) (toList!723 lt!28634)) (= (_1!1064 (h!2070 (toList!723 lt!28634))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14015 (= (getValueByKey!129 (toList!723 lt!28634) #b0000000000000000000000000000000000000000000000000000000000000000) e!44091)))

(declare-fun b!67252 () Bool)

(assert (=> b!67252 (= e!44092 (getValueByKey!129 (t!4976 (toList!723 lt!28634)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67250 () Bool)

(assert (=> b!67250 (= e!44091 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28634)))))))

(declare-fun b!67253 () Bool)

(assert (=> b!67253 (= e!44092 None!133)))

(assert (= (and d!14015 c!9363) b!67250))

(assert (= (and d!14015 (not c!9363)) b!67251))

(assert (= (and b!67251 c!9364) b!67252))

(assert (= (and b!67251 (not c!9364)) b!67253))

(declare-fun m!62037 () Bool)

(assert (=> b!67252 m!62037))

(assert (=> b!66862 d!14015))

(declare-fun d!14017 () Bool)

(assert (=> d!14017 (= (isDefined!83 (getValueByKey!129 (toList!723 lt!28612) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!314 (getValueByKey!129 (toList!723 lt!28612) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!2873 () Bool)

(assert (= bs!2873 d!14017))

(assert (=> bs!2873 m!61507))

(declare-fun m!62039 () Bool)

(assert (=> bs!2873 m!62039))

(assert (=> b!66961 d!14017))

(declare-fun b!67255 () Bool)

(declare-fun e!44093 () Option!135)

(declare-fun e!44094 () Option!135)

(assert (=> b!67255 (= e!44093 e!44094)))

(declare-fun c!9366 () Bool)

(assert (=> b!67255 (= c!9366 (and ((_ is Cons!1486) (toList!723 lt!28612)) (not (= (_1!1064 (h!2070 (toList!723 lt!28612))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun d!14019 () Bool)

(declare-fun c!9365 () Bool)

(assert (=> d!14019 (= c!9365 (and ((_ is Cons!1486) (toList!723 lt!28612)) (= (_1!1064 (h!2070 (toList!723 lt!28612))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14019 (= (getValueByKey!129 (toList!723 lt!28612) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!44093)))

(declare-fun b!67256 () Bool)

(assert (=> b!67256 (= e!44094 (getValueByKey!129 (t!4976 (toList!723 lt!28612)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!67254 () Bool)

(assert (=> b!67254 (= e!44093 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28612)))))))

(declare-fun b!67257 () Bool)

(assert (=> b!67257 (= e!44094 None!133)))

(assert (= (and d!14019 c!9365) b!67254))

(assert (= (and d!14019 (not c!9365)) b!67255))

(assert (= (and b!67255 c!9366) b!67256))

(assert (= (and b!67255 (not c!9366)) b!67257))

(assert (=> b!67256 m!60843))

(declare-fun m!62041 () Bool)

(assert (=> b!67256 m!62041))

(assert (=> b!66961 d!14019))

(assert (=> d!13861 d!13793))

(declare-fun d!14021 () Bool)

(declare-fun e!44097 () Bool)

(assert (=> d!14021 e!44097))

(declare-fun res!36325 () Bool)

(assert (=> d!14021 (=> (not res!36325) (not e!44097))))

(declare-fun lt!29158 () SeekEntryResult!243)

(assert (=> d!14021 (= res!36325 ((_ is Found!243) lt!29158))))

(assert (=> d!14021 (= lt!29158 (seekEntryOrOpen!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(assert (=> d!14021 true))

(declare-fun _$33!51 () Unit!1836)

(assert (=> d!14021 (= (choose!381 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)) _$33!51)))

(declare-fun b!67262 () Bool)

(declare-fun res!36324 () Bool)

(assert (=> b!67262 (=> (not res!36324) (not e!44097))))

(assert (=> b!67262 (= res!36324 (inRange!0 (index!3101 lt!29158) (mask!6082 newMap!16)))))

(declare-fun b!67263 () Bool)

(assert (=> b!67263 (= e!44097 (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!29158)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (= (and d!14021 res!36325) b!67262))

(assert (= (and b!67262 res!36324) b!67263))

(assert (=> d!14021 m!60719))

(assert (=> d!14021 m!60993))

(declare-fun m!62043 () Bool)

(assert (=> b!67262 m!62043))

(declare-fun m!62045 () Bool)

(assert (=> b!67263 m!62045))

(assert (=> d!13861 d!14021))

(declare-fun d!14023 () Bool)

(assert (=> d!14023 (= (validMask!0 (mask!6082 newMap!16)) (and (or (= (mask!6082 newMap!16) #b00000000000000000000000000000111) (= (mask!6082 newMap!16) #b00000000000000000000000000001111) (= (mask!6082 newMap!16) #b00000000000000000000000000011111) (= (mask!6082 newMap!16) #b00000000000000000000000000111111) (= (mask!6082 newMap!16) #b00000000000000000000000001111111) (= (mask!6082 newMap!16) #b00000000000000000000000011111111) (= (mask!6082 newMap!16) #b00000000000000000000000111111111) (= (mask!6082 newMap!16) #b00000000000000000000001111111111) (= (mask!6082 newMap!16) #b00000000000000000000011111111111) (= (mask!6082 newMap!16) #b00000000000000000000111111111111) (= (mask!6082 newMap!16) #b00000000000000000001111111111111) (= (mask!6082 newMap!16) #b00000000000000000011111111111111) (= (mask!6082 newMap!16) #b00000000000000000111111111111111) (= (mask!6082 newMap!16) #b00000000000000001111111111111111) (= (mask!6082 newMap!16) #b00000000000000011111111111111111) (= (mask!6082 newMap!16) #b00000000000000111111111111111111) (= (mask!6082 newMap!16) #b00000000000001111111111111111111) (= (mask!6082 newMap!16) #b00000000000011111111111111111111) (= (mask!6082 newMap!16) #b00000000000111111111111111111111) (= (mask!6082 newMap!16) #b00000000001111111111111111111111) (= (mask!6082 newMap!16) #b00000000011111111111111111111111) (= (mask!6082 newMap!16) #b00000000111111111111111111111111) (= (mask!6082 newMap!16) #b00000001111111111111111111111111) (= (mask!6082 newMap!16) #b00000011111111111111111111111111) (= (mask!6082 newMap!16) #b00000111111111111111111111111111) (= (mask!6082 newMap!16) #b00001111111111111111111111111111) (= (mask!6082 newMap!16) #b00011111111111111111111111111111) (= (mask!6082 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6082 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!13861 d!14023))

(declare-fun d!14025 () Bool)

(assert (=> d!14025 (= (map!1143 (_2!1065 lt!29055)) (getCurrentListMap!419 (_keys!3787 (_2!1065 lt!29055)) (_values!2130 (_2!1065 lt!29055)) (mask!6082 (_2!1065 lt!29055)) (extraKeys!2018 (_2!1065 lt!29055)) (zeroValue!2055 (_2!1065 lt!29055)) (minValue!2055 (_2!1065 lt!29055)) #b00000000000000000000000000000000 (defaultEntry!2147 (_2!1065 lt!29055))))))

(declare-fun bs!2874 () Bool)

(assert (= bs!2874 d!14025))

(declare-fun m!62047 () Bool)

(assert (=> bs!2874 m!62047))

(assert (=> b!67106 d!14025))

(declare-fun d!14027 () Bool)

(declare-fun e!44098 () Bool)

(assert (=> d!14027 e!44098))

(declare-fun res!36327 () Bool)

(assert (=> d!14027 (=> (not res!36327) (not e!44098))))

(declare-fun lt!29160 () ListLongMap!1415)

(assert (=> d!14027 (= res!36327 (contains!716 lt!29160 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun lt!29162 () List!1490)

(assert (=> d!14027 (= lt!29160 (ListLongMap!1416 lt!29162))))

(declare-fun lt!29161 () Unit!1836)

(declare-fun lt!29159 () Unit!1836)

(assert (=> d!14027 (= lt!29161 lt!29159)))

(assert (=> d!14027 (= (getValueByKey!129 lt!29162 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (Some!134 (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!14027 (= lt!29159 (lemmaContainsTupThenGetReturnValue!48 lt!29162 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!14027 (= lt!29162 (insertStrictlySorted!50 (toList!723 (map!1143 newMap!16)) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!14027 (= (+!87 (map!1143 newMap!16) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) lt!29160)))

(declare-fun b!67264 () Bool)

(declare-fun res!36326 () Bool)

(assert (=> b!67264 (=> (not res!36326) (not e!44098))))

(assert (=> b!67264 (= res!36326 (= (getValueByKey!129 (toList!723 lt!29160) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (Some!134 (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun b!67265 () Bool)

(assert (=> b!67265 (= e!44098 (contains!718 (toList!723 lt!29160) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))

(assert (= (and d!14027 res!36327) b!67264))

(assert (= (and b!67264 res!36326) b!67265))

(declare-fun m!62049 () Bool)

(assert (=> d!14027 m!62049))

(declare-fun m!62051 () Bool)

(assert (=> d!14027 m!62051))

(declare-fun m!62053 () Bool)

(assert (=> d!14027 m!62053))

(declare-fun m!62055 () Bool)

(assert (=> d!14027 m!62055))

(declare-fun m!62057 () Bool)

(assert (=> b!67264 m!62057))

(declare-fun m!62059 () Bool)

(assert (=> b!67265 m!62059))

(assert (=> b!67106 d!14027))

(assert (=> b!67106 d!13701))

(assert (=> d!13819 d!13821))

(assert (=> d!13819 d!13823))

(declare-fun d!14029 () Bool)

(assert (=> d!14029 (isDefined!83 (getValueByKey!129 (toList!723 lt!28501) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> d!14029 true))

(declare-fun _$12!314 () Unit!1836)

(assert (=> d!14029 (= (choose!378 (toList!723 lt!28501) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) _$12!314)))

(declare-fun bs!2875 () Bool)

(assert (= bs!2875 d!14029))

(assert (=> bs!2875 m!60719))

(assert (=> bs!2875 m!60989))

(assert (=> bs!2875 m!60989))

(assert (=> bs!2875 m!60991))

(assert (=> d!13819 d!14029))

(declare-fun d!14031 () Bool)

(declare-fun res!36328 () Bool)

(declare-fun e!44099 () Bool)

(assert (=> d!14031 (=> res!36328 e!44099)))

(assert (=> d!14031 (= res!36328 (or ((_ is Nil!1487) (toList!723 lt!28501)) ((_ is Nil!1487) (t!4976 (toList!723 lt!28501)))))))

(assert (=> d!14031 (= (isStrictlySorted!284 (toList!723 lt!28501)) e!44099)))

(declare-fun b!67266 () Bool)

(declare-fun e!44100 () Bool)

(assert (=> b!67266 (= e!44099 e!44100)))

(declare-fun res!36329 () Bool)

(assert (=> b!67266 (=> (not res!36329) (not e!44100))))

(assert (=> b!67266 (= res!36329 (bvslt (_1!1064 (h!2070 (toList!723 lt!28501))) (_1!1064 (h!2070 (t!4976 (toList!723 lt!28501))))))))

(declare-fun b!67267 () Bool)

(assert (=> b!67267 (= e!44100 (isStrictlySorted!284 (t!4976 (toList!723 lt!28501))))))

(assert (= (and d!14031 (not res!36328)) b!67266))

(assert (= (and b!67266 res!36329) b!67267))

(declare-fun m!62061 () Bool)

(assert (=> b!67267 m!62061))

(assert (=> d!13819 d!14031))

(declare-fun b!67269 () Bool)

(declare-fun res!36333 () Bool)

(declare-fun e!44101 () Bool)

(assert (=> b!67269 (=> (not res!36333) (not e!44101))))

(assert (=> b!67269 (= res!36333 (bvsge (size!2073 (_2!1065 lt!28753)) (_size!385 (_2!1065 lt!28753))))))

(declare-fun b!67271 () Bool)

(assert (=> b!67271 (= e!44101 (and (bvsge (extraKeys!2018 (_2!1065 lt!28753)) #b00000000000000000000000000000000) (bvsle (extraKeys!2018 (_2!1065 lt!28753)) #b00000000000000000000000000000011) (bvsge (_vacant!385 (_2!1065 lt!28753)) #b00000000000000000000000000000000)))))

(declare-fun d!14033 () Bool)

(declare-fun res!36330 () Bool)

(assert (=> d!14033 (=> (not res!36330) (not e!44101))))

(assert (=> d!14033 (= res!36330 (validMask!0 (mask!6082 (_2!1065 lt!28753))))))

(assert (=> d!14033 (= (simpleValid!47 (_2!1065 lt!28753)) e!44101)))

(declare-fun b!67270 () Bool)

(declare-fun res!36331 () Bool)

(assert (=> b!67270 (=> (not res!36331) (not e!44101))))

(assert (=> b!67270 (= res!36331 (= (size!2073 (_2!1065 lt!28753)) (bvadd (_size!385 (_2!1065 lt!28753)) (bvsdiv (bvadd (extraKeys!2018 (_2!1065 lt!28753)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!67268 () Bool)

(declare-fun res!36332 () Bool)

(assert (=> b!67268 (=> (not res!36332) (not e!44101))))

(assert (=> b!67268 (= res!36332 (and (= (size!2070 (_values!2130 (_2!1065 lt!28753))) (bvadd (mask!6082 (_2!1065 lt!28753)) #b00000000000000000000000000000001)) (= (size!2069 (_keys!3787 (_2!1065 lt!28753))) (size!2070 (_values!2130 (_2!1065 lt!28753)))) (bvsge (_size!385 (_2!1065 lt!28753)) #b00000000000000000000000000000000) (bvsle (_size!385 (_2!1065 lt!28753)) (bvadd (mask!6082 (_2!1065 lt!28753)) #b00000000000000000000000000000001))))))

(assert (= (and d!14033 res!36330) b!67268))

(assert (= (and b!67268 res!36332) b!67269))

(assert (= (and b!67269 res!36333) b!67270))

(assert (= (and b!67270 res!36331) b!67271))

(declare-fun m!62063 () Bool)

(assert (=> b!67269 m!62063))

(declare-fun m!62065 () Bool)

(assert (=> d!14033 m!62065))

(assert (=> b!67270 m!62063))

(assert (=> d!13927 d!14033))

(declare-fun d!14035 () Bool)

(assert (=> d!14035 (= (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66970 d!14035))

(declare-fun d!14037 () Bool)

(declare-fun res!36334 () Bool)

(declare-fun e!44102 () Bool)

(assert (=> d!14037 (=> res!36334 e!44102)))

(assert (=> d!14037 (= res!36334 (or ((_ is Nil!1487) lt!28863) ((_ is Nil!1487) (t!4976 lt!28863))))))

(assert (=> d!14037 (= (isStrictlySorted!284 lt!28863) e!44102)))

(declare-fun b!67272 () Bool)

(declare-fun e!44103 () Bool)

(assert (=> b!67272 (= e!44102 e!44103)))

(declare-fun res!36335 () Bool)

(assert (=> b!67272 (=> (not res!36335) (not e!44103))))

(assert (=> b!67272 (= res!36335 (bvslt (_1!1064 (h!2070 lt!28863)) (_1!1064 (h!2070 (t!4976 lt!28863)))))))

(declare-fun b!67273 () Bool)

(assert (=> b!67273 (= e!44103 (isStrictlySorted!284 (t!4976 lt!28863)))))

(assert (= (and d!14037 (not res!36334)) b!67272))

(assert (= (and b!67272 res!36335) b!67273))

(declare-fun m!62067 () Bool)

(assert (=> b!67273 m!62067))

(assert (=> d!13817 d!14037))

(declare-fun d!14039 () Bool)

(declare-fun res!36336 () Bool)

(declare-fun e!44104 () Bool)

(assert (=> d!14039 (=> res!36336 e!44104)))

(assert (=> d!14039 (= res!36336 (or ((_ is Nil!1487) (toList!723 lt!28505)) ((_ is Nil!1487) (t!4976 (toList!723 lt!28505)))))))

(assert (=> d!14039 (= (isStrictlySorted!284 (toList!723 lt!28505)) e!44104)))

(declare-fun b!67274 () Bool)

(declare-fun e!44105 () Bool)

(assert (=> b!67274 (= e!44104 e!44105)))

(declare-fun res!36337 () Bool)

(assert (=> b!67274 (=> (not res!36337) (not e!44105))))

(assert (=> b!67274 (= res!36337 (bvslt (_1!1064 (h!2070 (toList!723 lt!28505))) (_1!1064 (h!2070 (t!4976 (toList!723 lt!28505))))))))

(declare-fun b!67275 () Bool)

(assert (=> b!67275 (= e!44105 (isStrictlySorted!284 (t!4976 (toList!723 lt!28505))))))

(assert (= (and d!14039 (not res!36336)) b!67274))

(assert (= (and b!67274 res!36337) b!67275))

(declare-fun m!62069 () Bool)

(assert (=> b!67275 m!62069))

(assert (=> d!13817 d!14039))

(assert (=> b!66715 d!14035))

(declare-fun b!67276 () Bool)

(declare-fun e!44111 () Bool)

(declare-fun call!5640 () Bool)

(assert (=> b!67276 (= e!44111 (not call!5640))))

(declare-fun bm!5635 () Bool)

(declare-fun call!5644 () ListLongMap!1415)

(assert (=> bm!5635 (= call!5644 (getCurrentListMapNoExtraKeys!51 (_keys!3787 (_2!1065 lt!28753)) (_values!2130 (_2!1065 lt!28753)) (mask!6082 (_2!1065 lt!28753)) (extraKeys!2018 (_2!1065 lt!28753)) (zeroValue!2055 (_2!1065 lt!28753)) (minValue!2055 (_2!1065 lt!28753)) #b00000000000000000000000000000000 (defaultEntry!2147 (_2!1065 lt!28753))))))

(declare-fun d!14041 () Bool)

(declare-fun e!44118 () Bool)

(assert (=> d!14041 e!44118))

(declare-fun res!36346 () Bool)

(assert (=> d!14041 (=> (not res!36346) (not e!44118))))

(assert (=> d!14041 (= res!36346 (or (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 (_2!1065 lt!28753)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 (_2!1065 lt!28753)))))))))

(declare-fun lt!29183 () ListLongMap!1415)

(declare-fun lt!29170 () ListLongMap!1415)

(assert (=> d!14041 (= lt!29183 lt!29170)))

(declare-fun lt!29166 () Unit!1836)

(declare-fun e!44114 () Unit!1836)

(assert (=> d!14041 (= lt!29166 e!44114)))

(declare-fun c!9369 () Bool)

(declare-fun e!44112 () Bool)

(assert (=> d!14041 (= c!9369 e!44112)))

(declare-fun res!36339 () Bool)

(assert (=> d!14041 (=> (not res!36339) (not e!44112))))

(assert (=> d!14041 (= res!36339 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 (_2!1065 lt!28753)))))))

(declare-fun e!44107 () ListLongMap!1415)

(assert (=> d!14041 (= lt!29170 e!44107)))

(declare-fun c!9370 () Bool)

(assert (=> d!14041 (= c!9370 (and (not (= (bvand (extraKeys!2018 (_2!1065 lt!28753)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2018 (_2!1065 lt!28753)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14041 (validMask!0 (mask!6082 (_2!1065 lt!28753)))))

(assert (=> d!14041 (= (getCurrentListMap!419 (_keys!3787 (_2!1065 lt!28753)) (_values!2130 (_2!1065 lt!28753)) (mask!6082 (_2!1065 lt!28753)) (extraKeys!2018 (_2!1065 lt!28753)) (zeroValue!2055 (_2!1065 lt!28753)) (minValue!2055 (_2!1065 lt!28753)) #b00000000000000000000000000000000 (defaultEntry!2147 (_2!1065 lt!28753))) lt!29183)))

(declare-fun b!67277 () Bool)

(declare-fun call!5643 () ListLongMap!1415)

(assert (=> b!67277 (= e!44107 (+!87 call!5643 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (_2!1065 lt!28753)))))))

(declare-fun b!67278 () Bool)

(declare-fun e!44115 () Bool)

(assert (=> b!67278 (= e!44111 e!44115)))

(declare-fun res!36341 () Bool)

(assert (=> b!67278 (= res!36341 call!5640)))

(assert (=> b!67278 (=> (not res!36341) (not e!44115))))

(declare-fun b!67279 () Bool)

(declare-fun e!44109 () ListLongMap!1415)

(assert (=> b!67279 (= e!44107 e!44109)))

(declare-fun c!9372 () Bool)

(assert (=> b!67279 (= c!9372 (and (not (= (bvand (extraKeys!2018 (_2!1065 lt!28753)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 (_2!1065 lt!28753)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5636 () Bool)

(declare-fun call!5641 () ListLongMap!1415)

(declare-fun call!5639 () ListLongMap!1415)

(assert (=> bm!5636 (= call!5641 call!5639)))

(declare-fun b!67280 () Bool)

(declare-fun e!44110 () Bool)

(assert (=> b!67280 (= e!44118 e!44110)))

(declare-fun c!9367 () Bool)

(assert (=> b!67280 (= c!9367 (not (= (bvand (extraKeys!2018 (_2!1065 lt!28753)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67281 () Bool)

(declare-fun call!5642 () Bool)

(assert (=> b!67281 (= e!44110 (not call!5642))))

(declare-fun b!67282 () Bool)

(declare-fun e!44116 () Bool)

(assert (=> b!67282 (= e!44110 e!44116)))

(declare-fun res!36345 () Bool)

(assert (=> b!67282 (= res!36345 call!5642)))

(assert (=> b!67282 (=> (not res!36345) (not e!44116))))

(declare-fun b!67283 () Bool)

(declare-fun lt!29184 () Unit!1836)

(assert (=> b!67283 (= e!44114 lt!29184)))

(declare-fun lt!29168 () ListLongMap!1415)

(assert (=> b!67283 (= lt!29168 (getCurrentListMapNoExtraKeys!51 (_keys!3787 (_2!1065 lt!28753)) (_values!2130 (_2!1065 lt!28753)) (mask!6082 (_2!1065 lt!28753)) (extraKeys!2018 (_2!1065 lt!28753)) (zeroValue!2055 (_2!1065 lt!28753)) (minValue!2055 (_2!1065 lt!28753)) #b00000000000000000000000000000000 (defaultEntry!2147 (_2!1065 lt!28753))))))

(declare-fun lt!29177 () (_ BitVec 64))

(assert (=> b!67283 (= lt!29177 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29171 () (_ BitVec 64))

(assert (=> b!67283 (= lt!29171 (select (arr!1834 (_keys!3787 (_2!1065 lt!28753))) #b00000000000000000000000000000000))))

(declare-fun lt!29165 () Unit!1836)

(assert (=> b!67283 (= lt!29165 (addStillContains!48 lt!29168 lt!29177 (zeroValue!2055 (_2!1065 lt!28753)) lt!29171))))

(assert (=> b!67283 (contains!716 (+!87 lt!29168 (tuple2!2109 lt!29177 (zeroValue!2055 (_2!1065 lt!28753)))) lt!29171)))

(declare-fun lt!29175 () Unit!1836)

(assert (=> b!67283 (= lt!29175 lt!29165)))

(declare-fun lt!29182 () ListLongMap!1415)

(assert (=> b!67283 (= lt!29182 (getCurrentListMapNoExtraKeys!51 (_keys!3787 (_2!1065 lt!28753)) (_values!2130 (_2!1065 lt!28753)) (mask!6082 (_2!1065 lt!28753)) (extraKeys!2018 (_2!1065 lt!28753)) (zeroValue!2055 (_2!1065 lt!28753)) (minValue!2055 (_2!1065 lt!28753)) #b00000000000000000000000000000000 (defaultEntry!2147 (_2!1065 lt!28753))))))

(declare-fun lt!29173 () (_ BitVec 64))

(assert (=> b!67283 (= lt!29173 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29169 () (_ BitVec 64))

(assert (=> b!67283 (= lt!29169 (select (arr!1834 (_keys!3787 (_2!1065 lt!28753))) #b00000000000000000000000000000000))))

(declare-fun lt!29180 () Unit!1836)

(assert (=> b!67283 (= lt!29180 (addApplyDifferent!48 lt!29182 lt!29173 (minValue!2055 (_2!1065 lt!28753)) lt!29169))))

(assert (=> b!67283 (= (apply!72 (+!87 lt!29182 (tuple2!2109 lt!29173 (minValue!2055 (_2!1065 lt!28753)))) lt!29169) (apply!72 lt!29182 lt!29169))))

(declare-fun lt!29163 () Unit!1836)

(assert (=> b!67283 (= lt!29163 lt!29180)))

(declare-fun lt!29179 () ListLongMap!1415)

(assert (=> b!67283 (= lt!29179 (getCurrentListMapNoExtraKeys!51 (_keys!3787 (_2!1065 lt!28753)) (_values!2130 (_2!1065 lt!28753)) (mask!6082 (_2!1065 lt!28753)) (extraKeys!2018 (_2!1065 lt!28753)) (zeroValue!2055 (_2!1065 lt!28753)) (minValue!2055 (_2!1065 lt!28753)) #b00000000000000000000000000000000 (defaultEntry!2147 (_2!1065 lt!28753))))))

(declare-fun lt!29174 () (_ BitVec 64))

(assert (=> b!67283 (= lt!29174 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29176 () (_ BitVec 64))

(assert (=> b!67283 (= lt!29176 (select (arr!1834 (_keys!3787 (_2!1065 lt!28753))) #b00000000000000000000000000000000))))

(declare-fun lt!29164 () Unit!1836)

(assert (=> b!67283 (= lt!29164 (addApplyDifferent!48 lt!29179 lt!29174 (zeroValue!2055 (_2!1065 lt!28753)) lt!29176))))

(assert (=> b!67283 (= (apply!72 (+!87 lt!29179 (tuple2!2109 lt!29174 (zeroValue!2055 (_2!1065 lt!28753)))) lt!29176) (apply!72 lt!29179 lt!29176))))

(declare-fun lt!29178 () Unit!1836)

(assert (=> b!67283 (= lt!29178 lt!29164)))

(declare-fun lt!29167 () ListLongMap!1415)

(assert (=> b!67283 (= lt!29167 (getCurrentListMapNoExtraKeys!51 (_keys!3787 (_2!1065 lt!28753)) (_values!2130 (_2!1065 lt!28753)) (mask!6082 (_2!1065 lt!28753)) (extraKeys!2018 (_2!1065 lt!28753)) (zeroValue!2055 (_2!1065 lt!28753)) (minValue!2055 (_2!1065 lt!28753)) #b00000000000000000000000000000000 (defaultEntry!2147 (_2!1065 lt!28753))))))

(declare-fun lt!29172 () (_ BitVec 64))

(assert (=> b!67283 (= lt!29172 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29181 () (_ BitVec 64))

(assert (=> b!67283 (= lt!29181 (select (arr!1834 (_keys!3787 (_2!1065 lt!28753))) #b00000000000000000000000000000000))))

(assert (=> b!67283 (= lt!29184 (addApplyDifferent!48 lt!29167 lt!29172 (minValue!2055 (_2!1065 lt!28753)) lt!29181))))

(assert (=> b!67283 (= (apply!72 (+!87 lt!29167 (tuple2!2109 lt!29172 (minValue!2055 (_2!1065 lt!28753)))) lt!29181) (apply!72 lt!29167 lt!29181))))

(declare-fun b!67284 () Bool)

(assert (=> b!67284 (= e!44112 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (_2!1065 lt!28753))) #b00000000000000000000000000000000)))))

(declare-fun b!67285 () Bool)

(declare-fun Unit!1870 () Unit!1836)

(assert (=> b!67285 (= e!44114 Unit!1870)))

(declare-fun b!67286 () Bool)

(declare-fun res!36344 () Bool)

(assert (=> b!67286 (=> (not res!36344) (not e!44118))))

(assert (=> b!67286 (= res!36344 e!44111)))

(declare-fun c!9368 () Bool)

(assert (=> b!67286 (= c!9368 (not (= (bvand (extraKeys!2018 (_2!1065 lt!28753)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5637 () Bool)

(assert (=> bm!5637 (= call!5639 call!5644)))

(declare-fun b!67287 () Bool)

(assert (=> b!67287 (= e!44116 (= (apply!72 lt!29183 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2055 (_2!1065 lt!28753))))))

(declare-fun bm!5638 () Bool)

(assert (=> bm!5638 (= call!5643 (+!87 (ite c!9370 call!5644 (ite c!9372 call!5639 call!5641)) (ite (or c!9370 c!9372) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (_2!1065 lt!28753))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (_2!1065 lt!28753))))))))

(declare-fun b!67288 () Bool)

(declare-fun res!36340 () Bool)

(assert (=> b!67288 (=> (not res!36340) (not e!44118))))

(declare-fun e!44117 () Bool)

(assert (=> b!67288 (= res!36340 e!44117)))

(declare-fun res!36343 () Bool)

(assert (=> b!67288 (=> res!36343 e!44117)))

(declare-fun e!44113 () Bool)

(assert (=> b!67288 (= res!36343 (not e!44113))))

(declare-fun res!36338 () Bool)

(assert (=> b!67288 (=> (not res!36338) (not e!44113))))

(assert (=> b!67288 (= res!36338 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 (_2!1065 lt!28753)))))))

(declare-fun b!67289 () Bool)

(declare-fun c!9371 () Bool)

(assert (=> b!67289 (= c!9371 (and (not (= (bvand (extraKeys!2018 (_2!1065 lt!28753)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 (_2!1065 lt!28753)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!44106 () ListLongMap!1415)

(assert (=> b!67289 (= e!44109 e!44106)))

(declare-fun b!67290 () Bool)

(assert (=> b!67290 (= e!44106 call!5641)))

(declare-fun bm!5639 () Bool)

(declare-fun call!5638 () ListLongMap!1415)

(assert (=> bm!5639 (= call!5638 call!5643)))

(declare-fun bm!5640 () Bool)

(assert (=> bm!5640 (= call!5640 (contains!716 lt!29183 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67291 () Bool)

(assert (=> b!67291 (= e!44109 call!5638)))

(declare-fun b!67292 () Bool)

(assert (=> b!67292 (= e!44113 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (_2!1065 lt!28753))) #b00000000000000000000000000000000)))))

(declare-fun b!67293 () Bool)

(assert (=> b!67293 (= e!44115 (= (apply!72 lt!29183 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2055 (_2!1065 lt!28753))))))

(declare-fun b!67294 () Bool)

(assert (=> b!67294 (= e!44106 call!5638)))

(declare-fun b!67295 () Bool)

(declare-fun e!44108 () Bool)

(assert (=> b!67295 (= e!44117 e!44108)))

(declare-fun res!36342 () Bool)

(assert (=> b!67295 (=> (not res!36342) (not e!44108))))

(assert (=> b!67295 (= res!36342 (contains!716 lt!29183 (select (arr!1834 (_keys!3787 (_2!1065 lt!28753))) #b00000000000000000000000000000000)))))

(assert (=> b!67295 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 (_2!1065 lt!28753)))))))

(declare-fun bm!5641 () Bool)

(assert (=> bm!5641 (= call!5642 (contains!716 lt!29183 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67296 () Bool)

(assert (=> b!67296 (= e!44108 (= (apply!72 lt!29183 (select (arr!1834 (_keys!3787 (_2!1065 lt!28753))) #b00000000000000000000000000000000)) (get!1127 (select (arr!1835 (_values!2130 (_2!1065 lt!28753))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 (_2!1065 lt!28753)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67296 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_values!2130 (_2!1065 lt!28753)))))))

(assert (=> b!67296 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 (_2!1065 lt!28753)))))))

(assert (= (and d!14041 c!9370) b!67277))

(assert (= (and d!14041 (not c!9370)) b!67279))

(assert (= (and b!67279 c!9372) b!67291))

(assert (= (and b!67279 (not c!9372)) b!67289))

(assert (= (and b!67289 c!9371) b!67294))

(assert (= (and b!67289 (not c!9371)) b!67290))

(assert (= (or b!67294 b!67290) bm!5636))

(assert (= (or b!67291 bm!5636) bm!5637))

(assert (= (or b!67291 b!67294) bm!5639))

(assert (= (or b!67277 bm!5637) bm!5635))

(assert (= (or b!67277 bm!5639) bm!5638))

(assert (= (and d!14041 res!36339) b!67284))

(assert (= (and d!14041 c!9369) b!67283))

(assert (= (and d!14041 (not c!9369)) b!67285))

(assert (= (and d!14041 res!36346) b!67288))

(assert (= (and b!67288 res!36338) b!67292))

(assert (= (and b!67288 (not res!36343)) b!67295))

(assert (= (and b!67295 res!36342) b!67296))

(assert (= (and b!67288 res!36340) b!67286))

(assert (= (and b!67286 c!9368) b!67278))

(assert (= (and b!67286 (not c!9368)) b!67276))

(assert (= (and b!67278 res!36341) b!67293))

(assert (= (or b!67278 b!67276) bm!5640))

(assert (= (and b!67286 res!36344) b!67280))

(assert (= (and b!67280 c!9367) b!67282))

(assert (= (and b!67280 (not c!9367)) b!67281))

(assert (= (and b!67282 res!36345) b!67287))

(assert (= (or b!67282 b!67281) bm!5641))

(declare-fun b_lambda!3015 () Bool)

(assert (=> (not b_lambda!3015) (not b!67296)))

(declare-fun tb!1473 () Bool)

(declare-fun t!4989 () Bool)

(assert (=> (and b!66325 (= (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) (defaultEntry!2147 (_2!1065 lt!28753))) t!4989) tb!1473))

(declare-fun result!2599 () Bool)

(assert (=> tb!1473 (= result!2599 tp_is_empty!2451)))

(assert (=> b!67296 t!4989))

(declare-fun b_and!4141 () Bool)

(assert (= b_and!4137 (and (=> t!4989 result!2599) b_and!4141)))

(declare-fun tb!1475 () Bool)

(declare-fun t!4991 () Bool)

(assert (=> (and b!66322 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (_2!1065 lt!28753))) t!4991) tb!1475))

(declare-fun result!2601 () Bool)

(assert (= result!2601 result!2599))

(assert (=> b!67296 t!4991))

(declare-fun b_and!4143 () Bool)

(assert (= b_and!4139 (and (=> t!4991 result!2601) b_and!4143)))

(declare-fun m!62071 () Bool)

(assert (=> bm!5640 m!62071))

(declare-fun m!62073 () Bool)

(assert (=> b!67296 m!62073))

(declare-fun m!62075 () Bool)

(assert (=> b!67296 m!62075))

(declare-fun m!62077 () Bool)

(assert (=> b!67296 m!62077))

(declare-fun m!62079 () Bool)

(assert (=> b!67296 m!62079))

(assert (=> b!67296 m!62079))

(declare-fun m!62081 () Bool)

(assert (=> b!67296 m!62081))

(assert (=> b!67296 m!62073))

(assert (=> b!67296 m!62075))

(assert (=> b!67295 m!62079))

(assert (=> b!67295 m!62079))

(declare-fun m!62083 () Bool)

(assert (=> b!67295 m!62083))

(declare-fun m!62085 () Bool)

(assert (=> b!67293 m!62085))

(assert (=> b!67292 m!62079))

(assert (=> b!67292 m!62079))

(declare-fun m!62087 () Bool)

(assert (=> b!67292 m!62087))

(declare-fun m!62089 () Bool)

(assert (=> b!67287 m!62089))

(assert (=> d!14041 m!62065))

(declare-fun m!62091 () Bool)

(assert (=> b!67277 m!62091))

(declare-fun m!62093 () Bool)

(assert (=> bm!5635 m!62093))

(declare-fun m!62095 () Bool)

(assert (=> bm!5638 m!62095))

(declare-fun m!62097 () Bool)

(assert (=> b!67283 m!62097))

(declare-fun m!62099 () Bool)

(assert (=> b!67283 m!62099))

(declare-fun m!62101 () Bool)

(assert (=> b!67283 m!62101))

(declare-fun m!62103 () Bool)

(assert (=> b!67283 m!62103))

(declare-fun m!62105 () Bool)

(assert (=> b!67283 m!62105))

(declare-fun m!62107 () Bool)

(assert (=> b!67283 m!62107))

(declare-fun m!62109 () Bool)

(assert (=> b!67283 m!62109))

(assert (=> b!67283 m!62103))

(declare-fun m!62111 () Bool)

(assert (=> b!67283 m!62111))

(assert (=> b!67283 m!62093))

(declare-fun m!62113 () Bool)

(assert (=> b!67283 m!62113))

(declare-fun m!62115 () Bool)

(assert (=> b!67283 m!62115))

(assert (=> b!67283 m!62107))

(declare-fun m!62117 () Bool)

(assert (=> b!67283 m!62117))

(assert (=> b!67283 m!62097))

(declare-fun m!62119 () Bool)

(assert (=> b!67283 m!62119))

(declare-fun m!62121 () Bool)

(assert (=> b!67283 m!62121))

(assert (=> b!67283 m!62079))

(assert (=> b!67283 m!62119))

(declare-fun m!62123 () Bool)

(assert (=> b!67283 m!62123))

(declare-fun m!62125 () Bool)

(assert (=> b!67283 m!62125))

(assert (=> b!67284 m!62079))

(assert (=> b!67284 m!62079))

(assert (=> b!67284 m!62087))

(declare-fun m!62127 () Bool)

(assert (=> bm!5641 m!62127))

(assert (=> d!13757 d!14041))

(declare-fun b!67298 () Bool)

(declare-fun e!44119 () Option!135)

(declare-fun e!44120 () Option!135)

(assert (=> b!67298 (= e!44119 e!44120)))

(declare-fun c!9374 () Bool)

(assert (=> b!67298 (= c!9374 (and ((_ is Cons!1486) (toList!723 lt!28883)) (not (= (_1!1064 (h!2070 (toList!723 lt!28883))) (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun c!9373 () Bool)

(declare-fun d!14043 () Bool)

(assert (=> d!14043 (= c!9373 (and ((_ is Cons!1486) (toList!723 lt!28883)) (= (_1!1064 (h!2070 (toList!723 lt!28883))) (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14043 (= (getValueByKey!129 (toList!723 lt!28883) (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) e!44119)))

(declare-fun b!67299 () Bool)

(assert (=> b!67299 (= e!44120 (getValueByKey!129 (t!4976 (toList!723 lt!28883)) (_1!1064 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67297 () Bool)

(assert (=> b!67297 (= e!44119 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28883)))))))

(declare-fun b!67300 () Bool)

(assert (=> b!67300 (= e!44120 None!133)))

(assert (= (and d!14043 c!9373) b!67297))

(assert (= (and d!14043 (not c!9373)) b!67298))

(assert (= (and b!67298 c!9374) b!67299))

(assert (= (and b!67298 (not c!9374)) b!67300))

(declare-fun m!62129 () Bool)

(assert (=> b!67299 m!62129))

(assert (=> b!66930 d!14043))

(assert (=> b!67003 d!14035))

(declare-fun d!14045 () Bool)

(declare-fun res!36347 () Bool)

(declare-fun e!44121 () Bool)

(assert (=> d!14045 (=> res!36347 e!44121)))

(assert (=> d!14045 (= res!36347 (and ((_ is Cons!1486) (t!4976 (toList!723 lt!28501))) (= (_1!1064 (h!2070 (t!4976 (toList!723 lt!28501)))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))))

(assert (=> d!14045 (= (containsKey!133 (t!4976 (toList!723 lt!28501)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) e!44121)))

(declare-fun b!67301 () Bool)

(declare-fun e!44122 () Bool)

(assert (=> b!67301 (= e!44121 e!44122)))

(declare-fun res!36348 () Bool)

(assert (=> b!67301 (=> (not res!36348) (not e!44122))))

(assert (=> b!67301 (= res!36348 (and (or (not ((_ is Cons!1486) (t!4976 (toList!723 lt!28501)))) (bvsle (_1!1064 (h!2070 (t!4976 (toList!723 lt!28501)))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))) ((_ is Cons!1486) (t!4976 (toList!723 lt!28501))) (bvslt (_1!1064 (h!2070 (t!4976 (toList!723 lt!28501)))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))))

(declare-fun b!67302 () Bool)

(assert (=> b!67302 (= e!44122 (containsKey!133 (t!4976 (t!4976 (toList!723 lt!28501))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (= (and d!14045 (not res!36347)) b!67301))

(assert (= (and b!67301 res!36348) b!67302))

(assert (=> b!67302 m!60719))

(declare-fun m!62131 () Bool)

(assert (=> b!67302 m!62131))

(assert (=> b!66698 d!14045))

(declare-fun d!14047 () Bool)

(declare-fun lt!29185 () Bool)

(assert (=> d!14047 (= lt!29185 (select (content!70 lt!28971) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))))))

(declare-fun e!44123 () Bool)

(assert (=> d!14047 (= lt!29185 e!44123)))

(declare-fun res!36350 () Bool)

(assert (=> d!14047 (=> (not res!36350) (not e!44123))))

(assert (=> d!14047 (= res!36350 ((_ is Cons!1486) lt!28971))))

(assert (=> d!14047 (= (contains!718 lt!28971 (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))) lt!29185)))

(declare-fun b!67303 () Bool)

(declare-fun e!44124 () Bool)

(assert (=> b!67303 (= e!44123 e!44124)))

(declare-fun res!36349 () Bool)

(assert (=> b!67303 (=> res!36349 e!44124)))

(assert (=> b!67303 (= res!36349 (= (h!2070 lt!28971) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))))))

(declare-fun b!67304 () Bool)

(assert (=> b!67304 (= e!44124 (contains!718 (t!4976 lt!28971) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))))))

(assert (= (and d!14047 res!36350) b!67303))

(assert (= (and b!67303 (not res!36349)) b!67304))

(declare-fun m!62133 () Bool)

(assert (=> d!14047 m!62133))

(declare-fun m!62135 () Bool)

(assert (=> d!14047 m!62135))

(declare-fun m!62137 () Bool)

(assert (=> b!67304 m!62137))

(assert (=> b!67033 d!14047))

(declare-fun d!14049 () Bool)

(assert (=> d!14049 (= (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66831 d!14049))

(declare-fun d!14051 () Bool)

(declare-fun e!44126 () Bool)

(assert (=> d!14051 e!44126))

(declare-fun res!36351 () Bool)

(assert (=> d!14051 (=> res!36351 e!44126)))

(declare-fun lt!29189 () Bool)

(assert (=> d!14051 (= res!36351 (not lt!29189))))

(declare-fun lt!29186 () Bool)

(assert (=> d!14051 (= lt!29189 lt!29186)))

(declare-fun lt!29187 () Unit!1836)

(declare-fun e!44125 () Unit!1836)

(assert (=> d!14051 (= lt!29187 e!44125)))

(declare-fun c!9375 () Bool)

(assert (=> d!14051 (= c!9375 lt!29186)))

(assert (=> d!14051 (= lt!29186 (containsKey!133 (toList!723 lt!28942) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14051 (= (contains!716 lt!28942 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29189)))

(declare-fun b!67305 () Bool)

(declare-fun lt!29188 () Unit!1836)

(assert (=> b!67305 (= e!44125 lt!29188)))

(assert (=> b!67305 (= lt!29188 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28942) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67305 (isDefined!83 (getValueByKey!129 (toList!723 lt!28942) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67306 () Bool)

(declare-fun Unit!1871 () Unit!1836)

(assert (=> b!67306 (= e!44125 Unit!1871)))

(declare-fun b!67307 () Bool)

(assert (=> b!67307 (= e!44126 (isDefined!83 (getValueByKey!129 (toList!723 lt!28942) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14051 c!9375) b!67305))

(assert (= (and d!14051 (not c!9375)) b!67306))

(assert (= (and d!14051 (not res!36351)) b!67307))

(declare-fun m!62139 () Bool)

(assert (=> d!14051 m!62139))

(declare-fun m!62141 () Bool)

(assert (=> b!67305 m!62141))

(declare-fun m!62143 () Bool)

(assert (=> b!67305 m!62143))

(assert (=> b!67305 m!62143))

(declare-fun m!62145 () Bool)

(assert (=> b!67305 m!62145))

(assert (=> b!67307 m!62143))

(assert (=> b!67307 m!62143))

(assert (=> b!67307 m!62145))

(assert (=> bm!5601 d!14051))

(declare-fun d!14053 () Bool)

(declare-fun res!36352 () Bool)

(declare-fun e!44127 () Bool)

(assert (=> d!14053 (=> res!36352 e!44127)))

(assert (=> d!14053 (= res!36352 (and ((_ is Cons!1486) (toList!723 lt!28634)) (= (_1!1064 (h!2070 (toList!723 lt!28634))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14053 (= (containsKey!133 (toList!723 lt!28634) #b0000000000000000000000000000000000000000000000000000000000000000) e!44127)))

(declare-fun b!67308 () Bool)

(declare-fun e!44128 () Bool)

(assert (=> b!67308 (= e!44127 e!44128)))

(declare-fun res!36353 () Bool)

(assert (=> b!67308 (=> (not res!36353) (not e!44128))))

(assert (=> b!67308 (= res!36353 (and (or (not ((_ is Cons!1486) (toList!723 lt!28634))) (bvsle (_1!1064 (h!2070 (toList!723 lt!28634))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1486) (toList!723 lt!28634)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28634))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67309 () Bool)

(assert (=> b!67309 (= e!44128 (containsKey!133 (t!4976 (toList!723 lt!28634)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14053 (not res!36352)) b!67308))

(assert (= (and b!67308 res!36353) b!67309))

(declare-fun m!62147 () Bool)

(assert (=> b!67309 m!62147))

(assert (=> d!13795 d!14053))

(declare-fun d!14055 () Bool)

(declare-fun e!44130 () Bool)

(assert (=> d!14055 e!44130))

(declare-fun res!36354 () Bool)

(assert (=> d!14055 (=> res!36354 e!44130)))

(declare-fun lt!29193 () Bool)

(assert (=> d!14055 (= res!36354 (not lt!29193))))

(declare-fun lt!29190 () Bool)

(assert (=> d!14055 (= lt!29193 lt!29190)))

(declare-fun lt!29191 () Unit!1836)

(declare-fun e!44129 () Unit!1836)

(assert (=> d!14055 (= lt!29191 e!44129)))

(declare-fun c!9376 () Bool)

(assert (=> d!14055 (= c!9376 lt!29190)))

(assert (=> d!14055 (= lt!29190 (containsKey!133 (toList!723 lt!28964) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14055 (= (contains!716 lt!28964 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29193)))

(declare-fun b!67310 () Bool)

(declare-fun lt!29192 () Unit!1836)

(assert (=> b!67310 (= e!44129 lt!29192)))

(assert (=> b!67310 (= lt!29192 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28964) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67310 (isDefined!83 (getValueByKey!129 (toList!723 lt!28964) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67311 () Bool)

(declare-fun Unit!1872 () Unit!1836)

(assert (=> b!67311 (= e!44129 Unit!1872)))

(declare-fun b!67312 () Bool)

(assert (=> b!67312 (= e!44130 (isDefined!83 (getValueByKey!129 (toList!723 lt!28964) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14055 c!9376) b!67310))

(assert (= (and d!14055 (not c!9376)) b!67311))

(assert (= (and d!14055 (not res!36354)) b!67312))

(declare-fun m!62149 () Bool)

(assert (=> d!14055 m!62149))

(declare-fun m!62151 () Bool)

(assert (=> b!67310 m!62151))

(declare-fun m!62153 () Bool)

(assert (=> b!67310 m!62153))

(assert (=> b!67310 m!62153))

(declare-fun m!62155 () Bool)

(assert (=> b!67310 m!62155))

(assert (=> b!67312 m!62153))

(assert (=> b!67312 m!62153))

(assert (=> b!67312 m!62155))

(assert (=> bm!5609 d!14055))

(declare-fun b!67314 () Bool)

(declare-fun e!44131 () Option!135)

(declare-fun e!44132 () Option!135)

(assert (=> b!67314 (= e!44131 e!44132)))

(declare-fun c!9378 () Bool)

(assert (=> b!67314 (= c!9378 (and ((_ is Cons!1486) (toList!723 lt!28824)) (not (= (_1!1064 (h!2070 (toList!723 lt!28824))) (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))))

(declare-fun d!14057 () Bool)

(declare-fun c!9377 () Bool)

(assert (=> d!14057 (= c!9377 (and ((_ is Cons!1486) (toList!723 lt!28824)) (= (_1!1064 (h!2070 (toList!723 lt!28824))) (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(assert (=> d!14057 (= (getValueByKey!129 (toList!723 lt!28824) (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))) e!44131)))

(declare-fun b!67315 () Bool)

(assert (=> b!67315 (= e!44132 (getValueByKey!129 (t!4976 (toList!723 lt!28824)) (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!67313 () Bool)

(assert (=> b!67313 (= e!44131 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28824)))))))

(declare-fun b!67316 () Bool)

(assert (=> b!67316 (= e!44132 None!133)))

(assert (= (and d!14057 c!9377) b!67313))

(assert (= (and d!14057 (not c!9377)) b!67314))

(assert (= (and b!67314 c!9378) b!67315))

(assert (= (and b!67314 (not c!9378)) b!67316))

(declare-fun m!62157 () Bool)

(assert (=> b!67315 m!62157))

(assert (=> b!66842 d!14057))

(assert (=> d!13875 d!14023))

(declare-fun d!14059 () Bool)

(declare-fun e!44134 () Bool)

(assert (=> d!14059 e!44134))

(declare-fun res!36355 () Bool)

(assert (=> d!14059 (=> res!36355 e!44134)))

(declare-fun lt!29197 () Bool)

(assert (=> d!14059 (= res!36355 (not lt!29197))))

(declare-fun lt!29194 () Bool)

(assert (=> d!14059 (= lt!29197 lt!29194)))

(declare-fun lt!29195 () Unit!1836)

(declare-fun e!44133 () Unit!1836)

(assert (=> d!14059 (= lt!29195 e!44133)))

(declare-fun c!9379 () Bool)

(assert (=> d!14059 (= c!9379 lt!29194)))

(assert (=> d!14059 (= lt!29194 (containsKey!133 (toList!723 lt!28824) (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14059 (= (contains!716 lt!28824 (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))) lt!29197)))

(declare-fun b!67317 () Bool)

(declare-fun lt!29196 () Unit!1836)

(assert (=> b!67317 (= e!44133 lt!29196)))

(assert (=> b!67317 (= lt!29196 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28824) (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> b!67317 (isDefined!83 (getValueByKey!129 (toList!723 lt!28824) (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!67318 () Bool)

(declare-fun Unit!1873 () Unit!1836)

(assert (=> b!67318 (= e!44133 Unit!1873)))

(declare-fun b!67319 () Bool)

(assert (=> b!67319 (= e!44134 (isDefined!83 (getValueByKey!129 (toList!723 lt!28824) (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(assert (= (and d!14059 c!9379) b!67317))

(assert (= (and d!14059 (not c!9379)) b!67318))

(assert (= (and d!14059 (not res!36355)) b!67319))

(declare-fun m!62159 () Bool)

(assert (=> d!14059 m!62159))

(declare-fun m!62161 () Bool)

(assert (=> b!67317 m!62161))

(assert (=> b!67317 m!61257))

(assert (=> b!67317 m!61257))

(declare-fun m!62163 () Bool)

(assert (=> b!67317 m!62163))

(assert (=> b!67319 m!61257))

(assert (=> b!67319 m!61257))

(assert (=> b!67319 m!62163))

(assert (=> d!13791 d!14059))

(declare-fun b!67321 () Bool)

(declare-fun e!44135 () Option!135)

(declare-fun e!44136 () Option!135)

(assert (=> b!67321 (= e!44135 e!44136)))

(declare-fun c!9381 () Bool)

(assert (=> b!67321 (= c!9381 (and ((_ is Cons!1486) lt!28826) (not (= (_1!1064 (h!2070 lt!28826)) (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))))

(declare-fun c!9380 () Bool)

(declare-fun d!14061 () Bool)

(assert (=> d!14061 (= c!9380 (and ((_ is Cons!1486) lt!28826) (= (_1!1064 (h!2070 lt!28826)) (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(assert (=> d!14061 (= (getValueByKey!129 lt!28826 (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))) e!44135)))

(declare-fun b!67322 () Bool)

(assert (=> b!67322 (= e!44136 (getValueByKey!129 (t!4976 lt!28826) (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!67320 () Bool)

(assert (=> b!67320 (= e!44135 (Some!134 (_2!1064 (h!2070 lt!28826))))))

(declare-fun b!67323 () Bool)

(assert (=> b!67323 (= e!44136 None!133)))

(assert (= (and d!14061 c!9380) b!67320))

(assert (= (and d!14061 (not c!9380)) b!67321))

(assert (= (and b!67321 c!9381) b!67322))

(assert (= (and b!67321 (not c!9381)) b!67323))

(declare-fun m!62165 () Bool)

(assert (=> b!67322 m!62165))

(assert (=> d!13791 d!14061))

(declare-fun d!14063 () Bool)

(assert (=> d!14063 (= (getValueByKey!129 lt!28826 (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))) (Some!134 (_2!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun lt!29198 () Unit!1836)

(assert (=> d!14063 (= lt!29198 (choose!376 lt!28826 (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) (_2!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun e!44137 () Bool)

(assert (=> d!14063 e!44137))

(declare-fun res!36356 () Bool)

(assert (=> d!14063 (=> (not res!36356) (not e!44137))))

(assert (=> d!14063 (= res!36356 (isStrictlySorted!284 lt!28826))))

(assert (=> d!14063 (= (lemmaContainsTupThenGetReturnValue!48 lt!28826 (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) (_2!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))) lt!29198)))

(declare-fun b!67324 () Bool)

(declare-fun res!36357 () Bool)

(assert (=> b!67324 (=> (not res!36357) (not e!44137))))

(assert (=> b!67324 (= res!36357 (containsKey!133 lt!28826 (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!67325 () Bool)

(assert (=> b!67325 (= e!44137 (contains!718 lt!28826 (tuple2!2109 (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) (_2!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(assert (= (and d!14063 res!36356) b!67324))

(assert (= (and b!67324 res!36357) b!67325))

(assert (=> d!14063 m!61251))

(declare-fun m!62167 () Bool)

(assert (=> d!14063 m!62167))

(declare-fun m!62169 () Bool)

(assert (=> d!14063 m!62169))

(declare-fun m!62171 () Bool)

(assert (=> b!67324 m!62171))

(declare-fun m!62173 () Bool)

(assert (=> b!67325 m!62173))

(assert (=> d!13791 d!14063))

(declare-fun b!67326 () Bool)

(declare-fun e!44139 () List!1490)

(declare-fun call!5646 () List!1490)

(assert (=> b!67326 (= e!44139 call!5646)))

(declare-fun b!67327 () Bool)

(declare-fun e!44138 () List!1490)

(declare-fun call!5645 () List!1490)

(assert (=> b!67327 (= e!44138 call!5645)))

(declare-fun bm!5642 () Bool)

(declare-fun call!5647 () List!1490)

(assert (=> bm!5642 (= call!5645 call!5647)))

(declare-fun bm!5643 () Bool)

(declare-fun e!44142 () List!1490)

(declare-fun c!9383 () Bool)

(assert (=> bm!5643 (= call!5646 ($colon$colon!62 e!44142 (ite c!9383 (h!2070 (toList!723 (ite c!9154 call!5489 (ite c!9156 call!5484 call!5486)))) (tuple2!2109 (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) (_2!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))))

(declare-fun c!9385 () Bool)

(assert (=> bm!5643 (= c!9385 c!9383)))

(declare-fun d!14065 () Bool)

(declare-fun e!44140 () Bool)

(assert (=> d!14065 e!44140))

(declare-fun res!36359 () Bool)

(assert (=> d!14065 (=> (not res!36359) (not e!44140))))

(declare-fun lt!29199 () List!1490)

(assert (=> d!14065 (= res!36359 (isStrictlySorted!284 lt!29199))))

(assert (=> d!14065 (= lt!29199 e!44139)))

(assert (=> d!14065 (= c!9383 (and ((_ is Cons!1486) (toList!723 (ite c!9154 call!5489 (ite c!9156 call!5484 call!5486)))) (bvslt (_1!1064 (h!2070 (toList!723 (ite c!9154 call!5489 (ite c!9156 call!5484 call!5486))))) (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(assert (=> d!14065 (isStrictlySorted!284 (toList!723 (ite c!9154 call!5489 (ite c!9156 call!5484 call!5486))))))

(assert (=> d!14065 (= (insertStrictlySorted!50 (toList!723 (ite c!9154 call!5489 (ite c!9156 call!5484 call!5486))) (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) (_2!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))) lt!29199)))

(declare-fun bm!5644 () Bool)

(assert (=> bm!5644 (= call!5647 call!5646)))

(declare-fun b!67328 () Bool)

(assert (=> b!67328 (= e!44142 (insertStrictlySorted!50 (t!4976 (toList!723 (ite c!9154 call!5489 (ite c!9156 call!5484 call!5486)))) (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) (_2!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun c!9384 () Bool)

(declare-fun b!67329 () Bool)

(assert (=> b!67329 (= c!9384 (and ((_ is Cons!1486) (toList!723 (ite c!9154 call!5489 (ite c!9156 call!5484 call!5486)))) (bvsgt (_1!1064 (h!2070 (toList!723 (ite c!9154 call!5489 (ite c!9156 call!5484 call!5486))))) (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun e!44141 () List!1490)

(assert (=> b!67329 (= e!44141 e!44138)))

(declare-fun b!67330 () Bool)

(assert (=> b!67330 (= e!44141 call!5647)))

(declare-fun b!67331 () Bool)

(declare-fun res!36358 () Bool)

(assert (=> b!67331 (=> (not res!36358) (not e!44140))))

(assert (=> b!67331 (= res!36358 (containsKey!133 lt!29199 (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!67332 () Bool)

(assert (=> b!67332 (= e!44138 call!5645)))

(declare-fun c!9382 () Bool)

(declare-fun b!67333 () Bool)

(assert (=> b!67333 (= e!44142 (ite c!9382 (t!4976 (toList!723 (ite c!9154 call!5489 (ite c!9156 call!5484 call!5486)))) (ite c!9384 (Cons!1486 (h!2070 (toList!723 (ite c!9154 call!5489 (ite c!9156 call!5484 call!5486)))) (t!4976 (toList!723 (ite c!9154 call!5489 (ite c!9156 call!5484 call!5486))))) Nil!1487)))))

(declare-fun b!67334 () Bool)

(assert (=> b!67334 (= e!44140 (contains!718 lt!29199 (tuple2!2109 (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) (_2!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun b!67335 () Bool)

(assert (=> b!67335 (= e!44139 e!44141)))

(assert (=> b!67335 (= c!9382 (and ((_ is Cons!1486) (toList!723 (ite c!9154 call!5489 (ite c!9156 call!5484 call!5486)))) (= (_1!1064 (h!2070 (toList!723 (ite c!9154 call!5489 (ite c!9156 call!5484 call!5486))))) (_1!1064 (ite (or c!9154 c!9156) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(assert (= (and d!14065 c!9383) b!67326))

(assert (= (and d!14065 (not c!9383)) b!67335))

(assert (= (and b!67335 c!9382) b!67330))

(assert (= (and b!67335 (not c!9382)) b!67329))

(assert (= (and b!67329 c!9384) b!67332))

(assert (= (and b!67329 (not c!9384)) b!67327))

(assert (= (or b!67332 b!67327) bm!5642))

(assert (= (or b!67330 bm!5642) bm!5644))

(assert (= (or b!67326 bm!5644) bm!5643))

(assert (= (and bm!5643 c!9385) b!67328))

(assert (= (and bm!5643 (not c!9385)) b!67333))

(assert (= (and d!14065 res!36359) b!67331))

(assert (= (and b!67331 res!36358) b!67334))

(declare-fun m!62175 () Bool)

(assert (=> bm!5643 m!62175))

(declare-fun m!62177 () Bool)

(assert (=> d!14065 m!62177))

(declare-fun m!62179 () Bool)

(assert (=> d!14065 m!62179))

(declare-fun m!62181 () Bool)

(assert (=> b!67331 m!62181))

(declare-fun m!62183 () Bool)

(assert (=> b!67328 m!62183))

(declare-fun m!62185 () Bool)

(assert (=> b!67334 m!62185))

(assert (=> d!13791 d!14065))

(assert (=> d!13837 d!13829))

(assert (=> d!13837 d!13851))

(declare-fun d!14067 () Bool)

(assert (=> d!14067 (= (apply!72 (+!87 lt!28596 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28610) (apply!72 lt!28596 lt!28610))))

(assert (=> d!14067 true))

(declare-fun _$34!783 () Unit!1836)

(assert (=> d!14067 (= (choose!379 lt!28596 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))) lt!28610) _$34!783)))

(declare-fun bs!2876 () Bool)

(assert (= bs!2876 d!14067))

(assert (=> bs!2876 m!60869))

(assert (=> bs!2876 m!60869))

(assert (=> bs!2876 m!60879))

(assert (=> bs!2876 m!60863))

(assert (=> d!13837 d!14067))

(assert (=> d!13837 d!13827))

(declare-fun d!14069 () Bool)

(declare-fun e!44144 () Bool)

(assert (=> d!14069 e!44144))

(declare-fun res!36360 () Bool)

(assert (=> d!14069 (=> res!36360 e!44144)))

(declare-fun lt!29203 () Bool)

(assert (=> d!14069 (= res!36360 (not lt!29203))))

(declare-fun lt!29200 () Bool)

(assert (=> d!14069 (= lt!29203 lt!29200)))

(declare-fun lt!29201 () Unit!1836)

(declare-fun e!44143 () Unit!1836)

(assert (=> d!14069 (= lt!29201 e!44143)))

(declare-fun c!9386 () Bool)

(assert (=> d!14069 (= c!9386 lt!29200)))

(assert (=> d!14069 (= lt!29200 (containsKey!133 (toList!723 lt!28596) lt!28610))))

(assert (=> d!14069 (= (contains!716 lt!28596 lt!28610) lt!29203)))

(declare-fun b!67337 () Bool)

(declare-fun lt!29202 () Unit!1836)

(assert (=> b!67337 (= e!44143 lt!29202)))

(assert (=> b!67337 (= lt!29202 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28596) lt!28610))))

(assert (=> b!67337 (isDefined!83 (getValueByKey!129 (toList!723 lt!28596) lt!28610))))

(declare-fun b!67338 () Bool)

(declare-fun Unit!1874 () Unit!1836)

(assert (=> b!67338 (= e!44143 Unit!1874)))

(declare-fun b!67339 () Bool)

(assert (=> b!67339 (= e!44144 (isDefined!83 (getValueByKey!129 (toList!723 lt!28596) lt!28610)))))

(assert (= (and d!14069 c!9386) b!67337))

(assert (= (and d!14069 (not c!9386)) b!67338))

(assert (= (and d!14069 (not res!36360)) b!67339))

(declare-fun m!62187 () Bool)

(assert (=> d!14069 m!62187))

(declare-fun m!62189 () Bool)

(assert (=> b!67337 m!62189))

(assert (=> b!67337 m!61375))

(assert (=> b!67337 m!61375))

(declare-fun m!62191 () Bool)

(assert (=> b!67337 m!62191))

(assert (=> b!67339 m!61375))

(assert (=> b!67339 m!61375))

(assert (=> b!67339 m!62191))

(assert (=> d!13837 d!14069))

(declare-fun d!14071 () Bool)

(declare-fun lt!29204 () Bool)

(assert (=> d!14071 (= lt!29204 (select (content!70 (toList!723 lt!29108)) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun e!44145 () Bool)

(assert (=> d!14071 (= lt!29204 e!44145)))

(declare-fun res!36362 () Bool)

(assert (=> d!14071 (=> (not res!36362) (not e!44145))))

(assert (=> d!14071 (= res!36362 ((_ is Cons!1486) (toList!723 lt!29108)))))

(assert (=> d!14071 (= (contains!718 (toList!723 lt!29108) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!29204)))

(declare-fun b!67340 () Bool)

(declare-fun e!44146 () Bool)

(assert (=> b!67340 (= e!44145 e!44146)))

(declare-fun res!36361 () Bool)

(assert (=> b!67340 (=> res!36361 e!44146)))

(assert (=> b!67340 (= res!36361 (= (h!2070 (toList!723 lt!29108)) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!67341 () Bool)

(assert (=> b!67341 (= e!44146 (contains!718 (t!4976 (toList!723 lt!29108)) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(assert (= (and d!14071 res!36362) b!67340))

(assert (= (and b!67340 (not res!36361)) b!67341))

(declare-fun m!62193 () Bool)

(assert (=> d!14071 m!62193))

(declare-fun m!62195 () Bool)

(assert (=> d!14071 m!62195))

(declare-fun m!62197 () Bool)

(assert (=> b!67341 m!62197))

(assert (=> b!67157 d!14071))

(assert (=> b!66956 d!13991))

(declare-fun d!14073 () Bool)

(declare-fun e!44148 () Bool)

(assert (=> d!14073 e!44148))

(declare-fun res!36363 () Bool)

(assert (=> d!14073 (=> res!36363 e!44148)))

(declare-fun lt!29208 () Bool)

(assert (=> d!14073 (= res!36363 (not lt!29208))))

(declare-fun lt!29205 () Bool)

(assert (=> d!14073 (= lt!29208 lt!29205)))

(declare-fun lt!29206 () Unit!1836)

(declare-fun e!44147 () Unit!1836)

(assert (=> d!14073 (= lt!29206 e!44147)))

(declare-fun c!9387 () Bool)

(assert (=> d!14073 (= c!9387 lt!29205)))

(assert (=> d!14073 (= lt!29205 (containsKey!133 (toList!723 lt!28822) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14073 (= (contains!716 lt!28822 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29208)))

(declare-fun b!67342 () Bool)

(declare-fun lt!29207 () Unit!1836)

(assert (=> b!67342 (= e!44147 lt!29207)))

(assert (=> b!67342 (= lt!29207 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28822) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67342 (isDefined!83 (getValueByKey!129 (toList!723 lt!28822) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67343 () Bool)

(declare-fun Unit!1875 () Unit!1836)

(assert (=> b!67343 (= e!44147 Unit!1875)))

(declare-fun b!67344 () Bool)

(assert (=> b!67344 (= e!44148 (isDefined!83 (getValueByKey!129 (toList!723 lt!28822) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14073 c!9387) b!67342))

(assert (= (and d!14073 (not c!9387)) b!67343))

(assert (= (and d!14073 (not res!36363)) b!67344))

(declare-fun m!62199 () Bool)

(assert (=> d!14073 m!62199))

(declare-fun m!62201 () Bool)

(assert (=> b!67342 m!62201))

(declare-fun m!62203 () Bool)

(assert (=> b!67342 m!62203))

(assert (=> b!67342 m!62203))

(declare-fun m!62205 () Bool)

(assert (=> b!67342 m!62205))

(assert (=> b!67344 m!62203))

(assert (=> b!67344 m!62203))

(assert (=> b!67344 m!62205))

(assert (=> d!13787 d!14073))

(assert (=> d!13787 d!13719))

(declare-fun d!14075 () Bool)

(declare-fun res!36364 () Bool)

(declare-fun e!44149 () Bool)

(assert (=> d!14075 (=> res!36364 e!44149)))

(assert (=> d!14075 (= res!36364 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633)))) (= (_1!1064 (h!2070 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633))))) lt!28630)))))

(assert (=> d!14075 (= (containsKey!133 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633))) lt!28630) e!44149)))

(declare-fun b!67345 () Bool)

(declare-fun e!44150 () Bool)

(assert (=> b!67345 (= e!44149 e!44150)))

(declare-fun res!36365 () Bool)

(assert (=> b!67345 (=> (not res!36365) (not e!44150))))

(assert (=> b!67345 (= res!36365 (and (or (not ((_ is Cons!1486) (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633))))) (bvsle (_1!1064 (h!2070 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633))))) lt!28630)) ((_ is Cons!1486) (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633)))) (bvslt (_1!1064 (h!2070 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633))))) lt!28630)))))

(declare-fun b!67346 () Bool)

(assert (=> b!67346 (= e!44150 (containsKey!133 (t!4976 (toList!723 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633)))) lt!28630))))

(assert (= (and d!14075 (not res!36364)) b!67345))

(assert (= (and b!67345 res!36365) b!67346))

(declare-fun m!62207 () Bool)

(assert (=> b!67346 m!62207))

(assert (=> d!13805 d!14075))

(declare-fun d!14077 () Bool)

(declare-fun res!36366 () Bool)

(declare-fun e!44151 () Bool)

(assert (=> d!14077 (=> res!36366 e!44151)))

(assert (=> d!14077 (= res!36366 (or ((_ is Nil!1487) lt!28815) ((_ is Nil!1487) (t!4976 lt!28815))))))

(assert (=> d!14077 (= (isStrictlySorted!284 lt!28815) e!44151)))

(declare-fun b!67347 () Bool)

(declare-fun e!44152 () Bool)

(assert (=> b!67347 (= e!44151 e!44152)))

(declare-fun res!36367 () Bool)

(assert (=> b!67347 (=> (not res!36367) (not e!44152))))

(assert (=> b!67347 (= res!36367 (bvslt (_1!1064 (h!2070 lt!28815)) (_1!1064 (h!2070 (t!4976 lt!28815)))))))

(declare-fun b!67348 () Bool)

(assert (=> b!67348 (= e!44152 (isStrictlySorted!284 (t!4976 lt!28815)))))

(assert (= (and d!14077 (not res!36366)) b!67347))

(assert (= (and b!67347 res!36367) b!67348))

(declare-fun m!62209 () Bool)

(assert (=> b!67348 m!62209))

(assert (=> d!13785 d!14077))

(declare-fun d!14079 () Bool)

(declare-fun res!36368 () Bool)

(declare-fun e!44153 () Bool)

(assert (=> d!14079 (=> res!36368 e!44153)))

(assert (=> d!14079 (= res!36368 (or ((_ is Nil!1487) (toList!723 (+!87 lt!28505 lt!28500))) ((_ is Nil!1487) (t!4976 (toList!723 (+!87 lt!28505 lt!28500))))))))

(assert (=> d!14079 (= (isStrictlySorted!284 (toList!723 (+!87 lt!28505 lt!28500))) e!44153)))

(declare-fun b!67349 () Bool)

(declare-fun e!44154 () Bool)

(assert (=> b!67349 (= e!44153 e!44154)))

(declare-fun res!36369 () Bool)

(assert (=> b!67349 (=> (not res!36369) (not e!44154))))

(assert (=> b!67349 (= res!36369 (bvslt (_1!1064 (h!2070 (toList!723 (+!87 lt!28505 lt!28500)))) (_1!1064 (h!2070 (t!4976 (toList!723 (+!87 lt!28505 lt!28500)))))))))

(declare-fun b!67350 () Bool)

(assert (=> b!67350 (= e!44154 (isStrictlySorted!284 (t!4976 (toList!723 (+!87 lt!28505 lt!28500)))))))

(assert (= (and d!14079 (not res!36368)) b!67349))

(assert (= (and b!67349 res!36369) b!67350))

(declare-fun m!62211 () Bool)

(assert (=> b!67350 m!62211))

(assert (=> d!13785 d!14079))

(declare-fun d!14081 () Bool)

(assert (=> d!14081 (= (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66887 d!14081))

(declare-fun b!67351 () Bool)

(declare-fun e!44158 () ListLongMap!1415)

(declare-fun e!44159 () ListLongMap!1415)

(assert (=> b!67351 (= e!44158 e!44159)))

(declare-fun c!9390 () Bool)

(assert (=> b!67351 (= c!9390 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67352 () Bool)

(declare-fun e!44155 () Bool)

(assert (=> b!67352 (= e!44155 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67352 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!67353 () Bool)

(declare-fun lt!29213 () Unit!1836)

(declare-fun lt!29212 () Unit!1836)

(assert (=> b!67353 (= lt!29213 lt!29212)))

(declare-fun lt!29214 () V!2915)

(declare-fun lt!29211 () (_ BitVec 64))

(declare-fun lt!29209 () (_ BitVec 64))

(declare-fun lt!29210 () ListLongMap!1415)

(assert (=> b!67353 (not (contains!716 (+!87 lt!29210 (tuple2!2109 lt!29209 lt!29214)) lt!29211))))

(assert (=> b!67353 (= lt!29212 (addStillNotContains!23 lt!29210 lt!29209 lt!29214 lt!29211))))

(assert (=> b!67353 (= lt!29211 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!67353 (= lt!29214 (get!1127 (select (arr!1835 (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!67353 (= lt!29209 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!5648 () ListLongMap!1415)

(assert (=> b!67353 (= lt!29210 call!5648)))

(assert (=> b!67353 (= e!44159 (+!87 call!5648 (tuple2!2109 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) (get!1127 (select (arr!1835 (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!67354 () Bool)

(declare-fun res!36371 () Bool)

(declare-fun e!44157 () Bool)

(assert (=> b!67354 (=> (not res!36371) (not e!44157))))

(declare-fun lt!29215 () ListLongMap!1415)

(assert (=> b!67354 (= res!36371 (not (contains!716 lt!29215 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!44156 () Bool)

(declare-fun b!67355 () Bool)

(assert (=> b!67355 (= e!44156 (= lt!29215 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite c!9205 (ite c!9204 (extraKeys!2018 newMap!16) lt!28755) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2147 newMap!16))))))

(declare-fun b!67356 () Bool)

(assert (=> b!67356 (= e!44159 call!5648)))

(declare-fun b!67357 () Bool)

(assert (=> b!67357 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (=> b!67357 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16)))))))))

(declare-fun e!44161 () Bool)

(assert (=> b!67357 (= e!44161 (= (apply!72 lt!29215 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1127 (select (arr!1835 (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!14083 () Bool)

(assert (=> d!14083 e!44157))

(declare-fun res!36373 () Bool)

(assert (=> d!14083 (=> (not res!36373) (not e!44157))))

(assert (=> d!14083 (= res!36373 (not (contains!716 lt!29215 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14083 (= lt!29215 e!44158)))

(declare-fun c!9391 () Bool)

(assert (=> d!14083 (= c!9391 (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (=> d!14083 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14083 (= (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite c!9205 (ite c!9204 (extraKeys!2018 newMap!16) lt!28755) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29215)))

(declare-fun bm!5645 () Bool)

(assert (=> bm!5645 (= call!5648 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (ite c!9205 (_values!2130 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite c!9205 (ite c!9204 (extraKeys!2018 newMap!16) lt!28755) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2147 newMap!16)))))

(declare-fun b!67358 () Bool)

(declare-fun e!44160 () Bool)

(assert (=> b!67358 (= e!44160 e!44161)))

(assert (=> b!67358 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun res!36372 () Bool)

(assert (=> b!67358 (= res!36372 (contains!716 lt!29215 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67358 (=> (not res!36372) (not e!44161))))

(declare-fun b!67359 () Bool)

(assert (=> b!67359 (= e!44156 (isEmpty!312 lt!29215))))

(declare-fun b!67360 () Bool)

(assert (=> b!67360 (= e!44160 e!44156)))

(declare-fun c!9389 () Bool)

(assert (=> b!67360 (= c!9389 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun b!67361 () Bool)

(assert (=> b!67361 (= e!44158 (ListLongMap!1416 Nil!1487))))

(declare-fun b!67362 () Bool)

(assert (=> b!67362 (= e!44157 e!44160)))

(declare-fun c!9388 () Bool)

(assert (=> b!67362 (= c!9388 e!44155)))

(declare-fun res!36370 () Bool)

(assert (=> b!67362 (=> (not res!36370) (not e!44155))))

(assert (=> b!67362 (= res!36370 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (= (and d!14083 c!9391) b!67361))

(assert (= (and d!14083 (not c!9391)) b!67351))

(assert (= (and b!67351 c!9390) b!67353))

(assert (= (and b!67351 (not c!9390)) b!67356))

(assert (= (or b!67353 b!67356) bm!5645))

(assert (= (and d!14083 res!36373) b!67354))

(assert (= (and b!67354 res!36371) b!67362))

(assert (= (and b!67362 res!36370) b!67352))

(assert (= (and b!67362 c!9388) b!67358))

(assert (= (and b!67362 (not c!9388)) b!67360))

(assert (= (and b!67358 res!36372) b!67357))

(assert (= (and b!67360 c!9389) b!67355))

(assert (= (and b!67360 (not c!9389)) b!67359))

(declare-fun b_lambda!3017 () Bool)

(assert (=> (not b_lambda!3017) (not b!67353)))

(assert (=> b!67353 t!4984))

(declare-fun b_and!4145 () Bool)

(assert (= b_and!4141 (and (=> t!4984 result!2595) b_and!4145)))

(assert (=> b!67353 t!4986))

(declare-fun b_and!4147 () Bool)

(assert (= b_and!4143 (and (=> t!4986 result!2597) b_and!4147)))

(declare-fun b_lambda!3019 () Bool)

(assert (=> (not b_lambda!3019) (not b!67357)))

(assert (=> b!67357 t!4984))

(declare-fun b_and!4149 () Bool)

(assert (= b_and!4145 (and (=> t!4984 result!2595) b_and!4149)))

(assert (=> b!67357 t!4986))

(declare-fun b_and!4151 () Bool)

(assert (= b_and!4147 (and (=> t!4986 result!2597) b_and!4151)))

(assert (=> b!67352 m!61079))

(assert (=> b!67352 m!61079))

(assert (=> b!67352 m!61081))

(declare-fun m!62213 () Bool)

(assert (=> b!67354 m!62213))

(assert (=> b!67358 m!61079))

(assert (=> b!67358 m!61079))

(declare-fun m!62215 () Bool)

(assert (=> b!67358 m!62215))

(assert (=> b!67357 m!61575))

(assert (=> b!67357 m!61079))

(assert (=> b!67357 m!61575))

(assert (=> b!67357 m!61115))

(assert (=> b!67357 m!61577))

(assert (=> b!67357 m!61115))

(assert (=> b!67357 m!61079))

(declare-fun m!62217 () Bool)

(assert (=> b!67357 m!62217))

(declare-fun m!62219 () Bool)

(assert (=> b!67359 m!62219))

(declare-fun m!62221 () Bool)

(assert (=> b!67355 m!62221))

(assert (=> b!67353 m!61575))

(declare-fun m!62223 () Bool)

(assert (=> b!67353 m!62223))

(declare-fun m!62225 () Bool)

(assert (=> b!67353 m!62225))

(assert (=> b!67353 m!61079))

(declare-fun m!62227 () Bool)

(assert (=> b!67353 m!62227))

(declare-fun m!62229 () Bool)

(assert (=> b!67353 m!62229))

(assert (=> b!67353 m!61575))

(assert (=> b!67353 m!61115))

(assert (=> b!67353 m!61577))

(assert (=> b!67353 m!62227))

(assert (=> b!67353 m!61115))

(declare-fun m!62231 () Bool)

(assert (=> d!14083 m!62231))

(assert (=> d!14083 m!61069))

(assert (=> b!67351 m!61079))

(assert (=> b!67351 m!61079))

(assert (=> b!67351 m!61081))

(assert (=> bm!5645 m!62221))

(assert (=> bm!5603 d!14083))

(declare-fun d!14085 () Bool)

(declare-fun res!36374 () Bool)

(declare-fun e!44162 () Bool)

(assert (=> d!14085 (=> res!36374 e!44162)))

(assert (=> d!14085 (= res!36374 (and ((_ is Cons!1486) lt!28809) (= (_1!1064 (h!2070 lt!28809)) (_1!1064 lt!28500))))))

(assert (=> d!14085 (= (containsKey!133 lt!28809 (_1!1064 lt!28500)) e!44162)))

(declare-fun b!67363 () Bool)

(declare-fun e!44163 () Bool)

(assert (=> b!67363 (= e!44162 e!44163)))

(declare-fun res!36375 () Bool)

(assert (=> b!67363 (=> (not res!36375) (not e!44163))))

(assert (=> b!67363 (= res!36375 (and (or (not ((_ is Cons!1486) lt!28809)) (bvsle (_1!1064 (h!2070 lt!28809)) (_1!1064 lt!28500))) ((_ is Cons!1486) lt!28809) (bvslt (_1!1064 (h!2070 lt!28809)) (_1!1064 lt!28500))))))

(declare-fun b!67364 () Bool)

(assert (=> b!67364 (= e!44163 (containsKey!133 (t!4976 lt!28809) (_1!1064 lt!28500)))))

(assert (= (and d!14085 (not res!36374)) b!67363))

(assert (= (and b!67363 res!36375) b!67364))

(declare-fun m!62233 () Bool)

(assert (=> b!67364 m!62233))

(assert (=> b!66800 d!14085))

(declare-fun d!14087 () Bool)

(assert (=> d!14087 (isDefined!83 (getValueByKey!129 (toList!723 lt!28612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!29216 () Unit!1836)

(assert (=> d!14087 (= lt!29216 (choose!378 (toList!723 lt!28612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44164 () Bool)

(assert (=> d!14087 e!44164))

(declare-fun res!36376 () Bool)

(assert (=> d!14087 (=> (not res!36376) (not e!44164))))

(assert (=> d!14087 (= res!36376 (isStrictlySorted!284 (toList!723 lt!28612)))))

(assert (=> d!14087 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28612) #b1000000000000000000000000000000000000000000000000000000000000000) lt!29216)))

(declare-fun b!67365 () Bool)

(assert (=> b!67365 (= e!44164 (containsKey!133 (toList!723 lt!28612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14087 res!36376) b!67365))

(assert (=> d!14087 m!61065))

(assert (=> d!14087 m!61065))

(assert (=> d!14087 m!61067))

(declare-fun m!62235 () Bool)

(assert (=> d!14087 m!62235))

(declare-fun m!62237 () Bool)

(assert (=> d!14087 m!62237))

(assert (=> b!67365 m!61061))

(assert (=> b!66699 d!14087))

(declare-fun d!14089 () Bool)

(assert (=> d!14089 (= (isDefined!83 (getValueByKey!129 (toList!723 lt!28612) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!314 (getValueByKey!129 (toList!723 lt!28612) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2877 () Bool)

(assert (= bs!2877 d!14089))

(assert (=> bs!2877 m!61065))

(declare-fun m!62239 () Bool)

(assert (=> bs!2877 m!62239))

(assert (=> b!66699 d!14089))

(declare-fun b!67367 () Bool)

(declare-fun e!44165 () Option!135)

(declare-fun e!44166 () Option!135)

(assert (=> b!67367 (= e!44165 e!44166)))

(declare-fun c!9393 () Bool)

(assert (=> b!67367 (= c!9393 (and ((_ is Cons!1486) (toList!723 lt!28612)) (not (= (_1!1064 (h!2070 (toList!723 lt!28612))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!14091 () Bool)

(declare-fun c!9392 () Bool)

(assert (=> d!14091 (= c!9392 (and ((_ is Cons!1486) (toList!723 lt!28612)) (= (_1!1064 (h!2070 (toList!723 lt!28612))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14091 (= (getValueByKey!129 (toList!723 lt!28612) #b1000000000000000000000000000000000000000000000000000000000000000) e!44165)))

(declare-fun b!67368 () Bool)

(assert (=> b!67368 (= e!44166 (getValueByKey!129 (t!4976 (toList!723 lt!28612)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67366 () Bool)

(assert (=> b!67366 (= e!44165 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28612)))))))

(declare-fun b!67369 () Bool)

(assert (=> b!67369 (= e!44166 None!133)))

(assert (= (and d!14091 c!9392) b!67366))

(assert (= (and d!14091 (not c!9392)) b!67367))

(assert (= (and b!67367 c!9393) b!67368))

(assert (= (and b!67367 (not c!9393)) b!67369))

(declare-fun m!62241 () Bool)

(assert (=> b!67368 m!62241))

(assert (=> b!66699 d!14091))

(declare-fun d!14093 () Bool)

(declare-fun lt!29217 () Bool)

(assert (=> d!14093 (= lt!29217 (select (content!70 (t!4976 (toList!723 lt!28652))) lt!28503))))

(declare-fun e!44167 () Bool)

(assert (=> d!14093 (= lt!29217 e!44167)))

(declare-fun res!36378 () Bool)

(assert (=> d!14093 (=> (not res!36378) (not e!44167))))

(assert (=> d!14093 (= res!36378 ((_ is Cons!1486) (t!4976 (toList!723 lt!28652))))))

(assert (=> d!14093 (= (contains!718 (t!4976 (toList!723 lt!28652)) lt!28503) lt!29217)))

(declare-fun b!67370 () Bool)

(declare-fun e!44168 () Bool)

(assert (=> b!67370 (= e!44167 e!44168)))

(declare-fun res!36377 () Bool)

(assert (=> b!67370 (=> res!36377 e!44168)))

(assert (=> b!67370 (= res!36377 (= (h!2070 (t!4976 (toList!723 lt!28652))) lt!28503))))

(declare-fun b!67371 () Bool)

(assert (=> b!67371 (= e!44168 (contains!718 (t!4976 (t!4976 (toList!723 lt!28652))) lt!28503))))

(assert (= (and d!14093 res!36378) b!67370))

(assert (= (and b!67370 (not res!36377)) b!67371))

(assert (=> d!14093 m!61987))

(declare-fun m!62243 () Bool)

(assert (=> d!14093 m!62243))

(declare-fun m!62245 () Bool)

(assert (=> b!67371 m!62245))

(assert (=> b!67155 d!14093))

(declare-fun d!14095 () Bool)

(assert (=> d!14095 (= (inRange!0 (ite c!9335 (index!3101 lt!29056) (ite c!9332 (index!3100 lt!29067) (index!3103 lt!29067))) (mask!6082 newMap!16)) (and (bvsge (ite c!9335 (index!3101 lt!29056) (ite c!9332 (index!3100 lt!29067) (index!3103 lt!29067))) #b00000000000000000000000000000000) (bvslt (ite c!9335 (index!3101 lt!29056) (ite c!9332 (index!3100 lt!29067) (index!3103 lt!29067))) (bvadd (mask!6082 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5629 d!14095))

(declare-fun d!14097 () Bool)

(assert (=> d!14097 (= (get!1129 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66866 d!14097))

(declare-fun d!14099 () Bool)

(assert (=> d!14099 (= (get!1130 (getValueByKey!129 (toList!723 lt!28612) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2483 (getValueByKey!129 (toList!723 lt!28612) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!13869 d!14099))

(assert (=> d!13869 d!14019))

(declare-fun d!14101 () Bool)

(assert (=> d!14101 (= (apply!72 (+!87 lt!28960 (tuple2!2109 lt!28955 (zeroValue!2055 newMap!16))) lt!28957) (apply!72 lt!28960 lt!28957))))

(declare-fun lt!29218 () Unit!1836)

(assert (=> d!14101 (= lt!29218 (choose!379 lt!28960 lt!28955 (zeroValue!2055 newMap!16) lt!28957))))

(declare-fun e!44169 () Bool)

(assert (=> d!14101 e!44169))

(declare-fun res!36379 () Bool)

(assert (=> d!14101 (=> (not res!36379) (not e!44169))))

(assert (=> d!14101 (= res!36379 (contains!716 lt!28960 lt!28957))))

(assert (=> d!14101 (= (addApplyDifferent!48 lt!28960 lt!28955 (zeroValue!2055 newMap!16) lt!28957) lt!29218)))

(declare-fun b!67372 () Bool)

(assert (=> b!67372 (= e!44169 (not (= lt!28957 lt!28955)))))

(assert (= (and d!14101 res!36379) b!67372))

(assert (=> d!14101 m!61619))

(assert (=> d!14101 m!61593))

(declare-fun m!62247 () Bool)

(assert (=> d!14101 m!62247))

(declare-fun m!62249 () Bool)

(assert (=> d!14101 m!62249))

(assert (=> d!14101 m!61593))

(assert (=> d!14101 m!61595))

(assert (=> b!67002 d!14101))

(declare-fun d!14103 () Bool)

(assert (=> d!14103 (= (apply!72 lt!28960 lt!28957) (get!1130 (getValueByKey!129 (toList!723 lt!28960) lt!28957)))))

(declare-fun bs!2878 () Bool)

(assert (= bs!2878 d!14103))

(declare-fun m!62251 () Bool)

(assert (=> bs!2878 m!62251))

(assert (=> bs!2878 m!62251))

(declare-fun m!62253 () Bool)

(assert (=> bs!2878 m!62253))

(assert (=> b!67002 d!14103))

(declare-fun d!14105 () Bool)

(declare-fun e!44170 () Bool)

(assert (=> d!14105 e!44170))

(declare-fun res!36381 () Bool)

(assert (=> d!14105 (=> (not res!36381) (not e!44170))))

(declare-fun lt!29220 () ListLongMap!1415)

(assert (=> d!14105 (= res!36381 (contains!716 lt!29220 (_1!1064 (tuple2!2109 lt!28953 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))))))

(declare-fun lt!29222 () List!1490)

(assert (=> d!14105 (= lt!29220 (ListLongMap!1416 lt!29222))))

(declare-fun lt!29221 () Unit!1836)

(declare-fun lt!29219 () Unit!1836)

(assert (=> d!14105 (= lt!29221 lt!29219)))

(assert (=> d!14105 (= (getValueByKey!129 lt!29222 (_1!1064 (tuple2!2109 lt!28953 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))) (Some!134 (_2!1064 (tuple2!2109 lt!28953 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))))))

(assert (=> d!14105 (= lt!29219 (lemmaContainsTupThenGetReturnValue!48 lt!29222 (_1!1064 (tuple2!2109 lt!28953 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))) (_2!1064 (tuple2!2109 lt!28953 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))))))

(assert (=> d!14105 (= lt!29222 (insertStrictlySorted!50 (toList!723 lt!28948) (_1!1064 (tuple2!2109 lt!28953 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))) (_2!1064 (tuple2!2109 lt!28953 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))))))

(assert (=> d!14105 (= (+!87 lt!28948 (tuple2!2109 lt!28953 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))) lt!29220)))

(declare-fun b!67373 () Bool)

(declare-fun res!36380 () Bool)

(assert (=> b!67373 (=> (not res!36380) (not e!44170))))

(assert (=> b!67373 (= res!36380 (= (getValueByKey!129 (toList!723 lt!29220) (_1!1064 (tuple2!2109 lt!28953 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))) (Some!134 (_2!1064 (tuple2!2109 lt!28953 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))))))))

(declare-fun b!67374 () Bool)

(assert (=> b!67374 (= e!44170 (contains!718 (toList!723 lt!29220) (tuple2!2109 lt!28953 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))))))

(assert (= (and d!14105 res!36381) b!67373))

(assert (= (and b!67373 res!36380) b!67374))

(declare-fun m!62255 () Bool)

(assert (=> d!14105 m!62255))

(declare-fun m!62257 () Bool)

(assert (=> d!14105 m!62257))

(declare-fun m!62259 () Bool)

(assert (=> d!14105 m!62259))

(declare-fun m!62261 () Bool)

(assert (=> d!14105 m!62261))

(declare-fun m!62263 () Bool)

(assert (=> b!67373 m!62263))

(declare-fun m!62265 () Bool)

(assert (=> b!67374 m!62265))

(assert (=> b!67002 d!14105))

(declare-fun d!14107 () Bool)

(assert (=> d!14107 (= (apply!72 (+!87 lt!28948 (tuple2!2109 lt!28953 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))) lt!28962) (get!1130 (getValueByKey!129 (toList!723 (+!87 lt!28948 (tuple2!2109 lt!28953 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))) lt!28962)))))

(declare-fun bs!2879 () Bool)

(assert (= bs!2879 d!14107))

(declare-fun m!62267 () Bool)

(assert (=> bs!2879 m!62267))

(assert (=> bs!2879 m!62267))

(declare-fun m!62269 () Bool)

(assert (=> bs!2879 m!62269))

(assert (=> b!67002 d!14107))

(assert (=> b!67002 d!14083))

(declare-fun d!14109 () Bool)

(declare-fun e!44171 () Bool)

(assert (=> d!14109 e!44171))

(declare-fun res!36383 () Bool)

(assert (=> d!14109 (=> (not res!36383) (not e!44171))))

(declare-fun lt!29224 () ListLongMap!1415)

(assert (=> d!14109 (= res!36383 (contains!716 lt!29224 (_1!1064 (tuple2!2109 lt!28958 (zeroValue!2055 newMap!16)))))))

(declare-fun lt!29226 () List!1490)

(assert (=> d!14109 (= lt!29224 (ListLongMap!1416 lt!29226))))

(declare-fun lt!29225 () Unit!1836)

(declare-fun lt!29223 () Unit!1836)

(assert (=> d!14109 (= lt!29225 lt!29223)))

(assert (=> d!14109 (= (getValueByKey!129 lt!29226 (_1!1064 (tuple2!2109 lt!28958 (zeroValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 lt!28958 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14109 (= lt!29223 (lemmaContainsTupThenGetReturnValue!48 lt!29226 (_1!1064 (tuple2!2109 lt!28958 (zeroValue!2055 newMap!16))) (_2!1064 (tuple2!2109 lt!28958 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14109 (= lt!29226 (insertStrictlySorted!50 (toList!723 lt!28949) (_1!1064 (tuple2!2109 lt!28958 (zeroValue!2055 newMap!16))) (_2!1064 (tuple2!2109 lt!28958 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14109 (= (+!87 lt!28949 (tuple2!2109 lt!28958 (zeroValue!2055 newMap!16))) lt!29224)))

(declare-fun b!67375 () Bool)

(declare-fun res!36382 () Bool)

(assert (=> b!67375 (=> (not res!36382) (not e!44171))))

(assert (=> b!67375 (= res!36382 (= (getValueByKey!129 (toList!723 lt!29224) (_1!1064 (tuple2!2109 lt!28958 (zeroValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 lt!28958 (zeroValue!2055 newMap!16))))))))

(declare-fun b!67376 () Bool)

(assert (=> b!67376 (= e!44171 (contains!718 (toList!723 lt!29224) (tuple2!2109 lt!28958 (zeroValue!2055 newMap!16))))))

(assert (= (and d!14109 res!36383) b!67375))

(assert (= (and b!67375 res!36382) b!67376))

(declare-fun m!62271 () Bool)

(assert (=> d!14109 m!62271))

(declare-fun m!62273 () Bool)

(assert (=> d!14109 m!62273))

(declare-fun m!62275 () Bool)

(assert (=> d!14109 m!62275))

(declare-fun m!62277 () Bool)

(assert (=> d!14109 m!62277))

(declare-fun m!62279 () Bool)

(assert (=> b!67375 m!62279))

(declare-fun m!62281 () Bool)

(assert (=> b!67376 m!62281))

(assert (=> b!67002 d!14109))

(declare-fun d!14111 () Bool)

(assert (=> d!14111 (= (apply!72 (+!87 lt!28960 (tuple2!2109 lt!28955 (zeroValue!2055 newMap!16))) lt!28957) (get!1130 (getValueByKey!129 (toList!723 (+!87 lt!28960 (tuple2!2109 lt!28955 (zeroValue!2055 newMap!16)))) lt!28957)))))

(declare-fun bs!2880 () Bool)

(assert (= bs!2880 d!14111))

(declare-fun m!62283 () Bool)

(assert (=> bs!2880 m!62283))

(assert (=> bs!2880 m!62283))

(declare-fun m!62285 () Bool)

(assert (=> bs!2880 m!62285))

(assert (=> b!67002 d!14111))

(declare-fun d!14113 () Bool)

(assert (=> d!14113 (= (apply!72 lt!28948 lt!28962) (get!1130 (getValueByKey!129 (toList!723 lt!28948) lt!28962)))))

(declare-fun bs!2881 () Bool)

(assert (= bs!2881 d!14113))

(declare-fun m!62287 () Bool)

(assert (=> bs!2881 m!62287))

(assert (=> bs!2881 m!62287))

(declare-fun m!62289 () Bool)

(assert (=> bs!2881 m!62289))

(assert (=> b!67002 d!14113))

(declare-fun d!14115 () Bool)

(assert (=> d!14115 (contains!716 (+!87 lt!28949 (tuple2!2109 lt!28958 (zeroValue!2055 newMap!16))) lt!28952)))

(declare-fun lt!29227 () Unit!1836)

(assert (=> d!14115 (= lt!29227 (choose!380 lt!28949 lt!28958 (zeroValue!2055 newMap!16) lt!28952))))

(assert (=> d!14115 (contains!716 lt!28949 lt!28952)))

(assert (=> d!14115 (= (addStillContains!48 lt!28949 lt!28958 (zeroValue!2055 newMap!16) lt!28952) lt!29227)))

(declare-fun bs!2882 () Bool)

(assert (= bs!2882 d!14115))

(assert (=> bs!2882 m!61599))

(assert (=> bs!2882 m!61599))

(assert (=> bs!2882 m!61601))

(declare-fun m!62291 () Bool)

(assert (=> bs!2882 m!62291))

(declare-fun m!62293 () Bool)

(assert (=> bs!2882 m!62293))

(assert (=> b!67002 d!14115))

(declare-fun d!14117 () Bool)

(declare-fun e!44172 () Bool)

(assert (=> d!14117 e!44172))

(declare-fun res!36385 () Bool)

(assert (=> d!14117 (=> (not res!36385) (not e!44172))))

(declare-fun lt!29229 () ListLongMap!1415)

(assert (=> d!14117 (= res!36385 (contains!716 lt!29229 (_1!1064 (tuple2!2109 lt!28955 (zeroValue!2055 newMap!16)))))))

(declare-fun lt!29231 () List!1490)

(assert (=> d!14117 (= lt!29229 (ListLongMap!1416 lt!29231))))

(declare-fun lt!29230 () Unit!1836)

(declare-fun lt!29228 () Unit!1836)

(assert (=> d!14117 (= lt!29230 lt!29228)))

(assert (=> d!14117 (= (getValueByKey!129 lt!29231 (_1!1064 (tuple2!2109 lt!28955 (zeroValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 lt!28955 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14117 (= lt!29228 (lemmaContainsTupThenGetReturnValue!48 lt!29231 (_1!1064 (tuple2!2109 lt!28955 (zeroValue!2055 newMap!16))) (_2!1064 (tuple2!2109 lt!28955 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14117 (= lt!29231 (insertStrictlySorted!50 (toList!723 lt!28960) (_1!1064 (tuple2!2109 lt!28955 (zeroValue!2055 newMap!16))) (_2!1064 (tuple2!2109 lt!28955 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14117 (= (+!87 lt!28960 (tuple2!2109 lt!28955 (zeroValue!2055 newMap!16))) lt!29229)))

(declare-fun b!67377 () Bool)

(declare-fun res!36384 () Bool)

(assert (=> b!67377 (=> (not res!36384) (not e!44172))))

(assert (=> b!67377 (= res!36384 (= (getValueByKey!129 (toList!723 lt!29229) (_1!1064 (tuple2!2109 lt!28955 (zeroValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 lt!28955 (zeroValue!2055 newMap!16))))))))

(declare-fun b!67378 () Bool)

(assert (=> b!67378 (= e!44172 (contains!718 (toList!723 lt!29229) (tuple2!2109 lt!28955 (zeroValue!2055 newMap!16))))))

(assert (= (and d!14117 res!36385) b!67377))

(assert (= (and b!67377 res!36384) b!67378))

(declare-fun m!62295 () Bool)

(assert (=> d!14117 m!62295))

(declare-fun m!62297 () Bool)

(assert (=> d!14117 m!62297))

(declare-fun m!62299 () Bool)

(assert (=> d!14117 m!62299))

(declare-fun m!62301 () Bool)

(assert (=> d!14117 m!62301))

(declare-fun m!62303 () Bool)

(assert (=> b!67377 m!62303))

(declare-fun m!62305 () Bool)

(assert (=> b!67378 m!62305))

(assert (=> b!67002 d!14117))

(declare-fun d!14119 () Bool)

(assert (=> d!14119 (= (apply!72 (+!87 lt!28948 (tuple2!2109 lt!28953 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))) lt!28962) (apply!72 lt!28948 lt!28962))))

(declare-fun lt!29232 () Unit!1836)

(assert (=> d!14119 (= lt!29232 (choose!379 lt!28948 lt!28953 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)) lt!28962))))

(declare-fun e!44173 () Bool)

(assert (=> d!14119 e!44173))

(declare-fun res!36386 () Bool)

(assert (=> d!14119 (=> (not res!36386) (not e!44173))))

(assert (=> d!14119 (= res!36386 (contains!716 lt!28948 lt!28962))))

(assert (=> d!14119 (= (addApplyDifferent!48 lt!28948 lt!28953 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)) lt!28962) lt!29232)))

(declare-fun b!67379 () Bool)

(assert (=> b!67379 (= e!44173 (not (= lt!28962 lt!28953)))))

(assert (= (and d!14119 res!36386) b!67379))

(assert (=> d!14119 m!61597))

(assert (=> d!14119 m!61603))

(declare-fun m!62307 () Bool)

(assert (=> d!14119 m!62307))

(declare-fun m!62309 () Bool)

(assert (=> d!14119 m!62309))

(assert (=> d!14119 m!61603))

(assert (=> d!14119 m!61613))

(assert (=> b!67002 d!14119))

(declare-fun d!14121 () Bool)

(declare-fun e!44174 () Bool)

(assert (=> d!14121 e!44174))

(declare-fun res!36388 () Bool)

(assert (=> d!14121 (=> (not res!36388) (not e!44174))))

(declare-fun lt!29234 () ListLongMap!1415)

(assert (=> d!14121 (= res!36388 (contains!716 lt!29234 (_1!1064 (tuple2!2109 lt!28954 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))))))

(declare-fun lt!29236 () List!1490)

(assert (=> d!14121 (= lt!29234 (ListLongMap!1416 lt!29236))))

(declare-fun lt!29235 () Unit!1836)

(declare-fun lt!29233 () Unit!1836)

(assert (=> d!14121 (= lt!29235 lt!29233)))

(assert (=> d!14121 (= (getValueByKey!129 lt!29236 (_1!1064 (tuple2!2109 lt!28954 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))) (Some!134 (_2!1064 (tuple2!2109 lt!28954 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))))))

(assert (=> d!14121 (= lt!29233 (lemmaContainsTupThenGetReturnValue!48 lt!29236 (_1!1064 (tuple2!2109 lt!28954 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))) (_2!1064 (tuple2!2109 lt!28954 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))))))

(assert (=> d!14121 (= lt!29236 (insertStrictlySorted!50 (toList!723 lt!28963) (_1!1064 (tuple2!2109 lt!28954 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))) (_2!1064 (tuple2!2109 lt!28954 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))))))

(assert (=> d!14121 (= (+!87 lt!28963 (tuple2!2109 lt!28954 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))) lt!29234)))

(declare-fun b!67380 () Bool)

(declare-fun res!36387 () Bool)

(assert (=> b!67380 (=> (not res!36387) (not e!44174))))

(assert (=> b!67380 (= res!36387 (= (getValueByKey!129 (toList!723 lt!29234) (_1!1064 (tuple2!2109 lt!28954 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))) (Some!134 (_2!1064 (tuple2!2109 lt!28954 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))))))))

(declare-fun b!67381 () Bool)

(assert (=> b!67381 (= e!44174 (contains!718 (toList!723 lt!29234) (tuple2!2109 lt!28954 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))))))

(assert (= (and d!14121 res!36388) b!67380))

(assert (= (and b!67380 res!36387) b!67381))

(declare-fun m!62311 () Bool)

(assert (=> d!14121 m!62311))

(declare-fun m!62313 () Bool)

(assert (=> d!14121 m!62313))

(declare-fun m!62315 () Bool)

(assert (=> d!14121 m!62315))

(declare-fun m!62317 () Bool)

(assert (=> d!14121 m!62317))

(declare-fun m!62319 () Bool)

(assert (=> b!67380 m!62319))

(declare-fun m!62321 () Bool)

(assert (=> b!67381 m!62321))

(assert (=> b!67002 d!14121))

(declare-fun d!14123 () Bool)

(assert (=> d!14123 (= (apply!72 (+!87 lt!28963 (tuple2!2109 lt!28954 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))) lt!28950) (get!1130 (getValueByKey!129 (toList!723 (+!87 lt!28963 (tuple2!2109 lt!28954 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))) lt!28950)))))

(declare-fun bs!2883 () Bool)

(assert (= bs!2883 d!14123))

(declare-fun m!62323 () Bool)

(assert (=> bs!2883 m!62323))

(assert (=> bs!2883 m!62323))

(declare-fun m!62325 () Bool)

(assert (=> bs!2883 m!62325))

(assert (=> b!67002 d!14123))

(declare-fun d!14125 () Bool)

(assert (=> d!14125 (= (apply!72 (+!87 lt!28963 (tuple2!2109 lt!28954 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))) lt!28950) (apply!72 lt!28963 lt!28950))))

(declare-fun lt!29237 () Unit!1836)

(assert (=> d!14125 (= lt!29237 (choose!379 lt!28963 lt!28954 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)) lt!28950))))

(declare-fun e!44175 () Bool)

(assert (=> d!14125 e!44175))

(declare-fun res!36389 () Bool)

(assert (=> d!14125 (=> (not res!36389) (not e!44175))))

(assert (=> d!14125 (= res!36389 (contains!716 lt!28963 lt!28950))))

(assert (=> d!14125 (= (addApplyDifferent!48 lt!28963 lt!28954 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)) lt!28950) lt!29237)))

(declare-fun b!67382 () Bool)

(assert (=> b!67382 (= e!44175 (not (= lt!28950 lt!28954)))))

(assert (= (and d!14125 res!36389) b!67382))

(assert (=> d!14125 m!61605))

(assert (=> d!14125 m!61615))

(declare-fun m!62327 () Bool)

(assert (=> d!14125 m!62327))

(declare-fun m!62329 () Bool)

(assert (=> d!14125 m!62329))

(assert (=> d!14125 m!61615))

(assert (=> d!14125 m!61617))

(assert (=> b!67002 d!14125))

(declare-fun d!14127 () Bool)

(declare-fun e!44177 () Bool)

(assert (=> d!14127 e!44177))

(declare-fun res!36390 () Bool)

(assert (=> d!14127 (=> res!36390 e!44177)))

(declare-fun lt!29241 () Bool)

(assert (=> d!14127 (= res!36390 (not lt!29241))))

(declare-fun lt!29238 () Bool)

(assert (=> d!14127 (= lt!29241 lt!29238)))

(declare-fun lt!29239 () Unit!1836)

(declare-fun e!44176 () Unit!1836)

(assert (=> d!14127 (= lt!29239 e!44176)))

(declare-fun c!9394 () Bool)

(assert (=> d!14127 (= c!9394 lt!29238)))

(assert (=> d!14127 (= lt!29238 (containsKey!133 (toList!723 (+!87 lt!28949 (tuple2!2109 lt!28958 (zeroValue!2055 newMap!16)))) lt!28952))))

(assert (=> d!14127 (= (contains!716 (+!87 lt!28949 (tuple2!2109 lt!28958 (zeroValue!2055 newMap!16))) lt!28952) lt!29241)))

(declare-fun b!67383 () Bool)

(declare-fun lt!29240 () Unit!1836)

(assert (=> b!67383 (= e!44176 lt!29240)))

(assert (=> b!67383 (= lt!29240 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 (+!87 lt!28949 (tuple2!2109 lt!28958 (zeroValue!2055 newMap!16)))) lt!28952))))

(assert (=> b!67383 (isDefined!83 (getValueByKey!129 (toList!723 (+!87 lt!28949 (tuple2!2109 lt!28958 (zeroValue!2055 newMap!16)))) lt!28952))))

(declare-fun b!67384 () Bool)

(declare-fun Unit!1876 () Unit!1836)

(assert (=> b!67384 (= e!44176 Unit!1876)))

(declare-fun b!67385 () Bool)

(assert (=> b!67385 (= e!44177 (isDefined!83 (getValueByKey!129 (toList!723 (+!87 lt!28949 (tuple2!2109 lt!28958 (zeroValue!2055 newMap!16)))) lt!28952)))))

(assert (= (and d!14127 c!9394) b!67383))

(assert (= (and d!14127 (not c!9394)) b!67384))

(assert (= (and d!14127 (not res!36390)) b!67385))

(declare-fun m!62331 () Bool)

(assert (=> d!14127 m!62331))

(declare-fun m!62333 () Bool)

(assert (=> b!67383 m!62333))

(declare-fun m!62335 () Bool)

(assert (=> b!67383 m!62335))

(assert (=> b!67383 m!62335))

(declare-fun m!62337 () Bool)

(assert (=> b!67383 m!62337))

(assert (=> b!67385 m!62335))

(assert (=> b!67385 m!62335))

(assert (=> b!67385 m!62337))

(assert (=> b!67002 d!14127))

(declare-fun d!14129 () Bool)

(assert (=> d!14129 (= (apply!72 lt!28963 lt!28950) (get!1130 (getValueByKey!129 (toList!723 lt!28963) lt!28950)))))

(declare-fun bs!2884 () Bool)

(assert (= bs!2884 d!14129))

(declare-fun m!62339 () Bool)

(assert (=> bs!2884 m!62339))

(assert (=> bs!2884 m!62339))

(declare-fun m!62341 () Bool)

(assert (=> bs!2884 m!62341))

(assert (=> b!67002 d!14129))

(declare-fun d!14131 () Bool)

(assert (=> d!14131 (isDefined!83 (getValueByKey!129 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28600))))

(declare-fun lt!29242 () Unit!1836)

(assert (=> d!14131 (= lt!29242 (choose!378 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28600))))

(declare-fun e!44178 () Bool)

(assert (=> d!14131 e!44178))

(declare-fun res!36391 () Bool)

(assert (=> d!14131 (=> (not res!36391) (not e!44178))))

(assert (=> d!14131 (= res!36391 (isStrictlySorted!284 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14131 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28600) lt!29242)))

(declare-fun b!67386 () Bool)

(assert (=> b!67386 (= e!44178 (containsKey!133 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28600))))

(assert (= (and d!14131 res!36391) b!67386))

(assert (=> d!14131 m!61411))

(assert (=> d!14131 m!61411))

(assert (=> d!14131 m!61413))

(declare-fun m!62343 () Bool)

(assert (=> d!14131 m!62343))

(declare-fun m!62345 () Bool)

(assert (=> d!14131 m!62345))

(assert (=> b!67386 m!61407))

(assert (=> b!66925 d!14131))

(declare-fun d!14133 () Bool)

(assert (=> d!14133 (= (isDefined!83 (getValueByKey!129 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28600)) (not (isEmpty!314 (getValueByKey!129 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28600))))))

(declare-fun bs!2885 () Bool)

(assert (= bs!2885 d!14133))

(assert (=> bs!2885 m!61411))

(declare-fun m!62347 () Bool)

(assert (=> bs!2885 m!62347))

(assert (=> b!66925 d!14133))

(declare-fun b!67388 () Bool)

(declare-fun e!44179 () Option!135)

(declare-fun e!44180 () Option!135)

(assert (=> b!67388 (= e!44179 e!44180)))

(declare-fun c!9396 () Bool)

(assert (=> b!67388 (= c!9396 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))) (not (= (_1!1064 (h!2070 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))) lt!28600))))))

(declare-fun d!14135 () Bool)

(declare-fun c!9395 () Bool)

(assert (=> d!14135 (= c!9395 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))) (= (_1!1064 (h!2070 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))) lt!28600)))))

(assert (=> d!14135 (= (getValueByKey!129 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28600) e!44179)))

(declare-fun b!67389 () Bool)

(assert (=> b!67389 (= e!44180 (getValueByKey!129 (t!4976 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))) lt!28600))))

(declare-fun b!67387 () Bool)

(assert (=> b!67387 (= e!44179 (Some!134 (_2!1064 (h!2070 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))))

(declare-fun b!67390 () Bool)

(assert (=> b!67390 (= e!44180 None!133)))

(assert (= (and d!14135 c!9395) b!67387))

(assert (= (and d!14135 (not c!9395)) b!67388))

(assert (= (and b!67388 c!9396) b!67389))

(assert (= (and b!67388 (not c!9396)) b!67390))

(declare-fun m!62349 () Bool)

(assert (=> b!67389 m!62349))

(assert (=> b!66925 d!14135))

(declare-fun b!67391 () Bool)

(declare-fun e!44182 () Bool)

(declare-fun call!5649 () Bool)

(assert (=> b!67391 (= e!44182 call!5649)))

(declare-fun b!67392 () Bool)

(declare-fun e!44183 () Bool)

(assert (=> b!67392 (= e!44183 e!44182)))

(declare-fun c!9397 () Bool)

(assert (=> b!67392 (= c!9397 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (_2!1065 lt!28753))) #b00000000000000000000000000000000)))))

(declare-fun b!67394 () Bool)

(declare-fun e!44181 () Bool)

(assert (=> b!67394 (= e!44181 e!44183)))

(declare-fun res!36392 () Bool)

(assert (=> b!67394 (=> (not res!36392) (not e!44183))))

(declare-fun e!44184 () Bool)

(assert (=> b!67394 (= res!36392 (not e!44184))))

(declare-fun res!36394 () Bool)

(assert (=> b!67394 (=> (not res!36394) (not e!44184))))

(assert (=> b!67394 (= res!36394 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (_2!1065 lt!28753))) #b00000000000000000000000000000000)))))

(declare-fun bm!5646 () Bool)

(assert (=> bm!5646 (= call!5649 (arrayNoDuplicates!0 (_keys!3787 (_2!1065 lt!28753)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9397 (Cons!1487 (select (arr!1834 (_keys!3787 (_2!1065 lt!28753))) #b00000000000000000000000000000000) Nil!1488) Nil!1488)))))

(declare-fun b!67395 () Bool)

(assert (=> b!67395 (= e!44184 (contains!719 Nil!1488 (select (arr!1834 (_keys!3787 (_2!1065 lt!28753))) #b00000000000000000000000000000000)))))

(declare-fun b!67393 () Bool)

(assert (=> b!67393 (= e!44182 call!5649)))

(declare-fun d!14137 () Bool)

(declare-fun res!36393 () Bool)

(assert (=> d!14137 (=> res!36393 e!44181)))

(assert (=> d!14137 (= res!36393 (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 (_2!1065 lt!28753)))))))

(assert (=> d!14137 (= (arrayNoDuplicates!0 (_keys!3787 (_2!1065 lt!28753)) #b00000000000000000000000000000000 Nil!1488) e!44181)))

(assert (= (and d!14137 (not res!36393)) b!67394))

(assert (= (and b!67394 res!36394) b!67395))

(assert (= (and b!67394 res!36392) b!67392))

(assert (= (and b!67392 c!9397) b!67393))

(assert (= (and b!67392 (not c!9397)) b!67391))

(assert (= (or b!67393 b!67391) bm!5646))

(assert (=> b!67392 m!62079))

(assert (=> b!67392 m!62079))

(assert (=> b!67392 m!62087))

(assert (=> b!67394 m!62079))

(assert (=> b!67394 m!62079))

(assert (=> b!67394 m!62087))

(assert (=> bm!5646 m!62079))

(declare-fun m!62351 () Bool)

(assert (=> bm!5646 m!62351))

(assert (=> b!67395 m!62079))

(assert (=> b!67395 m!62079))

(declare-fun m!62353 () Bool)

(assert (=> b!67395 m!62353))

(assert (=> b!67153 d!14137))

(declare-fun d!14139 () Bool)

(assert (=> d!14139 (= (isEmpty!312 lt!28822) (isEmpty!313 (toList!723 lt!28822)))))

(declare-fun bs!2886 () Bool)

(assert (= bs!2886 d!14139))

(declare-fun m!62355 () Bool)

(assert (=> bs!2886 m!62355))

(assert (=> b!66838 d!14139))

(declare-fun b!67396 () Bool)

(declare-fun e!44186 () Bool)

(declare-fun call!5650 () Bool)

(assert (=> b!67396 (= e!44186 call!5650)))

(declare-fun b!67397 () Bool)

(declare-fun e!44187 () Bool)

(assert (=> b!67397 (= e!44187 e!44186)))

(declare-fun c!9398 () Bool)

(assert (=> b!67397 (= c!9398 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!67399 () Bool)

(declare-fun e!44185 () Bool)

(assert (=> b!67399 (= e!44185 e!44187)))

(declare-fun res!36395 () Bool)

(assert (=> b!67399 (=> (not res!36395) (not e!44187))))

(declare-fun e!44188 () Bool)

(assert (=> b!67399 (= res!36395 (not e!44188))))

(declare-fun res!36397 () Bool)

(assert (=> b!67399 (=> (not res!36397) (not e!44188))))

(assert (=> b!67399 (= res!36397 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!5647 () Bool)

(assert (=> bm!5647 (= call!5650 (arrayNoDuplicates!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9398 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) #b00000000000000000000000000000000) Nil!1488) Nil!1488)))))

(declare-fun b!67400 () Bool)

(assert (=> b!67400 (= e!44188 (contains!719 Nil!1488 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!67398 () Bool)

(assert (=> b!67398 (= e!44186 call!5650)))

(declare-fun d!14141 () Bool)

(declare-fun res!36396 () Bool)

(assert (=> d!14141 (=> res!36396 e!44185)))

(assert (=> d!14141 (= res!36396 (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(assert (=> d!14141 (= (arrayNoDuplicates!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000000 Nil!1488) e!44185)))

(assert (= (and d!14141 (not res!36396)) b!67399))

(assert (= (and b!67399 res!36397) b!67400))

(assert (= (and b!67399 res!36395) b!67397))

(assert (= (and b!67397 c!9398) b!67398))

(assert (= (and b!67397 (not c!9398)) b!67396))

(assert (= (or b!67398 b!67396) bm!5647))

(declare-fun m!62357 () Bool)

(assert (=> b!67397 m!62357))

(assert (=> b!67397 m!62357))

(declare-fun m!62359 () Bool)

(assert (=> b!67397 m!62359))

(assert (=> b!67399 m!62357))

(assert (=> b!67399 m!62357))

(assert (=> b!67399 m!62359))

(assert (=> bm!5647 m!62357))

(declare-fun m!62361 () Bool)

(assert (=> bm!5647 m!62361))

(assert (=> b!67400 m!62357))

(assert (=> b!67400 m!62357))

(declare-fun m!62363 () Bool)

(assert (=> b!67400 m!62363))

(assert (=> b!66737 d!14141))

(declare-fun d!14143 () Bool)

(assert (=> d!14143 (= (arrayCountValidKeys!0 lt!29070 (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (bvadd (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!29245 () Unit!1836)

(declare-fun choose!2 (array!3840 (_ BitVec 32)) Unit!1836)

(assert (=> d!14143 (= lt!29245 (choose!2 lt!29070 (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760))))))

(declare-fun e!44191 () Bool)

(assert (=> d!14143 e!44191))

(declare-fun res!36402 () Bool)

(assert (=> d!14143 (=> (not res!36402) (not e!44191))))

(assert (=> d!14143 (= res!36402 (and (bvsge (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) #b00000000000000000000000000000000) (bvslt (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (size!2069 lt!29070))))))

(assert (=> d!14143 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!29070 (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760))) lt!29245)))

(declare-fun b!67405 () Bool)

(declare-fun res!36403 () Bool)

(assert (=> b!67405 (=> (not res!36403) (not e!44191))))

(assert (=> b!67405 (= res!36403 (validKeyInArray!0 (select (arr!1834 lt!29070) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)))))))

(declare-fun b!67406 () Bool)

(assert (=> b!67406 (= e!44191 (bvslt (size!2069 lt!29070) #b01111111111111111111111111111111))))

(assert (= (and d!14143 res!36402) b!67405))

(assert (= (and b!67405 res!36403) b!67406))

(assert (=> d!14143 m!61747))

(declare-fun m!62365 () Bool)

(assert (=> d!14143 m!62365))

(declare-fun m!62367 () Bool)

(assert (=> b!67405 m!62367))

(assert (=> b!67405 m!62367))

(declare-fun m!62369 () Bool)

(assert (=> b!67405 m!62369))

(assert (=> d!13899 d!14143))

(declare-fun b!67407 () Bool)

(declare-fun e!44192 () (_ BitVec 32))

(assert (=> b!67407 (= e!44192 #b00000000000000000000000000000000)))

(declare-fun b!67408 () Bool)

(declare-fun e!44193 () (_ BitVec 32))

(declare-fun call!5651 () (_ BitVec 32))

(assert (=> b!67408 (= e!44193 call!5651)))

(declare-fun b!67409 () Bool)

(assert (=> b!67409 (= e!44192 e!44193)))

(declare-fun c!9400 () Bool)

(assert (=> b!67409 (= c!9400 (validKeyInArray!0 (select (arr!1834 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!67410 () Bool)

(assert (=> b!67410 (= e!44193 (bvadd #b00000000000000000000000000000001 call!5651))))

(declare-fun bm!5648 () Bool)

(assert (=> bm!5648 (= call!5651 (arrayCountValidKeys!0 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2069 (_keys!3787 newMap!16))))))

(declare-fun d!14145 () Bool)

(declare-fun lt!29246 () (_ BitVec 32))

(assert (=> d!14145 (and (bvsge lt!29246 #b00000000000000000000000000000000) (bvsle lt!29246 (bvsub (size!2069 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!14145 (= lt!29246 e!44192)))

(declare-fun c!9399 () Bool)

(assert (=> d!14145 (= c!9399 (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (=> d!14145 (and (bvsle #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2069 (_keys!3787 newMap!16)) (size!2069 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))))))))

(assert (=> d!14145 (= (arrayCountValidKeys!0 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))) lt!29246)))

(assert (= (and d!14145 c!9399) b!67407))

(assert (= (and d!14145 (not c!9399)) b!67409))

(assert (= (and b!67409 c!9400) b!67410))

(assert (= (and b!67409 (not c!9400)) b!67408))

(assert (= (or b!67410 b!67408) bm!5648))

(declare-fun m!62371 () Bool)

(assert (=> b!67409 m!62371))

(assert (=> b!67409 m!62371))

(declare-fun m!62373 () Bool)

(assert (=> b!67409 m!62373))

(declare-fun m!62375 () Bool)

(assert (=> bm!5648 m!62375))

(assert (=> d!13899 d!14145))

(declare-fun d!14147 () Bool)

(declare-fun e!44196 () Bool)

(assert (=> d!14147 e!44196))

(declare-fun res!36406 () Bool)

(assert (=> d!14147 (=> (not res!36406) (not e!44196))))

(assert (=> d!14147 (= res!36406 (and (bvsge (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) #b00000000000000000000000000000000) (bvslt (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (size!2069 (_keys!3787 newMap!16))) (bvslt (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (size!2070 (_values!2130 newMap!16)))))))

(declare-fun lt!29249 () Unit!1836)

(declare-fun choose!386 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 32) (_ BitVec 64) V!2915 Int) Unit!1836)

(assert (=> d!14147 (= lt!29249 (choose!386 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502 (defaultEntry!2147 newMap!16)))))

(assert (=> d!14147 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14147 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!10 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502 (defaultEntry!2147 newMap!16)) lt!29249)))

(declare-fun b!67413 () Bool)

(assert (=> b!67413 (= e!44196 (= (+!87 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (getCurrentListMap!419 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))))))

(assert (= (and d!14147 res!36406) b!67413))

(assert (=> d!14147 m!60719))

(declare-fun m!62377 () Bool)

(assert (=> d!14147 m!62377))

(assert (=> d!14147 m!61069))

(assert (=> b!67413 m!61745))

(assert (=> b!67413 m!60835))

(assert (=> b!67413 m!61725))

(assert (=> b!67413 m!60835))

(assert (=> b!67413 m!61659))

(assert (=> b!67413 m!61717))

(assert (=> d!13899 d!14147))

(declare-fun d!14149 () Bool)

(assert (=> d!14149 (arrayContainsKey!0 lt!29074 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!29250 () Unit!1836)

(assert (=> d!14149 (= lt!29250 (choose!13 lt!29074 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760))))))

(assert (=> d!14149 (bvsge (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) #b00000000000000000000000000000000)))

(assert (=> d!14149 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!29074 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760))) lt!29250)))

(declare-fun bs!2887 () Bool)

(assert (= bs!2887 d!14149))

(assert (=> bs!2887 m!60719))

(assert (=> bs!2887 m!61733))

(assert (=> bs!2887 m!60719))

(declare-fun m!62379 () Bool)

(assert (=> bs!2887 m!62379))

(assert (=> d!13899 d!14149))

(assert (=> d!13899 d!13739))

(declare-fun d!14151 () Bool)

(declare-fun e!44198 () Bool)

(assert (=> d!14151 e!44198))

(declare-fun res!36407 () Bool)

(assert (=> d!14151 (=> res!36407 e!44198)))

(declare-fun lt!29254 () Bool)

(assert (=> d!14151 (= res!36407 (not lt!29254))))

(declare-fun lt!29251 () Bool)

(assert (=> d!14151 (= lt!29254 lt!29251)))

(declare-fun lt!29252 () Unit!1836)

(declare-fun e!44197 () Unit!1836)

(assert (=> d!14151 (= lt!29252 e!44197)))

(declare-fun c!9401 () Bool)

(assert (=> d!14151 (= c!9401 lt!29251)))

(assert (=> d!14151 (= lt!29251 (containsKey!133 (toList!723 (getCurrentListMap!419 lt!29064 lt!29062 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)))))))

(assert (=> d!14151 (= (contains!716 (getCurrentListMap!419 lt!29064 lt!29062 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)))) lt!29254)))

(declare-fun b!67414 () Bool)

(declare-fun lt!29253 () Unit!1836)

(assert (=> b!67414 (= e!44197 lt!29253)))

(assert (=> b!67414 (= lt!29253 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 (getCurrentListMap!419 lt!29064 lt!29062 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)))))))

(assert (=> b!67414 (isDefined!83 (getValueByKey!129 (toList!723 (getCurrentListMap!419 lt!29064 lt!29062 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)))))))

(declare-fun b!67415 () Bool)

(declare-fun Unit!1877 () Unit!1836)

(assert (=> b!67415 (= e!44197 Unit!1877)))

(declare-fun b!67416 () Bool)

(assert (=> b!67416 (= e!44198 (isDefined!83 (getValueByKey!129 (toList!723 (getCurrentListMap!419 lt!29064 lt!29062 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760))))))))

(assert (= (and d!14151 c!9401) b!67414))

(assert (= (and d!14151 (not c!9401)) b!67415))

(assert (= (and d!14151 (not res!36407)) b!67416))

(assert (=> d!14151 m!61721))

(declare-fun m!62381 () Bool)

(assert (=> d!14151 m!62381))

(assert (=> b!67414 m!61721))

(declare-fun m!62383 () Bool)

(assert (=> b!67414 m!62383))

(assert (=> b!67414 m!61721))

(declare-fun m!62385 () Bool)

(assert (=> b!67414 m!62385))

(assert (=> b!67414 m!62385))

(declare-fun m!62387 () Bool)

(assert (=> b!67414 m!62387))

(assert (=> b!67416 m!61721))

(assert (=> b!67416 m!62385))

(assert (=> b!67416 m!62385))

(assert (=> b!67416 m!62387))

(assert (=> d!13899 d!14151))

(assert (=> d!13899 d!13909))

(declare-fun b!67417 () Bool)

(declare-fun e!44201 () Bool)

(declare-fun e!44200 () Bool)

(assert (=> b!67417 (= e!44201 e!44200)))

(declare-fun c!9402 () Bool)

(assert (=> b!67417 (= c!9402 (validKeyInArray!0 (select (arr!1834 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!67418 () Bool)

(declare-fun e!44199 () Bool)

(assert (=> b!67418 (= e!44200 e!44199)))

(declare-fun lt!29257 () (_ BitVec 64))

(assert (=> b!67418 (= lt!29257 (select (arr!1834 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!29255 () Unit!1836)

(assert (=> b!67418 (= lt!29255 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) lt!29257 #b00000000000000000000000000000000))))

(assert (=> b!67418 (arrayContainsKey!0 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) lt!29257 #b00000000000000000000000000000000)))

(declare-fun lt!29256 () Unit!1836)

(assert (=> b!67418 (= lt!29256 lt!29255)))

(declare-fun res!36408 () Bool)

(assert (=> b!67418 (= res!36408 (= (seekEntryOrOpen!0 (select (arr!1834 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000) (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) (mask!6082 newMap!16)) (Found!243 #b00000000000000000000000000000000)))))

(assert (=> b!67418 (=> (not res!36408) (not e!44199))))

(declare-fun d!14153 () Bool)

(declare-fun res!36409 () Bool)

(assert (=> d!14153 (=> res!36409 e!44201)))

(assert (=> d!14153 (= res!36409 (bvsge #b00000000000000000000000000000000 (size!2069 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))))))))

(assert (=> d!14153 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) (mask!6082 newMap!16)) e!44201)))

(declare-fun call!5652 () Bool)

(declare-fun bm!5649 () Bool)

(assert (=> bm!5649 (= call!5652 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) (mask!6082 newMap!16)))))

(declare-fun b!67419 () Bool)

(assert (=> b!67419 (= e!44200 call!5652)))

(declare-fun b!67420 () Bool)

(assert (=> b!67420 (= e!44199 call!5652)))

(assert (= (and d!14153 (not res!36409)) b!67417))

(assert (= (and b!67417 c!9402) b!67418))

(assert (= (and b!67417 (not c!9402)) b!67419))

(assert (= (and b!67418 res!36408) b!67420))

(assert (= (or b!67420 b!67419) bm!5649))

(assert (=> b!67417 m!62371))

(assert (=> b!67417 m!62371))

(assert (=> b!67417 m!62373))

(assert (=> b!67418 m!62371))

(declare-fun m!62389 () Bool)

(assert (=> b!67418 m!62389))

(declare-fun m!62391 () Bool)

(assert (=> b!67418 m!62391))

(assert (=> b!67418 m!62371))

(declare-fun m!62393 () Bool)

(assert (=> b!67418 m!62393))

(declare-fun m!62395 () Bool)

(assert (=> bm!5649 m!62395))

(assert (=> d!13899 d!14153))

(assert (=> d!13899 d!13751))

(declare-fun d!14155 () Bool)

(declare-fun e!44202 () Bool)

(assert (=> d!14155 e!44202))

(declare-fun res!36411 () Bool)

(assert (=> d!14155 (=> (not res!36411) (not e!44202))))

(declare-fun lt!29259 () ListLongMap!1415)

(assert (=> d!14155 (= res!36411 (contains!716 lt!29259 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun lt!29261 () List!1490)

(assert (=> d!14155 (= lt!29259 (ListLongMap!1416 lt!29261))))

(declare-fun lt!29260 () Unit!1836)

(declare-fun lt!29258 () Unit!1836)

(assert (=> d!14155 (= lt!29260 lt!29258)))

(assert (=> d!14155 (= (getValueByKey!129 lt!29261 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (Some!134 (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!14155 (= lt!29258 (lemmaContainsTupThenGetReturnValue!48 lt!29261 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!14155 (= lt!29261 (insertStrictlySorted!50 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!14155 (= (+!87 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) lt!29259)))

(declare-fun b!67421 () Bool)

(declare-fun res!36410 () Bool)

(assert (=> b!67421 (=> (not res!36410) (not e!44202))))

(assert (=> b!67421 (= res!36410 (= (getValueByKey!129 (toList!723 lt!29259) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (Some!134 (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun b!67422 () Bool)

(assert (=> b!67422 (= e!44202 (contains!718 (toList!723 lt!29259) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))

(assert (= (and d!14155 res!36411) b!67421))

(assert (= (and b!67421 res!36410) b!67422))

(declare-fun m!62397 () Bool)

(assert (=> d!14155 m!62397))

(declare-fun m!62399 () Bool)

(assert (=> d!14155 m!62399))

(declare-fun m!62401 () Bool)

(assert (=> d!14155 m!62401))

(declare-fun m!62403 () Bool)

(assert (=> d!14155 m!62403))

(declare-fun m!62405 () Bool)

(assert (=> b!67421 m!62405))

(declare-fun m!62407 () Bool)

(assert (=> b!67422 m!62407))

(assert (=> d!13899 d!14155))

(declare-fun b!67431 () Bool)

(declare-fun res!36422 () Bool)

(declare-fun e!44207 () Bool)

(assert (=> b!67431 (=> (not res!36422) (not e!44207))))

(assert (=> b!67431 (= res!36422 (not (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760))))))))

(declare-fun d!14157 () Bool)

(declare-fun e!44208 () Bool)

(assert (=> d!14157 e!44208))

(declare-fun res!36420 () Bool)

(assert (=> d!14157 (=> (not res!36420) (not e!44208))))

(assert (=> d!14157 (= res!36420 (and (bvsge (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) #b00000000000000000000000000000000) (bvslt (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (size!2069 (_keys!3787 newMap!16)))))))

(declare-fun lt!29264 () Unit!1836)

(declare-fun choose!1 (array!3840 (_ BitVec 32) (_ BitVec 64)) Unit!1836)

(assert (=> d!14157 (= lt!29264 (choose!1 (_keys!3787 newMap!16) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> d!14157 e!44207))

(declare-fun res!36423 () Bool)

(assert (=> d!14157 (=> (not res!36423) (not e!44207))))

(assert (=> d!14157 (= res!36423 (and (bvsge (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) #b00000000000000000000000000000000) (bvslt (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (size!2069 (_keys!3787 newMap!16)))))))

(assert (=> d!14157 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3787 newMap!16) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) lt!29264)))

(declare-fun b!67432 () Bool)

(declare-fun res!36421 () Bool)

(assert (=> b!67432 (=> (not res!36421) (not e!44207))))

(assert (=> b!67432 (= res!36421 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun b!67434 () Bool)

(assert (=> b!67434 (= e!44208 (= (arrayCountValidKeys!0 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3787 newMap!16) #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!67433 () Bool)

(assert (=> b!67433 (= e!44207 (bvslt (size!2069 (_keys!3787 newMap!16)) #b01111111111111111111111111111111))))

(assert (= (and d!14157 res!36423) b!67431))

(assert (= (and b!67431 res!36422) b!67432))

(assert (= (and b!67432 res!36421) b!67433))

(assert (= (and d!14157 res!36420) b!67434))

(declare-fun m!62409 () Bool)

(assert (=> b!67431 m!62409))

(assert (=> b!67431 m!62409))

(declare-fun m!62411 () Bool)

(assert (=> b!67431 m!62411))

(assert (=> d!14157 m!60719))

(declare-fun m!62413 () Bool)

(assert (=> d!14157 m!62413))

(assert (=> b!67432 m!60719))

(assert (=> b!67432 m!60979))

(assert (=> b!67434 m!61717))

(assert (=> b!67434 m!61741))

(assert (=> b!67434 m!61049))

(assert (=> d!13899 d!14157))

(declare-fun d!14159 () Bool)

(declare-fun e!44211 () Bool)

(assert (=> d!14159 e!44211))

(declare-fun res!36426 () Bool)

(assert (=> d!14159 (=> (not res!36426) (not e!44211))))

(assert (=> d!14159 (= res!36426 (and (bvsge (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) #b00000000000000000000000000000000) (bvslt (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (size!2069 (_keys!3787 newMap!16)))))))

(declare-fun lt!29267 () Unit!1836)

(declare-fun choose!102 ((_ BitVec 64) array!3840 (_ BitVec 32) (_ BitVec 32)) Unit!1836)

(assert (=> d!14159 (= lt!29267 (choose!102 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (_keys!3787 newMap!16) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (mask!6082 newMap!16)))))

(assert (=> d!14159 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14159 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (_keys!3787 newMap!16) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (mask!6082 newMap!16)) lt!29267)))

(declare-fun b!67437 () Bool)

(assert (=> b!67437 (= e!44211 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) (mask!6082 newMap!16)))))

(assert (= (and d!14159 res!36426) b!67437))

(assert (=> d!14159 m!60719))

(declare-fun m!62415 () Bool)

(assert (=> d!14159 m!62415))

(assert (=> d!14159 m!61069))

(assert (=> b!67437 m!61717))

(assert (=> b!67437 m!61739))

(assert (=> d!13899 d!14159))

(declare-fun d!14161 () Bool)

(declare-fun e!44212 () Bool)

(assert (=> d!14161 e!44212))

(declare-fun res!36427 () Bool)

(assert (=> d!14161 (=> (not res!36427) (not e!44212))))

(assert (=> d!14161 (= res!36427 (and (bvsge (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) #b00000000000000000000000000000000) (bvslt (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (size!2069 lt!29064))))))

(declare-fun lt!29268 () Unit!1836)

(assert (=> d!14161 (= lt!29268 (choose!382 lt!29064 lt!29062 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (defaultEntry!2147 newMap!16)))))

(assert (=> d!14161 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14161 (= (lemmaValidKeyInArrayIsInListMap!79 lt!29064 lt!29062 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (defaultEntry!2147 newMap!16)) lt!29268)))

(declare-fun b!67438 () Bool)

(assert (=> b!67438 (= e!44212 (contains!716 (getCurrentListMap!419 lt!29064 lt!29062 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (arr!1834 lt!29064) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)))))))

(assert (= (and d!14161 res!36427) b!67438))

(declare-fun m!62417 () Bool)

(assert (=> d!14161 m!62417))

(assert (=> d!14161 m!61069))

(assert (=> b!67438 m!61719))

(declare-fun m!62419 () Bool)

(assert (=> b!67438 m!62419))

(assert (=> b!67438 m!61719))

(assert (=> b!67438 m!62419))

(declare-fun m!62421 () Bool)

(assert (=> b!67438 m!62421))

(assert (=> d!13899 d!14161))

(declare-fun b!67439 () Bool)

(declare-fun e!44213 () (_ BitVec 32))

(assert (=> b!67439 (= e!44213 #b00000000000000000000000000000000)))

(declare-fun b!67440 () Bool)

(declare-fun e!44214 () (_ BitVec 32))

(declare-fun call!5653 () (_ BitVec 32))

(assert (=> b!67440 (= e!44214 call!5653)))

(declare-fun b!67441 () Bool)

(assert (=> b!67441 (= e!44213 e!44214)))

(declare-fun c!9404 () Bool)

(assert (=> b!67441 (= c!9404 (validKeyInArray!0 (select (arr!1834 lt!29070) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)))))))

(declare-fun b!67442 () Bool)

(assert (=> b!67442 (= e!44214 (bvadd #b00000000000000000000000000000001 call!5653))))

(declare-fun bm!5650 () Bool)

(assert (=> bm!5650 (= call!5653 (arrayCountValidKeys!0 lt!29070 (bvadd (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) #b00000000000000000000000000000001) (bvadd (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) #b00000000000000000000000000000001)))))

(declare-fun d!14163 () Bool)

(declare-fun lt!29269 () (_ BitVec 32))

(assert (=> d!14163 (and (bvsge lt!29269 #b00000000000000000000000000000000) (bvsle lt!29269 (bvsub (size!2069 lt!29070) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)))))))

(assert (=> d!14163 (= lt!29269 e!44213)))

(declare-fun c!9403 () Bool)

(assert (=> d!14163 (= c!9403 (bvsge (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (bvadd (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) #b00000000000000000000000000000001)))))

(assert (=> d!14163 (and (bvsle (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (bvadd (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) #b00000000000000000000000000000001)) (bvsge (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) #b00000000000000000000000000000001) (size!2069 lt!29070)))))

(assert (=> d!14163 (= (arrayCountValidKeys!0 lt!29070 (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (bvadd (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) #b00000000000000000000000000000001)) lt!29269)))

(assert (= (and d!14163 c!9403) b!67439))

(assert (= (and d!14163 (not c!9403)) b!67441))

(assert (= (and b!67441 c!9404) b!67442))

(assert (= (and b!67441 (not c!9404)) b!67440))

(assert (= (or b!67442 b!67440) bm!5650))

(assert (=> b!67441 m!62367))

(assert (=> b!67441 m!62367))

(assert (=> b!67441 m!62369))

(declare-fun m!62423 () Bool)

(assert (=> bm!5650 m!62423))

(assert (=> d!13899 d!14163))

(declare-fun d!14165 () Bool)

(declare-fun res!36428 () Bool)

(declare-fun e!44215 () Bool)

(assert (=> d!14165 (=> res!36428 e!44215)))

(assert (=> d!14165 (= res!36428 (= (select (arr!1834 lt!29074) #b00000000000000000000000000000000) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> d!14165 (= (arrayContainsKey!0 lt!29074 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b00000000000000000000000000000000) e!44215)))

(declare-fun b!67443 () Bool)

(declare-fun e!44216 () Bool)

(assert (=> b!67443 (= e!44215 e!44216)))

(declare-fun res!36429 () Bool)

(assert (=> b!67443 (=> (not res!36429) (not e!44216))))

(assert (=> b!67443 (= res!36429 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2069 lt!29074)))))

(declare-fun b!67444 () Bool)

(assert (=> b!67444 (= e!44216 (arrayContainsKey!0 lt!29074 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!14165 (not res!36428)) b!67443))

(assert (= (and b!67443 res!36429) b!67444))

(declare-fun m!62425 () Bool)

(assert (=> d!14165 m!62425))

(assert (=> b!67444 m!60719))

(declare-fun m!62427 () Bool)

(assert (=> b!67444 m!62427))

(assert (=> d!13899 d!14165))

(declare-fun b!67445 () Bool)

(declare-fun e!44222 () Bool)

(declare-fun call!5656 () Bool)

(assert (=> b!67445 (= e!44222 (not call!5656))))

(declare-fun call!5660 () ListLongMap!1415)

(declare-fun bm!5651 () Bool)

(assert (=> bm!5651 (= call!5660 (getCurrentListMapNoExtraKeys!51 lt!29064 lt!29062 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun d!14167 () Bool)

(declare-fun e!44229 () Bool)

(assert (=> d!14167 e!44229))

(declare-fun res!36438 () Bool)

(assert (=> d!14167 (=> (not res!36438) (not e!44229))))

(assert (=> d!14167 (= res!36438 (or (bvsge #b00000000000000000000000000000000 (size!2069 lt!29064)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 lt!29064)))))))

(declare-fun lt!29290 () ListLongMap!1415)

(declare-fun lt!29277 () ListLongMap!1415)

(assert (=> d!14167 (= lt!29290 lt!29277)))

(declare-fun lt!29273 () Unit!1836)

(declare-fun e!44225 () Unit!1836)

(assert (=> d!14167 (= lt!29273 e!44225)))

(declare-fun c!9407 () Bool)

(declare-fun e!44223 () Bool)

(assert (=> d!14167 (= c!9407 e!44223)))

(declare-fun res!36431 () Bool)

(assert (=> d!14167 (=> (not res!36431) (not e!44223))))

(assert (=> d!14167 (= res!36431 (bvslt #b00000000000000000000000000000000 (size!2069 lt!29064)))))

(declare-fun e!44218 () ListLongMap!1415)

(assert (=> d!14167 (= lt!29277 e!44218)))

(declare-fun c!9408 () Bool)

(assert (=> d!14167 (= c!9408 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14167 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14167 (= (getCurrentListMap!419 lt!29064 lt!29062 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29290)))

(declare-fun b!67446 () Bool)

(declare-fun call!5659 () ListLongMap!1415)

(assert (=> b!67446 (= e!44218 (+!87 call!5659 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))

(declare-fun b!67447 () Bool)

(declare-fun e!44226 () Bool)

(assert (=> b!67447 (= e!44222 e!44226)))

(declare-fun res!36433 () Bool)

(assert (=> b!67447 (= res!36433 call!5656)))

(assert (=> b!67447 (=> (not res!36433) (not e!44226))))

(declare-fun b!67448 () Bool)

(declare-fun e!44220 () ListLongMap!1415)

(assert (=> b!67448 (= e!44218 e!44220)))

(declare-fun c!9410 () Bool)

(assert (=> b!67448 (= c!9410 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5652 () Bool)

(declare-fun call!5657 () ListLongMap!1415)

(declare-fun call!5655 () ListLongMap!1415)

(assert (=> bm!5652 (= call!5657 call!5655)))

(declare-fun b!67449 () Bool)

(declare-fun e!44221 () Bool)

(assert (=> b!67449 (= e!44229 e!44221)))

(declare-fun c!9405 () Bool)

(assert (=> b!67449 (= c!9405 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67450 () Bool)

(declare-fun call!5658 () Bool)

(assert (=> b!67450 (= e!44221 (not call!5658))))

(declare-fun b!67451 () Bool)

(declare-fun e!44227 () Bool)

(assert (=> b!67451 (= e!44221 e!44227)))

(declare-fun res!36437 () Bool)

(assert (=> b!67451 (= res!36437 call!5658)))

(assert (=> b!67451 (=> (not res!36437) (not e!44227))))

(declare-fun b!67452 () Bool)

(declare-fun lt!29291 () Unit!1836)

(assert (=> b!67452 (= e!44225 lt!29291)))

(declare-fun lt!29275 () ListLongMap!1415)

(assert (=> b!67452 (= lt!29275 (getCurrentListMapNoExtraKeys!51 lt!29064 lt!29062 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29284 () (_ BitVec 64))

(assert (=> b!67452 (= lt!29284 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29278 () (_ BitVec 64))

(assert (=> b!67452 (= lt!29278 (select (arr!1834 lt!29064) #b00000000000000000000000000000000))))

(declare-fun lt!29272 () Unit!1836)

(assert (=> b!67452 (= lt!29272 (addStillContains!48 lt!29275 lt!29284 (zeroValue!2055 newMap!16) lt!29278))))

(assert (=> b!67452 (contains!716 (+!87 lt!29275 (tuple2!2109 lt!29284 (zeroValue!2055 newMap!16))) lt!29278)))

(declare-fun lt!29282 () Unit!1836)

(assert (=> b!67452 (= lt!29282 lt!29272)))

(declare-fun lt!29289 () ListLongMap!1415)

(assert (=> b!67452 (= lt!29289 (getCurrentListMapNoExtraKeys!51 lt!29064 lt!29062 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29280 () (_ BitVec 64))

(assert (=> b!67452 (= lt!29280 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29276 () (_ BitVec 64))

(assert (=> b!67452 (= lt!29276 (select (arr!1834 lt!29064) #b00000000000000000000000000000000))))

(declare-fun lt!29287 () Unit!1836)

(assert (=> b!67452 (= lt!29287 (addApplyDifferent!48 lt!29289 lt!29280 (minValue!2055 newMap!16) lt!29276))))

(assert (=> b!67452 (= (apply!72 (+!87 lt!29289 (tuple2!2109 lt!29280 (minValue!2055 newMap!16))) lt!29276) (apply!72 lt!29289 lt!29276))))

(declare-fun lt!29270 () Unit!1836)

(assert (=> b!67452 (= lt!29270 lt!29287)))

(declare-fun lt!29286 () ListLongMap!1415)

(assert (=> b!67452 (= lt!29286 (getCurrentListMapNoExtraKeys!51 lt!29064 lt!29062 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29281 () (_ BitVec 64))

(assert (=> b!67452 (= lt!29281 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29283 () (_ BitVec 64))

(assert (=> b!67452 (= lt!29283 (select (arr!1834 lt!29064) #b00000000000000000000000000000000))))

(declare-fun lt!29271 () Unit!1836)

(assert (=> b!67452 (= lt!29271 (addApplyDifferent!48 lt!29286 lt!29281 (zeroValue!2055 newMap!16) lt!29283))))

(assert (=> b!67452 (= (apply!72 (+!87 lt!29286 (tuple2!2109 lt!29281 (zeroValue!2055 newMap!16))) lt!29283) (apply!72 lt!29286 lt!29283))))

(declare-fun lt!29285 () Unit!1836)

(assert (=> b!67452 (= lt!29285 lt!29271)))

(declare-fun lt!29274 () ListLongMap!1415)

(assert (=> b!67452 (= lt!29274 (getCurrentListMapNoExtraKeys!51 lt!29064 lt!29062 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29279 () (_ BitVec 64))

(assert (=> b!67452 (= lt!29279 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29288 () (_ BitVec 64))

(assert (=> b!67452 (= lt!29288 (select (arr!1834 lt!29064) #b00000000000000000000000000000000))))

(assert (=> b!67452 (= lt!29291 (addApplyDifferent!48 lt!29274 lt!29279 (minValue!2055 newMap!16) lt!29288))))

(assert (=> b!67452 (= (apply!72 (+!87 lt!29274 (tuple2!2109 lt!29279 (minValue!2055 newMap!16))) lt!29288) (apply!72 lt!29274 lt!29288))))

(declare-fun b!67453 () Bool)

(assert (=> b!67453 (= e!44223 (validKeyInArray!0 (select (arr!1834 lt!29064) #b00000000000000000000000000000000)))))

(declare-fun b!67454 () Bool)

(declare-fun Unit!1878 () Unit!1836)

(assert (=> b!67454 (= e!44225 Unit!1878)))

(declare-fun b!67455 () Bool)

(declare-fun res!36436 () Bool)

(assert (=> b!67455 (=> (not res!36436) (not e!44229))))

(assert (=> b!67455 (= res!36436 e!44222)))

(declare-fun c!9406 () Bool)

(assert (=> b!67455 (= c!9406 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5653 () Bool)

(assert (=> bm!5653 (= call!5655 call!5660)))

(declare-fun b!67456 () Bool)

(assert (=> b!67456 (= e!44227 (= (apply!72 lt!29290 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2055 newMap!16)))))

(declare-fun bm!5654 () Bool)

(assert (=> bm!5654 (= call!5659 (+!87 (ite c!9408 call!5660 (ite c!9410 call!5655 call!5657)) (ite (or c!9408 c!9410) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(declare-fun b!67457 () Bool)

(declare-fun res!36432 () Bool)

(assert (=> b!67457 (=> (not res!36432) (not e!44229))))

(declare-fun e!44228 () Bool)

(assert (=> b!67457 (= res!36432 e!44228)))

(declare-fun res!36435 () Bool)

(assert (=> b!67457 (=> res!36435 e!44228)))

(declare-fun e!44224 () Bool)

(assert (=> b!67457 (= res!36435 (not e!44224))))

(declare-fun res!36430 () Bool)

(assert (=> b!67457 (=> (not res!36430) (not e!44224))))

(assert (=> b!67457 (= res!36430 (bvslt #b00000000000000000000000000000000 (size!2069 lt!29064)))))

(declare-fun b!67458 () Bool)

(declare-fun c!9409 () Bool)

(assert (=> b!67458 (= c!9409 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!44217 () ListLongMap!1415)

(assert (=> b!67458 (= e!44220 e!44217)))

(declare-fun b!67459 () Bool)

(assert (=> b!67459 (= e!44217 call!5657)))

(declare-fun bm!5655 () Bool)

(declare-fun call!5654 () ListLongMap!1415)

(assert (=> bm!5655 (= call!5654 call!5659)))

(declare-fun bm!5656 () Bool)

(assert (=> bm!5656 (= call!5656 (contains!716 lt!29290 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67460 () Bool)

(assert (=> b!67460 (= e!44220 call!5654)))

(declare-fun b!67461 () Bool)

(assert (=> b!67461 (= e!44224 (validKeyInArray!0 (select (arr!1834 lt!29064) #b00000000000000000000000000000000)))))

(declare-fun b!67462 () Bool)

(assert (=> b!67462 (= e!44226 (= (apply!72 lt!29290 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2055 newMap!16)))))

(declare-fun b!67463 () Bool)

(assert (=> b!67463 (= e!44217 call!5654)))

(declare-fun b!67464 () Bool)

(declare-fun e!44219 () Bool)

(assert (=> b!67464 (= e!44228 e!44219)))

(declare-fun res!36434 () Bool)

(assert (=> b!67464 (=> (not res!36434) (not e!44219))))

(assert (=> b!67464 (= res!36434 (contains!716 lt!29290 (select (arr!1834 lt!29064) #b00000000000000000000000000000000)))))

(assert (=> b!67464 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 lt!29064)))))

(declare-fun bm!5657 () Bool)

(assert (=> bm!5657 (= call!5658 (contains!716 lt!29290 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67465 () Bool)

(assert (=> b!67465 (= e!44219 (= (apply!72 lt!29290 (select (arr!1834 lt!29064) #b00000000000000000000000000000000)) (get!1127 (select (arr!1835 lt!29062) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67465 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 lt!29062)))))

(assert (=> b!67465 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 lt!29064)))))

(assert (= (and d!14167 c!9408) b!67446))

(assert (= (and d!14167 (not c!9408)) b!67448))

(assert (= (and b!67448 c!9410) b!67460))

(assert (= (and b!67448 (not c!9410)) b!67458))

(assert (= (and b!67458 c!9409) b!67463))

(assert (= (and b!67458 (not c!9409)) b!67459))

(assert (= (or b!67463 b!67459) bm!5652))

(assert (= (or b!67460 bm!5652) bm!5653))

(assert (= (or b!67460 b!67463) bm!5655))

(assert (= (or b!67446 bm!5653) bm!5651))

(assert (= (or b!67446 bm!5655) bm!5654))

(assert (= (and d!14167 res!36431) b!67453))

(assert (= (and d!14167 c!9407) b!67452))

(assert (= (and d!14167 (not c!9407)) b!67454))

(assert (= (and d!14167 res!36438) b!67457))

(assert (= (and b!67457 res!36430) b!67461))

(assert (= (and b!67457 (not res!36435)) b!67464))

(assert (= (and b!67464 res!36434) b!67465))

(assert (= (and b!67457 res!36432) b!67455))

(assert (= (and b!67455 c!9406) b!67447))

(assert (= (and b!67455 (not c!9406)) b!67445))

(assert (= (and b!67447 res!36433) b!67462))

(assert (= (or b!67447 b!67445) bm!5656))

(assert (= (and b!67455 res!36436) b!67449))

(assert (= (and b!67449 c!9405) b!67451))

(assert (= (and b!67449 (not c!9405)) b!67450))

(assert (= (and b!67451 res!36437) b!67456))

(assert (= (or b!67451 b!67450) bm!5657))

(declare-fun b_lambda!3021 () Bool)

(assert (=> (not b_lambda!3021) (not b!67465)))

(assert (=> b!67465 t!4984))

(declare-fun b_and!4153 () Bool)

(assert (= b_and!4149 (and (=> t!4984 result!2595) b_and!4153)))

(assert (=> b!67465 t!4986))

(declare-fun b_and!4155 () Bool)

(assert (= b_and!4151 (and (=> t!4986 result!2597) b_and!4155)))

(declare-fun m!62429 () Bool)

(assert (=> bm!5656 m!62429))

(declare-fun m!62431 () Bool)

(assert (=> b!67465 m!62431))

(assert (=> b!67465 m!61115))

(declare-fun m!62433 () Bool)

(assert (=> b!67465 m!62433))

(declare-fun m!62435 () Bool)

(assert (=> b!67465 m!62435))

(assert (=> b!67465 m!62435))

(declare-fun m!62437 () Bool)

(assert (=> b!67465 m!62437))

(assert (=> b!67465 m!62431))

(assert (=> b!67465 m!61115))

(assert (=> b!67464 m!62435))

(assert (=> b!67464 m!62435))

(declare-fun m!62439 () Bool)

(assert (=> b!67464 m!62439))

(declare-fun m!62441 () Bool)

(assert (=> b!67462 m!62441))

(assert (=> b!67461 m!62435))

(assert (=> b!67461 m!62435))

(declare-fun m!62443 () Bool)

(assert (=> b!67461 m!62443))

(declare-fun m!62445 () Bool)

(assert (=> b!67456 m!62445))

(assert (=> d!14167 m!61069))

(declare-fun m!62447 () Bool)

(assert (=> b!67446 m!62447))

(declare-fun m!62449 () Bool)

(assert (=> bm!5651 m!62449))

(declare-fun m!62451 () Bool)

(assert (=> bm!5654 m!62451))

(declare-fun m!62453 () Bool)

(assert (=> b!67452 m!62453))

(declare-fun m!62455 () Bool)

(assert (=> b!67452 m!62455))

(declare-fun m!62457 () Bool)

(assert (=> b!67452 m!62457))

(declare-fun m!62459 () Bool)

(assert (=> b!67452 m!62459))

(declare-fun m!62461 () Bool)

(assert (=> b!67452 m!62461))

(declare-fun m!62463 () Bool)

(assert (=> b!67452 m!62463))

(declare-fun m!62465 () Bool)

(assert (=> b!67452 m!62465))

(assert (=> b!67452 m!62459))

(declare-fun m!62467 () Bool)

(assert (=> b!67452 m!62467))

(assert (=> b!67452 m!62449))

(declare-fun m!62469 () Bool)

(assert (=> b!67452 m!62469))

(declare-fun m!62471 () Bool)

(assert (=> b!67452 m!62471))

(assert (=> b!67452 m!62463))

(declare-fun m!62473 () Bool)

(assert (=> b!67452 m!62473))

(assert (=> b!67452 m!62453))

(declare-fun m!62475 () Bool)

(assert (=> b!67452 m!62475))

(declare-fun m!62477 () Bool)

(assert (=> b!67452 m!62477))

(assert (=> b!67452 m!62435))

(assert (=> b!67452 m!62475))

(declare-fun m!62479 () Bool)

(assert (=> b!67452 m!62479))

(declare-fun m!62481 () Bool)

(assert (=> b!67452 m!62481))

(assert (=> b!67453 m!62435))

(assert (=> b!67453 m!62435))

(assert (=> b!67453 m!62443))

(declare-fun m!62483 () Bool)

(assert (=> bm!5657 m!62483))

(assert (=> d!13899 d!14167))

(assert (=> d!13899 d!13889))

(assert (=> d!13899 d!13873))

(declare-fun d!14169 () Bool)

(declare-fun e!44232 () Bool)

(assert (=> d!14169 e!44232))

(declare-fun res!36441 () Bool)

(assert (=> d!14169 (=> (not res!36441) (not e!44232))))

(assert (=> d!14169 (= res!36441 (and (bvsge (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) #b00000000000000000000000000000000) (bvslt (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (size!2069 (_keys!3787 newMap!16)))))))

(declare-fun lt!29294 () Unit!1836)

(declare-fun choose!41 (array!3840 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1491) Unit!1836)

(assert (=> d!14169 (= lt!29294 (choose!41 (_keys!3787 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) lt!29076 lt!29073))))

(assert (=> d!14169 (bvslt (size!2069 (_keys!3787 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!14169 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3787 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) lt!29076 lt!29073) lt!29294)))

(declare-fun b!67468 () Bool)

(assert (=> b!67468 (= e!44232 (arrayNoDuplicates!0 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) lt!29076 lt!29073))))

(assert (= (and d!14169 res!36441) b!67468))

(assert (=> d!14169 m!60719))

(declare-fun m!62485 () Bool)

(assert (=> d!14169 m!62485))

(assert (=> b!67468 m!61717))

(assert (=> b!67468 m!61743))

(assert (=> d!13899 d!14169))

(declare-fun b!67469 () Bool)

(declare-fun e!44238 () Bool)

(declare-fun call!5663 () Bool)

(assert (=> b!67469 (= e!44238 (not call!5663))))

(declare-fun call!5667 () ListLongMap!1415)

(declare-fun bm!5658 () Bool)

(assert (=> bm!5658 (= call!5667 (getCurrentListMapNoExtraKeys!51 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun d!14171 () Bool)

(declare-fun e!44245 () Bool)

(assert (=> d!14171 e!44245))

(declare-fun res!36450 () Bool)

(assert (=> d!14171 (=> (not res!36450) (not e!44245))))

(assert (=> d!14171 (= res!36450 (or (bvsge #b00000000000000000000000000000000 (size!2069 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))))))))))

(declare-fun lt!29315 () ListLongMap!1415)

(declare-fun lt!29302 () ListLongMap!1415)

(assert (=> d!14171 (= lt!29315 lt!29302)))

(declare-fun lt!29298 () Unit!1836)

(declare-fun e!44241 () Unit!1836)

(assert (=> d!14171 (= lt!29298 e!44241)))

(declare-fun c!9413 () Bool)

(declare-fun e!44239 () Bool)

(assert (=> d!14171 (= c!9413 e!44239)))

(declare-fun res!36443 () Bool)

(assert (=> d!14171 (=> (not res!36443) (not e!44239))))

(assert (=> d!14171 (= res!36443 (bvslt #b00000000000000000000000000000000 (size!2069 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))))))))

(declare-fun e!44234 () ListLongMap!1415)

(assert (=> d!14171 (= lt!29302 e!44234)))

(declare-fun c!9414 () Bool)

(assert (=> d!14171 (= c!9414 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14171 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14171 (= (getCurrentListMap!419 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29315)))

(declare-fun b!67470 () Bool)

(declare-fun call!5666 () ListLongMap!1415)

(assert (=> b!67470 (= e!44234 (+!87 call!5666 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))

(declare-fun b!67471 () Bool)

(declare-fun e!44242 () Bool)

(assert (=> b!67471 (= e!44238 e!44242)))

(declare-fun res!36445 () Bool)

(assert (=> b!67471 (= res!36445 call!5663)))

(assert (=> b!67471 (=> (not res!36445) (not e!44242))))

(declare-fun b!67472 () Bool)

(declare-fun e!44236 () ListLongMap!1415)

(assert (=> b!67472 (= e!44234 e!44236)))

(declare-fun c!9416 () Bool)

(assert (=> b!67472 (= c!9416 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5659 () Bool)

(declare-fun call!5664 () ListLongMap!1415)

(declare-fun call!5662 () ListLongMap!1415)

(assert (=> bm!5659 (= call!5664 call!5662)))

(declare-fun b!67473 () Bool)

(declare-fun e!44237 () Bool)

(assert (=> b!67473 (= e!44245 e!44237)))

(declare-fun c!9411 () Bool)

(assert (=> b!67473 (= c!9411 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67474 () Bool)

(declare-fun call!5665 () Bool)

(assert (=> b!67474 (= e!44237 (not call!5665))))

(declare-fun b!67475 () Bool)

(declare-fun e!44243 () Bool)

(assert (=> b!67475 (= e!44237 e!44243)))

(declare-fun res!36449 () Bool)

(assert (=> b!67475 (= res!36449 call!5665)))

(assert (=> b!67475 (=> (not res!36449) (not e!44243))))

(declare-fun b!67476 () Bool)

(declare-fun lt!29316 () Unit!1836)

(assert (=> b!67476 (= e!44241 lt!29316)))

(declare-fun lt!29300 () ListLongMap!1415)

(assert (=> b!67476 (= lt!29300 (getCurrentListMapNoExtraKeys!51 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29309 () (_ BitVec 64))

(assert (=> b!67476 (= lt!29309 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29303 () (_ BitVec 64))

(assert (=> b!67476 (= lt!29303 (select (arr!1834 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!29297 () Unit!1836)

(assert (=> b!67476 (= lt!29297 (addStillContains!48 lt!29300 lt!29309 (zeroValue!2055 newMap!16) lt!29303))))

(assert (=> b!67476 (contains!716 (+!87 lt!29300 (tuple2!2109 lt!29309 (zeroValue!2055 newMap!16))) lt!29303)))

(declare-fun lt!29307 () Unit!1836)

(assert (=> b!67476 (= lt!29307 lt!29297)))

(declare-fun lt!29314 () ListLongMap!1415)

(assert (=> b!67476 (= lt!29314 (getCurrentListMapNoExtraKeys!51 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29305 () (_ BitVec 64))

(assert (=> b!67476 (= lt!29305 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29301 () (_ BitVec 64))

(assert (=> b!67476 (= lt!29301 (select (arr!1834 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!29312 () Unit!1836)

(assert (=> b!67476 (= lt!29312 (addApplyDifferent!48 lt!29314 lt!29305 (minValue!2055 newMap!16) lt!29301))))

(assert (=> b!67476 (= (apply!72 (+!87 lt!29314 (tuple2!2109 lt!29305 (minValue!2055 newMap!16))) lt!29301) (apply!72 lt!29314 lt!29301))))

(declare-fun lt!29295 () Unit!1836)

(assert (=> b!67476 (= lt!29295 lt!29312)))

(declare-fun lt!29311 () ListLongMap!1415)

(assert (=> b!67476 (= lt!29311 (getCurrentListMapNoExtraKeys!51 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29306 () (_ BitVec 64))

(assert (=> b!67476 (= lt!29306 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29308 () (_ BitVec 64))

(assert (=> b!67476 (= lt!29308 (select (arr!1834 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!29296 () Unit!1836)

(assert (=> b!67476 (= lt!29296 (addApplyDifferent!48 lt!29311 lt!29306 (zeroValue!2055 newMap!16) lt!29308))))

(assert (=> b!67476 (= (apply!72 (+!87 lt!29311 (tuple2!2109 lt!29306 (zeroValue!2055 newMap!16))) lt!29308) (apply!72 lt!29311 lt!29308))))

(declare-fun lt!29310 () Unit!1836)

(assert (=> b!67476 (= lt!29310 lt!29296)))

(declare-fun lt!29299 () ListLongMap!1415)

(assert (=> b!67476 (= lt!29299 (getCurrentListMapNoExtraKeys!51 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29304 () (_ BitVec 64))

(assert (=> b!67476 (= lt!29304 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29313 () (_ BitVec 64))

(assert (=> b!67476 (= lt!29313 (select (arr!1834 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!67476 (= lt!29316 (addApplyDifferent!48 lt!29299 lt!29304 (minValue!2055 newMap!16) lt!29313))))

(assert (=> b!67476 (= (apply!72 (+!87 lt!29299 (tuple2!2109 lt!29304 (minValue!2055 newMap!16))) lt!29313) (apply!72 lt!29299 lt!29313))))

(declare-fun b!67477 () Bool)

(assert (=> b!67477 (= e!44239 (validKeyInArray!0 (select (arr!1834 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!67478 () Bool)

(declare-fun Unit!1879 () Unit!1836)

(assert (=> b!67478 (= e!44241 Unit!1879)))

(declare-fun b!67479 () Bool)

(declare-fun res!36448 () Bool)

(assert (=> b!67479 (=> (not res!36448) (not e!44245))))

(assert (=> b!67479 (= res!36448 e!44238)))

(declare-fun c!9412 () Bool)

(assert (=> b!67479 (= c!9412 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5660 () Bool)

(assert (=> bm!5660 (= call!5662 call!5667)))

(declare-fun b!67480 () Bool)

(assert (=> b!67480 (= e!44243 (= (apply!72 lt!29315 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2055 newMap!16)))))

(declare-fun bm!5661 () Bool)

(assert (=> bm!5661 (= call!5666 (+!87 (ite c!9414 call!5667 (ite c!9416 call!5662 call!5664)) (ite (or c!9414 c!9416) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(declare-fun b!67481 () Bool)

(declare-fun res!36444 () Bool)

(assert (=> b!67481 (=> (not res!36444) (not e!44245))))

(declare-fun e!44244 () Bool)

(assert (=> b!67481 (= res!36444 e!44244)))

(declare-fun res!36447 () Bool)

(assert (=> b!67481 (=> res!36447 e!44244)))

(declare-fun e!44240 () Bool)

(assert (=> b!67481 (= res!36447 (not e!44240))))

(declare-fun res!36442 () Bool)

(assert (=> b!67481 (=> (not res!36442) (not e!44240))))

(assert (=> b!67481 (= res!36442 (bvslt #b00000000000000000000000000000000 (size!2069 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))))))))

(declare-fun b!67482 () Bool)

(declare-fun c!9415 () Bool)

(assert (=> b!67482 (= c!9415 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!44233 () ListLongMap!1415)

(assert (=> b!67482 (= e!44236 e!44233)))

(declare-fun b!67483 () Bool)

(assert (=> b!67483 (= e!44233 call!5664)))

(declare-fun bm!5662 () Bool)

(declare-fun call!5661 () ListLongMap!1415)

(assert (=> bm!5662 (= call!5661 call!5666)))

(declare-fun bm!5663 () Bool)

(assert (=> bm!5663 (= call!5663 (contains!716 lt!29315 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67484 () Bool)

(assert (=> b!67484 (= e!44236 call!5661)))

(declare-fun b!67485 () Bool)

(assert (=> b!67485 (= e!44240 (validKeyInArray!0 (select (arr!1834 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!67486 () Bool)

(assert (=> b!67486 (= e!44242 (= (apply!72 lt!29315 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2055 newMap!16)))))

(declare-fun b!67487 () Bool)

(assert (=> b!67487 (= e!44233 call!5661)))

(declare-fun b!67488 () Bool)

(declare-fun e!44235 () Bool)

(assert (=> b!67488 (= e!44244 e!44235)))

(declare-fun res!36446 () Bool)

(assert (=> b!67488 (=> (not res!36446) (not e!44235))))

(assert (=> b!67488 (= res!36446 (contains!716 lt!29315 (select (arr!1834 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!67488 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))))))))

(declare-fun bm!5664 () Bool)

(assert (=> bm!5664 (= call!5665 (contains!716 lt!29315 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67489 () Bool)

(assert (=> b!67489 (= e!44235 (= (apply!72 lt!29315 (select (arr!1834 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000)) (get!1127 (select (arr!1835 (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67489 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))))))))

(assert (=> b!67489 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))))))))

(assert (= (and d!14171 c!9414) b!67470))

(assert (= (and d!14171 (not c!9414)) b!67472))

(assert (= (and b!67472 c!9416) b!67484))

(assert (= (and b!67472 (not c!9416)) b!67482))

(assert (= (and b!67482 c!9415) b!67487))

(assert (= (and b!67482 (not c!9415)) b!67483))

(assert (= (or b!67487 b!67483) bm!5659))

(assert (= (or b!67484 bm!5659) bm!5660))

(assert (= (or b!67484 b!67487) bm!5662))

(assert (= (or b!67470 bm!5660) bm!5658))

(assert (= (or b!67470 bm!5662) bm!5661))

(assert (= (and d!14171 res!36443) b!67477))

(assert (= (and d!14171 c!9413) b!67476))

(assert (= (and d!14171 (not c!9413)) b!67478))

(assert (= (and d!14171 res!36450) b!67481))

(assert (= (and b!67481 res!36442) b!67485))

(assert (= (and b!67481 (not res!36447)) b!67488))

(assert (= (and b!67488 res!36446) b!67489))

(assert (= (and b!67481 res!36444) b!67479))

(assert (= (and b!67479 c!9412) b!67471))

(assert (= (and b!67479 (not c!9412)) b!67469))

(assert (= (and b!67471 res!36445) b!67486))

(assert (= (or b!67471 b!67469) bm!5663))

(assert (= (and b!67479 res!36448) b!67473))

(assert (= (and b!67473 c!9411) b!67475))

(assert (= (and b!67473 (not c!9411)) b!67474))

(assert (= (and b!67475 res!36449) b!67480))

(assert (= (or b!67475 b!67474) bm!5664))

(declare-fun b_lambda!3023 () Bool)

(assert (=> (not b_lambda!3023) (not b!67489)))

(assert (=> b!67489 t!4984))

(declare-fun b_and!4157 () Bool)

(assert (= b_and!4153 (and (=> t!4984 result!2595) b_and!4157)))

(assert (=> b!67489 t!4986))

(declare-fun b_and!4159 () Bool)

(assert (= b_and!4155 (and (=> t!4986 result!2597) b_and!4159)))

(declare-fun m!62487 () Bool)

(assert (=> bm!5663 m!62487))

(declare-fun m!62489 () Bool)

(assert (=> b!67489 m!62489))

(assert (=> b!67489 m!61115))

(declare-fun m!62491 () Bool)

(assert (=> b!67489 m!62491))

(assert (=> b!67489 m!62371))

(assert (=> b!67489 m!62371))

(declare-fun m!62493 () Bool)

(assert (=> b!67489 m!62493))

(assert (=> b!67489 m!62489))

(assert (=> b!67489 m!61115))

(assert (=> b!67488 m!62371))

(assert (=> b!67488 m!62371))

(declare-fun m!62495 () Bool)

(assert (=> b!67488 m!62495))

(declare-fun m!62497 () Bool)

(assert (=> b!67486 m!62497))

(assert (=> b!67485 m!62371))

(assert (=> b!67485 m!62371))

(assert (=> b!67485 m!62373))

(declare-fun m!62499 () Bool)

(assert (=> b!67480 m!62499))

(assert (=> d!14171 m!61069))

(declare-fun m!62501 () Bool)

(assert (=> b!67470 m!62501))

(declare-fun m!62503 () Bool)

(assert (=> bm!5658 m!62503))

(declare-fun m!62505 () Bool)

(assert (=> bm!5661 m!62505))

(declare-fun m!62507 () Bool)

(assert (=> b!67476 m!62507))

(declare-fun m!62509 () Bool)

(assert (=> b!67476 m!62509))

(declare-fun m!62511 () Bool)

(assert (=> b!67476 m!62511))

(declare-fun m!62513 () Bool)

(assert (=> b!67476 m!62513))

(declare-fun m!62515 () Bool)

(assert (=> b!67476 m!62515))

(declare-fun m!62517 () Bool)

(assert (=> b!67476 m!62517))

(declare-fun m!62519 () Bool)

(assert (=> b!67476 m!62519))

(assert (=> b!67476 m!62513))

(declare-fun m!62521 () Bool)

(assert (=> b!67476 m!62521))

(assert (=> b!67476 m!62503))

(declare-fun m!62523 () Bool)

(assert (=> b!67476 m!62523))

(declare-fun m!62525 () Bool)

(assert (=> b!67476 m!62525))

(assert (=> b!67476 m!62517))

(declare-fun m!62527 () Bool)

(assert (=> b!67476 m!62527))

(assert (=> b!67476 m!62507))

(declare-fun m!62529 () Bool)

(assert (=> b!67476 m!62529))

(declare-fun m!62531 () Bool)

(assert (=> b!67476 m!62531))

(assert (=> b!67476 m!62371))

(assert (=> b!67476 m!62529))

(declare-fun m!62533 () Bool)

(assert (=> b!67476 m!62533))

(declare-fun m!62535 () Bool)

(assert (=> b!67476 m!62535))

(assert (=> b!67477 m!62371))

(assert (=> b!67477 m!62371))

(assert (=> b!67477 m!62373))

(declare-fun m!62537 () Bool)

(assert (=> bm!5664 m!62537))

(assert (=> d!13899 d!14171))

(declare-fun b!67490 () Bool)

(declare-fun e!44247 () Bool)

(declare-fun call!5668 () Bool)

(assert (=> b!67490 (= e!44247 call!5668)))

(declare-fun b!67491 () Bool)

(declare-fun e!44248 () Bool)

(assert (=> b!67491 (= e!44248 e!44247)))

(declare-fun c!9417 () Bool)

(assert (=> b!67491 (= c!9417 (validKeyInArray!0 (select (arr!1834 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16)))) lt!29076)))))

(declare-fun b!67493 () Bool)

(declare-fun e!44246 () Bool)

(assert (=> b!67493 (= e!44246 e!44248)))

(declare-fun res!36451 () Bool)

(assert (=> b!67493 (=> (not res!36451) (not e!44248))))

(declare-fun e!44249 () Bool)

(assert (=> b!67493 (= res!36451 (not e!44249))))

(declare-fun res!36453 () Bool)

(assert (=> b!67493 (=> (not res!36453) (not e!44249))))

(assert (=> b!67493 (= res!36453 (validKeyInArray!0 (select (arr!1834 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16)))) lt!29076)))))

(declare-fun bm!5665 () Bool)

(assert (=> bm!5665 (= call!5668 (arrayNoDuplicates!0 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) (bvadd lt!29076 #b00000000000000000000000000000001) (ite c!9417 (Cons!1487 (select (arr!1834 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16)))) lt!29076) lt!29073) lt!29073)))))

(declare-fun b!67494 () Bool)

(assert (=> b!67494 (= e!44249 (contains!719 lt!29073 (select (arr!1834 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16)))) lt!29076)))))

(declare-fun b!67492 () Bool)

(assert (=> b!67492 (= e!44247 call!5668)))

(declare-fun d!14173 () Bool)

(declare-fun res!36452 () Bool)

(assert (=> d!14173 (=> res!36452 e!44246)))

(assert (=> d!14173 (= res!36452 (bvsge lt!29076 (size!2069 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))))))))

(assert (=> d!14173 (= (arrayNoDuplicates!0 (array!3841 (store (arr!1834 (_keys!3787 newMap!16)) (ite c!9206 (index!3103 lt!28760) (index!3100 lt!28760)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (size!2069 (_keys!3787 newMap!16))) lt!29076 lt!29073) e!44246)))

(assert (= (and d!14173 (not res!36452)) b!67493))

(assert (= (and b!67493 res!36453) b!67494))

(assert (= (and b!67493 res!36451) b!67491))

(assert (= (and b!67491 c!9417) b!67492))

(assert (= (and b!67491 (not c!9417)) b!67490))

(assert (= (or b!67492 b!67490) bm!5665))

(declare-fun m!62539 () Bool)

(assert (=> b!67491 m!62539))

(assert (=> b!67491 m!62539))

(declare-fun m!62541 () Bool)

(assert (=> b!67491 m!62541))

(assert (=> b!67493 m!62539))

(assert (=> b!67493 m!62539))

(assert (=> b!67493 m!62541))

(assert (=> bm!5665 m!62539))

(declare-fun m!62543 () Bool)

(assert (=> bm!5665 m!62543))

(assert (=> b!67494 m!62539))

(assert (=> b!67494 m!62539))

(declare-fun m!62545 () Bool)

(assert (=> b!67494 m!62545))

(assert (=> d!13899 d!14173))

(assert (=> d!13881 d!13879))

(declare-fun d!14175 () Bool)

(assert (=> d!14175 (= (getValueByKey!129 lt!28658 (_1!1064 lt!28503)) (Some!134 (_2!1064 lt!28503)))))

(assert (=> d!14175 true))

(declare-fun _$22!369 () Unit!1836)

(assert (=> d!14175 (= (choose!376 lt!28658 (_1!1064 lt!28503) (_2!1064 lt!28503)) _$22!369)))

(declare-fun bs!2888 () Bool)

(assert (= bs!2888 d!14175))

(assert (=> bs!2888 m!60951))

(assert (=> d!13881 d!14175))

(declare-fun d!14177 () Bool)

(declare-fun res!36454 () Bool)

(declare-fun e!44250 () Bool)

(assert (=> d!14177 (=> res!36454 e!44250)))

(assert (=> d!14177 (= res!36454 (or ((_ is Nil!1487) lt!28658) ((_ is Nil!1487) (t!4976 lt!28658))))))

(assert (=> d!14177 (= (isStrictlySorted!284 lt!28658) e!44250)))

(declare-fun b!67495 () Bool)

(declare-fun e!44251 () Bool)

(assert (=> b!67495 (= e!44250 e!44251)))

(declare-fun res!36455 () Bool)

(assert (=> b!67495 (=> (not res!36455) (not e!44251))))

(assert (=> b!67495 (= res!36455 (bvslt (_1!1064 (h!2070 lt!28658)) (_1!1064 (h!2070 (t!4976 lt!28658)))))))

(declare-fun b!67496 () Bool)

(assert (=> b!67496 (= e!44251 (isStrictlySorted!284 (t!4976 lt!28658)))))

(assert (= (and d!14177 (not res!36454)) b!67495))

(assert (= (and b!67495 res!36455) b!67496))

(declare-fun m!62547 () Bool)

(assert (=> b!67496 m!62547))

(assert (=> d!13881 d!14177))

(declare-fun d!14179 () Bool)

(declare-fun e!44253 () Bool)

(assert (=> d!14179 e!44253))

(declare-fun res!36456 () Bool)

(assert (=> d!14179 (=> res!36456 e!44253)))

(declare-fun lt!29320 () Bool)

(assert (=> d!14179 (= res!36456 (not lt!29320))))

(declare-fun lt!29317 () Bool)

(assert (=> d!14179 (= lt!29320 lt!29317)))

(declare-fun lt!29318 () Unit!1836)

(declare-fun e!44252 () Unit!1836)

(assert (=> d!14179 (= lt!29318 e!44252)))

(declare-fun c!9418 () Bool)

(assert (=> d!14179 (= c!9418 lt!29317)))

(assert (=> d!14179 (= lt!29317 (containsKey!133 (toList!723 lt!28798) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14179 (= (contains!716 lt!28798 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29320)))

(declare-fun b!67497 () Bool)

(declare-fun lt!29319 () Unit!1836)

(assert (=> b!67497 (= e!44252 lt!29319)))

(assert (=> b!67497 (= lt!29319 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28798) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67497 (isDefined!83 (getValueByKey!129 (toList!723 lt!28798) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67498 () Bool)

(declare-fun Unit!1880 () Unit!1836)

(assert (=> b!67498 (= e!44252 Unit!1880)))

(declare-fun b!67499 () Bool)

(assert (=> b!67499 (= e!44253 (isDefined!83 (getValueByKey!129 (toList!723 lt!28798) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14179 c!9418) b!67497))

(assert (= (and d!14179 (not c!9418)) b!67498))

(assert (= (and d!14179 (not res!36456)) b!67499))

(declare-fun m!62549 () Bool)

(assert (=> d!14179 m!62549))

(declare-fun m!62551 () Bool)

(assert (=> b!67497 m!62551))

(declare-fun m!62553 () Bool)

(assert (=> b!67497 m!62553))

(assert (=> b!67497 m!62553))

(declare-fun m!62555 () Bool)

(assert (=> b!67497 m!62555))

(assert (=> b!67499 m!62553))

(assert (=> b!67499 m!62553))

(assert (=> b!67499 m!62555))

(assert (=> bm!5574 d!14179))

(assert (=> b!66910 d!13741))

(declare-fun d!14181 () Bool)

(declare-fun e!44255 () Bool)

(assert (=> d!14181 e!44255))

(declare-fun res!36457 () Bool)

(assert (=> d!14181 (=> res!36457 e!44255)))

(declare-fun lt!29324 () Bool)

(assert (=> d!14181 (= res!36457 (not lt!29324))))

(declare-fun lt!29321 () Bool)

(assert (=> d!14181 (= lt!29324 lt!29321)))

(declare-fun lt!29322 () Unit!1836)

(declare-fun e!44254 () Unit!1836)

(assert (=> d!14181 (= lt!29322 e!44254)))

(declare-fun c!9419 () Bool)

(assert (=> d!14181 (= c!9419 lt!29321)))

(assert (=> d!14181 (= lt!29321 (containsKey!133 (toList!723 (map!1143 (_2!1065 lt!29055))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> d!14181 (= (contains!716 (map!1143 (_2!1065 lt!29055)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) lt!29324)))

(declare-fun b!67500 () Bool)

(declare-fun lt!29323 () Unit!1836)

(assert (=> b!67500 (= e!44254 lt!29323)))

(assert (=> b!67500 (= lt!29323 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 (map!1143 (_2!1065 lt!29055))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> b!67500 (isDefined!83 (getValueByKey!129 (toList!723 (map!1143 (_2!1065 lt!29055))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun b!67501 () Bool)

(declare-fun Unit!1881 () Unit!1836)

(assert (=> b!67501 (= e!44254 Unit!1881)))

(declare-fun b!67502 () Bool)

(assert (=> b!67502 (= e!44255 (isDefined!83 (getValueByKey!129 (toList!723 (map!1143 (_2!1065 lt!29055))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))))

(assert (= (and d!14181 c!9419) b!67500))

(assert (= (and d!14181 (not c!9419)) b!67501))

(assert (= (and d!14181 (not res!36457)) b!67502))

(assert (=> d!14181 m!60719))

(declare-fun m!62557 () Bool)

(assert (=> d!14181 m!62557))

(assert (=> b!67500 m!60719))

(declare-fun m!62559 () Bool)

(assert (=> b!67500 m!62559))

(assert (=> b!67500 m!60719))

(declare-fun m!62561 () Bool)

(assert (=> b!67500 m!62561))

(assert (=> b!67500 m!62561))

(declare-fun m!62563 () Bool)

(assert (=> b!67500 m!62563))

(assert (=> b!67502 m!60719))

(assert (=> b!67502 m!62561))

(assert (=> b!67502 m!62561))

(assert (=> b!67502 m!62563))

(assert (=> b!67113 d!14181))

(assert (=> b!67113 d!14025))

(declare-fun d!14183 () Bool)

(assert (=> d!14183 (isDefined!83 (getValueByKey!129 (toList!723 lt!28634) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!29325 () Unit!1836)

(assert (=> d!14183 (= lt!29325 (choose!378 (toList!723 lt!28634) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44256 () Bool)

(assert (=> d!14183 e!44256))

(declare-fun res!36458 () Bool)

(assert (=> d!14183 (=> (not res!36458) (not e!44256))))

(assert (=> d!14183 (= res!36458 (isStrictlySorted!284 (toList!723 lt!28634)))))

(assert (=> d!14183 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28634) #b1000000000000000000000000000000000000000000000000000000000000000) lt!29325)))

(declare-fun b!67503 () Bool)

(assert (=> b!67503 (= e!44256 (containsKey!133 (toList!723 lt!28634) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14183 res!36458) b!67503))

(assert (=> d!14183 m!61801))

(assert (=> d!14183 m!61801))

(assert (=> d!14183 m!61803))

(declare-fun m!62565 () Bool)

(assert (=> d!14183 m!62565))

(assert (=> d!14183 m!62033))

(assert (=> b!67503 m!61797))

(assert (=> b!67146 d!14183))

(assert (=> b!67146 d!13967))

(assert (=> b!67146 d!13969))

(declare-fun d!14185 () Bool)

(declare-fun e!44258 () Bool)

(assert (=> d!14185 e!44258))

(declare-fun res!36459 () Bool)

(assert (=> d!14185 (=> res!36459 e!44258)))

(declare-fun lt!29329 () Bool)

(assert (=> d!14185 (= res!36459 (not lt!29329))))

(declare-fun lt!29326 () Bool)

(assert (=> d!14185 (= lt!29329 lt!29326)))

(declare-fun lt!29327 () Unit!1836)

(declare-fun e!44257 () Unit!1836)

(assert (=> d!14185 (= lt!29327 e!44257)))

(declare-fun c!9420 () Bool)

(assert (=> d!14185 (= c!9420 lt!29326)))

(assert (=> d!14185 (= lt!29326 (containsKey!133 (toList!723 lt!28964) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!14185 (= (contains!716 lt!28964 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) lt!29329)))

(declare-fun b!67504 () Bool)

(declare-fun lt!29328 () Unit!1836)

(assert (=> b!67504 (= e!44257 lt!29328)))

(assert (=> b!67504 (= lt!29328 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28964) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67504 (isDefined!83 (getValueByKey!129 (toList!723 lt!28964) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67505 () Bool)

(declare-fun Unit!1882 () Unit!1836)

(assert (=> b!67505 (= e!44257 Unit!1882)))

(declare-fun b!67506 () Bool)

(assert (=> b!67506 (= e!44258 (isDefined!83 (getValueByKey!129 (toList!723 lt!28964) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!14185 c!9420) b!67504))

(assert (= (and d!14185 (not c!9420)) b!67505))

(assert (= (and d!14185 (not res!36459)) b!67506))

(assert (=> d!14185 m!61079))

(declare-fun m!62567 () Bool)

(assert (=> d!14185 m!62567))

(assert (=> b!67504 m!61079))

(declare-fun m!62569 () Bool)

(assert (=> b!67504 m!62569))

(assert (=> b!67504 m!61079))

(assert (=> b!67504 m!61937))

(assert (=> b!67504 m!61937))

(declare-fun m!62571 () Bool)

(assert (=> b!67504 m!62571))

(assert (=> b!67506 m!61079))

(assert (=> b!67506 m!61937))

(assert (=> b!67506 m!61937))

(assert (=> b!67506 m!62571))

(assert (=> b!67014 d!14185))

(declare-fun d!14187 () Bool)

(assert (=> d!14187 (= (get!1130 (getValueByKey!129 (toList!723 lt!28611) lt!28598)) (v!2483 (getValueByKey!129 (toList!723 lt!28611) lt!28598)))))

(assert (=> d!13845 d!14187))

(declare-fun b!67508 () Bool)

(declare-fun e!44259 () Option!135)

(declare-fun e!44260 () Option!135)

(assert (=> b!67508 (= e!44259 e!44260)))

(declare-fun c!9422 () Bool)

(assert (=> b!67508 (= c!9422 (and ((_ is Cons!1486) (toList!723 lt!28611)) (not (= (_1!1064 (h!2070 (toList!723 lt!28611))) lt!28598))))))

(declare-fun d!14189 () Bool)

(declare-fun c!9421 () Bool)

(assert (=> d!14189 (= c!9421 (and ((_ is Cons!1486) (toList!723 lt!28611)) (= (_1!1064 (h!2070 (toList!723 lt!28611))) lt!28598)))))

(assert (=> d!14189 (= (getValueByKey!129 (toList!723 lt!28611) lt!28598) e!44259)))

(declare-fun b!67509 () Bool)

(assert (=> b!67509 (= e!44260 (getValueByKey!129 (t!4976 (toList!723 lt!28611)) lt!28598))))

(declare-fun b!67507 () Bool)

(assert (=> b!67507 (= e!44259 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28611)))))))

(declare-fun b!67510 () Bool)

(assert (=> b!67510 (= e!44260 None!133)))

(assert (= (and d!14189 c!9421) b!67507))

(assert (= (and d!14189 (not c!9421)) b!67508))

(assert (= (and b!67508 c!9422) b!67509))

(assert (= (and b!67508 (not c!9422)) b!67510))

(declare-fun m!62573 () Bool)

(assert (=> b!67509 m!62573))

(assert (=> d!13845 d!14189))

(declare-fun d!14191 () Bool)

(declare-fun res!36460 () Bool)

(declare-fun e!44261 () Bool)

(assert (=> d!14191 (=> res!36460 e!44261)))

(assert (=> d!14191 (= res!36460 (and ((_ is Cons!1486) (toList!723 lt!28612)) (= (_1!1064 (h!2070 (toList!723 lt!28612))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14191 (= (containsKey!133 (toList!723 lt!28612) #b1000000000000000000000000000000000000000000000000000000000000000) e!44261)))

(declare-fun b!67511 () Bool)

(declare-fun e!44262 () Bool)

(assert (=> b!67511 (= e!44261 e!44262)))

(declare-fun res!36461 () Bool)

(assert (=> b!67511 (=> (not res!36461) (not e!44262))))

(assert (=> b!67511 (= res!36461 (and (or (not ((_ is Cons!1486) (toList!723 lt!28612))) (bvsle (_1!1064 (h!2070 (toList!723 lt!28612))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1486) (toList!723 lt!28612)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28612))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67512 () Bool)

(assert (=> b!67512 (= e!44262 (containsKey!133 (t!4976 (toList!723 lt!28612)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14191 (not res!36460)) b!67511))

(assert (= (and b!67511 res!36461) b!67512))

(declare-fun m!62575 () Bool)

(assert (=> b!67512 m!62575))

(assert (=> d!13745 d!14191))

(declare-fun d!14193 () Bool)

(assert (=> d!14193 (= (isDefined!83 (getValueByKey!129 (toList!723 call!5557) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))) (not (isEmpty!314 (getValueByKey!129 (toList!723 call!5557) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))))

(declare-fun bs!2889 () Bool)

(assert (= bs!2889 d!14193))

(assert (=> bs!2889 m!61767))

(declare-fun m!62577 () Bool)

(assert (=> bs!2889 m!62577))

(assert (=> b!67125 d!14193))

(declare-fun b!67514 () Bool)

(declare-fun e!44263 () Option!135)

(declare-fun e!44264 () Option!135)

(assert (=> b!67514 (= e!44263 e!44264)))

(declare-fun c!9424 () Bool)

(assert (=> b!67514 (= c!9424 (and ((_ is Cons!1486) (toList!723 call!5557)) (not (= (_1!1064 (h!2070 (toList!723 call!5557))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))))

(declare-fun d!14195 () Bool)

(declare-fun c!9423 () Bool)

(assert (=> d!14195 (= c!9423 (and ((_ is Cons!1486) (toList!723 call!5557)) (= (_1!1064 (h!2070 (toList!723 call!5557))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))))

(assert (=> d!14195 (= (getValueByKey!129 (toList!723 call!5557) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) e!44263)))

(declare-fun b!67515 () Bool)

(assert (=> b!67515 (= e!44264 (getValueByKey!129 (t!4976 (toList!723 call!5557)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun b!67513 () Bool)

(assert (=> b!67513 (= e!44263 (Some!134 (_2!1064 (h!2070 (toList!723 call!5557)))))))

(declare-fun b!67516 () Bool)

(assert (=> b!67516 (= e!44264 None!133)))

(assert (= (and d!14195 c!9423) b!67513))

(assert (= (and d!14195 (not c!9423)) b!67514))

(assert (= (and b!67514 c!9424) b!67515))

(assert (= (and b!67514 (not c!9424)) b!67516))

(assert (=> b!67515 m!60719))

(declare-fun m!62579 () Bool)

(assert (=> b!67515 m!62579))

(assert (=> b!67125 d!14195))

(declare-fun d!14197 () Bool)

(declare-fun res!36462 () Bool)

(declare-fun e!44265 () Bool)

(assert (=> d!14197 (=> res!36462 e!44265)))

(assert (=> d!14197 (= res!36462 (or ((_ is Nil!1487) lt!28971) ((_ is Nil!1487) (t!4976 lt!28971))))))

(assert (=> d!14197 (= (isStrictlySorted!284 lt!28971) e!44265)))

(declare-fun b!67517 () Bool)

(declare-fun e!44266 () Bool)

(assert (=> b!67517 (= e!44265 e!44266)))

(declare-fun res!36463 () Bool)

(assert (=> b!67517 (=> (not res!36463) (not e!44266))))

(assert (=> b!67517 (= res!36463 (bvslt (_1!1064 (h!2070 lt!28971)) (_1!1064 (h!2070 (t!4976 lt!28971)))))))

(declare-fun b!67518 () Bool)

(assert (=> b!67518 (= e!44266 (isStrictlySorted!284 (t!4976 lt!28971)))))

(assert (= (and d!14197 (not res!36462)) b!67517))

(assert (= (and b!67517 res!36463) b!67518))

(declare-fun m!62581 () Bool)

(assert (=> b!67518 m!62581))

(assert (=> d!13883 d!14197))

(assert (=> d!13883 d!14039))

(declare-fun d!14199 () Bool)

(assert (=> d!14199 (= (get!1128 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2478 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66865 d!14199))

(declare-fun d!14201 () Bool)

(declare-fun e!44267 () Bool)

(assert (=> d!14201 e!44267))

(declare-fun res!36465 () Bool)

(assert (=> d!14201 (=> (not res!36465) (not e!44267))))

(declare-fun lt!29331 () ListLongMap!1415)

(assert (=> d!14201 (= res!36465 (contains!716 lt!29331 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(declare-fun lt!29333 () List!1490)

(assert (=> d!14201 (= lt!29331 (ListLongMap!1416 lt!29333))))

(declare-fun lt!29332 () Unit!1836)

(declare-fun lt!29330 () Unit!1836)

(assert (=> d!14201 (= lt!29332 lt!29330)))

(assert (=> d!14201 (= (getValueByKey!129 lt!29333 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(assert (=> d!14201 (= lt!29330 (lemmaContainsTupThenGetReturnValue!48 lt!29333 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))) (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(assert (=> d!14201 (= lt!29333 (insertStrictlySorted!50 (toList!723 call!5604) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))) (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(assert (=> d!14201 (= (+!87 call!5604 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))) lt!29331)))

(declare-fun b!67519 () Bool)

(declare-fun res!36464 () Bool)

(assert (=> b!67519 (=> (not res!36464) (not e!44267))))

(assert (=> b!67519 (= res!36464 (= (getValueByKey!129 (toList!723 lt!29331) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(declare-fun b!67520 () Bool)

(assert (=> b!67520 (= e!44267 (contains!718 (toList!723 lt!29331) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))

(assert (= (and d!14201 res!36465) b!67519))

(assert (= (and b!67519 res!36464) b!67520))

(declare-fun m!62583 () Bool)

(assert (=> d!14201 m!62583))

(declare-fun m!62585 () Bool)

(assert (=> d!14201 m!62585))

(declare-fun m!62587 () Bool)

(assert (=> d!14201 m!62587))

(declare-fun m!62589 () Bool)

(assert (=> d!14201 m!62589))

(declare-fun m!62591 () Bool)

(assert (=> b!67519 m!62591))

(declare-fun m!62593 () Bool)

(assert (=> b!67520 m!62593))

(assert (=> b!66975 d!14201))

(declare-fun d!14203 () Bool)

(declare-fun e!44269 () Bool)

(assert (=> d!14203 e!44269))

(declare-fun res!36466 () Bool)

(assert (=> d!14203 (=> res!36466 e!44269)))

(declare-fun lt!29337 () Bool)

(assert (=> d!14203 (= res!36466 (not lt!29337))))

(declare-fun lt!29334 () Bool)

(assert (=> d!14203 (= lt!29337 lt!29334)))

(declare-fun lt!29335 () Unit!1836)

(declare-fun e!44268 () Unit!1836)

(assert (=> d!14203 (= lt!29335 e!44268)))

(declare-fun c!9425 () Bool)

(assert (=> d!14203 (= c!9425 lt!29334)))

(assert (=> d!14203 (= lt!29334 (containsKey!133 (toList!723 lt!29108) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!14203 (= (contains!716 lt!29108 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29337)))

(declare-fun b!67521 () Bool)

(declare-fun lt!29336 () Unit!1836)

(assert (=> b!67521 (= e!44268 lt!29336)))

(assert (=> b!67521 (= lt!29336 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!29108) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> b!67521 (isDefined!83 (getValueByKey!129 (toList!723 lt!29108) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67522 () Bool)

(declare-fun Unit!1883 () Unit!1836)

(assert (=> b!67522 (= e!44268 Unit!1883)))

(declare-fun b!67523 () Bool)

(assert (=> b!67523 (= e!44269 (isDefined!83 (getValueByKey!129 (toList!723 lt!29108) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14203 c!9425) b!67521))

(assert (= (and d!14203 (not c!9425)) b!67522))

(assert (= (and d!14203 (not res!36466)) b!67523))

(declare-fun m!62595 () Bool)

(assert (=> d!14203 m!62595))

(declare-fun m!62597 () Bool)

(assert (=> b!67521 m!62597))

(assert (=> b!67521 m!61833))

(assert (=> b!67521 m!61833))

(declare-fun m!62599 () Bool)

(assert (=> b!67521 m!62599))

(assert (=> b!67523 m!61833))

(assert (=> b!67523 m!61833))

(assert (=> b!67523 m!62599))

(assert (=> d!13931 d!14203))

(declare-fun b!67525 () Bool)

(declare-fun e!44270 () Option!135)

(declare-fun e!44271 () Option!135)

(assert (=> b!67525 (= e!44270 e!44271)))

(declare-fun c!9427 () Bool)

(assert (=> b!67525 (= c!9427 (and ((_ is Cons!1486) lt!29110) (not (= (_1!1064 (h!2070 lt!29110)) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun d!14205 () Bool)

(declare-fun c!9426 () Bool)

(assert (=> d!14205 (= c!9426 (and ((_ is Cons!1486) lt!29110) (= (_1!1064 (h!2070 lt!29110)) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14205 (= (getValueByKey!129 lt!29110 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) e!44270)))

(declare-fun b!67526 () Bool)

(assert (=> b!67526 (= e!44271 (getValueByKey!129 (t!4976 lt!29110) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67524 () Bool)

(assert (=> b!67524 (= e!44270 (Some!134 (_2!1064 (h!2070 lt!29110))))))

(declare-fun b!67527 () Bool)

(assert (=> b!67527 (= e!44271 None!133)))

(assert (= (and d!14205 c!9426) b!67524))

(assert (= (and d!14205 (not c!9426)) b!67525))

(assert (= (and b!67525 c!9427) b!67526))

(assert (= (and b!67525 (not c!9427)) b!67527))

(declare-fun m!62601 () Bool)

(assert (=> b!67526 m!62601))

(assert (=> d!13931 d!14205))

(declare-fun d!14207 () Bool)

(assert (=> d!14207 (= (getValueByKey!129 lt!29110 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun lt!29338 () Unit!1836)

(assert (=> d!14207 (= lt!29338 (choose!376 lt!29110 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun e!44272 () Bool)

(assert (=> d!14207 e!44272))

(declare-fun res!36467 () Bool)

(assert (=> d!14207 (=> (not res!36467) (not e!44272))))

(assert (=> d!14207 (= res!36467 (isStrictlySorted!284 lt!29110))))

(assert (=> d!14207 (= (lemmaContainsTupThenGetReturnValue!48 lt!29110 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29338)))

(declare-fun b!67528 () Bool)

(declare-fun res!36468 () Bool)

(assert (=> b!67528 (=> (not res!36468) (not e!44272))))

(assert (=> b!67528 (= res!36468 (containsKey!133 lt!29110 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67529 () Bool)

(assert (=> b!67529 (= e!44272 (contains!718 lt!29110 (tuple2!2109 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14207 res!36467) b!67528))

(assert (= (and b!67528 res!36468) b!67529))

(assert (=> d!14207 m!61827))

(declare-fun m!62603 () Bool)

(assert (=> d!14207 m!62603))

(declare-fun m!62605 () Bool)

(assert (=> d!14207 m!62605))

(declare-fun m!62607 () Bool)

(assert (=> b!67528 m!62607))

(declare-fun m!62609 () Bool)

(assert (=> b!67529 m!62609))

(assert (=> d!13931 d!14207))

(declare-fun b!67530 () Bool)

(declare-fun e!44274 () List!1490)

(declare-fun call!5670 () List!1490)

(assert (=> b!67530 (= e!44274 call!5670)))

(declare-fun b!67531 () Bool)

(declare-fun e!44273 () List!1490)

(declare-fun call!5669 () List!1490)

(assert (=> b!67531 (= e!44273 call!5669)))

(declare-fun bm!5666 () Bool)

(declare-fun call!5671 () List!1490)

(assert (=> bm!5666 (= call!5669 call!5671)))

(declare-fun bm!5667 () Bool)

(declare-fun e!44277 () List!1490)

(declare-fun c!9429 () Bool)

(assert (=> bm!5667 (= call!5670 ($colon$colon!62 e!44277 (ite c!9429 (h!2070 (toList!723 (+!87 lt!28505 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))) (tuple2!2109 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun c!9431 () Bool)

(assert (=> bm!5667 (= c!9431 c!9429)))

(declare-fun d!14209 () Bool)

(declare-fun e!44275 () Bool)

(assert (=> d!14209 e!44275))

(declare-fun res!36470 () Bool)

(assert (=> d!14209 (=> (not res!36470) (not e!44275))))

(declare-fun lt!29339 () List!1490)

(assert (=> d!14209 (= res!36470 (isStrictlySorted!284 lt!29339))))

(assert (=> d!14209 (= lt!29339 e!44274)))

(assert (=> d!14209 (= c!9429 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28505 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))) (bvslt (_1!1064 (h!2070 (toList!723 (+!87 lt!28505 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14209 (isStrictlySorted!284 (toList!723 (+!87 lt!28505 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!14209 (= (insertStrictlySorted!50 (toList!723 (+!87 lt!28505 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29339)))

(declare-fun bm!5668 () Bool)

(assert (=> bm!5668 (= call!5671 call!5670)))

(declare-fun b!67532 () Bool)

(assert (=> b!67532 (= e!44277 (insertStrictlySorted!50 (t!4976 (toList!723 (+!87 lt!28505 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun c!9430 () Bool)

(declare-fun b!67533 () Bool)

(assert (=> b!67533 (= c!9430 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28505 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))) (bvsgt (_1!1064 (h!2070 (toList!723 (+!87 lt!28505 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun e!44276 () List!1490)

(assert (=> b!67533 (= e!44276 e!44273)))

(declare-fun b!67534 () Bool)

(assert (=> b!67534 (= e!44276 call!5671)))

(declare-fun b!67535 () Bool)

(declare-fun res!36469 () Bool)

(assert (=> b!67535 (=> (not res!36469) (not e!44275))))

(assert (=> b!67535 (= res!36469 (containsKey!133 lt!29339 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67536 () Bool)

(assert (=> b!67536 (= e!44273 call!5669)))

(declare-fun c!9428 () Bool)

(declare-fun b!67537 () Bool)

(assert (=> b!67537 (= e!44277 (ite c!9428 (t!4976 (toList!723 (+!87 lt!28505 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))) (ite c!9430 (Cons!1486 (h!2070 (toList!723 (+!87 lt!28505 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))) (t!4976 (toList!723 (+!87 lt!28505 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))) Nil!1487)))))

(declare-fun b!67538 () Bool)

(assert (=> b!67538 (= e!44275 (contains!718 lt!29339 (tuple2!2109 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!67539 () Bool)

(assert (=> b!67539 (= e!44274 e!44276)))

(assert (=> b!67539 (= c!9428 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28505 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))) (= (_1!1064 (h!2070 (toList!723 (+!87 lt!28505 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14209 c!9429) b!67530))

(assert (= (and d!14209 (not c!9429)) b!67539))

(assert (= (and b!67539 c!9428) b!67534))

(assert (= (and b!67539 (not c!9428)) b!67533))

(assert (= (and b!67533 c!9430) b!67536))

(assert (= (and b!67533 (not c!9430)) b!67531))

(assert (= (or b!67536 b!67531) bm!5666))

(assert (= (or b!67534 bm!5666) bm!5668))

(assert (= (or b!67530 bm!5668) bm!5667))

(assert (= (and bm!5667 c!9431) b!67532))

(assert (= (and bm!5667 (not c!9431)) b!67537))

(assert (= (and d!14209 res!36470) b!67535))

(assert (= (and b!67535 res!36469) b!67538))

(declare-fun m!62611 () Bool)

(assert (=> bm!5667 m!62611))

(declare-fun m!62613 () Bool)

(assert (=> d!14209 m!62613))

(declare-fun m!62615 () Bool)

(assert (=> d!14209 m!62615))

(declare-fun m!62617 () Bool)

(assert (=> b!67535 m!62617))

(declare-fun m!62619 () Bool)

(assert (=> b!67532 m!62619))

(declare-fun m!62621 () Bool)

(assert (=> b!67538 m!62621))

(assert (=> d!13931 d!14209))

(declare-fun b!67541 () Bool)

(declare-fun e!44278 () Option!135)

(declare-fun e!44279 () Option!135)

(assert (=> b!67541 (= e!44278 e!44279)))

(declare-fun c!9433 () Bool)

(assert (=> b!67541 (= c!9433 (and ((_ is Cons!1486) (toList!723 lt!29108)) (not (= (_1!1064 (h!2070 (toList!723 lt!29108))) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun d!14211 () Bool)

(declare-fun c!9432 () Bool)

(assert (=> d!14211 (= c!9432 (and ((_ is Cons!1486) (toList!723 lt!29108)) (= (_1!1064 (h!2070 (toList!723 lt!29108))) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14211 (= (getValueByKey!129 (toList!723 lt!29108) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) e!44278)))

(declare-fun b!67542 () Bool)

(assert (=> b!67542 (= e!44279 (getValueByKey!129 (t!4976 (toList!723 lt!29108)) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67540 () Bool)

(assert (=> b!67540 (= e!44278 (Some!134 (_2!1064 (h!2070 (toList!723 lt!29108)))))))

(declare-fun b!67543 () Bool)

(assert (=> b!67543 (= e!44279 None!133)))

(assert (= (and d!14211 c!9432) b!67540))

(assert (= (and d!14211 (not c!9432)) b!67541))

(assert (= (and b!67541 c!9433) b!67542))

(assert (= (and b!67541 (not c!9433)) b!67543))

(declare-fun m!62623 () Bool)

(assert (=> b!67542 m!62623))

(assert (=> b!67156 d!14211))

(declare-fun d!14213 () Bool)

(declare-fun res!36471 () Bool)

(declare-fun e!44280 () Bool)

(assert (=> d!14213 (=> res!36471 e!44280)))

(assert (=> d!14213 (= res!36471 (and ((_ is Cons!1486) lt!28863) (= (_1!1064 (h!2070 lt!28863)) (_1!1064 lt!28500))))))

(assert (=> d!14213 (= (containsKey!133 lt!28863 (_1!1064 lt!28500)) e!44280)))

(declare-fun b!67544 () Bool)

(declare-fun e!44281 () Bool)

(assert (=> b!67544 (= e!44280 e!44281)))

(declare-fun res!36472 () Bool)

(assert (=> b!67544 (=> (not res!36472) (not e!44281))))

(assert (=> b!67544 (= res!36472 (and (or (not ((_ is Cons!1486) lt!28863)) (bvsle (_1!1064 (h!2070 lt!28863)) (_1!1064 lt!28500))) ((_ is Cons!1486) lt!28863) (bvslt (_1!1064 (h!2070 lt!28863)) (_1!1064 lt!28500))))))

(declare-fun b!67545 () Bool)

(assert (=> b!67545 (= e!44281 (containsKey!133 (t!4976 lt!28863) (_1!1064 lt!28500)))))

(assert (= (and d!14213 (not res!36471)) b!67544))

(assert (= (and b!67544 res!36472) b!67545))

(declare-fun m!62625 () Bool)

(assert (=> b!67545 m!62625))

(assert (=> b!66903 d!14213))

(declare-fun d!14215 () Bool)

(declare-fun res!36473 () Bool)

(declare-fun e!44282 () Bool)

(assert (=> d!14215 (=> res!36473 e!44282)))

(assert (=> d!14215 (= res!36473 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))) (= (_1!1064 (h!2070 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))) lt!28600)))))

(assert (=> d!14215 (= (containsKey!133 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28600) e!44282)))

(declare-fun b!67546 () Bool)

(declare-fun e!44283 () Bool)

(assert (=> b!67546 (= e!44282 e!44283)))

(declare-fun res!36474 () Bool)

(assert (=> b!67546 (=> (not res!36474) (not e!44283))))

(assert (=> b!67546 (= res!36474 (and (or (not ((_ is Cons!1486) (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))) (bvsle (_1!1064 (h!2070 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))) lt!28600)) ((_ is Cons!1486) (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))) (bvslt (_1!1064 (h!2070 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))) lt!28600)))))

(declare-fun b!67547 () Bool)

(assert (=> b!67547 (= e!44283 (containsKey!133 (t!4976 (toList!723 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))) lt!28600))))

(assert (= (and d!14215 (not res!36473)) b!67546))

(assert (= (and b!67546 res!36474) b!67547))

(declare-fun m!62627 () Bool)

(assert (=> b!67547 m!62627))

(assert (=> d!13839 d!14215))

(assert (=> d!13773 d!13771))

(declare-fun d!14217 () Bool)

(assert (=> d!14217 (= (getValueByKey!129 lt!28650 (_1!1064 lt!28500)) (Some!134 (_2!1064 lt!28500)))))

(assert (=> d!14217 true))

(declare-fun _$22!370 () Unit!1836)

(assert (=> d!14217 (= (choose!376 lt!28650 (_1!1064 lt!28500) (_2!1064 lt!28500)) _$22!370)))

(declare-fun bs!2890 () Bool)

(assert (= bs!2890 d!14217))

(assert (=> bs!2890 m!60927))

(assert (=> d!13773 d!14217))

(declare-fun d!14219 () Bool)

(declare-fun res!36475 () Bool)

(declare-fun e!44284 () Bool)

(assert (=> d!14219 (=> res!36475 e!44284)))

(assert (=> d!14219 (= res!36475 (or ((_ is Nil!1487) lt!28650) ((_ is Nil!1487) (t!4976 lt!28650))))))

(assert (=> d!14219 (= (isStrictlySorted!284 lt!28650) e!44284)))

(declare-fun b!67548 () Bool)

(declare-fun e!44285 () Bool)

(assert (=> b!67548 (= e!44284 e!44285)))

(declare-fun res!36476 () Bool)

(assert (=> b!67548 (=> (not res!36476) (not e!44285))))

(assert (=> b!67548 (= res!36476 (bvslt (_1!1064 (h!2070 lt!28650)) (_1!1064 (h!2070 (t!4976 lt!28650)))))))

(declare-fun b!67549 () Bool)

(assert (=> b!67549 (= e!44285 (isStrictlySorted!284 (t!4976 lt!28650)))))

(assert (= (and d!14219 (not res!36475)) b!67548))

(assert (= (and b!67548 res!36476) b!67549))

(declare-fun m!62629 () Bool)

(assert (=> b!67549 m!62629))

(assert (=> d!13773 d!14219))

(assert (=> b!66830 d!14049))

(declare-fun b!67551 () Bool)

(declare-fun e!44286 () Option!135)

(declare-fun e!44287 () Option!135)

(assert (=> b!67551 (= e!44286 e!44287)))

(declare-fun c!9435 () Bool)

(assert (=> b!67551 (= c!9435 (and ((_ is Cons!1486) (t!4976 (toList!723 lt!28652))) (not (= (_1!1064 (h!2070 (t!4976 (toList!723 lt!28652)))) (_1!1064 lt!28503)))))))

(declare-fun d!14221 () Bool)

(declare-fun c!9434 () Bool)

(assert (=> d!14221 (= c!9434 (and ((_ is Cons!1486) (t!4976 (toList!723 lt!28652))) (= (_1!1064 (h!2070 (t!4976 (toList!723 lt!28652)))) (_1!1064 lt!28503))))))

(assert (=> d!14221 (= (getValueByKey!129 (t!4976 (toList!723 lt!28652)) (_1!1064 lt!28503)) e!44286)))

(declare-fun b!67552 () Bool)

(assert (=> b!67552 (= e!44287 (getValueByKey!129 (t!4976 (t!4976 (toList!723 lt!28652))) (_1!1064 lt!28503)))))

(declare-fun b!67550 () Bool)

(assert (=> b!67550 (= e!44286 (Some!134 (_2!1064 (h!2070 (t!4976 (toList!723 lt!28652))))))))

(declare-fun b!67553 () Bool)

(assert (=> b!67553 (= e!44287 None!133)))

(assert (= (and d!14221 c!9434) b!67550))

(assert (= (and d!14221 (not c!9434)) b!67551))

(assert (= (and b!67551 c!9435) b!67552))

(assert (= (and b!67551 (not c!9435)) b!67553))

(declare-fun m!62631 () Bool)

(assert (=> b!67552 m!62631))

(assert (=> b!66917 d!14221))

(declare-fun d!14223 () Bool)

(declare-fun res!36477 () Bool)

(declare-fun e!44288 () Bool)

(assert (=> d!14223 (=> res!36477 e!44288)))

(assert (=> d!14223 (= res!36477 (and ((_ is Cons!1486) lt!28815) (= (_1!1064 (h!2070 lt!28815)) (_1!1064 lt!28503))))))

(assert (=> d!14223 (= (containsKey!133 lt!28815 (_1!1064 lt!28503)) e!44288)))

(declare-fun b!67554 () Bool)

(declare-fun e!44289 () Bool)

(assert (=> b!67554 (= e!44288 e!44289)))

(declare-fun res!36478 () Bool)

(assert (=> b!67554 (=> (not res!36478) (not e!44289))))

(assert (=> b!67554 (= res!36478 (and (or (not ((_ is Cons!1486) lt!28815)) (bvsle (_1!1064 (h!2070 lt!28815)) (_1!1064 lt!28503))) ((_ is Cons!1486) lt!28815) (bvslt (_1!1064 (h!2070 lt!28815)) (_1!1064 lt!28503))))))

(declare-fun b!67555 () Bool)

(assert (=> b!67555 (= e!44289 (containsKey!133 (t!4976 lt!28815) (_1!1064 lt!28503)))))

(assert (= (and d!14223 (not res!36477)) b!67554))

(assert (= (and b!67554 res!36478) b!67555))

(declare-fun m!62633 () Bool)

(assert (=> b!67555 m!62633))

(assert (=> b!66825 d!14223))

(declare-fun d!14225 () Bool)

(declare-fun res!36479 () Bool)

(declare-fun e!44290 () Bool)

(assert (=> d!14225 (=> res!36479 e!44290)))

(assert (=> d!14225 (= res!36479 (or ((_ is Nil!1487) lt!28809) ((_ is Nil!1487) (t!4976 lt!28809))))))

(assert (=> d!14225 (= (isStrictlySorted!284 lt!28809) e!44290)))

(declare-fun b!67556 () Bool)

(declare-fun e!44291 () Bool)

(assert (=> b!67556 (= e!44290 e!44291)))

(declare-fun res!36480 () Bool)

(assert (=> b!67556 (=> (not res!36480) (not e!44291))))

(assert (=> b!67556 (= res!36480 (bvslt (_1!1064 (h!2070 lt!28809)) (_1!1064 (h!2070 (t!4976 lt!28809)))))))

(declare-fun b!67557 () Bool)

(assert (=> b!67557 (= e!44291 (isStrictlySorted!284 (t!4976 lt!28809)))))

(assert (= (and d!14225 (not res!36479)) b!67556))

(assert (= (and b!67556 res!36480) b!67557))

(declare-fun m!62635 () Bool)

(assert (=> b!67557 m!62635))

(assert (=> d!13775 d!14225))

(declare-fun d!14227 () Bool)

(declare-fun res!36481 () Bool)

(declare-fun e!44292 () Bool)

(assert (=> d!14227 (=> res!36481 e!44292)))

(assert (=> d!14227 (= res!36481 (or ((_ is Nil!1487) (toList!723 (+!87 lt!28505 lt!28503))) ((_ is Nil!1487) (t!4976 (toList!723 (+!87 lt!28505 lt!28503))))))))

(assert (=> d!14227 (= (isStrictlySorted!284 (toList!723 (+!87 lt!28505 lt!28503))) e!44292)))

(declare-fun b!67558 () Bool)

(declare-fun e!44293 () Bool)

(assert (=> b!67558 (= e!44292 e!44293)))

(declare-fun res!36482 () Bool)

(assert (=> b!67558 (=> (not res!36482) (not e!44293))))

(assert (=> b!67558 (= res!36482 (bvslt (_1!1064 (h!2070 (toList!723 (+!87 lt!28505 lt!28503)))) (_1!1064 (h!2070 (t!4976 (toList!723 (+!87 lt!28505 lt!28503)))))))))

(declare-fun b!67559 () Bool)

(assert (=> b!67559 (= e!44293 (isStrictlySorted!284 (t!4976 (toList!723 (+!87 lt!28505 lt!28503)))))))

(assert (= (and d!14227 (not res!36481)) b!67558))

(assert (= (and b!67558 res!36482) b!67559))

(declare-fun m!62637 () Bool)

(assert (=> b!67559 m!62637))

(assert (=> d!13775 d!14227))

(assert (=> b!66982 d!14035))

(assert (=> bm!5628 d!13793))

(declare-fun d!14229 () Bool)

(declare-fun lt!29340 () Bool)

(assert (=> d!14229 (= lt!29340 (select (content!70 (toList!723 lt!28888)) (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun e!44294 () Bool)

(assert (=> d!14229 (= lt!29340 e!44294)))

(declare-fun res!36484 () Bool)

(assert (=> d!14229 (=> (not res!36484) (not e!44294))))

(assert (=> d!14229 (= res!36484 ((_ is Cons!1486) (toList!723 lt!28888)))))

(assert (=> d!14229 (= (contains!718 (toList!723 lt!28888) (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!29340)))

(declare-fun b!67560 () Bool)

(declare-fun e!44295 () Bool)

(assert (=> b!67560 (= e!44294 e!44295)))

(declare-fun res!36483 () Bool)

(assert (=> b!67560 (=> res!36483 e!44295)))

(assert (=> b!67560 (= res!36483 (= (h!2070 (toList!723 lt!28888)) (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!67561 () Bool)

(assert (=> b!67561 (= e!44295 (contains!718 (t!4976 (toList!723 lt!28888)) (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(assert (= (and d!14229 res!36484) b!67560))

(assert (= (and b!67560 (not res!36483)) b!67561))

(declare-fun m!62639 () Bool)

(assert (=> d!14229 m!62639))

(declare-fun m!62641 () Bool)

(assert (=> d!14229 m!62641))

(declare-fun m!62643 () Bool)

(assert (=> b!67561 m!62643))

(assert (=> b!66934 d!14229))

(declare-fun d!14231 () Bool)

(declare-fun res!36485 () Bool)

(declare-fun e!44296 () Bool)

(assert (=> d!14231 (=> res!36485 e!44296)))

(assert (=> d!14231 (= res!36485 (and ((_ is Cons!1486) (toList!723 lt!28634)) (= (_1!1064 (h!2070 (toList!723 lt!28634))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14231 (= (containsKey!133 (toList!723 lt!28634) #b1000000000000000000000000000000000000000000000000000000000000000) e!44296)))

(declare-fun b!67562 () Bool)

(declare-fun e!44297 () Bool)

(assert (=> b!67562 (= e!44296 e!44297)))

(declare-fun res!36486 () Bool)

(assert (=> b!67562 (=> (not res!36486) (not e!44297))))

(assert (=> b!67562 (= res!36486 (and (or (not ((_ is Cons!1486) (toList!723 lt!28634))) (bvsle (_1!1064 (h!2070 (toList!723 lt!28634))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1486) (toList!723 lt!28634)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28634))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67563 () Bool)

(assert (=> b!67563 (= e!44297 (containsKey!133 (t!4976 (toList!723 lt!28634)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14231 (not res!36485)) b!67562))

(assert (= (and b!67562 res!36486) b!67563))

(declare-fun m!62645 () Bool)

(assert (=> b!67563 m!62645))

(assert (=> d!13923 d!14231))

(declare-fun d!14233 () Bool)

(declare-fun e!44298 () Bool)

(assert (=> d!14233 e!44298))

(declare-fun res!36488 () Bool)

(assert (=> d!14233 (=> (not res!36488) (not e!44298))))

(declare-fun lt!29342 () ListLongMap!1415)

(assert (=> d!14233 (= res!36488 (contains!716 lt!29342 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(declare-fun lt!29344 () List!1490)

(assert (=> d!14233 (= lt!29342 (ListLongMap!1416 lt!29344))))

(declare-fun lt!29343 () Unit!1836)

(declare-fun lt!29341 () Unit!1836)

(assert (=> d!14233 (= lt!29343 lt!29341)))

(assert (=> d!14233 (= (getValueByKey!129 lt!29344 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(assert (=> d!14233 (= lt!29341 (lemmaContainsTupThenGetReturnValue!48 lt!29344 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))) (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(assert (=> d!14233 (= lt!29344 (insertStrictlySorted!50 (toList!723 call!5577) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))) (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(assert (=> d!14233 (= (+!87 call!5577 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))) lt!29342)))

(declare-fun b!67564 () Bool)

(declare-fun res!36487 () Bool)

(assert (=> b!67564 (=> (not res!36487) (not e!44298))))

(assert (=> b!67564 (= res!36487 (= (getValueByKey!129 (toList!723 lt!29342) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(declare-fun b!67565 () Bool)

(assert (=> b!67565 (= e!44298 (contains!718 (toList!723 lt!29342) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))

(assert (= (and d!14233 res!36488) b!67564))

(assert (= (and b!67564 res!36487) b!67565))

(declare-fun m!62647 () Bool)

(assert (=> d!14233 m!62647))

(declare-fun m!62649 () Bool)

(assert (=> d!14233 m!62649))

(declare-fun m!62651 () Bool)

(assert (=> d!14233 m!62651))

(declare-fun m!62653 () Bool)

(assert (=> d!14233 m!62653))

(declare-fun m!62655 () Bool)

(assert (=> b!67564 m!62655))

(declare-fun m!62657 () Bool)

(assert (=> b!67565 m!62657))

(assert (=> b!66742 d!14233))

(declare-fun d!14235 () Bool)

(assert (=> d!14235 (= (get!1130 (getValueByKey!129 (toList!723 (+!87 lt!28596 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28610)) (v!2483 (getValueByKey!129 (toList!723 (+!87 lt!28596 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28610)))))

(assert (=> d!13829 d!14235))

(declare-fun b!67567 () Bool)

(declare-fun e!44299 () Option!135)

(declare-fun e!44300 () Option!135)

(assert (=> b!67567 (= e!44299 e!44300)))

(declare-fun c!9437 () Bool)

(assert (=> b!67567 (= c!9437 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28596 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))) (not (= (_1!1064 (h!2070 (toList!723 (+!87 lt!28596 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))) lt!28610))))))

(declare-fun d!14237 () Bool)

(declare-fun c!9436 () Bool)

(assert (=> d!14237 (= c!9436 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28596 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))) (= (_1!1064 (h!2070 (toList!723 (+!87 lt!28596 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))) lt!28610)))))

(assert (=> d!14237 (= (getValueByKey!129 (toList!723 (+!87 lt!28596 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28610) e!44299)))

(declare-fun b!67568 () Bool)

(assert (=> b!67568 (= e!44300 (getValueByKey!129 (t!4976 (toList!723 (+!87 lt!28596 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))) lt!28610))))

(declare-fun b!67566 () Bool)

(assert (=> b!67566 (= e!44299 (Some!134 (_2!1064 (h!2070 (toList!723 (+!87 lt!28596 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))))

(declare-fun b!67569 () Bool)

(assert (=> b!67569 (= e!44300 None!133)))

(assert (= (and d!14237 c!9436) b!67566))

(assert (= (and d!14237 (not c!9436)) b!67567))

(assert (= (and b!67567 c!9437) b!67568))

(assert (= (and b!67567 (not c!9437)) b!67569))

(declare-fun m!62659 () Bool)

(assert (=> b!67568 m!62659))

(assert (=> d!13829 d!14237))

(declare-fun d!14239 () Bool)

(assert (=> d!14239 (= (get!1130 (getValueByKey!129 (toList!723 lt!28612) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2483 (getValueByKey!129 (toList!723 lt!28612) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13943 d!14239))

(assert (=> d!13943 d!14091))

(declare-fun d!14241 () Bool)

(declare-fun lt!29345 () Bool)

(assert (=> d!14241 (= lt!29345 (select (content!70 lt!28646) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))))))

(declare-fun e!44301 () Bool)

(assert (=> d!14241 (= lt!29345 e!44301)))

(declare-fun res!36490 () Bool)

(assert (=> d!14241 (=> (not res!36490) (not e!44301))))

(assert (=> d!14241 (= res!36490 ((_ is Cons!1486) lt!28646))))

(assert (=> d!14241 (= (contains!718 lt!28646 (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))) lt!29345)))

(declare-fun b!67570 () Bool)

(declare-fun e!44302 () Bool)

(assert (=> b!67570 (= e!44301 e!44302)))

(declare-fun res!36489 () Bool)

(assert (=> b!67570 (=> res!36489 e!44302)))

(assert (=> b!67570 (= res!36489 (= (h!2070 lt!28646) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))))))

(declare-fun b!67571 () Bool)

(assert (=> b!67571 (= e!44302 (contains!718 (t!4976 lt!28646) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))))))

(assert (= (and d!14241 res!36490) b!67570))

(assert (= (and b!67570 (not res!36489)) b!67571))

(declare-fun m!62661 () Bool)

(assert (=> d!14241 m!62661))

(declare-fun m!62663 () Bool)

(assert (=> d!14241 m!62663))

(declare-fun m!62665 () Bool)

(assert (=> b!67571 m!62665))

(assert (=> b!66897 d!14241))

(declare-fun d!14243 () Bool)

(declare-fun e!44304 () Bool)

(assert (=> d!14243 e!44304))

(declare-fun res!36491 () Bool)

(assert (=> d!14243 (=> res!36491 e!44304)))

(declare-fun lt!29349 () Bool)

(assert (=> d!14243 (= res!36491 (not lt!29349))))

(declare-fun lt!29346 () Bool)

(assert (=> d!14243 (= lt!29349 lt!29346)))

(declare-fun lt!29347 () Unit!1836)

(declare-fun e!44303 () Unit!1836)

(assert (=> d!14243 (= lt!29347 e!44303)))

(declare-fun c!9438 () Bool)

(assert (=> d!14243 (= c!9438 lt!29346)))

(assert (=> d!14243 (= lt!29346 (containsKey!133 (toList!723 lt!28822) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!14243 (= (contains!716 lt!28822 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!29349)))

(declare-fun b!67572 () Bool)

(declare-fun lt!29348 () Unit!1836)

(assert (=> b!67572 (= e!44303 lt!29348)))

(assert (=> b!67572 (= lt!29348 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28822) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!67572 (isDefined!83 (getValueByKey!129 (toList!723 lt!28822) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!67573 () Bool)

(declare-fun Unit!1884 () Unit!1836)

(assert (=> b!67573 (= e!44303 Unit!1884)))

(declare-fun b!67574 () Bool)

(assert (=> b!67574 (= e!44304 (isDefined!83 (getValueByKey!129 (toList!723 lt!28822) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!14243 c!9438) b!67572))

(assert (= (and d!14243 (not c!9438)) b!67573))

(assert (= (and d!14243 (not res!36491)) b!67574))

(assert (=> d!14243 m!61221))

(declare-fun m!62667 () Bool)

(assert (=> d!14243 m!62667))

(assert (=> b!67572 m!61221))

(declare-fun m!62669 () Bool)

(assert (=> b!67572 m!62669))

(assert (=> b!67572 m!61221))

(declare-fun m!62671 () Bool)

(assert (=> b!67572 m!62671))

(assert (=> b!67572 m!62671))

(declare-fun m!62673 () Bool)

(assert (=> b!67572 m!62673))

(assert (=> b!67574 m!61221))

(assert (=> b!67574 m!62671))

(assert (=> b!67574 m!62671))

(assert (=> b!67574 m!62673))

(assert (=> b!66837 d!14243))

(declare-fun b!67575 () Bool)

(declare-fun e!44307 () Bool)

(declare-fun e!44306 () Bool)

(assert (=> b!67575 (= e!44307 e!44306)))

(declare-fun c!9439 () Bool)

(assert (=> b!67575 (= c!9439 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!67576 () Bool)

(declare-fun e!44305 () Bool)

(assert (=> b!67576 (= e!44306 e!44305)))

(declare-fun lt!29352 () (_ BitVec 64))

(assert (=> b!67576 (= lt!29352 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!29350 () Unit!1836)

(assert (=> b!67576 (= lt!29350 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) lt!29352 #b00000000000000000000000000000000))))

(assert (=> b!67576 (arrayContainsKey!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) lt!29352 #b00000000000000000000000000000000)))

(declare-fun lt!29351 () Unit!1836)

(assert (=> b!67576 (= lt!29351 lt!29350)))

(declare-fun res!36492 () Bool)

(assert (=> b!67576 (= res!36492 (= (seekEntryOrOpen!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) #b00000000000000000000000000000000) (_keys!3787 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992)))) (Found!243 #b00000000000000000000000000000000)))))

(assert (=> b!67576 (=> (not res!36492) (not e!44305))))

(declare-fun d!14245 () Bool)

(declare-fun res!36493 () Bool)

(assert (=> d!14245 (=> res!36493 e!44307)))

(assert (=> d!14245 (= res!36493 (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(assert (=> d!14245 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992)))) e!44307)))

(declare-fun bm!5669 () Bool)

(declare-fun call!5672 () Bool)

(assert (=> bm!5669 (= call!5672 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3787 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun b!67577 () Bool)

(assert (=> b!67577 (= e!44306 call!5672)))

(declare-fun b!67578 () Bool)

(assert (=> b!67578 (= e!44305 call!5672)))

(assert (= (and d!14245 (not res!36493)) b!67575))

(assert (= (and b!67575 c!9439) b!67576))

(assert (= (and b!67575 (not c!9439)) b!67577))

(assert (= (and b!67576 res!36492) b!67578))

(assert (= (or b!67578 b!67577) bm!5669))

(assert (=> b!67575 m!62357))

(assert (=> b!67575 m!62357))

(assert (=> b!67575 m!62359))

(assert (=> b!67576 m!62357))

(declare-fun m!62675 () Bool)

(assert (=> b!67576 m!62675))

(declare-fun m!62677 () Bool)

(assert (=> b!67576 m!62677))

(assert (=> b!67576 m!62357))

(declare-fun m!62679 () Bool)

(assert (=> b!67576 m!62679))

(declare-fun m!62681 () Bool)

(assert (=> bm!5669 m!62681))

(assert (=> b!66736 d!14245))

(declare-fun d!14247 () Bool)

(assert (=> d!14247 (= (apply!72 lt!28942 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1130 (getValueByKey!129 (toList!723 lt!28942) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2891 () Bool)

(assert (= bs!2891 d!14247))

(assert (=> bs!2891 m!61079))

(declare-fun m!62683 () Bool)

(assert (=> bs!2891 m!62683))

(assert (=> bs!2891 m!62683))

(declare-fun m!62685 () Bool)

(assert (=> bs!2891 m!62685))

(assert (=> b!66994 d!14247))

(declare-fun d!14249 () Bool)

(declare-fun c!9440 () Bool)

(assert (=> d!14249 (= c!9440 ((_ is ValueCellFull!882) (select (arr!1835 (_values!2130 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!44308 () V!2915)

(assert (=> d!14249 (= (get!1127 (select (arr!1835 (_values!2130 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44308)))

(declare-fun b!67579 () Bool)

(assert (=> b!67579 (= e!44308 (get!1128 (select (arr!1835 (_values!2130 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67580 () Bool)

(assert (=> b!67580 (= e!44308 (get!1129 (select (arr!1835 (_values!2130 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14249 c!9440) b!67579))

(assert (= (and d!14249 (not c!9440)) b!67580))

(assert (=> b!67579 m!61523))

(assert (=> b!67579 m!61115))

(declare-fun m!62687 () Bool)

(assert (=> b!67579 m!62687))

(assert (=> b!67580 m!61523))

(assert (=> b!67580 m!61115))

(declare-fun m!62689 () Bool)

(assert (=> b!67580 m!62689))

(assert (=> b!66994 d!14249))

(declare-fun d!14251 () Bool)

(declare-fun lt!29353 () Bool)

(assert (=> d!14251 (= lt!29353 (select (content!70 lt!28654) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))))))

(declare-fun e!44309 () Bool)

(assert (=> d!14251 (= lt!29353 e!44309)))

(declare-fun res!36495 () Bool)

(assert (=> d!14251 (=> (not res!36495) (not e!44309))))

(assert (=> d!14251 (= res!36495 ((_ is Cons!1486) lt!28654))))

(assert (=> d!14251 (= (contains!718 lt!28654 (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))) lt!29353)))

(declare-fun b!67581 () Bool)

(declare-fun e!44310 () Bool)

(assert (=> b!67581 (= e!44309 e!44310)))

(declare-fun res!36494 () Bool)

(assert (=> b!67581 (=> res!36494 e!44310)))

(assert (=> b!67581 (= res!36494 (= (h!2070 lt!28654) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))))))

(declare-fun b!67582 () Bool)

(assert (=> b!67582 (= e!44310 (contains!718 (t!4976 lt!28654) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))))))

(assert (= (and d!14251 res!36495) b!67581))

(assert (= (and b!67581 (not res!36494)) b!67582))

(declare-fun m!62691 () Bool)

(assert (=> d!14251 m!62691))

(declare-fun m!62693 () Bool)

(assert (=> d!14251 m!62693))

(declare-fun m!62695 () Bool)

(assert (=> b!67582 m!62695))

(assert (=> b!66819 d!14251))

(declare-fun b!67583 () Bool)

(declare-fun e!44311 () (_ BitVec 32))

(assert (=> b!67583 (= e!44311 #b00000000000000000000000000000000)))

(declare-fun b!67584 () Bool)

(declare-fun e!44312 () (_ BitVec 32))

(declare-fun call!5673 () (_ BitVec 32))

(assert (=> b!67584 (= e!44312 call!5673)))

(declare-fun b!67585 () Bool)

(assert (=> b!67585 (= e!44311 e!44312)))

(declare-fun c!9442 () Bool)

(assert (=> b!67585 (= c!9442 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!67586 () Bool)

(assert (=> b!67586 (= e!44312 (bvadd #b00000000000000000000000000000001 call!5673))))

(declare-fun bm!5670 () Bool)

(assert (=> bm!5670 (= call!5673 (arrayCountValidKeys!0 (_keys!3787 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2069 (_keys!3787 newMap!16))))))

(declare-fun d!14253 () Bool)

(declare-fun lt!29354 () (_ BitVec 32))

(assert (=> d!14253 (and (bvsge lt!29354 #b00000000000000000000000000000000) (bvsle lt!29354 (bvsub (size!2069 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!14253 (= lt!29354 e!44311)))

(declare-fun c!9441 () Bool)

(assert (=> d!14253 (= c!9441 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2069 (_keys!3787 newMap!16))))))

(assert (=> d!14253 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2069 (_keys!3787 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2069 (_keys!3787 newMap!16)) (size!2069 (_keys!3787 newMap!16))))))

(assert (=> d!14253 (= (arrayCountValidKeys!0 (_keys!3787 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2069 (_keys!3787 newMap!16))) lt!29354)))

(assert (= (and d!14253 c!9441) b!67583))

(assert (= (and d!14253 (not c!9441)) b!67585))

(assert (= (and b!67585 c!9442) b!67586))

(assert (= (and b!67585 (not c!9442)) b!67584))

(assert (= (or b!67586 b!67584) bm!5670))

(declare-fun m!62697 () Bool)

(assert (=> b!67585 m!62697))

(assert (=> b!67585 m!62697))

(declare-fun m!62699 () Bool)

(assert (=> b!67585 m!62699))

(declare-fun m!62701 () Bool)

(assert (=> bm!5670 m!62701))

(assert (=> bm!5567 d!14253))

(declare-fun b!67587 () Bool)

(declare-fun e!44315 () Bool)

(declare-fun e!44314 () Bool)

(assert (=> b!67587 (= e!44315 e!44314)))

(declare-fun c!9443 () Bool)

(assert (=> b!67587 (= c!9443 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (_2!1065 lt!28753))) #b00000000000000000000000000000000)))))

(declare-fun b!67588 () Bool)

(declare-fun e!44313 () Bool)

(assert (=> b!67588 (= e!44314 e!44313)))

(declare-fun lt!29357 () (_ BitVec 64))

(assert (=> b!67588 (= lt!29357 (select (arr!1834 (_keys!3787 (_2!1065 lt!28753))) #b00000000000000000000000000000000))))

(declare-fun lt!29355 () Unit!1836)

(assert (=> b!67588 (= lt!29355 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3787 (_2!1065 lt!28753)) lt!29357 #b00000000000000000000000000000000))))

(assert (=> b!67588 (arrayContainsKey!0 (_keys!3787 (_2!1065 lt!28753)) lt!29357 #b00000000000000000000000000000000)))

(declare-fun lt!29356 () Unit!1836)

(assert (=> b!67588 (= lt!29356 lt!29355)))

(declare-fun res!36496 () Bool)

(assert (=> b!67588 (= res!36496 (= (seekEntryOrOpen!0 (select (arr!1834 (_keys!3787 (_2!1065 lt!28753))) #b00000000000000000000000000000000) (_keys!3787 (_2!1065 lt!28753)) (mask!6082 (_2!1065 lt!28753))) (Found!243 #b00000000000000000000000000000000)))))

(assert (=> b!67588 (=> (not res!36496) (not e!44313))))

(declare-fun d!14255 () Bool)

(declare-fun res!36497 () Bool)

(assert (=> d!14255 (=> res!36497 e!44315)))

(assert (=> d!14255 (= res!36497 (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 (_2!1065 lt!28753)))))))

(assert (=> d!14255 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3787 (_2!1065 lt!28753)) (mask!6082 (_2!1065 lt!28753))) e!44315)))

(declare-fun bm!5671 () Bool)

(declare-fun call!5674 () Bool)

(assert (=> bm!5671 (= call!5674 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3787 (_2!1065 lt!28753)) (mask!6082 (_2!1065 lt!28753))))))

(declare-fun b!67589 () Bool)

(assert (=> b!67589 (= e!44314 call!5674)))

(declare-fun b!67590 () Bool)

(assert (=> b!67590 (= e!44313 call!5674)))

(assert (= (and d!14255 (not res!36497)) b!67587))

(assert (= (and b!67587 c!9443) b!67588))

(assert (= (and b!67587 (not c!9443)) b!67589))

(assert (= (and b!67588 res!36496) b!67590))

(assert (= (or b!67590 b!67589) bm!5671))

(assert (=> b!67587 m!62079))

(assert (=> b!67587 m!62079))

(assert (=> b!67587 m!62087))

(assert (=> b!67588 m!62079))

(declare-fun m!62703 () Bool)

(assert (=> b!67588 m!62703))

(declare-fun m!62705 () Bool)

(assert (=> b!67588 m!62705))

(assert (=> b!67588 m!62079))

(declare-fun m!62707 () Bool)

(assert (=> b!67588 m!62707))

(declare-fun m!62709 () Bool)

(assert (=> bm!5671 m!62709))

(assert (=> b!67152 d!14255))

(declare-fun d!14257 () Bool)

(assert (=> d!14257 (isDefined!83 (getValueByKey!129 (toList!723 lt!28612) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!29358 () Unit!1836)

(assert (=> d!14257 (= lt!29358 (choose!378 (toList!723 lt!28612) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!44316 () Bool)

(assert (=> d!14257 e!44316))

(declare-fun res!36498 () Bool)

(assert (=> d!14257 (=> (not res!36498) (not e!44316))))

(assert (=> d!14257 (= res!36498 (isStrictlySorted!284 (toList!723 lt!28612)))))

(assert (=> d!14257 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28612) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!29358)))

(declare-fun b!67591 () Bool)

(assert (=> b!67591 (= e!44316 (containsKey!133 (toList!723 lt!28612) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!14257 res!36498) b!67591))

(assert (=> d!14257 m!60843))

(assert (=> d!14257 m!61507))

(assert (=> d!14257 m!61507))

(assert (=> d!14257 m!61509))

(assert (=> d!14257 m!60843))

(declare-fun m!62711 () Bool)

(assert (=> d!14257 m!62711))

(assert (=> d!14257 m!62237))

(assert (=> b!67591 m!60843))

(assert (=> b!67591 m!61503))

(assert (=> b!66959 d!14257))

(assert (=> b!66959 d!14017))

(assert (=> b!66959 d!14019))

(assert (=> b!66749 d!14035))

(declare-fun d!14259 () Bool)

(assert (=> d!14259 (= (isDefined!83 (getValueByKey!129 (toList!723 lt!28644) (_1!1064 lt!28500))) (not (isEmpty!314 (getValueByKey!129 (toList!723 lt!28644) (_1!1064 lt!28500)))))))

(declare-fun bs!2892 () Bool)

(assert (= bs!2892 d!14259))

(assert (=> bs!2892 m!60921))

(declare-fun m!62713 () Bool)

(assert (=> bs!2892 m!62713))

(assert (=> b!66891 d!14259))

(assert (=> b!66891 d!13755))

(declare-fun d!14261 () Bool)

(declare-fun res!36499 () Bool)

(declare-fun e!44317 () Bool)

(assert (=> d!14261 (=> res!36499 e!44317)))

(assert (=> d!14261 (= res!36499 (and ((_ is Cons!1486) (toList!723 lt!28612)) (= (_1!1064 (h!2070 (toList!723 lt!28612))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14261 (= (containsKey!133 (toList!723 lt!28612) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!44317)))

(declare-fun b!67592 () Bool)

(declare-fun e!44318 () Bool)

(assert (=> b!67592 (= e!44317 e!44318)))

(declare-fun res!36500 () Bool)

(assert (=> b!67592 (=> (not res!36500) (not e!44318))))

(assert (=> b!67592 (= res!36500 (and (or (not ((_ is Cons!1486) (toList!723 lt!28612))) (bvsle (_1!1064 (h!2070 (toList!723 lt!28612))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1486) (toList!723 lt!28612)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28612))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!67593 () Bool)

(assert (=> b!67593 (= e!44318 (containsKey!133 (t!4976 (toList!723 lt!28612)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!14261 (not res!36499)) b!67592))

(assert (= (and b!67592 res!36500) b!67593))

(assert (=> b!67593 m!60843))

(declare-fun m!62715 () Bool)

(assert (=> b!67593 m!62715))

(assert (=> d!13865 d!14261))

(declare-fun b!67594 () Bool)

(declare-fun e!44322 () ListLongMap!1415)

(declare-fun e!44323 () ListLongMap!1415)

(assert (=> b!67594 (= e!44322 e!44323)))

(declare-fun c!9446 () Bool)

(assert (=> b!67594 (= c!9446 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67595 () Bool)

(declare-fun e!44319 () Bool)

(assert (=> b!67595 (= e!44319 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67595 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!67596 () Bool)

(declare-fun lt!29363 () Unit!1836)

(declare-fun lt!29362 () Unit!1836)

(assert (=> b!67596 (= lt!29363 lt!29362)))

(declare-fun lt!29361 () (_ BitVec 64))

(declare-fun lt!29364 () V!2915)

(declare-fun lt!29360 () ListLongMap!1415)

(declare-fun lt!29359 () (_ BitVec 64))

(assert (=> b!67596 (not (contains!716 (+!87 lt!29360 (tuple2!2109 lt!29359 lt!29364)) lt!29361))))

(assert (=> b!67596 (= lt!29362 (addStillNotContains!23 lt!29360 lt!29359 lt!29364 lt!29361))))

(assert (=> b!67596 (= lt!29361 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!67596 (= lt!29364 (get!1127 (select (arr!1835 (_values!2130 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!67596 (= lt!29359 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!5675 () ListLongMap!1415)

(assert (=> b!67596 (= lt!29360 call!5675)))

(assert (=> b!67596 (= e!44323 (+!87 call!5675 (tuple2!2109 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) (get!1127 (select (arr!1835 (_values!2130 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!67597 () Bool)

(declare-fun res!36502 () Bool)

(declare-fun e!44321 () Bool)

(assert (=> b!67597 (=> (not res!36502) (not e!44321))))

(declare-fun lt!29365 () ListLongMap!1415)

(assert (=> b!67597 (= res!36502 (not (contains!716 lt!29365 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67598 () Bool)

(declare-fun e!44320 () Bool)

(assert (=> b!67598 (= e!44320 (= lt!29365 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2147 newMap!16))))))

(declare-fun b!67599 () Bool)

(assert (=> b!67599 (= e!44323 call!5675)))

(declare-fun b!67600 () Bool)

(assert (=> b!67600 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (=> b!67600 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_values!2130 newMap!16))))))

(declare-fun e!44325 () Bool)

(assert (=> b!67600 (= e!44325 (= (apply!72 lt!29365 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1127 (select (arr!1835 (_values!2130 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!14263 () Bool)

(assert (=> d!14263 e!44321))

(declare-fun res!36504 () Bool)

(assert (=> d!14263 (=> (not res!36504) (not e!44321))))

(assert (=> d!14263 (= res!36504 (not (contains!716 lt!29365 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14263 (= lt!29365 e!44322)))

(declare-fun c!9447 () Bool)

(assert (=> d!14263 (= c!9447 (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (=> d!14263 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14263 (= (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29365)))

(declare-fun bm!5672 () Bool)

(assert (=> bm!5672 (= call!5675 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2147 newMap!16)))))

(declare-fun b!67601 () Bool)

(declare-fun e!44324 () Bool)

(assert (=> b!67601 (= e!44324 e!44325)))

(assert (=> b!67601 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun res!36503 () Bool)

(assert (=> b!67601 (= res!36503 (contains!716 lt!29365 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67601 (=> (not res!36503) (not e!44325))))

(declare-fun b!67602 () Bool)

(assert (=> b!67602 (= e!44320 (isEmpty!312 lt!29365))))

(declare-fun b!67603 () Bool)

(assert (=> b!67603 (= e!44324 e!44320)))

(declare-fun c!9445 () Bool)

(assert (=> b!67603 (= c!9445 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun b!67604 () Bool)

(assert (=> b!67604 (= e!44322 (ListLongMap!1416 Nil!1487))))

(declare-fun b!67605 () Bool)

(assert (=> b!67605 (= e!44321 e!44324)))

(declare-fun c!9444 () Bool)

(assert (=> b!67605 (= c!9444 e!44319)))

(declare-fun res!36501 () Bool)

(assert (=> b!67605 (=> (not res!36501) (not e!44319))))

(assert (=> b!67605 (= res!36501 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (= (and d!14263 c!9447) b!67604))

(assert (= (and d!14263 (not c!9447)) b!67594))

(assert (= (and b!67594 c!9446) b!67596))

(assert (= (and b!67594 (not c!9446)) b!67599))

(assert (= (or b!67596 b!67599) bm!5672))

(assert (= (and d!14263 res!36504) b!67597))

(assert (= (and b!67597 res!36502) b!67605))

(assert (= (and b!67605 res!36501) b!67595))

(assert (= (and b!67605 c!9444) b!67601))

(assert (= (and b!67605 (not c!9444)) b!67603))

(assert (= (and b!67601 res!36503) b!67600))

(assert (= (and b!67603 c!9445) b!67598))

(assert (= (and b!67603 (not c!9445)) b!67602))

(declare-fun b_lambda!3025 () Bool)

(assert (=> (not b_lambda!3025) (not b!67596)))

(assert (=> b!67596 t!4984))

(declare-fun b_and!4161 () Bool)

(assert (= b_and!4157 (and (=> t!4984 result!2595) b_and!4161)))

(assert (=> b!67596 t!4986))

(declare-fun b_and!4163 () Bool)

(assert (= b_and!4159 (and (=> t!4986 result!2597) b_and!4163)))

(declare-fun b_lambda!3027 () Bool)

(assert (=> (not b_lambda!3027) (not b!67600)))

(assert (=> b!67600 t!4984))

(declare-fun b_and!4165 () Bool)

(assert (= b_and!4161 (and (=> t!4984 result!2595) b_and!4165)))

(assert (=> b!67600 t!4986))

(declare-fun b_and!4167 () Bool)

(assert (= b_and!4163 (and (=> t!4986 result!2597) b_and!4167)))

(assert (=> b!67595 m!61079))

(assert (=> b!67595 m!61079))

(assert (=> b!67595 m!61081))

(declare-fun m!62717 () Bool)

(assert (=> b!67597 m!62717))

(assert (=> b!67601 m!61079))

(assert (=> b!67601 m!61079))

(declare-fun m!62719 () Bool)

(assert (=> b!67601 m!62719))

(assert (=> b!67600 m!61523))

(assert (=> b!67600 m!61079))

(assert (=> b!67600 m!61523))

(assert (=> b!67600 m!61115))

(assert (=> b!67600 m!61525))

(assert (=> b!67600 m!61115))

(assert (=> b!67600 m!61079))

(declare-fun m!62721 () Bool)

(assert (=> b!67600 m!62721))

(declare-fun m!62723 () Bool)

(assert (=> b!67602 m!62723))

(declare-fun m!62725 () Bool)

(assert (=> b!67598 m!62725))

(assert (=> b!67596 m!61523))

(declare-fun m!62727 () Bool)

(assert (=> b!67596 m!62727))

(declare-fun m!62729 () Bool)

(assert (=> b!67596 m!62729))

(assert (=> b!67596 m!61079))

(declare-fun m!62731 () Bool)

(assert (=> b!67596 m!62731))

(declare-fun m!62733 () Bool)

(assert (=> b!67596 m!62733))

(assert (=> b!67596 m!61523))

(assert (=> b!67596 m!61115))

(assert (=> b!67596 m!61525))

(assert (=> b!67596 m!62731))

(assert (=> b!67596 m!61115))

(declare-fun m!62735 () Bool)

(assert (=> d!14263 m!62735))

(assert (=> d!14263 m!61069))

(assert (=> b!67594 m!61079))

(assert (=> b!67594 m!61079))

(assert (=> b!67594 m!61081))

(assert (=> bm!5672 m!62725))

(assert (=> bm!5596 d!14263))

(declare-fun d!14265 () Bool)

(assert (=> d!14265 (= (isDefined!83 (getValueByKey!129 (toList!723 lt!28652) (_1!1064 lt!28503))) (not (isEmpty!314 (getValueByKey!129 (toList!723 lt!28652) (_1!1064 lt!28503)))))))

(declare-fun bs!2893 () Bool)

(assert (= bs!2893 d!14265))

(assert (=> bs!2893 m!60945))

(declare-fun m!62737 () Bool)

(assert (=> bs!2893 m!62737))

(assert (=> b!66813 d!14265))

(assert (=> b!66813 d!13825))

(declare-fun d!14267 () Bool)

(declare-fun res!36505 () Bool)

(declare-fun e!44326 () Bool)

(assert (=> d!14267 (=> res!36505 e!44326)))

(assert (=> d!14267 (= res!36505 (and ((_ is Cons!1486) lt!28646) (= (_1!1064 (h!2070 lt!28646)) (_1!1064 lt!28500))))))

(assert (=> d!14267 (= (containsKey!133 lt!28646 (_1!1064 lt!28500)) e!44326)))

(declare-fun b!67606 () Bool)

(declare-fun e!44327 () Bool)

(assert (=> b!67606 (= e!44326 e!44327)))

(declare-fun res!36506 () Bool)

(assert (=> b!67606 (=> (not res!36506) (not e!44327))))

(assert (=> b!67606 (= res!36506 (and (or (not ((_ is Cons!1486) lt!28646)) (bvsle (_1!1064 (h!2070 lt!28646)) (_1!1064 lt!28500))) ((_ is Cons!1486) lt!28646) (bvslt (_1!1064 (h!2070 lt!28646)) (_1!1064 lt!28500))))))

(declare-fun b!67607 () Bool)

(assert (=> b!67607 (= e!44327 (containsKey!133 (t!4976 lt!28646) (_1!1064 lt!28500)))))

(assert (= (and d!14267 (not res!36505)) b!67606))

(assert (= (and b!67606 res!36506) b!67607))

(declare-fun m!62739 () Bool)

(assert (=> b!67607 m!62739))

(assert (=> b!66896 d!14267))

(declare-fun d!14269 () Bool)

(declare-fun e!44329 () Bool)

(assert (=> d!14269 e!44329))

(declare-fun res!36507 () Bool)

(assert (=> d!14269 (=> res!36507 e!44329)))

(declare-fun lt!29369 () Bool)

(assert (=> d!14269 (= res!36507 (not lt!29369))))

(declare-fun lt!29366 () Bool)

(assert (=> d!14269 (= lt!29369 lt!29366)))

(declare-fun lt!29367 () Unit!1836)

(declare-fun e!44328 () Unit!1836)

(assert (=> d!14269 (= lt!29367 e!44328)))

(declare-fun c!9448 () Bool)

(assert (=> d!14269 (= c!9448 lt!29366)))

(assert (=> d!14269 (= lt!29366 (containsKey!133 (toList!723 lt!28888) (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!14269 (= (contains!716 lt!28888 (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29369)))

(declare-fun b!67608 () Bool)

(declare-fun lt!29368 () Unit!1836)

(assert (=> b!67608 (= e!44328 lt!29368)))

(assert (=> b!67608 (= lt!29368 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28888) (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> b!67608 (isDefined!83 (getValueByKey!129 (toList!723 lt!28888) (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67609 () Bool)

(declare-fun Unit!1885 () Unit!1836)

(assert (=> b!67609 (= e!44328 Unit!1885)))

(declare-fun b!67610 () Bool)

(assert (=> b!67610 (= e!44329 (isDefined!83 (getValueByKey!129 (toList!723 lt!28888) (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14269 c!9448) b!67608))

(assert (= (and d!14269 (not c!9448)) b!67609))

(assert (= (and d!14269 (not res!36507)) b!67610))

(declare-fun m!62741 () Bool)

(assert (=> d!14269 m!62741))

(declare-fun m!62743 () Bool)

(assert (=> b!67608 m!62743))

(assert (=> b!67608 m!61459))

(assert (=> b!67608 m!61459))

(declare-fun m!62745 () Bool)

(assert (=> b!67608 m!62745))

(assert (=> b!67610 m!61459))

(assert (=> b!67610 m!61459))

(assert (=> b!67610 m!62745))

(assert (=> d!13851 d!14269))

(declare-fun b!67612 () Bool)

(declare-fun e!44330 () Option!135)

(declare-fun e!44331 () Option!135)

(assert (=> b!67612 (= e!44330 e!44331)))

(declare-fun c!9450 () Bool)

(assert (=> b!67612 (= c!9450 (and ((_ is Cons!1486) lt!28890) (not (= (_1!1064 (h!2070 lt!28890)) (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun d!14271 () Bool)

(declare-fun c!9449 () Bool)

(assert (=> d!14271 (= c!9449 (and ((_ is Cons!1486) lt!28890) (= (_1!1064 (h!2070 lt!28890)) (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14271 (= (getValueByKey!129 lt!28890 (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) e!44330)))

(declare-fun b!67613 () Bool)

(assert (=> b!67613 (= e!44331 (getValueByKey!129 (t!4976 lt!28890) (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67611 () Bool)

(assert (=> b!67611 (= e!44330 (Some!134 (_2!1064 (h!2070 lt!28890))))))

(declare-fun b!67614 () Bool)

(assert (=> b!67614 (= e!44331 None!133)))

(assert (= (and d!14271 c!9449) b!67611))

(assert (= (and d!14271 (not c!9449)) b!67612))

(assert (= (and b!67612 c!9450) b!67613))

(assert (= (and b!67612 (not c!9450)) b!67614))

(declare-fun m!62747 () Bool)

(assert (=> b!67613 m!62747))

(assert (=> d!13851 d!14271))

(declare-fun d!14273 () Bool)

(assert (=> d!14273 (= (getValueByKey!129 lt!28890 (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun lt!29370 () Unit!1836)

(assert (=> d!14273 (= lt!29370 (choose!376 lt!28890 (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun e!44332 () Bool)

(assert (=> d!14273 e!44332))

(declare-fun res!36508 () Bool)

(assert (=> d!14273 (=> (not res!36508) (not e!44332))))

(assert (=> d!14273 (= res!36508 (isStrictlySorted!284 lt!28890))))

(assert (=> d!14273 (= (lemmaContainsTupThenGetReturnValue!48 lt!28890 (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29370)))

(declare-fun b!67615 () Bool)

(declare-fun res!36509 () Bool)

(assert (=> b!67615 (=> (not res!36509) (not e!44332))))

(assert (=> b!67615 (= res!36509 (containsKey!133 lt!28890 (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67616 () Bool)

(assert (=> b!67616 (= e!44332 (contains!718 lt!28890 (tuple2!2109 (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14273 res!36508) b!67615))

(assert (= (and b!67615 res!36509) b!67616))

(assert (=> d!14273 m!61453))

(declare-fun m!62749 () Bool)

(assert (=> d!14273 m!62749))

(declare-fun m!62751 () Bool)

(assert (=> d!14273 m!62751))

(declare-fun m!62753 () Bool)

(assert (=> b!67615 m!62753))

(declare-fun m!62755 () Bool)

(assert (=> b!67616 m!62755))

(assert (=> d!13851 d!14273))

(declare-fun b!67617 () Bool)

(declare-fun e!44334 () List!1490)

(declare-fun call!5677 () List!1490)

(assert (=> b!67617 (= e!44334 call!5677)))

(declare-fun b!67618 () Bool)

(declare-fun e!44333 () List!1490)

(declare-fun call!5676 () List!1490)

(assert (=> b!67618 (= e!44333 call!5676)))

(declare-fun bm!5673 () Bool)

(declare-fun call!5678 () List!1490)

(assert (=> bm!5673 (= call!5676 call!5678)))

(declare-fun c!9452 () Bool)

(declare-fun e!44337 () List!1490)

(declare-fun bm!5674 () Bool)

(assert (=> bm!5674 (= call!5677 ($colon$colon!62 e!44337 (ite c!9452 (h!2070 (toList!723 lt!28596)) (tuple2!2109 (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun c!9454 () Bool)

(assert (=> bm!5674 (= c!9454 c!9452)))

(declare-fun d!14275 () Bool)

(declare-fun e!44335 () Bool)

(assert (=> d!14275 e!44335))

(declare-fun res!36511 () Bool)

(assert (=> d!14275 (=> (not res!36511) (not e!44335))))

(declare-fun lt!29371 () List!1490)

(assert (=> d!14275 (= res!36511 (isStrictlySorted!284 lt!29371))))

(assert (=> d!14275 (= lt!29371 e!44334)))

(assert (=> d!14275 (= c!9452 (and ((_ is Cons!1486) (toList!723 lt!28596)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28596))) (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14275 (isStrictlySorted!284 (toList!723 lt!28596))))

(assert (=> d!14275 (= (insertStrictlySorted!50 (toList!723 lt!28596) (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29371)))

(declare-fun bm!5675 () Bool)

(assert (=> bm!5675 (= call!5678 call!5677)))

(declare-fun b!67619 () Bool)

(assert (=> b!67619 (= e!44337 (insertStrictlySorted!50 (t!4976 (toList!723 lt!28596)) (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67620 () Bool)

(declare-fun c!9453 () Bool)

(assert (=> b!67620 (= c!9453 (and ((_ is Cons!1486) (toList!723 lt!28596)) (bvsgt (_1!1064 (h!2070 (toList!723 lt!28596))) (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun e!44336 () List!1490)

(assert (=> b!67620 (= e!44336 e!44333)))

(declare-fun b!67621 () Bool)

(assert (=> b!67621 (= e!44336 call!5678)))

(declare-fun b!67622 () Bool)

(declare-fun res!36510 () Bool)

(assert (=> b!67622 (=> (not res!36510) (not e!44335))))

(assert (=> b!67622 (= res!36510 (containsKey!133 lt!29371 (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67623 () Bool)

(assert (=> b!67623 (= e!44333 call!5676)))

(declare-fun c!9451 () Bool)

(declare-fun b!67624 () Bool)

(assert (=> b!67624 (= e!44337 (ite c!9451 (t!4976 (toList!723 lt!28596)) (ite c!9453 (Cons!1486 (h!2070 (toList!723 lt!28596)) (t!4976 (toList!723 lt!28596))) Nil!1487)))))

(declare-fun b!67625 () Bool)

(assert (=> b!67625 (= e!44335 (contains!718 lt!29371 (tuple2!2109 (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!67626 () Bool)

(assert (=> b!67626 (= e!44334 e!44336)))

(assert (=> b!67626 (= c!9451 (and ((_ is Cons!1486) (toList!723 lt!28596)) (= (_1!1064 (h!2070 (toList!723 lt!28596))) (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14275 c!9452) b!67617))

(assert (= (and d!14275 (not c!9452)) b!67626))

(assert (= (and b!67626 c!9451) b!67621))

(assert (= (and b!67626 (not c!9451)) b!67620))

(assert (= (and b!67620 c!9453) b!67623))

(assert (= (and b!67620 (not c!9453)) b!67618))

(assert (= (or b!67623 b!67618) bm!5673))

(assert (= (or b!67621 bm!5673) bm!5675))

(assert (= (or b!67617 bm!5675) bm!5674))

(assert (= (and bm!5674 c!9454) b!67619))

(assert (= (and bm!5674 (not c!9454)) b!67624))

(assert (= (and d!14275 res!36511) b!67622))

(assert (= (and b!67622 res!36510) b!67625))

(declare-fun m!62757 () Bool)

(assert (=> bm!5674 m!62757))

(declare-fun m!62759 () Bool)

(assert (=> d!14275 m!62759))

(declare-fun m!62761 () Bool)

(assert (=> d!14275 m!62761))

(declare-fun m!62763 () Bool)

(assert (=> b!67622 m!62763))

(declare-fun m!62765 () Bool)

(assert (=> b!67619 m!62765))

(declare-fun m!62767 () Bool)

(assert (=> b!67625 m!62767))

(assert (=> d!13851 d!14275))

(declare-fun d!14277 () Bool)

(assert (=> d!14277 (= (apply!72 lt!28798 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1130 (getValueByKey!129 (toList!723 lt!28798) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2894 () Bool)

(assert (= bs!2894 d!14277))

(assert (=> bs!2894 m!61079))

(declare-fun m!62769 () Bool)

(assert (=> bs!2894 m!62769))

(assert (=> bs!2894 m!62769))

(declare-fun m!62771 () Bool)

(assert (=> bs!2894 m!62771))

(assert (=> b!66761 d!14277))

(declare-fun c!9455 () Bool)

(declare-fun d!14279 () Bool)

(assert (=> d!14279 (= c!9455 ((_ is ValueCellFull!882) (select (arr!1835 (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741)) #b00000000000000000000000000000000)))))

(declare-fun e!44338 () V!2915)

(assert (=> d!14279 (= (get!1127 (select (arr!1835 (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44338)))

(declare-fun b!67627 () Bool)

(assert (=> b!67627 (= e!44338 (get!1128 (select (arr!1835 (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67628 () Bool)

(assert (=> b!67628 (= e!44338 (get!1129 (select (arr!1835 (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14279 c!9455) b!67627))

(assert (= (and d!14279 (not c!9455)) b!67628))

(assert (=> b!67627 m!61113))

(assert (=> b!67627 m!61115))

(declare-fun m!62773 () Bool)

(assert (=> b!67627 m!62773))

(assert (=> b!67628 m!61113))

(assert (=> b!67628 m!61115))

(declare-fun m!62775 () Bool)

(assert (=> b!67628 m!62775))

(assert (=> b!66761 d!14279))

(assert (=> b!66885 d!14081))

(declare-fun b!67647 () Bool)

(declare-fun lt!29377 () SeekEntryResult!243)

(assert (=> b!67647 (and (bvsge (index!3102 lt!29377) #b00000000000000000000000000000000) (bvslt (index!3102 lt!29377) (size!2069 (_keys!3787 newMap!16))))))

(declare-fun res!36519 () Bool)

(assert (=> b!67647 (= res!36519 (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3102 lt!29377)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun e!44349 () Bool)

(assert (=> b!67647 (=> res!36519 e!44349)))

(declare-fun e!44352 () Bool)

(assert (=> b!67647 (= e!44352 e!44349)))

(declare-fun e!44351 () SeekEntryResult!243)

(declare-fun b!67648 () Bool)

(assert (=> b!67648 (= e!44351 (Intermediate!243 false (toIndex!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (mask!6082 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!67649 () Bool)

(declare-fun e!44353 () SeekEntryResult!243)

(assert (=> b!67649 (= e!44353 e!44351)))

(declare-fun lt!29376 () (_ BitVec 64))

(declare-fun c!9462 () Bool)

(assert (=> b!67649 (= c!9462 (or (= lt!29376 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (= (bvadd lt!29376 lt!29376) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67650 () Bool)

(declare-fun e!44350 () Bool)

(assert (=> b!67650 (= e!44350 (bvsge (x!10713 lt!29377) #b01111111111111111111111111111110))))

(declare-fun b!67651 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!67651 (= e!44351 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (mask!6082 newMap!16)) #b00000000000000000000000000000000 (mask!6082 newMap!16)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun d!14281 () Bool)

(assert (=> d!14281 e!44350))

(declare-fun c!9464 () Bool)

(assert (=> d!14281 (= c!9464 (and ((_ is Intermediate!243) lt!29377) (undefined!1055 lt!29377)))))

(assert (=> d!14281 (= lt!29377 e!44353)))

(declare-fun c!9463 () Bool)

(assert (=> d!14281 (= c!9463 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!14281 (= lt!29376 (select (arr!1834 (_keys!3787 newMap!16)) (toIndex!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (mask!6082 newMap!16))))))

(assert (=> d!14281 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14281 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (mask!6082 newMap!16)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)) lt!29377)))

(declare-fun b!67652 () Bool)

(assert (=> b!67652 (and (bvsge (index!3102 lt!29377) #b00000000000000000000000000000000) (bvslt (index!3102 lt!29377) (size!2069 (_keys!3787 newMap!16))))))

(declare-fun res!36520 () Bool)

(assert (=> b!67652 (= res!36520 (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3102 lt!29377)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67652 (=> res!36520 e!44349)))

(declare-fun b!67653 () Bool)

(assert (=> b!67653 (= e!44350 e!44352)))

(declare-fun res!36518 () Bool)

(assert (=> b!67653 (= res!36518 (and ((_ is Intermediate!243) lt!29377) (not (undefined!1055 lt!29377)) (bvslt (x!10713 lt!29377) #b01111111111111111111111111111110) (bvsge (x!10713 lt!29377) #b00000000000000000000000000000000) (bvsge (x!10713 lt!29377) #b00000000000000000000000000000000)))))

(assert (=> b!67653 (=> (not res!36518) (not e!44352))))

(declare-fun b!67654 () Bool)

(assert (=> b!67654 (and (bvsge (index!3102 lt!29377) #b00000000000000000000000000000000) (bvslt (index!3102 lt!29377) (size!2069 (_keys!3787 newMap!16))))))

(assert (=> b!67654 (= e!44349 (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3102 lt!29377)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67655 () Bool)

(assert (=> b!67655 (= e!44353 (Intermediate!243 true (toIndex!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (mask!6082 newMap!16)) #b00000000000000000000000000000000))))

(assert (= (and d!14281 c!9463) b!67655))

(assert (= (and d!14281 (not c!9463)) b!67649))

(assert (= (and b!67649 c!9462) b!67648))

(assert (= (and b!67649 (not c!9462)) b!67651))

(assert (= (and d!14281 c!9464) b!67650))

(assert (= (and d!14281 (not c!9464)) b!67653))

(assert (= (and b!67653 res!36518) b!67647))

(assert (= (and b!67647 (not res!36519)) b!67652))

(assert (= (and b!67652 (not res!36520)) b!67654))

(assert (=> b!67651 m!61265))

(declare-fun m!62777 () Bool)

(assert (=> b!67651 m!62777))

(assert (=> b!67651 m!62777))

(assert (=> b!67651 m!60719))

(declare-fun m!62779 () Bool)

(assert (=> b!67651 m!62779))

(declare-fun m!62781 () Bool)

(assert (=> b!67654 m!62781))

(assert (=> d!14281 m!61265))

(declare-fun m!62783 () Bool)

(assert (=> d!14281 m!62783))

(assert (=> d!14281 m!61069))

(assert (=> b!67652 m!62781))

(assert (=> b!67647 m!62781))

(assert (=> d!13793 d!14281))

(declare-fun d!14283 () Bool)

(declare-fun lt!29383 () (_ BitVec 32))

(declare-fun lt!29382 () (_ BitVec 32))

(assert (=> d!14283 (= lt!29383 (bvmul (bvxor lt!29382 (bvlshr lt!29382 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!14283 (= lt!29382 ((_ extract 31 0) (bvand (bvxor (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvlshr (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!14283 (and (bvsge (mask!6082 newMap!16) #b00000000000000000000000000000000) (let ((res!36521 (let ((h!2073 ((_ extract 31 0) (bvand (bvxor (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvlshr (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!10815 (bvmul (bvxor h!2073 (bvlshr h!2073 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!10815 (bvlshr x!10815 #b00000000000000000000000000001101)) (mask!6082 newMap!16)))))) (and (bvslt res!36521 (bvadd (mask!6082 newMap!16) #b00000000000000000000000000000001)) (bvsge res!36521 #b00000000000000000000000000000000))))))

(assert (=> d!14283 (= (toIndex!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (mask!6082 newMap!16)) (bvand (bvxor lt!29383 (bvlshr lt!29383 #b00000000000000000000000000001101)) (mask!6082 newMap!16)))))

(assert (=> d!13793 d!14283))

(assert (=> d!13793 d!14023))

(declare-fun d!14285 () Bool)

(declare-fun res!36522 () Bool)

(declare-fun e!44354 () Bool)

(assert (=> d!14285 (=> res!36522 e!44354)))

(assert (=> d!14285 (= res!36522 (= (select (arr!1834 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> d!14285 (= (arrayContainsKey!0 (_keys!3787 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!44354)))

(declare-fun b!67656 () Bool)

(declare-fun e!44355 () Bool)

(assert (=> b!67656 (= e!44354 e!44355)))

(declare-fun res!36523 () Bool)

(assert (=> b!67656 (=> (not res!36523) (not e!44355))))

(assert (=> b!67656 (= res!36523 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2069 (_keys!3787 newMap!16))))))

(declare-fun b!67657 () Bool)

(assert (=> b!67657 (= e!44355 (arrayContainsKey!0 (_keys!3787 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!14285 (not res!36522)) b!67656))

(assert (= (and b!67656 res!36523) b!67657))

(assert (=> d!14285 m!62697))

(assert (=> b!67657 m!60719))

(declare-fun m!62785 () Bool)

(assert (=> b!67657 m!62785))

(assert (=> b!67127 d!14285))

(declare-fun d!14287 () Bool)

(declare-fun lt!29384 () Bool)

(assert (=> d!14287 (= lt!29384 (select (content!70 (toList!723 lt!29120)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))

(declare-fun e!44356 () Bool)

(assert (=> d!14287 (= lt!29384 e!44356)))

(declare-fun res!36525 () Bool)

(assert (=> d!14287 (=> (not res!36525) (not e!44356))))

(assert (=> d!14287 (= res!36525 ((_ is Cons!1486) (toList!723 lt!29120)))))

(assert (=> d!14287 (= (contains!718 (toList!723 lt!29120) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) lt!29384)))

(declare-fun b!67658 () Bool)

(declare-fun e!44357 () Bool)

(assert (=> b!67658 (= e!44356 e!44357)))

(declare-fun res!36524 () Bool)

(assert (=> b!67658 (=> res!36524 e!44357)))

(assert (=> b!67658 (= res!36524 (= (h!2070 (toList!723 lt!29120)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))

(declare-fun b!67659 () Bool)

(assert (=> b!67659 (= e!44357 (contains!718 (t!4976 (toList!723 lt!29120)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))

(assert (= (and d!14287 res!36525) b!67658))

(assert (= (and b!67658 (not res!36524)) b!67659))

(declare-fun m!62787 () Bool)

(assert (=> d!14287 m!62787))

(declare-fun m!62789 () Bool)

(assert (=> d!14287 m!62789))

(declare-fun m!62791 () Bool)

(assert (=> b!67659 m!62791))

(assert (=> b!67163 d!14287))

(declare-fun d!14289 () Bool)

(assert (=> d!14289 (= (apply!72 lt!28938 lt!28935) (get!1130 (getValueByKey!129 (toList!723 lt!28938) lt!28935)))))

(declare-fun bs!2895 () Bool)

(assert (= bs!2895 d!14289))

(declare-fun m!62793 () Bool)

(assert (=> bs!2895 m!62793))

(assert (=> bs!2895 m!62793))

(declare-fun m!62795 () Bool)

(assert (=> bs!2895 m!62795))

(assert (=> b!66981 d!14289))

(declare-fun d!14291 () Bool)

(assert (=> d!14291 (= (apply!72 lt!28926 lt!28940) (get!1130 (getValueByKey!129 (toList!723 lt!28926) lt!28940)))))

(declare-fun bs!2896 () Bool)

(assert (= bs!2896 d!14291))

(declare-fun m!62797 () Bool)

(assert (=> bs!2896 m!62797))

(assert (=> bs!2896 m!62797))

(declare-fun m!62799 () Bool)

(assert (=> bs!2896 m!62799))

(assert (=> b!66981 d!14291))

(declare-fun d!14293 () Bool)

(assert (=> d!14293 (= (apply!72 (+!87 lt!28938 (tuple2!2109 lt!28933 (zeroValue!2055 newMap!16))) lt!28935) (apply!72 lt!28938 lt!28935))))

(declare-fun lt!29385 () Unit!1836)

(assert (=> d!14293 (= lt!29385 (choose!379 lt!28938 lt!28933 (zeroValue!2055 newMap!16) lt!28935))))

(declare-fun e!44358 () Bool)

(assert (=> d!14293 e!44358))

(declare-fun res!36526 () Bool)

(assert (=> d!14293 (=> (not res!36526) (not e!44358))))

(assert (=> d!14293 (= res!36526 (contains!716 lt!28938 lt!28935))))

(assert (=> d!14293 (= (addApplyDifferent!48 lt!28938 lt!28933 (zeroValue!2055 newMap!16) lt!28935) lt!29385)))

(declare-fun b!67660 () Bool)

(assert (=> b!67660 (= e!44358 (not (= lt!28935 lt!28933)))))

(assert (= (and d!14293 res!36526) b!67660))

(assert (=> d!14293 m!61567))

(assert (=> d!14293 m!61541))

(declare-fun m!62801 () Bool)

(assert (=> d!14293 m!62801))

(declare-fun m!62803 () Bool)

(assert (=> d!14293 m!62803))

(assert (=> d!14293 m!61541))

(assert (=> d!14293 m!61543))

(assert (=> b!66981 d!14293))

(declare-fun d!14295 () Bool)

(declare-fun e!44359 () Bool)

(assert (=> d!14295 e!44359))

(declare-fun res!36528 () Bool)

(assert (=> d!14295 (=> (not res!36528) (not e!44359))))

(declare-fun lt!29387 () ListLongMap!1415)

(assert (=> d!14295 (= res!36528 (contains!716 lt!29387 (_1!1064 (tuple2!2109 lt!28931 (minValue!2055 newMap!16)))))))

(declare-fun lt!29389 () List!1490)

(assert (=> d!14295 (= lt!29387 (ListLongMap!1416 lt!29389))))

(declare-fun lt!29388 () Unit!1836)

(declare-fun lt!29386 () Unit!1836)

(assert (=> d!14295 (= lt!29388 lt!29386)))

(assert (=> d!14295 (= (getValueByKey!129 lt!29389 (_1!1064 (tuple2!2109 lt!28931 (minValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 lt!28931 (minValue!2055 newMap!16)))))))

(assert (=> d!14295 (= lt!29386 (lemmaContainsTupThenGetReturnValue!48 lt!29389 (_1!1064 (tuple2!2109 lt!28931 (minValue!2055 newMap!16))) (_2!1064 (tuple2!2109 lt!28931 (minValue!2055 newMap!16)))))))

(assert (=> d!14295 (= lt!29389 (insertStrictlySorted!50 (toList!723 lt!28926) (_1!1064 (tuple2!2109 lt!28931 (minValue!2055 newMap!16))) (_2!1064 (tuple2!2109 lt!28931 (minValue!2055 newMap!16)))))))

(assert (=> d!14295 (= (+!87 lt!28926 (tuple2!2109 lt!28931 (minValue!2055 newMap!16))) lt!29387)))

(declare-fun b!67661 () Bool)

(declare-fun res!36527 () Bool)

(assert (=> b!67661 (=> (not res!36527) (not e!44359))))

(assert (=> b!67661 (= res!36527 (= (getValueByKey!129 (toList!723 lt!29387) (_1!1064 (tuple2!2109 lt!28931 (minValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 lt!28931 (minValue!2055 newMap!16))))))))

(declare-fun b!67662 () Bool)

(assert (=> b!67662 (= e!44359 (contains!718 (toList!723 lt!29387) (tuple2!2109 lt!28931 (minValue!2055 newMap!16))))))

(assert (= (and d!14295 res!36528) b!67661))

(assert (= (and b!67661 res!36527) b!67662))

(declare-fun m!62805 () Bool)

(assert (=> d!14295 m!62805))

(declare-fun m!62807 () Bool)

(assert (=> d!14295 m!62807))

(declare-fun m!62809 () Bool)

(assert (=> d!14295 m!62809))

(declare-fun m!62811 () Bool)

(assert (=> d!14295 m!62811))

(declare-fun m!62813 () Bool)

(assert (=> b!67661 m!62813))

(declare-fun m!62815 () Bool)

(assert (=> b!67662 m!62815))

(assert (=> b!66981 d!14295))

(declare-fun d!14297 () Bool)

(declare-fun e!44360 () Bool)

(assert (=> d!14297 e!44360))

(declare-fun res!36530 () Bool)

(assert (=> d!14297 (=> (not res!36530) (not e!44360))))

(declare-fun lt!29391 () ListLongMap!1415)

(assert (=> d!14297 (= res!36530 (contains!716 lt!29391 (_1!1064 (tuple2!2109 lt!28933 (zeroValue!2055 newMap!16)))))))

(declare-fun lt!29393 () List!1490)

(assert (=> d!14297 (= lt!29391 (ListLongMap!1416 lt!29393))))

(declare-fun lt!29392 () Unit!1836)

(declare-fun lt!29390 () Unit!1836)

(assert (=> d!14297 (= lt!29392 lt!29390)))

(assert (=> d!14297 (= (getValueByKey!129 lt!29393 (_1!1064 (tuple2!2109 lt!28933 (zeroValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 lt!28933 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14297 (= lt!29390 (lemmaContainsTupThenGetReturnValue!48 lt!29393 (_1!1064 (tuple2!2109 lt!28933 (zeroValue!2055 newMap!16))) (_2!1064 (tuple2!2109 lt!28933 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14297 (= lt!29393 (insertStrictlySorted!50 (toList!723 lt!28938) (_1!1064 (tuple2!2109 lt!28933 (zeroValue!2055 newMap!16))) (_2!1064 (tuple2!2109 lt!28933 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14297 (= (+!87 lt!28938 (tuple2!2109 lt!28933 (zeroValue!2055 newMap!16))) lt!29391)))

(declare-fun b!67663 () Bool)

(declare-fun res!36529 () Bool)

(assert (=> b!67663 (=> (not res!36529) (not e!44360))))

(assert (=> b!67663 (= res!36529 (= (getValueByKey!129 (toList!723 lt!29391) (_1!1064 (tuple2!2109 lt!28933 (zeroValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 lt!28933 (zeroValue!2055 newMap!16))))))))

(declare-fun b!67664 () Bool)

(assert (=> b!67664 (= e!44360 (contains!718 (toList!723 lt!29391) (tuple2!2109 lt!28933 (zeroValue!2055 newMap!16))))))

(assert (= (and d!14297 res!36530) b!67663))

(assert (= (and b!67663 res!36529) b!67664))

(declare-fun m!62817 () Bool)

(assert (=> d!14297 m!62817))

(declare-fun m!62819 () Bool)

(assert (=> d!14297 m!62819))

(declare-fun m!62821 () Bool)

(assert (=> d!14297 m!62821))

(declare-fun m!62823 () Bool)

(assert (=> d!14297 m!62823))

(declare-fun m!62825 () Bool)

(assert (=> b!67663 m!62825))

(declare-fun m!62827 () Bool)

(assert (=> b!67664 m!62827))

(assert (=> b!66981 d!14297))

(declare-fun d!14299 () Bool)

(assert (=> d!14299 (contains!716 (+!87 lt!28927 (tuple2!2109 lt!28936 (zeroValue!2055 newMap!16))) lt!28930)))

(declare-fun lt!29394 () Unit!1836)

(assert (=> d!14299 (= lt!29394 (choose!380 lt!28927 lt!28936 (zeroValue!2055 newMap!16) lt!28930))))

(assert (=> d!14299 (contains!716 lt!28927 lt!28930)))

(assert (=> d!14299 (= (addStillContains!48 lt!28927 lt!28936 (zeroValue!2055 newMap!16) lt!28930) lt!29394)))

(declare-fun bs!2897 () Bool)

(assert (= bs!2897 d!14299))

(assert (=> bs!2897 m!61547))

(assert (=> bs!2897 m!61547))

(assert (=> bs!2897 m!61549))

(declare-fun m!62829 () Bool)

(assert (=> bs!2897 m!62829))

(declare-fun m!62831 () Bool)

(assert (=> bs!2897 m!62831))

(assert (=> b!66981 d!14299))

(declare-fun d!14301 () Bool)

(assert (=> d!14301 (= (apply!72 (+!87 lt!28938 (tuple2!2109 lt!28933 (zeroValue!2055 newMap!16))) lt!28935) (get!1130 (getValueByKey!129 (toList!723 (+!87 lt!28938 (tuple2!2109 lt!28933 (zeroValue!2055 newMap!16)))) lt!28935)))))

(declare-fun bs!2898 () Bool)

(assert (= bs!2898 d!14301))

(declare-fun m!62833 () Bool)

(assert (=> bs!2898 m!62833))

(assert (=> bs!2898 m!62833))

(declare-fun m!62835 () Bool)

(assert (=> bs!2898 m!62835))

(assert (=> b!66981 d!14301))

(declare-fun d!14303 () Bool)

(assert (=> d!14303 (= (apply!72 (+!87 lt!28941 (tuple2!2109 lt!28932 (minValue!2055 newMap!16))) lt!28928) (apply!72 lt!28941 lt!28928))))

(declare-fun lt!29395 () Unit!1836)

(assert (=> d!14303 (= lt!29395 (choose!379 lt!28941 lt!28932 (minValue!2055 newMap!16) lt!28928))))

(declare-fun e!44361 () Bool)

(assert (=> d!14303 e!44361))

(declare-fun res!36531 () Bool)

(assert (=> d!14303 (=> (not res!36531) (not e!44361))))

(assert (=> d!14303 (= res!36531 (contains!716 lt!28941 lt!28928))))

(assert (=> d!14303 (= (addApplyDifferent!48 lt!28941 lt!28932 (minValue!2055 newMap!16) lt!28928) lt!29395)))

(declare-fun b!67665 () Bool)

(assert (=> b!67665 (= e!44361 (not (= lt!28928 lt!28932)))))

(assert (= (and d!14303 res!36531) b!67665))

(assert (=> d!14303 m!61553))

(assert (=> d!14303 m!61563))

(declare-fun m!62837 () Bool)

(assert (=> d!14303 m!62837))

(declare-fun m!62839 () Bool)

(assert (=> d!14303 m!62839))

(assert (=> d!14303 m!61563))

(assert (=> d!14303 m!61565))

(assert (=> b!66981 d!14303))

(declare-fun d!14305 () Bool)

(declare-fun e!44362 () Bool)

(assert (=> d!14305 e!44362))

(declare-fun res!36533 () Bool)

(assert (=> d!14305 (=> (not res!36533) (not e!44362))))

(declare-fun lt!29397 () ListLongMap!1415)

(assert (=> d!14305 (= res!36533 (contains!716 lt!29397 (_1!1064 (tuple2!2109 lt!28932 (minValue!2055 newMap!16)))))))

(declare-fun lt!29399 () List!1490)

(assert (=> d!14305 (= lt!29397 (ListLongMap!1416 lt!29399))))

(declare-fun lt!29398 () Unit!1836)

(declare-fun lt!29396 () Unit!1836)

(assert (=> d!14305 (= lt!29398 lt!29396)))

(assert (=> d!14305 (= (getValueByKey!129 lt!29399 (_1!1064 (tuple2!2109 lt!28932 (minValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 lt!28932 (minValue!2055 newMap!16)))))))

(assert (=> d!14305 (= lt!29396 (lemmaContainsTupThenGetReturnValue!48 lt!29399 (_1!1064 (tuple2!2109 lt!28932 (minValue!2055 newMap!16))) (_2!1064 (tuple2!2109 lt!28932 (minValue!2055 newMap!16)))))))

(assert (=> d!14305 (= lt!29399 (insertStrictlySorted!50 (toList!723 lt!28941) (_1!1064 (tuple2!2109 lt!28932 (minValue!2055 newMap!16))) (_2!1064 (tuple2!2109 lt!28932 (minValue!2055 newMap!16)))))))

(assert (=> d!14305 (= (+!87 lt!28941 (tuple2!2109 lt!28932 (minValue!2055 newMap!16))) lt!29397)))

(declare-fun b!67666 () Bool)

(declare-fun res!36532 () Bool)

(assert (=> b!67666 (=> (not res!36532) (not e!44362))))

(assert (=> b!67666 (= res!36532 (= (getValueByKey!129 (toList!723 lt!29397) (_1!1064 (tuple2!2109 lt!28932 (minValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 lt!28932 (minValue!2055 newMap!16))))))))

(declare-fun b!67667 () Bool)

(assert (=> b!67667 (= e!44362 (contains!718 (toList!723 lt!29397) (tuple2!2109 lt!28932 (minValue!2055 newMap!16))))))

(assert (= (and d!14305 res!36533) b!67666))

(assert (= (and b!67666 res!36532) b!67667))

(declare-fun m!62841 () Bool)

(assert (=> d!14305 m!62841))

(declare-fun m!62843 () Bool)

(assert (=> d!14305 m!62843))

(declare-fun m!62845 () Bool)

(assert (=> d!14305 m!62845))

(declare-fun m!62847 () Bool)

(assert (=> d!14305 m!62847))

(declare-fun m!62849 () Bool)

(assert (=> b!67666 m!62849))

(declare-fun m!62851 () Bool)

(assert (=> b!67667 m!62851))

(assert (=> b!66981 d!14305))

(declare-fun d!14307 () Bool)

(assert (=> d!14307 (= (apply!72 lt!28941 lt!28928) (get!1130 (getValueByKey!129 (toList!723 lt!28941) lt!28928)))))

(declare-fun bs!2899 () Bool)

(assert (= bs!2899 d!14307))

(declare-fun m!62853 () Bool)

(assert (=> bs!2899 m!62853))

(assert (=> bs!2899 m!62853))

(declare-fun m!62855 () Bool)

(assert (=> bs!2899 m!62855))

(assert (=> b!66981 d!14307))

(declare-fun d!14309 () Bool)

(assert (=> d!14309 (= (apply!72 (+!87 lt!28926 (tuple2!2109 lt!28931 (minValue!2055 newMap!16))) lt!28940) (get!1130 (getValueByKey!129 (toList!723 (+!87 lt!28926 (tuple2!2109 lt!28931 (minValue!2055 newMap!16)))) lt!28940)))))

(declare-fun bs!2900 () Bool)

(assert (= bs!2900 d!14309))

(declare-fun m!62857 () Bool)

(assert (=> bs!2900 m!62857))

(assert (=> bs!2900 m!62857))

(declare-fun m!62859 () Bool)

(assert (=> bs!2900 m!62859))

(assert (=> b!66981 d!14309))

(declare-fun d!14311 () Bool)

(assert (=> d!14311 (= (apply!72 (+!87 lt!28941 (tuple2!2109 lt!28932 (minValue!2055 newMap!16))) lt!28928) (get!1130 (getValueByKey!129 (toList!723 (+!87 lt!28941 (tuple2!2109 lt!28932 (minValue!2055 newMap!16)))) lt!28928)))))

(declare-fun bs!2901 () Bool)

(assert (= bs!2901 d!14311))

(declare-fun m!62861 () Bool)

(assert (=> bs!2901 m!62861))

(assert (=> bs!2901 m!62861))

(declare-fun m!62863 () Bool)

(assert (=> bs!2901 m!62863))

(assert (=> b!66981 d!14311))

(declare-fun d!14313 () Bool)

(declare-fun e!44363 () Bool)

(assert (=> d!14313 e!44363))

(declare-fun res!36535 () Bool)

(assert (=> d!14313 (=> (not res!36535) (not e!44363))))

(declare-fun lt!29401 () ListLongMap!1415)

(assert (=> d!14313 (= res!36535 (contains!716 lt!29401 (_1!1064 (tuple2!2109 lt!28936 (zeroValue!2055 newMap!16)))))))

(declare-fun lt!29403 () List!1490)

(assert (=> d!14313 (= lt!29401 (ListLongMap!1416 lt!29403))))

(declare-fun lt!29402 () Unit!1836)

(declare-fun lt!29400 () Unit!1836)

(assert (=> d!14313 (= lt!29402 lt!29400)))

(assert (=> d!14313 (= (getValueByKey!129 lt!29403 (_1!1064 (tuple2!2109 lt!28936 (zeroValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 lt!28936 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14313 (= lt!29400 (lemmaContainsTupThenGetReturnValue!48 lt!29403 (_1!1064 (tuple2!2109 lt!28936 (zeroValue!2055 newMap!16))) (_2!1064 (tuple2!2109 lt!28936 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14313 (= lt!29403 (insertStrictlySorted!50 (toList!723 lt!28927) (_1!1064 (tuple2!2109 lt!28936 (zeroValue!2055 newMap!16))) (_2!1064 (tuple2!2109 lt!28936 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14313 (= (+!87 lt!28927 (tuple2!2109 lt!28936 (zeroValue!2055 newMap!16))) lt!29401)))

(declare-fun b!67668 () Bool)

(declare-fun res!36534 () Bool)

(assert (=> b!67668 (=> (not res!36534) (not e!44363))))

(assert (=> b!67668 (= res!36534 (= (getValueByKey!129 (toList!723 lt!29401) (_1!1064 (tuple2!2109 lt!28936 (zeroValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 lt!28936 (zeroValue!2055 newMap!16))))))))

(declare-fun b!67669 () Bool)

(assert (=> b!67669 (= e!44363 (contains!718 (toList!723 lt!29401) (tuple2!2109 lt!28936 (zeroValue!2055 newMap!16))))))

(assert (= (and d!14313 res!36535) b!67668))

(assert (= (and b!67668 res!36534) b!67669))

(declare-fun m!62865 () Bool)

(assert (=> d!14313 m!62865))

(declare-fun m!62867 () Bool)

(assert (=> d!14313 m!62867))

(declare-fun m!62869 () Bool)

(assert (=> d!14313 m!62869))

(declare-fun m!62871 () Bool)

(assert (=> d!14313 m!62871))

(declare-fun m!62873 () Bool)

(assert (=> b!67668 m!62873))

(declare-fun m!62875 () Bool)

(assert (=> b!67669 m!62875))

(assert (=> b!66981 d!14313))

(declare-fun d!14315 () Bool)

(assert (=> d!14315 (= (apply!72 (+!87 lt!28926 (tuple2!2109 lt!28931 (minValue!2055 newMap!16))) lt!28940) (apply!72 lt!28926 lt!28940))))

(declare-fun lt!29404 () Unit!1836)

(assert (=> d!14315 (= lt!29404 (choose!379 lt!28926 lt!28931 (minValue!2055 newMap!16) lt!28940))))

(declare-fun e!44364 () Bool)

(assert (=> d!14315 e!44364))

(declare-fun res!36536 () Bool)

(assert (=> d!14315 (=> (not res!36536) (not e!44364))))

(assert (=> d!14315 (= res!36536 (contains!716 lt!28926 lt!28940))))

(assert (=> d!14315 (= (addApplyDifferent!48 lt!28926 lt!28931 (minValue!2055 newMap!16) lt!28940) lt!29404)))

(declare-fun b!67670 () Bool)

(assert (=> b!67670 (= e!44364 (not (= lt!28940 lt!28931)))))

(assert (= (and d!14315 res!36536) b!67670))

(assert (=> d!14315 m!61545))

(assert (=> d!14315 m!61551))

(declare-fun m!62877 () Bool)

(assert (=> d!14315 m!62877))

(declare-fun m!62879 () Bool)

(assert (=> d!14315 m!62879))

(assert (=> d!14315 m!61551))

(assert (=> d!14315 m!61561))

(assert (=> b!66981 d!14315))

(declare-fun d!14317 () Bool)

(declare-fun e!44366 () Bool)

(assert (=> d!14317 e!44366))

(declare-fun res!36537 () Bool)

(assert (=> d!14317 (=> res!36537 e!44366)))

(declare-fun lt!29408 () Bool)

(assert (=> d!14317 (= res!36537 (not lt!29408))))

(declare-fun lt!29405 () Bool)

(assert (=> d!14317 (= lt!29408 lt!29405)))

(declare-fun lt!29406 () Unit!1836)

(declare-fun e!44365 () Unit!1836)

(assert (=> d!14317 (= lt!29406 e!44365)))

(declare-fun c!9465 () Bool)

(assert (=> d!14317 (= c!9465 lt!29405)))

(assert (=> d!14317 (= lt!29405 (containsKey!133 (toList!723 (+!87 lt!28927 (tuple2!2109 lt!28936 (zeroValue!2055 newMap!16)))) lt!28930))))

(assert (=> d!14317 (= (contains!716 (+!87 lt!28927 (tuple2!2109 lt!28936 (zeroValue!2055 newMap!16))) lt!28930) lt!29408)))

(declare-fun b!67671 () Bool)

(declare-fun lt!29407 () Unit!1836)

(assert (=> b!67671 (= e!44365 lt!29407)))

(assert (=> b!67671 (= lt!29407 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 (+!87 lt!28927 (tuple2!2109 lt!28936 (zeroValue!2055 newMap!16)))) lt!28930))))

(assert (=> b!67671 (isDefined!83 (getValueByKey!129 (toList!723 (+!87 lt!28927 (tuple2!2109 lt!28936 (zeroValue!2055 newMap!16)))) lt!28930))))

(declare-fun b!67672 () Bool)

(declare-fun Unit!1886 () Unit!1836)

(assert (=> b!67672 (= e!44365 Unit!1886)))

(declare-fun b!67673 () Bool)

(assert (=> b!67673 (= e!44366 (isDefined!83 (getValueByKey!129 (toList!723 (+!87 lt!28927 (tuple2!2109 lt!28936 (zeroValue!2055 newMap!16)))) lt!28930)))))

(assert (= (and d!14317 c!9465) b!67671))

(assert (= (and d!14317 (not c!9465)) b!67672))

(assert (= (and d!14317 (not res!36537)) b!67673))

(declare-fun m!62881 () Bool)

(assert (=> d!14317 m!62881))

(declare-fun m!62883 () Bool)

(assert (=> b!67671 m!62883))

(declare-fun m!62885 () Bool)

(assert (=> b!67671 m!62885))

(assert (=> b!67671 m!62885))

(declare-fun m!62887 () Bool)

(assert (=> b!67671 m!62887))

(assert (=> b!67673 m!62885))

(assert (=> b!67673 m!62885))

(assert (=> b!67673 m!62887))

(assert (=> b!66981 d!14317))

(assert (=> b!66981 d!14263))

(assert (=> d!13799 d!13805))

(assert (=> d!13799 d!13801))

(declare-fun d!14319 () Bool)

(assert (=> d!14319 (not (contains!716 (+!87 lt!28629 (tuple2!2109 lt!28628 lt!28633)) lt!28630))))

(assert (=> d!14319 true))

(declare-fun _$36!292 () Unit!1836)

(assert (=> d!14319 (= (choose!377 lt!28629 lt!28628 lt!28633 lt!28630) _$36!292)))

(declare-fun bs!2902 () Bool)

(assert (= bs!2902 d!14319))

(assert (=> bs!2902 m!60907))

(assert (=> bs!2902 m!60907))

(assert (=> bs!2902 m!60909))

(assert (=> d!13799 d!14319))

(declare-fun d!14321 () Bool)

(declare-fun e!44368 () Bool)

(assert (=> d!14321 e!44368))

(declare-fun res!36538 () Bool)

(assert (=> d!14321 (=> res!36538 e!44368)))

(declare-fun lt!29412 () Bool)

(assert (=> d!14321 (= res!36538 (not lt!29412))))

(declare-fun lt!29409 () Bool)

(assert (=> d!14321 (= lt!29412 lt!29409)))

(declare-fun lt!29410 () Unit!1836)

(declare-fun e!44367 () Unit!1836)

(assert (=> d!14321 (= lt!29410 e!44367)))

(declare-fun c!9466 () Bool)

(assert (=> d!14321 (= c!9466 lt!29409)))

(assert (=> d!14321 (= lt!29409 (containsKey!133 (toList!723 lt!28629) lt!28630))))

(assert (=> d!14321 (= (contains!716 lt!28629 lt!28630) lt!29412)))

(declare-fun b!67675 () Bool)

(declare-fun lt!29411 () Unit!1836)

(assert (=> b!67675 (= e!44367 lt!29411)))

(assert (=> b!67675 (= lt!29411 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28629) lt!28630))))

(assert (=> b!67675 (isDefined!83 (getValueByKey!129 (toList!723 lt!28629) lt!28630))))

(declare-fun b!67676 () Bool)

(declare-fun Unit!1887 () Unit!1836)

(assert (=> b!67676 (= e!44367 Unit!1887)))

(declare-fun b!67677 () Bool)

(assert (=> b!67677 (= e!44368 (isDefined!83 (getValueByKey!129 (toList!723 lt!28629) lt!28630)))))

(assert (= (and d!14321 c!9466) b!67675))

(assert (= (and d!14321 (not c!9466)) b!67676))

(assert (= (and d!14321 (not res!36538)) b!67677))

(declare-fun m!62889 () Bool)

(assert (=> d!14321 m!62889))

(declare-fun m!62891 () Bool)

(assert (=> b!67675 m!62891))

(declare-fun m!62893 () Bool)

(assert (=> b!67675 m!62893))

(assert (=> b!67675 m!62893))

(declare-fun m!62895 () Bool)

(assert (=> b!67675 m!62895))

(assert (=> b!67677 m!62893))

(assert (=> b!67677 m!62893))

(assert (=> b!67677 m!62895))

(assert (=> d!13799 d!14321))

(declare-fun b!67678 () Bool)

(declare-fun e!44372 () ListLongMap!1415)

(declare-fun e!44373 () ListLongMap!1415)

(assert (=> b!67678 (= e!44372 e!44373)))

(declare-fun c!9469 () Bool)

(assert (=> b!67678 (= c!9469 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67679 () Bool)

(declare-fun e!44369 () Bool)

(assert (=> b!67679 (= e!44369 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67679 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!67680 () Bool)

(declare-fun lt!29417 () Unit!1836)

(declare-fun lt!29416 () Unit!1836)

(assert (=> b!67680 (= lt!29417 lt!29416)))

(declare-fun lt!29418 () V!2915)

(declare-fun lt!29415 () (_ BitVec 64))

(declare-fun lt!29414 () ListLongMap!1415)

(declare-fun lt!29413 () (_ BitVec 64))

(assert (=> b!67680 (not (contains!716 (+!87 lt!29414 (tuple2!2109 lt!29413 lt!29418)) lt!29415))))

(assert (=> b!67680 (= lt!29416 (addStillNotContains!23 lt!29414 lt!29413 lt!29418 lt!29415))))

(assert (=> b!67680 (= lt!29415 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!67680 (= lt!29418 (get!1127 (select (arr!1835 (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!67680 (= lt!29413 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!5679 () ListLongMap!1415)

(assert (=> b!67680 (= lt!29414 call!5679)))

(assert (=> b!67680 (= e!44373 (+!87 call!5679 (tuple2!2109 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) (get!1127 (select (arr!1835 (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!67681 () Bool)

(declare-fun res!36540 () Bool)

(declare-fun e!44371 () Bool)

(assert (=> b!67681 (=> (not res!36540) (not e!44371))))

(declare-fun lt!29419 () ListLongMap!1415)

(assert (=> b!67681 (= res!36540 (not (contains!716 lt!29419 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67682 () Bool)

(declare-fun e!44370 () Bool)

(assert (=> b!67682 (= e!44370 (= lt!29419 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741) (mask!6082 newMap!16) (ite (and c!9205 c!9204) lt!28742 (extraKeys!2018 newMap!16)) (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2147 newMap!16))))))

(declare-fun b!67683 () Bool)

(assert (=> b!67683 (= e!44373 call!5679)))

(declare-fun b!67684 () Bool)

(assert (=> b!67684 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (=> b!67684 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741))))))

(declare-fun e!44375 () Bool)

(assert (=> b!67684 (= e!44375 (= (apply!72 lt!29419 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1127 (select (arr!1835 (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!14323 () Bool)

(assert (=> d!14323 e!44371))

(declare-fun res!36542 () Bool)

(assert (=> d!14323 (=> (not res!36542) (not e!44371))))

(assert (=> d!14323 (= res!36542 (not (contains!716 lt!29419 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14323 (= lt!29419 e!44372)))

(declare-fun c!9470 () Bool)

(assert (=> d!14323 (= c!9470 (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (=> d!14323 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14323 (= (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741) (mask!6082 newMap!16) (ite (and c!9205 c!9204) lt!28742 (extraKeys!2018 newMap!16)) (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29419)))

(declare-fun bm!5676 () Bool)

(assert (=> bm!5676 (= call!5679 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (ite (or c!9205 c!9214) (_values!2130 newMap!16) lt!28741) (mask!6082 newMap!16) (ite (and c!9205 c!9204) lt!28742 (extraKeys!2018 newMap!16)) (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2147 newMap!16)))))

(declare-fun b!67685 () Bool)

(declare-fun e!44374 () Bool)

(assert (=> b!67685 (= e!44374 e!44375)))

(assert (=> b!67685 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun res!36541 () Bool)

(assert (=> b!67685 (= res!36541 (contains!716 lt!29419 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67685 (=> (not res!36541) (not e!44375))))

(declare-fun b!67686 () Bool)

(assert (=> b!67686 (= e!44370 (isEmpty!312 lt!29419))))

(declare-fun b!67687 () Bool)

(assert (=> b!67687 (= e!44374 e!44370)))

(declare-fun c!9468 () Bool)

(assert (=> b!67687 (= c!9468 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun b!67688 () Bool)

(assert (=> b!67688 (= e!44372 (ListLongMap!1416 Nil!1487))))

(declare-fun b!67689 () Bool)

(assert (=> b!67689 (= e!44371 e!44374)))

(declare-fun c!9467 () Bool)

(assert (=> b!67689 (= c!9467 e!44369)))

(declare-fun res!36539 () Bool)

(assert (=> b!67689 (=> (not res!36539) (not e!44369))))

(assert (=> b!67689 (= res!36539 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (= (and d!14323 c!9470) b!67688))

(assert (= (and d!14323 (not c!9470)) b!67678))

(assert (= (and b!67678 c!9469) b!67680))

(assert (= (and b!67678 (not c!9469)) b!67683))

(assert (= (or b!67680 b!67683) bm!5676))

(assert (= (and d!14323 res!36542) b!67681))

(assert (= (and b!67681 res!36540) b!67689))

(assert (= (and b!67689 res!36539) b!67679))

(assert (= (and b!67689 c!9467) b!67685))

(assert (= (and b!67689 (not c!9467)) b!67687))

(assert (= (and b!67685 res!36541) b!67684))

(assert (= (and b!67687 c!9468) b!67682))

(assert (= (and b!67687 (not c!9468)) b!67686))

(declare-fun b_lambda!3029 () Bool)

(assert (=> (not b_lambda!3029) (not b!67680)))

(assert (=> b!67680 t!4984))

(declare-fun b_and!4169 () Bool)

(assert (= b_and!4165 (and (=> t!4984 result!2595) b_and!4169)))

(assert (=> b!67680 t!4986))

(declare-fun b_and!4171 () Bool)

(assert (= b_and!4167 (and (=> t!4986 result!2597) b_and!4171)))

(declare-fun b_lambda!3031 () Bool)

(assert (=> (not b_lambda!3031) (not b!67684)))

(assert (=> b!67684 t!4984))

(declare-fun b_and!4173 () Bool)

(assert (= b_and!4169 (and (=> t!4984 result!2595) b_and!4173)))

(assert (=> b!67684 t!4986))

(declare-fun b_and!4175 () Bool)

(assert (= b_and!4171 (and (=> t!4986 result!2597) b_and!4175)))

(assert (=> b!67679 m!61079))

(assert (=> b!67679 m!61079))

(assert (=> b!67679 m!61081))

(declare-fun m!62897 () Bool)

(assert (=> b!67681 m!62897))

(assert (=> b!67685 m!61079))

(assert (=> b!67685 m!61079))

(declare-fun m!62899 () Bool)

(assert (=> b!67685 m!62899))

(assert (=> b!67684 m!61113))

(assert (=> b!67684 m!61079))

(assert (=> b!67684 m!61113))

(assert (=> b!67684 m!61115))

(assert (=> b!67684 m!61117))

(assert (=> b!67684 m!61115))

(assert (=> b!67684 m!61079))

(declare-fun m!62901 () Bool)

(assert (=> b!67684 m!62901))

(declare-fun m!62903 () Bool)

(assert (=> b!67686 m!62903))

(declare-fun m!62905 () Bool)

(assert (=> b!67682 m!62905))

(assert (=> b!67680 m!61113))

(declare-fun m!62907 () Bool)

(assert (=> b!67680 m!62907))

(declare-fun m!62909 () Bool)

(assert (=> b!67680 m!62909))

(assert (=> b!67680 m!61079))

(declare-fun m!62911 () Bool)

(assert (=> b!67680 m!62911))

(declare-fun m!62913 () Bool)

(assert (=> b!67680 m!62913))

(assert (=> b!67680 m!61113))

(assert (=> b!67680 m!61115))

(assert (=> b!67680 m!61117))

(assert (=> b!67680 m!62911))

(assert (=> b!67680 m!61115))

(declare-fun m!62915 () Bool)

(assert (=> d!14323 m!62915))

(assert (=> d!14323 m!61069))

(assert (=> b!67678 m!61079))

(assert (=> b!67678 m!61079))

(assert (=> b!67678 m!61081))

(assert (=> bm!5676 m!62905))

(assert (=> bm!5569 d!14323))

(declare-fun b!67691 () Bool)

(declare-fun e!44376 () Option!135)

(declare-fun e!44377 () Option!135)

(assert (=> b!67691 (= e!44376 e!44377)))

(declare-fun c!9472 () Bool)

(assert (=> b!67691 (= c!9472 (and ((_ is Cons!1486) (toList!723 lt!28888)) (not (= (_1!1064 (h!2070 (toList!723 lt!28888))) (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun d!14325 () Bool)

(declare-fun c!9471 () Bool)

(assert (=> d!14325 (= c!9471 (and ((_ is Cons!1486) (toList!723 lt!28888)) (= (_1!1064 (h!2070 (toList!723 lt!28888))) (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14325 (= (getValueByKey!129 (toList!723 lt!28888) (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) e!44376)))

(declare-fun b!67692 () Bool)

(assert (=> b!67692 (= e!44377 (getValueByKey!129 (t!4976 (toList!723 lt!28888)) (_1!1064 (tuple2!2109 lt!28601 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67690 () Bool)

(assert (=> b!67690 (= e!44376 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28888)))))))

(declare-fun b!67693 () Bool)

(assert (=> b!67693 (= e!44377 None!133)))

(assert (= (and d!14325 c!9471) b!67690))

(assert (= (and d!14325 (not c!9471)) b!67691))

(assert (= (and b!67691 c!9472) b!67692))

(assert (= (and b!67691 (not c!9472)) b!67693))

(declare-fun m!62917 () Bool)

(assert (=> b!67692 m!62917))

(assert (=> b!66933 d!14325))

(declare-fun d!14327 () Bool)

(assert (=> d!14327 (= (content!71 Nil!1488) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!13919 d!14327))

(declare-fun d!14329 () Bool)

(declare-fun e!44378 () Bool)

(assert (=> d!14329 e!44378))

(declare-fun res!36544 () Bool)

(assert (=> d!14329 (=> (not res!36544) (not e!44378))))

(declare-fun lt!29421 () ListLongMap!1415)

(assert (=> d!14329 (= res!36544 (contains!716 lt!29421 (_1!1064 (ite (or c!9307 c!9309) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))))))))

(declare-fun lt!29423 () List!1490)

(assert (=> d!14329 (= lt!29421 (ListLongMap!1416 lt!29423))))

(declare-fun lt!29422 () Unit!1836)

(declare-fun lt!29420 () Unit!1836)

(assert (=> d!14329 (= lt!29422 lt!29420)))

(assert (=> d!14329 (= (getValueByKey!129 lt!29423 (_1!1064 (ite (or c!9307 c!9309) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))))) (Some!134 (_2!1064 (ite (or c!9307 c!9309) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))))))))

(assert (=> d!14329 (= lt!29420 (lemmaContainsTupThenGetReturnValue!48 lt!29423 (_1!1064 (ite (or c!9307 c!9309) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))) (_2!1064 (ite (or c!9307 c!9309) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))))))))

(assert (=> d!14329 (= lt!29423 (insertStrictlySorted!50 (toList!723 (ite c!9307 call!5612 (ite c!9309 call!5607 call!5609))) (_1!1064 (ite (or c!9307 c!9309) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))) (_2!1064 (ite (or c!9307 c!9309) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))))))))

(assert (=> d!14329 (= (+!87 (ite c!9307 call!5612 (ite c!9309 call!5607 call!5609)) (ite (or c!9307 c!9309) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))) lt!29421)))

(declare-fun b!67694 () Bool)

(declare-fun res!36543 () Bool)

(assert (=> b!67694 (=> (not res!36543) (not e!44378))))

(assert (=> b!67694 (= res!36543 (= (getValueByKey!129 (toList!723 lt!29421) (_1!1064 (ite (or c!9307 c!9309) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16)))))) (Some!134 (_2!1064 (ite (or c!9307 c!9309) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))))))))

(declare-fun b!67695 () Bool)

(assert (=> b!67695 (= e!44378 (contains!718 (toList!723 lt!29421) (ite (or c!9307 c!9309) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9205 (ite c!9204 (minValue!2055 newMap!16) lt!28502) (minValue!2055 newMap!16))))))))

(assert (= (and d!14329 res!36544) b!67694))

(assert (= (and b!67694 res!36543) b!67695))

(declare-fun m!62919 () Bool)

(assert (=> d!14329 m!62919))

(declare-fun m!62921 () Bool)

(assert (=> d!14329 m!62921))

(declare-fun m!62923 () Bool)

(assert (=> d!14329 m!62923))

(declare-fun m!62925 () Bool)

(assert (=> d!14329 m!62925))

(declare-fun m!62927 () Bool)

(assert (=> b!67694 m!62927))

(declare-fun m!62929 () Bool)

(assert (=> b!67695 m!62929))

(assert (=> bm!5606 d!14329))

(declare-fun d!14331 () Bool)

(declare-fun lt!29424 () Bool)

(assert (=> d!14331 (= lt!29424 (select (content!70 lt!28658) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))))))

(declare-fun e!44379 () Bool)

(assert (=> d!14331 (= lt!29424 e!44379)))

(declare-fun res!36546 () Bool)

(assert (=> d!14331 (=> (not res!36546) (not e!44379))))

(assert (=> d!14331 (= res!36546 ((_ is Cons!1486) lt!28658))))

(assert (=> d!14331 (= (contains!718 lt!28658 (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))) lt!29424)))

(declare-fun b!67696 () Bool)

(declare-fun e!44380 () Bool)

(assert (=> b!67696 (= e!44379 e!44380)))

(declare-fun res!36545 () Bool)

(assert (=> b!67696 (=> res!36545 e!44380)))

(assert (=> b!67696 (= res!36545 (= (h!2070 lt!28658) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))))))

(declare-fun b!67697 () Bool)

(assert (=> b!67697 (= e!44380 (contains!718 (t!4976 lt!28658) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))))))

(assert (= (and d!14331 res!36546) b!67696))

(assert (= (and b!67696 (not res!36545)) b!67697))

(declare-fun m!62931 () Bool)

(assert (=> d!14331 m!62931))

(declare-fun m!62933 () Bool)

(assert (=> d!14331 m!62933))

(declare-fun m!62935 () Bool)

(assert (=> b!67697 m!62935))

(assert (=> b!67024 d!14331))

(declare-fun d!14333 () Bool)

(declare-fun lt!29425 () Bool)

(assert (=> d!14333 (= lt!29425 (select (content!70 (toList!723 lt!29112)) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun e!44381 () Bool)

(assert (=> d!14333 (= lt!29425 e!44381)))

(declare-fun res!36548 () Bool)

(assert (=> d!14333 (=> (not res!36548) (not e!44381))))

(assert (=> d!14333 (= res!36548 ((_ is Cons!1486) (toList!723 lt!29112)))))

(assert (=> d!14333 (= (contains!718 (toList!723 lt!29112) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!29425)))

(declare-fun b!67698 () Bool)

(declare-fun e!44382 () Bool)

(assert (=> b!67698 (= e!44381 e!44382)))

(declare-fun res!36547 () Bool)

(assert (=> b!67698 (=> res!36547 e!44382)))

(assert (=> b!67698 (= res!36547 (= (h!2070 (toList!723 lt!29112)) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!67699 () Bool)

(assert (=> b!67699 (= e!44382 (contains!718 (t!4976 (toList!723 lt!29112)) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(assert (= (and d!14333 res!36548) b!67698))

(assert (= (and b!67698 (not res!36547)) b!67699))

(declare-fun m!62937 () Bool)

(assert (=> d!14333 m!62937))

(declare-fun m!62939 () Bool)

(assert (=> d!14333 m!62939))

(declare-fun m!62941 () Bool)

(assert (=> b!67699 m!62941))

(assert (=> b!67159 d!14333))

(assert (=> d!13855 d!13839))

(assert (=> d!13855 d!13843))

(declare-fun d!14335 () Bool)

(assert (=> d!14335 (contains!716 (+!87 lt!28597 (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28600)))

(assert (=> d!14335 true))

(declare-fun _$35!309 () Unit!1836)

(assert (=> d!14335 (= (choose!380 lt!28597 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) lt!28600) _$35!309)))

(declare-fun bs!2903 () Bool)

(assert (= bs!2903 d!14335))

(assert (=> bs!2903 m!60865))

(assert (=> bs!2903 m!60865))

(assert (=> bs!2903 m!60867))

(assert (=> d!13855 d!14335))

(declare-fun d!14337 () Bool)

(declare-fun e!44384 () Bool)

(assert (=> d!14337 e!44384))

(declare-fun res!36549 () Bool)

(assert (=> d!14337 (=> res!36549 e!44384)))

(declare-fun lt!29429 () Bool)

(assert (=> d!14337 (= res!36549 (not lt!29429))))

(declare-fun lt!29426 () Bool)

(assert (=> d!14337 (= lt!29429 lt!29426)))

(declare-fun lt!29427 () Unit!1836)

(declare-fun e!44383 () Unit!1836)

(assert (=> d!14337 (= lt!29427 e!44383)))

(declare-fun c!9473 () Bool)

(assert (=> d!14337 (= c!9473 lt!29426)))

(assert (=> d!14337 (= lt!29426 (containsKey!133 (toList!723 lt!28597) lt!28600))))

(assert (=> d!14337 (= (contains!716 lt!28597 lt!28600) lt!29429)))

(declare-fun b!67701 () Bool)

(declare-fun lt!29428 () Unit!1836)

(assert (=> b!67701 (= e!44383 lt!29428)))

(assert (=> b!67701 (= lt!29428 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28597) lt!28600))))

(assert (=> b!67701 (isDefined!83 (getValueByKey!129 (toList!723 lt!28597) lt!28600))))

(declare-fun b!67702 () Bool)

(declare-fun Unit!1888 () Unit!1836)

(assert (=> b!67702 (= e!44383 Unit!1888)))

(declare-fun b!67703 () Bool)

(assert (=> b!67703 (= e!44384 (isDefined!83 (getValueByKey!129 (toList!723 lt!28597) lt!28600)))))

(assert (= (and d!14337 c!9473) b!67701))

(assert (= (and d!14337 (not c!9473)) b!67702))

(assert (= (and d!14337 (not res!36549)) b!67703))

(declare-fun m!62943 () Bool)

(assert (=> d!14337 m!62943))

(declare-fun m!62945 () Bool)

(assert (=> b!67701 m!62945))

(declare-fun m!62947 () Bool)

(assert (=> b!67701 m!62947))

(assert (=> b!67701 m!62947))

(declare-fun m!62949 () Bool)

(assert (=> b!67701 m!62949))

(assert (=> b!67703 m!62947))

(assert (=> b!67703 m!62947))

(assert (=> b!67703 m!62949))

(assert (=> d!13855 d!14337))

(declare-fun d!14339 () Bool)

(assert (=> d!14339 (= (isEmpty!314 (getValueByKey!129 (toList!723 lt!28501) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))) (not ((_ is Some!134) (getValueByKey!129 (toList!723 lt!28501) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))))

(assert (=> d!13821 d!14339))

(declare-fun b!67704 () Bool)

(declare-fun e!44385 () (_ BitVec 32))

(assert (=> b!67704 (= e!44385 #b00000000000000000000000000000000)))

(declare-fun b!67705 () Bool)

(declare-fun e!44386 () (_ BitVec 32))

(declare-fun call!5680 () (_ BitVec 32))

(assert (=> b!67705 (= e!44386 call!5680)))

(declare-fun b!67706 () Bool)

(assert (=> b!67706 (= e!44385 e!44386)))

(declare-fun c!9475 () Bool)

(assert (=> b!67706 (= c!9475 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!67707 () Bool)

(assert (=> b!67707 (= e!44386 (bvadd #b00000000000000000000000000000001 call!5680))))

(declare-fun bm!5677 () Bool)

(assert (=> bm!5677 (= call!5680 (arrayCountValidKeys!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun d!14341 () Bool)

(declare-fun lt!29430 () (_ BitVec 32))

(assert (=> d!14341 (and (bvsge lt!29430 #b00000000000000000000000000000000) (bvsle lt!29430 (bvsub (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!14341 (= lt!29430 e!44385)))

(declare-fun c!9474 () Bool)

(assert (=> d!14341 (= c!9474 (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(assert (=> d!14341 (and (bvsle #b00000000000000000000000000000000 (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(assert (=> d!14341 (= (arrayCountValidKeys!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) #b00000000000000000000000000000000 (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))) lt!29430)))

(assert (= (and d!14341 c!9474) b!67704))

(assert (= (and d!14341 (not c!9474)) b!67706))

(assert (= (and b!67706 c!9475) b!67707))

(assert (= (and b!67706 (not c!9475)) b!67705))

(assert (= (or b!67707 b!67705) bm!5677))

(assert (=> b!67706 m!62357))

(assert (=> b!67706 m!62357))

(assert (=> b!67706 m!62359))

(declare-fun m!62951 () Bool)

(assert (=> bm!5677 m!62951))

(assert (=> b!66735 d!14341))

(declare-fun b!67708 () Bool)

(declare-fun e!44390 () ListLongMap!1415)

(declare-fun e!44391 () ListLongMap!1415)

(assert (=> b!67708 (= e!44390 e!44391)))

(declare-fun c!9478 () Bool)

(assert (=> b!67708 (= c!9478 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!67709 () Bool)

(declare-fun e!44387 () Bool)

(assert (=> b!67709 (= e!44387 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!67709 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!67710 () Bool)

(declare-fun lt!29435 () Unit!1836)

(declare-fun lt!29434 () Unit!1836)

(assert (=> b!67710 (= lt!29435 lt!29434)))

(declare-fun lt!29431 () (_ BitVec 64))

(declare-fun lt!29436 () V!2915)

(declare-fun lt!29433 () (_ BitVec 64))

(declare-fun lt!29432 () ListLongMap!1415)

(assert (=> b!67710 (not (contains!716 (+!87 lt!29432 (tuple2!2109 lt!29431 lt!29436)) lt!29433))))

(assert (=> b!67710 (= lt!29434 (addStillNotContains!23 lt!29432 lt!29431 lt!29436 lt!29433))))

(assert (=> b!67710 (= lt!29433 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!67710 (= lt!29436 (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!67710 (= lt!29431 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!5681 () ListLongMap!1415)

(assert (=> b!67710 (= lt!29432 call!5681)))

(assert (=> b!67710 (= e!44391 (+!87 call!5681 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!67711 () Bool)

(declare-fun res!36551 () Bool)

(declare-fun e!44389 () Bool)

(assert (=> b!67711 (=> (not res!36551) (not e!44389))))

(declare-fun lt!29437 () ListLongMap!1415)

(assert (=> b!67711 (= res!36551 (not (contains!716 lt!29437 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!44388 () Bool)

(declare-fun b!67712 () Bool)

(assert (=> b!67712 (= e!44388 (= lt!29437 (getCurrentListMapNoExtraKeys!51 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!67713 () Bool)

(assert (=> b!67713 (= e!44391 call!5681)))

(declare-fun b!67714 () Bool)

(assert (=> b!67714 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(assert (=> b!67714 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2070 (_values!2130 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun e!44393 () Bool)

(assert (=> b!67714 (= e!44393 (= (apply!72 lt!29437 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!14343 () Bool)

(assert (=> d!14343 e!44389))

(declare-fun res!36553 () Bool)

(assert (=> d!14343 (=> (not res!36553) (not e!44389))))

(assert (=> d!14343 (= res!36553 (not (contains!716 lt!29437 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14343 (= lt!29437 e!44390)))

(declare-fun c!9479 () Bool)

(assert (=> d!14343 (= c!9479 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(assert (=> d!14343 (validMask!0 (mask!6082 (v!2479 (underlying!252 thiss!992))))))

(assert (=> d!14343 (= (getCurrentListMapNoExtraKeys!51 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))) lt!29437)))

(declare-fun bm!5678 () Bool)

(assert (=> bm!5678 (= call!5681 (getCurrentListMapNoExtraKeys!51 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (_values!2130 (v!2479 (underlying!252 thiss!992))) (mask!6082 (v!2479 (underlying!252 thiss!992))) (extraKeys!2018 (v!2479 (underlying!252 thiss!992))) (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) (minValue!2055 (v!2479 (underlying!252 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992)))))))

(declare-fun b!67715 () Bool)

(declare-fun e!44392 () Bool)

(assert (=> b!67715 (= e!44392 e!44393)))

(assert (=> b!67715 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun res!36552 () Bool)

(assert (=> b!67715 (= res!36552 (contains!716 lt!29437 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!67715 (=> (not res!36552) (not e!44393))))

(declare-fun b!67716 () Bool)

(assert (=> b!67716 (= e!44388 (isEmpty!312 lt!29437))))

(declare-fun b!67717 () Bool)

(assert (=> b!67717 (= e!44392 e!44388)))

(declare-fun c!9477 () Bool)

(assert (=> b!67717 (= c!9477 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!67718 () Bool)

(assert (=> b!67718 (= e!44390 (ListLongMap!1416 Nil!1487))))

(declare-fun b!67719 () Bool)

(assert (=> b!67719 (= e!44389 e!44392)))

(declare-fun c!9476 () Bool)

(assert (=> b!67719 (= c!9476 e!44387)))

(declare-fun res!36550 () Bool)

(assert (=> b!67719 (=> (not res!36550) (not e!44387))))

(assert (=> b!67719 (= res!36550 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(assert (= (and d!14343 c!9479) b!67718))

(assert (= (and d!14343 (not c!9479)) b!67708))

(assert (= (and b!67708 c!9478) b!67710))

(assert (= (and b!67708 (not c!9478)) b!67713))

(assert (= (or b!67710 b!67713) bm!5678))

(assert (= (and d!14343 res!36553) b!67711))

(assert (= (and b!67711 res!36551) b!67719))

(assert (= (and b!67719 res!36550) b!67709))

(assert (= (and b!67719 c!9476) b!67715))

(assert (= (and b!67719 (not c!9476)) b!67717))

(assert (= (and b!67715 res!36552) b!67714))

(assert (= (and b!67717 c!9477) b!67712))

(assert (= (and b!67717 (not c!9477)) b!67716))

(declare-fun b_lambda!3033 () Bool)

(assert (=> (not b_lambda!3033) (not b!67710)))

(assert (=> b!67710 t!4973))

(declare-fun b_and!4177 () Bool)

(assert (= b_and!4173 (and (=> t!4973 result!2581) b_and!4177)))

(assert (=> b!67710 t!4975))

(declare-fun b_and!4179 () Bool)

(assert (= b_and!4175 (and (=> t!4975 result!2585) b_and!4179)))

(declare-fun b_lambda!3035 () Bool)

(assert (=> (not b_lambda!3035) (not b!67714)))

(assert (=> b!67714 t!4973))

(declare-fun b_and!4181 () Bool)

(assert (= b_and!4177 (and (=> t!4973 result!2581) b_and!4181)))

(assert (=> b!67714 t!4975))

(declare-fun b_and!4183 () Bool)

(assert (= b_and!4179 (and (=> t!4975 result!2585) b_and!4183)))

(declare-fun m!62953 () Bool)

(assert (=> b!67709 m!62953))

(assert (=> b!67709 m!62953))

(declare-fun m!62955 () Bool)

(assert (=> b!67709 m!62955))

(declare-fun m!62957 () Bool)

(assert (=> b!67711 m!62957))

(assert (=> b!67715 m!62953))

(assert (=> b!67715 m!62953))

(declare-fun m!62959 () Bool)

(assert (=> b!67715 m!62959))

(declare-fun m!62961 () Bool)

(assert (=> b!67714 m!62961))

(assert (=> b!67714 m!62953))

(assert (=> b!67714 m!62961))

(assert (=> b!67714 m!60723))

(declare-fun m!62963 () Bool)

(assert (=> b!67714 m!62963))

(assert (=> b!67714 m!60723))

(assert (=> b!67714 m!62953))

(declare-fun m!62965 () Bool)

(assert (=> b!67714 m!62965))

(declare-fun m!62967 () Bool)

(assert (=> b!67716 m!62967))

(declare-fun m!62969 () Bool)

(assert (=> b!67712 m!62969))

(assert (=> b!67710 m!62961))

(declare-fun m!62971 () Bool)

(assert (=> b!67710 m!62971))

(declare-fun m!62973 () Bool)

(assert (=> b!67710 m!62973))

(assert (=> b!67710 m!62953))

(declare-fun m!62975 () Bool)

(assert (=> b!67710 m!62975))

(declare-fun m!62977 () Bool)

(assert (=> b!67710 m!62977))

(assert (=> b!67710 m!62961))

(assert (=> b!67710 m!60723))

(assert (=> b!67710 m!62963))

(assert (=> b!67710 m!62975))

(assert (=> b!67710 m!60723))

(declare-fun m!62979 () Bool)

(assert (=> d!14343 m!62979))

(assert (=> d!14343 m!60745))

(assert (=> b!67708 m!62953))

(assert (=> b!67708 m!62953))

(assert (=> b!67708 m!62955))

(assert (=> bm!5678 m!62969))

(assert (=> bm!5588 d!14343))

(declare-fun d!14345 () Bool)

(declare-fun res!36554 () Bool)

(declare-fun e!44394 () Bool)

(assert (=> d!14345 (=> res!36554 e!44394)))

(assert (=> d!14345 (= res!36554 (and ((_ is Cons!1486) lt!28971) (= (_1!1064 (h!2070 lt!28971)) (_1!1064 lt!28503))))))

(assert (=> d!14345 (= (containsKey!133 lt!28971 (_1!1064 lt!28503)) e!44394)))

(declare-fun b!67720 () Bool)

(declare-fun e!44395 () Bool)

(assert (=> b!67720 (= e!44394 e!44395)))

(declare-fun res!36555 () Bool)

(assert (=> b!67720 (=> (not res!36555) (not e!44395))))

(assert (=> b!67720 (= res!36555 (and (or (not ((_ is Cons!1486) lt!28971)) (bvsle (_1!1064 (h!2070 lt!28971)) (_1!1064 lt!28503))) ((_ is Cons!1486) lt!28971) (bvslt (_1!1064 (h!2070 lt!28971)) (_1!1064 lt!28503))))))

(declare-fun b!67721 () Bool)

(assert (=> b!67721 (= e!44395 (containsKey!133 (t!4976 lt!28971) (_1!1064 lt!28503)))))

(assert (= (and d!14345 (not res!36554)) b!67720))

(assert (= (and b!67720 res!36555) b!67721))

(declare-fun m!62981 () Bool)

(assert (=> b!67721 m!62981))

(assert (=> b!67030 d!14345))

(declare-fun d!14347 () Bool)

(declare-fun e!44397 () Bool)

(assert (=> d!14347 e!44397))

(declare-fun res!36556 () Bool)

(assert (=> d!14347 (=> res!36556 e!44397)))

(declare-fun lt!29441 () Bool)

(assert (=> d!14347 (= res!36556 (not lt!29441))))

(declare-fun lt!29438 () Bool)

(assert (=> d!14347 (= lt!29441 lt!29438)))

(declare-fun lt!29439 () Unit!1836)

(declare-fun e!44396 () Unit!1836)

(assert (=> d!14347 (= lt!29439 e!44396)))

(declare-fun c!9480 () Bool)

(assert (=> d!14347 (= c!9480 lt!29438)))

(assert (=> d!14347 (= lt!29438 (containsKey!133 (toList!723 lt!28942) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14347 (= (contains!716 lt!28942 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29441)))

(declare-fun b!67722 () Bool)

(declare-fun lt!29440 () Unit!1836)

(assert (=> b!67722 (= e!44396 lt!29440)))

(assert (=> b!67722 (= lt!29440 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28942) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67722 (isDefined!83 (getValueByKey!129 (toList!723 lt!28942) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67723 () Bool)

(declare-fun Unit!1889 () Unit!1836)

(assert (=> b!67723 (= e!44396 Unit!1889)))

(declare-fun b!67724 () Bool)

(assert (=> b!67724 (= e!44397 (isDefined!83 (getValueByKey!129 (toList!723 lt!28942) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14347 c!9480) b!67722))

(assert (= (and d!14347 (not c!9480)) b!67723))

(assert (= (and d!14347 (not res!36556)) b!67724))

(declare-fun m!62983 () Bool)

(assert (=> d!14347 m!62983))

(declare-fun m!62985 () Bool)

(assert (=> b!67722 m!62985))

(declare-fun m!62987 () Bool)

(assert (=> b!67722 m!62987))

(assert (=> b!67722 m!62987))

(declare-fun m!62989 () Bool)

(assert (=> b!67722 m!62989))

(assert (=> b!67724 m!62987))

(assert (=> b!67724 m!62987))

(assert (=> b!67724 m!62989))

(assert (=> bm!5602 d!14347))

(assert (=> b!67119 d!13893))

(declare-fun d!14349 () Bool)

(declare-fun res!36557 () Bool)

(declare-fun e!44398 () Bool)

(assert (=> d!14349 (=> res!36557 e!44398)))

(assert (=> d!14349 (= res!36557 (and ((_ is Cons!1486) lt!28654) (= (_1!1064 (h!2070 lt!28654)) (_1!1064 lt!28503))))))

(assert (=> d!14349 (= (containsKey!133 lt!28654 (_1!1064 lt!28503)) e!44398)))

(declare-fun b!67725 () Bool)

(declare-fun e!44399 () Bool)

(assert (=> b!67725 (= e!44398 e!44399)))

(declare-fun res!36558 () Bool)

(assert (=> b!67725 (=> (not res!36558) (not e!44399))))

(assert (=> b!67725 (= res!36558 (and (or (not ((_ is Cons!1486) lt!28654)) (bvsle (_1!1064 (h!2070 lt!28654)) (_1!1064 lt!28503))) ((_ is Cons!1486) lt!28654) (bvslt (_1!1064 (h!2070 lt!28654)) (_1!1064 lt!28503))))))

(declare-fun b!67726 () Bool)

(assert (=> b!67726 (= e!44399 (containsKey!133 (t!4976 lt!28654) (_1!1064 lt!28503)))))

(assert (= (and d!14349 (not res!36557)) b!67725))

(assert (= (and b!67725 res!36558) b!67726))

(declare-fun m!62991 () Bool)

(assert (=> b!67726 m!62991))

(assert (=> b!66818 d!14349))

(declare-fun d!14351 () Bool)

(declare-fun e!44401 () Bool)

(assert (=> d!14351 e!44401))

(declare-fun res!36559 () Bool)

(assert (=> d!14351 (=> res!36559 e!44401)))

(declare-fun lt!29445 () Bool)

(assert (=> d!14351 (= res!36559 (not lt!29445))))

(declare-fun lt!29442 () Bool)

(assert (=> d!14351 (= lt!29445 lt!29442)))

(declare-fun lt!29443 () Unit!1836)

(declare-fun e!44400 () Unit!1836)

(assert (=> d!14351 (= lt!29443 e!44400)))

(declare-fun c!9481 () Bool)

(assert (=> d!14351 (= c!9481 lt!29442)))

(assert (=> d!14351 (= lt!29442 (containsKey!133 (toList!723 lt!29120) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!14351 (= (contains!716 lt!29120 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) lt!29445)))

(declare-fun b!67727 () Bool)

(declare-fun lt!29444 () Unit!1836)

(assert (=> b!67727 (= e!44400 lt!29444)))

(assert (=> b!67727 (= lt!29444 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!29120) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> b!67727 (isDefined!83 (getValueByKey!129 (toList!723 lt!29120) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!67728 () Bool)

(declare-fun Unit!1890 () Unit!1836)

(assert (=> b!67728 (= e!44400 Unit!1890)))

(declare-fun b!67729 () Bool)

(assert (=> b!67729 (= e!44401 (isDefined!83 (getValueByKey!129 (toList!723 lt!29120) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (= (and d!14351 c!9481) b!67727))

(assert (= (and d!14351 (not c!9481)) b!67728))

(assert (= (and d!14351 (not res!36559)) b!67729))

(declare-fun m!62993 () Bool)

(assert (=> d!14351 m!62993))

(declare-fun m!62995 () Bool)

(assert (=> b!67727 m!62995))

(assert (=> b!67727 m!61869))

(assert (=> b!67727 m!61869))

(declare-fun m!62997 () Bool)

(assert (=> b!67727 m!62997))

(assert (=> b!67729 m!61869))

(assert (=> b!67729 m!61869))

(assert (=> b!67729 m!62997))

(assert (=> d!13939 d!14351))

(declare-fun b!67731 () Bool)

(declare-fun e!44402 () Option!135)

(declare-fun e!44403 () Option!135)

(assert (=> b!67731 (= e!44402 e!44403)))

(declare-fun c!9483 () Bool)

(assert (=> b!67731 (= c!9483 (and ((_ is Cons!1486) lt!29122) (not (= (_1!1064 (h!2070 lt!29122)) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))))

(declare-fun c!9482 () Bool)

(declare-fun d!14353 () Bool)

(assert (=> d!14353 (= c!9482 (and ((_ is Cons!1486) lt!29122) (= (_1!1064 (h!2070 lt!29122)) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (=> d!14353 (= (getValueByKey!129 lt!29122 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) e!44402)))

(declare-fun b!67732 () Bool)

(assert (=> b!67732 (= e!44403 (getValueByKey!129 (t!4976 lt!29122) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!67730 () Bool)

(assert (=> b!67730 (= e!44402 (Some!134 (_2!1064 (h!2070 lt!29122))))))

(declare-fun b!67733 () Bool)

(assert (=> b!67733 (= e!44403 None!133)))

(assert (= (and d!14353 c!9482) b!67730))

(assert (= (and d!14353 (not c!9482)) b!67731))

(assert (= (and b!67731 c!9483) b!67732))

(assert (= (and b!67731 (not c!9483)) b!67733))

(declare-fun m!62999 () Bool)

(assert (=> b!67732 m!62999))

(assert (=> d!13939 d!14353))

(declare-fun d!14355 () Bool)

(assert (=> d!14355 (= (getValueByKey!129 lt!29122 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (Some!134 (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun lt!29446 () Unit!1836)

(assert (=> d!14355 (= lt!29446 (choose!376 lt!29122 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun e!44404 () Bool)

(assert (=> d!14355 e!44404))

(declare-fun res!36560 () Bool)

(assert (=> d!14355 (=> (not res!36560) (not e!44404))))

(assert (=> d!14355 (= res!36560 (isStrictlySorted!284 lt!29122))))

(assert (=> d!14355 (= (lemmaContainsTupThenGetReturnValue!48 lt!29122 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) lt!29446)))

(declare-fun b!67734 () Bool)

(declare-fun res!36561 () Bool)

(assert (=> b!67734 (=> (not res!36561) (not e!44404))))

(assert (=> b!67734 (= res!36561 (containsKey!133 lt!29122 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!67735 () Bool)

(assert (=> b!67735 (= e!44404 (contains!718 lt!29122 (tuple2!2109 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (= (and d!14355 res!36560) b!67734))

(assert (= (and b!67734 res!36561) b!67735))

(assert (=> d!14355 m!61863))

(declare-fun m!63001 () Bool)

(assert (=> d!14355 m!63001))

(declare-fun m!63003 () Bool)

(assert (=> d!14355 m!63003))

(declare-fun m!63005 () Bool)

(assert (=> b!67734 m!63005))

(declare-fun m!63007 () Bool)

(assert (=> b!67735 m!63007))

(assert (=> d!13939 d!14355))

(declare-fun b!67736 () Bool)

(declare-fun e!44406 () List!1490)

(declare-fun call!5683 () List!1490)

(assert (=> b!67736 (= e!44406 call!5683)))

(declare-fun b!67737 () Bool)

(declare-fun e!44405 () List!1490)

(declare-fun call!5682 () List!1490)

(assert (=> b!67737 (= e!44405 call!5682)))

(declare-fun bm!5679 () Bool)

(declare-fun call!5684 () List!1490)

(assert (=> bm!5679 (= call!5682 call!5684)))

(declare-fun e!44409 () List!1490)

(declare-fun bm!5680 () Bool)

(declare-fun c!9485 () Bool)

(assert (=> bm!5680 (= call!5683 ($colon$colon!62 e!44409 (ite c!9485 (h!2070 (toList!723 (+!87 lt!28505 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))) (tuple2!2109 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))))

(declare-fun c!9487 () Bool)

(assert (=> bm!5680 (= c!9487 c!9485)))

(declare-fun d!14357 () Bool)

(declare-fun e!44407 () Bool)

(assert (=> d!14357 e!44407))

(declare-fun res!36563 () Bool)

(assert (=> d!14357 (=> (not res!36563) (not e!44407))))

(declare-fun lt!29447 () List!1490)

(assert (=> d!14357 (= res!36563 (isStrictlySorted!284 lt!29447))))

(assert (=> d!14357 (= lt!29447 e!44406)))

(assert (=> d!14357 (= c!9485 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28505 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))) (bvslt (_1!1064 (h!2070 (toList!723 (+!87 lt!28505 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (=> d!14357 (isStrictlySorted!284 (toList!723 (+!87 lt!28505 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!14357 (= (insertStrictlySorted!50 (toList!723 (+!87 lt!28505 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) lt!29447)))

(declare-fun bm!5681 () Bool)

(assert (=> bm!5681 (= call!5684 call!5683)))

(declare-fun b!67738 () Bool)

(assert (=> b!67738 (= e!44409 (insertStrictlySorted!50 (t!4976 (toList!723 (+!87 lt!28505 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun c!9486 () Bool)

(declare-fun b!67739 () Bool)

(assert (=> b!67739 (= c!9486 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28505 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))) (bvsgt (_1!1064 (h!2070 (toList!723 (+!87 lt!28505 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun e!44408 () List!1490)

(assert (=> b!67739 (= e!44408 e!44405)))

(declare-fun b!67740 () Bool)

(assert (=> b!67740 (= e!44408 call!5684)))

(declare-fun b!67741 () Bool)

(declare-fun res!36562 () Bool)

(assert (=> b!67741 (=> (not res!36562) (not e!44407))))

(assert (=> b!67741 (= res!36562 (containsKey!133 lt!29447 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!67742 () Bool)

(assert (=> b!67742 (= e!44405 call!5682)))

(declare-fun b!67743 () Bool)

(declare-fun c!9484 () Bool)

(assert (=> b!67743 (= e!44409 (ite c!9484 (t!4976 (toList!723 (+!87 lt!28505 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))) (ite c!9486 (Cons!1486 (h!2070 (toList!723 (+!87 lt!28505 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))) (t!4976 (toList!723 (+!87 lt!28505 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))) Nil!1487)))))

(declare-fun b!67744 () Bool)

(assert (=> b!67744 (= e!44407 (contains!718 lt!29447 (tuple2!2109 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun b!67745 () Bool)

(assert (=> b!67745 (= e!44406 e!44408)))

(assert (=> b!67745 (= c!9484 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28505 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))) (= (_1!1064 (h!2070 (toList!723 (+!87 lt!28505 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (= (and d!14357 c!9485) b!67736))

(assert (= (and d!14357 (not c!9485)) b!67745))

(assert (= (and b!67745 c!9484) b!67740))

(assert (= (and b!67745 (not c!9484)) b!67739))

(assert (= (and b!67739 c!9486) b!67742))

(assert (= (and b!67739 (not c!9486)) b!67737))

(assert (= (or b!67742 b!67737) bm!5679))

(assert (= (or b!67740 bm!5679) bm!5681))

(assert (= (or b!67736 bm!5681) bm!5680))

(assert (= (and bm!5680 c!9487) b!67738))

(assert (= (and bm!5680 (not c!9487)) b!67743))

(assert (= (and d!14357 res!36563) b!67741))

(assert (= (and b!67741 res!36562) b!67744))

(declare-fun m!63009 () Bool)

(assert (=> bm!5680 m!63009))

(declare-fun m!63011 () Bool)

(assert (=> d!14357 m!63011))

(declare-fun m!63013 () Bool)

(assert (=> d!14357 m!63013))

(declare-fun m!63015 () Bool)

(assert (=> b!67741 m!63015))

(declare-fun m!63017 () Bool)

(assert (=> b!67738 m!63017))

(declare-fun m!63019 () Bool)

(assert (=> b!67744 m!63019))

(assert (=> d!13939 d!14357))

(declare-fun d!14359 () Bool)

(assert (=> d!14359 (= (get!1130 (getValueByKey!129 (toList!723 (+!87 lt!28611 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28598)) (v!2483 (getValueByKey!129 (toList!723 (+!87 lt!28611 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28598)))))

(assert (=> d!13847 d!14359))

(declare-fun b!67747 () Bool)

(declare-fun e!44410 () Option!135)

(declare-fun e!44411 () Option!135)

(assert (=> b!67747 (= e!44410 e!44411)))

(declare-fun c!9489 () Bool)

(assert (=> b!67747 (= c!9489 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28611 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))) (not (= (_1!1064 (h!2070 (toList!723 (+!87 lt!28611 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))) lt!28598))))))

(declare-fun c!9488 () Bool)

(declare-fun d!14361 () Bool)

(assert (=> d!14361 (= c!9488 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28611 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))) (= (_1!1064 (h!2070 (toList!723 (+!87 lt!28611 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))) lt!28598)))))

(assert (=> d!14361 (= (getValueByKey!129 (toList!723 (+!87 lt!28611 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28598) e!44410)))

(declare-fun b!67748 () Bool)

(assert (=> b!67748 (= e!44411 (getValueByKey!129 (t!4976 (toList!723 (+!87 lt!28611 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))) lt!28598))))

(declare-fun b!67746 () Bool)

(assert (=> b!67746 (= e!44410 (Some!134 (_2!1064 (h!2070 (toList!723 (+!87 lt!28611 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))))

(declare-fun b!67749 () Bool)

(assert (=> b!67749 (= e!44411 None!133)))

(assert (= (and d!14361 c!9488) b!67746))

(assert (= (and d!14361 (not c!9488)) b!67747))

(assert (= (and b!67747 c!9489) b!67748))

(assert (= (and b!67747 (not c!9489)) b!67749))

(declare-fun m!63021 () Bool)

(assert (=> b!67748 m!63021))

(assert (=> d!13847 d!14361))

(assert (=> d!13873 d!14023))

(declare-fun b!67750 () Bool)

(declare-fun e!44412 () (_ BitVec 32))

(assert (=> b!67750 (= e!44412 #b00000000000000000000000000000000)))

(declare-fun b!67751 () Bool)

(declare-fun e!44413 () (_ BitVec 32))

(declare-fun call!5685 () (_ BitVec 32))

(assert (=> b!67751 (= e!44413 call!5685)))

(declare-fun b!67752 () Bool)

(assert (=> b!67752 (= e!44412 e!44413)))

(declare-fun c!9491 () Bool)

(assert (=> b!67752 (= c!9491 (validKeyInArray!0 (select (arr!1834 (_keys!3787 (_2!1065 lt!28753))) #b00000000000000000000000000000000)))))

(declare-fun b!67753 () Bool)

(assert (=> b!67753 (= e!44413 (bvadd #b00000000000000000000000000000001 call!5685))))

(declare-fun bm!5682 () Bool)

(assert (=> bm!5682 (= call!5685 (arrayCountValidKeys!0 (_keys!3787 (_2!1065 lt!28753)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2069 (_keys!3787 (_2!1065 lt!28753)))))))

(declare-fun d!14363 () Bool)

(declare-fun lt!29448 () (_ BitVec 32))

(assert (=> d!14363 (and (bvsge lt!29448 #b00000000000000000000000000000000) (bvsle lt!29448 (bvsub (size!2069 (_keys!3787 (_2!1065 lt!28753))) #b00000000000000000000000000000000)))))

(assert (=> d!14363 (= lt!29448 e!44412)))

(declare-fun c!9490 () Bool)

(assert (=> d!14363 (= c!9490 (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 (_2!1065 lt!28753)))))))

(assert (=> d!14363 (and (bvsle #b00000000000000000000000000000000 (size!2069 (_keys!3787 (_2!1065 lt!28753)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2069 (_keys!3787 (_2!1065 lt!28753))) (size!2069 (_keys!3787 (_2!1065 lt!28753)))))))

(assert (=> d!14363 (= (arrayCountValidKeys!0 (_keys!3787 (_2!1065 lt!28753)) #b00000000000000000000000000000000 (size!2069 (_keys!3787 (_2!1065 lt!28753)))) lt!29448)))

(assert (= (and d!14363 c!9490) b!67750))

(assert (= (and d!14363 (not c!9490)) b!67752))

(assert (= (and b!67752 c!9491) b!67753))

(assert (= (and b!67752 (not c!9491)) b!67751))

(assert (= (or b!67753 b!67751) bm!5682))

(assert (=> b!67752 m!62079))

(assert (=> b!67752 m!62079))

(assert (=> b!67752 m!62087))

(declare-fun m!63023 () Bool)

(assert (=> bm!5682 m!63023))

(assert (=> b!67151 d!14363))

(assert (=> d!13863 d!14023))

(declare-fun d!14365 () Bool)

(declare-fun lt!29449 () Bool)

(assert (=> d!14365 (= lt!29449 (select (content!70 lt!28650) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))))))

(declare-fun e!44414 () Bool)

(assert (=> d!14365 (= lt!29449 e!44414)))

(declare-fun res!36565 () Bool)

(assert (=> d!14365 (=> (not res!36565) (not e!44414))))

(assert (=> d!14365 (= res!36565 ((_ is Cons!1486) lt!28650))))

(assert (=> d!14365 (= (contains!718 lt!28650 (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))) lt!29449)))

(declare-fun b!67754 () Bool)

(declare-fun e!44415 () Bool)

(assert (=> b!67754 (= e!44414 e!44415)))

(declare-fun res!36564 () Bool)

(assert (=> b!67754 (=> res!36564 e!44415)))

(assert (=> b!67754 (= res!36564 (= (h!2070 lt!28650) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))))))

(declare-fun b!67755 () Bool)

(assert (=> b!67755 (= e!44415 (contains!718 (t!4976 lt!28650) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))))))

(assert (= (and d!14365 res!36565) b!67754))

(assert (= (and b!67754 (not res!36564)) b!67755))

(declare-fun m!63025 () Bool)

(assert (=> d!14365 m!63025))

(declare-fun m!63027 () Bool)

(assert (=> d!14365 m!63027))

(declare-fun m!63029 () Bool)

(assert (=> b!67755 m!63029))

(assert (=> b!66774 d!14365))

(declare-fun d!14367 () Bool)

(assert (=> d!14367 (isDefined!83 (getValueByKey!129 (toList!723 call!5557) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun lt!29450 () Unit!1836)

(assert (=> d!14367 (= lt!29450 (choose!378 (toList!723 call!5557) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun e!44416 () Bool)

(assert (=> d!14367 e!44416))

(declare-fun res!36566 () Bool)

(assert (=> d!14367 (=> (not res!36566) (not e!44416))))

(assert (=> d!14367 (= res!36566 (isStrictlySorted!284 (toList!723 call!5557)))))

(assert (=> d!14367 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 call!5557) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) lt!29450)))

(declare-fun b!67756 () Bool)

(assert (=> b!67756 (= e!44416 (containsKey!133 (toList!723 call!5557) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (= (and d!14367 res!36566) b!67756))

(assert (=> d!14367 m!60719))

(assert (=> d!14367 m!61767))

(assert (=> d!14367 m!61767))

(assert (=> d!14367 m!61769))

(assert (=> d!14367 m!60719))

(declare-fun m!63031 () Bool)

(assert (=> d!14367 m!63031))

(declare-fun m!63033 () Bool)

(assert (=> d!14367 m!63033))

(assert (=> b!67756 m!60719))

(assert (=> b!67756 m!61763))

(assert (=> b!67123 d!14367))

(assert (=> b!67123 d!14193))

(assert (=> b!67123 d!14195))

(declare-fun d!14369 () Bool)

(assert (=> d!14369 (= (inRange!0 (index!3101 lt!28908) (mask!6082 newMap!16)) (and (bvsge (index!3101 lt!28908) #b00000000000000000000000000000000) (bvslt (index!3101 lt!28908) (bvadd (mask!6082 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!66945 d!14369))

(declare-fun d!14371 () Bool)

(assert (=> d!14371 (contains!716 (getCurrentListMap!419 (_keys!3787 newMap!16) lt!28741 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760)))))

(assert (=> d!14371 true))

(declare-fun _$16!87 () Unit!1836)

(assert (=> d!14371 (= (choose!382 (_keys!3787 newMap!16) lt!28741 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (index!3101 lt!28760) (defaultEntry!2147 newMap!16)) _$16!87)))

(declare-fun bs!2904 () Bool)

(assert (= bs!2904 d!14371))

(assert (=> bs!2904 m!61653))

(assert (=> bs!2904 m!61009))

(assert (=> bs!2904 m!61653))

(assert (=> bs!2904 m!61009))

(assert (=> bs!2904 m!61655))

(assert (=> d!13885 d!14371))

(assert (=> d!13885 d!14023))

(declare-fun lt!29451 () Bool)

(declare-fun d!14373 () Bool)

(assert (=> d!14373 (= lt!29451 (select (content!70 (toList!723 lt!28844)) (tuple2!2109 lt!28628 lt!28633)))))

(declare-fun e!44417 () Bool)

(assert (=> d!14373 (= lt!29451 e!44417)))

(declare-fun res!36568 () Bool)

(assert (=> d!14373 (=> (not res!36568) (not e!44417))))

(assert (=> d!14373 (= res!36568 ((_ is Cons!1486) (toList!723 lt!28844)))))

(assert (=> d!14373 (= (contains!718 (toList!723 lt!28844) (tuple2!2109 lt!28628 lt!28633)) lt!29451)))

(declare-fun b!67757 () Bool)

(declare-fun e!44418 () Bool)

(assert (=> b!67757 (= e!44417 e!44418)))

(declare-fun res!36567 () Bool)

(assert (=> b!67757 (=> res!36567 e!44418)))

(assert (=> b!67757 (= res!36567 (= (h!2070 (toList!723 lt!28844)) (tuple2!2109 lt!28628 lt!28633)))))

(declare-fun b!67758 () Bool)

(assert (=> b!67758 (= e!44418 (contains!718 (t!4976 (toList!723 lt!28844)) (tuple2!2109 lt!28628 lt!28633)))))

(assert (= (and d!14373 res!36568) b!67757))

(assert (= (and b!67757 (not res!36567)) b!67758))

(declare-fun m!63035 () Bool)

(assert (=> d!14373 m!63035))

(declare-fun m!63037 () Bool)

(assert (=> d!14373 m!63037))

(declare-fun m!63039 () Bool)

(assert (=> b!67758 m!63039))

(assert (=> b!66872 d!14373))

(declare-fun d!14375 () Bool)

(assert (=> d!14375 (= (get!1130 (getValueByKey!129 (toList!723 (+!87 lt!28608 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28605)) (v!2483 (getValueByKey!129 (toList!723 (+!87 lt!28608 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28605)))))

(assert (=> d!13831 d!14375))

(declare-fun b!67760 () Bool)

(declare-fun e!44419 () Option!135)

(declare-fun e!44420 () Option!135)

(assert (=> b!67760 (= e!44419 e!44420)))

(declare-fun c!9493 () Bool)

(assert (=> b!67760 (= c!9493 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28608 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))) (not (= (_1!1064 (h!2070 (toList!723 (+!87 lt!28608 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))) lt!28605))))))

(declare-fun d!14377 () Bool)

(declare-fun c!9492 () Bool)

(assert (=> d!14377 (= c!9492 (and ((_ is Cons!1486) (toList!723 (+!87 lt!28608 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))) (= (_1!1064 (h!2070 (toList!723 (+!87 lt!28608 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))) lt!28605)))))

(assert (=> d!14377 (= (getValueByKey!129 (toList!723 (+!87 lt!28608 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!28605) e!44419)))

(declare-fun b!67761 () Bool)

(assert (=> b!67761 (= e!44420 (getValueByKey!129 (t!4976 (toList!723 (+!87 lt!28608 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))) lt!28605))))

(declare-fun b!67759 () Bool)

(assert (=> b!67759 (= e!44419 (Some!134 (_2!1064 (h!2070 (toList!723 (+!87 lt!28608 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))))

(declare-fun b!67762 () Bool)

(assert (=> b!67762 (= e!44420 None!133)))

(assert (= (and d!14377 c!9492) b!67759))

(assert (= (and d!14377 (not c!9492)) b!67760))

(assert (= (and b!67760 c!9493) b!67761))

(assert (= (and b!67760 (not c!9493)) b!67762))

(declare-fun m!63041 () Bool)

(assert (=> b!67761 m!63041))

(assert (=> d!13831 d!14377))

(declare-fun e!44428 () SeekEntryResult!243)

(declare-fun b!67775 () Bool)

(assert (=> b!67775 (= e!44428 (seekKeyOrZeroReturnVacant!0 (bvadd (x!10713 lt!28834) #b00000000000000000000000000000001) (nextIndex!0 (index!3102 lt!28834) (x!10713 lt!28834) (mask!6082 newMap!16)) (index!3102 lt!28834) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun d!14379 () Bool)

(declare-fun lt!29457 () SeekEntryResult!243)

(assert (=> d!14379 (and (or ((_ is Undefined!243) lt!29457) (not ((_ is Found!243) lt!29457)) (and (bvsge (index!3101 lt!29457) #b00000000000000000000000000000000) (bvslt (index!3101 lt!29457) (size!2069 (_keys!3787 newMap!16))))) (or ((_ is Undefined!243) lt!29457) ((_ is Found!243) lt!29457) (not ((_ is MissingVacant!243) lt!29457)) (not (= (index!3103 lt!29457) (index!3102 lt!28834))) (and (bvsge (index!3103 lt!29457) #b00000000000000000000000000000000) (bvslt (index!3103 lt!29457) (size!2069 (_keys!3787 newMap!16))))) (or ((_ is Undefined!243) lt!29457) (ite ((_ is Found!243) lt!29457) (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!29457)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) (and ((_ is MissingVacant!243) lt!29457) (= (index!3103 lt!29457) (index!3102 lt!28834)) (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3103 lt!29457)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!44429 () SeekEntryResult!243)

(assert (=> d!14379 (= lt!29457 e!44429)))

(declare-fun c!9501 () Bool)

(assert (=> d!14379 (= c!9501 (bvsge (x!10713 lt!28834) #b01111111111111111111111111111110))))

(declare-fun lt!29456 () (_ BitVec 64))

(assert (=> d!14379 (= lt!29456 (select (arr!1834 (_keys!3787 newMap!16)) (index!3102 lt!28834)))))

(assert (=> d!14379 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14379 (= (seekKeyOrZeroReturnVacant!0 (x!10713 lt!28834) (index!3102 lt!28834) (index!3102 lt!28834) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)) lt!29457)))

(declare-fun b!67776 () Bool)

(assert (=> b!67776 (= e!44429 Undefined!243)))

(declare-fun b!67777 () Bool)

(declare-fun c!9500 () Bool)

(assert (=> b!67777 (= c!9500 (= lt!29456 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44427 () SeekEntryResult!243)

(assert (=> b!67777 (= e!44427 e!44428)))

(declare-fun b!67778 () Bool)

(assert (=> b!67778 (= e!44429 e!44427)))

(declare-fun c!9502 () Bool)

(assert (=> b!67778 (= c!9502 (= lt!29456 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun b!67779 () Bool)

(assert (=> b!67779 (= e!44428 (MissingVacant!243 (index!3102 lt!28834)))))

(declare-fun b!67780 () Bool)

(assert (=> b!67780 (= e!44427 (Found!243 (index!3102 lt!28834)))))

(assert (= (and d!14379 c!9501) b!67776))

(assert (= (and d!14379 (not c!9501)) b!67778))

(assert (= (and b!67778 c!9502) b!67780))

(assert (= (and b!67778 (not c!9502)) b!67777))

(assert (= (and b!67777 c!9500) b!67779))

(assert (= (and b!67777 (not c!9500)) b!67775))

(declare-fun m!63043 () Bool)

(assert (=> b!67775 m!63043))

(assert (=> b!67775 m!63043))

(assert (=> b!67775 m!60719))

(declare-fun m!63045 () Bool)

(assert (=> b!67775 m!63045))

(declare-fun m!63047 () Bool)

(assert (=> d!14379 m!63047))

(declare-fun m!63049 () Bool)

(assert (=> d!14379 m!63049))

(assert (=> d!14379 m!61263))

(assert (=> d!14379 m!61069))

(assert (=> b!66857 d!14379))

(declare-fun d!14381 () Bool)

(declare-fun e!44431 () Bool)

(assert (=> d!14381 e!44431))

(declare-fun res!36569 () Bool)

(assert (=> d!14381 (=> res!36569 e!44431)))

(declare-fun lt!29461 () Bool)

(assert (=> d!14381 (= res!36569 (not lt!29461))))

(declare-fun lt!29458 () Bool)

(assert (=> d!14381 (= lt!29461 lt!29458)))

(declare-fun lt!29459 () Unit!1836)

(declare-fun e!44430 () Unit!1836)

(assert (=> d!14381 (= lt!29459 e!44430)))

(declare-fun c!9503 () Bool)

(assert (=> d!14381 (= c!9503 lt!29458)))

(assert (=> d!14381 (= lt!29458 (containsKey!133 (toList!723 lt!29112) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!14381 (= (contains!716 lt!29112 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29461)))

(declare-fun b!67781 () Bool)

(declare-fun lt!29460 () Unit!1836)

(assert (=> b!67781 (= e!44430 lt!29460)))

(assert (=> b!67781 (= lt!29460 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!29112) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> b!67781 (isDefined!83 (getValueByKey!129 (toList!723 lt!29112) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67782 () Bool)

(declare-fun Unit!1891 () Unit!1836)

(assert (=> b!67782 (= e!44430 Unit!1891)))

(declare-fun b!67783 () Bool)

(assert (=> b!67783 (= e!44431 (isDefined!83 (getValueByKey!129 (toList!723 lt!29112) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14381 c!9503) b!67781))

(assert (= (and d!14381 (not c!9503)) b!67782))

(assert (= (and d!14381 (not res!36569)) b!67783))

(declare-fun m!63051 () Bool)

(assert (=> d!14381 m!63051))

(declare-fun m!63053 () Bool)

(assert (=> b!67781 m!63053))

(assert (=> b!67781 m!61845))

(assert (=> b!67781 m!61845))

(declare-fun m!63055 () Bool)

(assert (=> b!67781 m!63055))

(assert (=> b!67783 m!61845))

(assert (=> b!67783 m!61845))

(assert (=> b!67783 m!63055))

(assert (=> d!13933 d!14381))

(declare-fun b!67785 () Bool)

(declare-fun e!44432 () Option!135)

(declare-fun e!44433 () Option!135)

(assert (=> b!67785 (= e!44432 e!44433)))

(declare-fun c!9505 () Bool)

(assert (=> b!67785 (= c!9505 (and ((_ is Cons!1486) lt!29114) (not (= (_1!1064 (h!2070 lt!29114)) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun d!14383 () Bool)

(declare-fun c!9504 () Bool)

(assert (=> d!14383 (= c!9504 (and ((_ is Cons!1486) lt!29114) (= (_1!1064 (h!2070 lt!29114)) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14383 (= (getValueByKey!129 lt!29114 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) e!44432)))

(declare-fun b!67786 () Bool)

(assert (=> b!67786 (= e!44433 (getValueByKey!129 (t!4976 lt!29114) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67784 () Bool)

(assert (=> b!67784 (= e!44432 (Some!134 (_2!1064 (h!2070 lt!29114))))))

(declare-fun b!67787 () Bool)

(assert (=> b!67787 (= e!44433 None!133)))

(assert (= (and d!14383 c!9504) b!67784))

(assert (= (and d!14383 (not c!9504)) b!67785))

(assert (= (and b!67785 c!9505) b!67786))

(assert (= (and b!67785 (not c!9505)) b!67787))

(declare-fun m!63057 () Bool)

(assert (=> b!67786 m!63057))

(assert (=> d!13933 d!14383))

(declare-fun d!14385 () Bool)

(assert (=> d!14385 (= (getValueByKey!129 lt!29114 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun lt!29462 () Unit!1836)

(assert (=> d!14385 (= lt!29462 (choose!376 lt!29114 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun e!44434 () Bool)

(assert (=> d!14385 e!44434))

(declare-fun res!36570 () Bool)

(assert (=> d!14385 (=> (not res!36570) (not e!44434))))

(assert (=> d!14385 (= res!36570 (isStrictlySorted!284 lt!29114))))

(assert (=> d!14385 (= (lemmaContainsTupThenGetReturnValue!48 lt!29114 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29462)))

(declare-fun b!67788 () Bool)

(declare-fun res!36571 () Bool)

(assert (=> b!67788 (=> (not res!36571) (not e!44434))))

(assert (=> b!67788 (= res!36571 (containsKey!133 lt!29114 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67789 () Bool)

(assert (=> b!67789 (= e!44434 (contains!718 lt!29114 (tuple2!2109 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14385 res!36570) b!67788))

(assert (= (and b!67788 res!36571) b!67789))

(assert (=> d!14385 m!61839))

(declare-fun m!63059 () Bool)

(assert (=> d!14385 m!63059))

(declare-fun m!63061 () Bool)

(assert (=> d!14385 m!63061))

(declare-fun m!63063 () Bool)

(assert (=> b!67788 m!63063))

(declare-fun m!63065 () Bool)

(assert (=> b!67789 m!63065))

(assert (=> d!13933 d!14385))

(declare-fun b!67790 () Bool)

(declare-fun e!44436 () List!1490)

(declare-fun call!5687 () List!1490)

(assert (=> b!67790 (= e!44436 call!5687)))

(declare-fun b!67791 () Bool)

(declare-fun e!44435 () List!1490)

(declare-fun call!5686 () List!1490)

(assert (=> b!67791 (= e!44435 call!5686)))

(declare-fun bm!5683 () Bool)

(declare-fun call!5688 () List!1490)

(assert (=> bm!5683 (= call!5686 call!5688)))

(declare-fun c!9507 () Bool)

(declare-fun e!44439 () List!1490)

(declare-fun bm!5684 () Bool)

(assert (=> bm!5684 (= call!5687 ($colon$colon!62 e!44439 (ite c!9507 (h!2070 (toList!723 lt!28505)) (tuple2!2109 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun c!9509 () Bool)

(assert (=> bm!5684 (= c!9509 c!9507)))

(declare-fun d!14387 () Bool)

(declare-fun e!44437 () Bool)

(assert (=> d!14387 e!44437))

(declare-fun res!36573 () Bool)

(assert (=> d!14387 (=> (not res!36573) (not e!44437))))

(declare-fun lt!29463 () List!1490)

(assert (=> d!14387 (= res!36573 (isStrictlySorted!284 lt!29463))))

(assert (=> d!14387 (= lt!29463 e!44436)))

(assert (=> d!14387 (= c!9507 (and ((_ is Cons!1486) (toList!723 lt!28505)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28505))) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14387 (isStrictlySorted!284 (toList!723 lt!28505))))

(assert (=> d!14387 (= (insertStrictlySorted!50 (toList!723 lt!28505) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29463)))

(declare-fun bm!5685 () Bool)

(assert (=> bm!5685 (= call!5688 call!5687)))

(declare-fun b!67792 () Bool)

(assert (=> b!67792 (= e!44439 (insertStrictlySorted!50 (t!4976 (toList!723 lt!28505)) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67793 () Bool)

(declare-fun c!9508 () Bool)

(assert (=> b!67793 (= c!9508 (and ((_ is Cons!1486) (toList!723 lt!28505)) (bvsgt (_1!1064 (h!2070 (toList!723 lt!28505))) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun e!44438 () List!1490)

(assert (=> b!67793 (= e!44438 e!44435)))

(declare-fun b!67794 () Bool)

(assert (=> b!67794 (= e!44438 call!5688)))

(declare-fun b!67795 () Bool)

(declare-fun res!36572 () Bool)

(assert (=> b!67795 (=> (not res!36572) (not e!44437))))

(assert (=> b!67795 (= res!36572 (containsKey!133 lt!29463 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67796 () Bool)

(assert (=> b!67796 (= e!44435 call!5686)))

(declare-fun b!67797 () Bool)

(declare-fun c!9506 () Bool)

(assert (=> b!67797 (= e!44439 (ite c!9506 (t!4976 (toList!723 lt!28505)) (ite c!9508 (Cons!1486 (h!2070 (toList!723 lt!28505)) (t!4976 (toList!723 lt!28505))) Nil!1487)))))

(declare-fun b!67798 () Bool)

(assert (=> b!67798 (= e!44437 (contains!718 lt!29463 (tuple2!2109 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!67799 () Bool)

(assert (=> b!67799 (= e!44436 e!44438)))

(assert (=> b!67799 (= c!9506 (and ((_ is Cons!1486) (toList!723 lt!28505)) (= (_1!1064 (h!2070 (toList!723 lt!28505))) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14387 c!9507) b!67790))

(assert (= (and d!14387 (not c!9507)) b!67799))

(assert (= (and b!67799 c!9506) b!67794))

(assert (= (and b!67799 (not c!9506)) b!67793))

(assert (= (and b!67793 c!9508) b!67796))

(assert (= (and b!67793 (not c!9508)) b!67791))

(assert (= (or b!67796 b!67791) bm!5683))

(assert (= (or b!67794 bm!5683) bm!5685))

(assert (= (or b!67790 bm!5685) bm!5684))

(assert (= (and bm!5684 c!9509) b!67792))

(assert (= (and bm!5684 (not c!9509)) b!67797))

(assert (= (and d!14387 res!36573) b!67795))

(assert (= (and b!67795 res!36572) b!67798))

(declare-fun m!63067 () Bool)

(assert (=> bm!5684 m!63067))

(declare-fun m!63069 () Bool)

(assert (=> d!14387 m!63069))

(assert (=> d!14387 m!61357))

(declare-fun m!63071 () Bool)

(assert (=> b!67795 m!63071))

(declare-fun m!63073 () Bool)

(assert (=> b!67792 m!63073))

(declare-fun m!63075 () Bool)

(assert (=> b!67798 m!63075))

(assert (=> d!13933 d!14387))

(declare-fun d!14389 () Bool)

(assert (=> d!14389 (= (apply!72 lt!28822 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1130 (getValueByKey!129 (toList!723 lt!28822) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!2905 () Bool)

(assert (= bs!2905 d!14389))

(assert (=> bs!2905 m!61221))

(assert (=> bs!2905 m!62671))

(assert (=> bs!2905 m!62671))

(declare-fun m!63077 () Bool)

(assert (=> bs!2905 m!63077))

(assert (=> b!66836 d!14389))

(assert (=> b!66836 d!13951))

(declare-fun d!14391 () Bool)

(assert (not d!14391))

(assert (=> b!67143 d!14391))

(declare-fun b!67801 () Bool)

(declare-fun e!44440 () Option!135)

(declare-fun e!44441 () Option!135)

(assert (=> b!67801 (= e!44440 e!44441)))

(declare-fun c!9511 () Bool)

(assert (=> b!67801 (= c!9511 (and ((_ is Cons!1486) (toList!723 lt!29112)) (not (= (_1!1064 (h!2070 (toList!723 lt!29112))) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun d!14393 () Bool)

(declare-fun c!9510 () Bool)

(assert (=> d!14393 (= c!9510 (and ((_ is Cons!1486) (toList!723 lt!29112)) (= (_1!1064 (h!2070 (toList!723 lt!29112))) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14393 (= (getValueByKey!129 (toList!723 lt!29112) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) e!44440)))

(declare-fun b!67802 () Bool)

(assert (=> b!67802 (= e!44441 (getValueByKey!129 (t!4976 (toList!723 lt!29112)) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67800 () Bool)

(assert (=> b!67800 (= e!44440 (Some!134 (_2!1064 (h!2070 (toList!723 lt!29112)))))))

(declare-fun b!67803 () Bool)

(assert (=> b!67803 (= e!44441 None!133)))

(assert (= (and d!14393 c!9510) b!67800))

(assert (= (and d!14393 (not c!9510)) b!67801))

(assert (= (and b!67801 c!9511) b!67802))

(assert (= (and b!67801 (not c!9511)) b!67803))

(declare-fun m!63079 () Bool)

(assert (=> b!67802 m!63079))

(assert (=> b!67158 d!14393))

(declare-fun d!14395 () Bool)

(declare-fun e!44443 () Bool)

(assert (=> d!14395 e!44443))

(declare-fun res!36574 () Bool)

(assert (=> d!14395 (=> res!36574 e!44443)))

(declare-fun lt!29467 () Bool)

(assert (=> d!14395 (= res!36574 (not lt!29467))))

(declare-fun lt!29464 () Bool)

(assert (=> d!14395 (= lt!29467 lt!29464)))

(declare-fun lt!29465 () Unit!1836)

(declare-fun e!44442 () Unit!1836)

(assert (=> d!14395 (= lt!29465 e!44442)))

(declare-fun c!9512 () Bool)

(assert (=> d!14395 (= c!9512 lt!29464)))

(assert (=> d!14395 (= lt!29464 (containsKey!133 (toList!723 lt!28798) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14395 (= (contains!716 lt!28798 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29467)))

(declare-fun b!67804 () Bool)

(declare-fun lt!29466 () Unit!1836)

(assert (=> b!67804 (= e!44442 lt!29466)))

(assert (=> b!67804 (= lt!29466 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28798) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67804 (isDefined!83 (getValueByKey!129 (toList!723 lt!28798) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67805 () Bool)

(declare-fun Unit!1892 () Unit!1836)

(assert (=> b!67805 (= e!44442 Unit!1892)))

(declare-fun b!67806 () Bool)

(assert (=> b!67806 (= e!44443 (isDefined!83 (getValueByKey!129 (toList!723 lt!28798) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14395 c!9512) b!67804))

(assert (= (and d!14395 (not c!9512)) b!67805))

(assert (= (and d!14395 (not res!36574)) b!67806))

(declare-fun m!63081 () Bool)

(assert (=> d!14395 m!63081))

(declare-fun m!63083 () Bool)

(assert (=> b!67804 m!63083))

(declare-fun m!63085 () Bool)

(assert (=> b!67804 m!63085))

(assert (=> b!67804 m!63085))

(declare-fun m!63087 () Bool)

(assert (=> b!67804 m!63087))

(assert (=> b!67806 m!63085))

(assert (=> b!67806 m!63085))

(assert (=> b!67806 m!63087))

(assert (=> bm!5575 d!14395))

(assert (=> d!13765 d!14023))

(declare-fun d!14397 () Bool)

(declare-fun lt!29468 () Bool)

(assert (=> d!14397 (= lt!29468 (select (content!70 (toList!723 lt!28896)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))

(declare-fun e!44444 () Bool)

(assert (=> d!14397 (= lt!29468 e!44444)))

(declare-fun res!36576 () Bool)

(assert (=> d!14397 (=> (not res!36576) (not e!44444))))

(assert (=> d!14397 (= res!36576 ((_ is Cons!1486) (toList!723 lt!28896)))))

(assert (=> d!14397 (= (contains!718 (toList!723 lt!28896) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) lt!29468)))

(declare-fun b!67807 () Bool)

(declare-fun e!44445 () Bool)

(assert (=> b!67807 (= e!44444 e!44445)))

(declare-fun res!36575 () Bool)

(assert (=> b!67807 (=> res!36575 e!44445)))

(assert (=> b!67807 (= res!36575 (= (h!2070 (toList!723 lt!28896)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))

(declare-fun b!67808 () Bool)

(assert (=> b!67808 (= e!44445 (contains!718 (t!4976 (toList!723 lt!28896)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))

(assert (= (and d!14397 res!36576) b!67807))

(assert (= (and b!67807 (not res!36575)) b!67808))

(declare-fun m!63089 () Bool)

(assert (=> d!14397 m!63089))

(declare-fun m!63091 () Bool)

(assert (=> d!14397 m!63091))

(declare-fun m!63093 () Bool)

(assert (=> b!67808 m!63093))

(assert (=> b!66938 d!14397))

(declare-fun d!14399 () Bool)

(declare-fun e!44446 () Bool)

(assert (=> d!14399 e!44446))

(declare-fun res!36578 () Bool)

(assert (=> d!14399 (=> (not res!36578) (not e!44446))))

(declare-fun lt!29470 () ListLongMap!1415)

(assert (=> d!14399 (= res!36578 (contains!716 lt!29470 (_1!1064 (tuple2!2109 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))))))))

(declare-fun lt!29472 () List!1490)

(assert (=> d!14399 (= lt!29470 (ListLongMap!1416 lt!29472))))

(declare-fun lt!29471 () Unit!1836)

(declare-fun lt!29469 () Unit!1836)

(assert (=> d!14399 (= lt!29471 lt!29469)))

(assert (=> d!14399 (= (getValueByKey!129 lt!29472 (_1!1064 (tuple2!2109 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))))) (Some!134 (_2!1064 (tuple2!2109 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))))))))

(assert (=> d!14399 (= lt!29469 (lemmaContainsTupThenGetReturnValue!48 lt!29472 (_1!1064 (tuple2!2109 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)))) (_2!1064 (tuple2!2109 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))))))))

(assert (=> d!14399 (= lt!29472 (insertStrictlySorted!50 (toList!723 lt!28783) (_1!1064 (tuple2!2109 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)))) (_2!1064 (tuple2!2109 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))))))))

(assert (=> d!14399 (= (+!87 lt!28783 (tuple2!2109 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)))) lt!29470)))

(declare-fun b!67809 () Bool)

(declare-fun res!36577 () Bool)

(assert (=> b!67809 (=> (not res!36577) (not e!44446))))

(assert (=> b!67809 (= res!36577 (= (getValueByKey!129 (toList!723 lt!29470) (_1!1064 (tuple2!2109 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))))) (Some!134 (_2!1064 (tuple2!2109 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)))))))))

(declare-fun b!67810 () Bool)

(assert (=> b!67810 (= e!44446 (contains!718 (toList!723 lt!29470) (tuple2!2109 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)))))))

(assert (= (and d!14399 res!36578) b!67809))

(assert (= (and b!67809 res!36577) b!67810))

(declare-fun m!63095 () Bool)

(assert (=> d!14399 m!63095))

(declare-fun m!63097 () Bool)

(assert (=> d!14399 m!63097))

(declare-fun m!63099 () Bool)

(assert (=> d!14399 m!63099))

(declare-fun m!63101 () Bool)

(assert (=> d!14399 m!63101))

(declare-fun m!63103 () Bool)

(assert (=> b!67809 m!63103))

(declare-fun m!63105 () Bool)

(assert (=> b!67810 m!63105))

(assert (=> b!66748 d!14399))

(declare-fun d!14401 () Bool)

(assert (=> d!14401 (= (apply!72 lt!28794 lt!28791) (get!1130 (getValueByKey!129 (toList!723 lt!28794) lt!28791)))))

(declare-fun bs!2906 () Bool)

(assert (= bs!2906 d!14401))

(declare-fun m!63107 () Bool)

(assert (=> bs!2906 m!63107))

(assert (=> bs!2906 m!63107))

(declare-fun m!63109 () Bool)

(assert (=> bs!2906 m!63109))

(assert (=> b!66748 d!14401))

(declare-fun d!14403 () Bool)

(assert (=> d!14403 (= (apply!72 (+!87 lt!28782 (tuple2!2109 lt!28787 (minValue!2055 newMap!16))) lt!28796) (get!1130 (getValueByKey!129 (toList!723 (+!87 lt!28782 (tuple2!2109 lt!28787 (minValue!2055 newMap!16)))) lt!28796)))))

(declare-fun bs!2907 () Bool)

(assert (= bs!2907 d!14403))

(declare-fun m!63111 () Bool)

(assert (=> bs!2907 m!63111))

(assert (=> bs!2907 m!63111))

(declare-fun m!63113 () Bool)

(assert (=> bs!2907 m!63113))

(assert (=> b!66748 d!14403))

(declare-fun d!14405 () Bool)

(assert (=> d!14405 (= (apply!72 (+!87 lt!28794 (tuple2!2109 lt!28789 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)))) lt!28791) (apply!72 lt!28794 lt!28791))))

(declare-fun lt!29473 () Unit!1836)

(assert (=> d!14405 (= lt!29473 (choose!379 lt!28794 lt!28789 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)) lt!28791))))

(declare-fun e!44447 () Bool)

(assert (=> d!14405 e!44447))

(declare-fun res!36579 () Bool)

(assert (=> d!14405 (=> (not res!36579) (not e!44447))))

(assert (=> d!14405 (= res!36579 (contains!716 lt!28794 lt!28791))))

(assert (=> d!14405 (= (addApplyDifferent!48 lt!28794 lt!28789 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)) lt!28791) lt!29473)))

(declare-fun b!67811 () Bool)

(assert (=> b!67811 (= e!44447 (not (= lt!28791 lt!28789)))))

(assert (= (and d!14405 res!36579) b!67811))

(assert (=> d!14405 m!61159))

(assert (=> d!14405 m!61133))

(declare-fun m!63115 () Bool)

(assert (=> d!14405 m!63115))

(declare-fun m!63117 () Bool)

(assert (=> d!14405 m!63117))

(assert (=> d!14405 m!61133))

(assert (=> d!14405 m!61135))

(assert (=> b!66748 d!14405))

(declare-fun d!14407 () Bool)

(assert (=> d!14407 (= (apply!72 lt!28797 lt!28784) (get!1130 (getValueByKey!129 (toList!723 lt!28797) lt!28784)))))

(declare-fun bs!2908 () Bool)

(assert (= bs!2908 d!14407))

(declare-fun m!63119 () Bool)

(assert (=> bs!2908 m!63119))

(assert (=> bs!2908 m!63119))

(declare-fun m!63121 () Bool)

(assert (=> bs!2908 m!63121))

(assert (=> b!66748 d!14407))

(declare-fun d!14409 () Bool)

(assert (=> d!14409 (= (apply!72 (+!87 lt!28797 (tuple2!2109 lt!28788 (minValue!2055 newMap!16))) lt!28784) (apply!72 lt!28797 lt!28784))))

(declare-fun lt!29474 () Unit!1836)

(assert (=> d!14409 (= lt!29474 (choose!379 lt!28797 lt!28788 (minValue!2055 newMap!16) lt!28784))))

(declare-fun e!44448 () Bool)

(assert (=> d!14409 e!44448))

(declare-fun res!36580 () Bool)

(assert (=> d!14409 (=> (not res!36580) (not e!44448))))

(assert (=> d!14409 (= res!36580 (contains!716 lt!28797 lt!28784))))

(assert (=> d!14409 (= (addApplyDifferent!48 lt!28797 lt!28788 (minValue!2055 newMap!16) lt!28784) lt!29474)))

(declare-fun b!67812 () Bool)

(assert (=> b!67812 (= e!44448 (not (= lt!28784 lt!28788)))))

(assert (= (and d!14409 res!36580) b!67812))

(assert (=> d!14409 m!61145))

(assert (=> d!14409 m!61155))

(declare-fun m!63123 () Bool)

(assert (=> d!14409 m!63123))

(declare-fun m!63125 () Bool)

(assert (=> d!14409 m!63125))

(assert (=> d!14409 m!61155))

(assert (=> d!14409 m!61157))

(assert (=> b!66748 d!14409))

(declare-fun d!14411 () Bool)

(declare-fun e!44449 () Bool)

(assert (=> d!14411 e!44449))

(declare-fun res!36582 () Bool)

(assert (=> d!14411 (=> (not res!36582) (not e!44449))))

(declare-fun lt!29476 () ListLongMap!1415)

(assert (=> d!14411 (= res!36582 (contains!716 lt!29476 (_1!1064 (tuple2!2109 lt!28788 (minValue!2055 newMap!16)))))))

(declare-fun lt!29478 () List!1490)

(assert (=> d!14411 (= lt!29476 (ListLongMap!1416 lt!29478))))

(declare-fun lt!29477 () Unit!1836)

(declare-fun lt!29475 () Unit!1836)

(assert (=> d!14411 (= lt!29477 lt!29475)))

(assert (=> d!14411 (= (getValueByKey!129 lt!29478 (_1!1064 (tuple2!2109 lt!28788 (minValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 lt!28788 (minValue!2055 newMap!16)))))))

(assert (=> d!14411 (= lt!29475 (lemmaContainsTupThenGetReturnValue!48 lt!29478 (_1!1064 (tuple2!2109 lt!28788 (minValue!2055 newMap!16))) (_2!1064 (tuple2!2109 lt!28788 (minValue!2055 newMap!16)))))))

(assert (=> d!14411 (= lt!29478 (insertStrictlySorted!50 (toList!723 lt!28797) (_1!1064 (tuple2!2109 lt!28788 (minValue!2055 newMap!16))) (_2!1064 (tuple2!2109 lt!28788 (minValue!2055 newMap!16)))))))

(assert (=> d!14411 (= (+!87 lt!28797 (tuple2!2109 lt!28788 (minValue!2055 newMap!16))) lt!29476)))

(declare-fun b!67813 () Bool)

(declare-fun res!36581 () Bool)

(assert (=> b!67813 (=> (not res!36581) (not e!44449))))

(assert (=> b!67813 (= res!36581 (= (getValueByKey!129 (toList!723 lt!29476) (_1!1064 (tuple2!2109 lt!28788 (minValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 lt!28788 (minValue!2055 newMap!16))))))))

(declare-fun b!67814 () Bool)

(assert (=> b!67814 (= e!44449 (contains!718 (toList!723 lt!29476) (tuple2!2109 lt!28788 (minValue!2055 newMap!16))))))

(assert (= (and d!14411 res!36582) b!67813))

(assert (= (and b!67813 res!36581) b!67814))

(declare-fun m!63127 () Bool)

(assert (=> d!14411 m!63127))

(declare-fun m!63129 () Bool)

(assert (=> d!14411 m!63129))

(declare-fun m!63131 () Bool)

(assert (=> d!14411 m!63131))

(declare-fun m!63133 () Bool)

(assert (=> d!14411 m!63133))

(declare-fun m!63135 () Bool)

(assert (=> b!67813 m!63135))

(declare-fun m!63137 () Bool)

(assert (=> b!67814 m!63137))

(assert (=> b!66748 d!14411))

(declare-fun d!14413 () Bool)

(assert (=> d!14413 (= (apply!72 (+!87 lt!28794 (tuple2!2109 lt!28789 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)))) lt!28791) (get!1130 (getValueByKey!129 (toList!723 (+!87 lt!28794 (tuple2!2109 lt!28789 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))))) lt!28791)))))

(declare-fun bs!2909 () Bool)

(assert (= bs!2909 d!14413))

(declare-fun m!63139 () Bool)

(assert (=> bs!2909 m!63139))

(assert (=> bs!2909 m!63139))

(declare-fun m!63141 () Bool)

(assert (=> bs!2909 m!63141))

(assert (=> b!66748 d!14413))

(declare-fun d!14415 () Bool)

(assert (=> d!14415 (= (apply!72 (+!87 lt!28782 (tuple2!2109 lt!28787 (minValue!2055 newMap!16))) lt!28796) (apply!72 lt!28782 lt!28796))))

(declare-fun lt!29479 () Unit!1836)

(assert (=> d!14415 (= lt!29479 (choose!379 lt!28782 lt!28787 (minValue!2055 newMap!16) lt!28796))))

(declare-fun e!44450 () Bool)

(assert (=> d!14415 e!44450))

(declare-fun res!36583 () Bool)

(assert (=> d!14415 (=> (not res!36583) (not e!44450))))

(assert (=> d!14415 (= res!36583 (contains!716 lt!28782 lt!28796))))

(assert (=> d!14415 (= (addApplyDifferent!48 lt!28782 lt!28787 (minValue!2055 newMap!16) lt!28796) lt!29479)))

(declare-fun b!67815 () Bool)

(assert (=> b!67815 (= e!44450 (not (= lt!28796 lt!28787)))))

(assert (= (and d!14415 res!36583) b!67815))

(assert (=> d!14415 m!61137))

(assert (=> d!14415 m!61143))

(declare-fun m!63143 () Bool)

(assert (=> d!14415 m!63143))

(declare-fun m!63145 () Bool)

(assert (=> d!14415 m!63145))

(assert (=> d!14415 m!61143))

(assert (=> d!14415 m!61153))

(assert (=> b!66748 d!14415))

(declare-fun d!14417 () Bool)

(assert (=> d!14417 (= (apply!72 lt!28782 lt!28796) (get!1130 (getValueByKey!129 (toList!723 lt!28782) lt!28796)))))

(declare-fun bs!2910 () Bool)

(assert (= bs!2910 d!14417))

(declare-fun m!63147 () Bool)

(assert (=> bs!2910 m!63147))

(assert (=> bs!2910 m!63147))

(declare-fun m!63149 () Bool)

(assert (=> bs!2910 m!63149))

(assert (=> b!66748 d!14417))

(declare-fun d!14419 () Bool)

(declare-fun e!44452 () Bool)

(assert (=> d!14419 e!44452))

(declare-fun res!36584 () Bool)

(assert (=> d!14419 (=> res!36584 e!44452)))

(declare-fun lt!29483 () Bool)

(assert (=> d!14419 (= res!36584 (not lt!29483))))

(declare-fun lt!29480 () Bool)

(assert (=> d!14419 (= lt!29483 lt!29480)))

(declare-fun lt!29481 () Unit!1836)

(declare-fun e!44451 () Unit!1836)

(assert (=> d!14419 (= lt!29481 e!44451)))

(declare-fun c!9513 () Bool)

(assert (=> d!14419 (= c!9513 lt!29480)))

(assert (=> d!14419 (= lt!29480 (containsKey!133 (toList!723 (+!87 lt!28783 (tuple2!2109 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))))) lt!28786))))

(assert (=> d!14419 (= (contains!716 (+!87 lt!28783 (tuple2!2109 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)))) lt!28786) lt!29483)))

(declare-fun b!67816 () Bool)

(declare-fun lt!29482 () Unit!1836)

(assert (=> b!67816 (= e!44451 lt!29482)))

(assert (=> b!67816 (= lt!29482 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 (+!87 lt!28783 (tuple2!2109 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))))) lt!28786))))

(assert (=> b!67816 (isDefined!83 (getValueByKey!129 (toList!723 (+!87 lt!28783 (tuple2!2109 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))))) lt!28786))))

(declare-fun b!67817 () Bool)

(declare-fun Unit!1893 () Unit!1836)

(assert (=> b!67817 (= e!44451 Unit!1893)))

(declare-fun b!67818 () Bool)

(assert (=> b!67818 (= e!44452 (isDefined!83 (getValueByKey!129 (toList!723 (+!87 lt!28783 (tuple2!2109 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))))) lt!28786)))))

(assert (= (and d!14419 c!9513) b!67816))

(assert (= (and d!14419 (not c!9513)) b!67817))

(assert (= (and d!14419 (not res!36584)) b!67818))

(declare-fun m!63151 () Bool)

(assert (=> d!14419 m!63151))

(declare-fun m!63153 () Bool)

(assert (=> b!67816 m!63153))

(declare-fun m!63155 () Bool)

(assert (=> b!67816 m!63155))

(assert (=> b!67816 m!63155))

(declare-fun m!63157 () Bool)

(assert (=> b!67816 m!63157))

(assert (=> b!67818 m!63155))

(assert (=> b!67818 m!63155))

(assert (=> b!67818 m!63157))

(assert (=> b!66748 d!14419))

(assert (=> b!66748 d!14323))

(declare-fun d!14421 () Bool)

(declare-fun e!44453 () Bool)

(assert (=> d!14421 e!44453))

(declare-fun res!36586 () Bool)

(assert (=> d!14421 (=> (not res!36586) (not e!44453))))

(declare-fun lt!29485 () ListLongMap!1415)

(assert (=> d!14421 (= res!36586 (contains!716 lt!29485 (_1!1064 (tuple2!2109 lt!28789 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))))))))

(declare-fun lt!29487 () List!1490)

(assert (=> d!14421 (= lt!29485 (ListLongMap!1416 lt!29487))))

(declare-fun lt!29486 () Unit!1836)

(declare-fun lt!29484 () Unit!1836)

(assert (=> d!14421 (= lt!29486 lt!29484)))

(assert (=> d!14421 (= (getValueByKey!129 lt!29487 (_1!1064 (tuple2!2109 lt!28789 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))))) (Some!134 (_2!1064 (tuple2!2109 lt!28789 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))))))))

(assert (=> d!14421 (= lt!29484 (lemmaContainsTupThenGetReturnValue!48 lt!29487 (_1!1064 (tuple2!2109 lt!28789 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)))) (_2!1064 (tuple2!2109 lt!28789 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))))))))

(assert (=> d!14421 (= lt!29487 (insertStrictlySorted!50 (toList!723 lt!28794) (_1!1064 (tuple2!2109 lt!28789 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)))) (_2!1064 (tuple2!2109 lt!28789 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))))))))

(assert (=> d!14421 (= (+!87 lt!28794 (tuple2!2109 lt!28789 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)))) lt!29485)))

(declare-fun b!67819 () Bool)

(declare-fun res!36585 () Bool)

(assert (=> b!67819 (=> (not res!36585) (not e!44453))))

(assert (=> b!67819 (= res!36585 (= (getValueByKey!129 (toList!723 lt!29485) (_1!1064 (tuple2!2109 lt!28789 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))))) (Some!134 (_2!1064 (tuple2!2109 lt!28789 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)))))))))

(declare-fun b!67820 () Bool)

(assert (=> b!67820 (= e!44453 (contains!718 (toList!723 lt!29485) (tuple2!2109 lt!28789 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)))))))

(assert (= (and d!14421 res!36586) b!67819))

(assert (= (and b!67819 res!36585) b!67820))

(declare-fun m!63159 () Bool)

(assert (=> d!14421 m!63159))

(declare-fun m!63161 () Bool)

(assert (=> d!14421 m!63161))

(declare-fun m!63163 () Bool)

(assert (=> d!14421 m!63163))

(declare-fun m!63165 () Bool)

(assert (=> d!14421 m!63165))

(declare-fun m!63167 () Bool)

(assert (=> b!67819 m!63167))

(declare-fun m!63169 () Bool)

(assert (=> b!67820 m!63169))

(assert (=> b!66748 d!14421))

(declare-fun d!14423 () Bool)

(assert (=> d!14423 (contains!716 (+!87 lt!28783 (tuple2!2109 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)))) lt!28786)))

(declare-fun lt!29488 () Unit!1836)

(assert (=> d!14423 (= lt!29488 (choose!380 lt!28783 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)) lt!28786))))

(assert (=> d!14423 (contains!716 lt!28783 lt!28786)))

(assert (=> d!14423 (= (addStillContains!48 lt!28783 lt!28792 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16)) lt!28786) lt!29488)))

(declare-fun bs!2911 () Bool)

(assert (= bs!2911 d!14423))

(assert (=> bs!2911 m!61139))

(assert (=> bs!2911 m!61139))

(assert (=> bs!2911 m!61141))

(declare-fun m!63171 () Bool)

(assert (=> bs!2911 m!63171))

(declare-fun m!63173 () Bool)

(assert (=> bs!2911 m!63173))

(assert (=> b!66748 d!14423))

(declare-fun d!14425 () Bool)

(declare-fun e!44454 () Bool)

(assert (=> d!14425 e!44454))

(declare-fun res!36588 () Bool)

(assert (=> d!14425 (=> (not res!36588) (not e!44454))))

(declare-fun lt!29490 () ListLongMap!1415)

(assert (=> d!14425 (= res!36588 (contains!716 lt!29490 (_1!1064 (tuple2!2109 lt!28787 (minValue!2055 newMap!16)))))))

(declare-fun lt!29492 () List!1490)

(assert (=> d!14425 (= lt!29490 (ListLongMap!1416 lt!29492))))

(declare-fun lt!29491 () Unit!1836)

(declare-fun lt!29489 () Unit!1836)

(assert (=> d!14425 (= lt!29491 lt!29489)))

(assert (=> d!14425 (= (getValueByKey!129 lt!29492 (_1!1064 (tuple2!2109 lt!28787 (minValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 lt!28787 (minValue!2055 newMap!16)))))))

(assert (=> d!14425 (= lt!29489 (lemmaContainsTupThenGetReturnValue!48 lt!29492 (_1!1064 (tuple2!2109 lt!28787 (minValue!2055 newMap!16))) (_2!1064 (tuple2!2109 lt!28787 (minValue!2055 newMap!16)))))))

(assert (=> d!14425 (= lt!29492 (insertStrictlySorted!50 (toList!723 lt!28782) (_1!1064 (tuple2!2109 lt!28787 (minValue!2055 newMap!16))) (_2!1064 (tuple2!2109 lt!28787 (minValue!2055 newMap!16)))))))

(assert (=> d!14425 (= (+!87 lt!28782 (tuple2!2109 lt!28787 (minValue!2055 newMap!16))) lt!29490)))

(declare-fun b!67821 () Bool)

(declare-fun res!36587 () Bool)

(assert (=> b!67821 (=> (not res!36587) (not e!44454))))

(assert (=> b!67821 (= res!36587 (= (getValueByKey!129 (toList!723 lt!29490) (_1!1064 (tuple2!2109 lt!28787 (minValue!2055 newMap!16)))) (Some!134 (_2!1064 (tuple2!2109 lt!28787 (minValue!2055 newMap!16))))))))

(declare-fun b!67822 () Bool)

(assert (=> b!67822 (= e!44454 (contains!718 (toList!723 lt!29490) (tuple2!2109 lt!28787 (minValue!2055 newMap!16))))))

(assert (= (and d!14425 res!36588) b!67821))

(assert (= (and b!67821 res!36587) b!67822))

(declare-fun m!63175 () Bool)

(assert (=> d!14425 m!63175))

(declare-fun m!63177 () Bool)

(assert (=> d!14425 m!63177))

(declare-fun m!63179 () Bool)

(assert (=> d!14425 m!63179))

(declare-fun m!63181 () Bool)

(assert (=> d!14425 m!63181))

(declare-fun m!63183 () Bool)

(assert (=> b!67821 m!63183))

(declare-fun m!63185 () Bool)

(assert (=> b!67822 m!63185))

(assert (=> b!66748 d!14425))

(declare-fun d!14427 () Bool)

(assert (=> d!14427 (= (apply!72 (+!87 lt!28797 (tuple2!2109 lt!28788 (minValue!2055 newMap!16))) lt!28784) (get!1130 (getValueByKey!129 (toList!723 (+!87 lt!28797 (tuple2!2109 lt!28788 (minValue!2055 newMap!16)))) lt!28784)))))

(declare-fun bs!2912 () Bool)

(assert (= bs!2912 d!14427))

(declare-fun m!63187 () Bool)

(assert (=> bs!2912 m!63187))

(assert (=> bs!2912 m!63187))

(declare-fun m!63189 () Bool)

(assert (=> bs!2912 m!63189))

(assert (=> b!66748 d!14427))

(declare-fun d!14429 () Bool)

(assert (=> d!14429 (= (apply!72 lt!28964 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1130 (getValueByKey!129 (toList!723 lt!28964) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2913 () Bool)

(assert (= bs!2913 d!14429))

(declare-fun m!63191 () Bool)

(assert (=> bs!2913 m!63191))

(assert (=> bs!2913 m!63191))

(declare-fun m!63193 () Bool)

(assert (=> bs!2913 m!63193))

(assert (=> b!67012 d!14429))

(declare-fun d!14431 () Bool)

(declare-fun c!9514 () Bool)

(assert (=> d!14431 (= c!9514 ((_ is Nil!1487) (toList!723 lt!28644)))))

(declare-fun e!44455 () (InoxSet tuple2!2108))

(assert (=> d!14431 (= (content!70 (toList!723 lt!28644)) e!44455)))

(declare-fun b!67823 () Bool)

(assert (=> b!67823 (= e!44455 ((as const (Array tuple2!2108 Bool)) false))))

(declare-fun b!67824 () Bool)

(assert (=> b!67824 (= e!44455 ((_ map or) (store ((as const (Array tuple2!2108 Bool)) false) (h!2070 (toList!723 lt!28644)) true) (content!70 (t!4976 (toList!723 lt!28644)))))))

(assert (= (and d!14431 c!9514) b!67823))

(assert (= (and d!14431 (not c!9514)) b!67824))

(declare-fun m!63195 () Bool)

(assert (=> b!67824 m!63195))

(declare-fun m!63197 () Bool)

(assert (=> b!67824 m!63197))

(assert (=> d!13891 d!14431))

(declare-fun b!67826 () Bool)

(declare-fun e!44456 () Option!135)

(declare-fun e!44457 () Option!135)

(assert (=> b!67826 (= e!44456 e!44457)))

(declare-fun c!9516 () Bool)

(assert (=> b!67826 (= c!9516 (and ((_ is Cons!1486) (toList!723 lt!29120)) (not (= (_1!1064 (h!2070 (toList!723 lt!29120))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))))

(declare-fun d!14433 () Bool)

(declare-fun c!9515 () Bool)

(assert (=> d!14433 (= c!9515 (and ((_ is Cons!1486) (toList!723 lt!29120)) (= (_1!1064 (h!2070 (toList!723 lt!29120))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (=> d!14433 (= (getValueByKey!129 (toList!723 lt!29120) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) e!44456)))

(declare-fun b!67827 () Bool)

(assert (=> b!67827 (= e!44457 (getValueByKey!129 (t!4976 (toList!723 lt!29120)) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!67825 () Bool)

(assert (=> b!67825 (= e!44456 (Some!134 (_2!1064 (h!2070 (toList!723 lt!29120)))))))

(declare-fun b!67828 () Bool)

(assert (=> b!67828 (= e!44457 None!133)))

(assert (= (and d!14433 c!9515) b!67825))

(assert (= (and d!14433 (not c!9515)) b!67826))

(assert (= (and b!67826 c!9516) b!67827))

(assert (= (and b!67826 (not c!9516)) b!67828))

(declare-fun m!63199 () Bool)

(assert (=> b!67827 m!63199))

(assert (=> b!67162 d!14433))

(declare-fun d!14435 () Bool)

(assert (=> d!14435 (= (apply!72 lt!28964 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1130 (getValueByKey!129 (toList!723 lt!28964) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2914 () Bool)

(assert (= bs!2914 d!14435))

(assert (=> bs!2914 m!62153))

(assert (=> bs!2914 m!62153))

(declare-fun m!63201 () Bool)

(assert (=> bs!2914 m!63201))

(assert (=> b!67006 d!14435))

(declare-fun d!14437 () Bool)

(assert (=> d!14437 (= (isDefined!83 (getValueByKey!129 (toList!723 lt!28634) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!314 (getValueByKey!129 (toList!723 lt!28634) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!2915 () Bool)

(assert (= bs!2915 d!14437))

(assert (=> bs!2915 m!61685))

(declare-fun m!63203 () Bool)

(assert (=> bs!2915 m!63203))

(assert (=> b!67130 d!14437))

(declare-fun b!67830 () Bool)

(declare-fun e!44458 () Option!135)

(declare-fun e!44459 () Option!135)

(assert (=> b!67830 (= e!44458 e!44459)))

(declare-fun c!9518 () Bool)

(assert (=> b!67830 (= c!9518 (and ((_ is Cons!1486) (toList!723 lt!28634)) (not (= (_1!1064 (h!2070 (toList!723 lt!28634))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun d!14439 () Bool)

(declare-fun c!9517 () Bool)

(assert (=> d!14439 (= c!9517 (and ((_ is Cons!1486) (toList!723 lt!28634)) (= (_1!1064 (h!2070 (toList!723 lt!28634))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14439 (= (getValueByKey!129 (toList!723 lt!28634) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!44458)))

(declare-fun b!67831 () Bool)

(assert (=> b!67831 (= e!44459 (getValueByKey!129 (t!4976 (toList!723 lt!28634)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!67829 () Bool)

(assert (=> b!67829 (= e!44458 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28634)))))))

(declare-fun b!67832 () Bool)

(assert (=> b!67832 (= e!44459 None!133)))

(assert (= (and d!14439 c!9517) b!67829))

(assert (= (and d!14439 (not c!9517)) b!67830))

(assert (= (and b!67830 c!9518) b!67831))

(assert (= (and b!67830 (not c!9518)) b!67832))

(assert (=> b!67831 m!60843))

(declare-fun m!63205 () Bool)

(assert (=> b!67831 m!63205))

(assert (=> b!67130 d!14439))

(assert (=> d!13743 d!13733))

(declare-fun d!14441 () Bool)

(declare-fun res!36589 () Bool)

(declare-fun e!44460 () Bool)

(assert (=> d!14441 (=> res!36589 e!44460)))

(assert (=> d!14441 (= res!36589 (and ((_ is Cons!1486) (toList!723 call!5557)) (= (_1!1064 (h!2070 (toList!723 call!5557))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))))

(assert (=> d!14441 (= (containsKey!133 (toList!723 call!5557) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) e!44460)))

(declare-fun b!67833 () Bool)

(declare-fun e!44461 () Bool)

(assert (=> b!67833 (= e!44460 e!44461)))

(declare-fun res!36590 () Bool)

(assert (=> b!67833 (=> (not res!36590) (not e!44461))))

(assert (=> b!67833 (= res!36590 (and (or (not ((_ is Cons!1486) (toList!723 call!5557))) (bvsle (_1!1064 (h!2070 (toList!723 call!5557))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))) ((_ is Cons!1486) (toList!723 call!5557)) (bvslt (_1!1064 (h!2070 (toList!723 call!5557))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))))

(declare-fun b!67834 () Bool)

(assert (=> b!67834 (= e!44461 (containsKey!133 (t!4976 (toList!723 call!5557)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (= (and d!14441 (not res!36589)) b!67833))

(assert (= (and b!67833 res!36590) b!67834))

(assert (=> b!67834 m!60719))

(declare-fun m!63207 () Bool)

(assert (=> b!67834 m!63207))

(assert (=> d!13907 d!14441))

(declare-fun d!14443 () Bool)

(declare-fun res!36591 () Bool)

(declare-fun e!44462 () Bool)

(assert (=> d!14443 (=> res!36591 e!44462)))

(assert (=> d!14443 (= res!36591 (and ((_ is Cons!1486) lt!28658) (= (_1!1064 (h!2070 lt!28658)) (_1!1064 lt!28503))))))

(assert (=> d!14443 (= (containsKey!133 lt!28658 (_1!1064 lt!28503)) e!44462)))

(declare-fun b!67835 () Bool)

(declare-fun e!44463 () Bool)

(assert (=> b!67835 (= e!44462 e!44463)))

(declare-fun res!36592 () Bool)

(assert (=> b!67835 (=> (not res!36592) (not e!44463))))

(assert (=> b!67835 (= res!36592 (and (or (not ((_ is Cons!1486) lt!28658)) (bvsle (_1!1064 (h!2070 lt!28658)) (_1!1064 lt!28503))) ((_ is Cons!1486) lt!28658) (bvslt (_1!1064 (h!2070 lt!28658)) (_1!1064 lt!28503))))))

(declare-fun b!67836 () Bool)

(assert (=> b!67836 (= e!44463 (containsKey!133 (t!4976 lt!28658) (_1!1064 lt!28503)))))

(assert (= (and d!14443 (not res!36591)) b!67835))

(assert (= (and b!67835 res!36592) b!67836))

(declare-fun m!63209 () Bool)

(assert (=> b!67836 m!63209))

(assert (=> b!67023 d!14443))

(declare-fun d!14445 () Bool)

(declare-fun e!44465 () Bool)

(assert (=> d!14445 e!44465))

(declare-fun res!36593 () Bool)

(assert (=> d!14445 (=> res!36593 e!44465)))

(declare-fun lt!29496 () Bool)

(assert (=> d!14445 (= res!36593 (not lt!29496))))

(declare-fun lt!29493 () Bool)

(assert (=> d!14445 (= lt!29496 lt!29493)))

(declare-fun lt!29494 () Unit!1836)

(declare-fun e!44464 () Unit!1836)

(assert (=> d!14445 (= lt!29494 e!44464)))

(declare-fun c!9519 () Bool)

(assert (=> d!14445 (= c!9519 lt!29493)))

(assert (=> d!14445 (= lt!29493 (containsKey!133 (toList!723 lt!28844) (_1!1064 (tuple2!2109 lt!28628 lt!28633))))))

(assert (=> d!14445 (= (contains!716 lt!28844 (_1!1064 (tuple2!2109 lt!28628 lt!28633))) lt!29496)))

(declare-fun b!67837 () Bool)

(declare-fun lt!29495 () Unit!1836)

(assert (=> b!67837 (= e!44464 lt!29495)))

(assert (=> b!67837 (= lt!29495 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28844) (_1!1064 (tuple2!2109 lt!28628 lt!28633))))))

(assert (=> b!67837 (isDefined!83 (getValueByKey!129 (toList!723 lt!28844) (_1!1064 (tuple2!2109 lt!28628 lt!28633))))))

(declare-fun b!67838 () Bool)

(declare-fun Unit!1894 () Unit!1836)

(assert (=> b!67838 (= e!44464 Unit!1894)))

(declare-fun b!67839 () Bool)

(assert (=> b!67839 (= e!44465 (isDefined!83 (getValueByKey!129 (toList!723 lt!28844) (_1!1064 (tuple2!2109 lt!28628 lt!28633)))))))

(assert (= (and d!14445 c!9519) b!67837))

(assert (= (and d!14445 (not c!9519)) b!67838))

(assert (= (and d!14445 (not res!36593)) b!67839))

(declare-fun m!63211 () Bool)

(assert (=> d!14445 m!63211))

(declare-fun m!63213 () Bool)

(assert (=> b!67837 m!63213))

(assert (=> b!67837 m!61299))

(assert (=> b!67837 m!61299))

(declare-fun m!63215 () Bool)

(assert (=> b!67837 m!63215))

(assert (=> b!67839 m!61299))

(assert (=> b!67839 m!61299))

(assert (=> b!67839 m!63215))

(assert (=> d!13801 d!14445))

(declare-fun b!67841 () Bool)

(declare-fun e!44466 () Option!135)

(declare-fun e!44467 () Option!135)

(assert (=> b!67841 (= e!44466 e!44467)))

(declare-fun c!9521 () Bool)

(assert (=> b!67841 (= c!9521 (and ((_ is Cons!1486) lt!28846) (not (= (_1!1064 (h!2070 lt!28846)) (_1!1064 (tuple2!2109 lt!28628 lt!28633))))))))

(declare-fun d!14447 () Bool)

(declare-fun c!9520 () Bool)

(assert (=> d!14447 (= c!9520 (and ((_ is Cons!1486) lt!28846) (= (_1!1064 (h!2070 lt!28846)) (_1!1064 (tuple2!2109 lt!28628 lt!28633)))))))

(assert (=> d!14447 (= (getValueByKey!129 lt!28846 (_1!1064 (tuple2!2109 lt!28628 lt!28633))) e!44466)))

(declare-fun b!67842 () Bool)

(assert (=> b!67842 (= e!44467 (getValueByKey!129 (t!4976 lt!28846) (_1!1064 (tuple2!2109 lt!28628 lt!28633))))))

(declare-fun b!67840 () Bool)

(assert (=> b!67840 (= e!44466 (Some!134 (_2!1064 (h!2070 lt!28846))))))

(declare-fun b!67843 () Bool)

(assert (=> b!67843 (= e!44467 None!133)))

(assert (= (and d!14447 c!9520) b!67840))

(assert (= (and d!14447 (not c!9520)) b!67841))

(assert (= (and b!67841 c!9521) b!67842))

(assert (= (and b!67841 (not c!9521)) b!67843))

(declare-fun m!63217 () Bool)

(assert (=> b!67842 m!63217))

(assert (=> d!13801 d!14447))

(declare-fun d!14449 () Bool)

(assert (=> d!14449 (= (getValueByKey!129 lt!28846 (_1!1064 (tuple2!2109 lt!28628 lt!28633))) (Some!134 (_2!1064 (tuple2!2109 lt!28628 lt!28633))))))

(declare-fun lt!29497 () Unit!1836)

(assert (=> d!14449 (= lt!29497 (choose!376 lt!28846 (_1!1064 (tuple2!2109 lt!28628 lt!28633)) (_2!1064 (tuple2!2109 lt!28628 lt!28633))))))

(declare-fun e!44468 () Bool)

(assert (=> d!14449 e!44468))

(declare-fun res!36594 () Bool)

(assert (=> d!14449 (=> (not res!36594) (not e!44468))))

(assert (=> d!14449 (= res!36594 (isStrictlySorted!284 lt!28846))))

(assert (=> d!14449 (= (lemmaContainsTupThenGetReturnValue!48 lt!28846 (_1!1064 (tuple2!2109 lt!28628 lt!28633)) (_2!1064 (tuple2!2109 lt!28628 lt!28633))) lt!29497)))

(declare-fun b!67844 () Bool)

(declare-fun res!36595 () Bool)

(assert (=> b!67844 (=> (not res!36595) (not e!44468))))

(assert (=> b!67844 (= res!36595 (containsKey!133 lt!28846 (_1!1064 (tuple2!2109 lt!28628 lt!28633))))))

(declare-fun b!67845 () Bool)

(assert (=> b!67845 (= e!44468 (contains!718 lt!28846 (tuple2!2109 (_1!1064 (tuple2!2109 lt!28628 lt!28633)) (_2!1064 (tuple2!2109 lt!28628 lt!28633)))))))

(assert (= (and d!14449 res!36594) b!67844))

(assert (= (and b!67844 res!36595) b!67845))

(assert (=> d!14449 m!61293))

(declare-fun m!63219 () Bool)

(assert (=> d!14449 m!63219))

(declare-fun m!63221 () Bool)

(assert (=> d!14449 m!63221))

(declare-fun m!63223 () Bool)

(assert (=> b!67844 m!63223))

(declare-fun m!63225 () Bool)

(assert (=> b!67845 m!63225))

(assert (=> d!13801 d!14449))

(declare-fun b!67846 () Bool)

(declare-fun e!44470 () List!1490)

(declare-fun call!5690 () List!1490)

(assert (=> b!67846 (= e!44470 call!5690)))

(declare-fun b!67847 () Bool)

(declare-fun e!44469 () List!1490)

(declare-fun call!5689 () List!1490)

(assert (=> b!67847 (= e!44469 call!5689)))

(declare-fun bm!5686 () Bool)

(declare-fun call!5691 () List!1490)

(assert (=> bm!5686 (= call!5689 call!5691)))

(declare-fun bm!5687 () Bool)

(declare-fun c!9523 () Bool)

(declare-fun e!44473 () List!1490)

(assert (=> bm!5687 (= call!5690 ($colon$colon!62 e!44473 (ite c!9523 (h!2070 (toList!723 lt!28629)) (tuple2!2109 (_1!1064 (tuple2!2109 lt!28628 lt!28633)) (_2!1064 (tuple2!2109 lt!28628 lt!28633))))))))

(declare-fun c!9525 () Bool)

(assert (=> bm!5687 (= c!9525 c!9523)))

(declare-fun d!14451 () Bool)

(declare-fun e!44471 () Bool)

(assert (=> d!14451 e!44471))

(declare-fun res!36597 () Bool)

(assert (=> d!14451 (=> (not res!36597) (not e!44471))))

(declare-fun lt!29498 () List!1490)

(assert (=> d!14451 (= res!36597 (isStrictlySorted!284 lt!29498))))

(assert (=> d!14451 (= lt!29498 e!44470)))

(assert (=> d!14451 (= c!9523 (and ((_ is Cons!1486) (toList!723 lt!28629)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28629))) (_1!1064 (tuple2!2109 lt!28628 lt!28633)))))))

(assert (=> d!14451 (isStrictlySorted!284 (toList!723 lt!28629))))

(assert (=> d!14451 (= (insertStrictlySorted!50 (toList!723 lt!28629) (_1!1064 (tuple2!2109 lt!28628 lt!28633)) (_2!1064 (tuple2!2109 lt!28628 lt!28633))) lt!29498)))

(declare-fun bm!5688 () Bool)

(assert (=> bm!5688 (= call!5691 call!5690)))

(declare-fun b!67848 () Bool)

(assert (=> b!67848 (= e!44473 (insertStrictlySorted!50 (t!4976 (toList!723 lt!28629)) (_1!1064 (tuple2!2109 lt!28628 lt!28633)) (_2!1064 (tuple2!2109 lt!28628 lt!28633))))))

(declare-fun c!9524 () Bool)

(declare-fun b!67849 () Bool)

(assert (=> b!67849 (= c!9524 (and ((_ is Cons!1486) (toList!723 lt!28629)) (bvsgt (_1!1064 (h!2070 (toList!723 lt!28629))) (_1!1064 (tuple2!2109 lt!28628 lt!28633)))))))

(declare-fun e!44472 () List!1490)

(assert (=> b!67849 (= e!44472 e!44469)))

(declare-fun b!67850 () Bool)

(assert (=> b!67850 (= e!44472 call!5691)))

(declare-fun b!67851 () Bool)

(declare-fun res!36596 () Bool)

(assert (=> b!67851 (=> (not res!36596) (not e!44471))))

(assert (=> b!67851 (= res!36596 (containsKey!133 lt!29498 (_1!1064 (tuple2!2109 lt!28628 lt!28633))))))

(declare-fun b!67852 () Bool)

(assert (=> b!67852 (= e!44469 call!5689)))

(declare-fun c!9522 () Bool)

(declare-fun b!67853 () Bool)

(assert (=> b!67853 (= e!44473 (ite c!9522 (t!4976 (toList!723 lt!28629)) (ite c!9524 (Cons!1486 (h!2070 (toList!723 lt!28629)) (t!4976 (toList!723 lt!28629))) Nil!1487)))))

(declare-fun b!67854 () Bool)

(assert (=> b!67854 (= e!44471 (contains!718 lt!29498 (tuple2!2109 (_1!1064 (tuple2!2109 lt!28628 lt!28633)) (_2!1064 (tuple2!2109 lt!28628 lt!28633)))))))

(declare-fun b!67855 () Bool)

(assert (=> b!67855 (= e!44470 e!44472)))

(assert (=> b!67855 (= c!9522 (and ((_ is Cons!1486) (toList!723 lt!28629)) (= (_1!1064 (h!2070 (toList!723 lt!28629))) (_1!1064 (tuple2!2109 lt!28628 lt!28633)))))))

(assert (= (and d!14451 c!9523) b!67846))

(assert (= (and d!14451 (not c!9523)) b!67855))

(assert (= (and b!67855 c!9522) b!67850))

(assert (= (and b!67855 (not c!9522)) b!67849))

(assert (= (and b!67849 c!9524) b!67852))

(assert (= (and b!67849 (not c!9524)) b!67847))

(assert (= (or b!67852 b!67847) bm!5686))

(assert (= (or b!67850 bm!5686) bm!5688))

(assert (= (or b!67846 bm!5688) bm!5687))

(assert (= (and bm!5687 c!9525) b!67848))

(assert (= (and bm!5687 (not c!9525)) b!67853))

(assert (= (and d!14451 res!36597) b!67851))

(assert (= (and b!67851 res!36596) b!67854))

(declare-fun m!63227 () Bool)

(assert (=> bm!5687 m!63227))

(declare-fun m!63229 () Bool)

(assert (=> d!14451 m!63229))

(declare-fun m!63231 () Bool)

(assert (=> d!14451 m!63231))

(declare-fun m!63233 () Bool)

(assert (=> b!67851 m!63233))

(declare-fun m!63235 () Bool)

(assert (=> b!67848 m!63235))

(declare-fun m!63237 () Bool)

(assert (=> b!67854 m!63237))

(assert (=> d!13801 d!14451))

(declare-fun d!14453 () Bool)

(declare-fun e!44475 () Bool)

(assert (=> d!14453 e!44475))

(declare-fun res!36598 () Bool)

(assert (=> d!14453 (=> res!36598 e!44475)))

(declare-fun lt!29502 () Bool)

(assert (=> d!14453 (= res!36598 (not lt!29502))))

(declare-fun lt!29499 () Bool)

(assert (=> d!14453 (= lt!29502 lt!29499)))

(declare-fun lt!29500 () Unit!1836)

(declare-fun e!44474 () Unit!1836)

(assert (=> d!14453 (= lt!29500 e!44474)))

(declare-fun c!9526 () Bool)

(assert (=> d!14453 (= c!9526 lt!29499)))

(assert (=> d!14453 (= lt!29499 (containsKey!133 (toList!723 lt!28798) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!14453 (= (contains!716 lt!28798 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) lt!29502)))

(declare-fun b!67856 () Bool)

(declare-fun lt!29501 () Unit!1836)

(assert (=> b!67856 (= e!44474 lt!29501)))

(assert (=> b!67856 (= lt!29501 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28798) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67856 (isDefined!83 (getValueByKey!129 (toList!723 lt!28798) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67857 () Bool)

(declare-fun Unit!1895 () Unit!1836)

(assert (=> b!67857 (= e!44474 Unit!1895)))

(declare-fun b!67858 () Bool)

(assert (=> b!67858 (= e!44475 (isDefined!83 (getValueByKey!129 (toList!723 lt!28798) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!14453 c!9526) b!67856))

(assert (= (and d!14453 (not c!9526)) b!67857))

(assert (= (and d!14453 (not res!36598)) b!67858))

(assert (=> d!14453 m!61079))

(declare-fun m!63239 () Bool)

(assert (=> d!14453 m!63239))

(assert (=> b!67856 m!61079))

(declare-fun m!63241 () Bool)

(assert (=> b!67856 m!63241))

(assert (=> b!67856 m!61079))

(assert (=> b!67856 m!62769))

(assert (=> b!67856 m!62769))

(declare-fun m!63243 () Bool)

(assert (=> b!67856 m!63243))

(assert (=> b!67858 m!61079))

(assert (=> b!67858 m!62769))

(assert (=> b!67858 m!62769))

(assert (=> b!67858 m!63243))

(assert (=> b!66760 d!14453))

(declare-fun b!67859 () Bool)

(declare-fun e!44477 () List!1490)

(declare-fun call!5693 () List!1490)

(assert (=> b!67859 (= e!44477 call!5693)))

(declare-fun b!67860 () Bool)

(declare-fun e!44476 () List!1490)

(declare-fun call!5692 () List!1490)

(assert (=> b!67860 (= e!44476 call!5692)))

(declare-fun bm!5689 () Bool)

(declare-fun call!5694 () List!1490)

(assert (=> bm!5689 (= call!5692 call!5694)))

(declare-fun e!44480 () List!1490)

(declare-fun bm!5690 () Bool)

(declare-fun c!9528 () Bool)

(assert (=> bm!5690 (= call!5693 ($colon$colon!62 e!44480 (ite c!9528 (h!2070 (t!4976 (toList!723 lt!28505))) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500)))))))

(declare-fun c!9530 () Bool)

(assert (=> bm!5690 (= c!9530 c!9528)))

(declare-fun d!14455 () Bool)

(declare-fun e!44478 () Bool)

(assert (=> d!14455 e!44478))

(declare-fun res!36600 () Bool)

(assert (=> d!14455 (=> (not res!36600) (not e!44478))))

(declare-fun lt!29503 () List!1490)

(assert (=> d!14455 (= res!36600 (isStrictlySorted!284 lt!29503))))

(assert (=> d!14455 (= lt!29503 e!44477)))

(assert (=> d!14455 (= c!9528 (and ((_ is Cons!1486) (t!4976 (toList!723 lt!28505))) (bvslt (_1!1064 (h!2070 (t!4976 (toList!723 lt!28505)))) (_1!1064 lt!28500))))))

(assert (=> d!14455 (isStrictlySorted!284 (t!4976 (toList!723 lt!28505)))))

(assert (=> d!14455 (= (insertStrictlySorted!50 (t!4976 (toList!723 lt!28505)) (_1!1064 lt!28500) (_2!1064 lt!28500)) lt!29503)))

(declare-fun bm!5691 () Bool)

(assert (=> bm!5691 (= call!5694 call!5693)))

(declare-fun b!67861 () Bool)

(assert (=> b!67861 (= e!44480 (insertStrictlySorted!50 (t!4976 (t!4976 (toList!723 lt!28505))) (_1!1064 lt!28500) (_2!1064 lt!28500)))))

(declare-fun b!67862 () Bool)

(declare-fun c!9529 () Bool)

(assert (=> b!67862 (= c!9529 (and ((_ is Cons!1486) (t!4976 (toList!723 lt!28505))) (bvsgt (_1!1064 (h!2070 (t!4976 (toList!723 lt!28505)))) (_1!1064 lt!28500))))))

(declare-fun e!44479 () List!1490)

(assert (=> b!67862 (= e!44479 e!44476)))

(declare-fun b!67863 () Bool)

(assert (=> b!67863 (= e!44479 call!5694)))

(declare-fun b!67864 () Bool)

(declare-fun res!36599 () Bool)

(assert (=> b!67864 (=> (not res!36599) (not e!44478))))

(assert (=> b!67864 (= res!36599 (containsKey!133 lt!29503 (_1!1064 lt!28500)))))

(declare-fun b!67865 () Bool)

(assert (=> b!67865 (= e!44476 call!5692)))

(declare-fun b!67866 () Bool)

(declare-fun c!9527 () Bool)

(assert (=> b!67866 (= e!44480 (ite c!9527 (t!4976 (t!4976 (toList!723 lt!28505))) (ite c!9529 (Cons!1486 (h!2070 (t!4976 (toList!723 lt!28505))) (t!4976 (t!4976 (toList!723 lt!28505)))) Nil!1487)))))

(declare-fun b!67867 () Bool)

(assert (=> b!67867 (= e!44478 (contains!718 lt!29503 (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))))))

(declare-fun b!67868 () Bool)

(assert (=> b!67868 (= e!44477 e!44479)))

(assert (=> b!67868 (= c!9527 (and ((_ is Cons!1486) (t!4976 (toList!723 lt!28505))) (= (_1!1064 (h!2070 (t!4976 (toList!723 lt!28505)))) (_1!1064 lt!28500))))))

(assert (= (and d!14455 c!9528) b!67859))

(assert (= (and d!14455 (not c!9528)) b!67868))

(assert (= (and b!67868 c!9527) b!67863))

(assert (= (and b!67868 (not c!9527)) b!67862))

(assert (= (and b!67862 c!9529) b!67865))

(assert (= (and b!67862 (not c!9529)) b!67860))

(assert (= (or b!67865 b!67860) bm!5689))

(assert (= (or b!67863 bm!5689) bm!5691))

(assert (= (or b!67859 bm!5691) bm!5690))

(assert (= (and bm!5690 c!9530) b!67861))

(assert (= (and bm!5690 (not c!9530)) b!67866))

(assert (= (and d!14455 res!36600) b!67864))

(assert (= (and b!67864 res!36599) b!67867))

(declare-fun m!63245 () Bool)

(assert (=> bm!5690 m!63245))

(declare-fun m!63247 () Bool)

(assert (=> d!14455 m!63247))

(assert (=> d!14455 m!62069))

(declare-fun m!63249 () Bool)

(assert (=> b!67864 m!63249))

(declare-fun m!63251 () Bool)

(assert (=> b!67861 m!63251))

(declare-fun m!63253 () Bool)

(assert (=> b!67867 m!63253))

(assert (=> b!66900 d!14455))

(declare-fun b!67870 () Bool)

(declare-fun e!44481 () Option!135)

(declare-fun e!44482 () Option!135)

(assert (=> b!67870 (= e!44481 e!44482)))

(declare-fun c!9532 () Bool)

(assert (=> b!67870 (= c!9532 (and ((_ is Cons!1486) (t!4976 lt!28646)) (not (= (_1!1064 (h!2070 (t!4976 lt!28646))) (_1!1064 lt!28500)))))))

(declare-fun d!14457 () Bool)

(declare-fun c!9531 () Bool)

(assert (=> d!14457 (= c!9531 (and ((_ is Cons!1486) (t!4976 lt!28646)) (= (_1!1064 (h!2070 (t!4976 lt!28646))) (_1!1064 lt!28500))))))

(assert (=> d!14457 (= (getValueByKey!129 (t!4976 lt!28646) (_1!1064 lt!28500)) e!44481)))

(declare-fun b!67871 () Bool)

(assert (=> b!67871 (= e!44482 (getValueByKey!129 (t!4976 (t!4976 lt!28646)) (_1!1064 lt!28500)))))

(declare-fun b!67869 () Bool)

(assert (=> b!67869 (= e!44481 (Some!134 (_2!1064 (h!2070 (t!4976 lt!28646)))))))

(declare-fun b!67872 () Bool)

(assert (=> b!67872 (= e!44482 None!133)))

(assert (= (and d!14457 c!9531) b!67869))

(assert (= (and d!14457 (not c!9531)) b!67870))

(assert (= (and b!67870 c!9532) b!67871))

(assert (= (and b!67870 (not c!9532)) b!67872))

(declare-fun m!63255 () Bool)

(assert (=> b!67871 m!63255))

(assert (=> b!66894 d!14457))

(declare-fun d!14459 () Bool)

(assert (=> d!14459 (= (apply!72 (+!87 lt!28608 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28605) (apply!72 lt!28608 lt!28605))))

(assert (=> d!14459 true))

(declare-fun _$34!784 () Unit!1836)

(assert (=> d!14459 (= (choose!379 lt!28608 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))) lt!28605) _$34!784)))

(declare-fun bs!2916 () Bool)

(assert (= bs!2916 d!14459))

(assert (=> bs!2916 m!60859))

(assert (=> bs!2916 m!60859))

(assert (=> bs!2916 m!60861))

(assert (=> bs!2916 m!60885))

(assert (=> d!13849 d!14459))

(assert (=> d!13849 d!13831))

(assert (=> d!13849 d!13833))

(declare-fun d!14461 () Bool)

(declare-fun e!44484 () Bool)

(assert (=> d!14461 e!44484))

(declare-fun res!36601 () Bool)

(assert (=> d!14461 (=> res!36601 e!44484)))

(declare-fun lt!29507 () Bool)

(assert (=> d!14461 (= res!36601 (not lt!29507))))

(declare-fun lt!29504 () Bool)

(assert (=> d!14461 (= lt!29507 lt!29504)))

(declare-fun lt!29505 () Unit!1836)

(declare-fun e!44483 () Unit!1836)

(assert (=> d!14461 (= lt!29505 e!44483)))

(declare-fun c!9533 () Bool)

(assert (=> d!14461 (= c!9533 lt!29504)))

(assert (=> d!14461 (= lt!29504 (containsKey!133 (toList!723 lt!28608) lt!28605))))

(assert (=> d!14461 (= (contains!716 lt!28608 lt!28605) lt!29507)))

(declare-fun b!67873 () Bool)

(declare-fun lt!29506 () Unit!1836)

(assert (=> b!67873 (= e!44483 lt!29506)))

(assert (=> b!67873 (= lt!29506 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28608) lt!28605))))

(assert (=> b!67873 (isDefined!83 (getValueByKey!129 (toList!723 lt!28608) lt!28605))))

(declare-fun b!67874 () Bool)

(declare-fun Unit!1896 () Unit!1836)

(assert (=> b!67874 (= e!44483 Unit!1896)))

(declare-fun b!67875 () Bool)

(assert (=> b!67875 (= e!44484 (isDefined!83 (getValueByKey!129 (toList!723 lt!28608) lt!28605)))))

(assert (= (and d!14461 c!9533) b!67873))

(assert (= (and d!14461 (not c!9533)) b!67874))

(assert (= (and d!14461 (not res!36601)) b!67875))

(declare-fun m!63257 () Bool)

(assert (=> d!14461 m!63257))

(declare-fun m!63259 () Bool)

(assert (=> b!67873 m!63259))

(assert (=> b!67873 m!61387))

(assert (=> b!67873 m!61387))

(declare-fun m!63261 () Bool)

(assert (=> b!67873 m!63261))

(assert (=> b!67875 m!61387))

(assert (=> b!67875 m!61387))

(assert (=> b!67875 m!63261))

(assert (=> d!13849 d!14461))

(assert (=> d!13849 d!13841))

(assert (=> b!66712 d!14035))

(declare-fun d!14463 () Bool)

(declare-fun e!44486 () Bool)

(assert (=> d!14463 e!44486))

(declare-fun res!36602 () Bool)

(assert (=> d!14463 (=> res!36602 e!44486)))

(declare-fun lt!29511 () Bool)

(assert (=> d!14463 (= res!36602 (not lt!29511))))

(declare-fun lt!29508 () Bool)

(assert (=> d!14463 (= lt!29511 lt!29508)))

(declare-fun lt!29509 () Unit!1836)

(declare-fun e!44485 () Unit!1836)

(assert (=> d!14463 (= lt!29509 e!44485)))

(declare-fun c!9534 () Bool)

(assert (=> d!14463 (= c!9534 lt!29508)))

(assert (=> d!14463 (= lt!29508 (containsKey!133 (toList!723 lt!28942) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!14463 (= (contains!716 lt!28942 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) lt!29511)))

(declare-fun b!67876 () Bool)

(declare-fun lt!29510 () Unit!1836)

(assert (=> b!67876 (= e!44485 lt!29510)))

(assert (=> b!67876 (= lt!29510 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28942) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67876 (isDefined!83 (getValueByKey!129 (toList!723 lt!28942) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67877 () Bool)

(declare-fun Unit!1897 () Unit!1836)

(assert (=> b!67877 (= e!44485 Unit!1897)))

(declare-fun b!67878 () Bool)

(assert (=> b!67878 (= e!44486 (isDefined!83 (getValueByKey!129 (toList!723 lt!28942) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!14463 c!9534) b!67876))

(assert (= (and d!14463 (not c!9534)) b!67877))

(assert (= (and d!14463 (not res!36602)) b!67878))

(assert (=> d!14463 m!61079))

(declare-fun m!63263 () Bool)

(assert (=> d!14463 m!63263))

(assert (=> b!67876 m!61079))

(declare-fun m!63265 () Bool)

(assert (=> b!67876 m!63265))

(assert (=> b!67876 m!61079))

(assert (=> b!67876 m!62683))

(assert (=> b!67876 m!62683))

(declare-fun m!63267 () Bool)

(assert (=> b!67876 m!63267))

(assert (=> b!67878 m!61079))

(assert (=> b!67878 m!62683))

(assert (=> b!67878 m!62683))

(assert (=> b!67878 m!63267))

(assert (=> b!66993 d!14463))

(declare-fun d!14465 () Bool)

(declare-fun res!36603 () Bool)

(declare-fun e!44487 () Bool)

(assert (=> d!14465 (=> (not res!36603) (not e!44487))))

(assert (=> d!14465 (= res!36603 (simpleValid!47 (_2!1065 lt!29055)))))

(assert (=> d!14465 (= (valid!278 (_2!1065 lt!29055)) e!44487)))

(declare-fun b!67879 () Bool)

(declare-fun res!36604 () Bool)

(assert (=> b!67879 (=> (not res!36604) (not e!44487))))

(assert (=> b!67879 (= res!36604 (= (arrayCountValidKeys!0 (_keys!3787 (_2!1065 lt!29055)) #b00000000000000000000000000000000 (size!2069 (_keys!3787 (_2!1065 lt!29055)))) (_size!385 (_2!1065 lt!29055))))))

(declare-fun b!67880 () Bool)

(declare-fun res!36605 () Bool)

(assert (=> b!67880 (=> (not res!36605) (not e!44487))))

(assert (=> b!67880 (= res!36605 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3787 (_2!1065 lt!29055)) (mask!6082 (_2!1065 lt!29055))))))

(declare-fun b!67881 () Bool)

(assert (=> b!67881 (= e!44487 (arrayNoDuplicates!0 (_keys!3787 (_2!1065 lt!29055)) #b00000000000000000000000000000000 Nil!1488))))

(assert (= (and d!14465 res!36603) b!67879))

(assert (= (and b!67879 res!36604) b!67880))

(assert (= (and b!67880 res!36605) b!67881))

(declare-fun m!63269 () Bool)

(assert (=> d!14465 m!63269))

(declare-fun m!63271 () Bool)

(assert (=> b!67879 m!63271))

(declare-fun m!63273 () Bool)

(assert (=> b!67880 m!63273))

(declare-fun m!63275 () Bool)

(assert (=> b!67881 m!63275))

(assert (=> b!67118 d!14465))

(assert (=> bm!5618 d!13909))

(declare-fun b!67882 () Bool)

(declare-fun e!44489 () List!1490)

(declare-fun call!5696 () List!1490)

(assert (=> b!67882 (= e!44489 call!5696)))

(declare-fun b!67883 () Bool)

(declare-fun e!44488 () List!1490)

(declare-fun call!5695 () List!1490)

(assert (=> b!67883 (= e!44488 call!5695)))

(declare-fun bm!5692 () Bool)

(declare-fun call!5697 () List!1490)

(assert (=> bm!5692 (= call!5695 call!5697)))

(declare-fun e!44492 () List!1490)

(declare-fun c!9536 () Bool)

(declare-fun bm!5693 () Bool)

(assert (=> bm!5693 (= call!5696 ($colon$colon!62 e!44492 (ite c!9536 (h!2070 (t!4976 (toList!723 (+!87 lt!28505 lt!28503)))) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500)))))))

(declare-fun c!9538 () Bool)

(assert (=> bm!5693 (= c!9538 c!9536)))

(declare-fun d!14467 () Bool)

(declare-fun e!44490 () Bool)

(assert (=> d!14467 e!44490))

(declare-fun res!36607 () Bool)

(assert (=> d!14467 (=> (not res!36607) (not e!44490))))

(declare-fun lt!29512 () List!1490)

(assert (=> d!14467 (= res!36607 (isStrictlySorted!284 lt!29512))))

(assert (=> d!14467 (= lt!29512 e!44489)))

(assert (=> d!14467 (= c!9536 (and ((_ is Cons!1486) (t!4976 (toList!723 (+!87 lt!28505 lt!28503)))) (bvslt (_1!1064 (h!2070 (t!4976 (toList!723 (+!87 lt!28505 lt!28503))))) (_1!1064 lt!28500))))))

(assert (=> d!14467 (isStrictlySorted!284 (t!4976 (toList!723 (+!87 lt!28505 lt!28503))))))

(assert (=> d!14467 (= (insertStrictlySorted!50 (t!4976 (toList!723 (+!87 lt!28505 lt!28503))) (_1!1064 lt!28500) (_2!1064 lt!28500)) lt!29512)))

(declare-fun bm!5694 () Bool)

(assert (=> bm!5694 (= call!5697 call!5696)))

(declare-fun b!67884 () Bool)

(assert (=> b!67884 (= e!44492 (insertStrictlySorted!50 (t!4976 (t!4976 (toList!723 (+!87 lt!28505 lt!28503)))) (_1!1064 lt!28500) (_2!1064 lt!28500)))))

(declare-fun b!67885 () Bool)

(declare-fun c!9537 () Bool)

(assert (=> b!67885 (= c!9537 (and ((_ is Cons!1486) (t!4976 (toList!723 (+!87 lt!28505 lt!28503)))) (bvsgt (_1!1064 (h!2070 (t!4976 (toList!723 (+!87 lt!28505 lt!28503))))) (_1!1064 lt!28500))))))

(declare-fun e!44491 () List!1490)

(assert (=> b!67885 (= e!44491 e!44488)))

(declare-fun b!67886 () Bool)

(assert (=> b!67886 (= e!44491 call!5697)))

(declare-fun b!67887 () Bool)

(declare-fun res!36606 () Bool)

(assert (=> b!67887 (=> (not res!36606) (not e!44490))))

(assert (=> b!67887 (= res!36606 (containsKey!133 lt!29512 (_1!1064 lt!28500)))))

(declare-fun b!67888 () Bool)

(assert (=> b!67888 (= e!44488 call!5695)))

(declare-fun c!9535 () Bool)

(declare-fun b!67889 () Bool)

(assert (=> b!67889 (= e!44492 (ite c!9535 (t!4976 (t!4976 (toList!723 (+!87 lt!28505 lt!28503)))) (ite c!9537 (Cons!1486 (h!2070 (t!4976 (toList!723 (+!87 lt!28505 lt!28503)))) (t!4976 (t!4976 (toList!723 (+!87 lt!28505 lt!28503))))) Nil!1487)))))

(declare-fun b!67890 () Bool)

(assert (=> b!67890 (= e!44490 (contains!718 lt!29512 (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))))))

(declare-fun b!67891 () Bool)

(assert (=> b!67891 (= e!44489 e!44491)))

(assert (=> b!67891 (= c!9535 (and ((_ is Cons!1486) (t!4976 (toList!723 (+!87 lt!28505 lt!28503)))) (= (_1!1064 (h!2070 (t!4976 (toList!723 (+!87 lt!28505 lt!28503))))) (_1!1064 lt!28500))))))

(assert (= (and d!14467 c!9536) b!67882))

(assert (= (and d!14467 (not c!9536)) b!67891))

(assert (= (and b!67891 c!9535) b!67886))

(assert (= (and b!67891 (not c!9535)) b!67885))

(assert (= (and b!67885 c!9537) b!67888))

(assert (= (and b!67885 (not c!9537)) b!67883))

(assert (= (or b!67888 b!67883) bm!5692))

(assert (= (or b!67886 bm!5692) bm!5694))

(assert (= (or b!67882 bm!5694) bm!5693))

(assert (= (and bm!5693 c!9538) b!67884))

(assert (= (and bm!5693 (not c!9538)) b!67889))

(assert (= (and d!14467 res!36607) b!67887))

(assert (= (and b!67887 res!36606) b!67890))

(declare-fun m!63277 () Bool)

(assert (=> bm!5693 m!63277))

(declare-fun m!63279 () Bool)

(assert (=> d!14467 m!63279))

(assert (=> d!14467 m!62637))

(declare-fun m!63281 () Bool)

(assert (=> b!67887 m!63281))

(declare-fun m!63283 () Bool)

(assert (=> b!67884 m!63283))

(declare-fun m!63285 () Bool)

(assert (=> b!67890 m!63285))

(assert (=> b!66797 d!14467))

(declare-fun d!14469 () Bool)

(declare-fun lt!29513 () Bool)

(assert (=> d!14469 (= lt!29513 (select (content!70 (toList!723 lt!29083)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun e!44493 () Bool)

(assert (=> d!14469 (= lt!29513 e!44493)))

(declare-fun res!36609 () Bool)

(assert (=> d!14469 (=> (not res!36609) (not e!44493))))

(assert (=> d!14469 (= res!36609 ((_ is Cons!1486) (toList!723 lt!29083)))))

(assert (=> d!14469 (= (contains!718 (toList!723 lt!29083) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!29513)))

(declare-fun b!67892 () Bool)

(declare-fun e!44494 () Bool)

(assert (=> b!67892 (= e!44493 e!44494)))

(declare-fun res!36608 () Bool)

(assert (=> b!67892 (=> res!36608 e!44494)))

(assert (=> b!67892 (= res!36608 (= (h!2070 (toList!723 lt!29083)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!67893 () Bool)

(assert (=> b!67893 (= e!44494 (contains!718 (t!4976 (toList!723 lt!29083)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(assert (= (and d!14469 res!36609) b!67892))

(assert (= (and b!67892 (not res!36608)) b!67893))

(declare-fun m!63287 () Bool)

(assert (=> d!14469 m!63287))

(declare-fun m!63289 () Bool)

(assert (=> d!14469 m!63289))

(declare-fun m!63291 () Bool)

(assert (=> b!67893 m!63291))

(assert (=> b!67122 d!14469))

(declare-fun d!14471 () Bool)

(declare-fun lt!29514 () Bool)

(assert (=> d!14471 (= lt!29514 (select (content!71 Nil!1488) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!44496 () Bool)

(assert (=> d!14471 (= lt!29514 e!44496)))

(declare-fun res!36610 () Bool)

(assert (=> d!14471 (=> (not res!36610) (not e!44496))))

(assert (=> d!14471 (= res!36610 ((_ is Cons!1487) Nil!1488))))

(assert (=> d!14471 (= (contains!719 Nil!1488 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) lt!29514)))

(declare-fun b!67894 () Bool)

(declare-fun e!44495 () Bool)

(assert (=> b!67894 (= e!44496 e!44495)))

(declare-fun res!36611 () Bool)

(assert (=> b!67894 (=> res!36611 e!44495)))

(assert (=> b!67894 (= res!36611 (= (h!2071 Nil!1488) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67895 () Bool)

(assert (=> b!67895 (= e!44495 (contains!719 (t!4977 Nil!1488) (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!14471 res!36610) b!67894))

(assert (= (and b!67894 (not res!36611)) b!67895))

(assert (=> d!14471 m!61789))

(assert (=> d!14471 m!61079))

(declare-fun m!63293 () Bool)

(assert (=> d!14471 m!63293))

(assert (=> b!67895 m!61079))

(declare-fun m!63295 () Bool)

(assert (=> b!67895 m!63295))

(assert (=> b!66718 d!14471))

(declare-fun d!14473 () Bool)

(declare-fun e!44498 () Bool)

(assert (=> d!14473 e!44498))

(declare-fun res!36612 () Bool)

(assert (=> d!14473 (=> res!36612 e!44498)))

(declare-fun lt!29518 () Bool)

(assert (=> d!14473 (= res!36612 (not lt!29518))))

(declare-fun lt!29515 () Bool)

(assert (=> d!14473 (= lt!29518 lt!29515)))

(declare-fun lt!29516 () Unit!1836)

(declare-fun e!44497 () Unit!1836)

(assert (=> d!14473 (= lt!29516 e!44497)))

(declare-fun c!9539 () Bool)

(assert (=> d!14473 (= c!9539 lt!29515)))

(assert (=> d!14473 (= lt!29515 (containsKey!133 (toList!723 lt!28896) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!14473 (= (contains!716 lt!28896 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) lt!29518)))

(declare-fun b!67896 () Bool)

(declare-fun lt!29517 () Unit!1836)

(assert (=> b!67896 (= e!44497 lt!29517)))

(assert (=> b!67896 (= lt!29517 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28896) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> b!67896 (isDefined!83 (getValueByKey!129 (toList!723 lt!28896) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!67897 () Bool)

(declare-fun Unit!1898 () Unit!1836)

(assert (=> b!67897 (= e!44497 Unit!1898)))

(declare-fun b!67898 () Bool)

(assert (=> b!67898 (= e!44498 (isDefined!83 (getValueByKey!129 (toList!723 lt!28896) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (= (and d!14473 c!9539) b!67896))

(assert (= (and d!14473 (not c!9539)) b!67897))

(assert (= (and d!14473 (not res!36612)) b!67898))

(declare-fun m!63297 () Bool)

(assert (=> d!14473 m!63297))

(declare-fun m!63299 () Bool)

(assert (=> b!67896 m!63299))

(assert (=> b!67896 m!61479))

(assert (=> b!67896 m!61479))

(declare-fun m!63301 () Bool)

(assert (=> b!67896 m!63301))

(assert (=> b!67898 m!61479))

(assert (=> b!67898 m!61479))

(assert (=> b!67898 m!63301))

(assert (=> d!13857 d!14473))

(declare-fun b!67900 () Bool)

(declare-fun e!44499 () Option!135)

(declare-fun e!44500 () Option!135)

(assert (=> b!67900 (= e!44499 e!44500)))

(declare-fun c!9541 () Bool)

(assert (=> b!67900 (= c!9541 (and ((_ is Cons!1486) lt!28898) (not (= (_1!1064 (h!2070 lt!28898)) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))))

(declare-fun d!14475 () Bool)

(declare-fun c!9540 () Bool)

(assert (=> d!14475 (= c!9540 (and ((_ is Cons!1486) lt!28898) (= (_1!1064 (h!2070 lt!28898)) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (=> d!14475 (= (getValueByKey!129 lt!28898 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) e!44499)))

(declare-fun b!67901 () Bool)

(assert (=> b!67901 (= e!44500 (getValueByKey!129 (t!4976 lt!28898) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!67899 () Bool)

(assert (=> b!67899 (= e!44499 (Some!134 (_2!1064 (h!2070 lt!28898))))))

(declare-fun b!67902 () Bool)

(assert (=> b!67902 (= e!44500 None!133)))

(assert (= (and d!14475 c!9540) b!67899))

(assert (= (and d!14475 (not c!9540)) b!67900))

(assert (= (and b!67900 c!9541) b!67901))

(assert (= (and b!67900 (not c!9541)) b!67902))

(declare-fun m!63303 () Bool)

(assert (=> b!67901 m!63303))

(assert (=> d!13857 d!14475))

(declare-fun d!14477 () Bool)

(assert (=> d!14477 (= (getValueByKey!129 lt!28898 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (Some!134 (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun lt!29519 () Unit!1836)

(assert (=> d!14477 (= lt!29519 (choose!376 lt!28898 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun e!44501 () Bool)

(assert (=> d!14477 e!44501))

(declare-fun res!36613 () Bool)

(assert (=> d!14477 (=> (not res!36613) (not e!44501))))

(assert (=> d!14477 (= res!36613 (isStrictlySorted!284 lt!28898))))

(assert (=> d!14477 (= (lemmaContainsTupThenGetReturnValue!48 lt!28898 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) lt!29519)))

(declare-fun b!67903 () Bool)

(declare-fun res!36614 () Bool)

(assert (=> b!67903 (=> (not res!36614) (not e!44501))))

(assert (=> b!67903 (= res!36614 (containsKey!133 lt!28898 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!67904 () Bool)

(assert (=> b!67904 (= e!44501 (contains!718 lt!28898 (tuple2!2109 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (= (and d!14477 res!36613) b!67903))

(assert (= (and b!67903 res!36614) b!67904))

(assert (=> d!14477 m!61473))

(declare-fun m!63305 () Bool)

(assert (=> d!14477 m!63305))

(declare-fun m!63307 () Bool)

(assert (=> d!14477 m!63307))

(declare-fun m!63309 () Bool)

(assert (=> b!67903 m!63309))

(declare-fun m!63311 () Bool)

(assert (=> b!67904 m!63311))

(assert (=> d!13857 d!14477))

(declare-fun b!67905 () Bool)

(declare-fun e!44503 () List!1490)

(declare-fun call!5699 () List!1490)

(assert (=> b!67905 (= e!44503 call!5699)))

(declare-fun b!67906 () Bool)

(declare-fun e!44502 () List!1490)

(declare-fun call!5698 () List!1490)

(assert (=> b!67906 (= e!44502 call!5698)))

(declare-fun bm!5695 () Bool)

(declare-fun call!5700 () List!1490)

(assert (=> bm!5695 (= call!5698 call!5700)))

(declare-fun c!9543 () Bool)

(declare-fun bm!5696 () Bool)

(declare-fun e!44506 () List!1490)

(assert (=> bm!5696 (= call!5699 ($colon$colon!62 e!44506 (ite c!9543 (h!2070 (toList!723 call!5546)) (tuple2!2109 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))))

(declare-fun c!9545 () Bool)

(assert (=> bm!5696 (= c!9545 c!9543)))

(declare-fun d!14479 () Bool)

(declare-fun e!44504 () Bool)

(assert (=> d!14479 e!44504))

(declare-fun res!36616 () Bool)

(assert (=> d!14479 (=> (not res!36616) (not e!44504))))

(declare-fun lt!29520 () List!1490)

(assert (=> d!14479 (= res!36616 (isStrictlySorted!284 lt!29520))))

(assert (=> d!14479 (= lt!29520 e!44503)))

(assert (=> d!14479 (= c!9543 (and ((_ is Cons!1486) (toList!723 call!5546)) (bvslt (_1!1064 (h!2070 (toList!723 call!5546))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (=> d!14479 (isStrictlySorted!284 (toList!723 call!5546))))

(assert (=> d!14479 (= (insertStrictlySorted!50 (toList!723 call!5546) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) lt!29520)))

(declare-fun bm!5697 () Bool)

(assert (=> bm!5697 (= call!5700 call!5699)))

(declare-fun b!67907 () Bool)

(assert (=> b!67907 (= e!44506 (insertStrictlySorted!50 (t!4976 (toList!723 call!5546)) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun c!9544 () Bool)

(declare-fun b!67908 () Bool)

(assert (=> b!67908 (= c!9544 (and ((_ is Cons!1486) (toList!723 call!5546)) (bvsgt (_1!1064 (h!2070 (toList!723 call!5546))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun e!44505 () List!1490)

(assert (=> b!67908 (= e!44505 e!44502)))

(declare-fun b!67909 () Bool)

(assert (=> b!67909 (= e!44505 call!5700)))

(declare-fun b!67910 () Bool)

(declare-fun res!36615 () Bool)

(assert (=> b!67910 (=> (not res!36615) (not e!44504))))

(assert (=> b!67910 (= res!36615 (containsKey!133 lt!29520 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!67911 () Bool)

(assert (=> b!67911 (= e!44502 call!5698)))

(declare-fun b!67912 () Bool)

(declare-fun c!9542 () Bool)

(assert (=> b!67912 (= e!44506 (ite c!9542 (t!4976 (toList!723 call!5546)) (ite c!9544 (Cons!1486 (h!2070 (toList!723 call!5546)) (t!4976 (toList!723 call!5546))) Nil!1487)))))

(declare-fun b!67913 () Bool)

(assert (=> b!67913 (= e!44504 (contains!718 lt!29520 (tuple2!2109 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun b!67914 () Bool)

(assert (=> b!67914 (= e!44503 e!44505)))

(assert (=> b!67914 (= c!9542 (and ((_ is Cons!1486) (toList!723 call!5546)) (= (_1!1064 (h!2070 (toList!723 call!5546))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (= (and d!14479 c!9543) b!67905))

(assert (= (and d!14479 (not c!9543)) b!67914))

(assert (= (and b!67914 c!9542) b!67909))

(assert (= (and b!67914 (not c!9542)) b!67908))

(assert (= (and b!67908 c!9544) b!67911))

(assert (= (and b!67908 (not c!9544)) b!67906))

(assert (= (or b!67911 b!67906) bm!5695))

(assert (= (or b!67909 bm!5695) bm!5697))

(assert (= (or b!67905 bm!5697) bm!5696))

(assert (= (and bm!5696 c!9545) b!67907))

(assert (= (and bm!5696 (not c!9545)) b!67912))

(assert (= (and d!14479 res!36616) b!67910))

(assert (= (and b!67910 res!36615) b!67913))

(declare-fun m!63313 () Bool)

(assert (=> bm!5696 m!63313))

(declare-fun m!63315 () Bool)

(assert (=> d!14479 m!63315))

(declare-fun m!63317 () Bool)

(assert (=> d!14479 m!63317))

(declare-fun m!63319 () Bool)

(assert (=> b!67910 m!63319))

(declare-fun m!63321 () Bool)

(assert (=> b!67907 m!63321))

(declare-fun m!63323 () Bool)

(assert (=> b!67913 m!63323))

(assert (=> d!13857 d!14479))

(declare-fun d!14481 () Bool)

(assert (=> d!14481 (= (isDefined!83 (getValueByKey!129 (toList!723 lt!28656) (_1!1064 lt!28503))) (not (isEmpty!314 (getValueByKey!129 (toList!723 lt!28656) (_1!1064 lt!28503)))))))

(declare-fun bs!2917 () Bool)

(assert (= bs!2917 d!14481))

(assert (=> bs!2917 m!60957))

(declare-fun m!63325 () Bool)

(assert (=> bs!2917 m!63325))

(assert (=> b!67018 d!14481))

(assert (=> b!67018 d!13913))

(declare-fun d!14483 () Bool)

(assert (=> d!14483 (= (isDefined!83 (getValueByKey!129 (toList!723 lt!28648) (_1!1064 lt!28500))) (not (isEmpty!314 (getValueByKey!129 (toList!723 lt!28648) (_1!1064 lt!28500)))))))

(declare-fun bs!2918 () Bool)

(assert (= bs!2918 d!14483))

(assert (=> bs!2918 m!60933))

(declare-fun m!63327 () Bool)

(assert (=> bs!2918 m!63327))

(assert (=> b!66764 d!14483))

(assert (=> b!66764 d!13759))

(declare-fun d!14485 () Bool)

(declare-fun e!44508 () Bool)

(assert (=> d!14485 e!44508))

(declare-fun res!36617 () Bool)

(assert (=> d!14485 (=> res!36617 e!44508)))

(declare-fun lt!29524 () Bool)

(assert (=> d!14485 (= res!36617 (not lt!29524))))

(declare-fun lt!29521 () Bool)

(assert (=> d!14485 (= lt!29524 lt!29521)))

(declare-fun lt!29522 () Unit!1836)

(declare-fun e!44507 () Unit!1836)

(assert (=> d!14485 (= lt!29522 e!44507)))

(declare-fun c!9546 () Bool)

(assert (=> d!14485 (= c!9546 lt!29521)))

(assert (=> d!14485 (= lt!29521 (containsKey!133 (toList!723 lt!29083) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!14485 (= (contains!716 lt!29083 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29524)))

(declare-fun b!67915 () Bool)

(declare-fun lt!29523 () Unit!1836)

(assert (=> b!67915 (= e!44507 lt!29523)))

(assert (=> b!67915 (= lt!29523 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!29083) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> b!67915 (isDefined!83 (getValueByKey!129 (toList!723 lt!29083) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67916 () Bool)

(declare-fun Unit!1899 () Unit!1836)

(assert (=> b!67916 (= e!44507 Unit!1899)))

(declare-fun b!67917 () Bool)

(assert (=> b!67917 (= e!44508 (isDefined!83 (getValueByKey!129 (toList!723 lt!29083) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14485 c!9546) b!67915))

(assert (= (and d!14485 (not c!9546)) b!67916))

(assert (= (and d!14485 (not res!36617)) b!67917))

(declare-fun m!63329 () Bool)

(assert (=> d!14485 m!63329))

(declare-fun m!63331 () Bool)

(assert (=> b!67915 m!63331))

(assert (=> b!67915 m!61757))

(assert (=> b!67915 m!61757))

(declare-fun m!63333 () Bool)

(assert (=> b!67915 m!63333))

(assert (=> b!67917 m!61757))

(assert (=> b!67917 m!61757))

(assert (=> b!67917 m!63333))

(assert (=> d!13901 d!14485))

(declare-fun b!67919 () Bool)

(declare-fun e!44509 () Option!135)

(declare-fun e!44510 () Option!135)

(assert (=> b!67919 (= e!44509 e!44510)))

(declare-fun c!9548 () Bool)

(assert (=> b!67919 (= c!9548 (and ((_ is Cons!1486) lt!29085) (not (= (_1!1064 (h!2070 lt!29085)) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun d!14487 () Bool)

(declare-fun c!9547 () Bool)

(assert (=> d!14487 (= c!9547 (and ((_ is Cons!1486) lt!29085) (= (_1!1064 (h!2070 lt!29085)) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14487 (= (getValueByKey!129 lt!29085 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) e!44509)))

(declare-fun b!67920 () Bool)

(assert (=> b!67920 (= e!44510 (getValueByKey!129 (t!4976 lt!29085) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67918 () Bool)

(assert (=> b!67918 (= e!44509 (Some!134 (_2!1064 (h!2070 lt!29085))))))

(declare-fun b!67921 () Bool)

(assert (=> b!67921 (= e!44510 None!133)))

(assert (= (and d!14487 c!9547) b!67918))

(assert (= (and d!14487 (not c!9547)) b!67919))

(assert (= (and b!67919 c!9548) b!67920))

(assert (= (and b!67919 (not c!9548)) b!67921))

(declare-fun m!63335 () Bool)

(assert (=> b!67920 m!63335))

(assert (=> d!13901 d!14487))

(declare-fun d!14489 () Bool)

(assert (=> d!14489 (= (getValueByKey!129 lt!29085 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun lt!29525 () Unit!1836)

(assert (=> d!14489 (= lt!29525 (choose!376 lt!29085 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun e!44511 () Bool)

(assert (=> d!14489 e!44511))

(declare-fun res!36618 () Bool)

(assert (=> d!14489 (=> (not res!36618) (not e!44511))))

(assert (=> d!14489 (= res!36618 (isStrictlySorted!284 lt!29085))))

(assert (=> d!14489 (= (lemmaContainsTupThenGetReturnValue!48 lt!29085 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29525)))

(declare-fun b!67922 () Bool)

(declare-fun res!36619 () Bool)

(assert (=> b!67922 (=> (not res!36619) (not e!44511))))

(assert (=> b!67922 (= res!36619 (containsKey!133 lt!29085 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67923 () Bool)

(assert (=> b!67923 (= e!44511 (contains!718 lt!29085 (tuple2!2109 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14489 res!36618) b!67922))

(assert (= (and b!67922 res!36619) b!67923))

(assert (=> d!14489 m!61751))

(declare-fun m!63337 () Bool)

(assert (=> d!14489 m!63337))

(declare-fun m!63339 () Bool)

(assert (=> d!14489 m!63339))

(declare-fun m!63341 () Bool)

(assert (=> b!67922 m!63341))

(declare-fun m!63343 () Bool)

(assert (=> b!67923 m!63343))

(assert (=> d!13901 d!14489))

(declare-fun b!67924 () Bool)

(declare-fun e!44513 () List!1490)

(declare-fun call!5702 () List!1490)

(assert (=> b!67924 (= e!44513 call!5702)))

(declare-fun b!67925 () Bool)

(declare-fun e!44512 () List!1490)

(declare-fun call!5701 () List!1490)

(assert (=> b!67925 (= e!44512 call!5701)))

(declare-fun bm!5698 () Bool)

(declare-fun call!5703 () List!1490)

(assert (=> bm!5698 (= call!5701 call!5703)))

(declare-fun bm!5699 () Bool)

(declare-fun c!9550 () Bool)

(declare-fun e!44516 () List!1490)

(assert (=> bm!5699 (= call!5702 ($colon$colon!62 e!44516 (ite c!9550 (h!2070 (toList!723 call!5488)) (tuple2!2109 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun c!9552 () Bool)

(assert (=> bm!5699 (= c!9552 c!9550)))

(declare-fun d!14491 () Bool)

(declare-fun e!44514 () Bool)

(assert (=> d!14491 e!44514))

(declare-fun res!36621 () Bool)

(assert (=> d!14491 (=> (not res!36621) (not e!44514))))

(declare-fun lt!29526 () List!1490)

(assert (=> d!14491 (= res!36621 (isStrictlySorted!284 lt!29526))))

(assert (=> d!14491 (= lt!29526 e!44513)))

(assert (=> d!14491 (= c!9550 (and ((_ is Cons!1486) (toList!723 call!5488)) (bvslt (_1!1064 (h!2070 (toList!723 call!5488))) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14491 (isStrictlySorted!284 (toList!723 call!5488))))

(assert (=> d!14491 (= (insertStrictlySorted!50 (toList!723 call!5488) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29526)))

(declare-fun bm!5700 () Bool)

(assert (=> bm!5700 (= call!5703 call!5702)))

(declare-fun b!67926 () Bool)

(assert (=> b!67926 (= e!44516 (insertStrictlySorted!50 (t!4976 (toList!723 call!5488)) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67927 () Bool)

(declare-fun c!9551 () Bool)

(assert (=> b!67927 (= c!9551 (and ((_ is Cons!1486) (toList!723 call!5488)) (bvsgt (_1!1064 (h!2070 (toList!723 call!5488))) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun e!44515 () List!1490)

(assert (=> b!67927 (= e!44515 e!44512)))

(declare-fun b!67928 () Bool)

(assert (=> b!67928 (= e!44515 call!5703)))

(declare-fun b!67929 () Bool)

(declare-fun res!36620 () Bool)

(assert (=> b!67929 (=> (not res!36620) (not e!44514))))

(assert (=> b!67929 (= res!36620 (containsKey!133 lt!29526 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!67930 () Bool)

(assert (=> b!67930 (= e!44512 call!5701)))

(declare-fun b!67931 () Bool)

(declare-fun c!9549 () Bool)

(assert (=> b!67931 (= e!44516 (ite c!9549 (t!4976 (toList!723 call!5488)) (ite c!9551 (Cons!1486 (h!2070 (toList!723 call!5488)) (t!4976 (toList!723 call!5488))) Nil!1487)))))

(declare-fun b!67932 () Bool)

(assert (=> b!67932 (= e!44514 (contains!718 lt!29526 (tuple2!2109 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!67933 () Bool)

(assert (=> b!67933 (= e!44513 e!44515)))

(assert (=> b!67933 (= c!9549 (and ((_ is Cons!1486) (toList!723 call!5488)) (= (_1!1064 (h!2070 (toList!723 call!5488))) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14491 c!9550) b!67924))

(assert (= (and d!14491 (not c!9550)) b!67933))

(assert (= (and b!67933 c!9549) b!67928))

(assert (= (and b!67933 (not c!9549)) b!67927))

(assert (= (and b!67927 c!9551) b!67930))

(assert (= (and b!67927 (not c!9551)) b!67925))

(assert (= (or b!67930 b!67925) bm!5698))

(assert (= (or b!67928 bm!5698) bm!5700))

(assert (= (or b!67924 bm!5700) bm!5699))

(assert (= (and bm!5699 c!9552) b!67926))

(assert (= (and bm!5699 (not c!9552)) b!67931))

(assert (= (and d!14491 res!36621) b!67929))

(assert (= (and b!67929 res!36620) b!67932))

(declare-fun m!63345 () Bool)

(assert (=> bm!5699 m!63345))

(declare-fun m!63347 () Bool)

(assert (=> d!14491 m!63347))

(declare-fun m!63349 () Bool)

(assert (=> d!14491 m!63349))

(declare-fun m!63351 () Bool)

(assert (=> b!67929 m!63351))

(declare-fun m!63353 () Bool)

(assert (=> b!67926 m!63353))

(declare-fun m!63355 () Bool)

(assert (=> b!67932 m!63355))

(assert (=> d!13901 d!14491))

(declare-fun d!14493 () Bool)

(declare-fun res!36622 () Bool)

(declare-fun e!44517 () Bool)

(assert (=> d!14493 (=> res!36622 e!44517)))

(assert (=> d!14493 (= res!36622 (and ((_ is Cons!1486) lt!28650) (= (_1!1064 (h!2070 lt!28650)) (_1!1064 lt!28500))))))

(assert (=> d!14493 (= (containsKey!133 lt!28650 (_1!1064 lt!28500)) e!44517)))

(declare-fun b!67934 () Bool)

(declare-fun e!44518 () Bool)

(assert (=> b!67934 (= e!44517 e!44518)))

(declare-fun res!36623 () Bool)

(assert (=> b!67934 (=> (not res!36623) (not e!44518))))

(assert (=> b!67934 (= res!36623 (and (or (not ((_ is Cons!1486) lt!28650)) (bvsle (_1!1064 (h!2070 lt!28650)) (_1!1064 lt!28500))) ((_ is Cons!1486) lt!28650) (bvslt (_1!1064 (h!2070 lt!28650)) (_1!1064 lt!28500))))))

(declare-fun b!67935 () Bool)

(assert (=> b!67935 (= e!44518 (containsKey!133 (t!4976 lt!28650) (_1!1064 lt!28500)))))

(assert (= (and d!14493 (not res!36622)) b!67934))

(assert (= (and b!67934 res!36623) b!67935))

(declare-fun m!63357 () Bool)

(assert (=> b!67935 m!63357))

(assert (=> b!66773 d!14493))

(declare-fun b!67937 () Bool)

(declare-fun e!44519 () Option!135)

(declare-fun e!44520 () Option!135)

(assert (=> b!67937 (= e!44519 e!44520)))

(declare-fun c!9554 () Bool)

(assert (=> b!67937 (= c!9554 (and ((_ is Cons!1486) (t!4976 (toList!723 lt!28644))) (not (= (_1!1064 (h!2070 (t!4976 (toList!723 lt!28644)))) (_1!1064 lt!28500)))))))

(declare-fun d!14495 () Bool)

(declare-fun c!9553 () Bool)

(assert (=> d!14495 (= c!9553 (and ((_ is Cons!1486) (t!4976 (toList!723 lt!28644))) (= (_1!1064 (h!2070 (t!4976 (toList!723 lt!28644)))) (_1!1064 lt!28500))))))

(assert (=> d!14495 (= (getValueByKey!129 (t!4976 (toList!723 lt!28644)) (_1!1064 lt!28500)) e!44519)))

(declare-fun b!67938 () Bool)

(assert (=> b!67938 (= e!44520 (getValueByKey!129 (t!4976 (t!4976 (toList!723 lt!28644))) (_1!1064 lt!28500)))))

(declare-fun b!67936 () Bool)

(assert (=> b!67936 (= e!44519 (Some!134 (_2!1064 (h!2070 (t!4976 (toList!723 lt!28644))))))))

(declare-fun b!67939 () Bool)

(assert (=> b!67939 (= e!44520 None!133)))

(assert (= (and d!14495 c!9553) b!67936))

(assert (= (and d!14495 (not c!9553)) b!67937))

(assert (= (and b!67937 c!9554) b!67938))

(assert (= (and b!67937 (not c!9554)) b!67939))

(declare-fun m!63359 () Bool)

(assert (=> b!67938 m!63359))

(assert (=> b!66729 d!14495))

(declare-fun b!67941 () Bool)

(declare-fun e!44521 () Option!135)

(declare-fun e!44522 () Option!135)

(assert (=> b!67941 (= e!44521 e!44522)))

(declare-fun c!9556 () Bool)

(assert (=> b!67941 (= c!9556 (and ((_ is Cons!1486) (toList!723 lt!28844)) (not (= (_1!1064 (h!2070 (toList!723 lt!28844))) (_1!1064 (tuple2!2109 lt!28628 lt!28633))))))))

(declare-fun d!14497 () Bool)

(declare-fun c!9555 () Bool)

(assert (=> d!14497 (= c!9555 (and ((_ is Cons!1486) (toList!723 lt!28844)) (= (_1!1064 (h!2070 (toList!723 lt!28844))) (_1!1064 (tuple2!2109 lt!28628 lt!28633)))))))

(assert (=> d!14497 (= (getValueByKey!129 (toList!723 lt!28844) (_1!1064 (tuple2!2109 lt!28628 lt!28633))) e!44521)))

(declare-fun b!67942 () Bool)

(assert (=> b!67942 (= e!44522 (getValueByKey!129 (t!4976 (toList!723 lt!28844)) (_1!1064 (tuple2!2109 lt!28628 lt!28633))))))

(declare-fun b!67940 () Bool)

(assert (=> b!67940 (= e!44521 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28844)))))))

(declare-fun b!67943 () Bool)

(assert (=> b!67943 (= e!44522 None!133)))

(assert (= (and d!14497 c!9555) b!67940))

(assert (= (and d!14497 (not c!9555)) b!67941))

(assert (= (and b!67941 c!9556) b!67942))

(assert (= (and b!67941 (not c!9556)) b!67943))

(declare-fun m!63361 () Bool)

(assert (=> b!67942 m!63361))

(assert (=> b!66871 d!14497))

(declare-fun d!14499 () Bool)

(assert (=> d!14499 (isDefined!83 (getValueByKey!129 (toList!723 lt!28652) (_1!1064 lt!28503)))))

(declare-fun lt!29527 () Unit!1836)

(assert (=> d!14499 (= lt!29527 (choose!378 (toList!723 lt!28652) (_1!1064 lt!28503)))))

(declare-fun e!44523 () Bool)

(assert (=> d!14499 e!44523))

(declare-fun res!36624 () Bool)

(assert (=> d!14499 (=> (not res!36624) (not e!44523))))

(assert (=> d!14499 (= res!36624 (isStrictlySorted!284 (toList!723 lt!28652)))))

(assert (=> d!14499 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28652) (_1!1064 lt!28503)) lt!29527)))

(declare-fun b!67944 () Bool)

(assert (=> b!67944 (= e!44523 (containsKey!133 (toList!723 lt!28652) (_1!1064 lt!28503)))))

(assert (= (and d!14499 res!36624) b!67944))

(assert (=> d!14499 m!60945))

(assert (=> d!14499 m!60945))

(assert (=> d!14499 m!61197))

(declare-fun m!63363 () Bool)

(assert (=> d!14499 m!63363))

(declare-fun m!63365 () Bool)

(assert (=> d!14499 m!63365))

(assert (=> b!67944 m!61193))

(assert (=> b!66811 d!14499))

(assert (=> b!66811 d!14265))

(assert (=> b!66811 d!13825))

(declare-fun d!14501 () Bool)

(assert (=> d!14501 (= (isDefined!83 (getValueByKey!129 (toList!723 call!5567) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760))))) (not (isEmpty!314 (getValueByKey!129 (toList!723 call!5567) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760)))))))))

(declare-fun bs!2919 () Bool)

(assert (= bs!2919 d!14501))

(assert (=> bs!2919 m!61785))

(declare-fun m!63367 () Bool)

(assert (=> bs!2919 m!63367))

(assert (=> b!67137 d!14501))

(declare-fun b!67946 () Bool)

(declare-fun e!44524 () Option!135)

(declare-fun e!44525 () Option!135)

(assert (=> b!67946 (= e!44524 e!44525)))

(declare-fun c!9558 () Bool)

(assert (=> b!67946 (= c!9558 (and ((_ is Cons!1486) (toList!723 call!5567)) (not (= (_1!1064 (h!2070 (toList!723 call!5567))) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760)))))))))

(declare-fun c!9557 () Bool)

(declare-fun d!14503 () Bool)

(assert (=> d!14503 (= c!9557 (and ((_ is Cons!1486) (toList!723 call!5567)) (= (_1!1064 (h!2070 (toList!723 call!5567))) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760))))))))

(assert (=> d!14503 (= (getValueByKey!129 (toList!723 call!5567) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760)))) e!44524)))

(declare-fun b!67947 () Bool)

(assert (=> b!67947 (= e!44525 (getValueByKey!129 (t!4976 (toList!723 call!5567)) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760)))))))

(declare-fun b!67945 () Bool)

(assert (=> b!67945 (= e!44524 (Some!134 (_2!1064 (h!2070 (toList!723 call!5567)))))))

(declare-fun b!67948 () Bool)

(assert (=> b!67948 (= e!44525 None!133)))

(assert (= (and d!14503 c!9557) b!67945))

(assert (= (and d!14503 (not c!9557)) b!67946))

(assert (= (and b!67946 c!9558) b!67947))

(assert (= (and b!67946 (not c!9558)) b!67948))

(declare-fun m!63369 () Bool)

(assert (=> b!67947 m!63369))

(assert (=> b!67137 d!14503))

(declare-fun d!14505 () Bool)

(assert (=> d!14505 (= (get!1130 (getValueByKey!129 (toList!723 lt!28596) lt!28610)) (v!2483 (getValueByKey!129 (toList!723 lt!28596) lt!28610)))))

(assert (=> d!13827 d!14505))

(declare-fun b!67950 () Bool)

(declare-fun e!44526 () Option!135)

(declare-fun e!44527 () Option!135)

(assert (=> b!67950 (= e!44526 e!44527)))

(declare-fun c!9560 () Bool)

(assert (=> b!67950 (= c!9560 (and ((_ is Cons!1486) (toList!723 lt!28596)) (not (= (_1!1064 (h!2070 (toList!723 lt!28596))) lt!28610))))))

(declare-fun d!14507 () Bool)

(declare-fun c!9559 () Bool)

(assert (=> d!14507 (= c!9559 (and ((_ is Cons!1486) (toList!723 lt!28596)) (= (_1!1064 (h!2070 (toList!723 lt!28596))) lt!28610)))))

(assert (=> d!14507 (= (getValueByKey!129 (toList!723 lt!28596) lt!28610) e!44526)))

(declare-fun b!67951 () Bool)

(assert (=> b!67951 (= e!44527 (getValueByKey!129 (t!4976 (toList!723 lt!28596)) lt!28610))))

(declare-fun b!67949 () Bool)

(assert (=> b!67949 (= e!44526 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28596)))))))

(declare-fun b!67952 () Bool)

(assert (=> b!67952 (= e!44527 None!133)))

(assert (= (and d!14507 c!9559) b!67949))

(assert (= (and d!14507 (not c!9559)) b!67950))

(assert (= (and b!67950 c!9560) b!67951))

(assert (= (and b!67950 (not c!9560)) b!67952))

(declare-fun m!63371 () Bool)

(assert (=> b!67951 m!63371))

(assert (=> d!13827 d!14507))

(declare-fun d!14509 () Bool)

(declare-fun c!9561 () Bool)

(assert (=> d!14509 (= c!9561 ((_ is Nil!1487) (toList!723 lt!28656)))))

(declare-fun e!44528 () (InoxSet tuple2!2108))

(assert (=> d!14509 (= (content!70 (toList!723 lt!28656)) e!44528)))

(declare-fun b!67953 () Bool)

(assert (=> b!67953 (= e!44528 ((as const (Array tuple2!2108 Bool)) false))))

(declare-fun b!67954 () Bool)

(assert (=> b!67954 (= e!44528 ((_ map or) (store ((as const (Array tuple2!2108 Bool)) false) (h!2070 (toList!723 lt!28656)) true) (content!70 (t!4976 (toList!723 lt!28656)))))))

(assert (= (and d!14509 c!9561) b!67953))

(assert (= (and d!14509 (not c!9561)) b!67954))

(declare-fun m!63373 () Bool)

(assert (=> b!67954 m!63373))

(declare-fun m!63375 () Bool)

(assert (=> b!67954 m!63375))

(assert (=> d!13807 d!14509))

(declare-fun b!67956 () Bool)

(declare-fun e!44529 () Option!135)

(declare-fun e!44530 () Option!135)

(assert (=> b!67956 (= e!44529 e!44530)))

(declare-fun c!9563 () Bool)

(assert (=> b!67956 (= c!9563 (and ((_ is Cons!1486) (t!4976 (toList!723 lt!28648))) (not (= (_1!1064 (h!2070 (t!4976 (toList!723 lt!28648)))) (_1!1064 lt!28500)))))))

(declare-fun d!14511 () Bool)

(declare-fun c!9562 () Bool)

(assert (=> d!14511 (= c!9562 (and ((_ is Cons!1486) (t!4976 (toList!723 lt!28648))) (= (_1!1064 (h!2070 (t!4976 (toList!723 lt!28648)))) (_1!1064 lt!28500))))))

(assert (=> d!14511 (= (getValueByKey!129 (t!4976 (toList!723 lt!28648)) (_1!1064 lt!28500)) e!44529)))

(declare-fun b!67957 () Bool)

(assert (=> b!67957 (= e!44530 (getValueByKey!129 (t!4976 (t!4976 (toList!723 lt!28648))) (_1!1064 lt!28500)))))

(declare-fun b!67955 () Bool)

(assert (=> b!67955 (= e!44529 (Some!134 (_2!1064 (h!2070 (t!4976 (toList!723 lt!28648))))))))

(declare-fun b!67958 () Bool)

(assert (=> b!67958 (= e!44530 None!133)))

(assert (= (and d!14511 c!9562) b!67955))

(assert (= (and d!14511 (not c!9562)) b!67956))

(assert (= (and b!67956 c!9563) b!67957))

(assert (= (and b!67956 (not c!9563)) b!67958))

(declare-fun m!63377 () Bool)

(assert (=> b!67957 m!63377))

(assert (=> b!66733 d!14511))

(declare-fun b!67960 () Bool)

(declare-fun e!44531 () Option!135)

(declare-fun e!44532 () Option!135)

(assert (=> b!67960 (= e!44531 e!44532)))

(declare-fun c!9565 () Bool)

(assert (=> b!67960 (= c!9565 (and ((_ is Cons!1486) (toList!723 lt!28896)) (not (= (_1!1064 (h!2070 (toList!723 lt!28896))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))))

(declare-fun d!14513 () Bool)

(declare-fun c!9564 () Bool)

(assert (=> d!14513 (= c!9564 (and ((_ is Cons!1486) (toList!723 lt!28896)) (= (_1!1064 (h!2070 (toList!723 lt!28896))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (=> d!14513 (= (getValueByKey!129 (toList!723 lt!28896) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) e!44531)))

(declare-fun b!67961 () Bool)

(assert (=> b!67961 (= e!44532 (getValueByKey!129 (t!4976 (toList!723 lt!28896)) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!67959 () Bool)

(assert (=> b!67959 (= e!44531 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28896)))))))

(declare-fun b!67962 () Bool)

(assert (=> b!67962 (= e!44532 None!133)))

(assert (= (and d!14513 c!9564) b!67959))

(assert (= (and d!14513 (not c!9564)) b!67960))

(assert (= (and b!67960 c!9565) b!67961))

(assert (= (and b!67960 (not c!9565)) b!67962))

(declare-fun m!63379 () Bool)

(assert (=> b!67961 m!63379))

(assert (=> b!66937 d!14513))

(declare-fun b!67963 () Bool)

(declare-fun e!44534 () List!1490)

(declare-fun call!5705 () List!1490)

(assert (=> b!67963 (= e!44534 call!5705)))

(declare-fun b!67964 () Bool)

(declare-fun e!44533 () List!1490)

(declare-fun call!5704 () List!1490)

(assert (=> b!67964 (= e!44533 call!5704)))

(declare-fun bm!5701 () Bool)

(declare-fun call!5706 () List!1490)

(assert (=> bm!5701 (= call!5704 call!5706)))

(declare-fun c!9567 () Bool)

(declare-fun bm!5702 () Bool)

(declare-fun e!44537 () List!1490)

(assert (=> bm!5702 (= call!5705 ($colon$colon!62 e!44537 (ite c!9567 (h!2070 (t!4976 (toList!723 (+!87 lt!28505 lt!28500)))) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503)))))))

(declare-fun c!9569 () Bool)

(assert (=> bm!5702 (= c!9569 c!9567)))

(declare-fun d!14515 () Bool)

(declare-fun e!44535 () Bool)

(assert (=> d!14515 e!44535))

(declare-fun res!36626 () Bool)

(assert (=> d!14515 (=> (not res!36626) (not e!44535))))

(declare-fun lt!29528 () List!1490)

(assert (=> d!14515 (= res!36626 (isStrictlySorted!284 lt!29528))))

(assert (=> d!14515 (= lt!29528 e!44534)))

(assert (=> d!14515 (= c!9567 (and ((_ is Cons!1486) (t!4976 (toList!723 (+!87 lt!28505 lt!28500)))) (bvslt (_1!1064 (h!2070 (t!4976 (toList!723 (+!87 lt!28505 lt!28500))))) (_1!1064 lt!28503))))))

(assert (=> d!14515 (isStrictlySorted!284 (t!4976 (toList!723 (+!87 lt!28505 lt!28500))))))

(assert (=> d!14515 (= (insertStrictlySorted!50 (t!4976 (toList!723 (+!87 lt!28505 lt!28500))) (_1!1064 lt!28503) (_2!1064 lt!28503)) lt!29528)))

(declare-fun bm!5703 () Bool)

(assert (=> bm!5703 (= call!5706 call!5705)))

(declare-fun b!67965 () Bool)

(assert (=> b!67965 (= e!44537 (insertStrictlySorted!50 (t!4976 (t!4976 (toList!723 (+!87 lt!28505 lt!28500)))) (_1!1064 lt!28503) (_2!1064 lt!28503)))))

(declare-fun c!9568 () Bool)

(declare-fun b!67966 () Bool)

(assert (=> b!67966 (= c!9568 (and ((_ is Cons!1486) (t!4976 (toList!723 (+!87 lt!28505 lt!28500)))) (bvsgt (_1!1064 (h!2070 (t!4976 (toList!723 (+!87 lt!28505 lt!28500))))) (_1!1064 lt!28503))))))

(declare-fun e!44536 () List!1490)

(assert (=> b!67966 (= e!44536 e!44533)))

(declare-fun b!67967 () Bool)

(assert (=> b!67967 (= e!44536 call!5706)))

(declare-fun b!67968 () Bool)

(declare-fun res!36625 () Bool)

(assert (=> b!67968 (=> (not res!36625) (not e!44535))))

(assert (=> b!67968 (= res!36625 (containsKey!133 lt!29528 (_1!1064 lt!28503)))))

(declare-fun b!67969 () Bool)

(assert (=> b!67969 (= e!44533 call!5704)))

(declare-fun c!9566 () Bool)

(declare-fun b!67970 () Bool)

(assert (=> b!67970 (= e!44537 (ite c!9566 (t!4976 (t!4976 (toList!723 (+!87 lt!28505 lt!28500)))) (ite c!9568 (Cons!1486 (h!2070 (t!4976 (toList!723 (+!87 lt!28505 lt!28500)))) (t!4976 (t!4976 (toList!723 (+!87 lt!28505 lt!28500))))) Nil!1487)))))

(declare-fun b!67971 () Bool)

(assert (=> b!67971 (= e!44535 (contains!718 lt!29528 (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))))))

(declare-fun b!67972 () Bool)

(assert (=> b!67972 (= e!44534 e!44536)))

(assert (=> b!67972 (= c!9566 (and ((_ is Cons!1486) (t!4976 (toList!723 (+!87 lt!28505 lt!28500)))) (= (_1!1064 (h!2070 (t!4976 (toList!723 (+!87 lt!28505 lt!28500))))) (_1!1064 lt!28503))))))

(assert (= (and d!14515 c!9567) b!67963))

(assert (= (and d!14515 (not c!9567)) b!67972))

(assert (= (and b!67972 c!9566) b!67967))

(assert (= (and b!67972 (not c!9566)) b!67966))

(assert (= (and b!67966 c!9568) b!67969))

(assert (= (and b!67966 (not c!9568)) b!67964))

(assert (= (or b!67969 b!67964) bm!5701))

(assert (= (or b!67967 bm!5701) bm!5703))

(assert (= (or b!67963 bm!5703) bm!5702))

(assert (= (and bm!5702 c!9569) b!67965))

(assert (= (and bm!5702 (not c!9569)) b!67970))

(assert (= (and d!14515 res!36626) b!67968))

(assert (= (and b!67968 res!36625) b!67971))

(declare-fun m!63381 () Bool)

(assert (=> bm!5702 m!63381))

(declare-fun m!63383 () Bool)

(assert (=> d!14515 m!63383))

(assert (=> d!14515 m!62211))

(declare-fun m!63385 () Bool)

(assert (=> b!67968 m!63385))

(declare-fun m!63387 () Bool)

(assert (=> b!67965 m!63387))

(declare-fun m!63389 () Bool)

(assert (=> b!67971 m!63389))

(assert (=> b!66822 d!14515))

(declare-fun d!14517 () Bool)

(assert (=> d!14517 (contains!716 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))

(declare-fun lt!29531 () Unit!1836)

(declare-fun choose!387 (array!3840 array!3842 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 64) (_ BitVec 32) Int) Unit!1836)

(assert (=> d!14517 (= lt!29531 (choose!387 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(assert (=> d!14517 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14517 (= (lemmaArrayContainsKeyThenInListMap!10 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29531)))

(declare-fun bs!2920 () Bool)

(assert (= bs!2920 d!14517))

(assert (=> bs!2920 m!60835))

(assert (=> bs!2920 m!60835))

(assert (=> bs!2920 m!60719))

(assert (=> bs!2920 m!61029))

(assert (=> bs!2920 m!60719))

(declare-fun m!63391 () Bool)

(assert (=> bs!2920 m!63391))

(assert (=> bs!2920 m!61069))

(assert (=> b!67110 d!14517))

(assert (=> b!67110 d!13889))

(assert (=> b!67110 d!13873))

(declare-fun b!67974 () Bool)

(declare-fun e!44538 () Option!135)

(declare-fun e!44539 () Option!135)

(assert (=> b!67974 (= e!44538 e!44539)))

(declare-fun c!9571 () Bool)

(assert (=> b!67974 (= c!9571 (and ((_ is Cons!1486) (t!4976 lt!28654)) (not (= (_1!1064 (h!2070 (t!4976 lt!28654))) (_1!1064 lt!28503)))))))

(declare-fun d!14519 () Bool)

(declare-fun c!9570 () Bool)

(assert (=> d!14519 (= c!9570 (and ((_ is Cons!1486) (t!4976 lt!28654)) (= (_1!1064 (h!2070 (t!4976 lt!28654))) (_1!1064 lt!28503))))))

(assert (=> d!14519 (= (getValueByKey!129 (t!4976 lt!28654) (_1!1064 lt!28503)) e!44538)))

(declare-fun b!67975 () Bool)

(assert (=> b!67975 (= e!44539 (getValueByKey!129 (t!4976 (t!4976 lt!28654)) (_1!1064 lt!28503)))))

(declare-fun b!67973 () Bool)

(assert (=> b!67973 (= e!44538 (Some!134 (_2!1064 (h!2070 (t!4976 lt!28654)))))))

(declare-fun b!67976 () Bool)

(assert (=> b!67976 (= e!44539 None!133)))

(assert (= (and d!14519 c!9570) b!67973))

(assert (= (and d!14519 (not c!9570)) b!67974))

(assert (= (and b!67974 c!9571) b!67975))

(assert (= (and b!67974 (not c!9571)) b!67976))

(declare-fun m!63393 () Bool)

(assert (=> b!67975 m!63393))

(assert (=> b!66816 d!14519))

(assert (=> b!67011 d!14035))

(declare-fun d!14521 () Bool)

(assert (=> d!14521 (isDefined!83 (getValueByKey!129 (toList!723 lt!28644) (_1!1064 lt!28500)))))

(declare-fun lt!29532 () Unit!1836)

(assert (=> d!14521 (= lt!29532 (choose!378 (toList!723 lt!28644) (_1!1064 lt!28500)))))

(declare-fun e!44540 () Bool)

(assert (=> d!14521 e!44540))

(declare-fun res!36627 () Bool)

(assert (=> d!14521 (=> (not res!36627) (not e!44540))))

(assert (=> d!14521 (= res!36627 (isStrictlySorted!284 (toList!723 lt!28644)))))

(assert (=> d!14521 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28644) (_1!1064 lt!28500)) lt!29532)))

(declare-fun b!67977 () Bool)

(assert (=> b!67977 (= e!44540 (containsKey!133 (toList!723 lt!28644) (_1!1064 lt!28500)))))

(assert (= (and d!14521 res!36627) b!67977))

(assert (=> d!14521 m!60921))

(assert (=> d!14521 m!60921))

(assert (=> d!14521 m!61341))

(declare-fun m!63395 () Bool)

(assert (=> d!14521 m!63395))

(declare-fun m!63397 () Bool)

(assert (=> d!14521 m!63397))

(assert (=> b!67977 m!61337))

(assert (=> b!66889 d!14521))

(assert (=> b!66889 d!14259))

(assert (=> b!66889 d!13755))

(declare-fun d!14523 () Bool)

(declare-fun lt!29533 () Bool)

(assert (=> d!14523 (= lt!29533 (select (content!70 (t!4976 (toList!723 lt!28656))) lt!28503))))

(declare-fun e!44541 () Bool)

(assert (=> d!14523 (= lt!29533 e!44541)))

(declare-fun res!36629 () Bool)

(assert (=> d!14523 (=> (not res!36629) (not e!44541))))

(assert (=> d!14523 (= res!36629 ((_ is Cons!1486) (t!4976 (toList!723 lt!28656))))))

(assert (=> d!14523 (= (contains!718 (t!4976 (toList!723 lt!28656)) lt!28503) lt!29533)))

(declare-fun b!67978 () Bool)

(declare-fun e!44542 () Bool)

(assert (=> b!67978 (= e!44541 e!44542)))

(declare-fun res!36628 () Bool)

(assert (=> b!67978 (=> res!36628 e!44542)))

(assert (=> b!67978 (= res!36628 (= (h!2070 (t!4976 (toList!723 lt!28656))) lt!28503))))

(declare-fun b!67979 () Bool)

(assert (=> b!67979 (= e!44542 (contains!718 (t!4976 (t!4976 (toList!723 lt!28656))) lt!28503))))

(assert (= (and d!14523 res!36629) b!67978))

(assert (= (and b!67978 (not res!36628)) b!67979))

(assert (=> d!14523 m!63375))

(declare-fun m!63399 () Bool)

(assert (=> d!14523 m!63399))

(declare-fun m!63401 () Bool)

(assert (=> b!67979 m!63401))

(assert (=> b!66883 d!14523))

(declare-fun d!14525 () Bool)

(declare-fun res!36630 () Bool)

(declare-fun e!44543 () Bool)

(assert (=> d!14525 (=> res!36630 e!44543)))

(assert (=> d!14525 (= res!36630 (and ((_ is Cons!1486) (toList!723 lt!28644)) (= (_1!1064 (h!2070 (toList!723 lt!28644))) (_1!1064 lt!28500))))))

(assert (=> d!14525 (= (containsKey!133 (toList!723 lt!28644) (_1!1064 lt!28500)) e!44543)))

(declare-fun b!67980 () Bool)

(declare-fun e!44544 () Bool)

(assert (=> b!67980 (= e!44543 e!44544)))

(declare-fun res!36631 () Bool)

(assert (=> b!67980 (=> (not res!36631) (not e!44544))))

(assert (=> b!67980 (= res!36631 (and (or (not ((_ is Cons!1486) (toList!723 lt!28644))) (bvsle (_1!1064 (h!2070 (toList!723 lt!28644))) (_1!1064 lt!28500))) ((_ is Cons!1486) (toList!723 lt!28644)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28644))) (_1!1064 lt!28500))))))

(declare-fun b!67981 () Bool)

(assert (=> b!67981 (= e!44544 (containsKey!133 (t!4976 (toList!723 lt!28644)) (_1!1064 lt!28500)))))

(assert (= (and d!14525 (not res!36630)) b!67980))

(assert (= (and b!67980 res!36631) b!67981))

(declare-fun m!63403 () Bool)

(assert (=> b!67981 m!63403))

(assert (=> d!13811 d!14525))

(declare-fun d!14527 () Bool)

(assert (=> d!14527 (= (isDefined!83 (getValueByKey!129 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))) (not (isEmpty!314 (getValueByKey!129 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))))

(declare-fun bs!2921 () Bool)

(assert (= bs!2921 d!14527))

(assert (=> bs!2921 m!61667))

(declare-fun m!63405 () Bool)

(assert (=> bs!2921 m!63405))

(assert (=> b!67043 d!14527))

(declare-fun b!67983 () Bool)

(declare-fun e!44545 () Option!135)

(declare-fun e!44546 () Option!135)

(assert (=> b!67983 (= e!44545 e!44546)))

(declare-fun c!9573 () Bool)

(assert (=> b!67983 (= c!9573 (and ((_ is Cons!1486) (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))) (not (= (_1!1064 (h!2070 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))))

(declare-fun c!9572 () Bool)

(declare-fun d!14529 () Bool)

(assert (=> d!14529 (= c!9572 (and ((_ is Cons!1486) (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))) (= (_1!1064 (h!2070 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))))

(assert (=> d!14529 (= (getValueByKey!129 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) e!44545)))

(declare-fun b!67984 () Bool)

(assert (=> b!67984 (= e!44546 (getValueByKey!129 (t!4976 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun b!67982 () Bool)

(assert (=> b!67982 (= e!44545 (Some!134 (_2!1064 (h!2070 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))))))

(declare-fun b!67985 () Bool)

(assert (=> b!67985 (= e!44546 None!133)))

(assert (= (and d!14529 c!9572) b!67982))

(assert (= (and d!14529 (not c!9572)) b!67983))

(assert (= (and b!67983 c!9573) b!67984))

(assert (= (and b!67983 (not c!9573)) b!67985))

(assert (=> b!67984 m!60719))

(declare-fun m!63407 () Bool)

(assert (=> b!67984 m!63407))

(assert (=> b!67043 d!14529))

(declare-fun d!14531 () Bool)

(declare-fun lt!29534 () Bool)

(assert (=> d!14531 (= lt!29534 (select (content!70 (toList!723 lt!29116)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))

(declare-fun e!44547 () Bool)

(assert (=> d!14531 (= lt!29534 e!44547)))

(declare-fun res!36633 () Bool)

(assert (=> d!14531 (=> (not res!36633) (not e!44547))))

(assert (=> d!14531 (= res!36633 ((_ is Cons!1486) (toList!723 lt!29116)))))

(assert (=> d!14531 (= (contains!718 (toList!723 lt!29116) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) lt!29534)))

(declare-fun b!67986 () Bool)

(declare-fun e!44548 () Bool)

(assert (=> b!67986 (= e!44547 e!44548)))

(declare-fun res!36632 () Bool)

(assert (=> b!67986 (=> res!36632 e!44548)))

(assert (=> b!67986 (= res!36632 (= (h!2070 (toList!723 lt!29116)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))

(declare-fun b!67987 () Bool)

(assert (=> b!67987 (= e!44548 (contains!718 (t!4976 (toList!723 lt!29116)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))

(assert (= (and d!14531 res!36633) b!67986))

(assert (= (and b!67986 (not res!36632)) b!67987))

(declare-fun m!63409 () Bool)

(assert (=> d!14531 m!63409))

(declare-fun m!63411 () Bool)

(assert (=> d!14531 m!63411))

(declare-fun m!63413 () Bool)

(assert (=> b!67987 m!63413))

(assert (=> b!67161 d!14531))

(declare-fun d!14533 () Bool)

(declare-fun res!36634 () Bool)

(declare-fun e!44549 () Bool)

(assert (=> d!14533 (=> res!36634 e!44549)))

(assert (=> d!14533 (= res!36634 (and ((_ is Cons!1486) (toList!723 lt!28652)) (= (_1!1064 (h!2070 (toList!723 lt!28652))) (_1!1064 lt!28503))))))

(assert (=> d!14533 (= (containsKey!133 (toList!723 lt!28652) (_1!1064 lt!28503)) e!44549)))

(declare-fun b!67988 () Bool)

(declare-fun e!44550 () Bool)

(assert (=> b!67988 (= e!44549 e!44550)))

(declare-fun res!36635 () Bool)

(assert (=> b!67988 (=> (not res!36635) (not e!44550))))

(assert (=> b!67988 (= res!36635 (and (or (not ((_ is Cons!1486) (toList!723 lt!28652))) (bvsle (_1!1064 (h!2070 (toList!723 lt!28652))) (_1!1064 lt!28503))) ((_ is Cons!1486) (toList!723 lt!28652)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28652))) (_1!1064 lt!28503))))))

(declare-fun b!67989 () Bool)

(assert (=> b!67989 (= e!44550 (containsKey!133 (t!4976 (toList!723 lt!28652)) (_1!1064 lt!28503)))))

(assert (= (and d!14533 (not res!36634)) b!67988))

(assert (= (and b!67988 res!36635) b!67989))

(declare-fun m!63415 () Bool)

(assert (=> b!67989 m!63415))

(assert (=> d!13779 d!14533))

(assert (=> d!13893 d!13793))

(declare-fun b!68006 () Bool)

(declare-fun e!44562 () Bool)

(declare-fun call!5711 () Bool)

(assert (=> b!68006 (= e!44562 (not call!5711))))

(declare-fun bm!5708 () Bool)

(declare-fun lt!29537 () SeekEntryResult!243)

(declare-fun c!9579 () Bool)

(declare-fun call!5712 () Bool)

(assert (=> bm!5708 (= call!5712 (inRange!0 (ite c!9579 (index!3100 lt!29537) (index!3103 lt!29537)) (mask!6082 newMap!16)))))

(declare-fun d!14535 () Bool)

(declare-fun e!44559 () Bool)

(assert (=> d!14535 e!44559))

(assert (=> d!14535 (= c!9579 ((_ is MissingZero!243) lt!29537))))

(assert (=> d!14535 (= lt!29537 (seekEntryOrOpen!0 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(assert (=> d!14535 true))

(declare-fun _$34!787 () Unit!1836)

(assert (=> d!14535 (= (choose!384 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)) _$34!787)))

(declare-fun b!68007 () Bool)

(declare-fun res!36646 () Bool)

(declare-fun e!44561 () Bool)

(assert (=> b!68007 (=> (not res!36646) (not e!44561))))

(assert (=> b!68007 (= res!36646 call!5712)))

(declare-fun e!44560 () Bool)

(assert (=> b!68007 (= e!44560 e!44561)))

(declare-fun b!68008 () Bool)

(assert (=> b!68008 (= e!44559 e!44560)))

(declare-fun c!9578 () Bool)

(assert (=> b!68008 (= c!9578 ((_ is MissingVacant!243) lt!29537))))

(declare-fun bm!5709 () Bool)

(assert (=> bm!5709 (= call!5711 (arrayContainsKey!0 (_keys!3787 newMap!16) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!68009 () Bool)

(assert (=> b!68009 (= e!44560 ((_ is Undefined!243) lt!29537))))

(declare-fun b!68010 () Bool)

(assert (=> b!68010 (= e!44559 e!44562)))

(declare-fun res!36647 () Bool)

(assert (=> b!68010 (= res!36647 call!5712)))

(assert (=> b!68010 (=> (not res!36647) (not e!44562))))

(declare-fun b!68011 () Bool)

(declare-fun res!36645 () Bool)

(assert (=> b!68011 (=> (not res!36645) (not e!44561))))

(assert (=> b!68011 (= res!36645 (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3103 lt!29537)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68012 () Bool)

(declare-fun res!36644 () Bool)

(assert (=> b!68012 (= res!36644 (= (select (arr!1834 (_keys!3787 newMap!16)) (index!3100 lt!29537)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68012 (=> (not res!36644) (not e!44562))))

(declare-fun b!68013 () Bool)

(assert (=> b!68013 (= e!44561 (not call!5711))))

(assert (= (and d!14535 c!9579) b!68010))

(assert (= (and d!14535 (not c!9579)) b!68008))

(assert (= (and b!68010 res!36647) b!68012))

(assert (= (and b!68012 res!36644) b!68006))

(assert (= (and b!68008 c!9578) b!68007))

(assert (= (and b!68008 (not c!9578)) b!68009))

(assert (= (and b!68007 res!36646) b!68011))

(assert (= (and b!68011 res!36645) b!68013))

(assert (= (or b!68010 b!68007) bm!5708))

(assert (= (or b!68006 b!68013) bm!5709))

(declare-fun m!63417 () Bool)

(assert (=> b!68011 m!63417))

(assert (=> d!14535 m!60719))

(assert (=> d!14535 m!60993))

(declare-fun m!63419 () Bool)

(assert (=> b!68012 m!63419))

(assert (=> bm!5709 m!60719))

(assert (=> bm!5709 m!61039))

(declare-fun m!63421 () Bool)

(assert (=> bm!5708 m!63421))

(assert (=> d!13893 d!14535))

(assert (=> d!13893 d!14023))

(assert (=> d!13853 d!13847))

(declare-fun d!14537 () Bool)

(assert (=> d!14537 (= (apply!72 (+!87 lt!28611 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!28598) (apply!72 lt!28611 lt!28598))))

(assert (=> d!14537 true))

(declare-fun _$34!788 () Unit!1836)

(assert (=> d!14537 (= (choose!379 lt!28611 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))) lt!28598) _$34!788)))

(declare-fun bs!2922 () Bool)

(assert (= bs!2922 d!14537))

(assert (=> bs!2922 m!60881))

(assert (=> bs!2922 m!60881))

(assert (=> bs!2922 m!60883))

(assert (=> bs!2922 m!60871))

(assert (=> d!13853 d!14537))

(assert (=> d!13853 d!13835))

(declare-fun d!14539 () Bool)

(declare-fun e!44564 () Bool)

(assert (=> d!14539 e!44564))

(declare-fun res!36648 () Bool)

(assert (=> d!14539 (=> res!36648 e!44564)))

(declare-fun lt!29541 () Bool)

(assert (=> d!14539 (= res!36648 (not lt!29541))))

(declare-fun lt!29538 () Bool)

(assert (=> d!14539 (= lt!29541 lt!29538)))

(declare-fun lt!29539 () Unit!1836)

(declare-fun e!44563 () Unit!1836)

(assert (=> d!14539 (= lt!29539 e!44563)))

(declare-fun c!9580 () Bool)

(assert (=> d!14539 (= c!9580 lt!29538)))

(assert (=> d!14539 (= lt!29538 (containsKey!133 (toList!723 lt!28611) lt!28598))))

(assert (=> d!14539 (= (contains!716 lt!28611 lt!28598) lt!29541)))

(declare-fun b!68014 () Bool)

(declare-fun lt!29540 () Unit!1836)

(assert (=> b!68014 (= e!44563 lt!29540)))

(assert (=> b!68014 (= lt!29540 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28611) lt!28598))))

(assert (=> b!68014 (isDefined!83 (getValueByKey!129 (toList!723 lt!28611) lt!28598))))

(declare-fun b!68015 () Bool)

(declare-fun Unit!1900 () Unit!1836)

(assert (=> b!68015 (= e!44563 Unit!1900)))

(declare-fun b!68016 () Bool)

(assert (=> b!68016 (= e!44564 (isDefined!83 (getValueByKey!129 (toList!723 lt!28611) lt!28598)))))

(assert (= (and d!14539 c!9580) b!68014))

(assert (= (and d!14539 (not c!9580)) b!68015))

(assert (= (and d!14539 (not res!36648)) b!68016))

(declare-fun m!63423 () Bool)

(assert (=> d!14539 m!63423))

(declare-fun m!63425 () Bool)

(assert (=> b!68014 m!63425))

(assert (=> b!68014 m!61439))

(assert (=> b!68014 m!61439))

(declare-fun m!63427 () Bool)

(assert (=> b!68014 m!63427))

(assert (=> b!68016 m!61439))

(assert (=> b!68016 m!61439))

(assert (=> b!68016 m!63427))

(assert (=> d!13853 d!14539))

(assert (=> d!13853 d!13845))

(assert (=> d!13941 d!13729))

(declare-fun lt!29542 () Bool)

(declare-fun d!14541 () Bool)

(assert (=> d!14541 (= lt!29542 (select (content!70 (toList!723 lt!28879)) (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun e!44565 () Bool)

(assert (=> d!14541 (= lt!29542 e!44565)))

(declare-fun res!36650 () Bool)

(assert (=> d!14541 (=> (not res!36650) (not e!44565))))

(assert (=> d!14541 (= res!36650 ((_ is Cons!1486) (toList!723 lt!28879)))))

(assert (=> d!14541 (= (contains!718 (toList!723 lt!28879) (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!29542)))

(declare-fun b!68017 () Bool)

(declare-fun e!44566 () Bool)

(assert (=> b!68017 (= e!44565 e!44566)))

(declare-fun res!36649 () Bool)

(assert (=> b!68017 (=> res!36649 e!44566)))

(assert (=> b!68017 (= res!36649 (= (h!2070 (toList!723 lt!28879)) (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!68018 () Bool)

(assert (=> b!68018 (= e!44566 (contains!718 (t!4976 (toList!723 lt!28879)) (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(assert (= (and d!14541 res!36650) b!68017))

(assert (= (and b!68017 (not res!36649)) b!68018))

(declare-fun m!63429 () Bool)

(assert (=> d!14541 m!63429))

(declare-fun m!63431 () Bool)

(assert (=> d!14541 m!63431))

(declare-fun m!63433 () Bool)

(assert (=> b!68018 m!63433))

(assert (=> b!66929 d!14541))

(declare-fun d!14543 () Bool)

(declare-fun lt!29543 () Bool)

(assert (=> d!14543 (= lt!29543 (select (content!70 (t!4976 (toList!723 lt!28644))) lt!28500))))

(declare-fun e!44567 () Bool)

(assert (=> d!14543 (= lt!29543 e!44567)))

(declare-fun res!36652 () Bool)

(assert (=> d!14543 (=> (not res!36652) (not e!44567))))

(assert (=> d!14543 (= res!36652 ((_ is Cons!1486) (t!4976 (toList!723 lt!28644))))))

(assert (=> d!14543 (= (contains!718 (t!4976 (toList!723 lt!28644)) lt!28500) lt!29543)))

(declare-fun b!68019 () Bool)

(declare-fun e!44568 () Bool)

(assert (=> b!68019 (= e!44567 e!44568)))

(declare-fun res!36651 () Bool)

(assert (=> b!68019 (=> res!36651 e!44568)))

(assert (=> b!68019 (= res!36651 (= (h!2070 (t!4976 (toList!723 lt!28644))) lt!28500))))

(declare-fun b!68020 () Bool)

(assert (=> b!68020 (= e!44568 (contains!718 (t!4976 (t!4976 (toList!723 lt!28644))) lt!28500))))

(assert (= (and d!14543 res!36652) b!68019))

(assert (= (and b!68019 (not res!36651)) b!68020))

(assert (=> d!14543 m!63197))

(declare-fun m!63435 () Bool)

(assert (=> d!14543 m!63435))

(declare-fun m!63437 () Bool)

(assert (=> b!68020 m!63437))

(assert (=> b!67045 d!14543))

(declare-fun d!14545 () Bool)

(assert (=> d!14545 (= (isDefined!83 (getValueByKey!129 (toList!723 lt!28612) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!314 (getValueByKey!129 (toList!723 lt!28612) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2923 () Bool)

(assert (= bs!2923 d!14545))

(assert (=> bs!2923 m!61107))

(declare-fun m!63439 () Bool)

(assert (=> bs!2923 m!63439))

(assert (=> b!66740 d!14545))

(declare-fun b!68022 () Bool)

(declare-fun e!44569 () Option!135)

(declare-fun e!44570 () Option!135)

(assert (=> b!68022 (= e!44569 e!44570)))

(declare-fun c!9582 () Bool)

(assert (=> b!68022 (= c!9582 (and ((_ is Cons!1486) (toList!723 lt!28612)) (not (= (_1!1064 (h!2070 (toList!723 lt!28612))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!14547 () Bool)

(declare-fun c!9581 () Bool)

(assert (=> d!14547 (= c!9581 (and ((_ is Cons!1486) (toList!723 lt!28612)) (= (_1!1064 (h!2070 (toList!723 lt!28612))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14547 (= (getValueByKey!129 (toList!723 lt!28612) #b0000000000000000000000000000000000000000000000000000000000000000) e!44569)))

(declare-fun b!68023 () Bool)

(assert (=> b!68023 (= e!44570 (getValueByKey!129 (t!4976 (toList!723 lt!28612)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68021 () Bool)

(assert (=> b!68021 (= e!44569 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28612)))))))

(declare-fun b!68024 () Bool)

(assert (=> b!68024 (= e!44570 None!133)))

(assert (= (and d!14547 c!9581) b!68021))

(assert (= (and d!14547 (not c!9581)) b!68022))

(assert (= (and b!68022 c!9582) b!68023))

(assert (= (and b!68022 (not c!9582)) b!68024))

(declare-fun m!63441 () Bool)

(assert (=> b!68023 m!63441))

(assert (=> b!66740 d!14547))

(declare-fun d!14549 () Bool)

(assert (=> d!14549 (= (get!1130 (getValueByKey!129 (toList!723 lt!28608) lt!28605)) (v!2483 (getValueByKey!129 (toList!723 lt!28608) lt!28605)))))

(assert (=> d!13833 d!14549))

(declare-fun b!68026 () Bool)

(declare-fun e!44571 () Option!135)

(declare-fun e!44572 () Option!135)

(assert (=> b!68026 (= e!44571 e!44572)))

(declare-fun c!9584 () Bool)

(assert (=> b!68026 (= c!9584 (and ((_ is Cons!1486) (toList!723 lt!28608)) (not (= (_1!1064 (h!2070 (toList!723 lt!28608))) lt!28605))))))

(declare-fun d!14551 () Bool)

(declare-fun c!9583 () Bool)

(assert (=> d!14551 (= c!9583 (and ((_ is Cons!1486) (toList!723 lt!28608)) (= (_1!1064 (h!2070 (toList!723 lt!28608))) lt!28605)))))

(assert (=> d!14551 (= (getValueByKey!129 (toList!723 lt!28608) lt!28605) e!44571)))

(declare-fun b!68027 () Bool)

(assert (=> b!68027 (= e!44572 (getValueByKey!129 (t!4976 (toList!723 lt!28608)) lt!28605))))

(declare-fun b!68025 () Bool)

(assert (=> b!68025 (= e!44571 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28608)))))))

(declare-fun b!68028 () Bool)

(assert (=> b!68028 (= e!44572 None!133)))

(assert (= (and d!14551 c!9583) b!68025))

(assert (= (and d!14551 (not c!9583)) b!68026))

(assert (= (and b!68026 c!9584) b!68027))

(assert (= (and b!68026 (not c!9584)) b!68028))

(declare-fun m!63443 () Bool)

(assert (=> b!68027 m!63443))

(assert (=> d!13833 d!14551))

(declare-fun b!68030 () Bool)

(declare-fun e!44573 () Option!135)

(declare-fun e!44574 () Option!135)

(assert (=> b!68030 (= e!44573 e!44574)))

(declare-fun c!9586 () Bool)

(assert (=> b!68030 (= c!9586 (and ((_ is Cons!1486) (toList!723 lt!29083)) (not (= (_1!1064 (h!2070 (toList!723 lt!29083))) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun d!14553 () Bool)

(declare-fun c!9585 () Bool)

(assert (=> d!14553 (= c!9585 (and ((_ is Cons!1486) (toList!723 lt!29083)) (= (_1!1064 (h!2070 (toList!723 lt!29083))) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14553 (= (getValueByKey!129 (toList!723 lt!29083) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) e!44573)))

(declare-fun b!68031 () Bool)

(assert (=> b!68031 (= e!44574 (getValueByKey!129 (t!4976 (toList!723 lt!29083)) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!68029 () Bool)

(assert (=> b!68029 (= e!44573 (Some!134 (_2!1064 (h!2070 (toList!723 lt!29083)))))))

(declare-fun b!68032 () Bool)

(assert (=> b!68032 (= e!44574 None!133)))

(assert (= (and d!14553 c!9585) b!68029))

(assert (= (and d!14553 (not c!9585)) b!68030))

(assert (= (and b!68030 c!9586) b!68031))

(assert (= (and b!68030 (not c!9586)) b!68032))

(declare-fun m!63445 () Bool)

(assert (=> b!68031 m!63445))

(assert (=> b!67121 d!14553))

(declare-fun b!68033 () Bool)

(declare-fun e!44576 () Bool)

(declare-fun call!5713 () Bool)

(assert (=> b!68033 (= e!44576 call!5713)))

(declare-fun b!68034 () Bool)

(declare-fun e!44577 () Bool)

(assert (=> b!68034 (= e!44577 e!44576)))

(declare-fun c!9587 () Bool)

(assert (=> b!68034 (= c!9587 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!68036 () Bool)

(declare-fun e!44575 () Bool)

(assert (=> b!68036 (= e!44575 e!44577)))

(declare-fun res!36653 () Bool)

(assert (=> b!68036 (=> (not res!36653) (not e!44577))))

(declare-fun e!44578 () Bool)

(assert (=> b!68036 (= res!36653 (not e!44578))))

(declare-fun res!36655 () Bool)

(assert (=> b!68036 (=> (not res!36655) (not e!44578))))

(assert (=> b!68036 (= res!36655 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!5710 () Bool)

(assert (=> bm!5710 (= call!5713 (arrayNoDuplicates!0 (_keys!3787 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9587 (Cons!1487 (select (arr!1834 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!9224 (Cons!1487 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) Nil!1488) Nil!1488)) (ite c!9224 (Cons!1487 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) Nil!1488) Nil!1488))))))

(declare-fun b!68037 () Bool)

(assert (=> b!68037 (= e!44578 (contains!719 (ite c!9224 (Cons!1487 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) Nil!1488) Nil!1488) (select (arr!1834 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!68035 () Bool)

(assert (=> b!68035 (= e!44576 call!5713)))

(declare-fun d!14555 () Bool)

(declare-fun res!36654 () Bool)

(assert (=> d!14555 (=> res!36654 e!44575)))

(assert (=> d!14555 (= res!36654 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2069 (_keys!3787 newMap!16))))))

(assert (=> d!14555 (= (arrayNoDuplicates!0 (_keys!3787 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9224 (Cons!1487 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) Nil!1488) Nil!1488)) e!44575)))

(assert (= (and d!14555 (not res!36654)) b!68036))

(assert (= (and b!68036 res!36655) b!68037))

(assert (= (and b!68036 res!36653) b!68034))

(assert (= (and b!68034 c!9587) b!68035))

(assert (= (and b!68034 (not c!9587)) b!68033))

(assert (= (or b!68035 b!68033) bm!5710))

(assert (=> b!68034 m!62697))

(assert (=> b!68034 m!62697))

(assert (=> b!68034 m!62699))

(assert (=> b!68036 m!62697))

(assert (=> b!68036 m!62697))

(assert (=> b!68036 m!62699))

(assert (=> bm!5710 m!62697))

(declare-fun m!63447 () Bool)

(assert (=> bm!5710 m!63447))

(assert (=> b!68037 m!62697))

(assert (=> b!68037 m!62697))

(declare-fun m!63449 () Bool)

(assert (=> b!68037 m!63449))

(assert (=> bm!5568 d!14555))

(declare-fun b!68039 () Bool)

(declare-fun e!44579 () Option!135)

(declare-fun e!44580 () Option!135)

(assert (=> b!68039 (= e!44579 e!44580)))

(declare-fun c!9589 () Bool)

(assert (=> b!68039 (= c!9589 (and ((_ is Cons!1486) (t!4976 (toList!723 lt!28501))) (not (= (_1!1064 (h!2070 (t!4976 (toList!723 lt!28501)))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))))

(declare-fun d!14557 () Bool)

(declare-fun c!9588 () Bool)

(assert (=> d!14557 (= c!9588 (and ((_ is Cons!1486) (t!4976 (toList!723 lt!28501))) (= (_1!1064 (h!2070 (t!4976 (toList!723 lt!28501)))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355))))))

(assert (=> d!14557 (= (getValueByKey!129 (t!4976 (toList!723 lt!28501)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) e!44579)))

(declare-fun b!68040 () Bool)

(assert (=> b!68040 (= e!44580 (getValueByKey!129 (t!4976 (t!4976 (toList!723 lt!28501))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun b!68038 () Bool)

(assert (=> b!68038 (= e!44579 (Some!134 (_2!1064 (h!2070 (t!4976 (toList!723 lt!28501))))))))

(declare-fun b!68041 () Bool)

(assert (=> b!68041 (= e!44580 None!133)))

(assert (= (and d!14557 c!9588) b!68038))

(assert (= (and d!14557 (not c!9588)) b!68039))

(assert (= (and b!68039 c!9589) b!68040))

(assert (= (and b!68039 (not c!9589)) b!68041))

(assert (=> b!68040 m!60719))

(declare-fun m!63451 () Bool)

(assert (=> b!68040 m!63451))

(assert (=> b!66913 d!14557))

(assert (=> bm!5627 d!13909))

(declare-fun d!14559 () Bool)

(assert (=> d!14559 (= (get!1130 (getValueByKey!129 (toList!723 lt!28634) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2483 (getValueByKey!129 (toList!723 lt!28634) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!13895 d!14559))

(assert (=> d!13895 d!14439))

(declare-fun d!14561 () Bool)

(declare-fun e!44582 () Bool)

(assert (=> d!14561 e!44582))

(declare-fun res!36656 () Bool)

(assert (=> d!14561 (=> res!36656 e!44582)))

(declare-fun lt!29547 () Bool)

(assert (=> d!14561 (= res!36656 (not lt!29547))))

(declare-fun lt!29544 () Bool)

(assert (=> d!14561 (= lt!29547 lt!29544)))

(declare-fun lt!29545 () Unit!1836)

(declare-fun e!44581 () Unit!1836)

(assert (=> d!14561 (= lt!29545 e!44581)))

(declare-fun c!9590 () Bool)

(assert (=> d!14561 (= c!9590 lt!29544)))

(assert (=> d!14561 (= lt!29544 (containsKey!133 (toList!723 lt!29116) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> d!14561 (= (contains!716 lt!29116 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) lt!29547)))

(declare-fun b!68042 () Bool)

(declare-fun lt!29546 () Unit!1836)

(assert (=> b!68042 (= e!44581 lt!29546)))

(assert (=> b!68042 (= lt!29546 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!29116) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (=> b!68042 (isDefined!83 (getValueByKey!129 (toList!723 lt!29116) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!68043 () Bool)

(declare-fun Unit!1901 () Unit!1836)

(assert (=> b!68043 (= e!44581 Unit!1901)))

(declare-fun b!68044 () Bool)

(assert (=> b!68044 (= e!44582 (isDefined!83 (getValueByKey!129 (toList!723 lt!29116) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (= (and d!14561 c!9590) b!68042))

(assert (= (and d!14561 (not c!9590)) b!68043))

(assert (= (and d!14561 (not res!36656)) b!68044))

(declare-fun m!63453 () Bool)

(assert (=> d!14561 m!63453))

(declare-fun m!63455 () Bool)

(assert (=> b!68042 m!63455))

(assert (=> b!68042 m!61857))

(assert (=> b!68042 m!61857))

(declare-fun m!63457 () Bool)

(assert (=> b!68042 m!63457))

(assert (=> b!68044 m!61857))

(assert (=> b!68044 m!61857))

(assert (=> b!68044 m!63457))

(assert (=> d!13935 d!14561))

(declare-fun b!68046 () Bool)

(declare-fun e!44583 () Option!135)

(declare-fun e!44584 () Option!135)

(assert (=> b!68046 (= e!44583 e!44584)))

(declare-fun c!9592 () Bool)

(assert (=> b!68046 (= c!9592 (and ((_ is Cons!1486) lt!29118) (not (= (_1!1064 (h!2070 lt!29118)) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))))

(declare-fun c!9591 () Bool)

(declare-fun d!14563 () Bool)

(assert (=> d!14563 (= c!9591 (and ((_ is Cons!1486) lt!29118) (= (_1!1064 (h!2070 lt!29118)) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (=> d!14563 (= (getValueByKey!129 lt!29118 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) e!44583)))

(declare-fun b!68047 () Bool)

(assert (=> b!68047 (= e!44584 (getValueByKey!129 (t!4976 lt!29118) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!68045 () Bool)

(assert (=> b!68045 (= e!44583 (Some!134 (_2!1064 (h!2070 lt!29118))))))

(declare-fun b!68048 () Bool)

(assert (=> b!68048 (= e!44584 None!133)))

(assert (= (and d!14563 c!9591) b!68045))

(assert (= (and d!14563 (not c!9591)) b!68046))

(assert (= (and b!68046 c!9592) b!68047))

(assert (= (and b!68046 (not c!9592)) b!68048))

(declare-fun m!63459 () Bool)

(assert (=> b!68047 m!63459))

(assert (=> d!13935 d!14563))

(declare-fun d!14565 () Bool)

(assert (=> d!14565 (= (getValueByKey!129 lt!29118 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (Some!134 (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun lt!29548 () Unit!1836)

(assert (=> d!14565 (= lt!29548 (choose!376 lt!29118 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun e!44585 () Bool)

(assert (=> d!14565 e!44585))

(declare-fun res!36657 () Bool)

(assert (=> d!14565 (=> (not res!36657) (not e!44585))))

(assert (=> d!14565 (= res!36657 (isStrictlySorted!284 lt!29118))))

(assert (=> d!14565 (= (lemmaContainsTupThenGetReturnValue!48 lt!29118 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) lt!29548)))

(declare-fun b!68049 () Bool)

(declare-fun res!36658 () Bool)

(assert (=> b!68049 (=> (not res!36658) (not e!44585))))

(assert (=> b!68049 (= res!36658 (containsKey!133 lt!29118 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!68050 () Bool)

(assert (=> b!68050 (= e!44585 (contains!718 lt!29118 (tuple2!2109 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (= (and d!14565 res!36657) b!68049))

(assert (= (and b!68049 res!36658) b!68050))

(assert (=> d!14565 m!61851))

(declare-fun m!63461 () Bool)

(assert (=> d!14565 m!63461))

(declare-fun m!63463 () Bool)

(assert (=> d!14565 m!63463))

(declare-fun m!63465 () Bool)

(assert (=> b!68049 m!63465))

(declare-fun m!63467 () Bool)

(assert (=> b!68050 m!63467))

(assert (=> d!13935 d!14565))

(declare-fun b!68051 () Bool)

(declare-fun e!44587 () List!1490)

(declare-fun call!5715 () List!1490)

(assert (=> b!68051 (= e!44587 call!5715)))

(declare-fun b!68052 () Bool)

(declare-fun e!44586 () List!1490)

(declare-fun call!5714 () List!1490)

(assert (=> b!68052 (= e!44586 call!5714)))

(declare-fun bm!5711 () Bool)

(declare-fun call!5716 () List!1490)

(assert (=> bm!5711 (= call!5714 call!5716)))

(declare-fun e!44590 () List!1490)

(declare-fun c!9594 () Bool)

(declare-fun bm!5712 () Bool)

(assert (=> bm!5712 (= call!5715 ($colon$colon!62 e!44590 (ite c!9594 (h!2070 (toList!723 lt!28505)) (tuple2!2109 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))))

(declare-fun c!9596 () Bool)

(assert (=> bm!5712 (= c!9596 c!9594)))

(declare-fun d!14567 () Bool)

(declare-fun e!44588 () Bool)

(assert (=> d!14567 e!44588))

(declare-fun res!36660 () Bool)

(assert (=> d!14567 (=> (not res!36660) (not e!44588))))

(declare-fun lt!29549 () List!1490)

(assert (=> d!14567 (= res!36660 (isStrictlySorted!284 lt!29549))))

(assert (=> d!14567 (= lt!29549 e!44587)))

(assert (=> d!14567 (= c!9594 (and ((_ is Cons!1486) (toList!723 lt!28505)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28505))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (=> d!14567 (isStrictlySorted!284 (toList!723 lt!28505))))

(assert (=> d!14567 (= (insertStrictlySorted!50 (toList!723 lt!28505) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) lt!29549)))

(declare-fun bm!5713 () Bool)

(assert (=> bm!5713 (= call!5716 call!5715)))

(declare-fun b!68053 () Bool)

(assert (=> b!68053 (= e!44590 (insertStrictlySorted!50 (t!4976 (toList!723 lt!28505)) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!68054 () Bool)

(declare-fun c!9595 () Bool)

(assert (=> b!68054 (= c!9595 (and ((_ is Cons!1486) (toList!723 lt!28505)) (bvsgt (_1!1064 (h!2070 (toList!723 lt!28505))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun e!44589 () List!1490)

(assert (=> b!68054 (= e!44589 e!44586)))

(declare-fun b!68055 () Bool)

(assert (=> b!68055 (= e!44589 call!5716)))

(declare-fun b!68056 () Bool)

(declare-fun res!36659 () Bool)

(assert (=> b!68056 (=> (not res!36659) (not e!44588))))

(assert (=> b!68056 (= res!36659 (containsKey!133 lt!29549 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!68057 () Bool)

(assert (=> b!68057 (= e!44586 call!5714)))

(declare-fun c!9593 () Bool)

(declare-fun b!68058 () Bool)

(assert (=> b!68058 (= e!44590 (ite c!9593 (t!4976 (toList!723 lt!28505)) (ite c!9595 (Cons!1486 (h!2070 (toList!723 lt!28505)) (t!4976 (toList!723 lt!28505))) Nil!1487)))))

(declare-fun b!68059 () Bool)

(assert (=> b!68059 (= e!44588 (contains!718 lt!29549 (tuple2!2109 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun b!68060 () Bool)

(assert (=> b!68060 (= e!44587 e!44589)))

(assert (=> b!68060 (= c!9593 (and ((_ is Cons!1486) (toList!723 lt!28505)) (= (_1!1064 (h!2070 (toList!723 lt!28505))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (= (and d!14567 c!9594) b!68051))

(assert (= (and d!14567 (not c!9594)) b!68060))

(assert (= (and b!68060 c!9593) b!68055))

(assert (= (and b!68060 (not c!9593)) b!68054))

(assert (= (and b!68054 c!9595) b!68057))

(assert (= (and b!68054 (not c!9595)) b!68052))

(assert (= (or b!68057 b!68052) bm!5711))

(assert (= (or b!68055 bm!5711) bm!5713))

(assert (= (or b!68051 bm!5713) bm!5712))

(assert (= (and bm!5712 c!9596) b!68053))

(assert (= (and bm!5712 (not c!9596)) b!68058))

(assert (= (and d!14567 res!36660) b!68056))

(assert (= (and b!68056 res!36659) b!68059))

(declare-fun m!63469 () Bool)

(assert (=> bm!5712 m!63469))

(declare-fun m!63471 () Bool)

(assert (=> d!14567 m!63471))

(assert (=> d!14567 m!61357))

(declare-fun m!63473 () Bool)

(assert (=> b!68056 m!63473))

(declare-fun m!63475 () Bool)

(assert (=> b!68053 m!63475))

(declare-fun m!63477 () Bool)

(assert (=> b!68059 m!63477))

(assert (=> d!13935 d!14567))

(declare-fun b!68061 () Bool)

(declare-fun e!44596 () Bool)

(declare-fun call!5719 () Bool)

(assert (=> b!68061 (= e!44596 (not call!5719))))

(declare-fun bm!5714 () Bool)

(declare-fun call!5723 () ListLongMap!1415)

(assert (=> bm!5714 (= call!5723 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28755 (zeroValue!2055 newMap!16) lt!28502 #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun d!14569 () Bool)

(declare-fun e!44603 () Bool)

(assert (=> d!14569 e!44603))

(declare-fun res!36669 () Bool)

(assert (=> d!14569 (=> (not res!36669) (not e!44603))))

(assert (=> d!14569 (= res!36669 (or (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))))

(declare-fun lt!29570 () ListLongMap!1415)

(declare-fun lt!29557 () ListLongMap!1415)

(assert (=> d!14569 (= lt!29570 lt!29557)))

(declare-fun lt!29553 () Unit!1836)

(declare-fun e!44599 () Unit!1836)

(assert (=> d!14569 (= lt!29553 e!44599)))

(declare-fun c!9599 () Bool)

(declare-fun e!44597 () Bool)

(assert (=> d!14569 (= c!9599 e!44597)))

(declare-fun res!36662 () Bool)

(assert (=> d!14569 (=> (not res!36662) (not e!44597))))

(assert (=> d!14569 (= res!36662 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun e!44592 () ListLongMap!1415)

(assert (=> d!14569 (= lt!29557 e!44592)))

(declare-fun c!9600 () Bool)

(assert (=> d!14569 (= c!9600 (and (not (= (bvand lt!28755 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!28755 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14569 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14569 (= (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28755 (zeroValue!2055 newMap!16) lt!28502 #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29570)))

(declare-fun b!68062 () Bool)

(declare-fun call!5722 () ListLongMap!1415)

(assert (=> b!68062 (= e!44592 (+!87 call!5722 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)))))

(declare-fun b!68063 () Bool)

(declare-fun e!44600 () Bool)

(assert (=> b!68063 (= e!44596 e!44600)))

(declare-fun res!36664 () Bool)

(assert (=> b!68063 (= res!36664 call!5719)))

(assert (=> b!68063 (=> (not res!36664) (not e!44600))))

(declare-fun b!68064 () Bool)

(declare-fun e!44594 () ListLongMap!1415)

(assert (=> b!68064 (= e!44592 e!44594)))

(declare-fun c!9602 () Bool)

(assert (=> b!68064 (= c!9602 (and (not (= (bvand lt!28755 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!28755 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5715 () Bool)

(declare-fun call!5720 () ListLongMap!1415)

(declare-fun call!5718 () ListLongMap!1415)

(assert (=> bm!5715 (= call!5720 call!5718)))

(declare-fun b!68065 () Bool)

(declare-fun e!44595 () Bool)

(assert (=> b!68065 (= e!44603 e!44595)))

(declare-fun c!9597 () Bool)

(assert (=> b!68065 (= c!9597 (not (= (bvand lt!28755 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68066 () Bool)

(declare-fun call!5721 () Bool)

(assert (=> b!68066 (= e!44595 (not call!5721))))

(declare-fun b!68067 () Bool)

(declare-fun e!44601 () Bool)

(assert (=> b!68067 (= e!44595 e!44601)))

(declare-fun res!36668 () Bool)

(assert (=> b!68067 (= res!36668 call!5721)))

(assert (=> b!68067 (=> (not res!36668) (not e!44601))))

(declare-fun b!68068 () Bool)

(declare-fun lt!29571 () Unit!1836)

(assert (=> b!68068 (= e!44599 lt!29571)))

(declare-fun lt!29555 () ListLongMap!1415)

(assert (=> b!68068 (= lt!29555 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28755 (zeroValue!2055 newMap!16) lt!28502 #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29564 () (_ BitVec 64))

(assert (=> b!68068 (= lt!29564 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29558 () (_ BitVec 64))

(assert (=> b!68068 (= lt!29558 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29552 () Unit!1836)

(assert (=> b!68068 (= lt!29552 (addStillContains!48 lt!29555 lt!29564 (zeroValue!2055 newMap!16) lt!29558))))

(assert (=> b!68068 (contains!716 (+!87 lt!29555 (tuple2!2109 lt!29564 (zeroValue!2055 newMap!16))) lt!29558)))

(declare-fun lt!29562 () Unit!1836)

(assert (=> b!68068 (= lt!29562 lt!29552)))

(declare-fun lt!29569 () ListLongMap!1415)

(assert (=> b!68068 (= lt!29569 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28755 (zeroValue!2055 newMap!16) lt!28502 #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29560 () (_ BitVec 64))

(assert (=> b!68068 (= lt!29560 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29556 () (_ BitVec 64))

(assert (=> b!68068 (= lt!29556 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29567 () Unit!1836)

(assert (=> b!68068 (= lt!29567 (addApplyDifferent!48 lt!29569 lt!29560 lt!28502 lt!29556))))

(assert (=> b!68068 (= (apply!72 (+!87 lt!29569 (tuple2!2109 lt!29560 lt!28502)) lt!29556) (apply!72 lt!29569 lt!29556))))

(declare-fun lt!29550 () Unit!1836)

(assert (=> b!68068 (= lt!29550 lt!29567)))

(declare-fun lt!29566 () ListLongMap!1415)

(assert (=> b!68068 (= lt!29566 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28755 (zeroValue!2055 newMap!16) lt!28502 #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29561 () (_ BitVec 64))

(assert (=> b!68068 (= lt!29561 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29563 () (_ BitVec 64))

(assert (=> b!68068 (= lt!29563 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29551 () Unit!1836)

(assert (=> b!68068 (= lt!29551 (addApplyDifferent!48 lt!29566 lt!29561 (zeroValue!2055 newMap!16) lt!29563))))

(assert (=> b!68068 (= (apply!72 (+!87 lt!29566 (tuple2!2109 lt!29561 (zeroValue!2055 newMap!16))) lt!29563) (apply!72 lt!29566 lt!29563))))

(declare-fun lt!29565 () Unit!1836)

(assert (=> b!68068 (= lt!29565 lt!29551)))

(declare-fun lt!29554 () ListLongMap!1415)

(assert (=> b!68068 (= lt!29554 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28755 (zeroValue!2055 newMap!16) lt!28502 #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29559 () (_ BitVec 64))

(assert (=> b!68068 (= lt!29559 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29568 () (_ BitVec 64))

(assert (=> b!68068 (= lt!29568 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!68068 (= lt!29571 (addApplyDifferent!48 lt!29554 lt!29559 lt!28502 lt!29568))))

(assert (=> b!68068 (= (apply!72 (+!87 lt!29554 (tuple2!2109 lt!29559 lt!28502)) lt!29568) (apply!72 lt!29554 lt!29568))))

(declare-fun b!68069 () Bool)

(assert (=> b!68069 (= e!44597 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68070 () Bool)

(declare-fun Unit!1902 () Unit!1836)

(assert (=> b!68070 (= e!44599 Unit!1902)))

(declare-fun b!68071 () Bool)

(declare-fun res!36667 () Bool)

(assert (=> b!68071 (=> (not res!36667) (not e!44603))))

(assert (=> b!68071 (= res!36667 e!44596)))

(declare-fun c!9598 () Bool)

(assert (=> b!68071 (= c!9598 (not (= (bvand lt!28755 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5716 () Bool)

(assert (=> bm!5716 (= call!5718 call!5723)))

(declare-fun b!68072 () Bool)

(assert (=> b!68072 (= e!44601 (= (apply!72 lt!29570 #b1000000000000000000000000000000000000000000000000000000000000000) lt!28502))))

(declare-fun bm!5717 () Bool)

(assert (=> bm!5717 (= call!5722 (+!87 (ite c!9600 call!5723 (ite c!9602 call!5718 call!5720)) (ite (or c!9600 c!9602) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502))))))

(declare-fun b!68073 () Bool)

(declare-fun res!36663 () Bool)

(assert (=> b!68073 (=> (not res!36663) (not e!44603))))

(declare-fun e!44602 () Bool)

(assert (=> b!68073 (= res!36663 e!44602)))

(declare-fun res!36666 () Bool)

(assert (=> b!68073 (=> res!36666 e!44602)))

(declare-fun e!44598 () Bool)

(assert (=> b!68073 (= res!36666 (not e!44598))))

(declare-fun res!36661 () Bool)

(assert (=> b!68073 (=> (not res!36661) (not e!44598))))

(assert (=> b!68073 (= res!36661 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun b!68074 () Bool)

(declare-fun c!9601 () Bool)

(assert (=> b!68074 (= c!9601 (and (not (= (bvand lt!28755 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!28755 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!44591 () ListLongMap!1415)

(assert (=> b!68074 (= e!44594 e!44591)))

(declare-fun b!68075 () Bool)

(assert (=> b!68075 (= e!44591 call!5720)))

(declare-fun bm!5718 () Bool)

(declare-fun call!5717 () ListLongMap!1415)

(assert (=> bm!5718 (= call!5717 call!5722)))

(declare-fun bm!5719 () Bool)

(assert (=> bm!5719 (= call!5719 (contains!716 lt!29570 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68076 () Bool)

(assert (=> b!68076 (= e!44594 call!5717)))

(declare-fun b!68077 () Bool)

(assert (=> b!68077 (= e!44598 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68078 () Bool)

(assert (=> b!68078 (= e!44600 (= (apply!72 lt!29570 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2055 newMap!16)))))

(declare-fun b!68079 () Bool)

(assert (=> b!68079 (= e!44591 call!5717)))

(declare-fun b!68080 () Bool)

(declare-fun e!44593 () Bool)

(assert (=> b!68080 (= e!44602 e!44593)))

(declare-fun res!36665 () Bool)

(assert (=> b!68080 (=> (not res!36665) (not e!44593))))

(assert (=> b!68080 (= res!36665 (contains!716 lt!29570 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!68080 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun bm!5720 () Bool)

(assert (=> bm!5720 (= call!5721 (contains!716 lt!29570 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68081 () Bool)

(assert (=> b!68081 (= e!44593 (= (apply!72 lt!29570 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1127 (select (arr!1835 (_values!2130 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68081 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_values!2130 newMap!16))))))

(assert (=> b!68081 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (= (and d!14569 c!9600) b!68062))

(assert (= (and d!14569 (not c!9600)) b!68064))

(assert (= (and b!68064 c!9602) b!68076))

(assert (= (and b!68064 (not c!9602)) b!68074))

(assert (= (and b!68074 c!9601) b!68079))

(assert (= (and b!68074 (not c!9601)) b!68075))

(assert (= (or b!68079 b!68075) bm!5715))

(assert (= (or b!68076 bm!5715) bm!5716))

(assert (= (or b!68076 b!68079) bm!5718))

(assert (= (or b!68062 bm!5716) bm!5714))

(assert (= (or b!68062 bm!5718) bm!5717))

(assert (= (and d!14569 res!36662) b!68069))

(assert (= (and d!14569 c!9599) b!68068))

(assert (= (and d!14569 (not c!9599)) b!68070))

(assert (= (and d!14569 res!36669) b!68073))

(assert (= (and b!68073 res!36661) b!68077))

(assert (= (and b!68073 (not res!36666)) b!68080))

(assert (= (and b!68080 res!36665) b!68081))

(assert (= (and b!68073 res!36663) b!68071))

(assert (= (and b!68071 c!9598) b!68063))

(assert (= (and b!68071 (not c!9598)) b!68061))

(assert (= (and b!68063 res!36664) b!68078))

(assert (= (or b!68063 b!68061) bm!5719))

(assert (= (and b!68071 res!36667) b!68065))

(assert (= (and b!68065 c!9597) b!68067))

(assert (= (and b!68065 (not c!9597)) b!68066))

(assert (= (and b!68067 res!36668) b!68072))

(assert (= (or b!68067 b!68066) bm!5720))

(declare-fun b_lambda!3037 () Bool)

(assert (=> (not b_lambda!3037) (not b!68081)))

(assert (=> b!68081 t!4984))

(declare-fun b_and!4185 () Bool)

(assert (= b_and!4181 (and (=> t!4984 result!2595) b_and!4185)))

(assert (=> b!68081 t!4986))

(declare-fun b_and!4187 () Bool)

(assert (= b_and!4183 (and (=> t!4986 result!2597) b_and!4187)))

(declare-fun m!63479 () Bool)

(assert (=> bm!5719 m!63479))

(assert (=> b!68081 m!61523))

(assert (=> b!68081 m!61115))

(assert (=> b!68081 m!61525))

(assert (=> b!68081 m!61079))

(assert (=> b!68081 m!61079))

(declare-fun m!63481 () Bool)

(assert (=> b!68081 m!63481))

(assert (=> b!68081 m!61523))

(assert (=> b!68081 m!61115))

(assert (=> b!68080 m!61079))

(assert (=> b!68080 m!61079))

(declare-fun m!63483 () Bool)

(assert (=> b!68080 m!63483))

(declare-fun m!63485 () Bool)

(assert (=> b!68078 m!63485))

(assert (=> b!68077 m!61079))

(assert (=> b!68077 m!61079))

(assert (=> b!68077 m!61081))

(declare-fun m!63487 () Bool)

(assert (=> b!68072 m!63487))

(assert (=> d!14569 m!61069))

(declare-fun m!63489 () Bool)

(assert (=> b!68062 m!63489))

(declare-fun m!63491 () Bool)

(assert (=> bm!5714 m!63491))

(declare-fun m!63493 () Bool)

(assert (=> bm!5717 m!63493))

(declare-fun m!63495 () Bool)

(assert (=> b!68068 m!63495))

(declare-fun m!63497 () Bool)

(assert (=> b!68068 m!63497))

(declare-fun m!63499 () Bool)

(assert (=> b!68068 m!63499))

(declare-fun m!63501 () Bool)

(assert (=> b!68068 m!63501))

(declare-fun m!63503 () Bool)

(assert (=> b!68068 m!63503))

(declare-fun m!63505 () Bool)

(assert (=> b!68068 m!63505))

(declare-fun m!63507 () Bool)

(assert (=> b!68068 m!63507))

(assert (=> b!68068 m!63501))

(declare-fun m!63509 () Bool)

(assert (=> b!68068 m!63509))

(assert (=> b!68068 m!63491))

(declare-fun m!63511 () Bool)

(assert (=> b!68068 m!63511))

(declare-fun m!63513 () Bool)

(assert (=> b!68068 m!63513))

(assert (=> b!68068 m!63505))

(declare-fun m!63515 () Bool)

(assert (=> b!68068 m!63515))

(assert (=> b!68068 m!63495))

(declare-fun m!63517 () Bool)

(assert (=> b!68068 m!63517))

(declare-fun m!63519 () Bool)

(assert (=> b!68068 m!63519))

(assert (=> b!68068 m!61079))

(assert (=> b!68068 m!63517))

(declare-fun m!63521 () Bool)

(assert (=> b!68068 m!63521))

(declare-fun m!63523 () Bool)

(assert (=> b!68068 m!63523))

(assert (=> b!68069 m!61079))

(assert (=> b!68069 m!61079))

(assert (=> b!68069 m!61081))

(declare-fun m!63525 () Bool)

(assert (=> bm!5720 m!63525))

(assert (=> d!13747 d!14569))

(assert (=> d!13747 d!13873))

(declare-fun d!14571 () Bool)

(assert (=> d!14571 (= (+!87 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28755 (zeroValue!2055 newMap!16) lt!28502 #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(assert (=> d!14571 true))

(declare-fun _$8!55 () Unit!1836)

(assert (=> d!14571 (= (choose!375 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) lt!28755 (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) lt!28502 (defaultEntry!2147 newMap!16)) _$8!55)))

(declare-fun bs!2924 () Bool)

(assert (= bs!2924 d!14571))

(assert (=> bs!2924 m!60835))

(assert (=> bs!2924 m!60835))

(assert (=> bs!2924 m!61073))

(assert (=> bs!2924 m!61075))

(assert (=> d!13747 d!14571))

(assert (=> d!13747 d!14023))

(declare-fun d!14573 () Bool)

(declare-fun e!44604 () Bool)

(assert (=> d!14573 e!44604))

(declare-fun res!36671 () Bool)

(assert (=> d!14573 (=> (not res!36671) (not e!44604))))

(declare-fun lt!29573 () ListLongMap!1415)

(assert (=> d!14573 (= res!36671 (contains!716 lt!29573 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502))))))

(declare-fun lt!29575 () List!1490)

(assert (=> d!14573 (= lt!29573 (ListLongMap!1416 lt!29575))))

(declare-fun lt!29574 () Unit!1836)

(declare-fun lt!29572 () Unit!1836)

(assert (=> d!14573 (= lt!29574 lt!29572)))

(assert (=> d!14573 (= (getValueByKey!129 lt!29575 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502))) (Some!134 (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502))))))

(assert (=> d!14573 (= lt!29572 (lemmaContainsTupThenGetReturnValue!48 lt!29575 (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502))))))

(assert (=> d!14573 (= lt!29575 (insertStrictlySorted!50 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502))))))

(assert (=> d!14573 (= (+!87 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) lt!29573)))

(declare-fun b!68082 () Bool)

(declare-fun res!36670 () Bool)

(assert (=> b!68082 (=> (not res!36670) (not e!44604))))

(assert (=> b!68082 (= res!36670 (= (getValueByKey!129 (toList!723 lt!29573) (_1!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502))) (Some!134 (_2!1064 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)))))))

(declare-fun b!68083 () Bool)

(assert (=> b!68083 (= e!44604 (contains!718 (toList!723 lt!29573) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)))))

(assert (= (and d!14573 res!36671) b!68082))

(assert (= (and b!68082 res!36670) b!68083))

(declare-fun m!63527 () Bool)

(assert (=> d!14573 m!63527))

(declare-fun m!63529 () Bool)

(assert (=> d!14573 m!63529))

(declare-fun m!63531 () Bool)

(assert (=> d!14573 m!63531))

(declare-fun m!63533 () Bool)

(assert (=> d!14573 m!63533))

(declare-fun m!63535 () Bool)

(assert (=> b!68082 m!63535))

(declare-fun m!63537 () Bool)

(assert (=> b!68083 m!63537))

(assert (=> d!13747 d!14573))

(declare-fun d!14575 () Bool)

(declare-fun lt!29576 () Bool)

(assert (=> d!14575 (= lt!29576 (select (content!70 (toList!723 lt!28868)) (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun e!44605 () Bool)

(assert (=> d!14575 (= lt!29576 e!44605)))

(declare-fun res!36673 () Bool)

(assert (=> d!14575 (=> (not res!36673) (not e!44605))))

(assert (=> d!14575 (= res!36673 ((_ is Cons!1486) (toList!723 lt!28868)))))

(assert (=> d!14575 (= (contains!718 (toList!723 lt!28868) (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!29576)))

(declare-fun b!68084 () Bool)

(declare-fun e!44606 () Bool)

(assert (=> b!68084 (= e!44605 e!44606)))

(declare-fun res!36672 () Bool)

(assert (=> b!68084 (=> res!36672 e!44606)))

(assert (=> b!68084 (= res!36672 (= (h!2070 (toList!723 lt!28868)) (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!68085 () Bool)

(assert (=> b!68085 (= e!44606 (contains!718 (t!4976 (toList!723 lt!28868)) (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(assert (= (and d!14575 res!36673) b!68084))

(assert (= (and b!68084 (not res!36672)) b!68085))

(declare-fun m!63539 () Bool)

(assert (=> d!14575 m!63539))

(declare-fun m!63541 () Bool)

(assert (=> d!14575 m!63541))

(declare-fun m!63543 () Bool)

(assert (=> b!68085 m!63543))

(assert (=> b!66920 d!14575))

(assert (=> b!66834 d!14343))

(declare-fun b!68086 () Bool)

(declare-fun e!44608 () List!1490)

(declare-fun call!5725 () List!1490)

(assert (=> b!68086 (= e!44608 call!5725)))

(declare-fun b!68087 () Bool)

(declare-fun e!44607 () List!1490)

(declare-fun call!5724 () List!1490)

(assert (=> b!68087 (= e!44607 call!5724)))

(declare-fun bm!5721 () Bool)

(declare-fun call!5726 () List!1490)

(assert (=> bm!5721 (= call!5724 call!5726)))

(declare-fun c!9604 () Bool)

(declare-fun bm!5722 () Bool)

(declare-fun e!44611 () List!1490)

(assert (=> bm!5722 (= call!5725 ($colon$colon!62 e!44611 (ite c!9604 (h!2070 (t!4976 (toList!723 lt!28505))) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503)))))))

(declare-fun c!9606 () Bool)

(assert (=> bm!5722 (= c!9606 c!9604)))

(declare-fun d!14577 () Bool)

(declare-fun e!44609 () Bool)

(assert (=> d!14577 e!44609))

(declare-fun res!36675 () Bool)

(assert (=> d!14577 (=> (not res!36675) (not e!44609))))

(declare-fun lt!29577 () List!1490)

(assert (=> d!14577 (= res!36675 (isStrictlySorted!284 lt!29577))))

(assert (=> d!14577 (= lt!29577 e!44608)))

(assert (=> d!14577 (= c!9604 (and ((_ is Cons!1486) (t!4976 (toList!723 lt!28505))) (bvslt (_1!1064 (h!2070 (t!4976 (toList!723 lt!28505)))) (_1!1064 lt!28503))))))

(assert (=> d!14577 (isStrictlySorted!284 (t!4976 (toList!723 lt!28505)))))

(assert (=> d!14577 (= (insertStrictlySorted!50 (t!4976 (toList!723 lt!28505)) (_1!1064 lt!28503) (_2!1064 lt!28503)) lt!29577)))

(declare-fun bm!5723 () Bool)

(assert (=> bm!5723 (= call!5726 call!5725)))

(declare-fun b!68088 () Bool)

(assert (=> b!68088 (= e!44611 (insertStrictlySorted!50 (t!4976 (t!4976 (toList!723 lt!28505))) (_1!1064 lt!28503) (_2!1064 lt!28503)))))

(declare-fun b!68089 () Bool)

(declare-fun c!9605 () Bool)

(assert (=> b!68089 (= c!9605 (and ((_ is Cons!1486) (t!4976 (toList!723 lt!28505))) (bvsgt (_1!1064 (h!2070 (t!4976 (toList!723 lt!28505)))) (_1!1064 lt!28503))))))

(declare-fun e!44610 () List!1490)

(assert (=> b!68089 (= e!44610 e!44607)))

(declare-fun b!68090 () Bool)

(assert (=> b!68090 (= e!44610 call!5726)))

(declare-fun b!68091 () Bool)

(declare-fun res!36674 () Bool)

(assert (=> b!68091 (=> (not res!36674) (not e!44609))))

(assert (=> b!68091 (= res!36674 (containsKey!133 lt!29577 (_1!1064 lt!28503)))))

(declare-fun b!68092 () Bool)

(assert (=> b!68092 (= e!44607 call!5724)))

(declare-fun b!68093 () Bool)

(declare-fun c!9603 () Bool)

(assert (=> b!68093 (= e!44611 (ite c!9603 (t!4976 (t!4976 (toList!723 lt!28505))) (ite c!9605 (Cons!1486 (h!2070 (t!4976 (toList!723 lt!28505))) (t!4976 (t!4976 (toList!723 lt!28505)))) Nil!1487)))))

(declare-fun b!68094 () Bool)

(assert (=> b!68094 (= e!44609 (contains!718 lt!29577 (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))))))

(declare-fun b!68095 () Bool)

(assert (=> b!68095 (= e!44608 e!44610)))

(assert (=> b!68095 (= c!9603 (and ((_ is Cons!1486) (t!4976 (toList!723 lt!28505))) (= (_1!1064 (h!2070 (t!4976 (toList!723 lt!28505)))) (_1!1064 lt!28503))))))

(assert (= (and d!14577 c!9604) b!68086))

(assert (= (and d!14577 (not c!9604)) b!68095))

(assert (= (and b!68095 c!9603) b!68090))

(assert (= (and b!68095 (not c!9603)) b!68089))

(assert (= (and b!68089 c!9605) b!68092))

(assert (= (and b!68089 (not c!9605)) b!68087))

(assert (= (or b!68092 b!68087) bm!5721))

(assert (= (or b!68090 bm!5721) bm!5723))

(assert (= (or b!68086 bm!5723) bm!5722))

(assert (= (and bm!5722 c!9606) b!68088))

(assert (= (and bm!5722 (not c!9606)) b!68093))

(assert (= (and d!14577 res!36675) b!68091))

(assert (= (and b!68091 res!36674) b!68094))

(declare-fun m!63545 () Bool)

(assert (=> bm!5722 m!63545))

(declare-fun m!63547 () Bool)

(assert (=> d!14577 m!63547))

(assert (=> d!14577 m!62069))

(declare-fun m!63549 () Bool)

(assert (=> b!68091 m!63549))

(declare-fun m!63551 () Bool)

(assert (=> b!68088 m!63551))

(declare-fun m!63553 () Bool)

(assert (=> b!68094 m!63553))

(assert (=> b!67027 d!14577))

(declare-fun d!14579 () Bool)

(declare-fun lt!29578 () Bool)

(assert (=> d!14579 (= lt!29578 (select (content!70 (toList!723 lt!28848)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!44612 () Bool)

(assert (=> d!14579 (= lt!29578 e!44612)))

(declare-fun res!36677 () Bool)

(assert (=> d!14579 (=> (not res!36677) (not e!44612))))

(assert (=> d!14579 (= res!36677 ((_ is Cons!1486) (toList!723 lt!28848)))))

(assert (=> d!14579 (= (contains!718 (toList!723 lt!28848) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!29578)))

(declare-fun b!68096 () Bool)

(declare-fun e!44613 () Bool)

(assert (=> b!68096 (= e!44612 e!44613)))

(declare-fun res!36676 () Bool)

(assert (=> b!68096 (=> res!36676 e!44613)))

(assert (=> b!68096 (= res!36676 (= (h!2070 (toList!723 lt!28848)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!68097 () Bool)

(assert (=> b!68097 (= e!44613 (contains!718 (t!4976 (toList!723 lt!28848)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!14579 res!36677) b!68096))

(assert (= (and b!68096 (not res!36676)) b!68097))

(declare-fun m!63555 () Bool)

(assert (=> d!14579 m!63555))

(declare-fun m!63557 () Bool)

(assert (=> d!14579 m!63557))

(declare-fun m!63559 () Bool)

(assert (=> b!68097 m!63559))

(assert (=> b!66874 d!14579))

(declare-fun d!14581 () Bool)

(assert (=> d!14581 (= (apply!72 lt!28942 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1130 (getValueByKey!129 (toList!723 lt!28942) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2925 () Bool)

(assert (= bs!2925 d!14581))

(assert (=> bs!2925 m!62143))

(assert (=> bs!2925 m!62143))

(declare-fun m!63561 () Bool)

(assert (=> bs!2925 m!63561))

(assert (=> b!66991 d!14581))

(declare-fun b!68099 () Bool)

(declare-fun e!44614 () Option!135)

(declare-fun e!44615 () Option!135)

(assert (=> b!68099 (= e!44614 e!44615)))

(declare-fun c!9608 () Bool)

(assert (=> b!68099 (= c!9608 (and ((_ is Cons!1486) (t!4976 lt!28658)) (not (= (_1!1064 (h!2070 (t!4976 lt!28658))) (_1!1064 lt!28503)))))))

(declare-fun d!14583 () Bool)

(declare-fun c!9607 () Bool)

(assert (=> d!14583 (= c!9607 (and ((_ is Cons!1486) (t!4976 lt!28658)) (= (_1!1064 (h!2070 (t!4976 lt!28658))) (_1!1064 lt!28503))))))

(assert (=> d!14583 (= (getValueByKey!129 (t!4976 lt!28658) (_1!1064 lt!28503)) e!44614)))

(declare-fun b!68100 () Bool)

(assert (=> b!68100 (= e!44615 (getValueByKey!129 (t!4976 (t!4976 lt!28658)) (_1!1064 lt!28503)))))

(declare-fun b!68098 () Bool)

(assert (=> b!68098 (= e!44614 (Some!134 (_2!1064 (h!2070 (t!4976 lt!28658)))))))

(declare-fun b!68101 () Bool)

(assert (=> b!68101 (= e!44615 None!133)))

(assert (= (and d!14583 c!9607) b!68098))

(assert (= (and d!14583 (not c!9607)) b!68099))

(assert (= (and b!68099 c!9608) b!68100))

(assert (= (and b!68099 (not c!9608)) b!68101))

(declare-fun m!63563 () Bool)

(assert (=> b!68100 m!63563))

(assert (=> b!67021 d!14583))

(declare-fun d!14585 () Bool)

(assert (=> d!14585 (= (isEmpty!313 (toList!723 lt!28634)) ((_ is Nil!1487) (toList!723 lt!28634)))))

(assert (=> d!13749 d!14585))

(declare-fun d!14587 () Bool)

(assert (=> d!14587 (= (inRange!0 (ite c!9323 (index!3100 lt!28988) (index!3103 lt!28988)) (mask!6082 newMap!16)) (and (bvsge (ite c!9323 (index!3100 lt!28988) (index!3103 lt!28988)) #b00000000000000000000000000000000) (bvslt (ite c!9323 (index!3100 lt!28988) (index!3103 lt!28988)) (bvadd (mask!6082 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5617 d!14587))

(declare-fun d!14589 () Bool)

(declare-fun e!44616 () Bool)

(assert (=> d!14589 e!44616))

(declare-fun res!36679 () Bool)

(assert (=> d!14589 (=> (not res!36679) (not e!44616))))

(declare-fun lt!29580 () ListLongMap!1415)

(assert (=> d!14589 (= res!36679 (contains!716 lt!29580 (_1!1064 (ite (or c!9301 c!9303) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(declare-fun lt!29582 () List!1490)

(assert (=> d!14589 (= lt!29580 (ListLongMap!1416 lt!29582))))

(declare-fun lt!29581 () Unit!1836)

(declare-fun lt!29579 () Unit!1836)

(assert (=> d!14589 (= lt!29581 lt!29579)))

(assert (=> d!14589 (= (getValueByKey!129 lt!29582 (_1!1064 (ite (or c!9301 c!9303) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))) (Some!134 (_2!1064 (ite (or c!9301 c!9303) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(assert (=> d!14589 (= lt!29579 (lemmaContainsTupThenGetReturnValue!48 lt!29582 (_1!1064 (ite (or c!9301 c!9303) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) (_2!1064 (ite (or c!9301 c!9303) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(assert (=> d!14589 (= lt!29582 (insertStrictlySorted!50 (toList!723 (ite c!9301 call!5605 (ite c!9303 call!5600 call!5602))) (_1!1064 (ite (or c!9301 c!9303) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) (_2!1064 (ite (or c!9301 c!9303) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(assert (=> d!14589 (= (+!87 (ite c!9301 call!5605 (ite c!9303 call!5600 call!5602)) (ite (or c!9301 c!9303) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) lt!29580)))

(declare-fun b!68102 () Bool)

(declare-fun res!36678 () Bool)

(assert (=> b!68102 (=> (not res!36678) (not e!44616))))

(assert (=> b!68102 (= res!36678 (= (getValueByKey!129 (toList!723 lt!29580) (_1!1064 (ite (or c!9301 c!9303) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))) (Some!134 (_2!1064 (ite (or c!9301 c!9303) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))))

(declare-fun b!68103 () Bool)

(assert (=> b!68103 (= e!44616 (contains!718 (toList!723 lt!29580) (ite (or c!9301 c!9303) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(assert (= (and d!14589 res!36679) b!68102))

(assert (= (and b!68102 res!36678) b!68103))

(declare-fun m!63565 () Bool)

(assert (=> d!14589 m!63565))

(declare-fun m!63567 () Bool)

(assert (=> d!14589 m!63567))

(declare-fun m!63569 () Bool)

(assert (=> d!14589 m!63569))

(declare-fun m!63571 () Bool)

(assert (=> d!14589 m!63571))

(declare-fun m!63573 () Bool)

(assert (=> b!68102 m!63573))

(declare-fun m!63575 () Bool)

(assert (=> b!68103 m!63575))

(assert (=> bm!5599 d!14589))

(declare-fun d!14591 () Bool)

(declare-fun e!44618 () Bool)

(assert (=> d!14591 e!44618))

(declare-fun res!36680 () Bool)

(assert (=> d!14591 (=> res!36680 e!44618)))

(declare-fun lt!29586 () Bool)

(assert (=> d!14591 (= res!36680 (not lt!29586))))

(declare-fun lt!29583 () Bool)

(assert (=> d!14591 (= lt!29586 lt!29583)))

(declare-fun lt!29584 () Unit!1836)

(declare-fun e!44617 () Unit!1836)

(assert (=> d!14591 (= lt!29584 e!44617)))

(declare-fun c!9609 () Bool)

(assert (=> d!14591 (= c!9609 lt!29583)))

(assert (=> d!14591 (= lt!29583 (containsKey!133 (toList!723 lt!28879) (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!14591 (= (contains!716 lt!28879 (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29586)))

(declare-fun b!68104 () Bool)

(declare-fun lt!29585 () Unit!1836)

(assert (=> b!68104 (= e!44617 lt!29585)))

(assert (=> b!68104 (= lt!29585 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28879) (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> b!68104 (isDefined!83 (getValueByKey!129 (toList!723 lt!28879) (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!68105 () Bool)

(declare-fun Unit!1903 () Unit!1836)

(assert (=> b!68105 (= e!44617 Unit!1903)))

(declare-fun b!68106 () Bool)

(assert (=> b!68106 (= e!44618 (isDefined!83 (getValueByKey!129 (toList!723 lt!28879) (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14591 c!9609) b!68104))

(assert (= (and d!14591 (not c!9609)) b!68105))

(assert (= (and d!14591 (not res!36680)) b!68106))

(declare-fun m!63577 () Bool)

(assert (=> d!14591 m!63577))

(declare-fun m!63579 () Bool)

(assert (=> b!68104 m!63579))

(assert (=> b!68104 m!61423))

(assert (=> b!68104 m!61423))

(declare-fun m!63581 () Bool)

(assert (=> b!68104 m!63581))

(assert (=> b!68106 m!61423))

(assert (=> b!68106 m!61423))

(assert (=> b!68106 m!63581))

(assert (=> d!13841 d!14591))

(declare-fun b!68108 () Bool)

(declare-fun e!44619 () Option!135)

(declare-fun e!44620 () Option!135)

(assert (=> b!68108 (= e!44619 e!44620)))

(declare-fun c!9611 () Bool)

(assert (=> b!68108 (= c!9611 (and ((_ is Cons!1486) lt!28881) (not (= (_1!1064 (h!2070 lt!28881)) (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun d!14593 () Bool)

(declare-fun c!9610 () Bool)

(assert (=> d!14593 (= c!9610 (and ((_ is Cons!1486) lt!28881) (= (_1!1064 (h!2070 lt!28881)) (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14593 (= (getValueByKey!129 lt!28881 (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) e!44619)))

(declare-fun b!68109 () Bool)

(assert (=> b!68109 (= e!44620 (getValueByKey!129 (t!4976 lt!28881) (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!68107 () Bool)

(assert (=> b!68107 (= e!44619 (Some!134 (_2!1064 (h!2070 lt!28881))))))

(declare-fun b!68110 () Bool)

(assert (=> b!68110 (= e!44620 None!133)))

(assert (= (and d!14593 c!9610) b!68107))

(assert (= (and d!14593 (not c!9610)) b!68108))

(assert (= (and b!68108 c!9611) b!68109))

(assert (= (and b!68108 (not c!9611)) b!68110))

(declare-fun m!63583 () Bool)

(assert (=> b!68109 m!63583))

(assert (=> d!13841 d!14593))

(declare-fun d!14595 () Bool)

(assert (=> d!14595 (= (getValueByKey!129 lt!28881 (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun lt!29587 () Unit!1836)

(assert (=> d!14595 (= lt!29587 (choose!376 lt!28881 (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun e!44621 () Bool)

(assert (=> d!14595 e!44621))

(declare-fun res!36681 () Bool)

(assert (=> d!14595 (=> (not res!36681) (not e!44621))))

(assert (=> d!14595 (= res!36681 (isStrictlySorted!284 lt!28881))))

(assert (=> d!14595 (= (lemmaContainsTupThenGetReturnValue!48 lt!28881 (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29587)))

(declare-fun b!68111 () Bool)

(declare-fun res!36682 () Bool)

(assert (=> b!68111 (=> (not res!36682) (not e!44621))))

(assert (=> b!68111 (= res!36682 (containsKey!133 lt!28881 (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!68112 () Bool)

(assert (=> b!68112 (= e!44621 (contains!718 lt!28881 (tuple2!2109 (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14595 res!36681) b!68111))

(assert (= (and b!68111 res!36682) b!68112))

(assert (=> d!14595 m!61417))

(declare-fun m!63585 () Bool)

(assert (=> d!14595 m!63585))

(declare-fun m!63587 () Bool)

(assert (=> d!14595 m!63587))

(declare-fun m!63589 () Bool)

(assert (=> b!68111 m!63589))

(declare-fun m!63591 () Bool)

(assert (=> b!68112 m!63591))

(assert (=> d!13841 d!14595))

(declare-fun b!68113 () Bool)

(declare-fun e!44623 () List!1490)

(declare-fun call!5728 () List!1490)

(assert (=> b!68113 (= e!44623 call!5728)))

(declare-fun b!68114 () Bool)

(declare-fun e!44622 () List!1490)

(declare-fun call!5727 () List!1490)

(assert (=> b!68114 (= e!44622 call!5727)))

(declare-fun bm!5724 () Bool)

(declare-fun call!5729 () List!1490)

(assert (=> bm!5724 (= call!5727 call!5729)))

(declare-fun c!9613 () Bool)

(declare-fun bm!5725 () Bool)

(declare-fun e!44626 () List!1490)

(assert (=> bm!5725 (= call!5728 ($colon$colon!62 e!44626 (ite c!9613 (h!2070 (toList!723 lt!28608)) (tuple2!2109 (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun c!9615 () Bool)

(assert (=> bm!5725 (= c!9615 c!9613)))

(declare-fun d!14597 () Bool)

(declare-fun e!44624 () Bool)

(assert (=> d!14597 e!44624))

(declare-fun res!36684 () Bool)

(assert (=> d!14597 (=> (not res!36684) (not e!44624))))

(declare-fun lt!29588 () List!1490)

(assert (=> d!14597 (= res!36684 (isStrictlySorted!284 lt!29588))))

(assert (=> d!14597 (= lt!29588 e!44623)))

(assert (=> d!14597 (= c!9613 (and ((_ is Cons!1486) (toList!723 lt!28608)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28608))) (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14597 (isStrictlySorted!284 (toList!723 lt!28608))))

(assert (=> d!14597 (= (insertStrictlySorted!50 (toList!723 lt!28608) (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29588)))

(declare-fun bm!5726 () Bool)

(assert (=> bm!5726 (= call!5729 call!5728)))

(declare-fun b!68115 () Bool)

(assert (=> b!68115 (= e!44626 (insertStrictlySorted!50 (t!4976 (toList!723 lt!28608)) (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun c!9614 () Bool)

(declare-fun b!68116 () Bool)

(assert (=> b!68116 (= c!9614 (and ((_ is Cons!1486) (toList!723 lt!28608)) (bvsgt (_1!1064 (h!2070 (toList!723 lt!28608))) (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun e!44625 () List!1490)

(assert (=> b!68116 (= e!44625 e!44622)))

(declare-fun b!68117 () Bool)

(assert (=> b!68117 (= e!44625 call!5729)))

(declare-fun b!68118 () Bool)

(declare-fun res!36683 () Bool)

(assert (=> b!68118 (=> (not res!36683) (not e!44624))))

(assert (=> b!68118 (= res!36683 (containsKey!133 lt!29588 (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!68119 () Bool)

(assert (=> b!68119 (= e!44622 call!5727)))

(declare-fun b!68120 () Bool)

(declare-fun c!9612 () Bool)

(assert (=> b!68120 (= e!44626 (ite c!9612 (t!4976 (toList!723 lt!28608)) (ite c!9614 (Cons!1486 (h!2070 (toList!723 lt!28608)) (t!4976 (toList!723 lt!28608))) Nil!1487)))))

(declare-fun b!68121 () Bool)

(assert (=> b!68121 (= e!44624 (contains!718 lt!29588 (tuple2!2109 (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!68122 () Bool)

(assert (=> b!68122 (= e!44623 e!44625)))

(assert (=> b!68122 (= c!9612 (and ((_ is Cons!1486) (toList!723 lt!28608)) (= (_1!1064 (h!2070 (toList!723 lt!28608))) (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14597 c!9613) b!68113))

(assert (= (and d!14597 (not c!9613)) b!68122))

(assert (= (and b!68122 c!9612) b!68117))

(assert (= (and b!68122 (not c!9612)) b!68116))

(assert (= (and b!68116 c!9614) b!68119))

(assert (= (and b!68116 (not c!9614)) b!68114))

(assert (= (or b!68119 b!68114) bm!5724))

(assert (= (or b!68117 bm!5724) bm!5726))

(assert (= (or b!68113 bm!5726) bm!5725))

(assert (= (and bm!5725 c!9615) b!68115))

(assert (= (and bm!5725 (not c!9615)) b!68120))

(assert (= (and d!14597 res!36684) b!68118))

(assert (= (and b!68118 res!36683) b!68121))

(declare-fun m!63593 () Bool)

(assert (=> bm!5725 m!63593))

(declare-fun m!63595 () Bool)

(assert (=> d!14597 m!63595))

(declare-fun m!63597 () Bool)

(assert (=> d!14597 m!63597))

(declare-fun m!63599 () Bool)

(assert (=> b!68118 m!63599))

(declare-fun m!63601 () Bool)

(assert (=> b!68115 m!63601))

(declare-fun m!63603 () Bool)

(assert (=> b!68121 m!63603))

(assert (=> d!13841 d!14597))

(declare-fun lt!29589 () Bool)

(declare-fun d!14599 () Bool)

(assert (=> d!14599 (= lt!29589 (select (content!70 (toList!723 lt!28900)) (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun e!44627 () Bool)

(assert (=> d!14599 (= lt!29589 e!44627)))

(declare-fun res!36686 () Bool)

(assert (=> d!14599 (=> (not res!36686) (not e!44627))))

(assert (=> d!14599 (= res!36686 ((_ is Cons!1486) (toList!723 lt!28900)))))

(assert (=> d!14599 (= (contains!718 (toList!723 lt!28900) (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) lt!29589)))

(declare-fun b!68123 () Bool)

(declare-fun e!44628 () Bool)

(assert (=> b!68123 (= e!44627 e!44628)))

(declare-fun res!36685 () Bool)

(assert (=> b!68123 (=> res!36685 e!44628)))

(assert (=> b!68123 (= res!36685 (= (h!2070 (toList!723 lt!28900)) (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!68124 () Bool)

(assert (=> b!68124 (= e!44628 (contains!718 (t!4976 (toList!723 lt!28900)) (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(assert (= (and d!14599 res!36686) b!68123))

(assert (= (and b!68123 (not res!36685)) b!68124))

(declare-fun m!63605 () Bool)

(assert (=> d!14599 m!63605))

(declare-fun m!63607 () Bool)

(assert (=> d!14599 m!63607))

(declare-fun m!63609 () Bool)

(assert (=> b!68124 m!63609))

(assert (=> b!66940 d!14599))

(declare-fun d!14601 () Bool)

(declare-fun e!44630 () Bool)

(assert (=> d!14601 e!44630))

(declare-fun res!36687 () Bool)

(assert (=> d!14601 (=> res!36687 e!44630)))

(declare-fun lt!29593 () Bool)

(assert (=> d!14601 (= res!36687 (not lt!29593))))

(declare-fun lt!29590 () Bool)

(assert (=> d!14601 (= lt!29593 lt!29590)))

(declare-fun lt!29591 () Unit!1836)

(declare-fun e!44629 () Unit!1836)

(assert (=> d!14601 (= lt!29591 e!44629)))

(declare-fun c!9616 () Bool)

(assert (=> d!14601 (= c!9616 lt!29590)))

(assert (=> d!14601 (= lt!29590 (containsKey!133 (toList!723 lt!28900) (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (=> d!14601 (= (contains!716 lt!28900 (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))) lt!29593)))

(declare-fun b!68125 () Bool)

(declare-fun lt!29592 () Unit!1836)

(assert (=> b!68125 (= e!44629 lt!29592)))

(assert (=> b!68125 (= lt!29592 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28900) (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (=> b!68125 (isDefined!83 (getValueByKey!129 (toList!723 lt!28900) (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun b!68126 () Bool)

(declare-fun Unit!1904 () Unit!1836)

(assert (=> b!68126 (= e!44629 Unit!1904)))

(declare-fun b!68127 () Bool)

(assert (=> b!68127 (= e!44630 (isDefined!83 (getValueByKey!129 (toList!723 lt!28900) (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))))

(assert (= (and d!14601 c!9616) b!68125))

(assert (= (and d!14601 (not c!9616)) b!68126))

(assert (= (and d!14601 (not res!36687)) b!68127))

(declare-fun m!63611 () Bool)

(assert (=> d!14601 m!63611))

(declare-fun m!63613 () Bool)

(assert (=> b!68125 m!63613))

(assert (=> b!68125 m!61491))

(assert (=> b!68125 m!61491))

(declare-fun m!63615 () Bool)

(assert (=> b!68125 m!63615))

(assert (=> b!68127 m!61491))

(assert (=> b!68127 m!61491))

(assert (=> b!68127 m!63615))

(assert (=> d!13859 d!14601))

(declare-fun b!68129 () Bool)

(declare-fun e!44631 () Option!135)

(declare-fun e!44632 () Option!135)

(assert (=> b!68129 (= e!44631 e!44632)))

(declare-fun c!9618 () Bool)

(assert (=> b!68129 (= c!9618 (and ((_ is Cons!1486) lt!28902) (not (= (_1!1064 (h!2070 lt!28902)) (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))))

(declare-fun d!14603 () Bool)

(declare-fun c!9617 () Bool)

(assert (=> d!14603 (= c!9617 (and ((_ is Cons!1486) lt!28902) (= (_1!1064 (h!2070 lt!28902)) (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))))

(assert (=> d!14603 (= (getValueByKey!129 lt!28902 (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))) e!44631)))

(declare-fun b!68130 () Bool)

(assert (=> b!68130 (= e!44632 (getValueByKey!129 (t!4976 lt!28902) (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun b!68128 () Bool)

(assert (=> b!68128 (= e!44631 (Some!134 (_2!1064 (h!2070 lt!28902))))))

(declare-fun b!68131 () Bool)

(assert (=> b!68131 (= e!44632 None!133)))

(assert (= (and d!14603 c!9617) b!68128))

(assert (= (and d!14603 (not c!9617)) b!68129))

(assert (= (and b!68129 c!9618) b!68130))

(assert (= (and b!68129 (not c!9618)) b!68131))

(declare-fun m!63617 () Bool)

(assert (=> b!68130 m!63617))

(assert (=> d!13859 d!14603))

(declare-fun d!14605 () Bool)

(assert (=> d!14605 (= (getValueByKey!129 lt!28902 (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))) (Some!134 (_2!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun lt!29594 () Unit!1836)

(assert (=> d!14605 (= lt!29594 (choose!376 lt!28902 (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (_2!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun e!44633 () Bool)

(assert (=> d!14605 e!44633))

(declare-fun res!36688 () Bool)

(assert (=> d!14605 (=> (not res!36688) (not e!44633))))

(assert (=> d!14605 (= res!36688 (isStrictlySorted!284 lt!28902))))

(assert (=> d!14605 (= (lemmaContainsTupThenGetReturnValue!48 lt!28902 (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (_2!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))) lt!29594)))

(declare-fun b!68132 () Bool)

(declare-fun res!36689 () Bool)

(assert (=> b!68132 (=> (not res!36689) (not e!44633))))

(assert (=> b!68132 (= res!36689 (containsKey!133 lt!28902 (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun b!68133 () Bool)

(assert (=> b!68133 (= e!44633 (contains!718 lt!28902 (tuple2!2109 (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (_2!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))))

(assert (= (and d!14605 res!36688) b!68132))

(assert (= (and b!68132 res!36689) b!68133))

(assert (=> d!14605 m!61485))

(declare-fun m!63619 () Bool)

(assert (=> d!14605 m!63619))

(declare-fun m!63621 () Bool)

(assert (=> d!14605 m!63621))

(declare-fun m!63623 () Bool)

(assert (=> b!68132 m!63623))

(declare-fun m!63625 () Bool)

(assert (=> b!68133 m!63625))

(assert (=> d!13859 d!14605))

(declare-fun b!68134 () Bool)

(declare-fun e!44635 () List!1490)

(declare-fun call!5731 () List!1490)

(assert (=> b!68134 (= e!44635 call!5731)))

(declare-fun b!68135 () Bool)

(declare-fun e!44634 () List!1490)

(declare-fun call!5730 () List!1490)

(assert (=> b!68135 (= e!44634 call!5730)))

(declare-fun bm!5727 () Bool)

(declare-fun call!5732 () List!1490)

(assert (=> bm!5727 (= call!5730 call!5732)))

(declare-fun bm!5728 () Bool)

(declare-fun c!9620 () Bool)

(declare-fun e!44638 () List!1490)

(assert (=> bm!5728 (= call!5731 ($colon$colon!62 e!44638 (ite c!9620 (h!2070 (toList!723 e!43730)) (tuple2!2109 (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (_2!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))))

(declare-fun c!9622 () Bool)

(assert (=> bm!5728 (= c!9622 c!9620)))

(declare-fun d!14607 () Bool)

(declare-fun e!44636 () Bool)

(assert (=> d!14607 e!44636))

(declare-fun res!36691 () Bool)

(assert (=> d!14607 (=> (not res!36691) (not e!44636))))

(declare-fun lt!29595 () List!1490)

(assert (=> d!14607 (= res!36691 (isStrictlySorted!284 lt!29595))))

(assert (=> d!14607 (= lt!29595 e!44635)))

(assert (=> d!14607 (= c!9620 (and ((_ is Cons!1486) (toList!723 e!43730)) (bvslt (_1!1064 (h!2070 (toList!723 e!43730))) (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))))

(assert (=> d!14607 (isStrictlySorted!284 (toList!723 e!43730))))

(assert (=> d!14607 (= (insertStrictlySorted!50 (toList!723 e!43730) (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (_2!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))) lt!29595)))

(declare-fun bm!5729 () Bool)

(assert (=> bm!5729 (= call!5732 call!5731)))

(declare-fun b!68136 () Bool)

(assert (=> b!68136 (= e!44638 (insertStrictlySorted!50 (t!4976 (toList!723 e!43730)) (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (_2!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun c!9621 () Bool)

(declare-fun b!68137 () Bool)

(assert (=> b!68137 (= c!9621 (and ((_ is Cons!1486) (toList!723 e!43730)) (bvsgt (_1!1064 (h!2070 (toList!723 e!43730))) (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))))

(declare-fun e!44637 () List!1490)

(assert (=> b!68137 (= e!44637 e!44634)))

(declare-fun b!68138 () Bool)

(assert (=> b!68138 (= e!44637 call!5732)))

(declare-fun b!68139 () Bool)

(declare-fun res!36690 () Bool)

(assert (=> b!68139 (=> (not res!36690) (not e!44636))))

(assert (=> b!68139 (= res!36690 (containsKey!133 lt!29595 (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun b!68140 () Bool)

(assert (=> b!68140 (= e!44634 call!5730)))

(declare-fun b!68141 () Bool)

(declare-fun c!9619 () Bool)

(assert (=> b!68141 (= e!44638 (ite c!9619 (t!4976 (toList!723 e!43730)) (ite c!9621 (Cons!1486 (h!2070 (toList!723 e!43730)) (t!4976 (toList!723 e!43730))) Nil!1487)))))

(declare-fun b!68142 () Bool)

(assert (=> b!68142 (= e!44636 (contains!718 lt!29595 (tuple2!2109 (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) (_2!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))))

(declare-fun b!68143 () Bool)

(assert (=> b!68143 (= e!44635 e!44637)))

(assert (=> b!68143 (= c!9619 (and ((_ is Cons!1486) (toList!723 e!43730)) (= (_1!1064 (h!2070 (toList!723 e!43730))) (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))))

(assert (= (and d!14607 c!9620) b!68134))

(assert (= (and d!14607 (not c!9620)) b!68143))

(assert (= (and b!68143 c!9619) b!68138))

(assert (= (and b!68143 (not c!9619)) b!68137))

(assert (= (and b!68137 c!9621) b!68140))

(assert (= (and b!68137 (not c!9621)) b!68135))

(assert (= (or b!68140 b!68135) bm!5727))

(assert (= (or b!68138 bm!5727) bm!5729))

(assert (= (or b!68134 bm!5729) bm!5728))

(assert (= (and bm!5728 c!9622) b!68136))

(assert (= (and bm!5728 (not c!9622)) b!68141))

(assert (= (and d!14607 res!36691) b!68139))

(assert (= (and b!68139 res!36690) b!68142))

(declare-fun m!63627 () Bool)

(assert (=> bm!5728 m!63627))

(declare-fun m!63629 () Bool)

(assert (=> d!14607 m!63629))

(declare-fun m!63631 () Bool)

(assert (=> d!14607 m!63631))

(declare-fun m!63633 () Bool)

(assert (=> b!68139 m!63633))

(declare-fun m!63635 () Bool)

(assert (=> b!68136 m!63635))

(declare-fun m!63637 () Bool)

(assert (=> b!68142 m!63637))

(assert (=> d!13859 d!14607))

(declare-fun d!14609 () Bool)

(declare-fun c!9623 () Bool)

(assert (=> d!14609 (= c!9623 ((_ is Nil!1487) (toList!723 lt!28648)))))

(declare-fun e!44639 () (InoxSet tuple2!2108))

(assert (=> d!14609 (= (content!70 (toList!723 lt!28648)) e!44639)))

(declare-fun b!68144 () Bool)

(assert (=> b!68144 (= e!44639 ((as const (Array tuple2!2108 Bool)) false))))

(declare-fun b!68145 () Bool)

(assert (=> b!68145 (= e!44639 ((_ map or) (store ((as const (Array tuple2!2108 Bool)) false) (h!2070 (toList!723 lt!28648)) true) (content!70 (t!4976 (toList!723 lt!28648)))))))

(assert (= (and d!14609 c!9623) b!68144))

(assert (= (and d!14609 (not c!9623)) b!68145))

(declare-fun m!63639 () Bool)

(assert (=> b!68145 m!63639))

(assert (=> b!68145 m!61979))

(assert (=> d!13925 d!14609))

(declare-fun d!14611 () Bool)

(assert (=> d!14611 (= ($colon$colon!62 e!43884 (ite c!9286 (h!2070 (toList!723 lt!28505)) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500)))) (Cons!1486 (ite c!9286 (h!2070 (toList!723 lt!28505)) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))) e!43884))))

(assert (=> bm!5591 d!14611))

(assert (=> b!66864 d!14013))

(assert (=> b!66864 d!14015))

(declare-fun d!14613 () Bool)

(declare-fun lt!29596 () Bool)

(assert (=> d!14613 (= lt!29596 (select (content!70 lt!28809) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))))))

(declare-fun e!44640 () Bool)

(assert (=> d!14613 (= lt!29596 e!44640)))

(declare-fun res!36693 () Bool)

(assert (=> d!14613 (=> (not res!36693) (not e!44640))))

(assert (=> d!14613 (= res!36693 ((_ is Cons!1486) lt!28809))))

(assert (=> d!14613 (= (contains!718 lt!28809 (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))) lt!29596)))

(declare-fun b!68146 () Bool)

(declare-fun e!44641 () Bool)

(assert (=> b!68146 (= e!44640 e!44641)))

(declare-fun res!36692 () Bool)

(assert (=> b!68146 (=> res!36692 e!44641)))

(assert (=> b!68146 (= res!36692 (= (h!2070 lt!28809) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))))))

(declare-fun b!68147 () Bool)

(assert (=> b!68147 (= e!44641 (contains!718 (t!4976 lt!28809) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))))))

(assert (= (and d!14613 res!36693) b!68146))

(assert (= (and b!68146 (not res!36692)) b!68147))

(declare-fun m!63641 () Bool)

(assert (=> d!14613 m!63641))

(declare-fun m!63643 () Bool)

(assert (=> d!14613 m!63643))

(declare-fun m!63645 () Bool)

(assert (=> b!68147 m!63645))

(assert (=> b!66803 d!14613))

(declare-fun d!14615 () Bool)

(assert (=> d!14615 (= (apply!72 lt!28798 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1130 (getValueByKey!129 (toList!723 lt!28798) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2926 () Bool)

(assert (= bs!2926 d!14615))

(assert (=> bs!2926 m!62553))

(assert (=> bs!2926 m!62553))

(declare-fun m!63647 () Bool)

(assert (=> bs!2926 m!63647))

(assert (=> b!66758 d!14615))

(declare-fun b!68149 () Bool)

(declare-fun e!44642 () Option!135)

(declare-fun e!44643 () Option!135)

(assert (=> b!68149 (= e!44642 e!44643)))

(declare-fun c!9625 () Bool)

(assert (=> b!68149 (= c!9625 (and ((_ is Cons!1486) (toList!723 lt!29116)) (not (= (_1!1064 (h!2070 (toList!723 lt!29116))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))))

(declare-fun d!14617 () Bool)

(declare-fun c!9624 () Bool)

(assert (=> d!14617 (= c!9624 (and ((_ is Cons!1486) (toList!723 lt!29116)) (= (_1!1064 (h!2070 (toList!723 lt!29116))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(assert (=> d!14617 (= (getValueByKey!129 (toList!723 lt!29116) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))) e!44642)))

(declare-fun b!68150 () Bool)

(assert (=> b!68150 (= e!44643 (getValueByKey!129 (t!4976 (toList!723 lt!29116)) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))

(declare-fun b!68148 () Bool)

(assert (=> b!68148 (= e!44642 (Some!134 (_2!1064 (h!2070 (toList!723 lt!29116)))))))

(declare-fun b!68151 () Bool)

(assert (=> b!68151 (= e!44643 None!133)))

(assert (= (and d!14617 c!9624) b!68148))

(assert (= (and d!14617 (not c!9624)) b!68149))

(assert (= (and b!68149 c!9625) b!68150))

(assert (= (and b!68149 (not c!9625)) b!68151))

(declare-fun m!63649 () Bool)

(assert (=> b!68150 m!63649))

(assert (=> b!67160 d!14617))

(declare-fun b!68153 () Bool)

(declare-fun e!44644 () Option!135)

(declare-fun e!44645 () Option!135)

(assert (=> b!68153 (= e!44644 e!44645)))

(declare-fun c!9627 () Bool)

(assert (=> b!68153 (= c!9627 (and ((_ is Cons!1486) (t!4976 lt!28650)) (not (= (_1!1064 (h!2070 (t!4976 lt!28650))) (_1!1064 lt!28500)))))))

(declare-fun d!14619 () Bool)

(declare-fun c!9626 () Bool)

(assert (=> d!14619 (= c!9626 (and ((_ is Cons!1486) (t!4976 lt!28650)) (= (_1!1064 (h!2070 (t!4976 lt!28650))) (_1!1064 lt!28500))))))

(assert (=> d!14619 (= (getValueByKey!129 (t!4976 lt!28650) (_1!1064 lt!28500)) e!44644)))

(declare-fun b!68154 () Bool)

(assert (=> b!68154 (= e!44645 (getValueByKey!129 (t!4976 (t!4976 lt!28650)) (_1!1064 lt!28500)))))

(declare-fun b!68152 () Bool)

(assert (=> b!68152 (= e!44644 (Some!134 (_2!1064 (h!2070 (t!4976 lt!28650)))))))

(declare-fun b!68155 () Bool)

(assert (=> b!68155 (= e!44645 None!133)))

(assert (= (and d!14619 c!9626) b!68152))

(assert (= (and d!14619 (not c!9626)) b!68153))

(assert (= (and b!68153 c!9627) b!68154))

(assert (= (and b!68153 (not c!9627)) b!68155))

(declare-fun m!63651 () Bool)

(assert (=> b!68154 m!63651))

(assert (=> b!66767 d!14619))

(declare-fun d!14621 () Bool)

(declare-fun e!44647 () Bool)

(assert (=> d!14621 e!44647))

(declare-fun res!36694 () Bool)

(assert (=> d!14621 (=> res!36694 e!44647)))

(declare-fun lt!29600 () Bool)

(assert (=> d!14621 (= res!36694 (not lt!29600))))

(declare-fun lt!29597 () Bool)

(assert (=> d!14621 (= lt!29600 lt!29597)))

(declare-fun lt!29598 () Unit!1836)

(declare-fun e!44646 () Unit!1836)

(assert (=> d!14621 (= lt!29598 e!44646)))

(declare-fun c!9628 () Bool)

(assert (=> d!14621 (= c!9628 lt!29597)))

(assert (=> d!14621 (= lt!29597 (containsKey!133 (toList!723 lt!28848) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14621 (= (contains!716 lt!28848 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!29600)))

(declare-fun b!68156 () Bool)

(declare-fun lt!29599 () Unit!1836)

(assert (=> b!68156 (= e!44646 lt!29599)))

(assert (=> b!68156 (= lt!29599 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28848) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!68156 (isDefined!83 (getValueByKey!129 (toList!723 lt!28848) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!68157 () Bool)

(declare-fun Unit!1905 () Unit!1836)

(assert (=> b!68157 (= e!44646 Unit!1905)))

(declare-fun b!68158 () Bool)

(assert (=> b!68158 (= e!44647 (isDefined!83 (getValueByKey!129 (toList!723 lt!28848) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!14621 c!9628) b!68156))

(assert (= (and d!14621 (not c!9628)) b!68157))

(assert (= (and d!14621 (not res!36694)) b!68158))

(declare-fun m!63653 () Bool)

(assert (=> d!14621 m!63653))

(declare-fun m!63655 () Bool)

(assert (=> b!68156 m!63655))

(assert (=> b!68156 m!61311))

(assert (=> b!68156 m!61311))

(declare-fun m!63657 () Bool)

(assert (=> b!68156 m!63657))

(assert (=> b!68158 m!61311))

(assert (=> b!68158 m!61311))

(assert (=> b!68158 m!63657))

(assert (=> d!13803 d!14621))

(declare-fun b!68160 () Bool)

(declare-fun e!44648 () Option!135)

(declare-fun e!44649 () Option!135)

(assert (=> b!68160 (= e!44648 e!44649)))

(declare-fun c!9630 () Bool)

(assert (=> b!68160 (= c!9630 (and ((_ is Cons!1486) lt!28850) (not (= (_1!1064 (h!2070 lt!28850)) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!9629 () Bool)

(declare-fun d!14623 () Bool)

(assert (=> d!14623 (= c!9629 (and ((_ is Cons!1486) lt!28850) (= (_1!1064 (h!2070 lt!28850)) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!14623 (= (getValueByKey!129 lt!28850 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!44648)))

(declare-fun b!68161 () Bool)

(assert (=> b!68161 (= e!44649 (getValueByKey!129 (t!4976 lt!28850) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!68159 () Bool)

(assert (=> b!68159 (= e!44648 (Some!134 (_2!1064 (h!2070 lt!28850))))))

(declare-fun b!68162 () Bool)

(assert (=> b!68162 (= e!44649 None!133)))

(assert (= (and d!14623 c!9629) b!68159))

(assert (= (and d!14623 (not c!9629)) b!68160))

(assert (= (and b!68160 c!9630) b!68161))

(assert (= (and b!68160 (not c!9630)) b!68162))

(declare-fun m!63659 () Bool)

(assert (=> b!68161 m!63659))

(assert (=> d!13803 d!14623))

(declare-fun d!14625 () Bool)

(assert (=> d!14625 (= (getValueByKey!129 lt!28850 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!134 (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!29601 () Unit!1836)

(assert (=> d!14625 (= lt!29601 (choose!376 lt!28850 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!44650 () Bool)

(assert (=> d!14625 e!44650))

(declare-fun res!36695 () Bool)

(assert (=> d!14625 (=> (not res!36695) (not e!44650))))

(assert (=> d!14625 (= res!36695 (isStrictlySorted!284 lt!28850))))

(assert (=> d!14625 (= (lemmaContainsTupThenGetReturnValue!48 lt!28850 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!29601)))

(declare-fun b!68163 () Bool)

(declare-fun res!36696 () Bool)

(assert (=> b!68163 (=> (not res!36696) (not e!44650))))

(assert (=> b!68163 (= res!36696 (containsKey!133 lt!28850 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!68164 () Bool)

(assert (=> b!68164 (= e!44650 (contains!718 lt!28850 (tuple2!2109 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!14625 res!36695) b!68163))

(assert (= (and b!68163 res!36696) b!68164))

(assert (=> d!14625 m!61305))

(declare-fun m!63661 () Bool)

(assert (=> d!14625 m!63661))

(declare-fun m!63663 () Bool)

(assert (=> d!14625 m!63663))

(declare-fun m!63665 () Bool)

(assert (=> b!68163 m!63665))

(declare-fun m!63667 () Bool)

(assert (=> b!68164 m!63667))

(assert (=> d!13803 d!14625))

(declare-fun b!68165 () Bool)

(declare-fun e!44652 () List!1490)

(declare-fun call!5734 () List!1490)

(assert (=> b!68165 (= e!44652 call!5734)))

(declare-fun b!68166 () Bool)

(declare-fun e!44651 () List!1490)

(declare-fun call!5733 () List!1490)

(assert (=> b!68166 (= e!44651 call!5733)))

(declare-fun bm!5730 () Bool)

(declare-fun call!5735 () List!1490)

(assert (=> bm!5730 (= call!5733 call!5735)))

(declare-fun bm!5731 () Bool)

(declare-fun e!44655 () List!1490)

(declare-fun c!9632 () Bool)

(assert (=> bm!5731 (= call!5734 ($colon$colon!62 e!44655 (ite c!9632 (h!2070 (toList!723 call!5492)) (tuple2!2109 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!9634 () Bool)

(assert (=> bm!5731 (= c!9634 c!9632)))

(declare-fun d!14627 () Bool)

(declare-fun e!44653 () Bool)

(assert (=> d!14627 e!44653))

(declare-fun res!36698 () Bool)

(assert (=> d!14627 (=> (not res!36698) (not e!44653))))

(declare-fun lt!29602 () List!1490)

(assert (=> d!14627 (= res!36698 (isStrictlySorted!284 lt!29602))))

(assert (=> d!14627 (= lt!29602 e!44652)))

(assert (=> d!14627 (= c!9632 (and ((_ is Cons!1486) (toList!723 call!5492)) (bvslt (_1!1064 (h!2070 (toList!723 call!5492))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!14627 (isStrictlySorted!284 (toList!723 call!5492))))

(assert (=> d!14627 (= (insertStrictlySorted!50 (toList!723 call!5492) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!29602)))

(declare-fun bm!5732 () Bool)

(assert (=> bm!5732 (= call!5735 call!5734)))

(declare-fun b!68167 () Bool)

(assert (=> b!68167 (= e!44655 (insertStrictlySorted!50 (t!4976 (toList!723 call!5492)) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!9633 () Bool)

(declare-fun b!68168 () Bool)

(assert (=> b!68168 (= c!9633 (and ((_ is Cons!1486) (toList!723 call!5492)) (bvsgt (_1!1064 (h!2070 (toList!723 call!5492))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!44654 () List!1490)

(assert (=> b!68168 (= e!44654 e!44651)))

(declare-fun b!68169 () Bool)

(assert (=> b!68169 (= e!44654 call!5735)))

(declare-fun b!68170 () Bool)

(declare-fun res!36697 () Bool)

(assert (=> b!68170 (=> (not res!36697) (not e!44653))))

(assert (=> b!68170 (= res!36697 (containsKey!133 lt!29602 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!68171 () Bool)

(assert (=> b!68171 (= e!44651 call!5733)))

(declare-fun c!9631 () Bool)

(declare-fun b!68172 () Bool)

(assert (=> b!68172 (= e!44655 (ite c!9631 (t!4976 (toList!723 call!5492)) (ite c!9633 (Cons!1486 (h!2070 (toList!723 call!5492)) (t!4976 (toList!723 call!5492))) Nil!1487)))))

(declare-fun b!68173 () Bool)

(assert (=> b!68173 (= e!44653 (contains!718 lt!29602 (tuple2!2109 (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!68174 () Bool)

(assert (=> b!68174 (= e!44652 e!44654)))

(assert (=> b!68174 (= c!9631 (and ((_ is Cons!1486) (toList!723 call!5492)) (= (_1!1064 (h!2070 (toList!723 call!5492))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!14627 c!9632) b!68165))

(assert (= (and d!14627 (not c!9632)) b!68174))

(assert (= (and b!68174 c!9631) b!68169))

(assert (= (and b!68174 (not c!9631)) b!68168))

(assert (= (and b!68168 c!9633) b!68171))

(assert (= (and b!68168 (not c!9633)) b!68166))

(assert (= (or b!68171 b!68166) bm!5730))

(assert (= (or b!68169 bm!5730) bm!5732))

(assert (= (or b!68165 bm!5732) bm!5731))

(assert (= (and bm!5731 c!9634) b!68167))

(assert (= (and bm!5731 (not c!9634)) b!68172))

(assert (= (and d!14627 res!36698) b!68170))

(assert (= (and b!68170 res!36697) b!68173))

(declare-fun m!63669 () Bool)

(assert (=> bm!5731 m!63669))

(declare-fun m!63671 () Bool)

(assert (=> d!14627 m!63671))

(declare-fun m!63673 () Bool)

(assert (=> d!14627 m!63673))

(declare-fun m!63675 () Bool)

(assert (=> b!68170 m!63675))

(declare-fun m!63677 () Bool)

(assert (=> b!68167 m!63677))

(declare-fun m!63679 () Bool)

(assert (=> b!68173 m!63679))

(assert (=> d!13803 d!14627))

(declare-fun d!14629 () Bool)

(declare-fun e!44657 () Bool)

(assert (=> d!14629 e!44657))

(declare-fun res!36699 () Bool)

(assert (=> d!14629 (=> res!36699 e!44657)))

(declare-fun lt!29606 () Bool)

(assert (=> d!14629 (= res!36699 (not lt!29606))))

(declare-fun lt!29603 () Bool)

(assert (=> d!14629 (= lt!29606 lt!29603)))

(declare-fun lt!29604 () Unit!1836)

(declare-fun e!44656 () Unit!1836)

(assert (=> d!14629 (= lt!29604 e!44656)))

(declare-fun c!9635 () Bool)

(assert (=> d!14629 (= c!9635 lt!29603)))

(assert (=> d!14629 (= lt!29603 (containsKey!133 (toList!723 lt!28868) (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> d!14629 (= (contains!716 lt!28868 (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29606)))

(declare-fun b!68175 () Bool)

(declare-fun lt!29605 () Unit!1836)

(assert (=> b!68175 (= e!44656 lt!29605)))

(assert (=> b!68175 (= lt!29605 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28868) (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(assert (=> b!68175 (isDefined!83 (getValueByKey!129 (toList!723 lt!28868) (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!68176 () Bool)

(declare-fun Unit!1906 () Unit!1836)

(assert (=> b!68176 (= e!44656 Unit!1906)))

(declare-fun b!68177 () Bool)

(assert (=> b!68177 (= e!44657 (isDefined!83 (getValueByKey!129 (toList!723 lt!28868) (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14629 c!9635) b!68175))

(assert (= (and d!14629 (not c!9635)) b!68176))

(assert (= (and d!14629 (not res!36699)) b!68177))

(declare-fun m!63681 () Bool)

(assert (=> d!14629 m!63681))

(declare-fun m!63683 () Bool)

(assert (=> b!68175 m!63683))

(assert (=> b!68175 m!61399))

(assert (=> b!68175 m!61399))

(declare-fun m!63685 () Bool)

(assert (=> b!68175 m!63685))

(assert (=> b!68177 m!61399))

(assert (=> b!68177 m!61399))

(assert (=> b!68177 m!63685))

(assert (=> d!13835 d!14629))

(declare-fun b!68179 () Bool)

(declare-fun e!44658 () Option!135)

(declare-fun e!44659 () Option!135)

(assert (=> b!68179 (= e!44658 e!44659)))

(declare-fun c!9637 () Bool)

(assert (=> b!68179 (= c!9637 (and ((_ is Cons!1486) lt!28870) (not (= (_1!1064 (h!2070 lt!28870)) (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun d!14631 () Bool)

(declare-fun c!9636 () Bool)

(assert (=> d!14631 (= c!9636 (and ((_ is Cons!1486) lt!28870) (= (_1!1064 (h!2070 lt!28870)) (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14631 (= (getValueByKey!129 lt!28870 (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) e!44658)))

(declare-fun b!68180 () Bool)

(assert (=> b!68180 (= e!44659 (getValueByKey!129 (t!4976 lt!28870) (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!68178 () Bool)

(assert (=> b!68178 (= e!44658 (Some!134 (_2!1064 (h!2070 lt!28870))))))

(declare-fun b!68181 () Bool)

(assert (=> b!68181 (= e!44659 None!133)))

(assert (= (and d!14631 c!9636) b!68178))

(assert (= (and d!14631 (not c!9636)) b!68179))

(assert (= (and b!68179 c!9637) b!68180))

(assert (= (and b!68179 (not c!9637)) b!68181))

(declare-fun m!63687 () Bool)

(assert (=> b!68180 m!63687))

(assert (=> d!13835 d!14631))

(declare-fun d!14633 () Bool)

(assert (=> d!14633 (= (getValueByKey!129 lt!28870 (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) (Some!134 (_2!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun lt!29607 () Unit!1836)

(assert (=> d!14633 (= lt!29607 (choose!376 lt!28870 (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun e!44660 () Bool)

(assert (=> d!14633 e!44660))

(declare-fun res!36700 () Bool)

(assert (=> d!14633 (=> (not res!36700) (not e!44660))))

(assert (=> d!14633 (= res!36700 (isStrictlySorted!284 lt!28870))))

(assert (=> d!14633 (= (lemmaContainsTupThenGetReturnValue!48 lt!28870 (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29607)))

(declare-fun b!68182 () Bool)

(declare-fun res!36701 () Bool)

(assert (=> b!68182 (=> (not res!36701) (not e!44660))))

(assert (=> b!68182 (= res!36701 (containsKey!133 lt!28870 (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!68183 () Bool)

(assert (=> b!68183 (= e!44660 (contains!718 lt!28870 (tuple2!2109 (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14633 res!36700) b!68182))

(assert (= (and b!68182 res!36701) b!68183))

(assert (=> d!14633 m!61393))

(declare-fun m!63689 () Bool)

(assert (=> d!14633 m!63689))

(declare-fun m!63691 () Bool)

(assert (=> d!14633 m!63691))

(declare-fun m!63693 () Bool)

(assert (=> b!68182 m!63693))

(declare-fun m!63695 () Bool)

(assert (=> b!68183 m!63695))

(assert (=> d!13835 d!14633))

(declare-fun b!68184 () Bool)

(declare-fun e!44662 () List!1490)

(declare-fun call!5737 () List!1490)

(assert (=> b!68184 (= e!44662 call!5737)))

(declare-fun b!68185 () Bool)

(declare-fun e!44661 () List!1490)

(declare-fun call!5736 () List!1490)

(assert (=> b!68185 (= e!44661 call!5736)))

(declare-fun bm!5733 () Bool)

(declare-fun call!5738 () List!1490)

(assert (=> bm!5733 (= call!5736 call!5738)))

(declare-fun c!9639 () Bool)

(declare-fun bm!5734 () Bool)

(declare-fun e!44665 () List!1490)

(assert (=> bm!5734 (= call!5737 ($colon$colon!62 e!44665 (ite c!9639 (h!2070 (toList!723 lt!28611)) (tuple2!2109 (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun c!9641 () Bool)

(assert (=> bm!5734 (= c!9641 c!9639)))

(declare-fun d!14635 () Bool)

(declare-fun e!44663 () Bool)

(assert (=> d!14635 e!44663))

(declare-fun res!36703 () Bool)

(assert (=> d!14635 (=> (not res!36703) (not e!44663))))

(declare-fun lt!29608 () List!1490)

(assert (=> d!14635 (= res!36703 (isStrictlySorted!284 lt!29608))))

(assert (=> d!14635 (= lt!29608 e!44662)))

(assert (=> d!14635 (= c!9639 (and ((_ is Cons!1486) (toList!723 lt!28611)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28611))) (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14635 (isStrictlySorted!284 (toList!723 lt!28611))))

(assert (=> d!14635 (= (insertStrictlySorted!50 (toList!723 lt!28611) (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) lt!29608)))

(declare-fun bm!5735 () Bool)

(assert (=> bm!5735 (= call!5738 call!5737)))

(declare-fun b!68186 () Bool)

(assert (=> b!68186 (= e!44665 (insertStrictlySorted!50 (t!4976 (toList!723 lt!28611)) (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!68187 () Bool)

(declare-fun c!9640 () Bool)

(assert (=> b!68187 (= c!9640 (and ((_ is Cons!1486) (toList!723 lt!28611)) (bvsgt (_1!1064 (h!2070 (toList!723 lt!28611))) (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun e!44664 () List!1490)

(assert (=> b!68187 (= e!44664 e!44661)))

(declare-fun b!68188 () Bool)

(assert (=> b!68188 (= e!44664 call!5738)))

(declare-fun b!68189 () Bool)

(declare-fun res!36702 () Bool)

(assert (=> b!68189 (=> (not res!36702) (not e!44663))))

(assert (=> b!68189 (= res!36702 (containsKey!133 lt!29608 (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!68190 () Bool)

(assert (=> b!68190 (= e!44661 call!5736)))

(declare-fun b!68191 () Bool)

(declare-fun c!9638 () Bool)

(assert (=> b!68191 (= e!44665 (ite c!9638 (t!4976 (toList!723 lt!28611)) (ite c!9640 (Cons!1486 (h!2070 (toList!723 lt!28611)) (t!4976 (toList!723 lt!28611))) Nil!1487)))))

(declare-fun b!68192 () Bool)

(assert (=> b!68192 (= e!44663 (contains!718 lt!29608 (tuple2!2109 (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))) (_2!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(declare-fun b!68193 () Bool)

(assert (=> b!68193 (= e!44662 e!44664)))

(assert (=> b!68193 (= c!9638 (and ((_ is Cons!1486) (toList!723 lt!28611)) (= (_1!1064 (h!2070 (toList!723 lt!28611))) (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (= (and d!14635 c!9639) b!68184))

(assert (= (and d!14635 (not c!9639)) b!68193))

(assert (= (and b!68193 c!9638) b!68188))

(assert (= (and b!68193 (not c!9638)) b!68187))

(assert (= (and b!68187 c!9640) b!68190))

(assert (= (and b!68187 (not c!9640)) b!68185))

(assert (= (or b!68190 b!68185) bm!5733))

(assert (= (or b!68188 bm!5733) bm!5735))

(assert (= (or b!68184 bm!5735) bm!5734))

(assert (= (and bm!5734 c!9641) b!68186))

(assert (= (and bm!5734 (not c!9641)) b!68191))

(assert (= (and d!14635 res!36703) b!68189))

(assert (= (and b!68189 res!36702) b!68192))

(declare-fun m!63697 () Bool)

(assert (=> bm!5734 m!63697))

(declare-fun m!63699 () Bool)

(assert (=> d!14635 m!63699))

(declare-fun m!63701 () Bool)

(assert (=> d!14635 m!63701))

(declare-fun m!63703 () Bool)

(assert (=> b!68189 m!63703))

(declare-fun m!63705 () Bool)

(assert (=> b!68186 m!63705))

(declare-fun m!63707 () Bool)

(assert (=> b!68192 m!63707))

(assert (=> d!13835 d!14635))

(declare-fun d!14637 () Bool)

(assert (=> d!14637 (= ($colon$colon!62 e!43824 (ite c!9252 (h!2070 (toList!723 (+!87 lt!28505 lt!28503))) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500)))) (Cons!1486 (ite c!9252 (h!2070 (toList!723 (+!87 lt!28505 lt!28503))) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))) e!43824))))

(assert (=> bm!5583 d!14637))

(declare-fun b!68195 () Bool)

(declare-fun e!44666 () Option!135)

(declare-fun e!44667 () Option!135)

(assert (=> b!68195 (= e!44666 e!44667)))

(declare-fun c!9643 () Bool)

(assert (=> b!68195 (= c!9643 (and ((_ is Cons!1486) (t!4976 (toList!723 lt!28656))) (not (= (_1!1064 (h!2070 (t!4976 (toList!723 lt!28656)))) (_1!1064 lt!28503)))))))

(declare-fun d!14639 () Bool)

(declare-fun c!9642 () Bool)

(assert (=> d!14639 (= c!9642 (and ((_ is Cons!1486) (t!4976 (toList!723 lt!28656))) (= (_1!1064 (h!2070 (t!4976 (toList!723 lt!28656)))) (_1!1064 lt!28503))))))

(assert (=> d!14639 (= (getValueByKey!129 (t!4976 (toList!723 lt!28656)) (_1!1064 lt!28503)) e!44666)))

(declare-fun b!68196 () Bool)

(assert (=> b!68196 (= e!44667 (getValueByKey!129 (t!4976 (t!4976 (toList!723 lt!28656))) (_1!1064 lt!28503)))))

(declare-fun b!68194 () Bool)

(assert (=> b!68194 (= e!44666 (Some!134 (_2!1064 (h!2070 (t!4976 (toList!723 lt!28656))))))))

(declare-fun b!68197 () Bool)

(assert (=> b!68197 (= e!44667 None!133)))

(assert (= (and d!14639 c!9642) b!68194))

(assert (= (and d!14639 (not c!9642)) b!68195))

(assert (= (and b!68195 c!9643) b!68196))

(assert (= (and b!68195 (not c!9643)) b!68197))

(declare-fun m!63709 () Bool)

(assert (=> b!68196 m!63709))

(assert (=> b!67133 d!14639))

(declare-fun d!14641 () Bool)

(declare-fun e!44668 () Bool)

(assert (=> d!14641 e!44668))

(declare-fun res!36705 () Bool)

(assert (=> d!14641 (=> (not res!36705) (not e!44668))))

(declare-fun lt!29610 () ListLongMap!1415)

(assert (=> d!14641 (= res!36705 (contains!716 lt!29610 (_1!1064 (ite (or c!9237 c!9239) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(declare-fun lt!29612 () List!1490)

(assert (=> d!14641 (= lt!29610 (ListLongMap!1416 lt!29612))))

(declare-fun lt!29611 () Unit!1836)

(declare-fun lt!29609 () Unit!1836)

(assert (=> d!14641 (= lt!29611 lt!29609)))

(assert (=> d!14641 (= (getValueByKey!129 lt!29612 (_1!1064 (ite (or c!9237 c!9239) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))) (Some!134 (_2!1064 (ite (or c!9237 c!9239) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(assert (=> d!14641 (= lt!29609 (lemmaContainsTupThenGetReturnValue!48 lt!29612 (_1!1064 (ite (or c!9237 c!9239) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) (_2!1064 (ite (or c!9237 c!9239) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(assert (=> d!14641 (= lt!29612 (insertStrictlySorted!50 (toList!723 (ite c!9237 call!5578 (ite c!9239 call!5573 call!5575))) (_1!1064 (ite (or c!9237 c!9239) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) (_2!1064 (ite (or c!9237 c!9239) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(assert (=> d!14641 (= (+!87 (ite c!9237 call!5578 (ite c!9239 call!5573 call!5575)) (ite (or c!9237 c!9239) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) lt!29610)))

(declare-fun b!68198 () Bool)

(declare-fun res!36704 () Bool)

(assert (=> b!68198 (=> (not res!36704) (not e!44668))))

(assert (=> b!68198 (= res!36704 (= (getValueByKey!129 (toList!723 lt!29610) (_1!1064 (ite (or c!9237 c!9239) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))) (Some!134 (_2!1064 (ite (or c!9237 c!9239) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))))

(declare-fun b!68199 () Bool)

(assert (=> b!68199 (= e!44668 (contains!718 (toList!723 lt!29610) (ite (or c!9237 c!9239) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9205 c!9204) lt!28502 (zeroValue!2055 newMap!16))) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(assert (= (and d!14641 res!36705) b!68198))

(assert (= (and b!68198 res!36704) b!68199))

(declare-fun m!63711 () Bool)

(assert (=> d!14641 m!63711))

(declare-fun m!63713 () Bool)

(assert (=> d!14641 m!63713))

(declare-fun m!63715 () Bool)

(assert (=> d!14641 m!63715))

(declare-fun m!63717 () Bool)

(assert (=> d!14641 m!63717))

(declare-fun m!63719 () Bool)

(assert (=> b!68198 m!63719))

(declare-fun m!63721 () Bool)

(assert (=> b!68199 m!63721))

(assert (=> bm!5572 d!14641))

(declare-fun b!68201 () Bool)

(declare-fun e!44669 () Option!135)

(declare-fun e!44670 () Option!135)

(assert (=> b!68201 (= e!44669 e!44670)))

(declare-fun c!9645 () Bool)

(assert (=> b!68201 (= c!9645 (and ((_ is Cons!1486) (toList!723 lt!28879)) (not (= (_1!1064 (h!2070 (toList!723 lt!28879))) (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun d!14643 () Bool)

(declare-fun c!9644 () Bool)

(assert (=> d!14643 (= c!9644 (and ((_ is Cons!1486) (toList!723 lt!28879)) (= (_1!1064 (h!2070 (toList!723 lt!28879))) (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14643 (= (getValueByKey!129 (toList!723 lt!28879) (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))) e!44669)))

(declare-fun b!68202 () Bool)

(assert (=> b!68202 (= e!44670 (getValueByKey!129 (t!4976 (toList!723 lt!28879)) (_1!1064 (tuple2!2109 lt!28603 (zeroValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!68200 () Bool)

(assert (=> b!68200 (= e!44669 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28879)))))))

(declare-fun b!68203 () Bool)

(assert (=> b!68203 (= e!44670 None!133)))

(assert (= (and d!14643 c!9644) b!68200))

(assert (= (and d!14643 (not c!9644)) b!68201))

(assert (= (and b!68201 c!9645) b!68202))

(assert (= (and b!68201 (not c!9645)) b!68203))

(declare-fun m!63723 () Bool)

(assert (=> b!68202 m!63723))

(assert (=> b!66928 d!14643))

(assert (=> b!66877 d!13979))

(assert (=> b!66877 d!13981))

(declare-fun d!14645 () Bool)

(assert (=> d!14645 (isDefined!83 (getValueByKey!129 (toList!723 lt!28656) (_1!1064 lt!28503)))))

(declare-fun lt!29613 () Unit!1836)

(assert (=> d!14645 (= lt!29613 (choose!378 (toList!723 lt!28656) (_1!1064 lt!28503)))))

(declare-fun e!44671 () Bool)

(assert (=> d!14645 e!44671))

(declare-fun res!36706 () Bool)

(assert (=> d!14645 (=> (not res!36706) (not e!44671))))

(assert (=> d!14645 (= res!36706 (isStrictlySorted!284 (toList!723 lt!28656)))))

(assert (=> d!14645 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28656) (_1!1064 lt!28503)) lt!29613)))

(declare-fun b!68204 () Bool)

(assert (=> b!68204 (= e!44671 (containsKey!133 (toList!723 lt!28656) (_1!1064 lt!28503)))))

(assert (= (and d!14645 res!36706) b!68204))

(assert (=> d!14645 m!60957))

(assert (=> d!14645 m!60957))

(assert (=> d!14645 m!61629))

(declare-fun m!63725 () Bool)

(assert (=> d!14645 m!63725))

(declare-fun m!63727 () Bool)

(assert (=> d!14645 m!63727))

(assert (=> b!68204 m!61625))

(assert (=> b!67016 d!14645))

(assert (=> b!67016 d!14481))

(assert (=> b!67016 d!13913))

(assert (=> b!66717 d!14035))

(declare-fun d!14647 () Bool)

(declare-fun res!36707 () Bool)

(declare-fun e!44672 () Bool)

(assert (=> d!14647 (=> res!36707 e!44672)))

(assert (=> d!14647 (= res!36707 (= (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (=> d!14647 (= (arrayContainsKey!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!44672)))

(declare-fun b!68205 () Bool)

(declare-fun e!44673 () Bool)

(assert (=> b!68205 (= e!44672 e!44673)))

(declare-fun res!36708 () Bool)

(assert (=> b!68205 (=> (not res!36708) (not e!44673))))

(assert (=> b!68205 (= res!36708 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2069 (_keys!3787 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!68206 () Bool)

(assert (=> b!68206 (= e!44673 (arrayContainsKey!0 (_keys!3787 (v!2479 (underlying!252 thiss!992))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!14647 (not res!36707)) b!68205))

(assert (= (and b!68205 res!36708) b!68206))

(assert (=> d!14647 m!62953))

(assert (=> b!68206 m!60719))

(declare-fun m!63729 () Bool)

(assert (=> b!68206 m!63729))

(assert (=> b!67145 d!14647))

(declare-fun d!14649 () Bool)

(assert (=> d!14649 (isDefined!83 (getValueByKey!129 (toList!723 lt!28634) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!29614 () Unit!1836)

(assert (=> d!14649 (= lt!29614 (choose!378 (toList!723 lt!28634) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!44674 () Bool)

(assert (=> d!14649 e!44674))

(declare-fun res!36709 () Bool)

(assert (=> d!14649 (=> (not res!36709) (not e!44674))))

(assert (=> d!14649 (= res!36709 (isStrictlySorted!284 (toList!723 lt!28634)))))

(assert (=> d!14649 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28634) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!29614)))

(declare-fun b!68207 () Bool)

(assert (=> b!68207 (= e!44674 (containsKey!133 (toList!723 lt!28634) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!14649 res!36709) b!68207))

(assert (=> d!14649 m!60843))

(assert (=> d!14649 m!61685))

(assert (=> d!14649 m!61685))

(assert (=> d!14649 m!61777))

(assert (=> d!14649 m!60843))

(declare-fun m!63731 () Bool)

(assert (=> d!14649 m!63731))

(assert (=> d!14649 m!62033))

(assert (=> b!68207 m!60843))

(assert (=> b!68207 m!61773))

(assert (=> b!67128 d!14649))

(assert (=> b!67128 d!14437))

(assert (=> b!67128 d!14439))

(declare-fun d!14651 () Bool)

(assert (=> d!14651 (isDefined!83 (getValueByKey!129 (toList!723 call!5567) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760)))))))

(declare-fun lt!29615 () Unit!1836)

(assert (=> d!14651 (= lt!29615 (choose!378 (toList!723 call!5567) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760)))))))

(declare-fun e!44675 () Bool)

(assert (=> d!14651 e!44675))

(declare-fun res!36710 () Bool)

(assert (=> d!14651 (=> (not res!36710) (not e!44675))))

(assert (=> d!14651 (= res!36710 (isStrictlySorted!284 (toList!723 call!5567)))))

(assert (=> d!14651 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 call!5567) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760)))) lt!29615)))

(declare-fun b!68208 () Bool)

(assert (=> b!68208 (= e!44675 (containsKey!133 (toList!723 call!5567) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760)))))))

(assert (= (and d!14651 res!36710) b!68208))

(assert (=> d!14651 m!61785))

(assert (=> d!14651 m!61785))

(assert (=> d!14651 m!61787))

(declare-fun m!63733 () Bool)

(assert (=> d!14651 m!63733))

(declare-fun m!63735 () Bool)

(assert (=> d!14651 m!63735))

(assert (=> b!68208 m!61781))

(assert (=> b!67135 d!14651))

(assert (=> b!67135 d!14501))

(assert (=> b!67135 d!14503))

(declare-fun d!14653 () Bool)

(declare-fun lt!29616 () Bool)

(assert (=> d!14653 (= lt!29616 (select (content!71 (ite c!9174 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488) Nil!1488)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!44677 () Bool)

(assert (=> d!14653 (= lt!29616 e!44677)))

(declare-fun res!36711 () Bool)

(assert (=> d!14653 (=> (not res!36711) (not e!44677))))

(assert (=> d!14653 (= res!36711 ((_ is Cons!1487) (ite c!9174 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488) Nil!1488)))))

(assert (=> d!14653 (= (contains!719 (ite c!9174 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488) Nil!1488) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!29616)))

(declare-fun b!68209 () Bool)

(declare-fun e!44676 () Bool)

(assert (=> b!68209 (= e!44677 e!44676)))

(declare-fun res!36712 () Bool)

(assert (=> b!68209 (=> res!36712 e!44676)))

(assert (=> b!68209 (= res!36712 (= (h!2071 (ite c!9174 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488) Nil!1488)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!68210 () Bool)

(assert (=> b!68210 (= e!44676 (contains!719 (t!4977 (ite c!9174 (Cons!1487 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) Nil!1488) Nil!1488)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!14653 res!36711) b!68209))

(assert (= (and b!68209 (not res!36712)) b!68210))

(declare-fun m!63737 () Bool)

(assert (=> d!14653 m!63737))

(assert (=> d!14653 m!61329))

(declare-fun m!63739 () Bool)

(assert (=> d!14653 m!63739))

(assert (=> b!68210 m!61329))

(declare-fun m!63741 () Bool)

(assert (=> b!68210 m!63741))

(assert (=> b!66888 d!14653))

(declare-fun d!14655 () Bool)

(declare-fun res!36713 () Bool)

(declare-fun e!44678 () Bool)

(assert (=> d!14655 (=> res!36713 e!44678)))

(assert (=> d!14655 (= res!36713 (and ((_ is Cons!1486) (toList!723 lt!28634)) (= (_1!1064 (h!2070 (toList!723 lt!28634))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14655 (= (containsKey!133 (toList!723 lt!28634) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!44678)))

(declare-fun b!68211 () Bool)

(declare-fun e!44679 () Bool)

(assert (=> b!68211 (= e!44678 e!44679)))

(declare-fun res!36714 () Bool)

(assert (=> b!68211 (=> (not res!36714) (not e!44679))))

(assert (=> b!68211 (= res!36714 (and (or (not ((_ is Cons!1486) (toList!723 lt!28634))) (bvsle (_1!1064 (h!2070 (toList!723 lt!28634))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1486) (toList!723 lt!28634)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28634))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!68212 () Bool)

(assert (=> b!68212 (= e!44679 (containsKey!133 (t!4976 (toList!723 lt!28634)) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!14655 (not res!36713)) b!68211))

(assert (= (and b!68211 res!36714) b!68212))

(assert (=> b!68212 m!60843))

(declare-fun m!63743 () Bool)

(assert (=> b!68212 m!63743))

(assert (=> d!13911 d!14655))

(declare-fun d!14657 () Bool)

(assert (=> d!14657 (= (get!1130 (getValueByKey!129 (toList!723 lt!28612) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2483 (getValueByKey!129 (toList!723 lt!28612) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13903 d!14657))

(assert (=> d!13903 d!14547))

(declare-fun d!14659 () Bool)

(declare-fun e!44681 () Bool)

(assert (=> d!14659 e!44681))

(declare-fun res!36715 () Bool)

(assert (=> d!14659 (=> res!36715 e!44681)))

(declare-fun lt!29620 () Bool)

(assert (=> d!14659 (= res!36715 (not lt!29620))))

(declare-fun lt!29617 () Bool)

(assert (=> d!14659 (= lt!29620 lt!29617)))

(declare-fun lt!29618 () Unit!1836)

(declare-fun e!44680 () Unit!1836)

(assert (=> d!14659 (= lt!29618 e!44680)))

(declare-fun c!9646 () Bool)

(assert (=> d!14659 (= c!9646 lt!29617)))

(assert (=> d!14659 (= lt!29617 (containsKey!133 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) lt!28741 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760))))))

(assert (=> d!14659 (= (contains!716 (getCurrentListMap!419 (_keys!3787 newMap!16) lt!28741 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760))) lt!29620)))

(declare-fun b!68213 () Bool)

(declare-fun lt!29619 () Unit!1836)

(assert (=> b!68213 (= e!44680 lt!29619)))

(assert (=> b!68213 (= lt!29619 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) lt!28741 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760))))))

(assert (=> b!68213 (isDefined!83 (getValueByKey!129 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) lt!28741 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760))))))

(declare-fun b!68214 () Bool)

(declare-fun Unit!1907 () Unit!1836)

(assert (=> b!68214 (= e!44680 Unit!1907)))

(declare-fun b!68215 () Bool)

(assert (=> b!68215 (= e!44681 (isDefined!83 (getValueByKey!129 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) lt!28741 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760)))))))

(assert (= (and d!14659 c!9646) b!68213))

(assert (= (and d!14659 (not c!9646)) b!68214))

(assert (= (and d!14659 (not res!36715)) b!68215))

(assert (=> d!14659 m!61009))

(declare-fun m!63745 () Bool)

(assert (=> d!14659 m!63745))

(assert (=> b!68213 m!61009))

(declare-fun m!63747 () Bool)

(assert (=> b!68213 m!63747))

(assert (=> b!68213 m!61009))

(declare-fun m!63749 () Bool)

(assert (=> b!68213 m!63749))

(assert (=> b!68213 m!63749))

(declare-fun m!63751 () Bool)

(assert (=> b!68213 m!63751))

(assert (=> b!68215 m!61009))

(assert (=> b!68215 m!63749))

(assert (=> b!68215 m!63749))

(assert (=> b!68215 m!63751))

(assert (=> b!67037 d!14659))

(declare-fun b!68216 () Bool)

(declare-fun e!44687 () Bool)

(declare-fun call!5741 () Bool)

(assert (=> b!68216 (= e!44687 (not call!5741))))

(declare-fun bm!5736 () Bool)

(declare-fun call!5745 () ListLongMap!1415)

(assert (=> bm!5736 (= call!5745 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) lt!28741 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun d!14661 () Bool)

(declare-fun e!44694 () Bool)

(assert (=> d!14661 e!44694))

(declare-fun res!36724 () Bool)

(assert (=> d!14661 (=> (not res!36724) (not e!44694))))

(assert (=> d!14661 (= res!36724 (or (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))))

(declare-fun lt!29641 () ListLongMap!1415)

(declare-fun lt!29628 () ListLongMap!1415)

(assert (=> d!14661 (= lt!29641 lt!29628)))

(declare-fun lt!29624 () Unit!1836)

(declare-fun e!44690 () Unit!1836)

(assert (=> d!14661 (= lt!29624 e!44690)))

(declare-fun c!9649 () Bool)

(declare-fun e!44688 () Bool)

(assert (=> d!14661 (= c!9649 e!44688)))

(declare-fun res!36717 () Bool)

(assert (=> d!14661 (=> (not res!36717) (not e!44688))))

(assert (=> d!14661 (= res!36717 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun e!44683 () ListLongMap!1415)

(assert (=> d!14661 (= lt!29628 e!44683)))

(declare-fun c!9650 () Bool)

(assert (=> d!14661 (= c!9650 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14661 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14661 (= (getCurrentListMap!419 (_keys!3787 newMap!16) lt!28741 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29641)))

(declare-fun b!68217 () Bool)

(declare-fun call!5744 () ListLongMap!1415)

(assert (=> b!68217 (= e!44683 (+!87 call!5744 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))

(declare-fun b!68218 () Bool)

(declare-fun e!44691 () Bool)

(assert (=> b!68218 (= e!44687 e!44691)))

(declare-fun res!36719 () Bool)

(assert (=> b!68218 (= res!36719 call!5741)))

(assert (=> b!68218 (=> (not res!36719) (not e!44691))))

(declare-fun b!68219 () Bool)

(declare-fun e!44685 () ListLongMap!1415)

(assert (=> b!68219 (= e!44683 e!44685)))

(declare-fun c!9652 () Bool)

(assert (=> b!68219 (= c!9652 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5737 () Bool)

(declare-fun call!5742 () ListLongMap!1415)

(declare-fun call!5740 () ListLongMap!1415)

(assert (=> bm!5737 (= call!5742 call!5740)))

(declare-fun b!68220 () Bool)

(declare-fun e!44686 () Bool)

(assert (=> b!68220 (= e!44694 e!44686)))

(declare-fun c!9647 () Bool)

(assert (=> b!68220 (= c!9647 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68221 () Bool)

(declare-fun call!5743 () Bool)

(assert (=> b!68221 (= e!44686 (not call!5743))))

(declare-fun b!68222 () Bool)

(declare-fun e!44692 () Bool)

(assert (=> b!68222 (= e!44686 e!44692)))

(declare-fun res!36723 () Bool)

(assert (=> b!68222 (= res!36723 call!5743)))

(assert (=> b!68222 (=> (not res!36723) (not e!44692))))

(declare-fun b!68223 () Bool)

(declare-fun lt!29642 () Unit!1836)

(assert (=> b!68223 (= e!44690 lt!29642)))

(declare-fun lt!29626 () ListLongMap!1415)

(assert (=> b!68223 (= lt!29626 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) lt!28741 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29635 () (_ BitVec 64))

(assert (=> b!68223 (= lt!29635 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29629 () (_ BitVec 64))

(assert (=> b!68223 (= lt!29629 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29623 () Unit!1836)

(assert (=> b!68223 (= lt!29623 (addStillContains!48 lt!29626 lt!29635 (zeroValue!2055 newMap!16) lt!29629))))

(assert (=> b!68223 (contains!716 (+!87 lt!29626 (tuple2!2109 lt!29635 (zeroValue!2055 newMap!16))) lt!29629)))

(declare-fun lt!29633 () Unit!1836)

(assert (=> b!68223 (= lt!29633 lt!29623)))

(declare-fun lt!29640 () ListLongMap!1415)

(assert (=> b!68223 (= lt!29640 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) lt!28741 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29631 () (_ BitVec 64))

(assert (=> b!68223 (= lt!29631 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29627 () (_ BitVec 64))

(assert (=> b!68223 (= lt!29627 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29638 () Unit!1836)

(assert (=> b!68223 (= lt!29638 (addApplyDifferent!48 lt!29640 lt!29631 (minValue!2055 newMap!16) lt!29627))))

(assert (=> b!68223 (= (apply!72 (+!87 lt!29640 (tuple2!2109 lt!29631 (minValue!2055 newMap!16))) lt!29627) (apply!72 lt!29640 lt!29627))))

(declare-fun lt!29621 () Unit!1836)

(assert (=> b!68223 (= lt!29621 lt!29638)))

(declare-fun lt!29637 () ListLongMap!1415)

(assert (=> b!68223 (= lt!29637 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) lt!28741 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29632 () (_ BitVec 64))

(assert (=> b!68223 (= lt!29632 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29634 () (_ BitVec 64))

(assert (=> b!68223 (= lt!29634 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29622 () Unit!1836)

(assert (=> b!68223 (= lt!29622 (addApplyDifferent!48 lt!29637 lt!29632 (zeroValue!2055 newMap!16) lt!29634))))

(assert (=> b!68223 (= (apply!72 (+!87 lt!29637 (tuple2!2109 lt!29632 (zeroValue!2055 newMap!16))) lt!29634) (apply!72 lt!29637 lt!29634))))

(declare-fun lt!29636 () Unit!1836)

(assert (=> b!68223 (= lt!29636 lt!29622)))

(declare-fun lt!29625 () ListLongMap!1415)

(assert (=> b!68223 (= lt!29625 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) lt!28741 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29630 () (_ BitVec 64))

(assert (=> b!68223 (= lt!29630 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29639 () (_ BitVec 64))

(assert (=> b!68223 (= lt!29639 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!68223 (= lt!29642 (addApplyDifferent!48 lt!29625 lt!29630 (minValue!2055 newMap!16) lt!29639))))

(assert (=> b!68223 (= (apply!72 (+!87 lt!29625 (tuple2!2109 lt!29630 (minValue!2055 newMap!16))) lt!29639) (apply!72 lt!29625 lt!29639))))

(declare-fun b!68224 () Bool)

(assert (=> b!68224 (= e!44688 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68225 () Bool)

(declare-fun Unit!1908 () Unit!1836)

(assert (=> b!68225 (= e!44690 Unit!1908)))

(declare-fun b!68226 () Bool)

(declare-fun res!36722 () Bool)

(assert (=> b!68226 (=> (not res!36722) (not e!44694))))

(assert (=> b!68226 (= res!36722 e!44687)))

(declare-fun c!9648 () Bool)

(assert (=> b!68226 (= c!9648 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5738 () Bool)

(assert (=> bm!5738 (= call!5740 call!5745)))

(declare-fun b!68227 () Bool)

(assert (=> b!68227 (= e!44692 (= (apply!72 lt!29641 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2055 newMap!16)))))

(declare-fun bm!5739 () Bool)

(assert (=> bm!5739 (= call!5744 (+!87 (ite c!9650 call!5745 (ite c!9652 call!5740 call!5742)) (ite (or c!9650 c!9652) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(declare-fun b!68228 () Bool)

(declare-fun res!36718 () Bool)

(assert (=> b!68228 (=> (not res!36718) (not e!44694))))

(declare-fun e!44693 () Bool)

(assert (=> b!68228 (= res!36718 e!44693)))

(declare-fun res!36721 () Bool)

(assert (=> b!68228 (=> res!36721 e!44693)))

(declare-fun e!44689 () Bool)

(assert (=> b!68228 (= res!36721 (not e!44689))))

(declare-fun res!36716 () Bool)

(assert (=> b!68228 (=> (not res!36716) (not e!44689))))

(assert (=> b!68228 (= res!36716 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun b!68229 () Bool)

(declare-fun c!9651 () Bool)

(assert (=> b!68229 (= c!9651 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!44682 () ListLongMap!1415)

(assert (=> b!68229 (= e!44685 e!44682)))

(declare-fun b!68230 () Bool)

(assert (=> b!68230 (= e!44682 call!5742)))

(declare-fun bm!5740 () Bool)

(declare-fun call!5739 () ListLongMap!1415)

(assert (=> bm!5740 (= call!5739 call!5744)))

(declare-fun bm!5741 () Bool)

(assert (=> bm!5741 (= call!5741 (contains!716 lt!29641 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68231 () Bool)

(assert (=> b!68231 (= e!44685 call!5739)))

(declare-fun b!68232 () Bool)

(assert (=> b!68232 (= e!44689 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68233 () Bool)

(assert (=> b!68233 (= e!44691 (= (apply!72 lt!29641 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2055 newMap!16)))))

(declare-fun b!68234 () Bool)

(assert (=> b!68234 (= e!44682 call!5739)))

(declare-fun b!68235 () Bool)

(declare-fun e!44684 () Bool)

(assert (=> b!68235 (= e!44693 e!44684)))

(declare-fun res!36720 () Bool)

(assert (=> b!68235 (=> (not res!36720) (not e!44684))))

(assert (=> b!68235 (= res!36720 (contains!716 lt!29641 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!68235 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun bm!5742 () Bool)

(assert (=> bm!5742 (= call!5743 (contains!716 lt!29641 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68236 () Bool)

(assert (=> b!68236 (= e!44684 (= (apply!72 lt!29641 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1127 (select (arr!1835 lt!28741) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68236 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 lt!28741)))))

(assert (=> b!68236 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (= (and d!14661 c!9650) b!68217))

(assert (= (and d!14661 (not c!9650)) b!68219))

(assert (= (and b!68219 c!9652) b!68231))

(assert (= (and b!68219 (not c!9652)) b!68229))

(assert (= (and b!68229 c!9651) b!68234))

(assert (= (and b!68229 (not c!9651)) b!68230))

(assert (= (or b!68234 b!68230) bm!5737))

(assert (= (or b!68231 bm!5737) bm!5738))

(assert (= (or b!68231 b!68234) bm!5740))

(assert (= (or b!68217 bm!5738) bm!5736))

(assert (= (or b!68217 bm!5740) bm!5739))

(assert (= (and d!14661 res!36717) b!68224))

(assert (= (and d!14661 c!9649) b!68223))

(assert (= (and d!14661 (not c!9649)) b!68225))

(assert (= (and d!14661 res!36724) b!68228))

(assert (= (and b!68228 res!36716) b!68232))

(assert (= (and b!68228 (not res!36721)) b!68235))

(assert (= (and b!68235 res!36720) b!68236))

(assert (= (and b!68228 res!36718) b!68226))

(assert (= (and b!68226 c!9648) b!68218))

(assert (= (and b!68226 (not c!9648)) b!68216))

(assert (= (and b!68218 res!36719) b!68233))

(assert (= (or b!68218 b!68216) bm!5741))

(assert (= (and b!68226 res!36722) b!68220))

(assert (= (and b!68220 c!9647) b!68222))

(assert (= (and b!68220 (not c!9647)) b!68221))

(assert (= (and b!68222 res!36723) b!68227))

(assert (= (or b!68222 b!68221) bm!5742))

(declare-fun b_lambda!3039 () Bool)

(assert (=> (not b_lambda!3039) (not b!68236)))

(assert (=> b!68236 t!4984))

(declare-fun b_and!4189 () Bool)

(assert (= b_and!4185 (and (=> t!4984 result!2595) b_and!4189)))

(assert (=> b!68236 t!4986))

(declare-fun b_and!4191 () Bool)

(assert (= b_and!4187 (and (=> t!4986 result!2597) b_and!4191)))

(declare-fun m!63753 () Bool)

(assert (=> bm!5741 m!63753))

(declare-fun m!63755 () Bool)

(assert (=> b!68236 m!63755))

(assert (=> b!68236 m!61115))

(declare-fun m!63757 () Bool)

(assert (=> b!68236 m!63757))

(assert (=> b!68236 m!61079))

(assert (=> b!68236 m!61079))

(declare-fun m!63759 () Bool)

(assert (=> b!68236 m!63759))

(assert (=> b!68236 m!63755))

(assert (=> b!68236 m!61115))

(assert (=> b!68235 m!61079))

(assert (=> b!68235 m!61079))

(declare-fun m!63761 () Bool)

(assert (=> b!68235 m!63761))

(declare-fun m!63763 () Bool)

(assert (=> b!68233 m!63763))

(assert (=> b!68232 m!61079))

(assert (=> b!68232 m!61079))

(assert (=> b!68232 m!61081))

(declare-fun m!63765 () Bool)

(assert (=> b!68227 m!63765))

(assert (=> d!14661 m!61069))

(declare-fun m!63767 () Bool)

(assert (=> b!68217 m!63767))

(declare-fun m!63769 () Bool)

(assert (=> bm!5736 m!63769))

(declare-fun m!63771 () Bool)

(assert (=> bm!5739 m!63771))

(declare-fun m!63773 () Bool)

(assert (=> b!68223 m!63773))

(declare-fun m!63775 () Bool)

(assert (=> b!68223 m!63775))

(declare-fun m!63777 () Bool)

(assert (=> b!68223 m!63777))

(declare-fun m!63779 () Bool)

(assert (=> b!68223 m!63779))

(declare-fun m!63781 () Bool)

(assert (=> b!68223 m!63781))

(declare-fun m!63783 () Bool)

(assert (=> b!68223 m!63783))

(declare-fun m!63785 () Bool)

(assert (=> b!68223 m!63785))

(assert (=> b!68223 m!63779))

(declare-fun m!63787 () Bool)

(assert (=> b!68223 m!63787))

(assert (=> b!68223 m!63769))

(declare-fun m!63789 () Bool)

(assert (=> b!68223 m!63789))

(declare-fun m!63791 () Bool)

(assert (=> b!68223 m!63791))

(assert (=> b!68223 m!63783))

(declare-fun m!63793 () Bool)

(assert (=> b!68223 m!63793))

(assert (=> b!68223 m!63773))

(declare-fun m!63795 () Bool)

(assert (=> b!68223 m!63795))

(declare-fun m!63797 () Bool)

(assert (=> b!68223 m!63797))

(assert (=> b!68223 m!61079))

(assert (=> b!68223 m!63795))

(declare-fun m!63799 () Bool)

(assert (=> b!68223 m!63799))

(declare-fun m!63801 () Bool)

(assert (=> b!68223 m!63801))

(assert (=> b!68224 m!61079))

(assert (=> b!68224 m!61079))

(assert (=> b!68224 m!61081))

(declare-fun m!63803 () Bool)

(assert (=> bm!5742 m!63803))

(assert (=> b!67037 d!14661))

(declare-fun b!68238 () Bool)

(declare-fun e!44695 () Option!135)

(declare-fun e!44696 () Option!135)

(assert (=> b!68238 (= e!44695 e!44696)))

(declare-fun c!9654 () Bool)

(assert (=> b!68238 (= c!9654 (and ((_ is Cons!1486) (toList!723 lt!28848)) (not (= (_1!1064 (h!2070 (toList!723 lt!28848))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!9653 () Bool)

(declare-fun d!14663 () Bool)

(assert (=> d!14663 (= c!9653 (and ((_ is Cons!1486) (toList!723 lt!28848)) (= (_1!1064 (h!2070 (toList!723 lt!28848))) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!14663 (= (getValueByKey!129 (toList!723 lt!28848) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!44695)))

(declare-fun b!68239 () Bool)

(assert (=> b!68239 (= e!44696 (getValueByKey!129 (t!4976 (toList!723 lt!28848)) (_1!1064 (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1127 (select (arr!1835 (_values!2130 (v!2479 (underlying!252 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!68237 () Bool)

(assert (=> b!68237 (= e!44695 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28848)))))))

(declare-fun b!68240 () Bool)

(assert (=> b!68240 (= e!44696 None!133)))

(assert (= (and d!14663 c!9653) b!68237))

(assert (= (and d!14663 (not c!9653)) b!68238))

(assert (= (and b!68238 c!9654) b!68239))

(assert (= (and b!68238 (not c!9654)) b!68240))

(declare-fun m!63805 () Bool)

(assert (=> b!68239 m!63805))

(assert (=> b!66873 d!14663))

(declare-fun b!68242 () Bool)

(declare-fun e!44697 () Option!135)

(declare-fun e!44698 () Option!135)

(assert (=> b!68242 (= e!44697 e!44698)))

(declare-fun c!9656 () Bool)

(assert (=> b!68242 (= c!9656 (and ((_ is Cons!1486) (toList!723 lt!28868)) (not (= (_1!1064 (h!2070 (toList!723 lt!28868))) (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))))

(declare-fun d!14665 () Bool)

(declare-fun c!9655 () Bool)

(assert (=> d!14665 (= c!9655 (and ((_ is Cons!1486) (toList!723 lt!28868)) (= (_1!1064 (h!2070 (toList!723 lt!28868))) (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992))))))))))

(assert (=> d!14665 (= (getValueByKey!129 (toList!723 lt!28868) (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))) e!44697)))

(declare-fun b!68243 () Bool)

(assert (=> b!68243 (= e!44698 (getValueByKey!129 (t!4976 (toList!723 lt!28868)) (_1!1064 (tuple2!2109 lt!28602 (minValue!2055 (v!2479 (underlying!252 thiss!992)))))))))

(declare-fun b!68241 () Bool)

(assert (=> b!68241 (= e!44697 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28868)))))))

(declare-fun b!68244 () Bool)

(assert (=> b!68244 (= e!44698 None!133)))

(assert (= (and d!14665 c!9655) b!68241))

(assert (= (and d!14665 (not c!9655)) b!68242))

(assert (= (and b!68242 c!9656) b!68243))

(assert (= (and b!68242 (not c!9656)) b!68244))

(declare-fun m!63807 () Bool)

(assert (=> b!68243 m!63807))

(assert (=> b!66919 d!14665))

(declare-fun d!14667 () Bool)

(declare-fun e!44700 () Bool)

(assert (=> d!14667 e!44700))

(declare-fun res!36725 () Bool)

(assert (=> d!14667 (=> res!36725 e!44700)))

(declare-fun lt!29646 () Bool)

(assert (=> d!14667 (= res!36725 (not lt!29646))))

(declare-fun lt!29643 () Bool)

(assert (=> d!14667 (= lt!29646 lt!29643)))

(declare-fun lt!29644 () Unit!1836)

(declare-fun e!44699 () Unit!1836)

(assert (=> d!14667 (= lt!29644 e!44699)))

(declare-fun c!9657 () Bool)

(assert (=> d!14667 (= c!9657 lt!29643)))

(assert (=> d!14667 (= lt!29643 (containsKey!133 (toList!723 lt!28822) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14667 (= (contains!716 lt!28822 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29646)))

(declare-fun b!68245 () Bool)

(declare-fun lt!29645 () Unit!1836)

(assert (=> b!68245 (= e!44699 lt!29645)))

(assert (=> b!68245 (= lt!29645 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28822) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68245 (isDefined!83 (getValueByKey!129 (toList!723 lt!28822) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68246 () Bool)

(declare-fun Unit!1909 () Unit!1836)

(assert (=> b!68246 (= e!44699 Unit!1909)))

(declare-fun b!68247 () Bool)

(assert (=> b!68247 (= e!44700 (isDefined!83 (getValueByKey!129 (toList!723 lt!28822) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14667 c!9657) b!68245))

(assert (= (and d!14667 (not c!9657)) b!68246))

(assert (= (and d!14667 (not res!36725)) b!68247))

(declare-fun m!63809 () Bool)

(assert (=> d!14667 m!63809))

(declare-fun m!63811 () Bool)

(assert (=> b!68245 m!63811))

(declare-fun m!63813 () Bool)

(assert (=> b!68245 m!63813))

(assert (=> b!68245 m!63813))

(declare-fun m!63815 () Bool)

(assert (=> b!68245 m!63815))

(assert (=> b!68247 m!63813))

(assert (=> b!68247 m!63813))

(assert (=> b!68247 m!63815))

(assert (=> b!66833 d!14667))

(assert (=> b!66990 d!14035))

(declare-fun d!14669 () Bool)

(declare-fun lt!29647 () Bool)

(assert (=> d!14669 (= lt!29647 (select (content!70 lt!28815) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))))))

(declare-fun e!44701 () Bool)

(assert (=> d!14669 (= lt!29647 e!44701)))

(declare-fun res!36727 () Bool)

(assert (=> d!14669 (=> (not res!36727) (not e!44701))))

(assert (=> d!14669 (= res!36727 ((_ is Cons!1486) lt!28815))))

(assert (=> d!14669 (= (contains!718 lt!28815 (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))) lt!29647)))

(declare-fun b!68248 () Bool)

(declare-fun e!44702 () Bool)

(assert (=> b!68248 (= e!44701 e!44702)))

(declare-fun res!36726 () Bool)

(assert (=> b!68248 (=> res!36726 e!44702)))

(assert (=> b!68248 (= res!36726 (= (h!2070 lt!28815) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))))))

(declare-fun b!68249 () Bool)

(assert (=> b!68249 (= e!44702 (contains!718 (t!4976 lt!28815) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))))))

(assert (= (and d!14669 res!36727) b!68248))

(assert (= (and b!68248 (not res!36726)) b!68249))

(declare-fun m!63817 () Bool)

(assert (=> d!14669 m!63817))

(declare-fun m!63819 () Bool)

(assert (=> d!14669 m!63819))

(declare-fun m!63821 () Bool)

(assert (=> b!68249 m!63821))

(assert (=> b!66828 d!14669))

(declare-fun d!14671 () Bool)

(assert (=> d!14671 (= (apply!72 lt!28798 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1130 (getValueByKey!129 (toList!723 lt!28798) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2927 () Bool)

(assert (= bs!2927 d!14671))

(assert (=> bs!2927 m!63085))

(assert (=> bs!2927 m!63085))

(declare-fun m!63823 () Bool)

(assert (=> bs!2927 m!63823))

(assert (=> b!66752 d!14671))

(declare-fun d!14673 () Bool)

(assert (=> d!14673 (= (apply!72 lt!28942 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1130 (getValueByKey!129 (toList!723 lt!28942) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2928 () Bool)

(assert (= bs!2928 d!14673))

(assert (=> bs!2928 m!62987))

(assert (=> bs!2928 m!62987))

(declare-fun m!63825 () Bool)

(assert (=> bs!2928 m!63825))

(assert (=> b!66985 d!14673))

(declare-fun d!14675 () Bool)

(assert (=> d!14675 (= ($colon$colon!62 e!43837 (ite c!9262 (h!2070 (toList!723 (+!87 lt!28505 lt!28500))) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503)))) (Cons!1486 (ite c!9262 (h!2070 (toList!723 (+!87 lt!28505 lt!28500))) (tuple2!2109 (_1!1064 lt!28503) (_2!1064 lt!28503))) e!43837))))

(assert (=> bm!5586 d!14675))

(assert (=> b!67108 d!13861))

(declare-fun b!68250 () Bool)

(declare-fun e!44705 () Bool)

(declare-fun e!44704 () Bool)

(assert (=> b!68250 (= e!44705 e!44704)))

(declare-fun c!9658 () Bool)

(assert (=> b!68250 (= c!9658 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!68251 () Bool)

(declare-fun e!44703 () Bool)

(assert (=> b!68251 (= e!44704 e!44703)))

(declare-fun lt!29650 () (_ BitVec 64))

(assert (=> b!68251 (= lt!29650 (select (arr!1834 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!29648 () Unit!1836)

(assert (=> b!68251 (= lt!29648 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3787 newMap!16) lt!29650 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!68251 (arrayContainsKey!0 (_keys!3787 newMap!16) lt!29650 #b00000000000000000000000000000000)))

(declare-fun lt!29649 () Unit!1836)

(assert (=> b!68251 (= lt!29649 lt!29648)))

(declare-fun res!36728 () Bool)

(assert (=> b!68251 (= res!36728 (= (seekEntryOrOpen!0 (select (arr!1834 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3787 newMap!16) (mask!6082 newMap!16)) (Found!243 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!68251 (=> (not res!36728) (not e!44703))))

(declare-fun d!14677 () Bool)

(declare-fun res!36729 () Bool)

(assert (=> d!14677 (=> res!36729 e!44705)))

(assert (=> d!14677 (= res!36729 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2069 (_keys!3787 newMap!16))))))

(assert (=> d!14677 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3787 newMap!16) (mask!6082 newMap!16)) e!44705)))

(declare-fun bm!5743 () Bool)

(declare-fun call!5746 () Bool)

(assert (=> bm!5743 (= call!5746 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun b!68252 () Bool)

(assert (=> b!68252 (= e!44704 call!5746)))

(declare-fun b!68253 () Bool)

(assert (=> b!68253 (= e!44703 call!5746)))

(assert (= (and d!14677 (not res!36729)) b!68250))

(assert (= (and b!68250 c!9658) b!68251))

(assert (= (and b!68250 (not c!9658)) b!68252))

(assert (= (and b!68251 res!36728) b!68253))

(assert (= (or b!68253 b!68252) bm!5743))

(assert (=> b!68250 m!62697))

(assert (=> b!68250 m!62697))

(assert (=> b!68250 m!62699))

(assert (=> b!68251 m!62697))

(declare-fun m!63827 () Bool)

(assert (=> b!68251 m!63827))

(declare-fun m!63829 () Bool)

(assert (=> b!68251 m!63829))

(assert (=> b!68251 m!62697))

(declare-fun m!63831 () Bool)

(assert (=> b!68251 m!63831))

(declare-fun m!63833 () Bool)

(assert (=> bm!5743 m!63833))

(assert (=> bm!5595 d!14677))

(declare-fun d!14679 () Bool)

(declare-fun e!44707 () Bool)

(assert (=> d!14679 e!44707))

(declare-fun res!36730 () Bool)

(assert (=> d!14679 (=> res!36730 e!44707)))

(declare-fun lt!29654 () Bool)

(assert (=> d!14679 (= res!36730 (not lt!29654))))

(declare-fun lt!29651 () Bool)

(assert (=> d!14679 (= lt!29654 lt!29651)))

(declare-fun lt!29652 () Unit!1836)

(declare-fun e!44706 () Unit!1836)

(assert (=> d!14679 (= lt!29652 e!44706)))

(declare-fun c!9659 () Bool)

(assert (=> d!14679 (= c!9659 lt!29651)))

(assert (=> d!14679 (= lt!29651 (containsKey!133 (toList!723 lt!28964) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14679 (= (contains!716 lt!28964 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29654)))

(declare-fun b!68254 () Bool)

(declare-fun lt!29653 () Unit!1836)

(assert (=> b!68254 (= e!44706 lt!29653)))

(assert (=> b!68254 (= lt!29653 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28964) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68254 (isDefined!83 (getValueByKey!129 (toList!723 lt!28964) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68255 () Bool)

(declare-fun Unit!1910 () Unit!1836)

(assert (=> b!68255 (= e!44706 Unit!1910)))

(declare-fun b!68256 () Bool)

(assert (=> b!68256 (= e!44707 (isDefined!83 (getValueByKey!129 (toList!723 lt!28964) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14679 c!9659) b!68254))

(assert (= (and d!14679 (not c!9659)) b!68255))

(assert (= (and d!14679 (not res!36730)) b!68256))

(declare-fun m!63835 () Bool)

(assert (=> d!14679 m!63835))

(declare-fun m!63837 () Bool)

(assert (=> b!68254 m!63837))

(assert (=> b!68254 m!63191))

(assert (=> b!68254 m!63191))

(declare-fun m!63839 () Bool)

(assert (=> b!68254 m!63839))

(assert (=> b!68256 m!63191))

(assert (=> b!68256 m!63191))

(assert (=> b!68256 m!63839))

(assert (=> bm!5608 d!14679))

(declare-fun b!68258 () Bool)

(declare-fun e!44708 () Option!135)

(declare-fun e!44709 () Option!135)

(assert (=> b!68258 (= e!44708 e!44709)))

(declare-fun c!9661 () Bool)

(assert (=> b!68258 (= c!9661 (and ((_ is Cons!1486) (toList!723 lt!28900)) (not (= (_1!1064 (h!2070 (toList!723 lt!28900))) (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))))

(declare-fun c!9660 () Bool)

(declare-fun d!14681 () Bool)

(assert (=> d!14681 (= c!9660 (and ((_ is Cons!1486) (toList!723 lt!28900)) (= (_1!1064 (h!2070 (toList!723 lt!28900))) (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502))))))))

(assert (=> d!14681 (= (getValueByKey!129 (toList!723 lt!28900) (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))) e!44708)))

(declare-fun b!68259 () Bool)

(assert (=> b!68259 (= e!44709 (getValueByKey!129 (t!4976 (toList!723 lt!28900)) (_1!1064 (ite c!9205 (ite c!9204 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)))))))

(declare-fun b!68257 () Bool)

(assert (=> b!68257 (= e!44708 (Some!134 (_2!1064 (h!2070 (toList!723 lt!28900)))))))

(declare-fun b!68260 () Bool)

(assert (=> b!68260 (= e!44709 None!133)))

(assert (= (and d!14681 c!9660) b!68257))

(assert (= (and d!14681 (not c!9660)) b!68258))

(assert (= (and b!68258 c!9661) b!68259))

(assert (= (and b!68258 (not c!9661)) b!68260))

(declare-fun m!63841 () Bool)

(assert (=> b!68259 m!63841))

(assert (=> b!66939 d!14681))

(declare-fun d!14683 () Bool)

(assert (=> d!14683 (isDefined!83 (getValueByKey!129 (toList!723 lt!28648) (_1!1064 lt!28500)))))

(declare-fun lt!29655 () Unit!1836)

(assert (=> d!14683 (= lt!29655 (choose!378 (toList!723 lt!28648) (_1!1064 lt!28500)))))

(declare-fun e!44710 () Bool)

(assert (=> d!14683 e!44710))

(declare-fun res!36731 () Bool)

(assert (=> d!14683 (=> (not res!36731) (not e!44710))))

(assert (=> d!14683 (= res!36731 (isStrictlySorted!284 (toList!723 lt!28648)))))

(assert (=> d!14683 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28648) (_1!1064 lt!28500)) lt!29655)))

(declare-fun b!68261 () Bool)

(assert (=> b!68261 (= e!44710 (containsKey!133 (toList!723 lt!28648) (_1!1064 lt!28500)))))

(assert (= (and d!14683 res!36731) b!68261))

(assert (=> d!14683 m!60933))

(assert (=> d!14683 m!60933))

(assert (=> d!14683 m!61169))

(declare-fun m!63843 () Bool)

(assert (=> d!14683 m!63843))

(declare-fun m!63845 () Bool)

(assert (=> d!14683 m!63845))

(assert (=> b!68261 m!61165))

(assert (=> b!66762 d!14683))

(assert (=> b!66762 d!14483))

(assert (=> b!66762 d!13759))

(declare-fun d!14685 () Bool)

(declare-fun lt!29656 () Bool)

(assert (=> d!14685 (= lt!29656 (select (content!70 lt!28863) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))))))

(declare-fun e!44711 () Bool)

(assert (=> d!14685 (= lt!29656 e!44711)))

(declare-fun res!36733 () Bool)

(assert (=> d!14685 (=> (not res!36733) (not e!44711))))

(assert (=> d!14685 (= res!36733 ((_ is Cons!1486) lt!28863))))

(assert (=> d!14685 (= (contains!718 lt!28863 (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))) lt!29656)))

(declare-fun b!68262 () Bool)

(declare-fun e!44712 () Bool)

(assert (=> b!68262 (= e!44711 e!44712)))

(declare-fun res!36732 () Bool)

(assert (=> b!68262 (=> res!36732 e!44712)))

(assert (=> b!68262 (= res!36732 (= (h!2070 lt!28863) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))))))

(declare-fun b!68263 () Bool)

(assert (=> b!68263 (= e!44712 (contains!718 (t!4976 lt!28863) (tuple2!2109 (_1!1064 lt!28500) (_2!1064 lt!28500))))))

(assert (= (and d!14685 res!36733) b!68262))

(assert (= (and b!68262 (not res!36732)) b!68263))

(declare-fun m!63847 () Bool)

(assert (=> d!14685 m!63847))

(declare-fun m!63849 () Bool)

(assert (=> d!14685 m!63849))

(declare-fun m!63851 () Bool)

(assert (=> b!68263 m!63851))

(assert (=> b!66906 d!14685))

(declare-fun d!14687 () Bool)

(declare-fun res!36734 () Bool)

(declare-fun e!44713 () Bool)

(assert (=> d!14687 (=> res!36734 e!44713)))

(assert (=> d!14687 (= res!36734 (and ((_ is Cons!1486) (toList!723 lt!28656)) (= (_1!1064 (h!2070 (toList!723 lt!28656))) (_1!1064 lt!28503))))))

(assert (=> d!14687 (= (containsKey!133 (toList!723 lt!28656) (_1!1064 lt!28503)) e!44713)))

(declare-fun b!68264 () Bool)

(declare-fun e!44714 () Bool)

(assert (=> b!68264 (= e!44713 e!44714)))

(declare-fun res!36735 () Bool)

(assert (=> b!68264 (=> (not res!36735) (not e!44714))))

(assert (=> b!68264 (= res!36735 (and (or (not ((_ is Cons!1486) (toList!723 lt!28656))) (bvsle (_1!1064 (h!2070 (toList!723 lt!28656))) (_1!1064 lt!28503))) ((_ is Cons!1486) (toList!723 lt!28656)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28656))) (_1!1064 lt!28503))))))

(declare-fun b!68265 () Bool)

(assert (=> b!68265 (= e!44714 (containsKey!133 (t!4976 (toList!723 lt!28656)) (_1!1064 lt!28503)))))

(assert (= (and d!14687 (not res!36734)) b!68264))

(assert (= (and b!68264 res!36735) b!68265))

(declare-fun m!63853 () Bool)

(assert (=> b!68265 m!63853))

(assert (=> d!13877 d!14687))

(declare-fun d!14689 () Bool)

(declare-fun res!36736 () Bool)

(declare-fun e!44715 () Bool)

(assert (=> d!14689 (=> res!36736 e!44715)))

(assert (=> d!14689 (= res!36736 (and ((_ is Cons!1486) (toList!723 lt!28648)) (= (_1!1064 (h!2070 (toList!723 lt!28648))) (_1!1064 lt!28500))))))

(assert (=> d!14689 (= (containsKey!133 (toList!723 lt!28648) (_1!1064 lt!28500)) e!44715)))

(declare-fun b!68266 () Bool)

(declare-fun e!44716 () Bool)

(assert (=> b!68266 (= e!44715 e!44716)))

(declare-fun res!36737 () Bool)

(assert (=> b!68266 (=> (not res!36737) (not e!44716))))

(assert (=> b!68266 (= res!36737 (and (or (not ((_ is Cons!1486) (toList!723 lt!28648))) (bvsle (_1!1064 (h!2070 (toList!723 lt!28648))) (_1!1064 lt!28500))) ((_ is Cons!1486) (toList!723 lt!28648)) (bvslt (_1!1064 (h!2070 (toList!723 lt!28648))) (_1!1064 lt!28500))))))

(declare-fun b!68267 () Bool)

(assert (=> b!68267 (= e!44716 (containsKey!133 (t!4976 (toList!723 lt!28648)) (_1!1064 lt!28500)))))

(assert (= (and d!14689 (not res!36736)) b!68266))

(assert (= (and b!68266 res!36737) b!68267))

(declare-fun m!63855 () Bool)

(assert (=> b!68267 m!63855))

(assert (=> d!13769 d!14689))

(assert (=> b!66701 d!14089))

(assert (=> b!66701 d!14091))

(declare-fun d!14691 () Bool)

(declare-fun res!36738 () Bool)

(declare-fun e!44717 () Bool)

(assert (=> d!14691 (=> res!36738 e!44717)))

(assert (=> d!14691 (= res!36738 (and ((_ is Cons!1486) (toList!723 call!5567)) (= (_1!1064 (h!2070 (toList!723 call!5567))) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760))))))))

(assert (=> d!14691 (= (containsKey!133 (toList!723 call!5567) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760)))) e!44717)))

(declare-fun b!68268 () Bool)

(declare-fun e!44718 () Bool)

(assert (=> b!68268 (= e!44717 e!44718)))

(declare-fun res!36739 () Bool)

(assert (=> b!68268 (=> (not res!36739) (not e!44718))))

(assert (=> b!68268 (= res!36739 (and (or (not ((_ is Cons!1486) (toList!723 call!5567))) (bvsle (_1!1064 (h!2070 (toList!723 call!5567))) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760))))) ((_ is Cons!1486) (toList!723 call!5567)) (bvslt (_1!1064 (h!2070 (toList!723 call!5567))) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760))))))))

(declare-fun b!68269 () Bool)

(assert (=> b!68269 (= e!44718 (containsKey!133 (t!4976 (toList!723 call!5567)) (ite c!9214 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) (select (arr!1834 (_keys!3787 newMap!16)) (index!3101 lt!28760)))))))

(assert (= (and d!14691 (not res!36738)) b!68268))

(assert (= (and b!68268 res!36739) b!68269))

(declare-fun m!63857 () Bool)

(assert (=> b!68269 m!63857))

(assert (=> d!13917 d!14691))

(assert (=> b!66757 d!14035))

(assert (=> b!67040 d!14155))

(assert (=> b!67040 d!13873))

(declare-fun b!68270 () Bool)

(declare-fun e!44724 () Bool)

(declare-fun call!5749 () Bool)

(assert (=> b!68270 (= e!44724 (not call!5749))))

(declare-fun call!5753 () ListLongMap!1415)

(declare-fun bm!5744 () Bool)

(assert (=> bm!5744 (= call!5753 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun d!14693 () Bool)

(declare-fun e!44731 () Bool)

(assert (=> d!14693 e!44731))

(declare-fun res!36748 () Bool)

(assert (=> d!14693 (=> (not res!36748) (not e!44731))))

(assert (=> d!14693 (= res!36748 (or (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))))

(declare-fun lt!29677 () ListLongMap!1415)

(declare-fun lt!29664 () ListLongMap!1415)

(assert (=> d!14693 (= lt!29677 lt!29664)))

(declare-fun lt!29660 () Unit!1836)

(declare-fun e!44727 () Unit!1836)

(assert (=> d!14693 (= lt!29660 e!44727)))

(declare-fun c!9664 () Bool)

(declare-fun e!44725 () Bool)

(assert (=> d!14693 (= c!9664 e!44725)))

(declare-fun res!36741 () Bool)

(assert (=> d!14693 (=> (not res!36741) (not e!44725))))

(assert (=> d!14693 (= res!36741 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun e!44720 () ListLongMap!1415)

(assert (=> d!14693 (= lt!29664 e!44720)))

(declare-fun c!9665 () Bool)

(assert (=> d!14693 (= c!9665 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14693 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14693 (= (getCurrentListMap!419 (_keys!3787 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29677)))

(declare-fun b!68271 () Bool)

(declare-fun call!5752 () ListLongMap!1415)

(assert (=> b!68271 (= e!44720 (+!87 call!5752 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))

(declare-fun b!68272 () Bool)

(declare-fun e!44728 () Bool)

(assert (=> b!68272 (= e!44724 e!44728)))

(declare-fun res!36743 () Bool)

(assert (=> b!68272 (= res!36743 call!5749)))

(assert (=> b!68272 (=> (not res!36743) (not e!44728))))

(declare-fun b!68273 () Bool)

(declare-fun e!44722 () ListLongMap!1415)

(assert (=> b!68273 (= e!44720 e!44722)))

(declare-fun c!9667 () Bool)

(assert (=> b!68273 (= c!9667 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5745 () Bool)

(declare-fun call!5750 () ListLongMap!1415)

(declare-fun call!5748 () ListLongMap!1415)

(assert (=> bm!5745 (= call!5750 call!5748)))

(declare-fun b!68274 () Bool)

(declare-fun e!44723 () Bool)

(assert (=> b!68274 (= e!44731 e!44723)))

(declare-fun c!9662 () Bool)

(assert (=> b!68274 (= c!9662 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68275 () Bool)

(declare-fun call!5751 () Bool)

(assert (=> b!68275 (= e!44723 (not call!5751))))

(declare-fun b!68276 () Bool)

(declare-fun e!44729 () Bool)

(assert (=> b!68276 (= e!44723 e!44729)))

(declare-fun res!36747 () Bool)

(assert (=> b!68276 (= res!36747 call!5751)))

(assert (=> b!68276 (=> (not res!36747) (not e!44729))))

(declare-fun b!68277 () Bool)

(declare-fun lt!29678 () Unit!1836)

(assert (=> b!68277 (= e!44727 lt!29678)))

(declare-fun lt!29662 () ListLongMap!1415)

(assert (=> b!68277 (= lt!29662 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29671 () (_ BitVec 64))

(assert (=> b!68277 (= lt!29671 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29665 () (_ BitVec 64))

(assert (=> b!68277 (= lt!29665 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29659 () Unit!1836)

(assert (=> b!68277 (= lt!29659 (addStillContains!48 lt!29662 lt!29671 (zeroValue!2055 newMap!16) lt!29665))))

(assert (=> b!68277 (contains!716 (+!87 lt!29662 (tuple2!2109 lt!29671 (zeroValue!2055 newMap!16))) lt!29665)))

(declare-fun lt!29669 () Unit!1836)

(assert (=> b!68277 (= lt!29669 lt!29659)))

(declare-fun lt!29676 () ListLongMap!1415)

(assert (=> b!68277 (= lt!29676 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29667 () (_ BitVec 64))

(assert (=> b!68277 (= lt!29667 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29663 () (_ BitVec 64))

(assert (=> b!68277 (= lt!29663 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29674 () Unit!1836)

(assert (=> b!68277 (= lt!29674 (addApplyDifferent!48 lt!29676 lt!29667 (minValue!2055 newMap!16) lt!29663))))

(assert (=> b!68277 (= (apply!72 (+!87 lt!29676 (tuple2!2109 lt!29667 (minValue!2055 newMap!16))) lt!29663) (apply!72 lt!29676 lt!29663))))

(declare-fun lt!29657 () Unit!1836)

(assert (=> b!68277 (= lt!29657 lt!29674)))

(declare-fun lt!29673 () ListLongMap!1415)

(assert (=> b!68277 (= lt!29673 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29668 () (_ BitVec 64))

(assert (=> b!68277 (= lt!29668 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29670 () (_ BitVec 64))

(assert (=> b!68277 (= lt!29670 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29658 () Unit!1836)

(assert (=> b!68277 (= lt!29658 (addApplyDifferent!48 lt!29673 lt!29668 (zeroValue!2055 newMap!16) lt!29670))))

(assert (=> b!68277 (= (apply!72 (+!87 lt!29673 (tuple2!2109 lt!29668 (zeroValue!2055 newMap!16))) lt!29670) (apply!72 lt!29673 lt!29670))))

(declare-fun lt!29672 () Unit!1836)

(assert (=> b!68277 (= lt!29672 lt!29658)))

(declare-fun lt!29661 () ListLongMap!1415)

(assert (=> b!68277 (= lt!29661 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29666 () (_ BitVec 64))

(assert (=> b!68277 (= lt!29666 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29675 () (_ BitVec 64))

(assert (=> b!68277 (= lt!29675 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!68277 (= lt!29678 (addApplyDifferent!48 lt!29661 lt!29666 (minValue!2055 newMap!16) lt!29675))))

(assert (=> b!68277 (= (apply!72 (+!87 lt!29661 (tuple2!2109 lt!29666 (minValue!2055 newMap!16))) lt!29675) (apply!72 lt!29661 lt!29675))))

(declare-fun b!68278 () Bool)

(assert (=> b!68278 (= e!44725 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68279 () Bool)

(declare-fun Unit!1911 () Unit!1836)

(assert (=> b!68279 (= e!44727 Unit!1911)))

(declare-fun b!68280 () Bool)

(declare-fun res!36746 () Bool)

(assert (=> b!68280 (=> (not res!36746) (not e!44731))))

(assert (=> b!68280 (= res!36746 e!44724)))

(declare-fun c!9663 () Bool)

(assert (=> b!68280 (= c!9663 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5746 () Bool)

(assert (=> bm!5746 (= call!5748 call!5753)))

(declare-fun b!68281 () Bool)

(assert (=> b!68281 (= e!44729 (= (apply!72 lt!29677 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2055 newMap!16)))))

(declare-fun bm!5747 () Bool)

(assert (=> bm!5747 (= call!5752 (+!87 (ite c!9665 call!5753 (ite c!9667 call!5748 call!5750)) (ite (or c!9665 c!9667) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(declare-fun b!68282 () Bool)

(declare-fun res!36742 () Bool)

(assert (=> b!68282 (=> (not res!36742) (not e!44731))))

(declare-fun e!44730 () Bool)

(assert (=> b!68282 (= res!36742 e!44730)))

(declare-fun res!36745 () Bool)

(assert (=> b!68282 (=> res!36745 e!44730)))

(declare-fun e!44726 () Bool)

(assert (=> b!68282 (= res!36745 (not e!44726))))

(declare-fun res!36740 () Bool)

(assert (=> b!68282 (=> (not res!36740) (not e!44726))))

(assert (=> b!68282 (= res!36740 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun b!68283 () Bool)

(declare-fun c!9666 () Bool)

(assert (=> b!68283 (= c!9666 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!44719 () ListLongMap!1415)

(assert (=> b!68283 (= e!44722 e!44719)))

(declare-fun b!68284 () Bool)

(assert (=> b!68284 (= e!44719 call!5750)))

(declare-fun bm!5748 () Bool)

(declare-fun call!5747 () ListLongMap!1415)

(assert (=> bm!5748 (= call!5747 call!5752)))

(declare-fun bm!5749 () Bool)

(assert (=> bm!5749 (= call!5749 (contains!716 lt!29677 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68285 () Bool)

(assert (=> b!68285 (= e!44722 call!5747)))

(declare-fun b!68286 () Bool)

(assert (=> b!68286 (= e!44726 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68287 () Bool)

(assert (=> b!68287 (= e!44728 (= (apply!72 lt!29677 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2055 newMap!16)))))

(declare-fun b!68288 () Bool)

(assert (=> b!68288 (= e!44719 call!5747)))

(declare-fun b!68289 () Bool)

(declare-fun e!44721 () Bool)

(assert (=> b!68289 (= e!44730 e!44721)))

(declare-fun res!36744 () Bool)

(assert (=> b!68289 (=> (not res!36744) (not e!44721))))

(assert (=> b!68289 (= res!36744 (contains!716 lt!29677 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!68289 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun bm!5750 () Bool)

(assert (=> bm!5750 (= call!5751 (contains!716 lt!29677 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68290 () Bool)

(assert (=> b!68290 (= e!44721 (= (apply!72 lt!29677 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1127 (select (arr!1835 (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68290 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))))))))

(assert (=> b!68290 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (= (and d!14693 c!9665) b!68271))

(assert (= (and d!14693 (not c!9665)) b!68273))

(assert (= (and b!68273 c!9667) b!68285))

(assert (= (and b!68273 (not c!9667)) b!68283))

(assert (= (and b!68283 c!9666) b!68288))

(assert (= (and b!68283 (not c!9666)) b!68284))

(assert (= (or b!68288 b!68284) bm!5745))

(assert (= (or b!68285 bm!5745) bm!5746))

(assert (= (or b!68285 b!68288) bm!5748))

(assert (= (or b!68271 bm!5746) bm!5744))

(assert (= (or b!68271 bm!5748) bm!5747))

(assert (= (and d!14693 res!36741) b!68278))

(assert (= (and d!14693 c!9664) b!68277))

(assert (= (and d!14693 (not c!9664)) b!68279))

(assert (= (and d!14693 res!36748) b!68282))

(assert (= (and b!68282 res!36740) b!68286))

(assert (= (and b!68282 (not res!36745)) b!68289))

(assert (= (and b!68289 res!36744) b!68290))

(assert (= (and b!68282 res!36742) b!68280))

(assert (= (and b!68280 c!9663) b!68272))

(assert (= (and b!68280 (not c!9663)) b!68270))

(assert (= (and b!68272 res!36743) b!68287))

(assert (= (or b!68272 b!68270) bm!5749))

(assert (= (and b!68280 res!36746) b!68274))

(assert (= (and b!68274 c!9662) b!68276))

(assert (= (and b!68274 (not c!9662)) b!68275))

(assert (= (and b!68276 res!36747) b!68281))

(assert (= (or b!68276 b!68275) bm!5750))

(declare-fun b_lambda!3041 () Bool)

(assert (=> (not b_lambda!3041) (not b!68290)))

(assert (=> b!68290 t!4984))

(declare-fun b_and!4193 () Bool)

(assert (= b_and!4189 (and (=> t!4984 result!2595) b_and!4193)))

(assert (=> b!68290 t!4986))

(declare-fun b_and!4195 () Bool)

(assert (= b_and!4191 (and (=> t!4986 result!2597) b_and!4195)))

(declare-fun m!63859 () Bool)

(assert (=> bm!5749 m!63859))

(declare-fun m!63861 () Bool)

(assert (=> b!68290 m!63861))

(assert (=> b!68290 m!61115))

(declare-fun m!63863 () Bool)

(assert (=> b!68290 m!63863))

(assert (=> b!68290 m!61079))

(assert (=> b!68290 m!61079))

(declare-fun m!63865 () Bool)

(assert (=> b!68290 m!63865))

(assert (=> b!68290 m!63861))

(assert (=> b!68290 m!61115))

(assert (=> b!68289 m!61079))

(assert (=> b!68289 m!61079))

(declare-fun m!63867 () Bool)

(assert (=> b!68289 m!63867))

(declare-fun m!63869 () Bool)

(assert (=> b!68287 m!63869))

(assert (=> b!68286 m!61079))

(assert (=> b!68286 m!61079))

(assert (=> b!68286 m!61081))

(declare-fun m!63871 () Bool)

(assert (=> b!68281 m!63871))

(assert (=> d!14693 m!61069))

(declare-fun m!63873 () Bool)

(assert (=> b!68271 m!63873))

(declare-fun m!63875 () Bool)

(assert (=> bm!5744 m!63875))

(declare-fun m!63877 () Bool)

(assert (=> bm!5747 m!63877))

(declare-fun m!63879 () Bool)

(assert (=> b!68277 m!63879))

(declare-fun m!63881 () Bool)

(assert (=> b!68277 m!63881))

(declare-fun m!63883 () Bool)

(assert (=> b!68277 m!63883))

(declare-fun m!63885 () Bool)

(assert (=> b!68277 m!63885))

(declare-fun m!63887 () Bool)

(assert (=> b!68277 m!63887))

(declare-fun m!63889 () Bool)

(assert (=> b!68277 m!63889))

(declare-fun m!63891 () Bool)

(assert (=> b!68277 m!63891))

(assert (=> b!68277 m!63885))

(declare-fun m!63893 () Bool)

(assert (=> b!68277 m!63893))

(assert (=> b!68277 m!63875))

(declare-fun m!63895 () Bool)

(assert (=> b!68277 m!63895))

(declare-fun m!63897 () Bool)

(assert (=> b!68277 m!63897))

(assert (=> b!68277 m!63889))

(declare-fun m!63899 () Bool)

(assert (=> b!68277 m!63899))

(assert (=> b!68277 m!63879))

(declare-fun m!63901 () Bool)

(assert (=> b!68277 m!63901))

(declare-fun m!63903 () Bool)

(assert (=> b!68277 m!63903))

(assert (=> b!68277 m!61079))

(assert (=> b!68277 m!63901))

(declare-fun m!63905 () Bool)

(assert (=> b!68277 m!63905))

(declare-fun m!63907 () Bool)

(assert (=> b!68277 m!63907))

(assert (=> b!68278 m!61079))

(assert (=> b!68278 m!61079))

(assert (=> b!68278 m!61081))

(declare-fun m!63909 () Bool)

(assert (=> bm!5750 m!63909))

(assert (=> b!67040 d!14693))

(declare-fun d!14695 () Bool)

(assert (=> d!14695 (isDefined!83 (getValueByKey!129 (toList!723 lt!28612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!29679 () Unit!1836)

(assert (=> d!14695 (= lt!29679 (choose!378 (toList!723 lt!28612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44732 () Bool)

(assert (=> d!14695 e!44732))

(declare-fun res!36749 () Bool)

(assert (=> d!14695 (=> (not res!36749) (not e!44732))))

(assert (=> d!14695 (= res!36749 (isStrictlySorted!284 (toList!723 lt!28612)))))

(assert (=> d!14695 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 lt!28612) #b0000000000000000000000000000000000000000000000000000000000000000) lt!29679)))

(declare-fun b!68291 () Bool)

(assert (=> b!68291 (= e!44732 (containsKey!133 (toList!723 lt!28612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14695 res!36749) b!68291))

(assert (=> d!14695 m!61107))

(assert (=> d!14695 m!61107))

(assert (=> d!14695 m!61109))

(declare-fun m!63911 () Bool)

(assert (=> d!14695 m!63911))

(assert (=> d!14695 m!62237))

(assert (=> b!68291 m!61103))

(assert (=> b!66738 d!14695))

(assert (=> b!66738 d!14545))

(assert (=> b!66738 d!14547))

(assert (=> d!13897 d!13873))

(declare-fun d!14697 () Bool)

(declare-fun e!44733 () Bool)

(assert (=> d!14697 e!44733))

(declare-fun res!36751 () Bool)

(assert (=> d!14697 (=> (not res!36751) (not e!44733))))

(declare-fun lt!29681 () ListLongMap!1415)

(assert (=> d!14697 (= res!36751 (contains!716 lt!29681 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502))))))

(declare-fun lt!29683 () List!1490)

(assert (=> d!14697 (= lt!29681 (ListLongMap!1416 lt!29683))))

(declare-fun lt!29682 () Unit!1836)

(declare-fun lt!29680 () Unit!1836)

(assert (=> d!14697 (= lt!29682 lt!29680)))

(assert (=> d!14697 (= (getValueByKey!129 lt!29683 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502))) (Some!134 (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502))))))

(assert (=> d!14697 (= lt!29680 (lemmaContainsTupThenGetReturnValue!48 lt!29683 (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502))))))

(assert (=> d!14697 (= lt!29683 (insertStrictlySorted!50 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502))))))

(assert (=> d!14697 (= (+!87 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502)) lt!29681)))

(declare-fun b!68292 () Bool)

(declare-fun res!36750 () Bool)

(assert (=> b!68292 (=> (not res!36750) (not e!44733))))

(assert (=> b!68292 (= res!36750 (= (getValueByKey!129 (toList!723 lt!29681) (_1!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502))) (Some!134 (_2!1064 (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502)))))))

(declare-fun b!68293 () Bool)

(assert (=> b!68293 (= e!44733 (contains!718 (toList!723 lt!29681) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502)))))

(assert (= (and d!14697 res!36751) b!68292))

(assert (= (and b!68292 res!36750) b!68293))

(declare-fun m!63913 () Bool)

(assert (=> d!14697 m!63913))

(declare-fun m!63915 () Bool)

(assert (=> d!14697 m!63915))

(declare-fun m!63917 () Bool)

(assert (=> d!14697 m!63917))

(declare-fun m!63919 () Bool)

(assert (=> d!14697 m!63919))

(declare-fun m!63921 () Bool)

(assert (=> b!68292 m!63921))

(declare-fun m!63923 () Bool)

(assert (=> b!68293 m!63923))

(assert (=> d!13897 d!14697))

(assert (=> d!13897 d!14023))

(declare-fun d!14699 () Bool)

(assert (=> d!14699 (= (+!87 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502)) (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28742 lt!28502 (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(assert (=> d!14699 true))

(declare-fun _$7!53 () Unit!1836)

(assert (=> d!14699 (= (choose!385 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) lt!28742 (zeroValue!2055 newMap!16) lt!28502 (minValue!2055 newMap!16) (defaultEntry!2147 newMap!16)) _$7!53)))

(declare-fun bs!2929 () Bool)

(assert (= bs!2929 d!14699))

(assert (=> bs!2929 m!60835))

(assert (=> bs!2929 m!60835))

(assert (=> bs!2929 m!61691))

(assert (=> bs!2929 m!61689))

(assert (=> d!13897 d!14699))

(declare-fun b!68294 () Bool)

(declare-fun e!44739 () Bool)

(declare-fun call!5756 () Bool)

(assert (=> b!68294 (= e!44739 (not call!5756))))

(declare-fun bm!5751 () Bool)

(declare-fun call!5760 () ListLongMap!1415)

(assert (=> bm!5751 (= call!5760 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28742 lt!28502 (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun d!14701 () Bool)

(declare-fun e!44746 () Bool)

(assert (=> d!14701 e!44746))

(declare-fun res!36760 () Bool)

(assert (=> d!14701 (=> (not res!36760) (not e!44746))))

(assert (=> d!14701 (= res!36760 (or (bvsge #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))))

(declare-fun lt!29704 () ListLongMap!1415)

(declare-fun lt!29691 () ListLongMap!1415)

(assert (=> d!14701 (= lt!29704 lt!29691)))

(declare-fun lt!29687 () Unit!1836)

(declare-fun e!44742 () Unit!1836)

(assert (=> d!14701 (= lt!29687 e!44742)))

(declare-fun c!9670 () Bool)

(declare-fun e!44740 () Bool)

(assert (=> d!14701 (= c!9670 e!44740)))

(declare-fun res!36753 () Bool)

(assert (=> d!14701 (=> (not res!36753) (not e!44740))))

(assert (=> d!14701 (= res!36753 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun e!44735 () ListLongMap!1415)

(assert (=> d!14701 (= lt!29691 e!44735)))

(declare-fun c!9671 () Bool)

(assert (=> d!14701 (= c!9671 (and (not (= (bvand lt!28742 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!28742 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14701 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14701 (= (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28742 lt!28502 (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29704)))

(declare-fun b!68295 () Bool)

(declare-fun call!5759 () ListLongMap!1415)

(assert (=> b!68295 (= e!44735 (+!87 call!5759 (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))

(declare-fun b!68296 () Bool)

(declare-fun e!44743 () Bool)

(assert (=> b!68296 (= e!44739 e!44743)))

(declare-fun res!36755 () Bool)

(assert (=> b!68296 (= res!36755 call!5756)))

(assert (=> b!68296 (=> (not res!36755) (not e!44743))))

(declare-fun b!68297 () Bool)

(declare-fun e!44737 () ListLongMap!1415)

(assert (=> b!68297 (= e!44735 e!44737)))

(declare-fun c!9673 () Bool)

(assert (=> b!68297 (= c!9673 (and (not (= (bvand lt!28742 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!28742 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!5752 () Bool)

(declare-fun call!5757 () ListLongMap!1415)

(declare-fun call!5755 () ListLongMap!1415)

(assert (=> bm!5752 (= call!5757 call!5755)))

(declare-fun b!68298 () Bool)

(declare-fun e!44738 () Bool)

(assert (=> b!68298 (= e!44746 e!44738)))

(declare-fun c!9668 () Bool)

(assert (=> b!68298 (= c!9668 (not (= (bvand lt!28742 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68299 () Bool)

(declare-fun call!5758 () Bool)

(assert (=> b!68299 (= e!44738 (not call!5758))))

(declare-fun b!68300 () Bool)

(declare-fun e!44744 () Bool)

(assert (=> b!68300 (= e!44738 e!44744)))

(declare-fun res!36759 () Bool)

(assert (=> b!68300 (= res!36759 call!5758)))

(assert (=> b!68300 (=> (not res!36759) (not e!44744))))

(declare-fun b!68301 () Bool)

(declare-fun lt!29705 () Unit!1836)

(assert (=> b!68301 (= e!44742 lt!29705)))

(declare-fun lt!29689 () ListLongMap!1415)

(assert (=> b!68301 (= lt!29689 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28742 lt!28502 (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29698 () (_ BitVec 64))

(assert (=> b!68301 (= lt!29698 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29692 () (_ BitVec 64))

(assert (=> b!68301 (= lt!29692 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29686 () Unit!1836)

(assert (=> b!68301 (= lt!29686 (addStillContains!48 lt!29689 lt!29698 lt!28502 lt!29692))))

(assert (=> b!68301 (contains!716 (+!87 lt!29689 (tuple2!2109 lt!29698 lt!28502)) lt!29692)))

(declare-fun lt!29696 () Unit!1836)

(assert (=> b!68301 (= lt!29696 lt!29686)))

(declare-fun lt!29703 () ListLongMap!1415)

(assert (=> b!68301 (= lt!29703 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28742 lt!28502 (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29694 () (_ BitVec 64))

(assert (=> b!68301 (= lt!29694 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29690 () (_ BitVec 64))

(assert (=> b!68301 (= lt!29690 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29701 () Unit!1836)

(assert (=> b!68301 (= lt!29701 (addApplyDifferent!48 lt!29703 lt!29694 (minValue!2055 newMap!16) lt!29690))))

(assert (=> b!68301 (= (apply!72 (+!87 lt!29703 (tuple2!2109 lt!29694 (minValue!2055 newMap!16))) lt!29690) (apply!72 lt!29703 lt!29690))))

(declare-fun lt!29684 () Unit!1836)

(assert (=> b!68301 (= lt!29684 lt!29701)))

(declare-fun lt!29700 () ListLongMap!1415)

(assert (=> b!68301 (= lt!29700 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28742 lt!28502 (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29695 () (_ BitVec 64))

(assert (=> b!68301 (= lt!29695 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29697 () (_ BitVec 64))

(assert (=> b!68301 (= lt!29697 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29685 () Unit!1836)

(assert (=> b!68301 (= lt!29685 (addApplyDifferent!48 lt!29700 lt!29695 lt!28502 lt!29697))))

(assert (=> b!68301 (= (apply!72 (+!87 lt!29700 (tuple2!2109 lt!29695 lt!28502)) lt!29697) (apply!72 lt!29700 lt!29697))))

(declare-fun lt!29699 () Unit!1836)

(assert (=> b!68301 (= lt!29699 lt!29685)))

(declare-fun lt!29688 () ListLongMap!1415)

(assert (=> b!68301 (= lt!29688 (getCurrentListMapNoExtraKeys!51 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28742 lt!28502 (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29693 () (_ BitVec 64))

(assert (=> b!68301 (= lt!29693 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29702 () (_ BitVec 64))

(assert (=> b!68301 (= lt!29702 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!68301 (= lt!29705 (addApplyDifferent!48 lt!29688 lt!29693 (minValue!2055 newMap!16) lt!29702))))

(assert (=> b!68301 (= (apply!72 (+!87 lt!29688 (tuple2!2109 lt!29693 (minValue!2055 newMap!16))) lt!29702) (apply!72 lt!29688 lt!29702))))

(declare-fun b!68302 () Bool)

(assert (=> b!68302 (= e!44740 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68303 () Bool)

(declare-fun Unit!1912 () Unit!1836)

(assert (=> b!68303 (= e!44742 Unit!1912)))

(declare-fun b!68304 () Bool)

(declare-fun res!36758 () Bool)

(assert (=> b!68304 (=> (not res!36758) (not e!44746))))

(assert (=> b!68304 (= res!36758 e!44739)))

(declare-fun c!9669 () Bool)

(assert (=> b!68304 (= c!9669 (not (= (bvand lt!28742 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5753 () Bool)

(assert (=> bm!5753 (= call!5755 call!5760)))

(declare-fun b!68305 () Bool)

(assert (=> b!68305 (= e!44744 (= (apply!72 lt!29704 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2055 newMap!16)))))

(declare-fun bm!5754 () Bool)

(assert (=> bm!5754 (= call!5759 (+!87 (ite c!9671 call!5760 (ite c!9673 call!5755 call!5757)) (ite (or c!9671 c!9673) (tuple2!2109 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28502) (tuple2!2109 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(declare-fun b!68306 () Bool)

(declare-fun res!36754 () Bool)

(assert (=> b!68306 (=> (not res!36754) (not e!44746))))

(declare-fun e!44745 () Bool)

(assert (=> b!68306 (= res!36754 e!44745)))

(declare-fun res!36757 () Bool)

(assert (=> b!68306 (=> res!36757 e!44745)))

(declare-fun e!44741 () Bool)

(assert (=> b!68306 (= res!36757 (not e!44741))))

(declare-fun res!36752 () Bool)

(assert (=> b!68306 (=> (not res!36752) (not e!44741))))

(assert (=> b!68306 (= res!36752 (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun b!68307 () Bool)

(declare-fun c!9672 () Bool)

(assert (=> b!68307 (= c!9672 (and (not (= (bvand lt!28742 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!28742 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!44734 () ListLongMap!1415)

(assert (=> b!68307 (= e!44737 e!44734)))

(declare-fun b!68308 () Bool)

(assert (=> b!68308 (= e!44734 call!5757)))

(declare-fun bm!5755 () Bool)

(declare-fun call!5754 () ListLongMap!1415)

(assert (=> bm!5755 (= call!5754 call!5759)))

(declare-fun bm!5756 () Bool)

(assert (=> bm!5756 (= call!5756 (contains!716 lt!29704 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68309 () Bool)

(assert (=> b!68309 (= e!44737 call!5754)))

(declare-fun b!68310 () Bool)

(assert (=> b!68310 (= e!44741 (validKeyInArray!0 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68311 () Bool)

(assert (=> b!68311 (= e!44743 (= (apply!72 lt!29704 #b0000000000000000000000000000000000000000000000000000000000000000) lt!28502))))

(declare-fun b!68312 () Bool)

(assert (=> b!68312 (= e!44734 call!5754)))

(declare-fun b!68313 () Bool)

(declare-fun e!44736 () Bool)

(assert (=> b!68313 (= e!44745 e!44736)))

(declare-fun res!36756 () Bool)

(assert (=> b!68313 (=> (not res!36756) (not e!44736))))

(assert (=> b!68313 (= res!36756 (contains!716 lt!29704 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!68313 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(declare-fun bm!5757 () Bool)

(assert (=> bm!5757 (= call!5758 (contains!716 lt!29704 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68314 () Bool)

(assert (=> b!68314 (= e!44736 (= (apply!72 lt!29704 (select (arr!1834 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1127 (select (arr!1835 (_values!2130 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68314 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_values!2130 newMap!16))))))

(assert (=> b!68314 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2069 (_keys!3787 newMap!16))))))

(assert (= (and d!14701 c!9671) b!68295))

(assert (= (and d!14701 (not c!9671)) b!68297))

(assert (= (and b!68297 c!9673) b!68309))

(assert (= (and b!68297 (not c!9673)) b!68307))

(assert (= (and b!68307 c!9672) b!68312))

(assert (= (and b!68307 (not c!9672)) b!68308))

(assert (= (or b!68312 b!68308) bm!5752))

(assert (= (or b!68309 bm!5752) bm!5753))

(assert (= (or b!68309 b!68312) bm!5755))

(assert (= (or b!68295 bm!5753) bm!5751))

(assert (= (or b!68295 bm!5755) bm!5754))

(assert (= (and d!14701 res!36753) b!68302))

(assert (= (and d!14701 c!9670) b!68301))

(assert (= (and d!14701 (not c!9670)) b!68303))

(assert (= (and d!14701 res!36760) b!68306))

(assert (= (and b!68306 res!36752) b!68310))

(assert (= (and b!68306 (not res!36757)) b!68313))

(assert (= (and b!68313 res!36756) b!68314))

(assert (= (and b!68306 res!36754) b!68304))

(assert (= (and b!68304 c!9669) b!68296))

(assert (= (and b!68304 (not c!9669)) b!68294))

(assert (= (and b!68296 res!36755) b!68311))

(assert (= (or b!68296 b!68294) bm!5756))

(assert (= (and b!68304 res!36758) b!68298))

(assert (= (and b!68298 c!9668) b!68300))

(assert (= (and b!68298 (not c!9668)) b!68299))

(assert (= (and b!68300 res!36759) b!68305))

(assert (= (or b!68300 b!68299) bm!5757))

(declare-fun b_lambda!3043 () Bool)

(assert (=> (not b_lambda!3043) (not b!68314)))

(assert (=> b!68314 t!4984))

(declare-fun b_and!4197 () Bool)

(assert (= b_and!4193 (and (=> t!4984 result!2595) b_and!4197)))

(assert (=> b!68314 t!4986))

(declare-fun b_and!4199 () Bool)

(assert (= b_and!4195 (and (=> t!4986 result!2597) b_and!4199)))

(declare-fun m!63925 () Bool)

(assert (=> bm!5756 m!63925))

(assert (=> b!68314 m!61523))

(assert (=> b!68314 m!61115))

(assert (=> b!68314 m!61525))

(assert (=> b!68314 m!61079))

(assert (=> b!68314 m!61079))

(declare-fun m!63927 () Bool)

(assert (=> b!68314 m!63927))

(assert (=> b!68314 m!61523))

(assert (=> b!68314 m!61115))

(assert (=> b!68313 m!61079))

(assert (=> b!68313 m!61079))

(declare-fun m!63929 () Bool)

(assert (=> b!68313 m!63929))

(declare-fun m!63931 () Bool)

(assert (=> b!68311 m!63931))

(assert (=> b!68310 m!61079))

(assert (=> b!68310 m!61079))

(assert (=> b!68310 m!61081))

(declare-fun m!63933 () Bool)

(assert (=> b!68305 m!63933))

(assert (=> d!14701 m!61069))

(declare-fun m!63935 () Bool)

(assert (=> b!68295 m!63935))

(declare-fun m!63937 () Bool)

(assert (=> bm!5751 m!63937))

(declare-fun m!63939 () Bool)

(assert (=> bm!5754 m!63939))

(declare-fun m!63941 () Bool)

(assert (=> b!68301 m!63941))

(declare-fun m!63943 () Bool)

(assert (=> b!68301 m!63943))

(declare-fun m!63945 () Bool)

(assert (=> b!68301 m!63945))

(declare-fun m!63947 () Bool)

(assert (=> b!68301 m!63947))

(declare-fun m!63949 () Bool)

(assert (=> b!68301 m!63949))

(declare-fun m!63951 () Bool)

(assert (=> b!68301 m!63951))

(declare-fun m!63953 () Bool)

(assert (=> b!68301 m!63953))

(assert (=> b!68301 m!63947))

(declare-fun m!63955 () Bool)

(assert (=> b!68301 m!63955))

(assert (=> b!68301 m!63937))

(declare-fun m!63957 () Bool)

(assert (=> b!68301 m!63957))

(declare-fun m!63959 () Bool)

(assert (=> b!68301 m!63959))

(assert (=> b!68301 m!63951))

(declare-fun m!63961 () Bool)

(assert (=> b!68301 m!63961))

(assert (=> b!68301 m!63941))

(declare-fun m!63963 () Bool)

(assert (=> b!68301 m!63963))

(declare-fun m!63965 () Bool)

(assert (=> b!68301 m!63965))

(assert (=> b!68301 m!61079))

(assert (=> b!68301 m!63963))

(declare-fun m!63967 () Bool)

(assert (=> b!68301 m!63967))

(declare-fun m!63969 () Bool)

(assert (=> b!68301 m!63969))

(assert (=> b!68302 m!61079))

(assert (=> b!68302 m!61079))

(assert (=> b!68302 m!61081))

(declare-fun m!63971 () Bool)

(assert (=> bm!5757 m!63971))

(assert (=> d!13897 d!14701))

(declare-fun lt!29706 () Bool)

(declare-fun d!14703 () Bool)

(assert (=> d!14703 (= lt!29706 (select (content!70 (toList!723 lt!28883)) (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun e!44747 () Bool)

(assert (=> d!14703 (= lt!29706 e!44747)))

(declare-fun res!36762 () Bool)

(assert (=> d!14703 (=> (not res!36762) (not e!44747))))

(assert (=> d!14703 (= res!36762 ((_ is Cons!1486) (toList!723 lt!28883)))))

(assert (=> d!14703 (= (contains!718 (toList!723 lt!28883) (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))) lt!29706)))

(declare-fun b!68315 () Bool)

(declare-fun e!44748 () Bool)

(assert (=> b!68315 (= e!44747 e!44748)))

(declare-fun res!36761 () Bool)

(assert (=> b!68315 (=> res!36761 e!44748)))

(assert (=> b!68315 (= res!36761 (= (h!2070 (toList!723 lt!28883)) (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(declare-fun b!68316 () Bool)

(assert (=> b!68316 (= e!44748 (contains!718 (t!4976 (toList!723 lt!28883)) (tuple2!2109 lt!28606 (zeroValue!2055 (v!2479 (underlying!252 thiss!992))))))))

(assert (= (and d!14703 res!36762) b!68315))

(assert (= (and b!68315 (not res!36761)) b!68316))

(declare-fun m!63973 () Bool)

(assert (=> d!14703 m!63973))

(declare-fun m!63975 () Bool)

(assert (=> d!14703 m!63975))

(declare-fun m!63977 () Bool)

(assert (=> b!68316 m!63977))

(assert (=> b!66931 d!14703))

(declare-fun d!14705 () Bool)

(assert (=> d!14705 (isDefined!83 (getValueByKey!129 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun lt!29707 () Unit!1836)

(assert (=> d!14705 (= lt!29707 (choose!378 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(declare-fun e!44749 () Bool)

(assert (=> d!14705 e!44749))

(declare-fun res!36763 () Bool)

(assert (=> d!14705 (=> (not res!36763) (not e!44749))))

(assert (=> d!14705 (= res!36763 (isStrictlySorted!284 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))))

(assert (=> d!14705 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)) lt!29707)))

(declare-fun b!68317 () Bool)

(assert (=> b!68317 (= e!44749 (containsKey!133 (toList!723 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355)))))

(assert (= (and d!14705 res!36763) b!68317))

(assert (=> d!14705 m!60719))

(assert (=> d!14705 m!61667))

(assert (=> d!14705 m!61667))

(assert (=> d!14705 m!61669))

(assert (=> d!14705 m!60719))

(declare-fun m!63979 () Bool)

(assert (=> d!14705 m!63979))

(declare-fun m!63981 () Bool)

(assert (=> d!14705 m!63981))

(assert (=> b!68317 m!60719))

(assert (=> b!68317 m!61663))

(assert (=> b!67041 d!14705))

(assert (=> b!67041 d!14527))

(assert (=> b!67041 d!14529))

(assert (=> b!66927 d!14133))

(assert (=> b!66927 d!14135))

(declare-fun d!14707 () Bool)

(assert (=> d!14707 (= (+!87 (getCurrentListMap!419 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2109 (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502)) (getCurrentListMap!419 (_keys!3787 newMap!16) (array!3843 (store (arr!1835 (_values!2130 newMap!16)) (index!3101 lt!28760) (ValueCellFull!882 lt!28502)) (size!2070 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(assert (=> d!14707 true))

(declare-fun _$5!71 () Unit!1836)

(assert (=> d!14707 (= (choose!383 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (index!3101 lt!28760) (select (arr!1834 (_keys!3787 (v!2479 (underlying!252 thiss!992)))) from!355) lt!28502 (defaultEntry!2147 newMap!16)) _$5!71)))

(declare-fun bs!2930 () Bool)

(assert (= bs!2930 d!14707))

(assert (=> bs!2930 m!60835))

(assert (=> bs!2930 m!60835))

(assert (=> bs!2930 m!61659))

(assert (=> bs!2930 m!61035))

(assert (=> bs!2930 m!61661))

(assert (=> d!13887 d!14707))

(assert (=> d!13887 d!14023))

(declare-fun mapNonEmpty!3089 () Bool)

(declare-fun mapRes!3089 () Bool)

(declare-fun tp!8381 () Bool)

(declare-fun e!44750 () Bool)

(assert (=> mapNonEmpty!3089 (= mapRes!3089 (and tp!8381 e!44750))))

(declare-fun mapRest!3089 () (Array (_ BitVec 32) ValueCell!882))

(declare-fun mapKey!3089 () (_ BitVec 32))

(declare-fun mapValue!3089 () ValueCell!882)

(assert (=> mapNonEmpty!3089 (= mapRest!3087 (store mapRest!3089 mapKey!3089 mapValue!3089))))

(declare-fun condMapEmpty!3089 () Bool)

(declare-fun mapDefault!3089 () ValueCell!882)

(assert (=> mapNonEmpty!3087 (= condMapEmpty!3089 (= mapRest!3087 ((as const (Array (_ BitVec 32) ValueCell!882)) mapDefault!3089)))))

(declare-fun e!44751 () Bool)

(assert (=> mapNonEmpty!3087 (= tp!8379 (and e!44751 mapRes!3089))))

(declare-fun b!68318 () Bool)

(assert (=> b!68318 (= e!44750 tp_is_empty!2451)))

(declare-fun mapIsEmpty!3089 () Bool)

(assert (=> mapIsEmpty!3089 mapRes!3089))

(declare-fun b!68319 () Bool)

(assert (=> b!68319 (= e!44751 tp_is_empty!2451)))

(assert (= (and mapNonEmpty!3087 condMapEmpty!3089) mapIsEmpty!3089))

(assert (= (and mapNonEmpty!3087 (not condMapEmpty!3089)) mapNonEmpty!3089))

(assert (= (and mapNonEmpty!3089 ((_ is ValueCellFull!882) mapValue!3089)) b!68318))

(assert (= (and mapNonEmpty!3087 ((_ is ValueCellFull!882) mapDefault!3089)) b!68319))

(declare-fun m!63983 () Bool)

(assert (=> mapNonEmpty!3089 m!63983))

(declare-fun mapNonEmpty!3090 () Bool)

(declare-fun mapRes!3090 () Bool)

(declare-fun tp!8382 () Bool)

(declare-fun e!44752 () Bool)

(assert (=> mapNonEmpty!3090 (= mapRes!3090 (and tp!8382 e!44752))))

(declare-fun mapRest!3090 () (Array (_ BitVec 32) ValueCell!882))

(declare-fun mapValue!3090 () ValueCell!882)

(declare-fun mapKey!3090 () (_ BitVec 32))

(assert (=> mapNonEmpty!3090 (= mapRest!3088 (store mapRest!3090 mapKey!3090 mapValue!3090))))

(declare-fun condMapEmpty!3090 () Bool)

(declare-fun mapDefault!3090 () ValueCell!882)

(assert (=> mapNonEmpty!3088 (= condMapEmpty!3090 (= mapRest!3088 ((as const (Array (_ BitVec 32) ValueCell!882)) mapDefault!3090)))))

(declare-fun e!44753 () Bool)

(assert (=> mapNonEmpty!3088 (= tp!8380 (and e!44753 mapRes!3090))))

(declare-fun b!68320 () Bool)

(assert (=> b!68320 (= e!44752 tp_is_empty!2451)))

(declare-fun mapIsEmpty!3090 () Bool)

(assert (=> mapIsEmpty!3090 mapRes!3090))

(declare-fun b!68321 () Bool)

(assert (=> b!68321 (= e!44753 tp_is_empty!2451)))

(assert (= (and mapNonEmpty!3088 condMapEmpty!3090) mapIsEmpty!3090))

(assert (= (and mapNonEmpty!3088 (not condMapEmpty!3090)) mapNonEmpty!3090))

(assert (= (and mapNonEmpty!3090 ((_ is ValueCellFull!882) mapValue!3090)) b!68320))

(assert (= (and mapNonEmpty!3088 ((_ is ValueCellFull!882) mapDefault!3090)) b!68321))

(declare-fun m!63985 () Bool)

(assert (=> mapNonEmpty!3090 m!63985))

(declare-fun b_lambda!3045 () Bool)

(assert (= b_lambda!3041 (or (and b!66325 b_free!2069 (= (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66322 b_free!2071) b_lambda!3045)))

(declare-fun b_lambda!3047 () Bool)

(assert (= b_lambda!3043 (or (and b!66325 b_free!2069 (= (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66322 b_free!2071) b_lambda!3047)))

(declare-fun b_lambda!3049 () Bool)

(assert (= b_lambda!3033 (or (and b!66325 b_free!2069) (and b!66322 b_free!2071 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))))) b_lambda!3049)))

(declare-fun b_lambda!3051 () Bool)

(assert (= b_lambda!3025 (or (and b!66325 b_free!2069 (= (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66322 b_free!2071) b_lambda!3051)))

(declare-fun b_lambda!3053 () Bool)

(assert (= b_lambda!3027 (or (and b!66325 b_free!2069 (= (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66322 b_free!2071) b_lambda!3053)))

(declare-fun b_lambda!3055 () Bool)

(assert (= b_lambda!3021 (or (and b!66325 b_free!2069 (= (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66322 b_free!2071) b_lambda!3055)))

(declare-fun b_lambda!3057 () Bool)

(assert (= b_lambda!3029 (or (and b!66325 b_free!2069 (= (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66322 b_free!2071) b_lambda!3057)))

(declare-fun b_lambda!3059 () Bool)

(assert (= b_lambda!3019 (or (and b!66325 b_free!2069 (= (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66322 b_free!2071) b_lambda!3059)))

(declare-fun b_lambda!3061 () Bool)

(assert (= b_lambda!3017 (or (and b!66325 b_free!2069 (= (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66322 b_free!2071) b_lambda!3061)))

(declare-fun b_lambda!3063 () Bool)

(assert (= b_lambda!3039 (or (and b!66325 b_free!2069 (= (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66322 b_free!2071) b_lambda!3063)))

(declare-fun b_lambda!3065 () Bool)

(assert (= b_lambda!3023 (or (and b!66325 b_free!2069 (= (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66322 b_free!2071) b_lambda!3065)))

(declare-fun b_lambda!3067 () Bool)

(assert (= b_lambda!3037 (or (and b!66325 b_free!2069 (= (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66322 b_free!2071) b_lambda!3067)))

(declare-fun b_lambda!3069 () Bool)

(assert (= b_lambda!3035 (or (and b!66325 b_free!2069) (and b!66322 b_free!2071 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))))) b_lambda!3069)))

(declare-fun b_lambda!3071 () Bool)

(assert (= b_lambda!3031 (or (and b!66325 b_free!2069 (= (defaultEntry!2147 (v!2479 (underlying!252 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66322 b_free!2071) b_lambda!3071)))

(check-sat (not b!67684) (not b!67932) (not bm!5657) (not d!14011) (not d!14121) (not b!67500) (not d!14351) (not b!67437) (not bm!5747) (not d!14067) (not b!68018) (not d!14591) (not b!67839) (not b!67947) (not d!14483) (not b!68133) (not b!67381) (not bm!5743) (not b!67809) (not b!68207) (not b!67267) (not b!67209) (not b!67464) (not b!67353) (not b!67873) (not b!67284) (not b!68083) (not b!68047) (not b!67265) (not d!14371) (not b!67824) (not b!67462) (not b!67979) (not d!14287) (not b!67325) (not b!67615) (not d!13979) (not b!67878) (not d!14083) (not b!67965) (not b!67576) (not b_lambda!3015) (not b_lambda!3013) (not d!14291) (not b!67920) (not d!14561) (not b_lambda!3009) (not b_lambda!2981) (not d!14313) (not b!67695) (not b!68072) (not b!67386) (not b!67564) (not b!67568) (not b!67608) (not d!14671) (not b!67389) (not d!13955) (not b_lambda!3065) (not b!68056) (not b!67661) (not b!67299) (not bm!5669) (not b!67446) (not b!67890) (not b!68316) (not b!68164) (not b!67942) (not b!67938) (not d!13993) (not b!67675) (not b_lambda!3055) (not d!14149) (not b!67677) (not b!67901) (not b!68115) (not bm!5708) (not bm!5757) (not bm!5678) (not b!67348) (not b!67477) (not d!13957) (not d!13997) (not b!67357) (not d!14367) (not b!67470) (not bm!5684) (not b!67591) (not d!14653) (not b!67563) (not d!14411) (not d!14323) (not b!67561) (not d!14463) (not d!14281) (not d!14071) (not d!14041) (not b!68044) (not d!14147) (not d!14417) (not b!68154) (not b!67613) (not d!14047) (not d!14073) (not b!67806) (not b!67944) (not b!67269) (not b!67354) (not bm!5656) (not b_lambda!3067) (not b_lambda!3045) (not b!67971) (not d!14179) (not d!14667) (not b!67810) (not b!68232) (not b!68227) (not b!68109) (not d!14333) (not b!67816) (not b!67380) (not b!67907) (not b!68062) (not bm!5658) (not mapNonEmpty!3089) (not b!67861) (not d!14575) (not d!14125) (not d!14295) (not mapNonEmpty!3090) (not bm!5720) (not d!14365) (not b!67295) (not b!67871) (not b!67499) (not b_lambda!3061) (not d!14437) (not d!14615) (not b!67334) (not b!68036) (not d!14567) (not b!67202) (not d!14155) (not b!67405) (not b!67171) (not b!67724) (not b!67915) (not b!68249) (not bm!5734) (not b!68078) (not b!67337) (not b!67666) (not d!14009) (not d!14541) (not b!68111) (not b!67397) (not b!67598) (not d!14389) (not b!67712) (not b!67715) (not b!67721) (not d!14181) (not b!68217) (not b!67341) (not b!67616) (not b!68204) (not d!14033) (not b!67188) (not b!67211) (not bm!5709) (not b!68016) (not bm!5742) (not b!67663) (not b!68236) (not b!67292) (not d!14673) (not bm!5751) (not d!14247) (not b!67465) (not b!67821) (not d!14651) (not b!67547) (not d!14307) (not b!67664) (not bm!5638) (not b_lambda!2991) (not d!14481) (not d!14465) (not b!67875) (not d!14069) (not d!14419) (not d!14229) (not d!14451) (not b!67845) (not b!67792) (not b!67786) (not d!14489) (not d!14185) (not b!67913) (not bm!5677) (not d!14423) (not b!67225) (not b!67270) (not b!68059) (not b!68103) (not b!67438) (not b!68023) (not b!68243) (not b_lambda!3047) (not d!14633) (not d!14407) (not b!67802) (not bm!5649) (not d!14217) (not b!67252) (not b!67552) (not d!14565) (not b!68132) (not b!67555) (not b!67827) (not d!14459) (not d!14005) (not d!14169) (not b!68311) (not d!14413) (not bm!5750) (not d!14203) (not b!67187) (not b!68106) (not b!68212) (not b!68175) (not d!14629) (not d!14059) (not b!67706) (not d!14581) (not b!67526) (not d!13983) (not d!14305) (not b!67394) (not b!67247) b_and!4199 (not b!67935) (not d!14579) (not b!68206) (not b!67383) (not bm!5661) (not b!67580) (not bm!5645) (not b!67602) (not d!14573) (not b!68196) (not d!14685) (not d!14679) (not bm!5717) (not bm!5680) (not d!14521) (not b!67506) (not b_lambda!3007) (not d!14127) (not d!14129) (not b!67219) (not b!67842) (not bm!5722) (not b!67493) (not b!67864) (not b!67923) (not d!14123) (not b!67535) (not b_lambda!3063) (not d!14703) (not b!67328) (not b!67594) (not b!67694) (not d!14577) (not d!14535) (not d!14621) (not b!67588) (not d!14311) (not b!67582) (not d!14601) (not b!67571) (not d!14003) (not b!67574) (not b!67310) (not d!14683) (not d!14543) (not b!68267) (not b!68077) (not b!68040) (not d!14705) (not d!13959) (not d!14415) (not b!67726) (not b!67480) (not d!14403) (not bm!5650) (not b!67744) (not b!67444) (not b!67714) (not b!67625) (not d!14265) (not b!68286) (not b!67309) (not bm!5643) (not b!67520) (not b!68042) (not b_lambda!3057) (not d!14537) (not b!68080) (not bm!5744) (not b!67716) (not b!68049) (not d!14435) (not bm!5672) (not b_lambda!3051) (not b!68293) (not d!14029) (not b!67984) (not b!67186) (not b!67579) (not d!14101) (not d!14171) (not d!14357) (not b!68069) (not d!13977) (not b!67783) (not b!67593) (not b!68269) (not b!67610) (not d!14331) (not b!67226) (not b!67628) (not bm!5647) (not b!67431) (not d!14589) (not b!67752) (not b!67277) (not b_next!2071) (not b!68094) (not d!14013) (not b!67409) (not d!14175) (not b!67951) (not d!14701) (not b!67880) (not b!67662) (not b!67355) (not b!67315) (not b!67421) (not b!67432) (not d!14605) (not b!67680) (not b!67509) (not d!14051) (not b!67709) (not b!67755) (not b!68031) (not b_lambda!3071) (not b!68014) (not b!67673) (not b!67503) (not bm!5674) (not b!67496) (not b!67422) (not d!14297) (not b!67305) (not d!14115) (not bm!5741) (not d!14397) (not d!14319) (not b!68163) (not d!14571) (not bm!5696) (not b!67738) (not b!67287) (not b!67228) (not d!14293) (not b!67413) (not bm!5663) (not d!14315) (not d!14139) (not d!14119) (not b!68020) (not b!67657) (not bm!5728) (not d!13987) (not d!14103) (not b_lambda!2989) (not b!67416) (not b!68130) (not b!67910) (not d!14599) (not d!14379) (not b!67575) (not b!68265) (not b!68125) (not d!14117) (not b!67699) (not d!13971) (not d!14025) (not d!14641) (not b!68189) (not b!67365) (not b!68278) (not b!67180) (not d!14087) (not b!68183) (not b!67701) (not b!67317) (not b!67678) (not d!14445) (not b!67302) (not b!67758) (not b!67929) (not b!67659) (not b!67399) (not b!68173) (not b!67417) (not b!67368) (not d!14113) (not d!14301) (not d!14027) (not b!68202) (not d!14499) (not d!14461) (not b!67884) (not b!68256) (not b!67876) (not d!14697) (not d!14109) (not b!67374) (not b!67848) (not b!68145) (not d!13953) (not b!67734) (not d!14595) (not b!67559) (not b!67237) (not b!67400) (not b!68263) (not b!68291) (not b!67679) (not d!14131) (not d!14409) (not d!14243) (not bm!5667) (not d!14335) (not d!14241) (not d!14625) (not bm!5756) (not d!14693) (not b!68287) (not b!67748) (not d!14347) (not d!14695) (not b!68081) (not b!67377) (not d!14449) (not bm!5702) (not b_lambda!2993) (not bm!5714) (not b!68100) (not b!68112) (not d!14273) (not bm!5687) (not b!67468) (not b!68156) (not b!67804) (not b!67346) (not bm!5731) (not b!67711) (not b!68124) (not b!67727) (not b!67249) (not b!68170) (not b!68142) (not b!68127) (not b!68091) (not d!14659) (not d!14167) (not b!67549) (not b!67344) (not d!14157) (not d!14501) (not b!68215) (not b_next!2069) (not b!67197) (not b!67476) (not bm!5670) (not b!67619) (not b!67818) (not b!67893) (not d!14093) (not d!14105) (not b!67968) (not d!14343) (not b!67497) (not d!14001) (not d!14485) (not b!67200) (not b!67904) (not b!67395) (not d!14263) (not d!14707) (not d!14471) (not b!67681) (not d!14427) (not d!14669) (not d!14387) (not b!67808) (not b!68139) (not b!67456) (not b!67178) (not d!14183) (not b!67987) (not b!68247) (not d!14373) (not b!68235) (not b!68182) (not b!67585) (not b!67528) (not b!67867) (not bm!5693) (not b!68301) (not b!68147) (not d!14477) (not b!67488) (not b!67789) (not bm!5736) (not bm!5710) (not bm!5676) (not b!67600) (not d!14523) (not d!14107) (not b!67722) (not d!14257) (not b!68097) (not b!67922) (not d!14545) (not b!67822) (not b_lambda!3049) (not b!68050) (not bm!5665) (not d!14063) (not bm!5648) (not b!68199) (not b!67491) (not b!67342) (not b!68290) (not d!14111) (not b!68259) (not d!14065) (not b_lambda!3069) (not b_lambda!3011) (not b!67858) (not b!67358) (not d!14317) (not b!67881) (not b!67296) (not b!67243) (not b!67607) (not d!14597) (not d!14425) (not d!13975) (not d!14151) (not b!67622) (not bm!5682) (not b!67836) (not b!67240) (not d!14479) (not b!67452) (not b!68167) (not b!68186) (not b!67324) (not d!14453) (not b!67206) (not b!67418) (not b!67542) (not b!68053) (not d!14321) (not d!14649) (not d!14421) (not bm!5654) (not d!14329) (not b!68261) (not b!67781) (not d!14491) (not bm!5671) (not b!67371) (not d!14645) (not b!67504) tp_is_empty!2451 (not b!67512) (not b!67917) (not d!14143) (not d!14401) (not d!14515) (not bm!5699) (not b!67651) (not b!67735) (not b!68302) (not b!67685) (not b!67798) (not d!14661) (not b!67814) (not b!67521) (not b!67961) (not b!67233) (not b!67732) (not b!67194) (not b!67708) (not b!67545) (not d!14355) (not d!14159) (not b!67350) (not d!13963) (not b!67895) (not b!67183) (not bm!5646) (not b!67926) (not b!67217) (not b!68292) (not b!67364) (not bm!5739) (not b!67989) (not b!67199) (not b!67519) (not b!68158) (not bm!5749) (not b!68317) (not b!67879) (not d!14613) (not b!67668) (not b!67453) (not b!67502) (not d!14259) (not d!14017) (not b!67461) (not b!68208) (not b!68150) (not b!67896) (not d!14539) (not b!67795) (not d!14429) (not b!67775) (not d!14531) (not b!67262) (not b!68305) (not b!67854) (not b!67788) (not b!68118) (not b!67538) (not b_lambda!3005) (not b!67627) (not d!14337) (not b!67703) (not d!14309) (not d!14193) (not d!14517) (not b!67887) (not bm!5641) (not b_lambda!3053) (not d!14569) (not b!67172) (not b!67851) (not b!67283) (not d!14201) (not bm!5631) (not b!67741) (not b!67565) (not b!68082) (not b!67246) (not b!67981) (not b!67518) (not b!67710) (not d!14269) (not d!14303) (not b!67831) (not b!67307) (not b!68245) (not bm!5712) b_and!4197 (not b!67234) (not b!67856) (not bm!5725) (not b!67975) (not d!14469) (not d!14699) (not b!68251) (not b!67184) (not b!67264) (not b!67898) (not d!14289) (not b!67486) (not b!68180) (not b!68198) (not b!67489) (not b!67273) (not b!67375) (not b!67529) (not b!68254) (not d!14455) (not b!67378) (not d!14473) (not b!68121) (not b!67169) (not b!68037) (not d!14385) (not b!67834) (not b!67373) (not b!67903) (not b!68210) (not b!68102) (not b!67957) (not b!67339) (not b!68068) (not b!67597) (not b!68289) (not b!67385) (not d!14089) (not b!67293) (not b!68104) (not b!67485) (not b!67175) (not b!68295) (not d!14381) (not b!67312) (not b!67813) (not b!67532) (not b!67697) (not b!68310) (not bm!5635) (not b!67203) (not d!14021) (not b!67359) (not bm!5690) (not bm!5640) (not b!67256) (not b!67596) (not b!68088) (not d!14207) (not b!67414) (not d!14209) (not b!67515) (not b!68271) (not d!13967) (not b!67729) (not b!67557) (not b!67177) (not b!67686) (not b!68313) (not b!67671) (not b!68034) (not d!14055) (not b!68239) (not d!14233) (not b!67322) (not b!67331) (not b!67275) (not d!14607) (not b!68223) (not d!14399) (not b!67179) (not b!68136) (not b!67441) (not b!67434) (not d!14161) (not b!67669) (not bm!5719) (not b!68027) (not b!68192) (not b!67231) (not d!14635) (not d!14133) (not bm!5633) (not d!14251) (not b!67494) (not b!68250) (not b!68277) (not b!67319) (not b!67820) (not b!67682) (not b!67692) (not b!67572) (not b!67352) (not b!67756) (not b!67819) (not b!68314) (not d!13947) (not b!68224) (not b!67351) (not b!68281) (not b!67595) (not d!14405) (not b!68161) (not d!14467) (not b!67601) (not b!67837) (not bm!5664) (not b!67667) (not b!67182) (not d!14627) (not d!14277) (not bm!5754) (not b!67304) (not b!67977) (not b!68085) (not d!14395) (not d!14299) (not b!67392) (not bm!5651) (not b!67954) (not b!67523) (not d!14527) (not b!68213) (not b!67248) (not b!67761) (not b!67844) (not b!68233) (not b_lambda!3059) (not b!67587) (not b!67376) (not d!14275) (not b!68177))
(check-sat b_and!4197 b_and!4199 (not b_next!2069) (not b_next!2071))
