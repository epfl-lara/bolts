; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!12532 () Bool)

(assert start!12532)

(declare-fun b!107703 () Bool)

(declare-fun b_free!2549 () Bool)

(declare-fun b_next!2549 () Bool)

(assert (=> b!107703 (= b_free!2549 (not b_next!2549))))

(declare-fun tp!9980 () Bool)

(declare-fun b_and!6661 () Bool)

(assert (=> b!107703 (= tp!9980 b_and!6661)))

(declare-fun b!107707 () Bool)

(declare-fun b_free!2551 () Bool)

(declare-fun b_next!2551 () Bool)

(assert (=> b!107707 (= b_free!2551 (not b_next!2551))))

(declare-fun tp!9977 () Bool)

(declare-fun b_and!6663 () Bool)

(assert (=> b!107707 (= tp!9977 b_and!6663)))

(declare-fun b!107689 () Bool)

(declare-datatypes ((Unit!3339 0))(
  ( (Unit!3340) )
))
(declare-fun e!70118 () Unit!3339)

(declare-fun Unit!3341 () Unit!3339)

(assert (=> b!107689 (= e!70118 Unit!3341)))

(declare-fun lt!55245 () Unit!3339)

(declare-datatypes ((V!3235 0))(
  ( (V!3236 (val!1390 Int)) )
))
(declare-datatypes ((array!4374 0))(
  ( (array!4375 (arr!2074 (Array (_ BitVec 32) (_ BitVec 64))) (size!2330 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!1002 0))(
  ( (ValueCellFull!1002 (v!2912 V!3235)) (EmptyCell!1002) )
))
(declare-datatypes ((array!4376 0))(
  ( (array!4377 (arr!2075 (Array (_ BitVec 32) ValueCell!1002)) (size!2331 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!912 0))(
  ( (LongMapFixedSize!913 (defaultEntry!2606 Int) (mask!6764 (_ BitVec 32)) (extraKeys!2407 (_ BitVec 32)) (zeroValue!2479 V!3235) (minValue!2479 V!3235) (_size!505 (_ BitVec 32)) (_keys!4316 array!4374) (_values!2589 array!4376) (_vacant!505 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!712 0))(
  ( (Cell!713 (v!2913 LongMapFixedSize!912)) )
))
(declare-datatypes ((LongMap!712 0))(
  ( (LongMap!713 (underlying!367 Cell!712)) )
))
(declare-fun thiss!992 () LongMap!712)

(declare-fun from!355 () (_ BitVec 32))

(declare-fun lemmaListMapContainsThenArrayContainsFrom!114 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 64) (_ BitVec 32) Int) Unit!3339)

(assert (=> b!107689 (= lt!55245 (lemmaListMapContainsThenArrayContainsFrom!114 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4374 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!107689 (arrayContainsKey!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!55251 () Unit!3339)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4374 (_ BitVec 32) (_ BitVec 32)) Unit!3339)

(assert (=> b!107689 (= lt!55251 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1647 0))(
  ( (Nil!1644) (Cons!1643 (h!2241 (_ BitVec 64)) (t!5775 List!1647)) )
))
(declare-fun arrayNoDuplicates!0 (array!4374 (_ BitVec 32) List!1647) Bool)

(assert (=> b!107689 (arrayNoDuplicates!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) from!355 Nil!1644)))

(declare-fun lt!55255 () Unit!3339)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4374 (_ BitVec 32) (_ BitVec 64) List!1647) Unit!3339)

(assert (=> b!107689 (= lt!55255 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644)))))

(assert (=> b!107689 false))

(declare-fun b!107690 () Bool)

(declare-fun e!70126 () Bool)

(declare-fun e!70124 () Bool)

(assert (=> b!107690 (= e!70126 e!70124)))

(declare-fun res!53445 () Bool)

(assert (=> b!107690 (=> (not res!53445) (not e!70124))))

(declare-datatypes ((tuple2!2422 0))(
  ( (tuple2!2423 (_1!1221 (_ BitVec 64)) (_2!1221 V!3235)) )
))
(declare-datatypes ((List!1648 0))(
  ( (Nil!1645) (Cons!1644 (h!2242 tuple2!2422) (t!5776 List!1648)) )
))
(declare-datatypes ((ListLongMap!1591 0))(
  ( (ListLongMap!1592 (toList!811 List!1648)) )
))
(declare-fun lt!55256 () ListLongMap!1591)

(declare-fun lt!55247 () ListLongMap!1591)

(assert (=> b!107690 (= res!53445 (= lt!55256 lt!55247))))

(declare-fun newMap!16 () LongMapFixedSize!912)

(declare-fun map!1290 (LongMapFixedSize!912) ListLongMap!1591)

(assert (=> b!107690 (= lt!55247 (map!1290 newMap!16))))

(declare-fun getCurrentListMap!487 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 32) Int) ListLongMap!1591)

(assert (=> b!107690 (= lt!55256 (getCurrentListMap!487 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))))))

(declare-fun b!107691 () Bool)

(declare-fun e!70115 () Bool)

(declare-fun tp_is_empty!2691 () Bool)

(assert (=> b!107691 (= e!70115 tp_is_empty!2691)))

(declare-fun b!107692 () Bool)

(declare-fun e!70121 () Bool)

(declare-fun e!70116 () Bool)

(declare-fun mapRes!3973 () Bool)

(assert (=> b!107692 (= e!70121 (and e!70116 mapRes!3973))))

(declare-fun condMapEmpty!3973 () Bool)

(declare-fun mapDefault!3973 () ValueCell!1002)

(assert (=> b!107692 (= condMapEmpty!3973 (= (arr!2075 (_values!2589 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!1002)) mapDefault!3973)))))

(declare-fun b!107693 () Bool)

(assert (=> b!107693 (= e!70116 tp_is_empty!2691)))

(declare-fun b!107694 () Bool)

(declare-fun e!70123 () Bool)

(assert (=> b!107694 (= e!70124 e!70123)))

(declare-fun res!53444 () Bool)

(assert (=> b!107694 (=> (not res!53444) (not e!70123))))

(assert (=> b!107694 (= res!53444 (and (not (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!55248 () V!3235)

(declare-fun get!1349 (ValueCell!1002 V!3235) V!3235)

(declare-fun dynLambda!391 (Int (_ BitVec 64)) V!3235)

(assert (=> b!107694 (= lt!55248 (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) from!355) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun mapNonEmpty!3973 () Bool)

(declare-fun mapRes!3974 () Bool)

(declare-fun tp!9979 () Bool)

(declare-fun e!70129 () Bool)

(assert (=> mapNonEmpty!3973 (= mapRes!3974 (and tp!9979 e!70129))))

(declare-fun mapKey!3973 () (_ BitVec 32))

(declare-fun mapRest!3973 () (Array (_ BitVec 32) ValueCell!1002))

(declare-fun mapValue!3974 () ValueCell!1002)

(assert (=> mapNonEmpty!3973 (= (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (store mapRest!3973 mapKey!3973 mapValue!3974))))

(declare-fun b!107696 () Bool)

(declare-fun e!70130 () Bool)

(assert (=> b!107696 (= e!70123 e!70130)))

(declare-fun res!53446 () Bool)

(assert (=> b!107696 (=> (not res!53446) (not e!70130))))

(declare-datatypes ((tuple2!2424 0))(
  ( (tuple2!2425 (_1!1222 Bool) (_2!1222 LongMapFixedSize!912)) )
))
(declare-fun lt!55253 () tuple2!2424)

(assert (=> b!107696 (= res!53446 (and (_1!1222 lt!55253) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!55246 () Unit!3339)

(assert (=> b!107696 (= lt!55246 e!70118)))

(declare-fun c!18884 () Bool)

(declare-fun contains!834 (ListLongMap!1591 (_ BitVec 64)) Bool)

(assert (=> b!107696 (= c!18884 (contains!834 lt!55247 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun update!161 (LongMapFixedSize!912 (_ BitVec 64) V!3235) tuple2!2424)

(assert (=> b!107696 (= lt!55253 (update!161 newMap!16 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))

(declare-fun b!107697 () Bool)

(declare-fun e!70131 () Bool)

(assert (=> b!107697 (= e!70131 (and e!70115 mapRes!3974))))

(declare-fun condMapEmpty!3974 () Bool)

(declare-fun mapDefault!3974 () ValueCell!1002)

(assert (=> b!107697 (= condMapEmpty!3974 (= (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!1002)) mapDefault!3974)))))

(declare-fun b!107698 () Bool)

(declare-fun Unit!3342 () Unit!3339)

(assert (=> b!107698 (= e!70118 Unit!3342)))

(declare-fun b!107699 () Bool)

(declare-fun res!53450 () Bool)

(assert (=> b!107699 (=> (not res!53450) (not e!70126))))

(assert (=> b!107699 (= res!53450 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6764 newMap!16)) (_size!505 (v!2913 (underlying!367 thiss!992)))))))

(declare-fun b!107700 () Bool)

(declare-fun e!70128 () Bool)

(assert (=> b!107700 (= e!70128 (or (not (= (size!2331 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6764 (v!2913 (underlying!367 thiss!992)))))) (not (= (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (size!2331 (_values!2589 (v!2913 (underlying!367 thiss!992)))))) (bvslt (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000000) (bvsge (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!107701 () Bool)

(declare-fun res!53447 () Bool)

(assert (=> b!107701 (=> (not res!53447) (not e!70126))))

(declare-fun valid!416 (LongMapFixedSize!912) Bool)

(assert (=> b!107701 (= res!53447 (valid!416 newMap!16))))

(declare-fun b!107702 () Bool)

(assert (=> b!107702 (= e!70129 tp_is_empty!2691)))

(declare-fun e!70127 () Bool)

(declare-fun array_inv!1249 (array!4374) Bool)

(declare-fun array_inv!1250 (array!4376) Bool)

(assert (=> b!107703 (= e!70127 (and tp!9980 tp_is_empty!2691 (array_inv!1249 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (array_inv!1250 (_values!2589 (v!2913 (underlying!367 thiss!992)))) e!70131))))

(declare-fun b!107704 () Bool)

(declare-fun e!70125 () Bool)

(assert (=> b!107704 (= e!70125 e!70127)))

(declare-fun b!107705 () Bool)

(declare-fun res!53449 () Bool)

(assert (=> b!107705 (=> (not res!53449) (not e!70126))))

(assert (=> b!107705 (= res!53449 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun res!53448 () Bool)

(assert (=> start!12532 (=> (not res!53448) (not e!70126))))

(declare-fun valid!417 (LongMap!712) Bool)

(assert (=> start!12532 (= res!53448 (valid!417 thiss!992))))

(assert (=> start!12532 e!70126))

(declare-fun e!70120 () Bool)

(assert (=> start!12532 e!70120))

(assert (=> start!12532 true))

(declare-fun e!70119 () Bool)

(assert (=> start!12532 e!70119))

(declare-fun b!107695 () Bool)

(assert (=> b!107695 (= e!70130 (not e!70128))))

(declare-fun res!53443 () Bool)

(assert (=> b!107695 (=> res!53443 e!70128)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!107695 (= res!53443 (not (validMask!0 (mask!6764 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun lt!55250 () ListLongMap!1591)

(declare-fun lt!55252 () tuple2!2422)

(declare-fun lt!55249 () tuple2!2422)

(declare-fun +!148 (ListLongMap!1591 tuple2!2422) ListLongMap!1591)

(assert (=> b!107695 (= (+!148 (+!148 lt!55250 lt!55252) lt!55249) (+!148 (+!148 lt!55250 lt!55249) lt!55252))))

(assert (=> b!107695 (= lt!55249 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))

(assert (=> b!107695 (= lt!55252 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))

(declare-fun lt!55254 () Unit!3339)

(declare-fun addCommutativeForDiffKeys!60 (ListLongMap!1591 (_ BitVec 64) V!3235 (_ BitVec 64) V!3235) Unit!3339)

(assert (=> b!107695 (= lt!55254 (addCommutativeForDiffKeys!60 lt!55250 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!115 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 32) Int) ListLongMap!1591)

(assert (=> b!107695 (= lt!55250 (getCurrentListMapNoExtraKeys!115 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))))))

(declare-fun mapIsEmpty!3973 () Bool)

(assert (=> mapIsEmpty!3973 mapRes!3974))

(declare-fun b!107706 () Bool)

(assert (=> b!107706 (= e!70120 e!70125)))

(assert (=> b!107707 (= e!70119 (and tp!9977 tp_is_empty!2691 (array_inv!1249 (_keys!4316 newMap!16)) (array_inv!1250 (_values!2589 newMap!16)) e!70121))))

(declare-fun b!107708 () Bool)

(declare-fun e!70122 () Bool)

(assert (=> b!107708 (= e!70122 tp_is_empty!2691)))

(declare-fun mapIsEmpty!3974 () Bool)

(assert (=> mapIsEmpty!3974 mapRes!3973))

(declare-fun mapNonEmpty!3974 () Bool)

(declare-fun tp!9978 () Bool)

(assert (=> mapNonEmpty!3974 (= mapRes!3973 (and tp!9978 e!70122))))

(declare-fun mapKey!3974 () (_ BitVec 32))

(declare-fun mapRest!3974 () (Array (_ BitVec 32) ValueCell!1002))

(declare-fun mapValue!3973 () ValueCell!1002)

(assert (=> mapNonEmpty!3974 (= (arr!2075 (_values!2589 newMap!16)) (store mapRest!3974 mapKey!3974 mapValue!3973))))

(assert (= (and start!12532 res!53448) b!107705))

(assert (= (and b!107705 res!53449) b!107701))

(assert (= (and b!107701 res!53447) b!107699))

(assert (= (and b!107699 res!53450) b!107690))

(assert (= (and b!107690 res!53445) b!107694))

(assert (= (and b!107694 res!53444) b!107696))

(assert (= (and b!107696 c!18884) b!107689))

(assert (= (and b!107696 (not c!18884)) b!107698))

(assert (= (and b!107696 res!53446) b!107695))

(assert (= (and b!107695 (not res!53443)) b!107700))

(assert (= (and b!107697 condMapEmpty!3974) mapIsEmpty!3973))

(assert (= (and b!107697 (not condMapEmpty!3974)) mapNonEmpty!3973))

(get-info :version)

(assert (= (and mapNonEmpty!3973 ((_ is ValueCellFull!1002) mapValue!3974)) b!107702))

(assert (= (and b!107697 ((_ is ValueCellFull!1002) mapDefault!3974)) b!107691))

(assert (= b!107703 b!107697))

(assert (= b!107704 b!107703))

(assert (= b!107706 b!107704))

(assert (= start!12532 b!107706))

(assert (= (and b!107692 condMapEmpty!3973) mapIsEmpty!3974))

(assert (= (and b!107692 (not condMapEmpty!3973)) mapNonEmpty!3974))

(assert (= (and mapNonEmpty!3974 ((_ is ValueCellFull!1002) mapValue!3973)) b!107708))

(assert (= (and b!107692 ((_ is ValueCellFull!1002) mapDefault!3973)) b!107693))

(assert (= b!107707 b!107692))

(assert (= start!12532 b!107707))

(declare-fun b_lambda!4845 () Bool)

(assert (=> (not b_lambda!4845) (not b!107694)))

(declare-fun t!5772 () Bool)

(declare-fun tb!2093 () Bool)

(assert (=> (and b!107703 (= (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))) t!5772) tb!2093))

(declare-fun result!3507 () Bool)

(assert (=> tb!2093 (= result!3507 tp_is_empty!2691)))

(assert (=> b!107694 t!5772))

(declare-fun b_and!6665 () Bool)

(assert (= b_and!6661 (and (=> t!5772 result!3507) b_and!6665)))

(declare-fun t!5774 () Bool)

(declare-fun tb!2095 () Bool)

(assert (=> (and b!107707 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))) t!5774) tb!2095))

(declare-fun result!3511 () Bool)

(assert (= result!3511 result!3507))

(assert (=> b!107694 t!5774))

(declare-fun b_and!6667 () Bool)

(assert (= b_and!6663 (and (=> t!5774 result!3511) b_and!6667)))

(declare-fun m!121177 () Bool)

(assert (=> b!107695 m!121177))

(assert (=> b!107695 m!121177))

(declare-fun m!121179 () Bool)

(assert (=> b!107695 m!121179))

(declare-fun m!121181 () Bool)

(assert (=> b!107695 m!121181))

(assert (=> b!107695 m!121181))

(declare-fun m!121183 () Bool)

(assert (=> b!107695 m!121183))

(declare-fun m!121185 () Bool)

(assert (=> b!107695 m!121185))

(declare-fun m!121187 () Bool)

(assert (=> b!107695 m!121187))

(declare-fun m!121189 () Bool)

(assert (=> b!107695 m!121189))

(assert (=> b!107695 m!121187))

(declare-fun m!121191 () Bool)

(assert (=> b!107695 m!121191))

(declare-fun m!121193 () Bool)

(assert (=> mapNonEmpty!3974 m!121193))

(declare-fun m!121195 () Bool)

(assert (=> b!107707 m!121195))

(declare-fun m!121197 () Bool)

(assert (=> b!107707 m!121197))

(declare-fun m!121199 () Bool)

(assert (=> mapNonEmpty!3973 m!121199))

(declare-fun m!121201 () Bool)

(assert (=> start!12532 m!121201))

(declare-fun m!121203 () Bool)

(assert (=> b!107701 m!121203))

(assert (=> b!107694 m!121177))

(declare-fun m!121205 () Bool)

(assert (=> b!107694 m!121205))

(declare-fun m!121207 () Bool)

(assert (=> b!107694 m!121207))

(assert (=> b!107694 m!121205))

(assert (=> b!107694 m!121207))

(declare-fun m!121209 () Bool)

(assert (=> b!107694 m!121209))

(declare-fun m!121211 () Bool)

(assert (=> b!107703 m!121211))

(declare-fun m!121213 () Bool)

(assert (=> b!107703 m!121213))

(declare-fun m!121215 () Bool)

(assert (=> b!107690 m!121215))

(declare-fun m!121217 () Bool)

(assert (=> b!107690 m!121217))

(assert (=> b!107696 m!121177))

(assert (=> b!107696 m!121177))

(declare-fun m!121219 () Bool)

(assert (=> b!107696 m!121219))

(assert (=> b!107696 m!121177))

(declare-fun m!121221 () Bool)

(assert (=> b!107696 m!121221))

(declare-fun m!121223 () Bool)

(assert (=> b!107689 m!121223))

(declare-fun m!121225 () Bool)

(assert (=> b!107689 m!121225))

(assert (=> b!107689 m!121177))

(declare-fun m!121227 () Bool)

(assert (=> b!107689 m!121227))

(assert (=> b!107689 m!121177))

(assert (=> b!107689 m!121177))

(declare-fun m!121229 () Bool)

(assert (=> b!107689 m!121229))

(assert (=> b!107689 m!121177))

(declare-fun m!121231 () Bool)

(assert (=> b!107689 m!121231))

(check-sat (not start!12532) (not b!107694) b_and!6665 (not mapNonEmpty!3973) (not b!107690) (not b!107707) (not b!107696) (not mapNonEmpty!3974) (not b_next!2549) (not b!107701) (not b!107689) (not b_lambda!4845) (not b!107703) tp_is_empty!2691 (not b_next!2551) b_and!6667 (not b!107695))
(check-sat b_and!6665 b_and!6667 (not b_next!2549) (not b_next!2551))
(get-model)

(declare-fun b_lambda!4849 () Bool)

(assert (= b_lambda!4845 (or (and b!107703 b_free!2549) (and b!107707 b_free!2551 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))))) b_lambda!4849)))

(check-sat (not start!12532) (not b!107694) b_and!6665 (not mapNonEmpty!3973) (not b!107690) (not b!107707) (not b!107696) (not mapNonEmpty!3974) (not b_next!2549) (not b!107701) (not b!107689) (not b!107703) (not b_lambda!4849) tp_is_empty!2691 (not b_next!2551) b_and!6667 (not b!107695))
(check-sat b_and!6665 b_and!6667 (not b_next!2549) (not b_next!2551))
(get-model)

(declare-fun d!29849 () Bool)

(declare-fun e!70189 () Bool)

(assert (=> d!29849 e!70189))

(declare-fun res!53479 () Bool)

(assert (=> d!29849 (=> (not res!53479) (not e!70189))))

(declare-fun lt!55303 () ListLongMap!1591)

(assert (=> d!29849 (= res!53479 (contains!834 lt!55303 (_1!1221 lt!55252)))))

(declare-fun lt!55301 () List!1648)

(assert (=> d!29849 (= lt!55303 (ListLongMap!1592 lt!55301))))

(declare-fun lt!55302 () Unit!3339)

(declare-fun lt!55304 () Unit!3339)

(assert (=> d!29849 (= lt!55302 lt!55304)))

(declare-datatypes ((Option!162 0))(
  ( (Some!161 (v!2917 V!3235)) (None!160) )
))
(declare-fun getValueByKey!156 (List!1648 (_ BitVec 64)) Option!162)

(assert (=> d!29849 (= (getValueByKey!156 lt!55301 (_1!1221 lt!55252)) (Some!161 (_2!1221 lt!55252)))))

(declare-fun lemmaContainsTupThenGetReturnValue!74 (List!1648 (_ BitVec 64) V!3235) Unit!3339)

(assert (=> d!29849 (= lt!55304 (lemmaContainsTupThenGetReturnValue!74 lt!55301 (_1!1221 lt!55252) (_2!1221 lt!55252)))))

(declare-fun insertStrictlySorted!76 (List!1648 (_ BitVec 64) V!3235) List!1648)

(assert (=> d!29849 (= lt!55301 (insertStrictlySorted!76 (toList!811 (+!148 lt!55250 lt!55249)) (_1!1221 lt!55252) (_2!1221 lt!55252)))))

(assert (=> d!29849 (= (+!148 (+!148 lt!55250 lt!55249) lt!55252) lt!55303)))

(declare-fun b!107777 () Bool)

(declare-fun res!53480 () Bool)

(assert (=> b!107777 (=> (not res!53480) (not e!70189))))

(assert (=> b!107777 (= res!53480 (= (getValueByKey!156 (toList!811 lt!55303) (_1!1221 lt!55252)) (Some!161 (_2!1221 lt!55252))))))

(declare-fun b!107778 () Bool)

(declare-fun contains!835 (List!1648 tuple2!2422) Bool)

(assert (=> b!107778 (= e!70189 (contains!835 (toList!811 lt!55303) lt!55252))))

(assert (= (and d!29849 res!53479) b!107777))

(assert (= (and b!107777 res!53480) b!107778))

(declare-fun m!121289 () Bool)

(assert (=> d!29849 m!121289))

(declare-fun m!121291 () Bool)

(assert (=> d!29849 m!121291))

(declare-fun m!121293 () Bool)

(assert (=> d!29849 m!121293))

(declare-fun m!121295 () Bool)

(assert (=> d!29849 m!121295))

(declare-fun m!121297 () Bool)

(assert (=> b!107777 m!121297))

(declare-fun m!121299 () Bool)

(assert (=> b!107778 m!121299))

(assert (=> b!107695 d!29849))

(declare-fun b!107803 () Bool)

(declare-fun e!70210 () Bool)

(declare-fun lt!55324 () ListLongMap!1591)

(declare-fun isEmpty!378 (ListLongMap!1591) Bool)

(assert (=> b!107803 (= e!70210 (isEmpty!378 lt!55324))))

(declare-fun b!107804 () Bool)

(assert (=> b!107804 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(assert (=> b!107804 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2331 (_values!2589 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun e!70206 () Bool)

(declare-fun apply!99 (ListLongMap!1591 (_ BitVec 64)) V!3235)

(assert (=> b!107804 (= e!70206 (= (apply!99 lt!55324 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!107805 () Bool)

(declare-fun lt!55320 () Unit!3339)

(declare-fun lt!55322 () Unit!3339)

(assert (=> b!107805 (= lt!55320 lt!55322)))

(declare-fun lt!55325 () V!3235)

(declare-fun lt!55323 () (_ BitVec 64))

(declare-fun lt!55319 () ListLongMap!1591)

(declare-fun lt!55321 () (_ BitVec 64))

(assert (=> b!107805 (not (contains!834 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325)) lt!55323))))

(declare-fun addStillNotContains!49 (ListLongMap!1591 (_ BitVec 64) V!3235 (_ BitVec 64)) Unit!3339)

(assert (=> b!107805 (= lt!55322 (addStillNotContains!49 lt!55319 lt!55321 lt!55325 lt!55323))))

(assert (=> b!107805 (= lt!55323 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!107805 (= lt!55325 (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!107805 (= lt!55321 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!11370 () ListLongMap!1591)

(assert (=> b!107805 (= lt!55319 call!11370)))

(declare-fun e!70209 () ListLongMap!1591)

(assert (=> b!107805 (= e!70209 (+!148 call!11370 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!107806 () Bool)

(declare-fun e!70204 () Bool)

(assert (=> b!107806 (= e!70204 e!70206)))

(assert (=> b!107806 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun res!53492 () Bool)

(assert (=> b!107806 (= res!53492 (contains!834 lt!55324 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!107806 (=> (not res!53492) (not e!70206))))

(declare-fun b!107807 () Bool)

(assert (=> b!107807 (= e!70210 (= lt!55324 (getCurrentListMapNoExtraKeys!115 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!107808 () Bool)

(assert (=> b!107808 (= e!70209 call!11370)))

(declare-fun b!107809 () Bool)

(declare-fun e!70208 () ListLongMap!1591)

(assert (=> b!107809 (= e!70208 (ListLongMap!1592 Nil!1645))))

(declare-fun b!107810 () Bool)

(assert (=> b!107810 (= e!70204 e!70210)))

(declare-fun c!18896 () Bool)

(assert (=> b!107810 (= c!18896 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun d!29851 () Bool)

(declare-fun e!70205 () Bool)

(assert (=> d!29851 e!70205))

(declare-fun res!53489 () Bool)

(assert (=> d!29851 (=> (not res!53489) (not e!70205))))

(assert (=> d!29851 (= res!53489 (not (contains!834 lt!55324 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29851 (= lt!55324 e!70208)))

(declare-fun c!18898 () Bool)

(assert (=> d!29851 (= c!18898 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(assert (=> d!29851 (validMask!0 (mask!6764 (v!2913 (underlying!367 thiss!992))))))

(assert (=> d!29851 (= (getCurrentListMapNoExtraKeys!115 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))) lt!55324)))

(declare-fun b!107811 () Bool)

(assert (=> b!107811 (= e!70205 e!70204)))

(declare-fun c!18899 () Bool)

(declare-fun e!70207 () Bool)

(assert (=> b!107811 (= c!18899 e!70207)))

(declare-fun res!53491 () Bool)

(assert (=> b!107811 (=> (not res!53491) (not e!70207))))

(assert (=> b!107811 (= res!53491 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!107812 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!107812 (= e!70207 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!107812 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!107813 () Bool)

(assert (=> b!107813 (= e!70208 e!70209)))

(declare-fun c!18897 () Bool)

(assert (=> b!107813 (= c!18897 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!107814 () Bool)

(declare-fun res!53490 () Bool)

(assert (=> b!107814 (=> (not res!53490) (not e!70205))))

(assert (=> b!107814 (= res!53490 (not (contains!834 lt!55324 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!11367 () Bool)

(assert (=> bm!11367 (= call!11370 (getCurrentListMapNoExtraKeys!115 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))))))

(assert (= (and d!29851 c!18898) b!107809))

(assert (= (and d!29851 (not c!18898)) b!107813))

(assert (= (and b!107813 c!18897) b!107805))

(assert (= (and b!107813 (not c!18897)) b!107808))

(assert (= (or b!107805 b!107808) bm!11367))

(assert (= (and d!29851 res!53489) b!107814))

(assert (= (and b!107814 res!53490) b!107811))

(assert (= (and b!107811 res!53491) b!107812))

(assert (= (and b!107811 c!18899) b!107806))

(assert (= (and b!107811 (not c!18899)) b!107810))

(assert (= (and b!107806 res!53492) b!107804))

(assert (= (and b!107810 c!18896) b!107807))

(assert (= (and b!107810 (not c!18896)) b!107803))

(declare-fun b_lambda!4851 () Bool)

(assert (=> (not b_lambda!4851) (not b!107804)))

(assert (=> b!107804 t!5772))

(declare-fun b_and!6677 () Bool)

(assert (= b_and!6665 (and (=> t!5772 result!3507) b_and!6677)))

(assert (=> b!107804 t!5774))

(declare-fun b_and!6679 () Bool)

(assert (= b_and!6667 (and (=> t!5774 result!3511) b_and!6679)))

(declare-fun b_lambda!4853 () Bool)

(assert (=> (not b_lambda!4853) (not b!107805)))

(assert (=> b!107805 t!5772))

(declare-fun b_and!6681 () Bool)

(assert (= b_and!6677 (and (=> t!5772 result!3507) b_and!6681)))

(assert (=> b!107805 t!5774))

(declare-fun b_and!6683 () Bool)

(assert (= b_and!6679 (and (=> t!5774 result!3511) b_and!6683)))

(declare-fun m!121301 () Bool)

(assert (=> b!107803 m!121301))

(declare-fun m!121303 () Bool)

(assert (=> b!107807 m!121303))

(assert (=> b!107804 m!121207))

(declare-fun m!121305 () Bool)

(assert (=> b!107804 m!121305))

(declare-fun m!121307 () Bool)

(assert (=> b!107804 m!121307))

(assert (=> b!107804 m!121305))

(declare-fun m!121309 () Bool)

(assert (=> b!107804 m!121309))

(assert (=> b!107804 m!121309))

(assert (=> b!107804 m!121207))

(declare-fun m!121311 () Bool)

(assert (=> b!107804 m!121311))

(declare-fun m!121313 () Bool)

(assert (=> b!107814 m!121313))

(declare-fun m!121315 () Bool)

(assert (=> b!107805 m!121315))

(assert (=> b!107805 m!121207))

(declare-fun m!121317 () Bool)

(assert (=> b!107805 m!121317))

(assert (=> b!107805 m!121305))

(declare-fun m!121319 () Bool)

(assert (=> b!107805 m!121319))

(assert (=> b!107805 m!121309))

(assert (=> b!107805 m!121309))

(assert (=> b!107805 m!121207))

(assert (=> b!107805 m!121311))

(assert (=> b!107805 m!121319))

(declare-fun m!121321 () Bool)

(assert (=> b!107805 m!121321))

(assert (=> b!107812 m!121305))

(assert (=> b!107812 m!121305))

(declare-fun m!121323 () Bool)

(assert (=> b!107812 m!121323))

(assert (=> bm!11367 m!121303))

(assert (=> b!107806 m!121305))

(assert (=> b!107806 m!121305))

(declare-fun m!121325 () Bool)

(assert (=> b!107806 m!121325))

(assert (=> b!107813 m!121305))

(assert (=> b!107813 m!121305))

(assert (=> b!107813 m!121323))

(declare-fun m!121327 () Bool)

(assert (=> d!29851 m!121327))

(assert (=> d!29851 m!121185))

(assert (=> b!107695 d!29851))

(declare-fun d!29853 () Bool)

(assert (=> d!29853 (= (+!148 (+!148 lt!55250 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (+!148 (+!148 lt!55250 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))

(declare-fun lt!55328 () Unit!3339)

(declare-fun choose!675 (ListLongMap!1591 (_ BitVec 64) V!3235 (_ BitVec 64) V!3235) Unit!3339)

(assert (=> d!29853 (= lt!55328 (choose!675 lt!55250 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))

(assert (=> d!29853 (not (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29853 (= (addCommutativeForDiffKeys!60 lt!55250 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) lt!55328)))

(declare-fun bs!4432 () Bool)

(assert (= bs!4432 d!29853))

(declare-fun m!121329 () Bool)

(assert (=> bs!4432 m!121329))

(declare-fun m!121331 () Bool)

(assert (=> bs!4432 m!121331))

(assert (=> bs!4432 m!121329))

(declare-fun m!121333 () Bool)

(assert (=> bs!4432 m!121333))

(declare-fun m!121335 () Bool)

(assert (=> bs!4432 m!121335))

(assert (=> bs!4432 m!121333))

(assert (=> bs!4432 m!121177))

(declare-fun m!121337 () Bool)

(assert (=> bs!4432 m!121337))

(assert (=> b!107695 d!29853))

(declare-fun d!29855 () Bool)

(declare-fun e!70211 () Bool)

(assert (=> d!29855 e!70211))

(declare-fun res!53493 () Bool)

(assert (=> d!29855 (=> (not res!53493) (not e!70211))))

(declare-fun lt!55331 () ListLongMap!1591)

(assert (=> d!29855 (= res!53493 (contains!834 lt!55331 (_1!1221 lt!55252)))))

(declare-fun lt!55329 () List!1648)

(assert (=> d!29855 (= lt!55331 (ListLongMap!1592 lt!55329))))

(declare-fun lt!55330 () Unit!3339)

(declare-fun lt!55332 () Unit!3339)

(assert (=> d!29855 (= lt!55330 lt!55332)))

(assert (=> d!29855 (= (getValueByKey!156 lt!55329 (_1!1221 lt!55252)) (Some!161 (_2!1221 lt!55252)))))

(assert (=> d!29855 (= lt!55332 (lemmaContainsTupThenGetReturnValue!74 lt!55329 (_1!1221 lt!55252) (_2!1221 lt!55252)))))

(assert (=> d!29855 (= lt!55329 (insertStrictlySorted!76 (toList!811 lt!55250) (_1!1221 lt!55252) (_2!1221 lt!55252)))))

(assert (=> d!29855 (= (+!148 lt!55250 lt!55252) lt!55331)))

(declare-fun b!107815 () Bool)

(declare-fun res!53494 () Bool)

(assert (=> b!107815 (=> (not res!53494) (not e!70211))))

(assert (=> b!107815 (= res!53494 (= (getValueByKey!156 (toList!811 lt!55331) (_1!1221 lt!55252)) (Some!161 (_2!1221 lt!55252))))))

(declare-fun b!107816 () Bool)

(assert (=> b!107816 (= e!70211 (contains!835 (toList!811 lt!55331) lt!55252))))

(assert (= (and d!29855 res!53493) b!107815))

(assert (= (and b!107815 res!53494) b!107816))

(declare-fun m!121339 () Bool)

(assert (=> d!29855 m!121339))

(declare-fun m!121341 () Bool)

(assert (=> d!29855 m!121341))

(declare-fun m!121343 () Bool)

(assert (=> d!29855 m!121343))

(declare-fun m!121345 () Bool)

(assert (=> d!29855 m!121345))

(declare-fun m!121347 () Bool)

(assert (=> b!107815 m!121347))

(declare-fun m!121349 () Bool)

(assert (=> b!107816 m!121349))

(assert (=> b!107695 d!29855))

(declare-fun d!29857 () Bool)

(declare-fun e!70212 () Bool)

(assert (=> d!29857 e!70212))

(declare-fun res!53495 () Bool)

(assert (=> d!29857 (=> (not res!53495) (not e!70212))))

(declare-fun lt!55335 () ListLongMap!1591)

(assert (=> d!29857 (= res!53495 (contains!834 lt!55335 (_1!1221 lt!55249)))))

(declare-fun lt!55333 () List!1648)

(assert (=> d!29857 (= lt!55335 (ListLongMap!1592 lt!55333))))

(declare-fun lt!55334 () Unit!3339)

(declare-fun lt!55336 () Unit!3339)

(assert (=> d!29857 (= lt!55334 lt!55336)))

(assert (=> d!29857 (= (getValueByKey!156 lt!55333 (_1!1221 lt!55249)) (Some!161 (_2!1221 lt!55249)))))

(assert (=> d!29857 (= lt!55336 (lemmaContainsTupThenGetReturnValue!74 lt!55333 (_1!1221 lt!55249) (_2!1221 lt!55249)))))

(assert (=> d!29857 (= lt!55333 (insertStrictlySorted!76 (toList!811 (+!148 lt!55250 lt!55252)) (_1!1221 lt!55249) (_2!1221 lt!55249)))))

(assert (=> d!29857 (= (+!148 (+!148 lt!55250 lt!55252) lt!55249) lt!55335)))

(declare-fun b!107817 () Bool)

(declare-fun res!53496 () Bool)

(assert (=> b!107817 (=> (not res!53496) (not e!70212))))

(assert (=> b!107817 (= res!53496 (= (getValueByKey!156 (toList!811 lt!55335) (_1!1221 lt!55249)) (Some!161 (_2!1221 lt!55249))))))

(declare-fun b!107818 () Bool)

(assert (=> b!107818 (= e!70212 (contains!835 (toList!811 lt!55335) lt!55249))))

(assert (= (and d!29857 res!53495) b!107817))

(assert (= (and b!107817 res!53496) b!107818))

(declare-fun m!121351 () Bool)

(assert (=> d!29857 m!121351))

(declare-fun m!121353 () Bool)

(assert (=> d!29857 m!121353))

(declare-fun m!121355 () Bool)

(assert (=> d!29857 m!121355))

(declare-fun m!121357 () Bool)

(assert (=> d!29857 m!121357))

(declare-fun m!121359 () Bool)

(assert (=> b!107817 m!121359))

(declare-fun m!121361 () Bool)

(assert (=> b!107818 m!121361))

(assert (=> b!107695 d!29857))

(declare-fun d!29859 () Bool)

(declare-fun e!70213 () Bool)

(assert (=> d!29859 e!70213))

(declare-fun res!53497 () Bool)

(assert (=> d!29859 (=> (not res!53497) (not e!70213))))

(declare-fun lt!55339 () ListLongMap!1591)

(assert (=> d!29859 (= res!53497 (contains!834 lt!55339 (_1!1221 lt!55249)))))

(declare-fun lt!55337 () List!1648)

(assert (=> d!29859 (= lt!55339 (ListLongMap!1592 lt!55337))))

(declare-fun lt!55338 () Unit!3339)

(declare-fun lt!55340 () Unit!3339)

(assert (=> d!29859 (= lt!55338 lt!55340)))

(assert (=> d!29859 (= (getValueByKey!156 lt!55337 (_1!1221 lt!55249)) (Some!161 (_2!1221 lt!55249)))))

(assert (=> d!29859 (= lt!55340 (lemmaContainsTupThenGetReturnValue!74 lt!55337 (_1!1221 lt!55249) (_2!1221 lt!55249)))))

(assert (=> d!29859 (= lt!55337 (insertStrictlySorted!76 (toList!811 lt!55250) (_1!1221 lt!55249) (_2!1221 lt!55249)))))

(assert (=> d!29859 (= (+!148 lt!55250 lt!55249) lt!55339)))

(declare-fun b!107819 () Bool)

(declare-fun res!53498 () Bool)

(assert (=> b!107819 (=> (not res!53498) (not e!70213))))

(assert (=> b!107819 (= res!53498 (= (getValueByKey!156 (toList!811 lt!55339) (_1!1221 lt!55249)) (Some!161 (_2!1221 lt!55249))))))

(declare-fun b!107820 () Bool)

(assert (=> b!107820 (= e!70213 (contains!835 (toList!811 lt!55339) lt!55249))))

(assert (= (and d!29859 res!53497) b!107819))

(assert (= (and b!107819 res!53498) b!107820))

(declare-fun m!121363 () Bool)

(assert (=> d!29859 m!121363))

(declare-fun m!121365 () Bool)

(assert (=> d!29859 m!121365))

(declare-fun m!121367 () Bool)

(assert (=> d!29859 m!121367))

(declare-fun m!121369 () Bool)

(assert (=> d!29859 m!121369))

(declare-fun m!121371 () Bool)

(assert (=> b!107819 m!121371))

(declare-fun m!121373 () Bool)

(assert (=> b!107820 m!121373))

(assert (=> b!107695 d!29859))

(declare-fun d!29861 () Bool)

(assert (=> d!29861 (= (validMask!0 (mask!6764 (v!2913 (underlying!367 thiss!992)))) (and (or (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000001111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000011111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000001111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000011111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000001111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000011111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000111111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000000001111111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000000011111111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000000111111111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000001111111111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000011111111111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000111111111111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000001111111111111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000011111111111111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000111111111111111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000001111111111111111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000011111111111111111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000111111111111111111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000001111111111111111111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000011111111111111111111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000111111111111111111111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00001111111111111111111111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00011111111111111111111111111111) (= (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!107695 d!29861))

(declare-fun d!29863 () Bool)

(declare-fun res!53505 () Bool)

(declare-fun e!70216 () Bool)

(assert (=> d!29863 (=> (not res!53505) (not e!70216))))

(declare-fun simpleValid!74 (LongMapFixedSize!912) Bool)

(assert (=> d!29863 (= res!53505 (simpleValid!74 newMap!16))))

(assert (=> d!29863 (= (valid!416 newMap!16) e!70216)))

(declare-fun b!107827 () Bool)

(declare-fun res!53506 () Bool)

(assert (=> b!107827 (=> (not res!53506) (not e!70216))))

(declare-fun arrayCountValidKeys!0 (array!4374 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!107827 (= res!53506 (= (arrayCountValidKeys!0 (_keys!4316 newMap!16) #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))) (_size!505 newMap!16)))))

(declare-fun b!107828 () Bool)

(declare-fun res!53507 () Bool)

(assert (=> b!107828 (=> (not res!53507) (not e!70216))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4374 (_ BitVec 32)) Bool)

(assert (=> b!107828 (= res!53507 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun b!107829 () Bool)

(assert (=> b!107829 (= e!70216 (arrayNoDuplicates!0 (_keys!4316 newMap!16) #b00000000000000000000000000000000 Nil!1644))))

(assert (= (and d!29863 res!53505) b!107827))

(assert (= (and b!107827 res!53506) b!107828))

(assert (= (and b!107828 res!53507) b!107829))

(declare-fun m!121375 () Bool)

(assert (=> d!29863 m!121375))

(declare-fun m!121377 () Bool)

(assert (=> b!107827 m!121377))

(declare-fun m!121379 () Bool)

(assert (=> b!107828 m!121379))

(declare-fun m!121381 () Bool)

(assert (=> b!107829 m!121381))

(assert (=> b!107701 d!29863))

(declare-fun d!29865 () Bool)

(declare-fun e!70222 () Bool)

(assert (=> d!29865 e!70222))

(declare-fun res!53510 () Bool)

(assert (=> d!29865 (=> res!53510 e!70222)))

(declare-fun lt!55349 () Bool)

(assert (=> d!29865 (= res!53510 (not lt!55349))))

(declare-fun lt!55350 () Bool)

(assert (=> d!29865 (= lt!55349 lt!55350)))

(declare-fun lt!55351 () Unit!3339)

(declare-fun e!70221 () Unit!3339)

(assert (=> d!29865 (= lt!55351 e!70221)))

(declare-fun c!18902 () Bool)

(assert (=> d!29865 (= c!18902 lt!55350)))

(declare-fun containsKey!160 (List!1648 (_ BitVec 64)) Bool)

(assert (=> d!29865 (= lt!55350 (containsKey!160 (toList!811 lt!55247) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!29865 (= (contains!834 lt!55247 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) lt!55349)))

(declare-fun b!107836 () Bool)

(declare-fun lt!55352 () Unit!3339)

(assert (=> b!107836 (= e!70221 lt!55352)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!109 (List!1648 (_ BitVec 64)) Unit!3339)

(assert (=> b!107836 (= lt!55352 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55247) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun isDefined!110 (Option!162) Bool)

(assert (=> b!107836 (isDefined!110 (getValueByKey!156 (toList!811 lt!55247) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!107837 () Bool)

(declare-fun Unit!3346 () Unit!3339)

(assert (=> b!107837 (= e!70221 Unit!3346)))

(declare-fun b!107838 () Bool)

(assert (=> b!107838 (= e!70222 (isDefined!110 (getValueByKey!156 (toList!811 lt!55247) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))))

(assert (= (and d!29865 c!18902) b!107836))

(assert (= (and d!29865 (not c!18902)) b!107837))

(assert (= (and d!29865 (not res!53510)) b!107838))

(assert (=> d!29865 m!121177))

(declare-fun m!121383 () Bool)

(assert (=> d!29865 m!121383))

(assert (=> b!107836 m!121177))

(declare-fun m!121385 () Bool)

(assert (=> b!107836 m!121385))

(assert (=> b!107836 m!121177))

(declare-fun m!121387 () Bool)

(assert (=> b!107836 m!121387))

(assert (=> b!107836 m!121387))

(declare-fun m!121389 () Bool)

(assert (=> b!107836 m!121389))

(assert (=> b!107838 m!121177))

(assert (=> b!107838 m!121387))

(assert (=> b!107838 m!121387))

(assert (=> b!107838 m!121389))

(assert (=> b!107696 d!29865))

(declare-fun e!70274 () Bool)

(declare-fun b!107923 () Bool)

(declare-datatypes ((SeekEntryResult!270 0))(
  ( (MissingZero!270 (index!3229 (_ BitVec 32))) (Found!270 (index!3230 (_ BitVec 32))) (Intermediate!270 (undefined!1082 Bool) (index!3231 (_ BitVec 32)) (x!13814 (_ BitVec 32))) (Undefined!270) (MissingVacant!270 (index!3232 (_ BitVec 32))) )
))
(declare-fun lt!55428 () SeekEntryResult!270)

(assert (=> b!107923 (= e!70274 (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55428)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!107924 () Bool)

(declare-fun c!18936 () Bool)

(declare-fun lt!55408 () SeekEntryResult!270)

(assert (=> b!107924 (= c!18936 ((_ is MissingVacant!270) lt!55408))))

(declare-fun e!70280 () tuple2!2424)

(declare-fun e!70284 () tuple2!2424)

(assert (=> b!107924 (= e!70280 e!70284)))

(declare-fun b!107925 () Bool)

(declare-fun lt!55410 () Unit!3339)

(declare-fun lt!55415 () Unit!3339)

(assert (=> b!107925 (= lt!55410 lt!55415)))

(declare-fun call!11442 () ListLongMap!1591)

(declare-fun call!11421 () ListLongMap!1591)

(assert (=> b!107925 (= call!11442 call!11421)))

(declare-fun lt!55416 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!48 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 V!3235 Int) Unit!3339)

(assert (=> b!107925 (= lt!55415 (lemmaChangeLongMinValueKeyThenAddPairToListMap!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) lt!55416 (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) lt!55248 (defaultEntry!2606 newMap!16)))))

(assert (=> b!107925 (= lt!55416 (bvor (extraKeys!2407 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!70271 () tuple2!2424)

(assert (=> b!107925 (= e!70271 (tuple2!2425 true (LongMapFixedSize!913 (defaultEntry!2606 newMap!16) (mask!6764 newMap!16) (bvor (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) (zeroValue!2479 newMap!16) lt!55248 (_size!505 newMap!16) (_keys!4316 newMap!16) (_values!2589 newMap!16) (_vacant!505 newMap!16))))))

(declare-fun b!107926 () Bool)

(declare-fun res!53546 () Bool)

(declare-fun e!70279 () Bool)

(assert (=> b!107926 (=> (not res!53546) (not e!70279))))

(declare-fun lt!55412 () SeekEntryResult!270)

(assert (=> b!107926 (= res!53546 (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3229 lt!55412)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!107927 () Bool)

(declare-fun e!70285 () Unit!3339)

(declare-fun Unit!3347 () Unit!3339)

(assert (=> b!107927 (= e!70285 Unit!3347)))

(declare-fun lt!55426 () Unit!3339)

(declare-fun call!11423 () Unit!3339)

(assert (=> b!107927 (= lt!55426 call!11423)))

(declare-fun lt!55417 () SeekEntryResult!270)

(declare-fun call!11435 () SeekEntryResult!270)

(assert (=> b!107927 (= lt!55417 call!11435)))

(declare-fun res!53550 () Bool)

(assert (=> b!107927 (= res!53550 ((_ is Found!270) lt!55417))))

(declare-fun e!70269 () Bool)

(assert (=> b!107927 (=> (not res!53550) (not e!70269))))

(assert (=> b!107927 e!70269))

(declare-fun lt!55409 () Unit!3339)

(assert (=> b!107927 (= lt!55409 lt!55426)))

(assert (=> b!107927 false))

(declare-fun b!107928 () Bool)

(declare-fun e!70272 () Bool)

(declare-fun e!70267 () Bool)

(assert (=> b!107928 (= e!70272 e!70267)))

(declare-fun res!53544 () Bool)

(declare-fun call!11441 () Bool)

(assert (=> b!107928 (= res!53544 call!11441)))

(assert (=> b!107928 (=> (not res!53544) (not e!70267))))

(declare-fun b!107929 () Bool)

(declare-fun lt!55423 () Unit!3339)

(declare-fun lt!55425 () Unit!3339)

(assert (=> b!107929 (= lt!55423 lt!55425)))

(assert (=> b!107929 (= call!11442 call!11421)))

(declare-fun lt!55433 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!48 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 V!3235 Int) Unit!3339)

(assert (=> b!107929 (= lt!55425 (lemmaChangeZeroKeyThenAddPairToListMap!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) lt!55433 (zeroValue!2479 newMap!16) lt!55248 (minValue!2479 newMap!16) (defaultEntry!2606 newMap!16)))))

(assert (=> b!107929 (= lt!55433 (bvor (extraKeys!2407 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!107929 (= e!70271 (tuple2!2425 true (LongMapFixedSize!913 (defaultEntry!2606 newMap!16) (mask!6764 newMap!16) (bvor (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) lt!55248 (minValue!2479 newMap!16) (_size!505 newMap!16) (_keys!4316 newMap!16) (_values!2589 newMap!16) (_vacant!505 newMap!16))))))

(declare-fun b!107930 () Bool)

(declare-fun res!53545 () Bool)

(declare-fun lt!55427 () SeekEntryResult!270)

(assert (=> b!107930 (= res!53545 (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3232 lt!55427)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107930 (=> (not res!53545) (not e!70267))))

(declare-fun b!107931 () Bool)

(declare-fun e!70288 () Bool)

(declare-fun call!11422 () Bool)

(assert (=> b!107931 (= e!70288 (not call!11422))))

(declare-fun b!107932 () Bool)

(assert (=> b!107932 (= e!70269 (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55417)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!107933 () Bool)

(declare-fun e!70282 () ListLongMap!1591)

(declare-fun call!11431 () ListLongMap!1591)

(assert (=> b!107933 (= e!70282 call!11431)))

(declare-fun bm!11416 () Bool)

(declare-fun call!11424 () ListLongMap!1591)

(assert (=> bm!11416 (= call!11442 call!11424)))

(declare-fun b!107934 () Bool)

(declare-fun e!70281 () Bool)

(assert (=> b!107934 (= e!70281 e!70288)))

(declare-fun res!53541 () Bool)

(declare-fun call!11436 () Bool)

(assert (=> b!107934 (= res!53541 call!11436)))

(assert (=> b!107934 (=> (not res!53541) (not e!70288))))

(declare-fun call!11425 () Bool)

(declare-fun bm!11417 () Bool)

(assert (=> bm!11417 (= call!11425 (arrayContainsKey!0 (_keys!4316 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!107935 () Bool)

(declare-fun e!70278 () ListLongMap!1591)

(assert (=> b!107935 (= e!70278 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun b!107936 () Bool)

(declare-fun res!53549 () Bool)

(declare-fun e!70276 () Bool)

(assert (=> b!107936 (=> (not res!53549) (not e!70276))))

(assert (=> b!107936 (= res!53549 call!11441)))

(declare-fun e!70268 () Bool)

(assert (=> b!107936 (= e!70268 e!70276)))

(declare-fun b!107937 () Bool)

(declare-fun lt!55414 () Unit!3339)

(declare-fun lt!55431 () Unit!3339)

(assert (=> b!107937 (= lt!55414 lt!55431)))

(declare-fun call!11432 () ListLongMap!1591)

(assert (=> b!107937 (contains!834 call!11432 (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408)))))

(declare-fun lt!55413 () array!4376)

(declare-fun lemmaValidKeyInArrayIsInListMap!106 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 32) Int) Unit!3339)

(assert (=> b!107937 (= lt!55431 (lemmaValidKeyInArrayIsInListMap!106 (_keys!4316 newMap!16) lt!55413 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (index!3230 lt!55408) (defaultEntry!2606 newMap!16)))))

(assert (=> b!107937 (= lt!55413 (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))))))

(declare-fun lt!55422 () Unit!3339)

(declare-fun lt!55421 () Unit!3339)

(assert (=> b!107937 (= lt!55422 lt!55421)))

(assert (=> b!107937 (= call!11424 call!11431)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!48 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 32) (_ BitVec 64) V!3235 Int) Unit!3339)

(assert (=> b!107937 (= lt!55421 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (index!3230 lt!55408) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55420 () Unit!3339)

(declare-fun e!70275 () Unit!3339)

(assert (=> b!107937 (= lt!55420 e!70275)))

(declare-fun c!18931 () Bool)

(declare-fun call!11439 () Bool)

(assert (=> b!107937 (= c!18931 call!11439)))

(declare-fun e!70270 () tuple2!2424)

(assert (=> b!107937 (= e!70270 (tuple2!2425 true (LongMapFixedSize!913 (defaultEntry!2606 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (_size!505 newMap!16) (_keys!4316 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))) (_vacant!505 newMap!16))))))

(declare-fun bm!11418 () Bool)

(declare-fun call!11427 () SeekEntryResult!270)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4374 (_ BitVec 32)) SeekEntryResult!270)

(assert (=> bm!11418 (= call!11427 (seekEntryOrOpen!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun b!107938 () Bool)

(assert (=> b!107938 (= e!70279 (not call!11422))))

(declare-fun b!107939 () Bool)

(declare-fun call!11434 () Bool)

(assert (=> b!107939 (= e!70276 (not call!11434))))

(declare-fun bm!11419 () Bool)

(declare-fun call!11433 () SeekEntryResult!270)

(assert (=> bm!11419 (= call!11433 call!11427)))

(declare-fun b!107940 () Bool)

(declare-fun e!70286 () Bool)

(declare-fun e!70287 () Bool)

(assert (=> b!107940 (= e!70286 e!70287)))

(declare-fun c!18942 () Bool)

(declare-fun lt!55429 () tuple2!2424)

(assert (=> b!107940 (= c!18942 (_1!1222 lt!55429))))

(declare-fun b!107941 () Bool)

(assert (=> b!107941 (= e!70272 ((_ is Undefined!270) lt!55427))))

(declare-fun bm!11420 () Bool)

(declare-fun c!18937 () Bool)

(declare-fun c!18933 () Bool)

(declare-fun c!18935 () Bool)

(declare-fun call!11438 () Bool)

(declare-fun c!18939 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!11420 (= call!11438 (inRange!0 (ite c!18935 (ite c!18937 (index!3230 lt!55417) (ite c!18933 (index!3229 lt!55427) (index!3232 lt!55427))) (ite c!18931 (index!3230 lt!55428) (ite c!18939 (index!3229 lt!55412) (index!3232 lt!55412)))) (mask!6764 newMap!16)))))

(declare-fun bm!11421 () Bool)

(declare-fun call!11429 () Bool)

(assert (=> bm!11421 (= call!11429 call!11438)))

(declare-fun b!107942 () Bool)

(declare-fun e!70283 () tuple2!2424)

(assert (=> b!107942 (= e!70283 e!70271)))

(declare-fun c!18941 () Bool)

(assert (=> b!107942 (= c!18941 (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11422 () Bool)

(declare-fun call!11426 () ListLongMap!1591)

(assert (=> bm!11422 (= call!11426 (map!1290 newMap!16))))

(declare-fun b!107943 () Bool)

(declare-fun lt!55430 () tuple2!2424)

(assert (=> b!107943 (= e!70284 (tuple2!2425 (_1!1222 lt!55430) (_2!1222 lt!55430)))))

(declare-fun call!11437 () tuple2!2424)

(assert (=> b!107943 (= lt!55430 call!11437)))

(declare-fun b!107944 () Bool)

(declare-fun res!53539 () Bool)

(assert (=> b!107944 (= res!53539 call!11429)))

(assert (=> b!107944 (=> (not res!53539) (not e!70269))))

(declare-fun call!11419 () Unit!3339)

(declare-fun bm!11423 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!48 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 64) Int) Unit!3339)

(assert (=> bm!11423 (= call!11419 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)))))

(declare-fun bm!11424 () Bool)

(declare-fun call!11420 () ListLongMap!1591)

(assert (=> bm!11424 (= call!11431 call!11420)))

(declare-fun b!107945 () Bool)

(declare-fun res!53548 () Bool)

(assert (=> b!107945 (=> (not res!53548) (not e!70279))))

(assert (=> b!107945 (= res!53548 call!11436)))

(declare-fun e!70273 () Bool)

(assert (=> b!107945 (= e!70273 e!70279)))

(declare-fun bm!11425 () Bool)

(assert (=> bm!11425 (= call!11441 call!11429)))

(declare-fun b!107946 () Bool)

(declare-fun call!11428 () ListLongMap!1591)

(assert (=> b!107946 (= e!70287 (= call!11428 call!11426))))

(declare-fun b!107947 () Bool)

(declare-fun e!70277 () Bool)

(assert (=> b!107947 (= e!70277 (= call!11428 (+!148 call!11426 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun b!107948 () Bool)

(assert (=> b!107948 (= e!70283 e!70280)))

(assert (=> b!107948 (= lt!55408 (seekEntryOrOpen!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(assert (=> b!107948 (= c!18935 ((_ is Undefined!270) lt!55408))))

(declare-fun bm!11426 () Bool)

(declare-fun c!18943 () Bool)

(assert (=> bm!11426 (= c!18943 c!18935)))

(assert (=> bm!11426 (= call!11439 (contains!834 e!70282 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!107949 () Bool)

(assert (=> b!107949 (= e!70282 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun c!18944 () Bool)

(declare-fun bm!11427 () Bool)

(assert (=> bm!11427 (= call!11432 (getCurrentListMap!487 (_keys!4316 newMap!16) (ite c!18944 (_values!2589 newMap!16) lt!55413) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun bm!11428 () Bool)

(assert (=> bm!11428 (= call!11420 (getCurrentListMap!487 (_keys!4316 newMap!16) (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18944 (ite c!18941 lt!55433 lt!55416) (extraKeys!2407 newMap!16)) (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)) (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun bm!11429 () Bool)

(assert (=> bm!11429 (= call!11435 call!11427)))

(declare-fun b!107950 () Bool)

(declare-fun lt!55432 () Unit!3339)

(assert (=> b!107950 (= lt!55432 e!70285)))

(assert (=> b!107950 (= c!18937 call!11439)))

(assert (=> b!107950 (= e!70280 (tuple2!2425 false newMap!16))))

(declare-fun b!107951 () Bool)

(assert (=> b!107951 (= e!70281 ((_ is Undefined!270) lt!55412))))

(declare-fun bm!11430 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!48 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 64) Int) Unit!3339)

(assert (=> bm!11430 (= call!11423 (lemmaInListMapThenSeekEntryOrOpenFindsIt!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)))))

(declare-fun b!107952 () Bool)

(declare-fun call!11440 () ListLongMap!1591)

(assert (=> b!107952 (= e!70278 call!11440)))

(declare-fun b!107953 () Bool)

(declare-fun lt!55407 () Unit!3339)

(assert (=> b!107953 (= e!70285 lt!55407)))

(assert (=> b!107953 (= lt!55407 call!11419)))

(assert (=> b!107953 (= lt!55427 call!11435)))

(assert (=> b!107953 (= c!18933 ((_ is MissingZero!270) lt!55427))))

(assert (=> b!107953 e!70268))

(declare-fun bm!11431 () Bool)

(declare-fun call!11430 () Bool)

(assert (=> bm!11431 (= call!11430 call!11438)))

(declare-fun b!107954 () Bool)

(assert (=> b!107954 (= e!70287 e!70277)))

(declare-fun res!53547 () Bool)

(assert (=> b!107954 (= res!53547 (contains!834 call!11428 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!107954 (=> (not res!53547) (not e!70277))))

(declare-fun b!107955 () Bool)

(declare-fun Unit!3348 () Unit!3339)

(assert (=> b!107955 (= e!70275 Unit!3348)))

(declare-fun lt!55418 () Unit!3339)

(assert (=> b!107955 (= lt!55418 call!11419)))

(assert (=> b!107955 (= lt!55412 call!11433)))

(assert (=> b!107955 (= c!18939 ((_ is MissingZero!270) lt!55412))))

(assert (=> b!107955 e!70273))

(declare-fun lt!55411 () Unit!3339)

(assert (=> b!107955 (= lt!55411 lt!55418)))

(assert (=> b!107955 false))

(declare-fun bm!11432 () Bool)

(assert (=> bm!11432 (= call!11421 call!11420)))

(declare-fun bm!11433 () Bool)

(assert (=> bm!11433 (= call!11422 call!11425)))

(declare-fun b!107956 () Bool)

(declare-fun res!53551 () Bool)

(assert (=> b!107956 (=> (not res!53551) (not e!70276))))

(assert (=> b!107956 (= res!53551 (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3229 lt!55427)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11434 () Bool)

(assert (=> bm!11434 (= call!11436 call!11430)))

(declare-fun b!107957 () Bool)

(assert (=> b!107957 (= e!70267 (not call!11434))))

(declare-fun d!29867 () Bool)

(assert (=> d!29867 e!70286))

(declare-fun res!53542 () Bool)

(assert (=> d!29867 (=> (not res!53542) (not e!70286))))

(assert (=> d!29867 (= res!53542 (valid!416 (_2!1222 lt!55429)))))

(assert (=> d!29867 (= lt!55429 e!70283)))

(assert (=> d!29867 (= c!18944 (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvneg (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!29867 (valid!416 newMap!16)))

(assert (=> d!29867 (= (update!161 newMap!16 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248) lt!55429)))

(declare-fun b!107958 () Bool)

(declare-fun res!53543 () Bool)

(assert (=> b!107958 (= res!53543 call!11430)))

(assert (=> b!107958 (=> (not res!53543) (not e!70274))))

(declare-fun bm!11435 () Bool)

(assert (=> bm!11435 (= call!11434 call!11425)))

(declare-fun b!107959 () Bool)

(declare-fun res!53552 () Bool)

(assert (=> b!107959 (= res!53552 (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3232 lt!55412)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!107959 (=> (not res!53552) (not e!70288))))

(declare-fun b!107960 () Bool)

(assert (=> b!107960 (= e!70284 e!70270)))

(declare-fun c!18932 () Bool)

(assert (=> b!107960 (= c!18932 ((_ is MissingZero!270) lt!55408))))

(declare-fun b!107961 () Bool)

(declare-fun c!18934 () Bool)

(assert (=> b!107961 (= c!18934 ((_ is MissingVacant!270) lt!55427))))

(assert (=> b!107961 (= e!70268 e!70272)))

(declare-fun b!107962 () Bool)

(declare-fun lt!55424 () tuple2!2424)

(assert (=> b!107962 (= lt!55424 call!11437)))

(assert (=> b!107962 (= e!70270 (tuple2!2425 (_1!1222 lt!55424) (_2!1222 lt!55424)))))

(declare-fun bm!11436 () Bool)

(assert (=> bm!11436 (= call!11428 (map!1290 (_2!1222 lt!55429)))))

(declare-fun bm!11437 () Bool)

(declare-fun updateHelperNewKey!48 (LongMapFixedSize!912 (_ BitVec 64) V!3235 (_ BitVec 32)) tuple2!2424)

(assert (=> bm!11437 (= call!11437 (updateHelperNewKey!48 newMap!16 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248 (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408))))))

(declare-fun b!107963 () Bool)

(declare-fun lt!55419 () Unit!3339)

(assert (=> b!107963 (= e!70275 lt!55419)))

(assert (=> b!107963 (= lt!55419 call!11423)))

(assert (=> b!107963 (= lt!55428 call!11433)))

(declare-fun res!53540 () Bool)

(assert (=> b!107963 (= res!53540 ((_ is Found!270) lt!55428))))

(assert (=> b!107963 (=> (not res!53540) (not e!70274))))

(assert (=> b!107963 e!70274))

(declare-fun bm!11438 () Bool)

(assert (=> bm!11438 (= call!11440 call!11432)))

(declare-fun b!107964 () Bool)

(declare-fun c!18940 () Bool)

(assert (=> b!107964 (= c!18940 ((_ is MissingVacant!270) lt!55412))))

(assert (=> b!107964 (= e!70273 e!70281)))

(declare-fun bm!11439 () Bool)

(assert (=> bm!11439 (= call!11424 (+!148 e!70278 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun c!18938 () Bool)

(assert (=> bm!11439 (= c!18938 c!18944)))

(assert (= (and d!29867 c!18944) b!107942))

(assert (= (and d!29867 (not c!18944)) b!107948))

(assert (= (and b!107942 c!18941) b!107929))

(assert (= (and b!107942 (not c!18941)) b!107925))

(assert (= (or b!107929 b!107925) bm!11432))

(assert (= (or b!107929 b!107925) bm!11438))

(assert (= (or b!107929 b!107925) bm!11416))

(assert (= (and b!107948 c!18935) b!107950))

(assert (= (and b!107948 (not c!18935)) b!107924))

(assert (= (and b!107950 c!18937) b!107927))

(assert (= (and b!107950 (not c!18937)) b!107953))

(assert (= (and b!107927 res!53550) b!107944))

(assert (= (and b!107944 res!53539) b!107932))

(assert (= (and b!107953 c!18933) b!107936))

(assert (= (and b!107953 (not c!18933)) b!107961))

(assert (= (and b!107936 res!53549) b!107956))

(assert (= (and b!107956 res!53551) b!107939))

(assert (= (and b!107961 c!18934) b!107928))

(assert (= (and b!107961 (not c!18934)) b!107941))

(assert (= (and b!107928 res!53544) b!107930))

(assert (= (and b!107930 res!53545) b!107957))

(assert (= (or b!107936 b!107928) bm!11425))

(assert (= (or b!107939 b!107957) bm!11435))

(assert (= (or b!107944 bm!11425) bm!11421))

(assert (= (or b!107927 b!107953) bm!11429))

(assert (= (and b!107924 c!18936) b!107943))

(assert (= (and b!107924 (not c!18936)) b!107960))

(assert (= (and b!107960 c!18932) b!107962))

(assert (= (and b!107960 (not c!18932)) b!107937))

(assert (= (and b!107937 c!18931) b!107963))

(assert (= (and b!107937 (not c!18931)) b!107955))

(assert (= (and b!107963 res!53540) b!107958))

(assert (= (and b!107958 res!53543) b!107923))

(assert (= (and b!107955 c!18939) b!107945))

(assert (= (and b!107955 (not c!18939)) b!107964))

(assert (= (and b!107945 res!53548) b!107926))

(assert (= (and b!107926 res!53546) b!107938))

(assert (= (and b!107964 c!18940) b!107934))

(assert (= (and b!107964 (not c!18940)) b!107951))

(assert (= (and b!107934 res!53541) b!107959))

(assert (= (and b!107959 res!53552) b!107931))

(assert (= (or b!107945 b!107934) bm!11434))

(assert (= (or b!107938 b!107931) bm!11433))

(assert (= (or b!107958 bm!11434) bm!11431))

(assert (= (or b!107963 b!107955) bm!11419))

(assert (= (or b!107943 b!107962) bm!11437))

(assert (= (or b!107927 b!107963) bm!11430))

(assert (= (or bm!11429 bm!11419) bm!11418))

(assert (= (or bm!11421 bm!11431) bm!11420))

(assert (= (or bm!11435 bm!11433) bm!11417))

(assert (= (or b!107950 b!107937) bm!11424))

(assert (= (or b!107953 b!107955) bm!11423))

(assert (= (or b!107950 b!107937) bm!11426))

(assert (= (and bm!11426 c!18943) b!107933))

(assert (= (and bm!11426 (not c!18943)) b!107949))

(assert (= (or bm!11432 bm!11424) bm!11428))

(assert (= (or bm!11438 b!107937) bm!11427))

(assert (= (or bm!11416 b!107937) bm!11439))

(assert (= (and bm!11439 c!18938) b!107952))

(assert (= (and bm!11439 (not c!18938)) b!107935))

(assert (= (and d!29867 res!53542) b!107940))

(assert (= (and b!107940 c!18942) b!107954))

(assert (= (and b!107940 (not c!18942)) b!107946))

(assert (= (and b!107954 res!53547) b!107947))

(assert (= (or b!107954 b!107947 b!107946) bm!11436))

(assert (= (or b!107947 b!107946) bm!11422))

(declare-fun m!121391 () Bool)

(assert (=> b!107956 m!121391))

(assert (=> bm!11418 m!121177))

(declare-fun m!121393 () Bool)

(assert (=> bm!11418 m!121393))

(declare-fun m!121395 () Bool)

(assert (=> b!107926 m!121395))

(declare-fun m!121397 () Bool)

(assert (=> d!29867 m!121397))

(assert (=> d!29867 m!121203))

(assert (=> bm!11426 m!121177))

(declare-fun m!121399 () Bool)

(assert (=> bm!11426 m!121399))

(assert (=> bm!11417 m!121177))

(declare-fun m!121401 () Bool)

(assert (=> bm!11417 m!121401))

(declare-fun m!121403 () Bool)

(assert (=> bm!11436 m!121403))

(declare-fun m!121405 () Bool)

(assert (=> b!107930 m!121405))

(assert (=> bm!11422 m!121215))

(declare-fun m!121407 () Bool)

(assert (=> b!107935 m!121407))

(declare-fun m!121409 () Bool)

(assert (=> b!107923 m!121409))

(declare-fun m!121411 () Bool)

(assert (=> b!107937 m!121411))

(declare-fun m!121413 () Bool)

(assert (=> b!107937 m!121413))

(declare-fun m!121415 () Bool)

(assert (=> b!107937 m!121415))

(assert (=> b!107937 m!121177))

(declare-fun m!121417 () Bool)

(assert (=> b!107937 m!121417))

(assert (=> b!107937 m!121411))

(declare-fun m!121419 () Bool)

(assert (=> b!107937 m!121419))

(assert (=> b!107949 m!121407))

(declare-fun m!121421 () Bool)

(assert (=> bm!11439 m!121421))

(declare-fun m!121423 () Bool)

(assert (=> bm!11420 m!121423))

(assert (=> bm!11430 m!121177))

(declare-fun m!121425 () Bool)

(assert (=> bm!11430 m!121425))

(assert (=> bm!11428 m!121419))

(declare-fun m!121427 () Bool)

(assert (=> bm!11428 m!121427))

(assert (=> bm!11437 m!121177))

(declare-fun m!121429 () Bool)

(assert (=> bm!11437 m!121429))

(declare-fun m!121431 () Bool)

(assert (=> b!107925 m!121431))

(declare-fun m!121433 () Bool)

(assert (=> bm!11427 m!121433))

(declare-fun m!121435 () Bool)

(assert (=> b!107959 m!121435))

(declare-fun m!121437 () Bool)

(assert (=> b!107929 m!121437))

(assert (=> bm!11423 m!121177))

(declare-fun m!121439 () Bool)

(assert (=> bm!11423 m!121439))

(assert (=> b!107948 m!121177))

(assert (=> b!107948 m!121393))

(declare-fun m!121441 () Bool)

(assert (=> b!107932 m!121441))

(assert (=> b!107954 m!121177))

(declare-fun m!121443 () Bool)

(assert (=> b!107954 m!121443))

(declare-fun m!121445 () Bool)

(assert (=> b!107947 m!121445))

(assert (=> b!107696 d!29867))

(declare-fun d!29869 () Bool)

(assert (=> d!29869 (= (valid!417 thiss!992) (valid!416 (v!2913 (underlying!367 thiss!992))))))

(declare-fun bs!4433 () Bool)

(assert (= bs!4433 d!29869))

(declare-fun m!121447 () Bool)

(assert (=> bs!4433 m!121447))

(assert (=> start!12532 d!29869))

(declare-fun d!29871 () Bool)

(assert (=> d!29871 (= (map!1290 newMap!16) (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun bs!4434 () Bool)

(assert (= bs!4434 d!29871))

(assert (=> bs!4434 m!121407))

(assert (=> b!107690 d!29871))

(declare-fun b!108007 () Bool)

(declare-fun e!70320 () Bool)

(declare-fun call!11462 () Bool)

(assert (=> b!108007 (= e!70320 (not call!11462))))

(declare-fun call!11460 () ListLongMap!1591)

(declare-fun call!11459 () ListLongMap!1591)

(declare-fun c!18960 () Bool)

(declare-fun c!18958 () Bool)

(declare-fun call!11458 () ListLongMap!1591)

(declare-fun call!11461 () ListLongMap!1591)

(declare-fun bm!11454 () Bool)

(assert (=> bm!11454 (= call!11460 (+!148 (ite c!18960 call!11458 (ite c!18958 call!11459 call!11461)) (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!108008 () Bool)

(declare-fun e!70316 () Bool)

(declare-fun call!11457 () Bool)

(assert (=> b!108008 (= e!70316 (not call!11457))))

(declare-fun bm!11455 () Bool)

(assert (=> bm!11455 (= call!11461 call!11459)))

(declare-fun b!108009 () Bool)

(declare-fun e!70322 () Bool)

(assert (=> b!108009 (= e!70320 e!70322)))

(declare-fun res!53577 () Bool)

(assert (=> b!108009 (= res!53577 call!11462)))

(assert (=> b!108009 (=> (not res!53577) (not e!70322))))

(declare-fun bm!11456 () Bool)

(declare-fun call!11463 () ListLongMap!1591)

(assert (=> bm!11456 (= call!11463 call!11460)))

(declare-fun bm!11457 () Bool)

(assert (=> bm!11457 (= call!11458 (getCurrentListMapNoExtraKeys!115 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))))))

(declare-fun b!108010 () Bool)

(declare-fun e!70326 () Unit!3339)

(declare-fun Unit!3349 () Unit!3339)

(assert (=> b!108010 (= e!70326 Unit!3349)))

(declare-fun d!29873 () Bool)

(declare-fun e!70319 () Bool)

(assert (=> d!29873 e!70319))

(declare-fun res!53576 () Bool)

(assert (=> d!29873 (=> (not res!53576) (not e!70319))))

(assert (=> d!29873 (= res!53576 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun lt!55479 () ListLongMap!1591)

(declare-fun lt!55498 () ListLongMap!1591)

(assert (=> d!29873 (= lt!55479 lt!55498)))

(declare-fun lt!55490 () Unit!3339)

(assert (=> d!29873 (= lt!55490 e!70326)))

(declare-fun c!18961 () Bool)

(declare-fun e!70325 () Bool)

(assert (=> d!29873 (= c!18961 e!70325)))

(declare-fun res!53572 () Bool)

(assert (=> d!29873 (=> (not res!53572) (not e!70325))))

(assert (=> d!29873 (= res!53572 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun e!70323 () ListLongMap!1591)

(assert (=> d!29873 (= lt!55498 e!70323)))

(assert (=> d!29873 (= c!18960 (and (not (= (bvand (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29873 (validMask!0 (mask!6764 (v!2913 (underlying!367 thiss!992))))))

(assert (=> d!29873 (= (getCurrentListMap!487 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))) lt!55479)))

(declare-fun b!108011 () Bool)

(declare-fun e!70318 () Bool)

(assert (=> b!108011 (= e!70316 e!70318)))

(declare-fun res!53578 () Bool)

(assert (=> b!108011 (= res!53578 call!11457)))

(assert (=> b!108011 (=> (not res!53578) (not e!70318))))

(declare-fun b!108012 () Bool)

(declare-fun lt!55485 () Unit!3339)

(assert (=> b!108012 (= e!70326 lt!55485)))

(declare-fun lt!55497 () ListLongMap!1591)

(assert (=> b!108012 (= lt!55497 (getCurrentListMapNoExtraKeys!115 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))))))

(declare-fun lt!55495 () (_ BitVec 64))

(assert (=> b!108012 (= lt!55495 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55496 () (_ BitVec 64))

(assert (=> b!108012 (= lt!55496 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!55481 () Unit!3339)

(declare-fun addStillContains!75 (ListLongMap!1591 (_ BitVec 64) V!3235 (_ BitVec 64)) Unit!3339)

(assert (=> b!108012 (= lt!55481 (addStillContains!75 lt!55497 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) lt!55496))))

(assert (=> b!108012 (contains!834 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55496)))

(declare-fun lt!55488 () Unit!3339)

(assert (=> b!108012 (= lt!55488 lt!55481)))

(declare-fun lt!55480 () ListLongMap!1591)

(assert (=> b!108012 (= lt!55480 (getCurrentListMapNoExtraKeys!115 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))))))

(declare-fun lt!55491 () (_ BitVec 64))

(assert (=> b!108012 (= lt!55491 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55487 () (_ BitVec 64))

(assert (=> b!108012 (= lt!55487 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!55492 () Unit!3339)

(declare-fun addApplyDifferent!75 (ListLongMap!1591 (_ BitVec 64) V!3235 (_ BitVec 64)) Unit!3339)

(assert (=> b!108012 (= lt!55492 (addApplyDifferent!75 lt!55480 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))) lt!55487))))

(assert (=> b!108012 (= (apply!99 (+!148 lt!55480 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55487) (apply!99 lt!55480 lt!55487))))

(declare-fun lt!55489 () Unit!3339)

(assert (=> b!108012 (= lt!55489 lt!55492)))

(declare-fun lt!55482 () ListLongMap!1591)

(assert (=> b!108012 (= lt!55482 (getCurrentListMapNoExtraKeys!115 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))))))

(declare-fun lt!55484 () (_ BitVec 64))

(assert (=> b!108012 (= lt!55484 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55494 () (_ BitVec 64))

(assert (=> b!108012 (= lt!55494 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!55478 () Unit!3339)

(assert (=> b!108012 (= lt!55478 (addApplyDifferent!75 lt!55482 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) lt!55494))))

(assert (=> b!108012 (= (apply!99 (+!148 lt!55482 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55494) (apply!99 lt!55482 lt!55494))))

(declare-fun lt!55486 () Unit!3339)

(assert (=> b!108012 (= lt!55486 lt!55478)))

(declare-fun lt!55499 () ListLongMap!1591)

(assert (=> b!108012 (= lt!55499 (getCurrentListMapNoExtraKeys!115 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))))))

(declare-fun lt!55483 () (_ BitVec 64))

(assert (=> b!108012 (= lt!55483 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55493 () (_ BitVec 64))

(assert (=> b!108012 (= lt!55493 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!108012 (= lt!55485 (addApplyDifferent!75 lt!55499 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))) lt!55493))))

(assert (=> b!108012 (= (apply!99 (+!148 lt!55499 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55493) (apply!99 lt!55499 lt!55493))))

(declare-fun b!108013 () Bool)

(assert (=> b!108013 (= e!70323 (+!148 call!11460 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun bm!11458 () Bool)

(assert (=> bm!11458 (= call!11462 (contains!834 lt!55479 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108014 () Bool)

(declare-fun c!18962 () Bool)

(assert (=> b!108014 (= c!18962 (and (not (= (bvand (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!70324 () ListLongMap!1591)

(declare-fun e!70315 () ListLongMap!1591)

(assert (=> b!108014 (= e!70324 e!70315)))

(declare-fun e!70327 () Bool)

(declare-fun b!108015 () Bool)

(assert (=> b!108015 (= e!70327 (= (apply!99 lt!55479 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108015 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2331 (_values!2589 (v!2913 (underlying!367 thiss!992))))))))

(assert (=> b!108015 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!108016 () Bool)

(assert (=> b!108016 (= e!70325 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!108017 () Bool)

(assert (=> b!108017 (= e!70319 e!70316)))

(declare-fun c!18959 () Bool)

(assert (=> b!108017 (= c!18959 (not (= (bvand (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108018 () Bool)

(assert (=> b!108018 (= e!70322 (= (apply!99 lt!55479 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))

(declare-fun b!108019 () Bool)

(declare-fun res!53573 () Bool)

(assert (=> b!108019 (=> (not res!53573) (not e!70319))))

(declare-fun e!70321 () Bool)

(assert (=> b!108019 (= res!53573 e!70321)))

(declare-fun res!53571 () Bool)

(assert (=> b!108019 (=> res!53571 e!70321)))

(declare-fun e!70317 () Bool)

(assert (=> b!108019 (= res!53571 (not e!70317))))

(declare-fun res!53574 () Bool)

(assert (=> b!108019 (=> (not res!53574) (not e!70317))))

(assert (=> b!108019 (= res!53574 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!108020 () Bool)

(assert (=> b!108020 (= e!70315 call!11463)))

(declare-fun b!108021 () Bool)

(declare-fun res!53579 () Bool)

(assert (=> b!108021 (=> (not res!53579) (not e!70319))))

(assert (=> b!108021 (= res!53579 e!70320)))

(declare-fun c!18957 () Bool)

(assert (=> b!108021 (= c!18957 (not (= (bvand (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11459 () Bool)

(assert (=> bm!11459 (= call!11459 call!11458)))

(declare-fun bm!11460 () Bool)

(assert (=> bm!11460 (= call!11457 (contains!834 lt!55479 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108022 () Bool)

(assert (=> b!108022 (= e!70318 (= (apply!99 lt!55479 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))

(declare-fun b!108023 () Bool)

(assert (=> b!108023 (= e!70315 call!11461)))

(declare-fun b!108024 () Bool)

(assert (=> b!108024 (= e!70324 call!11463)))

(declare-fun b!108025 () Bool)

(assert (=> b!108025 (= e!70321 e!70327)))

(declare-fun res!53575 () Bool)

(assert (=> b!108025 (=> (not res!53575) (not e!70327))))

(assert (=> b!108025 (= res!53575 (contains!834 lt!55479 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!108025 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!108026 () Bool)

(assert (=> b!108026 (= e!70317 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!108027 () Bool)

(assert (=> b!108027 (= e!70323 e!70324)))

(assert (=> b!108027 (= c!18958 (and (not (= (bvand (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!29873 c!18960) b!108013))

(assert (= (and d!29873 (not c!18960)) b!108027))

(assert (= (and b!108027 c!18958) b!108024))

(assert (= (and b!108027 (not c!18958)) b!108014))

(assert (= (and b!108014 c!18962) b!108020))

(assert (= (and b!108014 (not c!18962)) b!108023))

(assert (= (or b!108020 b!108023) bm!11455))

(assert (= (or b!108024 bm!11455) bm!11459))

(assert (= (or b!108024 b!108020) bm!11456))

(assert (= (or b!108013 bm!11459) bm!11457))

(assert (= (or b!108013 bm!11456) bm!11454))

(assert (= (and d!29873 res!53572) b!108016))

(assert (= (and d!29873 c!18961) b!108012))

(assert (= (and d!29873 (not c!18961)) b!108010))

(assert (= (and d!29873 res!53576) b!108019))

(assert (= (and b!108019 res!53574) b!108026))

(assert (= (and b!108019 (not res!53571)) b!108025))

(assert (= (and b!108025 res!53575) b!108015))

(assert (= (and b!108019 res!53573) b!108021))

(assert (= (and b!108021 c!18957) b!108009))

(assert (= (and b!108021 (not c!18957)) b!108007))

(assert (= (and b!108009 res!53577) b!108018))

(assert (= (or b!108009 b!108007) bm!11458))

(assert (= (and b!108021 res!53579) b!108017))

(assert (= (and b!108017 c!18959) b!108011))

(assert (= (and b!108017 (not c!18959)) b!108008))

(assert (= (and b!108011 res!53578) b!108022))

(assert (= (or b!108011 b!108008) bm!11460))

(declare-fun b_lambda!4855 () Bool)

(assert (=> (not b_lambda!4855) (not b!108015)))

(assert (=> b!108015 t!5772))

(declare-fun b_and!6685 () Bool)

(assert (= b_and!6681 (and (=> t!5772 result!3507) b_and!6685)))

(assert (=> b!108015 t!5774))

(declare-fun b_and!6687 () Bool)

(assert (= b_and!6683 (and (=> t!5774 result!3511) b_and!6687)))

(assert (=> b!108026 m!121305))

(assert (=> b!108026 m!121305))

(assert (=> b!108026 m!121323))

(assert (=> d!29873 m!121185))

(declare-fun m!121449 () Bool)

(assert (=> bm!11460 m!121449))

(declare-fun m!121451 () Bool)

(assert (=> bm!11458 m!121451))

(declare-fun m!121453 () Bool)

(assert (=> b!108022 m!121453))

(assert (=> bm!11457 m!121191))

(declare-fun m!121455 () Bool)

(assert (=> b!108013 m!121455))

(declare-fun m!121457 () Bool)

(assert (=> b!108018 m!121457))

(assert (=> b!108016 m!121305))

(assert (=> b!108016 m!121305))

(assert (=> b!108016 m!121323))

(declare-fun m!121459 () Bool)

(assert (=> b!108012 m!121459))

(declare-fun m!121461 () Bool)

(assert (=> b!108012 m!121461))

(declare-fun m!121463 () Bool)

(assert (=> b!108012 m!121463))

(declare-fun m!121465 () Bool)

(assert (=> b!108012 m!121465))

(declare-fun m!121467 () Bool)

(assert (=> b!108012 m!121467))

(declare-fun m!121469 () Bool)

(assert (=> b!108012 m!121469))

(declare-fun m!121471 () Bool)

(assert (=> b!108012 m!121471))

(assert (=> b!108012 m!121191))

(declare-fun m!121473 () Bool)

(assert (=> b!108012 m!121473))

(assert (=> b!108012 m!121469))

(declare-fun m!121475 () Bool)

(assert (=> b!108012 m!121475))

(assert (=> b!108012 m!121463))

(declare-fun m!121477 () Bool)

(assert (=> b!108012 m!121477))

(assert (=> b!108012 m!121465))

(declare-fun m!121479 () Bool)

(assert (=> b!108012 m!121479))

(assert (=> b!108012 m!121459))

(declare-fun m!121481 () Bool)

(assert (=> b!108012 m!121481))

(declare-fun m!121483 () Bool)

(assert (=> b!108012 m!121483))

(declare-fun m!121485 () Bool)

(assert (=> b!108012 m!121485))

(assert (=> b!108012 m!121305))

(declare-fun m!121487 () Bool)

(assert (=> b!108012 m!121487))

(assert (=> b!108025 m!121305))

(assert (=> b!108025 m!121305))

(declare-fun m!121489 () Bool)

(assert (=> b!108025 m!121489))

(assert (=> b!108015 m!121309))

(assert (=> b!108015 m!121207))

(assert (=> b!108015 m!121311))

(assert (=> b!108015 m!121305))

(declare-fun m!121491 () Bool)

(assert (=> b!108015 m!121491))

(assert (=> b!108015 m!121305))

(assert (=> b!108015 m!121207))

(assert (=> b!108015 m!121309))

(declare-fun m!121493 () Bool)

(assert (=> bm!11454 m!121493))

(assert (=> b!107690 d!29873))

(declare-fun d!29875 () Bool)

(assert (=> d!29875 (= (array_inv!1249 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvsge (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!107703 d!29875))

(declare-fun d!29877 () Bool)

(assert (=> d!29877 (= (array_inv!1250 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvsge (size!2331 (_values!2589 (v!2913 (underlying!367 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!107703 d!29877))

(declare-fun d!29879 () Bool)

(declare-fun c!18965 () Bool)

(assert (=> d!29879 (= c!18965 ((_ is ValueCellFull!1002) (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!70330 () V!3235)

(assert (=> d!29879 (= (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) from!355) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70330)))

(declare-fun b!108032 () Bool)

(declare-fun get!1350 (ValueCell!1002 V!3235) V!3235)

(assert (=> b!108032 (= e!70330 (get!1350 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) from!355) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108033 () Bool)

(declare-fun get!1351 (ValueCell!1002 V!3235) V!3235)

(assert (=> b!108033 (= e!70330 (get!1351 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) from!355) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29879 c!18965) b!108032))

(assert (= (and d!29879 (not c!18965)) b!108033))

(assert (=> b!108032 m!121205))

(assert (=> b!108032 m!121207))

(declare-fun m!121495 () Bool)

(assert (=> b!108032 m!121495))

(assert (=> b!108033 m!121205))

(assert (=> b!108033 m!121207))

(declare-fun m!121497 () Bool)

(assert (=> b!108033 m!121497))

(assert (=> b!107694 d!29879))

(declare-fun d!29881 () Bool)

(assert (=> d!29881 (not (arrayContainsKey!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!55502 () Unit!3339)

(declare-fun choose!68 (array!4374 (_ BitVec 32) (_ BitVec 64) List!1647) Unit!3339)

(assert (=> d!29881 (= lt!55502 (choose!68 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644)))))

(assert (=> d!29881 (bvslt (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!29881 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644)) lt!55502)))

(declare-fun bs!4435 () Bool)

(assert (= bs!4435 d!29881))

(assert (=> bs!4435 m!121177))

(assert (=> bs!4435 m!121229))

(assert (=> bs!4435 m!121177))

(declare-fun m!121499 () Bool)

(assert (=> bs!4435 m!121499))

(assert (=> b!107689 d!29881))

(declare-fun d!29883 () Bool)

(assert (=> d!29883 (arrayNoDuplicates!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) from!355 Nil!1644)))

(declare-fun lt!55505 () Unit!3339)

(declare-fun choose!39 (array!4374 (_ BitVec 32) (_ BitVec 32)) Unit!3339)

(assert (=> d!29883 (= lt!55505 (choose!39 (_keys!4316 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!29883 (bvslt (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!29883 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000000 from!355) lt!55505)))

(declare-fun bs!4436 () Bool)

(assert (= bs!4436 d!29883))

(assert (=> bs!4436 m!121225))

(declare-fun m!121501 () Bool)

(assert (=> bs!4436 m!121501))

(assert (=> b!107689 d!29883))

(declare-fun d!29885 () Bool)

(declare-fun res!53584 () Bool)

(declare-fun e!70335 () Bool)

(assert (=> d!29885 (=> res!53584 e!70335)))

(assert (=> d!29885 (= res!53584 (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!29885 (= (arrayContainsKey!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!70335)))

(declare-fun b!108038 () Bool)

(declare-fun e!70336 () Bool)

(assert (=> b!108038 (= e!70335 e!70336)))

(declare-fun res!53585 () Bool)

(assert (=> b!108038 (=> (not res!53585) (not e!70336))))

(assert (=> b!108038 (= res!53585 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!108039 () Bool)

(assert (=> b!108039 (= e!70336 (arrayContainsKey!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!29885 (not res!53584)) b!108038))

(assert (= (and b!108038 res!53585) b!108039))

(assert (=> d!29885 m!121305))

(assert (=> b!108039 m!121177))

(declare-fun m!121503 () Bool)

(assert (=> b!108039 m!121503))

(assert (=> b!107689 d!29885))

(declare-fun d!29887 () Bool)

(declare-fun e!70339 () Bool)

(assert (=> d!29887 e!70339))

(declare-fun c!18968 () Bool)

(assert (=> d!29887 (= c!18968 (and (not (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!55508 () Unit!3339)

(declare-fun choose!676 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 64) (_ BitVec 32) Int) Unit!3339)

(assert (=> d!29887 (= lt!55508 (choose!676 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))))))

(assert (=> d!29887 (validMask!0 (mask!6764 (v!2913 (underlying!367 thiss!992))))))

(assert (=> d!29887 (= (lemmaListMapContainsThenArrayContainsFrom!114 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))) lt!55508)))

(declare-fun b!108044 () Bool)

(assert (=> b!108044 (= e!70339 (arrayContainsKey!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!108045 () Bool)

(assert (=> b!108045 (= e!70339 (ite (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!29887 c!18968) b!108044))

(assert (= (and d!29887 (not c!18968)) b!108045))

(assert (=> d!29887 m!121177))

(declare-fun m!121505 () Bool)

(assert (=> d!29887 m!121505))

(assert (=> d!29887 m!121185))

(assert (=> b!108044 m!121177))

(assert (=> b!108044 m!121229))

(assert (=> b!107689 d!29887))

(declare-fun b!108056 () Bool)

(declare-fun e!70348 () Bool)

(declare-fun call!11466 () Bool)

(assert (=> b!108056 (= e!70348 call!11466)))

(declare-fun b!108057 () Bool)

(assert (=> b!108057 (= e!70348 call!11466)))

(declare-fun bm!11463 () Bool)

(declare-fun c!18971 () Bool)

(assert (=> bm!11463 (= call!11466 (arrayNoDuplicates!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!18971 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644) Nil!1644)))))

(declare-fun d!29889 () Bool)

(declare-fun res!53593 () Bool)

(declare-fun e!70349 () Bool)

(assert (=> d!29889 (=> res!53593 e!70349)))

(assert (=> d!29889 (= res!53593 (bvsge from!355 (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(assert (=> d!29889 (= (arrayNoDuplicates!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) from!355 Nil!1644) e!70349)))

(declare-fun b!108058 () Bool)

(declare-fun e!70350 () Bool)

(declare-fun contains!836 (List!1647 (_ BitVec 64)) Bool)

(assert (=> b!108058 (= e!70350 (contains!836 Nil!1644 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108059 () Bool)

(declare-fun e!70351 () Bool)

(assert (=> b!108059 (= e!70349 e!70351)))

(declare-fun res!53592 () Bool)

(assert (=> b!108059 (=> (not res!53592) (not e!70351))))

(assert (=> b!108059 (= res!53592 (not e!70350))))

(declare-fun res!53594 () Bool)

(assert (=> b!108059 (=> (not res!53594) (not e!70350))))

(assert (=> b!108059 (= res!53594 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108060 () Bool)

(assert (=> b!108060 (= e!70351 e!70348)))

(assert (=> b!108060 (= c!18971 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!29889 (not res!53593)) b!108059))

(assert (= (and b!108059 res!53594) b!108058))

(assert (= (and b!108059 res!53592) b!108060))

(assert (= (and b!108060 c!18971) b!108056))

(assert (= (and b!108060 (not c!18971)) b!108057))

(assert (= (or b!108056 b!108057) bm!11463))

(assert (=> bm!11463 m!121177))

(declare-fun m!121507 () Bool)

(assert (=> bm!11463 m!121507))

(assert (=> b!108058 m!121177))

(assert (=> b!108058 m!121177))

(declare-fun m!121509 () Bool)

(assert (=> b!108058 m!121509))

(assert (=> b!108059 m!121177))

(assert (=> b!108059 m!121177))

(declare-fun m!121511 () Bool)

(assert (=> b!108059 m!121511))

(assert (=> b!108060 m!121177))

(assert (=> b!108060 m!121177))

(assert (=> b!108060 m!121511))

(assert (=> b!107689 d!29889))

(declare-fun d!29891 () Bool)

(assert (=> d!29891 (= (array_inv!1249 (_keys!4316 newMap!16)) (bvsge (size!2330 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!107707 d!29891))

(declare-fun d!29893 () Bool)

(assert (=> d!29893 (= (array_inv!1250 (_values!2589 newMap!16)) (bvsge (size!2331 (_values!2589 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!107707 d!29893))

(declare-fun b!108068 () Bool)

(declare-fun e!70357 () Bool)

(assert (=> b!108068 (= e!70357 tp_is_empty!2691)))

(declare-fun b!108067 () Bool)

(declare-fun e!70356 () Bool)

(assert (=> b!108067 (= e!70356 tp_is_empty!2691)))

(declare-fun mapIsEmpty!3983 () Bool)

(declare-fun mapRes!3983 () Bool)

(assert (=> mapIsEmpty!3983 mapRes!3983))

(declare-fun condMapEmpty!3983 () Bool)

(declare-fun mapDefault!3983 () ValueCell!1002)

(assert (=> mapNonEmpty!3974 (= condMapEmpty!3983 (= mapRest!3974 ((as const (Array (_ BitVec 32) ValueCell!1002)) mapDefault!3983)))))

(assert (=> mapNonEmpty!3974 (= tp!9978 (and e!70357 mapRes!3983))))

(declare-fun mapNonEmpty!3983 () Bool)

(declare-fun tp!9995 () Bool)

(assert (=> mapNonEmpty!3983 (= mapRes!3983 (and tp!9995 e!70356))))

(declare-fun mapValue!3983 () ValueCell!1002)

(declare-fun mapRest!3983 () (Array (_ BitVec 32) ValueCell!1002))

(declare-fun mapKey!3983 () (_ BitVec 32))

(assert (=> mapNonEmpty!3983 (= mapRest!3974 (store mapRest!3983 mapKey!3983 mapValue!3983))))

(assert (= (and mapNonEmpty!3974 condMapEmpty!3983) mapIsEmpty!3983))

(assert (= (and mapNonEmpty!3974 (not condMapEmpty!3983)) mapNonEmpty!3983))

(assert (= (and mapNonEmpty!3983 ((_ is ValueCellFull!1002) mapValue!3983)) b!108067))

(assert (= (and mapNonEmpty!3974 ((_ is ValueCellFull!1002) mapDefault!3983)) b!108068))

(declare-fun m!121513 () Bool)

(assert (=> mapNonEmpty!3983 m!121513))

(declare-fun b!108070 () Bool)

(declare-fun e!70359 () Bool)

(assert (=> b!108070 (= e!70359 tp_is_empty!2691)))

(declare-fun b!108069 () Bool)

(declare-fun e!70358 () Bool)

(assert (=> b!108069 (= e!70358 tp_is_empty!2691)))

(declare-fun mapIsEmpty!3984 () Bool)

(declare-fun mapRes!3984 () Bool)

(assert (=> mapIsEmpty!3984 mapRes!3984))

(declare-fun condMapEmpty!3984 () Bool)

(declare-fun mapDefault!3984 () ValueCell!1002)

(assert (=> mapNonEmpty!3973 (= condMapEmpty!3984 (= mapRest!3973 ((as const (Array (_ BitVec 32) ValueCell!1002)) mapDefault!3984)))))

(assert (=> mapNonEmpty!3973 (= tp!9979 (and e!70359 mapRes!3984))))

(declare-fun mapNonEmpty!3984 () Bool)

(declare-fun tp!9996 () Bool)

(assert (=> mapNonEmpty!3984 (= mapRes!3984 (and tp!9996 e!70358))))

(declare-fun mapValue!3984 () ValueCell!1002)

(declare-fun mapKey!3984 () (_ BitVec 32))

(declare-fun mapRest!3984 () (Array (_ BitVec 32) ValueCell!1002))

(assert (=> mapNonEmpty!3984 (= mapRest!3973 (store mapRest!3984 mapKey!3984 mapValue!3984))))

(assert (= (and mapNonEmpty!3973 condMapEmpty!3984) mapIsEmpty!3984))

(assert (= (and mapNonEmpty!3973 (not condMapEmpty!3984)) mapNonEmpty!3984))

(assert (= (and mapNonEmpty!3984 ((_ is ValueCellFull!1002) mapValue!3984)) b!108069))

(assert (= (and mapNonEmpty!3973 ((_ is ValueCellFull!1002) mapDefault!3984)) b!108070))

(declare-fun m!121515 () Bool)

(assert (=> mapNonEmpty!3984 m!121515))

(declare-fun b_lambda!4857 () Bool)

(assert (= b_lambda!4855 (or (and b!107703 b_free!2549) (and b!107707 b_free!2551 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))))) b_lambda!4857)))

(declare-fun b_lambda!4859 () Bool)

(assert (= b_lambda!4853 (or (and b!107703 b_free!2549) (and b!107707 b_free!2551 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))))) b_lambda!4859)))

(declare-fun b_lambda!4861 () Bool)

(assert (= b_lambda!4851 (or (and b!107703 b_free!2549) (and b!107707 b_free!2551 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))))) b_lambda!4861)))

(check-sat (not b!108015) (not b_next!2551) tp_is_empty!2691 (not bm!11454) (not d!29863) (not bm!11430) (not b!107820) (not b!107836) (not bm!11427) (not bm!11458) (not d!29867) (not b!107819) (not b!108016) (not b!107937) (not d!29853) (not b!107817) (not d!29869) (not b!108012) (not b!108025) (not b!108039) (not b!107803) (not b!108013) (not d!29887) (not b!107807) (not b!107838) (not b!107805) (not bm!11426) (not b!107947) (not b!107954) (not b!107935) (not b!107827) (not b!108022) (not b!107806) (not b!107777) (not b_lambda!4861) (not b!107829) (not b!108044) (not b!108060) (not d!29857) (not bm!11422) (not d!29865) (not b!107778) (not b!107815) (not d!29871) (not d!29855) (not b_next!2549) (not b!107925) (not bm!11367) (not b!107813) (not d!29851) (not b!107948) (not bm!11460) (not bm!11436) (not bm!11420) (not b!108058) (not d!29849) (not bm!11428) (not b!107929) (not b!108033) (not b!107828) (not b!108032) b_and!6685 (not bm!11417) (not d!29859) (not b!107818) (not mapNonEmpty!3984) (not b!107814) (not b!107812) (not bm!11463) (not bm!11423) (not b!107816) (not b_lambda!4859) (not bm!11437) (not bm!11418) (not bm!11439) (not d!29873) (not b!108026) (not d!29881) (not mapNonEmpty!3983) b_and!6687 (not bm!11457) (not b!108018) (not b!107949) (not d!29883) (not b!108059) (not b_lambda!4857) (not b!107804) (not b_lambda!4849))
(check-sat b_and!6685 b_and!6687 (not b_next!2549) (not b_next!2551))
(get-model)

(declare-fun b!108071 () Bool)

(declare-fun e!70365 () Bool)

(declare-fun call!11472 () Bool)

(assert (=> b!108071 (= e!70365 (not call!11472))))

(declare-fun call!11471 () ListLongMap!1591)

(declare-fun call!11470 () ListLongMap!1591)

(declare-fun c!18973 () Bool)

(declare-fun c!18975 () Bool)

(declare-fun call!11468 () ListLongMap!1591)

(declare-fun call!11469 () ListLongMap!1591)

(declare-fun bm!11464 () Bool)

(assert (=> bm!11464 (= call!11470 (+!148 (ite c!18975 call!11468 (ite c!18973 call!11469 call!11471)) (ite (or c!18975 c!18973) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(declare-fun b!108072 () Bool)

(declare-fun e!70361 () Bool)

(declare-fun call!11467 () Bool)

(assert (=> b!108072 (= e!70361 (not call!11467))))

(declare-fun bm!11465 () Bool)

(assert (=> bm!11465 (= call!11471 call!11469)))

(declare-fun b!108073 () Bool)

(declare-fun e!70367 () Bool)

(assert (=> b!108073 (= e!70365 e!70367)))

(declare-fun res!53601 () Bool)

(assert (=> b!108073 (= res!53601 call!11472)))

(assert (=> b!108073 (=> (not res!53601) (not e!70367))))

(declare-fun bm!11466 () Bool)

(declare-fun call!11473 () ListLongMap!1591)

(assert (=> bm!11466 (= call!11473 call!11470)))

(declare-fun bm!11467 () Bool)

(assert (=> bm!11467 (= call!11468 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun b!108074 () Bool)

(declare-fun e!70371 () Unit!3339)

(declare-fun Unit!3350 () Unit!3339)

(assert (=> b!108074 (= e!70371 Unit!3350)))

(declare-fun d!29895 () Bool)

(declare-fun e!70364 () Bool)

(assert (=> d!29895 e!70364))

(declare-fun res!53600 () Bool)

(assert (=> d!29895 (=> (not res!53600) (not e!70364))))

(assert (=> d!29895 (= res!53600 (or (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))))

(declare-fun lt!55510 () ListLongMap!1591)

(declare-fun lt!55529 () ListLongMap!1591)

(assert (=> d!29895 (= lt!55510 lt!55529)))

(declare-fun lt!55521 () Unit!3339)

(assert (=> d!29895 (= lt!55521 e!70371)))

(declare-fun c!18976 () Bool)

(declare-fun e!70370 () Bool)

(assert (=> d!29895 (= c!18976 e!70370)))

(declare-fun res!53596 () Bool)

(assert (=> d!29895 (=> (not res!53596) (not e!70370))))

(assert (=> d!29895 (= res!53596 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun e!70368 () ListLongMap!1591)

(assert (=> d!29895 (= lt!55529 e!70368)))

(assert (=> d!29895 (= c!18975 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29895 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!29895 (= (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!55510)))

(declare-fun b!108075 () Bool)

(declare-fun e!70363 () Bool)

(assert (=> b!108075 (= e!70361 e!70363)))

(declare-fun res!53602 () Bool)

(assert (=> b!108075 (= res!53602 call!11467)))

(assert (=> b!108075 (=> (not res!53602) (not e!70363))))

(declare-fun b!108076 () Bool)

(declare-fun lt!55516 () Unit!3339)

(assert (=> b!108076 (= e!70371 lt!55516)))

(declare-fun lt!55528 () ListLongMap!1591)

(assert (=> b!108076 (= lt!55528 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55526 () (_ BitVec 64))

(assert (=> b!108076 (= lt!55526 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55527 () (_ BitVec 64))

(assert (=> b!108076 (= lt!55527 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55512 () Unit!3339)

(assert (=> b!108076 (= lt!55512 (addStillContains!75 lt!55528 lt!55526 (zeroValue!2479 newMap!16) lt!55527))))

(assert (=> b!108076 (contains!834 (+!148 lt!55528 (tuple2!2423 lt!55526 (zeroValue!2479 newMap!16))) lt!55527)))

(declare-fun lt!55519 () Unit!3339)

(assert (=> b!108076 (= lt!55519 lt!55512)))

(declare-fun lt!55511 () ListLongMap!1591)

(assert (=> b!108076 (= lt!55511 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55522 () (_ BitVec 64))

(assert (=> b!108076 (= lt!55522 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55518 () (_ BitVec 64))

(assert (=> b!108076 (= lt!55518 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55523 () Unit!3339)

(assert (=> b!108076 (= lt!55523 (addApplyDifferent!75 lt!55511 lt!55522 (minValue!2479 newMap!16) lt!55518))))

(assert (=> b!108076 (= (apply!99 (+!148 lt!55511 (tuple2!2423 lt!55522 (minValue!2479 newMap!16))) lt!55518) (apply!99 lt!55511 lt!55518))))

(declare-fun lt!55520 () Unit!3339)

(assert (=> b!108076 (= lt!55520 lt!55523)))

(declare-fun lt!55513 () ListLongMap!1591)

(assert (=> b!108076 (= lt!55513 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55515 () (_ BitVec 64))

(assert (=> b!108076 (= lt!55515 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55525 () (_ BitVec 64))

(assert (=> b!108076 (= lt!55525 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55509 () Unit!3339)

(assert (=> b!108076 (= lt!55509 (addApplyDifferent!75 lt!55513 lt!55515 (zeroValue!2479 newMap!16) lt!55525))))

(assert (=> b!108076 (= (apply!99 (+!148 lt!55513 (tuple2!2423 lt!55515 (zeroValue!2479 newMap!16))) lt!55525) (apply!99 lt!55513 lt!55525))))

(declare-fun lt!55517 () Unit!3339)

(assert (=> b!108076 (= lt!55517 lt!55509)))

(declare-fun lt!55530 () ListLongMap!1591)

(assert (=> b!108076 (= lt!55530 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55514 () (_ BitVec 64))

(assert (=> b!108076 (= lt!55514 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55524 () (_ BitVec 64))

(assert (=> b!108076 (= lt!55524 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108076 (= lt!55516 (addApplyDifferent!75 lt!55530 lt!55514 (minValue!2479 newMap!16) lt!55524))))

(assert (=> b!108076 (= (apply!99 (+!148 lt!55530 (tuple2!2423 lt!55514 (minValue!2479 newMap!16))) lt!55524) (apply!99 lt!55530 lt!55524))))

(declare-fun b!108077 () Bool)

(assert (=> b!108077 (= e!70368 (+!148 call!11470 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))

(declare-fun bm!11468 () Bool)

(assert (=> bm!11468 (= call!11472 (contains!834 lt!55510 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108078 () Bool)

(declare-fun c!18977 () Bool)

(assert (=> b!108078 (= c!18977 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!70369 () ListLongMap!1591)

(declare-fun e!70360 () ListLongMap!1591)

(assert (=> b!108078 (= e!70369 e!70360)))

(declare-fun b!108079 () Bool)

(declare-fun e!70372 () Bool)

(assert (=> b!108079 (= e!70372 (= (apply!99 lt!55510 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1349 (select (arr!2075 (_values!2589 newMap!16)) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108079 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_values!2589 newMap!16))))))

(assert (=> b!108079 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108080 () Bool)

(assert (=> b!108080 (= e!70370 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108081 () Bool)

(assert (=> b!108081 (= e!70364 e!70361)))

(declare-fun c!18974 () Bool)

(assert (=> b!108081 (= c!18974 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108082 () Bool)

(assert (=> b!108082 (= e!70367 (= (apply!99 lt!55510 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2479 newMap!16)))))

(declare-fun b!108083 () Bool)

(declare-fun res!53597 () Bool)

(assert (=> b!108083 (=> (not res!53597) (not e!70364))))

(declare-fun e!70366 () Bool)

(assert (=> b!108083 (= res!53597 e!70366)))

(declare-fun res!53595 () Bool)

(assert (=> b!108083 (=> res!53595 e!70366)))

(declare-fun e!70362 () Bool)

(assert (=> b!108083 (= res!53595 (not e!70362))))

(declare-fun res!53598 () Bool)

(assert (=> b!108083 (=> (not res!53598) (not e!70362))))

(assert (=> b!108083 (= res!53598 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108084 () Bool)

(assert (=> b!108084 (= e!70360 call!11473)))

(declare-fun b!108085 () Bool)

(declare-fun res!53603 () Bool)

(assert (=> b!108085 (=> (not res!53603) (not e!70364))))

(assert (=> b!108085 (= res!53603 e!70365)))

(declare-fun c!18972 () Bool)

(assert (=> b!108085 (= c!18972 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11469 () Bool)

(assert (=> bm!11469 (= call!11469 call!11468)))

(declare-fun bm!11470 () Bool)

(assert (=> bm!11470 (= call!11467 (contains!834 lt!55510 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108086 () Bool)

(assert (=> b!108086 (= e!70363 (= (apply!99 lt!55510 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2479 newMap!16)))))

(declare-fun b!108087 () Bool)

(assert (=> b!108087 (= e!70360 call!11471)))

(declare-fun b!108088 () Bool)

(assert (=> b!108088 (= e!70369 call!11473)))

(declare-fun b!108089 () Bool)

(assert (=> b!108089 (= e!70366 e!70372)))

(declare-fun res!53599 () Bool)

(assert (=> b!108089 (=> (not res!53599) (not e!70372))))

(assert (=> b!108089 (= res!53599 (contains!834 lt!55510 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108089 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108090 () Bool)

(assert (=> b!108090 (= e!70362 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108091 () Bool)

(assert (=> b!108091 (= e!70368 e!70369)))

(assert (=> b!108091 (= c!18973 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!29895 c!18975) b!108077))

(assert (= (and d!29895 (not c!18975)) b!108091))

(assert (= (and b!108091 c!18973) b!108088))

(assert (= (and b!108091 (not c!18973)) b!108078))

(assert (= (and b!108078 c!18977) b!108084))

(assert (= (and b!108078 (not c!18977)) b!108087))

(assert (= (or b!108084 b!108087) bm!11465))

(assert (= (or b!108088 bm!11465) bm!11469))

(assert (= (or b!108088 b!108084) bm!11466))

(assert (= (or b!108077 bm!11469) bm!11467))

(assert (= (or b!108077 bm!11466) bm!11464))

(assert (= (and d!29895 res!53596) b!108080))

(assert (= (and d!29895 c!18976) b!108076))

(assert (= (and d!29895 (not c!18976)) b!108074))

(assert (= (and d!29895 res!53600) b!108083))

(assert (= (and b!108083 res!53598) b!108090))

(assert (= (and b!108083 (not res!53595)) b!108089))

(assert (= (and b!108089 res!53599) b!108079))

(assert (= (and b!108083 res!53597) b!108085))

(assert (= (and b!108085 c!18972) b!108073))

(assert (= (and b!108085 (not c!18972)) b!108071))

(assert (= (and b!108073 res!53601) b!108082))

(assert (= (or b!108073 b!108071) bm!11468))

(assert (= (and b!108085 res!53603) b!108081))

(assert (= (and b!108081 c!18974) b!108075))

(assert (= (and b!108081 (not c!18974)) b!108072))

(assert (= (and b!108075 res!53602) b!108086))

(assert (= (or b!108075 b!108072) bm!11470))

(declare-fun b_lambda!4863 () Bool)

(assert (=> (not b_lambda!4863) (not b!108079)))

(declare-fun t!5783 () Bool)

(declare-fun tb!2101 () Bool)

(assert (=> (and b!107703 (= (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16)) t!5783) tb!2101))

(declare-fun result!3521 () Bool)

(assert (=> tb!2101 (= result!3521 tp_is_empty!2691)))

(assert (=> b!108079 t!5783))

(declare-fun b_and!6689 () Bool)

(assert (= b_and!6685 (and (=> t!5783 result!3521) b_and!6689)))

(declare-fun t!5785 () Bool)

(declare-fun tb!2103 () Bool)

(assert (=> (and b!107707 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 newMap!16)) t!5785) tb!2103))

(declare-fun result!3523 () Bool)

(assert (= result!3523 result!3521))

(assert (=> b!108079 t!5785))

(declare-fun b_and!6691 () Bool)

(assert (= b_and!6687 (and (=> t!5785 result!3523) b_and!6691)))

(declare-fun m!121517 () Bool)

(assert (=> b!108090 m!121517))

(assert (=> b!108090 m!121517))

(declare-fun m!121519 () Bool)

(assert (=> b!108090 m!121519))

(declare-fun m!121521 () Bool)

(assert (=> d!29895 m!121521))

(declare-fun m!121523 () Bool)

(assert (=> bm!11470 m!121523))

(declare-fun m!121525 () Bool)

(assert (=> bm!11468 m!121525))

(declare-fun m!121527 () Bool)

(assert (=> b!108086 m!121527))

(declare-fun m!121529 () Bool)

(assert (=> bm!11467 m!121529))

(declare-fun m!121531 () Bool)

(assert (=> b!108077 m!121531))

(declare-fun m!121533 () Bool)

(assert (=> b!108082 m!121533))

(assert (=> b!108080 m!121517))

(assert (=> b!108080 m!121517))

(assert (=> b!108080 m!121519))

(declare-fun m!121535 () Bool)

(assert (=> b!108076 m!121535))

(declare-fun m!121537 () Bool)

(assert (=> b!108076 m!121537))

(declare-fun m!121539 () Bool)

(assert (=> b!108076 m!121539))

(declare-fun m!121541 () Bool)

(assert (=> b!108076 m!121541))

(declare-fun m!121543 () Bool)

(assert (=> b!108076 m!121543))

(declare-fun m!121545 () Bool)

(assert (=> b!108076 m!121545))

(declare-fun m!121547 () Bool)

(assert (=> b!108076 m!121547))

(assert (=> b!108076 m!121529))

(declare-fun m!121549 () Bool)

(assert (=> b!108076 m!121549))

(assert (=> b!108076 m!121545))

(declare-fun m!121551 () Bool)

(assert (=> b!108076 m!121551))

(assert (=> b!108076 m!121539))

(declare-fun m!121553 () Bool)

(assert (=> b!108076 m!121553))

(assert (=> b!108076 m!121541))

(declare-fun m!121555 () Bool)

(assert (=> b!108076 m!121555))

(assert (=> b!108076 m!121535))

(declare-fun m!121557 () Bool)

(assert (=> b!108076 m!121557))

(declare-fun m!121559 () Bool)

(assert (=> b!108076 m!121559))

(declare-fun m!121561 () Bool)

(assert (=> b!108076 m!121561))

(assert (=> b!108076 m!121517))

(declare-fun m!121563 () Bool)

(assert (=> b!108076 m!121563))

(assert (=> b!108089 m!121517))

(assert (=> b!108089 m!121517))

(declare-fun m!121565 () Bool)

(assert (=> b!108089 m!121565))

(declare-fun m!121567 () Bool)

(assert (=> b!108079 m!121567))

(declare-fun m!121569 () Bool)

(assert (=> b!108079 m!121569))

(declare-fun m!121571 () Bool)

(assert (=> b!108079 m!121571))

(assert (=> b!108079 m!121517))

(declare-fun m!121573 () Bool)

(assert (=> b!108079 m!121573))

(assert (=> b!108079 m!121517))

(assert (=> b!108079 m!121569))

(assert (=> b!108079 m!121567))

(declare-fun m!121575 () Bool)

(assert (=> bm!11464 m!121575))

(assert (=> b!107935 d!29895))

(declare-fun b!108092 () Bool)

(declare-fun e!70373 () Bool)

(declare-fun call!11474 () Bool)

(assert (=> b!108092 (= e!70373 call!11474)))

(declare-fun b!108093 () Bool)

(assert (=> b!108093 (= e!70373 call!11474)))

(declare-fun bm!11471 () Bool)

(declare-fun c!18978 () Bool)

(assert (=> bm!11471 (= call!11474 (arrayNoDuplicates!0 (_keys!4316 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18978 (Cons!1643 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) Nil!1644) Nil!1644)))))

(declare-fun d!29897 () Bool)

(declare-fun res!53605 () Bool)

(declare-fun e!70374 () Bool)

(assert (=> d!29897 (=> res!53605 e!70374)))

(assert (=> d!29897 (= res!53605 (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(assert (=> d!29897 (= (arrayNoDuplicates!0 (_keys!4316 newMap!16) #b00000000000000000000000000000000 Nil!1644) e!70374)))

(declare-fun b!108094 () Bool)

(declare-fun e!70375 () Bool)

(assert (=> b!108094 (= e!70375 (contains!836 Nil!1644 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108095 () Bool)

(declare-fun e!70376 () Bool)

(assert (=> b!108095 (= e!70374 e!70376)))

(declare-fun res!53604 () Bool)

(assert (=> b!108095 (=> (not res!53604) (not e!70376))))

(assert (=> b!108095 (= res!53604 (not e!70375))))

(declare-fun res!53606 () Bool)

(assert (=> b!108095 (=> (not res!53606) (not e!70375))))

(assert (=> b!108095 (= res!53606 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108096 () Bool)

(assert (=> b!108096 (= e!70376 e!70373)))

(assert (=> b!108096 (= c!18978 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!29897 (not res!53605)) b!108095))

(assert (= (and b!108095 res!53606) b!108094))

(assert (= (and b!108095 res!53604) b!108096))

(assert (= (and b!108096 c!18978) b!108092))

(assert (= (and b!108096 (not c!18978)) b!108093))

(assert (= (or b!108092 b!108093) bm!11471))

(assert (=> bm!11471 m!121517))

(declare-fun m!121577 () Bool)

(assert (=> bm!11471 m!121577))

(assert (=> b!108094 m!121517))

(assert (=> b!108094 m!121517))

(declare-fun m!121579 () Bool)

(assert (=> b!108094 m!121579))

(assert (=> b!108095 m!121517))

(assert (=> b!108095 m!121517))

(assert (=> b!108095 m!121519))

(assert (=> b!108096 m!121517))

(assert (=> b!108096 m!121517))

(assert (=> b!108096 m!121519))

(assert (=> b!107829 d!29897))

(declare-fun b!108109 () Bool)

(declare-fun c!18985 () Bool)

(declare-fun lt!55537 () (_ BitVec 64))

(assert (=> b!108109 (= c!18985 (= lt!55537 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!70385 () SeekEntryResult!270)

(declare-fun e!70383 () SeekEntryResult!270)

(assert (=> b!108109 (= e!70385 e!70383)))

(declare-fun b!108110 () Bool)

(declare-fun lt!55539 () SeekEntryResult!270)

(assert (=> b!108110 (= e!70385 (Found!270 (index!3231 lt!55539)))))

(declare-fun b!108111 () Bool)

(declare-fun e!70384 () SeekEntryResult!270)

(assert (=> b!108111 (= e!70384 e!70385)))

(assert (=> b!108111 (= lt!55537 (select (arr!2074 (_keys!4316 newMap!16)) (index!3231 lt!55539)))))

(declare-fun c!18987 () Bool)

(assert (=> b!108111 (= c!18987 (= lt!55537 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108112 () Bool)

(assert (=> b!108112 (= e!70383 (MissingZero!270 (index!3231 lt!55539)))))

(declare-fun lt!55538 () SeekEntryResult!270)

(declare-fun d!29899 () Bool)

(assert (=> d!29899 (and (or ((_ is Undefined!270) lt!55538) (not ((_ is Found!270) lt!55538)) (and (bvsge (index!3230 lt!55538) #b00000000000000000000000000000000) (bvslt (index!3230 lt!55538) (size!2330 (_keys!4316 newMap!16))))) (or ((_ is Undefined!270) lt!55538) ((_ is Found!270) lt!55538) (not ((_ is MissingZero!270) lt!55538)) (and (bvsge (index!3229 lt!55538) #b00000000000000000000000000000000) (bvslt (index!3229 lt!55538) (size!2330 (_keys!4316 newMap!16))))) (or ((_ is Undefined!270) lt!55538) ((_ is Found!270) lt!55538) ((_ is MissingZero!270) lt!55538) (not ((_ is MissingVacant!270) lt!55538)) (and (bvsge (index!3232 lt!55538) #b00000000000000000000000000000000) (bvslt (index!3232 lt!55538) (size!2330 (_keys!4316 newMap!16))))) (or ((_ is Undefined!270) lt!55538) (ite ((_ is Found!270) lt!55538) (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55538)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (ite ((_ is MissingZero!270) lt!55538) (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3229 lt!55538)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!270) lt!55538) (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3232 lt!55538)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!29899 (= lt!55538 e!70384)))

(declare-fun c!18986 () Bool)

(assert (=> d!29899 (= c!18986 (and ((_ is Intermediate!270) lt!55539) (undefined!1082 lt!55539)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4374 (_ BitVec 32)) SeekEntryResult!270)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!29899 (= lt!55539 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (mask!6764 newMap!16)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(assert (=> d!29899 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!29899 (= (seekEntryOrOpen!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)) lt!55538)))

(declare-fun b!108113 () Bool)

(assert (=> b!108113 (= e!70384 Undefined!270)))

(declare-fun b!108114 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4374 (_ BitVec 32)) SeekEntryResult!270)

(assert (=> b!108114 (= e!70383 (seekKeyOrZeroReturnVacant!0 (x!13814 lt!55539) (index!3231 lt!55539) (index!3231 lt!55539) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(assert (= (and d!29899 c!18986) b!108113))

(assert (= (and d!29899 (not c!18986)) b!108111))

(assert (= (and b!108111 c!18987) b!108110))

(assert (= (and b!108111 (not c!18987)) b!108109))

(assert (= (and b!108109 c!18985) b!108112))

(assert (= (and b!108109 (not c!18985)) b!108114))

(declare-fun m!121581 () Bool)

(assert (=> b!108111 m!121581))

(declare-fun m!121583 () Bool)

(assert (=> d!29899 m!121583))

(assert (=> d!29899 m!121177))

(declare-fun m!121585 () Bool)

(assert (=> d!29899 m!121585))

(declare-fun m!121587 () Bool)

(assert (=> d!29899 m!121587))

(assert (=> d!29899 m!121521))

(declare-fun m!121589 () Bool)

(assert (=> d!29899 m!121589))

(declare-fun m!121591 () Bool)

(assert (=> d!29899 m!121591))

(assert (=> d!29899 m!121177))

(assert (=> d!29899 m!121583))

(assert (=> b!108114 m!121177))

(declare-fun m!121593 () Bool)

(assert (=> b!108114 m!121593))

(assert (=> b!107948 d!29899))

(assert (=> b!107949 d!29895))

(declare-fun d!29901 () Bool)

(declare-fun lt!55542 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!110 (List!1648) (InoxSet tuple2!2422))

(assert (=> d!29901 (= lt!55542 (select (content!110 (toList!811 lt!55303)) lt!55252))))

(declare-fun e!70390 () Bool)

(assert (=> d!29901 (= lt!55542 e!70390)))

(declare-fun res!53612 () Bool)

(assert (=> d!29901 (=> (not res!53612) (not e!70390))))

(assert (=> d!29901 (= res!53612 ((_ is Cons!1644) (toList!811 lt!55303)))))

(assert (=> d!29901 (= (contains!835 (toList!811 lt!55303) lt!55252) lt!55542)))

(declare-fun b!108119 () Bool)

(declare-fun e!70391 () Bool)

(assert (=> b!108119 (= e!70390 e!70391)))

(declare-fun res!53611 () Bool)

(assert (=> b!108119 (=> res!53611 e!70391)))

(assert (=> b!108119 (= res!53611 (= (h!2242 (toList!811 lt!55303)) lt!55252))))

(declare-fun b!108120 () Bool)

(assert (=> b!108120 (= e!70391 (contains!835 (t!5776 (toList!811 lt!55303)) lt!55252))))

(assert (= (and d!29901 res!53612) b!108119))

(assert (= (and b!108119 (not res!53611)) b!108120))

(declare-fun m!121595 () Bool)

(assert (=> d!29901 m!121595))

(declare-fun m!121597 () Bool)

(assert (=> d!29901 m!121597))

(declare-fun m!121599 () Bool)

(assert (=> b!108120 m!121599))

(assert (=> b!107778 d!29901))

(declare-fun d!29903 () Bool)

(declare-fun e!70393 () Bool)

(assert (=> d!29903 e!70393))

(declare-fun res!53613 () Bool)

(assert (=> d!29903 (=> res!53613 e!70393)))

(declare-fun lt!55543 () Bool)

(assert (=> d!29903 (= res!53613 (not lt!55543))))

(declare-fun lt!55544 () Bool)

(assert (=> d!29903 (= lt!55543 lt!55544)))

(declare-fun lt!55545 () Unit!3339)

(declare-fun e!70392 () Unit!3339)

(assert (=> d!29903 (= lt!55545 e!70392)))

(declare-fun c!18988 () Bool)

(assert (=> d!29903 (= c!18988 lt!55544)))

(assert (=> d!29903 (= lt!55544 (containsKey!160 (toList!811 lt!55479) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!29903 (= (contains!834 lt!55479 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!55543)))

(declare-fun b!108121 () Bool)

(declare-fun lt!55546 () Unit!3339)

(assert (=> b!108121 (= e!70392 lt!55546)))

(assert (=> b!108121 (= lt!55546 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55479) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!108121 (isDefined!110 (getValueByKey!156 (toList!811 lt!55479) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!108122 () Bool)

(declare-fun Unit!3351 () Unit!3339)

(assert (=> b!108122 (= e!70392 Unit!3351)))

(declare-fun b!108123 () Bool)

(assert (=> b!108123 (= e!70393 (isDefined!110 (getValueByKey!156 (toList!811 lt!55479) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!29903 c!18988) b!108121))

(assert (= (and d!29903 (not c!18988)) b!108122))

(assert (= (and d!29903 (not res!53613)) b!108123))

(assert (=> d!29903 m!121305))

(declare-fun m!121601 () Bool)

(assert (=> d!29903 m!121601))

(assert (=> b!108121 m!121305))

(declare-fun m!121603 () Bool)

(assert (=> b!108121 m!121603))

(assert (=> b!108121 m!121305))

(declare-fun m!121605 () Bool)

(assert (=> b!108121 m!121605))

(assert (=> b!108121 m!121605))

(declare-fun m!121607 () Bool)

(assert (=> b!108121 m!121607))

(assert (=> b!108123 m!121305))

(assert (=> b!108123 m!121605))

(assert (=> b!108123 m!121605))

(assert (=> b!108123 m!121607))

(assert (=> b!108025 d!29903))

(declare-fun d!29905 () Bool)

(declare-fun e!70395 () Bool)

(assert (=> d!29905 e!70395))

(declare-fun res!53614 () Bool)

(assert (=> d!29905 (=> res!53614 e!70395)))

(declare-fun lt!55547 () Bool)

(assert (=> d!29905 (= res!53614 (not lt!55547))))

(declare-fun lt!55548 () Bool)

(assert (=> d!29905 (= lt!55547 lt!55548)))

(declare-fun lt!55549 () Unit!3339)

(declare-fun e!70394 () Unit!3339)

(assert (=> d!29905 (= lt!55549 e!70394)))

(declare-fun c!18989 () Bool)

(assert (=> d!29905 (= c!18989 lt!55548)))

(assert (=> d!29905 (= lt!55548 (containsKey!160 (toList!811 call!11432) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))))))

(assert (=> d!29905 (= (contains!834 call!11432 (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))) lt!55547)))

(declare-fun b!108124 () Bool)

(declare-fun lt!55550 () Unit!3339)

(assert (=> b!108124 (= e!70394 lt!55550)))

(assert (=> b!108124 (= lt!55550 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 call!11432) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))))))

(assert (=> b!108124 (isDefined!110 (getValueByKey!156 (toList!811 call!11432) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))))))

(declare-fun b!108125 () Bool)

(declare-fun Unit!3352 () Unit!3339)

(assert (=> b!108125 (= e!70394 Unit!3352)))

(declare-fun b!108126 () Bool)

(assert (=> b!108126 (= e!70395 (isDefined!110 (getValueByKey!156 (toList!811 call!11432) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408)))))))

(assert (= (and d!29905 c!18989) b!108124))

(assert (= (and d!29905 (not c!18989)) b!108125))

(assert (= (and d!29905 (not res!53614)) b!108126))

(assert (=> d!29905 m!121411))

(declare-fun m!121609 () Bool)

(assert (=> d!29905 m!121609))

(assert (=> b!108124 m!121411))

(declare-fun m!121611 () Bool)

(assert (=> b!108124 m!121611))

(assert (=> b!108124 m!121411))

(declare-fun m!121613 () Bool)

(assert (=> b!108124 m!121613))

(assert (=> b!108124 m!121613))

(declare-fun m!121615 () Bool)

(assert (=> b!108124 m!121615))

(assert (=> b!108126 m!121411))

(assert (=> b!108126 m!121613))

(assert (=> b!108126 m!121613))

(assert (=> b!108126 m!121615))

(assert (=> b!107937 d!29905))

(declare-fun d!29907 () Bool)

(declare-fun e!70398 () Bool)

(assert (=> d!29907 e!70398))

(declare-fun res!53617 () Bool)

(assert (=> d!29907 (=> (not res!53617) (not e!70398))))

(assert (=> d!29907 (= res!53617 (and (bvsge (index!3230 lt!55408) #b00000000000000000000000000000000) (bvslt (index!3230 lt!55408) (size!2330 (_keys!4316 newMap!16)))))))

(declare-fun lt!55553 () Unit!3339)

(declare-fun choose!677 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 32) Int) Unit!3339)

(assert (=> d!29907 (= lt!55553 (choose!677 (_keys!4316 newMap!16) lt!55413 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (index!3230 lt!55408) (defaultEntry!2606 newMap!16)))))

(assert (=> d!29907 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!29907 (= (lemmaValidKeyInArrayIsInListMap!106 (_keys!4316 newMap!16) lt!55413 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (index!3230 lt!55408) (defaultEntry!2606 newMap!16)) lt!55553)))

(declare-fun b!108129 () Bool)

(assert (=> b!108129 (= e!70398 (contains!834 (getCurrentListMap!487 (_keys!4316 newMap!16) lt!55413 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))))))

(assert (= (and d!29907 res!53617) b!108129))

(declare-fun m!121617 () Bool)

(assert (=> d!29907 m!121617))

(assert (=> d!29907 m!121521))

(declare-fun m!121619 () Bool)

(assert (=> b!108129 m!121619))

(assert (=> b!108129 m!121411))

(assert (=> b!108129 m!121619))

(assert (=> b!108129 m!121411))

(declare-fun m!121621 () Bool)

(assert (=> b!108129 m!121621))

(assert (=> b!107937 d!29907))

(declare-fun d!29909 () Bool)

(declare-fun e!70401 () Bool)

(assert (=> d!29909 e!70401))

(declare-fun res!53620 () Bool)

(assert (=> d!29909 (=> (not res!53620) (not e!70401))))

(assert (=> d!29909 (= res!53620 (and (bvsge (index!3230 lt!55408) #b00000000000000000000000000000000) (bvslt (index!3230 lt!55408) (size!2331 (_values!2589 newMap!16)))))))

(declare-fun lt!55556 () Unit!3339)

(declare-fun choose!678 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 32) (_ BitVec 64) V!3235 Int) Unit!3339)

(assert (=> d!29909 (= lt!55556 (choose!678 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (index!3230 lt!55408) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248 (defaultEntry!2606 newMap!16)))))

(assert (=> d!29909 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!29909 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (index!3230 lt!55408) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248 (defaultEntry!2606 newMap!16)) lt!55556)))

(declare-fun b!108132 () Bool)

(assert (=> b!108132 (= e!70401 (= (+!148 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (getCurrentListMap!487 (_keys!4316 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))))))

(assert (= (and d!29909 res!53620) b!108132))

(assert (=> d!29909 m!121177))

(declare-fun m!121623 () Bool)

(assert (=> d!29909 m!121623))

(assert (=> d!29909 m!121521))

(assert (=> b!108132 m!121407))

(assert (=> b!108132 m!121407))

(declare-fun m!121625 () Bool)

(assert (=> b!108132 m!121625))

(assert (=> b!108132 m!121419))

(declare-fun m!121627 () Bool)

(assert (=> b!108132 m!121627))

(assert (=> b!107937 d!29909))

(declare-fun d!29911 () Bool)

(declare-fun res!53621 () Bool)

(declare-fun e!70402 () Bool)

(assert (=> d!29911 (=> (not res!53621) (not e!70402))))

(assert (=> d!29911 (= res!53621 (simpleValid!74 (v!2913 (underlying!367 thiss!992))))))

(assert (=> d!29911 (= (valid!416 (v!2913 (underlying!367 thiss!992))) e!70402)))

(declare-fun b!108133 () Bool)

(declare-fun res!53622 () Bool)

(assert (=> b!108133 (=> (not res!53622) (not e!70402))))

(assert (=> b!108133 (= res!53622 (= (arrayCountValidKeys!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000000 (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))) (_size!505 (v!2913 (underlying!367 thiss!992)))))))

(declare-fun b!108134 () Bool)

(declare-fun res!53623 () Bool)

(assert (=> b!108134 (=> (not res!53623) (not e!70402))))

(assert (=> b!108134 (= res!53623 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992)))))))

(declare-fun b!108135 () Bool)

(assert (=> b!108135 (= e!70402 (arrayNoDuplicates!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000000 Nil!1644))))

(assert (= (and d!29911 res!53621) b!108133))

(assert (= (and b!108133 res!53622) b!108134))

(assert (= (and b!108134 res!53623) b!108135))

(declare-fun m!121629 () Bool)

(assert (=> d!29911 m!121629))

(declare-fun m!121631 () Bool)

(assert (=> b!108133 m!121631))

(declare-fun m!121633 () Bool)

(assert (=> b!108134 m!121633))

(declare-fun m!121635 () Bool)

(assert (=> b!108135 m!121635))

(assert (=> d!29869 d!29911))

(assert (=> bm!11457 d!29851))

(declare-fun d!29913 () Bool)

(assert (=> d!29913 (= (map!1290 (_2!1222 lt!55429)) (getCurrentListMap!487 (_keys!4316 (_2!1222 lt!55429)) (_values!2589 (_2!1222 lt!55429)) (mask!6764 (_2!1222 lt!55429)) (extraKeys!2407 (_2!1222 lt!55429)) (zeroValue!2479 (_2!1222 lt!55429)) (minValue!2479 (_2!1222 lt!55429)) #b00000000000000000000000000000000 (defaultEntry!2606 (_2!1222 lt!55429))))))

(declare-fun bs!4437 () Bool)

(assert (= bs!4437 d!29913))

(declare-fun m!121637 () Bool)

(assert (=> bs!4437 m!121637))

(assert (=> bm!11436 d!29913))

(declare-fun b!108136 () Bool)

(declare-fun e!70408 () Bool)

(declare-fun call!11480 () Bool)

(assert (=> b!108136 (= e!70408 (not call!11480))))

(declare-fun c!18993 () Bool)

(declare-fun c!18991 () Bool)

(declare-fun call!11478 () ListLongMap!1591)

(declare-fun call!11476 () ListLongMap!1591)

(declare-fun call!11477 () ListLongMap!1591)

(declare-fun call!11479 () ListLongMap!1591)

(declare-fun bm!11472 () Bool)

(assert (=> bm!11472 (= call!11478 (+!148 (ite c!18993 call!11476 (ite c!18991 call!11477 call!11479)) (ite (or c!18993 c!18991) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))))))

(declare-fun b!108137 () Bool)

(declare-fun e!70404 () Bool)

(declare-fun call!11475 () Bool)

(assert (=> b!108137 (= e!70404 (not call!11475))))

(declare-fun bm!11473 () Bool)

(assert (=> bm!11473 (= call!11479 call!11477)))

(declare-fun b!108138 () Bool)

(declare-fun e!70410 () Bool)

(assert (=> b!108138 (= e!70408 e!70410)))

(declare-fun res!53630 () Bool)

(assert (=> b!108138 (= res!53630 call!11480)))

(assert (=> b!108138 (=> (not res!53630) (not e!70410))))

(declare-fun bm!11474 () Bool)

(declare-fun call!11481 () ListLongMap!1591)

(assert (=> bm!11474 (= call!11481 call!11478)))

(declare-fun bm!11475 () Bool)

(assert (=> bm!11475 (= call!11476 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18944 (ite c!18941 lt!55433 lt!55416) (extraKeys!2407 newMap!16)) (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)) (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun b!108139 () Bool)

(declare-fun e!70414 () Unit!3339)

(declare-fun Unit!3353 () Unit!3339)

(assert (=> b!108139 (= e!70414 Unit!3353)))

(declare-fun d!29915 () Bool)

(declare-fun e!70407 () Bool)

(assert (=> d!29915 e!70407))

(declare-fun res!53629 () Bool)

(assert (=> d!29915 (=> (not res!53629) (not e!70407))))

(assert (=> d!29915 (= res!53629 (or (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))))

(declare-fun lt!55558 () ListLongMap!1591)

(declare-fun lt!55577 () ListLongMap!1591)

(assert (=> d!29915 (= lt!55558 lt!55577)))

(declare-fun lt!55569 () Unit!3339)

(assert (=> d!29915 (= lt!55569 e!70414)))

(declare-fun c!18994 () Bool)

(declare-fun e!70413 () Bool)

(assert (=> d!29915 (= c!18994 e!70413)))

(declare-fun res!53625 () Bool)

(assert (=> d!29915 (=> (not res!53625) (not e!70413))))

(assert (=> d!29915 (= res!53625 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun e!70411 () ListLongMap!1591)

(assert (=> d!29915 (= lt!55577 e!70411)))

(assert (=> d!29915 (= c!18993 (and (not (= (bvand (ite c!18944 (ite c!18941 lt!55433 lt!55416) (extraKeys!2407 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!18944 (ite c!18941 lt!55433 lt!55416) (extraKeys!2407 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29915 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!29915 (= (getCurrentListMap!487 (_keys!4316 newMap!16) (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18944 (ite c!18941 lt!55433 lt!55416) (extraKeys!2407 newMap!16)) (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)) (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!55558)))

(declare-fun b!108140 () Bool)

(declare-fun e!70406 () Bool)

(assert (=> b!108140 (= e!70404 e!70406)))

(declare-fun res!53631 () Bool)

(assert (=> b!108140 (= res!53631 call!11475)))

(assert (=> b!108140 (=> (not res!53631) (not e!70406))))

(declare-fun b!108141 () Bool)

(declare-fun lt!55564 () Unit!3339)

(assert (=> b!108141 (= e!70414 lt!55564)))

(declare-fun lt!55576 () ListLongMap!1591)

(assert (=> b!108141 (= lt!55576 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18944 (ite c!18941 lt!55433 lt!55416) (extraKeys!2407 newMap!16)) (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)) (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55574 () (_ BitVec 64))

(assert (=> b!108141 (= lt!55574 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55575 () (_ BitVec 64))

(assert (=> b!108141 (= lt!55575 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55560 () Unit!3339)

(assert (=> b!108141 (= lt!55560 (addStillContains!75 lt!55576 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)) lt!55575))))

(assert (=> b!108141 (contains!834 (+!148 lt!55576 (tuple2!2423 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)))) lt!55575)))

(declare-fun lt!55567 () Unit!3339)

(assert (=> b!108141 (= lt!55567 lt!55560)))

(declare-fun lt!55559 () ListLongMap!1591)

(assert (=> b!108141 (= lt!55559 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18944 (ite c!18941 lt!55433 lt!55416) (extraKeys!2407 newMap!16)) (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)) (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55570 () (_ BitVec 64))

(assert (=> b!108141 (= lt!55570 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55566 () (_ BitVec 64))

(assert (=> b!108141 (= lt!55566 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55571 () Unit!3339)

(assert (=> b!108141 (= lt!55571 (addApplyDifferent!75 lt!55559 lt!55570 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)) lt!55566))))

(assert (=> b!108141 (= (apply!99 (+!148 lt!55559 (tuple2!2423 lt!55570 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))) lt!55566) (apply!99 lt!55559 lt!55566))))

(declare-fun lt!55568 () Unit!3339)

(assert (=> b!108141 (= lt!55568 lt!55571)))

(declare-fun lt!55561 () ListLongMap!1591)

(assert (=> b!108141 (= lt!55561 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18944 (ite c!18941 lt!55433 lt!55416) (extraKeys!2407 newMap!16)) (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)) (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55563 () (_ BitVec 64))

(assert (=> b!108141 (= lt!55563 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55573 () (_ BitVec 64))

(assert (=> b!108141 (= lt!55573 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55557 () Unit!3339)

(assert (=> b!108141 (= lt!55557 (addApplyDifferent!75 lt!55561 lt!55563 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)) lt!55573))))

(assert (=> b!108141 (= (apply!99 (+!148 lt!55561 (tuple2!2423 lt!55563 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)))) lt!55573) (apply!99 lt!55561 lt!55573))))

(declare-fun lt!55565 () Unit!3339)

(assert (=> b!108141 (= lt!55565 lt!55557)))

(declare-fun lt!55578 () ListLongMap!1591)

(assert (=> b!108141 (= lt!55578 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18944 (ite c!18941 lt!55433 lt!55416) (extraKeys!2407 newMap!16)) (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)) (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55562 () (_ BitVec 64))

(assert (=> b!108141 (= lt!55562 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55572 () (_ BitVec 64))

(assert (=> b!108141 (= lt!55572 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108141 (= lt!55564 (addApplyDifferent!75 lt!55578 lt!55562 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)) lt!55572))))

(assert (=> b!108141 (= (apply!99 (+!148 lt!55578 (tuple2!2423 lt!55562 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))) lt!55572) (apply!99 lt!55578 lt!55572))))

(declare-fun b!108142 () Bool)

(assert (=> b!108142 (= e!70411 (+!148 call!11478 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))))))

(declare-fun bm!11476 () Bool)

(assert (=> bm!11476 (= call!11480 (contains!834 lt!55558 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun c!18995 () Bool)

(declare-fun b!108143 () Bool)

(assert (=> b!108143 (= c!18995 (and (not (= (bvand (ite c!18944 (ite c!18941 lt!55433 lt!55416) (extraKeys!2407 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!18944 (ite c!18941 lt!55433 lt!55416) (extraKeys!2407 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!70412 () ListLongMap!1591)

(declare-fun e!70403 () ListLongMap!1591)

(assert (=> b!108143 (= e!70412 e!70403)))

(declare-fun e!70415 () Bool)

(declare-fun b!108144 () Bool)

(assert (=> b!108144 (= e!70415 (= (apply!99 lt!55558 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1349 (select (arr!2075 (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108144 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16)))))))))

(assert (=> b!108144 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108145 () Bool)

(assert (=> b!108145 (= e!70413 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108146 () Bool)

(assert (=> b!108146 (= e!70407 e!70404)))

(declare-fun c!18992 () Bool)

(assert (=> b!108146 (= c!18992 (not (= (bvand (ite c!18944 (ite c!18941 lt!55433 lt!55416) (extraKeys!2407 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108147 () Bool)

(assert (=> b!108147 (= e!70410 (= (apply!99 lt!55558 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))))))

(declare-fun b!108148 () Bool)

(declare-fun res!53626 () Bool)

(assert (=> b!108148 (=> (not res!53626) (not e!70407))))

(declare-fun e!70409 () Bool)

(assert (=> b!108148 (= res!53626 e!70409)))

(declare-fun res!53624 () Bool)

(assert (=> b!108148 (=> res!53624 e!70409)))

(declare-fun e!70405 () Bool)

(assert (=> b!108148 (= res!53624 (not e!70405))))

(declare-fun res!53627 () Bool)

(assert (=> b!108148 (=> (not res!53627) (not e!70405))))

(assert (=> b!108148 (= res!53627 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108149 () Bool)

(assert (=> b!108149 (= e!70403 call!11481)))

(declare-fun b!108150 () Bool)

(declare-fun res!53632 () Bool)

(assert (=> b!108150 (=> (not res!53632) (not e!70407))))

(assert (=> b!108150 (= res!53632 e!70408)))

(declare-fun c!18990 () Bool)

(assert (=> b!108150 (= c!18990 (not (= (bvand (ite c!18944 (ite c!18941 lt!55433 lt!55416) (extraKeys!2407 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11477 () Bool)

(assert (=> bm!11477 (= call!11477 call!11476)))

(declare-fun bm!11478 () Bool)

(assert (=> bm!11478 (= call!11475 (contains!834 lt!55558 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108151 () Bool)

(assert (=> b!108151 (= e!70406 (= (apply!99 lt!55558 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))))

(declare-fun b!108152 () Bool)

(assert (=> b!108152 (= e!70403 call!11479)))

(declare-fun b!108153 () Bool)

(assert (=> b!108153 (= e!70412 call!11481)))

(declare-fun b!108154 () Bool)

(assert (=> b!108154 (= e!70409 e!70415)))

(declare-fun res!53628 () Bool)

(assert (=> b!108154 (=> (not res!53628) (not e!70415))))

(assert (=> b!108154 (= res!53628 (contains!834 lt!55558 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108154 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108155 () Bool)

(assert (=> b!108155 (= e!70405 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108156 () Bool)

(assert (=> b!108156 (= e!70411 e!70412)))

(assert (=> b!108156 (= c!18991 (and (not (= (bvand (ite c!18944 (ite c!18941 lt!55433 lt!55416) (extraKeys!2407 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!18944 (ite c!18941 lt!55433 lt!55416) (extraKeys!2407 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!29915 c!18993) b!108142))

(assert (= (and d!29915 (not c!18993)) b!108156))

(assert (= (and b!108156 c!18991) b!108153))

(assert (= (and b!108156 (not c!18991)) b!108143))

(assert (= (and b!108143 c!18995) b!108149))

(assert (= (and b!108143 (not c!18995)) b!108152))

(assert (= (or b!108149 b!108152) bm!11473))

(assert (= (or b!108153 bm!11473) bm!11477))

(assert (= (or b!108153 b!108149) bm!11474))

(assert (= (or b!108142 bm!11477) bm!11475))

(assert (= (or b!108142 bm!11474) bm!11472))

(assert (= (and d!29915 res!53625) b!108145))

(assert (= (and d!29915 c!18994) b!108141))

(assert (= (and d!29915 (not c!18994)) b!108139))

(assert (= (and d!29915 res!53629) b!108148))

(assert (= (and b!108148 res!53627) b!108155))

(assert (= (and b!108148 (not res!53624)) b!108154))

(assert (= (and b!108154 res!53628) b!108144))

(assert (= (and b!108148 res!53626) b!108150))

(assert (= (and b!108150 c!18990) b!108138))

(assert (= (and b!108150 (not c!18990)) b!108136))

(assert (= (and b!108138 res!53630) b!108147))

(assert (= (or b!108138 b!108136) bm!11476))

(assert (= (and b!108150 res!53632) b!108146))

(assert (= (and b!108146 c!18992) b!108140))

(assert (= (and b!108146 (not c!18992)) b!108137))

(assert (= (and b!108140 res!53631) b!108151))

(assert (= (or b!108140 b!108137) bm!11478))

(declare-fun b_lambda!4865 () Bool)

(assert (=> (not b_lambda!4865) (not b!108144)))

(assert (=> b!108144 t!5783))

(declare-fun b_and!6693 () Bool)

(assert (= b_and!6689 (and (=> t!5783 result!3521) b_and!6693)))

(assert (=> b!108144 t!5785))

(declare-fun b_and!6695 () Bool)

(assert (= b_and!6691 (and (=> t!5785 result!3523) b_and!6695)))

(assert (=> b!108155 m!121517))

(assert (=> b!108155 m!121517))

(assert (=> b!108155 m!121519))

(assert (=> d!29915 m!121521))

(declare-fun m!121639 () Bool)

(assert (=> bm!11478 m!121639))

(declare-fun m!121641 () Bool)

(assert (=> bm!11476 m!121641))

(declare-fun m!121643 () Bool)

(assert (=> b!108151 m!121643))

(declare-fun m!121645 () Bool)

(assert (=> bm!11475 m!121645))

(declare-fun m!121647 () Bool)

(assert (=> b!108142 m!121647))

(declare-fun m!121649 () Bool)

(assert (=> b!108147 m!121649))

(assert (=> b!108145 m!121517))

(assert (=> b!108145 m!121517))

(assert (=> b!108145 m!121519))

(declare-fun m!121651 () Bool)

(assert (=> b!108141 m!121651))

(declare-fun m!121653 () Bool)

(assert (=> b!108141 m!121653))

(declare-fun m!121655 () Bool)

(assert (=> b!108141 m!121655))

(declare-fun m!121657 () Bool)

(assert (=> b!108141 m!121657))

(declare-fun m!121659 () Bool)

(assert (=> b!108141 m!121659))

(declare-fun m!121661 () Bool)

(assert (=> b!108141 m!121661))

(declare-fun m!121663 () Bool)

(assert (=> b!108141 m!121663))

(assert (=> b!108141 m!121645))

(declare-fun m!121665 () Bool)

(assert (=> b!108141 m!121665))

(assert (=> b!108141 m!121661))

(declare-fun m!121667 () Bool)

(assert (=> b!108141 m!121667))

(assert (=> b!108141 m!121655))

(declare-fun m!121669 () Bool)

(assert (=> b!108141 m!121669))

(assert (=> b!108141 m!121657))

(declare-fun m!121671 () Bool)

(assert (=> b!108141 m!121671))

(assert (=> b!108141 m!121651))

(declare-fun m!121673 () Bool)

(assert (=> b!108141 m!121673))

(declare-fun m!121675 () Bool)

(assert (=> b!108141 m!121675))

(declare-fun m!121677 () Bool)

(assert (=> b!108141 m!121677))

(assert (=> b!108141 m!121517))

(declare-fun m!121679 () Bool)

(assert (=> b!108141 m!121679))

(assert (=> b!108154 m!121517))

(assert (=> b!108154 m!121517))

(declare-fun m!121681 () Bool)

(assert (=> b!108154 m!121681))

(declare-fun m!121683 () Bool)

(assert (=> b!108144 m!121683))

(assert (=> b!108144 m!121569))

(declare-fun m!121685 () Bool)

(assert (=> b!108144 m!121685))

(assert (=> b!108144 m!121517))

(declare-fun m!121687 () Bool)

(assert (=> b!108144 m!121687))

(assert (=> b!108144 m!121517))

(assert (=> b!108144 m!121569))

(assert (=> b!108144 m!121683))

(declare-fun m!121689 () Bool)

(assert (=> bm!11472 m!121689))

(assert (=> bm!11428 d!29915))

(assert (=> d!29881 d!29885))

(declare-fun d!29917 () Bool)

(assert (=> d!29917 (not (arrayContainsKey!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!29917 true))

(declare-fun _$68!109 () Unit!3339)

(assert (=> d!29917 (= (choose!68 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644)) _$68!109)))

(declare-fun bs!4438 () Bool)

(assert (= bs!4438 d!29917))

(assert (=> bs!4438 m!121177))

(assert (=> bs!4438 m!121229))

(assert (=> d!29881 d!29917))

(declare-fun d!29919 () Bool)

(assert (=> d!29919 (= (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!107812 d!29919))

(declare-fun d!29921 () Bool)

(declare-fun e!70417 () Bool)

(assert (=> d!29921 e!70417))

(declare-fun res!53633 () Bool)

(assert (=> d!29921 (=> res!53633 e!70417)))

(declare-fun lt!55579 () Bool)

(assert (=> d!29921 (= res!53633 (not lt!55579))))

(declare-fun lt!55580 () Bool)

(assert (=> d!29921 (= lt!55579 lt!55580)))

(declare-fun lt!55581 () Unit!3339)

(declare-fun e!70416 () Unit!3339)

(assert (=> d!29921 (= lt!55581 e!70416)))

(declare-fun c!18996 () Bool)

(assert (=> d!29921 (= c!18996 lt!55580)))

(assert (=> d!29921 (= lt!55580 (containsKey!160 (toList!811 lt!55324) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29921 (= (contains!834 lt!55324 #b1000000000000000000000000000000000000000000000000000000000000000) lt!55579)))

(declare-fun b!108157 () Bool)

(declare-fun lt!55582 () Unit!3339)

(assert (=> b!108157 (= e!70416 lt!55582)))

(assert (=> b!108157 (= lt!55582 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55324) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108157 (isDefined!110 (getValueByKey!156 (toList!811 lt!55324) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108158 () Bool)

(declare-fun Unit!3354 () Unit!3339)

(assert (=> b!108158 (= e!70416 Unit!3354)))

(declare-fun b!108159 () Bool)

(assert (=> b!108159 (= e!70417 (isDefined!110 (getValueByKey!156 (toList!811 lt!55324) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29921 c!18996) b!108157))

(assert (= (and d!29921 (not c!18996)) b!108158))

(assert (= (and d!29921 (not res!53633)) b!108159))

(declare-fun m!121691 () Bool)

(assert (=> d!29921 m!121691))

(declare-fun m!121693 () Bool)

(assert (=> b!108157 m!121693))

(declare-fun m!121695 () Bool)

(assert (=> b!108157 m!121695))

(assert (=> b!108157 m!121695))

(declare-fun m!121697 () Bool)

(assert (=> b!108157 m!121697))

(assert (=> b!108159 m!121695))

(assert (=> b!108159 m!121695))

(assert (=> b!108159 m!121697))

(assert (=> b!107814 d!29921))

(declare-fun d!29923 () Bool)

(declare-fun e!70418 () Bool)

(assert (=> d!29923 e!70418))

(declare-fun res!53634 () Bool)

(assert (=> d!29923 (=> (not res!53634) (not e!70418))))

(declare-fun lt!55585 () ListLongMap!1591)

(assert (=> d!29923 (= res!53634 (contains!834 lt!55585 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun lt!55583 () List!1648)

(assert (=> d!29923 (= lt!55585 (ListLongMap!1592 lt!55583))))

(declare-fun lt!55584 () Unit!3339)

(declare-fun lt!55586 () Unit!3339)

(assert (=> d!29923 (= lt!55584 lt!55586)))

(assert (=> d!29923 (= (getValueByKey!156 lt!55583 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!29923 (= lt!55586 (lemmaContainsTupThenGetReturnValue!74 lt!55583 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!29923 (= lt!55583 (insertStrictlySorted!76 (toList!811 call!11460) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!29923 (= (+!148 call!11460 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55585)))

(declare-fun b!108160 () Bool)

(declare-fun res!53635 () Bool)

(assert (=> b!108160 (=> (not res!53635) (not e!70418))))

(assert (=> b!108160 (= res!53635 (= (getValueByKey!156 (toList!811 lt!55585) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!108161 () Bool)

(assert (=> b!108161 (= e!70418 (contains!835 (toList!811 lt!55585) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(assert (= (and d!29923 res!53634) b!108160))

(assert (= (and b!108160 res!53635) b!108161))

(declare-fun m!121699 () Bool)

(assert (=> d!29923 m!121699))

(declare-fun m!121701 () Bool)

(assert (=> d!29923 m!121701))

(declare-fun m!121703 () Bool)

(assert (=> d!29923 m!121703))

(declare-fun m!121705 () Bool)

(assert (=> d!29923 m!121705))

(declare-fun m!121707 () Bool)

(assert (=> b!108160 m!121707))

(declare-fun m!121709 () Bool)

(assert (=> b!108161 m!121709))

(assert (=> b!108013 d!29923))

(declare-fun d!29925 () Bool)

(declare-fun e!70421 () Bool)

(assert (=> d!29925 e!70421))

(declare-fun res!53641 () Bool)

(assert (=> d!29925 (=> (not res!53641) (not e!70421))))

(declare-fun lt!55591 () SeekEntryResult!270)

(assert (=> d!29925 (= res!53641 ((_ is Found!270) lt!55591))))

(assert (=> d!29925 (= lt!55591 (seekEntryOrOpen!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun lt!55592 () Unit!3339)

(declare-fun choose!679 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 64) Int) Unit!3339)

(assert (=> d!29925 (= lt!55592 (choose!679 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)))))

(assert (=> d!29925 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!29925 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)) lt!55592)))

(declare-fun b!108166 () Bool)

(declare-fun res!53640 () Bool)

(assert (=> b!108166 (=> (not res!53640) (not e!70421))))

(assert (=> b!108166 (= res!53640 (inRange!0 (index!3230 lt!55591) (mask!6764 newMap!16)))))

(declare-fun b!108167 () Bool)

(assert (=> b!108167 (= e!70421 (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55591)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!108167 (and (bvsge (index!3230 lt!55591) #b00000000000000000000000000000000) (bvslt (index!3230 lt!55591) (size!2330 (_keys!4316 newMap!16))))))

(assert (= (and d!29925 res!53641) b!108166))

(assert (= (and b!108166 res!53640) b!108167))

(assert (=> d!29925 m!121177))

(assert (=> d!29925 m!121393))

(assert (=> d!29925 m!121177))

(declare-fun m!121711 () Bool)

(assert (=> d!29925 m!121711))

(assert (=> d!29925 m!121521))

(declare-fun m!121713 () Bool)

(assert (=> b!108166 m!121713))

(declare-fun m!121715 () Bool)

(assert (=> b!108167 m!121715))

(assert (=> bm!11430 d!29925))

(declare-fun d!29927 () Bool)

(declare-fun lt!55595 () Bool)

(declare-fun content!111 (List!1647) (InoxSet (_ BitVec 64)))

(assert (=> d!29927 (= lt!55595 (select (content!111 Nil!1644) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!70426 () Bool)

(assert (=> d!29927 (= lt!55595 e!70426)))

(declare-fun res!53647 () Bool)

(assert (=> d!29927 (=> (not res!53647) (not e!70426))))

(assert (=> d!29927 (= res!53647 ((_ is Cons!1643) Nil!1644))))

(assert (=> d!29927 (= (contains!836 Nil!1644 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) lt!55595)))

(declare-fun b!108172 () Bool)

(declare-fun e!70427 () Bool)

(assert (=> b!108172 (= e!70426 e!70427)))

(declare-fun res!53646 () Bool)

(assert (=> b!108172 (=> res!53646 e!70427)))

(assert (=> b!108172 (= res!53646 (= (h!2241 Nil!1644) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108173 () Bool)

(assert (=> b!108173 (= e!70427 (contains!836 (t!5775 Nil!1644) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!29927 res!53647) b!108172))

(assert (= (and b!108172 (not res!53646)) b!108173))

(declare-fun m!121717 () Bool)

(assert (=> d!29927 m!121717))

(assert (=> d!29927 m!121177))

(declare-fun m!121719 () Bool)

(assert (=> d!29927 m!121719))

(assert (=> b!108173 m!121177))

(declare-fun m!121721 () Bool)

(assert (=> b!108173 m!121721))

(assert (=> b!108058 d!29927))

(declare-fun d!29929 () Bool)

(declare-fun e!70429 () Bool)

(assert (=> d!29929 e!70429))

(declare-fun res!53648 () Bool)

(assert (=> d!29929 (=> res!53648 e!70429)))

(declare-fun lt!55596 () Bool)

(assert (=> d!29929 (= res!53648 (not lt!55596))))

(declare-fun lt!55597 () Bool)

(assert (=> d!29929 (= lt!55596 lt!55597)))

(declare-fun lt!55598 () Unit!3339)

(declare-fun e!70428 () Unit!3339)

(assert (=> d!29929 (= lt!55598 e!70428)))

(declare-fun c!18997 () Bool)

(assert (=> d!29929 (= c!18997 lt!55597)))

(assert (=> d!29929 (= lt!55597 (containsKey!160 (toList!811 lt!55335) (_1!1221 lt!55249)))))

(assert (=> d!29929 (= (contains!834 lt!55335 (_1!1221 lt!55249)) lt!55596)))

(declare-fun b!108174 () Bool)

(declare-fun lt!55599 () Unit!3339)

(assert (=> b!108174 (= e!70428 lt!55599)))

(assert (=> b!108174 (= lt!55599 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55335) (_1!1221 lt!55249)))))

(assert (=> b!108174 (isDefined!110 (getValueByKey!156 (toList!811 lt!55335) (_1!1221 lt!55249)))))

(declare-fun b!108175 () Bool)

(declare-fun Unit!3355 () Unit!3339)

(assert (=> b!108175 (= e!70428 Unit!3355)))

(declare-fun b!108176 () Bool)

(assert (=> b!108176 (= e!70429 (isDefined!110 (getValueByKey!156 (toList!811 lt!55335) (_1!1221 lt!55249))))))

(assert (= (and d!29929 c!18997) b!108174))

(assert (= (and d!29929 (not c!18997)) b!108175))

(assert (= (and d!29929 (not res!53648)) b!108176))

(declare-fun m!121723 () Bool)

(assert (=> d!29929 m!121723))

(declare-fun m!121725 () Bool)

(assert (=> b!108174 m!121725))

(assert (=> b!108174 m!121359))

(assert (=> b!108174 m!121359))

(declare-fun m!121727 () Bool)

(assert (=> b!108174 m!121727))

(assert (=> b!108176 m!121359))

(assert (=> b!108176 m!121359))

(assert (=> b!108176 m!121727))

(assert (=> d!29857 d!29929))

(declare-fun d!29931 () Bool)

(declare-fun c!19002 () Bool)

(assert (=> d!29931 (= c!19002 (and ((_ is Cons!1644) lt!55333) (= (_1!1221 (h!2242 lt!55333)) (_1!1221 lt!55249))))))

(declare-fun e!70434 () Option!162)

(assert (=> d!29931 (= (getValueByKey!156 lt!55333 (_1!1221 lt!55249)) e!70434)))

(declare-fun b!108187 () Bool)

(declare-fun e!70435 () Option!162)

(assert (=> b!108187 (= e!70435 (getValueByKey!156 (t!5776 lt!55333) (_1!1221 lt!55249)))))

(declare-fun b!108188 () Bool)

(assert (=> b!108188 (= e!70435 None!160)))

(declare-fun b!108186 () Bool)

(assert (=> b!108186 (= e!70434 e!70435)))

(declare-fun c!19003 () Bool)

(assert (=> b!108186 (= c!19003 (and ((_ is Cons!1644) lt!55333) (not (= (_1!1221 (h!2242 lt!55333)) (_1!1221 lt!55249)))))))

(declare-fun b!108185 () Bool)

(assert (=> b!108185 (= e!70434 (Some!161 (_2!1221 (h!2242 lt!55333))))))

(assert (= (and d!29931 c!19002) b!108185))

(assert (= (and d!29931 (not c!19002)) b!108186))

(assert (= (and b!108186 c!19003) b!108187))

(assert (= (and b!108186 (not c!19003)) b!108188))

(declare-fun m!121729 () Bool)

(assert (=> b!108187 m!121729))

(assert (=> d!29857 d!29931))

(declare-fun d!29933 () Bool)

(assert (=> d!29933 (= (getValueByKey!156 lt!55333 (_1!1221 lt!55249)) (Some!161 (_2!1221 lt!55249)))))

(declare-fun lt!55602 () Unit!3339)

(declare-fun choose!680 (List!1648 (_ BitVec 64) V!3235) Unit!3339)

(assert (=> d!29933 (= lt!55602 (choose!680 lt!55333 (_1!1221 lt!55249) (_2!1221 lt!55249)))))

(declare-fun e!70438 () Bool)

(assert (=> d!29933 e!70438))

(declare-fun res!53653 () Bool)

(assert (=> d!29933 (=> (not res!53653) (not e!70438))))

(declare-fun isStrictlySorted!305 (List!1648) Bool)

(assert (=> d!29933 (= res!53653 (isStrictlySorted!305 lt!55333))))

(assert (=> d!29933 (= (lemmaContainsTupThenGetReturnValue!74 lt!55333 (_1!1221 lt!55249) (_2!1221 lt!55249)) lt!55602)))

(declare-fun b!108193 () Bool)

(declare-fun res!53654 () Bool)

(assert (=> b!108193 (=> (not res!53654) (not e!70438))))

(assert (=> b!108193 (= res!53654 (containsKey!160 lt!55333 (_1!1221 lt!55249)))))

(declare-fun b!108194 () Bool)

(assert (=> b!108194 (= e!70438 (contains!835 lt!55333 (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))))))

(assert (= (and d!29933 res!53653) b!108193))

(assert (= (and b!108193 res!53654) b!108194))

(assert (=> d!29933 m!121353))

(declare-fun m!121731 () Bool)

(assert (=> d!29933 m!121731))

(declare-fun m!121733 () Bool)

(assert (=> d!29933 m!121733))

(declare-fun m!121735 () Bool)

(assert (=> b!108193 m!121735))

(declare-fun m!121737 () Bool)

(assert (=> b!108194 m!121737))

(assert (=> d!29857 d!29933))

(declare-fun b!108215 () Bool)

(declare-fun c!19012 () Bool)

(assert (=> b!108215 (= c!19012 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55250 lt!55252))) (bvsgt (_1!1221 (h!2242 (toList!811 (+!148 lt!55250 lt!55252)))) (_1!1221 lt!55249))))))

(declare-fun e!70449 () List!1648)

(declare-fun e!70450 () List!1648)

(assert (=> b!108215 (= e!70449 e!70450)))

(declare-fun b!108216 () Bool)

(declare-fun e!70451 () List!1648)

(declare-fun call!11489 () List!1648)

(assert (=> b!108216 (= e!70451 call!11489)))

(declare-fun e!70453 () List!1648)

(declare-fun c!19013 () Bool)

(declare-fun bm!11485 () Bool)

(declare-fun $colon$colon!81 (List!1648 tuple2!2422) List!1648)

(assert (=> bm!11485 (= call!11489 ($colon$colon!81 e!70453 (ite c!19013 (h!2242 (toList!811 (+!148 lt!55250 lt!55252))) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249)))))))

(declare-fun c!19014 () Bool)

(assert (=> bm!11485 (= c!19014 c!19013)))

(declare-fun b!108217 () Bool)

(declare-fun call!11488 () List!1648)

(assert (=> b!108217 (= e!70450 call!11488)))

(declare-fun b!108218 () Bool)

(declare-fun call!11490 () List!1648)

(assert (=> b!108218 (= e!70449 call!11490)))

(declare-fun d!29935 () Bool)

(declare-fun e!70452 () Bool)

(assert (=> d!29935 e!70452))

(declare-fun res!53659 () Bool)

(assert (=> d!29935 (=> (not res!53659) (not e!70452))))

(declare-fun lt!55605 () List!1648)

(assert (=> d!29935 (= res!53659 (isStrictlySorted!305 lt!55605))))

(assert (=> d!29935 (= lt!55605 e!70451)))

(assert (=> d!29935 (= c!19013 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55250 lt!55252))) (bvslt (_1!1221 (h!2242 (toList!811 (+!148 lt!55250 lt!55252)))) (_1!1221 lt!55249))))))

(assert (=> d!29935 (isStrictlySorted!305 (toList!811 (+!148 lt!55250 lt!55252)))))

(assert (=> d!29935 (= (insertStrictlySorted!76 (toList!811 (+!148 lt!55250 lt!55252)) (_1!1221 lt!55249) (_2!1221 lt!55249)) lt!55605)))

(declare-fun b!108219 () Bool)

(assert (=> b!108219 (= e!70451 e!70449)))

(declare-fun c!19015 () Bool)

(assert (=> b!108219 (= c!19015 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55250 lt!55252))) (= (_1!1221 (h!2242 (toList!811 (+!148 lt!55250 lt!55252)))) (_1!1221 lt!55249))))))

(declare-fun b!108220 () Bool)

(declare-fun res!53660 () Bool)

(assert (=> b!108220 (=> (not res!53660) (not e!70452))))

(assert (=> b!108220 (= res!53660 (containsKey!160 lt!55605 (_1!1221 lt!55249)))))

(declare-fun bm!11486 () Bool)

(assert (=> bm!11486 (= call!11490 call!11489)))

(declare-fun bm!11487 () Bool)

(assert (=> bm!11487 (= call!11488 call!11490)))

(declare-fun b!108221 () Bool)

(assert (=> b!108221 (= e!70453 (insertStrictlySorted!76 (t!5776 (toList!811 (+!148 lt!55250 lt!55252))) (_1!1221 lt!55249) (_2!1221 lt!55249)))))

(declare-fun b!108222 () Bool)

(assert (=> b!108222 (= e!70450 call!11488)))

(declare-fun b!108223 () Bool)

(assert (=> b!108223 (= e!70452 (contains!835 lt!55605 (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))))))

(declare-fun b!108224 () Bool)

(assert (=> b!108224 (= e!70453 (ite c!19015 (t!5776 (toList!811 (+!148 lt!55250 lt!55252))) (ite c!19012 (Cons!1644 (h!2242 (toList!811 (+!148 lt!55250 lt!55252))) (t!5776 (toList!811 (+!148 lt!55250 lt!55252)))) Nil!1645)))))

(assert (= (and d!29935 c!19013) b!108216))

(assert (= (and d!29935 (not c!19013)) b!108219))

(assert (= (and b!108219 c!19015) b!108218))

(assert (= (and b!108219 (not c!19015)) b!108215))

(assert (= (and b!108215 c!19012) b!108222))

(assert (= (and b!108215 (not c!19012)) b!108217))

(assert (= (or b!108222 b!108217) bm!11487))

(assert (= (or b!108218 bm!11487) bm!11486))

(assert (= (or b!108216 bm!11486) bm!11485))

(assert (= (and bm!11485 c!19014) b!108221))

(assert (= (and bm!11485 (not c!19014)) b!108224))

(assert (= (and d!29935 res!53659) b!108220))

(assert (= (and b!108220 res!53660) b!108223))

(declare-fun m!121739 () Bool)

(assert (=> b!108223 m!121739))

(declare-fun m!121741 () Bool)

(assert (=> b!108220 m!121741))

(declare-fun m!121743 () Bool)

(assert (=> bm!11485 m!121743))

(declare-fun m!121745 () Bool)

(assert (=> d!29935 m!121745))

(declare-fun m!121747 () Bool)

(assert (=> d!29935 m!121747))

(declare-fun m!121749 () Bool)

(assert (=> b!108221 m!121749))

(assert (=> d!29857 d!29935))

(declare-fun d!29937 () Bool)

(declare-fun e!70455 () Bool)

(assert (=> d!29937 e!70455))

(declare-fun res!53661 () Bool)

(assert (=> d!29937 (=> res!53661 e!70455)))

(declare-fun lt!55606 () Bool)

(assert (=> d!29937 (= res!53661 (not lt!55606))))

(declare-fun lt!55607 () Bool)

(assert (=> d!29937 (= lt!55606 lt!55607)))

(declare-fun lt!55608 () Unit!3339)

(declare-fun e!70454 () Unit!3339)

(assert (=> d!29937 (= lt!55608 e!70454)))

(declare-fun c!19016 () Bool)

(assert (=> d!29937 (= c!19016 lt!55607)))

(assert (=> d!29937 (= lt!55607 (containsKey!160 (toList!811 lt!55339) (_1!1221 lt!55249)))))

(assert (=> d!29937 (= (contains!834 lt!55339 (_1!1221 lt!55249)) lt!55606)))

(declare-fun b!108225 () Bool)

(declare-fun lt!55609 () Unit!3339)

(assert (=> b!108225 (= e!70454 lt!55609)))

(assert (=> b!108225 (= lt!55609 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55339) (_1!1221 lt!55249)))))

(assert (=> b!108225 (isDefined!110 (getValueByKey!156 (toList!811 lt!55339) (_1!1221 lt!55249)))))

(declare-fun b!108226 () Bool)

(declare-fun Unit!3356 () Unit!3339)

(assert (=> b!108226 (= e!70454 Unit!3356)))

(declare-fun b!108227 () Bool)

(assert (=> b!108227 (= e!70455 (isDefined!110 (getValueByKey!156 (toList!811 lt!55339) (_1!1221 lt!55249))))))

(assert (= (and d!29937 c!19016) b!108225))

(assert (= (and d!29937 (not c!19016)) b!108226))

(assert (= (and d!29937 (not res!53661)) b!108227))

(declare-fun m!121751 () Bool)

(assert (=> d!29937 m!121751))

(declare-fun m!121753 () Bool)

(assert (=> b!108225 m!121753))

(assert (=> b!108225 m!121371))

(assert (=> b!108225 m!121371))

(declare-fun m!121755 () Bool)

(assert (=> b!108225 m!121755))

(assert (=> b!108227 m!121371))

(assert (=> b!108227 m!121371))

(assert (=> b!108227 m!121755))

(assert (=> d!29859 d!29937))

(declare-fun d!29939 () Bool)

(declare-fun c!19017 () Bool)

(assert (=> d!29939 (= c!19017 (and ((_ is Cons!1644) lt!55337) (= (_1!1221 (h!2242 lt!55337)) (_1!1221 lt!55249))))))

(declare-fun e!70456 () Option!162)

(assert (=> d!29939 (= (getValueByKey!156 lt!55337 (_1!1221 lt!55249)) e!70456)))

(declare-fun b!108230 () Bool)

(declare-fun e!70457 () Option!162)

(assert (=> b!108230 (= e!70457 (getValueByKey!156 (t!5776 lt!55337) (_1!1221 lt!55249)))))

(declare-fun b!108231 () Bool)

(assert (=> b!108231 (= e!70457 None!160)))

(declare-fun b!108229 () Bool)

(assert (=> b!108229 (= e!70456 e!70457)))

(declare-fun c!19018 () Bool)

(assert (=> b!108229 (= c!19018 (and ((_ is Cons!1644) lt!55337) (not (= (_1!1221 (h!2242 lt!55337)) (_1!1221 lt!55249)))))))

(declare-fun b!108228 () Bool)

(assert (=> b!108228 (= e!70456 (Some!161 (_2!1221 (h!2242 lt!55337))))))

(assert (= (and d!29939 c!19017) b!108228))

(assert (= (and d!29939 (not c!19017)) b!108229))

(assert (= (and b!108229 c!19018) b!108230))

(assert (= (and b!108229 (not c!19018)) b!108231))

(declare-fun m!121757 () Bool)

(assert (=> b!108230 m!121757))

(assert (=> d!29859 d!29939))

(declare-fun d!29941 () Bool)

(assert (=> d!29941 (= (getValueByKey!156 lt!55337 (_1!1221 lt!55249)) (Some!161 (_2!1221 lt!55249)))))

(declare-fun lt!55610 () Unit!3339)

(assert (=> d!29941 (= lt!55610 (choose!680 lt!55337 (_1!1221 lt!55249) (_2!1221 lt!55249)))))

(declare-fun e!70458 () Bool)

(assert (=> d!29941 e!70458))

(declare-fun res!53662 () Bool)

(assert (=> d!29941 (=> (not res!53662) (not e!70458))))

(assert (=> d!29941 (= res!53662 (isStrictlySorted!305 lt!55337))))

(assert (=> d!29941 (= (lemmaContainsTupThenGetReturnValue!74 lt!55337 (_1!1221 lt!55249) (_2!1221 lt!55249)) lt!55610)))

(declare-fun b!108232 () Bool)

(declare-fun res!53663 () Bool)

(assert (=> b!108232 (=> (not res!53663) (not e!70458))))

(assert (=> b!108232 (= res!53663 (containsKey!160 lt!55337 (_1!1221 lt!55249)))))

(declare-fun b!108233 () Bool)

(assert (=> b!108233 (= e!70458 (contains!835 lt!55337 (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))))))

(assert (= (and d!29941 res!53662) b!108232))

(assert (= (and b!108232 res!53663) b!108233))

(assert (=> d!29941 m!121365))

(declare-fun m!121759 () Bool)

(assert (=> d!29941 m!121759))

(declare-fun m!121761 () Bool)

(assert (=> d!29941 m!121761))

(declare-fun m!121763 () Bool)

(assert (=> b!108232 m!121763))

(declare-fun m!121765 () Bool)

(assert (=> b!108233 m!121765))

(assert (=> d!29859 d!29941))

(declare-fun b!108234 () Bool)

(declare-fun c!19019 () Bool)

(assert (=> b!108234 (= c!19019 (and ((_ is Cons!1644) (toList!811 lt!55250)) (bvsgt (_1!1221 (h!2242 (toList!811 lt!55250))) (_1!1221 lt!55249))))))

(declare-fun e!70459 () List!1648)

(declare-fun e!70460 () List!1648)

(assert (=> b!108234 (= e!70459 e!70460)))

(declare-fun b!108235 () Bool)

(declare-fun e!70461 () List!1648)

(declare-fun call!11492 () List!1648)

(assert (=> b!108235 (= e!70461 call!11492)))

(declare-fun bm!11488 () Bool)

(declare-fun c!19020 () Bool)

(declare-fun e!70463 () List!1648)

(assert (=> bm!11488 (= call!11492 ($colon$colon!81 e!70463 (ite c!19020 (h!2242 (toList!811 lt!55250)) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249)))))))

(declare-fun c!19021 () Bool)

(assert (=> bm!11488 (= c!19021 c!19020)))

(declare-fun b!108236 () Bool)

(declare-fun call!11491 () List!1648)

(assert (=> b!108236 (= e!70460 call!11491)))

(declare-fun b!108237 () Bool)

(declare-fun call!11493 () List!1648)

(assert (=> b!108237 (= e!70459 call!11493)))

(declare-fun d!29943 () Bool)

(declare-fun e!70462 () Bool)

(assert (=> d!29943 e!70462))

(declare-fun res!53664 () Bool)

(assert (=> d!29943 (=> (not res!53664) (not e!70462))))

(declare-fun lt!55611 () List!1648)

(assert (=> d!29943 (= res!53664 (isStrictlySorted!305 lt!55611))))

(assert (=> d!29943 (= lt!55611 e!70461)))

(assert (=> d!29943 (= c!19020 (and ((_ is Cons!1644) (toList!811 lt!55250)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55250))) (_1!1221 lt!55249))))))

(assert (=> d!29943 (isStrictlySorted!305 (toList!811 lt!55250))))

(assert (=> d!29943 (= (insertStrictlySorted!76 (toList!811 lt!55250) (_1!1221 lt!55249) (_2!1221 lt!55249)) lt!55611)))

(declare-fun b!108238 () Bool)

(assert (=> b!108238 (= e!70461 e!70459)))

(declare-fun c!19022 () Bool)

(assert (=> b!108238 (= c!19022 (and ((_ is Cons!1644) (toList!811 lt!55250)) (= (_1!1221 (h!2242 (toList!811 lt!55250))) (_1!1221 lt!55249))))))

(declare-fun b!108239 () Bool)

(declare-fun res!53665 () Bool)

(assert (=> b!108239 (=> (not res!53665) (not e!70462))))

(assert (=> b!108239 (= res!53665 (containsKey!160 lt!55611 (_1!1221 lt!55249)))))

(declare-fun bm!11489 () Bool)

(assert (=> bm!11489 (= call!11493 call!11492)))

(declare-fun bm!11490 () Bool)

(assert (=> bm!11490 (= call!11491 call!11493)))

(declare-fun b!108240 () Bool)

(assert (=> b!108240 (= e!70463 (insertStrictlySorted!76 (t!5776 (toList!811 lt!55250)) (_1!1221 lt!55249) (_2!1221 lt!55249)))))

(declare-fun b!108241 () Bool)

(assert (=> b!108241 (= e!70460 call!11491)))

(declare-fun b!108242 () Bool)

(assert (=> b!108242 (= e!70462 (contains!835 lt!55611 (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))))))

(declare-fun b!108243 () Bool)

(assert (=> b!108243 (= e!70463 (ite c!19022 (t!5776 (toList!811 lt!55250)) (ite c!19019 (Cons!1644 (h!2242 (toList!811 lt!55250)) (t!5776 (toList!811 lt!55250))) Nil!1645)))))

(assert (= (and d!29943 c!19020) b!108235))

(assert (= (and d!29943 (not c!19020)) b!108238))

(assert (= (and b!108238 c!19022) b!108237))

(assert (= (and b!108238 (not c!19022)) b!108234))

(assert (= (and b!108234 c!19019) b!108241))

(assert (= (and b!108234 (not c!19019)) b!108236))

(assert (= (or b!108241 b!108236) bm!11490))

(assert (= (or b!108237 bm!11490) bm!11489))

(assert (= (or b!108235 bm!11489) bm!11488))

(assert (= (and bm!11488 c!19021) b!108240))

(assert (= (and bm!11488 (not c!19021)) b!108243))

(assert (= (and d!29943 res!53664) b!108239))

(assert (= (and b!108239 res!53665) b!108242))

(declare-fun m!121767 () Bool)

(assert (=> b!108242 m!121767))

(declare-fun m!121769 () Bool)

(assert (=> b!108239 m!121769))

(declare-fun m!121771 () Bool)

(assert (=> bm!11488 m!121771))

(declare-fun m!121773 () Bool)

(assert (=> d!29943 m!121773))

(declare-fun m!121775 () Bool)

(assert (=> d!29943 m!121775))

(declare-fun m!121777 () Bool)

(assert (=> b!108240 m!121777))

(assert (=> d!29859 d!29943))

(declare-fun d!29945 () Bool)

(declare-fun get!1352 (Option!162) V!3235)

(assert (=> d!29945 (= (apply!99 lt!55479 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1352 (getValueByKey!156 (toList!811 lt!55479) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4439 () Bool)

(assert (= bs!4439 d!29945))

(assert (=> bs!4439 m!121305))

(assert (=> bs!4439 m!121605))

(assert (=> bs!4439 m!121605))

(declare-fun m!121779 () Bool)

(assert (=> bs!4439 m!121779))

(assert (=> b!108015 d!29945))

(declare-fun d!29947 () Bool)

(declare-fun c!19023 () Bool)

(assert (=> d!29947 (= c!19023 ((_ is ValueCellFull!1002) (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!70464 () V!3235)

(assert (=> d!29947 (= (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70464)))

(declare-fun b!108244 () Bool)

(assert (=> b!108244 (= e!70464 (get!1350 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108245 () Bool)

(assert (=> b!108245 (= e!70464 (get!1351 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29947 c!19023) b!108244))

(assert (= (and d!29947 (not c!19023)) b!108245))

(assert (=> b!108244 m!121309))

(assert (=> b!108244 m!121207))

(declare-fun m!121781 () Bool)

(assert (=> b!108244 m!121781))

(assert (=> b!108245 m!121309))

(assert (=> b!108245 m!121207))

(declare-fun m!121783 () Bool)

(assert (=> b!108245 m!121783))

(assert (=> b!108015 d!29947))

(declare-fun d!29949 () Bool)

(assert (=> d!29949 (= (+!148 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55433 lt!55248 (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55614 () Unit!3339)

(declare-fun choose!681 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 V!3235 Int) Unit!3339)

(assert (=> d!29949 (= lt!55614 (choose!681 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) lt!55433 (zeroValue!2479 newMap!16) lt!55248 (minValue!2479 newMap!16) (defaultEntry!2606 newMap!16)))))

(assert (=> d!29949 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!29949 (= (lemmaChangeZeroKeyThenAddPairToListMap!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) lt!55433 (zeroValue!2479 newMap!16) lt!55248 (minValue!2479 newMap!16) (defaultEntry!2606 newMap!16)) lt!55614)))

(declare-fun bs!4440 () Bool)

(assert (= bs!4440 d!29949))

(assert (=> bs!4440 m!121407))

(declare-fun m!121785 () Bool)

(assert (=> bs!4440 m!121785))

(declare-fun m!121787 () Bool)

(assert (=> bs!4440 m!121787))

(declare-fun m!121789 () Bool)

(assert (=> bs!4440 m!121789))

(assert (=> bs!4440 m!121521))

(assert (=> bs!4440 m!121407))

(assert (=> b!107929 d!29949))

(declare-fun c!19028 () Bool)

(declare-fun call!11499 () Bool)

(declare-fun lt!55620 () SeekEntryResult!270)

(declare-fun bm!11495 () Bool)

(assert (=> bm!11495 (= call!11499 (inRange!0 (ite c!19028 (index!3229 lt!55620) (index!3232 lt!55620)) (mask!6764 newMap!16)))))

(declare-fun b!108262 () Bool)

(declare-fun e!70473 () Bool)

(declare-fun call!11498 () Bool)

(assert (=> b!108262 (= e!70473 (not call!11498))))

(declare-fun b!108263 () Bool)

(declare-fun e!70474 () Bool)

(assert (=> b!108263 (= e!70474 ((_ is Undefined!270) lt!55620))))

(declare-fun d!29951 () Bool)

(declare-fun e!70475 () Bool)

(assert (=> d!29951 e!70475))

(assert (=> d!29951 (= c!19028 ((_ is MissingZero!270) lt!55620))))

(assert (=> d!29951 (= lt!55620 (seekEntryOrOpen!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun lt!55619 () Unit!3339)

(declare-fun choose!682 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 64) Int) Unit!3339)

(assert (=> d!29951 (= lt!55619 (choose!682 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)))))

(assert (=> d!29951 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!29951 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)) lt!55619)))

(declare-fun b!108264 () Bool)

(declare-fun res!53675 () Bool)

(assert (=> b!108264 (=> (not res!53675) (not e!70473))))

(assert (=> b!108264 (= res!53675 (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3232 lt!55620)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108264 (and (bvsge (index!3232 lt!55620) #b00000000000000000000000000000000) (bvslt (index!3232 lt!55620) (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108265 () Bool)

(declare-fun e!70476 () Bool)

(assert (=> b!108265 (= e!70476 (not call!11498))))

(declare-fun b!108266 () Bool)

(assert (=> b!108266 (= e!70475 e!70476)))

(declare-fun res!53676 () Bool)

(assert (=> b!108266 (= res!53676 call!11499)))

(assert (=> b!108266 (=> (not res!53676) (not e!70476))))

(declare-fun b!108267 () Bool)

(declare-fun res!53674 () Bool)

(assert (=> b!108267 (=> (not res!53674) (not e!70473))))

(assert (=> b!108267 (= res!53674 call!11499)))

(assert (=> b!108267 (= e!70474 e!70473)))

(declare-fun b!108268 () Bool)

(assert (=> b!108268 (= e!70475 e!70474)))

(declare-fun c!19029 () Bool)

(assert (=> b!108268 (= c!19029 ((_ is MissingVacant!270) lt!55620))))

(declare-fun b!108269 () Bool)

(assert (=> b!108269 (and (bvsge (index!3229 lt!55620) #b00000000000000000000000000000000) (bvslt (index!3229 lt!55620) (size!2330 (_keys!4316 newMap!16))))))

(declare-fun res!53677 () Bool)

(assert (=> b!108269 (= res!53677 (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3229 lt!55620)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108269 (=> (not res!53677) (not e!70476))))

(declare-fun bm!11496 () Bool)

(assert (=> bm!11496 (= call!11498 (arrayContainsKey!0 (_keys!4316 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!29951 c!19028) b!108266))

(assert (= (and d!29951 (not c!19028)) b!108268))

(assert (= (and b!108266 res!53676) b!108269))

(assert (= (and b!108269 res!53677) b!108265))

(assert (= (and b!108268 c!19029) b!108267))

(assert (= (and b!108268 (not c!19029)) b!108263))

(assert (= (and b!108267 res!53674) b!108264))

(assert (= (and b!108264 res!53675) b!108262))

(assert (= (or b!108266 b!108267) bm!11495))

(assert (= (or b!108265 b!108262) bm!11496))

(assert (=> d!29951 m!121177))

(assert (=> d!29951 m!121393))

(assert (=> d!29951 m!121177))

(declare-fun m!121791 () Bool)

(assert (=> d!29951 m!121791))

(assert (=> d!29951 m!121521))

(declare-fun m!121793 () Bool)

(assert (=> b!108264 m!121793))

(declare-fun m!121795 () Bool)

(assert (=> bm!11495 m!121795))

(assert (=> bm!11496 m!121177))

(assert (=> bm!11496 m!121401))

(declare-fun m!121797 () Bool)

(assert (=> b!108269 m!121797))

(assert (=> bm!11423 d!29951))

(declare-fun d!29953 () Bool)

(declare-fun res!53678 () Bool)

(declare-fun e!70477 () Bool)

(assert (=> d!29953 (=> (not res!53678) (not e!70477))))

(assert (=> d!29953 (= res!53678 (simpleValid!74 (_2!1222 lt!55429)))))

(assert (=> d!29953 (= (valid!416 (_2!1222 lt!55429)) e!70477)))

(declare-fun b!108270 () Bool)

(declare-fun res!53679 () Bool)

(assert (=> b!108270 (=> (not res!53679) (not e!70477))))

(assert (=> b!108270 (= res!53679 (= (arrayCountValidKeys!0 (_keys!4316 (_2!1222 lt!55429)) #b00000000000000000000000000000000 (size!2330 (_keys!4316 (_2!1222 lt!55429)))) (_size!505 (_2!1222 lt!55429))))))

(declare-fun b!108271 () Bool)

(declare-fun res!53680 () Bool)

(assert (=> b!108271 (=> (not res!53680) (not e!70477))))

(assert (=> b!108271 (= res!53680 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4316 (_2!1222 lt!55429)) (mask!6764 (_2!1222 lt!55429))))))

(declare-fun b!108272 () Bool)

(assert (=> b!108272 (= e!70477 (arrayNoDuplicates!0 (_keys!4316 (_2!1222 lt!55429)) #b00000000000000000000000000000000 Nil!1644))))

(assert (= (and d!29953 res!53678) b!108270))

(assert (= (and b!108270 res!53679) b!108271))

(assert (= (and b!108271 res!53680) b!108272))

(declare-fun m!121799 () Bool)

(assert (=> d!29953 m!121799))

(declare-fun m!121801 () Bool)

(assert (=> b!108270 m!121801))

(declare-fun m!121803 () Bool)

(assert (=> b!108271 m!121803))

(declare-fun m!121805 () Bool)

(assert (=> b!108272 m!121805))

(assert (=> d!29867 d!29953))

(assert (=> d!29867 d!29863))

(declare-fun d!29955 () Bool)

(declare-fun e!70479 () Bool)

(assert (=> d!29955 e!70479))

(declare-fun res!53681 () Bool)

(assert (=> d!29955 (=> res!53681 e!70479)))

(declare-fun lt!55621 () Bool)

(assert (=> d!29955 (= res!53681 (not lt!55621))))

(declare-fun lt!55622 () Bool)

(assert (=> d!29955 (= lt!55621 lt!55622)))

(declare-fun lt!55623 () Unit!3339)

(declare-fun e!70478 () Unit!3339)

(assert (=> d!29955 (= lt!55623 e!70478)))

(declare-fun c!19030 () Bool)

(assert (=> d!29955 (= c!19030 lt!55622)))

(assert (=> d!29955 (= lt!55622 (containsKey!160 (toList!811 lt!55303) (_1!1221 lt!55252)))))

(assert (=> d!29955 (= (contains!834 lt!55303 (_1!1221 lt!55252)) lt!55621)))

(declare-fun b!108273 () Bool)

(declare-fun lt!55624 () Unit!3339)

(assert (=> b!108273 (= e!70478 lt!55624)))

(assert (=> b!108273 (= lt!55624 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55303) (_1!1221 lt!55252)))))

(assert (=> b!108273 (isDefined!110 (getValueByKey!156 (toList!811 lt!55303) (_1!1221 lt!55252)))))

(declare-fun b!108274 () Bool)

(declare-fun Unit!3357 () Unit!3339)

(assert (=> b!108274 (= e!70478 Unit!3357)))

(declare-fun b!108275 () Bool)

(assert (=> b!108275 (= e!70479 (isDefined!110 (getValueByKey!156 (toList!811 lt!55303) (_1!1221 lt!55252))))))

(assert (= (and d!29955 c!19030) b!108273))

(assert (= (and d!29955 (not c!19030)) b!108274))

(assert (= (and d!29955 (not res!53681)) b!108275))

(declare-fun m!121807 () Bool)

(assert (=> d!29955 m!121807))

(declare-fun m!121809 () Bool)

(assert (=> b!108273 m!121809))

(assert (=> b!108273 m!121297))

(assert (=> b!108273 m!121297))

(declare-fun m!121811 () Bool)

(assert (=> b!108273 m!121811))

(assert (=> b!108275 m!121297))

(assert (=> b!108275 m!121297))

(assert (=> b!108275 m!121811))

(assert (=> d!29849 d!29955))

(declare-fun d!29957 () Bool)

(declare-fun c!19031 () Bool)

(assert (=> d!29957 (= c!19031 (and ((_ is Cons!1644) lt!55301) (= (_1!1221 (h!2242 lt!55301)) (_1!1221 lt!55252))))))

(declare-fun e!70480 () Option!162)

(assert (=> d!29957 (= (getValueByKey!156 lt!55301 (_1!1221 lt!55252)) e!70480)))

(declare-fun b!108278 () Bool)

(declare-fun e!70481 () Option!162)

(assert (=> b!108278 (= e!70481 (getValueByKey!156 (t!5776 lt!55301) (_1!1221 lt!55252)))))

(declare-fun b!108279 () Bool)

(assert (=> b!108279 (= e!70481 None!160)))

(declare-fun b!108277 () Bool)

(assert (=> b!108277 (= e!70480 e!70481)))

(declare-fun c!19032 () Bool)

(assert (=> b!108277 (= c!19032 (and ((_ is Cons!1644) lt!55301) (not (= (_1!1221 (h!2242 lt!55301)) (_1!1221 lt!55252)))))))

(declare-fun b!108276 () Bool)

(assert (=> b!108276 (= e!70480 (Some!161 (_2!1221 (h!2242 lt!55301))))))

(assert (= (and d!29957 c!19031) b!108276))

(assert (= (and d!29957 (not c!19031)) b!108277))

(assert (= (and b!108277 c!19032) b!108278))

(assert (= (and b!108277 (not c!19032)) b!108279))

(declare-fun m!121813 () Bool)

(assert (=> b!108278 m!121813))

(assert (=> d!29849 d!29957))

(declare-fun d!29959 () Bool)

(assert (=> d!29959 (= (getValueByKey!156 lt!55301 (_1!1221 lt!55252)) (Some!161 (_2!1221 lt!55252)))))

(declare-fun lt!55625 () Unit!3339)

(assert (=> d!29959 (= lt!55625 (choose!680 lt!55301 (_1!1221 lt!55252) (_2!1221 lt!55252)))))

(declare-fun e!70482 () Bool)

(assert (=> d!29959 e!70482))

(declare-fun res!53682 () Bool)

(assert (=> d!29959 (=> (not res!53682) (not e!70482))))

(assert (=> d!29959 (= res!53682 (isStrictlySorted!305 lt!55301))))

(assert (=> d!29959 (= (lemmaContainsTupThenGetReturnValue!74 lt!55301 (_1!1221 lt!55252) (_2!1221 lt!55252)) lt!55625)))

(declare-fun b!108280 () Bool)

(declare-fun res!53683 () Bool)

(assert (=> b!108280 (=> (not res!53683) (not e!70482))))

(assert (=> b!108280 (= res!53683 (containsKey!160 lt!55301 (_1!1221 lt!55252)))))

(declare-fun b!108281 () Bool)

(assert (=> b!108281 (= e!70482 (contains!835 lt!55301 (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))))))

(assert (= (and d!29959 res!53682) b!108280))

(assert (= (and b!108280 res!53683) b!108281))

(assert (=> d!29959 m!121291))

(declare-fun m!121815 () Bool)

(assert (=> d!29959 m!121815))

(declare-fun m!121817 () Bool)

(assert (=> d!29959 m!121817))

(declare-fun m!121819 () Bool)

(assert (=> b!108280 m!121819))

(declare-fun m!121821 () Bool)

(assert (=> b!108281 m!121821))

(assert (=> d!29849 d!29959))

(declare-fun b!108282 () Bool)

(declare-fun c!19033 () Bool)

(assert (=> b!108282 (= c!19033 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55250 lt!55249))) (bvsgt (_1!1221 (h!2242 (toList!811 (+!148 lt!55250 lt!55249)))) (_1!1221 lt!55252))))))

(declare-fun e!70483 () List!1648)

(declare-fun e!70484 () List!1648)

(assert (=> b!108282 (= e!70483 e!70484)))

(declare-fun b!108283 () Bool)

(declare-fun e!70485 () List!1648)

(declare-fun call!11501 () List!1648)

(assert (=> b!108283 (= e!70485 call!11501)))

(declare-fun bm!11497 () Bool)

(declare-fun e!70487 () List!1648)

(declare-fun c!19034 () Bool)

(assert (=> bm!11497 (= call!11501 ($colon$colon!81 e!70487 (ite c!19034 (h!2242 (toList!811 (+!148 lt!55250 lt!55249))) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252)))))))

(declare-fun c!19035 () Bool)

(assert (=> bm!11497 (= c!19035 c!19034)))

(declare-fun b!108284 () Bool)

(declare-fun call!11500 () List!1648)

(assert (=> b!108284 (= e!70484 call!11500)))

(declare-fun b!108285 () Bool)

(declare-fun call!11502 () List!1648)

(assert (=> b!108285 (= e!70483 call!11502)))

(declare-fun d!29961 () Bool)

(declare-fun e!70486 () Bool)

(assert (=> d!29961 e!70486))

(declare-fun res!53684 () Bool)

(assert (=> d!29961 (=> (not res!53684) (not e!70486))))

(declare-fun lt!55626 () List!1648)

(assert (=> d!29961 (= res!53684 (isStrictlySorted!305 lt!55626))))

(assert (=> d!29961 (= lt!55626 e!70485)))

(assert (=> d!29961 (= c!19034 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55250 lt!55249))) (bvslt (_1!1221 (h!2242 (toList!811 (+!148 lt!55250 lt!55249)))) (_1!1221 lt!55252))))))

(assert (=> d!29961 (isStrictlySorted!305 (toList!811 (+!148 lt!55250 lt!55249)))))

(assert (=> d!29961 (= (insertStrictlySorted!76 (toList!811 (+!148 lt!55250 lt!55249)) (_1!1221 lt!55252) (_2!1221 lt!55252)) lt!55626)))

(declare-fun b!108286 () Bool)

(assert (=> b!108286 (= e!70485 e!70483)))

(declare-fun c!19036 () Bool)

(assert (=> b!108286 (= c!19036 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55250 lt!55249))) (= (_1!1221 (h!2242 (toList!811 (+!148 lt!55250 lt!55249)))) (_1!1221 lt!55252))))))

(declare-fun b!108287 () Bool)

(declare-fun res!53685 () Bool)

(assert (=> b!108287 (=> (not res!53685) (not e!70486))))

(assert (=> b!108287 (= res!53685 (containsKey!160 lt!55626 (_1!1221 lt!55252)))))

(declare-fun bm!11498 () Bool)

(assert (=> bm!11498 (= call!11502 call!11501)))

(declare-fun bm!11499 () Bool)

(assert (=> bm!11499 (= call!11500 call!11502)))

(declare-fun b!108288 () Bool)

(assert (=> b!108288 (= e!70487 (insertStrictlySorted!76 (t!5776 (toList!811 (+!148 lt!55250 lt!55249))) (_1!1221 lt!55252) (_2!1221 lt!55252)))))

(declare-fun b!108289 () Bool)

(assert (=> b!108289 (= e!70484 call!11500)))

(declare-fun b!108290 () Bool)

(assert (=> b!108290 (= e!70486 (contains!835 lt!55626 (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))))))

(declare-fun b!108291 () Bool)

(assert (=> b!108291 (= e!70487 (ite c!19036 (t!5776 (toList!811 (+!148 lt!55250 lt!55249))) (ite c!19033 (Cons!1644 (h!2242 (toList!811 (+!148 lt!55250 lt!55249))) (t!5776 (toList!811 (+!148 lt!55250 lt!55249)))) Nil!1645)))))

(assert (= (and d!29961 c!19034) b!108283))

(assert (= (and d!29961 (not c!19034)) b!108286))

(assert (= (and b!108286 c!19036) b!108285))

(assert (= (and b!108286 (not c!19036)) b!108282))

(assert (= (and b!108282 c!19033) b!108289))

(assert (= (and b!108282 (not c!19033)) b!108284))

(assert (= (or b!108289 b!108284) bm!11499))

(assert (= (or b!108285 bm!11499) bm!11498))

(assert (= (or b!108283 bm!11498) bm!11497))

(assert (= (and bm!11497 c!19035) b!108288))

(assert (= (and bm!11497 (not c!19035)) b!108291))

(assert (= (and d!29961 res!53684) b!108287))

(assert (= (and b!108287 res!53685) b!108290))

(declare-fun m!121823 () Bool)

(assert (=> b!108290 m!121823))

(declare-fun m!121825 () Bool)

(assert (=> b!108287 m!121825))

(declare-fun m!121827 () Bool)

(assert (=> bm!11497 m!121827))

(declare-fun m!121829 () Bool)

(assert (=> d!29961 m!121829))

(declare-fun m!121831 () Bool)

(assert (=> d!29961 m!121831))

(declare-fun m!121833 () Bool)

(assert (=> b!108288 m!121833))

(assert (=> d!29849 d!29961))

(declare-fun d!29963 () Bool)

(declare-fun c!19037 () Bool)

(assert (=> d!29963 (= c!19037 (and ((_ is Cons!1644) (toList!811 lt!55331)) (= (_1!1221 (h!2242 (toList!811 lt!55331))) (_1!1221 lt!55252))))))

(declare-fun e!70488 () Option!162)

(assert (=> d!29963 (= (getValueByKey!156 (toList!811 lt!55331) (_1!1221 lt!55252)) e!70488)))

(declare-fun b!108294 () Bool)

(declare-fun e!70489 () Option!162)

(assert (=> b!108294 (= e!70489 (getValueByKey!156 (t!5776 (toList!811 lt!55331)) (_1!1221 lt!55252)))))

(declare-fun b!108295 () Bool)

(assert (=> b!108295 (= e!70489 None!160)))

(declare-fun b!108293 () Bool)

(assert (=> b!108293 (= e!70488 e!70489)))

(declare-fun c!19038 () Bool)

(assert (=> b!108293 (= c!19038 (and ((_ is Cons!1644) (toList!811 lt!55331)) (not (= (_1!1221 (h!2242 (toList!811 lt!55331))) (_1!1221 lt!55252)))))))

(declare-fun b!108292 () Bool)

(assert (=> b!108292 (= e!70488 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55331)))))))

(assert (= (and d!29963 c!19037) b!108292))

(assert (= (and d!29963 (not c!19037)) b!108293))

(assert (= (and b!108293 c!19038) b!108294))

(assert (= (and b!108293 (not c!19038)) b!108295))

(declare-fun m!121835 () Bool)

(assert (=> b!108294 m!121835))

(assert (=> b!107815 d!29963))

(declare-fun d!29965 () Bool)

(declare-fun c!19039 () Bool)

(assert (=> d!29965 (= c!19039 (and ((_ is Cons!1644) (toList!811 lt!55335)) (= (_1!1221 (h!2242 (toList!811 lt!55335))) (_1!1221 lt!55249))))))

(declare-fun e!70490 () Option!162)

(assert (=> d!29965 (= (getValueByKey!156 (toList!811 lt!55335) (_1!1221 lt!55249)) e!70490)))

(declare-fun b!108298 () Bool)

(declare-fun e!70491 () Option!162)

(assert (=> b!108298 (= e!70491 (getValueByKey!156 (t!5776 (toList!811 lt!55335)) (_1!1221 lt!55249)))))

(declare-fun b!108299 () Bool)

(assert (=> b!108299 (= e!70491 None!160)))

(declare-fun b!108297 () Bool)

(assert (=> b!108297 (= e!70490 e!70491)))

(declare-fun c!19040 () Bool)

(assert (=> b!108297 (= c!19040 (and ((_ is Cons!1644) (toList!811 lt!55335)) (not (= (_1!1221 (h!2242 (toList!811 lt!55335))) (_1!1221 lt!55249)))))))

(declare-fun b!108296 () Bool)

(assert (=> b!108296 (= e!70490 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55335)))))))

(assert (= (and d!29965 c!19039) b!108296))

(assert (= (and d!29965 (not c!19039)) b!108297))

(assert (= (and b!108297 c!19040) b!108298))

(assert (= (and b!108297 (not c!19040)) b!108299))

(declare-fun m!121837 () Bool)

(assert (=> b!108298 m!121837))

(assert (=> b!107817 d!29965))

(declare-fun d!29967 () Bool)

(assert (=> d!29967 (= (apply!99 lt!55324 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1352 (getValueByKey!156 (toList!811 lt!55324) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4441 () Bool)

(assert (= bs!4441 d!29967))

(assert (=> bs!4441 m!121305))

(declare-fun m!121839 () Bool)

(assert (=> bs!4441 m!121839))

(assert (=> bs!4441 m!121839))

(declare-fun m!121841 () Bool)

(assert (=> bs!4441 m!121841))

(assert (=> b!107804 d!29967))

(assert (=> b!107804 d!29947))

(declare-fun d!29969 () Bool)

(assert (=> d!29969 (= (get!1351 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) from!355) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108033 d!29969))

(declare-fun d!29971 () Bool)

(declare-fun c!19041 () Bool)

(assert (=> d!29971 (= c!19041 (and ((_ is Cons!1644) (toList!811 lt!55339)) (= (_1!1221 (h!2242 (toList!811 lt!55339))) (_1!1221 lt!55249))))))

(declare-fun e!70492 () Option!162)

(assert (=> d!29971 (= (getValueByKey!156 (toList!811 lt!55339) (_1!1221 lt!55249)) e!70492)))

(declare-fun b!108302 () Bool)

(declare-fun e!70493 () Option!162)

(assert (=> b!108302 (= e!70493 (getValueByKey!156 (t!5776 (toList!811 lt!55339)) (_1!1221 lt!55249)))))

(declare-fun b!108303 () Bool)

(assert (=> b!108303 (= e!70493 None!160)))

(declare-fun b!108301 () Bool)

(assert (=> b!108301 (= e!70492 e!70493)))

(declare-fun c!19042 () Bool)

(assert (=> b!108301 (= c!19042 (and ((_ is Cons!1644) (toList!811 lt!55339)) (not (= (_1!1221 (h!2242 (toList!811 lt!55339))) (_1!1221 lt!55249)))))))

(declare-fun b!108300 () Bool)

(assert (=> b!108300 (= e!70492 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55339)))))))

(assert (= (and d!29971 c!19041) b!108300))

(assert (= (and d!29971 (not c!19041)) b!108301))

(assert (= (and b!108301 c!19042) b!108302))

(assert (= (and b!108301 (not c!19042)) b!108303))

(declare-fun m!121843 () Bool)

(assert (=> b!108302 m!121843))

(assert (=> b!107819 d!29971))

(declare-fun d!29973 () Bool)

(declare-fun e!70495 () Bool)

(assert (=> d!29973 e!70495))

(declare-fun res!53686 () Bool)

(assert (=> d!29973 (=> res!53686 e!70495)))

(declare-fun lt!55627 () Bool)

(assert (=> d!29973 (= res!53686 (not lt!55627))))

(declare-fun lt!55628 () Bool)

(assert (=> d!29973 (= lt!55627 lt!55628)))

(declare-fun lt!55629 () Unit!3339)

(declare-fun e!70494 () Unit!3339)

(assert (=> d!29973 (= lt!55629 e!70494)))

(declare-fun c!19043 () Bool)

(assert (=> d!29973 (= c!19043 lt!55628)))

(assert (=> d!29973 (= lt!55628 (containsKey!160 (toList!811 lt!55324) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!29973 (= (contains!834 lt!55324 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!55627)))

(declare-fun b!108304 () Bool)

(declare-fun lt!55630 () Unit!3339)

(assert (=> b!108304 (= e!70494 lt!55630)))

(assert (=> b!108304 (= lt!55630 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55324) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!108304 (isDefined!110 (getValueByKey!156 (toList!811 lt!55324) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!108305 () Bool)

(declare-fun Unit!3358 () Unit!3339)

(assert (=> b!108305 (= e!70494 Unit!3358)))

(declare-fun b!108306 () Bool)

(assert (=> b!108306 (= e!70495 (isDefined!110 (getValueByKey!156 (toList!811 lt!55324) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!29973 c!19043) b!108304))

(assert (= (and d!29973 (not c!19043)) b!108305))

(assert (= (and d!29973 (not res!53686)) b!108306))

(assert (=> d!29973 m!121305))

(declare-fun m!121845 () Bool)

(assert (=> d!29973 m!121845))

(assert (=> b!108304 m!121305))

(declare-fun m!121847 () Bool)

(assert (=> b!108304 m!121847))

(assert (=> b!108304 m!121305))

(assert (=> b!108304 m!121839))

(assert (=> b!108304 m!121839))

(declare-fun m!121849 () Bool)

(assert (=> b!108304 m!121849))

(assert (=> b!108306 m!121305))

(assert (=> b!108306 m!121839))

(assert (=> b!108306 m!121839))

(assert (=> b!108306 m!121849))

(assert (=> b!107806 d!29973))

(declare-fun d!29975 () Bool)

(declare-fun e!70497 () Bool)

(assert (=> d!29975 e!70497))

(declare-fun res!53687 () Bool)

(assert (=> d!29975 (=> res!53687 e!70497)))

(declare-fun lt!55631 () Bool)

(assert (=> d!29975 (= res!53687 (not lt!55631))))

(declare-fun lt!55632 () Bool)

(assert (=> d!29975 (= lt!55631 lt!55632)))

(declare-fun lt!55633 () Unit!3339)

(declare-fun e!70496 () Unit!3339)

(assert (=> d!29975 (= lt!55633 e!70496)))

(declare-fun c!19044 () Bool)

(assert (=> d!29975 (= c!19044 lt!55632)))

(assert (=> d!29975 (= lt!55632 (containsKey!160 (toList!811 lt!55479) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!29975 (= (contains!834 lt!55479 #b1000000000000000000000000000000000000000000000000000000000000000) lt!55631)))

(declare-fun b!108307 () Bool)

(declare-fun lt!55634 () Unit!3339)

(assert (=> b!108307 (= e!70496 lt!55634)))

(assert (=> b!108307 (= lt!55634 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55479) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108307 (isDefined!110 (getValueByKey!156 (toList!811 lt!55479) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108308 () Bool)

(declare-fun Unit!3359 () Unit!3339)

(assert (=> b!108308 (= e!70496 Unit!3359)))

(declare-fun b!108309 () Bool)

(assert (=> b!108309 (= e!70497 (isDefined!110 (getValueByKey!156 (toList!811 lt!55479) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!29975 c!19044) b!108307))

(assert (= (and d!29975 (not c!19044)) b!108308))

(assert (= (and d!29975 (not res!53687)) b!108309))

(declare-fun m!121851 () Bool)

(assert (=> d!29975 m!121851))

(declare-fun m!121853 () Bool)

(assert (=> b!108307 m!121853))

(declare-fun m!121855 () Bool)

(assert (=> b!108307 m!121855))

(assert (=> b!108307 m!121855))

(declare-fun m!121857 () Bool)

(assert (=> b!108307 m!121857))

(assert (=> b!108309 m!121855))

(assert (=> b!108309 m!121855))

(assert (=> b!108309 m!121857))

(assert (=> bm!11460 d!29975))

(declare-fun d!29977 () Bool)

(declare-fun lt!55637 () (_ BitVec 32))

(assert (=> d!29977 (and (bvsge lt!55637 #b00000000000000000000000000000000) (bvsle lt!55637 (bvsub (size!2330 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!70503 () (_ BitVec 32))

(assert (=> d!29977 (= lt!55637 e!70503)))

(declare-fun c!19050 () Bool)

(assert (=> d!29977 (= c!19050 (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(assert (=> d!29977 (and (bvsle #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2330 (_keys!4316 newMap!16)) (size!2330 (_keys!4316 newMap!16))))))

(assert (=> d!29977 (= (arrayCountValidKeys!0 (_keys!4316 newMap!16) #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))) lt!55637)))

(declare-fun b!108318 () Bool)

(declare-fun e!70502 () (_ BitVec 32))

(declare-fun call!11505 () (_ BitVec 32))

(assert (=> b!108318 (= e!70502 (bvadd #b00000000000000000000000000000001 call!11505))))

(declare-fun b!108319 () Bool)

(assert (=> b!108319 (= e!70503 e!70502)))

(declare-fun c!19049 () Bool)

(assert (=> b!108319 (= c!19049 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108320 () Bool)

(assert (=> b!108320 (= e!70502 call!11505)))

(declare-fun b!108321 () Bool)

(assert (=> b!108321 (= e!70503 #b00000000000000000000000000000000)))

(declare-fun bm!11502 () Bool)

(assert (=> bm!11502 (= call!11505 (arrayCountValidKeys!0 (_keys!4316 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2330 (_keys!4316 newMap!16))))))

(assert (= (and d!29977 c!19050) b!108321))

(assert (= (and d!29977 (not c!19050)) b!108319))

(assert (= (and b!108319 c!19049) b!108318))

(assert (= (and b!108319 (not c!19049)) b!108320))

(assert (= (or b!108318 b!108320) bm!11502))

(assert (=> b!108319 m!121517))

(assert (=> b!108319 m!121517))

(assert (=> b!108319 m!121519))

(declare-fun m!121859 () Bool)

(assert (=> bm!11502 m!121859))

(assert (=> b!107827 d!29977))

(declare-fun d!29979 () Bool)

(declare-fun lt!55638 () Bool)

(assert (=> d!29979 (= lt!55638 (select (content!110 (toList!811 lt!55339)) lt!55249))))

(declare-fun e!70504 () Bool)

(assert (=> d!29979 (= lt!55638 e!70504)))

(declare-fun res!53689 () Bool)

(assert (=> d!29979 (=> (not res!53689) (not e!70504))))

(assert (=> d!29979 (= res!53689 ((_ is Cons!1644) (toList!811 lt!55339)))))

(assert (=> d!29979 (= (contains!835 (toList!811 lt!55339) lt!55249) lt!55638)))

(declare-fun b!108322 () Bool)

(declare-fun e!70505 () Bool)

(assert (=> b!108322 (= e!70504 e!70505)))

(declare-fun res!53688 () Bool)

(assert (=> b!108322 (=> res!53688 e!70505)))

(assert (=> b!108322 (= res!53688 (= (h!2242 (toList!811 lt!55339)) lt!55249))))

(declare-fun b!108323 () Bool)

(assert (=> b!108323 (= e!70505 (contains!835 (t!5776 (toList!811 lt!55339)) lt!55249))))

(assert (= (and d!29979 res!53689) b!108322))

(assert (= (and b!108322 (not res!53688)) b!108323))

(declare-fun m!121861 () Bool)

(assert (=> d!29979 m!121861))

(declare-fun m!121863 () Bool)

(assert (=> d!29979 m!121863))

(declare-fun m!121865 () Bool)

(assert (=> b!108323 m!121865))

(assert (=> b!107820 d!29979))

(declare-fun b!108324 () Bool)

(declare-fun e!70512 () Bool)

(declare-fun lt!55644 () ListLongMap!1591)

(assert (=> b!108324 (= e!70512 (isEmpty!378 lt!55644))))

(declare-fun b!108325 () Bool)

(assert (=> b!108325 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(assert (=> b!108325 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2331 (_values!2589 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun e!70508 () Bool)

(assert (=> b!108325 (= e!70508 (= (apply!99 lt!55644 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108326 () Bool)

(declare-fun lt!55640 () Unit!3339)

(declare-fun lt!55642 () Unit!3339)

(assert (=> b!108326 (= lt!55640 lt!55642)))

(declare-fun lt!55641 () (_ BitVec 64))

(declare-fun lt!55645 () V!3235)

(declare-fun lt!55643 () (_ BitVec 64))

(declare-fun lt!55639 () ListLongMap!1591)

(assert (=> b!108326 (not (contains!834 (+!148 lt!55639 (tuple2!2423 lt!55641 lt!55645)) lt!55643))))

(assert (=> b!108326 (= lt!55642 (addStillNotContains!49 lt!55639 lt!55641 lt!55645 lt!55643))))

(assert (=> b!108326 (= lt!55643 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!108326 (= lt!55645 (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!108326 (= lt!55641 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!11506 () ListLongMap!1591)

(assert (=> b!108326 (= lt!55639 call!11506)))

(declare-fun e!70511 () ListLongMap!1591)

(assert (=> b!108326 (= e!70511 (+!148 call!11506 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!108327 () Bool)

(declare-fun e!70506 () Bool)

(assert (=> b!108327 (= e!70506 e!70508)))

(assert (=> b!108327 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun res!53693 () Bool)

(assert (=> b!108327 (= res!53693 (contains!834 lt!55644 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!108327 (=> (not res!53693) (not e!70508))))

(declare-fun b!108328 () Bool)

(assert (=> b!108328 (= e!70512 (= lt!55644 (getCurrentListMapNoExtraKeys!115 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!108329 () Bool)

(assert (=> b!108329 (= e!70511 call!11506)))

(declare-fun b!108330 () Bool)

(declare-fun e!70510 () ListLongMap!1591)

(assert (=> b!108330 (= e!70510 (ListLongMap!1592 Nil!1645))))

(declare-fun b!108331 () Bool)

(assert (=> b!108331 (= e!70506 e!70512)))

(declare-fun c!19051 () Bool)

(assert (=> b!108331 (= c!19051 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun d!29981 () Bool)

(declare-fun e!70507 () Bool)

(assert (=> d!29981 e!70507))

(declare-fun res!53690 () Bool)

(assert (=> d!29981 (=> (not res!53690) (not e!70507))))

(assert (=> d!29981 (= res!53690 (not (contains!834 lt!55644 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!29981 (= lt!55644 e!70510)))

(declare-fun c!19053 () Bool)

(assert (=> d!29981 (= c!19053 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(assert (=> d!29981 (validMask!0 (mask!6764 (v!2913 (underlying!367 thiss!992))))))

(assert (=> d!29981 (= (getCurrentListMapNoExtraKeys!115 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))) lt!55644)))

(declare-fun b!108332 () Bool)

(assert (=> b!108332 (= e!70507 e!70506)))

(declare-fun c!19054 () Bool)

(declare-fun e!70509 () Bool)

(assert (=> b!108332 (= c!19054 e!70509)))

(declare-fun res!53692 () Bool)

(assert (=> b!108332 (=> (not res!53692) (not e!70509))))

(assert (=> b!108332 (= res!53692 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!108333 () Bool)

(assert (=> b!108333 (= e!70509 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!108333 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!108334 () Bool)

(assert (=> b!108334 (= e!70510 e!70511)))

(declare-fun c!19052 () Bool)

(assert (=> b!108334 (= c!19052 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!108335 () Bool)

(declare-fun res!53691 () Bool)

(assert (=> b!108335 (=> (not res!53691) (not e!70507))))

(assert (=> b!108335 (= res!53691 (not (contains!834 lt!55644 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!11503 () Bool)

(assert (=> bm!11503 (= call!11506 (getCurrentListMapNoExtraKeys!115 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))))))

(assert (= (and d!29981 c!19053) b!108330))

(assert (= (and d!29981 (not c!19053)) b!108334))

(assert (= (and b!108334 c!19052) b!108326))

(assert (= (and b!108334 (not c!19052)) b!108329))

(assert (= (or b!108326 b!108329) bm!11503))

(assert (= (and d!29981 res!53690) b!108335))

(assert (= (and b!108335 res!53691) b!108332))

(assert (= (and b!108332 res!53692) b!108333))

(assert (= (and b!108332 c!19054) b!108327))

(assert (= (and b!108332 (not c!19054)) b!108331))

(assert (= (and b!108327 res!53693) b!108325))

(assert (= (and b!108331 c!19051) b!108328))

(assert (= (and b!108331 (not c!19051)) b!108324))

(declare-fun b_lambda!4867 () Bool)

(assert (=> (not b_lambda!4867) (not b!108325)))

(assert (=> b!108325 t!5772))

(declare-fun b_and!6697 () Bool)

(assert (= b_and!6693 (and (=> t!5772 result!3507) b_and!6697)))

(assert (=> b!108325 t!5774))

(declare-fun b_and!6699 () Bool)

(assert (= b_and!6695 (and (=> t!5774 result!3511) b_and!6699)))

(declare-fun b_lambda!4869 () Bool)

(assert (=> (not b_lambda!4869) (not b!108326)))

(assert (=> b!108326 t!5772))

(declare-fun b_and!6701 () Bool)

(assert (= b_and!6697 (and (=> t!5772 result!3507) b_and!6701)))

(assert (=> b!108326 t!5774))

(declare-fun b_and!6703 () Bool)

(assert (= b_and!6699 (and (=> t!5774 result!3511) b_and!6703)))

(declare-fun m!121867 () Bool)

(assert (=> b!108324 m!121867))

(declare-fun m!121869 () Bool)

(assert (=> b!108328 m!121869))

(assert (=> b!108325 m!121207))

(declare-fun m!121871 () Bool)

(assert (=> b!108325 m!121871))

(declare-fun m!121873 () Bool)

(assert (=> b!108325 m!121873))

(assert (=> b!108325 m!121871))

(declare-fun m!121875 () Bool)

(assert (=> b!108325 m!121875))

(assert (=> b!108325 m!121875))

(assert (=> b!108325 m!121207))

(declare-fun m!121877 () Bool)

(assert (=> b!108325 m!121877))

(declare-fun m!121879 () Bool)

(assert (=> b!108335 m!121879))

(declare-fun m!121881 () Bool)

(assert (=> b!108326 m!121881))

(assert (=> b!108326 m!121207))

(declare-fun m!121883 () Bool)

(assert (=> b!108326 m!121883))

(assert (=> b!108326 m!121871))

(declare-fun m!121885 () Bool)

(assert (=> b!108326 m!121885))

(assert (=> b!108326 m!121875))

(assert (=> b!108326 m!121875))

(assert (=> b!108326 m!121207))

(assert (=> b!108326 m!121877))

(assert (=> b!108326 m!121885))

(declare-fun m!121887 () Bool)

(assert (=> b!108326 m!121887))

(assert (=> b!108333 m!121871))

(assert (=> b!108333 m!121871))

(declare-fun m!121889 () Bool)

(assert (=> b!108333 m!121889))

(assert (=> bm!11503 m!121869))

(assert (=> b!108327 m!121871))

(assert (=> b!108327 m!121871))

(declare-fun m!121891 () Bool)

(assert (=> b!108327 m!121891))

(assert (=> b!108334 m!121871))

(assert (=> b!108334 m!121871))

(assert (=> b!108334 m!121889))

(declare-fun m!121893 () Bool)

(assert (=> d!29981 m!121893))

(assert (=> d!29981 m!121185))

(assert (=> b!107807 d!29981))

(declare-fun d!29983 () Bool)

(declare-fun e!70513 () Bool)

(assert (=> d!29983 e!70513))

(declare-fun res!53694 () Bool)

(assert (=> d!29983 (=> (not res!53694) (not e!70513))))

(declare-fun lt!55648 () ListLongMap!1591)

(assert (=> d!29983 (= res!53694 (contains!834 lt!55648 (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun lt!55646 () List!1648)

(assert (=> d!29983 (= lt!55648 (ListLongMap!1592 lt!55646))))

(declare-fun lt!55647 () Unit!3339)

(declare-fun lt!55649 () Unit!3339)

(assert (=> d!29983 (= lt!55647 lt!55649)))

(assert (=> d!29983 (= (getValueByKey!156 lt!55646 (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))) (Some!161 (_2!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (=> d!29983 (= lt!55649 (lemmaContainsTupThenGetReturnValue!74 lt!55646 (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) (_2!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (=> d!29983 (= lt!55646 (insertStrictlySorted!76 (toList!811 (ite c!18960 call!11458 (ite c!18958 call!11459 call!11461))) (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) (_2!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (=> d!29983 (= (+!148 (ite c!18960 call!11458 (ite c!18958 call!11459 call!11461)) (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55648)))

(declare-fun b!108336 () Bool)

(declare-fun res!53695 () Bool)

(assert (=> b!108336 (=> (not res!53695) (not e!70513))))

(assert (=> b!108336 (= res!53695 (= (getValueByKey!156 (toList!811 lt!55648) (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))) (Some!161 (_2!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun b!108337 () Bool)

(assert (=> b!108337 (= e!70513 (contains!835 (toList!811 lt!55648) (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (= (and d!29983 res!53694) b!108336))

(assert (= (and b!108336 res!53695) b!108337))

(declare-fun m!121895 () Bool)

(assert (=> d!29983 m!121895))

(declare-fun m!121897 () Bool)

(assert (=> d!29983 m!121897))

(declare-fun m!121899 () Bool)

(assert (=> d!29983 m!121899))

(declare-fun m!121901 () Bool)

(assert (=> d!29983 m!121901))

(declare-fun m!121903 () Bool)

(assert (=> b!108336 m!121903))

(declare-fun m!121905 () Bool)

(assert (=> b!108337 m!121905))

(assert (=> bm!11454 d!29983))

(declare-fun d!29985 () Bool)

(declare-fun c!19055 () Bool)

(assert (=> d!29985 (= c!19055 (and ((_ is Cons!1644) (toList!811 lt!55303)) (= (_1!1221 (h!2242 (toList!811 lt!55303))) (_1!1221 lt!55252))))))

(declare-fun e!70514 () Option!162)

(assert (=> d!29985 (= (getValueByKey!156 (toList!811 lt!55303) (_1!1221 lt!55252)) e!70514)))

(declare-fun b!108340 () Bool)

(declare-fun e!70515 () Option!162)

(assert (=> b!108340 (= e!70515 (getValueByKey!156 (t!5776 (toList!811 lt!55303)) (_1!1221 lt!55252)))))

(declare-fun b!108341 () Bool)

(assert (=> b!108341 (= e!70515 None!160)))

(declare-fun b!108339 () Bool)

(assert (=> b!108339 (= e!70514 e!70515)))

(declare-fun c!19056 () Bool)

(assert (=> b!108339 (= c!19056 (and ((_ is Cons!1644) (toList!811 lt!55303)) (not (= (_1!1221 (h!2242 (toList!811 lt!55303))) (_1!1221 lt!55252)))))))

(declare-fun b!108338 () Bool)

(assert (=> b!108338 (= e!70514 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55303)))))))

(assert (= (and d!29985 c!19055) b!108338))

(assert (= (and d!29985 (not c!19055)) b!108339))

(assert (= (and b!108339 c!19056) b!108340))

(assert (= (and b!108339 (not c!19056)) b!108341))

(declare-fun m!121907 () Bool)

(assert (=> b!108340 m!121907))

(assert (=> b!107777 d!29985))

(declare-fun d!29987 () Bool)

(declare-fun e!70517 () Bool)

(assert (=> d!29987 e!70517))

(declare-fun res!53696 () Bool)

(assert (=> d!29987 (=> res!53696 e!70517)))

(declare-fun lt!55650 () Bool)

(assert (=> d!29987 (= res!53696 (not lt!55650))))

(declare-fun lt!55651 () Bool)

(assert (=> d!29987 (= lt!55650 lt!55651)))

(declare-fun lt!55652 () Unit!3339)

(declare-fun e!70516 () Unit!3339)

(assert (=> d!29987 (= lt!55652 e!70516)))

(declare-fun c!19057 () Bool)

(assert (=> d!29987 (= c!19057 lt!55651)))

(assert (=> d!29987 (= lt!55651 (containsKey!160 (toList!811 e!70282) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!29987 (= (contains!834 e!70282 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) lt!55650)))

(declare-fun b!108342 () Bool)

(declare-fun lt!55653 () Unit!3339)

(assert (=> b!108342 (= e!70516 lt!55653)))

(assert (=> b!108342 (= lt!55653 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 e!70282) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!108342 (isDefined!110 (getValueByKey!156 (toList!811 e!70282) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108343 () Bool)

(declare-fun Unit!3360 () Unit!3339)

(assert (=> b!108343 (= e!70516 Unit!3360)))

(declare-fun b!108344 () Bool)

(assert (=> b!108344 (= e!70517 (isDefined!110 (getValueByKey!156 (toList!811 e!70282) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))))

(assert (= (and d!29987 c!19057) b!108342))

(assert (= (and d!29987 (not c!19057)) b!108343))

(assert (= (and d!29987 (not res!53696)) b!108344))

(assert (=> d!29987 m!121177))

(declare-fun m!121909 () Bool)

(assert (=> d!29987 m!121909))

(assert (=> b!108342 m!121177))

(declare-fun m!121911 () Bool)

(assert (=> b!108342 m!121911))

(assert (=> b!108342 m!121177))

(declare-fun m!121913 () Bool)

(assert (=> b!108342 m!121913))

(assert (=> b!108342 m!121913))

(declare-fun m!121915 () Bool)

(assert (=> b!108342 m!121915))

(assert (=> b!108344 m!121177))

(assert (=> b!108344 m!121913))

(assert (=> b!108344 m!121913))

(assert (=> b!108344 m!121915))

(assert (=> bm!11426 d!29987))

(declare-fun b!108345 () Bool)

(declare-fun e!70523 () Bool)

(declare-fun call!11512 () Bool)

(assert (=> b!108345 (= e!70523 (not call!11512))))

(declare-fun bm!11504 () Bool)

(declare-fun call!11509 () ListLongMap!1591)

(declare-fun call!11510 () ListLongMap!1591)

(declare-fun c!19059 () Bool)

(declare-fun call!11511 () ListLongMap!1591)

(declare-fun call!11508 () ListLongMap!1591)

(declare-fun c!19061 () Bool)

(assert (=> bm!11504 (= call!11510 (+!148 (ite c!19061 call!11508 (ite c!19059 call!11509 call!11511)) (ite (or c!19061 c!19059) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(declare-fun b!108346 () Bool)

(declare-fun e!70519 () Bool)

(declare-fun call!11507 () Bool)

(assert (=> b!108346 (= e!70519 (not call!11507))))

(declare-fun bm!11505 () Bool)

(assert (=> bm!11505 (= call!11511 call!11509)))

(declare-fun b!108347 () Bool)

(declare-fun e!70525 () Bool)

(assert (=> b!108347 (= e!70523 e!70525)))

(declare-fun res!53703 () Bool)

(assert (=> b!108347 (= res!53703 call!11512)))

(assert (=> b!108347 (=> (not res!53703) (not e!70525))))

(declare-fun bm!11506 () Bool)

(declare-fun call!11513 () ListLongMap!1591)

(assert (=> bm!11506 (= call!11513 call!11510)))

(declare-fun bm!11507 () Bool)

(assert (=> bm!11507 (= call!11508 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (ite c!18944 (_values!2589 newMap!16) lt!55413) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun b!108348 () Bool)

(declare-fun e!70529 () Unit!3339)

(declare-fun Unit!3361 () Unit!3339)

(assert (=> b!108348 (= e!70529 Unit!3361)))

(declare-fun d!29989 () Bool)

(declare-fun e!70522 () Bool)

(assert (=> d!29989 e!70522))

(declare-fun res!53702 () Bool)

(assert (=> d!29989 (=> (not res!53702) (not e!70522))))

(assert (=> d!29989 (= res!53702 (or (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))))

(declare-fun lt!55655 () ListLongMap!1591)

(declare-fun lt!55674 () ListLongMap!1591)

(assert (=> d!29989 (= lt!55655 lt!55674)))

(declare-fun lt!55666 () Unit!3339)

(assert (=> d!29989 (= lt!55666 e!70529)))

(declare-fun c!19062 () Bool)

(declare-fun e!70528 () Bool)

(assert (=> d!29989 (= c!19062 e!70528)))

(declare-fun res!53698 () Bool)

(assert (=> d!29989 (=> (not res!53698) (not e!70528))))

(assert (=> d!29989 (= res!53698 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun e!70526 () ListLongMap!1591)

(assert (=> d!29989 (= lt!55674 e!70526)))

(assert (=> d!29989 (= c!19061 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!29989 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!29989 (= (getCurrentListMap!487 (_keys!4316 newMap!16) (ite c!18944 (_values!2589 newMap!16) lt!55413) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!55655)))

(declare-fun b!108349 () Bool)

(declare-fun e!70521 () Bool)

(assert (=> b!108349 (= e!70519 e!70521)))

(declare-fun res!53704 () Bool)

(assert (=> b!108349 (= res!53704 call!11507)))

(assert (=> b!108349 (=> (not res!53704) (not e!70521))))

(declare-fun b!108350 () Bool)

(declare-fun lt!55661 () Unit!3339)

(assert (=> b!108350 (= e!70529 lt!55661)))

(declare-fun lt!55673 () ListLongMap!1591)

(assert (=> b!108350 (= lt!55673 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (ite c!18944 (_values!2589 newMap!16) lt!55413) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55671 () (_ BitVec 64))

(assert (=> b!108350 (= lt!55671 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55672 () (_ BitVec 64))

(assert (=> b!108350 (= lt!55672 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55657 () Unit!3339)

(assert (=> b!108350 (= lt!55657 (addStillContains!75 lt!55673 lt!55671 (zeroValue!2479 newMap!16) lt!55672))))

(assert (=> b!108350 (contains!834 (+!148 lt!55673 (tuple2!2423 lt!55671 (zeroValue!2479 newMap!16))) lt!55672)))

(declare-fun lt!55664 () Unit!3339)

(assert (=> b!108350 (= lt!55664 lt!55657)))

(declare-fun lt!55656 () ListLongMap!1591)

(assert (=> b!108350 (= lt!55656 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (ite c!18944 (_values!2589 newMap!16) lt!55413) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55667 () (_ BitVec 64))

(assert (=> b!108350 (= lt!55667 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55663 () (_ BitVec 64))

(assert (=> b!108350 (= lt!55663 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55668 () Unit!3339)

(assert (=> b!108350 (= lt!55668 (addApplyDifferent!75 lt!55656 lt!55667 (minValue!2479 newMap!16) lt!55663))))

(assert (=> b!108350 (= (apply!99 (+!148 lt!55656 (tuple2!2423 lt!55667 (minValue!2479 newMap!16))) lt!55663) (apply!99 lt!55656 lt!55663))))

(declare-fun lt!55665 () Unit!3339)

(assert (=> b!108350 (= lt!55665 lt!55668)))

(declare-fun lt!55658 () ListLongMap!1591)

(assert (=> b!108350 (= lt!55658 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (ite c!18944 (_values!2589 newMap!16) lt!55413) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55660 () (_ BitVec 64))

(assert (=> b!108350 (= lt!55660 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55670 () (_ BitVec 64))

(assert (=> b!108350 (= lt!55670 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55654 () Unit!3339)

(assert (=> b!108350 (= lt!55654 (addApplyDifferent!75 lt!55658 lt!55660 (zeroValue!2479 newMap!16) lt!55670))))

(assert (=> b!108350 (= (apply!99 (+!148 lt!55658 (tuple2!2423 lt!55660 (zeroValue!2479 newMap!16))) lt!55670) (apply!99 lt!55658 lt!55670))))

(declare-fun lt!55662 () Unit!3339)

(assert (=> b!108350 (= lt!55662 lt!55654)))

(declare-fun lt!55675 () ListLongMap!1591)

(assert (=> b!108350 (= lt!55675 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (ite c!18944 (_values!2589 newMap!16) lt!55413) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55659 () (_ BitVec 64))

(assert (=> b!108350 (= lt!55659 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55669 () (_ BitVec 64))

(assert (=> b!108350 (= lt!55669 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108350 (= lt!55661 (addApplyDifferent!75 lt!55675 lt!55659 (minValue!2479 newMap!16) lt!55669))))

(assert (=> b!108350 (= (apply!99 (+!148 lt!55675 (tuple2!2423 lt!55659 (minValue!2479 newMap!16))) lt!55669) (apply!99 lt!55675 lt!55669))))

(declare-fun b!108351 () Bool)

(assert (=> b!108351 (= e!70526 (+!148 call!11510 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))

(declare-fun bm!11508 () Bool)

(assert (=> bm!11508 (= call!11512 (contains!834 lt!55655 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108352 () Bool)

(declare-fun c!19063 () Bool)

(assert (=> b!108352 (= c!19063 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!70527 () ListLongMap!1591)

(declare-fun e!70518 () ListLongMap!1591)

(assert (=> b!108352 (= e!70527 e!70518)))

(declare-fun b!108353 () Bool)

(declare-fun e!70530 () Bool)

(assert (=> b!108353 (= e!70530 (= (apply!99 lt!55655 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1349 (select (arr!2075 (ite c!18944 (_values!2589 newMap!16) lt!55413)) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108353 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (ite c!18944 (_values!2589 newMap!16) lt!55413))))))

(assert (=> b!108353 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108354 () Bool)

(assert (=> b!108354 (= e!70528 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108355 () Bool)

(assert (=> b!108355 (= e!70522 e!70519)))

(declare-fun c!19060 () Bool)

(assert (=> b!108355 (= c!19060 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108356 () Bool)

(assert (=> b!108356 (= e!70525 (= (apply!99 lt!55655 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2479 newMap!16)))))

(declare-fun b!108357 () Bool)

(declare-fun res!53699 () Bool)

(assert (=> b!108357 (=> (not res!53699) (not e!70522))))

(declare-fun e!70524 () Bool)

(assert (=> b!108357 (= res!53699 e!70524)))

(declare-fun res!53697 () Bool)

(assert (=> b!108357 (=> res!53697 e!70524)))

(declare-fun e!70520 () Bool)

(assert (=> b!108357 (= res!53697 (not e!70520))))

(declare-fun res!53700 () Bool)

(assert (=> b!108357 (=> (not res!53700) (not e!70520))))

(assert (=> b!108357 (= res!53700 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108358 () Bool)

(assert (=> b!108358 (= e!70518 call!11513)))

(declare-fun b!108359 () Bool)

(declare-fun res!53705 () Bool)

(assert (=> b!108359 (=> (not res!53705) (not e!70522))))

(assert (=> b!108359 (= res!53705 e!70523)))

(declare-fun c!19058 () Bool)

(assert (=> b!108359 (= c!19058 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11509 () Bool)

(assert (=> bm!11509 (= call!11509 call!11508)))

(declare-fun bm!11510 () Bool)

(assert (=> bm!11510 (= call!11507 (contains!834 lt!55655 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108360 () Bool)

(assert (=> b!108360 (= e!70521 (= (apply!99 lt!55655 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2479 newMap!16)))))

(declare-fun b!108361 () Bool)

(assert (=> b!108361 (= e!70518 call!11511)))

(declare-fun b!108362 () Bool)

(assert (=> b!108362 (= e!70527 call!11513)))

(declare-fun b!108363 () Bool)

(assert (=> b!108363 (= e!70524 e!70530)))

(declare-fun res!53701 () Bool)

(assert (=> b!108363 (=> (not res!53701) (not e!70530))))

(assert (=> b!108363 (= res!53701 (contains!834 lt!55655 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108363 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108364 () Bool)

(assert (=> b!108364 (= e!70520 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108365 () Bool)

(assert (=> b!108365 (= e!70526 e!70527)))

(assert (=> b!108365 (= c!19059 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!29989 c!19061) b!108351))

(assert (= (and d!29989 (not c!19061)) b!108365))

(assert (= (and b!108365 c!19059) b!108362))

(assert (= (and b!108365 (not c!19059)) b!108352))

(assert (= (and b!108352 c!19063) b!108358))

(assert (= (and b!108352 (not c!19063)) b!108361))

(assert (= (or b!108358 b!108361) bm!11505))

(assert (= (or b!108362 bm!11505) bm!11509))

(assert (= (or b!108362 b!108358) bm!11506))

(assert (= (or b!108351 bm!11509) bm!11507))

(assert (= (or b!108351 bm!11506) bm!11504))

(assert (= (and d!29989 res!53698) b!108354))

(assert (= (and d!29989 c!19062) b!108350))

(assert (= (and d!29989 (not c!19062)) b!108348))

(assert (= (and d!29989 res!53702) b!108357))

(assert (= (and b!108357 res!53700) b!108364))

(assert (= (and b!108357 (not res!53697)) b!108363))

(assert (= (and b!108363 res!53701) b!108353))

(assert (= (and b!108357 res!53699) b!108359))

(assert (= (and b!108359 c!19058) b!108347))

(assert (= (and b!108359 (not c!19058)) b!108345))

(assert (= (and b!108347 res!53703) b!108356))

(assert (= (or b!108347 b!108345) bm!11508))

(assert (= (and b!108359 res!53705) b!108355))

(assert (= (and b!108355 c!19060) b!108349))

(assert (= (and b!108355 (not c!19060)) b!108346))

(assert (= (and b!108349 res!53704) b!108360))

(assert (= (or b!108349 b!108346) bm!11510))

(declare-fun b_lambda!4871 () Bool)

(assert (=> (not b_lambda!4871) (not b!108353)))

(assert (=> b!108353 t!5783))

(declare-fun b_and!6705 () Bool)

(assert (= b_and!6701 (and (=> t!5783 result!3521) b_and!6705)))

(assert (=> b!108353 t!5785))

(declare-fun b_and!6707 () Bool)

(assert (= b_and!6703 (and (=> t!5785 result!3523) b_and!6707)))

(assert (=> b!108364 m!121517))

(assert (=> b!108364 m!121517))

(assert (=> b!108364 m!121519))

(assert (=> d!29989 m!121521))

(declare-fun m!121917 () Bool)

(assert (=> bm!11510 m!121917))

(declare-fun m!121919 () Bool)

(assert (=> bm!11508 m!121919))

(declare-fun m!121921 () Bool)

(assert (=> b!108360 m!121921))

(declare-fun m!121923 () Bool)

(assert (=> bm!11507 m!121923))

(declare-fun m!121925 () Bool)

(assert (=> b!108351 m!121925))

(declare-fun m!121927 () Bool)

(assert (=> b!108356 m!121927))

(assert (=> b!108354 m!121517))

(assert (=> b!108354 m!121517))

(assert (=> b!108354 m!121519))

(declare-fun m!121929 () Bool)

(assert (=> b!108350 m!121929))

(declare-fun m!121931 () Bool)

(assert (=> b!108350 m!121931))

(declare-fun m!121933 () Bool)

(assert (=> b!108350 m!121933))

(declare-fun m!121935 () Bool)

(assert (=> b!108350 m!121935))

(declare-fun m!121937 () Bool)

(assert (=> b!108350 m!121937))

(declare-fun m!121939 () Bool)

(assert (=> b!108350 m!121939))

(declare-fun m!121941 () Bool)

(assert (=> b!108350 m!121941))

(assert (=> b!108350 m!121923))

(declare-fun m!121943 () Bool)

(assert (=> b!108350 m!121943))

(assert (=> b!108350 m!121939))

(declare-fun m!121945 () Bool)

(assert (=> b!108350 m!121945))

(assert (=> b!108350 m!121933))

(declare-fun m!121947 () Bool)

(assert (=> b!108350 m!121947))

(assert (=> b!108350 m!121935))

(declare-fun m!121949 () Bool)

(assert (=> b!108350 m!121949))

(assert (=> b!108350 m!121929))

(declare-fun m!121951 () Bool)

(assert (=> b!108350 m!121951))

(declare-fun m!121953 () Bool)

(assert (=> b!108350 m!121953))

(declare-fun m!121955 () Bool)

(assert (=> b!108350 m!121955))

(assert (=> b!108350 m!121517))

(declare-fun m!121957 () Bool)

(assert (=> b!108350 m!121957))

(assert (=> b!108363 m!121517))

(assert (=> b!108363 m!121517))

(declare-fun m!121959 () Bool)

(assert (=> b!108363 m!121959))

(declare-fun m!121961 () Bool)

(assert (=> b!108353 m!121961))

(assert (=> b!108353 m!121569))

(declare-fun m!121963 () Bool)

(assert (=> b!108353 m!121963))

(assert (=> b!108353 m!121517))

(declare-fun m!121965 () Bool)

(assert (=> b!108353 m!121965))

(assert (=> b!108353 m!121517))

(assert (=> b!108353 m!121569))

(assert (=> b!108353 m!121961))

(declare-fun m!121967 () Bool)

(assert (=> bm!11504 m!121967))

(assert (=> bm!11427 d!29989))

(assert (=> b!108026 d!29919))

(assert (=> bm!11418 d!29899))

(declare-fun d!29991 () Bool)

(assert (=> d!29991 (isDefined!110 (getValueByKey!156 (toList!811 lt!55247) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun lt!55678 () Unit!3339)

(declare-fun choose!683 (List!1648 (_ BitVec 64)) Unit!3339)

(assert (=> d!29991 (= lt!55678 (choose!683 (toList!811 lt!55247) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!70533 () Bool)

(assert (=> d!29991 e!70533))

(declare-fun res!53708 () Bool)

(assert (=> d!29991 (=> (not res!53708) (not e!70533))))

(assert (=> d!29991 (= res!53708 (isStrictlySorted!305 (toList!811 lt!55247)))))

(assert (=> d!29991 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55247) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) lt!55678)))

(declare-fun b!108368 () Bool)

(assert (=> b!108368 (= e!70533 (containsKey!160 (toList!811 lt!55247) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!29991 res!53708) b!108368))

(assert (=> d!29991 m!121177))

(assert (=> d!29991 m!121387))

(assert (=> d!29991 m!121387))

(assert (=> d!29991 m!121389))

(assert (=> d!29991 m!121177))

(declare-fun m!121969 () Bool)

(assert (=> d!29991 m!121969))

(declare-fun m!121971 () Bool)

(assert (=> d!29991 m!121971))

(assert (=> b!108368 m!121177))

(assert (=> b!108368 m!121383))

(assert (=> b!107836 d!29991))

(declare-fun d!29993 () Bool)

(declare-fun isEmpty!379 (Option!162) Bool)

(assert (=> d!29993 (= (isDefined!110 (getValueByKey!156 (toList!811 lt!55247) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))) (not (isEmpty!379 (getValueByKey!156 (toList!811 lt!55247) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))))

(declare-fun bs!4442 () Bool)

(assert (= bs!4442 d!29993))

(assert (=> bs!4442 m!121387))

(declare-fun m!121973 () Bool)

(assert (=> bs!4442 m!121973))

(assert (=> b!107836 d!29993))

(declare-fun c!19064 () Bool)

(declare-fun d!29995 () Bool)

(assert (=> d!29995 (= c!19064 (and ((_ is Cons!1644) (toList!811 lt!55247)) (= (_1!1221 (h!2242 (toList!811 lt!55247))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))))

(declare-fun e!70534 () Option!162)

(assert (=> d!29995 (= (getValueByKey!156 (toList!811 lt!55247) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) e!70534)))

(declare-fun b!108371 () Bool)

(declare-fun e!70535 () Option!162)

(assert (=> b!108371 (= e!70535 (getValueByKey!156 (t!5776 (toList!811 lt!55247)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108372 () Bool)

(assert (=> b!108372 (= e!70535 None!160)))

(declare-fun b!108370 () Bool)

(assert (=> b!108370 (= e!70534 e!70535)))

(declare-fun c!19065 () Bool)

(assert (=> b!108370 (= c!19065 (and ((_ is Cons!1644) (toList!811 lt!55247)) (not (= (_1!1221 (h!2242 (toList!811 lt!55247))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))))

(declare-fun b!108369 () Bool)

(assert (=> b!108369 (= e!70534 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55247)))))))

(assert (= (and d!29995 c!19064) b!108369))

(assert (= (and d!29995 (not c!19064)) b!108370))

(assert (= (and b!108370 c!19065) b!108371))

(assert (= (and b!108370 (not c!19065)) b!108372))

(assert (=> b!108371 m!121177))

(declare-fun m!121975 () Bool)

(assert (=> b!108371 m!121975))

(assert (=> b!107836 d!29995))

(assert (=> b!107838 d!29993))

(assert (=> b!107838 d!29995))

(declare-fun b!108407 () Bool)

(declare-fun res!53728 () Bool)

(declare-fun e!70555 () Bool)

(assert (=> b!108407 (=> (not res!53728) (not e!70555))))

(declare-fun call!11525 () Bool)

(assert (=> b!108407 (= res!53728 call!11525)))

(declare-fun e!70557 () Bool)

(assert (=> b!108407 (= e!70557 e!70555)))

(declare-fun bm!11519 () Bool)

(declare-fun c!19075 () Bool)

(declare-fun call!11523 () Bool)

(declare-fun lt!55756 () SeekEntryResult!270)

(declare-fun c!19077 () Bool)

(declare-fun lt!55757 () SeekEntryResult!270)

(assert (=> bm!11519 (= call!11523 (inRange!0 (ite c!19075 (index!3230 lt!55756) (ite c!19077 (index!3229 lt!55757) (index!3232 lt!55757))) (mask!6764 newMap!16)))))

(declare-fun b!108408 () Bool)

(declare-fun lt!55767 () tuple2!2424)

(declare-fun e!70559 () Bool)

(assert (=> b!108408 (= e!70559 (= (map!1290 (_2!1222 lt!55767)) (+!148 (map!1290 newMap!16) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun b!108409 () Bool)

(declare-fun e!70556 () Bool)

(declare-fun e!70553 () Bool)

(assert (=> b!108409 (= e!70556 e!70553)))

(declare-fun res!53729 () Bool)

(assert (=> b!108409 (= res!53729 call!11525)))

(assert (=> b!108409 (=> (not res!53729) (not e!70553))))

(declare-fun d!29997 () Bool)

(assert (=> d!29997 e!70559))

(declare-fun res!53735 () Bool)

(assert (=> d!29997 (=> (not res!53735) (not e!70559))))

(assert (=> d!29997 (= res!53735 (_1!1222 lt!55767))))

(assert (=> d!29997 (= lt!55767 (tuple2!2425 true (LongMapFixedSize!913 (defaultEntry!2606 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (bvadd (_size!505 newMap!16) #b00000000000000000000000000000001) (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))) (_vacant!505 newMap!16))))))

(declare-fun lt!55741 () Unit!3339)

(declare-fun lt!55751 () Unit!3339)

(assert (=> d!29997 (= lt!55741 lt!55751)))

(declare-fun lt!55763 () array!4374)

(declare-fun lt!55760 () array!4376)

(assert (=> d!29997 (contains!834 (getCurrentListMap!487 lt!55763 lt!55760 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408))))))

(assert (=> d!29997 (= lt!55751 (lemmaValidKeyInArrayIsInListMap!106 lt!55763 lt!55760 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (defaultEntry!2606 newMap!16)))))

(assert (=> d!29997 (= lt!55760 (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))))))

(assert (=> d!29997 (= lt!55763 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))))))

(declare-fun lt!55743 () Unit!3339)

(declare-fun lt!55750 () Unit!3339)

(assert (=> d!29997 (= lt!55743 lt!55750)))

(declare-fun lt!55764 () array!4374)

(assert (=> d!29997 (= (arrayCountValidKeys!0 lt!55764 (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (bvadd (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4374 (_ BitVec 32)) Unit!3339)

(assert (=> d!29997 (= lt!55750 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!55764 (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408))))))

(assert (=> d!29997 (= lt!55764 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))))))

(declare-fun lt!55744 () Unit!3339)

(declare-fun lt!55742 () Unit!3339)

(assert (=> d!29997 (= lt!55744 lt!55742)))

(declare-fun lt!55755 () array!4374)

(assert (=> d!29997 (arrayContainsKey!0 lt!55755 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4374 (_ BitVec 64) (_ BitVec 32)) Unit!3339)

(assert (=> d!29997 (= lt!55742 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!55755 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408))))))

(assert (=> d!29997 (= lt!55755 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))))))

(declare-fun lt!55759 () Unit!3339)

(declare-fun lt!55739 () Unit!3339)

(assert (=> d!29997 (= lt!55759 lt!55739)))

(assert (=> d!29997 (= (+!148 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (getCurrentListMap!487 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!31 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 32) (_ BitVec 64) V!3235 Int) Unit!3339)

(assert (=> d!29997 (= lt!55739 (lemmaAddValidKeyToArrayThenAddPairToListMap!31 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55747 () Unit!3339)

(declare-fun lt!55752 () Unit!3339)

(assert (=> d!29997 (= lt!55747 lt!55752)))

(assert (=> d!29997 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) (mask!6764 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4374 (_ BitVec 32) (_ BitVec 32)) Unit!3339)

(assert (=> d!29997 (= lt!55752 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (mask!6764 newMap!16)))))

(declare-fun lt!55749 () Unit!3339)

(declare-fun lt!55748 () Unit!3339)

(assert (=> d!29997 (= lt!55749 lt!55748)))

(assert (=> d!29997 (= (arrayCountValidKeys!0 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4316 newMap!16) #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4374 (_ BitVec 32) (_ BitVec 64)) Unit!3339)

(assert (=> d!29997 (= lt!55748 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4316 newMap!16) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun lt!55766 () Unit!3339)

(declare-fun lt!55765 () Unit!3339)

(assert (=> d!29997 (= lt!55766 lt!55765)))

(declare-fun lt!55762 () List!1647)

(declare-fun lt!55745 () (_ BitVec 32))

(assert (=> d!29997 (arrayNoDuplicates!0 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) lt!55745 lt!55762)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4374 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1647) Unit!3339)

(assert (=> d!29997 (= lt!55765 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4316 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) lt!55745 lt!55762))))

(assert (=> d!29997 (= lt!55762 Nil!1644)))

(assert (=> d!29997 (= lt!55745 #b00000000000000000000000000000000)))

(declare-fun lt!55753 () Unit!3339)

(declare-fun e!70552 () Unit!3339)

(assert (=> d!29997 (= lt!55753 e!70552)))

(declare-fun c!19076 () Bool)

(assert (=> d!29997 (= c!19076 (arrayContainsKey!0 (_keys!4316 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!55746 () Unit!3339)

(declare-fun e!70554 () Unit!3339)

(assert (=> d!29997 (= lt!55746 e!70554)))

(assert (=> d!29997 (= c!19075 (contains!834 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!29997 (valid!416 newMap!16)))

(assert (=> d!29997 (= (updateHelperNewKey!48 newMap!16 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248 (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408))) lt!55767)))

(declare-fun b!108410 () Bool)

(declare-fun Unit!3362 () Unit!3339)

(assert (=> b!108410 (= e!70554 Unit!3362)))

(declare-fun lt!55740 () Unit!3339)

(assert (=> b!108410 (= lt!55740 (lemmaInListMapThenSeekEntryOrOpenFindsIt!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)))))

(declare-fun call!11524 () SeekEntryResult!270)

(assert (=> b!108410 (= lt!55756 call!11524)))

(declare-fun res!53734 () Bool)

(assert (=> b!108410 (= res!53734 ((_ is Found!270) lt!55756))))

(declare-fun e!70558 () Bool)

(assert (=> b!108410 (=> (not res!53734) (not e!70558))))

(assert (=> b!108410 e!70558))

(declare-fun lt!55754 () Unit!3339)

(assert (=> b!108410 (= lt!55754 lt!55740)))

(assert (=> b!108410 false))

(declare-fun b!108411 () Bool)

(declare-fun res!53727 () Bool)

(assert (=> b!108411 (= res!53727 call!11523)))

(assert (=> b!108411 (=> (not res!53727) (not e!70558))))

(declare-fun b!108412 () Bool)

(declare-fun res!53731 () Bool)

(assert (=> b!108412 (= res!53731 (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3232 lt!55757)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108412 (=> (not res!53731) (not e!70553))))

(declare-fun b!108413 () Bool)

(declare-fun c!19074 () Bool)

(assert (=> b!108413 (= c!19074 ((_ is MissingVacant!270) lt!55757))))

(assert (=> b!108413 (= e!70557 e!70556)))

(declare-fun b!108414 () Bool)

(declare-fun lt!55758 () Unit!3339)

(assert (=> b!108414 (= e!70554 lt!55758)))

(assert (=> b!108414 (= lt!55758 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)))))

(assert (=> b!108414 (= lt!55757 call!11524)))

(assert (=> b!108414 (= c!19077 ((_ is MissingZero!270) lt!55757))))

(assert (=> b!108414 e!70557))

(declare-fun b!108415 () Bool)

(declare-fun call!11522 () Bool)

(assert (=> b!108415 (= e!70555 (not call!11522))))

(declare-fun b!108416 () Bool)

(declare-fun Unit!3363 () Unit!3339)

(assert (=> b!108416 (= e!70552 Unit!3363)))

(declare-fun lt!55768 () Unit!3339)

(declare-fun lemmaArrayContainsKeyThenInListMap!31 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 64) (_ BitVec 32) Int) Unit!3339)

(assert (=> b!108416 (= lt!55768 (lemmaArrayContainsKeyThenInListMap!31 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(assert (=> b!108416 (contains!834 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))

(declare-fun lt!55761 () Unit!3339)

(assert (=> b!108416 (= lt!55761 lt!55768)))

(assert (=> b!108416 false))

(declare-fun b!108417 () Bool)

(declare-fun res!53733 () Bool)

(assert (=> b!108417 (=> (not res!53733) (not e!70555))))

(assert (=> b!108417 (= res!53733 (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3229 lt!55757)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108418 () Bool)

(declare-fun Unit!3364 () Unit!3339)

(assert (=> b!108418 (= e!70552 Unit!3364)))

(declare-fun b!108419 () Bool)

(declare-fun res!53732 () Bool)

(assert (=> b!108419 (=> (not res!53732) (not e!70559))))

(assert (=> b!108419 (= res!53732 (contains!834 (map!1290 (_2!1222 lt!55767)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108420 () Bool)

(assert (=> b!108420 (= e!70558 (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55756)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun bm!11520 () Bool)

(assert (=> bm!11520 (= call!11524 (seekEntryOrOpen!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun b!108421 () Bool)

(assert (=> b!108421 (= e!70556 ((_ is Undefined!270) lt!55757))))

(declare-fun b!108422 () Bool)

(declare-fun res!53730 () Bool)

(assert (=> b!108422 (=> (not res!53730) (not e!70559))))

(assert (=> b!108422 (= res!53730 (valid!416 (_2!1222 lt!55767)))))

(declare-fun b!108423 () Bool)

(assert (=> b!108423 (= e!70553 (not call!11522))))

(declare-fun bm!11521 () Bool)

(assert (=> bm!11521 (= call!11525 call!11523)))

(declare-fun bm!11522 () Bool)

(assert (=> bm!11522 (= call!11522 (arrayContainsKey!0 (_keys!4316 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!29997 c!19075) b!108410))

(assert (= (and d!29997 (not c!19075)) b!108414))

(assert (= (and b!108410 res!53734) b!108411))

(assert (= (and b!108411 res!53727) b!108420))

(assert (= (and b!108414 c!19077) b!108407))

(assert (= (and b!108414 (not c!19077)) b!108413))

(assert (= (and b!108407 res!53728) b!108417))

(assert (= (and b!108417 res!53733) b!108415))

(assert (= (and b!108413 c!19074) b!108409))

(assert (= (and b!108413 (not c!19074)) b!108421))

(assert (= (and b!108409 res!53729) b!108412))

(assert (= (and b!108412 res!53731) b!108423))

(assert (= (or b!108407 b!108409) bm!11521))

(assert (= (or b!108415 b!108423) bm!11522))

(assert (= (or b!108411 bm!11521) bm!11519))

(assert (= (or b!108410 b!108414) bm!11520))

(assert (= (and d!29997 c!19076) b!108416))

(assert (= (and d!29997 (not c!19076)) b!108418))

(assert (= (and d!29997 res!53735) b!108422))

(assert (= (and b!108422 res!53730) b!108419))

(assert (= (and b!108419 res!53732) b!108408))

(assert (=> b!108414 m!121177))

(assert (=> b!108414 m!121439))

(declare-fun m!121977 () Bool)

(assert (=> b!108408 m!121977))

(assert (=> b!108408 m!121215))

(assert (=> b!108408 m!121215))

(declare-fun m!121979 () Bool)

(assert (=> b!108408 m!121979))

(declare-fun m!121981 () Bool)

(assert (=> b!108417 m!121981))

(assert (=> b!108410 m!121177))

(assert (=> b!108410 m!121425))

(declare-fun m!121983 () Bool)

(assert (=> b!108412 m!121983))

(declare-fun m!121985 () Bool)

(assert (=> b!108422 m!121985))

(assert (=> bm!11520 m!121177))

(assert (=> bm!11520 m!121393))

(assert (=> b!108419 m!121977))

(assert (=> b!108419 m!121977))

(assert (=> b!108419 m!121177))

(declare-fun m!121987 () Bool)

(assert (=> b!108419 m!121987))

(assert (=> bm!11522 m!121177))

(assert (=> bm!11522 m!121401))

(assert (=> d!29997 m!121377))

(declare-fun m!121989 () Bool)

(assert (=> d!29997 m!121989))

(declare-fun m!121991 () Bool)

(assert (=> d!29997 m!121991))

(assert (=> d!29997 m!121177))

(declare-fun m!121993 () Bool)

(assert (=> d!29997 m!121993))

(declare-fun m!121995 () Bool)

(assert (=> d!29997 m!121995))

(assert (=> d!29997 m!121177))

(declare-fun m!121997 () Bool)

(assert (=> d!29997 m!121997))

(assert (=> d!29997 m!121177))

(declare-fun m!121999 () Bool)

(assert (=> d!29997 m!121999))

(assert (=> d!29997 m!121177))

(declare-fun m!122001 () Bool)

(assert (=> d!29997 m!122001))

(assert (=> d!29997 m!121407))

(assert (=> d!29997 m!121625))

(declare-fun m!122003 () Bool)

(assert (=> d!29997 m!122003))

(declare-fun m!122005 () Bool)

(assert (=> d!29997 m!122005))

(declare-fun m!122007 () Bool)

(assert (=> d!29997 m!122007))

(assert (=> d!29997 m!121407))

(assert (=> d!29997 m!121177))

(declare-fun m!122009 () Bool)

(assert (=> d!29997 m!122009))

(assert (=> d!29997 m!121177))

(assert (=> d!29997 m!121401))

(declare-fun m!122011 () Bool)

(assert (=> d!29997 m!122011))

(declare-fun m!122013 () Bool)

(assert (=> d!29997 m!122013))

(assert (=> d!29997 m!121177))

(declare-fun m!122015 () Bool)

(assert (=> d!29997 m!122015))

(assert (=> d!29997 m!122005))

(declare-fun m!122017 () Bool)

(assert (=> d!29997 m!122017))

(declare-fun m!122019 () Bool)

(assert (=> d!29997 m!122019))

(assert (=> d!29997 m!121177))

(declare-fun m!122021 () Bool)

(assert (=> d!29997 m!122021))

(assert (=> d!29997 m!121407))

(declare-fun m!122023 () Bool)

(assert (=> d!29997 m!122023))

(declare-fun m!122025 () Bool)

(assert (=> d!29997 m!122025))

(assert (=> d!29997 m!122017))

(assert (=> d!29997 m!121203))

(assert (=> b!108416 m!121177))

(declare-fun m!122027 () Bool)

(assert (=> b!108416 m!122027))

(assert (=> b!108416 m!121407))

(assert (=> b!108416 m!121407))

(assert (=> b!108416 m!121177))

(assert (=> b!108416 m!122009))

(declare-fun m!122029 () Bool)

(assert (=> b!108420 m!122029))

(declare-fun m!122031 () Bool)

(assert (=> bm!11519 m!122031))

(assert (=> bm!11437 d!29997))

(assert (=> b!107813 d!29919))

(declare-fun d!29999 () Bool)

(declare-fun e!70560 () Bool)

(assert (=> d!29999 e!70560))

(declare-fun res!53736 () Bool)

(assert (=> d!29999 (=> (not res!53736) (not e!70560))))

(declare-fun lt!55771 () ListLongMap!1591)

(assert (=> d!29999 (= res!53736 (contains!834 lt!55771 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun lt!55769 () List!1648)

(assert (=> d!29999 (= lt!55771 (ListLongMap!1592 lt!55769))))

(declare-fun lt!55770 () Unit!3339)

(declare-fun lt!55772 () Unit!3339)

(assert (=> d!29999 (= lt!55770 lt!55772)))

(assert (=> d!29999 (= (getValueByKey!156 lt!55769 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (Some!161 (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!29999 (= lt!55772 (lemmaContainsTupThenGetReturnValue!74 lt!55769 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!29999 (= lt!55769 (insertStrictlySorted!76 (toList!811 lt!55250) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!29999 (= (+!148 lt!55250 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) lt!55771)))

(declare-fun b!108424 () Bool)

(declare-fun res!53737 () Bool)

(assert (=> b!108424 (=> (not res!53737) (not e!70560))))

(assert (=> b!108424 (= res!53737 (= (getValueByKey!156 (toList!811 lt!55771) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (Some!161 (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun b!108425 () Bool)

(assert (=> b!108425 (= e!70560 (contains!835 (toList!811 lt!55771) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))

(assert (= (and d!29999 res!53736) b!108424))

(assert (= (and b!108424 res!53737) b!108425))

(declare-fun m!122033 () Bool)

(assert (=> d!29999 m!122033))

(declare-fun m!122035 () Bool)

(assert (=> d!29999 m!122035))

(declare-fun m!122037 () Bool)

(assert (=> d!29999 m!122037))

(declare-fun m!122039 () Bool)

(assert (=> d!29999 m!122039))

(declare-fun m!122041 () Bool)

(assert (=> b!108424 m!122041))

(declare-fun m!122043 () Bool)

(assert (=> b!108425 m!122043))

(assert (=> d!29853 d!29999))

(declare-fun d!30001 () Bool)

(declare-fun e!70561 () Bool)

(assert (=> d!30001 e!70561))

(declare-fun res!53738 () Bool)

(assert (=> d!30001 (=> (not res!53738) (not e!70561))))

(declare-fun lt!55775 () ListLongMap!1591)

(assert (=> d!30001 (= res!53738 (contains!834 lt!55775 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun lt!55773 () List!1648)

(assert (=> d!30001 (= lt!55775 (ListLongMap!1592 lt!55773))))

(declare-fun lt!55774 () Unit!3339)

(declare-fun lt!55776 () Unit!3339)

(assert (=> d!30001 (= lt!55774 lt!55776)))

(assert (=> d!30001 (= (getValueByKey!156 lt!55773 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (Some!161 (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!30001 (= lt!55776 (lemmaContainsTupThenGetReturnValue!74 lt!55773 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!30001 (= lt!55773 (insertStrictlySorted!76 (toList!811 (+!148 lt!55250 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!30001 (= (+!148 (+!148 lt!55250 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) lt!55775)))

(declare-fun b!108426 () Bool)

(declare-fun res!53739 () Bool)

(assert (=> b!108426 (=> (not res!53739) (not e!70561))))

(assert (=> b!108426 (= res!53739 (= (getValueByKey!156 (toList!811 lt!55775) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (Some!161 (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun b!108427 () Bool)

(assert (=> b!108427 (= e!70561 (contains!835 (toList!811 lt!55775) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))

(assert (= (and d!30001 res!53738) b!108426))

(assert (= (and b!108426 res!53739) b!108427))

(declare-fun m!122045 () Bool)

(assert (=> d!30001 m!122045))

(declare-fun m!122047 () Bool)

(assert (=> d!30001 m!122047))

(declare-fun m!122049 () Bool)

(assert (=> d!30001 m!122049))

(declare-fun m!122051 () Bool)

(assert (=> d!30001 m!122051))

(declare-fun m!122053 () Bool)

(assert (=> b!108426 m!122053))

(declare-fun m!122055 () Bool)

(assert (=> b!108427 m!122055))

(assert (=> d!29853 d!30001))

(declare-fun d!30003 () Bool)

(declare-fun e!70562 () Bool)

(assert (=> d!30003 e!70562))

(declare-fun res!53740 () Bool)

(assert (=> d!30003 (=> (not res!53740) (not e!70562))))

(declare-fun lt!55779 () ListLongMap!1591)

(assert (=> d!30003 (= res!53740 (contains!834 lt!55779 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun lt!55777 () List!1648)

(assert (=> d!30003 (= lt!55779 (ListLongMap!1592 lt!55777))))

(declare-fun lt!55778 () Unit!3339)

(declare-fun lt!55780 () Unit!3339)

(assert (=> d!30003 (= lt!55778 lt!55780)))

(assert (=> d!30003 (= (getValueByKey!156 lt!55777 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30003 (= lt!55780 (lemmaContainsTupThenGetReturnValue!74 lt!55777 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30003 (= lt!55777 (insertStrictlySorted!76 (toList!811 (+!148 lt!55250 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30003 (= (+!148 (+!148 lt!55250 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55779)))

(declare-fun b!108428 () Bool)

(declare-fun res!53741 () Bool)

(assert (=> b!108428 (=> (not res!53741) (not e!70562))))

(assert (=> b!108428 (= res!53741 (= (getValueByKey!156 (toList!811 lt!55779) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!108429 () Bool)

(assert (=> b!108429 (= e!70562 (contains!835 (toList!811 lt!55779) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(assert (= (and d!30003 res!53740) b!108428))

(assert (= (and b!108428 res!53741) b!108429))

(declare-fun m!122057 () Bool)

(assert (=> d!30003 m!122057))

(declare-fun m!122059 () Bool)

(assert (=> d!30003 m!122059))

(declare-fun m!122061 () Bool)

(assert (=> d!30003 m!122061))

(declare-fun m!122063 () Bool)

(assert (=> d!30003 m!122063))

(declare-fun m!122065 () Bool)

(assert (=> b!108428 m!122065))

(declare-fun m!122067 () Bool)

(assert (=> b!108429 m!122067))

(assert (=> d!29853 d!30003))

(declare-fun d!30005 () Bool)

(assert (=> d!30005 (= (+!148 (+!148 lt!55250 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (+!148 (+!148 lt!55250 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))

(assert (=> d!30005 true))

(declare-fun _$28!164 () Unit!3339)

(assert (=> d!30005 (= (choose!675 lt!55250 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) _$28!164)))

(declare-fun bs!4443 () Bool)

(assert (= bs!4443 d!30005))

(assert (=> bs!4443 m!121329))

(assert (=> bs!4443 m!121329))

(assert (=> bs!4443 m!121331))

(assert (=> bs!4443 m!121333))

(assert (=> bs!4443 m!121333))

(assert (=> bs!4443 m!121335))

(assert (=> d!29853 d!30005))

(declare-fun d!30007 () Bool)

(declare-fun e!70563 () Bool)

(assert (=> d!30007 e!70563))

(declare-fun res!53742 () Bool)

(assert (=> d!30007 (=> (not res!53742) (not e!70563))))

(declare-fun lt!55783 () ListLongMap!1591)

(assert (=> d!30007 (= res!53742 (contains!834 lt!55783 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun lt!55781 () List!1648)

(assert (=> d!30007 (= lt!55783 (ListLongMap!1592 lt!55781))))

(declare-fun lt!55782 () Unit!3339)

(declare-fun lt!55784 () Unit!3339)

(assert (=> d!30007 (= lt!55782 lt!55784)))

(assert (=> d!30007 (= (getValueByKey!156 lt!55781 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30007 (= lt!55784 (lemmaContainsTupThenGetReturnValue!74 lt!55781 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30007 (= lt!55781 (insertStrictlySorted!76 (toList!811 lt!55250) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30007 (= (+!148 lt!55250 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55783)))

(declare-fun b!108430 () Bool)

(declare-fun res!53743 () Bool)

(assert (=> b!108430 (=> (not res!53743) (not e!70563))))

(assert (=> b!108430 (= res!53743 (= (getValueByKey!156 (toList!811 lt!55783) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!108431 () Bool)

(assert (=> b!108431 (= e!70563 (contains!835 (toList!811 lt!55783) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(assert (= (and d!30007 res!53742) b!108430))

(assert (= (and b!108430 res!53743) b!108431))

(declare-fun m!122069 () Bool)

(assert (=> d!30007 m!122069))

(declare-fun m!122071 () Bool)

(assert (=> d!30007 m!122071))

(declare-fun m!122073 () Bool)

(assert (=> d!30007 m!122073))

(declare-fun m!122075 () Bool)

(assert (=> d!30007 m!122075))

(declare-fun m!122077 () Bool)

(assert (=> b!108430 m!122077))

(declare-fun m!122079 () Bool)

(assert (=> b!108431 m!122079))

(assert (=> d!29853 d!30007))

(declare-fun d!30009 () Bool)

(declare-fun e!70564 () Bool)

(assert (=> d!30009 e!70564))

(declare-fun res!53744 () Bool)

(assert (=> d!30009 (=> (not res!53744) (not e!70564))))

(declare-fun lt!55787 () ListLongMap!1591)

(assert (=> d!30009 (= res!53744 (contains!834 lt!55787 (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun lt!55785 () List!1648)

(assert (=> d!30009 (= lt!55787 (ListLongMap!1592 lt!55785))))

(declare-fun lt!55786 () Unit!3339)

(declare-fun lt!55788 () Unit!3339)

(assert (=> d!30009 (= lt!55786 lt!55788)))

(assert (=> d!30009 (= (getValueByKey!156 lt!55785 (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))) (Some!161 (_2!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(assert (=> d!30009 (= lt!55788 (lemmaContainsTupThenGetReturnValue!74 lt!55785 (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (_2!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(assert (=> d!30009 (= lt!55785 (insertStrictlySorted!76 (toList!811 e!70278) (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (_2!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(assert (=> d!30009 (= (+!148 e!70278 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) lt!55787)))

(declare-fun b!108432 () Bool)

(declare-fun res!53745 () Bool)

(assert (=> b!108432 (=> (not res!53745) (not e!70564))))

(assert (=> b!108432 (= res!53745 (= (getValueByKey!156 (toList!811 lt!55787) (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))) (Some!161 (_2!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))))

(declare-fun b!108433 () Bool)

(assert (=> b!108433 (= e!70564 (contains!835 (toList!811 lt!55787) (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (= (and d!30009 res!53744) b!108432))

(assert (= (and b!108432 res!53745) b!108433))

(declare-fun m!122081 () Bool)

(assert (=> d!30009 m!122081))

(declare-fun m!122083 () Bool)

(assert (=> d!30009 m!122083))

(declare-fun m!122085 () Bool)

(assert (=> d!30009 m!122085))

(declare-fun m!122087 () Bool)

(assert (=> d!30009 m!122087))

(declare-fun m!122089 () Bool)

(assert (=> b!108432 m!122089))

(declare-fun m!122091 () Bool)

(assert (=> b!108433 m!122091))

(assert (=> bm!11439 d!30009))

(assert (=> bm!11367 d!29981))

(declare-fun d!30011 () Bool)

(assert (=> d!30011 (= (apply!99 lt!55482 lt!55494) (get!1352 (getValueByKey!156 (toList!811 lt!55482) lt!55494)))))

(declare-fun bs!4444 () Bool)

(assert (= bs!4444 d!30011))

(declare-fun m!122093 () Bool)

(assert (=> bs!4444 m!122093))

(assert (=> bs!4444 m!122093))

(declare-fun m!122095 () Bool)

(assert (=> bs!4444 m!122095))

(assert (=> b!108012 d!30011))

(assert (=> b!108012 d!29851))

(declare-fun d!30013 () Bool)

(declare-fun e!70566 () Bool)

(assert (=> d!30013 e!70566))

(declare-fun res!53746 () Bool)

(assert (=> d!30013 (=> res!53746 e!70566)))

(declare-fun lt!55789 () Bool)

(assert (=> d!30013 (= res!53746 (not lt!55789))))

(declare-fun lt!55790 () Bool)

(assert (=> d!30013 (= lt!55789 lt!55790)))

(declare-fun lt!55791 () Unit!3339)

(declare-fun e!70565 () Unit!3339)

(assert (=> d!30013 (= lt!55791 e!70565)))

(declare-fun c!19078 () Bool)

(assert (=> d!30013 (= c!19078 lt!55790)))

(assert (=> d!30013 (= lt!55790 (containsKey!160 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55496))))

(assert (=> d!30013 (= (contains!834 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55496) lt!55789)))

(declare-fun b!108434 () Bool)

(declare-fun lt!55792 () Unit!3339)

(assert (=> b!108434 (= e!70565 lt!55792)))

(assert (=> b!108434 (= lt!55792 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55496))))

(assert (=> b!108434 (isDefined!110 (getValueByKey!156 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55496))))

(declare-fun b!108435 () Bool)

(declare-fun Unit!3365 () Unit!3339)

(assert (=> b!108435 (= e!70565 Unit!3365)))

(declare-fun b!108436 () Bool)

(assert (=> b!108436 (= e!70566 (isDefined!110 (getValueByKey!156 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55496)))))

(assert (= (and d!30013 c!19078) b!108434))

(assert (= (and d!30013 (not c!19078)) b!108435))

(assert (= (and d!30013 (not res!53746)) b!108436))

(declare-fun m!122097 () Bool)

(assert (=> d!30013 m!122097))

(declare-fun m!122099 () Bool)

(assert (=> b!108434 m!122099))

(declare-fun m!122101 () Bool)

(assert (=> b!108434 m!122101))

(assert (=> b!108434 m!122101))

(declare-fun m!122103 () Bool)

(assert (=> b!108434 m!122103))

(assert (=> b!108436 m!122101))

(assert (=> b!108436 m!122101))

(assert (=> b!108436 m!122103))

(assert (=> b!108012 d!30013))

(declare-fun d!30015 () Bool)

(declare-fun e!70567 () Bool)

(assert (=> d!30015 e!70567))

(declare-fun res!53747 () Bool)

(assert (=> d!30015 (=> (not res!53747) (not e!70567))))

(declare-fun lt!55795 () ListLongMap!1591)

(assert (=> d!30015 (= res!53747 (contains!834 lt!55795 (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun lt!55793 () List!1648)

(assert (=> d!30015 (= lt!55795 (ListLongMap!1592 lt!55793))))

(declare-fun lt!55794 () Unit!3339)

(declare-fun lt!55796 () Unit!3339)

(assert (=> d!30015 (= lt!55794 lt!55796)))

(assert (=> d!30015 (= (getValueByKey!156 lt!55793 (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30015 (= lt!55796 (lemmaContainsTupThenGetReturnValue!74 lt!55793 (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30015 (= lt!55793 (insertStrictlySorted!76 (toList!811 lt!55499) (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30015 (= (+!148 lt!55499 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55795)))

(declare-fun b!108437 () Bool)

(declare-fun res!53748 () Bool)

(assert (=> b!108437 (=> (not res!53748) (not e!70567))))

(assert (=> b!108437 (= res!53748 (= (getValueByKey!156 (toList!811 lt!55795) (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!108438 () Bool)

(assert (=> b!108438 (= e!70567 (contains!835 (toList!811 lt!55795) (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(assert (= (and d!30015 res!53747) b!108437))

(assert (= (and b!108437 res!53748) b!108438))

(declare-fun m!122105 () Bool)

(assert (=> d!30015 m!122105))

(declare-fun m!122107 () Bool)

(assert (=> d!30015 m!122107))

(declare-fun m!122109 () Bool)

(assert (=> d!30015 m!122109))

(declare-fun m!122111 () Bool)

(assert (=> d!30015 m!122111))

(declare-fun m!122113 () Bool)

(assert (=> b!108437 m!122113))

(declare-fun m!122115 () Bool)

(assert (=> b!108438 m!122115))

(assert (=> b!108012 d!30015))

(declare-fun d!30017 () Bool)

(assert (=> d!30017 (= (apply!99 (+!148 lt!55482 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55494) (apply!99 lt!55482 lt!55494))))

(declare-fun lt!55799 () Unit!3339)

(declare-fun choose!684 (ListLongMap!1591 (_ BitVec 64) V!3235 (_ BitVec 64)) Unit!3339)

(assert (=> d!30017 (= lt!55799 (choose!684 lt!55482 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) lt!55494))))

(declare-fun e!70570 () Bool)

(assert (=> d!30017 e!70570))

(declare-fun res!53751 () Bool)

(assert (=> d!30017 (=> (not res!53751) (not e!70570))))

(assert (=> d!30017 (= res!53751 (contains!834 lt!55482 lt!55494))))

(assert (=> d!30017 (= (addApplyDifferent!75 lt!55482 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) lt!55494) lt!55799)))

(declare-fun b!108442 () Bool)

(assert (=> b!108442 (= e!70570 (not (= lt!55494 lt!55484)))))

(assert (= (and d!30017 res!53751) b!108442))

(assert (=> d!30017 m!121471))

(declare-fun m!122117 () Bool)

(assert (=> d!30017 m!122117))

(assert (=> d!30017 m!121459))

(assert (=> d!30017 m!121459))

(assert (=> d!30017 m!121481))

(declare-fun m!122119 () Bool)

(assert (=> d!30017 m!122119))

(assert (=> b!108012 d!30017))

(declare-fun d!30019 () Bool)

(assert (=> d!30019 (= (apply!99 (+!148 lt!55480 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55487) (get!1352 (getValueByKey!156 (toList!811 (+!148 lt!55480 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55487)))))

(declare-fun bs!4445 () Bool)

(assert (= bs!4445 d!30019))

(declare-fun m!122121 () Bool)

(assert (=> bs!4445 m!122121))

(assert (=> bs!4445 m!122121))

(declare-fun m!122123 () Bool)

(assert (=> bs!4445 m!122123))

(assert (=> b!108012 d!30019))

(declare-fun d!30021 () Bool)

(assert (=> d!30021 (= (apply!99 (+!148 lt!55480 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55487) (apply!99 lt!55480 lt!55487))))

(declare-fun lt!55800 () Unit!3339)

(assert (=> d!30021 (= lt!55800 (choose!684 lt!55480 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))) lt!55487))))

(declare-fun e!70571 () Bool)

(assert (=> d!30021 e!70571))

(declare-fun res!53752 () Bool)

(assert (=> d!30021 (=> (not res!53752) (not e!70571))))

(assert (=> d!30021 (= res!53752 (contains!834 lt!55480 lt!55487))))

(assert (=> d!30021 (= (addApplyDifferent!75 lt!55480 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))) lt!55487) lt!55800)))

(declare-fun b!108443 () Bool)

(assert (=> b!108443 (= e!70571 (not (= lt!55487 lt!55491)))))

(assert (= (and d!30021 res!53752) b!108443))

(assert (=> d!30021 m!121487))

(declare-fun m!122125 () Bool)

(assert (=> d!30021 m!122125))

(assert (=> d!30021 m!121463))

(assert (=> d!30021 m!121463))

(assert (=> d!30021 m!121477))

(declare-fun m!122127 () Bool)

(assert (=> d!30021 m!122127))

(assert (=> b!108012 d!30021))

(declare-fun d!30023 () Bool)

(assert (=> d!30023 (= (apply!99 lt!55499 lt!55493) (get!1352 (getValueByKey!156 (toList!811 lt!55499) lt!55493)))))

(declare-fun bs!4446 () Bool)

(assert (= bs!4446 d!30023))

(declare-fun m!122129 () Bool)

(assert (=> bs!4446 m!122129))

(assert (=> bs!4446 m!122129))

(declare-fun m!122131 () Bool)

(assert (=> bs!4446 m!122131))

(assert (=> b!108012 d!30023))

(declare-fun d!30025 () Bool)

(declare-fun e!70572 () Bool)

(assert (=> d!30025 e!70572))

(declare-fun res!53753 () Bool)

(assert (=> d!30025 (=> (not res!53753) (not e!70572))))

(declare-fun lt!55803 () ListLongMap!1591)

(assert (=> d!30025 (= res!53753 (contains!834 lt!55803 (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun lt!55801 () List!1648)

(assert (=> d!30025 (= lt!55803 (ListLongMap!1592 lt!55801))))

(declare-fun lt!55802 () Unit!3339)

(declare-fun lt!55804 () Unit!3339)

(assert (=> d!30025 (= lt!55802 lt!55804)))

(assert (=> d!30025 (= (getValueByKey!156 lt!55801 (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30025 (= lt!55804 (lemmaContainsTupThenGetReturnValue!74 lt!55801 (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30025 (= lt!55801 (insertStrictlySorted!76 (toList!811 lt!55482) (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30025 (= (+!148 lt!55482 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55803)))

(declare-fun b!108444 () Bool)

(declare-fun res!53754 () Bool)

(assert (=> b!108444 (=> (not res!53754) (not e!70572))))

(assert (=> b!108444 (= res!53754 (= (getValueByKey!156 (toList!811 lt!55803) (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!108445 () Bool)

(assert (=> b!108445 (= e!70572 (contains!835 (toList!811 lt!55803) (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(assert (= (and d!30025 res!53753) b!108444))

(assert (= (and b!108444 res!53754) b!108445))

(declare-fun m!122133 () Bool)

(assert (=> d!30025 m!122133))

(declare-fun m!122135 () Bool)

(assert (=> d!30025 m!122135))

(declare-fun m!122137 () Bool)

(assert (=> d!30025 m!122137))

(declare-fun m!122139 () Bool)

(assert (=> d!30025 m!122139))

(declare-fun m!122141 () Bool)

(assert (=> b!108444 m!122141))

(declare-fun m!122143 () Bool)

(assert (=> b!108445 m!122143))

(assert (=> b!108012 d!30025))

(declare-fun d!30027 () Bool)

(declare-fun e!70573 () Bool)

(assert (=> d!30027 e!70573))

(declare-fun res!53755 () Bool)

(assert (=> d!30027 (=> (not res!53755) (not e!70573))))

(declare-fun lt!55807 () ListLongMap!1591)

(assert (=> d!30027 (= res!53755 (contains!834 lt!55807 (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun lt!55805 () List!1648)

(assert (=> d!30027 (= lt!55807 (ListLongMap!1592 lt!55805))))

(declare-fun lt!55806 () Unit!3339)

(declare-fun lt!55808 () Unit!3339)

(assert (=> d!30027 (= lt!55806 lt!55808)))

(assert (=> d!30027 (= (getValueByKey!156 lt!55805 (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30027 (= lt!55808 (lemmaContainsTupThenGetReturnValue!74 lt!55805 (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30027 (= lt!55805 (insertStrictlySorted!76 (toList!811 lt!55480) (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30027 (= (+!148 lt!55480 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55807)))

(declare-fun b!108446 () Bool)

(declare-fun res!53756 () Bool)

(assert (=> b!108446 (=> (not res!53756) (not e!70573))))

(assert (=> b!108446 (= res!53756 (= (getValueByKey!156 (toList!811 lt!55807) (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!108447 () Bool)

(assert (=> b!108447 (= e!70573 (contains!835 (toList!811 lt!55807) (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(assert (= (and d!30027 res!53755) b!108446))

(assert (= (and b!108446 res!53756) b!108447))

(declare-fun m!122145 () Bool)

(assert (=> d!30027 m!122145))

(declare-fun m!122147 () Bool)

(assert (=> d!30027 m!122147))

(declare-fun m!122149 () Bool)

(assert (=> d!30027 m!122149))

(declare-fun m!122151 () Bool)

(assert (=> d!30027 m!122151))

(declare-fun m!122153 () Bool)

(assert (=> b!108446 m!122153))

(declare-fun m!122155 () Bool)

(assert (=> b!108447 m!122155))

(assert (=> b!108012 d!30027))

(declare-fun d!30029 () Bool)

(declare-fun e!70574 () Bool)

(assert (=> d!30029 e!70574))

(declare-fun res!53757 () Bool)

(assert (=> d!30029 (=> (not res!53757) (not e!70574))))

(declare-fun lt!55811 () ListLongMap!1591)

(assert (=> d!30029 (= res!53757 (contains!834 lt!55811 (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun lt!55809 () List!1648)

(assert (=> d!30029 (= lt!55811 (ListLongMap!1592 lt!55809))))

(declare-fun lt!55810 () Unit!3339)

(declare-fun lt!55812 () Unit!3339)

(assert (=> d!30029 (= lt!55810 lt!55812)))

(assert (=> d!30029 (= (getValueByKey!156 lt!55809 (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30029 (= lt!55812 (lemmaContainsTupThenGetReturnValue!74 lt!55809 (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30029 (= lt!55809 (insertStrictlySorted!76 (toList!811 lt!55497) (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30029 (= (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55811)))

(declare-fun b!108448 () Bool)

(declare-fun res!53758 () Bool)

(assert (=> b!108448 (=> (not res!53758) (not e!70574))))

(assert (=> b!108448 (= res!53758 (= (getValueByKey!156 (toList!811 lt!55811) (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!108449 () Bool)

(assert (=> b!108449 (= e!70574 (contains!835 (toList!811 lt!55811) (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(assert (= (and d!30029 res!53757) b!108448))

(assert (= (and b!108448 res!53758) b!108449))

(declare-fun m!122157 () Bool)

(assert (=> d!30029 m!122157))

(declare-fun m!122159 () Bool)

(assert (=> d!30029 m!122159))

(declare-fun m!122161 () Bool)

(assert (=> d!30029 m!122161))

(declare-fun m!122163 () Bool)

(assert (=> d!30029 m!122163))

(declare-fun m!122165 () Bool)

(assert (=> b!108448 m!122165))

(declare-fun m!122167 () Bool)

(assert (=> b!108449 m!122167))

(assert (=> b!108012 d!30029))

(declare-fun d!30031 () Bool)

(assert (=> d!30031 (contains!834 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55496)))

(declare-fun lt!55815 () Unit!3339)

(declare-fun choose!685 (ListLongMap!1591 (_ BitVec 64) V!3235 (_ BitVec 64)) Unit!3339)

(assert (=> d!30031 (= lt!55815 (choose!685 lt!55497 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) lt!55496))))

(assert (=> d!30031 (contains!834 lt!55497 lt!55496)))

(assert (=> d!30031 (= (addStillContains!75 lt!55497 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) lt!55496) lt!55815)))

(declare-fun bs!4447 () Bool)

(assert (= bs!4447 d!30031))

(assert (=> bs!4447 m!121465))

(assert (=> bs!4447 m!121465))

(assert (=> bs!4447 m!121467))

(declare-fun m!122169 () Bool)

(assert (=> bs!4447 m!122169))

(declare-fun m!122171 () Bool)

(assert (=> bs!4447 m!122171))

(assert (=> b!108012 d!30031))

(declare-fun d!30033 () Bool)

(assert (=> d!30033 (= (apply!99 (+!148 lt!55499 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55493) (get!1352 (getValueByKey!156 (toList!811 (+!148 lt!55499 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55493)))))

(declare-fun bs!4448 () Bool)

(assert (= bs!4448 d!30033))

(declare-fun m!122173 () Bool)

(assert (=> bs!4448 m!122173))

(assert (=> bs!4448 m!122173))

(declare-fun m!122175 () Bool)

(assert (=> bs!4448 m!122175))

(assert (=> b!108012 d!30033))

(declare-fun d!30035 () Bool)

(assert (=> d!30035 (= (apply!99 (+!148 lt!55499 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55493) (apply!99 lt!55499 lt!55493))))

(declare-fun lt!55816 () Unit!3339)

(assert (=> d!30035 (= lt!55816 (choose!684 lt!55499 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))) lt!55493))))

(declare-fun e!70575 () Bool)

(assert (=> d!30035 e!70575))

(declare-fun res!53759 () Bool)

(assert (=> d!30035 (=> (not res!53759) (not e!70575))))

(assert (=> d!30035 (= res!53759 (contains!834 lt!55499 lt!55493))))

(assert (=> d!30035 (= (addApplyDifferent!75 lt!55499 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))) lt!55493) lt!55816)))

(declare-fun b!108451 () Bool)

(assert (=> b!108451 (= e!70575 (not (= lt!55493 lt!55483)))))

(assert (= (and d!30035 res!53759) b!108451))

(assert (=> d!30035 m!121461))

(declare-fun m!122177 () Bool)

(assert (=> d!30035 m!122177))

(assert (=> d!30035 m!121469))

(assert (=> d!30035 m!121469))

(assert (=> d!30035 m!121475))

(declare-fun m!122179 () Bool)

(assert (=> d!30035 m!122179))

(assert (=> b!108012 d!30035))

(declare-fun d!30037 () Bool)

(assert (=> d!30037 (= (apply!99 (+!148 lt!55482 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55494) (get!1352 (getValueByKey!156 (toList!811 (+!148 lt!55482 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55494)))))

(declare-fun bs!4449 () Bool)

(assert (= bs!4449 d!30037))

(declare-fun m!122181 () Bool)

(assert (=> bs!4449 m!122181))

(assert (=> bs!4449 m!122181))

(declare-fun m!122183 () Bool)

(assert (=> bs!4449 m!122183))

(assert (=> b!108012 d!30037))

(declare-fun d!30039 () Bool)

(assert (=> d!30039 (= (apply!99 lt!55480 lt!55487) (get!1352 (getValueByKey!156 (toList!811 lt!55480) lt!55487)))))

(declare-fun bs!4450 () Bool)

(assert (= bs!4450 d!30039))

(declare-fun m!122185 () Bool)

(assert (=> bs!4450 m!122185))

(assert (=> bs!4450 m!122185))

(declare-fun m!122187 () Bool)

(assert (=> bs!4450 m!122187))

(assert (=> b!108012 d!30039))

(declare-fun b!108452 () Bool)

(declare-fun e!70576 () Bool)

(declare-fun call!11526 () Bool)

(assert (=> b!108452 (= e!70576 call!11526)))

(declare-fun b!108453 () Bool)

(assert (=> b!108453 (= e!70576 call!11526)))

(declare-fun bm!11523 () Bool)

(declare-fun c!19079 () Bool)

(assert (=> bm!11523 (= call!11526 (arrayNoDuplicates!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19079 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18971 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644) Nil!1644)) (ite c!18971 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644) Nil!1644))))))

(declare-fun d!30041 () Bool)

(declare-fun res!53761 () Bool)

(declare-fun e!70577 () Bool)

(assert (=> d!30041 (=> res!53761 e!70577)))

(assert (=> d!30041 (= res!53761 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(assert (=> d!30041 (= (arrayNoDuplicates!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!18971 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644) Nil!1644)) e!70577)))

(declare-fun b!108454 () Bool)

(declare-fun e!70578 () Bool)

(assert (=> b!108454 (= e!70578 (contains!836 (ite c!18971 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644) Nil!1644) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!108455 () Bool)

(declare-fun e!70579 () Bool)

(assert (=> b!108455 (= e!70577 e!70579)))

(declare-fun res!53760 () Bool)

(assert (=> b!108455 (=> (not res!53760) (not e!70579))))

(assert (=> b!108455 (= res!53760 (not e!70578))))

(declare-fun res!53762 () Bool)

(assert (=> b!108455 (=> (not res!53762) (not e!70578))))

(assert (=> b!108455 (= res!53762 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!108456 () Bool)

(assert (=> b!108456 (= e!70579 e!70576)))

(assert (=> b!108456 (= c!19079 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!30041 (not res!53761)) b!108455))

(assert (= (and b!108455 res!53762) b!108454))

(assert (= (and b!108455 res!53760) b!108456))

(assert (= (and b!108456 c!19079) b!108452))

(assert (= (and b!108456 (not c!19079)) b!108453))

(assert (= (or b!108452 b!108453) bm!11523))

(declare-fun m!122189 () Bool)

(assert (=> bm!11523 m!122189))

(declare-fun m!122191 () Bool)

(assert (=> bm!11523 m!122191))

(assert (=> b!108454 m!122189))

(assert (=> b!108454 m!122189))

(declare-fun m!122193 () Bool)

(assert (=> b!108454 m!122193))

(assert (=> b!108455 m!122189))

(assert (=> b!108455 m!122189))

(declare-fun m!122195 () Bool)

(assert (=> b!108455 m!122195))

(assert (=> b!108456 m!122189))

(assert (=> b!108456 m!122189))

(assert (=> b!108456 m!122195))

(assert (=> bm!11463 d!30041))

(declare-fun d!30043 () Bool)

(declare-fun e!70581 () Bool)

(assert (=> d!30043 e!70581))

(declare-fun res!53763 () Bool)

(assert (=> d!30043 (=> res!53763 e!70581)))

(declare-fun lt!55817 () Bool)

(assert (=> d!30043 (= res!53763 (not lt!55817))))

(declare-fun lt!55818 () Bool)

(assert (=> d!30043 (= lt!55817 lt!55818)))

(declare-fun lt!55819 () Unit!3339)

(declare-fun e!70580 () Unit!3339)

(assert (=> d!30043 (= lt!55819 e!70580)))

(declare-fun c!19080 () Bool)

(assert (=> d!30043 (= c!19080 lt!55818)))

(assert (=> d!30043 (= lt!55818 (containsKey!160 (toList!811 lt!55479) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30043 (= (contains!834 lt!55479 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55817)))

(declare-fun b!108457 () Bool)

(declare-fun lt!55820 () Unit!3339)

(assert (=> b!108457 (= e!70580 lt!55820)))

(assert (=> b!108457 (= lt!55820 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55479) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108457 (isDefined!110 (getValueByKey!156 (toList!811 lt!55479) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108458 () Bool)

(declare-fun Unit!3366 () Unit!3339)

(assert (=> b!108458 (= e!70580 Unit!3366)))

(declare-fun b!108459 () Bool)

(assert (=> b!108459 (= e!70581 (isDefined!110 (getValueByKey!156 (toList!811 lt!55479) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30043 c!19080) b!108457))

(assert (= (and d!30043 (not c!19080)) b!108458))

(assert (= (and d!30043 (not res!53763)) b!108459))

(declare-fun m!122197 () Bool)

(assert (=> d!30043 m!122197))

(declare-fun m!122199 () Bool)

(assert (=> b!108457 m!122199))

(declare-fun m!122201 () Bool)

(assert (=> b!108457 m!122201))

(assert (=> b!108457 m!122201))

(declare-fun m!122203 () Bool)

(assert (=> b!108457 m!122203))

(assert (=> b!108459 m!122201))

(assert (=> b!108459 m!122201))

(assert (=> b!108459 m!122203))

(assert (=> bm!11458 d!30043))

(declare-fun d!30045 () Bool)

(assert (=> d!30045 (= (+!148 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55416 (zeroValue!2479 newMap!16) lt!55248 #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55823 () Unit!3339)

(declare-fun choose!686 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 V!3235 Int) Unit!3339)

(assert (=> d!30045 (= lt!55823 (choose!686 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) lt!55416 (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) lt!55248 (defaultEntry!2606 newMap!16)))))

(assert (=> d!30045 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30045 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!48 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) lt!55416 (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) lt!55248 (defaultEntry!2606 newMap!16)) lt!55823)))

(declare-fun bs!4451 () Bool)

(assert (= bs!4451 d!30045))

(declare-fun m!122205 () Bool)

(assert (=> bs!4451 m!122205))

(assert (=> bs!4451 m!121407))

(declare-fun m!122207 () Bool)

(assert (=> bs!4451 m!122207))

(assert (=> bs!4451 m!121407))

(assert (=> bs!4451 m!121521))

(declare-fun m!122209 () Bool)

(assert (=> bs!4451 m!122209))

(assert (=> b!107925 d!30045))

(declare-fun d!30047 () Bool)

(assert (=> d!30047 (= (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (and (not (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108059 d!30047))

(declare-fun d!30049 () Bool)

(declare-fun e!70583 () Bool)

(assert (=> d!30049 e!70583))

(declare-fun res!53764 () Bool)

(assert (=> d!30049 (=> res!53764 e!70583)))

(declare-fun lt!55824 () Bool)

(assert (=> d!30049 (= res!53764 (not lt!55824))))

(declare-fun lt!55825 () Bool)

(assert (=> d!30049 (= lt!55824 lt!55825)))

(declare-fun lt!55826 () Unit!3339)

(declare-fun e!70582 () Unit!3339)

(assert (=> d!30049 (= lt!55826 e!70582)))

(declare-fun c!19081 () Bool)

(assert (=> d!30049 (= c!19081 lt!55825)))

(assert (=> d!30049 (= lt!55825 (containsKey!160 (toList!811 lt!55331) (_1!1221 lt!55252)))))

(assert (=> d!30049 (= (contains!834 lt!55331 (_1!1221 lt!55252)) lt!55824)))

(declare-fun b!108460 () Bool)

(declare-fun lt!55827 () Unit!3339)

(assert (=> b!108460 (= e!70582 lt!55827)))

(assert (=> b!108460 (= lt!55827 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55331) (_1!1221 lt!55252)))))

(assert (=> b!108460 (isDefined!110 (getValueByKey!156 (toList!811 lt!55331) (_1!1221 lt!55252)))))

(declare-fun b!108461 () Bool)

(declare-fun Unit!3367 () Unit!3339)

(assert (=> b!108461 (= e!70582 Unit!3367)))

(declare-fun b!108462 () Bool)

(assert (=> b!108462 (= e!70583 (isDefined!110 (getValueByKey!156 (toList!811 lt!55331) (_1!1221 lt!55252))))))

(assert (= (and d!30049 c!19081) b!108460))

(assert (= (and d!30049 (not c!19081)) b!108461))

(assert (= (and d!30049 (not res!53764)) b!108462))

(declare-fun m!122211 () Bool)

(assert (=> d!30049 m!122211))

(declare-fun m!122213 () Bool)

(assert (=> b!108460 m!122213))

(assert (=> b!108460 m!121347))

(assert (=> b!108460 m!121347))

(declare-fun m!122215 () Bool)

(assert (=> b!108460 m!122215))

(assert (=> b!108462 m!121347))

(assert (=> b!108462 m!121347))

(assert (=> b!108462 m!122215))

(assert (=> d!29855 d!30049))

(declare-fun d!30051 () Bool)

(declare-fun c!19082 () Bool)

(assert (=> d!30051 (= c!19082 (and ((_ is Cons!1644) lt!55329) (= (_1!1221 (h!2242 lt!55329)) (_1!1221 lt!55252))))))

(declare-fun e!70584 () Option!162)

(assert (=> d!30051 (= (getValueByKey!156 lt!55329 (_1!1221 lt!55252)) e!70584)))

(declare-fun b!108465 () Bool)

(declare-fun e!70585 () Option!162)

(assert (=> b!108465 (= e!70585 (getValueByKey!156 (t!5776 lt!55329) (_1!1221 lt!55252)))))

(declare-fun b!108466 () Bool)

(assert (=> b!108466 (= e!70585 None!160)))

(declare-fun b!108464 () Bool)

(assert (=> b!108464 (= e!70584 e!70585)))

(declare-fun c!19083 () Bool)

(assert (=> b!108464 (= c!19083 (and ((_ is Cons!1644) lt!55329) (not (= (_1!1221 (h!2242 lt!55329)) (_1!1221 lt!55252)))))))

(declare-fun b!108463 () Bool)

(assert (=> b!108463 (= e!70584 (Some!161 (_2!1221 (h!2242 lt!55329))))))

(assert (= (and d!30051 c!19082) b!108463))

(assert (= (and d!30051 (not c!19082)) b!108464))

(assert (= (and b!108464 c!19083) b!108465))

(assert (= (and b!108464 (not c!19083)) b!108466))

(declare-fun m!122217 () Bool)

(assert (=> b!108465 m!122217))

(assert (=> d!29855 d!30051))

(declare-fun d!30053 () Bool)

(assert (=> d!30053 (= (getValueByKey!156 lt!55329 (_1!1221 lt!55252)) (Some!161 (_2!1221 lt!55252)))))

(declare-fun lt!55828 () Unit!3339)

(assert (=> d!30053 (= lt!55828 (choose!680 lt!55329 (_1!1221 lt!55252) (_2!1221 lt!55252)))))

(declare-fun e!70586 () Bool)

(assert (=> d!30053 e!70586))

(declare-fun res!53765 () Bool)

(assert (=> d!30053 (=> (not res!53765) (not e!70586))))

(assert (=> d!30053 (= res!53765 (isStrictlySorted!305 lt!55329))))

(assert (=> d!30053 (= (lemmaContainsTupThenGetReturnValue!74 lt!55329 (_1!1221 lt!55252) (_2!1221 lt!55252)) lt!55828)))

(declare-fun b!108467 () Bool)

(declare-fun res!53766 () Bool)

(assert (=> b!108467 (=> (not res!53766) (not e!70586))))

(assert (=> b!108467 (= res!53766 (containsKey!160 lt!55329 (_1!1221 lt!55252)))))

(declare-fun b!108468 () Bool)

(assert (=> b!108468 (= e!70586 (contains!835 lt!55329 (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))))))

(assert (= (and d!30053 res!53765) b!108467))

(assert (= (and b!108467 res!53766) b!108468))

(assert (=> d!30053 m!121341))

(declare-fun m!122219 () Bool)

(assert (=> d!30053 m!122219))

(declare-fun m!122221 () Bool)

(assert (=> d!30053 m!122221))

(declare-fun m!122223 () Bool)

(assert (=> b!108467 m!122223))

(declare-fun m!122225 () Bool)

(assert (=> b!108468 m!122225))

(assert (=> d!29855 d!30053))

(declare-fun b!108469 () Bool)

(declare-fun c!19084 () Bool)

(assert (=> b!108469 (= c!19084 (and ((_ is Cons!1644) (toList!811 lt!55250)) (bvsgt (_1!1221 (h!2242 (toList!811 lt!55250))) (_1!1221 lt!55252))))))

(declare-fun e!70587 () List!1648)

(declare-fun e!70588 () List!1648)

(assert (=> b!108469 (= e!70587 e!70588)))

(declare-fun b!108470 () Bool)

(declare-fun e!70589 () List!1648)

(declare-fun call!11528 () List!1648)

(assert (=> b!108470 (= e!70589 call!11528)))

(declare-fun bm!11524 () Bool)

(declare-fun e!70591 () List!1648)

(declare-fun c!19085 () Bool)

(assert (=> bm!11524 (= call!11528 ($colon$colon!81 e!70591 (ite c!19085 (h!2242 (toList!811 lt!55250)) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252)))))))

(declare-fun c!19086 () Bool)

(assert (=> bm!11524 (= c!19086 c!19085)))

(declare-fun b!108471 () Bool)

(declare-fun call!11527 () List!1648)

(assert (=> b!108471 (= e!70588 call!11527)))

(declare-fun b!108472 () Bool)

(declare-fun call!11529 () List!1648)

(assert (=> b!108472 (= e!70587 call!11529)))

(declare-fun d!30055 () Bool)

(declare-fun e!70590 () Bool)

(assert (=> d!30055 e!70590))

(declare-fun res!53767 () Bool)

(assert (=> d!30055 (=> (not res!53767) (not e!70590))))

(declare-fun lt!55829 () List!1648)

(assert (=> d!30055 (= res!53767 (isStrictlySorted!305 lt!55829))))

(assert (=> d!30055 (= lt!55829 e!70589)))

(assert (=> d!30055 (= c!19085 (and ((_ is Cons!1644) (toList!811 lt!55250)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55250))) (_1!1221 lt!55252))))))

(assert (=> d!30055 (isStrictlySorted!305 (toList!811 lt!55250))))

(assert (=> d!30055 (= (insertStrictlySorted!76 (toList!811 lt!55250) (_1!1221 lt!55252) (_2!1221 lt!55252)) lt!55829)))

(declare-fun b!108473 () Bool)

(assert (=> b!108473 (= e!70589 e!70587)))

(declare-fun c!19087 () Bool)

(assert (=> b!108473 (= c!19087 (and ((_ is Cons!1644) (toList!811 lt!55250)) (= (_1!1221 (h!2242 (toList!811 lt!55250))) (_1!1221 lt!55252))))))

(declare-fun b!108474 () Bool)

(declare-fun res!53768 () Bool)

(assert (=> b!108474 (=> (not res!53768) (not e!70590))))

(assert (=> b!108474 (= res!53768 (containsKey!160 lt!55829 (_1!1221 lt!55252)))))

(declare-fun bm!11525 () Bool)

(assert (=> bm!11525 (= call!11529 call!11528)))

(declare-fun bm!11526 () Bool)

(assert (=> bm!11526 (= call!11527 call!11529)))

(declare-fun b!108475 () Bool)

(assert (=> b!108475 (= e!70591 (insertStrictlySorted!76 (t!5776 (toList!811 lt!55250)) (_1!1221 lt!55252) (_2!1221 lt!55252)))))

(declare-fun b!108476 () Bool)

(assert (=> b!108476 (= e!70588 call!11527)))

(declare-fun b!108477 () Bool)

(assert (=> b!108477 (= e!70590 (contains!835 lt!55829 (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))))))

(declare-fun b!108478 () Bool)

(assert (=> b!108478 (= e!70591 (ite c!19087 (t!5776 (toList!811 lt!55250)) (ite c!19084 (Cons!1644 (h!2242 (toList!811 lt!55250)) (t!5776 (toList!811 lt!55250))) Nil!1645)))))

(assert (= (and d!30055 c!19085) b!108470))

(assert (= (and d!30055 (not c!19085)) b!108473))

(assert (= (and b!108473 c!19087) b!108472))

(assert (= (and b!108473 (not c!19087)) b!108469))

(assert (= (and b!108469 c!19084) b!108476))

(assert (= (and b!108469 (not c!19084)) b!108471))

(assert (= (or b!108476 b!108471) bm!11526))

(assert (= (or b!108472 bm!11526) bm!11525))

(assert (= (or b!108470 bm!11525) bm!11524))

(assert (= (and bm!11524 c!19086) b!108475))

(assert (= (and bm!11524 (not c!19086)) b!108478))

(assert (= (and d!30055 res!53767) b!108474))

(assert (= (and b!108474 res!53768) b!108477))

(declare-fun m!122227 () Bool)

(assert (=> b!108477 m!122227))

(declare-fun m!122229 () Bool)

(assert (=> b!108474 m!122229))

(declare-fun m!122231 () Bool)

(assert (=> bm!11524 m!122231))

(declare-fun m!122233 () Bool)

(assert (=> d!30055 m!122233))

(assert (=> d!30055 m!121775))

(declare-fun m!122235 () Bool)

(assert (=> b!108475 m!122235))

(assert (=> d!29855 d!30055))

(declare-fun d!30057 () Bool)

(assert (=> d!30057 (= (inRange!0 (ite c!18935 (ite c!18937 (index!3230 lt!55417) (ite c!18933 (index!3229 lt!55427) (index!3232 lt!55427))) (ite c!18931 (index!3230 lt!55428) (ite c!18939 (index!3229 lt!55412) (index!3232 lt!55412)))) (mask!6764 newMap!16)) (and (bvsge (ite c!18935 (ite c!18937 (index!3230 lt!55417) (ite c!18933 (index!3229 lt!55427) (index!3232 lt!55427))) (ite c!18931 (index!3230 lt!55428) (ite c!18939 (index!3229 lt!55412) (index!3232 lt!55412)))) #b00000000000000000000000000000000) (bvslt (ite c!18935 (ite c!18937 (index!3230 lt!55417) (ite c!18933 (index!3229 lt!55427) (index!3232 lt!55427))) (ite c!18931 (index!3230 lt!55428) (ite c!18939 (index!3229 lt!55412) (index!3232 lt!55412)))) (bvadd (mask!6764 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11420 d!30057))

(assert (=> b!108060 d!30047))

(declare-fun d!30059 () Bool)

(declare-fun res!53773 () Bool)

(declare-fun e!70596 () Bool)

(assert (=> d!30059 (=> res!53773 e!70596)))

(assert (=> d!30059 (= res!53773 (and ((_ is Cons!1644) (toList!811 lt!55247)) (= (_1!1221 (h!2242 (toList!811 lt!55247))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!30059 (= (containsKey!160 (toList!811 lt!55247) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) e!70596)))

(declare-fun b!108483 () Bool)

(declare-fun e!70597 () Bool)

(assert (=> b!108483 (= e!70596 e!70597)))

(declare-fun res!53774 () Bool)

(assert (=> b!108483 (=> (not res!53774) (not e!70597))))

(assert (=> b!108483 (= res!53774 (and (or (not ((_ is Cons!1644) (toList!811 lt!55247))) (bvsle (_1!1221 (h!2242 (toList!811 lt!55247))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))) ((_ is Cons!1644) (toList!811 lt!55247)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55247))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))))

(declare-fun b!108484 () Bool)

(assert (=> b!108484 (= e!70597 (containsKey!160 (t!5776 (toList!811 lt!55247)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30059 (not res!53773)) b!108483))

(assert (= (and b!108483 res!53774) b!108484))

(assert (=> b!108484 m!121177))

(declare-fun m!122237 () Bool)

(assert (=> b!108484 m!122237))

(assert (=> d!29865 d!30059))

(assert (=> d!29871 d!29895))

(declare-fun d!30061 () Bool)

(declare-fun res!53775 () Bool)

(declare-fun e!70598 () Bool)

(assert (=> d!30061 (=> res!53775 e!70598)))

(assert (=> d!30061 (= res!53775 (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30061 (= (arrayContainsKey!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!70598)))

(declare-fun b!108485 () Bool)

(declare-fun e!70599 () Bool)

(assert (=> b!108485 (= e!70598 e!70599)))

(declare-fun res!53776 () Bool)

(assert (=> b!108485 (=> (not res!53776) (not e!70599))))

(assert (=> b!108485 (= res!53776 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!108486 () Bool)

(assert (=> b!108486 (= e!70599 (arrayContainsKey!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!30061 (not res!53775)) b!108485))

(assert (= (and b!108485 res!53776) b!108486))

(assert (=> d!30061 m!121871))

(assert (=> b!108486 m!121177))

(declare-fun m!122239 () Bool)

(assert (=> b!108486 m!122239))

(assert (=> b!108039 d!30061))

(assert (=> bm!11422 d!29871))

(assert (=> b!108016 d!29919))

(declare-fun d!30063 () Bool)

(declare-fun e!70601 () Bool)

(assert (=> d!30063 e!70601))

(declare-fun res!53777 () Bool)

(assert (=> d!30063 (=> res!53777 e!70601)))

(declare-fun lt!55830 () Bool)

(assert (=> d!30063 (= res!53777 (not lt!55830))))

(declare-fun lt!55831 () Bool)

(assert (=> d!30063 (= lt!55830 lt!55831)))

(declare-fun lt!55832 () Unit!3339)

(declare-fun e!70600 () Unit!3339)

(assert (=> d!30063 (= lt!55832 e!70600)))

(declare-fun c!19088 () Bool)

(assert (=> d!30063 (= c!19088 lt!55831)))

(assert (=> d!30063 (= lt!55831 (containsKey!160 (toList!811 call!11428) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30063 (= (contains!834 call!11428 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) lt!55830)))

(declare-fun b!108487 () Bool)

(declare-fun lt!55833 () Unit!3339)

(assert (=> b!108487 (= e!70600 lt!55833)))

(assert (=> b!108487 (= lt!55833 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 call!11428) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!108487 (isDefined!110 (getValueByKey!156 (toList!811 call!11428) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108488 () Bool)

(declare-fun Unit!3368 () Unit!3339)

(assert (=> b!108488 (= e!70600 Unit!3368)))

(declare-fun b!108489 () Bool)

(assert (=> b!108489 (= e!70601 (isDefined!110 (getValueByKey!156 (toList!811 call!11428) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))))

(assert (= (and d!30063 c!19088) b!108487))

(assert (= (and d!30063 (not c!19088)) b!108488))

(assert (= (and d!30063 (not res!53777)) b!108489))

(assert (=> d!30063 m!121177))

(declare-fun m!122241 () Bool)

(assert (=> d!30063 m!122241))

(assert (=> b!108487 m!121177))

(declare-fun m!122243 () Bool)

(assert (=> b!108487 m!122243))

(assert (=> b!108487 m!121177))

(declare-fun m!122245 () Bool)

(assert (=> b!108487 m!122245))

(assert (=> b!108487 m!122245))

(declare-fun m!122247 () Bool)

(assert (=> b!108487 m!122247))

(assert (=> b!108489 m!121177))

(assert (=> b!108489 m!122245))

(assert (=> b!108489 m!122245))

(assert (=> b!108489 m!122247))

(assert (=> b!107954 d!30063))

(declare-fun d!30065 () Bool)

(assert (=> d!30065 (= (apply!99 lt!55479 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1352 (getValueByKey!156 (toList!811 lt!55479) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4452 () Bool)

(assert (= bs!4452 d!30065))

(assert (=> bs!4452 m!122201))

(assert (=> bs!4452 m!122201))

(declare-fun m!122249 () Bool)

(assert (=> bs!4452 m!122249))

(assert (=> b!108018 d!30065))

(declare-fun d!30067 () Bool)

(declare-fun e!70604 () Bool)

(assert (=> d!30067 e!70604))

(declare-fun c!19091 () Bool)

(assert (=> d!30067 (= c!19091 (and (not (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!30067 true))

(declare-fun _$29!144 () Unit!3339)

(assert (=> d!30067 (= (choose!676 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))) _$29!144)))

(declare-fun b!108494 () Bool)

(assert (=> b!108494 (= e!70604 (arrayContainsKey!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!108495 () Bool)

(assert (=> b!108495 (= e!70604 (ite (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!30067 c!19091) b!108494))

(assert (= (and d!30067 (not c!19091)) b!108495))

(assert (=> b!108494 m!121177))

(assert (=> b!108494 m!121229))

(assert (=> d!29887 d!30067))

(assert (=> d!29887 d!29861))

(assert (=> d!29873 d!29861))

(declare-fun d!30069 () Bool)

(declare-fun lt!55834 () Bool)

(assert (=> d!30069 (= lt!55834 (select (content!110 (toList!811 lt!55331)) lt!55252))))

(declare-fun e!70605 () Bool)

(assert (=> d!30069 (= lt!55834 e!70605)))

(declare-fun res!53779 () Bool)

(assert (=> d!30069 (=> (not res!53779) (not e!70605))))

(assert (=> d!30069 (= res!53779 ((_ is Cons!1644) (toList!811 lt!55331)))))

(assert (=> d!30069 (= (contains!835 (toList!811 lt!55331) lt!55252) lt!55834)))

(declare-fun b!108496 () Bool)

(declare-fun e!70606 () Bool)

(assert (=> b!108496 (= e!70605 e!70606)))

(declare-fun res!53778 () Bool)

(assert (=> b!108496 (=> res!53778 e!70606)))

(assert (=> b!108496 (= res!53778 (= (h!2242 (toList!811 lt!55331)) lt!55252))))

(declare-fun b!108497 () Bool)

(assert (=> b!108497 (= e!70606 (contains!835 (t!5776 (toList!811 lt!55331)) lt!55252))))

(assert (= (and d!30069 res!53779) b!108496))

(assert (= (and b!108496 (not res!53778)) b!108497))

(declare-fun m!122251 () Bool)

(assert (=> d!30069 m!122251))

(declare-fun m!122253 () Bool)

(assert (=> d!30069 m!122253))

(declare-fun m!122255 () Bool)

(assert (=> b!108497 m!122255))

(assert (=> b!107816 d!30069))

(declare-fun d!30071 () Bool)

(declare-fun isEmpty!380 (List!1648) Bool)

(assert (=> d!30071 (= (isEmpty!378 lt!55324) (isEmpty!380 (toList!811 lt!55324)))))

(declare-fun bs!4453 () Bool)

(assert (= bs!4453 d!30071))

(declare-fun m!122257 () Bool)

(assert (=> bs!4453 m!122257))

(assert (=> b!107803 d!30071))

(declare-fun d!30073 () Bool)

(declare-fun e!70608 () Bool)

(assert (=> d!30073 e!70608))

(declare-fun res!53780 () Bool)

(assert (=> d!30073 (=> res!53780 e!70608)))

(declare-fun lt!55835 () Bool)

(assert (=> d!30073 (= res!53780 (not lt!55835))))

(declare-fun lt!55836 () Bool)

(assert (=> d!30073 (= lt!55835 lt!55836)))

(declare-fun lt!55837 () Unit!3339)

(declare-fun e!70607 () Unit!3339)

(assert (=> d!30073 (= lt!55837 e!70607)))

(declare-fun c!19092 () Bool)

(assert (=> d!30073 (= c!19092 lt!55836)))

(assert (=> d!30073 (= lt!55836 (containsKey!160 (toList!811 lt!55324) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30073 (= (contains!834 lt!55324 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55835)))

(declare-fun b!108498 () Bool)

(declare-fun lt!55838 () Unit!3339)

(assert (=> b!108498 (= e!70607 lt!55838)))

(assert (=> b!108498 (= lt!55838 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55324) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108498 (isDefined!110 (getValueByKey!156 (toList!811 lt!55324) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108499 () Bool)

(declare-fun Unit!3369 () Unit!3339)

(assert (=> b!108499 (= e!70607 Unit!3369)))

(declare-fun b!108500 () Bool)

(assert (=> b!108500 (= e!70608 (isDefined!110 (getValueByKey!156 (toList!811 lt!55324) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30073 c!19092) b!108498))

(assert (= (and d!30073 (not c!19092)) b!108499))

(assert (= (and d!30073 (not res!53780)) b!108500))

(declare-fun m!122259 () Bool)

(assert (=> d!30073 m!122259))

(declare-fun m!122261 () Bool)

(assert (=> b!108498 m!122261))

(declare-fun m!122263 () Bool)

(assert (=> b!108498 m!122263))

(assert (=> b!108498 m!122263))

(declare-fun m!122265 () Bool)

(assert (=> b!108498 m!122265))

(assert (=> b!108500 m!122263))

(assert (=> b!108500 m!122263))

(assert (=> b!108500 m!122265))

(assert (=> d!29851 d!30073))

(assert (=> d!29851 d!29861))

(assert (=> b!107805 d!29947))

(declare-fun d!30075 () Bool)

(declare-fun e!70609 () Bool)

(assert (=> d!30075 e!70609))

(declare-fun res!53781 () Bool)

(assert (=> d!30075 (=> (not res!53781) (not e!70609))))

(declare-fun lt!55841 () ListLongMap!1591)

(assert (=> d!30075 (= res!53781 (contains!834 lt!55841 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!55839 () List!1648)

(assert (=> d!30075 (= lt!55841 (ListLongMap!1592 lt!55839))))

(declare-fun lt!55840 () Unit!3339)

(declare-fun lt!55842 () Unit!3339)

(assert (=> d!30075 (= lt!55840 lt!55842)))

(assert (=> d!30075 (= (getValueByKey!156 lt!55839 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30075 (= lt!55842 (lemmaContainsTupThenGetReturnValue!74 lt!55839 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30075 (= lt!55839 (insertStrictlySorted!76 (toList!811 call!11370) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30075 (= (+!148 call!11370 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!55841)))

(declare-fun b!108501 () Bool)

(declare-fun res!53782 () Bool)

(assert (=> b!108501 (=> (not res!53782) (not e!70609))))

(assert (=> b!108501 (= res!53782 (= (getValueByKey!156 (toList!811 lt!55841) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!108502 () Bool)

(assert (=> b!108502 (= e!70609 (contains!835 (toList!811 lt!55841) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!30075 res!53781) b!108501))

(assert (= (and b!108501 res!53782) b!108502))

(declare-fun m!122267 () Bool)

(assert (=> d!30075 m!122267))

(declare-fun m!122269 () Bool)

(assert (=> d!30075 m!122269))

(declare-fun m!122271 () Bool)

(assert (=> d!30075 m!122271))

(declare-fun m!122273 () Bool)

(assert (=> d!30075 m!122273))

(declare-fun m!122275 () Bool)

(assert (=> b!108501 m!122275))

(declare-fun m!122277 () Bool)

(assert (=> b!108502 m!122277))

(assert (=> b!107805 d!30075))

(declare-fun d!30077 () Bool)

(declare-fun e!70610 () Bool)

(assert (=> d!30077 e!70610))

(declare-fun res!53783 () Bool)

(assert (=> d!30077 (=> (not res!53783) (not e!70610))))

(declare-fun lt!55845 () ListLongMap!1591)

(assert (=> d!30077 (= res!53783 (contains!834 lt!55845 (_1!1221 (tuple2!2423 lt!55321 lt!55325))))))

(declare-fun lt!55843 () List!1648)

(assert (=> d!30077 (= lt!55845 (ListLongMap!1592 lt!55843))))

(declare-fun lt!55844 () Unit!3339)

(declare-fun lt!55846 () Unit!3339)

(assert (=> d!30077 (= lt!55844 lt!55846)))

(assert (=> d!30077 (= (getValueByKey!156 lt!55843 (_1!1221 (tuple2!2423 lt!55321 lt!55325))) (Some!161 (_2!1221 (tuple2!2423 lt!55321 lt!55325))))))

(assert (=> d!30077 (= lt!55846 (lemmaContainsTupThenGetReturnValue!74 lt!55843 (_1!1221 (tuple2!2423 lt!55321 lt!55325)) (_2!1221 (tuple2!2423 lt!55321 lt!55325))))))

(assert (=> d!30077 (= lt!55843 (insertStrictlySorted!76 (toList!811 lt!55319) (_1!1221 (tuple2!2423 lt!55321 lt!55325)) (_2!1221 (tuple2!2423 lt!55321 lt!55325))))))

(assert (=> d!30077 (= (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325)) lt!55845)))

(declare-fun b!108503 () Bool)

(declare-fun res!53784 () Bool)

(assert (=> b!108503 (=> (not res!53784) (not e!70610))))

(assert (=> b!108503 (= res!53784 (= (getValueByKey!156 (toList!811 lt!55845) (_1!1221 (tuple2!2423 lt!55321 lt!55325))) (Some!161 (_2!1221 (tuple2!2423 lt!55321 lt!55325)))))))

(declare-fun b!108504 () Bool)

(assert (=> b!108504 (= e!70610 (contains!835 (toList!811 lt!55845) (tuple2!2423 lt!55321 lt!55325)))))

(assert (= (and d!30077 res!53783) b!108503))

(assert (= (and b!108503 res!53784) b!108504))

(declare-fun m!122279 () Bool)

(assert (=> d!30077 m!122279))

(declare-fun m!122281 () Bool)

(assert (=> d!30077 m!122281))

(declare-fun m!122283 () Bool)

(assert (=> d!30077 m!122283))

(declare-fun m!122285 () Bool)

(assert (=> d!30077 m!122285))

(declare-fun m!122287 () Bool)

(assert (=> b!108503 m!122287))

(declare-fun m!122289 () Bool)

(assert (=> b!108504 m!122289))

(assert (=> b!107805 d!30077))

(declare-fun d!30079 () Bool)

(assert (=> d!30079 (not (contains!834 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325)) lt!55323))))

(declare-fun lt!55849 () Unit!3339)

(declare-fun choose!687 (ListLongMap!1591 (_ BitVec 64) V!3235 (_ BitVec 64)) Unit!3339)

(assert (=> d!30079 (= lt!55849 (choose!687 lt!55319 lt!55321 lt!55325 lt!55323))))

(declare-fun e!70613 () Bool)

(assert (=> d!30079 e!70613))

(declare-fun res!53787 () Bool)

(assert (=> d!30079 (=> (not res!53787) (not e!70613))))

(assert (=> d!30079 (= res!53787 (not (contains!834 lt!55319 lt!55323)))))

(assert (=> d!30079 (= (addStillNotContains!49 lt!55319 lt!55321 lt!55325 lt!55323) lt!55849)))

(declare-fun b!108508 () Bool)

(assert (=> b!108508 (= e!70613 (not (= lt!55321 lt!55323)))))

(assert (= (and d!30079 res!53787) b!108508))

(assert (=> d!30079 m!121319))

(assert (=> d!30079 m!121319))

(assert (=> d!30079 m!121321))

(declare-fun m!122291 () Bool)

(assert (=> d!30079 m!122291))

(declare-fun m!122293 () Bool)

(assert (=> d!30079 m!122293))

(assert (=> b!107805 d!30079))

(declare-fun d!30081 () Bool)

(declare-fun e!70615 () Bool)

(assert (=> d!30081 e!70615))

(declare-fun res!53788 () Bool)

(assert (=> d!30081 (=> res!53788 e!70615)))

(declare-fun lt!55850 () Bool)

(assert (=> d!30081 (= res!53788 (not lt!55850))))

(declare-fun lt!55851 () Bool)

(assert (=> d!30081 (= lt!55850 lt!55851)))

(declare-fun lt!55852 () Unit!3339)

(declare-fun e!70614 () Unit!3339)

(assert (=> d!30081 (= lt!55852 e!70614)))

(declare-fun c!19093 () Bool)

(assert (=> d!30081 (= c!19093 lt!55851)))

(assert (=> d!30081 (= lt!55851 (containsKey!160 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325))) lt!55323))))

(assert (=> d!30081 (= (contains!834 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325)) lt!55323) lt!55850)))

(declare-fun b!108509 () Bool)

(declare-fun lt!55853 () Unit!3339)

(assert (=> b!108509 (= e!70614 lt!55853)))

(assert (=> b!108509 (= lt!55853 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325))) lt!55323))))

(assert (=> b!108509 (isDefined!110 (getValueByKey!156 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325))) lt!55323))))

(declare-fun b!108510 () Bool)

(declare-fun Unit!3370 () Unit!3339)

(assert (=> b!108510 (= e!70614 Unit!3370)))

(declare-fun b!108511 () Bool)

(assert (=> b!108511 (= e!70615 (isDefined!110 (getValueByKey!156 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325))) lt!55323)))))

(assert (= (and d!30081 c!19093) b!108509))

(assert (= (and d!30081 (not c!19093)) b!108510))

(assert (= (and d!30081 (not res!53788)) b!108511))

(declare-fun m!122295 () Bool)

(assert (=> d!30081 m!122295))

(declare-fun m!122297 () Bool)

(assert (=> b!108509 m!122297))

(declare-fun m!122299 () Bool)

(assert (=> b!108509 m!122299))

(assert (=> b!108509 m!122299))

(declare-fun m!122301 () Bool)

(assert (=> b!108509 m!122301))

(assert (=> b!108511 m!122299))

(assert (=> b!108511 m!122299))

(assert (=> b!108511 m!122301))

(assert (=> b!107805 d!30081))

(assert (=> d!29883 d!29889))

(declare-fun d!30083 () Bool)

(assert (=> d!30083 (arrayNoDuplicates!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) from!355 Nil!1644)))

(assert (=> d!30083 true))

(declare-fun _$71!150 () Unit!3339)

(assert (=> d!30083 (= (choose!39 (_keys!4316 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!150)))

(declare-fun bs!4454 () Bool)

(assert (= bs!4454 d!30083))

(assert (=> bs!4454 m!121225))

(assert (=> d!29883 d!30083))

(declare-fun b!108521 () Bool)

(declare-fun res!53798 () Bool)

(declare-fun e!70618 () Bool)

(assert (=> b!108521 (=> (not res!53798) (not e!70618))))

(declare-fun size!2334 (LongMapFixedSize!912) (_ BitVec 32))

(assert (=> b!108521 (= res!53798 (bvsge (size!2334 newMap!16) (_size!505 newMap!16)))))

(declare-fun b!108522 () Bool)

(declare-fun res!53797 () Bool)

(assert (=> b!108522 (=> (not res!53797) (not e!70618))))

(assert (=> b!108522 (= res!53797 (= (size!2334 newMap!16) (bvadd (_size!505 newMap!16) (bvsdiv (bvadd (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!108523 () Bool)

(assert (=> b!108523 (= e!70618 (and (bvsge (extraKeys!2407 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2407 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!505 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!108520 () Bool)

(declare-fun res!53799 () Bool)

(assert (=> b!108520 (=> (not res!53799) (not e!70618))))

(assert (=> b!108520 (= res!53799 (and (= (size!2331 (_values!2589 newMap!16)) (bvadd (mask!6764 newMap!16) #b00000000000000000000000000000001)) (= (size!2330 (_keys!4316 newMap!16)) (size!2331 (_values!2589 newMap!16))) (bvsge (_size!505 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!505 newMap!16) (bvadd (mask!6764 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun d!30085 () Bool)

(declare-fun res!53800 () Bool)

(assert (=> d!30085 (=> (not res!53800) (not e!70618))))

(assert (=> d!30085 (= res!53800 (validMask!0 (mask!6764 newMap!16)))))

(assert (=> d!30085 (= (simpleValid!74 newMap!16) e!70618)))

(assert (= (and d!30085 res!53800) b!108520))

(assert (= (and b!108520 res!53799) b!108521))

(assert (= (and b!108521 res!53798) b!108522))

(assert (= (and b!108522 res!53797) b!108523))

(declare-fun m!122303 () Bool)

(assert (=> b!108521 m!122303))

(assert (=> b!108522 m!122303))

(assert (=> d!30085 m!121521))

(assert (=> d!29863 d!30085))

(declare-fun d!30087 () Bool)

(assert (=> d!30087 (= (get!1350 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) from!355) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2912 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!108032 d!30087))

(declare-fun b!108532 () Bool)

(declare-fun e!70627 () Bool)

(declare-fun call!11532 () Bool)

(assert (=> b!108532 (= e!70627 call!11532)))

(declare-fun d!30089 () Bool)

(declare-fun res!53806 () Bool)

(declare-fun e!70626 () Bool)

(assert (=> d!30089 (=> res!53806 e!70626)))

(assert (=> d!30089 (= res!53806 (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(assert (=> d!30089 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4316 newMap!16) (mask!6764 newMap!16)) e!70626)))

(declare-fun b!108533 () Bool)

(declare-fun e!70625 () Bool)

(assert (=> b!108533 (= e!70625 e!70627)))

(declare-fun lt!55860 () (_ BitVec 64))

(assert (=> b!108533 (= lt!55860 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55862 () Unit!3339)

(assert (=> b!108533 (= lt!55862 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4316 newMap!16) lt!55860 #b00000000000000000000000000000000))))

(assert (=> b!108533 (arrayContainsKey!0 (_keys!4316 newMap!16) lt!55860 #b00000000000000000000000000000000)))

(declare-fun lt!55861 () Unit!3339)

(assert (=> b!108533 (= lt!55861 lt!55862)))

(declare-fun res!53805 () Bool)

(assert (=> b!108533 (= res!53805 (= (seekEntryOrOpen!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) (_keys!4316 newMap!16) (mask!6764 newMap!16)) (Found!270 #b00000000000000000000000000000000)))))

(assert (=> b!108533 (=> (not res!53805) (not e!70627))))

(declare-fun bm!11529 () Bool)

(assert (=> bm!11529 (= call!11532 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun b!108534 () Bool)

(assert (=> b!108534 (= e!70626 e!70625)))

(declare-fun c!19096 () Bool)

(assert (=> b!108534 (= c!19096 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108535 () Bool)

(assert (=> b!108535 (= e!70625 call!11532)))

(assert (= (and d!30089 (not res!53806)) b!108534))

(assert (= (and b!108534 c!19096) b!108533))

(assert (= (and b!108534 (not c!19096)) b!108535))

(assert (= (and b!108533 res!53805) b!108532))

(assert (= (or b!108532 b!108535) bm!11529))

(assert (=> b!108533 m!121517))

(declare-fun m!122305 () Bool)

(assert (=> b!108533 m!122305))

(declare-fun m!122307 () Bool)

(assert (=> b!108533 m!122307))

(assert (=> b!108533 m!121517))

(declare-fun m!122309 () Bool)

(assert (=> b!108533 m!122309))

(declare-fun m!122311 () Bool)

(assert (=> bm!11529 m!122311))

(assert (=> b!108534 m!121517))

(assert (=> b!108534 m!121517))

(assert (=> b!108534 m!121519))

(assert (=> b!107828 d!30089))

(declare-fun d!30091 () Bool)

(declare-fun e!70628 () Bool)

(assert (=> d!30091 e!70628))

(declare-fun res!53807 () Bool)

(assert (=> d!30091 (=> (not res!53807) (not e!70628))))

(declare-fun lt!55865 () ListLongMap!1591)

(assert (=> d!30091 (= res!53807 (contains!834 lt!55865 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun lt!55863 () List!1648)

(assert (=> d!30091 (= lt!55865 (ListLongMap!1592 lt!55863))))

(declare-fun lt!55864 () Unit!3339)

(declare-fun lt!55866 () Unit!3339)

(assert (=> d!30091 (= lt!55864 lt!55866)))

(assert (=> d!30091 (= (getValueByKey!156 lt!55863 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (Some!161 (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!30091 (= lt!55866 (lemmaContainsTupThenGetReturnValue!74 lt!55863 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!30091 (= lt!55863 (insertStrictlySorted!76 (toList!811 call!11426) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!30091 (= (+!148 call!11426 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) lt!55865)))

(declare-fun b!108536 () Bool)

(declare-fun res!53808 () Bool)

(assert (=> b!108536 (=> (not res!53808) (not e!70628))))

(assert (=> b!108536 (= res!53808 (= (getValueByKey!156 (toList!811 lt!55865) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (Some!161 (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun b!108537 () Bool)

(assert (=> b!108537 (= e!70628 (contains!835 (toList!811 lt!55865) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))

(assert (= (and d!30091 res!53807) b!108536))

(assert (= (and b!108536 res!53808) b!108537))

(declare-fun m!122313 () Bool)

(assert (=> d!30091 m!122313))

(declare-fun m!122315 () Bool)

(assert (=> d!30091 m!122315))

(declare-fun m!122317 () Bool)

(assert (=> d!30091 m!122317))

(declare-fun m!122319 () Bool)

(assert (=> d!30091 m!122319))

(declare-fun m!122321 () Bool)

(assert (=> b!108536 m!122321))

(declare-fun m!122323 () Bool)

(assert (=> b!108537 m!122323))

(assert (=> b!107947 d!30091))

(declare-fun d!30093 () Bool)

(assert (=> d!30093 (= (apply!99 lt!55479 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1352 (getValueByKey!156 (toList!811 lt!55479) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4455 () Bool)

(assert (= bs!4455 d!30093))

(assert (=> bs!4455 m!121855))

(assert (=> bs!4455 m!121855))

(declare-fun m!122325 () Bool)

(assert (=> bs!4455 m!122325))

(assert (=> b!108022 d!30093))

(declare-fun d!30095 () Bool)

(declare-fun res!53809 () Bool)

(declare-fun e!70629 () Bool)

(assert (=> d!30095 (=> res!53809 e!70629)))

(assert (=> d!30095 (= res!53809 (= (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30095 (= (arrayContainsKey!0 (_keys!4316 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000) e!70629)))

(declare-fun b!108538 () Bool)

(declare-fun e!70630 () Bool)

(assert (=> b!108538 (= e!70629 e!70630)))

(declare-fun res!53810 () Bool)

(assert (=> b!108538 (=> (not res!53810) (not e!70630))))

(assert (=> b!108538 (= res!53810 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108539 () Bool)

(assert (=> b!108539 (= e!70630 (arrayContainsKey!0 (_keys!4316 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!30095 (not res!53809)) b!108538))

(assert (= (and b!108538 res!53810) b!108539))

(assert (=> d!30095 m!121517))

(assert (=> b!108539 m!121177))

(declare-fun m!122327 () Bool)

(assert (=> b!108539 m!122327))

(assert (=> bm!11417 d!30095))

(declare-fun d!30097 () Bool)

(declare-fun lt!55867 () Bool)

(assert (=> d!30097 (= lt!55867 (select (content!110 (toList!811 lt!55335)) lt!55249))))

(declare-fun e!70631 () Bool)

(assert (=> d!30097 (= lt!55867 e!70631)))

(declare-fun res!53812 () Bool)

(assert (=> d!30097 (=> (not res!53812) (not e!70631))))

(assert (=> d!30097 (= res!53812 ((_ is Cons!1644) (toList!811 lt!55335)))))

(assert (=> d!30097 (= (contains!835 (toList!811 lt!55335) lt!55249) lt!55867)))

(declare-fun b!108540 () Bool)

(declare-fun e!70632 () Bool)

(assert (=> b!108540 (= e!70631 e!70632)))

(declare-fun res!53811 () Bool)

(assert (=> b!108540 (=> res!53811 e!70632)))

(assert (=> b!108540 (= res!53811 (= (h!2242 (toList!811 lt!55335)) lt!55249))))

(declare-fun b!108541 () Bool)

(assert (=> b!108541 (= e!70632 (contains!835 (t!5776 (toList!811 lt!55335)) lt!55249))))

(assert (= (and d!30097 res!53812) b!108540))

(assert (= (and b!108540 (not res!53811)) b!108541))

(declare-fun m!122329 () Bool)

(assert (=> d!30097 m!122329))

(declare-fun m!122331 () Bool)

(assert (=> d!30097 m!122331))

(declare-fun m!122333 () Bool)

(assert (=> b!108541 m!122333))

(assert (=> b!107818 d!30097))

(assert (=> b!108044 d!29885))

(declare-fun b!108543 () Bool)

(declare-fun e!70634 () Bool)

(assert (=> b!108543 (= e!70634 tp_is_empty!2691)))

(declare-fun b!108542 () Bool)

(declare-fun e!70633 () Bool)

(assert (=> b!108542 (= e!70633 tp_is_empty!2691)))

(declare-fun mapIsEmpty!3985 () Bool)

(declare-fun mapRes!3985 () Bool)

(assert (=> mapIsEmpty!3985 mapRes!3985))

(declare-fun condMapEmpty!3985 () Bool)

(declare-fun mapDefault!3985 () ValueCell!1002)

(assert (=> mapNonEmpty!3983 (= condMapEmpty!3985 (= mapRest!3983 ((as const (Array (_ BitVec 32) ValueCell!1002)) mapDefault!3985)))))

(assert (=> mapNonEmpty!3983 (= tp!9995 (and e!70634 mapRes!3985))))

(declare-fun mapNonEmpty!3985 () Bool)

(declare-fun tp!9997 () Bool)

(assert (=> mapNonEmpty!3985 (= mapRes!3985 (and tp!9997 e!70633))))

(declare-fun mapKey!3985 () (_ BitVec 32))

(declare-fun mapValue!3985 () ValueCell!1002)

(declare-fun mapRest!3985 () (Array (_ BitVec 32) ValueCell!1002))

(assert (=> mapNonEmpty!3985 (= mapRest!3983 (store mapRest!3985 mapKey!3985 mapValue!3985))))

(assert (= (and mapNonEmpty!3983 condMapEmpty!3985) mapIsEmpty!3985))

(assert (= (and mapNonEmpty!3983 (not condMapEmpty!3985)) mapNonEmpty!3985))

(assert (= (and mapNonEmpty!3985 ((_ is ValueCellFull!1002) mapValue!3985)) b!108542))

(assert (= (and mapNonEmpty!3983 ((_ is ValueCellFull!1002) mapDefault!3985)) b!108543))

(declare-fun m!122335 () Bool)

(assert (=> mapNonEmpty!3985 m!122335))

(declare-fun b!108545 () Bool)

(declare-fun e!70636 () Bool)

(assert (=> b!108545 (= e!70636 tp_is_empty!2691)))

(declare-fun b!108544 () Bool)

(declare-fun e!70635 () Bool)

(assert (=> b!108544 (= e!70635 tp_is_empty!2691)))

(declare-fun mapIsEmpty!3986 () Bool)

(declare-fun mapRes!3986 () Bool)

(assert (=> mapIsEmpty!3986 mapRes!3986))

(declare-fun condMapEmpty!3986 () Bool)

(declare-fun mapDefault!3986 () ValueCell!1002)

(assert (=> mapNonEmpty!3984 (= condMapEmpty!3986 (= mapRest!3984 ((as const (Array (_ BitVec 32) ValueCell!1002)) mapDefault!3986)))))

(assert (=> mapNonEmpty!3984 (= tp!9996 (and e!70636 mapRes!3986))))

(declare-fun mapNonEmpty!3986 () Bool)

(declare-fun tp!9998 () Bool)

(assert (=> mapNonEmpty!3986 (= mapRes!3986 (and tp!9998 e!70635))))

(declare-fun mapKey!3986 () (_ BitVec 32))

(declare-fun mapValue!3986 () ValueCell!1002)

(declare-fun mapRest!3986 () (Array (_ BitVec 32) ValueCell!1002))

(assert (=> mapNonEmpty!3986 (= mapRest!3984 (store mapRest!3986 mapKey!3986 mapValue!3986))))

(assert (= (and mapNonEmpty!3984 condMapEmpty!3986) mapIsEmpty!3986))

(assert (= (and mapNonEmpty!3984 (not condMapEmpty!3986)) mapNonEmpty!3986))

(assert (= (and mapNonEmpty!3986 ((_ is ValueCellFull!1002) mapValue!3986)) b!108544))

(assert (= (and mapNonEmpty!3984 ((_ is ValueCellFull!1002) mapDefault!3986)) b!108545))

(declare-fun m!122337 () Bool)

(assert (=> mapNonEmpty!3986 m!122337))

(declare-fun b_lambda!4873 () Bool)

(assert (= b_lambda!4869 (or (and b!107703 b_free!2549) (and b!107707 b_free!2551 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))))) b_lambda!4873)))

(declare-fun b_lambda!4875 () Bool)

(assert (= b_lambda!4865 (or (and b!107703 b_free!2549 (= (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107707 b_free!2551) b_lambda!4875)))

(declare-fun b_lambda!4877 () Bool)

(assert (= b_lambda!4871 (or (and b!107703 b_free!2549 (= (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107707 b_free!2551) b_lambda!4877)))

(declare-fun b_lambda!4879 () Bool)

(assert (= b_lambda!4863 (or (and b!107703 b_free!2549 (= (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107707 b_free!2551) b_lambda!4879)))

(declare-fun b_lambda!4881 () Bool)

(assert (= b_lambda!4867 (or (and b!107703 b_free!2549) (and b!107707 b_free!2551 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))))) b_lambda!4881)))

(check-sat (not bm!11522) b_and!6705 (not mapNonEmpty!3986) (not b!108432) (not d!29913) tp_is_empty!2691 (not d!30003) (not b!108494) (not b!108328) (not b_next!2551) (not d!30079) (not bm!11471) (not b!108151) (not b!108356) (not b!108455) (not b!108244) (not bm!11503) (not d!29999) (not d!30071) (not d!29921) (not b!108340) (not d!29917) (not b_lambda!4881) (not b!108431) (not b!108076) (not b!108354) (not b!108462) (not d!29967) (not b!108326) (not b!108371) (not b!108123) (not d!29915) (not b!108145) (not b!108242) (not bm!11497) (not b!108467) (not d!30065) (not b!108080) (not b!108503) (not b!108521) (not d!29955) (not b!108159) (not b!108095) (not b!108278) (not b_lambda!4879) (not bm!11524) (not d!30015) (not b!108448) (not d!29903) (not b!108298) (not b!108193) (not b!108434) (not b!108436) (not b!108227) (not d!30029) (not b_lambda!4877) (not d!30097) (not b!108141) (not b!108474) (not b!108419) (not b!108456) (not b!108124) (not b!108363) (not b!108129) (not d!29997) (not d!29991) (not b!108077) (not b!108166) (not b!108079) (not b!108272) (not b!108245) (not b_lambda!4873) (not d!30083) (not d!30077) (not d!29933) (not d!30001) (not d!29987) (not b!108324) (not d!29925) (not b!108335) (not d!30069) (not d!29909) (not d!29941) (not b!108416) (not b!108319) (not b!108304) (not d!30031) (not b!108351) (not d!29943) (not d!29935) (not b!108460) (not d!29895) (not b!108275) (not b!108410) (not bm!11508) (not bm!11504) (not b!108475) (not b!108281) (not b!108539) (not d!30073) (not d!30085) (not b!108457) (not d!29911) (not b!108160) (not b!108306) (not b!108489) (not b!108114) (not b!108533) (not b!108233) (not d!30021) (not b!108414) (not b_lambda!4861) (not b!108486) (not bm!11529) (not b!108121) (not b!108173) (not b!108430) (not b!108500) (not b!108147) (not b!108273) (not bm!11478) (not bm!11468) (not d!30081) (not b!108174) (not b!108344) (not b!108447) (not b!108501) (not bm!11520) (not b!108445) (not b!108536) (not b!108334) b_and!6707 (not b!108449) (not d!29945) (not d!29983) (not d!30055) (not b!108422) (not b_next!2549) (not b!108144) (not bm!11488) (not b!108408) (not b!108487) (not b!108353) (not bm!11523) (not b!108468) (not bm!11496) (not b!108288) (not b!108239) (not b!108425) (not d!29899) (not b!108534) (not d!29905) (not b!108086) (not b!108090) (not b!108433) (not b!108133) (not d!29901) (not b!108368) (not d!30039) (not bm!11502) (not b!108427) (not b!108477) (not b!108323) (not b!108325) (not d!30027) (not b!108497) (not b!108522) (not b!108537) (not b!108154) (not d!30033) (not bm!11464) (not b!108280) (not b!108187) (not b!108504) (not b!108120) (not b!108342) (not d!30005) (not bm!11470) (not b!108176) (not b!108089) (not b!108459) (not b!108336) (not d!29937) (not b!108232) (not b!108364) (not b!108157) (not d!29973) (not b!108465) (not b!108126) (not b!108426) (not b!108230) (not d!30091) (not b!108428) (not bm!11476) (not b!108333) (not b!108223) (not b!108094) (not b!108221) (not d!30035) (not d!29927) (not b_lambda!4875) (not b!108509) (not b!108142) (not b!108541) (not bm!11495) (not d!29949) (not b!108271) (not b!108360) (not b!108194) (not d!29923) (not d!30013) (not b!108498) (not b!108161) (not b!108290) (not d!30045) (not b!108155) (not d!30009) (not b!108502) (not d!30025) (not d!30017) (not b!108096) (not b!108444) (not d!29929) (not b!108307) (not d!30075) (not d!29959) (not d!30007) (not d!30019) (not d!30063) (not b!108309) (not d!30011) (not d!29979) (not b!108287) (not b!108220) (not b!108134) (not b!108350) (not b_lambda!4859) (not mapNonEmpty!3985) (not b!108240) (not d!30093) (not d!30023) (not d!29989) (not bm!11472) (not d!29975) (not d!30043) (not b!108082) (not d!30049) (not bm!11467) (not b!108484) (not b!108424) (not bm!11507) (not b!108337) (not b!108302) (not b!108429) (not b!108446) (not b!108437) (not b!108132) (not bm!11485) (not b!108438) (not bm!11519) (not b!108511) (not bm!11475) (not b!108225) (not b!108327) (not d!29981) (not d!30037) (not b_lambda!4857) (not d!29993) (not b!108294) (not d!29961) (not d!29953) (not b!108135) (not bm!11510) (not b!108270) (not d!30053) (not d!29951) (not d!29907) (not b!108454) (not b_lambda!4849))
(check-sat b_and!6705 b_and!6707 (not b_next!2549) (not b_next!2551))
(get-model)

(declare-fun d!30099 () Bool)

(assert (=> d!30099 (= (apply!99 lt!55558 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1352 (getValueByKey!156 (toList!811 lt!55558) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4456 () Bool)

(assert (= bs!4456 d!30099))

(declare-fun m!122339 () Bool)

(assert (=> bs!4456 m!122339))

(assert (=> bs!4456 m!122339))

(declare-fun m!122341 () Bool)

(assert (=> bs!4456 m!122341))

(assert (=> b!108151 d!30099))

(declare-fun d!30101 () Bool)

(assert (=> d!30101 (isDefined!110 (getValueByKey!156 (toList!811 e!70282) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun lt!55868 () Unit!3339)

(assert (=> d!30101 (= lt!55868 (choose!683 (toList!811 e!70282) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!70637 () Bool)

(assert (=> d!30101 e!70637))

(declare-fun res!53813 () Bool)

(assert (=> d!30101 (=> (not res!53813) (not e!70637))))

(assert (=> d!30101 (= res!53813 (isStrictlySorted!305 (toList!811 e!70282)))))

(assert (=> d!30101 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 e!70282) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) lt!55868)))

(declare-fun b!108546 () Bool)

(assert (=> b!108546 (= e!70637 (containsKey!160 (toList!811 e!70282) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30101 res!53813) b!108546))

(assert (=> d!30101 m!121177))

(assert (=> d!30101 m!121913))

(assert (=> d!30101 m!121913))

(assert (=> d!30101 m!121915))

(assert (=> d!30101 m!121177))

(declare-fun m!122343 () Bool)

(assert (=> d!30101 m!122343))

(declare-fun m!122345 () Bool)

(assert (=> d!30101 m!122345))

(assert (=> b!108546 m!121177))

(assert (=> b!108546 m!121909))

(assert (=> b!108342 d!30101))

(declare-fun d!30103 () Bool)

(assert (=> d!30103 (= (isDefined!110 (getValueByKey!156 (toList!811 e!70282) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))) (not (isEmpty!379 (getValueByKey!156 (toList!811 e!70282) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))))

(declare-fun bs!4457 () Bool)

(assert (= bs!4457 d!30103))

(assert (=> bs!4457 m!121913))

(declare-fun m!122347 () Bool)

(assert (=> bs!4457 m!122347))

(assert (=> b!108342 d!30103))

(declare-fun d!30105 () Bool)

(declare-fun c!19097 () Bool)

(assert (=> d!30105 (= c!19097 (and ((_ is Cons!1644) (toList!811 e!70282)) (= (_1!1221 (h!2242 (toList!811 e!70282))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))))

(declare-fun e!70638 () Option!162)

(assert (=> d!30105 (= (getValueByKey!156 (toList!811 e!70282) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) e!70638)))

(declare-fun b!108549 () Bool)

(declare-fun e!70639 () Option!162)

(assert (=> b!108549 (= e!70639 (getValueByKey!156 (t!5776 (toList!811 e!70282)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108550 () Bool)

(assert (=> b!108550 (= e!70639 None!160)))

(declare-fun b!108548 () Bool)

(assert (=> b!108548 (= e!70638 e!70639)))

(declare-fun c!19098 () Bool)

(assert (=> b!108548 (= c!19098 (and ((_ is Cons!1644) (toList!811 e!70282)) (not (= (_1!1221 (h!2242 (toList!811 e!70282))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))))

(declare-fun b!108547 () Bool)

(assert (=> b!108547 (= e!70638 (Some!161 (_2!1221 (h!2242 (toList!811 e!70282)))))))

(assert (= (and d!30105 c!19097) b!108547))

(assert (= (and d!30105 (not c!19097)) b!108548))

(assert (= (and b!108548 c!19098) b!108549))

(assert (= (and b!108548 (not c!19098)) b!108550))

(assert (=> b!108549 m!121177))

(declare-fun m!122349 () Bool)

(assert (=> b!108549 m!122349))

(assert (=> b!108342 d!30105))

(declare-fun d!30107 () Bool)

(assert (=> d!30107 (= (validMask!0 (mask!6764 newMap!16)) (and (or (= (mask!6764 newMap!16) #b00000000000000000000000000000111) (= (mask!6764 newMap!16) #b00000000000000000000000000001111) (= (mask!6764 newMap!16) #b00000000000000000000000000011111) (= (mask!6764 newMap!16) #b00000000000000000000000000111111) (= (mask!6764 newMap!16) #b00000000000000000000000001111111) (= (mask!6764 newMap!16) #b00000000000000000000000011111111) (= (mask!6764 newMap!16) #b00000000000000000000000111111111) (= (mask!6764 newMap!16) #b00000000000000000000001111111111) (= (mask!6764 newMap!16) #b00000000000000000000011111111111) (= (mask!6764 newMap!16) #b00000000000000000000111111111111) (= (mask!6764 newMap!16) #b00000000000000000001111111111111) (= (mask!6764 newMap!16) #b00000000000000000011111111111111) (= (mask!6764 newMap!16) #b00000000000000000111111111111111) (= (mask!6764 newMap!16) #b00000000000000001111111111111111) (= (mask!6764 newMap!16) #b00000000000000011111111111111111) (= (mask!6764 newMap!16) #b00000000000000111111111111111111) (= (mask!6764 newMap!16) #b00000000000001111111111111111111) (= (mask!6764 newMap!16) #b00000000000011111111111111111111) (= (mask!6764 newMap!16) #b00000000000111111111111111111111) (= (mask!6764 newMap!16) #b00000000001111111111111111111111) (= (mask!6764 newMap!16) #b00000000011111111111111111111111) (= (mask!6764 newMap!16) #b00000000111111111111111111111111) (= (mask!6764 newMap!16) #b00000001111111111111111111111111) (= (mask!6764 newMap!16) #b00000011111111111111111111111111) (= (mask!6764 newMap!16) #b00000111111111111111111111111111) (= (mask!6764 newMap!16) #b00001111111111111111111111111111) (= (mask!6764 newMap!16) #b00011111111111111111111111111111) (= (mask!6764 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6764 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!30085 d!30107))

(assert (=> bm!11520 d!29899))

(declare-fun d!30109 () Bool)

(assert (=> d!30109 (= (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108455 d!30109))

(declare-fun d!30111 () Bool)

(assert (=> d!30111 (isDefined!110 (getValueByKey!156 (toList!811 lt!55324) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!55869 () Unit!3339)

(assert (=> d!30111 (= lt!55869 (choose!683 (toList!811 lt!55324) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!70640 () Bool)

(assert (=> d!30111 e!70640))

(declare-fun res!53814 () Bool)

(assert (=> d!30111 (=> (not res!53814) (not e!70640))))

(assert (=> d!30111 (= res!53814 (isStrictlySorted!305 (toList!811 lt!55324)))))

(assert (=> d!30111 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55324) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!55869)))

(declare-fun b!108551 () Bool)

(assert (=> b!108551 (= e!70640 (containsKey!160 (toList!811 lt!55324) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!30111 res!53814) b!108551))

(assert (=> d!30111 m!121305))

(assert (=> d!30111 m!121839))

(assert (=> d!30111 m!121839))

(assert (=> d!30111 m!121849))

(assert (=> d!30111 m!121305))

(declare-fun m!122351 () Bool)

(assert (=> d!30111 m!122351))

(declare-fun m!122353 () Bool)

(assert (=> d!30111 m!122353))

(assert (=> b!108551 m!121305))

(assert (=> b!108551 m!121845))

(assert (=> b!108304 d!30111))

(declare-fun d!30113 () Bool)

(assert (=> d!30113 (= (isDefined!110 (getValueByKey!156 (toList!811 lt!55324) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!379 (getValueByKey!156 (toList!811 lt!55324) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4458 () Bool)

(assert (= bs!4458 d!30113))

(assert (=> bs!4458 m!121839))

(declare-fun m!122355 () Bool)

(assert (=> bs!4458 m!122355))

(assert (=> b!108304 d!30113))

(declare-fun d!30115 () Bool)

(declare-fun c!19099 () Bool)

(assert (=> d!30115 (= c!19099 (and ((_ is Cons!1644) (toList!811 lt!55324)) (= (_1!1221 (h!2242 (toList!811 lt!55324))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!70641 () Option!162)

(assert (=> d!30115 (= (getValueByKey!156 (toList!811 lt!55324) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!70641)))

(declare-fun b!108554 () Bool)

(declare-fun e!70642 () Option!162)

(assert (=> b!108554 (= e!70642 (getValueByKey!156 (t!5776 (toList!811 lt!55324)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!108555 () Bool)

(assert (=> b!108555 (= e!70642 None!160)))

(declare-fun b!108553 () Bool)

(assert (=> b!108553 (= e!70641 e!70642)))

(declare-fun c!19100 () Bool)

(assert (=> b!108553 (= c!19100 (and ((_ is Cons!1644) (toList!811 lt!55324)) (not (= (_1!1221 (h!2242 (toList!811 lt!55324))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!108552 () Bool)

(assert (=> b!108552 (= e!70641 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55324)))))))

(assert (= (and d!30115 c!19099) b!108552))

(assert (= (and d!30115 (not c!19099)) b!108553))

(assert (= (and b!108553 c!19100) b!108554))

(assert (= (and b!108553 (not c!19100)) b!108555))

(assert (=> b!108554 m!121305))

(declare-fun m!122357 () Bool)

(assert (=> b!108554 m!122357))

(assert (=> b!108304 d!30115))

(declare-fun d!30117 () Bool)

(declare-fun e!70644 () Bool)

(assert (=> d!30117 e!70644))

(declare-fun res!53815 () Bool)

(assert (=> d!30117 (=> res!53815 e!70644)))

(declare-fun lt!55870 () Bool)

(assert (=> d!30117 (= res!53815 (not lt!55870))))

(declare-fun lt!55871 () Bool)

(assert (=> d!30117 (= lt!55870 lt!55871)))

(declare-fun lt!55872 () Unit!3339)

(declare-fun e!70643 () Unit!3339)

(assert (=> d!30117 (= lt!55872 e!70643)))

(declare-fun c!19101 () Bool)

(assert (=> d!30117 (= c!19101 lt!55871)))

(assert (=> d!30117 (= lt!55871 (containsKey!160 (toList!811 lt!55779) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30117 (= (contains!834 lt!55779 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55870)))

(declare-fun b!108556 () Bool)

(declare-fun lt!55873 () Unit!3339)

(assert (=> b!108556 (= e!70643 lt!55873)))

(assert (=> b!108556 (= lt!55873 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55779) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> b!108556 (isDefined!110 (getValueByKey!156 (toList!811 lt!55779) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!108557 () Bool)

(declare-fun Unit!3371 () Unit!3339)

(assert (=> b!108557 (= e!70643 Unit!3371)))

(declare-fun b!108558 () Bool)

(assert (=> b!108558 (= e!70644 (isDefined!110 (getValueByKey!156 (toList!811 lt!55779) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (= (and d!30117 c!19101) b!108556))

(assert (= (and d!30117 (not c!19101)) b!108557))

(assert (= (and d!30117 (not res!53815)) b!108558))

(declare-fun m!122359 () Bool)

(assert (=> d!30117 m!122359))

(declare-fun m!122361 () Bool)

(assert (=> b!108556 m!122361))

(assert (=> b!108556 m!122065))

(assert (=> b!108556 m!122065))

(declare-fun m!122363 () Bool)

(assert (=> b!108556 m!122363))

(assert (=> b!108558 m!122065))

(assert (=> b!108558 m!122065))

(assert (=> b!108558 m!122363))

(assert (=> d!30003 d!30117))

(declare-fun d!30119 () Bool)

(declare-fun c!19102 () Bool)

(assert (=> d!30119 (= c!19102 (and ((_ is Cons!1644) lt!55777) (= (_1!1221 (h!2242 lt!55777)) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!70645 () Option!162)

(assert (=> d!30119 (= (getValueByKey!156 lt!55777 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) e!70645)))

(declare-fun b!108561 () Bool)

(declare-fun e!70646 () Option!162)

(assert (=> b!108561 (= e!70646 (getValueByKey!156 (t!5776 lt!55777) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!108562 () Bool)

(assert (=> b!108562 (= e!70646 None!160)))

(declare-fun b!108560 () Bool)

(assert (=> b!108560 (= e!70645 e!70646)))

(declare-fun c!19103 () Bool)

(assert (=> b!108560 (= c!19103 (and ((_ is Cons!1644) lt!55777) (not (= (_1!1221 (h!2242 lt!55777)) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun b!108559 () Bool)

(assert (=> b!108559 (= e!70645 (Some!161 (_2!1221 (h!2242 lt!55777))))))

(assert (= (and d!30119 c!19102) b!108559))

(assert (= (and d!30119 (not c!19102)) b!108560))

(assert (= (and b!108560 c!19103) b!108561))

(assert (= (and b!108560 (not c!19103)) b!108562))

(declare-fun m!122365 () Bool)

(assert (=> b!108561 m!122365))

(assert (=> d!30003 d!30119))

(declare-fun d!30121 () Bool)

(assert (=> d!30121 (= (getValueByKey!156 lt!55777 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun lt!55874 () Unit!3339)

(assert (=> d!30121 (= lt!55874 (choose!680 lt!55777 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun e!70647 () Bool)

(assert (=> d!30121 e!70647))

(declare-fun res!53816 () Bool)

(assert (=> d!30121 (=> (not res!53816) (not e!70647))))

(assert (=> d!30121 (= res!53816 (isStrictlySorted!305 lt!55777))))

(assert (=> d!30121 (= (lemmaContainsTupThenGetReturnValue!74 lt!55777 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55874)))

(declare-fun b!108563 () Bool)

(declare-fun res!53817 () Bool)

(assert (=> b!108563 (=> (not res!53817) (not e!70647))))

(assert (=> b!108563 (= res!53817 (containsKey!160 lt!55777 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!108564 () Bool)

(assert (=> b!108564 (= e!70647 (contains!835 lt!55777 (tuple2!2423 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (= (and d!30121 res!53816) b!108563))

(assert (= (and b!108563 res!53817) b!108564))

(assert (=> d!30121 m!122059))

(declare-fun m!122367 () Bool)

(assert (=> d!30121 m!122367))

(declare-fun m!122369 () Bool)

(assert (=> d!30121 m!122369))

(declare-fun m!122371 () Bool)

(assert (=> b!108563 m!122371))

(declare-fun m!122373 () Bool)

(assert (=> b!108564 m!122373))

(assert (=> d!30003 d!30121))

(declare-fun b!108565 () Bool)

(declare-fun c!19104 () Bool)

(assert (=> b!108565 (= c!19104 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55250 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))) (bvsgt (_1!1221 (h!2242 (toList!811 (+!148 lt!55250 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!70648 () List!1648)

(declare-fun e!70649 () List!1648)

(assert (=> b!108565 (= e!70648 e!70649)))

(declare-fun b!108566 () Bool)

(declare-fun e!70650 () List!1648)

(declare-fun call!11534 () List!1648)

(assert (=> b!108566 (= e!70650 call!11534)))

(declare-fun bm!11530 () Bool)

(declare-fun c!19105 () Bool)

(declare-fun e!70652 () List!1648)

(assert (=> bm!11530 (= call!11534 ($colon$colon!81 e!70652 (ite c!19105 (h!2242 (toList!811 (+!148 lt!55250 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))) (tuple2!2423 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun c!19106 () Bool)

(assert (=> bm!11530 (= c!19106 c!19105)))

(declare-fun b!108567 () Bool)

(declare-fun call!11533 () List!1648)

(assert (=> b!108567 (= e!70649 call!11533)))

(declare-fun b!108568 () Bool)

(declare-fun call!11535 () List!1648)

(assert (=> b!108568 (= e!70648 call!11535)))

(declare-fun d!30123 () Bool)

(declare-fun e!70651 () Bool)

(assert (=> d!30123 e!70651))

(declare-fun res!53818 () Bool)

(assert (=> d!30123 (=> (not res!53818) (not e!70651))))

(declare-fun lt!55875 () List!1648)

(assert (=> d!30123 (= res!53818 (isStrictlySorted!305 lt!55875))))

(assert (=> d!30123 (= lt!55875 e!70650)))

(assert (=> d!30123 (= c!19105 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55250 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))) (bvslt (_1!1221 (h!2242 (toList!811 (+!148 lt!55250 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (=> d!30123 (isStrictlySorted!305 (toList!811 (+!148 lt!55250 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!30123 (= (insertStrictlySorted!76 (toList!811 (+!148 lt!55250 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55875)))

(declare-fun b!108569 () Bool)

(assert (=> b!108569 (= e!70650 e!70648)))

(declare-fun c!19107 () Bool)

(assert (=> b!108569 (= c!19107 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55250 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))) (= (_1!1221 (h!2242 (toList!811 (+!148 lt!55250 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!108570 () Bool)

(declare-fun res!53819 () Bool)

(assert (=> b!108570 (=> (not res!53819) (not e!70651))))

(assert (=> b!108570 (= res!53819 (containsKey!160 lt!55875 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun bm!11531 () Bool)

(assert (=> bm!11531 (= call!11535 call!11534)))

(declare-fun bm!11532 () Bool)

(assert (=> bm!11532 (= call!11533 call!11535)))

(declare-fun b!108571 () Bool)

(assert (=> b!108571 (= e!70652 (insertStrictlySorted!76 (t!5776 (toList!811 (+!148 lt!55250 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!108572 () Bool)

(assert (=> b!108572 (= e!70649 call!11533)))

(declare-fun b!108573 () Bool)

(assert (=> b!108573 (= e!70651 (contains!835 lt!55875 (tuple2!2423 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!108574 () Bool)

(assert (=> b!108574 (= e!70652 (ite c!19107 (t!5776 (toList!811 (+!148 lt!55250 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))) (ite c!19104 (Cons!1644 (h!2242 (toList!811 (+!148 lt!55250 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))) (t!5776 (toList!811 (+!148 lt!55250 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))) Nil!1645)))))

(assert (= (and d!30123 c!19105) b!108566))

(assert (= (and d!30123 (not c!19105)) b!108569))

(assert (= (and b!108569 c!19107) b!108568))

(assert (= (and b!108569 (not c!19107)) b!108565))

(assert (= (and b!108565 c!19104) b!108572))

(assert (= (and b!108565 (not c!19104)) b!108567))

(assert (= (or b!108572 b!108567) bm!11532))

(assert (= (or b!108568 bm!11532) bm!11531))

(assert (= (or b!108566 bm!11531) bm!11530))

(assert (= (and bm!11530 c!19106) b!108571))

(assert (= (and bm!11530 (not c!19106)) b!108574))

(assert (= (and d!30123 res!53818) b!108570))

(assert (= (and b!108570 res!53819) b!108573))

(declare-fun m!122375 () Bool)

(assert (=> b!108573 m!122375))

(declare-fun m!122377 () Bool)

(assert (=> b!108570 m!122377))

(declare-fun m!122379 () Bool)

(assert (=> bm!11530 m!122379))

(declare-fun m!122381 () Bool)

(assert (=> d!30123 m!122381))

(declare-fun m!122383 () Bool)

(assert (=> d!30123 m!122383))

(declare-fun m!122385 () Bool)

(assert (=> b!108571 m!122385))

(assert (=> d!30003 d!30123))

(declare-fun c!19108 () Bool)

(declare-fun d!30125 () Bool)

(assert (=> d!30125 (= c!19108 (and ((_ is Cons!1644) (toList!811 lt!55811)) (= (_1!1221 (h!2242 (toList!811 lt!55811))) (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!70653 () Option!162)

(assert (=> d!30125 (= (getValueByKey!156 (toList!811 lt!55811) (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) e!70653)))

(declare-fun e!70654 () Option!162)

(declare-fun b!108577 () Bool)

(assert (=> b!108577 (= e!70654 (getValueByKey!156 (t!5776 (toList!811 lt!55811)) (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!108578 () Bool)

(assert (=> b!108578 (= e!70654 None!160)))

(declare-fun b!108576 () Bool)

(assert (=> b!108576 (= e!70653 e!70654)))

(declare-fun c!19109 () Bool)

(assert (=> b!108576 (= c!19109 (and ((_ is Cons!1644) (toList!811 lt!55811)) (not (= (_1!1221 (h!2242 (toList!811 lt!55811))) (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun b!108575 () Bool)

(assert (=> b!108575 (= e!70653 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55811)))))))

(assert (= (and d!30125 c!19108) b!108575))

(assert (= (and d!30125 (not c!19108)) b!108576))

(assert (= (and b!108576 c!19109) b!108577))

(assert (= (and b!108576 (not c!19109)) b!108578))

(declare-fun m!122387 () Bool)

(assert (=> b!108577 m!122387))

(assert (=> b!108448 d!30125))

(declare-fun d!30127 () Bool)

(declare-fun res!53820 () Bool)

(declare-fun e!70655 () Bool)

(assert (=> d!30127 (=> res!53820 e!70655)))

(assert (=> d!30127 (= res!53820 (and ((_ is Cons!1644) lt!55829) (= (_1!1221 (h!2242 lt!55829)) (_1!1221 lt!55252))))))

(assert (=> d!30127 (= (containsKey!160 lt!55829 (_1!1221 lt!55252)) e!70655)))

(declare-fun b!108579 () Bool)

(declare-fun e!70656 () Bool)

(assert (=> b!108579 (= e!70655 e!70656)))

(declare-fun res!53821 () Bool)

(assert (=> b!108579 (=> (not res!53821) (not e!70656))))

(assert (=> b!108579 (= res!53821 (and (or (not ((_ is Cons!1644) lt!55829)) (bvsle (_1!1221 (h!2242 lt!55829)) (_1!1221 lt!55252))) ((_ is Cons!1644) lt!55829) (bvslt (_1!1221 (h!2242 lt!55829)) (_1!1221 lt!55252))))))

(declare-fun b!108580 () Bool)

(assert (=> b!108580 (= e!70656 (containsKey!160 (t!5776 lt!55829) (_1!1221 lt!55252)))))

(assert (= (and d!30127 (not res!53820)) b!108579))

(assert (= (and b!108579 res!53821) b!108580))

(declare-fun m!122389 () Bool)

(assert (=> b!108580 m!122389))

(assert (=> b!108474 d!30127))

(declare-fun d!30129 () Bool)

(declare-fun c!19110 () Bool)

(assert (=> d!30129 (= c!19110 (and ((_ is Cons!1644) (t!5776 lt!55337)) (= (_1!1221 (h!2242 (t!5776 lt!55337))) (_1!1221 lt!55249))))))

(declare-fun e!70657 () Option!162)

(assert (=> d!30129 (= (getValueByKey!156 (t!5776 lt!55337) (_1!1221 lt!55249)) e!70657)))

(declare-fun b!108583 () Bool)

(declare-fun e!70658 () Option!162)

(assert (=> b!108583 (= e!70658 (getValueByKey!156 (t!5776 (t!5776 lt!55337)) (_1!1221 lt!55249)))))

(declare-fun b!108584 () Bool)

(assert (=> b!108584 (= e!70658 None!160)))

(declare-fun b!108582 () Bool)

(assert (=> b!108582 (= e!70657 e!70658)))

(declare-fun c!19111 () Bool)

(assert (=> b!108582 (= c!19111 (and ((_ is Cons!1644) (t!5776 lt!55337)) (not (= (_1!1221 (h!2242 (t!5776 lt!55337))) (_1!1221 lt!55249)))))))

(declare-fun b!108581 () Bool)

(assert (=> b!108581 (= e!70657 (Some!161 (_2!1221 (h!2242 (t!5776 lt!55337)))))))

(assert (= (and d!30129 c!19110) b!108581))

(assert (= (and d!30129 (not c!19110)) b!108582))

(assert (= (and b!108582 c!19111) b!108583))

(assert (= (and b!108582 (not c!19111)) b!108584))

(declare-fun m!122391 () Bool)

(assert (=> b!108583 m!122391))

(assert (=> b!108230 d!30129))

(declare-fun d!30131 () Bool)

(declare-fun e!70660 () Bool)

(assert (=> d!30131 e!70660))

(declare-fun res!53822 () Bool)

(assert (=> d!30131 (=> res!53822 e!70660)))

(declare-fun lt!55876 () Bool)

(assert (=> d!30131 (= res!53822 (not lt!55876))))

(declare-fun lt!55877 () Bool)

(assert (=> d!30131 (= lt!55876 lt!55877)))

(declare-fun lt!55878 () Unit!3339)

(declare-fun e!70659 () Unit!3339)

(assert (=> d!30131 (= lt!55878 e!70659)))

(declare-fun c!19112 () Bool)

(assert (=> d!30131 (= c!19112 lt!55877)))

(assert (=> d!30131 (= lt!55877 (containsKey!160 (toList!811 (getCurrentListMap!487 (_keys!4316 newMap!16) lt!55413 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))))))

(assert (=> d!30131 (= (contains!834 (getCurrentListMap!487 (_keys!4316 newMap!16) lt!55413 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))) lt!55876)))

(declare-fun b!108585 () Bool)

(declare-fun lt!55879 () Unit!3339)

(assert (=> b!108585 (= e!70659 lt!55879)))

(assert (=> b!108585 (= lt!55879 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 (getCurrentListMap!487 (_keys!4316 newMap!16) lt!55413 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))))))

(assert (=> b!108585 (isDefined!110 (getValueByKey!156 (toList!811 (getCurrentListMap!487 (_keys!4316 newMap!16) lt!55413 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))))))

(declare-fun b!108586 () Bool)

(declare-fun Unit!3372 () Unit!3339)

(assert (=> b!108586 (= e!70659 Unit!3372)))

(declare-fun b!108587 () Bool)

(assert (=> b!108587 (= e!70660 (isDefined!110 (getValueByKey!156 (toList!811 (getCurrentListMap!487 (_keys!4316 newMap!16) lt!55413 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408)))))))

(assert (= (and d!30131 c!19112) b!108585))

(assert (= (and d!30131 (not c!19112)) b!108586))

(assert (= (and d!30131 (not res!53822)) b!108587))

(assert (=> d!30131 m!121411))

(declare-fun m!122393 () Bool)

(assert (=> d!30131 m!122393))

(assert (=> b!108585 m!121411))

(declare-fun m!122395 () Bool)

(assert (=> b!108585 m!122395))

(assert (=> b!108585 m!121411))

(declare-fun m!122397 () Bool)

(assert (=> b!108585 m!122397))

(assert (=> b!108585 m!122397))

(declare-fun m!122399 () Bool)

(assert (=> b!108585 m!122399))

(assert (=> b!108587 m!121411))

(assert (=> b!108587 m!122397))

(assert (=> b!108587 m!122397))

(assert (=> b!108587 m!122399))

(assert (=> b!108129 d!30131))

(declare-fun b!108588 () Bool)

(declare-fun e!70666 () Bool)

(declare-fun call!11541 () Bool)

(assert (=> b!108588 (= e!70666 (not call!11541))))

(declare-fun call!11540 () ListLongMap!1591)

(declare-fun c!19114 () Bool)

(declare-fun call!11537 () ListLongMap!1591)

(declare-fun call!11539 () ListLongMap!1591)

(declare-fun bm!11533 () Bool)

(declare-fun call!11538 () ListLongMap!1591)

(declare-fun c!19116 () Bool)

(assert (=> bm!11533 (= call!11539 (+!148 (ite c!19116 call!11537 (ite c!19114 call!11538 call!11540)) (ite (or c!19116 c!19114) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(declare-fun b!108589 () Bool)

(declare-fun e!70662 () Bool)

(declare-fun call!11536 () Bool)

(assert (=> b!108589 (= e!70662 (not call!11536))))

(declare-fun bm!11534 () Bool)

(assert (=> bm!11534 (= call!11540 call!11538)))

(declare-fun b!108590 () Bool)

(declare-fun e!70668 () Bool)

(assert (=> b!108590 (= e!70666 e!70668)))

(declare-fun res!53829 () Bool)

(assert (=> b!108590 (= res!53829 call!11541)))

(assert (=> b!108590 (=> (not res!53829) (not e!70668))))

(declare-fun bm!11535 () Bool)

(declare-fun call!11542 () ListLongMap!1591)

(assert (=> bm!11535 (= call!11542 call!11539)))

(declare-fun bm!11536 () Bool)

(assert (=> bm!11536 (= call!11537 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) lt!55413 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun b!108591 () Bool)

(declare-fun e!70672 () Unit!3339)

(declare-fun Unit!3373 () Unit!3339)

(assert (=> b!108591 (= e!70672 Unit!3373)))

(declare-fun d!30133 () Bool)

(declare-fun e!70665 () Bool)

(assert (=> d!30133 e!70665))

(declare-fun res!53828 () Bool)

(assert (=> d!30133 (=> (not res!53828) (not e!70665))))

(assert (=> d!30133 (= res!53828 (or (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))))

(declare-fun lt!55881 () ListLongMap!1591)

(declare-fun lt!55900 () ListLongMap!1591)

(assert (=> d!30133 (= lt!55881 lt!55900)))

(declare-fun lt!55892 () Unit!3339)

(assert (=> d!30133 (= lt!55892 e!70672)))

(declare-fun c!19117 () Bool)

(declare-fun e!70671 () Bool)

(assert (=> d!30133 (= c!19117 e!70671)))

(declare-fun res!53824 () Bool)

(assert (=> d!30133 (=> (not res!53824) (not e!70671))))

(assert (=> d!30133 (= res!53824 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun e!70669 () ListLongMap!1591)

(assert (=> d!30133 (= lt!55900 e!70669)))

(assert (=> d!30133 (= c!19116 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30133 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30133 (= (getCurrentListMap!487 (_keys!4316 newMap!16) lt!55413 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!55881)))

(declare-fun b!108592 () Bool)

(declare-fun e!70664 () Bool)

(assert (=> b!108592 (= e!70662 e!70664)))

(declare-fun res!53830 () Bool)

(assert (=> b!108592 (= res!53830 call!11536)))

(assert (=> b!108592 (=> (not res!53830) (not e!70664))))

(declare-fun b!108593 () Bool)

(declare-fun lt!55887 () Unit!3339)

(assert (=> b!108593 (= e!70672 lt!55887)))

(declare-fun lt!55899 () ListLongMap!1591)

(assert (=> b!108593 (= lt!55899 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) lt!55413 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55897 () (_ BitVec 64))

(assert (=> b!108593 (= lt!55897 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55898 () (_ BitVec 64))

(assert (=> b!108593 (= lt!55898 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55883 () Unit!3339)

(assert (=> b!108593 (= lt!55883 (addStillContains!75 lt!55899 lt!55897 (zeroValue!2479 newMap!16) lt!55898))))

(assert (=> b!108593 (contains!834 (+!148 lt!55899 (tuple2!2423 lt!55897 (zeroValue!2479 newMap!16))) lt!55898)))

(declare-fun lt!55890 () Unit!3339)

(assert (=> b!108593 (= lt!55890 lt!55883)))

(declare-fun lt!55882 () ListLongMap!1591)

(assert (=> b!108593 (= lt!55882 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) lt!55413 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55893 () (_ BitVec 64))

(assert (=> b!108593 (= lt!55893 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55889 () (_ BitVec 64))

(assert (=> b!108593 (= lt!55889 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55894 () Unit!3339)

(assert (=> b!108593 (= lt!55894 (addApplyDifferent!75 lt!55882 lt!55893 (minValue!2479 newMap!16) lt!55889))))

(assert (=> b!108593 (= (apply!99 (+!148 lt!55882 (tuple2!2423 lt!55893 (minValue!2479 newMap!16))) lt!55889) (apply!99 lt!55882 lt!55889))))

(declare-fun lt!55891 () Unit!3339)

(assert (=> b!108593 (= lt!55891 lt!55894)))

(declare-fun lt!55884 () ListLongMap!1591)

(assert (=> b!108593 (= lt!55884 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) lt!55413 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55886 () (_ BitVec 64))

(assert (=> b!108593 (= lt!55886 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55896 () (_ BitVec 64))

(assert (=> b!108593 (= lt!55896 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!55880 () Unit!3339)

(assert (=> b!108593 (= lt!55880 (addApplyDifferent!75 lt!55884 lt!55886 (zeroValue!2479 newMap!16) lt!55896))))

(assert (=> b!108593 (= (apply!99 (+!148 lt!55884 (tuple2!2423 lt!55886 (zeroValue!2479 newMap!16))) lt!55896) (apply!99 lt!55884 lt!55896))))

(declare-fun lt!55888 () Unit!3339)

(assert (=> b!108593 (= lt!55888 lt!55880)))

(declare-fun lt!55901 () ListLongMap!1591)

(assert (=> b!108593 (= lt!55901 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) lt!55413 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!55885 () (_ BitVec 64))

(assert (=> b!108593 (= lt!55885 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55895 () (_ BitVec 64))

(assert (=> b!108593 (= lt!55895 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108593 (= lt!55887 (addApplyDifferent!75 lt!55901 lt!55885 (minValue!2479 newMap!16) lt!55895))))

(assert (=> b!108593 (= (apply!99 (+!148 lt!55901 (tuple2!2423 lt!55885 (minValue!2479 newMap!16))) lt!55895) (apply!99 lt!55901 lt!55895))))

(declare-fun b!108594 () Bool)

(assert (=> b!108594 (= e!70669 (+!148 call!11539 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))

(declare-fun bm!11537 () Bool)

(assert (=> bm!11537 (= call!11541 (contains!834 lt!55881 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108595 () Bool)

(declare-fun c!19118 () Bool)

(assert (=> b!108595 (= c!19118 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!70670 () ListLongMap!1591)

(declare-fun e!70661 () ListLongMap!1591)

(assert (=> b!108595 (= e!70670 e!70661)))

(declare-fun e!70673 () Bool)

(declare-fun b!108596 () Bool)

(assert (=> b!108596 (= e!70673 (= (apply!99 lt!55881 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1349 (select (arr!2075 lt!55413) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108596 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 lt!55413)))))

(assert (=> b!108596 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108597 () Bool)

(assert (=> b!108597 (= e!70671 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108598 () Bool)

(assert (=> b!108598 (= e!70665 e!70662)))

(declare-fun c!19115 () Bool)

(assert (=> b!108598 (= c!19115 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108599 () Bool)

(assert (=> b!108599 (= e!70668 (= (apply!99 lt!55881 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2479 newMap!16)))))

(declare-fun b!108600 () Bool)

(declare-fun res!53825 () Bool)

(assert (=> b!108600 (=> (not res!53825) (not e!70665))))

(declare-fun e!70667 () Bool)

(assert (=> b!108600 (= res!53825 e!70667)))

(declare-fun res!53823 () Bool)

(assert (=> b!108600 (=> res!53823 e!70667)))

(declare-fun e!70663 () Bool)

(assert (=> b!108600 (= res!53823 (not e!70663))))

(declare-fun res!53826 () Bool)

(assert (=> b!108600 (=> (not res!53826) (not e!70663))))

(assert (=> b!108600 (= res!53826 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108601 () Bool)

(assert (=> b!108601 (= e!70661 call!11542)))

(declare-fun b!108602 () Bool)

(declare-fun res!53831 () Bool)

(assert (=> b!108602 (=> (not res!53831) (not e!70665))))

(assert (=> b!108602 (= res!53831 e!70666)))

(declare-fun c!19113 () Bool)

(assert (=> b!108602 (= c!19113 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11538 () Bool)

(assert (=> bm!11538 (= call!11538 call!11537)))

(declare-fun bm!11539 () Bool)

(assert (=> bm!11539 (= call!11536 (contains!834 lt!55881 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108603 () Bool)

(assert (=> b!108603 (= e!70664 (= (apply!99 lt!55881 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2479 newMap!16)))))

(declare-fun b!108604 () Bool)

(assert (=> b!108604 (= e!70661 call!11540)))

(declare-fun b!108605 () Bool)

(assert (=> b!108605 (= e!70670 call!11542)))

(declare-fun b!108606 () Bool)

(assert (=> b!108606 (= e!70667 e!70673)))

(declare-fun res!53827 () Bool)

(assert (=> b!108606 (=> (not res!53827) (not e!70673))))

(assert (=> b!108606 (= res!53827 (contains!834 lt!55881 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108606 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108607 () Bool)

(assert (=> b!108607 (= e!70663 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108608 () Bool)

(assert (=> b!108608 (= e!70669 e!70670)))

(assert (=> b!108608 (= c!19114 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!30133 c!19116) b!108594))

(assert (= (and d!30133 (not c!19116)) b!108608))

(assert (= (and b!108608 c!19114) b!108605))

(assert (= (and b!108608 (not c!19114)) b!108595))

(assert (= (and b!108595 c!19118) b!108601))

(assert (= (and b!108595 (not c!19118)) b!108604))

(assert (= (or b!108601 b!108604) bm!11534))

(assert (= (or b!108605 bm!11534) bm!11538))

(assert (= (or b!108605 b!108601) bm!11535))

(assert (= (or b!108594 bm!11538) bm!11536))

(assert (= (or b!108594 bm!11535) bm!11533))

(assert (= (and d!30133 res!53824) b!108597))

(assert (= (and d!30133 c!19117) b!108593))

(assert (= (and d!30133 (not c!19117)) b!108591))

(assert (= (and d!30133 res!53828) b!108600))

(assert (= (and b!108600 res!53826) b!108607))

(assert (= (and b!108600 (not res!53823)) b!108606))

(assert (= (and b!108606 res!53827) b!108596))

(assert (= (and b!108600 res!53825) b!108602))

(assert (= (and b!108602 c!19113) b!108590))

(assert (= (and b!108602 (not c!19113)) b!108588))

(assert (= (and b!108590 res!53829) b!108599))

(assert (= (or b!108590 b!108588) bm!11537))

(assert (= (and b!108602 res!53831) b!108598))

(assert (= (and b!108598 c!19115) b!108592))

(assert (= (and b!108598 (not c!19115)) b!108589))

(assert (= (and b!108592 res!53830) b!108603))

(assert (= (or b!108592 b!108589) bm!11539))

(declare-fun b_lambda!4883 () Bool)

(assert (=> (not b_lambda!4883) (not b!108596)))

(assert (=> b!108596 t!5783))

(declare-fun b_and!6709 () Bool)

(assert (= b_and!6705 (and (=> t!5783 result!3521) b_and!6709)))

(assert (=> b!108596 t!5785))

(declare-fun b_and!6711 () Bool)

(assert (= b_and!6707 (and (=> t!5785 result!3523) b_and!6711)))

(assert (=> b!108607 m!121517))

(assert (=> b!108607 m!121517))

(assert (=> b!108607 m!121519))

(assert (=> d!30133 m!121521))

(declare-fun m!122401 () Bool)

(assert (=> bm!11539 m!122401))

(declare-fun m!122403 () Bool)

(assert (=> bm!11537 m!122403))

(declare-fun m!122405 () Bool)

(assert (=> b!108603 m!122405))

(declare-fun m!122407 () Bool)

(assert (=> bm!11536 m!122407))

(declare-fun m!122409 () Bool)

(assert (=> b!108594 m!122409))

(declare-fun m!122411 () Bool)

(assert (=> b!108599 m!122411))

(assert (=> b!108597 m!121517))

(assert (=> b!108597 m!121517))

(assert (=> b!108597 m!121519))

(declare-fun m!122413 () Bool)

(assert (=> b!108593 m!122413))

(declare-fun m!122415 () Bool)

(assert (=> b!108593 m!122415))

(declare-fun m!122417 () Bool)

(assert (=> b!108593 m!122417))

(declare-fun m!122419 () Bool)

(assert (=> b!108593 m!122419))

(declare-fun m!122421 () Bool)

(assert (=> b!108593 m!122421))

(declare-fun m!122423 () Bool)

(assert (=> b!108593 m!122423))

(declare-fun m!122425 () Bool)

(assert (=> b!108593 m!122425))

(assert (=> b!108593 m!122407))

(declare-fun m!122427 () Bool)

(assert (=> b!108593 m!122427))

(assert (=> b!108593 m!122423))

(declare-fun m!122429 () Bool)

(assert (=> b!108593 m!122429))

(assert (=> b!108593 m!122417))

(declare-fun m!122431 () Bool)

(assert (=> b!108593 m!122431))

(assert (=> b!108593 m!122419))

(declare-fun m!122433 () Bool)

(assert (=> b!108593 m!122433))

(assert (=> b!108593 m!122413))

(declare-fun m!122435 () Bool)

(assert (=> b!108593 m!122435))

(declare-fun m!122437 () Bool)

(assert (=> b!108593 m!122437))

(declare-fun m!122439 () Bool)

(assert (=> b!108593 m!122439))

(assert (=> b!108593 m!121517))

(declare-fun m!122441 () Bool)

(assert (=> b!108593 m!122441))

(assert (=> b!108606 m!121517))

(assert (=> b!108606 m!121517))

(declare-fun m!122443 () Bool)

(assert (=> b!108606 m!122443))

(declare-fun m!122445 () Bool)

(assert (=> b!108596 m!122445))

(assert (=> b!108596 m!121569))

(declare-fun m!122447 () Bool)

(assert (=> b!108596 m!122447))

(assert (=> b!108596 m!121517))

(declare-fun m!122449 () Bool)

(assert (=> b!108596 m!122449))

(assert (=> b!108596 m!121517))

(assert (=> b!108596 m!121569))

(assert (=> b!108596 m!122445))

(declare-fun m!122451 () Bool)

(assert (=> bm!11533 m!122451))

(assert (=> b!108129 d!30133))

(declare-fun c!19119 () Bool)

(declare-fun d!30135 () Bool)

(assert (=> d!30135 (= c!19119 (and ((_ is Cons!1644) (toList!811 lt!55787)) (= (_1!1221 (h!2242 (toList!811 lt!55787))) (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))))

(declare-fun e!70674 () Option!162)

(assert (=> d!30135 (= (getValueByKey!156 (toList!811 lt!55787) (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))) e!70674)))

(declare-fun b!108611 () Bool)

(declare-fun e!70675 () Option!162)

(assert (=> b!108611 (= e!70675 (getValueByKey!156 (t!5776 (toList!811 lt!55787)) (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun b!108612 () Bool)

(assert (=> b!108612 (= e!70675 None!160)))

(declare-fun b!108610 () Bool)

(assert (=> b!108610 (= e!70674 e!70675)))

(declare-fun c!19120 () Bool)

(assert (=> b!108610 (= c!19120 (and ((_ is Cons!1644) (toList!811 lt!55787)) (not (= (_1!1221 (h!2242 (toList!811 lt!55787))) (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))))

(declare-fun b!108609 () Bool)

(assert (=> b!108609 (= e!70674 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55787)))))))

(assert (= (and d!30135 c!19119) b!108609))

(assert (= (and d!30135 (not c!19119)) b!108610))

(assert (= (and b!108610 c!19120) b!108611))

(assert (= (and b!108610 (not c!19120)) b!108612))

(declare-fun m!122453 () Bool)

(assert (=> b!108611 m!122453))

(assert (=> b!108432 d!30135))

(declare-fun d!30137 () Bool)

(assert (=> d!30137 (= (apply!99 lt!55655 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1352 (getValueByKey!156 (toList!811 lt!55655) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4459 () Bool)

(assert (= bs!4459 d!30137))

(declare-fun m!122455 () Bool)

(assert (=> bs!4459 m!122455))

(assert (=> bs!4459 m!122455))

(declare-fun m!122457 () Bool)

(assert (=> bs!4459 m!122457))

(assert (=> b!108360 d!30137))

(declare-fun d!30139 () Bool)

(assert (=> d!30139 (isDefined!110 (getValueByKey!156 (toList!811 lt!55339) (_1!1221 lt!55249)))))

(declare-fun lt!55902 () Unit!3339)

(assert (=> d!30139 (= lt!55902 (choose!683 (toList!811 lt!55339) (_1!1221 lt!55249)))))

(declare-fun e!70676 () Bool)

(assert (=> d!30139 e!70676))

(declare-fun res!53832 () Bool)

(assert (=> d!30139 (=> (not res!53832) (not e!70676))))

(assert (=> d!30139 (= res!53832 (isStrictlySorted!305 (toList!811 lt!55339)))))

(assert (=> d!30139 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55339) (_1!1221 lt!55249)) lt!55902)))

(declare-fun b!108613 () Bool)

(assert (=> b!108613 (= e!70676 (containsKey!160 (toList!811 lt!55339) (_1!1221 lt!55249)))))

(assert (= (and d!30139 res!53832) b!108613))

(assert (=> d!30139 m!121371))

(assert (=> d!30139 m!121371))

(assert (=> d!30139 m!121755))

(declare-fun m!122459 () Bool)

(assert (=> d!30139 m!122459))

(declare-fun m!122461 () Bool)

(assert (=> d!30139 m!122461))

(assert (=> b!108613 m!121751))

(assert (=> b!108225 d!30139))

(declare-fun d!30141 () Bool)

(assert (=> d!30141 (= (isDefined!110 (getValueByKey!156 (toList!811 lt!55339) (_1!1221 lt!55249))) (not (isEmpty!379 (getValueByKey!156 (toList!811 lt!55339) (_1!1221 lt!55249)))))))

(declare-fun bs!4460 () Bool)

(assert (= bs!4460 d!30141))

(assert (=> bs!4460 m!121371))

(declare-fun m!122463 () Bool)

(assert (=> bs!4460 m!122463))

(assert (=> b!108225 d!30141))

(assert (=> b!108225 d!29971))

(declare-fun d!30143 () Bool)

(declare-fun res!53837 () Bool)

(declare-fun e!70681 () Bool)

(assert (=> d!30143 (=> res!53837 e!70681)))

(assert (=> d!30143 (= res!53837 (or ((_ is Nil!1645) lt!55626) ((_ is Nil!1645) (t!5776 lt!55626))))))

(assert (=> d!30143 (= (isStrictlySorted!305 lt!55626) e!70681)))

(declare-fun b!108618 () Bool)

(declare-fun e!70682 () Bool)

(assert (=> b!108618 (= e!70681 e!70682)))

(declare-fun res!53838 () Bool)

(assert (=> b!108618 (=> (not res!53838) (not e!70682))))

(assert (=> b!108618 (= res!53838 (bvslt (_1!1221 (h!2242 lt!55626)) (_1!1221 (h!2242 (t!5776 lt!55626)))))))

(declare-fun b!108619 () Bool)

(assert (=> b!108619 (= e!70682 (isStrictlySorted!305 (t!5776 lt!55626)))))

(assert (= (and d!30143 (not res!53837)) b!108618))

(assert (= (and b!108618 res!53838) b!108619))

(declare-fun m!122465 () Bool)

(assert (=> b!108619 m!122465))

(assert (=> d!29961 d!30143))

(declare-fun d!30145 () Bool)

(declare-fun res!53839 () Bool)

(declare-fun e!70683 () Bool)

(assert (=> d!30145 (=> res!53839 e!70683)))

(assert (=> d!30145 (= res!53839 (or ((_ is Nil!1645) (toList!811 (+!148 lt!55250 lt!55249))) ((_ is Nil!1645) (t!5776 (toList!811 (+!148 lt!55250 lt!55249))))))))

(assert (=> d!30145 (= (isStrictlySorted!305 (toList!811 (+!148 lt!55250 lt!55249))) e!70683)))

(declare-fun b!108620 () Bool)

(declare-fun e!70684 () Bool)

(assert (=> b!108620 (= e!70683 e!70684)))

(declare-fun res!53840 () Bool)

(assert (=> b!108620 (=> (not res!53840) (not e!70684))))

(assert (=> b!108620 (= res!53840 (bvslt (_1!1221 (h!2242 (toList!811 (+!148 lt!55250 lt!55249)))) (_1!1221 (h!2242 (t!5776 (toList!811 (+!148 lt!55250 lt!55249)))))))))

(declare-fun b!108621 () Bool)

(assert (=> b!108621 (= e!70684 (isStrictlySorted!305 (t!5776 (toList!811 (+!148 lt!55250 lt!55249)))))))

(assert (= (and d!30145 (not res!53839)) b!108620))

(assert (= (and b!108620 res!53840) b!108621))

(declare-fun m!122467 () Bool)

(assert (=> b!108621 m!122467))

(assert (=> d!29961 d!30145))

(declare-fun d!30147 () Bool)

(declare-fun e!70685 () Bool)

(assert (=> d!30147 e!70685))

(declare-fun res!53841 () Bool)

(assert (=> d!30147 (=> (not res!53841) (not e!70685))))

(declare-fun lt!55905 () ListLongMap!1591)

(assert (=> d!30147 (= res!53841 (contains!834 lt!55905 (_1!1221 (ite (or c!18975 c!18973) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(declare-fun lt!55903 () List!1648)

(assert (=> d!30147 (= lt!55905 (ListLongMap!1592 lt!55903))))

(declare-fun lt!55904 () Unit!3339)

(declare-fun lt!55906 () Unit!3339)

(assert (=> d!30147 (= lt!55904 lt!55906)))

(assert (=> d!30147 (= (getValueByKey!156 lt!55903 (_1!1221 (ite (or c!18975 c!18973) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))) (Some!161 (_2!1221 (ite (or c!18975 c!18973) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(assert (=> d!30147 (= lt!55906 (lemmaContainsTupThenGetReturnValue!74 lt!55903 (_1!1221 (ite (or c!18975 c!18973) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) (_2!1221 (ite (or c!18975 c!18973) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(assert (=> d!30147 (= lt!55903 (insertStrictlySorted!76 (toList!811 (ite c!18975 call!11468 (ite c!18973 call!11469 call!11471))) (_1!1221 (ite (or c!18975 c!18973) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) (_2!1221 (ite (or c!18975 c!18973) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(assert (=> d!30147 (= (+!148 (ite c!18975 call!11468 (ite c!18973 call!11469 call!11471)) (ite (or c!18975 c!18973) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) lt!55905)))

(declare-fun b!108622 () Bool)

(declare-fun res!53842 () Bool)

(assert (=> b!108622 (=> (not res!53842) (not e!70685))))

(assert (=> b!108622 (= res!53842 (= (getValueByKey!156 (toList!811 lt!55905) (_1!1221 (ite (or c!18975 c!18973) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))) (Some!161 (_2!1221 (ite (or c!18975 c!18973) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))))

(declare-fun b!108623 () Bool)

(assert (=> b!108623 (= e!70685 (contains!835 (toList!811 lt!55905) (ite (or c!18975 c!18973) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(assert (= (and d!30147 res!53841) b!108622))

(assert (= (and b!108622 res!53842) b!108623))

(declare-fun m!122469 () Bool)

(assert (=> d!30147 m!122469))

(declare-fun m!122471 () Bool)

(assert (=> d!30147 m!122471))

(declare-fun m!122473 () Bool)

(assert (=> d!30147 m!122473))

(declare-fun m!122475 () Bool)

(assert (=> d!30147 m!122475))

(declare-fun m!122477 () Bool)

(assert (=> b!108622 m!122477))

(declare-fun m!122479 () Bool)

(assert (=> b!108623 m!122479))

(assert (=> bm!11464 d!30147))

(declare-fun b!108624 () Bool)

(declare-fun e!70692 () Bool)

(declare-fun lt!55912 () ListLongMap!1591)

(assert (=> b!108624 (= e!70692 (isEmpty!378 lt!55912))))

(declare-fun b!108625 () Bool)

(assert (=> b!108625 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(assert (=> b!108625 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (ite c!18944 (_values!2589 newMap!16) lt!55413))))))

(declare-fun e!70688 () Bool)

(assert (=> b!108625 (= e!70688 (= (apply!99 lt!55912 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1349 (select (arr!2075 (ite c!18944 (_values!2589 newMap!16) lt!55413)) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108626 () Bool)

(declare-fun lt!55908 () Unit!3339)

(declare-fun lt!55910 () Unit!3339)

(assert (=> b!108626 (= lt!55908 lt!55910)))

(declare-fun lt!55913 () V!3235)

(declare-fun lt!55911 () (_ BitVec 64))

(declare-fun lt!55907 () ListLongMap!1591)

(declare-fun lt!55909 () (_ BitVec 64))

(assert (=> b!108626 (not (contains!834 (+!148 lt!55907 (tuple2!2423 lt!55909 lt!55913)) lt!55911))))

(assert (=> b!108626 (= lt!55910 (addStillNotContains!49 lt!55907 lt!55909 lt!55913 lt!55911))))

(assert (=> b!108626 (= lt!55911 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!108626 (= lt!55913 (get!1349 (select (arr!2075 (ite c!18944 (_values!2589 newMap!16) lt!55413)) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!108626 (= lt!55909 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11543 () ListLongMap!1591)

(assert (=> b!108626 (= lt!55907 call!11543)))

(declare-fun e!70691 () ListLongMap!1591)

(assert (=> b!108626 (= e!70691 (+!148 call!11543 (tuple2!2423 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) (get!1349 (select (arr!2075 (ite c!18944 (_values!2589 newMap!16) lt!55413)) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!108627 () Bool)

(declare-fun e!70686 () Bool)

(assert (=> b!108627 (= e!70686 e!70688)))

(assert (=> b!108627 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun res!53846 () Bool)

(assert (=> b!108627 (= res!53846 (contains!834 lt!55912 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108627 (=> (not res!53846) (not e!70688))))

(declare-fun b!108628 () Bool)

(assert (=> b!108628 (= e!70692 (= lt!55912 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (ite c!18944 (_values!2589 newMap!16) lt!55413) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2606 newMap!16))))))

(declare-fun b!108629 () Bool)

(assert (=> b!108629 (= e!70691 call!11543)))

(declare-fun b!108630 () Bool)

(declare-fun e!70690 () ListLongMap!1591)

(assert (=> b!108630 (= e!70690 (ListLongMap!1592 Nil!1645))))

(declare-fun b!108631 () Bool)

(assert (=> b!108631 (= e!70686 e!70692)))

(declare-fun c!19121 () Bool)

(assert (=> b!108631 (= c!19121 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun d!30149 () Bool)

(declare-fun e!70687 () Bool)

(assert (=> d!30149 e!70687))

(declare-fun res!53843 () Bool)

(assert (=> d!30149 (=> (not res!53843) (not e!70687))))

(assert (=> d!30149 (= res!53843 (not (contains!834 lt!55912 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30149 (= lt!55912 e!70690)))

(declare-fun c!19123 () Bool)

(assert (=> d!30149 (= c!19123 (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(assert (=> d!30149 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30149 (= (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (ite c!18944 (_values!2589 newMap!16) lt!55413) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!55912)))

(declare-fun b!108632 () Bool)

(assert (=> b!108632 (= e!70687 e!70686)))

(declare-fun c!19124 () Bool)

(declare-fun e!70689 () Bool)

(assert (=> b!108632 (= c!19124 e!70689)))

(declare-fun res!53845 () Bool)

(assert (=> b!108632 (=> (not res!53845) (not e!70689))))

(assert (=> b!108632 (= res!53845 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108633 () Bool)

(assert (=> b!108633 (= e!70689 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108633 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!108634 () Bool)

(assert (=> b!108634 (= e!70690 e!70691)))

(declare-fun c!19122 () Bool)

(assert (=> b!108634 (= c!19122 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108635 () Bool)

(declare-fun res!53844 () Bool)

(assert (=> b!108635 (=> (not res!53844) (not e!70687))))

(assert (=> b!108635 (= res!53844 (not (contains!834 lt!55912 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!11540 () Bool)

(assert (=> bm!11540 (= call!11543 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (ite c!18944 (_values!2589 newMap!16) lt!55413) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2606 newMap!16)))))

(assert (= (and d!30149 c!19123) b!108630))

(assert (= (and d!30149 (not c!19123)) b!108634))

(assert (= (and b!108634 c!19122) b!108626))

(assert (= (and b!108634 (not c!19122)) b!108629))

(assert (= (or b!108626 b!108629) bm!11540))

(assert (= (and d!30149 res!53843) b!108635))

(assert (= (and b!108635 res!53844) b!108632))

(assert (= (and b!108632 res!53845) b!108633))

(assert (= (and b!108632 c!19124) b!108627))

(assert (= (and b!108632 (not c!19124)) b!108631))

(assert (= (and b!108627 res!53846) b!108625))

(assert (= (and b!108631 c!19121) b!108628))

(assert (= (and b!108631 (not c!19121)) b!108624))

(declare-fun b_lambda!4885 () Bool)

(assert (=> (not b_lambda!4885) (not b!108625)))

(assert (=> b!108625 t!5783))

(declare-fun b_and!6713 () Bool)

(assert (= b_and!6709 (and (=> t!5783 result!3521) b_and!6713)))

(assert (=> b!108625 t!5785))

(declare-fun b_and!6715 () Bool)

(assert (= b_and!6711 (and (=> t!5785 result!3523) b_and!6715)))

(declare-fun b_lambda!4887 () Bool)

(assert (=> (not b_lambda!4887) (not b!108626)))

(assert (=> b!108626 t!5783))

(declare-fun b_and!6717 () Bool)

(assert (= b_and!6713 (and (=> t!5783 result!3521) b_and!6717)))

(assert (=> b!108626 t!5785))

(declare-fun b_and!6719 () Bool)

(assert (= b_and!6715 (and (=> t!5785 result!3523) b_and!6719)))

(declare-fun m!122481 () Bool)

(assert (=> b!108624 m!122481))

(declare-fun m!122483 () Bool)

(assert (=> b!108628 m!122483))

(assert (=> b!108625 m!121569))

(assert (=> b!108625 m!121517))

(declare-fun m!122485 () Bool)

(assert (=> b!108625 m!122485))

(assert (=> b!108625 m!121517))

(assert (=> b!108625 m!121961))

(assert (=> b!108625 m!121961))

(assert (=> b!108625 m!121569))

(assert (=> b!108625 m!121963))

(declare-fun m!122487 () Bool)

(assert (=> b!108635 m!122487))

(declare-fun m!122489 () Bool)

(assert (=> b!108626 m!122489))

(assert (=> b!108626 m!121569))

(declare-fun m!122491 () Bool)

(assert (=> b!108626 m!122491))

(assert (=> b!108626 m!121517))

(declare-fun m!122493 () Bool)

(assert (=> b!108626 m!122493))

(assert (=> b!108626 m!121961))

(assert (=> b!108626 m!121961))

(assert (=> b!108626 m!121569))

(assert (=> b!108626 m!121963))

(assert (=> b!108626 m!122493))

(declare-fun m!122495 () Bool)

(assert (=> b!108626 m!122495))

(assert (=> b!108633 m!121517))

(assert (=> b!108633 m!121517))

(assert (=> b!108633 m!121519))

(assert (=> bm!11540 m!122483))

(assert (=> b!108627 m!121517))

(assert (=> b!108627 m!121517))

(declare-fun m!122497 () Bool)

(assert (=> b!108627 m!122497))

(assert (=> b!108634 m!121517))

(assert (=> b!108634 m!121517))

(assert (=> b!108634 m!121519))

(declare-fun m!122499 () Bool)

(assert (=> d!30149 m!122499))

(assert (=> d!30149 m!121521))

(assert (=> bm!11507 d!30149))

(declare-fun d!30151 () Bool)

(assert (=> d!30151 (= (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108145 d!30151))

(declare-fun d!30153 () Bool)

(declare-fun lt!55914 () Bool)

(assert (=> d!30153 (= lt!55914 (select (content!110 (toList!811 lt!55779)) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun e!70693 () Bool)

(assert (=> d!30153 (= lt!55914 e!70693)))

(declare-fun res!53848 () Bool)

(assert (=> d!30153 (=> (not res!53848) (not e!70693))))

(assert (=> d!30153 (= res!53848 ((_ is Cons!1644) (toList!811 lt!55779)))))

(assert (=> d!30153 (= (contains!835 (toList!811 lt!55779) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55914)))

(declare-fun b!108636 () Bool)

(declare-fun e!70694 () Bool)

(assert (=> b!108636 (= e!70693 e!70694)))

(declare-fun res!53847 () Bool)

(assert (=> b!108636 (=> res!53847 e!70694)))

(assert (=> b!108636 (= res!53847 (= (h!2242 (toList!811 lt!55779)) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!108637 () Bool)

(assert (=> b!108637 (= e!70694 (contains!835 (t!5776 (toList!811 lt!55779)) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(assert (= (and d!30153 res!53848) b!108636))

(assert (= (and b!108636 (not res!53847)) b!108637))

(declare-fun m!122501 () Bool)

(assert (=> d!30153 m!122501))

(declare-fun m!122503 () Bool)

(assert (=> d!30153 m!122503))

(declare-fun m!122505 () Bool)

(assert (=> b!108637 m!122505))

(assert (=> b!108429 d!30153))

(declare-fun b!108638 () Bool)

(declare-fun c!19125 () Bool)

(assert (=> b!108638 (= c!19125 (and ((_ is Cons!1644) (t!5776 (toList!811 (+!148 lt!55250 lt!55249)))) (bvsgt (_1!1221 (h!2242 (t!5776 (toList!811 (+!148 lt!55250 lt!55249))))) (_1!1221 lt!55252))))))

(declare-fun e!70695 () List!1648)

(declare-fun e!70696 () List!1648)

(assert (=> b!108638 (= e!70695 e!70696)))

(declare-fun b!108639 () Bool)

(declare-fun e!70697 () List!1648)

(declare-fun call!11545 () List!1648)

(assert (=> b!108639 (= e!70697 call!11545)))

(declare-fun bm!11541 () Bool)

(declare-fun c!19126 () Bool)

(declare-fun e!70699 () List!1648)

(assert (=> bm!11541 (= call!11545 ($colon$colon!81 e!70699 (ite c!19126 (h!2242 (t!5776 (toList!811 (+!148 lt!55250 lt!55249)))) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252)))))))

(declare-fun c!19127 () Bool)

(assert (=> bm!11541 (= c!19127 c!19126)))

(declare-fun b!108640 () Bool)

(declare-fun call!11544 () List!1648)

(assert (=> b!108640 (= e!70696 call!11544)))

(declare-fun b!108641 () Bool)

(declare-fun call!11546 () List!1648)

(assert (=> b!108641 (= e!70695 call!11546)))

(declare-fun d!30155 () Bool)

(declare-fun e!70698 () Bool)

(assert (=> d!30155 e!70698))

(declare-fun res!53849 () Bool)

(assert (=> d!30155 (=> (not res!53849) (not e!70698))))

(declare-fun lt!55915 () List!1648)

(assert (=> d!30155 (= res!53849 (isStrictlySorted!305 lt!55915))))

(assert (=> d!30155 (= lt!55915 e!70697)))

(assert (=> d!30155 (= c!19126 (and ((_ is Cons!1644) (t!5776 (toList!811 (+!148 lt!55250 lt!55249)))) (bvslt (_1!1221 (h!2242 (t!5776 (toList!811 (+!148 lt!55250 lt!55249))))) (_1!1221 lt!55252))))))

(assert (=> d!30155 (isStrictlySorted!305 (t!5776 (toList!811 (+!148 lt!55250 lt!55249))))))

(assert (=> d!30155 (= (insertStrictlySorted!76 (t!5776 (toList!811 (+!148 lt!55250 lt!55249))) (_1!1221 lt!55252) (_2!1221 lt!55252)) lt!55915)))

(declare-fun b!108642 () Bool)

(assert (=> b!108642 (= e!70697 e!70695)))

(declare-fun c!19128 () Bool)

(assert (=> b!108642 (= c!19128 (and ((_ is Cons!1644) (t!5776 (toList!811 (+!148 lt!55250 lt!55249)))) (= (_1!1221 (h!2242 (t!5776 (toList!811 (+!148 lt!55250 lt!55249))))) (_1!1221 lt!55252))))))

(declare-fun b!108643 () Bool)

(declare-fun res!53850 () Bool)

(assert (=> b!108643 (=> (not res!53850) (not e!70698))))

(assert (=> b!108643 (= res!53850 (containsKey!160 lt!55915 (_1!1221 lt!55252)))))

(declare-fun bm!11542 () Bool)

(assert (=> bm!11542 (= call!11546 call!11545)))

(declare-fun bm!11543 () Bool)

(assert (=> bm!11543 (= call!11544 call!11546)))

(declare-fun b!108644 () Bool)

(assert (=> b!108644 (= e!70699 (insertStrictlySorted!76 (t!5776 (t!5776 (toList!811 (+!148 lt!55250 lt!55249)))) (_1!1221 lt!55252) (_2!1221 lt!55252)))))

(declare-fun b!108645 () Bool)

(assert (=> b!108645 (= e!70696 call!11544)))

(declare-fun b!108646 () Bool)

(assert (=> b!108646 (= e!70698 (contains!835 lt!55915 (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))))))

(declare-fun b!108647 () Bool)

(assert (=> b!108647 (= e!70699 (ite c!19128 (t!5776 (t!5776 (toList!811 (+!148 lt!55250 lt!55249)))) (ite c!19125 (Cons!1644 (h!2242 (t!5776 (toList!811 (+!148 lt!55250 lt!55249)))) (t!5776 (t!5776 (toList!811 (+!148 lt!55250 lt!55249))))) Nil!1645)))))

(assert (= (and d!30155 c!19126) b!108639))

(assert (= (and d!30155 (not c!19126)) b!108642))

(assert (= (and b!108642 c!19128) b!108641))

(assert (= (and b!108642 (not c!19128)) b!108638))

(assert (= (and b!108638 c!19125) b!108645))

(assert (= (and b!108638 (not c!19125)) b!108640))

(assert (= (or b!108645 b!108640) bm!11543))

(assert (= (or b!108641 bm!11543) bm!11542))

(assert (= (or b!108639 bm!11542) bm!11541))

(assert (= (and bm!11541 c!19127) b!108644))

(assert (= (and bm!11541 (not c!19127)) b!108647))

(assert (= (and d!30155 res!53849) b!108643))

(assert (= (and b!108643 res!53850) b!108646))

(declare-fun m!122507 () Bool)

(assert (=> b!108646 m!122507))

(declare-fun m!122509 () Bool)

(assert (=> b!108643 m!122509))

(declare-fun m!122511 () Bool)

(assert (=> bm!11541 m!122511))

(declare-fun m!122513 () Bool)

(assert (=> d!30155 m!122513))

(assert (=> d!30155 m!122467))

(declare-fun m!122515 () Bool)

(assert (=> b!108644 m!122515))

(assert (=> b!108288 d!30155))

(declare-fun d!30157 () Bool)

(declare-fun c!19129 () Bool)

(assert (=> d!30157 (= c!19129 (and ((_ is Cons!1644) (toList!811 lt!55795)) (= (_1!1221 (h!2242 (toList!811 lt!55795))) (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!70700 () Option!162)

(assert (=> d!30157 (= (getValueByKey!156 (toList!811 lt!55795) (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) e!70700)))

(declare-fun e!70701 () Option!162)

(declare-fun b!108650 () Bool)

(assert (=> b!108650 (= e!70701 (getValueByKey!156 (t!5776 (toList!811 lt!55795)) (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!108651 () Bool)

(assert (=> b!108651 (= e!70701 None!160)))

(declare-fun b!108649 () Bool)

(assert (=> b!108649 (= e!70700 e!70701)))

(declare-fun c!19130 () Bool)

(assert (=> b!108649 (= c!19130 (and ((_ is Cons!1644) (toList!811 lt!55795)) (not (= (_1!1221 (h!2242 (toList!811 lt!55795))) (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun b!108648 () Bool)

(assert (=> b!108648 (= e!70700 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55795)))))))

(assert (= (and d!30157 c!19129) b!108648))

(assert (= (and d!30157 (not c!19129)) b!108649))

(assert (= (and b!108649 c!19130) b!108650))

(assert (= (and b!108649 (not c!19130)) b!108651))

(declare-fun m!122517 () Bool)

(assert (=> b!108650 m!122517))

(assert (=> b!108437 d!30157))

(declare-fun d!30159 () Bool)

(declare-fun lt!55916 () (_ BitVec 32))

(assert (=> d!30159 (and (bvsge lt!55916 #b00000000000000000000000000000000) (bvsle lt!55916 (bvsub (size!2330 (_keys!4316 (_2!1222 lt!55429))) #b00000000000000000000000000000000)))))

(declare-fun e!70703 () (_ BitVec 32))

(assert (=> d!30159 (= lt!55916 e!70703)))

(declare-fun c!19132 () Bool)

(assert (=> d!30159 (= c!19132 (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 (_2!1222 lt!55429)))))))

(assert (=> d!30159 (and (bvsle #b00000000000000000000000000000000 (size!2330 (_keys!4316 (_2!1222 lt!55429)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2330 (_keys!4316 (_2!1222 lt!55429))) (size!2330 (_keys!4316 (_2!1222 lt!55429)))))))

(assert (=> d!30159 (= (arrayCountValidKeys!0 (_keys!4316 (_2!1222 lt!55429)) #b00000000000000000000000000000000 (size!2330 (_keys!4316 (_2!1222 lt!55429)))) lt!55916)))

(declare-fun b!108652 () Bool)

(declare-fun e!70702 () (_ BitVec 32))

(declare-fun call!11547 () (_ BitVec 32))

(assert (=> b!108652 (= e!70702 (bvadd #b00000000000000000000000000000001 call!11547))))

(declare-fun b!108653 () Bool)

(assert (=> b!108653 (= e!70703 e!70702)))

(declare-fun c!19131 () Bool)

(assert (=> b!108653 (= c!19131 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (_2!1222 lt!55429))) #b00000000000000000000000000000000)))))

(declare-fun b!108654 () Bool)

(assert (=> b!108654 (= e!70702 call!11547)))

(declare-fun b!108655 () Bool)

(assert (=> b!108655 (= e!70703 #b00000000000000000000000000000000)))

(declare-fun bm!11544 () Bool)

(assert (=> bm!11544 (= call!11547 (arrayCountValidKeys!0 (_keys!4316 (_2!1222 lt!55429)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2330 (_keys!4316 (_2!1222 lt!55429)))))))

(assert (= (and d!30159 c!19132) b!108655))

(assert (= (and d!30159 (not c!19132)) b!108653))

(assert (= (and b!108653 c!19131) b!108652))

(assert (= (and b!108653 (not c!19131)) b!108654))

(assert (= (or b!108652 b!108654) bm!11544))

(declare-fun m!122519 () Bool)

(assert (=> b!108653 m!122519))

(assert (=> b!108653 m!122519))

(declare-fun m!122521 () Bool)

(assert (=> b!108653 m!122521))

(declare-fun m!122523 () Bool)

(assert (=> bm!11544 m!122523))

(assert (=> b!108270 d!30159))

(assert (=> b!108090 d!30151))

(declare-fun d!30161 () Bool)

(declare-fun res!53851 () Bool)

(declare-fun e!70704 () Bool)

(assert (=> d!30161 (=> res!53851 e!70704)))

(assert (=> d!30161 (= res!53851 (= (select (arr!2074 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30161 (= (arrayContainsKey!0 (_keys!4316 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!70704)))

(declare-fun b!108656 () Bool)

(declare-fun e!70705 () Bool)

(assert (=> b!108656 (= e!70704 e!70705)))

(declare-fun res!53852 () Bool)

(assert (=> b!108656 (=> (not res!53852) (not e!70705))))

(assert (=> b!108656 (= res!53852 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108657 () Bool)

(assert (=> b!108657 (= e!70705 (arrayContainsKey!0 (_keys!4316 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!30161 (not res!53851)) b!108656))

(assert (= (and b!108656 res!53852) b!108657))

(declare-fun m!122525 () Bool)

(assert (=> d!30161 m!122525))

(assert (=> b!108657 m!121177))

(declare-fun m!122527 () Bool)

(assert (=> b!108657 m!122527))

(assert (=> b!108539 d!30161))

(assert (=> d!29895 d!30107))

(declare-fun d!30163 () Bool)

(assert (=> d!30163 (= (get!1351 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108245 d!30163))

(declare-fun d!30165 () Bool)

(declare-fun e!70707 () Bool)

(assert (=> d!30165 e!70707))

(declare-fun res!53853 () Bool)

(assert (=> d!30165 (=> res!53853 e!70707)))

(declare-fun lt!55917 () Bool)

(assert (=> d!30165 (= res!53853 (not lt!55917))))

(declare-fun lt!55918 () Bool)

(assert (=> d!30165 (= lt!55917 lt!55918)))

(declare-fun lt!55919 () Unit!3339)

(declare-fun e!70706 () Unit!3339)

(assert (=> d!30165 (= lt!55919 e!70706)))

(declare-fun c!19133 () Bool)

(assert (=> d!30165 (= c!19133 lt!55918)))

(assert (=> d!30165 (= lt!55918 (containsKey!160 (toList!811 lt!55811) (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30165 (= (contains!834 lt!55811 (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55917)))

(declare-fun b!108658 () Bool)

(declare-fun lt!55920 () Unit!3339)

(assert (=> b!108658 (= e!70706 lt!55920)))

(assert (=> b!108658 (= lt!55920 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55811) (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> b!108658 (isDefined!110 (getValueByKey!156 (toList!811 lt!55811) (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!108659 () Bool)

(declare-fun Unit!3374 () Unit!3339)

(assert (=> b!108659 (= e!70706 Unit!3374)))

(declare-fun b!108660 () Bool)

(assert (=> b!108660 (= e!70707 (isDefined!110 (getValueByKey!156 (toList!811 lt!55811) (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (= (and d!30165 c!19133) b!108658))

(assert (= (and d!30165 (not c!19133)) b!108659))

(assert (= (and d!30165 (not res!53853)) b!108660))

(declare-fun m!122529 () Bool)

(assert (=> d!30165 m!122529))

(declare-fun m!122531 () Bool)

(assert (=> b!108658 m!122531))

(assert (=> b!108658 m!122165))

(assert (=> b!108658 m!122165))

(declare-fun m!122533 () Bool)

(assert (=> b!108658 m!122533))

(assert (=> b!108660 m!122165))

(assert (=> b!108660 m!122165))

(assert (=> b!108660 m!122533))

(assert (=> d!30029 d!30165))

(declare-fun d!30167 () Bool)

(declare-fun c!19134 () Bool)

(assert (=> d!30167 (= c!19134 (and ((_ is Cons!1644) lt!55809) (= (_1!1221 (h!2242 lt!55809)) (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!70708 () Option!162)

(assert (=> d!30167 (= (getValueByKey!156 lt!55809 (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) e!70708)))

(declare-fun b!108663 () Bool)

(declare-fun e!70709 () Option!162)

(assert (=> b!108663 (= e!70709 (getValueByKey!156 (t!5776 lt!55809) (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!108664 () Bool)

(assert (=> b!108664 (= e!70709 None!160)))

(declare-fun b!108662 () Bool)

(assert (=> b!108662 (= e!70708 e!70709)))

(declare-fun c!19135 () Bool)

(assert (=> b!108662 (= c!19135 (and ((_ is Cons!1644) lt!55809) (not (= (_1!1221 (h!2242 lt!55809)) (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun b!108661 () Bool)

(assert (=> b!108661 (= e!70708 (Some!161 (_2!1221 (h!2242 lt!55809))))))

(assert (= (and d!30167 c!19134) b!108661))

(assert (= (and d!30167 (not c!19134)) b!108662))

(assert (= (and b!108662 c!19135) b!108663))

(assert (= (and b!108662 (not c!19135)) b!108664))

(declare-fun m!122535 () Bool)

(assert (=> b!108663 m!122535))

(assert (=> d!30029 d!30167))

(declare-fun d!30169 () Bool)

(assert (=> d!30169 (= (getValueByKey!156 lt!55809 (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun lt!55921 () Unit!3339)

(assert (=> d!30169 (= lt!55921 (choose!680 lt!55809 (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun e!70710 () Bool)

(assert (=> d!30169 e!70710))

(declare-fun res!53854 () Bool)

(assert (=> d!30169 (=> (not res!53854) (not e!70710))))

(assert (=> d!30169 (= res!53854 (isStrictlySorted!305 lt!55809))))

(assert (=> d!30169 (= (lemmaContainsTupThenGetReturnValue!74 lt!55809 (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55921)))

(declare-fun b!108665 () Bool)

(declare-fun res!53855 () Bool)

(assert (=> b!108665 (=> (not res!53855) (not e!70710))))

(assert (=> b!108665 (= res!53855 (containsKey!160 lt!55809 (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!108666 () Bool)

(assert (=> b!108666 (= e!70710 (contains!835 lt!55809 (tuple2!2423 (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (= (and d!30169 res!53854) b!108665))

(assert (= (and b!108665 res!53855) b!108666))

(assert (=> d!30169 m!122159))

(declare-fun m!122537 () Bool)

(assert (=> d!30169 m!122537))

(declare-fun m!122539 () Bool)

(assert (=> d!30169 m!122539))

(declare-fun m!122541 () Bool)

(assert (=> b!108665 m!122541))

(declare-fun m!122543 () Bool)

(assert (=> b!108666 m!122543))

(assert (=> d!30029 d!30169))

(declare-fun b!108667 () Bool)

(declare-fun c!19136 () Bool)

(assert (=> b!108667 (= c!19136 (and ((_ is Cons!1644) (toList!811 lt!55497)) (bvsgt (_1!1221 (h!2242 (toList!811 lt!55497))) (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!70711 () List!1648)

(declare-fun e!70712 () List!1648)

(assert (=> b!108667 (= e!70711 e!70712)))

(declare-fun b!108668 () Bool)

(declare-fun e!70713 () List!1648)

(declare-fun call!11549 () List!1648)

(assert (=> b!108668 (= e!70713 call!11549)))

(declare-fun bm!11545 () Bool)

(declare-fun c!19137 () Bool)

(declare-fun e!70715 () List!1648)

(assert (=> bm!11545 (= call!11549 ($colon$colon!81 e!70715 (ite c!19137 (h!2242 (toList!811 lt!55497)) (tuple2!2423 (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun c!19138 () Bool)

(assert (=> bm!11545 (= c!19138 c!19137)))

(declare-fun b!108669 () Bool)

(declare-fun call!11548 () List!1648)

(assert (=> b!108669 (= e!70712 call!11548)))

(declare-fun b!108670 () Bool)

(declare-fun call!11550 () List!1648)

(assert (=> b!108670 (= e!70711 call!11550)))

(declare-fun d!30171 () Bool)

(declare-fun e!70714 () Bool)

(assert (=> d!30171 e!70714))

(declare-fun res!53856 () Bool)

(assert (=> d!30171 (=> (not res!53856) (not e!70714))))

(declare-fun lt!55922 () List!1648)

(assert (=> d!30171 (= res!53856 (isStrictlySorted!305 lt!55922))))

(assert (=> d!30171 (= lt!55922 e!70713)))

(assert (=> d!30171 (= c!19137 (and ((_ is Cons!1644) (toList!811 lt!55497)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55497))) (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (=> d!30171 (isStrictlySorted!305 (toList!811 lt!55497))))

(assert (=> d!30171 (= (insertStrictlySorted!76 (toList!811 lt!55497) (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55922)))

(declare-fun b!108671 () Bool)

(assert (=> b!108671 (= e!70713 e!70711)))

(declare-fun c!19139 () Bool)

(assert (=> b!108671 (= c!19139 (and ((_ is Cons!1644) (toList!811 lt!55497)) (= (_1!1221 (h!2242 (toList!811 lt!55497))) (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!108672 () Bool)

(declare-fun res!53857 () Bool)

(assert (=> b!108672 (=> (not res!53857) (not e!70714))))

(assert (=> b!108672 (= res!53857 (containsKey!160 lt!55922 (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun bm!11546 () Bool)

(assert (=> bm!11546 (= call!11550 call!11549)))

(declare-fun bm!11547 () Bool)

(assert (=> bm!11547 (= call!11548 call!11550)))

(declare-fun b!108673 () Bool)

(assert (=> b!108673 (= e!70715 (insertStrictlySorted!76 (t!5776 (toList!811 lt!55497)) (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!108674 () Bool)

(assert (=> b!108674 (= e!70712 call!11548)))

(declare-fun b!108675 () Bool)

(assert (=> b!108675 (= e!70714 (contains!835 lt!55922 (tuple2!2423 (_1!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!108676 () Bool)

(assert (=> b!108676 (= e!70715 (ite c!19139 (t!5776 (toList!811 lt!55497)) (ite c!19136 (Cons!1644 (h!2242 (toList!811 lt!55497)) (t!5776 (toList!811 lt!55497))) Nil!1645)))))

(assert (= (and d!30171 c!19137) b!108668))

(assert (= (and d!30171 (not c!19137)) b!108671))

(assert (= (and b!108671 c!19139) b!108670))

(assert (= (and b!108671 (not c!19139)) b!108667))

(assert (= (and b!108667 c!19136) b!108674))

(assert (= (and b!108667 (not c!19136)) b!108669))

(assert (= (or b!108674 b!108669) bm!11547))

(assert (= (or b!108670 bm!11547) bm!11546))

(assert (= (or b!108668 bm!11546) bm!11545))

(assert (= (and bm!11545 c!19138) b!108673))

(assert (= (and bm!11545 (not c!19138)) b!108676))

(assert (= (and d!30171 res!53856) b!108672))

(assert (= (and b!108672 res!53857) b!108675))

(declare-fun m!122545 () Bool)

(assert (=> b!108675 m!122545))

(declare-fun m!122547 () Bool)

(assert (=> b!108672 m!122547))

(declare-fun m!122549 () Bool)

(assert (=> bm!11545 m!122549))

(declare-fun m!122551 () Bool)

(assert (=> d!30171 m!122551))

(declare-fun m!122553 () Bool)

(assert (=> d!30171 m!122553))

(declare-fun m!122555 () Bool)

(assert (=> b!108673 m!122555))

(assert (=> d!30029 d!30171))

(assert (=> d!29925 d!29899))

(declare-fun d!30173 () Bool)

(declare-fun e!70718 () Bool)

(assert (=> d!30173 e!70718))

(declare-fun res!53863 () Bool)

(assert (=> d!30173 (=> (not res!53863) (not e!70718))))

(declare-fun lt!55925 () SeekEntryResult!270)

(assert (=> d!30173 (= res!53863 ((_ is Found!270) lt!55925))))

(assert (=> d!30173 (= lt!55925 (seekEntryOrOpen!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(assert (=> d!30173 true))

(declare-fun _$33!93 () Unit!3339)

(assert (=> d!30173 (= (choose!679 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)) _$33!93)))

(declare-fun b!108681 () Bool)

(declare-fun res!53862 () Bool)

(assert (=> b!108681 (=> (not res!53862) (not e!70718))))

(assert (=> b!108681 (= res!53862 (inRange!0 (index!3230 lt!55925) (mask!6764 newMap!16)))))

(declare-fun b!108682 () Bool)

(assert (=> b!108682 (= e!70718 (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55925)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30173 res!53863) b!108681))

(assert (= (and b!108681 res!53862) b!108682))

(assert (=> d!30173 m!121177))

(assert (=> d!30173 m!121393))

(declare-fun m!122557 () Bool)

(assert (=> b!108681 m!122557))

(declare-fun m!122559 () Bool)

(assert (=> b!108682 m!122559))

(assert (=> d!29925 d!30173))

(assert (=> d!29925 d!30107))

(declare-fun d!30175 () Bool)

(assert (=> d!30175 (= ($colon$colon!81 e!70453 (ite c!19013 (h!2242 (toList!811 (+!148 lt!55250 lt!55252))) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249)))) (Cons!1644 (ite c!19013 (h!2242 (toList!811 (+!148 lt!55250 lt!55252))) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))) e!70453))))

(assert (=> bm!11485 d!30175))

(declare-fun d!30177 () Bool)

(assert (=> d!30177 (= (apply!99 (+!148 lt!55511 (tuple2!2423 lt!55522 (minValue!2479 newMap!16))) lt!55518) (apply!99 lt!55511 lt!55518))))

(declare-fun lt!55926 () Unit!3339)

(assert (=> d!30177 (= lt!55926 (choose!684 lt!55511 lt!55522 (minValue!2479 newMap!16) lt!55518))))

(declare-fun e!70719 () Bool)

(assert (=> d!30177 e!70719))

(declare-fun res!53864 () Bool)

(assert (=> d!30177 (=> (not res!53864) (not e!70719))))

(assert (=> d!30177 (= res!53864 (contains!834 lt!55511 lt!55518))))

(assert (=> d!30177 (= (addApplyDifferent!75 lt!55511 lt!55522 (minValue!2479 newMap!16) lt!55518) lt!55926)))

(declare-fun b!108683 () Bool)

(assert (=> b!108683 (= e!70719 (not (= lt!55518 lt!55522)))))

(assert (= (and d!30177 res!53864) b!108683))

(assert (=> d!30177 m!121563))

(declare-fun m!122561 () Bool)

(assert (=> d!30177 m!122561))

(assert (=> d!30177 m!121539))

(assert (=> d!30177 m!121539))

(assert (=> d!30177 m!121553))

(declare-fun m!122563 () Bool)

(assert (=> d!30177 m!122563))

(assert (=> b!108076 d!30177))

(declare-fun d!30179 () Bool)

(assert (=> d!30179 (= (apply!99 lt!55511 lt!55518) (get!1352 (getValueByKey!156 (toList!811 lt!55511) lt!55518)))))

(declare-fun bs!4461 () Bool)

(assert (= bs!4461 d!30179))

(declare-fun m!122565 () Bool)

(assert (=> bs!4461 m!122565))

(assert (=> bs!4461 m!122565))

(declare-fun m!122567 () Bool)

(assert (=> bs!4461 m!122567))

(assert (=> b!108076 d!30179))

(declare-fun d!30181 () Bool)

(assert (=> d!30181 (= (apply!99 (+!148 lt!55513 (tuple2!2423 lt!55515 (zeroValue!2479 newMap!16))) lt!55525) (apply!99 lt!55513 lt!55525))))

(declare-fun lt!55927 () Unit!3339)

(assert (=> d!30181 (= lt!55927 (choose!684 lt!55513 lt!55515 (zeroValue!2479 newMap!16) lt!55525))))

(declare-fun e!70720 () Bool)

(assert (=> d!30181 e!70720))

(declare-fun res!53865 () Bool)

(assert (=> d!30181 (=> (not res!53865) (not e!70720))))

(assert (=> d!30181 (= res!53865 (contains!834 lt!55513 lt!55525))))

(assert (=> d!30181 (= (addApplyDifferent!75 lt!55513 lt!55515 (zeroValue!2479 newMap!16) lt!55525) lt!55927)))

(declare-fun b!108684 () Bool)

(assert (=> b!108684 (= e!70720 (not (= lt!55525 lt!55515)))))

(assert (= (and d!30181 res!53865) b!108684))

(assert (=> d!30181 m!121547))

(declare-fun m!122569 () Bool)

(assert (=> d!30181 m!122569))

(assert (=> d!30181 m!121535))

(assert (=> d!30181 m!121535))

(assert (=> d!30181 m!121557))

(declare-fun m!122571 () Bool)

(assert (=> d!30181 m!122571))

(assert (=> b!108076 d!30181))

(declare-fun d!30183 () Bool)

(declare-fun e!70722 () Bool)

(assert (=> d!30183 e!70722))

(declare-fun res!53866 () Bool)

(assert (=> d!30183 (=> res!53866 e!70722)))

(declare-fun lt!55928 () Bool)

(assert (=> d!30183 (= res!53866 (not lt!55928))))

(declare-fun lt!55929 () Bool)

(assert (=> d!30183 (= lt!55928 lt!55929)))

(declare-fun lt!55930 () Unit!3339)

(declare-fun e!70721 () Unit!3339)

(assert (=> d!30183 (= lt!55930 e!70721)))

(declare-fun c!19140 () Bool)

(assert (=> d!30183 (= c!19140 lt!55929)))

(assert (=> d!30183 (= lt!55929 (containsKey!160 (toList!811 (+!148 lt!55528 (tuple2!2423 lt!55526 (zeroValue!2479 newMap!16)))) lt!55527))))

(assert (=> d!30183 (= (contains!834 (+!148 lt!55528 (tuple2!2423 lt!55526 (zeroValue!2479 newMap!16))) lt!55527) lt!55928)))

(declare-fun b!108685 () Bool)

(declare-fun lt!55931 () Unit!3339)

(assert (=> b!108685 (= e!70721 lt!55931)))

(assert (=> b!108685 (= lt!55931 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 (+!148 lt!55528 (tuple2!2423 lt!55526 (zeroValue!2479 newMap!16)))) lt!55527))))

(assert (=> b!108685 (isDefined!110 (getValueByKey!156 (toList!811 (+!148 lt!55528 (tuple2!2423 lt!55526 (zeroValue!2479 newMap!16)))) lt!55527))))

(declare-fun b!108686 () Bool)

(declare-fun Unit!3375 () Unit!3339)

(assert (=> b!108686 (= e!70721 Unit!3375)))

(declare-fun b!108687 () Bool)

(assert (=> b!108687 (= e!70722 (isDefined!110 (getValueByKey!156 (toList!811 (+!148 lt!55528 (tuple2!2423 lt!55526 (zeroValue!2479 newMap!16)))) lt!55527)))))

(assert (= (and d!30183 c!19140) b!108685))

(assert (= (and d!30183 (not c!19140)) b!108686))

(assert (= (and d!30183 (not res!53866)) b!108687))

(declare-fun m!122573 () Bool)

(assert (=> d!30183 m!122573))

(declare-fun m!122575 () Bool)

(assert (=> b!108685 m!122575))

(declare-fun m!122577 () Bool)

(assert (=> b!108685 m!122577))

(assert (=> b!108685 m!122577))

(declare-fun m!122579 () Bool)

(assert (=> b!108685 m!122579))

(assert (=> b!108687 m!122577))

(assert (=> b!108687 m!122577))

(assert (=> b!108687 m!122579))

(assert (=> b!108076 d!30183))

(declare-fun d!30185 () Bool)

(declare-fun e!70723 () Bool)

(assert (=> d!30185 e!70723))

(declare-fun res!53867 () Bool)

(assert (=> d!30185 (=> (not res!53867) (not e!70723))))

(declare-fun lt!55934 () ListLongMap!1591)

(assert (=> d!30185 (= res!53867 (contains!834 lt!55934 (_1!1221 (tuple2!2423 lt!55526 (zeroValue!2479 newMap!16)))))))

(declare-fun lt!55932 () List!1648)

(assert (=> d!30185 (= lt!55934 (ListLongMap!1592 lt!55932))))

(declare-fun lt!55933 () Unit!3339)

(declare-fun lt!55935 () Unit!3339)

(assert (=> d!30185 (= lt!55933 lt!55935)))

(assert (=> d!30185 (= (getValueByKey!156 lt!55932 (_1!1221 (tuple2!2423 lt!55526 (zeroValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 lt!55526 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30185 (= lt!55935 (lemmaContainsTupThenGetReturnValue!74 lt!55932 (_1!1221 (tuple2!2423 lt!55526 (zeroValue!2479 newMap!16))) (_2!1221 (tuple2!2423 lt!55526 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30185 (= lt!55932 (insertStrictlySorted!76 (toList!811 lt!55528) (_1!1221 (tuple2!2423 lt!55526 (zeroValue!2479 newMap!16))) (_2!1221 (tuple2!2423 lt!55526 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30185 (= (+!148 lt!55528 (tuple2!2423 lt!55526 (zeroValue!2479 newMap!16))) lt!55934)))

(declare-fun b!108688 () Bool)

(declare-fun res!53868 () Bool)

(assert (=> b!108688 (=> (not res!53868) (not e!70723))))

(assert (=> b!108688 (= res!53868 (= (getValueByKey!156 (toList!811 lt!55934) (_1!1221 (tuple2!2423 lt!55526 (zeroValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 lt!55526 (zeroValue!2479 newMap!16))))))))

(declare-fun b!108689 () Bool)

(assert (=> b!108689 (= e!70723 (contains!835 (toList!811 lt!55934) (tuple2!2423 lt!55526 (zeroValue!2479 newMap!16))))))

(assert (= (and d!30185 res!53867) b!108688))

(assert (= (and b!108688 res!53868) b!108689))

(declare-fun m!122581 () Bool)

(assert (=> d!30185 m!122581))

(declare-fun m!122583 () Bool)

(assert (=> d!30185 m!122583))

(declare-fun m!122585 () Bool)

(assert (=> d!30185 m!122585))

(declare-fun m!122587 () Bool)

(assert (=> d!30185 m!122587))

(declare-fun m!122589 () Bool)

(assert (=> b!108688 m!122589))

(declare-fun m!122591 () Bool)

(assert (=> b!108689 m!122591))

(assert (=> b!108076 d!30185))

(declare-fun d!30187 () Bool)

(assert (=> d!30187 (= (apply!99 (+!148 lt!55530 (tuple2!2423 lt!55514 (minValue!2479 newMap!16))) lt!55524) (get!1352 (getValueByKey!156 (toList!811 (+!148 lt!55530 (tuple2!2423 lt!55514 (minValue!2479 newMap!16)))) lt!55524)))))

(declare-fun bs!4462 () Bool)

(assert (= bs!4462 d!30187))

(declare-fun m!122593 () Bool)

(assert (=> bs!4462 m!122593))

(assert (=> bs!4462 m!122593))

(declare-fun m!122595 () Bool)

(assert (=> bs!4462 m!122595))

(assert (=> b!108076 d!30187))

(declare-fun d!30189 () Bool)

(assert (=> d!30189 (= (apply!99 (+!148 lt!55513 (tuple2!2423 lt!55515 (zeroValue!2479 newMap!16))) lt!55525) (get!1352 (getValueByKey!156 (toList!811 (+!148 lt!55513 (tuple2!2423 lt!55515 (zeroValue!2479 newMap!16)))) lt!55525)))))

(declare-fun bs!4463 () Bool)

(assert (= bs!4463 d!30189))

(declare-fun m!122597 () Bool)

(assert (=> bs!4463 m!122597))

(assert (=> bs!4463 m!122597))

(declare-fun m!122599 () Bool)

(assert (=> bs!4463 m!122599))

(assert (=> b!108076 d!30189))

(declare-fun d!30191 () Bool)

(declare-fun e!70724 () Bool)

(assert (=> d!30191 e!70724))

(declare-fun res!53869 () Bool)

(assert (=> d!30191 (=> (not res!53869) (not e!70724))))

(declare-fun lt!55938 () ListLongMap!1591)

(assert (=> d!30191 (= res!53869 (contains!834 lt!55938 (_1!1221 (tuple2!2423 lt!55522 (minValue!2479 newMap!16)))))))

(declare-fun lt!55936 () List!1648)

(assert (=> d!30191 (= lt!55938 (ListLongMap!1592 lt!55936))))

(declare-fun lt!55937 () Unit!3339)

(declare-fun lt!55939 () Unit!3339)

(assert (=> d!30191 (= lt!55937 lt!55939)))

(assert (=> d!30191 (= (getValueByKey!156 lt!55936 (_1!1221 (tuple2!2423 lt!55522 (minValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 lt!55522 (minValue!2479 newMap!16)))))))

(assert (=> d!30191 (= lt!55939 (lemmaContainsTupThenGetReturnValue!74 lt!55936 (_1!1221 (tuple2!2423 lt!55522 (minValue!2479 newMap!16))) (_2!1221 (tuple2!2423 lt!55522 (minValue!2479 newMap!16)))))))

(assert (=> d!30191 (= lt!55936 (insertStrictlySorted!76 (toList!811 lt!55511) (_1!1221 (tuple2!2423 lt!55522 (minValue!2479 newMap!16))) (_2!1221 (tuple2!2423 lt!55522 (minValue!2479 newMap!16)))))))

(assert (=> d!30191 (= (+!148 lt!55511 (tuple2!2423 lt!55522 (minValue!2479 newMap!16))) lt!55938)))

(declare-fun b!108690 () Bool)

(declare-fun res!53870 () Bool)

(assert (=> b!108690 (=> (not res!53870) (not e!70724))))

(assert (=> b!108690 (= res!53870 (= (getValueByKey!156 (toList!811 lt!55938) (_1!1221 (tuple2!2423 lt!55522 (minValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 lt!55522 (minValue!2479 newMap!16))))))))

(declare-fun b!108691 () Bool)

(assert (=> b!108691 (= e!70724 (contains!835 (toList!811 lt!55938) (tuple2!2423 lt!55522 (minValue!2479 newMap!16))))))

(assert (= (and d!30191 res!53869) b!108690))

(assert (= (and b!108690 res!53870) b!108691))

(declare-fun m!122601 () Bool)

(assert (=> d!30191 m!122601))

(declare-fun m!122603 () Bool)

(assert (=> d!30191 m!122603))

(declare-fun m!122605 () Bool)

(assert (=> d!30191 m!122605))

(declare-fun m!122607 () Bool)

(assert (=> d!30191 m!122607))

(declare-fun m!122609 () Bool)

(assert (=> b!108690 m!122609))

(declare-fun m!122611 () Bool)

(assert (=> b!108691 m!122611))

(assert (=> b!108076 d!30191))

(declare-fun d!30193 () Bool)

(assert (=> d!30193 (= (apply!99 lt!55530 lt!55524) (get!1352 (getValueByKey!156 (toList!811 lt!55530) lt!55524)))))

(declare-fun bs!4464 () Bool)

(assert (= bs!4464 d!30193))

(declare-fun m!122613 () Bool)

(assert (=> bs!4464 m!122613))

(assert (=> bs!4464 m!122613))

(declare-fun m!122615 () Bool)

(assert (=> bs!4464 m!122615))

(assert (=> b!108076 d!30193))

(declare-fun d!30195 () Bool)

(declare-fun e!70725 () Bool)

(assert (=> d!30195 e!70725))

(declare-fun res!53871 () Bool)

(assert (=> d!30195 (=> (not res!53871) (not e!70725))))

(declare-fun lt!55942 () ListLongMap!1591)

(assert (=> d!30195 (= res!53871 (contains!834 lt!55942 (_1!1221 (tuple2!2423 lt!55514 (minValue!2479 newMap!16)))))))

(declare-fun lt!55940 () List!1648)

(assert (=> d!30195 (= lt!55942 (ListLongMap!1592 lt!55940))))

(declare-fun lt!55941 () Unit!3339)

(declare-fun lt!55943 () Unit!3339)

(assert (=> d!30195 (= lt!55941 lt!55943)))

(assert (=> d!30195 (= (getValueByKey!156 lt!55940 (_1!1221 (tuple2!2423 lt!55514 (minValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 lt!55514 (minValue!2479 newMap!16)))))))

(assert (=> d!30195 (= lt!55943 (lemmaContainsTupThenGetReturnValue!74 lt!55940 (_1!1221 (tuple2!2423 lt!55514 (minValue!2479 newMap!16))) (_2!1221 (tuple2!2423 lt!55514 (minValue!2479 newMap!16)))))))

(assert (=> d!30195 (= lt!55940 (insertStrictlySorted!76 (toList!811 lt!55530) (_1!1221 (tuple2!2423 lt!55514 (minValue!2479 newMap!16))) (_2!1221 (tuple2!2423 lt!55514 (minValue!2479 newMap!16)))))))

(assert (=> d!30195 (= (+!148 lt!55530 (tuple2!2423 lt!55514 (minValue!2479 newMap!16))) lt!55942)))

(declare-fun b!108692 () Bool)

(declare-fun res!53872 () Bool)

(assert (=> b!108692 (=> (not res!53872) (not e!70725))))

(assert (=> b!108692 (= res!53872 (= (getValueByKey!156 (toList!811 lt!55942) (_1!1221 (tuple2!2423 lt!55514 (minValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 lt!55514 (minValue!2479 newMap!16))))))))

(declare-fun b!108693 () Bool)

(assert (=> b!108693 (= e!70725 (contains!835 (toList!811 lt!55942) (tuple2!2423 lt!55514 (minValue!2479 newMap!16))))))

(assert (= (and d!30195 res!53871) b!108692))

(assert (= (and b!108692 res!53872) b!108693))

(declare-fun m!122617 () Bool)

(assert (=> d!30195 m!122617))

(declare-fun m!122619 () Bool)

(assert (=> d!30195 m!122619))

(declare-fun m!122621 () Bool)

(assert (=> d!30195 m!122621))

(declare-fun m!122623 () Bool)

(assert (=> d!30195 m!122623))

(declare-fun m!122625 () Bool)

(assert (=> b!108692 m!122625))

(declare-fun m!122627 () Bool)

(assert (=> b!108693 m!122627))

(assert (=> b!108076 d!30195))

(declare-fun d!30197 () Bool)

(assert (=> d!30197 (= (apply!99 lt!55513 lt!55525) (get!1352 (getValueByKey!156 (toList!811 lt!55513) lt!55525)))))

(declare-fun bs!4465 () Bool)

(assert (= bs!4465 d!30197))

(declare-fun m!122629 () Bool)

(assert (=> bs!4465 m!122629))

(assert (=> bs!4465 m!122629))

(declare-fun m!122631 () Bool)

(assert (=> bs!4465 m!122631))

(assert (=> b!108076 d!30197))

(declare-fun d!30199 () Bool)

(assert (=> d!30199 (contains!834 (+!148 lt!55528 (tuple2!2423 lt!55526 (zeroValue!2479 newMap!16))) lt!55527)))

(declare-fun lt!55944 () Unit!3339)

(assert (=> d!30199 (= lt!55944 (choose!685 lt!55528 lt!55526 (zeroValue!2479 newMap!16) lt!55527))))

(assert (=> d!30199 (contains!834 lt!55528 lt!55527)))

(assert (=> d!30199 (= (addStillContains!75 lt!55528 lt!55526 (zeroValue!2479 newMap!16) lt!55527) lt!55944)))

(declare-fun bs!4466 () Bool)

(assert (= bs!4466 d!30199))

(assert (=> bs!4466 m!121541))

(assert (=> bs!4466 m!121541))

(assert (=> bs!4466 m!121543))

(declare-fun m!122633 () Bool)

(assert (=> bs!4466 m!122633))

(declare-fun m!122635 () Bool)

(assert (=> bs!4466 m!122635))

(assert (=> b!108076 d!30199))

(declare-fun d!30201 () Bool)

(assert (=> d!30201 (= (apply!99 (+!148 lt!55530 (tuple2!2423 lt!55514 (minValue!2479 newMap!16))) lt!55524) (apply!99 lt!55530 lt!55524))))

(declare-fun lt!55945 () Unit!3339)

(assert (=> d!30201 (= lt!55945 (choose!684 lt!55530 lt!55514 (minValue!2479 newMap!16) lt!55524))))

(declare-fun e!70726 () Bool)

(assert (=> d!30201 e!70726))

(declare-fun res!53873 () Bool)

(assert (=> d!30201 (=> (not res!53873) (not e!70726))))

(assert (=> d!30201 (= res!53873 (contains!834 lt!55530 lt!55524))))

(assert (=> d!30201 (= (addApplyDifferent!75 lt!55530 lt!55514 (minValue!2479 newMap!16) lt!55524) lt!55945)))

(declare-fun b!108694 () Bool)

(assert (=> b!108694 (= e!70726 (not (= lt!55524 lt!55514)))))

(assert (= (and d!30201 res!53873) b!108694))

(assert (=> d!30201 m!121537))

(declare-fun m!122637 () Bool)

(assert (=> d!30201 m!122637))

(assert (=> d!30201 m!121545))

(assert (=> d!30201 m!121545))

(assert (=> d!30201 m!121551))

(declare-fun m!122639 () Bool)

(assert (=> d!30201 m!122639))

(assert (=> b!108076 d!30201))

(declare-fun d!30203 () Bool)

(declare-fun e!70727 () Bool)

(assert (=> d!30203 e!70727))

(declare-fun res!53874 () Bool)

(assert (=> d!30203 (=> (not res!53874) (not e!70727))))

(declare-fun lt!55948 () ListLongMap!1591)

(assert (=> d!30203 (= res!53874 (contains!834 lt!55948 (_1!1221 (tuple2!2423 lt!55515 (zeroValue!2479 newMap!16)))))))

(declare-fun lt!55946 () List!1648)

(assert (=> d!30203 (= lt!55948 (ListLongMap!1592 lt!55946))))

(declare-fun lt!55947 () Unit!3339)

(declare-fun lt!55949 () Unit!3339)

(assert (=> d!30203 (= lt!55947 lt!55949)))

(assert (=> d!30203 (= (getValueByKey!156 lt!55946 (_1!1221 (tuple2!2423 lt!55515 (zeroValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 lt!55515 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30203 (= lt!55949 (lemmaContainsTupThenGetReturnValue!74 lt!55946 (_1!1221 (tuple2!2423 lt!55515 (zeroValue!2479 newMap!16))) (_2!1221 (tuple2!2423 lt!55515 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30203 (= lt!55946 (insertStrictlySorted!76 (toList!811 lt!55513) (_1!1221 (tuple2!2423 lt!55515 (zeroValue!2479 newMap!16))) (_2!1221 (tuple2!2423 lt!55515 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30203 (= (+!148 lt!55513 (tuple2!2423 lt!55515 (zeroValue!2479 newMap!16))) lt!55948)))

(declare-fun b!108695 () Bool)

(declare-fun res!53875 () Bool)

(assert (=> b!108695 (=> (not res!53875) (not e!70727))))

(assert (=> b!108695 (= res!53875 (= (getValueByKey!156 (toList!811 lt!55948) (_1!1221 (tuple2!2423 lt!55515 (zeroValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 lt!55515 (zeroValue!2479 newMap!16))))))))

(declare-fun b!108696 () Bool)

(assert (=> b!108696 (= e!70727 (contains!835 (toList!811 lt!55948) (tuple2!2423 lt!55515 (zeroValue!2479 newMap!16))))))

(assert (= (and d!30203 res!53874) b!108695))

(assert (= (and b!108695 res!53875) b!108696))

(declare-fun m!122641 () Bool)

(assert (=> d!30203 m!122641))

(declare-fun m!122643 () Bool)

(assert (=> d!30203 m!122643))

(declare-fun m!122645 () Bool)

(assert (=> d!30203 m!122645))

(declare-fun m!122647 () Bool)

(assert (=> d!30203 m!122647))

(declare-fun m!122649 () Bool)

(assert (=> b!108695 m!122649))

(declare-fun m!122651 () Bool)

(assert (=> b!108696 m!122651))

(assert (=> b!108076 d!30203))

(declare-fun b!108697 () Bool)

(declare-fun e!70734 () Bool)

(declare-fun lt!55955 () ListLongMap!1591)

(assert (=> b!108697 (= e!70734 (isEmpty!378 lt!55955))))

(declare-fun b!108698 () Bool)

(assert (=> b!108698 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(assert (=> b!108698 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_values!2589 newMap!16))))))

(declare-fun e!70730 () Bool)

(assert (=> b!108698 (= e!70730 (= (apply!99 lt!55955 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1349 (select (arr!2075 (_values!2589 newMap!16)) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108699 () Bool)

(declare-fun lt!55951 () Unit!3339)

(declare-fun lt!55953 () Unit!3339)

(assert (=> b!108699 (= lt!55951 lt!55953)))

(declare-fun lt!55950 () ListLongMap!1591)

(declare-fun lt!55956 () V!3235)

(declare-fun lt!55952 () (_ BitVec 64))

(declare-fun lt!55954 () (_ BitVec 64))

(assert (=> b!108699 (not (contains!834 (+!148 lt!55950 (tuple2!2423 lt!55952 lt!55956)) lt!55954))))

(assert (=> b!108699 (= lt!55953 (addStillNotContains!49 lt!55950 lt!55952 lt!55956 lt!55954))))

(assert (=> b!108699 (= lt!55954 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!108699 (= lt!55956 (get!1349 (select (arr!2075 (_values!2589 newMap!16)) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!108699 (= lt!55952 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11551 () ListLongMap!1591)

(assert (=> b!108699 (= lt!55950 call!11551)))

(declare-fun e!70733 () ListLongMap!1591)

(assert (=> b!108699 (= e!70733 (+!148 call!11551 (tuple2!2423 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) (get!1349 (select (arr!2075 (_values!2589 newMap!16)) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!108700 () Bool)

(declare-fun e!70728 () Bool)

(assert (=> b!108700 (= e!70728 e!70730)))

(assert (=> b!108700 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun res!53879 () Bool)

(assert (=> b!108700 (= res!53879 (contains!834 lt!55955 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108700 (=> (not res!53879) (not e!70730))))

(declare-fun b!108701 () Bool)

(assert (=> b!108701 (= e!70734 (= lt!55955 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2606 newMap!16))))))

(declare-fun b!108702 () Bool)

(assert (=> b!108702 (= e!70733 call!11551)))

(declare-fun b!108703 () Bool)

(declare-fun e!70732 () ListLongMap!1591)

(assert (=> b!108703 (= e!70732 (ListLongMap!1592 Nil!1645))))

(declare-fun b!108704 () Bool)

(assert (=> b!108704 (= e!70728 e!70734)))

(declare-fun c!19141 () Bool)

(assert (=> b!108704 (= c!19141 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun d!30205 () Bool)

(declare-fun e!70729 () Bool)

(assert (=> d!30205 e!70729))

(declare-fun res!53876 () Bool)

(assert (=> d!30205 (=> (not res!53876) (not e!70729))))

(assert (=> d!30205 (= res!53876 (not (contains!834 lt!55955 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30205 (= lt!55955 e!70732)))

(declare-fun c!19143 () Bool)

(assert (=> d!30205 (= c!19143 (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(assert (=> d!30205 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30205 (= (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!55955)))

(declare-fun b!108705 () Bool)

(assert (=> b!108705 (= e!70729 e!70728)))

(declare-fun c!19144 () Bool)

(declare-fun e!70731 () Bool)

(assert (=> b!108705 (= c!19144 e!70731)))

(declare-fun res!53878 () Bool)

(assert (=> b!108705 (=> (not res!53878) (not e!70731))))

(assert (=> b!108705 (= res!53878 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108706 () Bool)

(assert (=> b!108706 (= e!70731 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108706 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!108707 () Bool)

(assert (=> b!108707 (= e!70732 e!70733)))

(declare-fun c!19142 () Bool)

(assert (=> b!108707 (= c!19142 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108708 () Bool)

(declare-fun res!53877 () Bool)

(assert (=> b!108708 (=> (not res!53877) (not e!70729))))

(assert (=> b!108708 (= res!53877 (not (contains!834 lt!55955 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!11548 () Bool)

(assert (=> bm!11548 (= call!11551 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2606 newMap!16)))))

(assert (= (and d!30205 c!19143) b!108703))

(assert (= (and d!30205 (not c!19143)) b!108707))

(assert (= (and b!108707 c!19142) b!108699))

(assert (= (and b!108707 (not c!19142)) b!108702))

(assert (= (or b!108699 b!108702) bm!11548))

(assert (= (and d!30205 res!53876) b!108708))

(assert (= (and b!108708 res!53877) b!108705))

(assert (= (and b!108705 res!53878) b!108706))

(assert (= (and b!108705 c!19144) b!108700))

(assert (= (and b!108705 (not c!19144)) b!108704))

(assert (= (and b!108700 res!53879) b!108698))

(assert (= (and b!108704 c!19141) b!108701))

(assert (= (and b!108704 (not c!19141)) b!108697))

(declare-fun b_lambda!4889 () Bool)

(assert (=> (not b_lambda!4889) (not b!108698)))

(assert (=> b!108698 t!5783))

(declare-fun b_and!6721 () Bool)

(assert (= b_and!6717 (and (=> t!5783 result!3521) b_and!6721)))

(assert (=> b!108698 t!5785))

(declare-fun b_and!6723 () Bool)

(assert (= b_and!6719 (and (=> t!5785 result!3523) b_and!6723)))

(declare-fun b_lambda!4891 () Bool)

(assert (=> (not b_lambda!4891) (not b!108699)))

(assert (=> b!108699 t!5783))

(declare-fun b_and!6725 () Bool)

(assert (= b_and!6721 (and (=> t!5783 result!3521) b_and!6725)))

(assert (=> b!108699 t!5785))

(declare-fun b_and!6727 () Bool)

(assert (= b_and!6723 (and (=> t!5785 result!3523) b_and!6727)))

(declare-fun m!122653 () Bool)

(assert (=> b!108697 m!122653))

(declare-fun m!122655 () Bool)

(assert (=> b!108701 m!122655))

(assert (=> b!108698 m!121569))

(assert (=> b!108698 m!121517))

(declare-fun m!122657 () Bool)

(assert (=> b!108698 m!122657))

(assert (=> b!108698 m!121517))

(assert (=> b!108698 m!121567))

(assert (=> b!108698 m!121567))

(assert (=> b!108698 m!121569))

(assert (=> b!108698 m!121571))

(declare-fun m!122659 () Bool)

(assert (=> b!108708 m!122659))

(declare-fun m!122661 () Bool)

(assert (=> b!108699 m!122661))

(assert (=> b!108699 m!121569))

(declare-fun m!122663 () Bool)

(assert (=> b!108699 m!122663))

(assert (=> b!108699 m!121517))

(declare-fun m!122665 () Bool)

(assert (=> b!108699 m!122665))

(assert (=> b!108699 m!121567))

(assert (=> b!108699 m!121567))

(assert (=> b!108699 m!121569))

(assert (=> b!108699 m!121571))

(assert (=> b!108699 m!122665))

(declare-fun m!122667 () Bool)

(assert (=> b!108699 m!122667))

(assert (=> b!108706 m!121517))

(assert (=> b!108706 m!121517))

(assert (=> b!108706 m!121519))

(assert (=> bm!11548 m!122655))

(assert (=> b!108700 m!121517))

(assert (=> b!108700 m!121517))

(declare-fun m!122669 () Bool)

(assert (=> b!108700 m!122669))

(assert (=> b!108707 m!121517))

(assert (=> b!108707 m!121517))

(assert (=> b!108707 m!121519))

(declare-fun m!122671 () Bool)

(assert (=> d!30205 m!122671))

(assert (=> d!30205 m!121521))

(assert (=> b!108076 d!30205))

(declare-fun d!30207 () Bool)

(assert (=> d!30207 (= (apply!99 (+!148 lt!55511 (tuple2!2423 lt!55522 (minValue!2479 newMap!16))) lt!55518) (get!1352 (getValueByKey!156 (toList!811 (+!148 lt!55511 (tuple2!2423 lt!55522 (minValue!2479 newMap!16)))) lt!55518)))))

(declare-fun bs!4467 () Bool)

(assert (= bs!4467 d!30207))

(declare-fun m!122673 () Bool)

(assert (=> bs!4467 m!122673))

(assert (=> bs!4467 m!122673))

(declare-fun m!122675 () Bool)

(assert (=> bs!4467 m!122675))

(assert (=> b!108076 d!30207))

(declare-fun d!30209 () Bool)

(declare-fun e!70736 () Bool)

(assert (=> d!30209 e!70736))

(declare-fun res!53880 () Bool)

(assert (=> d!30209 (=> res!53880 e!70736)))

(declare-fun lt!55957 () Bool)

(assert (=> d!30209 (= res!53880 (not lt!55957))))

(declare-fun lt!55958 () Bool)

(assert (=> d!30209 (= lt!55957 lt!55958)))

(declare-fun lt!55959 () Unit!3339)

(declare-fun e!70735 () Unit!3339)

(assert (=> d!30209 (= lt!55959 e!70735)))

(declare-fun c!19145 () Bool)

(assert (=> d!30209 (= c!19145 lt!55958)))

(assert (=> d!30209 (= lt!55958 (containsKey!160 (toList!811 lt!55787) (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(assert (=> d!30209 (= (contains!834 lt!55787 (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))) lt!55957)))

(declare-fun b!108709 () Bool)

(declare-fun lt!55960 () Unit!3339)

(assert (=> b!108709 (= e!70735 lt!55960)))

(assert (=> b!108709 (= lt!55960 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55787) (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(assert (=> b!108709 (isDefined!110 (getValueByKey!156 (toList!811 lt!55787) (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun b!108710 () Bool)

(declare-fun Unit!3376 () Unit!3339)

(assert (=> b!108710 (= e!70735 Unit!3376)))

(declare-fun b!108711 () Bool)

(assert (=> b!108711 (= e!70736 (isDefined!110 (getValueByKey!156 (toList!811 lt!55787) (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))))

(assert (= (and d!30209 c!19145) b!108709))

(assert (= (and d!30209 (not c!19145)) b!108710))

(assert (= (and d!30209 (not res!53880)) b!108711))

(declare-fun m!122677 () Bool)

(assert (=> d!30209 m!122677))

(declare-fun m!122679 () Bool)

(assert (=> b!108709 m!122679))

(assert (=> b!108709 m!122089))

(assert (=> b!108709 m!122089))

(declare-fun m!122681 () Bool)

(assert (=> b!108709 m!122681))

(assert (=> b!108711 m!122089))

(assert (=> b!108711 m!122089))

(assert (=> b!108711 m!122681))

(assert (=> d!30009 d!30209))

(declare-fun c!19146 () Bool)

(declare-fun d!30211 () Bool)

(assert (=> d!30211 (= c!19146 (and ((_ is Cons!1644) lt!55785) (= (_1!1221 (h!2242 lt!55785)) (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))))

(declare-fun e!70737 () Option!162)

(assert (=> d!30211 (= (getValueByKey!156 lt!55785 (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))) e!70737)))

(declare-fun e!70738 () Option!162)

(declare-fun b!108714 () Bool)

(assert (=> b!108714 (= e!70738 (getValueByKey!156 (t!5776 lt!55785) (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun b!108715 () Bool)

(assert (=> b!108715 (= e!70738 None!160)))

(declare-fun b!108713 () Bool)

(assert (=> b!108713 (= e!70737 e!70738)))

(declare-fun c!19147 () Bool)

(assert (=> b!108713 (= c!19147 (and ((_ is Cons!1644) lt!55785) (not (= (_1!1221 (h!2242 lt!55785)) (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))))

(declare-fun b!108712 () Bool)

(assert (=> b!108712 (= e!70737 (Some!161 (_2!1221 (h!2242 lt!55785))))))

(assert (= (and d!30211 c!19146) b!108712))

(assert (= (and d!30211 (not c!19146)) b!108713))

(assert (= (and b!108713 c!19147) b!108714))

(assert (= (and b!108713 (not c!19147)) b!108715))

(declare-fun m!122683 () Bool)

(assert (=> b!108714 m!122683))

(assert (=> d!30009 d!30211))

(declare-fun d!30213 () Bool)

(assert (=> d!30213 (= (getValueByKey!156 lt!55785 (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))) (Some!161 (_2!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun lt!55961 () Unit!3339)

(assert (=> d!30213 (= lt!55961 (choose!680 lt!55785 (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (_2!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun e!70739 () Bool)

(assert (=> d!30213 e!70739))

(declare-fun res!53881 () Bool)

(assert (=> d!30213 (=> (not res!53881) (not e!70739))))

(assert (=> d!30213 (= res!53881 (isStrictlySorted!305 lt!55785))))

(assert (=> d!30213 (= (lemmaContainsTupThenGetReturnValue!74 lt!55785 (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (_2!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))) lt!55961)))

(declare-fun b!108716 () Bool)

(declare-fun res!53882 () Bool)

(assert (=> b!108716 (=> (not res!53882) (not e!70739))))

(assert (=> b!108716 (= res!53882 (containsKey!160 lt!55785 (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun b!108717 () Bool)

(assert (=> b!108717 (= e!70739 (contains!835 lt!55785 (tuple2!2423 (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (_2!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))))

(assert (= (and d!30213 res!53881) b!108716))

(assert (= (and b!108716 res!53882) b!108717))

(assert (=> d!30213 m!122083))

(declare-fun m!122685 () Bool)

(assert (=> d!30213 m!122685))

(declare-fun m!122687 () Bool)

(assert (=> d!30213 m!122687))

(declare-fun m!122689 () Bool)

(assert (=> b!108716 m!122689))

(declare-fun m!122691 () Bool)

(assert (=> b!108717 m!122691))

(assert (=> d!30009 d!30213))

(declare-fun b!108718 () Bool)

(declare-fun c!19148 () Bool)

(assert (=> b!108718 (= c!19148 (and ((_ is Cons!1644) (toList!811 e!70278)) (bvsgt (_1!1221 (h!2242 (toList!811 e!70278))) (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))))

(declare-fun e!70740 () List!1648)

(declare-fun e!70741 () List!1648)

(assert (=> b!108718 (= e!70740 e!70741)))

(declare-fun b!108719 () Bool)

(declare-fun e!70742 () List!1648)

(declare-fun call!11553 () List!1648)

(assert (=> b!108719 (= e!70742 call!11553)))

(declare-fun bm!11549 () Bool)

(declare-fun c!19149 () Bool)

(declare-fun e!70744 () List!1648)

(assert (=> bm!11549 (= call!11553 ($colon$colon!81 e!70744 (ite c!19149 (h!2242 (toList!811 e!70278)) (tuple2!2423 (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (_2!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))))

(declare-fun c!19150 () Bool)

(assert (=> bm!11549 (= c!19150 c!19149)))

(declare-fun b!108720 () Bool)

(declare-fun call!11552 () List!1648)

(assert (=> b!108720 (= e!70741 call!11552)))

(declare-fun b!108721 () Bool)

(declare-fun call!11554 () List!1648)

(assert (=> b!108721 (= e!70740 call!11554)))

(declare-fun d!30215 () Bool)

(declare-fun e!70743 () Bool)

(assert (=> d!30215 e!70743))

(declare-fun res!53883 () Bool)

(assert (=> d!30215 (=> (not res!53883) (not e!70743))))

(declare-fun lt!55962 () List!1648)

(assert (=> d!30215 (= res!53883 (isStrictlySorted!305 lt!55962))))

(assert (=> d!30215 (= lt!55962 e!70742)))

(assert (=> d!30215 (= c!19149 (and ((_ is Cons!1644) (toList!811 e!70278)) (bvslt (_1!1221 (h!2242 (toList!811 e!70278))) (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))))

(assert (=> d!30215 (isStrictlySorted!305 (toList!811 e!70278))))

(assert (=> d!30215 (= (insertStrictlySorted!76 (toList!811 e!70278) (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (_2!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))) lt!55962)))

(declare-fun b!108722 () Bool)

(assert (=> b!108722 (= e!70742 e!70740)))

(declare-fun c!19151 () Bool)

(assert (=> b!108722 (= c!19151 (and ((_ is Cons!1644) (toList!811 e!70278)) (= (_1!1221 (h!2242 (toList!811 e!70278))) (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))))

(declare-fun b!108723 () Bool)

(declare-fun res!53884 () Bool)

(assert (=> b!108723 (=> (not res!53884) (not e!70743))))

(assert (=> b!108723 (= res!53884 (containsKey!160 lt!55962 (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun bm!11550 () Bool)

(assert (=> bm!11550 (= call!11554 call!11553)))

(declare-fun bm!11551 () Bool)

(assert (=> bm!11551 (= call!11552 call!11554)))

(declare-fun b!108724 () Bool)

(assert (=> b!108724 (= e!70744 (insertStrictlySorted!76 (t!5776 (toList!811 e!70278)) (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (_2!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun b!108725 () Bool)

(assert (=> b!108725 (= e!70741 call!11552)))

(declare-fun b!108726 () Bool)

(assert (=> b!108726 (= e!70743 (contains!835 lt!55962 (tuple2!2423 (_1!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (_2!1221 (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))))

(declare-fun b!108727 () Bool)

(assert (=> b!108727 (= e!70744 (ite c!19151 (t!5776 (toList!811 e!70278)) (ite c!19148 (Cons!1644 (h!2242 (toList!811 e!70278)) (t!5776 (toList!811 e!70278))) Nil!1645)))))

(assert (= (and d!30215 c!19149) b!108719))

(assert (= (and d!30215 (not c!19149)) b!108722))

(assert (= (and b!108722 c!19151) b!108721))

(assert (= (and b!108722 (not c!19151)) b!108718))

(assert (= (and b!108718 c!19148) b!108725))

(assert (= (and b!108718 (not c!19148)) b!108720))

(assert (= (or b!108725 b!108720) bm!11551))

(assert (= (or b!108721 bm!11551) bm!11550))

(assert (= (or b!108719 bm!11550) bm!11549))

(assert (= (and bm!11549 c!19150) b!108724))

(assert (= (and bm!11549 (not c!19150)) b!108727))

(assert (= (and d!30215 res!53883) b!108723))

(assert (= (and b!108723 res!53884) b!108726))

(declare-fun m!122693 () Bool)

(assert (=> b!108726 m!122693))

(declare-fun m!122695 () Bool)

(assert (=> b!108723 m!122695))

(declare-fun m!122697 () Bool)

(assert (=> bm!11549 m!122697))

(declare-fun m!122699 () Bool)

(assert (=> d!30215 m!122699))

(declare-fun m!122701 () Bool)

(assert (=> d!30215 m!122701))

(declare-fun m!122703 () Bool)

(assert (=> b!108724 m!122703))

(assert (=> d!30009 d!30215))

(assert (=> b!108354 d!30151))

(declare-fun d!30217 () Bool)

(declare-fun lt!55963 () Bool)

(assert (=> d!30217 (= lt!55963 (select (content!110 (toList!811 lt!55865)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))

(declare-fun e!70745 () Bool)

(assert (=> d!30217 (= lt!55963 e!70745)))

(declare-fun res!53886 () Bool)

(assert (=> d!30217 (=> (not res!53886) (not e!70745))))

(assert (=> d!30217 (= res!53886 ((_ is Cons!1644) (toList!811 lt!55865)))))

(assert (=> d!30217 (= (contains!835 (toList!811 lt!55865) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) lt!55963)))

(declare-fun b!108728 () Bool)

(declare-fun e!70746 () Bool)

(assert (=> b!108728 (= e!70745 e!70746)))

(declare-fun res!53885 () Bool)

(assert (=> b!108728 (=> res!53885 e!70746)))

(assert (=> b!108728 (= res!53885 (= (h!2242 (toList!811 lt!55865)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))

(declare-fun b!108729 () Bool)

(assert (=> b!108729 (= e!70746 (contains!835 (t!5776 (toList!811 lt!55865)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))

(assert (= (and d!30217 res!53886) b!108728))

(assert (= (and b!108728 (not res!53885)) b!108729))

(declare-fun m!122705 () Bool)

(assert (=> d!30217 m!122705))

(declare-fun m!122707 () Bool)

(assert (=> d!30217 m!122707))

(declare-fun m!122709 () Bool)

(assert (=> b!108729 m!122709))

(assert (=> b!108537 d!30217))

(declare-fun d!30219 () Bool)

(declare-fun lt!55964 () Bool)

(assert (=> d!30219 (= lt!55964 (select (content!110 lt!55301) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))))))

(declare-fun e!70747 () Bool)

(assert (=> d!30219 (= lt!55964 e!70747)))

(declare-fun res!53888 () Bool)

(assert (=> d!30219 (=> (not res!53888) (not e!70747))))

(assert (=> d!30219 (= res!53888 ((_ is Cons!1644) lt!55301))))

(assert (=> d!30219 (= (contains!835 lt!55301 (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))) lt!55964)))

(declare-fun b!108730 () Bool)

(declare-fun e!70748 () Bool)

(assert (=> b!108730 (= e!70747 e!70748)))

(declare-fun res!53887 () Bool)

(assert (=> b!108730 (=> res!53887 e!70748)))

(assert (=> b!108730 (= res!53887 (= (h!2242 lt!55301) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))))))

(declare-fun b!108731 () Bool)

(assert (=> b!108731 (= e!70748 (contains!835 (t!5776 lt!55301) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))))))

(assert (= (and d!30219 res!53888) b!108730))

(assert (= (and b!108730 (not res!53887)) b!108731))

(declare-fun m!122711 () Bool)

(assert (=> d!30219 m!122711))

(declare-fun m!122713 () Bool)

(assert (=> d!30219 m!122713))

(declare-fun m!122715 () Bool)

(assert (=> b!108731 m!122715))

(assert (=> b!108281 d!30219))

(declare-fun c!19152 () Bool)

(declare-fun d!30221 () Bool)

(assert (=> d!30221 (= c!19152 (and ((_ is Cons!1644) (toList!811 lt!55865)) (= (_1!1221 (h!2242 (toList!811 lt!55865))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun e!70749 () Option!162)

(assert (=> d!30221 (= (getValueByKey!156 (toList!811 lt!55865) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) e!70749)))

(declare-fun e!70750 () Option!162)

(declare-fun b!108734 () Bool)

(assert (=> b!108734 (= e!70750 (getValueByKey!156 (t!5776 (toList!811 lt!55865)) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun b!108735 () Bool)

(assert (=> b!108735 (= e!70750 None!160)))

(declare-fun b!108733 () Bool)

(assert (=> b!108733 (= e!70749 e!70750)))

(declare-fun c!19153 () Bool)

(assert (=> b!108733 (= c!19153 (and ((_ is Cons!1644) (toList!811 lt!55865)) (not (= (_1!1221 (h!2242 (toList!811 lt!55865))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))))

(declare-fun b!108732 () Bool)

(assert (=> b!108732 (= e!70749 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55865)))))))

(assert (= (and d!30221 c!19152) b!108732))

(assert (= (and d!30221 (not c!19152)) b!108733))

(assert (= (and b!108733 c!19153) b!108734))

(assert (= (and b!108733 (not c!19153)) b!108735))

(declare-fun m!122717 () Bool)

(assert (=> b!108734 m!122717))

(assert (=> b!108536 d!30221))

(declare-fun b!108736 () Bool)

(declare-fun e!70756 () Bool)

(declare-fun call!11560 () Bool)

(assert (=> b!108736 (= e!70756 (not call!11560))))

(declare-fun bm!11552 () Bool)

(declare-fun call!11559 () ListLongMap!1591)

(declare-fun call!11558 () ListLongMap!1591)

(declare-fun c!19155 () Bool)

(declare-fun c!19157 () Bool)

(declare-fun call!11556 () ListLongMap!1591)

(declare-fun call!11557 () ListLongMap!1591)

(assert (=> bm!11552 (= call!11558 (+!148 (ite c!19157 call!11556 (ite c!19155 call!11557 call!11559)) (ite (or c!19157 c!19155) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (_2!1222 lt!55429))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (_2!1222 lt!55429))))))))

(declare-fun b!108737 () Bool)

(declare-fun e!70752 () Bool)

(declare-fun call!11555 () Bool)

(assert (=> b!108737 (= e!70752 (not call!11555))))

(declare-fun bm!11553 () Bool)

(assert (=> bm!11553 (= call!11559 call!11557)))

(declare-fun b!108738 () Bool)

(declare-fun e!70758 () Bool)

(assert (=> b!108738 (= e!70756 e!70758)))

(declare-fun res!53895 () Bool)

(assert (=> b!108738 (= res!53895 call!11560)))

(assert (=> b!108738 (=> (not res!53895) (not e!70758))))

(declare-fun bm!11554 () Bool)

(declare-fun call!11561 () ListLongMap!1591)

(assert (=> bm!11554 (= call!11561 call!11558)))

(declare-fun bm!11555 () Bool)

(assert (=> bm!11555 (= call!11556 (getCurrentListMapNoExtraKeys!115 (_keys!4316 (_2!1222 lt!55429)) (_values!2589 (_2!1222 lt!55429)) (mask!6764 (_2!1222 lt!55429)) (extraKeys!2407 (_2!1222 lt!55429)) (zeroValue!2479 (_2!1222 lt!55429)) (minValue!2479 (_2!1222 lt!55429)) #b00000000000000000000000000000000 (defaultEntry!2606 (_2!1222 lt!55429))))))

(declare-fun b!108739 () Bool)

(declare-fun e!70762 () Unit!3339)

(declare-fun Unit!3377 () Unit!3339)

(assert (=> b!108739 (= e!70762 Unit!3377)))

(declare-fun d!30223 () Bool)

(declare-fun e!70755 () Bool)

(assert (=> d!30223 e!70755))

(declare-fun res!53894 () Bool)

(assert (=> d!30223 (=> (not res!53894) (not e!70755))))

(assert (=> d!30223 (= res!53894 (or (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 (_2!1222 lt!55429)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 (_2!1222 lt!55429)))))))))

(declare-fun lt!55966 () ListLongMap!1591)

(declare-fun lt!55985 () ListLongMap!1591)

(assert (=> d!30223 (= lt!55966 lt!55985)))

(declare-fun lt!55977 () Unit!3339)

(assert (=> d!30223 (= lt!55977 e!70762)))

(declare-fun c!19158 () Bool)

(declare-fun e!70761 () Bool)

(assert (=> d!30223 (= c!19158 e!70761)))

(declare-fun res!53890 () Bool)

(assert (=> d!30223 (=> (not res!53890) (not e!70761))))

(assert (=> d!30223 (= res!53890 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 (_2!1222 lt!55429)))))))

(declare-fun e!70759 () ListLongMap!1591)

(assert (=> d!30223 (= lt!55985 e!70759)))

(assert (=> d!30223 (= c!19157 (and (not (= (bvand (extraKeys!2407 (_2!1222 lt!55429)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 (_2!1222 lt!55429)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30223 (validMask!0 (mask!6764 (_2!1222 lt!55429)))))

(assert (=> d!30223 (= (getCurrentListMap!487 (_keys!4316 (_2!1222 lt!55429)) (_values!2589 (_2!1222 lt!55429)) (mask!6764 (_2!1222 lt!55429)) (extraKeys!2407 (_2!1222 lt!55429)) (zeroValue!2479 (_2!1222 lt!55429)) (minValue!2479 (_2!1222 lt!55429)) #b00000000000000000000000000000000 (defaultEntry!2606 (_2!1222 lt!55429))) lt!55966)))

(declare-fun b!108740 () Bool)

(declare-fun e!70754 () Bool)

(assert (=> b!108740 (= e!70752 e!70754)))

(declare-fun res!53896 () Bool)

(assert (=> b!108740 (= res!53896 call!11555)))

(assert (=> b!108740 (=> (not res!53896) (not e!70754))))

(declare-fun b!108741 () Bool)

(declare-fun lt!55972 () Unit!3339)

(assert (=> b!108741 (= e!70762 lt!55972)))

(declare-fun lt!55984 () ListLongMap!1591)

(assert (=> b!108741 (= lt!55984 (getCurrentListMapNoExtraKeys!115 (_keys!4316 (_2!1222 lt!55429)) (_values!2589 (_2!1222 lt!55429)) (mask!6764 (_2!1222 lt!55429)) (extraKeys!2407 (_2!1222 lt!55429)) (zeroValue!2479 (_2!1222 lt!55429)) (minValue!2479 (_2!1222 lt!55429)) #b00000000000000000000000000000000 (defaultEntry!2606 (_2!1222 lt!55429))))))

(declare-fun lt!55982 () (_ BitVec 64))

(assert (=> b!108741 (= lt!55982 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55983 () (_ BitVec 64))

(assert (=> b!108741 (= lt!55983 (select (arr!2074 (_keys!4316 (_2!1222 lt!55429))) #b00000000000000000000000000000000))))

(declare-fun lt!55968 () Unit!3339)

(assert (=> b!108741 (= lt!55968 (addStillContains!75 lt!55984 lt!55982 (zeroValue!2479 (_2!1222 lt!55429)) lt!55983))))

(assert (=> b!108741 (contains!834 (+!148 lt!55984 (tuple2!2423 lt!55982 (zeroValue!2479 (_2!1222 lt!55429)))) lt!55983)))

(declare-fun lt!55975 () Unit!3339)

(assert (=> b!108741 (= lt!55975 lt!55968)))

(declare-fun lt!55967 () ListLongMap!1591)

(assert (=> b!108741 (= lt!55967 (getCurrentListMapNoExtraKeys!115 (_keys!4316 (_2!1222 lt!55429)) (_values!2589 (_2!1222 lt!55429)) (mask!6764 (_2!1222 lt!55429)) (extraKeys!2407 (_2!1222 lt!55429)) (zeroValue!2479 (_2!1222 lt!55429)) (minValue!2479 (_2!1222 lt!55429)) #b00000000000000000000000000000000 (defaultEntry!2606 (_2!1222 lt!55429))))))

(declare-fun lt!55978 () (_ BitVec 64))

(assert (=> b!108741 (= lt!55978 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55974 () (_ BitVec 64))

(assert (=> b!108741 (= lt!55974 (select (arr!2074 (_keys!4316 (_2!1222 lt!55429))) #b00000000000000000000000000000000))))

(declare-fun lt!55979 () Unit!3339)

(assert (=> b!108741 (= lt!55979 (addApplyDifferent!75 lt!55967 lt!55978 (minValue!2479 (_2!1222 lt!55429)) lt!55974))))

(assert (=> b!108741 (= (apply!99 (+!148 lt!55967 (tuple2!2423 lt!55978 (minValue!2479 (_2!1222 lt!55429)))) lt!55974) (apply!99 lt!55967 lt!55974))))

(declare-fun lt!55976 () Unit!3339)

(assert (=> b!108741 (= lt!55976 lt!55979)))

(declare-fun lt!55969 () ListLongMap!1591)

(assert (=> b!108741 (= lt!55969 (getCurrentListMapNoExtraKeys!115 (_keys!4316 (_2!1222 lt!55429)) (_values!2589 (_2!1222 lt!55429)) (mask!6764 (_2!1222 lt!55429)) (extraKeys!2407 (_2!1222 lt!55429)) (zeroValue!2479 (_2!1222 lt!55429)) (minValue!2479 (_2!1222 lt!55429)) #b00000000000000000000000000000000 (defaultEntry!2606 (_2!1222 lt!55429))))))

(declare-fun lt!55971 () (_ BitVec 64))

(assert (=> b!108741 (= lt!55971 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55981 () (_ BitVec 64))

(assert (=> b!108741 (= lt!55981 (select (arr!2074 (_keys!4316 (_2!1222 lt!55429))) #b00000000000000000000000000000000))))

(declare-fun lt!55965 () Unit!3339)

(assert (=> b!108741 (= lt!55965 (addApplyDifferent!75 lt!55969 lt!55971 (zeroValue!2479 (_2!1222 lt!55429)) lt!55981))))

(assert (=> b!108741 (= (apply!99 (+!148 lt!55969 (tuple2!2423 lt!55971 (zeroValue!2479 (_2!1222 lt!55429)))) lt!55981) (apply!99 lt!55969 lt!55981))))

(declare-fun lt!55973 () Unit!3339)

(assert (=> b!108741 (= lt!55973 lt!55965)))

(declare-fun lt!55986 () ListLongMap!1591)

(assert (=> b!108741 (= lt!55986 (getCurrentListMapNoExtraKeys!115 (_keys!4316 (_2!1222 lt!55429)) (_values!2589 (_2!1222 lt!55429)) (mask!6764 (_2!1222 lt!55429)) (extraKeys!2407 (_2!1222 lt!55429)) (zeroValue!2479 (_2!1222 lt!55429)) (minValue!2479 (_2!1222 lt!55429)) #b00000000000000000000000000000000 (defaultEntry!2606 (_2!1222 lt!55429))))))

(declare-fun lt!55970 () (_ BitVec 64))

(assert (=> b!108741 (= lt!55970 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!55980 () (_ BitVec 64))

(assert (=> b!108741 (= lt!55980 (select (arr!2074 (_keys!4316 (_2!1222 lt!55429))) #b00000000000000000000000000000000))))

(assert (=> b!108741 (= lt!55972 (addApplyDifferent!75 lt!55986 lt!55970 (minValue!2479 (_2!1222 lt!55429)) lt!55980))))

(assert (=> b!108741 (= (apply!99 (+!148 lt!55986 (tuple2!2423 lt!55970 (minValue!2479 (_2!1222 lt!55429)))) lt!55980) (apply!99 lt!55986 lt!55980))))

(declare-fun b!108742 () Bool)

(assert (=> b!108742 (= e!70759 (+!148 call!11558 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (_2!1222 lt!55429)))))))

(declare-fun bm!11556 () Bool)

(assert (=> bm!11556 (= call!11560 (contains!834 lt!55966 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108743 () Bool)

(declare-fun c!19159 () Bool)

(assert (=> b!108743 (= c!19159 (and (not (= (bvand (extraKeys!2407 (_2!1222 lt!55429)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 (_2!1222 lt!55429)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!70760 () ListLongMap!1591)

(declare-fun e!70751 () ListLongMap!1591)

(assert (=> b!108743 (= e!70760 e!70751)))

(declare-fun b!108744 () Bool)

(declare-fun e!70763 () Bool)

(assert (=> b!108744 (= e!70763 (= (apply!99 lt!55966 (select (arr!2074 (_keys!4316 (_2!1222 lt!55429))) #b00000000000000000000000000000000)) (get!1349 (select (arr!2075 (_values!2589 (_2!1222 lt!55429))) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 (_2!1222 lt!55429)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108744 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_values!2589 (_2!1222 lt!55429)))))))

(assert (=> b!108744 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 (_2!1222 lt!55429)))))))

(declare-fun b!108745 () Bool)

(assert (=> b!108745 (= e!70761 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (_2!1222 lt!55429))) #b00000000000000000000000000000000)))))

(declare-fun b!108746 () Bool)

(assert (=> b!108746 (= e!70755 e!70752)))

(declare-fun c!19156 () Bool)

(assert (=> b!108746 (= c!19156 (not (= (bvand (extraKeys!2407 (_2!1222 lt!55429)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108747 () Bool)

(assert (=> b!108747 (= e!70758 (= (apply!99 lt!55966 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2479 (_2!1222 lt!55429))))))

(declare-fun b!108748 () Bool)

(declare-fun res!53891 () Bool)

(assert (=> b!108748 (=> (not res!53891) (not e!70755))))

(declare-fun e!70757 () Bool)

(assert (=> b!108748 (= res!53891 e!70757)))

(declare-fun res!53889 () Bool)

(assert (=> b!108748 (=> res!53889 e!70757)))

(declare-fun e!70753 () Bool)

(assert (=> b!108748 (= res!53889 (not e!70753))))

(declare-fun res!53892 () Bool)

(assert (=> b!108748 (=> (not res!53892) (not e!70753))))

(assert (=> b!108748 (= res!53892 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 (_2!1222 lt!55429)))))))

(declare-fun b!108749 () Bool)

(assert (=> b!108749 (= e!70751 call!11561)))

(declare-fun b!108750 () Bool)

(declare-fun res!53897 () Bool)

(assert (=> b!108750 (=> (not res!53897) (not e!70755))))

(assert (=> b!108750 (= res!53897 e!70756)))

(declare-fun c!19154 () Bool)

(assert (=> b!108750 (= c!19154 (not (= (bvand (extraKeys!2407 (_2!1222 lt!55429)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11557 () Bool)

(assert (=> bm!11557 (= call!11557 call!11556)))

(declare-fun bm!11558 () Bool)

(assert (=> bm!11558 (= call!11555 (contains!834 lt!55966 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108751 () Bool)

(assert (=> b!108751 (= e!70754 (= (apply!99 lt!55966 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2479 (_2!1222 lt!55429))))))

(declare-fun b!108752 () Bool)

(assert (=> b!108752 (= e!70751 call!11559)))

(declare-fun b!108753 () Bool)

(assert (=> b!108753 (= e!70760 call!11561)))

(declare-fun b!108754 () Bool)

(assert (=> b!108754 (= e!70757 e!70763)))

(declare-fun res!53893 () Bool)

(assert (=> b!108754 (=> (not res!53893) (not e!70763))))

(assert (=> b!108754 (= res!53893 (contains!834 lt!55966 (select (arr!2074 (_keys!4316 (_2!1222 lt!55429))) #b00000000000000000000000000000000)))))

(assert (=> b!108754 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 (_2!1222 lt!55429)))))))

(declare-fun b!108755 () Bool)

(assert (=> b!108755 (= e!70753 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (_2!1222 lt!55429))) #b00000000000000000000000000000000)))))

(declare-fun b!108756 () Bool)

(assert (=> b!108756 (= e!70759 e!70760)))

(assert (=> b!108756 (= c!19155 (and (not (= (bvand (extraKeys!2407 (_2!1222 lt!55429)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 (_2!1222 lt!55429)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!30223 c!19157) b!108742))

(assert (= (and d!30223 (not c!19157)) b!108756))

(assert (= (and b!108756 c!19155) b!108753))

(assert (= (and b!108756 (not c!19155)) b!108743))

(assert (= (and b!108743 c!19159) b!108749))

(assert (= (and b!108743 (not c!19159)) b!108752))

(assert (= (or b!108749 b!108752) bm!11553))

(assert (= (or b!108753 bm!11553) bm!11557))

(assert (= (or b!108753 b!108749) bm!11554))

(assert (= (or b!108742 bm!11557) bm!11555))

(assert (= (or b!108742 bm!11554) bm!11552))

(assert (= (and d!30223 res!53890) b!108745))

(assert (= (and d!30223 c!19158) b!108741))

(assert (= (and d!30223 (not c!19158)) b!108739))

(assert (= (and d!30223 res!53894) b!108748))

(assert (= (and b!108748 res!53892) b!108755))

(assert (= (and b!108748 (not res!53889)) b!108754))

(assert (= (and b!108754 res!53893) b!108744))

(assert (= (and b!108748 res!53891) b!108750))

(assert (= (and b!108750 c!19154) b!108738))

(assert (= (and b!108750 (not c!19154)) b!108736))

(assert (= (and b!108738 res!53895) b!108747))

(assert (= (or b!108738 b!108736) bm!11556))

(assert (= (and b!108750 res!53897) b!108746))

(assert (= (and b!108746 c!19156) b!108740))

(assert (= (and b!108746 (not c!19156)) b!108737))

(assert (= (and b!108740 res!53896) b!108751))

(assert (= (or b!108740 b!108737) bm!11558))

(declare-fun b_lambda!4893 () Bool)

(assert (=> (not b_lambda!4893) (not b!108744)))

(declare-fun t!5788 () Bool)

(declare-fun tb!2105 () Bool)

(assert (=> (and b!107703 (= (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) (defaultEntry!2606 (_2!1222 lt!55429))) t!5788) tb!2105))

(declare-fun result!3525 () Bool)

(assert (=> tb!2105 (= result!3525 tp_is_empty!2691)))

(assert (=> b!108744 t!5788))

(declare-fun b_and!6729 () Bool)

(assert (= b_and!6725 (and (=> t!5788 result!3525) b_and!6729)))

(declare-fun tb!2107 () Bool)

(declare-fun t!5790 () Bool)

(assert (=> (and b!107707 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (_2!1222 lt!55429))) t!5790) tb!2107))

(declare-fun result!3527 () Bool)

(assert (= result!3527 result!3525))

(assert (=> b!108744 t!5790))

(declare-fun b_and!6731 () Bool)

(assert (= b_and!6727 (and (=> t!5790 result!3527) b_and!6731)))

(assert (=> b!108755 m!122519))

(assert (=> b!108755 m!122519))

(assert (=> b!108755 m!122521))

(declare-fun m!122719 () Bool)

(assert (=> d!30223 m!122719))

(declare-fun m!122721 () Bool)

(assert (=> bm!11558 m!122721))

(declare-fun m!122723 () Bool)

(assert (=> bm!11556 m!122723))

(declare-fun m!122725 () Bool)

(assert (=> b!108751 m!122725))

(declare-fun m!122727 () Bool)

(assert (=> bm!11555 m!122727))

(declare-fun m!122729 () Bool)

(assert (=> b!108742 m!122729))

(declare-fun m!122731 () Bool)

(assert (=> b!108747 m!122731))

(assert (=> b!108745 m!122519))

(assert (=> b!108745 m!122519))

(assert (=> b!108745 m!122521))

(declare-fun m!122733 () Bool)

(assert (=> b!108741 m!122733))

(declare-fun m!122735 () Bool)

(assert (=> b!108741 m!122735))

(declare-fun m!122737 () Bool)

(assert (=> b!108741 m!122737))

(declare-fun m!122739 () Bool)

(assert (=> b!108741 m!122739))

(declare-fun m!122741 () Bool)

(assert (=> b!108741 m!122741))

(declare-fun m!122743 () Bool)

(assert (=> b!108741 m!122743))

(declare-fun m!122745 () Bool)

(assert (=> b!108741 m!122745))

(assert (=> b!108741 m!122727))

(declare-fun m!122747 () Bool)

(assert (=> b!108741 m!122747))

(assert (=> b!108741 m!122743))

(declare-fun m!122749 () Bool)

(assert (=> b!108741 m!122749))

(assert (=> b!108741 m!122737))

(declare-fun m!122751 () Bool)

(assert (=> b!108741 m!122751))

(assert (=> b!108741 m!122739))

(declare-fun m!122753 () Bool)

(assert (=> b!108741 m!122753))

(assert (=> b!108741 m!122733))

(declare-fun m!122755 () Bool)

(assert (=> b!108741 m!122755))

(declare-fun m!122757 () Bool)

(assert (=> b!108741 m!122757))

(declare-fun m!122759 () Bool)

(assert (=> b!108741 m!122759))

(assert (=> b!108741 m!122519))

(declare-fun m!122761 () Bool)

(assert (=> b!108741 m!122761))

(assert (=> b!108754 m!122519))

(assert (=> b!108754 m!122519))

(declare-fun m!122763 () Bool)

(assert (=> b!108754 m!122763))

(declare-fun m!122765 () Bool)

(assert (=> b!108744 m!122765))

(declare-fun m!122767 () Bool)

(assert (=> b!108744 m!122767))

(declare-fun m!122769 () Bool)

(assert (=> b!108744 m!122769))

(assert (=> b!108744 m!122519))

(declare-fun m!122771 () Bool)

(assert (=> b!108744 m!122771))

(assert (=> b!108744 m!122519))

(assert (=> b!108744 m!122767))

(assert (=> b!108744 m!122765))

(declare-fun m!122773 () Bool)

(assert (=> bm!11552 m!122773))

(assert (=> d!29913 d!30223))

(declare-fun d!30225 () Bool)

(declare-fun res!53898 () Bool)

(declare-fun e!70764 () Bool)

(assert (=> d!30225 (=> res!53898 e!70764)))

(assert (=> d!30225 (= res!53898 (and ((_ is Cons!1644) (toList!811 lt!55339)) (= (_1!1221 (h!2242 (toList!811 lt!55339))) (_1!1221 lt!55249))))))

(assert (=> d!30225 (= (containsKey!160 (toList!811 lt!55339) (_1!1221 lt!55249)) e!70764)))

(declare-fun b!108757 () Bool)

(declare-fun e!70765 () Bool)

(assert (=> b!108757 (= e!70764 e!70765)))

(declare-fun res!53899 () Bool)

(assert (=> b!108757 (=> (not res!53899) (not e!70765))))

(assert (=> b!108757 (= res!53899 (and (or (not ((_ is Cons!1644) (toList!811 lt!55339))) (bvsle (_1!1221 (h!2242 (toList!811 lt!55339))) (_1!1221 lt!55249))) ((_ is Cons!1644) (toList!811 lt!55339)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55339))) (_1!1221 lt!55249))))))

(declare-fun b!108758 () Bool)

(assert (=> b!108758 (= e!70765 (containsKey!160 (t!5776 (toList!811 lt!55339)) (_1!1221 lt!55249)))))

(assert (= (and d!30225 (not res!53898)) b!108757))

(assert (= (and b!108757 res!53899) b!108758))

(declare-fun m!122775 () Bool)

(assert (=> b!108758 m!122775))

(assert (=> d!29937 d!30225))

(declare-fun d!30227 () Bool)

(assert (=> d!30227 (isDefined!110 (getValueByKey!156 (toList!811 lt!55331) (_1!1221 lt!55252)))))

(declare-fun lt!55987 () Unit!3339)

(assert (=> d!30227 (= lt!55987 (choose!683 (toList!811 lt!55331) (_1!1221 lt!55252)))))

(declare-fun e!70766 () Bool)

(assert (=> d!30227 e!70766))

(declare-fun res!53900 () Bool)

(assert (=> d!30227 (=> (not res!53900) (not e!70766))))

(assert (=> d!30227 (= res!53900 (isStrictlySorted!305 (toList!811 lt!55331)))))

(assert (=> d!30227 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55331) (_1!1221 lt!55252)) lt!55987)))

(declare-fun b!108759 () Bool)

(assert (=> b!108759 (= e!70766 (containsKey!160 (toList!811 lt!55331) (_1!1221 lt!55252)))))

(assert (= (and d!30227 res!53900) b!108759))

(assert (=> d!30227 m!121347))

(assert (=> d!30227 m!121347))

(assert (=> d!30227 m!122215))

(declare-fun m!122777 () Bool)

(assert (=> d!30227 m!122777))

(declare-fun m!122779 () Bool)

(assert (=> d!30227 m!122779))

(assert (=> b!108759 m!122211))

(assert (=> b!108460 d!30227))

(declare-fun d!30229 () Bool)

(assert (=> d!30229 (= (isDefined!110 (getValueByKey!156 (toList!811 lt!55331) (_1!1221 lt!55252))) (not (isEmpty!379 (getValueByKey!156 (toList!811 lt!55331) (_1!1221 lt!55252)))))))

(declare-fun bs!4468 () Bool)

(assert (= bs!4468 d!30229))

(assert (=> bs!4468 m!121347))

(declare-fun m!122781 () Bool)

(assert (=> bs!4468 m!122781))

(assert (=> b!108460 d!30229))

(assert (=> b!108460 d!29963))

(declare-fun b!108761 () Bool)

(declare-fun res!53902 () Bool)

(declare-fun e!70767 () Bool)

(assert (=> b!108761 (=> (not res!53902) (not e!70767))))

(assert (=> b!108761 (= res!53902 (bvsge (size!2334 (v!2913 (underlying!367 thiss!992))) (_size!505 (v!2913 (underlying!367 thiss!992)))))))

(declare-fun b!108762 () Bool)

(declare-fun res!53901 () Bool)

(assert (=> b!108762 (=> (not res!53901) (not e!70767))))

(assert (=> b!108762 (= res!53901 (= (size!2334 (v!2913 (underlying!367 thiss!992))) (bvadd (_size!505 (v!2913 (underlying!367 thiss!992))) (bvsdiv (bvadd (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!108763 () Bool)

(assert (=> b!108763 (= e!70767 (and (bvsge (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!505 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!108760 () Bool)

(declare-fun res!53903 () Bool)

(assert (=> b!108760 (=> (not res!53903) (not e!70767))))

(assert (=> b!108760 (= res!53903 (and (= (size!2331 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000001)) (= (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (size!2331 (_values!2589 (v!2913 (underlying!367 thiss!992))))) (bvsge (_size!505 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!505 (v!2913 (underlying!367 thiss!992))) (bvadd (mask!6764 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun d!30231 () Bool)

(declare-fun res!53904 () Bool)

(assert (=> d!30231 (=> (not res!53904) (not e!70767))))

(assert (=> d!30231 (= res!53904 (validMask!0 (mask!6764 (v!2913 (underlying!367 thiss!992)))))))

(assert (=> d!30231 (= (simpleValid!74 (v!2913 (underlying!367 thiss!992))) e!70767)))

(assert (= (and d!30231 res!53904) b!108760))

(assert (= (and b!108760 res!53903) b!108761))

(assert (= (and b!108761 res!53902) b!108762))

(assert (= (and b!108762 res!53901) b!108763))

(declare-fun m!122783 () Bool)

(assert (=> b!108761 m!122783))

(assert (=> b!108762 m!122783))

(assert (=> d!30231 m!121185))

(assert (=> d!29911 d!30231))

(declare-fun d!30233 () Bool)

(declare-fun lt!55988 () Bool)

(assert (=> d!30233 (= lt!55988 (select (content!111 (ite c!18971 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644) Nil!1644)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!70768 () Bool)

(assert (=> d!30233 (= lt!55988 e!70768)))

(declare-fun res!53906 () Bool)

(assert (=> d!30233 (=> (not res!53906) (not e!70768))))

(assert (=> d!30233 (= res!53906 ((_ is Cons!1643) (ite c!18971 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644) Nil!1644)))))

(assert (=> d!30233 (= (contains!836 (ite c!18971 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644) Nil!1644) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!55988)))

(declare-fun b!108764 () Bool)

(declare-fun e!70769 () Bool)

(assert (=> b!108764 (= e!70768 e!70769)))

(declare-fun res!53905 () Bool)

(assert (=> b!108764 (=> res!53905 e!70769)))

(assert (=> b!108764 (= res!53905 (= (h!2241 (ite c!18971 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644) Nil!1644)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!108765 () Bool)

(assert (=> b!108765 (= e!70769 (contains!836 (t!5775 (ite c!18971 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644) Nil!1644)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!30233 res!53906) b!108764))

(assert (= (and b!108764 (not res!53905)) b!108765))

(declare-fun m!122785 () Bool)

(assert (=> d!30233 m!122785))

(assert (=> d!30233 m!122189))

(declare-fun m!122787 () Bool)

(assert (=> d!30233 m!122787))

(assert (=> b!108765 m!122189))

(declare-fun m!122789 () Bool)

(assert (=> b!108765 m!122789))

(assert (=> b!108454 d!30233))

(declare-fun d!30235 () Bool)

(assert (=> d!30235 (= (apply!99 lt!55510 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1352 (getValueByKey!156 (toList!811 lt!55510) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4469 () Bool)

(assert (= bs!4469 d!30235))

(declare-fun m!122791 () Bool)

(assert (=> bs!4469 m!122791))

(assert (=> bs!4469 m!122791))

(declare-fun m!122793 () Bool)

(assert (=> bs!4469 m!122793))

(assert (=> b!108082 d!30235))

(declare-fun c!19160 () Bool)

(declare-fun b!108766 () Bool)

(assert (=> b!108766 (= c!19160 (and ((_ is Cons!1644) (t!5776 (toList!811 (+!148 lt!55250 lt!55252)))) (bvsgt (_1!1221 (h!2242 (t!5776 (toList!811 (+!148 lt!55250 lt!55252))))) (_1!1221 lt!55249))))))

(declare-fun e!70770 () List!1648)

(declare-fun e!70771 () List!1648)

(assert (=> b!108766 (= e!70770 e!70771)))

(declare-fun b!108767 () Bool)

(declare-fun e!70772 () List!1648)

(declare-fun call!11563 () List!1648)

(assert (=> b!108767 (= e!70772 call!11563)))

(declare-fun bm!11559 () Bool)

(declare-fun c!19161 () Bool)

(declare-fun e!70774 () List!1648)

(assert (=> bm!11559 (= call!11563 ($colon$colon!81 e!70774 (ite c!19161 (h!2242 (t!5776 (toList!811 (+!148 lt!55250 lt!55252)))) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249)))))))

(declare-fun c!19162 () Bool)

(assert (=> bm!11559 (= c!19162 c!19161)))

(declare-fun b!108768 () Bool)

(declare-fun call!11562 () List!1648)

(assert (=> b!108768 (= e!70771 call!11562)))

(declare-fun b!108769 () Bool)

(declare-fun call!11564 () List!1648)

(assert (=> b!108769 (= e!70770 call!11564)))

(declare-fun d!30237 () Bool)

(declare-fun e!70773 () Bool)

(assert (=> d!30237 e!70773))

(declare-fun res!53907 () Bool)

(assert (=> d!30237 (=> (not res!53907) (not e!70773))))

(declare-fun lt!55989 () List!1648)

(assert (=> d!30237 (= res!53907 (isStrictlySorted!305 lt!55989))))

(assert (=> d!30237 (= lt!55989 e!70772)))

(assert (=> d!30237 (= c!19161 (and ((_ is Cons!1644) (t!5776 (toList!811 (+!148 lt!55250 lt!55252)))) (bvslt (_1!1221 (h!2242 (t!5776 (toList!811 (+!148 lt!55250 lt!55252))))) (_1!1221 lt!55249))))))

(assert (=> d!30237 (isStrictlySorted!305 (t!5776 (toList!811 (+!148 lt!55250 lt!55252))))))

(assert (=> d!30237 (= (insertStrictlySorted!76 (t!5776 (toList!811 (+!148 lt!55250 lt!55252))) (_1!1221 lt!55249) (_2!1221 lt!55249)) lt!55989)))

(declare-fun b!108770 () Bool)

(assert (=> b!108770 (= e!70772 e!70770)))

(declare-fun c!19163 () Bool)

(assert (=> b!108770 (= c!19163 (and ((_ is Cons!1644) (t!5776 (toList!811 (+!148 lt!55250 lt!55252)))) (= (_1!1221 (h!2242 (t!5776 (toList!811 (+!148 lt!55250 lt!55252))))) (_1!1221 lt!55249))))))

(declare-fun b!108771 () Bool)

(declare-fun res!53908 () Bool)

(assert (=> b!108771 (=> (not res!53908) (not e!70773))))

(assert (=> b!108771 (= res!53908 (containsKey!160 lt!55989 (_1!1221 lt!55249)))))

(declare-fun bm!11560 () Bool)

(assert (=> bm!11560 (= call!11564 call!11563)))

(declare-fun bm!11561 () Bool)

(assert (=> bm!11561 (= call!11562 call!11564)))

(declare-fun b!108772 () Bool)

(assert (=> b!108772 (= e!70774 (insertStrictlySorted!76 (t!5776 (t!5776 (toList!811 (+!148 lt!55250 lt!55252)))) (_1!1221 lt!55249) (_2!1221 lt!55249)))))

(declare-fun b!108773 () Bool)

(assert (=> b!108773 (= e!70771 call!11562)))

(declare-fun b!108774 () Bool)

(assert (=> b!108774 (= e!70773 (contains!835 lt!55989 (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))))))

(declare-fun b!108775 () Bool)

(assert (=> b!108775 (= e!70774 (ite c!19163 (t!5776 (t!5776 (toList!811 (+!148 lt!55250 lt!55252)))) (ite c!19160 (Cons!1644 (h!2242 (t!5776 (toList!811 (+!148 lt!55250 lt!55252)))) (t!5776 (t!5776 (toList!811 (+!148 lt!55250 lt!55252))))) Nil!1645)))))

(assert (= (and d!30237 c!19161) b!108767))

(assert (= (and d!30237 (not c!19161)) b!108770))

(assert (= (and b!108770 c!19163) b!108769))

(assert (= (and b!108770 (not c!19163)) b!108766))

(assert (= (and b!108766 c!19160) b!108773))

(assert (= (and b!108766 (not c!19160)) b!108768))

(assert (= (or b!108773 b!108768) bm!11561))

(assert (= (or b!108769 bm!11561) bm!11560))

(assert (= (or b!108767 bm!11560) bm!11559))

(assert (= (and bm!11559 c!19162) b!108772))

(assert (= (and bm!11559 (not c!19162)) b!108775))

(assert (= (and d!30237 res!53907) b!108771))

(assert (= (and b!108771 res!53908) b!108774))

(declare-fun m!122795 () Bool)

(assert (=> b!108774 m!122795))

(declare-fun m!122797 () Bool)

(assert (=> b!108771 m!122797))

(declare-fun m!122799 () Bool)

(assert (=> bm!11559 m!122799))

(declare-fun m!122801 () Bool)

(assert (=> d!30237 m!122801))

(declare-fun m!122803 () Bool)

(assert (=> d!30237 m!122803))

(declare-fun m!122805 () Bool)

(assert (=> b!108772 m!122805))

(assert (=> b!108221 d!30237))

(declare-fun d!30239 () Bool)

(declare-fun res!53909 () Bool)

(declare-fun e!70775 () Bool)

(assert (=> d!30239 (=> res!53909 e!70775)))

(assert (=> d!30239 (= res!53909 (and ((_ is Cons!1644) (toList!811 call!11432)) (= (_1!1221 (h!2242 (toList!811 call!11432))) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408)))))))

(assert (=> d!30239 (= (containsKey!160 (toList!811 call!11432) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))) e!70775)))

(declare-fun b!108776 () Bool)

(declare-fun e!70776 () Bool)

(assert (=> b!108776 (= e!70775 e!70776)))

(declare-fun res!53910 () Bool)

(assert (=> b!108776 (=> (not res!53910) (not e!70776))))

(assert (=> b!108776 (= res!53910 (and (or (not ((_ is Cons!1644) (toList!811 call!11432))) (bvsle (_1!1221 (h!2242 (toList!811 call!11432))) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408)))) ((_ is Cons!1644) (toList!811 call!11432)) (bvslt (_1!1221 (h!2242 (toList!811 call!11432))) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408)))))))

(declare-fun b!108777 () Bool)

(assert (=> b!108777 (= e!70776 (containsKey!160 (t!5776 (toList!811 call!11432)) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))))))

(assert (= (and d!30239 (not res!53909)) b!108776))

(assert (= (and b!108776 res!53910) b!108777))

(assert (=> b!108777 m!121411))

(declare-fun m!122807 () Bool)

(assert (=> b!108777 m!122807))

(assert (=> d!29905 d!30239))

(declare-fun d!30241 () Bool)

(assert (=> d!30241 (isDefined!110 (getValueByKey!156 (toList!811 lt!55324) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!55990 () Unit!3339)

(assert (=> d!30241 (= lt!55990 (choose!683 (toList!811 lt!55324) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!70777 () Bool)

(assert (=> d!30241 e!70777))

(declare-fun res!53911 () Bool)

(assert (=> d!30241 (=> (not res!53911) (not e!70777))))

(assert (=> d!30241 (= res!53911 (isStrictlySorted!305 (toList!811 lt!55324)))))

(assert (=> d!30241 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55324) #b1000000000000000000000000000000000000000000000000000000000000000) lt!55990)))

(declare-fun b!108778 () Bool)

(assert (=> b!108778 (= e!70777 (containsKey!160 (toList!811 lt!55324) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30241 res!53911) b!108778))

(assert (=> d!30241 m!121695))

(assert (=> d!30241 m!121695))

(assert (=> d!30241 m!121697))

(declare-fun m!122809 () Bool)

(assert (=> d!30241 m!122809))

(assert (=> d!30241 m!122353))

(assert (=> b!108778 m!121691))

(assert (=> b!108157 d!30241))

(declare-fun d!30243 () Bool)

(assert (=> d!30243 (= (isDefined!110 (getValueByKey!156 (toList!811 lt!55324) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!379 (getValueByKey!156 (toList!811 lt!55324) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4470 () Bool)

(assert (= bs!4470 d!30243))

(assert (=> bs!4470 m!121695))

(declare-fun m!122811 () Bool)

(assert (=> bs!4470 m!122811))

(assert (=> b!108157 d!30243))

(declare-fun d!30245 () Bool)

(declare-fun c!19164 () Bool)

(assert (=> d!30245 (= c!19164 (and ((_ is Cons!1644) (toList!811 lt!55324)) (= (_1!1221 (h!2242 (toList!811 lt!55324))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!70778 () Option!162)

(assert (=> d!30245 (= (getValueByKey!156 (toList!811 lt!55324) #b1000000000000000000000000000000000000000000000000000000000000000) e!70778)))

(declare-fun b!108781 () Bool)

(declare-fun e!70779 () Option!162)

(assert (=> b!108781 (= e!70779 (getValueByKey!156 (t!5776 (toList!811 lt!55324)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108782 () Bool)

(assert (=> b!108782 (= e!70779 None!160)))

(declare-fun b!108780 () Bool)

(assert (=> b!108780 (= e!70778 e!70779)))

(declare-fun c!19165 () Bool)

(assert (=> b!108780 (= c!19165 (and ((_ is Cons!1644) (toList!811 lt!55324)) (not (= (_1!1221 (h!2242 (toList!811 lt!55324))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108779 () Bool)

(assert (=> b!108779 (= e!70778 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55324)))))))

(assert (= (and d!30245 c!19164) b!108779))

(assert (= (and d!30245 (not c!19164)) b!108780))

(assert (= (and b!108780 c!19165) b!108781))

(assert (= (and b!108780 (not c!19165)) b!108782))

(declare-fun m!122813 () Bool)

(assert (=> b!108781 m!122813))

(assert (=> b!108157 d!30245))

(assert (=> b!108319 d!30151))

(declare-fun d!30247 () Bool)

(declare-fun c!19166 () Bool)

(assert (=> d!30247 (= c!19166 (and ((_ is Cons!1644) (t!5776 lt!55329)) (= (_1!1221 (h!2242 (t!5776 lt!55329))) (_1!1221 lt!55252))))))

(declare-fun e!70780 () Option!162)

(assert (=> d!30247 (= (getValueByKey!156 (t!5776 lt!55329) (_1!1221 lt!55252)) e!70780)))

(declare-fun b!108785 () Bool)

(declare-fun e!70781 () Option!162)

(assert (=> b!108785 (= e!70781 (getValueByKey!156 (t!5776 (t!5776 lt!55329)) (_1!1221 lt!55252)))))

(declare-fun b!108786 () Bool)

(assert (=> b!108786 (= e!70781 None!160)))

(declare-fun b!108784 () Bool)

(assert (=> b!108784 (= e!70780 e!70781)))

(declare-fun c!19167 () Bool)

(assert (=> b!108784 (= c!19167 (and ((_ is Cons!1644) (t!5776 lt!55329)) (not (= (_1!1221 (h!2242 (t!5776 lt!55329))) (_1!1221 lt!55252)))))))

(declare-fun b!108783 () Bool)

(assert (=> b!108783 (= e!70780 (Some!161 (_2!1221 (h!2242 (t!5776 lt!55329)))))))

(assert (= (and d!30247 c!19166) b!108783))

(assert (= (and d!30247 (not c!19166)) b!108784))

(assert (= (and b!108784 c!19167) b!108785))

(assert (= (and b!108784 (not c!19167)) b!108786))

(declare-fun m!122815 () Bool)

(assert (=> b!108785 m!122815))

(assert (=> b!108465 d!30247))

(declare-fun d!30249 () Bool)

(declare-fun e!70783 () Bool)

(assert (=> d!30249 e!70783))

(declare-fun res!53912 () Bool)

(assert (=> d!30249 (=> res!53912 e!70783)))

(declare-fun lt!55991 () Bool)

(assert (=> d!30249 (= res!53912 (not lt!55991))))

(declare-fun lt!55992 () Bool)

(assert (=> d!30249 (= lt!55991 lt!55992)))

(declare-fun lt!55993 () Unit!3339)

(declare-fun e!70782 () Unit!3339)

(assert (=> d!30249 (= lt!55993 e!70782)))

(declare-fun c!19168 () Bool)

(assert (=> d!30249 (= c!19168 lt!55992)))

(assert (=> d!30249 (= lt!55992 (containsKey!160 (toList!811 lt!55655) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30249 (= (contains!834 lt!55655 #b1000000000000000000000000000000000000000000000000000000000000000) lt!55991)))

(declare-fun b!108787 () Bool)

(declare-fun lt!55994 () Unit!3339)

(assert (=> b!108787 (= e!70782 lt!55994)))

(assert (=> b!108787 (= lt!55994 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55655) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108787 (isDefined!110 (getValueByKey!156 (toList!811 lt!55655) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108788 () Bool)

(declare-fun Unit!3378 () Unit!3339)

(assert (=> b!108788 (= e!70782 Unit!3378)))

(declare-fun b!108789 () Bool)

(assert (=> b!108789 (= e!70783 (isDefined!110 (getValueByKey!156 (toList!811 lt!55655) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30249 c!19168) b!108787))

(assert (= (and d!30249 (not c!19168)) b!108788))

(assert (= (and d!30249 (not res!53912)) b!108789))

(declare-fun m!122817 () Bool)

(assert (=> d!30249 m!122817))

(declare-fun m!122819 () Bool)

(assert (=> b!108787 m!122819))

(assert (=> b!108787 m!122455))

(assert (=> b!108787 m!122455))

(declare-fun m!122821 () Bool)

(assert (=> b!108787 m!122821))

(assert (=> b!108789 m!122455))

(assert (=> b!108789 m!122455))

(assert (=> b!108789 m!122821))

(assert (=> bm!11510 d!30249))

(declare-fun lt!55995 () Bool)

(declare-fun d!30251 () Bool)

(assert (=> d!30251 (= lt!55995 (select (content!110 (toList!811 lt!55648)) (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun e!70784 () Bool)

(assert (=> d!30251 (= lt!55995 e!70784)))

(declare-fun res!53914 () Bool)

(assert (=> d!30251 (=> (not res!53914) (not e!70784))))

(assert (=> d!30251 (= res!53914 ((_ is Cons!1644) (toList!811 lt!55648)))))

(assert (=> d!30251 (= (contains!835 (toList!811 lt!55648) (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55995)))

(declare-fun b!108790 () Bool)

(declare-fun e!70785 () Bool)

(assert (=> b!108790 (= e!70784 e!70785)))

(declare-fun res!53913 () Bool)

(assert (=> b!108790 (=> res!53913 e!70785)))

(assert (=> b!108790 (= res!53913 (= (h!2242 (toList!811 lt!55648)) (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!108791 () Bool)

(assert (=> b!108791 (= e!70785 (contains!835 (t!5776 (toList!811 lt!55648)) (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (= (and d!30251 res!53914) b!108790))

(assert (= (and b!108790 (not res!53913)) b!108791))

(declare-fun m!122823 () Bool)

(assert (=> d!30251 m!122823))

(declare-fun m!122825 () Bool)

(assert (=> d!30251 m!122825))

(declare-fun m!122827 () Bool)

(assert (=> b!108791 m!122827))

(assert (=> b!108337 d!30251))

(declare-fun d!30253 () Bool)

(declare-fun e!70787 () Bool)

(assert (=> d!30253 e!70787))

(declare-fun res!53915 () Bool)

(assert (=> d!30253 (=> res!53915 e!70787)))

(declare-fun lt!55996 () Bool)

(assert (=> d!30253 (= res!53915 (not lt!55996))))

(declare-fun lt!55997 () Bool)

(assert (=> d!30253 (= lt!55996 lt!55997)))

(declare-fun lt!55998 () Unit!3339)

(declare-fun e!70786 () Unit!3339)

(assert (=> d!30253 (= lt!55998 e!70786)))

(declare-fun c!19169 () Bool)

(assert (=> d!30253 (= c!19169 lt!55997)))

(assert (=> d!30253 (= lt!55997 (containsKey!160 (toList!811 lt!55865) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!30253 (= (contains!834 lt!55865 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) lt!55996)))

(declare-fun b!108792 () Bool)

(declare-fun lt!55999 () Unit!3339)

(assert (=> b!108792 (= e!70786 lt!55999)))

(assert (=> b!108792 (= lt!55999 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55865) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> b!108792 (isDefined!110 (getValueByKey!156 (toList!811 lt!55865) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun b!108793 () Bool)

(declare-fun Unit!3379 () Unit!3339)

(assert (=> b!108793 (= e!70786 Unit!3379)))

(declare-fun b!108794 () Bool)

(assert (=> b!108794 (= e!70787 (isDefined!110 (getValueByKey!156 (toList!811 lt!55865) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(assert (= (and d!30253 c!19169) b!108792))

(assert (= (and d!30253 (not c!19169)) b!108793))

(assert (= (and d!30253 (not res!53915)) b!108794))

(declare-fun m!122829 () Bool)

(assert (=> d!30253 m!122829))

(declare-fun m!122831 () Bool)

(assert (=> b!108792 m!122831))

(assert (=> b!108792 m!122321))

(assert (=> b!108792 m!122321))

(declare-fun m!122833 () Bool)

(assert (=> b!108792 m!122833))

(assert (=> b!108794 m!122321))

(assert (=> b!108794 m!122321))

(assert (=> b!108794 m!122833))

(assert (=> d!30091 d!30253))

(declare-fun c!19170 () Bool)

(declare-fun d!30255 () Bool)

(assert (=> d!30255 (= c!19170 (and ((_ is Cons!1644) lt!55863) (= (_1!1221 (h!2242 lt!55863)) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun e!70788 () Option!162)

(assert (=> d!30255 (= (getValueByKey!156 lt!55863 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) e!70788)))

(declare-fun b!108797 () Bool)

(declare-fun e!70789 () Option!162)

(assert (=> b!108797 (= e!70789 (getValueByKey!156 (t!5776 lt!55863) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun b!108798 () Bool)

(assert (=> b!108798 (= e!70789 None!160)))

(declare-fun b!108796 () Bool)

(assert (=> b!108796 (= e!70788 e!70789)))

(declare-fun c!19171 () Bool)

(assert (=> b!108796 (= c!19171 (and ((_ is Cons!1644) lt!55863) (not (= (_1!1221 (h!2242 lt!55863)) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))))

(declare-fun b!108795 () Bool)

(assert (=> b!108795 (= e!70788 (Some!161 (_2!1221 (h!2242 lt!55863))))))

(assert (= (and d!30255 c!19170) b!108795))

(assert (= (and d!30255 (not c!19170)) b!108796))

(assert (= (and b!108796 c!19171) b!108797))

(assert (= (and b!108796 (not c!19171)) b!108798))

(declare-fun m!122835 () Bool)

(assert (=> b!108797 m!122835))

(assert (=> d!30091 d!30255))

(declare-fun d!30257 () Bool)

(assert (=> d!30257 (= (getValueByKey!156 lt!55863 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (Some!161 (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun lt!56000 () Unit!3339)

(assert (=> d!30257 (= lt!56000 (choose!680 lt!55863 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun e!70790 () Bool)

(assert (=> d!30257 e!70790))

(declare-fun res!53916 () Bool)

(assert (=> d!30257 (=> (not res!53916) (not e!70790))))

(assert (=> d!30257 (= res!53916 (isStrictlySorted!305 lt!55863))))

(assert (=> d!30257 (= (lemmaContainsTupThenGetReturnValue!74 lt!55863 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) lt!56000)))

(declare-fun b!108799 () Bool)

(declare-fun res!53917 () Bool)

(assert (=> b!108799 (=> (not res!53917) (not e!70790))))

(assert (=> b!108799 (= res!53917 (containsKey!160 lt!55863 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun b!108800 () Bool)

(assert (=> b!108800 (= e!70790 (contains!835 lt!55863 (tuple2!2423 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(assert (= (and d!30257 res!53916) b!108799))

(assert (= (and b!108799 res!53917) b!108800))

(assert (=> d!30257 m!122315))

(declare-fun m!122837 () Bool)

(assert (=> d!30257 m!122837))

(declare-fun m!122839 () Bool)

(assert (=> d!30257 m!122839))

(declare-fun m!122841 () Bool)

(assert (=> b!108799 m!122841))

(declare-fun m!122843 () Bool)

(assert (=> b!108800 m!122843))

(assert (=> d!30091 d!30257))

(declare-fun c!19172 () Bool)

(declare-fun b!108801 () Bool)

(assert (=> b!108801 (= c!19172 (and ((_ is Cons!1644) (toList!811 call!11426)) (bvsgt (_1!1221 (h!2242 (toList!811 call!11426))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun e!70791 () List!1648)

(declare-fun e!70792 () List!1648)

(assert (=> b!108801 (= e!70791 e!70792)))

(declare-fun b!108802 () Bool)

(declare-fun e!70793 () List!1648)

(declare-fun call!11566 () List!1648)

(assert (=> b!108802 (= e!70793 call!11566)))

(declare-fun c!19173 () Bool)

(declare-fun bm!11562 () Bool)

(declare-fun e!70795 () List!1648)

(assert (=> bm!11562 (= call!11566 ($colon$colon!81 e!70795 (ite c!19173 (h!2242 (toList!811 call!11426)) (tuple2!2423 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))))

(declare-fun c!19174 () Bool)

(assert (=> bm!11562 (= c!19174 c!19173)))

(declare-fun b!108803 () Bool)

(declare-fun call!11565 () List!1648)

(assert (=> b!108803 (= e!70792 call!11565)))

(declare-fun b!108804 () Bool)

(declare-fun call!11567 () List!1648)

(assert (=> b!108804 (= e!70791 call!11567)))

(declare-fun d!30259 () Bool)

(declare-fun e!70794 () Bool)

(assert (=> d!30259 e!70794))

(declare-fun res!53918 () Bool)

(assert (=> d!30259 (=> (not res!53918) (not e!70794))))

(declare-fun lt!56001 () List!1648)

(assert (=> d!30259 (= res!53918 (isStrictlySorted!305 lt!56001))))

(assert (=> d!30259 (= lt!56001 e!70793)))

(assert (=> d!30259 (= c!19173 (and ((_ is Cons!1644) (toList!811 call!11426)) (bvslt (_1!1221 (h!2242 (toList!811 call!11426))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(assert (=> d!30259 (isStrictlySorted!305 (toList!811 call!11426))))

(assert (=> d!30259 (= (insertStrictlySorted!76 (toList!811 call!11426) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) lt!56001)))

(declare-fun b!108805 () Bool)

(assert (=> b!108805 (= e!70793 e!70791)))

(declare-fun c!19175 () Bool)

(assert (=> b!108805 (= c!19175 (and ((_ is Cons!1644) (toList!811 call!11426)) (= (_1!1221 (h!2242 (toList!811 call!11426))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun b!108806 () Bool)

(declare-fun res!53919 () Bool)

(assert (=> b!108806 (=> (not res!53919) (not e!70794))))

(assert (=> b!108806 (= res!53919 (containsKey!160 lt!56001 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun bm!11563 () Bool)

(assert (=> bm!11563 (= call!11567 call!11566)))

(declare-fun bm!11564 () Bool)

(assert (=> bm!11564 (= call!11565 call!11567)))

(declare-fun b!108807 () Bool)

(assert (=> b!108807 (= e!70795 (insertStrictlySorted!76 (t!5776 (toList!811 call!11426)) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun b!108808 () Bool)

(assert (=> b!108808 (= e!70792 call!11565)))

(declare-fun b!108809 () Bool)

(assert (=> b!108809 (= e!70794 (contains!835 lt!56001 (tuple2!2423 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun b!108810 () Bool)

(assert (=> b!108810 (= e!70795 (ite c!19175 (t!5776 (toList!811 call!11426)) (ite c!19172 (Cons!1644 (h!2242 (toList!811 call!11426)) (t!5776 (toList!811 call!11426))) Nil!1645)))))

(assert (= (and d!30259 c!19173) b!108802))

(assert (= (and d!30259 (not c!19173)) b!108805))

(assert (= (and b!108805 c!19175) b!108804))

(assert (= (and b!108805 (not c!19175)) b!108801))

(assert (= (and b!108801 c!19172) b!108808))

(assert (= (and b!108801 (not c!19172)) b!108803))

(assert (= (or b!108808 b!108803) bm!11564))

(assert (= (or b!108804 bm!11564) bm!11563))

(assert (= (or b!108802 bm!11563) bm!11562))

(assert (= (and bm!11562 c!19174) b!108807))

(assert (= (and bm!11562 (not c!19174)) b!108810))

(assert (= (and d!30259 res!53918) b!108806))

(assert (= (and b!108806 res!53919) b!108809))

(declare-fun m!122845 () Bool)

(assert (=> b!108809 m!122845))

(declare-fun m!122847 () Bool)

(assert (=> b!108806 m!122847))

(declare-fun m!122849 () Bool)

(assert (=> bm!11562 m!122849))

(declare-fun m!122851 () Bool)

(assert (=> d!30259 m!122851))

(declare-fun m!122853 () Bool)

(assert (=> d!30259 m!122853))

(declare-fun m!122855 () Bool)

(assert (=> b!108807 m!122855))

(assert (=> d!30091 d!30259))

(declare-fun d!30261 () Bool)

(declare-fun e!70797 () Bool)

(assert (=> d!30261 e!70797))

(declare-fun res!53920 () Bool)

(assert (=> d!30261 (=> res!53920 e!70797)))

(declare-fun lt!56002 () Bool)

(assert (=> d!30261 (= res!53920 (not lt!56002))))

(declare-fun lt!56003 () Bool)

(assert (=> d!30261 (= lt!56002 lt!56003)))

(declare-fun lt!56004 () Unit!3339)

(declare-fun e!70796 () Unit!3339)

(assert (=> d!30261 (= lt!56004 e!70796)))

(declare-fun c!19176 () Bool)

(assert (=> d!30261 (= c!19176 lt!56003)))

(assert (=> d!30261 (= lt!56003 (containsKey!160 (toList!811 lt!55482) lt!55494))))

(assert (=> d!30261 (= (contains!834 lt!55482 lt!55494) lt!56002)))

(declare-fun b!108811 () Bool)

(declare-fun lt!56005 () Unit!3339)

(assert (=> b!108811 (= e!70796 lt!56005)))

(assert (=> b!108811 (= lt!56005 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55482) lt!55494))))

(assert (=> b!108811 (isDefined!110 (getValueByKey!156 (toList!811 lt!55482) lt!55494))))

(declare-fun b!108812 () Bool)

(declare-fun Unit!3380 () Unit!3339)

(assert (=> b!108812 (= e!70796 Unit!3380)))

(declare-fun b!108813 () Bool)

(assert (=> b!108813 (= e!70797 (isDefined!110 (getValueByKey!156 (toList!811 lt!55482) lt!55494)))))

(assert (= (and d!30261 c!19176) b!108811))

(assert (= (and d!30261 (not c!19176)) b!108812))

(assert (= (and d!30261 (not res!53920)) b!108813))

(declare-fun m!122857 () Bool)

(assert (=> d!30261 m!122857))

(declare-fun m!122859 () Bool)

(assert (=> b!108811 m!122859))

(assert (=> b!108811 m!122093))

(assert (=> b!108811 m!122093))

(declare-fun m!122861 () Bool)

(assert (=> b!108811 m!122861))

(assert (=> b!108813 m!122093))

(assert (=> b!108813 m!122093))

(assert (=> b!108813 m!122861))

(assert (=> d!30017 d!30261))

(assert (=> d!30017 d!30011))

(declare-fun d!30263 () Bool)

(assert (=> d!30263 (= (apply!99 (+!148 lt!55482 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55494) (apply!99 lt!55482 lt!55494))))

(assert (=> d!30263 true))

(declare-fun _$34!895 () Unit!3339)

(assert (=> d!30263 (= (choose!684 lt!55482 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) lt!55494) _$34!895)))

(declare-fun bs!4471 () Bool)

(assert (= bs!4471 d!30263))

(assert (=> bs!4471 m!121459))

(assert (=> bs!4471 m!121459))

(assert (=> bs!4471 m!121481))

(assert (=> bs!4471 m!121471))

(assert (=> d!30017 d!30263))

(assert (=> d!30017 d!30037))

(assert (=> d!30017 d!30025))

(declare-fun lt!56006 () Bool)

(declare-fun d!30265 () Bool)

(assert (=> d!30265 (= lt!56006 (select (content!110 (toList!811 lt!55841)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!70798 () Bool)

(assert (=> d!30265 (= lt!56006 e!70798)))

(declare-fun res!53922 () Bool)

(assert (=> d!30265 (=> (not res!53922) (not e!70798))))

(assert (=> d!30265 (= res!53922 ((_ is Cons!1644) (toList!811 lt!55841)))))

(assert (=> d!30265 (= (contains!835 (toList!811 lt!55841) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!56006)))

(declare-fun b!108815 () Bool)

(declare-fun e!70799 () Bool)

(assert (=> b!108815 (= e!70798 e!70799)))

(declare-fun res!53921 () Bool)

(assert (=> b!108815 (=> res!53921 e!70799)))

(assert (=> b!108815 (= res!53921 (= (h!2242 (toList!811 lt!55841)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!108816 () Bool)

(assert (=> b!108816 (= e!70799 (contains!835 (t!5776 (toList!811 lt!55841)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!30265 res!53922) b!108815))

(assert (= (and b!108815 (not res!53921)) b!108816))

(declare-fun m!122863 () Bool)

(assert (=> d!30265 m!122863))

(declare-fun m!122865 () Bool)

(assert (=> d!30265 m!122865))

(declare-fun m!122867 () Bool)

(assert (=> b!108816 m!122867))

(assert (=> b!108502 d!30265))

(declare-fun d!30267 () Bool)

(declare-fun c!19177 () Bool)

(assert (=> d!30267 (= c!19177 (and ((_ is Cons!1644) (toList!811 lt!55841)) (= (_1!1221 (h!2242 (toList!811 lt!55841))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!70800 () Option!162)

(assert (=> d!30267 (= (getValueByKey!156 (toList!811 lt!55841) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!70800)))

(declare-fun b!108819 () Bool)

(declare-fun e!70801 () Option!162)

(assert (=> b!108819 (= e!70801 (getValueByKey!156 (t!5776 (toList!811 lt!55841)) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!108820 () Bool)

(assert (=> b!108820 (= e!70801 None!160)))

(declare-fun b!108818 () Bool)

(assert (=> b!108818 (= e!70800 e!70801)))

(declare-fun c!19178 () Bool)

(assert (=> b!108818 (= c!19178 (and ((_ is Cons!1644) (toList!811 lt!55841)) (not (= (_1!1221 (h!2242 (toList!811 lt!55841))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!108817 () Bool)

(assert (=> b!108817 (= e!70800 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55841)))))))

(assert (= (and d!30267 c!19177) b!108817))

(assert (= (and d!30267 (not c!19177)) b!108818))

(assert (= (and b!108818 c!19178) b!108819))

(assert (= (and b!108818 (not c!19178)) b!108820))

(declare-fun m!122869 () Bool)

(assert (=> b!108819 m!122869))

(assert (=> b!108501 d!30267))

(declare-fun d!30269 () Bool)

(declare-fun res!53923 () Bool)

(declare-fun e!70802 () Bool)

(assert (=> d!30269 (=> res!53923 e!70802)))

(assert (=> d!30269 (= res!53923 (and ((_ is Cons!1644) (toList!811 lt!55331)) (= (_1!1221 (h!2242 (toList!811 lt!55331))) (_1!1221 lt!55252))))))

(assert (=> d!30269 (= (containsKey!160 (toList!811 lt!55331) (_1!1221 lt!55252)) e!70802)))

(declare-fun b!108821 () Bool)

(declare-fun e!70803 () Bool)

(assert (=> b!108821 (= e!70802 e!70803)))

(declare-fun res!53924 () Bool)

(assert (=> b!108821 (=> (not res!53924) (not e!70803))))

(assert (=> b!108821 (= res!53924 (and (or (not ((_ is Cons!1644) (toList!811 lt!55331))) (bvsle (_1!1221 (h!2242 (toList!811 lt!55331))) (_1!1221 lt!55252))) ((_ is Cons!1644) (toList!811 lt!55331)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55331))) (_1!1221 lt!55252))))))

(declare-fun b!108822 () Bool)

(assert (=> b!108822 (= e!70803 (containsKey!160 (t!5776 (toList!811 lt!55331)) (_1!1221 lt!55252)))))

(assert (= (and d!30269 (not res!53923)) b!108821))

(assert (= (and b!108821 res!53924) b!108822))

(declare-fun m!122871 () Bool)

(assert (=> b!108822 m!122871))

(assert (=> d!30049 d!30269))

(declare-fun d!30271 () Bool)

(assert (=> d!30271 (= (get!1352 (getValueByKey!156 (toList!811 lt!55324) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2917 (getValueByKey!156 (toList!811 lt!55324) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29967 d!30271))

(assert (=> d!29967 d!30115))

(declare-fun d!30273 () Bool)

(declare-fun c!19179 () Bool)

(assert (=> d!30273 (= c!19179 (and ((_ is Cons!1644) (toList!811 lt!55779)) (= (_1!1221 (h!2242 (toList!811 lt!55779))) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!70804 () Option!162)

(assert (=> d!30273 (= (getValueByKey!156 (toList!811 lt!55779) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) e!70804)))

(declare-fun b!108825 () Bool)

(declare-fun e!70805 () Option!162)

(assert (=> b!108825 (= e!70805 (getValueByKey!156 (t!5776 (toList!811 lt!55779)) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!108826 () Bool)

(assert (=> b!108826 (= e!70805 None!160)))

(declare-fun b!108824 () Bool)

(assert (=> b!108824 (= e!70804 e!70805)))

(declare-fun c!19180 () Bool)

(assert (=> b!108824 (= c!19180 (and ((_ is Cons!1644) (toList!811 lt!55779)) (not (= (_1!1221 (h!2242 (toList!811 lt!55779))) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun b!108823 () Bool)

(assert (=> b!108823 (= e!70804 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55779)))))))

(assert (= (and d!30273 c!19179) b!108823))

(assert (= (and d!30273 (not c!19179)) b!108824))

(assert (= (and b!108824 c!19180) b!108825))

(assert (= (and b!108824 (not c!19180)) b!108826))

(declare-fun m!122873 () Bool)

(assert (=> b!108825 m!122873))

(assert (=> b!108428 d!30273))

(declare-fun d!30275 () Bool)

(assert (=> d!30275 (= (apply!99 lt!55558 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1352 (getValueByKey!156 (toList!811 lt!55558) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4472 () Bool)

(assert (= bs!4472 d!30275))

(assert (=> bs!4472 m!121517))

(declare-fun m!122875 () Bool)

(assert (=> bs!4472 m!122875))

(assert (=> bs!4472 m!122875))

(declare-fun m!122877 () Bool)

(assert (=> bs!4472 m!122877))

(assert (=> b!108144 d!30275))

(declare-fun c!19181 () Bool)

(declare-fun d!30277 () Bool)

(assert (=> d!30277 (= c!19181 ((_ is ValueCellFull!1002) (select (arr!2075 (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!70806 () V!3235)

(assert (=> d!30277 (= (get!1349 (select (arr!2075 (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70806)))

(declare-fun b!108827 () Bool)

(assert (=> b!108827 (= e!70806 (get!1350 (select (arr!2075 (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108828 () Bool)

(assert (=> b!108828 (= e!70806 (get!1351 (select (arr!2075 (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30277 c!19181) b!108827))

(assert (= (and d!30277 (not c!19181)) b!108828))

(assert (=> b!108827 m!121683))

(assert (=> b!108827 m!121569))

(declare-fun m!122879 () Bool)

(assert (=> b!108827 m!122879))

(assert (=> b!108828 m!121683))

(assert (=> b!108828 m!121569))

(declare-fun m!122881 () Bool)

(assert (=> b!108828 m!122881))

(assert (=> b!108144 d!30277))

(declare-fun d!30279 () Bool)

(declare-fun res!53925 () Bool)

(declare-fun e!70807 () Bool)

(assert (=> d!30279 (=> res!53925 e!70807)))

(assert (=> d!30279 (= res!53925 (and ((_ is Cons!1644) (toList!811 e!70282)) (= (_1!1221 (h!2242 (toList!811 e!70282))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!30279 (= (containsKey!160 (toList!811 e!70282) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) e!70807)))

(declare-fun b!108829 () Bool)

(declare-fun e!70808 () Bool)

(assert (=> b!108829 (= e!70807 e!70808)))

(declare-fun res!53926 () Bool)

(assert (=> b!108829 (=> (not res!53926) (not e!70808))))

(assert (=> b!108829 (= res!53926 (and (or (not ((_ is Cons!1644) (toList!811 e!70282))) (bvsle (_1!1221 (h!2242 (toList!811 e!70282))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))) ((_ is Cons!1644) (toList!811 e!70282)) (bvslt (_1!1221 (h!2242 (toList!811 e!70282))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))))

(declare-fun b!108830 () Bool)

(assert (=> b!108830 (= e!70808 (containsKey!160 (t!5776 (toList!811 e!70282)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30279 (not res!53925)) b!108829))

(assert (= (and b!108829 res!53926) b!108830))

(assert (=> b!108830 m!121177))

(declare-fun m!122883 () Bool)

(assert (=> b!108830 m!122883))

(assert (=> d!29987 d!30279))

(declare-fun b!108831 () Bool)

(declare-fun e!70814 () Bool)

(declare-fun call!11573 () Bool)

(assert (=> b!108831 (= e!70814 (not call!11573))))

(declare-fun call!11572 () ListLongMap!1591)

(declare-fun call!11571 () ListLongMap!1591)

(declare-fun c!19185 () Bool)

(declare-fun call!11570 () ListLongMap!1591)

(declare-fun call!11569 () ListLongMap!1591)

(declare-fun bm!11565 () Bool)

(declare-fun c!19183 () Bool)

(assert (=> bm!11565 (= call!11571 (+!148 (ite c!19185 call!11569 (ite c!19183 call!11570 call!11572)) (ite (or c!19185 c!19183) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248))))))

(declare-fun b!108832 () Bool)

(declare-fun e!70810 () Bool)

(declare-fun call!11568 () Bool)

(assert (=> b!108832 (= e!70810 (not call!11568))))

(declare-fun bm!11566 () Bool)

(assert (=> bm!11566 (= call!11572 call!11570)))

(declare-fun b!108833 () Bool)

(declare-fun e!70816 () Bool)

(assert (=> b!108833 (= e!70814 e!70816)))

(declare-fun res!53933 () Bool)

(assert (=> b!108833 (= res!53933 call!11573)))

(assert (=> b!108833 (=> (not res!53933) (not e!70816))))

(declare-fun bm!11567 () Bool)

(declare-fun call!11574 () ListLongMap!1591)

(assert (=> bm!11567 (= call!11574 call!11571)))

(declare-fun bm!11568 () Bool)

(assert (=> bm!11568 (= call!11569 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55416 (zeroValue!2479 newMap!16) lt!55248 #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun b!108834 () Bool)

(declare-fun e!70820 () Unit!3339)

(declare-fun Unit!3381 () Unit!3339)

(assert (=> b!108834 (= e!70820 Unit!3381)))

(declare-fun d!30281 () Bool)

(declare-fun e!70813 () Bool)

(assert (=> d!30281 e!70813))

(declare-fun res!53932 () Bool)

(assert (=> d!30281 (=> (not res!53932) (not e!70813))))

(assert (=> d!30281 (= res!53932 (or (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))))

(declare-fun lt!56008 () ListLongMap!1591)

(declare-fun lt!56027 () ListLongMap!1591)

(assert (=> d!30281 (= lt!56008 lt!56027)))

(declare-fun lt!56019 () Unit!3339)

(assert (=> d!30281 (= lt!56019 e!70820)))

(declare-fun c!19186 () Bool)

(declare-fun e!70819 () Bool)

(assert (=> d!30281 (= c!19186 e!70819)))

(declare-fun res!53928 () Bool)

(assert (=> d!30281 (=> (not res!53928) (not e!70819))))

(assert (=> d!30281 (= res!53928 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun e!70817 () ListLongMap!1591)

(assert (=> d!30281 (= lt!56027 e!70817)))

(assert (=> d!30281 (= c!19185 (and (not (= (bvand lt!55416 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!55416 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30281 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30281 (= (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55416 (zeroValue!2479 newMap!16) lt!55248 #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!56008)))

(declare-fun b!108835 () Bool)

(declare-fun e!70812 () Bool)

(assert (=> b!108835 (= e!70810 e!70812)))

(declare-fun res!53934 () Bool)

(assert (=> b!108835 (= res!53934 call!11568)))

(assert (=> b!108835 (=> (not res!53934) (not e!70812))))

(declare-fun b!108836 () Bool)

(declare-fun lt!56014 () Unit!3339)

(assert (=> b!108836 (= e!70820 lt!56014)))

(declare-fun lt!56026 () ListLongMap!1591)

(assert (=> b!108836 (= lt!56026 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55416 (zeroValue!2479 newMap!16) lt!55248 #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56024 () (_ BitVec 64))

(assert (=> b!108836 (= lt!56024 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56025 () (_ BitVec 64))

(assert (=> b!108836 (= lt!56025 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56010 () Unit!3339)

(assert (=> b!108836 (= lt!56010 (addStillContains!75 lt!56026 lt!56024 (zeroValue!2479 newMap!16) lt!56025))))

(assert (=> b!108836 (contains!834 (+!148 lt!56026 (tuple2!2423 lt!56024 (zeroValue!2479 newMap!16))) lt!56025)))

(declare-fun lt!56017 () Unit!3339)

(assert (=> b!108836 (= lt!56017 lt!56010)))

(declare-fun lt!56009 () ListLongMap!1591)

(assert (=> b!108836 (= lt!56009 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55416 (zeroValue!2479 newMap!16) lt!55248 #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56020 () (_ BitVec 64))

(assert (=> b!108836 (= lt!56020 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56016 () (_ BitVec 64))

(assert (=> b!108836 (= lt!56016 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56021 () Unit!3339)

(assert (=> b!108836 (= lt!56021 (addApplyDifferent!75 lt!56009 lt!56020 lt!55248 lt!56016))))

(assert (=> b!108836 (= (apply!99 (+!148 lt!56009 (tuple2!2423 lt!56020 lt!55248)) lt!56016) (apply!99 lt!56009 lt!56016))))

(declare-fun lt!56018 () Unit!3339)

(assert (=> b!108836 (= lt!56018 lt!56021)))

(declare-fun lt!56011 () ListLongMap!1591)

(assert (=> b!108836 (= lt!56011 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55416 (zeroValue!2479 newMap!16) lt!55248 #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56013 () (_ BitVec 64))

(assert (=> b!108836 (= lt!56013 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56023 () (_ BitVec 64))

(assert (=> b!108836 (= lt!56023 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56007 () Unit!3339)

(assert (=> b!108836 (= lt!56007 (addApplyDifferent!75 lt!56011 lt!56013 (zeroValue!2479 newMap!16) lt!56023))))

(assert (=> b!108836 (= (apply!99 (+!148 lt!56011 (tuple2!2423 lt!56013 (zeroValue!2479 newMap!16))) lt!56023) (apply!99 lt!56011 lt!56023))))

(declare-fun lt!56015 () Unit!3339)

(assert (=> b!108836 (= lt!56015 lt!56007)))

(declare-fun lt!56028 () ListLongMap!1591)

(assert (=> b!108836 (= lt!56028 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55416 (zeroValue!2479 newMap!16) lt!55248 #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56012 () (_ BitVec 64))

(assert (=> b!108836 (= lt!56012 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56022 () (_ BitVec 64))

(assert (=> b!108836 (= lt!56022 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108836 (= lt!56014 (addApplyDifferent!75 lt!56028 lt!56012 lt!55248 lt!56022))))

(assert (=> b!108836 (= (apply!99 (+!148 lt!56028 (tuple2!2423 lt!56012 lt!55248)) lt!56022) (apply!99 lt!56028 lt!56022))))

(declare-fun b!108837 () Bool)

(assert (=> b!108837 (= e!70817 (+!148 call!11571 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)))))

(declare-fun bm!11569 () Bool)

(assert (=> bm!11569 (= call!11573 (contains!834 lt!56008 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108838 () Bool)

(declare-fun c!19187 () Bool)

(assert (=> b!108838 (= c!19187 (and (not (= (bvand lt!55416 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!55416 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!70818 () ListLongMap!1591)

(declare-fun e!70809 () ListLongMap!1591)

(assert (=> b!108838 (= e!70818 e!70809)))

(declare-fun b!108839 () Bool)

(declare-fun e!70821 () Bool)

(assert (=> b!108839 (= e!70821 (= (apply!99 lt!56008 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1349 (select (arr!2075 (_values!2589 newMap!16)) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108839 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_values!2589 newMap!16))))))

(assert (=> b!108839 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108840 () Bool)

(assert (=> b!108840 (= e!70819 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108841 () Bool)

(assert (=> b!108841 (= e!70813 e!70810)))

(declare-fun c!19184 () Bool)

(assert (=> b!108841 (= c!19184 (not (= (bvand lt!55416 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108842 () Bool)

(assert (=> b!108842 (= e!70816 (= (apply!99 lt!56008 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2479 newMap!16)))))

(declare-fun b!108843 () Bool)

(declare-fun res!53929 () Bool)

(assert (=> b!108843 (=> (not res!53929) (not e!70813))))

(declare-fun e!70815 () Bool)

(assert (=> b!108843 (= res!53929 e!70815)))

(declare-fun res!53927 () Bool)

(assert (=> b!108843 (=> res!53927 e!70815)))

(declare-fun e!70811 () Bool)

(assert (=> b!108843 (= res!53927 (not e!70811))))

(declare-fun res!53930 () Bool)

(assert (=> b!108843 (=> (not res!53930) (not e!70811))))

(assert (=> b!108843 (= res!53930 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108844 () Bool)

(assert (=> b!108844 (= e!70809 call!11574)))

(declare-fun b!108845 () Bool)

(declare-fun res!53935 () Bool)

(assert (=> b!108845 (=> (not res!53935) (not e!70813))))

(assert (=> b!108845 (= res!53935 e!70814)))

(declare-fun c!19182 () Bool)

(assert (=> b!108845 (= c!19182 (not (= (bvand lt!55416 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11570 () Bool)

(assert (=> bm!11570 (= call!11570 call!11569)))

(declare-fun bm!11571 () Bool)

(assert (=> bm!11571 (= call!11568 (contains!834 lt!56008 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108846 () Bool)

(assert (=> b!108846 (= e!70812 (= (apply!99 lt!56008 #b1000000000000000000000000000000000000000000000000000000000000000) lt!55248))))

(declare-fun b!108847 () Bool)

(assert (=> b!108847 (= e!70809 call!11572)))

(declare-fun b!108848 () Bool)

(assert (=> b!108848 (= e!70818 call!11574)))

(declare-fun b!108849 () Bool)

(assert (=> b!108849 (= e!70815 e!70821)))

(declare-fun res!53931 () Bool)

(assert (=> b!108849 (=> (not res!53931) (not e!70821))))

(assert (=> b!108849 (= res!53931 (contains!834 lt!56008 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108849 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108850 () Bool)

(assert (=> b!108850 (= e!70811 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108851 () Bool)

(assert (=> b!108851 (= e!70817 e!70818)))

(assert (=> b!108851 (= c!19183 (and (not (= (bvand lt!55416 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!55416 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!30281 c!19185) b!108837))

(assert (= (and d!30281 (not c!19185)) b!108851))

(assert (= (and b!108851 c!19183) b!108848))

(assert (= (and b!108851 (not c!19183)) b!108838))

(assert (= (and b!108838 c!19187) b!108844))

(assert (= (and b!108838 (not c!19187)) b!108847))

(assert (= (or b!108844 b!108847) bm!11566))

(assert (= (or b!108848 bm!11566) bm!11570))

(assert (= (or b!108848 b!108844) bm!11567))

(assert (= (or b!108837 bm!11570) bm!11568))

(assert (= (or b!108837 bm!11567) bm!11565))

(assert (= (and d!30281 res!53928) b!108840))

(assert (= (and d!30281 c!19186) b!108836))

(assert (= (and d!30281 (not c!19186)) b!108834))

(assert (= (and d!30281 res!53932) b!108843))

(assert (= (and b!108843 res!53930) b!108850))

(assert (= (and b!108843 (not res!53927)) b!108849))

(assert (= (and b!108849 res!53931) b!108839))

(assert (= (and b!108843 res!53929) b!108845))

(assert (= (and b!108845 c!19182) b!108833))

(assert (= (and b!108845 (not c!19182)) b!108831))

(assert (= (and b!108833 res!53933) b!108842))

(assert (= (or b!108833 b!108831) bm!11569))

(assert (= (and b!108845 res!53935) b!108841))

(assert (= (and b!108841 c!19184) b!108835))

(assert (= (and b!108841 (not c!19184)) b!108832))

(assert (= (and b!108835 res!53934) b!108846))

(assert (= (or b!108835 b!108832) bm!11571))

(declare-fun b_lambda!4895 () Bool)

(assert (=> (not b_lambda!4895) (not b!108839)))

(assert (=> b!108839 t!5783))

(declare-fun b_and!6733 () Bool)

(assert (= b_and!6729 (and (=> t!5783 result!3521) b_and!6733)))

(assert (=> b!108839 t!5785))

(declare-fun b_and!6735 () Bool)

(assert (= b_and!6731 (and (=> t!5785 result!3523) b_and!6735)))

(assert (=> b!108850 m!121517))

(assert (=> b!108850 m!121517))

(assert (=> b!108850 m!121519))

(assert (=> d!30281 m!121521))

(declare-fun m!122885 () Bool)

(assert (=> bm!11571 m!122885))

(declare-fun m!122887 () Bool)

(assert (=> bm!11569 m!122887))

(declare-fun m!122889 () Bool)

(assert (=> b!108846 m!122889))

(declare-fun m!122891 () Bool)

(assert (=> bm!11568 m!122891))

(declare-fun m!122893 () Bool)

(assert (=> b!108837 m!122893))

(declare-fun m!122895 () Bool)

(assert (=> b!108842 m!122895))

(assert (=> b!108840 m!121517))

(assert (=> b!108840 m!121517))

(assert (=> b!108840 m!121519))

(declare-fun m!122897 () Bool)

(assert (=> b!108836 m!122897))

(declare-fun m!122899 () Bool)

(assert (=> b!108836 m!122899))

(declare-fun m!122901 () Bool)

(assert (=> b!108836 m!122901))

(declare-fun m!122903 () Bool)

(assert (=> b!108836 m!122903))

(declare-fun m!122905 () Bool)

(assert (=> b!108836 m!122905))

(declare-fun m!122907 () Bool)

(assert (=> b!108836 m!122907))

(declare-fun m!122909 () Bool)

(assert (=> b!108836 m!122909))

(assert (=> b!108836 m!122891))

(declare-fun m!122911 () Bool)

(assert (=> b!108836 m!122911))

(assert (=> b!108836 m!122907))

(declare-fun m!122913 () Bool)

(assert (=> b!108836 m!122913))

(assert (=> b!108836 m!122901))

(declare-fun m!122915 () Bool)

(assert (=> b!108836 m!122915))

(assert (=> b!108836 m!122903))

(declare-fun m!122917 () Bool)

(assert (=> b!108836 m!122917))

(assert (=> b!108836 m!122897))

(declare-fun m!122919 () Bool)

(assert (=> b!108836 m!122919))

(declare-fun m!122921 () Bool)

(assert (=> b!108836 m!122921))

(declare-fun m!122923 () Bool)

(assert (=> b!108836 m!122923))

(assert (=> b!108836 m!121517))

(declare-fun m!122925 () Bool)

(assert (=> b!108836 m!122925))

(assert (=> b!108849 m!121517))

(assert (=> b!108849 m!121517))

(declare-fun m!122927 () Bool)

(assert (=> b!108849 m!122927))

(assert (=> b!108839 m!121567))

(assert (=> b!108839 m!121569))

(assert (=> b!108839 m!121571))

(assert (=> b!108839 m!121517))

(declare-fun m!122929 () Bool)

(assert (=> b!108839 m!122929))

(assert (=> b!108839 m!121517))

(assert (=> b!108839 m!121569))

(assert (=> b!108839 m!121567))

(declare-fun m!122931 () Bool)

(assert (=> bm!11565 m!122931))

(assert (=> d!30045 d!30281))

(declare-fun d!30283 () Bool)

(assert (=> d!30283 (= (+!148 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55416 (zeroValue!2479 newMap!16) lt!55248 #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(assert (=> d!30283 true))

(declare-fun _$8!97 () Unit!3339)

(assert (=> d!30283 (= (choose!686 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) lt!55416 (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) lt!55248 (defaultEntry!2606 newMap!16)) _$8!97)))

(declare-fun bs!4473 () Bool)

(assert (= bs!4473 d!30283))

(assert (=> bs!4473 m!121407))

(assert (=> bs!4473 m!121407))

(assert (=> bs!4473 m!122207))

(assert (=> bs!4473 m!122205))

(assert (=> d!30045 d!30283))

(assert (=> d!30045 d!29895))

(assert (=> d!30045 d!30107))

(declare-fun d!30285 () Bool)

(declare-fun e!70822 () Bool)

(assert (=> d!30285 e!70822))

(declare-fun res!53936 () Bool)

(assert (=> d!30285 (=> (not res!53936) (not e!70822))))

(declare-fun lt!56031 () ListLongMap!1591)

(assert (=> d!30285 (= res!53936 (contains!834 lt!56031 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248))))))

(declare-fun lt!56029 () List!1648)

(assert (=> d!30285 (= lt!56031 (ListLongMap!1592 lt!56029))))

(declare-fun lt!56030 () Unit!3339)

(declare-fun lt!56032 () Unit!3339)

(assert (=> d!30285 (= lt!56030 lt!56032)))

(assert (=> d!30285 (= (getValueByKey!156 lt!56029 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248))) (Some!161 (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248))))))

(assert (=> d!30285 (= lt!56032 (lemmaContainsTupThenGetReturnValue!74 lt!56029 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248))))))

(assert (=> d!30285 (= lt!56029 (insertStrictlySorted!76 (toList!811 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248))))))

(assert (=> d!30285 (= (+!148 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) lt!56031)))

(declare-fun b!108852 () Bool)

(declare-fun res!53937 () Bool)

(assert (=> b!108852 (=> (not res!53937) (not e!70822))))

(assert (=> b!108852 (= res!53937 (= (getValueByKey!156 (toList!811 lt!56031) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248))) (Some!161 (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)))))))

(declare-fun b!108853 () Bool)

(assert (=> b!108853 (= e!70822 (contains!835 (toList!811 lt!56031) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)))))

(assert (= (and d!30285 res!53936) b!108852))

(assert (= (and b!108852 res!53937) b!108853))

(declare-fun m!122933 () Bool)

(assert (=> d!30285 m!122933))

(declare-fun m!122935 () Bool)

(assert (=> d!30285 m!122935))

(declare-fun m!122937 () Bool)

(assert (=> d!30285 m!122937))

(declare-fun m!122939 () Bool)

(assert (=> d!30285 m!122939))

(declare-fun m!122941 () Bool)

(assert (=> b!108852 m!122941))

(declare-fun m!122943 () Bool)

(assert (=> b!108853 m!122943))

(assert (=> d!30045 d!30285))

(declare-fun d!30287 () Bool)

(assert (=> d!30287 (= (+!148 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (getCurrentListMap!487 (_keys!4316 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(assert (=> d!30287 true))

(declare-fun _$5!113 () Unit!3339)

(assert (=> d!30287 (= (choose!678 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (index!3230 lt!55408) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248 (defaultEntry!2606 newMap!16)) _$5!113)))

(declare-fun bs!4474 () Bool)

(assert (= bs!4474 d!30287))

(assert (=> bs!4474 m!121407))

(assert (=> bs!4474 m!121407))

(assert (=> bs!4474 m!121625))

(assert (=> bs!4474 m!121419))

(assert (=> bs!4474 m!121627))

(assert (=> d!29909 d!30287))

(assert (=> d!29909 d!30107))

(declare-fun d!30289 () Bool)

(declare-fun e!70824 () Bool)

(assert (=> d!30289 e!70824))

(declare-fun res!53938 () Bool)

(assert (=> d!30289 (=> res!53938 e!70824)))

(declare-fun lt!56033 () Bool)

(assert (=> d!30289 (= res!53938 (not lt!56033))))

(declare-fun lt!56034 () Bool)

(assert (=> d!30289 (= lt!56033 lt!56034)))

(declare-fun lt!56035 () Unit!3339)

(declare-fun e!70823 () Unit!3339)

(assert (=> d!30289 (= lt!56035 e!70823)))

(declare-fun c!19188 () Bool)

(assert (=> d!30289 (= c!19188 lt!56034)))

(assert (=> d!30289 (= lt!56034 (containsKey!160 (toList!811 lt!55510) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!30289 (= (contains!834 lt!55510 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) lt!56033)))

(declare-fun b!108854 () Bool)

(declare-fun lt!56036 () Unit!3339)

(assert (=> b!108854 (= e!70823 lt!56036)))

(assert (=> b!108854 (= lt!56036 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55510) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108854 (isDefined!110 (getValueByKey!156 (toList!811 lt!55510) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108855 () Bool)

(declare-fun Unit!3382 () Unit!3339)

(assert (=> b!108855 (= e!70823 Unit!3382)))

(declare-fun b!108856 () Bool)

(assert (=> b!108856 (= e!70824 (isDefined!110 (getValueByKey!156 (toList!811 lt!55510) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!30289 c!19188) b!108854))

(assert (= (and d!30289 (not c!19188)) b!108855))

(assert (= (and d!30289 (not res!53938)) b!108856))

(assert (=> d!30289 m!121517))

(declare-fun m!122945 () Bool)

(assert (=> d!30289 m!122945))

(assert (=> b!108854 m!121517))

(declare-fun m!122947 () Bool)

(assert (=> b!108854 m!122947))

(assert (=> b!108854 m!121517))

(declare-fun m!122949 () Bool)

(assert (=> b!108854 m!122949))

(assert (=> b!108854 m!122949))

(declare-fun m!122951 () Bool)

(assert (=> b!108854 m!122951))

(assert (=> b!108856 m!121517))

(assert (=> b!108856 m!122949))

(assert (=> b!108856 m!122949))

(assert (=> b!108856 m!122951))

(assert (=> b!108089 d!30289))

(declare-fun d!30291 () Bool)

(assert (=> d!30291 (isDefined!110 (getValueByKey!156 (toList!811 call!11432) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))))))

(declare-fun lt!56037 () Unit!3339)

(assert (=> d!30291 (= lt!56037 (choose!683 (toList!811 call!11432) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))))))

(declare-fun e!70825 () Bool)

(assert (=> d!30291 e!70825))

(declare-fun res!53939 () Bool)

(assert (=> d!30291 (=> (not res!53939) (not e!70825))))

(assert (=> d!30291 (= res!53939 (isStrictlySorted!305 (toList!811 call!11432)))))

(assert (=> d!30291 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 call!11432) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))) lt!56037)))

(declare-fun b!108857 () Bool)

(assert (=> b!108857 (= e!70825 (containsKey!160 (toList!811 call!11432) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))))))

(assert (= (and d!30291 res!53939) b!108857))

(assert (=> d!30291 m!121411))

(assert (=> d!30291 m!121613))

(assert (=> d!30291 m!121613))

(assert (=> d!30291 m!121615))

(assert (=> d!30291 m!121411))

(declare-fun m!122953 () Bool)

(assert (=> d!30291 m!122953))

(declare-fun m!122955 () Bool)

(assert (=> d!30291 m!122955))

(assert (=> b!108857 m!121411))

(assert (=> b!108857 m!121609))

(assert (=> b!108124 d!30291))

(declare-fun d!30293 () Bool)

(assert (=> d!30293 (= (isDefined!110 (getValueByKey!156 (toList!811 call!11432) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408)))) (not (isEmpty!379 (getValueByKey!156 (toList!811 call!11432) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))))))))

(declare-fun bs!4475 () Bool)

(assert (= bs!4475 d!30293))

(assert (=> bs!4475 m!121613))

(declare-fun m!122957 () Bool)

(assert (=> bs!4475 m!122957))

(assert (=> b!108124 d!30293))

(declare-fun d!30295 () Bool)

(declare-fun c!19189 () Bool)

(assert (=> d!30295 (= c!19189 (and ((_ is Cons!1644) (toList!811 call!11432)) (= (_1!1221 (h!2242 (toList!811 call!11432))) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408)))))))

(declare-fun e!70826 () Option!162)

(assert (=> d!30295 (= (getValueByKey!156 (toList!811 call!11432) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))) e!70826)))

(declare-fun b!108860 () Bool)

(declare-fun e!70827 () Option!162)

(assert (=> b!108860 (= e!70827 (getValueByKey!156 (t!5776 (toList!811 call!11432)) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))))))

(declare-fun b!108861 () Bool)

(assert (=> b!108861 (= e!70827 None!160)))

(declare-fun b!108859 () Bool)

(assert (=> b!108859 (= e!70826 e!70827)))

(declare-fun c!19190 () Bool)

(assert (=> b!108859 (= c!19190 (and ((_ is Cons!1644) (toList!811 call!11432)) (not (= (_1!1221 (h!2242 (toList!811 call!11432))) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408))))))))

(declare-fun b!108858 () Bool)

(assert (=> b!108858 (= e!70826 (Some!161 (_2!1221 (h!2242 (toList!811 call!11432)))))))

(assert (= (and d!30295 c!19189) b!108858))

(assert (= (and d!30295 (not c!19189)) b!108859))

(assert (= (and b!108859 c!19190) b!108860))

(assert (= (and b!108859 (not c!19190)) b!108861))

(assert (=> b!108860 m!121411))

(declare-fun m!122959 () Bool)

(assert (=> b!108860 m!122959))

(assert (=> b!108124 d!30295))

(declare-fun d!30297 () Bool)

(assert (=> d!30297 (= (get!1350 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2912 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!108244 d!30297))

(declare-fun d!30299 () Bool)

(declare-fun res!53940 () Bool)

(declare-fun e!70828 () Bool)

(assert (=> d!30299 (=> res!53940 e!70828)))

(assert (=> d!30299 (= res!53940 (and ((_ is Cons!1644) (toList!811 lt!55324)) (= (_1!1221 (h!2242 (toList!811 lt!55324))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!30299 (= (containsKey!160 (toList!811 lt!55324) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!70828)))

(declare-fun b!108862 () Bool)

(declare-fun e!70829 () Bool)

(assert (=> b!108862 (= e!70828 e!70829)))

(declare-fun res!53941 () Bool)

(assert (=> b!108862 (=> (not res!53941) (not e!70829))))

(assert (=> b!108862 (= res!53941 (and (or (not ((_ is Cons!1644) (toList!811 lt!55324))) (bvsle (_1!1221 (h!2242 (toList!811 lt!55324))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1644) (toList!811 lt!55324)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55324))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!108863 () Bool)

(assert (=> b!108863 (= e!70829 (containsKey!160 (t!5776 (toList!811 lt!55324)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!30299 (not res!53940)) b!108862))

(assert (= (and b!108862 res!53941) b!108863))

(assert (=> b!108863 m!121305))

(declare-fun m!122961 () Bool)

(assert (=> b!108863 m!122961))

(assert (=> d!29973 d!30299))

(declare-fun d!30301 () Bool)

(declare-fun c!19191 () Bool)

(assert (=> d!30301 (= c!19191 (and ((_ is Cons!1644) (t!5776 (toList!811 lt!55331))) (= (_1!1221 (h!2242 (t!5776 (toList!811 lt!55331)))) (_1!1221 lt!55252))))))

(declare-fun e!70830 () Option!162)

(assert (=> d!30301 (= (getValueByKey!156 (t!5776 (toList!811 lt!55331)) (_1!1221 lt!55252)) e!70830)))

(declare-fun b!108866 () Bool)

(declare-fun e!70831 () Option!162)

(assert (=> b!108866 (= e!70831 (getValueByKey!156 (t!5776 (t!5776 (toList!811 lt!55331))) (_1!1221 lt!55252)))))

(declare-fun b!108867 () Bool)

(assert (=> b!108867 (= e!70831 None!160)))

(declare-fun b!108865 () Bool)

(assert (=> b!108865 (= e!70830 e!70831)))

(declare-fun c!19192 () Bool)

(assert (=> b!108865 (= c!19192 (and ((_ is Cons!1644) (t!5776 (toList!811 lt!55331))) (not (= (_1!1221 (h!2242 (t!5776 (toList!811 lt!55331)))) (_1!1221 lt!55252)))))))

(declare-fun b!108864 () Bool)

(assert (=> b!108864 (= e!70830 (Some!161 (_2!1221 (h!2242 (t!5776 (toList!811 lt!55331))))))))

(assert (= (and d!30301 c!19191) b!108864))

(assert (= (and d!30301 (not c!19191)) b!108865))

(assert (= (and b!108865 c!19192) b!108866))

(assert (= (and b!108865 (not c!19192)) b!108867))

(declare-fun m!122963 () Bool)

(assert (=> b!108866 m!122963))

(assert (=> b!108294 d!30301))

(declare-fun d!30303 () Bool)

(assert (=> d!30303 (= (isDefined!110 (getValueByKey!156 (toList!811 lt!55335) (_1!1221 lt!55249))) (not (isEmpty!379 (getValueByKey!156 (toList!811 lt!55335) (_1!1221 lt!55249)))))))

(declare-fun bs!4476 () Bool)

(assert (= bs!4476 d!30303))

(assert (=> bs!4476 m!121359))

(declare-fun m!122965 () Bool)

(assert (=> bs!4476 m!122965))

(assert (=> b!108176 d!30303))

(assert (=> b!108176 d!29965))

(declare-fun d!30305 () Bool)

(declare-fun e!70832 () Bool)

(assert (=> d!30305 e!70832))

(declare-fun res!53942 () Bool)

(assert (=> d!30305 (=> (not res!53942) (not e!70832))))

(declare-fun lt!56040 () ListLongMap!1591)

(assert (=> d!30305 (= res!53942 (contains!834 lt!56040 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun lt!56038 () List!1648)

(assert (=> d!30305 (= lt!56040 (ListLongMap!1592 lt!56038))))

(declare-fun lt!56039 () Unit!3339)

(declare-fun lt!56041 () Unit!3339)

(assert (=> d!30305 (= lt!56039 lt!56041)))

(assert (=> d!30305 (= (getValueByKey!156 lt!56038 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (Some!161 (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!30305 (= lt!56041 (lemmaContainsTupThenGetReturnValue!74 lt!56038 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!30305 (= lt!56038 (insertStrictlySorted!76 (toList!811 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!30305 (= (+!148 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) lt!56040)))

(declare-fun b!108868 () Bool)

(declare-fun res!53943 () Bool)

(assert (=> b!108868 (=> (not res!53943) (not e!70832))))

(assert (=> b!108868 (= res!53943 (= (getValueByKey!156 (toList!811 lt!56040) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (Some!161 (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun b!108869 () Bool)

(assert (=> b!108869 (= e!70832 (contains!835 (toList!811 lt!56040) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))

(assert (= (and d!30305 res!53942) b!108868))

(assert (= (and b!108868 res!53943) b!108869))

(declare-fun m!122967 () Bool)

(assert (=> d!30305 m!122967))

(declare-fun m!122969 () Bool)

(assert (=> d!30305 m!122969))

(declare-fun m!122971 () Bool)

(assert (=> d!30305 m!122971))

(declare-fun m!122973 () Bool)

(assert (=> d!30305 m!122973))

(declare-fun m!122975 () Bool)

(assert (=> b!108868 m!122975))

(declare-fun m!122977 () Bool)

(assert (=> b!108869 m!122977))

(assert (=> b!108132 d!30305))

(assert (=> b!108132 d!29895))

(declare-fun b!108870 () Bool)

(declare-fun e!70838 () Bool)

(declare-fun call!11580 () Bool)

(assert (=> b!108870 (= e!70838 (not call!11580))))

(declare-fun bm!11572 () Bool)

(declare-fun call!11579 () ListLongMap!1591)

(declare-fun c!19194 () Bool)

(declare-fun call!11578 () ListLongMap!1591)

(declare-fun call!11577 () ListLongMap!1591)

(declare-fun c!19196 () Bool)

(declare-fun call!11576 () ListLongMap!1591)

(assert (=> bm!11572 (= call!11578 (+!148 (ite c!19196 call!11576 (ite c!19194 call!11577 call!11579)) (ite (or c!19196 c!19194) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(declare-fun b!108871 () Bool)

(declare-fun e!70834 () Bool)

(declare-fun call!11575 () Bool)

(assert (=> b!108871 (= e!70834 (not call!11575))))

(declare-fun bm!11573 () Bool)

(assert (=> bm!11573 (= call!11579 call!11577)))

(declare-fun b!108872 () Bool)

(declare-fun e!70840 () Bool)

(assert (=> b!108872 (= e!70838 e!70840)))

(declare-fun res!53950 () Bool)

(assert (=> b!108872 (= res!53950 call!11580)))

(assert (=> b!108872 (=> (not res!53950) (not e!70840))))

(declare-fun bm!11574 () Bool)

(declare-fun call!11581 () ListLongMap!1591)

(assert (=> bm!11574 (= call!11581 call!11578)))

(declare-fun bm!11575 () Bool)

(assert (=> bm!11575 (= call!11576 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun b!108873 () Bool)

(declare-fun e!70844 () Unit!3339)

(declare-fun Unit!3383 () Unit!3339)

(assert (=> b!108873 (= e!70844 Unit!3383)))

(declare-fun d!30307 () Bool)

(declare-fun e!70837 () Bool)

(assert (=> d!30307 e!70837))

(declare-fun res!53949 () Bool)

(assert (=> d!30307 (=> (not res!53949) (not e!70837))))

(assert (=> d!30307 (= res!53949 (or (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))))

(declare-fun lt!56043 () ListLongMap!1591)

(declare-fun lt!56062 () ListLongMap!1591)

(assert (=> d!30307 (= lt!56043 lt!56062)))

(declare-fun lt!56054 () Unit!3339)

(assert (=> d!30307 (= lt!56054 e!70844)))

(declare-fun c!19197 () Bool)

(declare-fun e!70843 () Bool)

(assert (=> d!30307 (= c!19197 e!70843)))

(declare-fun res!53945 () Bool)

(assert (=> d!30307 (=> (not res!53945) (not e!70843))))

(assert (=> d!30307 (= res!53945 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun e!70841 () ListLongMap!1591)

(assert (=> d!30307 (= lt!56062 e!70841)))

(assert (=> d!30307 (= c!19196 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30307 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30307 (= (getCurrentListMap!487 (_keys!4316 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!56043)))

(declare-fun b!108874 () Bool)

(declare-fun e!70836 () Bool)

(assert (=> b!108874 (= e!70834 e!70836)))

(declare-fun res!53951 () Bool)

(assert (=> b!108874 (= res!53951 call!11575)))

(assert (=> b!108874 (=> (not res!53951) (not e!70836))))

(declare-fun b!108875 () Bool)

(declare-fun lt!56049 () Unit!3339)

(assert (=> b!108875 (= e!70844 lt!56049)))

(declare-fun lt!56061 () ListLongMap!1591)

(assert (=> b!108875 (= lt!56061 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56059 () (_ BitVec 64))

(assert (=> b!108875 (= lt!56059 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56060 () (_ BitVec 64))

(assert (=> b!108875 (= lt!56060 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56045 () Unit!3339)

(assert (=> b!108875 (= lt!56045 (addStillContains!75 lt!56061 lt!56059 (zeroValue!2479 newMap!16) lt!56060))))

(assert (=> b!108875 (contains!834 (+!148 lt!56061 (tuple2!2423 lt!56059 (zeroValue!2479 newMap!16))) lt!56060)))

(declare-fun lt!56052 () Unit!3339)

(assert (=> b!108875 (= lt!56052 lt!56045)))

(declare-fun lt!56044 () ListLongMap!1591)

(assert (=> b!108875 (= lt!56044 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56055 () (_ BitVec 64))

(assert (=> b!108875 (= lt!56055 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56051 () (_ BitVec 64))

(assert (=> b!108875 (= lt!56051 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56056 () Unit!3339)

(assert (=> b!108875 (= lt!56056 (addApplyDifferent!75 lt!56044 lt!56055 (minValue!2479 newMap!16) lt!56051))))

(assert (=> b!108875 (= (apply!99 (+!148 lt!56044 (tuple2!2423 lt!56055 (minValue!2479 newMap!16))) lt!56051) (apply!99 lt!56044 lt!56051))))

(declare-fun lt!56053 () Unit!3339)

(assert (=> b!108875 (= lt!56053 lt!56056)))

(declare-fun lt!56046 () ListLongMap!1591)

(assert (=> b!108875 (= lt!56046 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56048 () (_ BitVec 64))

(assert (=> b!108875 (= lt!56048 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56058 () (_ BitVec 64))

(assert (=> b!108875 (= lt!56058 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56042 () Unit!3339)

(assert (=> b!108875 (= lt!56042 (addApplyDifferent!75 lt!56046 lt!56048 (zeroValue!2479 newMap!16) lt!56058))))

(assert (=> b!108875 (= (apply!99 (+!148 lt!56046 (tuple2!2423 lt!56048 (zeroValue!2479 newMap!16))) lt!56058) (apply!99 lt!56046 lt!56058))))

(declare-fun lt!56050 () Unit!3339)

(assert (=> b!108875 (= lt!56050 lt!56042)))

(declare-fun lt!56063 () ListLongMap!1591)

(assert (=> b!108875 (= lt!56063 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56047 () (_ BitVec 64))

(assert (=> b!108875 (= lt!56047 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56057 () (_ BitVec 64))

(assert (=> b!108875 (= lt!56057 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108875 (= lt!56049 (addApplyDifferent!75 lt!56063 lt!56047 (minValue!2479 newMap!16) lt!56057))))

(assert (=> b!108875 (= (apply!99 (+!148 lt!56063 (tuple2!2423 lt!56047 (minValue!2479 newMap!16))) lt!56057) (apply!99 lt!56063 lt!56057))))

(declare-fun b!108876 () Bool)

(assert (=> b!108876 (= e!70841 (+!148 call!11578 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))

(declare-fun bm!11576 () Bool)

(assert (=> bm!11576 (= call!11580 (contains!834 lt!56043 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108877 () Bool)

(declare-fun c!19198 () Bool)

(assert (=> b!108877 (= c!19198 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!70842 () ListLongMap!1591)

(declare-fun e!70833 () ListLongMap!1591)

(assert (=> b!108877 (= e!70842 e!70833)))

(declare-fun e!70845 () Bool)

(declare-fun b!108878 () Bool)

(assert (=> b!108878 (= e!70845 (= (apply!99 lt!56043 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1349 (select (arr!2075 (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108878 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))))))))

(assert (=> b!108878 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108879 () Bool)

(assert (=> b!108879 (= e!70843 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108880 () Bool)

(assert (=> b!108880 (= e!70837 e!70834)))

(declare-fun c!19195 () Bool)

(assert (=> b!108880 (= c!19195 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108881 () Bool)

(assert (=> b!108881 (= e!70840 (= (apply!99 lt!56043 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2479 newMap!16)))))

(declare-fun b!108882 () Bool)

(declare-fun res!53946 () Bool)

(assert (=> b!108882 (=> (not res!53946) (not e!70837))))

(declare-fun e!70839 () Bool)

(assert (=> b!108882 (= res!53946 e!70839)))

(declare-fun res!53944 () Bool)

(assert (=> b!108882 (=> res!53944 e!70839)))

(declare-fun e!70835 () Bool)

(assert (=> b!108882 (= res!53944 (not e!70835))))

(declare-fun res!53947 () Bool)

(assert (=> b!108882 (=> (not res!53947) (not e!70835))))

(assert (=> b!108882 (= res!53947 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108883 () Bool)

(assert (=> b!108883 (= e!70833 call!11581)))

(declare-fun b!108884 () Bool)

(declare-fun res!53952 () Bool)

(assert (=> b!108884 (=> (not res!53952) (not e!70837))))

(assert (=> b!108884 (= res!53952 e!70838)))

(declare-fun c!19193 () Bool)

(assert (=> b!108884 (= c!19193 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11577 () Bool)

(assert (=> bm!11577 (= call!11577 call!11576)))

(declare-fun bm!11578 () Bool)

(assert (=> bm!11578 (= call!11575 (contains!834 lt!56043 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108885 () Bool)

(assert (=> b!108885 (= e!70836 (= (apply!99 lt!56043 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2479 newMap!16)))))

(declare-fun b!108886 () Bool)

(assert (=> b!108886 (= e!70833 call!11579)))

(declare-fun b!108887 () Bool)

(assert (=> b!108887 (= e!70842 call!11581)))

(declare-fun b!108888 () Bool)

(assert (=> b!108888 (= e!70839 e!70845)))

(declare-fun res!53948 () Bool)

(assert (=> b!108888 (=> (not res!53948) (not e!70845))))

(assert (=> b!108888 (= res!53948 (contains!834 lt!56043 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108888 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108889 () Bool)

(assert (=> b!108889 (= e!70835 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108890 () Bool)

(assert (=> b!108890 (= e!70841 e!70842)))

(assert (=> b!108890 (= c!19194 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!30307 c!19196) b!108876))

(assert (= (and d!30307 (not c!19196)) b!108890))

(assert (= (and b!108890 c!19194) b!108887))

(assert (= (and b!108890 (not c!19194)) b!108877))

(assert (= (and b!108877 c!19198) b!108883))

(assert (= (and b!108877 (not c!19198)) b!108886))

(assert (= (or b!108883 b!108886) bm!11573))

(assert (= (or b!108887 bm!11573) bm!11577))

(assert (= (or b!108887 b!108883) bm!11574))

(assert (= (or b!108876 bm!11577) bm!11575))

(assert (= (or b!108876 bm!11574) bm!11572))

(assert (= (and d!30307 res!53945) b!108879))

(assert (= (and d!30307 c!19197) b!108875))

(assert (= (and d!30307 (not c!19197)) b!108873))

(assert (= (and d!30307 res!53949) b!108882))

(assert (= (and b!108882 res!53947) b!108889))

(assert (= (and b!108882 (not res!53944)) b!108888))

(assert (= (and b!108888 res!53948) b!108878))

(assert (= (and b!108882 res!53946) b!108884))

(assert (= (and b!108884 c!19193) b!108872))

(assert (= (and b!108884 (not c!19193)) b!108870))

(assert (= (and b!108872 res!53950) b!108881))

(assert (= (or b!108872 b!108870) bm!11576))

(assert (= (and b!108884 res!53952) b!108880))

(assert (= (and b!108880 c!19195) b!108874))

(assert (= (and b!108880 (not c!19195)) b!108871))

(assert (= (and b!108874 res!53951) b!108885))

(assert (= (or b!108874 b!108871) bm!11578))

(declare-fun b_lambda!4897 () Bool)

(assert (=> (not b_lambda!4897) (not b!108878)))

(assert (=> b!108878 t!5783))

(declare-fun b_and!6737 () Bool)

(assert (= b_and!6733 (and (=> t!5783 result!3521) b_and!6737)))

(assert (=> b!108878 t!5785))

(declare-fun b_and!6739 () Bool)

(assert (= b_and!6735 (and (=> t!5785 result!3523) b_and!6739)))

(assert (=> b!108889 m!121517))

(assert (=> b!108889 m!121517))

(assert (=> b!108889 m!121519))

(assert (=> d!30307 m!121521))

(declare-fun m!122979 () Bool)

(assert (=> bm!11578 m!122979))

(declare-fun m!122981 () Bool)

(assert (=> bm!11576 m!122981))

(declare-fun m!122983 () Bool)

(assert (=> b!108885 m!122983))

(declare-fun m!122985 () Bool)

(assert (=> bm!11575 m!122985))

(declare-fun m!122987 () Bool)

(assert (=> b!108876 m!122987))

(declare-fun m!122989 () Bool)

(assert (=> b!108881 m!122989))

(assert (=> b!108879 m!121517))

(assert (=> b!108879 m!121517))

(assert (=> b!108879 m!121519))

(declare-fun m!122991 () Bool)

(assert (=> b!108875 m!122991))

(declare-fun m!122993 () Bool)

(assert (=> b!108875 m!122993))

(declare-fun m!122995 () Bool)

(assert (=> b!108875 m!122995))

(declare-fun m!122997 () Bool)

(assert (=> b!108875 m!122997))

(declare-fun m!122999 () Bool)

(assert (=> b!108875 m!122999))

(declare-fun m!123001 () Bool)

(assert (=> b!108875 m!123001))

(declare-fun m!123003 () Bool)

(assert (=> b!108875 m!123003))

(assert (=> b!108875 m!122985))

(declare-fun m!123005 () Bool)

(assert (=> b!108875 m!123005))

(assert (=> b!108875 m!123001))

(declare-fun m!123007 () Bool)

(assert (=> b!108875 m!123007))

(assert (=> b!108875 m!122995))

(declare-fun m!123009 () Bool)

(assert (=> b!108875 m!123009))

(assert (=> b!108875 m!122997))

(declare-fun m!123011 () Bool)

(assert (=> b!108875 m!123011))

(assert (=> b!108875 m!122991))

(declare-fun m!123013 () Bool)

(assert (=> b!108875 m!123013))

(declare-fun m!123015 () Bool)

(assert (=> b!108875 m!123015))

(declare-fun m!123017 () Bool)

(assert (=> b!108875 m!123017))

(assert (=> b!108875 m!121517))

(declare-fun m!123019 () Bool)

(assert (=> b!108875 m!123019))

(assert (=> b!108888 m!121517))

(assert (=> b!108888 m!121517))

(declare-fun m!123021 () Bool)

(assert (=> b!108888 m!123021))

(declare-fun m!123023 () Bool)

(assert (=> b!108878 m!123023))

(assert (=> b!108878 m!121569))

(declare-fun m!123025 () Bool)

(assert (=> b!108878 m!123025))

(assert (=> b!108878 m!121517))

(declare-fun m!123027 () Bool)

(assert (=> b!108878 m!123027))

(assert (=> b!108878 m!121517))

(assert (=> b!108878 m!121569))

(assert (=> b!108878 m!123023))

(declare-fun m!123029 () Bool)

(assert (=> bm!11572 m!123029))

(assert (=> b!108132 d!30307))

(declare-fun d!30309 () Bool)

(declare-fun e!70847 () Bool)

(assert (=> d!30309 e!70847))

(declare-fun res!53953 () Bool)

(assert (=> d!30309 (=> res!53953 e!70847)))

(declare-fun lt!56064 () Bool)

(assert (=> d!30309 (= res!53953 (not lt!56064))))

(declare-fun lt!56065 () Bool)

(assert (=> d!30309 (= lt!56064 lt!56065)))

(declare-fun lt!56066 () Unit!3339)

(declare-fun e!70846 () Unit!3339)

(assert (=> d!30309 (= lt!56066 e!70846)))

(declare-fun c!19199 () Bool)

(assert (=> d!30309 (= c!19199 lt!56065)))

(assert (=> d!30309 (= lt!56065 (containsKey!160 (toList!811 lt!55841) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30309 (= (contains!834 lt!55841 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!56064)))

(declare-fun b!108891 () Bool)

(declare-fun lt!56067 () Unit!3339)

(assert (=> b!108891 (= e!70846 lt!56067)))

(assert (=> b!108891 (= lt!56067 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55841) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!108891 (isDefined!110 (getValueByKey!156 (toList!811 lt!55841) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!108892 () Bool)

(declare-fun Unit!3384 () Unit!3339)

(assert (=> b!108892 (= e!70846 Unit!3384)))

(declare-fun b!108893 () Bool)

(assert (=> b!108893 (= e!70847 (isDefined!110 (getValueByKey!156 (toList!811 lt!55841) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!30309 c!19199) b!108891))

(assert (= (and d!30309 (not c!19199)) b!108892))

(assert (= (and d!30309 (not res!53953)) b!108893))

(declare-fun m!123031 () Bool)

(assert (=> d!30309 m!123031))

(declare-fun m!123033 () Bool)

(assert (=> b!108891 m!123033))

(assert (=> b!108891 m!122275))

(assert (=> b!108891 m!122275))

(declare-fun m!123035 () Bool)

(assert (=> b!108891 m!123035))

(assert (=> b!108893 m!122275))

(assert (=> b!108893 m!122275))

(assert (=> b!108893 m!123035))

(assert (=> d!30075 d!30309))

(declare-fun c!19200 () Bool)

(declare-fun d!30311 () Bool)

(assert (=> d!30311 (= c!19200 (and ((_ is Cons!1644) lt!55839) (= (_1!1221 (h!2242 lt!55839)) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!70848 () Option!162)

(assert (=> d!30311 (= (getValueByKey!156 lt!55839 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!70848)))

(declare-fun b!108896 () Bool)

(declare-fun e!70849 () Option!162)

(assert (=> b!108896 (= e!70849 (getValueByKey!156 (t!5776 lt!55839) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!108897 () Bool)

(assert (=> b!108897 (= e!70849 None!160)))

(declare-fun b!108895 () Bool)

(assert (=> b!108895 (= e!70848 e!70849)))

(declare-fun c!19201 () Bool)

(assert (=> b!108895 (= c!19201 (and ((_ is Cons!1644) lt!55839) (not (= (_1!1221 (h!2242 lt!55839)) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!108894 () Bool)

(assert (=> b!108894 (= e!70848 (Some!161 (_2!1221 (h!2242 lt!55839))))))

(assert (= (and d!30311 c!19200) b!108894))

(assert (= (and d!30311 (not c!19200)) b!108895))

(assert (= (and b!108895 c!19201) b!108896))

(assert (= (and b!108895 (not c!19201)) b!108897))

(declare-fun m!123037 () Bool)

(assert (=> b!108896 m!123037))

(assert (=> d!30075 d!30311))

(declare-fun d!30313 () Bool)

(assert (=> d!30313 (= (getValueByKey!156 lt!55839 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!56068 () Unit!3339)

(assert (=> d!30313 (= lt!56068 (choose!680 lt!55839 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!70850 () Bool)

(assert (=> d!30313 e!70850))

(declare-fun res!53954 () Bool)

(assert (=> d!30313 (=> (not res!53954) (not e!70850))))

(assert (=> d!30313 (= res!53954 (isStrictlySorted!305 lt!55839))))

(assert (=> d!30313 (= (lemmaContainsTupThenGetReturnValue!74 lt!55839 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!56068)))

(declare-fun b!108898 () Bool)

(declare-fun res!53955 () Bool)

(assert (=> b!108898 (=> (not res!53955) (not e!70850))))

(assert (=> b!108898 (= res!53955 (containsKey!160 lt!55839 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!108899 () Bool)

(assert (=> b!108899 (= e!70850 (contains!835 lt!55839 (tuple2!2423 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!30313 res!53954) b!108898))

(assert (= (and b!108898 res!53955) b!108899))

(assert (=> d!30313 m!122269))

(declare-fun m!123039 () Bool)

(assert (=> d!30313 m!123039))

(declare-fun m!123041 () Bool)

(assert (=> d!30313 m!123041))

(declare-fun m!123043 () Bool)

(assert (=> b!108898 m!123043))

(declare-fun m!123045 () Bool)

(assert (=> b!108899 m!123045))

(assert (=> d!30075 d!30313))

(declare-fun b!108900 () Bool)

(declare-fun c!19202 () Bool)

(assert (=> b!108900 (= c!19202 (and ((_ is Cons!1644) (toList!811 call!11370)) (bvsgt (_1!1221 (h!2242 (toList!811 call!11370))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!70851 () List!1648)

(declare-fun e!70852 () List!1648)

(assert (=> b!108900 (= e!70851 e!70852)))

(declare-fun b!108901 () Bool)

(declare-fun e!70853 () List!1648)

(declare-fun call!11583 () List!1648)

(assert (=> b!108901 (= e!70853 call!11583)))

(declare-fun e!70855 () List!1648)

(declare-fun c!19203 () Bool)

(declare-fun bm!11579 () Bool)

(assert (=> bm!11579 (= call!11583 ($colon$colon!81 e!70855 (ite c!19203 (h!2242 (toList!811 call!11370)) (tuple2!2423 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!19204 () Bool)

(assert (=> bm!11579 (= c!19204 c!19203)))

(declare-fun b!108902 () Bool)

(declare-fun call!11582 () List!1648)

(assert (=> b!108902 (= e!70852 call!11582)))

(declare-fun b!108903 () Bool)

(declare-fun call!11584 () List!1648)

(assert (=> b!108903 (= e!70851 call!11584)))

(declare-fun d!30315 () Bool)

(declare-fun e!70854 () Bool)

(assert (=> d!30315 e!70854))

(declare-fun res!53956 () Bool)

(assert (=> d!30315 (=> (not res!53956) (not e!70854))))

(declare-fun lt!56069 () List!1648)

(assert (=> d!30315 (= res!53956 (isStrictlySorted!305 lt!56069))))

(assert (=> d!30315 (= lt!56069 e!70853)))

(assert (=> d!30315 (= c!19203 (and ((_ is Cons!1644) (toList!811 call!11370)) (bvslt (_1!1221 (h!2242 (toList!811 call!11370))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!30315 (isStrictlySorted!305 (toList!811 call!11370))))

(assert (=> d!30315 (= (insertStrictlySorted!76 (toList!811 call!11370) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!56069)))

(declare-fun b!108904 () Bool)

(assert (=> b!108904 (= e!70853 e!70851)))

(declare-fun c!19205 () Bool)

(assert (=> b!108904 (= c!19205 (and ((_ is Cons!1644) (toList!811 call!11370)) (= (_1!1221 (h!2242 (toList!811 call!11370))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!108905 () Bool)

(declare-fun res!53957 () Bool)

(assert (=> b!108905 (=> (not res!53957) (not e!70854))))

(assert (=> b!108905 (= res!53957 (containsKey!160 lt!56069 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!11580 () Bool)

(assert (=> bm!11580 (= call!11584 call!11583)))

(declare-fun bm!11581 () Bool)

(assert (=> bm!11581 (= call!11582 call!11584)))

(declare-fun b!108906 () Bool)

(assert (=> b!108906 (= e!70855 (insertStrictlySorted!76 (t!5776 (toList!811 call!11370)) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!108907 () Bool)

(assert (=> b!108907 (= e!70852 call!11582)))

(declare-fun b!108908 () Bool)

(assert (=> b!108908 (= e!70854 (contains!835 lt!56069 (tuple2!2423 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!108909 () Bool)

(assert (=> b!108909 (= e!70855 (ite c!19205 (t!5776 (toList!811 call!11370)) (ite c!19202 (Cons!1644 (h!2242 (toList!811 call!11370)) (t!5776 (toList!811 call!11370))) Nil!1645)))))

(assert (= (and d!30315 c!19203) b!108901))

(assert (= (and d!30315 (not c!19203)) b!108904))

(assert (= (and b!108904 c!19205) b!108903))

(assert (= (and b!108904 (not c!19205)) b!108900))

(assert (= (and b!108900 c!19202) b!108907))

(assert (= (and b!108900 (not c!19202)) b!108902))

(assert (= (or b!108907 b!108902) bm!11581))

(assert (= (or b!108903 bm!11581) bm!11580))

(assert (= (or b!108901 bm!11580) bm!11579))

(assert (= (and bm!11579 c!19204) b!108906))

(assert (= (and bm!11579 (not c!19204)) b!108909))

(assert (= (and d!30315 res!53956) b!108905))

(assert (= (and b!108905 res!53957) b!108908))

(declare-fun m!123047 () Bool)

(assert (=> b!108908 m!123047))

(declare-fun m!123049 () Bool)

(assert (=> b!108905 m!123049))

(declare-fun m!123051 () Bool)

(assert (=> bm!11579 m!123051))

(declare-fun m!123053 () Bool)

(assert (=> d!30315 m!123053))

(declare-fun m!123055 () Bool)

(assert (=> d!30315 m!123055))

(declare-fun m!123057 () Bool)

(assert (=> b!108906 m!123057))

(assert (=> d!30075 d!30315))

(declare-fun d!30317 () Bool)

(assert (=> d!30317 (= (isDefined!110 (getValueByKey!156 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55496)) (not (isEmpty!379 (getValueByKey!156 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55496))))))

(declare-fun bs!4477 () Bool)

(assert (= bs!4477 d!30317))

(assert (=> bs!4477 m!122101))

(declare-fun m!123059 () Bool)

(assert (=> bs!4477 m!123059))

(assert (=> b!108436 d!30317))

(declare-fun c!19206 () Bool)

(declare-fun d!30319 () Bool)

(assert (=> d!30319 (= c!19206 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))) (= (_1!1221 (h!2242 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))) lt!55496)))))

(declare-fun e!70856 () Option!162)

(assert (=> d!30319 (= (getValueByKey!156 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55496) e!70856)))

(declare-fun e!70857 () Option!162)

(declare-fun b!108912 () Bool)

(assert (=> b!108912 (= e!70857 (getValueByKey!156 (t!5776 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))) lt!55496))))

(declare-fun b!108913 () Bool)

(assert (=> b!108913 (= e!70857 None!160)))

(declare-fun b!108911 () Bool)

(assert (=> b!108911 (= e!70856 e!70857)))

(declare-fun c!19207 () Bool)

(assert (=> b!108911 (= c!19207 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))) (not (= (_1!1221 (h!2242 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))) lt!55496))))))

(declare-fun b!108910 () Bool)

(assert (=> b!108910 (= e!70856 (Some!161 (_2!1221 (h!2242 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))))

(assert (= (and d!30319 c!19206) b!108910))

(assert (= (and d!30319 (not c!19206)) b!108911))

(assert (= (and b!108911 c!19207) b!108912))

(assert (= (and b!108911 (not c!19207)) b!108913))

(declare-fun m!123061 () Bool)

(assert (=> b!108912 m!123061))

(assert (=> b!108436 d!30319))

(declare-fun d!30321 () Bool)

(assert (=> d!30321 (= (apply!99 lt!55655 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1352 (getValueByKey!156 (toList!811 lt!55655) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4478 () Bool)

(assert (= bs!4478 d!30321))

(assert (=> bs!4478 m!121517))

(declare-fun m!123063 () Bool)

(assert (=> bs!4478 m!123063))

(assert (=> bs!4478 m!123063))

(declare-fun m!123065 () Bool)

(assert (=> bs!4478 m!123065))

(assert (=> b!108353 d!30321))

(declare-fun d!30323 () Bool)

(declare-fun c!19208 () Bool)

(assert (=> d!30323 (= c!19208 ((_ is ValueCellFull!1002) (select (arr!2075 (ite c!18944 (_values!2589 newMap!16) lt!55413)) #b00000000000000000000000000000000)))))

(declare-fun e!70858 () V!3235)

(assert (=> d!30323 (= (get!1349 (select (arr!2075 (ite c!18944 (_values!2589 newMap!16) lt!55413)) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!70858)))

(declare-fun b!108914 () Bool)

(assert (=> b!108914 (= e!70858 (get!1350 (select (arr!2075 (ite c!18944 (_values!2589 newMap!16) lt!55413)) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!108915 () Bool)

(assert (=> b!108915 (= e!70858 (get!1351 (select (arr!2075 (ite c!18944 (_values!2589 newMap!16) lt!55413)) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30323 c!19208) b!108914))

(assert (= (and d!30323 (not c!19208)) b!108915))

(assert (=> b!108914 m!121961))

(assert (=> b!108914 m!121569))

(declare-fun m!123067 () Bool)

(assert (=> b!108914 m!123067))

(assert (=> b!108915 m!121961))

(assert (=> b!108915 m!121569))

(declare-fun m!123069 () Bool)

(assert (=> b!108915 m!123069))

(assert (=> b!108353 d!30323))

(declare-fun d!30325 () Bool)

(declare-fun e!70860 () Bool)

(assert (=> d!30325 e!70860))

(declare-fun res!53958 () Bool)

(assert (=> d!30325 (=> res!53958 e!70860)))

(declare-fun lt!56070 () Bool)

(assert (=> d!30325 (= res!53958 (not lt!56070))))

(declare-fun lt!56071 () Bool)

(assert (=> d!30325 (= lt!56070 lt!56071)))

(declare-fun lt!56072 () Unit!3339)

(declare-fun e!70859 () Unit!3339)

(assert (=> d!30325 (= lt!56072 e!70859)))

(declare-fun c!19209 () Bool)

(assert (=> d!30325 (= c!19209 lt!56071)))

(assert (=> d!30325 (= lt!56071 (containsKey!160 (toList!811 lt!55558) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30325 (= (contains!834 lt!55558 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56070)))

(declare-fun b!108916 () Bool)

(declare-fun lt!56073 () Unit!3339)

(assert (=> b!108916 (= e!70859 lt!56073)))

(assert (=> b!108916 (= lt!56073 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55558) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!108916 (isDefined!110 (getValueByKey!156 (toList!811 lt!55558) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108917 () Bool)

(declare-fun Unit!3385 () Unit!3339)

(assert (=> b!108917 (= e!70859 Unit!3385)))

(declare-fun b!108918 () Bool)

(assert (=> b!108918 (= e!70860 (isDefined!110 (getValueByKey!156 (toList!811 lt!55558) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30325 c!19209) b!108916))

(assert (= (and d!30325 (not c!19209)) b!108917))

(assert (= (and d!30325 (not res!53958)) b!108918))

(declare-fun m!123071 () Bool)

(assert (=> d!30325 m!123071))

(declare-fun m!123073 () Bool)

(assert (=> b!108916 m!123073))

(assert (=> b!108916 m!122339))

(assert (=> b!108916 m!122339))

(declare-fun m!123075 () Bool)

(assert (=> b!108916 m!123075))

(assert (=> b!108918 m!122339))

(assert (=> b!108918 m!122339))

(assert (=> b!108918 m!123075))

(assert (=> bm!11478 d!30325))

(declare-fun d!30327 () Bool)

(declare-fun res!53959 () Bool)

(declare-fun e!70861 () Bool)

(assert (=> d!30327 (=> res!53959 e!70861)))

(assert (=> d!30327 (= res!53959 (and ((_ is Cons!1644) lt!55301) (= (_1!1221 (h!2242 lt!55301)) (_1!1221 lt!55252))))))

(assert (=> d!30327 (= (containsKey!160 lt!55301 (_1!1221 lt!55252)) e!70861)))

(declare-fun b!108919 () Bool)

(declare-fun e!70862 () Bool)

(assert (=> b!108919 (= e!70861 e!70862)))

(declare-fun res!53960 () Bool)

(assert (=> b!108919 (=> (not res!53960) (not e!70862))))

(assert (=> b!108919 (= res!53960 (and (or (not ((_ is Cons!1644) lt!55301)) (bvsle (_1!1221 (h!2242 lt!55301)) (_1!1221 lt!55252))) ((_ is Cons!1644) lt!55301) (bvslt (_1!1221 (h!2242 lt!55301)) (_1!1221 lt!55252))))))

(declare-fun b!108920 () Bool)

(assert (=> b!108920 (= e!70862 (containsKey!160 (t!5776 lt!55301) (_1!1221 lt!55252)))))

(assert (= (and d!30327 (not res!53959)) b!108919))

(assert (= (and b!108919 res!53960) b!108920))

(declare-fun m!123077 () Bool)

(assert (=> b!108920 m!123077))

(assert (=> b!108280 d!30327))

(declare-fun d!30329 () Bool)

(declare-fun e!70864 () Bool)

(assert (=> d!30329 e!70864))

(declare-fun res!53961 () Bool)

(assert (=> d!30329 (=> res!53961 e!70864)))

(declare-fun lt!56074 () Bool)

(assert (=> d!30329 (= res!53961 (not lt!56074))))

(declare-fun lt!56075 () Bool)

(assert (=> d!30329 (= lt!56074 lt!56075)))

(declare-fun lt!56076 () Unit!3339)

(declare-fun e!70863 () Unit!3339)

(assert (=> d!30329 (= lt!56076 e!70863)))

(declare-fun c!19210 () Bool)

(assert (=> d!30329 (= c!19210 lt!56075)))

(assert (=> d!30329 (= lt!56075 (containsKey!160 (toList!811 (map!1290 (_2!1222 lt!55767))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30329 (= (contains!834 (map!1290 (_2!1222 lt!55767)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) lt!56074)))

(declare-fun b!108921 () Bool)

(declare-fun lt!56077 () Unit!3339)

(assert (=> b!108921 (= e!70863 lt!56077)))

(assert (=> b!108921 (= lt!56077 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 (map!1290 (_2!1222 lt!55767))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!108921 (isDefined!110 (getValueByKey!156 (toList!811 (map!1290 (_2!1222 lt!55767))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108922 () Bool)

(declare-fun Unit!3386 () Unit!3339)

(assert (=> b!108922 (= e!70863 Unit!3386)))

(declare-fun b!108923 () Bool)

(assert (=> b!108923 (= e!70864 (isDefined!110 (getValueByKey!156 (toList!811 (map!1290 (_2!1222 lt!55767))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))))

(assert (= (and d!30329 c!19210) b!108921))

(assert (= (and d!30329 (not c!19210)) b!108922))

(assert (= (and d!30329 (not res!53961)) b!108923))

(assert (=> d!30329 m!121177))

(declare-fun m!123079 () Bool)

(assert (=> d!30329 m!123079))

(assert (=> b!108921 m!121177))

(declare-fun m!123081 () Bool)

(assert (=> b!108921 m!123081))

(assert (=> b!108921 m!121177))

(declare-fun m!123083 () Bool)

(assert (=> b!108921 m!123083))

(assert (=> b!108921 m!123083))

(declare-fun m!123085 () Bool)

(assert (=> b!108921 m!123085))

(assert (=> b!108923 m!121177))

(assert (=> b!108923 m!123083))

(assert (=> b!108923 m!123083))

(assert (=> b!108923 m!123085))

(assert (=> b!108419 d!30329))

(declare-fun d!30331 () Bool)

(assert (=> d!30331 (= (map!1290 (_2!1222 lt!55767)) (getCurrentListMap!487 (_keys!4316 (_2!1222 lt!55767)) (_values!2589 (_2!1222 lt!55767)) (mask!6764 (_2!1222 lt!55767)) (extraKeys!2407 (_2!1222 lt!55767)) (zeroValue!2479 (_2!1222 lt!55767)) (minValue!2479 (_2!1222 lt!55767)) #b00000000000000000000000000000000 (defaultEntry!2606 (_2!1222 lt!55767))))))

(declare-fun bs!4479 () Bool)

(assert (= bs!4479 d!30331))

(declare-fun m!123087 () Bool)

(assert (=> bs!4479 m!123087))

(assert (=> b!108419 d!30331))

(declare-fun b!108924 () Bool)

(declare-fun e!70871 () Bool)

(declare-fun lt!56083 () ListLongMap!1591)

(assert (=> b!108924 (= e!70871 (isEmpty!378 lt!56083))))

(declare-fun b!108925 () Bool)

(assert (=> b!108925 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(assert (=> b!108925 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2331 (_values!2589 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun e!70867 () Bool)

(assert (=> b!108925 (= e!70867 (= (apply!99 lt!56083 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!108926 () Bool)

(declare-fun lt!56079 () Unit!3339)

(declare-fun lt!56081 () Unit!3339)

(assert (=> b!108926 (= lt!56079 lt!56081)))

(declare-fun lt!56084 () V!3235)

(declare-fun lt!56080 () (_ BitVec 64))

(declare-fun lt!56078 () ListLongMap!1591)

(declare-fun lt!56082 () (_ BitVec 64))

(assert (=> b!108926 (not (contains!834 (+!148 lt!56078 (tuple2!2423 lt!56080 lt!56084)) lt!56082))))

(assert (=> b!108926 (= lt!56081 (addStillNotContains!49 lt!56078 lt!56080 lt!56084 lt!56082))))

(assert (=> b!108926 (= lt!56082 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!108926 (= lt!56084 (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!108926 (= lt!56080 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!11585 () ListLongMap!1591)

(assert (=> b!108926 (= lt!56078 call!11585)))

(declare-fun e!70870 () ListLongMap!1591)

(assert (=> b!108926 (= e!70870 (+!148 call!11585 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!108927 () Bool)

(declare-fun e!70865 () Bool)

(assert (=> b!108927 (= e!70865 e!70867)))

(assert (=> b!108927 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun res!53965 () Bool)

(assert (=> b!108927 (= res!53965 (contains!834 lt!56083 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!108927 (=> (not res!53965) (not e!70867))))

(declare-fun b!108928 () Bool)

(assert (=> b!108928 (= e!70871 (= lt!56083 (getCurrentListMapNoExtraKeys!115 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!108929 () Bool)

(assert (=> b!108929 (= e!70870 call!11585)))

(declare-fun b!108930 () Bool)

(declare-fun e!70869 () ListLongMap!1591)

(assert (=> b!108930 (= e!70869 (ListLongMap!1592 Nil!1645))))

(declare-fun b!108931 () Bool)

(assert (=> b!108931 (= e!70865 e!70871)))

(declare-fun c!19211 () Bool)

(assert (=> b!108931 (= c!19211 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun d!30333 () Bool)

(declare-fun e!70866 () Bool)

(assert (=> d!30333 e!70866))

(declare-fun res!53962 () Bool)

(assert (=> d!30333 (=> (not res!53962) (not e!70866))))

(assert (=> d!30333 (= res!53962 (not (contains!834 lt!56083 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30333 (= lt!56083 e!70869)))

(declare-fun c!19213 () Bool)

(assert (=> d!30333 (= c!19213 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(assert (=> d!30333 (validMask!0 (mask!6764 (v!2913 (underlying!367 thiss!992))))))

(assert (=> d!30333 (= (getCurrentListMapNoExtraKeys!115 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))) lt!56083)))

(declare-fun b!108932 () Bool)

(assert (=> b!108932 (= e!70866 e!70865)))

(declare-fun c!19214 () Bool)

(declare-fun e!70868 () Bool)

(assert (=> b!108932 (= c!19214 e!70868)))

(declare-fun res!53964 () Bool)

(assert (=> b!108932 (=> (not res!53964) (not e!70868))))

(assert (=> b!108932 (= res!53964 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!108933 () Bool)

(assert (=> b!108933 (= e!70868 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!108933 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!108934 () Bool)

(assert (=> b!108934 (= e!70869 e!70870)))

(declare-fun c!19212 () Bool)

(assert (=> b!108934 (= c!19212 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!108935 () Bool)

(declare-fun res!53963 () Bool)

(assert (=> b!108935 (=> (not res!53963) (not e!70866))))

(assert (=> b!108935 (= res!53963 (not (contains!834 lt!56083 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!11582 () Bool)

(assert (=> bm!11582 (= call!11585 (getCurrentListMapNoExtraKeys!115 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (_values!2589 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992))) (extraKeys!2407 (v!2913 (underlying!367 thiss!992))) (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) (minValue!2479 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992)))))))

(assert (= (and d!30333 c!19213) b!108930))

(assert (= (and d!30333 (not c!19213)) b!108934))

(assert (= (and b!108934 c!19212) b!108926))

(assert (= (and b!108934 (not c!19212)) b!108929))

(assert (= (or b!108926 b!108929) bm!11582))

(assert (= (and d!30333 res!53962) b!108935))

(assert (= (and b!108935 res!53963) b!108932))

(assert (= (and b!108932 res!53964) b!108933))

(assert (= (and b!108932 c!19214) b!108927))

(assert (= (and b!108932 (not c!19214)) b!108931))

(assert (= (and b!108927 res!53965) b!108925))

(assert (= (and b!108931 c!19211) b!108928))

(assert (= (and b!108931 (not c!19211)) b!108924))

(declare-fun b_lambda!4899 () Bool)

(assert (=> (not b_lambda!4899) (not b!108925)))

(assert (=> b!108925 t!5772))

(declare-fun b_and!6741 () Bool)

(assert (= b_and!6737 (and (=> t!5772 result!3507) b_and!6741)))

(assert (=> b!108925 t!5774))

(declare-fun b_and!6743 () Bool)

(assert (= b_and!6739 (and (=> t!5774 result!3511) b_and!6743)))

(declare-fun b_lambda!4901 () Bool)

(assert (=> (not b_lambda!4901) (not b!108926)))

(assert (=> b!108926 t!5772))

(declare-fun b_and!6745 () Bool)

(assert (= b_and!6741 (and (=> t!5772 result!3507) b_and!6745)))

(assert (=> b!108926 t!5774))

(declare-fun b_and!6747 () Bool)

(assert (= b_and!6743 (and (=> t!5774 result!3511) b_and!6747)))

(declare-fun m!123089 () Bool)

(assert (=> b!108924 m!123089))

(declare-fun m!123091 () Bool)

(assert (=> b!108928 m!123091))

(assert (=> b!108925 m!121207))

(declare-fun m!123093 () Bool)

(assert (=> b!108925 m!123093))

(declare-fun m!123095 () Bool)

(assert (=> b!108925 m!123095))

(assert (=> b!108925 m!123093))

(declare-fun m!123097 () Bool)

(assert (=> b!108925 m!123097))

(assert (=> b!108925 m!123097))

(assert (=> b!108925 m!121207))

(declare-fun m!123099 () Bool)

(assert (=> b!108925 m!123099))

(declare-fun m!123101 () Bool)

(assert (=> b!108935 m!123101))

(declare-fun m!123103 () Bool)

(assert (=> b!108926 m!123103))

(assert (=> b!108926 m!121207))

(declare-fun m!123105 () Bool)

(assert (=> b!108926 m!123105))

(assert (=> b!108926 m!123093))

(declare-fun m!123107 () Bool)

(assert (=> b!108926 m!123107))

(assert (=> b!108926 m!123097))

(assert (=> b!108926 m!123097))

(assert (=> b!108926 m!121207))

(assert (=> b!108926 m!123099))

(assert (=> b!108926 m!123107))

(declare-fun m!123109 () Bool)

(assert (=> b!108926 m!123109))

(assert (=> b!108933 m!123093))

(assert (=> b!108933 m!123093))

(declare-fun m!123111 () Bool)

(assert (=> b!108933 m!123111))

(assert (=> bm!11582 m!123091))

(assert (=> b!108927 m!123093))

(assert (=> b!108927 m!123093))

(declare-fun m!123113 () Bool)

(assert (=> b!108927 m!123113))

(assert (=> b!108934 m!123093))

(assert (=> b!108934 m!123093))

(assert (=> b!108934 m!123111))

(declare-fun m!123115 () Bool)

(assert (=> d!30333 m!123115))

(assert (=> d!30333 m!121185))

(assert (=> bm!11503 d!30333))

(declare-fun d!30335 () Bool)

(assert (=> d!30335 (= (get!1352 (getValueByKey!156 (toList!811 lt!55482) lt!55494)) (v!2917 (getValueByKey!156 (toList!811 lt!55482) lt!55494)))))

(assert (=> d!30011 d!30335))

(declare-fun d!30337 () Bool)

(declare-fun c!19215 () Bool)

(assert (=> d!30337 (= c!19215 (and ((_ is Cons!1644) (toList!811 lt!55482)) (= (_1!1221 (h!2242 (toList!811 lt!55482))) lt!55494)))))

(declare-fun e!70872 () Option!162)

(assert (=> d!30337 (= (getValueByKey!156 (toList!811 lt!55482) lt!55494) e!70872)))

(declare-fun b!108938 () Bool)

(declare-fun e!70873 () Option!162)

(assert (=> b!108938 (= e!70873 (getValueByKey!156 (t!5776 (toList!811 lt!55482)) lt!55494))))

(declare-fun b!108939 () Bool)

(assert (=> b!108939 (= e!70873 None!160)))

(declare-fun b!108937 () Bool)

(assert (=> b!108937 (= e!70872 e!70873)))

(declare-fun c!19216 () Bool)

(assert (=> b!108937 (= c!19216 (and ((_ is Cons!1644) (toList!811 lt!55482)) (not (= (_1!1221 (h!2242 (toList!811 lt!55482))) lt!55494))))))

(declare-fun b!108936 () Bool)

(assert (=> b!108936 (= e!70872 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55482)))))))

(assert (= (and d!30337 c!19215) b!108936))

(assert (= (and d!30337 (not c!19215)) b!108937))

(assert (= (and b!108937 c!19216) b!108938))

(assert (= (and b!108937 (not c!19216)) b!108939))

(declare-fun m!123117 () Bool)

(assert (=> b!108938 m!123117))

(assert (=> d!30011 d!30337))

(assert (=> d!29917 d!29885))

(declare-fun b!108940 () Bool)

(declare-fun e!70879 () Bool)

(declare-fun call!11591 () Bool)

(assert (=> b!108940 (= e!70879 (not call!11591))))

(declare-fun bm!11583 () Bool)

(declare-fun call!11590 () ListLongMap!1591)

(declare-fun c!19218 () Bool)

(declare-fun c!19220 () Bool)

(declare-fun call!11587 () ListLongMap!1591)

(declare-fun call!11588 () ListLongMap!1591)

(declare-fun call!11589 () ListLongMap!1591)

(assert (=> bm!11583 (= call!11589 (+!148 (ite c!19220 call!11587 (ite c!19218 call!11588 call!11590)) (ite (or c!19220 c!19218) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(declare-fun b!108941 () Bool)

(declare-fun e!70875 () Bool)

(declare-fun call!11586 () Bool)

(assert (=> b!108941 (= e!70875 (not call!11586))))

(declare-fun bm!11584 () Bool)

(assert (=> bm!11584 (= call!11590 call!11588)))

(declare-fun b!108942 () Bool)

(declare-fun e!70881 () Bool)

(assert (=> b!108942 (= e!70879 e!70881)))

(declare-fun res!53972 () Bool)

(assert (=> b!108942 (= res!53972 call!11591)))

(assert (=> b!108942 (=> (not res!53972) (not e!70881))))

(declare-fun bm!11585 () Bool)

(declare-fun call!11592 () ListLongMap!1591)

(assert (=> bm!11585 (= call!11592 call!11589)))

(declare-fun bm!11586 () Bool)

(assert (=> bm!11586 (= call!11587 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55433 lt!55248 (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun b!108943 () Bool)

(declare-fun e!70885 () Unit!3339)

(declare-fun Unit!3387 () Unit!3339)

(assert (=> b!108943 (= e!70885 Unit!3387)))

(declare-fun d!30339 () Bool)

(declare-fun e!70878 () Bool)

(assert (=> d!30339 e!70878))

(declare-fun res!53971 () Bool)

(assert (=> d!30339 (=> (not res!53971) (not e!70878))))

(assert (=> d!30339 (= res!53971 (or (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))))

(declare-fun lt!56086 () ListLongMap!1591)

(declare-fun lt!56105 () ListLongMap!1591)

(assert (=> d!30339 (= lt!56086 lt!56105)))

(declare-fun lt!56097 () Unit!3339)

(assert (=> d!30339 (= lt!56097 e!70885)))

(declare-fun c!19221 () Bool)

(declare-fun e!70884 () Bool)

(assert (=> d!30339 (= c!19221 e!70884)))

(declare-fun res!53967 () Bool)

(assert (=> d!30339 (=> (not res!53967) (not e!70884))))

(assert (=> d!30339 (= res!53967 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun e!70882 () ListLongMap!1591)

(assert (=> d!30339 (= lt!56105 e!70882)))

(assert (=> d!30339 (= c!19220 (and (not (= (bvand lt!55433 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!55433 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30339 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30339 (= (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55433 lt!55248 (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!56086)))

(declare-fun b!108944 () Bool)

(declare-fun e!70877 () Bool)

(assert (=> b!108944 (= e!70875 e!70877)))

(declare-fun res!53973 () Bool)

(assert (=> b!108944 (= res!53973 call!11586)))

(assert (=> b!108944 (=> (not res!53973) (not e!70877))))

(declare-fun b!108945 () Bool)

(declare-fun lt!56092 () Unit!3339)

(assert (=> b!108945 (= e!70885 lt!56092)))

(declare-fun lt!56104 () ListLongMap!1591)

(assert (=> b!108945 (= lt!56104 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55433 lt!55248 (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56102 () (_ BitVec 64))

(assert (=> b!108945 (= lt!56102 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56103 () (_ BitVec 64))

(assert (=> b!108945 (= lt!56103 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56088 () Unit!3339)

(assert (=> b!108945 (= lt!56088 (addStillContains!75 lt!56104 lt!56102 lt!55248 lt!56103))))

(assert (=> b!108945 (contains!834 (+!148 lt!56104 (tuple2!2423 lt!56102 lt!55248)) lt!56103)))

(declare-fun lt!56095 () Unit!3339)

(assert (=> b!108945 (= lt!56095 lt!56088)))

(declare-fun lt!56087 () ListLongMap!1591)

(assert (=> b!108945 (= lt!56087 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55433 lt!55248 (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56098 () (_ BitVec 64))

(assert (=> b!108945 (= lt!56098 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56094 () (_ BitVec 64))

(assert (=> b!108945 (= lt!56094 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56099 () Unit!3339)

(assert (=> b!108945 (= lt!56099 (addApplyDifferent!75 lt!56087 lt!56098 (minValue!2479 newMap!16) lt!56094))))

(assert (=> b!108945 (= (apply!99 (+!148 lt!56087 (tuple2!2423 lt!56098 (minValue!2479 newMap!16))) lt!56094) (apply!99 lt!56087 lt!56094))))

(declare-fun lt!56096 () Unit!3339)

(assert (=> b!108945 (= lt!56096 lt!56099)))

(declare-fun lt!56089 () ListLongMap!1591)

(assert (=> b!108945 (= lt!56089 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55433 lt!55248 (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56091 () (_ BitVec 64))

(assert (=> b!108945 (= lt!56091 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56101 () (_ BitVec 64))

(assert (=> b!108945 (= lt!56101 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56085 () Unit!3339)

(assert (=> b!108945 (= lt!56085 (addApplyDifferent!75 lt!56089 lt!56091 lt!55248 lt!56101))))

(assert (=> b!108945 (= (apply!99 (+!148 lt!56089 (tuple2!2423 lt!56091 lt!55248)) lt!56101) (apply!99 lt!56089 lt!56101))))

(declare-fun lt!56093 () Unit!3339)

(assert (=> b!108945 (= lt!56093 lt!56085)))

(declare-fun lt!56106 () ListLongMap!1591)

(assert (=> b!108945 (= lt!56106 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55433 lt!55248 (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56090 () (_ BitVec 64))

(assert (=> b!108945 (= lt!56090 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56100 () (_ BitVec 64))

(assert (=> b!108945 (= lt!56100 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!108945 (= lt!56092 (addApplyDifferent!75 lt!56106 lt!56090 (minValue!2479 newMap!16) lt!56100))))

(assert (=> b!108945 (= (apply!99 (+!148 lt!56106 (tuple2!2423 lt!56090 (minValue!2479 newMap!16))) lt!56100) (apply!99 lt!56106 lt!56100))))

(declare-fun b!108946 () Bool)

(assert (=> b!108946 (= e!70882 (+!148 call!11589 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))

(declare-fun bm!11587 () Bool)

(assert (=> bm!11587 (= call!11591 (contains!834 lt!56086 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108947 () Bool)

(declare-fun c!19222 () Bool)

(assert (=> b!108947 (= c!19222 (and (not (= (bvand lt!55433 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!55433 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!70883 () ListLongMap!1591)

(declare-fun e!70874 () ListLongMap!1591)

(assert (=> b!108947 (= e!70883 e!70874)))

(declare-fun b!108948 () Bool)

(declare-fun e!70886 () Bool)

(assert (=> b!108948 (= e!70886 (= (apply!99 lt!56086 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1349 (select (arr!2075 (_values!2589 newMap!16)) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108948 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (_values!2589 newMap!16))))))

(assert (=> b!108948 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108949 () Bool)

(assert (=> b!108949 (= e!70884 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108950 () Bool)

(assert (=> b!108950 (= e!70878 e!70875)))

(declare-fun c!19219 () Bool)

(assert (=> b!108950 (= c!19219 (not (= (bvand lt!55433 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108951 () Bool)

(assert (=> b!108951 (= e!70881 (= (apply!99 lt!56086 #b0000000000000000000000000000000000000000000000000000000000000000) lt!55248))))

(declare-fun b!108952 () Bool)

(declare-fun res!53968 () Bool)

(assert (=> b!108952 (=> (not res!53968) (not e!70878))))

(declare-fun e!70880 () Bool)

(assert (=> b!108952 (= res!53968 e!70880)))

(declare-fun res!53966 () Bool)

(assert (=> b!108952 (=> res!53966 e!70880)))

(declare-fun e!70876 () Bool)

(assert (=> b!108952 (= res!53966 (not e!70876))))

(declare-fun res!53969 () Bool)

(assert (=> b!108952 (=> (not res!53969) (not e!70876))))

(assert (=> b!108952 (= res!53969 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108953 () Bool)

(assert (=> b!108953 (= e!70874 call!11592)))

(declare-fun b!108954 () Bool)

(declare-fun res!53974 () Bool)

(assert (=> b!108954 (=> (not res!53974) (not e!70878))))

(assert (=> b!108954 (= res!53974 e!70879)))

(declare-fun c!19217 () Bool)

(assert (=> b!108954 (= c!19217 (not (= (bvand lt!55433 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11588 () Bool)

(assert (=> bm!11588 (= call!11588 call!11587)))

(declare-fun bm!11589 () Bool)

(assert (=> bm!11589 (= call!11586 (contains!834 lt!56086 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108955 () Bool)

(assert (=> b!108955 (= e!70877 (= (apply!99 lt!56086 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2479 newMap!16)))))

(declare-fun b!108956 () Bool)

(assert (=> b!108956 (= e!70874 call!11590)))

(declare-fun b!108957 () Bool)

(assert (=> b!108957 (= e!70883 call!11592)))

(declare-fun b!108958 () Bool)

(assert (=> b!108958 (= e!70880 e!70886)))

(declare-fun res!53970 () Bool)

(assert (=> b!108958 (=> (not res!53970) (not e!70886))))

(assert (=> b!108958 (= res!53970 (contains!834 lt!56086 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!108958 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!108959 () Bool)

(assert (=> b!108959 (= e!70876 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!108960 () Bool)

(assert (=> b!108960 (= e!70882 e!70883)))

(assert (=> b!108960 (= c!19218 (and (not (= (bvand lt!55433 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!55433 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!30339 c!19220) b!108946))

(assert (= (and d!30339 (not c!19220)) b!108960))

(assert (= (and b!108960 c!19218) b!108957))

(assert (= (and b!108960 (not c!19218)) b!108947))

(assert (= (and b!108947 c!19222) b!108953))

(assert (= (and b!108947 (not c!19222)) b!108956))

(assert (= (or b!108953 b!108956) bm!11584))

(assert (= (or b!108957 bm!11584) bm!11588))

(assert (= (or b!108957 b!108953) bm!11585))

(assert (= (or b!108946 bm!11588) bm!11586))

(assert (= (or b!108946 bm!11585) bm!11583))

(assert (= (and d!30339 res!53967) b!108949))

(assert (= (and d!30339 c!19221) b!108945))

(assert (= (and d!30339 (not c!19221)) b!108943))

(assert (= (and d!30339 res!53971) b!108952))

(assert (= (and b!108952 res!53969) b!108959))

(assert (= (and b!108952 (not res!53966)) b!108958))

(assert (= (and b!108958 res!53970) b!108948))

(assert (= (and b!108952 res!53968) b!108954))

(assert (= (and b!108954 c!19217) b!108942))

(assert (= (and b!108954 (not c!19217)) b!108940))

(assert (= (and b!108942 res!53972) b!108951))

(assert (= (or b!108942 b!108940) bm!11587))

(assert (= (and b!108954 res!53974) b!108950))

(assert (= (and b!108950 c!19219) b!108944))

(assert (= (and b!108950 (not c!19219)) b!108941))

(assert (= (and b!108944 res!53973) b!108955))

(assert (= (or b!108944 b!108941) bm!11589))

(declare-fun b_lambda!4903 () Bool)

(assert (=> (not b_lambda!4903) (not b!108948)))

(assert (=> b!108948 t!5783))

(declare-fun b_and!6749 () Bool)

(assert (= b_and!6745 (and (=> t!5783 result!3521) b_and!6749)))

(assert (=> b!108948 t!5785))

(declare-fun b_and!6751 () Bool)

(assert (= b_and!6747 (and (=> t!5785 result!3523) b_and!6751)))

(assert (=> b!108959 m!121517))

(assert (=> b!108959 m!121517))

(assert (=> b!108959 m!121519))

(assert (=> d!30339 m!121521))

(declare-fun m!123119 () Bool)

(assert (=> bm!11589 m!123119))

(declare-fun m!123121 () Bool)

(assert (=> bm!11587 m!123121))

(declare-fun m!123123 () Bool)

(assert (=> b!108955 m!123123))

(declare-fun m!123125 () Bool)

(assert (=> bm!11586 m!123125))

(declare-fun m!123127 () Bool)

(assert (=> b!108946 m!123127))

(declare-fun m!123129 () Bool)

(assert (=> b!108951 m!123129))

(assert (=> b!108949 m!121517))

(assert (=> b!108949 m!121517))

(assert (=> b!108949 m!121519))

(declare-fun m!123131 () Bool)

(assert (=> b!108945 m!123131))

(declare-fun m!123133 () Bool)

(assert (=> b!108945 m!123133))

(declare-fun m!123135 () Bool)

(assert (=> b!108945 m!123135))

(declare-fun m!123137 () Bool)

(assert (=> b!108945 m!123137))

(declare-fun m!123139 () Bool)

(assert (=> b!108945 m!123139))

(declare-fun m!123141 () Bool)

(assert (=> b!108945 m!123141))

(declare-fun m!123143 () Bool)

(assert (=> b!108945 m!123143))

(assert (=> b!108945 m!123125))

(declare-fun m!123145 () Bool)

(assert (=> b!108945 m!123145))

(assert (=> b!108945 m!123141))

(declare-fun m!123147 () Bool)

(assert (=> b!108945 m!123147))

(assert (=> b!108945 m!123135))

(declare-fun m!123149 () Bool)

(assert (=> b!108945 m!123149))

(assert (=> b!108945 m!123137))

(declare-fun m!123151 () Bool)

(assert (=> b!108945 m!123151))

(assert (=> b!108945 m!123131))

(declare-fun m!123153 () Bool)

(assert (=> b!108945 m!123153))

(declare-fun m!123155 () Bool)

(assert (=> b!108945 m!123155))

(declare-fun m!123157 () Bool)

(assert (=> b!108945 m!123157))

(assert (=> b!108945 m!121517))

(declare-fun m!123159 () Bool)

(assert (=> b!108945 m!123159))

(assert (=> b!108958 m!121517))

(assert (=> b!108958 m!121517))

(declare-fun m!123161 () Bool)

(assert (=> b!108958 m!123161))

(assert (=> b!108948 m!121567))

(assert (=> b!108948 m!121569))

(assert (=> b!108948 m!121571))

(assert (=> b!108948 m!121517))

(declare-fun m!123163 () Bool)

(assert (=> b!108948 m!123163))

(assert (=> b!108948 m!121517))

(assert (=> b!108948 m!121569))

(assert (=> b!108948 m!121567))

(declare-fun m!123165 () Bool)

(assert (=> bm!11583 m!123165))

(assert (=> d!29949 d!30339))

(assert (=> d!29949 d!29895))

(declare-fun d!30341 () Bool)

(assert (=> d!30341 (= (+!148 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) lt!55433 lt!55248 (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(assert (=> d!30341 true))

(declare-fun _$7!95 () Unit!3339)

(assert (=> d!30341 (= (choose!681 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) lt!55433 (zeroValue!2479 newMap!16) lt!55248 (minValue!2479 newMap!16) (defaultEntry!2606 newMap!16)) _$7!95)))

(declare-fun bs!4480 () Bool)

(assert (= bs!4480 d!30341))

(assert (=> bs!4480 m!121407))

(assert (=> bs!4480 m!121407))

(assert (=> bs!4480 m!121785))

(assert (=> bs!4480 m!121787))

(assert (=> d!29949 d!30341))

(declare-fun d!30343 () Bool)

(declare-fun e!70887 () Bool)

(assert (=> d!30343 e!70887))

(declare-fun res!53975 () Bool)

(assert (=> d!30343 (=> (not res!53975) (not e!70887))))

(declare-fun lt!56109 () ListLongMap!1591)

(assert (=> d!30343 (= res!53975 (contains!834 lt!56109 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248))))))

(declare-fun lt!56107 () List!1648)

(assert (=> d!30343 (= lt!56109 (ListLongMap!1592 lt!56107))))

(declare-fun lt!56108 () Unit!3339)

(declare-fun lt!56110 () Unit!3339)

(assert (=> d!30343 (= lt!56108 lt!56110)))

(assert (=> d!30343 (= (getValueByKey!156 lt!56107 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248))) (Some!161 (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248))))))

(assert (=> d!30343 (= lt!56110 (lemmaContainsTupThenGetReturnValue!74 lt!56107 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248))))))

(assert (=> d!30343 (= lt!56107 (insertStrictlySorted!76 (toList!811 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248))))))

(assert (=> d!30343 (= (+!148 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248)) lt!56109)))

(declare-fun b!108961 () Bool)

(declare-fun res!53976 () Bool)

(assert (=> b!108961 (=> (not res!53976) (not e!70887))))

(assert (=> b!108961 (= res!53976 (= (getValueByKey!156 (toList!811 lt!56109) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248))) (Some!161 (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248)))))))

(declare-fun b!108962 () Bool)

(assert (=> b!108962 (= e!70887 (contains!835 (toList!811 lt!56109) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248)))))

(assert (= (and d!30343 res!53975) b!108961))

(assert (= (and b!108961 res!53976) b!108962))

(declare-fun m!123167 () Bool)

(assert (=> d!30343 m!123167))

(declare-fun m!123169 () Bool)

(assert (=> d!30343 m!123169))

(declare-fun m!123171 () Bool)

(assert (=> d!30343 m!123171))

(declare-fun m!123173 () Bool)

(assert (=> d!30343 m!123173))

(declare-fun m!123175 () Bool)

(assert (=> b!108961 m!123175))

(declare-fun m!123177 () Bool)

(assert (=> b!108962 m!123177))

(assert (=> d!29949 d!30343))

(assert (=> d!29949 d!30107))

(declare-fun b!108963 () Bool)

(declare-fun e!70888 () Bool)

(declare-fun call!11593 () Bool)

(assert (=> b!108963 (= e!70888 call!11593)))

(declare-fun b!108964 () Bool)

(assert (=> b!108964 (= e!70888 call!11593)))

(declare-fun bm!11590 () Bool)

(declare-fun c!19223 () Bool)

(assert (=> bm!11590 (= call!11593 (arrayNoDuplicates!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19223 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!19079 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18971 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644) Nil!1644)) (ite c!18971 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644) Nil!1644))) (ite c!19079 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18971 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644) Nil!1644)) (ite c!18971 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644) Nil!1644)))))))

(declare-fun d!30345 () Bool)

(declare-fun res!53978 () Bool)

(declare-fun e!70889 () Bool)

(assert (=> d!30345 (=> res!53978 e!70889)))

(assert (=> d!30345 (= res!53978 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(assert (=> d!30345 (= (arrayNoDuplicates!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19079 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18971 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644) Nil!1644)) (ite c!18971 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644) Nil!1644))) e!70889)))

(declare-fun b!108965 () Bool)

(declare-fun e!70890 () Bool)

(assert (=> b!108965 (= e!70890 (contains!836 (ite c!19079 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!18971 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644) Nil!1644)) (ite c!18971 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) Nil!1644) Nil!1644)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!108966 () Bool)

(declare-fun e!70891 () Bool)

(assert (=> b!108966 (= e!70889 e!70891)))

(declare-fun res!53977 () Bool)

(assert (=> b!108966 (=> (not res!53977) (not e!70891))))

(assert (=> b!108966 (= res!53977 (not e!70890))))

(declare-fun res!53979 () Bool)

(assert (=> b!108966 (=> (not res!53979) (not e!70890))))

(assert (=> b!108966 (= res!53979 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!108967 () Bool)

(assert (=> b!108967 (= e!70891 e!70888)))

(assert (=> b!108967 (= c!19223 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!30345 (not res!53978)) b!108966))

(assert (= (and b!108966 res!53979) b!108965))

(assert (= (and b!108966 res!53977) b!108967))

(assert (= (and b!108967 c!19223) b!108963))

(assert (= (and b!108967 (not c!19223)) b!108964))

(assert (= (or b!108963 b!108964) bm!11590))

(declare-fun m!123179 () Bool)

(assert (=> bm!11590 m!123179))

(declare-fun m!123181 () Bool)

(assert (=> bm!11590 m!123181))

(assert (=> b!108965 m!123179))

(assert (=> b!108965 m!123179))

(declare-fun m!123183 () Bool)

(assert (=> b!108965 m!123183))

(assert (=> b!108966 m!123179))

(assert (=> b!108966 m!123179))

(declare-fun m!123185 () Bool)

(assert (=> b!108966 m!123185))

(assert (=> b!108967 m!123179))

(assert (=> b!108967 m!123179))

(assert (=> b!108967 m!123185))

(assert (=> bm!11523 d!30345))

(assert (=> d!30005 d!30003))

(assert (=> d!30005 d!29999))

(assert (=> d!30005 d!30001))

(assert (=> d!30005 d!30007))

(declare-fun d!30347 () Bool)

(declare-fun c!19224 () Bool)

(assert (=> d!30347 (= c!19224 (and ((_ is Cons!1644) (toList!811 lt!55648)) (= (_1!1221 (h!2242 (toList!811 lt!55648))) (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun e!70892 () Option!162)

(assert (=> d!30347 (= (getValueByKey!156 (toList!811 lt!55648) (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))) e!70892)))

(declare-fun e!70893 () Option!162)

(declare-fun b!108970 () Bool)

(assert (=> b!108970 (= e!70893 (getValueByKey!156 (t!5776 (toList!811 lt!55648)) (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!108971 () Bool)

(assert (=> b!108971 (= e!70893 None!160)))

(declare-fun b!108969 () Bool)

(assert (=> b!108969 (= e!70892 e!70893)))

(declare-fun c!19225 () Bool)

(assert (=> b!108969 (= c!19225 (and ((_ is Cons!1644) (toList!811 lt!55648)) (not (= (_1!1221 (h!2242 (toList!811 lt!55648))) (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))))

(declare-fun b!108968 () Bool)

(assert (=> b!108968 (= e!70892 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55648)))))))

(assert (= (and d!30347 c!19224) b!108968))

(assert (= (and d!30347 (not c!19224)) b!108969))

(assert (= (and b!108969 c!19225) b!108970))

(assert (= (and b!108969 (not c!19225)) b!108971))

(declare-fun m!123187 () Bool)

(assert (=> b!108970 m!123187))

(assert (=> b!108336 d!30347))

(declare-fun d!30349 () Bool)

(assert (=> d!30349 (= (get!1352 (getValueByKey!156 (toList!811 lt!55499) lt!55493)) (v!2917 (getValueByKey!156 (toList!811 lt!55499) lt!55493)))))

(assert (=> d!30023 d!30349))

(declare-fun d!30351 () Bool)

(declare-fun c!19226 () Bool)

(assert (=> d!30351 (= c!19226 (and ((_ is Cons!1644) (toList!811 lt!55499)) (= (_1!1221 (h!2242 (toList!811 lt!55499))) lt!55493)))))

(declare-fun e!70894 () Option!162)

(assert (=> d!30351 (= (getValueByKey!156 (toList!811 lt!55499) lt!55493) e!70894)))

(declare-fun b!108974 () Bool)

(declare-fun e!70895 () Option!162)

(assert (=> b!108974 (= e!70895 (getValueByKey!156 (t!5776 (toList!811 lt!55499)) lt!55493))))

(declare-fun b!108975 () Bool)

(assert (=> b!108975 (= e!70895 None!160)))

(declare-fun b!108973 () Bool)

(assert (=> b!108973 (= e!70894 e!70895)))

(declare-fun c!19227 () Bool)

(assert (=> b!108973 (= c!19227 (and ((_ is Cons!1644) (toList!811 lt!55499)) (not (= (_1!1221 (h!2242 (toList!811 lt!55499))) lt!55493))))))

(declare-fun b!108972 () Bool)

(assert (=> b!108972 (= e!70894 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55499)))))))

(assert (= (and d!30351 c!19226) b!108972))

(assert (= (and d!30351 (not c!19226)) b!108973))

(assert (= (and b!108973 c!19227) b!108974))

(assert (= (and b!108973 (not c!19227)) b!108975))

(declare-fun m!123189 () Bool)

(assert (=> b!108974 m!123189))

(assert (=> d!30023 d!30351))

(declare-fun d!30353 () Bool)

(declare-fun e!70897 () Bool)

(assert (=> d!30353 e!70897))

(declare-fun res!53980 () Bool)

(assert (=> d!30353 (=> res!53980 e!70897)))

(declare-fun lt!56111 () Bool)

(assert (=> d!30353 (= res!53980 (not lt!56111))))

(declare-fun lt!56112 () Bool)

(assert (=> d!30353 (= lt!56111 lt!56112)))

(declare-fun lt!56113 () Unit!3339)

(declare-fun e!70896 () Unit!3339)

(assert (=> d!30353 (= lt!56113 e!70896)))

(declare-fun c!19228 () Bool)

(assert (=> d!30353 (= c!19228 lt!56112)))

(assert (=> d!30353 (= lt!56112 (containsKey!160 (toList!811 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30353 (= (contains!834 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) lt!56111)))

(declare-fun b!108976 () Bool)

(declare-fun lt!56114 () Unit!3339)

(assert (=> b!108976 (= e!70896 lt!56114)))

(assert (=> b!108976 (= lt!56114 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> b!108976 (isDefined!110 (getValueByKey!156 (toList!811 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!108977 () Bool)

(declare-fun Unit!3388 () Unit!3339)

(assert (=> b!108977 (= e!70896 Unit!3388)))

(declare-fun b!108978 () Bool)

(assert (=> b!108978 (= e!70897 (isDefined!110 (getValueByKey!156 (toList!811 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))))

(assert (= (and d!30353 c!19228) b!108976))

(assert (= (and d!30353 (not c!19228)) b!108977))

(assert (= (and d!30353 (not res!53980)) b!108978))

(assert (=> d!30353 m!121177))

(declare-fun m!123191 () Bool)

(assert (=> d!30353 m!123191))

(assert (=> b!108976 m!121177))

(declare-fun m!123193 () Bool)

(assert (=> b!108976 m!123193))

(assert (=> b!108976 m!121177))

(declare-fun m!123195 () Bool)

(assert (=> b!108976 m!123195))

(assert (=> b!108976 m!123195))

(declare-fun m!123197 () Bool)

(assert (=> b!108976 m!123197))

(assert (=> b!108978 m!121177))

(assert (=> b!108978 m!123195))

(assert (=> b!108978 m!123195))

(assert (=> b!108978 m!123197))

(assert (=> d!29997 d!30353))

(assert (=> d!29997 d!29863))

(declare-fun b!108979 () Bool)

(declare-fun e!70903 () Bool)

(declare-fun call!11599 () Bool)

(assert (=> b!108979 (= e!70903 (not call!11599))))

(declare-fun bm!11591 () Bool)

(declare-fun call!11596 () ListLongMap!1591)

(declare-fun call!11595 () ListLongMap!1591)

(declare-fun c!19232 () Bool)

(declare-fun call!11597 () ListLongMap!1591)

(declare-fun call!11598 () ListLongMap!1591)

(declare-fun c!19230 () Bool)

(assert (=> bm!11591 (= call!11597 (+!148 (ite c!19232 call!11595 (ite c!19230 call!11596 call!11598)) (ite (or c!19232 c!19230) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(declare-fun b!108980 () Bool)

(declare-fun e!70899 () Bool)

(declare-fun call!11594 () Bool)

(assert (=> b!108980 (= e!70899 (not call!11594))))

(declare-fun bm!11592 () Bool)

(assert (=> bm!11592 (= call!11598 call!11596)))

(declare-fun b!108981 () Bool)

(declare-fun e!70905 () Bool)

(assert (=> b!108981 (= e!70903 e!70905)))

(declare-fun res!53987 () Bool)

(assert (=> b!108981 (= res!53987 call!11599)))

(assert (=> b!108981 (=> (not res!53987) (not e!70905))))

(declare-fun bm!11593 () Bool)

(declare-fun call!11600 () ListLongMap!1591)

(assert (=> bm!11593 (= call!11600 call!11597)))

(declare-fun bm!11594 () Bool)

(assert (=> bm!11594 (= call!11595 (getCurrentListMapNoExtraKeys!115 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun b!108982 () Bool)

(declare-fun e!70909 () Unit!3339)

(declare-fun Unit!3389 () Unit!3339)

(assert (=> b!108982 (= e!70909 Unit!3389)))

(declare-fun d!30355 () Bool)

(declare-fun e!70902 () Bool)

(assert (=> d!30355 e!70902))

(declare-fun res!53986 () Bool)

(assert (=> d!30355 (=> (not res!53986) (not e!70902))))

(assert (=> d!30355 (= res!53986 (or (bvsge #b00000000000000000000000000000000 (size!2330 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))))))))))

(declare-fun lt!56116 () ListLongMap!1591)

(declare-fun lt!56135 () ListLongMap!1591)

(assert (=> d!30355 (= lt!56116 lt!56135)))

(declare-fun lt!56127 () Unit!3339)

(assert (=> d!30355 (= lt!56127 e!70909)))

(declare-fun c!19233 () Bool)

(declare-fun e!70908 () Bool)

(assert (=> d!30355 (= c!19233 e!70908)))

(declare-fun res!53982 () Bool)

(assert (=> d!30355 (=> (not res!53982) (not e!70908))))

(assert (=> d!30355 (= res!53982 (bvslt #b00000000000000000000000000000000 (size!2330 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))))))))

(declare-fun e!70906 () ListLongMap!1591)

(assert (=> d!30355 (= lt!56135 e!70906)))

(assert (=> d!30355 (= c!19232 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30355 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30355 (= (getCurrentListMap!487 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!56116)))

(declare-fun b!108983 () Bool)

(declare-fun e!70901 () Bool)

(assert (=> b!108983 (= e!70899 e!70901)))

(declare-fun res!53988 () Bool)

(assert (=> b!108983 (= res!53988 call!11594)))

(assert (=> b!108983 (=> (not res!53988) (not e!70901))))

(declare-fun b!108984 () Bool)

(declare-fun lt!56122 () Unit!3339)

(assert (=> b!108984 (= e!70909 lt!56122)))

(declare-fun lt!56134 () ListLongMap!1591)

(assert (=> b!108984 (= lt!56134 (getCurrentListMapNoExtraKeys!115 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56132 () (_ BitVec 64))

(assert (=> b!108984 (= lt!56132 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56133 () (_ BitVec 64))

(assert (=> b!108984 (= lt!56133 (select (arr!2074 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56118 () Unit!3339)

(assert (=> b!108984 (= lt!56118 (addStillContains!75 lt!56134 lt!56132 (zeroValue!2479 newMap!16) lt!56133))))

(assert (=> b!108984 (contains!834 (+!148 lt!56134 (tuple2!2423 lt!56132 (zeroValue!2479 newMap!16))) lt!56133)))

(declare-fun lt!56125 () Unit!3339)

(assert (=> b!108984 (= lt!56125 lt!56118)))

(declare-fun lt!56117 () ListLongMap!1591)

(assert (=> b!108984 (= lt!56117 (getCurrentListMapNoExtraKeys!115 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56128 () (_ BitVec 64))

(assert (=> b!108984 (= lt!56128 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56124 () (_ BitVec 64))

(assert (=> b!108984 (= lt!56124 (select (arr!2074 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56129 () Unit!3339)

(assert (=> b!108984 (= lt!56129 (addApplyDifferent!75 lt!56117 lt!56128 (minValue!2479 newMap!16) lt!56124))))

(assert (=> b!108984 (= (apply!99 (+!148 lt!56117 (tuple2!2423 lt!56128 (minValue!2479 newMap!16))) lt!56124) (apply!99 lt!56117 lt!56124))))

(declare-fun lt!56126 () Unit!3339)

(assert (=> b!108984 (= lt!56126 lt!56129)))

(declare-fun lt!56119 () ListLongMap!1591)

(assert (=> b!108984 (= lt!56119 (getCurrentListMapNoExtraKeys!115 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56121 () (_ BitVec 64))

(assert (=> b!108984 (= lt!56121 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56131 () (_ BitVec 64))

(assert (=> b!108984 (= lt!56131 (select (arr!2074 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56115 () Unit!3339)

(assert (=> b!108984 (= lt!56115 (addApplyDifferent!75 lt!56119 lt!56121 (zeroValue!2479 newMap!16) lt!56131))))

(assert (=> b!108984 (= (apply!99 (+!148 lt!56119 (tuple2!2423 lt!56121 (zeroValue!2479 newMap!16))) lt!56131) (apply!99 lt!56119 lt!56131))))

(declare-fun lt!56123 () Unit!3339)

(assert (=> b!108984 (= lt!56123 lt!56115)))

(declare-fun lt!56136 () ListLongMap!1591)

(assert (=> b!108984 (= lt!56136 (getCurrentListMapNoExtraKeys!115 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56120 () (_ BitVec 64))

(assert (=> b!108984 (= lt!56120 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56130 () (_ BitVec 64))

(assert (=> b!108984 (= lt!56130 (select (arr!2074 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!108984 (= lt!56122 (addApplyDifferent!75 lt!56136 lt!56120 (minValue!2479 newMap!16) lt!56130))))

(assert (=> b!108984 (= (apply!99 (+!148 lt!56136 (tuple2!2423 lt!56120 (minValue!2479 newMap!16))) lt!56130) (apply!99 lt!56136 lt!56130))))

(declare-fun b!108985 () Bool)

(assert (=> b!108985 (= e!70906 (+!148 call!11597 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))

(declare-fun bm!11595 () Bool)

(assert (=> bm!11595 (= call!11599 (contains!834 lt!56116 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108986 () Bool)

(declare-fun c!19234 () Bool)

(assert (=> b!108986 (= c!19234 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!70907 () ListLongMap!1591)

(declare-fun e!70898 () ListLongMap!1591)

(assert (=> b!108986 (= e!70907 e!70898)))

(declare-fun b!108987 () Bool)

(declare-fun e!70910 () Bool)

(assert (=> b!108987 (= e!70910 (= (apply!99 lt!56116 (select (arr!2074 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000)) (get!1349 (select (arr!2075 (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108987 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))))))))

(assert (=> b!108987 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))))))))

(declare-fun b!108988 () Bool)

(assert (=> b!108988 (= e!70908 (validKeyInArray!0 (select (arr!2074 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!108989 () Bool)

(assert (=> b!108989 (= e!70902 e!70899)))

(declare-fun c!19231 () Bool)

(assert (=> b!108989 (= c!19231 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!108990 () Bool)

(assert (=> b!108990 (= e!70905 (= (apply!99 lt!56116 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2479 newMap!16)))))

(declare-fun b!108991 () Bool)

(declare-fun res!53983 () Bool)

(assert (=> b!108991 (=> (not res!53983) (not e!70902))))

(declare-fun e!70904 () Bool)

(assert (=> b!108991 (= res!53983 e!70904)))

(declare-fun res!53981 () Bool)

(assert (=> b!108991 (=> res!53981 e!70904)))

(declare-fun e!70900 () Bool)

(assert (=> b!108991 (= res!53981 (not e!70900))))

(declare-fun res!53984 () Bool)

(assert (=> b!108991 (=> (not res!53984) (not e!70900))))

(assert (=> b!108991 (= res!53984 (bvslt #b00000000000000000000000000000000 (size!2330 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))))))))

(declare-fun b!108992 () Bool)

(assert (=> b!108992 (= e!70898 call!11600)))

(declare-fun b!108993 () Bool)

(declare-fun res!53989 () Bool)

(assert (=> b!108993 (=> (not res!53989) (not e!70902))))

(assert (=> b!108993 (= res!53989 e!70903)))

(declare-fun c!19229 () Bool)

(assert (=> b!108993 (= c!19229 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11596 () Bool)

(assert (=> bm!11596 (= call!11596 call!11595)))

(declare-fun bm!11597 () Bool)

(assert (=> bm!11597 (= call!11594 (contains!834 lt!56116 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!108994 () Bool)

(assert (=> b!108994 (= e!70901 (= (apply!99 lt!56116 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2479 newMap!16)))))

(declare-fun b!108995 () Bool)

(assert (=> b!108995 (= e!70898 call!11598)))

(declare-fun b!108996 () Bool)

(assert (=> b!108996 (= e!70907 call!11600)))

(declare-fun b!108997 () Bool)

(assert (=> b!108997 (= e!70904 e!70910)))

(declare-fun res!53985 () Bool)

(assert (=> b!108997 (=> (not res!53985) (not e!70910))))

(assert (=> b!108997 (= res!53985 (contains!834 lt!56116 (select (arr!2074 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!108997 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))))))))

(declare-fun b!108998 () Bool)

(assert (=> b!108998 (= e!70900 (validKeyInArray!0 (select (arr!2074 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!108999 () Bool)

(assert (=> b!108999 (= e!70906 e!70907)))

(assert (=> b!108999 (= c!19230 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!30355 c!19232) b!108985))

(assert (= (and d!30355 (not c!19232)) b!108999))

(assert (= (and b!108999 c!19230) b!108996))

(assert (= (and b!108999 (not c!19230)) b!108986))

(assert (= (and b!108986 c!19234) b!108992))

(assert (= (and b!108986 (not c!19234)) b!108995))

(assert (= (or b!108992 b!108995) bm!11592))

(assert (= (or b!108996 bm!11592) bm!11596))

(assert (= (or b!108996 b!108992) bm!11593))

(assert (= (or b!108985 bm!11596) bm!11594))

(assert (= (or b!108985 bm!11593) bm!11591))

(assert (= (and d!30355 res!53982) b!108988))

(assert (= (and d!30355 c!19233) b!108984))

(assert (= (and d!30355 (not c!19233)) b!108982))

(assert (= (and d!30355 res!53986) b!108991))

(assert (= (and b!108991 res!53984) b!108998))

(assert (= (and b!108991 (not res!53981)) b!108997))

(assert (= (and b!108997 res!53985) b!108987))

(assert (= (and b!108991 res!53983) b!108993))

(assert (= (and b!108993 c!19229) b!108981))

(assert (= (and b!108993 (not c!19229)) b!108979))

(assert (= (and b!108981 res!53987) b!108990))

(assert (= (or b!108981 b!108979) bm!11595))

(assert (= (and b!108993 res!53989) b!108989))

(assert (= (and b!108989 c!19231) b!108983))

(assert (= (and b!108989 (not c!19231)) b!108980))

(assert (= (and b!108983 res!53988) b!108994))

(assert (= (or b!108983 b!108980) bm!11597))

(declare-fun b_lambda!4905 () Bool)

(assert (=> (not b_lambda!4905) (not b!108987)))

(assert (=> b!108987 t!5783))

(declare-fun b_and!6753 () Bool)

(assert (= b_and!6749 (and (=> t!5783 result!3521) b_and!6753)))

(assert (=> b!108987 t!5785))

(declare-fun b_and!6755 () Bool)

(assert (= b_and!6751 (and (=> t!5785 result!3523) b_and!6755)))

(declare-fun m!123199 () Bool)

(assert (=> b!108998 m!123199))

(assert (=> b!108998 m!123199))

(declare-fun m!123201 () Bool)

(assert (=> b!108998 m!123201))

(assert (=> d!30355 m!121521))

(declare-fun m!123203 () Bool)

(assert (=> bm!11597 m!123203))

(declare-fun m!123205 () Bool)

(assert (=> bm!11595 m!123205))

(declare-fun m!123207 () Bool)

(assert (=> b!108994 m!123207))

(declare-fun m!123209 () Bool)

(assert (=> bm!11594 m!123209))

(declare-fun m!123211 () Bool)

(assert (=> b!108985 m!123211))

(declare-fun m!123213 () Bool)

(assert (=> b!108990 m!123213))

(assert (=> b!108988 m!123199))

(assert (=> b!108988 m!123199))

(assert (=> b!108988 m!123201))

(declare-fun m!123215 () Bool)

(assert (=> b!108984 m!123215))

(declare-fun m!123217 () Bool)

(assert (=> b!108984 m!123217))

(declare-fun m!123219 () Bool)

(assert (=> b!108984 m!123219))

(declare-fun m!123221 () Bool)

(assert (=> b!108984 m!123221))

(declare-fun m!123223 () Bool)

(assert (=> b!108984 m!123223))

(declare-fun m!123225 () Bool)

(assert (=> b!108984 m!123225))

(declare-fun m!123227 () Bool)

(assert (=> b!108984 m!123227))

(assert (=> b!108984 m!123209))

(declare-fun m!123229 () Bool)

(assert (=> b!108984 m!123229))

(assert (=> b!108984 m!123225))

(declare-fun m!123231 () Bool)

(assert (=> b!108984 m!123231))

(assert (=> b!108984 m!123219))

(declare-fun m!123233 () Bool)

(assert (=> b!108984 m!123233))

(assert (=> b!108984 m!123221))

(declare-fun m!123235 () Bool)

(assert (=> b!108984 m!123235))

(assert (=> b!108984 m!123215))

(declare-fun m!123237 () Bool)

(assert (=> b!108984 m!123237))

(declare-fun m!123239 () Bool)

(assert (=> b!108984 m!123239))

(declare-fun m!123241 () Bool)

(assert (=> b!108984 m!123241))

(assert (=> b!108984 m!123199))

(declare-fun m!123243 () Bool)

(assert (=> b!108984 m!123243))

(assert (=> b!108997 m!123199))

(assert (=> b!108997 m!123199))

(declare-fun m!123245 () Bool)

(assert (=> b!108997 m!123245))

(declare-fun m!123247 () Bool)

(assert (=> b!108987 m!123247))

(assert (=> b!108987 m!121569))

(declare-fun m!123249 () Bool)

(assert (=> b!108987 m!123249))

(assert (=> b!108987 m!123199))

(declare-fun m!123251 () Bool)

(assert (=> b!108987 m!123251))

(assert (=> b!108987 m!123199))

(assert (=> b!108987 m!121569))

(assert (=> b!108987 m!123247))

(declare-fun m!123253 () Bool)

(assert (=> bm!11591 m!123253))

(assert (=> d!29997 d!30355))

(declare-fun d!30357 () Bool)

(declare-fun e!70911 () Bool)

(assert (=> d!30357 e!70911))

(declare-fun res!53990 () Bool)

(assert (=> d!30357 (=> (not res!53990) (not e!70911))))

(assert (=> d!30357 (= res!53990 (and (bvsge (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) #b00000000000000000000000000000000) (bvslt (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (size!2330 lt!55763))))))

(declare-fun lt!56137 () Unit!3339)

(assert (=> d!30357 (= lt!56137 (choose!677 lt!55763 lt!55760 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (defaultEntry!2606 newMap!16)))))

(assert (=> d!30357 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30357 (= (lemmaValidKeyInArrayIsInListMap!106 lt!55763 lt!55760 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (defaultEntry!2606 newMap!16)) lt!56137)))

(declare-fun b!109000 () Bool)

(assert (=> b!109000 (= e!70911 (contains!834 (getCurrentListMap!487 lt!55763 lt!55760 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (arr!2074 lt!55763) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)))))))

(assert (= (and d!30357 res!53990) b!109000))

(declare-fun m!123255 () Bool)

(assert (=> d!30357 m!123255))

(assert (=> d!30357 m!121521))

(assert (=> b!109000 m!122005))

(declare-fun m!123257 () Bool)

(assert (=> b!109000 m!123257))

(assert (=> b!109000 m!122005))

(assert (=> b!109000 m!123257))

(declare-fun m!123259 () Bool)

(assert (=> b!109000 m!123259))

(assert (=> d!29997 d!30357))

(declare-fun d!30359 () Bool)

(declare-fun e!70913 () Bool)

(assert (=> d!30359 e!70913))

(declare-fun res!53991 () Bool)

(assert (=> d!30359 (=> res!53991 e!70913)))

(declare-fun lt!56138 () Bool)

(assert (=> d!30359 (= res!53991 (not lt!56138))))

(declare-fun lt!56139 () Bool)

(assert (=> d!30359 (= lt!56138 lt!56139)))

(declare-fun lt!56140 () Unit!3339)

(declare-fun e!70912 () Unit!3339)

(assert (=> d!30359 (= lt!56140 e!70912)))

(declare-fun c!19235 () Bool)

(assert (=> d!30359 (= c!19235 lt!56139)))

(assert (=> d!30359 (= lt!56139 (containsKey!160 (toList!811 (getCurrentListMap!487 lt!55763 lt!55760 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)))))))

(assert (=> d!30359 (= (contains!834 (getCurrentListMap!487 lt!55763 lt!55760 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)))) lt!56138)))

(declare-fun b!109001 () Bool)

(declare-fun lt!56141 () Unit!3339)

(assert (=> b!109001 (= e!70912 lt!56141)))

(assert (=> b!109001 (= lt!56141 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 (getCurrentListMap!487 lt!55763 lt!55760 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)))))))

(assert (=> b!109001 (isDefined!110 (getValueByKey!156 (toList!811 (getCurrentListMap!487 lt!55763 lt!55760 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)))))))

(declare-fun b!109002 () Bool)

(declare-fun Unit!3390 () Unit!3339)

(assert (=> b!109002 (= e!70912 Unit!3390)))

(declare-fun b!109003 () Bool)

(assert (=> b!109003 (= e!70913 (isDefined!110 (getValueByKey!156 (toList!811 (getCurrentListMap!487 lt!55763 lt!55760 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))) (select (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408))))))))

(assert (= (and d!30359 c!19235) b!109001))

(assert (= (and d!30359 (not c!19235)) b!109002))

(assert (= (and d!30359 (not res!53991)) b!109003))

(assert (=> d!30359 m!122017))

(declare-fun m!123261 () Bool)

(assert (=> d!30359 m!123261))

(assert (=> b!109001 m!122017))

(declare-fun m!123263 () Bool)

(assert (=> b!109001 m!123263))

(assert (=> b!109001 m!122017))

(declare-fun m!123265 () Bool)

(assert (=> b!109001 m!123265))

(assert (=> b!109001 m!123265))

(declare-fun m!123267 () Bool)

(assert (=> b!109001 m!123267))

(assert (=> b!109003 m!122017))

(assert (=> b!109003 m!123265))

(assert (=> b!109003 m!123265))

(assert (=> b!109003 m!123267))

(assert (=> d!29997 d!30359))

(declare-fun d!30361 () Bool)

(declare-fun e!70916 () Bool)

(assert (=> d!30361 e!70916))

(declare-fun res!53994 () Bool)

(assert (=> d!30361 (=> (not res!53994) (not e!70916))))

(assert (=> d!30361 (= res!53994 (and (bvsge (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) #b00000000000000000000000000000000) (bvslt (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (size!2330 (_keys!4316 newMap!16))) (bvslt (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (size!2331 (_values!2589 newMap!16)))))))

(declare-fun lt!56144 () Unit!3339)

(declare-fun choose!688 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 32) (_ BitVec 64) V!3235 Int) Unit!3339)

(assert (=> d!30361 (= lt!56144 (choose!688 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248 (defaultEntry!2606 newMap!16)))))

(assert (=> d!30361 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30361 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!31 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248 (defaultEntry!2606 newMap!16)) lt!56144)))

(declare-fun b!109006 () Bool)

(assert (=> b!109006 (= e!70916 (= (+!148 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (getCurrentListMap!487 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16))))))

(assert (= (and d!30361 res!53994) b!109006))

(assert (=> d!30361 m!121177))

(declare-fun m!123269 () Bool)

(assert (=> d!30361 m!123269))

(assert (=> d!30361 m!121521))

(assert (=> b!109006 m!122003))

(assert (=> b!109006 m!121407))

(assert (=> b!109006 m!121989))

(assert (=> b!109006 m!122007))

(assert (=> b!109006 m!121407))

(assert (=> b!109006 m!121625))

(assert (=> d!29997 d!30361))

(declare-fun b!109018 () Bool)

(declare-fun e!70922 () Bool)

(assert (=> b!109018 (= e!70922 (= (arrayCountValidKeys!0 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4316 newMap!16) #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun d!30363 () Bool)

(assert (=> d!30363 e!70922))

(declare-fun res!54005 () Bool)

(assert (=> d!30363 (=> (not res!54005) (not e!70922))))

(assert (=> d!30363 (= res!54005 (and (bvsge (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) #b00000000000000000000000000000000) (bvslt (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (size!2330 (_keys!4316 newMap!16)))))))

(declare-fun lt!56147 () Unit!3339)

(declare-fun choose!1 (array!4374 (_ BitVec 32) (_ BitVec 64)) Unit!3339)

(assert (=> d!30363 (= lt!56147 (choose!1 (_keys!4316 newMap!16) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!70921 () Bool)

(assert (=> d!30363 e!70921))

(declare-fun res!54006 () Bool)

(assert (=> d!30363 (=> (not res!54006) (not e!70921))))

(assert (=> d!30363 (= res!54006 (and (bvsge (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) #b00000000000000000000000000000000) (bvslt (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (size!2330 (_keys!4316 newMap!16)))))))

(assert (=> d!30363 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4316 newMap!16) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) lt!56147)))

(declare-fun b!109015 () Bool)

(declare-fun res!54004 () Bool)

(assert (=> b!109015 (=> (not res!54004) (not e!70921))))

(assert (=> b!109015 (= res!54004 (not (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408))))))))

(declare-fun b!109017 () Bool)

(assert (=> b!109017 (= e!70921 (bvslt (size!2330 (_keys!4316 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!109016 () Bool)

(declare-fun res!54003 () Bool)

(assert (=> b!109016 (=> (not res!54003) (not e!70921))))

(assert (=> b!109016 (= res!54003 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30363 res!54006) b!109015))

(assert (= (and b!109015 res!54004) b!109016))

(assert (= (and b!109016 res!54003) b!109017))

(assert (= (and d!30363 res!54005) b!109018))

(assert (=> b!109018 m!122003))

(assert (=> b!109018 m!121995))

(assert (=> b!109018 m!121377))

(assert (=> d!30363 m!121177))

(declare-fun m!123271 () Bool)

(assert (=> d!30363 m!123271))

(declare-fun m!123273 () Bool)

(assert (=> b!109015 m!123273))

(assert (=> b!109015 m!123273))

(declare-fun m!123275 () Bool)

(assert (=> b!109015 m!123275))

(assert (=> b!109016 m!121177))

(assert (=> b!109016 m!121511))

(assert (=> d!29997 d!30363))

(declare-fun lt!56148 () (_ BitVec 32))

(declare-fun d!30365 () Bool)

(assert (=> d!30365 (and (bvsge lt!56148 #b00000000000000000000000000000000) (bvsle lt!56148 (bvsub (size!2330 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!70924 () (_ BitVec 32))

(assert (=> d!30365 (= lt!56148 e!70924)))

(declare-fun c!19237 () Bool)

(assert (=> d!30365 (= c!19237 (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(assert (=> d!30365 (and (bvsle #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2330 (_keys!4316 newMap!16)) (size!2330 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))))))))

(assert (=> d!30365 (= (arrayCountValidKeys!0 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))) lt!56148)))

(declare-fun b!109019 () Bool)

(declare-fun e!70923 () (_ BitVec 32))

(declare-fun call!11601 () (_ BitVec 32))

(assert (=> b!109019 (= e!70923 (bvadd #b00000000000000000000000000000001 call!11601))))

(declare-fun b!109020 () Bool)

(assert (=> b!109020 (= e!70924 e!70923)))

(declare-fun c!19236 () Bool)

(assert (=> b!109020 (= c!19236 (validKeyInArray!0 (select (arr!2074 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!109021 () Bool)

(assert (=> b!109021 (= e!70923 call!11601)))

(declare-fun b!109022 () Bool)

(assert (=> b!109022 (= e!70924 #b00000000000000000000000000000000)))

(declare-fun bm!11598 () Bool)

(assert (=> bm!11598 (= call!11601 (arrayCountValidKeys!0 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2330 (_keys!4316 newMap!16))))))

(assert (= (and d!30365 c!19237) b!109022))

(assert (= (and d!30365 (not c!19237)) b!109020))

(assert (= (and b!109020 c!19236) b!109019))

(assert (= (and b!109020 (not c!19236)) b!109021))

(assert (= (or b!109019 b!109021) bm!11598))

(assert (=> b!109020 m!123199))

(assert (=> b!109020 m!123199))

(assert (=> b!109020 m!123201))

(declare-fun m!123277 () Bool)

(assert (=> bm!11598 m!123277))

(assert (=> d!29997 d!30365))

(declare-fun d!30367 () Bool)

(assert (=> d!30367 (arrayContainsKey!0 lt!55755 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!56151 () Unit!3339)

(declare-fun choose!13 (array!4374 (_ BitVec 64) (_ BitVec 32)) Unit!3339)

(assert (=> d!30367 (= lt!56151 (choose!13 lt!55755 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408))))))

(assert (=> d!30367 (bvsge (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) #b00000000000000000000000000000000)))

(assert (=> d!30367 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!55755 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408))) lt!56151)))

(declare-fun bs!4481 () Bool)

(assert (= bs!4481 d!30367))

(assert (=> bs!4481 m!121177))

(assert (=> bs!4481 m!122001))

(assert (=> bs!4481 m!121177))

(declare-fun m!123279 () Bool)

(assert (=> bs!4481 m!123279))

(assert (=> d!29997 d!30367))

(declare-fun d!30369 () Bool)

(declare-fun lt!56152 () (_ BitVec 32))

(assert (=> d!30369 (and (bvsge lt!56152 #b00000000000000000000000000000000) (bvsle lt!56152 (bvsub (size!2330 lt!55764) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)))))))

(declare-fun e!70926 () (_ BitVec 32))

(assert (=> d!30369 (= lt!56152 e!70926)))

(declare-fun c!19239 () Bool)

(assert (=> d!30369 (= c!19239 (bvsge (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (bvadd (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) #b00000000000000000000000000000001)))))

(assert (=> d!30369 (and (bvsle (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (bvadd (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) #b00000000000000000000000000000001)) (bvsge (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) #b00000000000000000000000000000001) (size!2330 lt!55764)))))

(assert (=> d!30369 (= (arrayCountValidKeys!0 lt!55764 (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (bvadd (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) #b00000000000000000000000000000001)) lt!56152)))

(declare-fun b!109023 () Bool)

(declare-fun e!70925 () (_ BitVec 32))

(declare-fun call!11602 () (_ BitVec 32))

(assert (=> b!109023 (= e!70925 (bvadd #b00000000000000000000000000000001 call!11602))))

(declare-fun b!109024 () Bool)

(assert (=> b!109024 (= e!70926 e!70925)))

(declare-fun c!19238 () Bool)

(assert (=> b!109024 (= c!19238 (validKeyInArray!0 (select (arr!2074 lt!55764) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)))))))

(declare-fun b!109025 () Bool)

(assert (=> b!109025 (= e!70925 call!11602)))

(declare-fun b!109026 () Bool)

(assert (=> b!109026 (= e!70926 #b00000000000000000000000000000000)))

(declare-fun bm!11599 () Bool)

(assert (=> bm!11599 (= call!11602 (arrayCountValidKeys!0 lt!55764 (bvadd (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) #b00000000000000000000000000000001) (bvadd (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) #b00000000000000000000000000000001)))))

(assert (= (and d!30369 c!19239) b!109026))

(assert (= (and d!30369 (not c!19239)) b!109024))

(assert (= (and b!109024 c!19238) b!109023))

(assert (= (and b!109024 (not c!19238)) b!109025))

(assert (= (or b!109023 b!109025) bm!11599))

(declare-fun m!123281 () Bool)

(assert (=> b!109024 m!123281))

(assert (=> b!109024 m!123281))

(declare-fun m!123283 () Bool)

(assert (=> b!109024 m!123283))

(declare-fun m!123285 () Bool)

(assert (=> bm!11599 m!123285))

(assert (=> d!29997 d!30369))

(declare-fun d!30371 () Bool)

(declare-fun e!70929 () Bool)

(assert (=> d!30371 e!70929))

(declare-fun res!54009 () Bool)

(assert (=> d!30371 (=> (not res!54009) (not e!70929))))

(assert (=> d!30371 (= res!54009 (and (bvsge (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) #b00000000000000000000000000000000) (bvslt (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (size!2330 (_keys!4316 newMap!16)))))))

(declare-fun lt!56155 () Unit!3339)

(declare-fun choose!41 (array!4374 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1647) Unit!3339)

(assert (=> d!30371 (= lt!56155 (choose!41 (_keys!4316 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) lt!55745 lt!55762))))

(assert (=> d!30371 (bvslt (size!2330 (_keys!4316 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!30371 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4316 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) lt!55745 lt!55762) lt!56155)))

(declare-fun b!109029 () Bool)

(assert (=> b!109029 (= e!70929 (arrayNoDuplicates!0 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) lt!55745 lt!55762))))

(assert (= (and d!30371 res!54009) b!109029))

(assert (=> d!30371 m!121177))

(declare-fun m!123287 () Bool)

(assert (=> d!30371 m!123287))

(assert (=> b!109029 m!122003))

(assert (=> b!109029 m!122011))

(assert (=> d!29997 d!30371))

(assert (=> d!29997 d!30305))

(assert (=> d!29997 d!29895))

(declare-fun d!30373 () Bool)

(declare-fun res!54010 () Bool)

(declare-fun e!70930 () Bool)

(assert (=> d!30373 (=> res!54010 e!70930)))

(assert (=> d!30373 (= res!54010 (= (select (arr!2074 lt!55755) #b00000000000000000000000000000000) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30373 (= (arrayContainsKey!0 lt!55755 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000) e!70930)))

(declare-fun b!109030 () Bool)

(declare-fun e!70931 () Bool)

(assert (=> b!109030 (= e!70930 e!70931)))

(declare-fun res!54011 () Bool)

(assert (=> b!109030 (=> (not res!54011) (not e!70931))))

(assert (=> b!109030 (= res!54011 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2330 lt!55755)))))

(declare-fun b!109031 () Bool)

(assert (=> b!109031 (= e!70931 (arrayContainsKey!0 lt!55755 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!30373 (not res!54010)) b!109030))

(assert (= (and b!109030 res!54011) b!109031))

(declare-fun m!123289 () Bool)

(assert (=> d!30373 m!123289))

(assert (=> b!109031 m!121177))

(declare-fun m!123291 () Bool)

(assert (=> b!109031 m!123291))

(assert (=> d!29997 d!30373))

(assert (=> d!29997 d!30095))

(declare-fun b!109032 () Bool)

(declare-fun e!70932 () Bool)

(declare-fun call!11603 () Bool)

(assert (=> b!109032 (= e!70932 call!11603)))

(declare-fun b!109033 () Bool)

(assert (=> b!109033 (= e!70932 call!11603)))

(declare-fun bm!11600 () Bool)

(declare-fun c!19240 () Bool)

(assert (=> bm!11600 (= call!11603 (arrayNoDuplicates!0 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) (bvadd lt!55745 #b00000000000000000000000000000001) (ite c!19240 (Cons!1643 (select (arr!2074 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16)))) lt!55745) lt!55762) lt!55762)))))

(declare-fun d!30375 () Bool)

(declare-fun res!54013 () Bool)

(declare-fun e!70933 () Bool)

(assert (=> d!30375 (=> res!54013 e!70933)))

(assert (=> d!30375 (= res!54013 (bvsge lt!55745 (size!2330 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))))))))

(assert (=> d!30375 (= (arrayNoDuplicates!0 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) lt!55745 lt!55762) e!70933)))

(declare-fun e!70934 () Bool)

(declare-fun b!109034 () Bool)

(assert (=> b!109034 (= e!70934 (contains!836 lt!55762 (select (arr!2074 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16)))) lt!55745)))))

(declare-fun b!109035 () Bool)

(declare-fun e!70935 () Bool)

(assert (=> b!109035 (= e!70933 e!70935)))

(declare-fun res!54012 () Bool)

(assert (=> b!109035 (=> (not res!54012) (not e!70935))))

(assert (=> b!109035 (= res!54012 (not e!70934))))

(declare-fun res!54014 () Bool)

(assert (=> b!109035 (=> (not res!54014) (not e!70934))))

(assert (=> b!109035 (= res!54014 (validKeyInArray!0 (select (arr!2074 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16)))) lt!55745)))))

(declare-fun b!109036 () Bool)

(assert (=> b!109036 (= e!70935 e!70932)))

(assert (=> b!109036 (= c!19240 (validKeyInArray!0 (select (arr!2074 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16)))) lt!55745)))))

(assert (= (and d!30375 (not res!54013)) b!109035))

(assert (= (and b!109035 res!54014) b!109034))

(assert (= (and b!109035 res!54012) b!109036))

(assert (= (and b!109036 c!19240) b!109032))

(assert (= (and b!109036 (not c!19240)) b!109033))

(assert (= (or b!109032 b!109033) bm!11600))

(declare-fun m!123293 () Bool)

(assert (=> bm!11600 m!123293))

(declare-fun m!123295 () Bool)

(assert (=> bm!11600 m!123295))

(assert (=> b!109034 m!123293))

(assert (=> b!109034 m!123293))

(declare-fun m!123297 () Bool)

(assert (=> b!109034 m!123297))

(assert (=> b!109035 m!123293))

(assert (=> b!109035 m!123293))

(declare-fun m!123299 () Bool)

(assert (=> b!109035 m!123299))

(assert (=> b!109036 m!123293))

(assert (=> b!109036 m!123293))

(assert (=> b!109036 m!123299))

(assert (=> d!29997 d!30375))

(declare-fun b!109037 () Bool)

(declare-fun e!70941 () Bool)

(declare-fun call!11609 () Bool)

(assert (=> b!109037 (= e!70941 (not call!11609))))

(declare-fun c!19242 () Bool)

(declare-fun c!19244 () Bool)

(declare-fun call!11605 () ListLongMap!1591)

(declare-fun call!11607 () ListLongMap!1591)

(declare-fun call!11606 () ListLongMap!1591)

(declare-fun bm!11601 () Bool)

(declare-fun call!11608 () ListLongMap!1591)

(assert (=> bm!11601 (= call!11607 (+!148 (ite c!19244 call!11605 (ite c!19242 call!11606 call!11608)) (ite (or c!19244 c!19242) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(declare-fun b!109038 () Bool)

(declare-fun e!70937 () Bool)

(declare-fun call!11604 () Bool)

(assert (=> b!109038 (= e!70937 (not call!11604))))

(declare-fun bm!11602 () Bool)

(assert (=> bm!11602 (= call!11608 call!11606)))

(declare-fun b!109039 () Bool)

(declare-fun e!70943 () Bool)

(assert (=> b!109039 (= e!70941 e!70943)))

(declare-fun res!54021 () Bool)

(assert (=> b!109039 (= res!54021 call!11609)))

(assert (=> b!109039 (=> (not res!54021) (not e!70943))))

(declare-fun bm!11603 () Bool)

(declare-fun call!11610 () ListLongMap!1591)

(assert (=> bm!11603 (= call!11610 call!11607)))

(declare-fun bm!11604 () Bool)

(assert (=> bm!11604 (= call!11605 (getCurrentListMapNoExtraKeys!115 lt!55763 lt!55760 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun b!109040 () Bool)

(declare-fun e!70947 () Unit!3339)

(declare-fun Unit!3391 () Unit!3339)

(assert (=> b!109040 (= e!70947 Unit!3391)))

(declare-fun d!30377 () Bool)

(declare-fun e!70940 () Bool)

(assert (=> d!30377 e!70940))

(declare-fun res!54020 () Bool)

(assert (=> d!30377 (=> (not res!54020) (not e!70940))))

(assert (=> d!30377 (= res!54020 (or (bvsge #b00000000000000000000000000000000 (size!2330 lt!55763)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 lt!55763)))))))

(declare-fun lt!56157 () ListLongMap!1591)

(declare-fun lt!56176 () ListLongMap!1591)

(assert (=> d!30377 (= lt!56157 lt!56176)))

(declare-fun lt!56168 () Unit!3339)

(assert (=> d!30377 (= lt!56168 e!70947)))

(declare-fun c!19245 () Bool)

(declare-fun e!70946 () Bool)

(assert (=> d!30377 (= c!19245 e!70946)))

(declare-fun res!54016 () Bool)

(assert (=> d!30377 (=> (not res!54016) (not e!70946))))

(assert (=> d!30377 (= res!54016 (bvslt #b00000000000000000000000000000000 (size!2330 lt!55763)))))

(declare-fun e!70944 () ListLongMap!1591)

(assert (=> d!30377 (= lt!56176 e!70944)))

(assert (=> d!30377 (= c!19244 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30377 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30377 (= (getCurrentListMap!487 lt!55763 lt!55760 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!56157)))

(declare-fun b!109041 () Bool)

(declare-fun e!70939 () Bool)

(assert (=> b!109041 (= e!70937 e!70939)))

(declare-fun res!54022 () Bool)

(assert (=> b!109041 (= res!54022 call!11604)))

(assert (=> b!109041 (=> (not res!54022) (not e!70939))))

(declare-fun b!109042 () Bool)

(declare-fun lt!56163 () Unit!3339)

(assert (=> b!109042 (= e!70947 lt!56163)))

(declare-fun lt!56175 () ListLongMap!1591)

(assert (=> b!109042 (= lt!56175 (getCurrentListMapNoExtraKeys!115 lt!55763 lt!55760 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56173 () (_ BitVec 64))

(assert (=> b!109042 (= lt!56173 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56174 () (_ BitVec 64))

(assert (=> b!109042 (= lt!56174 (select (arr!2074 lt!55763) #b00000000000000000000000000000000))))

(declare-fun lt!56159 () Unit!3339)

(assert (=> b!109042 (= lt!56159 (addStillContains!75 lt!56175 lt!56173 (zeroValue!2479 newMap!16) lt!56174))))

(assert (=> b!109042 (contains!834 (+!148 lt!56175 (tuple2!2423 lt!56173 (zeroValue!2479 newMap!16))) lt!56174)))

(declare-fun lt!56166 () Unit!3339)

(assert (=> b!109042 (= lt!56166 lt!56159)))

(declare-fun lt!56158 () ListLongMap!1591)

(assert (=> b!109042 (= lt!56158 (getCurrentListMapNoExtraKeys!115 lt!55763 lt!55760 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56169 () (_ BitVec 64))

(assert (=> b!109042 (= lt!56169 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56165 () (_ BitVec 64))

(assert (=> b!109042 (= lt!56165 (select (arr!2074 lt!55763) #b00000000000000000000000000000000))))

(declare-fun lt!56170 () Unit!3339)

(assert (=> b!109042 (= lt!56170 (addApplyDifferent!75 lt!56158 lt!56169 (minValue!2479 newMap!16) lt!56165))))

(assert (=> b!109042 (= (apply!99 (+!148 lt!56158 (tuple2!2423 lt!56169 (minValue!2479 newMap!16))) lt!56165) (apply!99 lt!56158 lt!56165))))

(declare-fun lt!56167 () Unit!3339)

(assert (=> b!109042 (= lt!56167 lt!56170)))

(declare-fun lt!56160 () ListLongMap!1591)

(assert (=> b!109042 (= lt!56160 (getCurrentListMapNoExtraKeys!115 lt!55763 lt!55760 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56162 () (_ BitVec 64))

(assert (=> b!109042 (= lt!56162 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56172 () (_ BitVec 64))

(assert (=> b!109042 (= lt!56172 (select (arr!2074 lt!55763) #b00000000000000000000000000000000))))

(declare-fun lt!56156 () Unit!3339)

(assert (=> b!109042 (= lt!56156 (addApplyDifferent!75 lt!56160 lt!56162 (zeroValue!2479 newMap!16) lt!56172))))

(assert (=> b!109042 (= (apply!99 (+!148 lt!56160 (tuple2!2423 lt!56162 (zeroValue!2479 newMap!16))) lt!56172) (apply!99 lt!56160 lt!56172))))

(declare-fun lt!56164 () Unit!3339)

(assert (=> b!109042 (= lt!56164 lt!56156)))

(declare-fun lt!56177 () ListLongMap!1591)

(assert (=> b!109042 (= lt!56177 (getCurrentListMapNoExtraKeys!115 lt!55763 lt!55760 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(declare-fun lt!56161 () (_ BitVec 64))

(assert (=> b!109042 (= lt!56161 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56171 () (_ BitVec 64))

(assert (=> b!109042 (= lt!56171 (select (arr!2074 lt!55763) #b00000000000000000000000000000000))))

(assert (=> b!109042 (= lt!56163 (addApplyDifferent!75 lt!56177 lt!56161 (minValue!2479 newMap!16) lt!56171))))

(assert (=> b!109042 (= (apply!99 (+!148 lt!56177 (tuple2!2423 lt!56161 (minValue!2479 newMap!16))) lt!56171) (apply!99 lt!56177 lt!56171))))

(declare-fun b!109043 () Bool)

(assert (=> b!109043 (= e!70944 (+!148 call!11607 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))

(declare-fun bm!11605 () Bool)

(assert (=> bm!11605 (= call!11609 (contains!834 lt!56157 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109044 () Bool)

(declare-fun c!19246 () Bool)

(assert (=> b!109044 (= c!19246 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!70945 () ListLongMap!1591)

(declare-fun e!70936 () ListLongMap!1591)

(assert (=> b!109044 (= e!70945 e!70936)))

(declare-fun b!109045 () Bool)

(declare-fun e!70948 () Bool)

(assert (=> b!109045 (= e!70948 (= (apply!99 lt!56157 (select (arr!2074 lt!55763) #b00000000000000000000000000000000)) (get!1349 (select (arr!2075 lt!55760) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!109045 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 lt!55760)))))

(assert (=> b!109045 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 lt!55763)))))

(declare-fun b!109046 () Bool)

(assert (=> b!109046 (= e!70946 (validKeyInArray!0 (select (arr!2074 lt!55763) #b00000000000000000000000000000000)))))

(declare-fun b!109047 () Bool)

(assert (=> b!109047 (= e!70940 e!70937)))

(declare-fun c!19243 () Bool)

(assert (=> b!109047 (= c!19243 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!109048 () Bool)

(assert (=> b!109048 (= e!70943 (= (apply!99 lt!56157 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2479 newMap!16)))))

(declare-fun b!109049 () Bool)

(declare-fun res!54017 () Bool)

(assert (=> b!109049 (=> (not res!54017) (not e!70940))))

(declare-fun e!70942 () Bool)

(assert (=> b!109049 (= res!54017 e!70942)))

(declare-fun res!54015 () Bool)

(assert (=> b!109049 (=> res!54015 e!70942)))

(declare-fun e!70938 () Bool)

(assert (=> b!109049 (= res!54015 (not e!70938))))

(declare-fun res!54018 () Bool)

(assert (=> b!109049 (=> (not res!54018) (not e!70938))))

(assert (=> b!109049 (= res!54018 (bvslt #b00000000000000000000000000000000 (size!2330 lt!55763)))))

(declare-fun b!109050 () Bool)

(assert (=> b!109050 (= e!70936 call!11610)))

(declare-fun b!109051 () Bool)

(declare-fun res!54023 () Bool)

(assert (=> b!109051 (=> (not res!54023) (not e!70940))))

(assert (=> b!109051 (= res!54023 e!70941)))

(declare-fun c!19241 () Bool)

(assert (=> b!109051 (= c!19241 (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11606 () Bool)

(assert (=> bm!11606 (= call!11606 call!11605)))

(declare-fun bm!11607 () Bool)

(assert (=> bm!11607 (= call!11604 (contains!834 lt!56157 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109052 () Bool)

(assert (=> b!109052 (= e!70939 (= (apply!99 lt!56157 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2479 newMap!16)))))

(declare-fun b!109053 () Bool)

(assert (=> b!109053 (= e!70936 call!11608)))

(declare-fun b!109054 () Bool)

(assert (=> b!109054 (= e!70945 call!11610)))

(declare-fun b!109055 () Bool)

(assert (=> b!109055 (= e!70942 e!70948)))

(declare-fun res!54019 () Bool)

(assert (=> b!109055 (=> (not res!54019) (not e!70948))))

(assert (=> b!109055 (= res!54019 (contains!834 lt!56157 (select (arr!2074 lt!55763) #b00000000000000000000000000000000)))))

(assert (=> b!109055 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 lt!55763)))))

(declare-fun b!109056 () Bool)

(assert (=> b!109056 (= e!70938 (validKeyInArray!0 (select (arr!2074 lt!55763) #b00000000000000000000000000000000)))))

(declare-fun b!109057 () Bool)

(assert (=> b!109057 (= e!70944 e!70945)))

(assert (=> b!109057 (= c!19242 (and (not (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2407 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!30377 c!19244) b!109043))

(assert (= (and d!30377 (not c!19244)) b!109057))

(assert (= (and b!109057 c!19242) b!109054))

(assert (= (and b!109057 (not c!19242)) b!109044))

(assert (= (and b!109044 c!19246) b!109050))

(assert (= (and b!109044 (not c!19246)) b!109053))

(assert (= (or b!109050 b!109053) bm!11602))

(assert (= (or b!109054 bm!11602) bm!11606))

(assert (= (or b!109054 b!109050) bm!11603))

(assert (= (or b!109043 bm!11606) bm!11604))

(assert (= (or b!109043 bm!11603) bm!11601))

(assert (= (and d!30377 res!54016) b!109046))

(assert (= (and d!30377 c!19245) b!109042))

(assert (= (and d!30377 (not c!19245)) b!109040))

(assert (= (and d!30377 res!54020) b!109049))

(assert (= (and b!109049 res!54018) b!109056))

(assert (= (and b!109049 (not res!54015)) b!109055))

(assert (= (and b!109055 res!54019) b!109045))

(assert (= (and b!109049 res!54017) b!109051))

(assert (= (and b!109051 c!19241) b!109039))

(assert (= (and b!109051 (not c!19241)) b!109037))

(assert (= (and b!109039 res!54021) b!109048))

(assert (= (or b!109039 b!109037) bm!11605))

(assert (= (and b!109051 res!54023) b!109047))

(assert (= (and b!109047 c!19243) b!109041))

(assert (= (and b!109047 (not c!19243)) b!109038))

(assert (= (and b!109041 res!54022) b!109052))

(assert (= (or b!109041 b!109038) bm!11607))

(declare-fun b_lambda!4907 () Bool)

(assert (=> (not b_lambda!4907) (not b!109045)))

(assert (=> b!109045 t!5783))

(declare-fun b_and!6757 () Bool)

(assert (= b_and!6753 (and (=> t!5783 result!3521) b_and!6757)))

(assert (=> b!109045 t!5785))

(declare-fun b_and!6759 () Bool)

(assert (= b_and!6755 (and (=> t!5785 result!3523) b_and!6759)))

(declare-fun m!123301 () Bool)

(assert (=> b!109056 m!123301))

(assert (=> b!109056 m!123301))

(declare-fun m!123303 () Bool)

(assert (=> b!109056 m!123303))

(assert (=> d!30377 m!121521))

(declare-fun m!123305 () Bool)

(assert (=> bm!11607 m!123305))

(declare-fun m!123307 () Bool)

(assert (=> bm!11605 m!123307))

(declare-fun m!123309 () Bool)

(assert (=> b!109052 m!123309))

(declare-fun m!123311 () Bool)

(assert (=> bm!11604 m!123311))

(declare-fun m!123313 () Bool)

(assert (=> b!109043 m!123313))

(declare-fun m!123315 () Bool)

(assert (=> b!109048 m!123315))

(assert (=> b!109046 m!123301))

(assert (=> b!109046 m!123301))

(assert (=> b!109046 m!123303))

(declare-fun m!123317 () Bool)

(assert (=> b!109042 m!123317))

(declare-fun m!123319 () Bool)

(assert (=> b!109042 m!123319))

(declare-fun m!123321 () Bool)

(assert (=> b!109042 m!123321))

(declare-fun m!123323 () Bool)

(assert (=> b!109042 m!123323))

(declare-fun m!123325 () Bool)

(assert (=> b!109042 m!123325))

(declare-fun m!123327 () Bool)

(assert (=> b!109042 m!123327))

(declare-fun m!123329 () Bool)

(assert (=> b!109042 m!123329))

(assert (=> b!109042 m!123311))

(declare-fun m!123331 () Bool)

(assert (=> b!109042 m!123331))

(assert (=> b!109042 m!123327))

(declare-fun m!123333 () Bool)

(assert (=> b!109042 m!123333))

(assert (=> b!109042 m!123321))

(declare-fun m!123335 () Bool)

(assert (=> b!109042 m!123335))

(assert (=> b!109042 m!123323))

(declare-fun m!123337 () Bool)

(assert (=> b!109042 m!123337))

(assert (=> b!109042 m!123317))

(declare-fun m!123339 () Bool)

(assert (=> b!109042 m!123339))

(declare-fun m!123341 () Bool)

(assert (=> b!109042 m!123341))

(declare-fun m!123343 () Bool)

(assert (=> b!109042 m!123343))

(assert (=> b!109042 m!123301))

(declare-fun m!123345 () Bool)

(assert (=> b!109042 m!123345))

(assert (=> b!109055 m!123301))

(assert (=> b!109055 m!123301))

(declare-fun m!123347 () Bool)

(assert (=> b!109055 m!123347))

(declare-fun m!123349 () Bool)

(assert (=> b!109045 m!123349))

(assert (=> b!109045 m!121569))

(declare-fun m!123351 () Bool)

(assert (=> b!109045 m!123351))

(assert (=> b!109045 m!123301))

(declare-fun m!123353 () Bool)

(assert (=> b!109045 m!123353))

(assert (=> b!109045 m!123301))

(assert (=> b!109045 m!121569))

(assert (=> b!109045 m!123349))

(declare-fun m!123355 () Bool)

(assert (=> bm!11601 m!123355))

(assert (=> d!29997 d!30377))

(declare-fun d!30379 () Bool)

(assert (=> d!30379 (= (arrayCountValidKeys!0 lt!55764 (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (bvadd (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!56180 () Unit!3339)

(declare-fun choose!2 (array!4374 (_ BitVec 32)) Unit!3339)

(assert (=> d!30379 (= lt!56180 (choose!2 lt!55764 (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408))))))

(declare-fun e!70951 () Bool)

(assert (=> d!30379 e!70951))

(declare-fun res!54028 () Bool)

(assert (=> d!30379 (=> (not res!54028) (not e!70951))))

(assert (=> d!30379 (= res!54028 (and (bvsge (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) #b00000000000000000000000000000000) (bvslt (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (size!2330 lt!55764))))))

(assert (=> d!30379 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!55764 (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408))) lt!56180)))

(declare-fun b!109062 () Bool)

(declare-fun res!54029 () Bool)

(assert (=> b!109062 (=> (not res!54029) (not e!70951))))

(assert (=> b!109062 (= res!54029 (validKeyInArray!0 (select (arr!2074 lt!55764) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)))))))

(declare-fun b!109063 () Bool)

(assert (=> b!109063 (= e!70951 (bvslt (size!2330 lt!55764) #b01111111111111111111111111111111))))

(assert (= (and d!30379 res!54028) b!109062))

(assert (= (and b!109062 res!54029) b!109063))

(assert (=> d!30379 m!122013))

(declare-fun m!123357 () Bool)

(assert (=> d!30379 m!123357))

(assert (=> b!109062 m!123281))

(assert (=> b!109062 m!123281))

(assert (=> b!109062 m!123283))

(assert (=> d!29997 d!30379))

(assert (=> d!29997 d!29977))

(declare-fun d!30381 () Bool)

(declare-fun e!70954 () Bool)

(assert (=> d!30381 e!70954))

(declare-fun res!54032 () Bool)

(assert (=> d!30381 (=> (not res!54032) (not e!70954))))

(assert (=> d!30381 (= res!54032 (and (bvsge (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) #b00000000000000000000000000000000) (bvslt (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (size!2330 (_keys!4316 newMap!16)))))))

(declare-fun lt!56183 () Unit!3339)

(declare-fun choose!102 ((_ BitVec 64) array!4374 (_ BitVec 32) (_ BitVec 32)) Unit!3339)

(assert (=> d!30381 (= lt!56183 (choose!102 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (mask!6764 newMap!16)))))

(assert (=> d!30381 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30381 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (mask!6764 newMap!16)) lt!56183)))

(declare-fun b!109066 () Bool)

(assert (=> b!109066 (= e!70954 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) (mask!6764 newMap!16)))))

(assert (= (and d!30381 res!54032) b!109066))

(assert (=> d!30381 m!121177))

(declare-fun m!123359 () Bool)

(assert (=> d!30381 m!123359))

(assert (=> d!30381 m!121521))

(assert (=> b!109066 m!122003))

(assert (=> b!109066 m!121991))

(assert (=> d!29997 d!30381))

(declare-fun b!109067 () Bool)

(declare-fun e!70957 () Bool)

(declare-fun call!11611 () Bool)

(assert (=> b!109067 (= e!70957 call!11611)))

(declare-fun d!30383 () Bool)

(declare-fun res!54034 () Bool)

(declare-fun e!70956 () Bool)

(assert (=> d!30383 (=> res!54034 e!70956)))

(assert (=> d!30383 (= res!54034 (bvsge #b00000000000000000000000000000000 (size!2330 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))))))))

(assert (=> d!30383 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) (mask!6764 newMap!16)) e!70956)))

(declare-fun b!109068 () Bool)

(declare-fun e!70955 () Bool)

(assert (=> b!109068 (= e!70955 e!70957)))

(declare-fun lt!56184 () (_ BitVec 64))

(assert (=> b!109068 (= lt!56184 (select (arr!2074 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56186 () Unit!3339)

(assert (=> b!109068 (= lt!56186 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) lt!56184 #b00000000000000000000000000000000))))

(assert (=> b!109068 (arrayContainsKey!0 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) lt!56184 #b00000000000000000000000000000000)))

(declare-fun lt!56185 () Unit!3339)

(assert (=> b!109068 (= lt!56185 lt!56186)))

(declare-fun res!54033 () Bool)

(assert (=> b!109068 (= res!54033 (= (seekEntryOrOpen!0 (select (arr!2074 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000) (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) (mask!6764 newMap!16)) (Found!270 #b00000000000000000000000000000000)))))

(assert (=> b!109068 (=> (not res!54033) (not e!70957))))

(declare-fun bm!11608 () Bool)

(assert (=> bm!11608 (= call!11611 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16))) (mask!6764 newMap!16)))))

(declare-fun b!109069 () Bool)

(assert (=> b!109069 (= e!70956 e!70955)))

(declare-fun c!19247 () Bool)

(assert (=> b!109069 (= c!19247 (validKeyInArray!0 (select (arr!2074 (array!4375 (store (arr!2074 (_keys!4316 newMap!16)) (ite c!18936 (index!3232 lt!55408) (index!3229 lt!55408)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (size!2330 (_keys!4316 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!109070 () Bool)

(assert (=> b!109070 (= e!70955 call!11611)))

(assert (= (and d!30383 (not res!54034)) b!109069))

(assert (= (and b!109069 c!19247) b!109068))

(assert (= (and b!109069 (not c!19247)) b!109070))

(assert (= (and b!109068 res!54033) b!109067))

(assert (= (or b!109067 b!109070) bm!11608))

(assert (=> b!109068 m!123199))

(declare-fun m!123361 () Bool)

(assert (=> b!109068 m!123361))

(declare-fun m!123363 () Bool)

(assert (=> b!109068 m!123363))

(assert (=> b!109068 m!123199))

(declare-fun m!123365 () Bool)

(assert (=> b!109068 m!123365))

(declare-fun m!123367 () Bool)

(assert (=> bm!11608 m!123367))

(assert (=> b!109069 m!123199))

(assert (=> b!109069 m!123199))

(assert (=> b!109069 m!123201))

(assert (=> d!29997 d!30383))

(assert (=> d!29991 d!29993))

(assert (=> d!29991 d!29995))

(declare-fun d!30385 () Bool)

(assert (=> d!30385 (isDefined!110 (getValueByKey!156 (toList!811 lt!55247) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30385 true))

(declare-fun _$12!356 () Unit!3339)

(assert (=> d!30385 (= (choose!683 (toList!811 lt!55247) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) _$12!356)))

(declare-fun bs!4482 () Bool)

(assert (= bs!4482 d!30385))

(assert (=> bs!4482 m!121177))

(assert (=> bs!4482 m!121387))

(assert (=> bs!4482 m!121387))

(assert (=> bs!4482 m!121389))

(assert (=> d!29991 d!30385))

(declare-fun d!30387 () Bool)

(declare-fun res!54035 () Bool)

(declare-fun e!70958 () Bool)

(assert (=> d!30387 (=> res!54035 e!70958)))

(assert (=> d!30387 (= res!54035 (or ((_ is Nil!1645) (toList!811 lt!55247)) ((_ is Nil!1645) (t!5776 (toList!811 lt!55247)))))))

(assert (=> d!30387 (= (isStrictlySorted!305 (toList!811 lt!55247)) e!70958)))

(declare-fun b!109071 () Bool)

(declare-fun e!70959 () Bool)

(assert (=> b!109071 (= e!70958 e!70959)))

(declare-fun res!54036 () Bool)

(assert (=> b!109071 (=> (not res!54036) (not e!70959))))

(assert (=> b!109071 (= res!54036 (bvslt (_1!1221 (h!2242 (toList!811 lt!55247))) (_1!1221 (h!2242 (t!5776 (toList!811 lt!55247))))))))

(declare-fun b!109072 () Bool)

(assert (=> b!109072 (= e!70959 (isStrictlySorted!305 (t!5776 (toList!811 lt!55247))))))

(assert (= (and d!30387 (not res!54035)) b!109071))

(assert (= (and b!109071 res!54036) b!109072))

(declare-fun m!123369 () Bool)

(assert (=> b!109072 m!123369))

(assert (=> d!29991 d!30387))

(declare-fun d!30389 () Bool)

(assert (=> d!30389 (= (get!1352 (getValueByKey!156 (toList!811 (+!148 lt!55482 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55494)) (v!2917 (getValueByKey!156 (toList!811 (+!148 lt!55482 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55494)))))

(assert (=> d!30037 d!30389))

(declare-fun d!30391 () Bool)

(declare-fun c!19248 () Bool)

(assert (=> d!30391 (= c!19248 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55482 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))) (= (_1!1221 (h!2242 (toList!811 (+!148 lt!55482 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))) lt!55494)))))

(declare-fun e!70960 () Option!162)

(assert (=> d!30391 (= (getValueByKey!156 (toList!811 (+!148 lt!55482 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55494) e!70960)))

(declare-fun b!109075 () Bool)

(declare-fun e!70961 () Option!162)

(assert (=> b!109075 (= e!70961 (getValueByKey!156 (t!5776 (toList!811 (+!148 lt!55482 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))) lt!55494))))

(declare-fun b!109076 () Bool)

(assert (=> b!109076 (= e!70961 None!160)))

(declare-fun b!109074 () Bool)

(assert (=> b!109074 (= e!70960 e!70961)))

(declare-fun c!19249 () Bool)

(assert (=> b!109074 (= c!19249 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55482 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))) (not (= (_1!1221 (h!2242 (toList!811 (+!148 lt!55482 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))) lt!55494))))))

(declare-fun b!109073 () Bool)

(assert (=> b!109073 (= e!70960 (Some!161 (_2!1221 (h!2242 (toList!811 (+!148 lt!55482 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))))

(assert (= (and d!30391 c!19248) b!109073))

(assert (= (and d!30391 (not c!19248)) b!109074))

(assert (= (and b!109074 c!19249) b!109075))

(assert (= (and b!109074 (not c!19249)) b!109076))

(declare-fun m!123371 () Bool)

(assert (=> b!109075 m!123371))

(assert (=> d!30037 d!30391))

(assert (=> d!30083 d!29889))

(assert (=> b!108328 d!30333))

(declare-fun d!30393 () Bool)

(declare-fun res!54037 () Bool)

(declare-fun e!70962 () Bool)

(assert (=> d!30393 (=> res!54037 e!70962)))

(assert (=> d!30393 (= res!54037 (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (=> d!30393 (= (arrayContainsKey!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!70962)))

(declare-fun b!109077 () Bool)

(declare-fun e!70963 () Bool)

(assert (=> b!109077 (= e!70962 e!70963)))

(declare-fun res!54038 () Bool)

(assert (=> b!109077 (=> (not res!54038) (not e!70963))))

(assert (=> b!109077 (= res!54038 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!109078 () Bool)

(assert (=> b!109078 (= e!70963 (arrayContainsKey!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!30393 (not res!54037)) b!109077))

(assert (= (and b!109077 res!54038) b!109078))

(assert (=> d!30393 m!123093))

(assert (=> b!109078 m!121177))

(declare-fun m!123373 () Bool)

(assert (=> b!109078 m!123373))

(assert (=> b!108486 d!30393))

(declare-fun d!30395 () Bool)

(assert (=> d!30395 (= (isDefined!110 (getValueByKey!156 (toList!811 lt!55303) (_1!1221 lt!55252))) (not (isEmpty!379 (getValueByKey!156 (toList!811 lt!55303) (_1!1221 lt!55252)))))))

(declare-fun bs!4483 () Bool)

(assert (= bs!4483 d!30395))

(assert (=> bs!4483 m!121297))

(declare-fun m!123375 () Bool)

(assert (=> bs!4483 m!123375))

(assert (=> b!108275 d!30395))

(assert (=> b!108275 d!29985))

(declare-fun d!30397 () Bool)

(declare-fun res!54039 () Bool)

(declare-fun e!70964 () Bool)

(assert (=> d!30397 (=> res!54039 e!70964)))

(assert (=> d!30397 (= res!54039 (and ((_ is Cons!1644) (toList!811 lt!55324)) (= (_1!1221 (h!2242 (toList!811 lt!55324))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30397 (= (containsKey!160 (toList!811 lt!55324) #b1000000000000000000000000000000000000000000000000000000000000000) e!70964)))

(declare-fun b!109079 () Bool)

(declare-fun e!70965 () Bool)

(assert (=> b!109079 (= e!70964 e!70965)))

(declare-fun res!54040 () Bool)

(assert (=> b!109079 (=> (not res!54040) (not e!70965))))

(assert (=> b!109079 (= res!54040 (and (or (not ((_ is Cons!1644) (toList!811 lt!55324))) (bvsle (_1!1221 (h!2242 (toList!811 lt!55324))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1644) (toList!811 lt!55324)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55324))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109080 () Bool)

(assert (=> b!109080 (= e!70965 (containsKey!160 (t!5776 (toList!811 lt!55324)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30397 (not res!54039)) b!109079))

(assert (= (and b!109079 res!54040) b!109080))

(declare-fun m!123377 () Bool)

(assert (=> b!109080 m!123377))

(assert (=> d!29921 d!30397))

(assert (=> d!30031 d!30013))

(assert (=> d!30031 d!30029))

(declare-fun d!30399 () Bool)

(assert (=> d!30399 (contains!834 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55496)))

(assert (=> d!30399 true))

(declare-fun _$35!351 () Unit!3339)

(assert (=> d!30399 (= (choose!685 lt!55497 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))) lt!55496) _$35!351)))

(declare-fun bs!4484 () Bool)

(assert (= bs!4484 d!30399))

(assert (=> bs!4484 m!121465))

(assert (=> bs!4484 m!121465))

(assert (=> bs!4484 m!121467))

(assert (=> d!30031 d!30399))

(declare-fun d!30401 () Bool)

(declare-fun e!70967 () Bool)

(assert (=> d!30401 e!70967))

(declare-fun res!54041 () Bool)

(assert (=> d!30401 (=> res!54041 e!70967)))

(declare-fun lt!56187 () Bool)

(assert (=> d!30401 (= res!54041 (not lt!56187))))

(declare-fun lt!56188 () Bool)

(assert (=> d!30401 (= lt!56187 lt!56188)))

(declare-fun lt!56189 () Unit!3339)

(declare-fun e!70966 () Unit!3339)

(assert (=> d!30401 (= lt!56189 e!70966)))

(declare-fun c!19250 () Bool)

(assert (=> d!30401 (= c!19250 lt!56188)))

(assert (=> d!30401 (= lt!56188 (containsKey!160 (toList!811 lt!55497) lt!55496))))

(assert (=> d!30401 (= (contains!834 lt!55497 lt!55496) lt!56187)))

(declare-fun b!109082 () Bool)

(declare-fun lt!56190 () Unit!3339)

(assert (=> b!109082 (= e!70966 lt!56190)))

(assert (=> b!109082 (= lt!56190 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55497) lt!55496))))

(assert (=> b!109082 (isDefined!110 (getValueByKey!156 (toList!811 lt!55497) lt!55496))))

(declare-fun b!109083 () Bool)

(declare-fun Unit!3392 () Unit!3339)

(assert (=> b!109083 (= e!70966 Unit!3392)))

(declare-fun b!109084 () Bool)

(assert (=> b!109084 (= e!70967 (isDefined!110 (getValueByKey!156 (toList!811 lt!55497) lt!55496)))))

(assert (= (and d!30401 c!19250) b!109082))

(assert (= (and d!30401 (not c!19250)) b!109083))

(assert (= (and d!30401 (not res!54041)) b!109084))

(declare-fun m!123379 () Bool)

(assert (=> d!30401 m!123379))

(declare-fun m!123381 () Bool)

(assert (=> b!109082 m!123381))

(declare-fun m!123383 () Bool)

(assert (=> b!109082 m!123383))

(assert (=> b!109082 m!123383))

(declare-fun m!123385 () Bool)

(assert (=> b!109082 m!123385))

(assert (=> b!109084 m!123383))

(assert (=> b!109084 m!123383))

(assert (=> b!109084 m!123385))

(assert (=> d!30031 d!30401))

(declare-fun d!30403 () Bool)

(declare-fun e!70969 () Bool)

(assert (=> d!30403 e!70969))

(declare-fun res!54042 () Bool)

(assert (=> d!30403 (=> res!54042 e!70969)))

(declare-fun lt!56191 () Bool)

(assert (=> d!30403 (= res!54042 (not lt!56191))))

(declare-fun lt!56192 () Bool)

(assert (=> d!30403 (= lt!56191 lt!56192)))

(declare-fun lt!56193 () Unit!3339)

(declare-fun e!70968 () Unit!3339)

(assert (=> d!30403 (= lt!56193 e!70968)))

(declare-fun c!19251 () Bool)

(assert (=> d!30403 (= c!19251 lt!56192)))

(assert (=> d!30403 (= lt!56192 (containsKey!160 (toList!811 lt!55648) (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (=> d!30403 (= (contains!834 lt!55648 (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))) lt!56191)))

(declare-fun b!109085 () Bool)

(declare-fun lt!56194 () Unit!3339)

(assert (=> b!109085 (= e!70968 lt!56194)))

(assert (=> b!109085 (= lt!56194 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55648) (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (=> b!109085 (isDefined!110 (getValueByKey!156 (toList!811 lt!55648) (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!109086 () Bool)

(declare-fun Unit!3393 () Unit!3339)

(assert (=> b!109086 (= e!70968 Unit!3393)))

(declare-fun b!109087 () Bool)

(assert (=> b!109087 (= e!70969 (isDefined!110 (getValueByKey!156 (toList!811 lt!55648) (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30403 c!19251) b!109085))

(assert (= (and d!30403 (not c!19251)) b!109086))

(assert (= (and d!30403 (not res!54042)) b!109087))

(declare-fun m!123387 () Bool)

(assert (=> d!30403 m!123387))

(declare-fun m!123389 () Bool)

(assert (=> b!109085 m!123389))

(assert (=> b!109085 m!121903))

(assert (=> b!109085 m!121903))

(declare-fun m!123391 () Bool)

(assert (=> b!109085 m!123391))

(assert (=> b!109087 m!121903))

(assert (=> b!109087 m!121903))

(assert (=> b!109087 m!123391))

(assert (=> d!29983 d!30403))

(declare-fun c!19252 () Bool)

(declare-fun d!30405 () Bool)

(assert (=> d!30405 (= c!19252 (and ((_ is Cons!1644) lt!55646) (= (_1!1221 (h!2242 lt!55646)) (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun e!70970 () Option!162)

(assert (=> d!30405 (= (getValueByKey!156 lt!55646 (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))) e!70970)))

(declare-fun e!70971 () Option!162)

(declare-fun b!109090 () Bool)

(assert (=> b!109090 (= e!70971 (getValueByKey!156 (t!5776 lt!55646) (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!109091 () Bool)

(assert (=> b!109091 (= e!70971 None!160)))

(declare-fun b!109089 () Bool)

(assert (=> b!109089 (= e!70970 e!70971)))

(declare-fun c!19253 () Bool)

(assert (=> b!109089 (= c!19253 (and ((_ is Cons!1644) lt!55646) (not (= (_1!1221 (h!2242 lt!55646)) (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))))

(declare-fun b!109088 () Bool)

(assert (=> b!109088 (= e!70970 (Some!161 (_2!1221 (h!2242 lt!55646))))))

(assert (= (and d!30405 c!19252) b!109088))

(assert (= (and d!30405 (not c!19252)) b!109089))

(assert (= (and b!109089 c!19253) b!109090))

(assert (= (and b!109089 (not c!19253)) b!109091))

(declare-fun m!123393 () Bool)

(assert (=> b!109090 m!123393))

(assert (=> d!29983 d!30405))

(declare-fun d!30407 () Bool)

(assert (=> d!30407 (= (getValueByKey!156 lt!55646 (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))) (Some!161 (_2!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun lt!56195 () Unit!3339)

(assert (=> d!30407 (= lt!56195 (choose!680 lt!55646 (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) (_2!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!70972 () Bool)

(assert (=> d!30407 e!70972))

(declare-fun res!54043 () Bool)

(assert (=> d!30407 (=> (not res!54043) (not e!70972))))

(assert (=> d!30407 (= res!54043 (isStrictlySorted!305 lt!55646))))

(assert (=> d!30407 (= (lemmaContainsTupThenGetReturnValue!74 lt!55646 (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) (_2!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))) lt!56195)))

(declare-fun b!109092 () Bool)

(declare-fun res!54044 () Bool)

(assert (=> b!109092 (=> (not res!54044) (not e!70972))))

(assert (=> b!109092 (= res!54044 (containsKey!160 lt!55646 (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!109093 () Bool)

(assert (=> b!109093 (= e!70972 (contains!835 lt!55646 (tuple2!2423 (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) (_2!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(assert (= (and d!30407 res!54043) b!109092))

(assert (= (and b!109092 res!54044) b!109093))

(assert (=> d!30407 m!121897))

(declare-fun m!123395 () Bool)

(assert (=> d!30407 m!123395))

(declare-fun m!123397 () Bool)

(assert (=> d!30407 m!123397))

(declare-fun m!123399 () Bool)

(assert (=> b!109092 m!123399))

(declare-fun m!123401 () Bool)

(assert (=> b!109093 m!123401))

(assert (=> d!29983 d!30407))

(declare-fun b!109094 () Bool)

(declare-fun c!19254 () Bool)

(assert (=> b!109094 (= c!19254 (and ((_ is Cons!1644) (toList!811 (ite c!18960 call!11458 (ite c!18958 call!11459 call!11461)))) (bvsgt (_1!1221 (h!2242 (toList!811 (ite c!18960 call!11458 (ite c!18958 call!11459 call!11461))))) (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun e!70973 () List!1648)

(declare-fun e!70974 () List!1648)

(assert (=> b!109094 (= e!70973 e!70974)))

(declare-fun b!109095 () Bool)

(declare-fun e!70975 () List!1648)

(declare-fun call!11613 () List!1648)

(assert (=> b!109095 (= e!70975 call!11613)))

(declare-fun bm!11609 () Bool)

(declare-fun c!19255 () Bool)

(declare-fun e!70977 () List!1648)

(assert (=> bm!11609 (= call!11613 ($colon$colon!81 e!70977 (ite c!19255 (h!2242 (toList!811 (ite c!18960 call!11458 (ite c!18958 call!11459 call!11461)))) (tuple2!2423 (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) (_2!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))))

(declare-fun c!19256 () Bool)

(assert (=> bm!11609 (= c!19256 c!19255)))

(declare-fun b!109096 () Bool)

(declare-fun call!11612 () List!1648)

(assert (=> b!109096 (= e!70974 call!11612)))

(declare-fun b!109097 () Bool)

(declare-fun call!11614 () List!1648)

(assert (=> b!109097 (= e!70973 call!11614)))

(declare-fun d!30409 () Bool)

(declare-fun e!70976 () Bool)

(assert (=> d!30409 e!70976))

(declare-fun res!54045 () Bool)

(assert (=> d!30409 (=> (not res!54045) (not e!70976))))

(declare-fun lt!56196 () List!1648)

(assert (=> d!30409 (= res!54045 (isStrictlySorted!305 lt!56196))))

(assert (=> d!30409 (= lt!56196 e!70975)))

(assert (=> d!30409 (= c!19255 (and ((_ is Cons!1644) (toList!811 (ite c!18960 call!11458 (ite c!18958 call!11459 call!11461)))) (bvslt (_1!1221 (h!2242 (toList!811 (ite c!18960 call!11458 (ite c!18958 call!11459 call!11461))))) (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(assert (=> d!30409 (isStrictlySorted!305 (toList!811 (ite c!18960 call!11458 (ite c!18958 call!11459 call!11461))))))

(assert (=> d!30409 (= (insertStrictlySorted!76 (toList!811 (ite c!18960 call!11458 (ite c!18958 call!11459 call!11461))) (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) (_2!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))) lt!56196)))

(declare-fun b!109098 () Bool)

(assert (=> b!109098 (= e!70975 e!70973)))

(declare-fun c!19257 () Bool)

(assert (=> b!109098 (= c!19257 (and ((_ is Cons!1644) (toList!811 (ite c!18960 call!11458 (ite c!18958 call!11459 call!11461)))) (= (_1!1221 (h!2242 (toList!811 (ite c!18960 call!11458 (ite c!18958 call!11459 call!11461))))) (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun b!109099 () Bool)

(declare-fun res!54046 () Bool)

(assert (=> b!109099 (=> (not res!54046) (not e!70976))))

(assert (=> b!109099 (= res!54046 (containsKey!160 lt!56196 (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun bm!11610 () Bool)

(assert (=> bm!11610 (= call!11614 call!11613)))

(declare-fun bm!11611 () Bool)

(assert (=> bm!11611 (= call!11612 call!11614)))

(declare-fun b!109100 () Bool)

(assert (=> b!109100 (= e!70977 (insertStrictlySorted!76 (t!5776 (toList!811 (ite c!18960 call!11458 (ite c!18958 call!11459 call!11461)))) (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) (_2!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!109101 () Bool)

(assert (=> b!109101 (= e!70974 call!11612)))

(declare-fun b!109102 () Bool)

(assert (=> b!109102 (= e!70976 (contains!835 lt!56196 (tuple2!2423 (_1!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) (_2!1221 (ite (or c!18960 c!18958) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun b!109103 () Bool)

(assert (=> b!109103 (= e!70977 (ite c!19257 (t!5776 (toList!811 (ite c!18960 call!11458 (ite c!18958 call!11459 call!11461)))) (ite c!19254 (Cons!1644 (h!2242 (toList!811 (ite c!18960 call!11458 (ite c!18958 call!11459 call!11461)))) (t!5776 (toList!811 (ite c!18960 call!11458 (ite c!18958 call!11459 call!11461))))) Nil!1645)))))

(assert (= (and d!30409 c!19255) b!109095))

(assert (= (and d!30409 (not c!19255)) b!109098))

(assert (= (and b!109098 c!19257) b!109097))

(assert (= (and b!109098 (not c!19257)) b!109094))

(assert (= (and b!109094 c!19254) b!109101))

(assert (= (and b!109094 (not c!19254)) b!109096))

(assert (= (or b!109101 b!109096) bm!11611))

(assert (= (or b!109097 bm!11611) bm!11610))

(assert (= (or b!109095 bm!11610) bm!11609))

(assert (= (and bm!11609 c!19256) b!109100))

(assert (= (and bm!11609 (not c!19256)) b!109103))

(assert (= (and d!30409 res!54045) b!109099))

(assert (= (and b!109099 res!54046) b!109102))

(declare-fun m!123403 () Bool)

(assert (=> b!109102 m!123403))

(declare-fun m!123405 () Bool)

(assert (=> b!109099 m!123405))

(declare-fun m!123407 () Bool)

(assert (=> bm!11609 m!123407))

(declare-fun m!123409 () Bool)

(assert (=> d!30409 m!123409))

(declare-fun m!123411 () Bool)

(assert (=> d!30409 m!123411))

(declare-fun m!123413 () Bool)

(assert (=> b!109100 m!123413))

(assert (=> d!29983 d!30409))

(declare-fun d!30411 () Bool)

(declare-fun lt!56197 () Bool)

(assert (=> d!30411 (= lt!56197 (select (content!110 lt!55829) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))))))

(declare-fun e!70978 () Bool)

(assert (=> d!30411 (= lt!56197 e!70978)))

(declare-fun res!54048 () Bool)

(assert (=> d!30411 (=> (not res!54048) (not e!70978))))

(assert (=> d!30411 (= res!54048 ((_ is Cons!1644) lt!55829))))

(assert (=> d!30411 (= (contains!835 lt!55829 (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))) lt!56197)))

(declare-fun b!109104 () Bool)

(declare-fun e!70979 () Bool)

(assert (=> b!109104 (= e!70978 e!70979)))

(declare-fun res!54047 () Bool)

(assert (=> b!109104 (=> res!54047 e!70979)))

(assert (=> b!109104 (= res!54047 (= (h!2242 lt!55829) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))))))

(declare-fun b!109105 () Bool)

(assert (=> b!109105 (= e!70979 (contains!835 (t!5776 lt!55829) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))))))

(assert (= (and d!30411 res!54048) b!109104))

(assert (= (and b!109104 (not res!54047)) b!109105))

(declare-fun m!123415 () Bool)

(assert (=> d!30411 m!123415))

(declare-fun m!123417 () Bool)

(assert (=> d!30411 m!123417))

(declare-fun m!123419 () Bool)

(assert (=> b!109105 m!123419))

(assert (=> b!108477 d!30411))

(declare-fun d!30413 () Bool)

(assert (=> d!30413 (= ($colon$colon!81 e!70463 (ite c!19020 (h!2242 (toList!811 lt!55250)) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249)))) (Cons!1644 (ite c!19020 (h!2242 (toList!811 lt!55250)) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))) e!70463))))

(assert (=> bm!11488 d!30413))

(declare-fun d!30415 () Bool)

(declare-fun lt!56198 () Bool)

(assert (=> d!30415 (= lt!56198 (select (content!110 (toList!811 lt!55803)) (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun e!70980 () Bool)

(assert (=> d!30415 (= lt!56198 e!70980)))

(declare-fun res!54050 () Bool)

(assert (=> d!30415 (=> (not res!54050) (not e!70980))))

(assert (=> d!30415 (= res!54050 ((_ is Cons!1644) (toList!811 lt!55803)))))

(assert (=> d!30415 (= (contains!835 (toList!811 lt!55803) (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!56198)))

(declare-fun b!109106 () Bool)

(declare-fun e!70981 () Bool)

(assert (=> b!109106 (= e!70980 e!70981)))

(declare-fun res!54049 () Bool)

(assert (=> b!109106 (=> res!54049 e!70981)))

(assert (=> b!109106 (= res!54049 (= (h!2242 (toList!811 lt!55803)) (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!109107 () Bool)

(assert (=> b!109107 (= e!70981 (contains!835 (t!5776 (toList!811 lt!55803)) (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(assert (= (and d!30415 res!54050) b!109106))

(assert (= (and b!109106 (not res!54049)) b!109107))

(declare-fun m!123421 () Bool)

(assert (=> d!30415 m!123421))

(declare-fun m!123423 () Bool)

(assert (=> d!30415 m!123423))

(declare-fun m!123425 () Bool)

(assert (=> b!109107 m!123425))

(assert (=> b!108445 d!30415))

(assert (=> b!108368 d!30059))

(declare-fun d!30417 () Bool)

(assert (=> d!30417 (= (isDefined!110 (getValueByKey!156 (toList!811 lt!55479) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!379 (getValueByKey!156 (toList!811 lt!55479) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4485 () Bool)

(assert (= bs!4485 d!30417))

(assert (=> bs!4485 m!122201))

(declare-fun m!123427 () Bool)

(assert (=> bs!4485 m!123427))

(assert (=> b!108459 d!30417))

(declare-fun d!30419 () Bool)

(declare-fun c!19258 () Bool)

(assert (=> d!30419 (= c!19258 (and ((_ is Cons!1644) (toList!811 lt!55479)) (= (_1!1221 (h!2242 (toList!811 lt!55479))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!70982 () Option!162)

(assert (=> d!30419 (= (getValueByKey!156 (toList!811 lt!55479) #b0000000000000000000000000000000000000000000000000000000000000000) e!70982)))

(declare-fun b!109110 () Bool)

(declare-fun e!70983 () Option!162)

(assert (=> b!109110 (= e!70983 (getValueByKey!156 (t!5776 (toList!811 lt!55479)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109111 () Bool)

(assert (=> b!109111 (= e!70983 None!160)))

(declare-fun b!109109 () Bool)

(assert (=> b!109109 (= e!70982 e!70983)))

(declare-fun c!19259 () Bool)

(assert (=> b!109109 (= c!19259 (and ((_ is Cons!1644) (toList!811 lt!55479)) (not (= (_1!1221 (h!2242 (toList!811 lt!55479))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!109108 () Bool)

(assert (=> b!109108 (= e!70982 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55479)))))))

(assert (= (and d!30419 c!19258) b!109108))

(assert (= (and d!30419 (not c!19258)) b!109109))

(assert (= (and b!109109 c!19259) b!109110))

(assert (= (and b!109109 (not c!19259)) b!109111))

(declare-fun m!123429 () Bool)

(assert (=> b!109110 m!123429))

(assert (=> b!108459 d!30419))

(assert (=> b!108080 d!30151))

(declare-fun d!30421 () Bool)

(declare-fun res!54051 () Bool)

(declare-fun e!70984 () Bool)

(assert (=> d!30421 (=> res!54051 e!70984)))

(assert (=> d!30421 (= res!54051 (or ((_ is Nil!1645) lt!55605) ((_ is Nil!1645) (t!5776 lt!55605))))))

(assert (=> d!30421 (= (isStrictlySorted!305 lt!55605) e!70984)))

(declare-fun b!109112 () Bool)

(declare-fun e!70985 () Bool)

(assert (=> b!109112 (= e!70984 e!70985)))

(declare-fun res!54052 () Bool)

(assert (=> b!109112 (=> (not res!54052) (not e!70985))))

(assert (=> b!109112 (= res!54052 (bvslt (_1!1221 (h!2242 lt!55605)) (_1!1221 (h!2242 (t!5776 lt!55605)))))))

(declare-fun b!109113 () Bool)

(assert (=> b!109113 (= e!70985 (isStrictlySorted!305 (t!5776 lt!55605)))))

(assert (= (and d!30421 (not res!54051)) b!109112))

(assert (= (and b!109112 res!54052) b!109113))

(declare-fun m!123431 () Bool)

(assert (=> b!109113 m!123431))

(assert (=> d!29935 d!30421))

(declare-fun d!30423 () Bool)

(declare-fun res!54053 () Bool)

(declare-fun e!70986 () Bool)

(assert (=> d!30423 (=> res!54053 e!70986)))

(assert (=> d!30423 (= res!54053 (or ((_ is Nil!1645) (toList!811 (+!148 lt!55250 lt!55252))) ((_ is Nil!1645) (t!5776 (toList!811 (+!148 lt!55250 lt!55252))))))))

(assert (=> d!30423 (= (isStrictlySorted!305 (toList!811 (+!148 lt!55250 lt!55252))) e!70986)))

(declare-fun b!109114 () Bool)

(declare-fun e!70987 () Bool)

(assert (=> b!109114 (= e!70986 e!70987)))

(declare-fun res!54054 () Bool)

(assert (=> b!109114 (=> (not res!54054) (not e!70987))))

(assert (=> b!109114 (= res!54054 (bvslt (_1!1221 (h!2242 (toList!811 (+!148 lt!55250 lt!55252)))) (_1!1221 (h!2242 (t!5776 (toList!811 (+!148 lt!55250 lt!55252)))))))))

(declare-fun b!109115 () Bool)

(assert (=> b!109115 (= e!70987 (isStrictlySorted!305 (t!5776 (toList!811 (+!148 lt!55250 lt!55252)))))))

(assert (= (and d!30423 (not res!54053)) b!109114))

(assert (= (and b!109114 res!54054) b!109115))

(assert (=> b!109115 m!122803))

(assert (=> d!29935 d!30423))

(declare-fun d!30425 () Bool)

(declare-fun res!54055 () Bool)

(declare-fun e!70988 () Bool)

(assert (=> d!30425 (=> res!54055 e!70988)))

(assert (=> d!30425 (= res!54055 (and ((_ is Cons!1644) (toList!811 lt!55335)) (= (_1!1221 (h!2242 (toList!811 lt!55335))) (_1!1221 lt!55249))))))

(assert (=> d!30425 (= (containsKey!160 (toList!811 lt!55335) (_1!1221 lt!55249)) e!70988)))

(declare-fun b!109116 () Bool)

(declare-fun e!70989 () Bool)

(assert (=> b!109116 (= e!70988 e!70989)))

(declare-fun res!54056 () Bool)

(assert (=> b!109116 (=> (not res!54056) (not e!70989))))

(assert (=> b!109116 (= res!54056 (and (or (not ((_ is Cons!1644) (toList!811 lt!55335))) (bvsle (_1!1221 (h!2242 (toList!811 lt!55335))) (_1!1221 lt!55249))) ((_ is Cons!1644) (toList!811 lt!55335)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55335))) (_1!1221 lt!55249))))))

(declare-fun b!109117 () Bool)

(assert (=> b!109117 (= e!70989 (containsKey!160 (t!5776 (toList!811 lt!55335)) (_1!1221 lt!55249)))))

(assert (= (and d!30425 (not res!54055)) b!109116))

(assert (= (and b!109116 res!54056) b!109117))

(declare-fun m!123433 () Bool)

(assert (=> b!109117 m!123433))

(assert (=> d!29929 d!30425))

(declare-fun d!30427 () Bool)

(assert (=> d!30427 (= (inRange!0 (index!3230 lt!55591) (mask!6764 newMap!16)) (and (bvsge (index!3230 lt!55591) #b00000000000000000000000000000000) (bvslt (index!3230 lt!55591) (bvadd (mask!6764 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!108166 d!30427))

(declare-fun d!30429 () Bool)

(assert (=> d!30429 (= (get!1352 (getValueByKey!156 (toList!811 lt!55479) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2917 (getValueByKey!156 (toList!811 lt!55479) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30093 d!30429))

(declare-fun d!30431 () Bool)

(declare-fun c!19260 () Bool)

(assert (=> d!30431 (= c!19260 (and ((_ is Cons!1644) (toList!811 lt!55479)) (= (_1!1221 (h!2242 (toList!811 lt!55479))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!70990 () Option!162)

(assert (=> d!30431 (= (getValueByKey!156 (toList!811 lt!55479) #b1000000000000000000000000000000000000000000000000000000000000000) e!70990)))

(declare-fun b!109120 () Bool)

(declare-fun e!70991 () Option!162)

(assert (=> b!109120 (= e!70991 (getValueByKey!156 (t!5776 (toList!811 lt!55479)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109121 () Bool)

(assert (=> b!109121 (= e!70991 None!160)))

(declare-fun b!109119 () Bool)

(assert (=> b!109119 (= e!70990 e!70991)))

(declare-fun c!19261 () Bool)

(assert (=> b!109119 (= c!19261 (and ((_ is Cons!1644) (toList!811 lt!55479)) (not (= (_1!1221 (h!2242 (toList!811 lt!55479))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!109118 () Bool)

(assert (=> b!109118 (= e!70990 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55479)))))))

(assert (= (and d!30431 c!19260) b!109118))

(assert (= (and d!30431 (not c!19260)) b!109119))

(assert (= (and b!109119 c!19261) b!109120))

(assert (= (and b!109119 (not c!19261)) b!109121))

(declare-fun m!123435 () Bool)

(assert (=> b!109120 m!123435))

(assert (=> d!30093 d!30431))

(assert (=> bm!11522 d!30095))

(declare-fun d!30433 () Bool)

(assert (=> d!30433 (= (isDefined!110 (getValueByKey!156 (toList!811 lt!55324) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!379 (getValueByKey!156 (toList!811 lt!55324) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4486 () Bool)

(assert (= bs!4486 d!30433))

(assert (=> bs!4486 m!122263))

(declare-fun m!123437 () Bool)

(assert (=> bs!4486 m!123437))

(assert (=> b!108500 d!30433))

(declare-fun d!30435 () Bool)

(declare-fun c!19262 () Bool)

(assert (=> d!30435 (= c!19262 (and ((_ is Cons!1644) (toList!811 lt!55324)) (= (_1!1221 (h!2242 (toList!811 lt!55324))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!70992 () Option!162)

(assert (=> d!30435 (= (getValueByKey!156 (toList!811 lt!55324) #b0000000000000000000000000000000000000000000000000000000000000000) e!70992)))

(declare-fun b!109124 () Bool)

(declare-fun e!70993 () Option!162)

(assert (=> b!109124 (= e!70993 (getValueByKey!156 (t!5776 (toList!811 lt!55324)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109125 () Bool)

(assert (=> b!109125 (= e!70993 None!160)))

(declare-fun b!109123 () Bool)

(assert (=> b!109123 (= e!70992 e!70993)))

(declare-fun c!19263 () Bool)

(assert (=> b!109123 (= c!19263 (and ((_ is Cons!1644) (toList!811 lt!55324)) (not (= (_1!1221 (h!2242 (toList!811 lt!55324))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!109122 () Bool)

(assert (=> b!109122 (= e!70992 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55324)))))))

(assert (= (and d!30435 c!19262) b!109122))

(assert (= (and d!30435 (not c!19262)) b!109123))

(assert (= (and b!109123 c!19263) b!109124))

(assert (= (and b!109123 (not c!19263)) b!109125))

(declare-fun m!123439 () Bool)

(assert (=> b!109124 m!123439))

(assert (=> b!108500 d!30435))

(declare-fun d!30437 () Bool)

(declare-fun lt!56199 () Bool)

(assert (=> d!30437 (= lt!56199 (select (content!110 (toList!811 lt!55845)) (tuple2!2423 lt!55321 lt!55325)))))

(declare-fun e!70994 () Bool)

(assert (=> d!30437 (= lt!56199 e!70994)))

(declare-fun res!54058 () Bool)

(assert (=> d!30437 (=> (not res!54058) (not e!70994))))

(assert (=> d!30437 (= res!54058 ((_ is Cons!1644) (toList!811 lt!55845)))))

(assert (=> d!30437 (= (contains!835 (toList!811 lt!55845) (tuple2!2423 lt!55321 lt!55325)) lt!56199)))

(declare-fun b!109126 () Bool)

(declare-fun e!70995 () Bool)

(assert (=> b!109126 (= e!70994 e!70995)))

(declare-fun res!54057 () Bool)

(assert (=> b!109126 (=> res!54057 e!70995)))

(assert (=> b!109126 (= res!54057 (= (h!2242 (toList!811 lt!55845)) (tuple2!2423 lt!55321 lt!55325)))))

(declare-fun b!109127 () Bool)

(assert (=> b!109127 (= e!70995 (contains!835 (t!5776 (toList!811 lt!55845)) (tuple2!2423 lt!55321 lt!55325)))))

(assert (= (and d!30437 res!54058) b!109126))

(assert (= (and b!109126 (not res!54057)) b!109127))

(declare-fun m!123441 () Bool)

(assert (=> d!30437 m!123441))

(declare-fun m!123443 () Bool)

(assert (=> d!30437 m!123443))

(declare-fun m!123445 () Bool)

(assert (=> b!109127 m!123445))

(assert (=> b!108504 d!30437))

(declare-fun d!30439 () Bool)

(declare-fun res!54059 () Bool)

(declare-fun e!70996 () Bool)

(assert (=> d!30439 (=> res!54059 e!70996)))

(assert (=> d!30439 (= res!54059 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))) (= (_1!1221 (h!2242 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))) lt!55496)))))

(assert (=> d!30439 (= (containsKey!160 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55496) e!70996)))

(declare-fun b!109128 () Bool)

(declare-fun e!70997 () Bool)

(assert (=> b!109128 (= e!70996 e!70997)))

(declare-fun res!54060 () Bool)

(assert (=> b!109128 (=> (not res!54060) (not e!70997))))

(assert (=> b!109128 (= res!54060 (and (or (not ((_ is Cons!1644) (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))) (bvsle (_1!1221 (h!2242 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))) lt!55496)) ((_ is Cons!1644) (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))) (bvslt (_1!1221 (h!2242 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))) lt!55496)))))

(declare-fun b!109129 () Bool)

(assert (=> b!109129 (= e!70997 (containsKey!160 (t!5776 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))) lt!55496))))

(assert (= (and d!30439 (not res!54059)) b!109128))

(assert (= (and b!109128 res!54060) b!109129))

(declare-fun m!123447 () Bool)

(assert (=> b!109129 m!123447))

(assert (=> d!30013 d!30439))

(declare-fun d!30441 () Bool)

(declare-fun e!70998 () Bool)

(assert (=> d!30441 e!70998))

(declare-fun res!54061 () Bool)

(assert (=> d!30441 (=> (not res!54061) (not e!70998))))

(declare-fun lt!56202 () ListLongMap!1591)

(assert (=> d!30441 (= res!54061 (contains!834 lt!56202 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))))))

(declare-fun lt!56200 () List!1648)

(assert (=> d!30441 (= lt!56202 (ListLongMap!1592 lt!56200))))

(declare-fun lt!56201 () Unit!3339)

(declare-fun lt!56203 () Unit!3339)

(assert (=> d!30441 (= lt!56201 lt!56203)))

(assert (=> d!30441 (= (getValueByKey!156 lt!56200 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))) (Some!161 (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))))))

(assert (=> d!30441 (= lt!56203 (lemmaContainsTupThenGetReturnValue!74 lt!56200 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))) (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))))))

(assert (=> d!30441 (= lt!56200 (insertStrictlySorted!76 (toList!811 call!11478) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))) (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))))))

(assert (=> d!30441 (= (+!148 call!11478 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))) lt!56202)))

(declare-fun b!109130 () Bool)

(declare-fun res!54062 () Bool)

(assert (=> b!109130 (=> (not res!54062) (not e!70998))))

(assert (=> b!109130 (= res!54062 (= (getValueByKey!156 (toList!811 lt!56202) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))) (Some!161 (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))))))))

(declare-fun b!109131 () Bool)

(assert (=> b!109131 (= e!70998 (contains!835 (toList!811 lt!56202) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))))))

(assert (= (and d!30441 res!54061) b!109130))

(assert (= (and b!109130 res!54062) b!109131))

(declare-fun m!123449 () Bool)

(assert (=> d!30441 m!123449))

(declare-fun m!123451 () Bool)

(assert (=> d!30441 m!123451))

(declare-fun m!123453 () Bool)

(assert (=> d!30441 m!123453))

(declare-fun m!123455 () Bool)

(assert (=> d!30441 m!123455))

(declare-fun m!123457 () Bool)

(assert (=> b!109130 m!123457))

(declare-fun m!123459 () Bool)

(assert (=> b!109131 m!123459))

(assert (=> b!108142 d!30441))

(declare-fun lt!56204 () Bool)

(declare-fun d!30443 () Bool)

(assert (=> d!30443 (= lt!56204 (select (content!110 (toList!811 lt!55771)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))

(declare-fun e!70999 () Bool)

(assert (=> d!30443 (= lt!56204 e!70999)))

(declare-fun res!54064 () Bool)

(assert (=> d!30443 (=> (not res!54064) (not e!70999))))

(assert (=> d!30443 (= res!54064 ((_ is Cons!1644) (toList!811 lt!55771)))))

(assert (=> d!30443 (= (contains!835 (toList!811 lt!55771) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) lt!56204)))

(declare-fun b!109132 () Bool)

(declare-fun e!71000 () Bool)

(assert (=> b!109132 (= e!70999 e!71000)))

(declare-fun res!54063 () Bool)

(assert (=> b!109132 (=> res!54063 e!71000)))

(assert (=> b!109132 (= res!54063 (= (h!2242 (toList!811 lt!55771)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))

(declare-fun b!109133 () Bool)

(assert (=> b!109133 (= e!71000 (contains!835 (t!5776 (toList!811 lt!55771)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))

(assert (= (and d!30443 res!54064) b!109132))

(assert (= (and b!109132 (not res!54063)) b!109133))

(declare-fun m!123461 () Bool)

(assert (=> d!30443 m!123461))

(declare-fun m!123463 () Bool)

(assert (=> d!30443 m!123463))

(declare-fun m!123465 () Bool)

(assert (=> b!109133 m!123465))

(assert (=> b!108425 d!30443))

(declare-fun d!30445 () Bool)

(assert (=> d!30445 (= (get!1352 (getValueByKey!156 (toList!811 lt!55479) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2917 (getValueByKey!156 (toList!811 lt!55479) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30065 d!30445))

(assert (=> d!30065 d!30419))

(declare-fun d!30447 () Bool)

(declare-fun e!71002 () Bool)

(assert (=> d!30447 e!71002))

(declare-fun res!54065 () Bool)

(assert (=> d!30447 (=> res!54065 e!71002)))

(declare-fun lt!56205 () Bool)

(assert (=> d!30447 (= res!54065 (not lt!56205))))

(declare-fun lt!56206 () Bool)

(assert (=> d!30447 (= lt!56205 lt!56206)))

(declare-fun lt!56207 () Unit!3339)

(declare-fun e!71001 () Unit!3339)

(assert (=> d!30447 (= lt!56207 e!71001)))

(declare-fun c!19264 () Bool)

(assert (=> d!30447 (= c!19264 lt!56206)))

(assert (=> d!30447 (= lt!56206 (containsKey!160 (toList!811 lt!55558) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30447 (= (contains!834 lt!55558 #b0000000000000000000000000000000000000000000000000000000000000000) lt!56205)))

(declare-fun b!109134 () Bool)

(declare-fun lt!56208 () Unit!3339)

(assert (=> b!109134 (= e!71001 lt!56208)))

(assert (=> b!109134 (= lt!56208 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55558) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109134 (isDefined!110 (getValueByKey!156 (toList!811 lt!55558) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109135 () Bool)

(declare-fun Unit!3394 () Unit!3339)

(assert (=> b!109135 (= e!71001 Unit!3394)))

(declare-fun b!109136 () Bool)

(assert (=> b!109136 (= e!71002 (isDefined!110 (getValueByKey!156 (toList!811 lt!55558) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30447 c!19264) b!109134))

(assert (= (and d!30447 (not c!19264)) b!109135))

(assert (= (and d!30447 (not res!54065)) b!109136))

(declare-fun m!123467 () Bool)

(assert (=> d!30447 m!123467))

(declare-fun m!123469 () Bool)

(assert (=> b!109134 m!123469))

(declare-fun m!123471 () Bool)

(assert (=> b!109134 m!123471))

(assert (=> b!109134 m!123471))

(declare-fun m!123473 () Bool)

(assert (=> b!109134 m!123473))

(assert (=> b!109136 m!123471))

(assert (=> b!109136 m!123471))

(assert (=> b!109136 m!123473))

(assert (=> bm!11476 d!30447))

(declare-fun d!30449 () Bool)

(declare-fun res!54066 () Bool)

(declare-fun e!71003 () Bool)

(assert (=> d!30449 (=> res!54066 e!71003)))

(assert (=> d!30449 (= res!54066 (and ((_ is Cons!1644) lt!55626) (= (_1!1221 (h!2242 lt!55626)) (_1!1221 lt!55252))))))

(assert (=> d!30449 (= (containsKey!160 lt!55626 (_1!1221 lt!55252)) e!71003)))

(declare-fun b!109137 () Bool)

(declare-fun e!71004 () Bool)

(assert (=> b!109137 (= e!71003 e!71004)))

(declare-fun res!54067 () Bool)

(assert (=> b!109137 (=> (not res!54067) (not e!71004))))

(assert (=> b!109137 (= res!54067 (and (or (not ((_ is Cons!1644) lt!55626)) (bvsle (_1!1221 (h!2242 lt!55626)) (_1!1221 lt!55252))) ((_ is Cons!1644) lt!55626) (bvslt (_1!1221 (h!2242 lt!55626)) (_1!1221 lt!55252))))))

(declare-fun b!109138 () Bool)

(assert (=> b!109138 (= e!71004 (containsKey!160 (t!5776 lt!55626) (_1!1221 lt!55252)))))

(assert (= (and d!30449 (not res!54066)) b!109137))

(assert (= (and b!109137 res!54067) b!109138))

(declare-fun m!123475 () Bool)

(assert (=> b!109138 m!123475))

(assert (=> b!108287 d!30449))

(declare-fun d!30451 () Bool)

(declare-fun lt!56209 () Bool)

(assert (=> d!30451 (= lt!56209 (select (content!110 lt!55611) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))))))

(declare-fun e!71005 () Bool)

(assert (=> d!30451 (= lt!56209 e!71005)))

(declare-fun res!54069 () Bool)

(assert (=> d!30451 (=> (not res!54069) (not e!71005))))

(assert (=> d!30451 (= res!54069 ((_ is Cons!1644) lt!55611))))

(assert (=> d!30451 (= (contains!835 lt!55611 (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))) lt!56209)))

(declare-fun b!109139 () Bool)

(declare-fun e!71006 () Bool)

(assert (=> b!109139 (= e!71005 e!71006)))

(declare-fun res!54068 () Bool)

(assert (=> b!109139 (=> res!54068 e!71006)))

(assert (=> b!109139 (= res!54068 (= (h!2242 lt!55611) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))))))

(declare-fun b!109140 () Bool)

(assert (=> b!109140 (= e!71006 (contains!835 (t!5776 lt!55611) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))))))

(assert (= (and d!30451 res!54069) b!109139))

(assert (= (and b!109139 (not res!54068)) b!109140))

(declare-fun m!123477 () Bool)

(assert (=> d!30451 m!123477))

(declare-fun m!123479 () Bool)

(assert (=> d!30451 m!123479))

(declare-fun m!123481 () Bool)

(assert (=> b!109140 m!123481))

(assert (=> b!108242 d!30451))

(declare-fun b!109141 () Bool)

(declare-fun e!71007 () Bool)

(declare-fun call!11615 () Bool)

(assert (=> b!109141 (= e!71007 call!11615)))

(declare-fun b!109142 () Bool)

(assert (=> b!109142 (= e!71007 call!11615)))

(declare-fun bm!11612 () Bool)

(declare-fun c!19265 () Bool)

(assert (=> bm!11612 (= call!11615 (arrayNoDuplicates!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19265 (Cons!1643 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) #b00000000000000000000000000000000) Nil!1644) Nil!1644)))))

(declare-fun d!30453 () Bool)

(declare-fun res!54071 () Bool)

(declare-fun e!71008 () Bool)

(assert (=> d!30453 (=> res!54071 e!71008)))

(assert (=> d!30453 (= res!54071 (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(assert (=> d!30453 (= (arrayNoDuplicates!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000000 Nil!1644) e!71008)))

(declare-fun b!109143 () Bool)

(declare-fun e!71009 () Bool)

(assert (=> b!109143 (= e!71009 (contains!836 Nil!1644 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!109144 () Bool)

(declare-fun e!71010 () Bool)

(assert (=> b!109144 (= e!71008 e!71010)))

(declare-fun res!54070 () Bool)

(assert (=> b!109144 (=> (not res!54070) (not e!71010))))

(assert (=> b!109144 (= res!54070 (not e!71009))))

(declare-fun res!54072 () Bool)

(assert (=> b!109144 (=> (not res!54072) (not e!71009))))

(assert (=> b!109144 (= res!54072 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!109145 () Bool)

(assert (=> b!109145 (= e!71010 e!71007)))

(assert (=> b!109145 (= c!19265 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!30453 (not res!54071)) b!109144))

(assert (= (and b!109144 res!54072) b!109143))

(assert (= (and b!109144 res!54070) b!109145))

(assert (= (and b!109145 c!19265) b!109141))

(assert (= (and b!109145 (not c!19265)) b!109142))

(assert (= (or b!109141 b!109142) bm!11612))

(declare-fun m!123483 () Bool)

(assert (=> bm!11612 m!123483))

(declare-fun m!123485 () Bool)

(assert (=> bm!11612 m!123485))

(assert (=> b!109143 m!123483))

(assert (=> b!109143 m!123483))

(declare-fun m!123487 () Bool)

(assert (=> b!109143 m!123487))

(assert (=> b!109144 m!123483))

(assert (=> b!109144 m!123483))

(declare-fun m!123489 () Bool)

(assert (=> b!109144 m!123489))

(assert (=> b!109145 m!123483))

(assert (=> b!109145 m!123483))

(assert (=> b!109145 m!123489))

(assert (=> b!108135 d!30453))

(declare-fun d!30455 () Bool)

(assert (=> d!30455 (= (get!1352 (getValueByKey!156 (toList!811 (+!148 lt!55480 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55487)) (v!2917 (getValueByKey!156 (toList!811 (+!148 lt!55480 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55487)))))

(assert (=> d!30019 d!30455))

(declare-fun d!30457 () Bool)

(declare-fun c!19266 () Bool)

(assert (=> d!30457 (= c!19266 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55480 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))) (= (_1!1221 (h!2242 (toList!811 (+!148 lt!55480 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))) lt!55487)))))

(declare-fun e!71011 () Option!162)

(assert (=> d!30457 (= (getValueByKey!156 (toList!811 (+!148 lt!55480 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55487) e!71011)))

(declare-fun b!109148 () Bool)

(declare-fun e!71012 () Option!162)

(assert (=> b!109148 (= e!71012 (getValueByKey!156 (t!5776 (toList!811 (+!148 lt!55480 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))) lt!55487))))

(declare-fun b!109149 () Bool)

(assert (=> b!109149 (= e!71012 None!160)))

(declare-fun b!109147 () Bool)

(assert (=> b!109147 (= e!71011 e!71012)))

(declare-fun c!19267 () Bool)

(assert (=> b!109147 (= c!19267 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55480 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))) (not (= (_1!1221 (h!2242 (toList!811 (+!148 lt!55480 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))) lt!55487))))))

(declare-fun b!109146 () Bool)

(assert (=> b!109146 (= e!71011 (Some!161 (_2!1221 (h!2242 (toList!811 (+!148 lt!55480 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))))

(assert (= (and d!30457 c!19266) b!109146))

(assert (= (and d!30457 (not c!19266)) b!109147))

(assert (= (and b!109147 c!19267) b!109148))

(assert (= (and b!109147 (not c!19267)) b!109149))

(declare-fun m!123491 () Bool)

(assert (=> b!109148 m!123491))

(assert (=> d!30019 d!30457))

(assert (=> b!108410 d!29925))

(declare-fun d!30459 () Bool)

(declare-fun e!71014 () Bool)

(assert (=> d!30459 e!71014))

(declare-fun res!54073 () Bool)

(assert (=> d!30459 (=> res!54073 e!71014)))

(declare-fun lt!56210 () Bool)

(assert (=> d!30459 (= res!54073 (not lt!56210))))

(declare-fun lt!56211 () Bool)

(assert (=> d!30459 (= lt!56210 lt!56211)))

(declare-fun lt!56212 () Unit!3339)

(declare-fun e!71013 () Unit!3339)

(assert (=> d!30459 (= lt!56212 e!71013)))

(declare-fun c!19268 () Bool)

(assert (=> d!30459 (= c!19268 lt!56211)))

(assert (=> d!30459 (= lt!56211 (containsKey!160 (toList!811 lt!55644) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!30459 (= (contains!834 lt!55644 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!56210)))

(declare-fun b!109150 () Bool)

(declare-fun lt!56213 () Unit!3339)

(assert (=> b!109150 (= e!71013 lt!56213)))

(assert (=> b!109150 (= lt!56213 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55644) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!109150 (isDefined!110 (getValueByKey!156 (toList!811 lt!55644) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!109151 () Bool)

(declare-fun Unit!3395 () Unit!3339)

(assert (=> b!109151 (= e!71013 Unit!3395)))

(declare-fun b!109152 () Bool)

(assert (=> b!109152 (= e!71014 (isDefined!110 (getValueByKey!156 (toList!811 lt!55644) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!30459 c!19268) b!109150))

(assert (= (and d!30459 (not c!19268)) b!109151))

(assert (= (and d!30459 (not res!54073)) b!109152))

(assert (=> d!30459 m!121871))

(declare-fun m!123493 () Bool)

(assert (=> d!30459 m!123493))

(assert (=> b!109150 m!121871))

(declare-fun m!123495 () Bool)

(assert (=> b!109150 m!123495))

(assert (=> b!109150 m!121871))

(declare-fun m!123497 () Bool)

(assert (=> b!109150 m!123497))

(assert (=> b!109150 m!123497))

(declare-fun m!123499 () Bool)

(assert (=> b!109150 m!123499))

(assert (=> b!109152 m!121871))

(assert (=> b!109152 m!123497))

(assert (=> b!109152 m!123497))

(assert (=> b!109152 m!123499))

(assert (=> b!108327 d!30459))

(declare-fun d!30461 () Bool)

(declare-fun c!19271 () Bool)

(assert (=> d!30461 (= c!19271 ((_ is Nil!1645) (toList!811 lt!55339)))))

(declare-fun e!71017 () (InoxSet tuple2!2422))

(assert (=> d!30461 (= (content!110 (toList!811 lt!55339)) e!71017)))

(declare-fun b!109157 () Bool)

(assert (=> b!109157 (= e!71017 ((as const (Array tuple2!2422 Bool)) false))))

(declare-fun b!109158 () Bool)

(assert (=> b!109158 (= e!71017 ((_ map or) (store ((as const (Array tuple2!2422 Bool)) false) (h!2242 (toList!811 lt!55339)) true) (content!110 (t!5776 (toList!811 lt!55339)))))))

(assert (= (and d!30461 c!19271) b!109157))

(assert (= (and d!30461 (not c!19271)) b!109158))

(declare-fun m!123501 () Bool)

(assert (=> b!109158 m!123501))

(declare-fun m!123503 () Bool)

(assert (=> b!109158 m!123503))

(assert (=> d!29979 d!30461))

(declare-fun d!30463 () Bool)

(assert (=> d!30463 (= (get!1352 (getValueByKey!156 (toList!811 (+!148 lt!55499 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55493)) (v!2917 (getValueByKey!156 (toList!811 (+!148 lt!55499 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55493)))))

(assert (=> d!30033 d!30463))

(declare-fun c!19272 () Bool)

(declare-fun d!30465 () Bool)

(assert (=> d!30465 (= c!19272 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55499 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))) (= (_1!1221 (h!2242 (toList!811 (+!148 lt!55499 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))) lt!55493)))))

(declare-fun e!71018 () Option!162)

(assert (=> d!30465 (= (getValueByKey!156 (toList!811 (+!148 lt!55499 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55493) e!71018)))

(declare-fun b!109161 () Bool)

(declare-fun e!71019 () Option!162)

(assert (=> b!109161 (= e!71019 (getValueByKey!156 (t!5776 (toList!811 (+!148 lt!55499 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))) lt!55493))))

(declare-fun b!109162 () Bool)

(assert (=> b!109162 (= e!71019 None!160)))

(declare-fun b!109160 () Bool)

(assert (=> b!109160 (= e!71018 e!71019)))

(declare-fun c!19273 () Bool)

(assert (=> b!109160 (= c!19273 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55499 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))) (not (= (_1!1221 (h!2242 (toList!811 (+!148 lt!55499 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))) lt!55493))))))

(declare-fun b!109159 () Bool)

(assert (=> b!109159 (= e!71018 (Some!161 (_2!1221 (h!2242 (toList!811 (+!148 lt!55499 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))))

(assert (= (and d!30465 c!19272) b!109159))

(assert (= (and d!30465 (not c!19272)) b!109160))

(assert (= (and b!109160 c!19273) b!109161))

(assert (= (and b!109160 (not c!19273)) b!109162))

(declare-fun m!123505 () Bool)

(assert (=> b!109161 m!123505))

(assert (=> d!30033 d!30465))

(assert (=> d!29933 d!29931))

(declare-fun d!30467 () Bool)

(assert (=> d!30467 (= (getValueByKey!156 lt!55333 (_1!1221 lt!55249)) (Some!161 (_2!1221 lt!55249)))))

(assert (=> d!30467 true))

(declare-fun _$22!439 () Unit!3339)

(assert (=> d!30467 (= (choose!680 lt!55333 (_1!1221 lt!55249) (_2!1221 lt!55249)) _$22!439)))

(declare-fun bs!4487 () Bool)

(assert (= bs!4487 d!30467))

(assert (=> bs!4487 m!121353))

(assert (=> d!29933 d!30467))

(declare-fun d!30469 () Bool)

(declare-fun res!54074 () Bool)

(declare-fun e!71020 () Bool)

(assert (=> d!30469 (=> res!54074 e!71020)))

(assert (=> d!30469 (= res!54074 (or ((_ is Nil!1645) lt!55333) ((_ is Nil!1645) (t!5776 lt!55333))))))

(assert (=> d!30469 (= (isStrictlySorted!305 lt!55333) e!71020)))

(declare-fun b!109163 () Bool)

(declare-fun e!71021 () Bool)

(assert (=> b!109163 (= e!71020 e!71021)))

(declare-fun res!54075 () Bool)

(assert (=> b!109163 (=> (not res!54075) (not e!71021))))

(assert (=> b!109163 (= res!54075 (bvslt (_1!1221 (h!2242 lt!55333)) (_1!1221 (h!2242 (t!5776 lt!55333)))))))

(declare-fun b!109164 () Bool)

(assert (=> b!109164 (= e!71021 (isStrictlySorted!305 (t!5776 lt!55333)))))

(assert (= (and d!30469 (not res!54074)) b!109163))

(assert (= (and b!109163 res!54075) b!109164))

(declare-fun m!123507 () Bool)

(assert (=> b!109164 m!123507))

(assert (=> d!29933 d!30469))

(declare-fun d!30471 () Bool)

(assert (=> d!30471 (isDefined!110 (getValueByKey!156 (toList!811 lt!55335) (_1!1221 lt!55249)))))

(declare-fun lt!56214 () Unit!3339)

(assert (=> d!30471 (= lt!56214 (choose!683 (toList!811 lt!55335) (_1!1221 lt!55249)))))

(declare-fun e!71022 () Bool)

(assert (=> d!30471 e!71022))

(declare-fun res!54076 () Bool)

(assert (=> d!30471 (=> (not res!54076) (not e!71022))))

(assert (=> d!30471 (= res!54076 (isStrictlySorted!305 (toList!811 lt!55335)))))

(assert (=> d!30471 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55335) (_1!1221 lt!55249)) lt!56214)))

(declare-fun b!109165 () Bool)

(assert (=> b!109165 (= e!71022 (containsKey!160 (toList!811 lt!55335) (_1!1221 lt!55249)))))

(assert (= (and d!30471 res!54076) b!109165))

(assert (=> d!30471 m!121359))

(assert (=> d!30471 m!121359))

(assert (=> d!30471 m!121727))

(declare-fun m!123509 () Bool)

(assert (=> d!30471 m!123509))

(declare-fun m!123511 () Bool)

(assert (=> d!30471 m!123511))

(assert (=> b!109165 m!121723))

(assert (=> b!108174 d!30471))

(assert (=> b!108174 d!30303))

(assert (=> b!108174 d!29965))

(declare-fun d!30473 () Bool)

(assert (=> d!30473 (= (content!111 Nil!1644) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!29927 d!30473))

(declare-fun d!30475 () Bool)

(declare-fun e!71024 () Bool)

(assert (=> d!30475 e!71024))

(declare-fun res!54077 () Bool)

(assert (=> d!30475 (=> res!54077 e!71024)))

(declare-fun lt!56215 () Bool)

(assert (=> d!30475 (= res!54077 (not lt!56215))))

(declare-fun lt!56216 () Bool)

(assert (=> d!30475 (= lt!56215 lt!56216)))

(declare-fun lt!56217 () Unit!3339)

(declare-fun e!71023 () Unit!3339)

(assert (=> d!30475 (= lt!56217 e!71023)))

(declare-fun c!19274 () Bool)

(assert (=> d!30475 (= c!19274 lt!56216)))

(assert (=> d!30475 (= lt!56216 (containsKey!160 (toList!811 lt!55845) (_1!1221 (tuple2!2423 lt!55321 lt!55325))))))

(assert (=> d!30475 (= (contains!834 lt!55845 (_1!1221 (tuple2!2423 lt!55321 lt!55325))) lt!56215)))

(declare-fun b!109166 () Bool)

(declare-fun lt!56218 () Unit!3339)

(assert (=> b!109166 (= e!71023 lt!56218)))

(assert (=> b!109166 (= lt!56218 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55845) (_1!1221 (tuple2!2423 lt!55321 lt!55325))))))

(assert (=> b!109166 (isDefined!110 (getValueByKey!156 (toList!811 lt!55845) (_1!1221 (tuple2!2423 lt!55321 lt!55325))))))

(declare-fun b!109167 () Bool)

(declare-fun Unit!3396 () Unit!3339)

(assert (=> b!109167 (= e!71023 Unit!3396)))

(declare-fun b!109168 () Bool)

(assert (=> b!109168 (= e!71024 (isDefined!110 (getValueByKey!156 (toList!811 lt!55845) (_1!1221 (tuple2!2423 lt!55321 lt!55325)))))))

(assert (= (and d!30475 c!19274) b!109166))

(assert (= (and d!30475 (not c!19274)) b!109167))

(assert (= (and d!30475 (not res!54077)) b!109168))

(declare-fun m!123513 () Bool)

(assert (=> d!30475 m!123513))

(declare-fun m!123515 () Bool)

(assert (=> b!109166 m!123515))

(assert (=> b!109166 m!122287))

(assert (=> b!109166 m!122287))

(declare-fun m!123517 () Bool)

(assert (=> b!109166 m!123517))

(assert (=> b!109168 m!122287))

(assert (=> b!109168 m!122287))

(assert (=> b!109168 m!123517))

(assert (=> d!30077 d!30475))

(declare-fun c!19275 () Bool)

(declare-fun d!30477 () Bool)

(assert (=> d!30477 (= c!19275 (and ((_ is Cons!1644) lt!55843) (= (_1!1221 (h!2242 lt!55843)) (_1!1221 (tuple2!2423 lt!55321 lt!55325)))))))

(declare-fun e!71025 () Option!162)

(assert (=> d!30477 (= (getValueByKey!156 lt!55843 (_1!1221 (tuple2!2423 lt!55321 lt!55325))) e!71025)))

(declare-fun b!109171 () Bool)

(declare-fun e!71026 () Option!162)

(assert (=> b!109171 (= e!71026 (getValueByKey!156 (t!5776 lt!55843) (_1!1221 (tuple2!2423 lt!55321 lt!55325))))))

(declare-fun b!109172 () Bool)

(assert (=> b!109172 (= e!71026 None!160)))

(declare-fun b!109170 () Bool)

(assert (=> b!109170 (= e!71025 e!71026)))

(declare-fun c!19276 () Bool)

(assert (=> b!109170 (= c!19276 (and ((_ is Cons!1644) lt!55843) (not (= (_1!1221 (h!2242 lt!55843)) (_1!1221 (tuple2!2423 lt!55321 lt!55325))))))))

(declare-fun b!109169 () Bool)

(assert (=> b!109169 (= e!71025 (Some!161 (_2!1221 (h!2242 lt!55843))))))

(assert (= (and d!30477 c!19275) b!109169))

(assert (= (and d!30477 (not c!19275)) b!109170))

(assert (= (and b!109170 c!19276) b!109171))

(assert (= (and b!109170 (not c!19276)) b!109172))

(declare-fun m!123519 () Bool)

(assert (=> b!109171 m!123519))

(assert (=> d!30077 d!30477))

(declare-fun d!30479 () Bool)

(assert (=> d!30479 (= (getValueByKey!156 lt!55843 (_1!1221 (tuple2!2423 lt!55321 lt!55325))) (Some!161 (_2!1221 (tuple2!2423 lt!55321 lt!55325))))))

(declare-fun lt!56219 () Unit!3339)

(assert (=> d!30479 (= lt!56219 (choose!680 lt!55843 (_1!1221 (tuple2!2423 lt!55321 lt!55325)) (_2!1221 (tuple2!2423 lt!55321 lt!55325))))))

(declare-fun e!71027 () Bool)

(assert (=> d!30479 e!71027))

(declare-fun res!54078 () Bool)

(assert (=> d!30479 (=> (not res!54078) (not e!71027))))

(assert (=> d!30479 (= res!54078 (isStrictlySorted!305 lt!55843))))

(assert (=> d!30479 (= (lemmaContainsTupThenGetReturnValue!74 lt!55843 (_1!1221 (tuple2!2423 lt!55321 lt!55325)) (_2!1221 (tuple2!2423 lt!55321 lt!55325))) lt!56219)))

(declare-fun b!109173 () Bool)

(declare-fun res!54079 () Bool)

(assert (=> b!109173 (=> (not res!54079) (not e!71027))))

(assert (=> b!109173 (= res!54079 (containsKey!160 lt!55843 (_1!1221 (tuple2!2423 lt!55321 lt!55325))))))

(declare-fun b!109174 () Bool)

(assert (=> b!109174 (= e!71027 (contains!835 lt!55843 (tuple2!2423 (_1!1221 (tuple2!2423 lt!55321 lt!55325)) (_2!1221 (tuple2!2423 lt!55321 lt!55325)))))))

(assert (= (and d!30479 res!54078) b!109173))

(assert (= (and b!109173 res!54079) b!109174))

(assert (=> d!30479 m!122281))

(declare-fun m!123521 () Bool)

(assert (=> d!30479 m!123521))

(declare-fun m!123523 () Bool)

(assert (=> d!30479 m!123523))

(declare-fun m!123525 () Bool)

(assert (=> b!109173 m!123525))

(declare-fun m!123527 () Bool)

(assert (=> b!109174 m!123527))

(assert (=> d!30077 d!30479))

(declare-fun b!109175 () Bool)

(declare-fun c!19277 () Bool)

(assert (=> b!109175 (= c!19277 (and ((_ is Cons!1644) (toList!811 lt!55319)) (bvsgt (_1!1221 (h!2242 (toList!811 lt!55319))) (_1!1221 (tuple2!2423 lt!55321 lt!55325)))))))

(declare-fun e!71028 () List!1648)

(declare-fun e!71029 () List!1648)

(assert (=> b!109175 (= e!71028 e!71029)))

(declare-fun b!109176 () Bool)

(declare-fun e!71030 () List!1648)

(declare-fun call!11617 () List!1648)

(assert (=> b!109176 (= e!71030 call!11617)))

(declare-fun e!71032 () List!1648)

(declare-fun c!19278 () Bool)

(declare-fun bm!11613 () Bool)

(assert (=> bm!11613 (= call!11617 ($colon$colon!81 e!71032 (ite c!19278 (h!2242 (toList!811 lt!55319)) (tuple2!2423 (_1!1221 (tuple2!2423 lt!55321 lt!55325)) (_2!1221 (tuple2!2423 lt!55321 lt!55325))))))))

(declare-fun c!19279 () Bool)

(assert (=> bm!11613 (= c!19279 c!19278)))

(declare-fun b!109177 () Bool)

(declare-fun call!11616 () List!1648)

(assert (=> b!109177 (= e!71029 call!11616)))

(declare-fun b!109178 () Bool)

(declare-fun call!11618 () List!1648)

(assert (=> b!109178 (= e!71028 call!11618)))

(declare-fun d!30481 () Bool)

(declare-fun e!71031 () Bool)

(assert (=> d!30481 e!71031))

(declare-fun res!54080 () Bool)

(assert (=> d!30481 (=> (not res!54080) (not e!71031))))

(declare-fun lt!56220 () List!1648)

(assert (=> d!30481 (= res!54080 (isStrictlySorted!305 lt!56220))))

(assert (=> d!30481 (= lt!56220 e!71030)))

(assert (=> d!30481 (= c!19278 (and ((_ is Cons!1644) (toList!811 lt!55319)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55319))) (_1!1221 (tuple2!2423 lt!55321 lt!55325)))))))

(assert (=> d!30481 (isStrictlySorted!305 (toList!811 lt!55319))))

(assert (=> d!30481 (= (insertStrictlySorted!76 (toList!811 lt!55319) (_1!1221 (tuple2!2423 lt!55321 lt!55325)) (_2!1221 (tuple2!2423 lt!55321 lt!55325))) lt!56220)))

(declare-fun b!109179 () Bool)

(assert (=> b!109179 (= e!71030 e!71028)))

(declare-fun c!19280 () Bool)

(assert (=> b!109179 (= c!19280 (and ((_ is Cons!1644) (toList!811 lt!55319)) (= (_1!1221 (h!2242 (toList!811 lt!55319))) (_1!1221 (tuple2!2423 lt!55321 lt!55325)))))))

(declare-fun b!109180 () Bool)

(declare-fun res!54081 () Bool)

(assert (=> b!109180 (=> (not res!54081) (not e!71031))))

(assert (=> b!109180 (= res!54081 (containsKey!160 lt!56220 (_1!1221 (tuple2!2423 lt!55321 lt!55325))))))

(declare-fun bm!11614 () Bool)

(assert (=> bm!11614 (= call!11618 call!11617)))

(declare-fun bm!11615 () Bool)

(assert (=> bm!11615 (= call!11616 call!11618)))

(declare-fun b!109181 () Bool)

(assert (=> b!109181 (= e!71032 (insertStrictlySorted!76 (t!5776 (toList!811 lt!55319)) (_1!1221 (tuple2!2423 lt!55321 lt!55325)) (_2!1221 (tuple2!2423 lt!55321 lt!55325))))))

(declare-fun b!109182 () Bool)

(assert (=> b!109182 (= e!71029 call!11616)))

(declare-fun b!109183 () Bool)

(assert (=> b!109183 (= e!71031 (contains!835 lt!56220 (tuple2!2423 (_1!1221 (tuple2!2423 lt!55321 lt!55325)) (_2!1221 (tuple2!2423 lt!55321 lt!55325)))))))

(declare-fun b!109184 () Bool)

(assert (=> b!109184 (= e!71032 (ite c!19280 (t!5776 (toList!811 lt!55319)) (ite c!19277 (Cons!1644 (h!2242 (toList!811 lt!55319)) (t!5776 (toList!811 lt!55319))) Nil!1645)))))

(assert (= (and d!30481 c!19278) b!109176))

(assert (= (and d!30481 (not c!19278)) b!109179))

(assert (= (and b!109179 c!19280) b!109178))

(assert (= (and b!109179 (not c!19280)) b!109175))

(assert (= (and b!109175 c!19277) b!109182))

(assert (= (and b!109175 (not c!19277)) b!109177))

(assert (= (or b!109182 b!109177) bm!11615))

(assert (= (or b!109178 bm!11615) bm!11614))

(assert (= (or b!109176 bm!11614) bm!11613))

(assert (= (and bm!11613 c!19279) b!109181))

(assert (= (and bm!11613 (not c!19279)) b!109184))

(assert (= (and d!30481 res!54080) b!109180))

(assert (= (and b!109180 res!54081) b!109183))

(declare-fun m!123529 () Bool)

(assert (=> b!109183 m!123529))

(declare-fun m!123531 () Bool)

(assert (=> b!109180 m!123531))

(declare-fun m!123533 () Bool)

(assert (=> bm!11613 m!123533))

(declare-fun m!123535 () Bool)

(assert (=> d!30481 m!123535))

(declare-fun m!123537 () Bool)

(assert (=> d!30481 m!123537))

(declare-fun m!123539 () Bool)

(assert (=> b!109181 m!123539))

(assert (=> d!30077 d!30481))

(declare-fun d!30483 () Bool)

(assert (=> d!30483 (= (isDefined!110 (getValueByKey!156 (toList!811 lt!55479) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!379 (getValueByKey!156 (toList!811 lt!55479) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4488 () Bool)

(assert (= bs!4488 d!30483))

(assert (=> bs!4488 m!121605))

(declare-fun m!123541 () Bool)

(assert (=> bs!4488 m!123541))

(assert (=> b!108123 d!30483))

(declare-fun d!30485 () Bool)

(declare-fun c!19281 () Bool)

(assert (=> d!30485 (= c!19281 (and ((_ is Cons!1644) (toList!811 lt!55479)) (= (_1!1221 (h!2242 (toList!811 lt!55479))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!71033 () Option!162)

(assert (=> d!30485 (= (getValueByKey!156 (toList!811 lt!55479) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!71033)))

(declare-fun b!109187 () Bool)

(declare-fun e!71034 () Option!162)

(assert (=> b!109187 (= e!71034 (getValueByKey!156 (t!5776 (toList!811 lt!55479)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!109188 () Bool)

(assert (=> b!109188 (= e!71034 None!160)))

(declare-fun b!109186 () Bool)

(assert (=> b!109186 (= e!71033 e!71034)))

(declare-fun c!19282 () Bool)

(assert (=> b!109186 (= c!19282 (and ((_ is Cons!1644) (toList!811 lt!55479)) (not (= (_1!1221 (h!2242 (toList!811 lt!55479))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!109185 () Bool)

(assert (=> b!109185 (= e!71033 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55479)))))))

(assert (= (and d!30485 c!19281) b!109185))

(assert (= (and d!30485 (not c!19281)) b!109186))

(assert (= (and b!109186 c!19282) b!109187))

(assert (= (and b!109186 (not c!19282)) b!109188))

(assert (=> b!109187 m!121305))

(declare-fun m!123543 () Bool)

(assert (=> b!109187 m!123543))

(assert (=> b!108123 d!30485))

(declare-fun d!30487 () Bool)

(assert (=> d!30487 (isDefined!110 (getValueByKey!156 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55496))))

(declare-fun lt!56221 () Unit!3339)

(assert (=> d!30487 (= lt!56221 (choose!683 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55496))))

(declare-fun e!71035 () Bool)

(assert (=> d!30487 e!71035))

(declare-fun res!54082 () Bool)

(assert (=> d!30487 (=> (not res!54082) (not e!71035))))

(assert (=> d!30487 (= res!54082 (isStrictlySorted!305 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (=> d!30487 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55496) lt!56221)))

(declare-fun b!109189 () Bool)

(assert (=> b!109189 (= e!71035 (containsKey!160 (toList!811 (+!148 lt!55497 (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!55496))))

(assert (= (and d!30487 res!54082) b!109189))

(assert (=> d!30487 m!122101))

(assert (=> d!30487 m!122101))

(assert (=> d!30487 m!122103))

(declare-fun m!123545 () Bool)

(assert (=> d!30487 m!123545))

(declare-fun m!123547 () Bool)

(assert (=> d!30487 m!123547))

(assert (=> b!109189 m!122097))

(assert (=> b!108434 d!30487))

(assert (=> b!108434 d!30317))

(assert (=> b!108434 d!30319))

(assert (=> bm!11467 d!30205))

(declare-fun d!30489 () Bool)

(declare-fun e!71037 () Bool)

(assert (=> d!30489 e!71037))

(declare-fun res!54083 () Bool)

(assert (=> d!30489 (=> res!54083 e!71037)))

(declare-fun lt!56222 () Bool)

(assert (=> d!30489 (= res!54083 (not lt!56222))))

(declare-fun lt!56223 () Bool)

(assert (=> d!30489 (= lt!56222 lt!56223)))

(declare-fun lt!56224 () Unit!3339)

(declare-fun e!71036 () Unit!3339)

(assert (=> d!30489 (= lt!56224 e!71036)))

(declare-fun c!19283 () Bool)

(assert (=> d!30489 (= c!19283 lt!56223)))

(assert (=> d!30489 (= lt!56223 (containsKey!160 (toList!811 lt!55655) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30489 (= (contains!834 lt!55655 #b0000000000000000000000000000000000000000000000000000000000000000) lt!56222)))

(declare-fun b!109190 () Bool)

(declare-fun lt!56225 () Unit!3339)

(assert (=> b!109190 (= e!71036 lt!56225)))

(assert (=> b!109190 (= lt!56225 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55655) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109190 (isDefined!110 (getValueByKey!156 (toList!811 lt!55655) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109191 () Bool)

(declare-fun Unit!3397 () Unit!3339)

(assert (=> b!109191 (= e!71036 Unit!3397)))

(declare-fun b!109192 () Bool)

(assert (=> b!109192 (= e!71037 (isDefined!110 (getValueByKey!156 (toList!811 lt!55655) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30489 c!19283) b!109190))

(assert (= (and d!30489 (not c!19283)) b!109191))

(assert (= (and d!30489 (not res!54083)) b!109192))

(declare-fun m!123549 () Bool)

(assert (=> d!30489 m!123549))

(declare-fun m!123551 () Bool)

(assert (=> b!109190 m!123551))

(declare-fun m!123553 () Bool)

(assert (=> b!109190 m!123553))

(assert (=> b!109190 m!123553))

(declare-fun m!123555 () Bool)

(assert (=> b!109190 m!123555))

(assert (=> b!109192 m!123553))

(assert (=> b!109192 m!123553))

(assert (=> b!109192 m!123555))

(assert (=> bm!11508 d!30489))

(declare-fun d!30491 () Bool)

(assert (not d!30491))

(assert (=> b!108173 d!30491))

(assert (=> b!108534 d!30151))

(declare-fun d!30493 () Bool)

(declare-fun c!19284 () Bool)

(assert (=> d!30493 (= c!19284 ((_ is Nil!1645) (toList!811 lt!55331)))))

(declare-fun e!71038 () (InoxSet tuple2!2422))

(assert (=> d!30493 (= (content!110 (toList!811 lt!55331)) e!71038)))

(declare-fun b!109193 () Bool)

(assert (=> b!109193 (= e!71038 ((as const (Array tuple2!2422 Bool)) false))))

(declare-fun b!109194 () Bool)

(assert (=> b!109194 (= e!71038 ((_ map or) (store ((as const (Array tuple2!2422 Bool)) false) (h!2242 (toList!811 lt!55331)) true) (content!110 (t!5776 (toList!811 lt!55331)))))))

(assert (= (and d!30493 c!19284) b!109193))

(assert (= (and d!30493 (not c!19284)) b!109194))

(declare-fun m!123557 () Bool)

(assert (=> b!109194 m!123557))

(declare-fun m!123559 () Bool)

(assert (=> b!109194 m!123559))

(assert (=> d!30069 d!30493))

(declare-fun d!30495 () Bool)

(declare-fun e!71040 () Bool)

(assert (=> d!30495 e!71040))

(declare-fun res!54084 () Bool)

(assert (=> d!30495 (=> res!54084 e!71040)))

(declare-fun lt!56226 () Bool)

(assert (=> d!30495 (= res!54084 (not lt!56226))))

(declare-fun lt!56227 () Bool)

(assert (=> d!30495 (= lt!56226 lt!56227)))

(declare-fun lt!56228 () Unit!3339)

(declare-fun e!71039 () Unit!3339)

(assert (=> d!30495 (= lt!56228 e!71039)))

(declare-fun c!19285 () Bool)

(assert (=> d!30495 (= c!19285 lt!56227)))

(assert (=> d!30495 (= lt!56227 (containsKey!160 (toList!811 lt!55644) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30495 (= (contains!834 lt!55644 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56226)))

(declare-fun b!109195 () Bool)

(declare-fun lt!56229 () Unit!3339)

(assert (=> b!109195 (= e!71039 lt!56229)))

(assert (=> b!109195 (= lt!56229 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55644) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109195 (isDefined!110 (getValueByKey!156 (toList!811 lt!55644) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109196 () Bool)

(declare-fun Unit!3398 () Unit!3339)

(assert (=> b!109196 (= e!71039 Unit!3398)))

(declare-fun b!109197 () Bool)

(assert (=> b!109197 (= e!71040 (isDefined!110 (getValueByKey!156 (toList!811 lt!55644) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30495 c!19285) b!109195))

(assert (= (and d!30495 (not c!19285)) b!109196))

(assert (= (and d!30495 (not res!54084)) b!109197))

(declare-fun m!123561 () Bool)

(assert (=> d!30495 m!123561))

(declare-fun m!123563 () Bool)

(assert (=> b!109195 m!123563))

(declare-fun m!123565 () Bool)

(assert (=> b!109195 m!123565))

(assert (=> b!109195 m!123565))

(declare-fun m!123567 () Bool)

(assert (=> b!109195 m!123567))

(assert (=> b!109197 m!123565))

(assert (=> b!109197 m!123565))

(assert (=> b!109197 m!123567))

(assert (=> b!108335 d!30495))

(declare-fun b!109210 () Bool)

(declare-fun e!71047 () SeekEntryResult!270)

(declare-fun e!71049 () SeekEntryResult!270)

(assert (=> b!109210 (= e!71047 e!71049)))

(declare-fun c!19292 () Bool)

(declare-fun lt!56235 () (_ BitVec 64))

(assert (=> b!109210 (= c!19292 (= lt!56235 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!109211 () Bool)

(assert (=> b!109211 (= e!71049 (Found!270 (index!3231 lt!55539)))))

(declare-fun b!109212 () Bool)

(declare-fun e!71048 () SeekEntryResult!270)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!109212 (= e!71048 (seekKeyOrZeroReturnVacant!0 (bvadd (x!13814 lt!55539) #b00000000000000000000000000000001) (nextIndex!0 (index!3231 lt!55539) (x!13814 lt!55539) (mask!6764 newMap!16)) (index!3231 lt!55539) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun lt!56234 () SeekEntryResult!270)

(declare-fun d!30497 () Bool)

(assert (=> d!30497 (and (or ((_ is Undefined!270) lt!56234) (not ((_ is Found!270) lt!56234)) (and (bvsge (index!3230 lt!56234) #b00000000000000000000000000000000) (bvslt (index!3230 lt!56234) (size!2330 (_keys!4316 newMap!16))))) (or ((_ is Undefined!270) lt!56234) ((_ is Found!270) lt!56234) (not ((_ is MissingVacant!270) lt!56234)) (not (= (index!3232 lt!56234) (index!3231 lt!55539))) (and (bvsge (index!3232 lt!56234) #b00000000000000000000000000000000) (bvslt (index!3232 lt!56234) (size!2330 (_keys!4316 newMap!16))))) (or ((_ is Undefined!270) lt!56234) (ite ((_ is Found!270) lt!56234) (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!56234)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (and ((_ is MissingVacant!270) lt!56234) (= (index!3232 lt!56234) (index!3231 lt!55539)) (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3232 lt!56234)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!30497 (= lt!56234 e!71047)))

(declare-fun c!19293 () Bool)

(assert (=> d!30497 (= c!19293 (bvsge (x!13814 lt!55539) #b01111111111111111111111111111110))))

(assert (=> d!30497 (= lt!56235 (select (arr!2074 (_keys!4316 newMap!16)) (index!3231 lt!55539)))))

(assert (=> d!30497 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30497 (= (seekKeyOrZeroReturnVacant!0 (x!13814 lt!55539) (index!3231 lt!55539) (index!3231 lt!55539) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)) lt!56234)))

(declare-fun b!109213 () Bool)

(declare-fun c!19294 () Bool)

(assert (=> b!109213 (= c!19294 (= lt!56235 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109213 (= e!71049 e!71048)))

(declare-fun b!109214 () Bool)

(assert (=> b!109214 (= e!71047 Undefined!270)))

(declare-fun b!109215 () Bool)

(assert (=> b!109215 (= e!71048 (MissingVacant!270 (index!3231 lt!55539)))))

(assert (= (and d!30497 c!19293) b!109214))

(assert (= (and d!30497 (not c!19293)) b!109210))

(assert (= (and b!109210 c!19292) b!109211))

(assert (= (and b!109210 (not c!19292)) b!109213))

(assert (= (and b!109213 c!19294) b!109215))

(assert (= (and b!109213 (not c!19294)) b!109212))

(declare-fun m!123569 () Bool)

(assert (=> b!109212 m!123569))

(assert (=> b!109212 m!123569))

(assert (=> b!109212 m!121177))

(declare-fun m!123571 () Bool)

(assert (=> b!109212 m!123571))

(declare-fun m!123573 () Bool)

(assert (=> d!30497 m!123573))

(declare-fun m!123575 () Bool)

(assert (=> d!30497 m!123575))

(assert (=> d!30497 m!121581))

(assert (=> d!30497 m!121521))

(assert (=> b!108114 d!30497))

(assert (=> d!30035 d!30033))

(assert (=> d!30035 d!30015))

(declare-fun d!30499 () Bool)

(assert (=> d!30499 (= (apply!99 (+!148 lt!55499 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55493) (apply!99 lt!55499 lt!55493))))

(assert (=> d!30499 true))

(declare-fun _$34!896 () Unit!3339)

(assert (=> d!30499 (= (choose!684 lt!55499 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))) lt!55493) _$34!896)))

(declare-fun bs!4489 () Bool)

(assert (= bs!4489 d!30499))

(assert (=> bs!4489 m!121469))

(assert (=> bs!4489 m!121469))

(assert (=> bs!4489 m!121475))

(assert (=> bs!4489 m!121461))

(assert (=> d!30035 d!30499))

(declare-fun d!30501 () Bool)

(declare-fun e!71051 () Bool)

(assert (=> d!30501 e!71051))

(declare-fun res!54085 () Bool)

(assert (=> d!30501 (=> res!54085 e!71051)))

(declare-fun lt!56236 () Bool)

(assert (=> d!30501 (= res!54085 (not lt!56236))))

(declare-fun lt!56237 () Bool)

(assert (=> d!30501 (= lt!56236 lt!56237)))

(declare-fun lt!56238 () Unit!3339)

(declare-fun e!71050 () Unit!3339)

(assert (=> d!30501 (= lt!56238 e!71050)))

(declare-fun c!19295 () Bool)

(assert (=> d!30501 (= c!19295 lt!56237)))

(assert (=> d!30501 (= lt!56237 (containsKey!160 (toList!811 lt!55499) lt!55493))))

(assert (=> d!30501 (= (contains!834 lt!55499 lt!55493) lt!56236)))

(declare-fun b!109216 () Bool)

(declare-fun lt!56239 () Unit!3339)

(assert (=> b!109216 (= e!71050 lt!56239)))

(assert (=> b!109216 (= lt!56239 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55499) lt!55493))))

(assert (=> b!109216 (isDefined!110 (getValueByKey!156 (toList!811 lt!55499) lt!55493))))

(declare-fun b!109217 () Bool)

(declare-fun Unit!3399 () Unit!3339)

(assert (=> b!109217 (= e!71050 Unit!3399)))

(declare-fun b!109218 () Bool)

(assert (=> b!109218 (= e!71051 (isDefined!110 (getValueByKey!156 (toList!811 lt!55499) lt!55493)))))

(assert (= (and d!30501 c!19295) b!109216))

(assert (= (and d!30501 (not c!19295)) b!109217))

(assert (= (and d!30501 (not res!54085)) b!109218))

(declare-fun m!123577 () Bool)

(assert (=> d!30501 m!123577))

(declare-fun m!123579 () Bool)

(assert (=> b!109216 m!123579))

(assert (=> b!109216 m!122129))

(assert (=> b!109216 m!122129))

(declare-fun m!123581 () Bool)

(assert (=> b!109216 m!123581))

(assert (=> b!109218 m!122129))

(assert (=> b!109218 m!122129))

(assert (=> b!109218 m!123581))

(assert (=> d!30035 d!30501))

(assert (=> d!30035 d!30023))

(declare-fun d!30503 () Bool)

(declare-fun e!71052 () Bool)

(assert (=> d!30503 e!71052))

(declare-fun res!54086 () Bool)

(assert (=> d!30503 (=> (not res!54086) (not e!71052))))

(declare-fun lt!56242 () ListLongMap!1591)

(assert (=> d!30503 (= res!54086 (contains!834 lt!56242 (_1!1221 (ite (or c!18993 c!18991) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))))))))

(declare-fun lt!56240 () List!1648)

(assert (=> d!30503 (= lt!56242 (ListLongMap!1592 lt!56240))))

(declare-fun lt!56241 () Unit!3339)

(declare-fun lt!56243 () Unit!3339)

(assert (=> d!30503 (= lt!56241 lt!56243)))

(assert (=> d!30503 (= (getValueByKey!156 lt!56240 (_1!1221 (ite (or c!18993 c!18991) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))))) (Some!161 (_2!1221 (ite (or c!18993 c!18991) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))))))))

(assert (=> d!30503 (= lt!56243 (lemmaContainsTupThenGetReturnValue!74 lt!56240 (_1!1221 (ite (or c!18993 c!18991) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))) (_2!1221 (ite (or c!18993 c!18991) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))))))))

(assert (=> d!30503 (= lt!56240 (insertStrictlySorted!76 (toList!811 (ite c!18993 call!11476 (ite c!18991 call!11477 call!11479))) (_1!1221 (ite (or c!18993 c!18991) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))) (_2!1221 (ite (or c!18993 c!18991) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))))))))

(assert (=> d!30503 (= (+!148 (ite c!18993 call!11476 (ite c!18991 call!11477 call!11479)) (ite (or c!18993 c!18991) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))) lt!56242)))

(declare-fun b!109219 () Bool)

(declare-fun res!54087 () Bool)

(assert (=> b!109219 (=> (not res!54087) (not e!71052))))

(assert (=> b!109219 (= res!54087 (= (getValueByKey!156 (toList!811 lt!56242) (_1!1221 (ite (or c!18993 c!18991) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))))) (Some!161 (_2!1221 (ite (or c!18993 c!18991) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))))))))

(declare-fun b!109220 () Bool)

(assert (=> b!109220 (= e!71052 (contains!835 (toList!811 lt!56242) (ite (or c!18993 c!18991) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))))))

(assert (= (and d!30503 res!54086) b!109219))

(assert (= (and b!109219 res!54087) b!109220))

(declare-fun m!123583 () Bool)

(assert (=> d!30503 m!123583))

(declare-fun m!123585 () Bool)

(assert (=> d!30503 m!123585))

(declare-fun m!123587 () Bool)

(assert (=> d!30503 m!123587))

(declare-fun m!123589 () Bool)

(assert (=> d!30503 m!123589))

(declare-fun m!123591 () Bool)

(assert (=> b!109219 m!123591))

(declare-fun m!123593 () Bool)

(assert (=> b!109220 m!123593))

(assert (=> bm!11472 d!30503))

(declare-fun d!30505 () Bool)

(declare-fun e!71054 () Bool)

(assert (=> d!30505 e!71054))

(declare-fun res!54088 () Bool)

(assert (=> d!30505 (=> res!54088 e!71054)))

(declare-fun lt!56244 () Bool)

(assert (=> d!30505 (= res!54088 (not lt!56244))))

(declare-fun lt!56245 () Bool)

(assert (=> d!30505 (= lt!56244 lt!56245)))

(declare-fun lt!56246 () Unit!3339)

(declare-fun e!71053 () Unit!3339)

(assert (=> d!30505 (= lt!56246 e!71053)))

(declare-fun c!19296 () Bool)

(assert (=> d!30505 (= c!19296 lt!56245)))

(assert (=> d!30505 (= lt!56245 (containsKey!160 (toList!811 lt!55771) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!30505 (= (contains!834 lt!55771 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) lt!56244)))

(declare-fun b!109221 () Bool)

(declare-fun lt!56247 () Unit!3339)

(assert (=> b!109221 (= e!71053 lt!56247)))

(assert (=> b!109221 (= lt!56247 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55771) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> b!109221 (isDefined!110 (getValueByKey!156 (toList!811 lt!55771) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun b!109222 () Bool)

(declare-fun Unit!3400 () Unit!3339)

(assert (=> b!109222 (= e!71053 Unit!3400)))

(declare-fun b!109223 () Bool)

(assert (=> b!109223 (= e!71054 (isDefined!110 (getValueByKey!156 (toList!811 lt!55771) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(assert (= (and d!30505 c!19296) b!109221))

(assert (= (and d!30505 (not c!19296)) b!109222))

(assert (= (and d!30505 (not res!54088)) b!109223))

(declare-fun m!123595 () Bool)

(assert (=> d!30505 m!123595))

(declare-fun m!123597 () Bool)

(assert (=> b!109221 m!123597))

(assert (=> b!109221 m!122041))

(assert (=> b!109221 m!122041))

(declare-fun m!123599 () Bool)

(assert (=> b!109221 m!123599))

(assert (=> b!109223 m!122041))

(assert (=> b!109223 m!122041))

(assert (=> b!109223 m!123599))

(assert (=> d!29999 d!30505))

(declare-fun c!19297 () Bool)

(declare-fun d!30507 () Bool)

(assert (=> d!30507 (= c!19297 (and ((_ is Cons!1644) lt!55769) (= (_1!1221 (h!2242 lt!55769)) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun e!71055 () Option!162)

(assert (=> d!30507 (= (getValueByKey!156 lt!55769 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) e!71055)))

(declare-fun b!109226 () Bool)

(declare-fun e!71056 () Option!162)

(assert (=> b!109226 (= e!71056 (getValueByKey!156 (t!5776 lt!55769) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun b!109227 () Bool)

(assert (=> b!109227 (= e!71056 None!160)))

(declare-fun b!109225 () Bool)

(assert (=> b!109225 (= e!71055 e!71056)))

(declare-fun c!19298 () Bool)

(assert (=> b!109225 (= c!19298 (and ((_ is Cons!1644) lt!55769) (not (= (_1!1221 (h!2242 lt!55769)) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))))

(declare-fun b!109224 () Bool)

(assert (=> b!109224 (= e!71055 (Some!161 (_2!1221 (h!2242 lt!55769))))))

(assert (= (and d!30507 c!19297) b!109224))

(assert (= (and d!30507 (not c!19297)) b!109225))

(assert (= (and b!109225 c!19298) b!109226))

(assert (= (and b!109225 (not c!19298)) b!109227))

(declare-fun m!123601 () Bool)

(assert (=> b!109226 m!123601))

(assert (=> d!29999 d!30507))

(declare-fun d!30509 () Bool)

(assert (=> d!30509 (= (getValueByKey!156 lt!55769 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (Some!161 (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun lt!56248 () Unit!3339)

(assert (=> d!30509 (= lt!56248 (choose!680 lt!55769 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun e!71057 () Bool)

(assert (=> d!30509 e!71057))

(declare-fun res!54089 () Bool)

(assert (=> d!30509 (=> (not res!54089) (not e!71057))))

(assert (=> d!30509 (= res!54089 (isStrictlySorted!305 lt!55769))))

(assert (=> d!30509 (= (lemmaContainsTupThenGetReturnValue!74 lt!55769 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) lt!56248)))

(declare-fun b!109228 () Bool)

(declare-fun res!54090 () Bool)

(assert (=> b!109228 (=> (not res!54090) (not e!71057))))

(assert (=> b!109228 (= res!54090 (containsKey!160 lt!55769 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun b!109229 () Bool)

(assert (=> b!109229 (= e!71057 (contains!835 lt!55769 (tuple2!2423 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(assert (= (and d!30509 res!54089) b!109228))

(assert (= (and b!109228 res!54090) b!109229))

(assert (=> d!30509 m!122035))

(declare-fun m!123603 () Bool)

(assert (=> d!30509 m!123603))

(declare-fun m!123605 () Bool)

(assert (=> d!30509 m!123605))

(declare-fun m!123607 () Bool)

(assert (=> b!109228 m!123607))

(declare-fun m!123609 () Bool)

(assert (=> b!109229 m!123609))

(assert (=> d!29999 d!30509))

(declare-fun b!109230 () Bool)

(declare-fun c!19299 () Bool)

(assert (=> b!109230 (= c!19299 (and ((_ is Cons!1644) (toList!811 lt!55250)) (bvsgt (_1!1221 (h!2242 (toList!811 lt!55250))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun e!71058 () List!1648)

(declare-fun e!71059 () List!1648)

(assert (=> b!109230 (= e!71058 e!71059)))

(declare-fun b!109231 () Bool)

(declare-fun e!71060 () List!1648)

(declare-fun call!11620 () List!1648)

(assert (=> b!109231 (= e!71060 call!11620)))

(declare-fun bm!11616 () Bool)

(declare-fun c!19300 () Bool)

(declare-fun e!71062 () List!1648)

(assert (=> bm!11616 (= call!11620 ($colon$colon!81 e!71062 (ite c!19300 (h!2242 (toList!811 lt!55250)) (tuple2!2423 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))))

(declare-fun c!19301 () Bool)

(assert (=> bm!11616 (= c!19301 c!19300)))

(declare-fun b!109232 () Bool)

(declare-fun call!11619 () List!1648)

(assert (=> b!109232 (= e!71059 call!11619)))

(declare-fun b!109233 () Bool)

(declare-fun call!11621 () List!1648)

(assert (=> b!109233 (= e!71058 call!11621)))

(declare-fun d!30511 () Bool)

(declare-fun e!71061 () Bool)

(assert (=> d!30511 e!71061))

(declare-fun res!54091 () Bool)

(assert (=> d!30511 (=> (not res!54091) (not e!71061))))

(declare-fun lt!56249 () List!1648)

(assert (=> d!30511 (= res!54091 (isStrictlySorted!305 lt!56249))))

(assert (=> d!30511 (= lt!56249 e!71060)))

(assert (=> d!30511 (= c!19300 (and ((_ is Cons!1644) (toList!811 lt!55250)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55250))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(assert (=> d!30511 (isStrictlySorted!305 (toList!811 lt!55250))))

(assert (=> d!30511 (= (insertStrictlySorted!76 (toList!811 lt!55250) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) lt!56249)))

(declare-fun b!109234 () Bool)

(assert (=> b!109234 (= e!71060 e!71058)))

(declare-fun c!19302 () Bool)

(assert (=> b!109234 (= c!19302 (and ((_ is Cons!1644) (toList!811 lt!55250)) (= (_1!1221 (h!2242 (toList!811 lt!55250))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun b!109235 () Bool)

(declare-fun res!54092 () Bool)

(assert (=> b!109235 (=> (not res!54092) (not e!71061))))

(assert (=> b!109235 (= res!54092 (containsKey!160 lt!56249 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun bm!11617 () Bool)

(assert (=> bm!11617 (= call!11621 call!11620)))

(declare-fun bm!11618 () Bool)

(assert (=> bm!11618 (= call!11619 call!11621)))

(declare-fun b!109236 () Bool)

(assert (=> b!109236 (= e!71062 (insertStrictlySorted!76 (t!5776 (toList!811 lt!55250)) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun b!109237 () Bool)

(assert (=> b!109237 (= e!71059 call!11619)))

(declare-fun b!109238 () Bool)

(assert (=> b!109238 (= e!71061 (contains!835 lt!56249 (tuple2!2423 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun b!109239 () Bool)

(assert (=> b!109239 (= e!71062 (ite c!19302 (t!5776 (toList!811 lt!55250)) (ite c!19299 (Cons!1644 (h!2242 (toList!811 lt!55250)) (t!5776 (toList!811 lt!55250))) Nil!1645)))))

(assert (= (and d!30511 c!19300) b!109231))

(assert (= (and d!30511 (not c!19300)) b!109234))

(assert (= (and b!109234 c!19302) b!109233))

(assert (= (and b!109234 (not c!19302)) b!109230))

(assert (= (and b!109230 c!19299) b!109237))

(assert (= (and b!109230 (not c!19299)) b!109232))

(assert (= (or b!109237 b!109232) bm!11618))

(assert (= (or b!109233 bm!11618) bm!11617))

(assert (= (or b!109231 bm!11617) bm!11616))

(assert (= (and bm!11616 c!19301) b!109236))

(assert (= (and bm!11616 (not c!19301)) b!109239))

(assert (= (and d!30511 res!54091) b!109235))

(assert (= (and b!109235 res!54092) b!109238))

(declare-fun m!123611 () Bool)

(assert (=> b!109238 m!123611))

(declare-fun m!123613 () Bool)

(assert (=> b!109235 m!123613))

(declare-fun m!123615 () Bool)

(assert (=> bm!11616 m!123615))

(declare-fun m!123617 () Bool)

(assert (=> d!30511 m!123617))

(assert (=> d!30511 m!121775))

(declare-fun m!123619 () Bool)

(assert (=> b!109236 m!123619))

(assert (=> d!29999 d!30511))

(assert (=> d!30053 d!30051))

(declare-fun d!30513 () Bool)

(assert (=> d!30513 (= (getValueByKey!156 lt!55329 (_1!1221 lt!55252)) (Some!161 (_2!1221 lt!55252)))))

(assert (=> d!30513 true))

(declare-fun _$22!440 () Unit!3339)

(assert (=> d!30513 (= (choose!680 lt!55329 (_1!1221 lt!55252) (_2!1221 lt!55252)) _$22!440)))

(declare-fun bs!4490 () Bool)

(assert (= bs!4490 d!30513))

(assert (=> bs!4490 m!121341))

(assert (=> d!30053 d!30513))

(declare-fun d!30515 () Bool)

(declare-fun res!54093 () Bool)

(declare-fun e!71063 () Bool)

(assert (=> d!30515 (=> res!54093 e!71063)))

(assert (=> d!30515 (= res!54093 (or ((_ is Nil!1645) lt!55329) ((_ is Nil!1645) (t!5776 lt!55329))))))

(assert (=> d!30515 (= (isStrictlySorted!305 lt!55329) e!71063)))

(declare-fun b!109240 () Bool)

(declare-fun e!71064 () Bool)

(assert (=> b!109240 (= e!71063 e!71064)))

(declare-fun res!54094 () Bool)

(assert (=> b!109240 (=> (not res!54094) (not e!71064))))

(assert (=> b!109240 (= res!54094 (bvslt (_1!1221 (h!2242 lt!55329)) (_1!1221 (h!2242 (t!5776 lt!55329)))))))

(declare-fun b!109241 () Bool)

(assert (=> b!109241 (= e!71064 (isStrictlySorted!305 (t!5776 lt!55329)))))

(assert (= (and d!30515 (not res!54093)) b!109240))

(assert (= (and b!109240 res!54094) b!109241))

(declare-fun m!123621 () Bool)

(assert (=> b!109241 m!123621))

(assert (=> d!30053 d!30515))

(declare-fun d!30517 () Bool)

(declare-fun c!19303 () Bool)

(assert (=> d!30517 (= c!19303 (and ((_ is Cons!1644) (toList!811 lt!55803)) (= (_1!1221 (h!2242 (toList!811 lt!55803))) (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!71065 () Option!162)

(assert (=> d!30517 (= (getValueByKey!156 (toList!811 lt!55803) (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) e!71065)))

(declare-fun e!71066 () Option!162)

(declare-fun b!109244 () Bool)

(assert (=> b!109244 (= e!71066 (getValueByKey!156 (t!5776 (toList!811 lt!55803)) (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109245 () Bool)

(assert (=> b!109245 (= e!71066 None!160)))

(declare-fun b!109243 () Bool)

(assert (=> b!109243 (= e!71065 e!71066)))

(declare-fun c!19304 () Bool)

(assert (=> b!109243 (= c!19304 (and ((_ is Cons!1644) (toList!811 lt!55803)) (not (= (_1!1221 (h!2242 (toList!811 lt!55803))) (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun b!109242 () Bool)

(assert (=> b!109242 (= e!71065 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55803)))))))

(assert (= (and d!30517 c!19303) b!109242))

(assert (= (and d!30517 (not c!19303)) b!109243))

(assert (= (and b!109243 c!19304) b!109244))

(assert (= (and b!109243 (not c!19304)) b!109245))

(declare-fun m!123623 () Bool)

(assert (=> b!109244 m!123623))

(assert (=> b!108444 d!30517))

(declare-fun d!30519 () Bool)

(assert (=> d!30519 (= (isDefined!110 (getValueByKey!156 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325))) lt!55323)) (not (isEmpty!379 (getValueByKey!156 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325))) lt!55323))))))

(declare-fun bs!4491 () Bool)

(assert (= bs!4491 d!30519))

(assert (=> bs!4491 m!122299))

(declare-fun m!123625 () Bool)

(assert (=> bs!4491 m!123625))

(assert (=> b!108511 d!30519))

(declare-fun d!30521 () Bool)

(declare-fun c!19305 () Bool)

(assert (=> d!30521 (= c!19305 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325)))) (= (_1!1221 (h!2242 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325))))) lt!55323)))))

(declare-fun e!71067 () Option!162)

(assert (=> d!30521 (= (getValueByKey!156 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325))) lt!55323) e!71067)))

(declare-fun b!109248 () Bool)

(declare-fun e!71068 () Option!162)

(assert (=> b!109248 (= e!71068 (getValueByKey!156 (t!5776 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325)))) lt!55323))))

(declare-fun b!109249 () Bool)

(assert (=> b!109249 (= e!71068 None!160)))

(declare-fun b!109247 () Bool)

(assert (=> b!109247 (= e!71067 e!71068)))

(declare-fun c!19306 () Bool)

(assert (=> b!109247 (= c!19306 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325)))) (not (= (_1!1221 (h!2242 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325))))) lt!55323))))))

(declare-fun b!109246 () Bool)

(assert (=> b!109246 (= e!71067 (Some!161 (_2!1221 (h!2242 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325)))))))))

(assert (= (and d!30521 c!19305) b!109246))

(assert (= (and d!30521 (not c!19305)) b!109247))

(assert (= (and b!109247 c!19306) b!109248))

(assert (= (and b!109247 (not c!19306)) b!109249))

(declare-fun m!123627 () Bool)

(assert (=> b!109248 m!123627))

(assert (=> b!108511 d!30521))

(declare-fun d!30523 () Bool)

(declare-fun res!54095 () Bool)

(declare-fun e!71069 () Bool)

(assert (=> d!30523 (=> res!54095 e!71069)))

(assert (=> d!30523 (= res!54095 (and ((_ is Cons!1644) (t!5776 (toList!811 lt!55247))) (= (_1!1221 (h!2242 (t!5776 (toList!811 lt!55247)))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!30523 (= (containsKey!160 (t!5776 (toList!811 lt!55247)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) e!71069)))

(declare-fun b!109250 () Bool)

(declare-fun e!71070 () Bool)

(assert (=> b!109250 (= e!71069 e!71070)))

(declare-fun res!54096 () Bool)

(assert (=> b!109250 (=> (not res!54096) (not e!71070))))

(assert (=> b!109250 (= res!54096 (and (or (not ((_ is Cons!1644) (t!5776 (toList!811 lt!55247)))) (bvsle (_1!1221 (h!2242 (t!5776 (toList!811 lt!55247)))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))) ((_ is Cons!1644) (t!5776 (toList!811 lt!55247))) (bvslt (_1!1221 (h!2242 (t!5776 (toList!811 lt!55247)))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))))

(declare-fun b!109251 () Bool)

(assert (=> b!109251 (= e!71070 (containsKey!160 (t!5776 (t!5776 (toList!811 lt!55247))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30523 (not res!54095)) b!109250))

(assert (= (and b!109250 res!54096) b!109251))

(assert (=> b!109251 m!121177))

(declare-fun m!123629 () Bool)

(assert (=> b!109251 m!123629))

(assert (=> b!108484 d!30523))

(declare-fun d!30525 () Bool)

(declare-fun res!54097 () Bool)

(declare-fun e!71071 () Bool)

(assert (=> d!30525 (=> res!54097 e!71071)))

(assert (=> d!30525 (= res!54097 (and ((_ is Cons!1644) lt!55605) (= (_1!1221 (h!2242 lt!55605)) (_1!1221 lt!55249))))))

(assert (=> d!30525 (= (containsKey!160 lt!55605 (_1!1221 lt!55249)) e!71071)))

(declare-fun b!109252 () Bool)

(declare-fun e!71072 () Bool)

(assert (=> b!109252 (= e!71071 e!71072)))

(declare-fun res!54098 () Bool)

(assert (=> b!109252 (=> (not res!54098) (not e!71072))))

(assert (=> b!109252 (= res!54098 (and (or (not ((_ is Cons!1644) lt!55605)) (bvsle (_1!1221 (h!2242 lt!55605)) (_1!1221 lt!55249))) ((_ is Cons!1644) lt!55605) (bvslt (_1!1221 (h!2242 lt!55605)) (_1!1221 lt!55249))))))

(declare-fun b!109253 () Bool)

(assert (=> b!109253 (= e!71072 (containsKey!160 (t!5776 lt!55605) (_1!1221 lt!55249)))))

(assert (= (and d!30525 (not res!54097)) b!109252))

(assert (= (and b!109252 res!54098) b!109253))

(declare-fun m!123631 () Bool)

(assert (=> b!109253 m!123631))

(assert (=> b!108220 d!30525))

(declare-fun d!30527 () Bool)

(assert (=> d!30527 (= (apply!99 lt!55510 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1352 (getValueByKey!156 (toList!811 lt!55510) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4492 () Bool)

(assert (= bs!4492 d!30527))

(assert (=> bs!4492 m!121517))

(assert (=> bs!4492 m!122949))

(assert (=> bs!4492 m!122949))

(declare-fun m!123633 () Bool)

(assert (=> bs!4492 m!123633))

(assert (=> b!108079 d!30527))

(declare-fun d!30529 () Bool)

(declare-fun c!19307 () Bool)

(assert (=> d!30529 (= c!19307 ((_ is ValueCellFull!1002) (select (arr!2075 (_values!2589 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!71073 () V!3235)

(assert (=> d!30529 (= (get!1349 (select (arr!2075 (_values!2589 newMap!16)) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!71073)))

(declare-fun b!109254 () Bool)

(assert (=> b!109254 (= e!71073 (get!1350 (select (arr!2075 (_values!2589 newMap!16)) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109255 () Bool)

(assert (=> b!109255 (= e!71073 (get!1351 (select (arr!2075 (_values!2589 newMap!16)) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30529 c!19307) b!109254))

(assert (= (and d!30529 (not c!19307)) b!109255))

(assert (=> b!109254 m!121567))

(assert (=> b!109254 m!121569))

(declare-fun m!123635 () Bool)

(assert (=> b!109254 m!123635))

(assert (=> b!109255 m!121567))

(assert (=> b!109255 m!121569))

(declare-fun m!123637 () Bool)

(assert (=> b!109255 m!123637))

(assert (=> b!108079 d!30529))

(assert (=> d!29951 d!29899))

(declare-fun bm!11623 () Bool)

(declare-fun call!11627 () Bool)

(assert (=> bm!11623 (= call!11627 (arrayContainsKey!0 (_keys!4316 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!30531 () Bool)

(declare-fun e!71085 () Bool)

(assert (=> d!30531 e!71085))

(declare-fun c!19313 () Bool)

(declare-fun lt!56252 () SeekEntryResult!270)

(assert (=> d!30531 (= c!19313 ((_ is MissingZero!270) lt!56252))))

(assert (=> d!30531 (= lt!56252 (seekEntryOrOpen!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(assert (=> d!30531 true))

(declare-fun _$34!899 () Unit!3339)

(assert (=> d!30531 (= (choose!682 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (defaultEntry!2606 newMap!16)) _$34!899)))

(declare-fun b!109272 () Bool)

(declare-fun e!71083 () Bool)

(assert (=> b!109272 (= e!71083 (not call!11627))))

(declare-fun bm!11624 () Bool)

(declare-fun call!11626 () Bool)

(assert (=> bm!11624 (= call!11626 (inRange!0 (ite c!19313 (index!3229 lt!56252) (index!3232 lt!56252)) (mask!6764 newMap!16)))))

(declare-fun b!109273 () Bool)

(assert (=> b!109273 (= e!71085 e!71083)))

(declare-fun res!54107 () Bool)

(assert (=> b!109273 (= res!54107 call!11626)))

(assert (=> b!109273 (=> (not res!54107) (not e!71083))))

(declare-fun b!109274 () Bool)

(declare-fun e!71082 () Bool)

(assert (=> b!109274 (= e!71085 e!71082)))

(declare-fun c!19312 () Bool)

(assert (=> b!109274 (= c!19312 ((_ is MissingVacant!270) lt!56252))))

(declare-fun b!109275 () Bool)

(declare-fun res!54109 () Bool)

(declare-fun e!71084 () Bool)

(assert (=> b!109275 (=> (not res!54109) (not e!71084))))

(assert (=> b!109275 (= res!54109 (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3232 lt!56252)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109276 () Bool)

(declare-fun res!54110 () Bool)

(assert (=> b!109276 (= res!54110 (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3229 lt!56252)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109276 (=> (not res!54110) (not e!71083))))

(declare-fun b!109277 () Bool)

(declare-fun res!54108 () Bool)

(assert (=> b!109277 (=> (not res!54108) (not e!71084))))

(assert (=> b!109277 (= res!54108 call!11626)))

(assert (=> b!109277 (= e!71082 e!71084)))

(declare-fun b!109278 () Bool)

(assert (=> b!109278 (= e!71082 ((_ is Undefined!270) lt!56252))))

(declare-fun b!109279 () Bool)

(assert (=> b!109279 (= e!71084 (not call!11627))))

(assert (= (and d!30531 c!19313) b!109273))

(assert (= (and d!30531 (not c!19313)) b!109274))

(assert (= (and b!109273 res!54107) b!109276))

(assert (= (and b!109276 res!54110) b!109272))

(assert (= (and b!109274 c!19312) b!109277))

(assert (= (and b!109274 (not c!19312)) b!109278))

(assert (= (and b!109277 res!54108) b!109275))

(assert (= (and b!109275 res!54109) b!109279))

(assert (= (or b!109273 b!109277) bm!11624))

(assert (= (or b!109272 b!109279) bm!11623))

(declare-fun m!123639 () Bool)

(assert (=> b!109275 m!123639))

(declare-fun m!123641 () Bool)

(assert (=> bm!11624 m!123641))

(declare-fun m!123643 () Bool)

(assert (=> b!109276 m!123643))

(assert (=> bm!11623 m!121177))

(assert (=> bm!11623 m!121401))

(assert (=> d!30531 m!121177))

(assert (=> d!30531 m!121393))

(assert (=> d!29951 d!30531))

(assert (=> d!29951 d!30107))

(assert (=> b!108155 d!30151))

(declare-fun d!30533 () Bool)

(assert (=> d!30533 (= (isDefined!110 (getValueByKey!156 (toList!811 lt!55479) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!379 (getValueByKey!156 (toList!811 lt!55479) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4493 () Bool)

(assert (= bs!4493 d!30533))

(assert (=> bs!4493 m!121855))

(declare-fun m!123645 () Bool)

(assert (=> bs!4493 m!123645))

(assert (=> b!108309 d!30533))

(assert (=> b!108309 d!30431))

(declare-fun d!30535 () Bool)

(assert (=> d!30535 (= (get!1352 (getValueByKey!156 (toList!811 lt!55479) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2917 (getValueByKey!156 (toList!811 lt!55479) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!29945 d!30535))

(assert (=> d!29945 d!30485))

(declare-fun d!30537 () Bool)

(declare-fun res!54111 () Bool)

(declare-fun e!71086 () Bool)

(assert (=> d!30537 (=> res!54111 e!71086)))

(assert (=> d!30537 (= res!54111 (or ((_ is Nil!1645) lt!55611) ((_ is Nil!1645) (t!5776 lt!55611))))))

(assert (=> d!30537 (= (isStrictlySorted!305 lt!55611) e!71086)))

(declare-fun b!109280 () Bool)

(declare-fun e!71087 () Bool)

(assert (=> b!109280 (= e!71086 e!71087)))

(declare-fun res!54112 () Bool)

(assert (=> b!109280 (=> (not res!54112) (not e!71087))))

(assert (=> b!109280 (= res!54112 (bvslt (_1!1221 (h!2242 lt!55611)) (_1!1221 (h!2242 (t!5776 lt!55611)))))))

(declare-fun b!109281 () Bool)

(assert (=> b!109281 (= e!71087 (isStrictlySorted!305 (t!5776 lt!55611)))))

(assert (= (and d!30537 (not res!54111)) b!109280))

(assert (= (and b!109280 res!54112) b!109281))

(declare-fun m!123647 () Bool)

(assert (=> b!109281 m!123647))

(assert (=> d!29943 d!30537))

(declare-fun d!30539 () Bool)

(declare-fun res!54113 () Bool)

(declare-fun e!71088 () Bool)

(assert (=> d!30539 (=> res!54113 e!71088)))

(assert (=> d!30539 (= res!54113 (or ((_ is Nil!1645) (toList!811 lt!55250)) ((_ is Nil!1645) (t!5776 (toList!811 lt!55250)))))))

(assert (=> d!30539 (= (isStrictlySorted!305 (toList!811 lt!55250)) e!71088)))

(declare-fun b!109282 () Bool)

(declare-fun e!71089 () Bool)

(assert (=> b!109282 (= e!71088 e!71089)))

(declare-fun res!54114 () Bool)

(assert (=> b!109282 (=> (not res!54114) (not e!71089))))

(assert (=> b!109282 (= res!54114 (bvslt (_1!1221 (h!2242 (toList!811 lt!55250))) (_1!1221 (h!2242 (t!5776 (toList!811 lt!55250))))))))

(declare-fun b!109283 () Bool)

(assert (=> b!109283 (= e!71089 (isStrictlySorted!305 (t!5776 (toList!811 lt!55250))))))

(assert (= (and d!30539 (not res!54113)) b!109282))

(assert (= (and b!109282 res!54114) b!109283))

(declare-fun m!123649 () Bool)

(assert (=> b!109283 m!123649))

(assert (=> d!29943 d!30539))

(assert (=> d!29915 d!30107))

(assert (=> b!108096 d!30151))

(declare-fun d!30541 () Bool)

(declare-fun res!54115 () Bool)

(declare-fun e!71090 () Bool)

(assert (=> d!30541 (=> res!54115 e!71090)))

(assert (=> d!30541 (= res!54115 (and ((_ is Cons!1644) (toList!811 lt!55303)) (= (_1!1221 (h!2242 (toList!811 lt!55303))) (_1!1221 lt!55252))))))

(assert (=> d!30541 (= (containsKey!160 (toList!811 lt!55303) (_1!1221 lt!55252)) e!71090)))

(declare-fun b!109284 () Bool)

(declare-fun e!71091 () Bool)

(assert (=> b!109284 (= e!71090 e!71091)))

(declare-fun res!54116 () Bool)

(assert (=> b!109284 (=> (not res!54116) (not e!71091))))

(assert (=> b!109284 (= res!54116 (and (or (not ((_ is Cons!1644) (toList!811 lt!55303))) (bvsle (_1!1221 (h!2242 (toList!811 lt!55303))) (_1!1221 lt!55252))) ((_ is Cons!1644) (toList!811 lt!55303)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55303))) (_1!1221 lt!55252))))))

(declare-fun b!109285 () Bool)

(assert (=> b!109285 (= e!71091 (containsKey!160 (t!5776 (toList!811 lt!55303)) (_1!1221 lt!55252)))))

(assert (= (and d!30541 (not res!54115)) b!109284))

(assert (= (and b!109284 res!54116) b!109285))

(declare-fun m!123651 () Bool)

(assert (=> b!109285 m!123651))

(assert (=> d!29955 d!30541))

(declare-fun d!30543 () Bool)

(declare-fun e!71093 () Bool)

(assert (=> d!30543 e!71093))

(declare-fun res!54117 () Bool)

(assert (=> d!30543 (=> res!54117 e!71093)))

(declare-fun lt!56253 () Bool)

(assert (=> d!30543 (= res!54117 (not lt!56253))))

(declare-fun lt!56254 () Bool)

(assert (=> d!30543 (= lt!56253 lt!56254)))

(declare-fun lt!56255 () Unit!3339)

(declare-fun e!71092 () Unit!3339)

(assert (=> d!30543 (= lt!56255 e!71092)))

(declare-fun c!19314 () Bool)

(assert (=> d!30543 (= c!19314 lt!56254)))

(assert (=> d!30543 (= lt!56254 (containsKey!160 (toList!811 lt!55644) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30543 (= (contains!834 lt!55644 #b0000000000000000000000000000000000000000000000000000000000000000) lt!56253)))

(declare-fun b!109286 () Bool)

(declare-fun lt!56256 () Unit!3339)

(assert (=> b!109286 (= e!71092 lt!56256)))

(assert (=> b!109286 (= lt!56256 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55644) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109286 (isDefined!110 (getValueByKey!156 (toList!811 lt!55644) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109287 () Bool)

(declare-fun Unit!3401 () Unit!3339)

(assert (=> b!109287 (= e!71092 Unit!3401)))

(declare-fun b!109288 () Bool)

(assert (=> b!109288 (= e!71093 (isDefined!110 (getValueByKey!156 (toList!811 lt!55644) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30543 c!19314) b!109286))

(assert (= (and d!30543 (not c!19314)) b!109287))

(assert (= (and d!30543 (not res!54117)) b!109288))

(declare-fun m!123653 () Bool)

(assert (=> d!30543 m!123653))

(declare-fun m!123655 () Bool)

(assert (=> b!109286 m!123655))

(declare-fun m!123657 () Bool)

(assert (=> b!109286 m!123657))

(assert (=> b!109286 m!123657))

(declare-fun m!123659 () Bool)

(assert (=> b!109286 m!123659))

(assert (=> b!109288 m!123657))

(assert (=> b!109288 m!123657))

(assert (=> b!109288 m!123659))

(assert (=> d!29981 d!30543))

(assert (=> d!29981 d!29861))

(declare-fun d!30545 () Bool)

(declare-fun e!71094 () Bool)

(assert (=> d!30545 e!71094))

(declare-fun res!54118 () Bool)

(assert (=> d!30545 (=> (not res!54118) (not e!71094))))

(declare-fun lt!56259 () ListLongMap!1591)

(assert (=> d!30545 (= res!54118 (contains!834 lt!56259 (_1!1221 (ite (or c!19061 c!19059) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(declare-fun lt!56257 () List!1648)

(assert (=> d!30545 (= lt!56259 (ListLongMap!1592 lt!56257))))

(declare-fun lt!56258 () Unit!3339)

(declare-fun lt!56260 () Unit!3339)

(assert (=> d!30545 (= lt!56258 lt!56260)))

(assert (=> d!30545 (= (getValueByKey!156 lt!56257 (_1!1221 (ite (or c!19061 c!19059) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))) (Some!161 (_2!1221 (ite (or c!19061 c!19059) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(assert (=> d!30545 (= lt!56260 (lemmaContainsTupThenGetReturnValue!74 lt!56257 (_1!1221 (ite (or c!19061 c!19059) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) (_2!1221 (ite (or c!19061 c!19059) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(assert (=> d!30545 (= lt!56257 (insertStrictlySorted!76 (toList!811 (ite c!19061 call!11508 (ite c!19059 call!11509 call!11511))) (_1!1221 (ite (or c!19061 c!19059) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) (_2!1221 (ite (or c!19061 c!19059) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(assert (=> d!30545 (= (+!148 (ite c!19061 call!11508 (ite c!19059 call!11509 call!11511)) (ite (or c!19061 c!19059) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) lt!56259)))

(declare-fun b!109289 () Bool)

(declare-fun res!54119 () Bool)

(assert (=> b!109289 (=> (not res!54119) (not e!71094))))

(assert (=> b!109289 (= res!54119 (= (getValueByKey!156 (toList!811 lt!56259) (_1!1221 (ite (or c!19061 c!19059) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))) (Some!161 (_2!1221 (ite (or c!19061 c!19059) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))))

(declare-fun b!109290 () Bool)

(assert (=> b!109290 (= e!71094 (contains!835 (toList!811 lt!56259) (ite (or c!19061 c!19059) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 newMap!16)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(assert (= (and d!30545 res!54118) b!109289))

(assert (= (and b!109289 res!54119) b!109290))

(declare-fun m!123661 () Bool)

(assert (=> d!30545 m!123661))

(declare-fun m!123663 () Bool)

(assert (=> d!30545 m!123663))

(declare-fun m!123665 () Bool)

(assert (=> d!30545 m!123665))

(declare-fun m!123667 () Bool)

(assert (=> d!30545 m!123667))

(declare-fun m!123669 () Bool)

(assert (=> b!109289 m!123669))

(declare-fun m!123671 () Bool)

(assert (=> b!109290 m!123671))

(assert (=> bm!11504 d!30545))

(declare-fun d!30547 () Bool)

(assert (=> d!30547 (= (apply!99 (+!148 lt!55561 (tuple2!2423 lt!55563 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)))) lt!55573) (get!1352 (getValueByKey!156 (toList!811 (+!148 lt!55561 (tuple2!2423 lt!55563 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))))) lt!55573)))))

(declare-fun bs!4494 () Bool)

(assert (= bs!4494 d!30547))

(declare-fun m!123673 () Bool)

(assert (=> bs!4494 m!123673))

(assert (=> bs!4494 m!123673))

(declare-fun m!123675 () Bool)

(assert (=> bs!4494 m!123675))

(assert (=> b!108141 d!30547))

(declare-fun d!30549 () Bool)

(declare-fun e!71095 () Bool)

(assert (=> d!30549 e!71095))

(declare-fun res!54120 () Bool)

(assert (=> d!30549 (=> (not res!54120) (not e!71095))))

(declare-fun lt!56263 () ListLongMap!1591)

(assert (=> d!30549 (= res!54120 (contains!834 lt!56263 (_1!1221 (tuple2!2423 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))))))))

(declare-fun lt!56261 () List!1648)

(assert (=> d!30549 (= lt!56263 (ListLongMap!1592 lt!56261))))

(declare-fun lt!56262 () Unit!3339)

(declare-fun lt!56264 () Unit!3339)

(assert (=> d!30549 (= lt!56262 lt!56264)))

(assert (=> d!30549 (= (getValueByKey!156 lt!56261 (_1!1221 (tuple2!2423 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))))) (Some!161 (_2!1221 (tuple2!2423 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))))))))

(assert (=> d!30549 (= lt!56264 (lemmaContainsTupThenGetReturnValue!74 lt!56261 (_1!1221 (tuple2!2423 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)))) (_2!1221 (tuple2!2423 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))))))))

(assert (=> d!30549 (= lt!56261 (insertStrictlySorted!76 (toList!811 lt!55576) (_1!1221 (tuple2!2423 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)))) (_2!1221 (tuple2!2423 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))))))))

(assert (=> d!30549 (= (+!148 lt!55576 (tuple2!2423 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)))) lt!56263)))

(declare-fun b!109291 () Bool)

(declare-fun res!54121 () Bool)

(assert (=> b!109291 (=> (not res!54121) (not e!71095))))

(assert (=> b!109291 (= res!54121 (= (getValueByKey!156 (toList!811 lt!56263) (_1!1221 (tuple2!2423 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))))) (Some!161 (_2!1221 (tuple2!2423 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)))))))))

(declare-fun b!109292 () Bool)

(assert (=> b!109292 (= e!71095 (contains!835 (toList!811 lt!56263) (tuple2!2423 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)))))))

(assert (= (and d!30549 res!54120) b!109291))

(assert (= (and b!109291 res!54121) b!109292))

(declare-fun m!123677 () Bool)

(assert (=> d!30549 m!123677))

(declare-fun m!123679 () Bool)

(assert (=> d!30549 m!123679))

(declare-fun m!123681 () Bool)

(assert (=> d!30549 m!123681))

(declare-fun m!123683 () Bool)

(assert (=> d!30549 m!123683))

(declare-fun m!123685 () Bool)

(assert (=> b!109291 m!123685))

(declare-fun m!123687 () Bool)

(assert (=> b!109292 m!123687))

(assert (=> b!108141 d!30549))

(declare-fun d!30551 () Bool)

(assert (=> d!30551 (= (apply!99 lt!55578 lt!55572) (get!1352 (getValueByKey!156 (toList!811 lt!55578) lt!55572)))))

(declare-fun bs!4495 () Bool)

(assert (= bs!4495 d!30551))

(declare-fun m!123689 () Bool)

(assert (=> bs!4495 m!123689))

(assert (=> bs!4495 m!123689))

(declare-fun m!123691 () Bool)

(assert (=> bs!4495 m!123691))

(assert (=> b!108141 d!30551))

(declare-fun d!30553 () Bool)

(assert (=> d!30553 (contains!834 (+!148 lt!55576 (tuple2!2423 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)))) lt!55575)))

(declare-fun lt!56265 () Unit!3339)

(assert (=> d!30553 (= lt!56265 (choose!685 lt!55576 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)) lt!55575))))

(assert (=> d!30553 (contains!834 lt!55576 lt!55575)))

(assert (=> d!30553 (= (addStillContains!75 lt!55576 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)) lt!55575) lt!56265)))

(declare-fun bs!4496 () Bool)

(assert (= bs!4496 d!30553))

(assert (=> bs!4496 m!121657))

(assert (=> bs!4496 m!121657))

(assert (=> bs!4496 m!121659))

(declare-fun m!123693 () Bool)

(assert (=> bs!4496 m!123693))

(declare-fun m!123695 () Bool)

(assert (=> bs!4496 m!123695))

(assert (=> b!108141 d!30553))

(declare-fun d!30555 () Bool)

(assert (=> d!30555 (= (apply!99 (+!148 lt!55559 (tuple2!2423 lt!55570 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))) lt!55566) (apply!99 lt!55559 lt!55566))))

(declare-fun lt!56266 () Unit!3339)

(assert (=> d!30555 (= lt!56266 (choose!684 lt!55559 lt!55570 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)) lt!55566))))

(declare-fun e!71096 () Bool)

(assert (=> d!30555 e!71096))

(declare-fun res!54122 () Bool)

(assert (=> d!30555 (=> (not res!54122) (not e!71096))))

(assert (=> d!30555 (= res!54122 (contains!834 lt!55559 lt!55566))))

(assert (=> d!30555 (= (addApplyDifferent!75 lt!55559 lt!55570 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)) lt!55566) lt!56266)))

(declare-fun b!109293 () Bool)

(assert (=> b!109293 (= e!71096 (not (= lt!55566 lt!55570)))))

(assert (= (and d!30555 res!54122) b!109293))

(assert (=> d!30555 m!121679))

(declare-fun m!123697 () Bool)

(assert (=> d!30555 m!123697))

(assert (=> d!30555 m!121655))

(assert (=> d!30555 m!121655))

(assert (=> d!30555 m!121669))

(declare-fun m!123699 () Bool)

(assert (=> d!30555 m!123699))

(assert (=> b!108141 d!30555))

(declare-fun d!30557 () Bool)

(assert (=> d!30557 (= (apply!99 (+!148 lt!55561 (tuple2!2423 lt!55563 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)))) lt!55573) (apply!99 lt!55561 lt!55573))))

(declare-fun lt!56267 () Unit!3339)

(assert (=> d!30557 (= lt!56267 (choose!684 lt!55561 lt!55563 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)) lt!55573))))

(declare-fun e!71097 () Bool)

(assert (=> d!30557 e!71097))

(declare-fun res!54123 () Bool)

(assert (=> d!30557 (=> (not res!54123) (not e!71097))))

(assert (=> d!30557 (= res!54123 (contains!834 lt!55561 lt!55573))))

(assert (=> d!30557 (= (addApplyDifferent!75 lt!55561 lt!55563 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)) lt!55573) lt!56267)))

(declare-fun b!109294 () Bool)

(assert (=> b!109294 (= e!71097 (not (= lt!55573 lt!55563)))))

(assert (= (and d!30557 res!54123) b!109294))

(assert (=> d!30557 m!121663))

(declare-fun m!123701 () Bool)

(assert (=> d!30557 m!123701))

(assert (=> d!30557 m!121651))

(assert (=> d!30557 m!121651))

(assert (=> d!30557 m!121673))

(declare-fun m!123703 () Bool)

(assert (=> d!30557 m!123703))

(assert (=> b!108141 d!30557))

(declare-fun d!30559 () Bool)

(declare-fun e!71099 () Bool)

(assert (=> d!30559 e!71099))

(declare-fun res!54124 () Bool)

(assert (=> d!30559 (=> res!54124 e!71099)))

(declare-fun lt!56268 () Bool)

(assert (=> d!30559 (= res!54124 (not lt!56268))))

(declare-fun lt!56269 () Bool)

(assert (=> d!30559 (= lt!56268 lt!56269)))

(declare-fun lt!56270 () Unit!3339)

(declare-fun e!71098 () Unit!3339)

(assert (=> d!30559 (= lt!56270 e!71098)))

(declare-fun c!19315 () Bool)

(assert (=> d!30559 (= c!19315 lt!56269)))

(assert (=> d!30559 (= lt!56269 (containsKey!160 (toList!811 (+!148 lt!55576 (tuple2!2423 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))))) lt!55575))))

(assert (=> d!30559 (= (contains!834 (+!148 lt!55576 (tuple2!2423 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)))) lt!55575) lt!56268)))

(declare-fun b!109295 () Bool)

(declare-fun lt!56271 () Unit!3339)

(assert (=> b!109295 (= e!71098 lt!56271)))

(assert (=> b!109295 (= lt!56271 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 (+!148 lt!55576 (tuple2!2423 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))))) lt!55575))))

(assert (=> b!109295 (isDefined!110 (getValueByKey!156 (toList!811 (+!148 lt!55576 (tuple2!2423 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))))) lt!55575))))

(declare-fun b!109296 () Bool)

(declare-fun Unit!3402 () Unit!3339)

(assert (=> b!109296 (= e!71098 Unit!3402)))

(declare-fun b!109297 () Bool)

(assert (=> b!109297 (= e!71099 (isDefined!110 (getValueByKey!156 (toList!811 (+!148 lt!55576 (tuple2!2423 lt!55574 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))))) lt!55575)))))

(assert (= (and d!30559 c!19315) b!109295))

(assert (= (and d!30559 (not c!19315)) b!109296))

(assert (= (and d!30559 (not res!54124)) b!109297))

(declare-fun m!123705 () Bool)

(assert (=> d!30559 m!123705))

(declare-fun m!123707 () Bool)

(assert (=> b!109295 m!123707))

(declare-fun m!123709 () Bool)

(assert (=> b!109295 m!123709))

(assert (=> b!109295 m!123709))

(declare-fun m!123711 () Bool)

(assert (=> b!109295 m!123711))

(assert (=> b!109297 m!123709))

(assert (=> b!109297 m!123709))

(assert (=> b!109297 m!123711))

(assert (=> b!108141 d!30559))

(declare-fun d!30561 () Bool)

(assert (=> d!30561 (= (apply!99 lt!55561 lt!55573) (get!1352 (getValueByKey!156 (toList!811 lt!55561) lt!55573)))))

(declare-fun bs!4497 () Bool)

(assert (= bs!4497 d!30561))

(declare-fun m!123713 () Bool)

(assert (=> bs!4497 m!123713))

(assert (=> bs!4497 m!123713))

(declare-fun m!123715 () Bool)

(assert (=> bs!4497 m!123715))

(assert (=> b!108141 d!30561))

(declare-fun d!30563 () Bool)

(declare-fun e!71100 () Bool)

(assert (=> d!30563 e!71100))

(declare-fun res!54125 () Bool)

(assert (=> d!30563 (=> (not res!54125) (not e!71100))))

(declare-fun lt!56274 () ListLongMap!1591)

(assert (=> d!30563 (= res!54125 (contains!834 lt!56274 (_1!1221 (tuple2!2423 lt!55563 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))))))))

(declare-fun lt!56272 () List!1648)

(assert (=> d!30563 (= lt!56274 (ListLongMap!1592 lt!56272))))

(declare-fun lt!56273 () Unit!3339)

(declare-fun lt!56275 () Unit!3339)

(assert (=> d!30563 (= lt!56273 lt!56275)))

(assert (=> d!30563 (= (getValueByKey!156 lt!56272 (_1!1221 (tuple2!2423 lt!55563 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))))) (Some!161 (_2!1221 (tuple2!2423 lt!55563 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))))))))

(assert (=> d!30563 (= lt!56275 (lemmaContainsTupThenGetReturnValue!74 lt!56272 (_1!1221 (tuple2!2423 lt!55563 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)))) (_2!1221 (tuple2!2423 lt!55563 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))))))))

(assert (=> d!30563 (= lt!56272 (insertStrictlySorted!76 (toList!811 lt!55561) (_1!1221 (tuple2!2423 lt!55563 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)))) (_2!1221 (tuple2!2423 lt!55563 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))))))))

(assert (=> d!30563 (= (+!148 lt!55561 (tuple2!2423 lt!55563 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)))) lt!56274)))

(declare-fun b!109298 () Bool)

(declare-fun res!54126 () Bool)

(assert (=> b!109298 (=> (not res!54126) (not e!71100))))

(assert (=> b!109298 (= res!54126 (= (getValueByKey!156 (toList!811 lt!56274) (_1!1221 (tuple2!2423 lt!55563 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16))))) (Some!161 (_2!1221 (tuple2!2423 lt!55563 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)))))))))

(declare-fun b!109299 () Bool)

(assert (=> b!109299 (= e!71100 (contains!835 (toList!811 lt!56274) (tuple2!2423 lt!55563 (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)))))))

(assert (= (and d!30563 res!54125) b!109298))

(assert (= (and b!109298 res!54126) b!109299))

(declare-fun m!123717 () Bool)

(assert (=> d!30563 m!123717))

(declare-fun m!123719 () Bool)

(assert (=> d!30563 m!123719))

(declare-fun m!123721 () Bool)

(assert (=> d!30563 m!123721))

(declare-fun m!123723 () Bool)

(assert (=> d!30563 m!123723))

(declare-fun m!123725 () Bool)

(assert (=> b!109298 m!123725))

(declare-fun m!123727 () Bool)

(assert (=> b!109299 m!123727))

(assert (=> b!108141 d!30563))

(declare-fun d!30565 () Bool)

(assert (=> d!30565 (= (apply!99 (+!148 lt!55578 (tuple2!2423 lt!55562 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))) lt!55572) (get!1352 (getValueByKey!156 (toList!811 (+!148 lt!55578 (tuple2!2423 lt!55562 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))) lt!55572)))))

(declare-fun bs!4498 () Bool)

(assert (= bs!4498 d!30565))

(declare-fun m!123729 () Bool)

(assert (=> bs!4498 m!123729))

(assert (=> bs!4498 m!123729))

(declare-fun m!123731 () Bool)

(assert (=> bs!4498 m!123731))

(assert (=> b!108141 d!30565))

(declare-fun d!30567 () Bool)

(assert (=> d!30567 (= (apply!99 (+!148 lt!55559 (tuple2!2423 lt!55570 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))) lt!55566) (get!1352 (getValueByKey!156 (toList!811 (+!148 lt!55559 (tuple2!2423 lt!55570 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))) lt!55566)))))

(declare-fun bs!4499 () Bool)

(assert (= bs!4499 d!30567))

(declare-fun m!123733 () Bool)

(assert (=> bs!4499 m!123733))

(assert (=> bs!4499 m!123733))

(declare-fun m!123735 () Bool)

(assert (=> bs!4499 m!123735))

(assert (=> b!108141 d!30567))

(declare-fun b!109300 () Bool)

(declare-fun e!71107 () Bool)

(declare-fun lt!56281 () ListLongMap!1591)

(assert (=> b!109300 (= e!71107 (isEmpty!378 lt!56281))))

(declare-fun b!109301 () Bool)

(assert (=> b!109301 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(assert (=> b!109301 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2331 (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16)))))))))

(declare-fun e!71103 () Bool)

(assert (=> b!109301 (= e!71103 (= (apply!99 lt!56281 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (get!1349 (select (arr!2075 (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!109302 () Bool)

(declare-fun lt!56277 () Unit!3339)

(declare-fun lt!56279 () Unit!3339)

(assert (=> b!109302 (= lt!56277 lt!56279)))

(declare-fun lt!56278 () (_ BitVec 64))

(declare-fun lt!56280 () (_ BitVec 64))

(declare-fun lt!56276 () ListLongMap!1591)

(declare-fun lt!56282 () V!3235)

(assert (=> b!109302 (not (contains!834 (+!148 lt!56276 (tuple2!2423 lt!56278 lt!56282)) lt!56280))))

(assert (=> b!109302 (= lt!56279 (addStillNotContains!49 lt!56276 lt!56278 lt!56282 lt!56280))))

(assert (=> b!109302 (= lt!56280 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!109302 (= lt!56282 (get!1349 (select (arr!2075 (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!109302 (= lt!56278 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11628 () ListLongMap!1591)

(assert (=> b!109302 (= lt!56276 call!11628)))

(declare-fun e!71106 () ListLongMap!1591)

(assert (=> b!109302 (= e!71106 (+!148 call!11628 (tuple2!2423 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) (get!1349 (select (arr!2075 (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!391 (defaultEntry!2606 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!109303 () Bool)

(declare-fun e!71101 () Bool)

(assert (=> b!109303 (= e!71101 e!71103)))

(assert (=> b!109303 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun res!54130 () Bool)

(assert (=> b!109303 (= res!54130 (contains!834 lt!56281 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!109303 (=> (not res!54130) (not e!71103))))

(declare-fun b!109304 () Bool)

(assert (=> b!109304 (= e!71107 (= lt!56281 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18944 (ite c!18941 lt!55433 lt!55416) (extraKeys!2407 newMap!16)) (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)) (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2606 newMap!16))))))

(declare-fun b!109305 () Bool)

(assert (=> b!109305 (= e!71106 call!11628)))

(declare-fun b!109306 () Bool)

(declare-fun e!71105 () ListLongMap!1591)

(assert (=> b!109306 (= e!71105 (ListLongMap!1592 Nil!1645))))

(declare-fun b!109307 () Bool)

(assert (=> b!109307 (= e!71101 e!71107)))

(declare-fun c!19316 () Bool)

(assert (=> b!109307 (= c!19316 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun d!30569 () Bool)

(declare-fun e!71102 () Bool)

(assert (=> d!30569 e!71102))

(declare-fun res!54127 () Bool)

(assert (=> d!30569 (=> (not res!54127) (not e!71102))))

(assert (=> d!30569 (= res!54127 (not (contains!834 lt!56281 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30569 (= lt!56281 e!71105)))

(declare-fun c!19318 () Bool)

(assert (=> d!30569 (= c!19318 (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(assert (=> d!30569 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30569 (= (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18944 (ite c!18941 lt!55433 lt!55416) (extraKeys!2407 newMap!16)) (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)) (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!56281)))

(declare-fun b!109308 () Bool)

(assert (=> b!109308 (= e!71102 e!71101)))

(declare-fun c!19319 () Bool)

(declare-fun e!71104 () Bool)

(assert (=> b!109308 (= c!19319 e!71104)))

(declare-fun res!54129 () Bool)

(assert (=> b!109308 (=> (not res!54129) (not e!71104))))

(assert (=> b!109308 (= res!54129 (bvslt #b00000000000000000000000000000000 (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!109309 () Bool)

(assert (=> b!109309 (= e!71104 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!109309 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!109310 () Bool)

(assert (=> b!109310 (= e!71105 e!71106)))

(declare-fun c!19317 () Bool)

(assert (=> b!109310 (= c!19317 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109311 () Bool)

(declare-fun res!54128 () Bool)

(assert (=> b!109311 (=> (not res!54128) (not e!71102))))

(assert (=> b!109311 (= res!54128 (not (contains!834 lt!56281 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!11625 () Bool)

(assert (=> bm!11625 (= call!11628 (getCurrentListMapNoExtraKeys!115 (_keys!4316 newMap!16) (ite (or c!18944 c!18935) (_values!2589 newMap!16) (array!4377 (store (arr!2075 (_values!2589 newMap!16)) (index!3230 lt!55408) (ValueCellFull!1002 lt!55248)) (size!2331 (_values!2589 newMap!16)))) (mask!6764 newMap!16) (ite c!18944 (ite c!18941 lt!55433 lt!55416) (extraKeys!2407 newMap!16)) (ite (and c!18944 c!18941) lt!55248 (zeroValue!2479 newMap!16)) (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2606 newMap!16)))))

(assert (= (and d!30569 c!19318) b!109306))

(assert (= (and d!30569 (not c!19318)) b!109310))

(assert (= (and b!109310 c!19317) b!109302))

(assert (= (and b!109310 (not c!19317)) b!109305))

(assert (= (or b!109302 b!109305) bm!11625))

(assert (= (and d!30569 res!54127) b!109311))

(assert (= (and b!109311 res!54128) b!109308))

(assert (= (and b!109308 res!54129) b!109309))

(assert (= (and b!109308 c!19319) b!109303))

(assert (= (and b!109308 (not c!19319)) b!109307))

(assert (= (and b!109303 res!54130) b!109301))

(assert (= (and b!109307 c!19316) b!109304))

(assert (= (and b!109307 (not c!19316)) b!109300))

(declare-fun b_lambda!4909 () Bool)

(assert (=> (not b_lambda!4909) (not b!109301)))

(assert (=> b!109301 t!5783))

(declare-fun b_and!6761 () Bool)

(assert (= b_and!6757 (and (=> t!5783 result!3521) b_and!6761)))

(assert (=> b!109301 t!5785))

(declare-fun b_and!6763 () Bool)

(assert (= b_and!6759 (and (=> t!5785 result!3523) b_and!6763)))

(declare-fun b_lambda!4911 () Bool)

(assert (=> (not b_lambda!4911) (not b!109302)))

(assert (=> b!109302 t!5783))

(declare-fun b_and!6765 () Bool)

(assert (= b_and!6761 (and (=> t!5783 result!3521) b_and!6765)))

(assert (=> b!109302 t!5785))

(declare-fun b_and!6767 () Bool)

(assert (= b_and!6763 (and (=> t!5785 result!3523) b_and!6767)))

(declare-fun m!123737 () Bool)

(assert (=> b!109300 m!123737))

(declare-fun m!123739 () Bool)

(assert (=> b!109304 m!123739))

(assert (=> b!109301 m!121569))

(assert (=> b!109301 m!121517))

(declare-fun m!123741 () Bool)

(assert (=> b!109301 m!123741))

(assert (=> b!109301 m!121517))

(assert (=> b!109301 m!121683))

(assert (=> b!109301 m!121683))

(assert (=> b!109301 m!121569))

(assert (=> b!109301 m!121685))

(declare-fun m!123743 () Bool)

(assert (=> b!109311 m!123743))

(declare-fun m!123745 () Bool)

(assert (=> b!109302 m!123745))

(assert (=> b!109302 m!121569))

(declare-fun m!123747 () Bool)

(assert (=> b!109302 m!123747))

(assert (=> b!109302 m!121517))

(declare-fun m!123749 () Bool)

(assert (=> b!109302 m!123749))

(assert (=> b!109302 m!121683))

(assert (=> b!109302 m!121683))

(assert (=> b!109302 m!121569))

(assert (=> b!109302 m!121685))

(assert (=> b!109302 m!123749))

(declare-fun m!123751 () Bool)

(assert (=> b!109302 m!123751))

(assert (=> b!109309 m!121517))

(assert (=> b!109309 m!121517))

(assert (=> b!109309 m!121519))

(assert (=> bm!11625 m!123739))

(assert (=> b!109303 m!121517))

(assert (=> b!109303 m!121517))

(declare-fun m!123753 () Bool)

(assert (=> b!109303 m!123753))

(assert (=> b!109310 m!121517))

(assert (=> b!109310 m!121517))

(assert (=> b!109310 m!121519))

(declare-fun m!123755 () Bool)

(assert (=> d!30569 m!123755))

(assert (=> d!30569 m!121521))

(assert (=> b!108141 d!30569))

(declare-fun d!30571 () Bool)

(declare-fun e!71108 () Bool)

(assert (=> d!30571 e!71108))

(declare-fun res!54131 () Bool)

(assert (=> d!30571 (=> (not res!54131) (not e!71108))))

(declare-fun lt!56285 () ListLongMap!1591)

(assert (=> d!30571 (= res!54131 (contains!834 lt!56285 (_1!1221 (tuple2!2423 lt!55562 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))))))

(declare-fun lt!56283 () List!1648)

(assert (=> d!30571 (= lt!56285 (ListLongMap!1592 lt!56283))))

(declare-fun lt!56284 () Unit!3339)

(declare-fun lt!56286 () Unit!3339)

(assert (=> d!30571 (= lt!56284 lt!56286)))

(assert (=> d!30571 (= (getValueByKey!156 lt!56283 (_1!1221 (tuple2!2423 lt!55562 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))) (Some!161 (_2!1221 (tuple2!2423 lt!55562 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))))))

(assert (=> d!30571 (= lt!56286 (lemmaContainsTupThenGetReturnValue!74 lt!56283 (_1!1221 (tuple2!2423 lt!55562 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))) (_2!1221 (tuple2!2423 lt!55562 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))))))

(assert (=> d!30571 (= lt!56283 (insertStrictlySorted!76 (toList!811 lt!55578) (_1!1221 (tuple2!2423 lt!55562 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))) (_2!1221 (tuple2!2423 lt!55562 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))))))

(assert (=> d!30571 (= (+!148 lt!55578 (tuple2!2423 lt!55562 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))) lt!56285)))

(declare-fun b!109312 () Bool)

(declare-fun res!54132 () Bool)

(assert (=> b!109312 (=> (not res!54132) (not e!71108))))

(assert (=> b!109312 (= res!54132 (= (getValueByKey!156 (toList!811 lt!56285) (_1!1221 (tuple2!2423 lt!55562 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))) (Some!161 (_2!1221 (tuple2!2423 lt!55562 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))))))))

(declare-fun b!109313 () Bool)

(assert (=> b!109313 (= e!71108 (contains!835 (toList!811 lt!56285) (tuple2!2423 lt!55562 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))))))

(assert (= (and d!30571 res!54131) b!109312))

(assert (= (and b!109312 res!54132) b!109313))

(declare-fun m!123757 () Bool)

(assert (=> d!30571 m!123757))

(declare-fun m!123759 () Bool)

(assert (=> d!30571 m!123759))

(declare-fun m!123761 () Bool)

(assert (=> d!30571 m!123761))

(declare-fun m!123763 () Bool)

(assert (=> d!30571 m!123763))

(declare-fun m!123765 () Bool)

(assert (=> b!109312 m!123765))

(declare-fun m!123767 () Bool)

(assert (=> b!109313 m!123767))

(assert (=> b!108141 d!30571))

(declare-fun d!30573 () Bool)

(assert (=> d!30573 (= (apply!99 lt!55559 lt!55566) (get!1352 (getValueByKey!156 (toList!811 lt!55559) lt!55566)))))

(declare-fun bs!4500 () Bool)

(assert (= bs!4500 d!30573))

(declare-fun m!123769 () Bool)

(assert (=> bs!4500 m!123769))

(assert (=> bs!4500 m!123769))

(declare-fun m!123771 () Bool)

(assert (=> bs!4500 m!123771))

(assert (=> b!108141 d!30573))

(declare-fun d!30575 () Bool)

(declare-fun e!71109 () Bool)

(assert (=> d!30575 e!71109))

(declare-fun res!54133 () Bool)

(assert (=> d!30575 (=> (not res!54133) (not e!71109))))

(declare-fun lt!56289 () ListLongMap!1591)

(assert (=> d!30575 (= res!54133 (contains!834 lt!56289 (_1!1221 (tuple2!2423 lt!55570 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))))))

(declare-fun lt!56287 () List!1648)

(assert (=> d!30575 (= lt!56289 (ListLongMap!1592 lt!56287))))

(declare-fun lt!56288 () Unit!3339)

(declare-fun lt!56290 () Unit!3339)

(assert (=> d!30575 (= lt!56288 lt!56290)))

(assert (=> d!30575 (= (getValueByKey!156 lt!56287 (_1!1221 (tuple2!2423 lt!55570 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))) (Some!161 (_2!1221 (tuple2!2423 lt!55570 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))))))

(assert (=> d!30575 (= lt!56290 (lemmaContainsTupThenGetReturnValue!74 lt!56287 (_1!1221 (tuple2!2423 lt!55570 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))) (_2!1221 (tuple2!2423 lt!55570 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))))))

(assert (=> d!30575 (= lt!56287 (insertStrictlySorted!76 (toList!811 lt!55559) (_1!1221 (tuple2!2423 lt!55570 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))) (_2!1221 (tuple2!2423 lt!55570 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))))))

(assert (=> d!30575 (= (+!148 lt!55559 (tuple2!2423 lt!55570 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))) lt!56289)))

(declare-fun b!109314 () Bool)

(declare-fun res!54134 () Bool)

(assert (=> b!109314 (=> (not res!54134) (not e!71109))))

(assert (=> b!109314 (= res!54134 (= (getValueByKey!156 (toList!811 lt!56289) (_1!1221 (tuple2!2423 lt!55570 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16))))) (Some!161 (_2!1221 (tuple2!2423 lt!55570 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))))))))

(declare-fun b!109315 () Bool)

(assert (=> b!109315 (= e!71109 (contains!835 (toList!811 lt!56289) (tuple2!2423 lt!55570 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))))))

(assert (= (and d!30575 res!54133) b!109314))

(assert (= (and b!109314 res!54134) b!109315))

(declare-fun m!123773 () Bool)

(assert (=> d!30575 m!123773))

(declare-fun m!123775 () Bool)

(assert (=> d!30575 m!123775))

(declare-fun m!123777 () Bool)

(assert (=> d!30575 m!123777))

(declare-fun m!123779 () Bool)

(assert (=> d!30575 m!123779))

(declare-fun m!123781 () Bool)

(assert (=> b!109314 m!123781))

(declare-fun m!123783 () Bool)

(assert (=> b!109315 m!123783))

(assert (=> b!108141 d!30575))

(declare-fun d!30577 () Bool)

(assert (=> d!30577 (= (apply!99 (+!148 lt!55578 (tuple2!2423 lt!55562 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)))) lt!55572) (apply!99 lt!55578 lt!55572))))

(declare-fun lt!56291 () Unit!3339)

(assert (=> d!30577 (= lt!56291 (choose!684 lt!55578 lt!55562 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)) lt!55572))))

(declare-fun e!71110 () Bool)

(assert (=> d!30577 e!71110))

(declare-fun res!54135 () Bool)

(assert (=> d!30577 (=> (not res!54135) (not e!71110))))

(assert (=> d!30577 (= res!54135 (contains!834 lt!55578 lt!55572))))

(assert (=> d!30577 (= (addApplyDifferent!75 lt!55578 lt!55562 (ite c!18944 (ite c!18941 (minValue!2479 newMap!16) lt!55248) (minValue!2479 newMap!16)) lt!55572) lt!56291)))

(declare-fun b!109316 () Bool)

(assert (=> b!109316 (= e!71110 (not (= lt!55572 lt!55562)))))

(assert (= (and d!30577 res!54135) b!109316))

(assert (=> d!30577 m!121653))

(declare-fun m!123785 () Bool)

(assert (=> d!30577 m!123785))

(assert (=> d!30577 m!121661))

(assert (=> d!30577 m!121661))

(assert (=> d!30577 m!121667))

(declare-fun m!123787 () Bool)

(assert (=> d!30577 m!123787))

(assert (=> b!108141 d!30577))

(declare-fun d!30579 () Bool)

(declare-fun c!19320 () Bool)

(assert (=> d!30579 (= c!19320 (and ((_ is Cons!1644) (toList!811 lt!55845)) (= (_1!1221 (h!2242 (toList!811 lt!55845))) (_1!1221 (tuple2!2423 lt!55321 lt!55325)))))))

(declare-fun e!71111 () Option!162)

(assert (=> d!30579 (= (getValueByKey!156 (toList!811 lt!55845) (_1!1221 (tuple2!2423 lt!55321 lt!55325))) e!71111)))

(declare-fun b!109319 () Bool)

(declare-fun e!71112 () Option!162)

(assert (=> b!109319 (= e!71112 (getValueByKey!156 (t!5776 (toList!811 lt!55845)) (_1!1221 (tuple2!2423 lt!55321 lt!55325))))))

(declare-fun b!109320 () Bool)

(assert (=> b!109320 (= e!71112 None!160)))

(declare-fun b!109318 () Bool)

(assert (=> b!109318 (= e!71111 e!71112)))

(declare-fun c!19321 () Bool)

(assert (=> b!109318 (= c!19321 (and ((_ is Cons!1644) (toList!811 lt!55845)) (not (= (_1!1221 (h!2242 (toList!811 lt!55845))) (_1!1221 (tuple2!2423 lt!55321 lt!55325))))))))

(declare-fun b!109317 () Bool)

(assert (=> b!109317 (= e!71111 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55845)))))))

(assert (= (and d!30579 c!19320) b!109317))

(assert (= (and d!30579 (not c!19320)) b!109318))

(assert (= (and b!109318 c!19321) b!109319))

(assert (= (and b!109318 (not c!19321)) b!109320))

(declare-fun m!123789 () Bool)

(assert (=> b!109319 m!123789))

(assert (=> b!108503 d!30579))

(declare-fun d!30581 () Bool)

(declare-fun c!19322 () Bool)

(assert (=> d!30581 (= c!19322 (and ((_ is Cons!1644) (toList!811 lt!55771)) (= (_1!1221 (h!2242 (toList!811 lt!55771))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun e!71113 () Option!162)

(assert (=> d!30581 (= (getValueByKey!156 (toList!811 lt!55771) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) e!71113)))

(declare-fun b!109323 () Bool)

(declare-fun e!71114 () Option!162)

(assert (=> b!109323 (= e!71114 (getValueByKey!156 (t!5776 (toList!811 lt!55771)) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun b!109324 () Bool)

(assert (=> b!109324 (= e!71114 None!160)))

(declare-fun b!109322 () Bool)

(assert (=> b!109322 (= e!71113 e!71114)))

(declare-fun c!19323 () Bool)

(assert (=> b!109322 (= c!19323 (and ((_ is Cons!1644) (toList!811 lt!55771)) (not (= (_1!1221 (h!2242 (toList!811 lt!55771))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))))

(declare-fun b!109321 () Bool)

(assert (=> b!109321 (= e!71113 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55771)))))))

(assert (= (and d!30581 c!19322) b!109321))

(assert (= (and d!30581 (not c!19322)) b!109322))

(assert (= (and b!109322 c!19323) b!109323))

(assert (= (and b!109322 (not c!19323)) b!109324))

(declare-fun m!123791 () Bool)

(assert (=> b!109323 m!123791))

(assert (=> b!108424 d!30581))

(declare-fun b!109325 () Bool)

(declare-fun c!19324 () Bool)

(assert (=> b!109325 (= c!19324 (and ((_ is Cons!1644) (t!5776 (toList!811 lt!55250))) (bvsgt (_1!1221 (h!2242 (t!5776 (toList!811 lt!55250)))) (_1!1221 lt!55249))))))

(declare-fun e!71115 () List!1648)

(declare-fun e!71116 () List!1648)

(assert (=> b!109325 (= e!71115 e!71116)))

(declare-fun b!109326 () Bool)

(declare-fun e!71117 () List!1648)

(declare-fun call!11630 () List!1648)

(assert (=> b!109326 (= e!71117 call!11630)))

(declare-fun c!19325 () Bool)

(declare-fun e!71119 () List!1648)

(declare-fun bm!11626 () Bool)

(assert (=> bm!11626 (= call!11630 ($colon$colon!81 e!71119 (ite c!19325 (h!2242 (t!5776 (toList!811 lt!55250))) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249)))))))

(declare-fun c!19326 () Bool)

(assert (=> bm!11626 (= c!19326 c!19325)))

(declare-fun b!109327 () Bool)

(declare-fun call!11629 () List!1648)

(assert (=> b!109327 (= e!71116 call!11629)))

(declare-fun b!109328 () Bool)

(declare-fun call!11631 () List!1648)

(assert (=> b!109328 (= e!71115 call!11631)))

(declare-fun d!30583 () Bool)

(declare-fun e!71118 () Bool)

(assert (=> d!30583 e!71118))

(declare-fun res!54136 () Bool)

(assert (=> d!30583 (=> (not res!54136) (not e!71118))))

(declare-fun lt!56292 () List!1648)

(assert (=> d!30583 (= res!54136 (isStrictlySorted!305 lt!56292))))

(assert (=> d!30583 (= lt!56292 e!71117)))

(assert (=> d!30583 (= c!19325 (and ((_ is Cons!1644) (t!5776 (toList!811 lt!55250))) (bvslt (_1!1221 (h!2242 (t!5776 (toList!811 lt!55250)))) (_1!1221 lt!55249))))))

(assert (=> d!30583 (isStrictlySorted!305 (t!5776 (toList!811 lt!55250)))))

(assert (=> d!30583 (= (insertStrictlySorted!76 (t!5776 (toList!811 lt!55250)) (_1!1221 lt!55249) (_2!1221 lt!55249)) lt!56292)))

(declare-fun b!109329 () Bool)

(assert (=> b!109329 (= e!71117 e!71115)))

(declare-fun c!19327 () Bool)

(assert (=> b!109329 (= c!19327 (and ((_ is Cons!1644) (t!5776 (toList!811 lt!55250))) (= (_1!1221 (h!2242 (t!5776 (toList!811 lt!55250)))) (_1!1221 lt!55249))))))

(declare-fun b!109330 () Bool)

(declare-fun res!54137 () Bool)

(assert (=> b!109330 (=> (not res!54137) (not e!71118))))

(assert (=> b!109330 (= res!54137 (containsKey!160 lt!56292 (_1!1221 lt!55249)))))

(declare-fun bm!11627 () Bool)

(assert (=> bm!11627 (= call!11631 call!11630)))

(declare-fun bm!11628 () Bool)

(assert (=> bm!11628 (= call!11629 call!11631)))

(declare-fun b!109331 () Bool)

(assert (=> b!109331 (= e!71119 (insertStrictlySorted!76 (t!5776 (t!5776 (toList!811 lt!55250))) (_1!1221 lt!55249) (_2!1221 lt!55249)))))

(declare-fun b!109332 () Bool)

(assert (=> b!109332 (= e!71116 call!11629)))

(declare-fun b!109333 () Bool)

(assert (=> b!109333 (= e!71118 (contains!835 lt!56292 (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))))))

(declare-fun b!109334 () Bool)

(assert (=> b!109334 (= e!71119 (ite c!19327 (t!5776 (t!5776 (toList!811 lt!55250))) (ite c!19324 (Cons!1644 (h!2242 (t!5776 (toList!811 lt!55250))) (t!5776 (t!5776 (toList!811 lt!55250)))) Nil!1645)))))

(assert (= (and d!30583 c!19325) b!109326))

(assert (= (and d!30583 (not c!19325)) b!109329))

(assert (= (and b!109329 c!19327) b!109328))

(assert (= (and b!109329 (not c!19327)) b!109325))

(assert (= (and b!109325 c!19324) b!109332))

(assert (= (and b!109325 (not c!19324)) b!109327))

(assert (= (or b!109332 b!109327) bm!11628))

(assert (= (or b!109328 bm!11628) bm!11627))

(assert (= (or b!109326 bm!11627) bm!11626))

(assert (= (and bm!11626 c!19326) b!109331))

(assert (= (and bm!11626 (not c!19326)) b!109334))

(assert (= (and d!30583 res!54136) b!109330))

(assert (= (and b!109330 res!54137) b!109333))

(declare-fun m!123793 () Bool)

(assert (=> b!109333 m!123793))

(declare-fun m!123795 () Bool)

(assert (=> b!109330 m!123795))

(declare-fun m!123797 () Bool)

(assert (=> bm!11626 m!123797))

(declare-fun m!123799 () Bool)

(assert (=> d!30583 m!123799))

(assert (=> d!30583 m!123649))

(declare-fun m!123801 () Bool)

(assert (=> b!109331 m!123801))

(assert (=> b!108240 d!30583))

(declare-fun d!30585 () Bool)

(assert (=> d!30585 (= ($colon$colon!81 e!70591 (ite c!19085 (h!2242 (toList!811 lt!55250)) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252)))) (Cons!1644 (ite c!19085 (h!2242 (toList!811 lt!55250)) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))) e!70591))))

(assert (=> bm!11524 d!30585))

(declare-fun d!30587 () Bool)

(declare-fun lt!56293 () (_ BitVec 32))

(assert (=> d!30587 (and (bvsge lt!56293 #b00000000000000000000000000000000) (bvsle lt!56293 (bvsub (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!71121 () (_ BitVec 32))

(assert (=> d!30587 (= lt!56293 e!71121)))

(declare-fun c!19329 () Bool)

(assert (=> d!30587 (= c!19329 (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(assert (=> d!30587 (and (bvsle #b00000000000000000000000000000000 (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(assert (=> d!30587 (= (arrayCountValidKeys!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) #b00000000000000000000000000000000 (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))) lt!56293)))

(declare-fun b!109335 () Bool)

(declare-fun e!71120 () (_ BitVec 32))

(declare-fun call!11632 () (_ BitVec 32))

(assert (=> b!109335 (= e!71120 (bvadd #b00000000000000000000000000000001 call!11632))))

(declare-fun b!109336 () Bool)

(assert (=> b!109336 (= e!71121 e!71120)))

(declare-fun c!19328 () Bool)

(assert (=> b!109336 (= c!19328 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!109337 () Bool)

(assert (=> b!109337 (= e!71120 call!11632)))

(declare-fun b!109338 () Bool)

(assert (=> b!109338 (= e!71121 #b00000000000000000000000000000000)))

(declare-fun bm!11629 () Bool)

(assert (=> bm!11629 (= call!11632 (arrayCountValidKeys!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(assert (= (and d!30587 c!19329) b!109338))

(assert (= (and d!30587 (not c!19329)) b!109336))

(assert (= (and b!109336 c!19328) b!109335))

(assert (= (and b!109336 (not c!19328)) b!109337))

(assert (= (or b!109335 b!109337) bm!11629))

(assert (=> b!109336 m!123483))

(assert (=> b!109336 m!123483))

(assert (=> b!109336 m!123489))

(declare-fun m!123803 () Bool)

(assert (=> bm!11629 m!123803))

(assert (=> b!108133 d!30587))

(assert (=> d!29941 d!29939))

(declare-fun d!30589 () Bool)

(assert (=> d!30589 (= (getValueByKey!156 lt!55337 (_1!1221 lt!55249)) (Some!161 (_2!1221 lt!55249)))))

(assert (=> d!30589 true))

(declare-fun _$22!441 () Unit!3339)

(assert (=> d!30589 (= (choose!680 lt!55337 (_1!1221 lt!55249) (_2!1221 lt!55249)) _$22!441)))

(declare-fun bs!4501 () Bool)

(assert (= bs!4501 d!30589))

(assert (=> bs!4501 m!121365))

(assert (=> d!29941 d!30589))

(declare-fun d!30591 () Bool)

(declare-fun res!54138 () Bool)

(declare-fun e!71122 () Bool)

(assert (=> d!30591 (=> res!54138 e!71122)))

(assert (=> d!30591 (= res!54138 (or ((_ is Nil!1645) lt!55337) ((_ is Nil!1645) (t!5776 lt!55337))))))

(assert (=> d!30591 (= (isStrictlySorted!305 lt!55337) e!71122)))

(declare-fun b!109339 () Bool)

(declare-fun e!71123 () Bool)

(assert (=> b!109339 (= e!71122 e!71123)))

(declare-fun res!54139 () Bool)

(assert (=> b!109339 (=> (not res!54139) (not e!71123))))

(assert (=> b!109339 (= res!54139 (bvslt (_1!1221 (h!2242 lt!55337)) (_1!1221 (h!2242 (t!5776 lt!55337)))))))

(declare-fun b!109340 () Bool)

(assert (=> b!109340 (= e!71123 (isStrictlySorted!305 (t!5776 lt!55337)))))

(assert (= (and d!30591 (not res!54138)) b!109339))

(assert (= (and b!109339 res!54139) b!109340))

(declare-fun m!123805 () Bool)

(assert (=> b!109340 m!123805))

(assert (=> d!29941 d!30591))

(declare-fun b!109341 () Bool)

(declare-fun e!71126 () Bool)

(declare-fun call!11633 () Bool)

(assert (=> b!109341 (= e!71126 call!11633)))

(declare-fun d!30593 () Bool)

(declare-fun res!54141 () Bool)

(declare-fun e!71125 () Bool)

(assert (=> d!30593 (=> res!54141 e!71125)))

(assert (=> d!30593 (= res!54141 (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 (v!2913 (underlying!367 thiss!992))))))))

(assert (=> d!30593 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4316 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992)))) e!71125)))

(declare-fun b!109342 () Bool)

(declare-fun e!71124 () Bool)

(assert (=> b!109342 (= e!71124 e!71126)))

(declare-fun lt!56294 () (_ BitVec 64))

(assert (=> b!109342 (= lt!56294 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!56296 () Unit!3339)

(assert (=> b!109342 (= lt!56296 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) lt!56294 #b00000000000000000000000000000000))))

(assert (=> b!109342 (arrayContainsKey!0 (_keys!4316 (v!2913 (underlying!367 thiss!992))) lt!56294 #b00000000000000000000000000000000)))

(declare-fun lt!56295 () Unit!3339)

(assert (=> b!109342 (= lt!56295 lt!56296)))

(declare-fun res!54140 () Bool)

(assert (=> b!109342 (= res!54140 (= (seekEntryOrOpen!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) #b00000000000000000000000000000000) (_keys!4316 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992)))) (Found!270 #b00000000000000000000000000000000)))))

(assert (=> b!109342 (=> (not res!54140) (not e!71126))))

(declare-fun bm!11630 () Bool)

(assert (=> bm!11630 (= call!11633 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4316 (v!2913 (underlying!367 thiss!992))) (mask!6764 (v!2913 (underlying!367 thiss!992)))))))

(declare-fun b!109343 () Bool)

(assert (=> b!109343 (= e!71125 e!71124)))

(declare-fun c!19330 () Bool)

(assert (=> b!109343 (= c!19330 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!109344 () Bool)

(assert (=> b!109344 (= e!71124 call!11633)))

(assert (= (and d!30593 (not res!54141)) b!109343))

(assert (= (and b!109343 c!19330) b!109342))

(assert (= (and b!109343 (not c!19330)) b!109344))

(assert (= (and b!109342 res!54140) b!109341))

(assert (= (or b!109341 b!109344) bm!11630))

(assert (=> b!109342 m!123483))

(declare-fun m!123807 () Bool)

(assert (=> b!109342 m!123807))

(declare-fun m!123809 () Bool)

(assert (=> b!109342 m!123809))

(assert (=> b!109342 m!123483))

(declare-fun m!123811 () Bool)

(assert (=> b!109342 m!123811))

(declare-fun m!123813 () Bool)

(assert (=> bm!11630 m!123813))

(assert (=> b!109343 m!123483))

(assert (=> b!109343 m!123483))

(assert (=> b!109343 m!123489))

(assert (=> b!108134 d!30593))

(declare-fun d!30595 () Bool)

(declare-fun c!19331 () Bool)

(assert (=> d!30595 (= c!19331 (and ((_ is Cons!1644) (t!5776 lt!55301)) (= (_1!1221 (h!2242 (t!5776 lt!55301))) (_1!1221 lt!55252))))))

(declare-fun e!71127 () Option!162)

(assert (=> d!30595 (= (getValueByKey!156 (t!5776 lt!55301) (_1!1221 lt!55252)) e!71127)))

(declare-fun b!109347 () Bool)

(declare-fun e!71128 () Option!162)

(assert (=> b!109347 (= e!71128 (getValueByKey!156 (t!5776 (t!5776 lt!55301)) (_1!1221 lt!55252)))))

(declare-fun b!109348 () Bool)

(assert (=> b!109348 (= e!71128 None!160)))

(declare-fun b!109346 () Bool)

(assert (=> b!109346 (= e!71127 e!71128)))

(declare-fun c!19332 () Bool)

(assert (=> b!109346 (= c!19332 (and ((_ is Cons!1644) (t!5776 lt!55301)) (not (= (_1!1221 (h!2242 (t!5776 lt!55301))) (_1!1221 lt!55252)))))))

(declare-fun b!109345 () Bool)

(assert (=> b!109345 (= e!71127 (Some!161 (_2!1221 (h!2242 (t!5776 lt!55301)))))))

(assert (= (and d!30595 c!19331) b!109345))

(assert (= (and d!30595 (not c!19331)) b!109346))

(assert (= (and b!109346 c!19332) b!109347))

(assert (= (and b!109346 (not c!19332)) b!109348))

(declare-fun m!123815 () Bool)

(assert (=> b!109347 m!123815))

(assert (=> b!108278 d!30595))

(declare-fun d!30597 () Bool)

(declare-fun c!19333 () Bool)

(assert (=> d!30597 (= c!19333 ((_ is ValueCellFull!1002) (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!71129 () V!3235)

(assert (=> d!30597 (= (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!71129)))

(declare-fun b!109349 () Bool)

(assert (=> b!109349 (= e!71129 (get!1350 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109350 () Bool)

(assert (=> b!109350 (= e!71129 (get!1351 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30597 c!19333) b!109349))

(assert (= (and d!30597 (not c!19333)) b!109350))

(assert (=> b!109349 m!121875))

(assert (=> b!109349 m!121207))

(declare-fun m!123817 () Bool)

(assert (=> b!109349 m!123817))

(assert (=> b!109350 m!121875))

(assert (=> b!109350 m!121207))

(declare-fun m!123819 () Bool)

(assert (=> b!109350 m!123819))

(assert (=> b!108326 d!30597))

(declare-fun d!30599 () Bool)

(declare-fun e!71130 () Bool)

(assert (=> d!30599 e!71130))

(declare-fun res!54142 () Bool)

(assert (=> d!30599 (=> (not res!54142) (not e!71130))))

(declare-fun lt!56299 () ListLongMap!1591)

(assert (=> d!30599 (= res!54142 (contains!834 lt!56299 (_1!1221 (tuple2!2423 lt!55641 lt!55645))))))

(declare-fun lt!56297 () List!1648)

(assert (=> d!30599 (= lt!56299 (ListLongMap!1592 lt!56297))))

(declare-fun lt!56298 () Unit!3339)

(declare-fun lt!56300 () Unit!3339)

(assert (=> d!30599 (= lt!56298 lt!56300)))

(assert (=> d!30599 (= (getValueByKey!156 lt!56297 (_1!1221 (tuple2!2423 lt!55641 lt!55645))) (Some!161 (_2!1221 (tuple2!2423 lt!55641 lt!55645))))))

(assert (=> d!30599 (= lt!56300 (lemmaContainsTupThenGetReturnValue!74 lt!56297 (_1!1221 (tuple2!2423 lt!55641 lt!55645)) (_2!1221 (tuple2!2423 lt!55641 lt!55645))))))

(assert (=> d!30599 (= lt!56297 (insertStrictlySorted!76 (toList!811 lt!55639) (_1!1221 (tuple2!2423 lt!55641 lt!55645)) (_2!1221 (tuple2!2423 lt!55641 lt!55645))))))

(assert (=> d!30599 (= (+!148 lt!55639 (tuple2!2423 lt!55641 lt!55645)) lt!56299)))

(declare-fun b!109351 () Bool)

(declare-fun res!54143 () Bool)

(assert (=> b!109351 (=> (not res!54143) (not e!71130))))

(assert (=> b!109351 (= res!54143 (= (getValueByKey!156 (toList!811 lt!56299) (_1!1221 (tuple2!2423 lt!55641 lt!55645))) (Some!161 (_2!1221 (tuple2!2423 lt!55641 lt!55645)))))))

(declare-fun b!109352 () Bool)

(assert (=> b!109352 (= e!71130 (contains!835 (toList!811 lt!56299) (tuple2!2423 lt!55641 lt!55645)))))

(assert (= (and d!30599 res!54142) b!109351))

(assert (= (and b!109351 res!54143) b!109352))

(declare-fun m!123821 () Bool)

(assert (=> d!30599 m!123821))

(declare-fun m!123823 () Bool)

(assert (=> d!30599 m!123823))

(declare-fun m!123825 () Bool)

(assert (=> d!30599 m!123825))

(declare-fun m!123827 () Bool)

(assert (=> d!30599 m!123827))

(declare-fun m!123829 () Bool)

(assert (=> b!109351 m!123829))

(declare-fun m!123831 () Bool)

(assert (=> b!109352 m!123831))

(assert (=> b!108326 d!30599))

(declare-fun d!30601 () Bool)

(declare-fun e!71131 () Bool)

(assert (=> d!30601 e!71131))

(declare-fun res!54144 () Bool)

(assert (=> d!30601 (=> (not res!54144) (not e!71131))))

(declare-fun lt!56303 () ListLongMap!1591)

(assert (=> d!30601 (= res!54144 (contains!834 lt!56303 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!56301 () List!1648)

(assert (=> d!30601 (= lt!56303 (ListLongMap!1592 lt!56301))))

(declare-fun lt!56302 () Unit!3339)

(declare-fun lt!56304 () Unit!3339)

(assert (=> d!30601 (= lt!56302 lt!56304)))

(assert (=> d!30601 (= (getValueByKey!156 lt!56301 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30601 (= lt!56304 (lemmaContainsTupThenGetReturnValue!74 lt!56301 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30601 (= lt!56301 (insertStrictlySorted!76 (toList!811 call!11506) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30601 (= (+!148 call!11506 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!56303)))

(declare-fun b!109353 () Bool)

(declare-fun res!54145 () Bool)

(assert (=> b!109353 (=> (not res!54145) (not e!71131))))

(assert (=> b!109353 (= res!54145 (= (getValueByKey!156 (toList!811 lt!56303) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!109354 () Bool)

(assert (=> b!109354 (= e!71131 (contains!835 (toList!811 lt!56303) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1349 (select (arr!2075 (_values!2589 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!391 (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!30601 res!54144) b!109353))

(assert (= (and b!109353 res!54145) b!109354))

(declare-fun m!123833 () Bool)

(assert (=> d!30601 m!123833))

(declare-fun m!123835 () Bool)

(assert (=> d!30601 m!123835))

(declare-fun m!123837 () Bool)

(assert (=> d!30601 m!123837))

(declare-fun m!123839 () Bool)

(assert (=> d!30601 m!123839))

(declare-fun m!123841 () Bool)

(assert (=> b!109353 m!123841))

(declare-fun m!123843 () Bool)

(assert (=> b!109354 m!123843))

(assert (=> b!108326 d!30601))

(declare-fun d!30603 () Bool)

(assert (=> d!30603 (not (contains!834 (+!148 lt!55639 (tuple2!2423 lt!55641 lt!55645)) lt!55643))))

(declare-fun lt!56305 () Unit!3339)

(assert (=> d!30603 (= lt!56305 (choose!687 lt!55639 lt!55641 lt!55645 lt!55643))))

(declare-fun e!71132 () Bool)

(assert (=> d!30603 e!71132))

(declare-fun res!54146 () Bool)

(assert (=> d!30603 (=> (not res!54146) (not e!71132))))

(assert (=> d!30603 (= res!54146 (not (contains!834 lt!55639 lt!55643)))))

(assert (=> d!30603 (= (addStillNotContains!49 lt!55639 lt!55641 lt!55645 lt!55643) lt!56305)))

(declare-fun b!109355 () Bool)

(assert (=> b!109355 (= e!71132 (not (= lt!55641 lt!55643)))))

(assert (= (and d!30603 res!54146) b!109355))

(assert (=> d!30603 m!121885))

(assert (=> d!30603 m!121885))

(assert (=> d!30603 m!121887))

(declare-fun m!123845 () Bool)

(assert (=> d!30603 m!123845))

(declare-fun m!123847 () Bool)

(assert (=> d!30603 m!123847))

(assert (=> b!108326 d!30603))

(declare-fun d!30605 () Bool)

(declare-fun e!71134 () Bool)

(assert (=> d!30605 e!71134))

(declare-fun res!54147 () Bool)

(assert (=> d!30605 (=> res!54147 e!71134)))

(declare-fun lt!56306 () Bool)

(assert (=> d!30605 (= res!54147 (not lt!56306))))

(declare-fun lt!56307 () Bool)

(assert (=> d!30605 (= lt!56306 lt!56307)))

(declare-fun lt!56308 () Unit!3339)

(declare-fun e!71133 () Unit!3339)

(assert (=> d!30605 (= lt!56308 e!71133)))

(declare-fun c!19334 () Bool)

(assert (=> d!30605 (= c!19334 lt!56307)))

(assert (=> d!30605 (= lt!56307 (containsKey!160 (toList!811 (+!148 lt!55639 (tuple2!2423 lt!55641 lt!55645))) lt!55643))))

(assert (=> d!30605 (= (contains!834 (+!148 lt!55639 (tuple2!2423 lt!55641 lt!55645)) lt!55643) lt!56306)))

(declare-fun b!109356 () Bool)

(declare-fun lt!56309 () Unit!3339)

(assert (=> b!109356 (= e!71133 lt!56309)))

(assert (=> b!109356 (= lt!56309 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 (+!148 lt!55639 (tuple2!2423 lt!55641 lt!55645))) lt!55643))))

(assert (=> b!109356 (isDefined!110 (getValueByKey!156 (toList!811 (+!148 lt!55639 (tuple2!2423 lt!55641 lt!55645))) lt!55643))))

(declare-fun b!109357 () Bool)

(declare-fun Unit!3403 () Unit!3339)

(assert (=> b!109357 (= e!71133 Unit!3403)))

(declare-fun b!109358 () Bool)

(assert (=> b!109358 (= e!71134 (isDefined!110 (getValueByKey!156 (toList!811 (+!148 lt!55639 (tuple2!2423 lt!55641 lt!55645))) lt!55643)))))

(assert (= (and d!30605 c!19334) b!109356))

(assert (= (and d!30605 (not c!19334)) b!109357))

(assert (= (and d!30605 (not res!54147)) b!109358))

(declare-fun m!123849 () Bool)

(assert (=> d!30605 m!123849))

(declare-fun m!123851 () Bool)

(assert (=> b!109356 m!123851))

(declare-fun m!123853 () Bool)

(assert (=> b!109356 m!123853))

(assert (=> b!109356 m!123853))

(declare-fun m!123855 () Bool)

(assert (=> b!109356 m!123855))

(assert (=> b!109358 m!123853))

(assert (=> b!109358 m!123853))

(assert (=> b!109358 m!123855))

(assert (=> b!108326 d!30605))

(declare-fun d!30607 () Bool)

(assert (=> d!30607 (= (apply!99 lt!55510 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1352 (getValueByKey!156 (toList!811 lt!55510) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4502 () Bool)

(assert (= bs!4502 d!30607))

(declare-fun m!123857 () Bool)

(assert (=> bs!4502 m!123857))

(assert (=> bs!4502 m!123857))

(declare-fun m!123859 () Bool)

(assert (=> bs!4502 m!123859))

(assert (=> b!108086 d!30607))

(declare-fun d!30609 () Bool)

(declare-fun lt!56310 () Bool)

(assert (=> d!30609 (= lt!56310 (select (content!110 (t!5776 (toList!811 lt!55331))) lt!55252))))

(declare-fun e!71135 () Bool)

(assert (=> d!30609 (= lt!56310 e!71135)))

(declare-fun res!54149 () Bool)

(assert (=> d!30609 (=> (not res!54149) (not e!71135))))

(assert (=> d!30609 (= res!54149 ((_ is Cons!1644) (t!5776 (toList!811 lt!55331))))))

(assert (=> d!30609 (= (contains!835 (t!5776 (toList!811 lt!55331)) lt!55252) lt!56310)))

(declare-fun b!109359 () Bool)

(declare-fun e!71136 () Bool)

(assert (=> b!109359 (= e!71135 e!71136)))

(declare-fun res!54148 () Bool)

(assert (=> b!109359 (=> res!54148 e!71136)))

(assert (=> b!109359 (= res!54148 (= (h!2242 (t!5776 (toList!811 lt!55331))) lt!55252))))

(declare-fun b!109360 () Bool)

(assert (=> b!109360 (= e!71136 (contains!835 (t!5776 (t!5776 (toList!811 lt!55331))) lt!55252))))

(assert (= (and d!30609 res!54149) b!109359))

(assert (= (and b!109359 (not res!54148)) b!109360))

(assert (=> d!30609 m!123559))

(declare-fun m!123861 () Bool)

(assert (=> d!30609 m!123861))

(declare-fun m!123863 () Bool)

(assert (=> b!109360 m!123863))

(assert (=> b!108497 d!30609))

(declare-fun d!30611 () Bool)

(declare-fun c!19335 () Bool)

(assert (=> d!30611 (= c!19335 ((_ is Nil!1645) (toList!811 lt!55335)))))

(declare-fun e!71137 () (InoxSet tuple2!2422))

(assert (=> d!30611 (= (content!110 (toList!811 lt!55335)) e!71137)))

(declare-fun b!109361 () Bool)

(assert (=> b!109361 (= e!71137 ((as const (Array tuple2!2422 Bool)) false))))

(declare-fun b!109362 () Bool)

(assert (=> b!109362 (= e!71137 ((_ map or) (store ((as const (Array tuple2!2422 Bool)) false) (h!2242 (toList!811 lt!55335)) true) (content!110 (t!5776 (toList!811 lt!55335)))))))

(assert (= (and d!30611 c!19335) b!109361))

(assert (= (and d!30611 (not c!19335)) b!109362))

(declare-fun m!123865 () Bool)

(assert (=> b!109362 m!123865))

(declare-fun m!123867 () Bool)

(assert (=> b!109362 m!123867))

(assert (=> d!30097 d!30611))

(declare-fun d!30613 () Bool)

(declare-fun e!71139 () Bool)

(assert (=> d!30613 e!71139))

(declare-fun res!54150 () Bool)

(assert (=> d!30613 (=> res!54150 e!71139)))

(declare-fun lt!56311 () Bool)

(assert (=> d!30613 (= res!54150 (not lt!56311))))

(declare-fun lt!56312 () Bool)

(assert (=> d!30613 (= lt!56311 lt!56312)))

(declare-fun lt!56313 () Unit!3339)

(declare-fun e!71138 () Unit!3339)

(assert (=> d!30613 (= lt!56313 e!71138)))

(declare-fun c!19336 () Bool)

(assert (=> d!30613 (= c!19336 lt!56312)))

(assert (=> d!30613 (= lt!56312 (containsKey!160 (toList!811 lt!55803) (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30613 (= (contains!834 lt!55803 (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!56311)))

(declare-fun b!109363 () Bool)

(declare-fun lt!56314 () Unit!3339)

(assert (=> b!109363 (= e!71138 lt!56314)))

(assert (=> b!109363 (= lt!56314 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55803) (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> b!109363 (isDefined!110 (getValueByKey!156 (toList!811 lt!55803) (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109364 () Bool)

(declare-fun Unit!3404 () Unit!3339)

(assert (=> b!109364 (= e!71138 Unit!3404)))

(declare-fun b!109365 () Bool)

(assert (=> b!109365 (= e!71139 (isDefined!110 (getValueByKey!156 (toList!811 lt!55803) (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (= (and d!30613 c!19336) b!109363))

(assert (= (and d!30613 (not c!19336)) b!109364))

(assert (= (and d!30613 (not res!54150)) b!109365))

(declare-fun m!123869 () Bool)

(assert (=> d!30613 m!123869))

(declare-fun m!123871 () Bool)

(assert (=> b!109363 m!123871))

(assert (=> b!109363 m!122141))

(assert (=> b!109363 m!122141))

(declare-fun m!123873 () Bool)

(assert (=> b!109363 m!123873))

(assert (=> b!109365 m!122141))

(assert (=> b!109365 m!122141))

(assert (=> b!109365 m!123873))

(assert (=> d!30025 d!30613))

(declare-fun d!30615 () Bool)

(declare-fun c!19337 () Bool)

(assert (=> d!30615 (= c!19337 (and ((_ is Cons!1644) lt!55801) (= (_1!1221 (h!2242 lt!55801)) (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!71140 () Option!162)

(assert (=> d!30615 (= (getValueByKey!156 lt!55801 (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) e!71140)))

(declare-fun b!109368 () Bool)

(declare-fun e!71141 () Option!162)

(assert (=> b!109368 (= e!71141 (getValueByKey!156 (t!5776 lt!55801) (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109369 () Bool)

(assert (=> b!109369 (= e!71141 None!160)))

(declare-fun b!109367 () Bool)

(assert (=> b!109367 (= e!71140 e!71141)))

(declare-fun c!19338 () Bool)

(assert (=> b!109367 (= c!19338 (and ((_ is Cons!1644) lt!55801) (not (= (_1!1221 (h!2242 lt!55801)) (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun b!109366 () Bool)

(assert (=> b!109366 (= e!71140 (Some!161 (_2!1221 (h!2242 lt!55801))))))

(assert (= (and d!30615 c!19337) b!109366))

(assert (= (and d!30615 (not c!19337)) b!109367))

(assert (= (and b!109367 c!19338) b!109368))

(assert (= (and b!109367 (not c!19338)) b!109369))

(declare-fun m!123875 () Bool)

(assert (=> b!109368 m!123875))

(assert (=> d!30025 d!30615))

(declare-fun d!30617 () Bool)

(assert (=> d!30617 (= (getValueByKey!156 lt!55801 (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun lt!56315 () Unit!3339)

(assert (=> d!30617 (= lt!56315 (choose!680 lt!55801 (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun e!71142 () Bool)

(assert (=> d!30617 e!71142))

(declare-fun res!54151 () Bool)

(assert (=> d!30617 (=> (not res!54151) (not e!71142))))

(assert (=> d!30617 (= res!54151 (isStrictlySorted!305 lt!55801))))

(assert (=> d!30617 (= (lemmaContainsTupThenGetReturnValue!74 lt!55801 (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!56315)))

(declare-fun b!109370 () Bool)

(declare-fun res!54152 () Bool)

(assert (=> b!109370 (=> (not res!54152) (not e!71142))))

(assert (=> b!109370 (= res!54152 (containsKey!160 lt!55801 (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109371 () Bool)

(assert (=> b!109371 (= e!71142 (contains!835 lt!55801 (tuple2!2423 (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (= (and d!30617 res!54151) b!109370))

(assert (= (and b!109370 res!54152) b!109371))

(assert (=> d!30617 m!122135))

(declare-fun m!123877 () Bool)

(assert (=> d!30617 m!123877))

(declare-fun m!123879 () Bool)

(assert (=> d!30617 m!123879))

(declare-fun m!123881 () Bool)

(assert (=> b!109370 m!123881))

(declare-fun m!123883 () Bool)

(assert (=> b!109371 m!123883))

(assert (=> d!30025 d!30617))

(declare-fun b!109372 () Bool)

(declare-fun c!19339 () Bool)

(assert (=> b!109372 (= c!19339 (and ((_ is Cons!1644) (toList!811 lt!55482)) (bvsgt (_1!1221 (h!2242 (toList!811 lt!55482))) (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!71143 () List!1648)

(declare-fun e!71144 () List!1648)

(assert (=> b!109372 (= e!71143 e!71144)))

(declare-fun b!109373 () Bool)

(declare-fun e!71145 () List!1648)

(declare-fun call!11635 () List!1648)

(assert (=> b!109373 (= e!71145 call!11635)))

(declare-fun bm!11631 () Bool)

(declare-fun c!19340 () Bool)

(declare-fun e!71147 () List!1648)

(assert (=> bm!11631 (= call!11635 ($colon$colon!81 e!71147 (ite c!19340 (h!2242 (toList!811 lt!55482)) (tuple2!2423 (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun c!19341 () Bool)

(assert (=> bm!11631 (= c!19341 c!19340)))

(declare-fun b!109374 () Bool)

(declare-fun call!11634 () List!1648)

(assert (=> b!109374 (= e!71144 call!11634)))

(declare-fun b!109375 () Bool)

(declare-fun call!11636 () List!1648)

(assert (=> b!109375 (= e!71143 call!11636)))

(declare-fun d!30619 () Bool)

(declare-fun e!71146 () Bool)

(assert (=> d!30619 e!71146))

(declare-fun res!54153 () Bool)

(assert (=> d!30619 (=> (not res!54153) (not e!71146))))

(declare-fun lt!56316 () List!1648)

(assert (=> d!30619 (= res!54153 (isStrictlySorted!305 lt!56316))))

(assert (=> d!30619 (= lt!56316 e!71145)))

(assert (=> d!30619 (= c!19340 (and ((_ is Cons!1644) (toList!811 lt!55482)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55482))) (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (=> d!30619 (isStrictlySorted!305 (toList!811 lt!55482))))

(assert (=> d!30619 (= (insertStrictlySorted!76 (toList!811 lt!55482) (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!56316)))

(declare-fun b!109376 () Bool)

(assert (=> b!109376 (= e!71145 e!71143)))

(declare-fun c!19342 () Bool)

(assert (=> b!109376 (= c!19342 (and ((_ is Cons!1644) (toList!811 lt!55482)) (= (_1!1221 (h!2242 (toList!811 lt!55482))) (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!109377 () Bool)

(declare-fun res!54154 () Bool)

(assert (=> b!109377 (=> (not res!54154) (not e!71146))))

(assert (=> b!109377 (= res!54154 (containsKey!160 lt!56316 (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun bm!11632 () Bool)

(assert (=> bm!11632 (= call!11636 call!11635)))

(declare-fun bm!11633 () Bool)

(assert (=> bm!11633 (= call!11634 call!11636)))

(declare-fun b!109378 () Bool)

(assert (=> b!109378 (= e!71147 (insertStrictlySorted!76 (t!5776 (toList!811 lt!55482)) (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109379 () Bool)

(assert (=> b!109379 (= e!71144 call!11634)))

(declare-fun b!109380 () Bool)

(assert (=> b!109380 (= e!71146 (contains!835 lt!56316 (tuple2!2423 (_1!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55484 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!109381 () Bool)

(assert (=> b!109381 (= e!71147 (ite c!19342 (t!5776 (toList!811 lt!55482)) (ite c!19339 (Cons!1644 (h!2242 (toList!811 lt!55482)) (t!5776 (toList!811 lt!55482))) Nil!1645)))))

(assert (= (and d!30619 c!19340) b!109373))

(assert (= (and d!30619 (not c!19340)) b!109376))

(assert (= (and b!109376 c!19342) b!109375))

(assert (= (and b!109376 (not c!19342)) b!109372))

(assert (= (and b!109372 c!19339) b!109379))

(assert (= (and b!109372 (not c!19339)) b!109374))

(assert (= (or b!109379 b!109374) bm!11633))

(assert (= (or b!109375 bm!11633) bm!11632))

(assert (= (or b!109373 bm!11632) bm!11631))

(assert (= (and bm!11631 c!19341) b!109378))

(assert (= (and bm!11631 (not c!19341)) b!109381))

(assert (= (and d!30619 res!54153) b!109377))

(assert (= (and b!109377 res!54154) b!109380))

(declare-fun m!123885 () Bool)

(assert (=> b!109380 m!123885))

(declare-fun m!123887 () Bool)

(assert (=> b!109377 m!123887))

(declare-fun m!123889 () Bool)

(assert (=> bm!11631 m!123889))

(declare-fun m!123891 () Bool)

(assert (=> d!30619 m!123891))

(declare-fun m!123893 () Bool)

(assert (=> d!30619 m!123893))

(declare-fun m!123895 () Bool)

(assert (=> b!109378 m!123895))

(assert (=> d!30025 d!30619))

(declare-fun d!30621 () Bool)

(assert (=> d!30621 (isDefined!110 (getValueByKey!156 (toList!811 lt!55303) (_1!1221 lt!55252)))))

(declare-fun lt!56317 () Unit!3339)

(assert (=> d!30621 (= lt!56317 (choose!683 (toList!811 lt!55303) (_1!1221 lt!55252)))))

(declare-fun e!71148 () Bool)

(assert (=> d!30621 e!71148))

(declare-fun res!54155 () Bool)

(assert (=> d!30621 (=> (not res!54155) (not e!71148))))

(assert (=> d!30621 (= res!54155 (isStrictlySorted!305 (toList!811 lt!55303)))))

(assert (=> d!30621 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55303) (_1!1221 lt!55252)) lt!56317)))

(declare-fun b!109382 () Bool)

(assert (=> b!109382 (= e!71148 (containsKey!160 (toList!811 lt!55303) (_1!1221 lt!55252)))))

(assert (= (and d!30621 res!54155) b!109382))

(assert (=> d!30621 m!121297))

(assert (=> d!30621 m!121297))

(assert (=> d!30621 m!121811))

(declare-fun m!123897 () Bool)

(assert (=> d!30621 m!123897))

(declare-fun m!123899 () Bool)

(assert (=> d!30621 m!123899))

(assert (=> b!109382 m!121807))

(assert (=> b!108273 d!30621))

(assert (=> b!108273 d!30395))

(assert (=> b!108273 d!29985))

(declare-fun d!30623 () Bool)

(assert (=> d!30623 (= (size!2334 newMap!16) (bvadd (_size!505 newMap!16) (bvsdiv (bvadd (extraKeys!2407 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!108522 d!30623))

(declare-fun d!30625 () Bool)

(declare-fun e!71149 () Bool)

(assert (=> d!30625 e!71149))

(declare-fun res!54156 () Bool)

(assert (=> d!30625 (=> (not res!54156) (not e!71149))))

(declare-fun lt!56320 () ListLongMap!1591)

(assert (=> d!30625 (= res!54156 (contains!834 lt!56320 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(declare-fun lt!56318 () List!1648)

(assert (=> d!30625 (= lt!56320 (ListLongMap!1592 lt!56318))))

(declare-fun lt!56319 () Unit!3339)

(declare-fun lt!56321 () Unit!3339)

(assert (=> d!30625 (= lt!56319 lt!56321)))

(assert (=> d!30625 (= (getValueByKey!156 lt!56318 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(assert (=> d!30625 (= lt!56321 (lemmaContainsTupThenGetReturnValue!74 lt!56318 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))) (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(assert (=> d!30625 (= lt!56318 (insertStrictlySorted!76 (toList!811 call!11510) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))) (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(assert (=> d!30625 (= (+!148 call!11510 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))) lt!56320)))

(declare-fun b!109383 () Bool)

(declare-fun res!54157 () Bool)

(assert (=> b!109383 (=> (not res!54157) (not e!71149))))

(assert (=> b!109383 (= res!54157 (= (getValueByKey!156 (toList!811 lt!56320) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(declare-fun b!109384 () Bool)

(assert (=> b!109384 (= e!71149 (contains!835 (toList!811 lt!56320) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))

(assert (= (and d!30625 res!54156) b!109383))

(assert (= (and b!109383 res!54157) b!109384))

(declare-fun m!123901 () Bool)

(assert (=> d!30625 m!123901))

(declare-fun m!123903 () Bool)

(assert (=> d!30625 m!123903))

(declare-fun m!123905 () Bool)

(assert (=> d!30625 m!123905))

(declare-fun m!123907 () Bool)

(assert (=> d!30625 m!123907))

(declare-fun m!123909 () Bool)

(assert (=> b!109383 m!123909))

(declare-fun m!123911 () Bool)

(assert (=> b!109384 m!123911))

(assert (=> b!108351 d!30625))

(declare-fun d!30627 () Bool)

(assert (=> d!30627 (= (get!1352 (getValueByKey!156 (toList!811 lt!55480) lt!55487)) (v!2917 (getValueByKey!156 (toList!811 lt!55480) lt!55487)))))

(assert (=> d!30039 d!30627))

(declare-fun d!30629 () Bool)

(declare-fun c!19343 () Bool)

(assert (=> d!30629 (= c!19343 (and ((_ is Cons!1644) (toList!811 lt!55480)) (= (_1!1221 (h!2242 (toList!811 lt!55480))) lt!55487)))))

(declare-fun e!71150 () Option!162)

(assert (=> d!30629 (= (getValueByKey!156 (toList!811 lt!55480) lt!55487) e!71150)))

(declare-fun b!109387 () Bool)

(declare-fun e!71151 () Option!162)

(assert (=> b!109387 (= e!71151 (getValueByKey!156 (t!5776 (toList!811 lt!55480)) lt!55487))))

(declare-fun b!109388 () Bool)

(assert (=> b!109388 (= e!71151 None!160)))

(declare-fun b!109386 () Bool)

(assert (=> b!109386 (= e!71150 e!71151)))

(declare-fun c!19344 () Bool)

(assert (=> b!109386 (= c!19344 (and ((_ is Cons!1644) (toList!811 lt!55480)) (not (= (_1!1221 (h!2242 (toList!811 lt!55480))) lt!55487))))))

(declare-fun b!109385 () Bool)

(assert (=> b!109385 (= e!71150 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55480)))))))

(assert (= (and d!30629 c!19343) b!109385))

(assert (= (and d!30629 (not c!19343)) b!109386))

(assert (= (and b!109386 c!19344) b!109387))

(assert (= (and b!109386 (not c!19344)) b!109388))

(declare-fun m!123913 () Bool)

(assert (=> b!109387 m!123913))

(assert (=> d!30039 d!30629))

(declare-fun d!30631 () Bool)

(declare-fun e!71153 () Bool)

(assert (=> d!30631 e!71153))

(declare-fun res!54158 () Bool)

(assert (=> d!30631 (=> res!54158 e!71153)))

(declare-fun lt!56322 () Bool)

(assert (=> d!30631 (= res!54158 (not lt!56322))))

(declare-fun lt!56323 () Bool)

(assert (=> d!30631 (= lt!56322 lt!56323)))

(declare-fun lt!56324 () Unit!3339)

(declare-fun e!71152 () Unit!3339)

(assert (=> d!30631 (= lt!56324 e!71152)))

(declare-fun c!19345 () Bool)

(assert (=> d!30631 (= c!19345 lt!56323)))

(assert (=> d!30631 (= lt!56323 (containsKey!160 (toList!811 lt!55480) lt!55487))))

(assert (=> d!30631 (= (contains!834 lt!55480 lt!55487) lt!56322)))

(declare-fun b!109389 () Bool)

(declare-fun lt!56325 () Unit!3339)

(assert (=> b!109389 (= e!71152 lt!56325)))

(assert (=> b!109389 (= lt!56325 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55480) lt!55487))))

(assert (=> b!109389 (isDefined!110 (getValueByKey!156 (toList!811 lt!55480) lt!55487))))

(declare-fun b!109390 () Bool)

(declare-fun Unit!3405 () Unit!3339)

(assert (=> b!109390 (= e!71152 Unit!3405)))

(declare-fun b!109391 () Bool)

(assert (=> b!109391 (= e!71153 (isDefined!110 (getValueByKey!156 (toList!811 lt!55480) lt!55487)))))

(assert (= (and d!30631 c!19345) b!109389))

(assert (= (and d!30631 (not c!19345)) b!109390))

(assert (= (and d!30631 (not res!54158)) b!109391))

(declare-fun m!123915 () Bool)

(assert (=> d!30631 m!123915))

(declare-fun m!123917 () Bool)

(assert (=> b!109389 m!123917))

(assert (=> b!109389 m!122185))

(assert (=> b!109389 m!122185))

(declare-fun m!123919 () Bool)

(assert (=> b!109389 m!123919))

(assert (=> b!109391 m!122185))

(assert (=> b!109391 m!122185))

(assert (=> b!109391 m!123919))

(assert (=> d!30021 d!30631))

(declare-fun d!30633 () Bool)

(assert (=> d!30633 (= (apply!99 (+!148 lt!55480 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!55487) (apply!99 lt!55480 lt!55487))))

(assert (=> d!30633 true))

(declare-fun _$34!900 () Unit!3339)

(assert (=> d!30633 (= (choose!684 lt!55480 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))) lt!55487) _$34!900)))

(declare-fun bs!4503 () Bool)

(assert (= bs!4503 d!30633))

(assert (=> bs!4503 m!121463))

(assert (=> bs!4503 m!121463))

(assert (=> bs!4503 m!121477))

(assert (=> bs!4503 m!121487))

(assert (=> d!30021 d!30633))

(assert (=> d!30021 d!30019))

(assert (=> d!30021 d!30039))

(assert (=> d!30021 d!30027))

(declare-fun d!30635 () Bool)

(assert (=> d!30635 (= (validKeyInArray!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!108334 d!30635))

(declare-fun d!30637 () Bool)

(declare-fun lt!56326 () Bool)

(assert (=> d!30637 (= lt!56326 (select (content!110 (t!5776 (toList!811 lt!55339))) lt!55249))))

(declare-fun e!71154 () Bool)

(assert (=> d!30637 (= lt!56326 e!71154)))

(declare-fun res!54160 () Bool)

(assert (=> d!30637 (=> (not res!54160) (not e!71154))))

(assert (=> d!30637 (= res!54160 ((_ is Cons!1644) (t!5776 (toList!811 lt!55339))))))

(assert (=> d!30637 (= (contains!835 (t!5776 (toList!811 lt!55339)) lt!55249) lt!56326)))

(declare-fun b!109392 () Bool)

(declare-fun e!71155 () Bool)

(assert (=> b!109392 (= e!71154 e!71155)))

(declare-fun res!54159 () Bool)

(assert (=> b!109392 (=> res!54159 e!71155)))

(assert (=> b!109392 (= res!54159 (= (h!2242 (t!5776 (toList!811 lt!55339))) lt!55249))))

(declare-fun b!109393 () Bool)

(assert (=> b!109393 (= e!71155 (contains!835 (t!5776 (t!5776 (toList!811 lt!55339))) lt!55249))))

(assert (= (and d!30637 res!54160) b!109392))

(assert (= (and b!109392 (not res!54159)) b!109393))

(assert (=> d!30637 m!123503))

(declare-fun m!123921 () Bool)

(assert (=> d!30637 m!123921))

(declare-fun m!123923 () Bool)

(assert (=> b!109393 m!123923))

(assert (=> b!108323 d!30637))

(declare-fun d!30639 () Bool)

(assert (=> d!30639 (= (isDefined!110 (getValueByKey!156 (toList!811 call!11428) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))) (not (isEmpty!379 (getValueByKey!156 (toList!811 call!11428) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))))

(declare-fun bs!4504 () Bool)

(assert (= bs!4504 d!30639))

(assert (=> bs!4504 m!122245))

(declare-fun m!123925 () Bool)

(assert (=> bs!4504 m!123925))

(assert (=> b!108489 d!30639))

(declare-fun d!30641 () Bool)

(declare-fun c!19346 () Bool)

(assert (=> d!30641 (= c!19346 (and ((_ is Cons!1644) (toList!811 call!11428)) (= (_1!1221 (h!2242 (toList!811 call!11428))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))))

(declare-fun e!71156 () Option!162)

(assert (=> d!30641 (= (getValueByKey!156 (toList!811 call!11428) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) e!71156)))

(declare-fun e!71157 () Option!162)

(declare-fun b!109396 () Bool)

(assert (=> b!109396 (= e!71157 (getValueByKey!156 (t!5776 (toList!811 call!11428)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!109397 () Bool)

(assert (=> b!109397 (= e!71157 None!160)))

(declare-fun b!109395 () Bool)

(assert (=> b!109395 (= e!71156 e!71157)))

(declare-fun c!19347 () Bool)

(assert (=> b!109395 (= c!19347 (and ((_ is Cons!1644) (toList!811 call!11428)) (not (= (_1!1221 (h!2242 (toList!811 call!11428))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))))

(declare-fun b!109394 () Bool)

(assert (=> b!109394 (= e!71156 (Some!161 (_2!1221 (h!2242 (toList!811 call!11428)))))))

(assert (= (and d!30641 c!19346) b!109394))

(assert (= (and d!30641 (not c!19346)) b!109395))

(assert (= (and b!109395 c!19347) b!109396))

(assert (= (and b!109395 (not c!19347)) b!109397))

(assert (=> b!109396 m!121177))

(declare-fun m!123927 () Bool)

(assert (=> b!109396 m!123927))

(assert (=> b!108489 d!30641))

(declare-fun b!109398 () Bool)

(declare-fun e!71160 () Bool)

(declare-fun call!11637 () Bool)

(assert (=> b!109398 (= e!71160 call!11637)))

(declare-fun d!30643 () Bool)

(declare-fun res!54162 () Bool)

(declare-fun e!71159 () Bool)

(assert (=> d!30643 (=> res!54162 e!71159)))

(assert (=> d!30643 (= res!54162 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2330 (_keys!4316 newMap!16))))))

(assert (=> d!30643 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4316 newMap!16) (mask!6764 newMap!16)) e!71159)))

(declare-fun b!109399 () Bool)

(declare-fun e!71158 () Bool)

(assert (=> b!109399 (= e!71158 e!71160)))

(declare-fun lt!56327 () (_ BitVec 64))

(assert (=> b!109399 (= lt!56327 (select (arr!2074 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!56329 () Unit!3339)

(assert (=> b!109399 (= lt!56329 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4316 newMap!16) lt!56327 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!109399 (arrayContainsKey!0 (_keys!4316 newMap!16) lt!56327 #b00000000000000000000000000000000)))

(declare-fun lt!56328 () Unit!3339)

(assert (=> b!109399 (= lt!56328 lt!56329)))

(declare-fun res!54161 () Bool)

(assert (=> b!109399 (= res!54161 (= (seekEntryOrOpen!0 (select (arr!2074 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4316 newMap!16) (mask!6764 newMap!16)) (Found!270 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!109399 (=> (not res!54161) (not e!71160))))

(declare-fun bm!11634 () Bool)

(assert (=> bm!11634 (= call!11637 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun b!109400 () Bool)

(assert (=> b!109400 (= e!71159 e!71158)))

(declare-fun c!19348 () Bool)

(assert (=> b!109400 (= c!19348 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!109401 () Bool)

(assert (=> b!109401 (= e!71158 call!11637)))

(assert (= (and d!30643 (not res!54162)) b!109400))

(assert (= (and b!109400 c!19348) b!109399))

(assert (= (and b!109400 (not c!19348)) b!109401))

(assert (= (and b!109399 res!54161) b!109398))

(assert (= (or b!109398 b!109401) bm!11634))

(assert (=> b!109399 m!122525))

(declare-fun m!123929 () Bool)

(assert (=> b!109399 m!123929))

(declare-fun m!123931 () Bool)

(assert (=> b!109399 m!123931))

(assert (=> b!109399 m!122525))

(declare-fun m!123933 () Bool)

(assert (=> b!109399 m!123933))

(declare-fun m!123935 () Bool)

(assert (=> bm!11634 m!123935))

(assert (=> b!109400 m!122525))

(assert (=> b!109400 m!122525))

(declare-fun m!123937 () Bool)

(assert (=> b!109400 m!123937))

(assert (=> bm!11529 d!30643))

(declare-fun d!30645 () Bool)

(assert (=> d!30645 (arrayContainsKey!0 (_keys!4316 newMap!16) lt!55860 #b00000000000000000000000000000000)))

(declare-fun lt!56330 () Unit!3339)

(assert (=> d!30645 (= lt!56330 (choose!13 (_keys!4316 newMap!16) lt!55860 #b00000000000000000000000000000000))))

(assert (=> d!30645 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!30645 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4316 newMap!16) lt!55860 #b00000000000000000000000000000000) lt!56330)))

(declare-fun bs!4505 () Bool)

(assert (= bs!4505 d!30645))

(assert (=> bs!4505 m!122307))

(declare-fun m!123939 () Bool)

(assert (=> bs!4505 m!123939))

(assert (=> b!108533 d!30645))

(declare-fun d!30647 () Bool)

(declare-fun res!54163 () Bool)

(declare-fun e!71161 () Bool)

(assert (=> d!30647 (=> res!54163 e!71161)))

(assert (=> d!30647 (= res!54163 (= (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) lt!55860))))

(assert (=> d!30647 (= (arrayContainsKey!0 (_keys!4316 newMap!16) lt!55860 #b00000000000000000000000000000000) e!71161)))

(declare-fun b!109402 () Bool)

(declare-fun e!71162 () Bool)

(assert (=> b!109402 (= e!71161 e!71162)))

(declare-fun res!54164 () Bool)

(assert (=> b!109402 (=> (not res!54164) (not e!71162))))

(assert (=> b!109402 (= res!54164 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2330 (_keys!4316 newMap!16))))))

(declare-fun b!109403 () Bool)

(assert (=> b!109403 (= e!71162 (arrayContainsKey!0 (_keys!4316 newMap!16) lt!55860 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!30647 (not res!54163)) b!109402))

(assert (= (and b!109402 res!54164) b!109403))

(assert (=> d!30647 m!121517))

(declare-fun m!123941 () Bool)

(assert (=> b!109403 m!123941))

(assert (=> b!108533 d!30647))

(declare-fun b!109404 () Bool)

(declare-fun c!19349 () Bool)

(declare-fun lt!56331 () (_ BitVec 64))

(assert (=> b!109404 (= c!19349 (= lt!56331 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!71165 () SeekEntryResult!270)

(declare-fun e!71163 () SeekEntryResult!270)

(assert (=> b!109404 (= e!71165 e!71163)))

(declare-fun b!109405 () Bool)

(declare-fun lt!56333 () SeekEntryResult!270)

(assert (=> b!109405 (= e!71165 (Found!270 (index!3231 lt!56333)))))

(declare-fun b!109406 () Bool)

(declare-fun e!71164 () SeekEntryResult!270)

(assert (=> b!109406 (= e!71164 e!71165)))

(assert (=> b!109406 (= lt!56331 (select (arr!2074 (_keys!4316 newMap!16)) (index!3231 lt!56333)))))

(declare-fun c!19351 () Bool)

(assert (=> b!109406 (= c!19351 (= lt!56331 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109407 () Bool)

(assert (=> b!109407 (= e!71163 (MissingZero!270 (index!3231 lt!56333)))))

(declare-fun d!30649 () Bool)

(declare-fun lt!56332 () SeekEntryResult!270)

(assert (=> d!30649 (and (or ((_ is Undefined!270) lt!56332) (not ((_ is Found!270) lt!56332)) (and (bvsge (index!3230 lt!56332) #b00000000000000000000000000000000) (bvslt (index!3230 lt!56332) (size!2330 (_keys!4316 newMap!16))))) (or ((_ is Undefined!270) lt!56332) ((_ is Found!270) lt!56332) (not ((_ is MissingZero!270) lt!56332)) (and (bvsge (index!3229 lt!56332) #b00000000000000000000000000000000) (bvslt (index!3229 lt!56332) (size!2330 (_keys!4316 newMap!16))))) (or ((_ is Undefined!270) lt!56332) ((_ is Found!270) lt!56332) ((_ is MissingZero!270) lt!56332) (not ((_ is MissingVacant!270) lt!56332)) (and (bvsge (index!3232 lt!56332) #b00000000000000000000000000000000) (bvslt (index!3232 lt!56332) (size!2330 (_keys!4316 newMap!16))))) (or ((_ is Undefined!270) lt!56332) (ite ((_ is Found!270) lt!56332) (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!56332)) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!270) lt!56332) (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3229 lt!56332)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!270) lt!56332) (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3232 lt!56332)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30649 (= lt!56332 e!71164)))

(declare-fun c!19350 () Bool)

(assert (=> d!30649 (= c!19350 (and ((_ is Intermediate!270) lt!56333) (undefined!1082 lt!56333)))))

(assert (=> d!30649 (= lt!56333 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) (mask!6764 newMap!16)) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(assert (=> d!30649 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30649 (= (seekEntryOrOpen!0 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) (_keys!4316 newMap!16) (mask!6764 newMap!16)) lt!56332)))

(declare-fun b!109408 () Bool)

(assert (=> b!109408 (= e!71164 Undefined!270)))

(declare-fun b!109409 () Bool)

(assert (=> b!109409 (= e!71163 (seekKeyOrZeroReturnVacant!0 (x!13814 lt!56333) (index!3231 lt!56333) (index!3231 lt!56333) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(assert (= (and d!30649 c!19350) b!109408))

(assert (= (and d!30649 (not c!19350)) b!109406))

(assert (= (and b!109406 c!19351) b!109405))

(assert (= (and b!109406 (not c!19351)) b!109404))

(assert (= (and b!109404 c!19349) b!109407))

(assert (= (and b!109404 (not c!19349)) b!109409))

(declare-fun m!123943 () Bool)

(assert (=> b!109406 m!123943))

(declare-fun m!123945 () Bool)

(assert (=> d!30649 m!123945))

(assert (=> d!30649 m!121517))

(declare-fun m!123947 () Bool)

(assert (=> d!30649 m!123947))

(declare-fun m!123949 () Bool)

(assert (=> d!30649 m!123949))

(assert (=> d!30649 m!121521))

(declare-fun m!123951 () Bool)

(assert (=> d!30649 m!123951))

(declare-fun m!123953 () Bool)

(assert (=> d!30649 m!123953))

(assert (=> d!30649 m!121517))

(assert (=> d!30649 m!123945))

(assert (=> b!109409 m!121517))

(declare-fun m!123955 () Bool)

(assert (=> b!109409 m!123955))

(assert (=> b!108533 d!30649))

(declare-fun b!109410 () Bool)

(declare-fun c!19352 () Bool)

(assert (=> b!109410 (= c!19352 (and ((_ is Cons!1644) (t!5776 (toList!811 lt!55250))) (bvsgt (_1!1221 (h!2242 (t!5776 (toList!811 lt!55250)))) (_1!1221 lt!55252))))))

(declare-fun e!71166 () List!1648)

(declare-fun e!71167 () List!1648)

(assert (=> b!109410 (= e!71166 e!71167)))

(declare-fun b!109411 () Bool)

(declare-fun e!71168 () List!1648)

(declare-fun call!11639 () List!1648)

(assert (=> b!109411 (= e!71168 call!11639)))

(declare-fun e!71170 () List!1648)

(declare-fun bm!11635 () Bool)

(declare-fun c!19353 () Bool)

(assert (=> bm!11635 (= call!11639 ($colon$colon!81 e!71170 (ite c!19353 (h!2242 (t!5776 (toList!811 lt!55250))) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252)))))))

(declare-fun c!19354 () Bool)

(assert (=> bm!11635 (= c!19354 c!19353)))

(declare-fun b!109412 () Bool)

(declare-fun call!11638 () List!1648)

(assert (=> b!109412 (= e!71167 call!11638)))

(declare-fun b!109413 () Bool)

(declare-fun call!11640 () List!1648)

(assert (=> b!109413 (= e!71166 call!11640)))

(declare-fun d!30651 () Bool)

(declare-fun e!71169 () Bool)

(assert (=> d!30651 e!71169))

(declare-fun res!54165 () Bool)

(assert (=> d!30651 (=> (not res!54165) (not e!71169))))

(declare-fun lt!56334 () List!1648)

(assert (=> d!30651 (= res!54165 (isStrictlySorted!305 lt!56334))))

(assert (=> d!30651 (= lt!56334 e!71168)))

(assert (=> d!30651 (= c!19353 (and ((_ is Cons!1644) (t!5776 (toList!811 lt!55250))) (bvslt (_1!1221 (h!2242 (t!5776 (toList!811 lt!55250)))) (_1!1221 lt!55252))))))

(assert (=> d!30651 (isStrictlySorted!305 (t!5776 (toList!811 lt!55250)))))

(assert (=> d!30651 (= (insertStrictlySorted!76 (t!5776 (toList!811 lt!55250)) (_1!1221 lt!55252) (_2!1221 lt!55252)) lt!56334)))

(declare-fun b!109414 () Bool)

(assert (=> b!109414 (= e!71168 e!71166)))

(declare-fun c!19355 () Bool)

(assert (=> b!109414 (= c!19355 (and ((_ is Cons!1644) (t!5776 (toList!811 lt!55250))) (= (_1!1221 (h!2242 (t!5776 (toList!811 lt!55250)))) (_1!1221 lt!55252))))))

(declare-fun b!109415 () Bool)

(declare-fun res!54166 () Bool)

(assert (=> b!109415 (=> (not res!54166) (not e!71169))))

(assert (=> b!109415 (= res!54166 (containsKey!160 lt!56334 (_1!1221 lt!55252)))))

(declare-fun bm!11636 () Bool)

(assert (=> bm!11636 (= call!11640 call!11639)))

(declare-fun bm!11637 () Bool)

(assert (=> bm!11637 (= call!11638 call!11640)))

(declare-fun b!109416 () Bool)

(assert (=> b!109416 (= e!71170 (insertStrictlySorted!76 (t!5776 (t!5776 (toList!811 lt!55250))) (_1!1221 lt!55252) (_2!1221 lt!55252)))))

(declare-fun b!109417 () Bool)

(assert (=> b!109417 (= e!71167 call!11638)))

(declare-fun b!109418 () Bool)

(assert (=> b!109418 (= e!71169 (contains!835 lt!56334 (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))))))

(declare-fun b!109419 () Bool)

(assert (=> b!109419 (= e!71170 (ite c!19355 (t!5776 (t!5776 (toList!811 lt!55250))) (ite c!19352 (Cons!1644 (h!2242 (t!5776 (toList!811 lt!55250))) (t!5776 (t!5776 (toList!811 lt!55250)))) Nil!1645)))))

(assert (= (and d!30651 c!19353) b!109411))

(assert (= (and d!30651 (not c!19353)) b!109414))

(assert (= (and b!109414 c!19355) b!109413))

(assert (= (and b!109414 (not c!19355)) b!109410))

(assert (= (and b!109410 c!19352) b!109417))

(assert (= (and b!109410 (not c!19352)) b!109412))

(assert (= (or b!109417 b!109412) bm!11637))

(assert (= (or b!109413 bm!11637) bm!11636))

(assert (= (or b!109411 bm!11636) bm!11635))

(assert (= (and bm!11635 c!19354) b!109416))

(assert (= (and bm!11635 (not c!19354)) b!109419))

(assert (= (and d!30651 res!54165) b!109415))

(assert (= (and b!109415 res!54166) b!109418))

(declare-fun m!123957 () Bool)

(assert (=> b!109418 m!123957))

(declare-fun m!123959 () Bool)

(assert (=> b!109415 m!123959))

(declare-fun m!123961 () Bool)

(assert (=> bm!11635 m!123961))

(declare-fun m!123963 () Bool)

(assert (=> d!30651 m!123963))

(assert (=> d!30651 m!123649))

(declare-fun m!123965 () Bool)

(assert (=> b!109416 m!123965))

(assert (=> b!108475 d!30651))

(declare-fun d!30653 () Bool)

(declare-fun e!71172 () Bool)

(assert (=> d!30653 e!71172))

(declare-fun res!54167 () Bool)

(assert (=> d!30653 (=> res!54167 e!71172)))

(declare-fun lt!56335 () Bool)

(assert (=> d!30653 (= res!54167 (not lt!56335))))

(declare-fun lt!56336 () Bool)

(assert (=> d!30653 (= lt!56335 lt!56336)))

(declare-fun lt!56337 () Unit!3339)

(declare-fun e!71171 () Unit!3339)

(assert (=> d!30653 (= lt!56337 e!71171)))

(declare-fun c!19356 () Bool)

(assert (=> d!30653 (= c!19356 lt!56336)))

(assert (=> d!30653 (= lt!56336 (containsKey!160 (toList!811 lt!55558) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!30653 (= (contains!834 lt!55558 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) lt!56335)))

(declare-fun b!109420 () Bool)

(declare-fun lt!56338 () Unit!3339)

(assert (=> b!109420 (= e!71171 lt!56338)))

(assert (=> b!109420 (= lt!56338 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55558) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!109420 (isDefined!110 (getValueByKey!156 (toList!811 lt!55558) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109421 () Bool)

(declare-fun Unit!3406 () Unit!3339)

(assert (=> b!109421 (= e!71171 Unit!3406)))

(declare-fun b!109422 () Bool)

(assert (=> b!109422 (= e!71172 (isDefined!110 (getValueByKey!156 (toList!811 lt!55558) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!30653 c!19356) b!109420))

(assert (= (and d!30653 (not c!19356)) b!109421))

(assert (= (and d!30653 (not res!54167)) b!109422))

(assert (=> d!30653 m!121517))

(declare-fun m!123967 () Bool)

(assert (=> d!30653 m!123967))

(assert (=> b!109420 m!121517))

(declare-fun m!123969 () Bool)

(assert (=> b!109420 m!123969))

(assert (=> b!109420 m!121517))

(assert (=> b!109420 m!122875))

(assert (=> b!109420 m!122875))

(declare-fun m!123971 () Bool)

(assert (=> b!109420 m!123971))

(assert (=> b!109422 m!121517))

(assert (=> b!109422 m!122875))

(assert (=> b!109422 m!122875))

(assert (=> b!109422 m!123971))

(assert (=> b!108154 d!30653))

(assert (=> b!108095 d!30151))

(declare-fun d!30655 () Bool)

(declare-fun lt!56339 () Bool)

(assert (=> d!30655 (= lt!56339 (select (content!110 (toList!811 lt!55807)) (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun e!71173 () Bool)

(assert (=> d!30655 (= lt!56339 e!71173)))

(declare-fun res!54169 () Bool)

(assert (=> d!30655 (=> (not res!54169) (not e!71173))))

(assert (=> d!30655 (= res!54169 ((_ is Cons!1644) (toList!811 lt!55807)))))

(assert (=> d!30655 (= (contains!835 (toList!811 lt!55807) (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!56339)))

(declare-fun b!109423 () Bool)

(declare-fun e!71174 () Bool)

(assert (=> b!109423 (= e!71173 e!71174)))

(declare-fun res!54168 () Bool)

(assert (=> b!109423 (=> res!54168 e!71174)))

(assert (=> b!109423 (= res!54168 (= (h!2242 (toList!811 lt!55807)) (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!109424 () Bool)

(assert (=> b!109424 (= e!71174 (contains!835 (t!5776 (toList!811 lt!55807)) (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(assert (= (and d!30655 res!54169) b!109423))

(assert (= (and b!109423 (not res!54168)) b!109424))

(declare-fun m!123973 () Bool)

(assert (=> d!30655 m!123973))

(declare-fun m!123975 () Bool)

(assert (=> d!30655 m!123975))

(declare-fun m!123977 () Bool)

(assert (=> b!109424 m!123977))

(assert (=> b!108447 d!30655))

(declare-fun d!30657 () Bool)

(assert (=> d!30657 (= (isEmpty!380 (toList!811 lt!55324)) ((_ is Nil!1645) (toList!811 lt!55324)))))

(assert (=> d!30071 d!30657))

(declare-fun d!30659 () Bool)

(declare-fun lt!56340 () Bool)

(assert (=> d!30659 (= lt!56340 (select (content!110 (toList!811 lt!55585)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun e!71175 () Bool)

(assert (=> d!30659 (= lt!56340 e!71175)))

(declare-fun res!54171 () Bool)

(assert (=> d!30659 (=> (not res!54171) (not e!71175))))

(assert (=> d!30659 (= res!54171 ((_ is Cons!1644) (toList!811 lt!55585)))))

(assert (=> d!30659 (= (contains!835 (toList!811 lt!55585) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!56340)))

(declare-fun b!109425 () Bool)

(declare-fun e!71176 () Bool)

(assert (=> b!109425 (= e!71175 e!71176)))

(declare-fun res!54170 () Bool)

(assert (=> b!109425 (=> res!54170 e!71176)))

(assert (=> b!109425 (= res!54170 (= (h!2242 (toList!811 lt!55585)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!109426 () Bool)

(assert (=> b!109426 (= e!71176 (contains!835 (t!5776 (toList!811 lt!55585)) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(assert (= (and d!30659 res!54171) b!109425))

(assert (= (and b!109425 (not res!54170)) b!109426))

(declare-fun m!123979 () Bool)

(assert (=> d!30659 m!123979))

(declare-fun m!123981 () Bool)

(assert (=> d!30659 m!123981))

(declare-fun m!123983 () Bool)

(assert (=> b!109426 m!123983))

(assert (=> b!108161 d!30659))

(declare-fun d!30661 () Bool)

(assert (=> d!30661 (isDefined!110 (getValueByKey!156 (toList!811 lt!55479) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!56341 () Unit!3339)

(assert (=> d!30661 (= lt!56341 (choose!683 (toList!811 lt!55479) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!71177 () Bool)

(assert (=> d!30661 e!71177))

(declare-fun res!54172 () Bool)

(assert (=> d!30661 (=> (not res!54172) (not e!71177))))

(assert (=> d!30661 (= res!54172 (isStrictlySorted!305 (toList!811 lt!55479)))))

(assert (=> d!30661 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55479) #b0000000000000000000000000000000000000000000000000000000000000000) lt!56341)))

(declare-fun b!109427 () Bool)

(assert (=> b!109427 (= e!71177 (containsKey!160 (toList!811 lt!55479) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30661 res!54172) b!109427))

(assert (=> d!30661 m!122201))

(assert (=> d!30661 m!122201))

(assert (=> d!30661 m!122203))

(declare-fun m!123985 () Bool)

(assert (=> d!30661 m!123985))

(declare-fun m!123987 () Bool)

(assert (=> d!30661 m!123987))

(assert (=> b!109427 m!122197))

(assert (=> b!108457 d!30661))

(assert (=> b!108457 d!30417))

(assert (=> b!108457 d!30419))

(declare-fun d!30663 () Bool)

(assert (=> d!30663 (contains!834 (getCurrentListMap!487 (_keys!4316 newMap!16) lt!55413 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (arr!2074 (_keys!4316 newMap!16)) (index!3230 lt!55408)))))

(assert (=> d!30663 true))

(declare-fun _$16!129 () Unit!3339)

(assert (=> d!30663 (= (choose!677 (_keys!4316 newMap!16) lt!55413 (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (index!3230 lt!55408) (defaultEntry!2606 newMap!16)) _$16!129)))

(declare-fun bs!4506 () Bool)

(assert (= bs!4506 d!30663))

(assert (=> bs!4506 m!121619))

(assert (=> bs!4506 m!121411))

(assert (=> bs!4506 m!121619))

(assert (=> bs!4506 m!121411))

(assert (=> bs!4506 m!121621))

(assert (=> d!29907 d!30663))

(assert (=> d!29907 d!30107))

(declare-fun d!30665 () Bool)

(declare-fun res!54173 () Bool)

(declare-fun e!71178 () Bool)

(assert (=> d!30665 (=> res!54173 e!71178)))

(assert (=> d!30665 (= res!54173 (or ((_ is Nil!1645) lt!55829) ((_ is Nil!1645) (t!5776 lt!55829))))))

(assert (=> d!30665 (= (isStrictlySorted!305 lt!55829) e!71178)))

(declare-fun b!109428 () Bool)

(declare-fun e!71179 () Bool)

(assert (=> b!109428 (= e!71178 e!71179)))

(declare-fun res!54174 () Bool)

(assert (=> b!109428 (=> (not res!54174) (not e!71179))))

(assert (=> b!109428 (= res!54174 (bvslt (_1!1221 (h!2242 lt!55829)) (_1!1221 (h!2242 (t!5776 lt!55829)))))))

(declare-fun b!109429 () Bool)

(assert (=> b!109429 (= e!71179 (isStrictlySorted!305 (t!5776 lt!55829)))))

(assert (= (and d!30665 (not res!54173)) b!109428))

(assert (= (and b!109428 res!54174) b!109429))

(declare-fun m!123989 () Bool)

(assert (=> b!109429 m!123989))

(assert (=> d!30055 d!30665))

(assert (=> d!30055 d!30539))

(declare-fun d!30667 () Bool)

(declare-fun res!54175 () Bool)

(declare-fun e!71180 () Bool)

(assert (=> d!30667 (=> res!54175 e!71180)))

(assert (=> d!30667 (= res!54175 (and ((_ is Cons!1644) (toList!811 lt!55479)) (= (_1!1221 (h!2242 (toList!811 lt!55479))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!30667 (= (containsKey!160 (toList!811 lt!55479) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!71180)))

(declare-fun b!109430 () Bool)

(declare-fun e!71181 () Bool)

(assert (=> b!109430 (= e!71180 e!71181)))

(declare-fun res!54176 () Bool)

(assert (=> b!109430 (=> (not res!54176) (not e!71181))))

(assert (=> b!109430 (= res!54176 (and (or (not ((_ is Cons!1644) (toList!811 lt!55479))) (bvsle (_1!1221 (h!2242 (toList!811 lt!55479))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1644) (toList!811 lt!55479)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55479))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!109431 () Bool)

(assert (=> b!109431 (= e!71181 (containsKey!160 (t!5776 (toList!811 lt!55479)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!30667 (not res!54175)) b!109430))

(assert (= (and b!109430 res!54176) b!109431))

(assert (=> b!109431 m!121305))

(declare-fun m!123991 () Bool)

(assert (=> b!109431 m!123991))

(assert (=> d!29903 d!30667))

(declare-fun d!30669 () Bool)

(declare-fun lt!56342 () Bool)

(assert (=> d!30669 (= lt!56342 (select (content!110 (toList!811 lt!55783)) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun e!71182 () Bool)

(assert (=> d!30669 (= lt!56342 e!71182)))

(declare-fun res!54178 () Bool)

(assert (=> d!30669 (=> (not res!54178) (not e!71182))))

(assert (=> d!30669 (= res!54178 ((_ is Cons!1644) (toList!811 lt!55783)))))

(assert (=> d!30669 (= (contains!835 (toList!811 lt!55783) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!56342)))

(declare-fun b!109432 () Bool)

(declare-fun e!71183 () Bool)

(assert (=> b!109432 (= e!71182 e!71183)))

(declare-fun res!54177 () Bool)

(assert (=> b!109432 (=> res!54177 e!71183)))

(assert (=> b!109432 (= res!54177 (= (h!2242 (toList!811 lt!55783)) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!109433 () Bool)

(assert (=> b!109433 (= e!71183 (contains!835 (t!5776 (toList!811 lt!55783)) (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(assert (= (and d!30669 res!54178) b!109432))

(assert (= (and b!109432 (not res!54177)) b!109433))

(declare-fun m!123993 () Bool)

(assert (=> d!30669 m!123993))

(declare-fun m!123995 () Bool)

(assert (=> d!30669 m!123995))

(declare-fun m!123997 () Bool)

(assert (=> b!109433 m!123997))

(assert (=> b!108431 d!30669))

(declare-fun d!30671 () Bool)

(declare-fun c!19357 () Bool)

(assert (=> d!30671 (= c!19357 (and ((_ is Cons!1644) (t!5776 (toList!811 lt!55335))) (= (_1!1221 (h!2242 (t!5776 (toList!811 lt!55335)))) (_1!1221 lt!55249))))))

(declare-fun e!71184 () Option!162)

(assert (=> d!30671 (= (getValueByKey!156 (t!5776 (toList!811 lt!55335)) (_1!1221 lt!55249)) e!71184)))

(declare-fun b!109436 () Bool)

(declare-fun e!71185 () Option!162)

(assert (=> b!109436 (= e!71185 (getValueByKey!156 (t!5776 (t!5776 (toList!811 lt!55335))) (_1!1221 lt!55249)))))

(declare-fun b!109437 () Bool)

(assert (=> b!109437 (= e!71185 None!160)))

(declare-fun b!109435 () Bool)

(assert (=> b!109435 (= e!71184 e!71185)))

(declare-fun c!19358 () Bool)

(assert (=> b!109435 (= c!19358 (and ((_ is Cons!1644) (t!5776 (toList!811 lt!55335))) (not (= (_1!1221 (h!2242 (t!5776 (toList!811 lt!55335)))) (_1!1221 lt!55249)))))))

(declare-fun b!109434 () Bool)

(assert (=> b!109434 (= e!71184 (Some!161 (_2!1221 (h!2242 (t!5776 (toList!811 lt!55335))))))))

(assert (= (and d!30671 c!19357) b!109434))

(assert (= (and d!30671 (not c!19357)) b!109435))

(assert (= (and b!109435 c!19358) b!109436))

(assert (= (and b!109435 (not c!19358)) b!109437))

(declare-fun m!123999 () Bool)

(assert (=> b!109436 m!123999))

(assert (=> b!108298 d!30671))

(declare-fun d!30673 () Bool)

(declare-fun c!19359 () Bool)

(assert (=> d!30673 (= c!19359 (and ((_ is Cons!1644) (t!5776 (toList!811 lt!55303))) (= (_1!1221 (h!2242 (t!5776 (toList!811 lt!55303)))) (_1!1221 lt!55252))))))

(declare-fun e!71186 () Option!162)

(assert (=> d!30673 (= (getValueByKey!156 (t!5776 (toList!811 lt!55303)) (_1!1221 lt!55252)) e!71186)))

(declare-fun b!109440 () Bool)

(declare-fun e!71187 () Option!162)

(assert (=> b!109440 (= e!71187 (getValueByKey!156 (t!5776 (t!5776 (toList!811 lt!55303))) (_1!1221 lt!55252)))))

(declare-fun b!109441 () Bool)

(assert (=> b!109441 (= e!71187 None!160)))

(declare-fun b!109439 () Bool)

(assert (=> b!109439 (= e!71186 e!71187)))

(declare-fun c!19360 () Bool)

(assert (=> b!109439 (= c!19360 (and ((_ is Cons!1644) (t!5776 (toList!811 lt!55303))) (not (= (_1!1221 (h!2242 (t!5776 (toList!811 lt!55303)))) (_1!1221 lt!55252)))))))

(declare-fun b!109438 () Bool)

(assert (=> b!109438 (= e!71186 (Some!161 (_2!1221 (h!2242 (t!5776 (toList!811 lt!55303))))))))

(assert (= (and d!30673 c!19359) b!109438))

(assert (= (and d!30673 (not c!19359)) b!109439))

(assert (= (and b!109439 c!19360) b!109440))

(assert (= (and b!109439 (not c!19360)) b!109441))

(declare-fun m!124001 () Bool)

(assert (=> b!109440 m!124001))

(assert (=> b!108340 d!30673))

(declare-fun d!30675 () Bool)

(assert (=> d!30675 (= (isEmpty!379 (getValueByKey!156 (toList!811 lt!55247) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))) (not ((_ is Some!161) (getValueByKey!156 (toList!811 lt!55247) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))))

(assert (=> d!29993 d!30675))

(declare-fun d!30677 () Bool)

(assert (=> d!30677 (isDefined!110 (getValueByKey!156 (toList!811 lt!55324) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!56343 () Unit!3339)

(assert (=> d!30677 (= lt!56343 (choose!683 (toList!811 lt!55324) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!71188 () Bool)

(assert (=> d!30677 e!71188))

(declare-fun res!54179 () Bool)

(assert (=> d!30677 (=> (not res!54179) (not e!71188))))

(assert (=> d!30677 (= res!54179 (isStrictlySorted!305 (toList!811 lt!55324)))))

(assert (=> d!30677 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55324) #b0000000000000000000000000000000000000000000000000000000000000000) lt!56343)))

(declare-fun b!109442 () Bool)

(assert (=> b!109442 (= e!71188 (containsKey!160 (toList!811 lt!55324) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30677 res!54179) b!109442))

(assert (=> d!30677 m!122263))

(assert (=> d!30677 m!122263))

(assert (=> d!30677 m!122265))

(declare-fun m!124003 () Bool)

(assert (=> d!30677 m!124003))

(assert (=> d!30677 m!122353))

(assert (=> b!109442 m!122259))

(assert (=> b!108498 d!30677))

(assert (=> b!108498 d!30433))

(assert (=> b!108498 d!30435))

(declare-fun d!30679 () Bool)

(assert (=> d!30679 (= (inRange!0 (ite c!19075 (index!3230 lt!55756) (ite c!19077 (index!3229 lt!55757) (index!3232 lt!55757))) (mask!6764 newMap!16)) (and (bvsge (ite c!19075 (index!3230 lt!55756) (ite c!19077 (index!3229 lt!55757) (index!3232 lt!55757))) #b00000000000000000000000000000000) (bvslt (ite c!19075 (index!3230 lt!55756) (ite c!19077 (index!3229 lt!55757) (index!3232 lt!55757))) (bvadd (mask!6764 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11519 d!30679))

(declare-fun d!30681 () Bool)

(assert (=> d!30681 (= (isEmpty!378 lt!55644) (isEmpty!380 (toList!811 lt!55644)))))

(declare-fun bs!4507 () Bool)

(assert (= bs!4507 d!30681))

(declare-fun m!124005 () Bool)

(assert (=> bs!4507 m!124005))

(assert (=> b!108324 d!30681))

(declare-fun b!109444 () Bool)

(declare-fun res!54181 () Bool)

(declare-fun e!71189 () Bool)

(assert (=> b!109444 (=> (not res!54181) (not e!71189))))

(assert (=> b!109444 (= res!54181 (bvsge (size!2334 (_2!1222 lt!55429)) (_size!505 (_2!1222 lt!55429))))))

(declare-fun b!109445 () Bool)

(declare-fun res!54180 () Bool)

(assert (=> b!109445 (=> (not res!54180) (not e!71189))))

(assert (=> b!109445 (= res!54180 (= (size!2334 (_2!1222 lt!55429)) (bvadd (_size!505 (_2!1222 lt!55429)) (bvsdiv (bvadd (extraKeys!2407 (_2!1222 lt!55429)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!109446 () Bool)

(assert (=> b!109446 (= e!71189 (and (bvsge (extraKeys!2407 (_2!1222 lt!55429)) #b00000000000000000000000000000000) (bvsle (extraKeys!2407 (_2!1222 lt!55429)) #b00000000000000000000000000000011) (bvsge (_vacant!505 (_2!1222 lt!55429)) #b00000000000000000000000000000000)))))

(declare-fun b!109443 () Bool)

(declare-fun res!54182 () Bool)

(assert (=> b!109443 (=> (not res!54182) (not e!71189))))

(assert (=> b!109443 (= res!54182 (and (= (size!2331 (_values!2589 (_2!1222 lt!55429))) (bvadd (mask!6764 (_2!1222 lt!55429)) #b00000000000000000000000000000001)) (= (size!2330 (_keys!4316 (_2!1222 lt!55429))) (size!2331 (_values!2589 (_2!1222 lt!55429)))) (bvsge (_size!505 (_2!1222 lt!55429)) #b00000000000000000000000000000000) (bvsle (_size!505 (_2!1222 lt!55429)) (bvadd (mask!6764 (_2!1222 lt!55429)) #b00000000000000000000000000000001))))))

(declare-fun d!30683 () Bool)

(declare-fun res!54183 () Bool)

(assert (=> d!30683 (=> (not res!54183) (not e!71189))))

(assert (=> d!30683 (= res!54183 (validMask!0 (mask!6764 (_2!1222 lt!55429))))))

(assert (=> d!30683 (= (simpleValid!74 (_2!1222 lt!55429)) e!71189)))

(assert (= (and d!30683 res!54183) b!109443))

(assert (= (and b!109443 res!54182) b!109444))

(assert (= (and b!109444 res!54181) b!109445))

(assert (= (and b!109445 res!54180) b!109446))

(declare-fun m!124007 () Bool)

(assert (=> b!109444 m!124007))

(assert (=> b!109445 m!124007))

(assert (=> d!30683 m!122719))

(assert (=> d!29953 d!30683))

(assert (=> b!108408 d!30331))

(declare-fun d!30685 () Bool)

(declare-fun e!71190 () Bool)

(assert (=> d!30685 e!71190))

(declare-fun res!54184 () Bool)

(assert (=> d!30685 (=> (not res!54184) (not e!71190))))

(declare-fun lt!56346 () ListLongMap!1591)

(assert (=> d!30685 (= res!54184 (contains!834 lt!56346 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun lt!56344 () List!1648)

(assert (=> d!30685 (= lt!56346 (ListLongMap!1592 lt!56344))))

(declare-fun lt!56345 () Unit!3339)

(declare-fun lt!56347 () Unit!3339)

(assert (=> d!30685 (= lt!56345 lt!56347)))

(assert (=> d!30685 (= (getValueByKey!156 lt!56344 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (Some!161 (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!30685 (= lt!56347 (lemmaContainsTupThenGetReturnValue!74 lt!56344 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!30685 (= lt!56344 (insertStrictlySorted!76 (toList!811 (map!1290 newMap!16)) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!30685 (= (+!148 (map!1290 newMap!16) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) lt!56346)))

(declare-fun b!109447 () Bool)

(declare-fun res!54185 () Bool)

(assert (=> b!109447 (=> (not res!54185) (not e!71190))))

(assert (=> b!109447 (= res!54185 (= (getValueByKey!156 (toList!811 lt!56346) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (Some!161 (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun b!109448 () Bool)

(assert (=> b!109448 (= e!71190 (contains!835 (toList!811 lt!56346) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))

(assert (= (and d!30685 res!54184) b!109447))

(assert (= (and b!109447 res!54185) b!109448))

(declare-fun m!124009 () Bool)

(assert (=> d!30685 m!124009))

(declare-fun m!124011 () Bool)

(assert (=> d!30685 m!124011))

(declare-fun m!124013 () Bool)

(assert (=> d!30685 m!124013))

(declare-fun m!124015 () Bool)

(assert (=> d!30685 m!124015))

(declare-fun m!124017 () Bool)

(assert (=> b!109447 m!124017))

(declare-fun m!124019 () Bool)

(assert (=> b!109448 m!124019))

(assert (=> b!108408 d!30685))

(assert (=> b!108408 d!29871))

(declare-fun d!30687 () Bool)

(assert (=> d!30687 (= (apply!99 lt!55644 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1352 (getValueByKey!156 (toList!811 lt!55644) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!4508 () Bool)

(assert (= bs!4508 d!30687))

(assert (=> bs!4508 m!121871))

(assert (=> bs!4508 m!123497))

(assert (=> bs!4508 m!123497))

(declare-fun m!124021 () Bool)

(assert (=> bs!4508 m!124021))

(assert (=> b!108325 d!30687))

(assert (=> b!108325 d!30597))

(declare-fun d!30689 () Bool)

(declare-fun e!71192 () Bool)

(assert (=> d!30689 e!71192))

(declare-fun res!54186 () Bool)

(assert (=> d!30689 (=> res!54186 e!71192)))

(declare-fun lt!56348 () Bool)

(assert (=> d!30689 (= res!54186 (not lt!56348))))

(declare-fun lt!56349 () Bool)

(assert (=> d!30689 (= lt!56348 lt!56349)))

(declare-fun lt!56350 () Unit!3339)

(declare-fun e!71191 () Unit!3339)

(assert (=> d!30689 (= lt!56350 e!71191)))

(declare-fun c!19361 () Bool)

(assert (=> d!30689 (= c!19361 lt!56349)))

(assert (=> d!30689 (= lt!56349 (containsKey!160 (toList!811 lt!55510) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30689 (= (contains!834 lt!55510 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56348)))

(declare-fun b!109449 () Bool)

(declare-fun lt!56351 () Unit!3339)

(assert (=> b!109449 (= e!71191 lt!56351)))

(assert (=> b!109449 (= lt!56351 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55510) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109449 (isDefined!110 (getValueByKey!156 (toList!811 lt!55510) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109450 () Bool)

(declare-fun Unit!3407 () Unit!3339)

(assert (=> b!109450 (= e!71191 Unit!3407)))

(declare-fun b!109451 () Bool)

(assert (=> b!109451 (= e!71192 (isDefined!110 (getValueByKey!156 (toList!811 lt!55510) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30689 c!19361) b!109449))

(assert (= (and d!30689 (not c!19361)) b!109450))

(assert (= (and d!30689 (not res!54186)) b!109451))

(declare-fun m!124023 () Bool)

(assert (=> d!30689 m!124023))

(declare-fun m!124025 () Bool)

(assert (=> b!109449 m!124025))

(assert (=> b!109449 m!123857))

(assert (=> b!109449 m!123857))

(declare-fun m!124027 () Bool)

(assert (=> b!109449 m!124027))

(assert (=> b!109451 m!123857))

(assert (=> b!109451 m!123857))

(assert (=> b!109451 m!124027))

(assert (=> bm!11470 d!30689))

(assert (=> b!108364 d!30151))

(assert (=> d!29989 d!30107))

(declare-fun d!30691 () Bool)

(declare-fun res!54187 () Bool)

(declare-fun e!71193 () Bool)

(assert (=> d!30691 (=> res!54187 e!71193)))

(assert (=> d!30691 (= res!54187 (and ((_ is Cons!1644) (toList!811 lt!55479)) (= (_1!1221 (h!2242 (toList!811 lt!55479))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30691 (= (containsKey!160 (toList!811 lt!55479) #b0000000000000000000000000000000000000000000000000000000000000000) e!71193)))

(declare-fun b!109452 () Bool)

(declare-fun e!71194 () Bool)

(assert (=> b!109452 (= e!71193 e!71194)))

(declare-fun res!54188 () Bool)

(assert (=> b!109452 (=> (not res!54188) (not e!71194))))

(assert (=> b!109452 (= res!54188 (and (or (not ((_ is Cons!1644) (toList!811 lt!55479))) (bvsle (_1!1221 (h!2242 (toList!811 lt!55479))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1644) (toList!811 lt!55479)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55479))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109453 () Bool)

(assert (=> b!109453 (= e!71194 (containsKey!160 (t!5776 (toList!811 lt!55479)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30691 (not res!54187)) b!109452))

(assert (= (and b!109452 res!54188) b!109453))

(declare-fun m!124029 () Bool)

(assert (=> b!109453 m!124029))

(assert (=> d!30043 d!30691))

(declare-fun d!30693 () Bool)

(assert (=> d!30693 (isDefined!110 (getValueByKey!156 (toList!811 lt!55479) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!56352 () Unit!3339)

(assert (=> d!30693 (= lt!56352 (choose!683 (toList!811 lt!55479) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!71195 () Bool)

(assert (=> d!30693 e!71195))

(declare-fun res!54189 () Bool)

(assert (=> d!30693 (=> (not res!54189) (not e!71195))))

(assert (=> d!30693 (= res!54189 (isStrictlySorted!305 (toList!811 lt!55479)))))

(assert (=> d!30693 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55479) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!56352)))

(declare-fun b!109454 () Bool)

(assert (=> b!109454 (= e!71195 (containsKey!160 (toList!811 lt!55479) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!30693 res!54189) b!109454))

(assert (=> d!30693 m!121305))

(assert (=> d!30693 m!121605))

(assert (=> d!30693 m!121605))

(assert (=> d!30693 m!121607))

(assert (=> d!30693 m!121305))

(declare-fun m!124031 () Bool)

(assert (=> d!30693 m!124031))

(assert (=> d!30693 m!123987))

(assert (=> b!109454 m!121305))

(assert (=> b!109454 m!121601))

(assert (=> b!108121 d!30693))

(assert (=> b!108121 d!30483))

(assert (=> b!108121 d!30485))

(assert (=> d!30079 d!30081))

(assert (=> d!30079 d!30077))

(declare-fun d!30695 () Bool)

(assert (=> d!30695 (not (contains!834 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325)) lt!55323))))

(assert (=> d!30695 true))

(declare-fun _$36!322 () Unit!3339)

(assert (=> d!30695 (= (choose!687 lt!55319 lt!55321 lt!55325 lt!55323) _$36!322)))

(declare-fun bs!4509 () Bool)

(assert (= bs!4509 d!30695))

(assert (=> bs!4509 m!121319))

(assert (=> bs!4509 m!121319))

(assert (=> bs!4509 m!121321))

(assert (=> d!30079 d!30695))

(declare-fun d!30697 () Bool)

(declare-fun e!71197 () Bool)

(assert (=> d!30697 e!71197))

(declare-fun res!54190 () Bool)

(assert (=> d!30697 (=> res!54190 e!71197)))

(declare-fun lt!56353 () Bool)

(assert (=> d!30697 (= res!54190 (not lt!56353))))

(declare-fun lt!56354 () Bool)

(assert (=> d!30697 (= lt!56353 lt!56354)))

(declare-fun lt!56355 () Unit!3339)

(declare-fun e!71196 () Unit!3339)

(assert (=> d!30697 (= lt!56355 e!71196)))

(declare-fun c!19362 () Bool)

(assert (=> d!30697 (= c!19362 lt!56354)))

(assert (=> d!30697 (= lt!56354 (containsKey!160 (toList!811 lt!55319) lt!55323))))

(assert (=> d!30697 (= (contains!834 lt!55319 lt!55323) lt!56353)))

(declare-fun b!109456 () Bool)

(declare-fun lt!56356 () Unit!3339)

(assert (=> b!109456 (= e!71196 lt!56356)))

(assert (=> b!109456 (= lt!56356 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55319) lt!55323))))

(assert (=> b!109456 (isDefined!110 (getValueByKey!156 (toList!811 lt!55319) lt!55323))))

(declare-fun b!109457 () Bool)

(declare-fun Unit!3408 () Unit!3339)

(assert (=> b!109457 (= e!71196 Unit!3408)))

(declare-fun b!109458 () Bool)

(assert (=> b!109458 (= e!71197 (isDefined!110 (getValueByKey!156 (toList!811 lt!55319) lt!55323)))))

(assert (= (and d!30697 c!19362) b!109456))

(assert (= (and d!30697 (not c!19362)) b!109457))

(assert (= (and d!30697 (not res!54190)) b!109458))

(declare-fun m!124033 () Bool)

(assert (=> d!30697 m!124033))

(declare-fun m!124035 () Bool)

(assert (=> b!109456 m!124035))

(declare-fun m!124037 () Bool)

(assert (=> b!109456 m!124037))

(assert (=> b!109456 m!124037))

(declare-fun m!124039 () Bool)

(assert (=> b!109456 m!124039))

(assert (=> b!109458 m!124037))

(assert (=> b!109458 m!124037))

(assert (=> b!109458 m!124039))

(assert (=> d!30079 d!30697))

(declare-fun d!30699 () Bool)

(declare-fun lt!56357 () Bool)

(assert (=> d!30699 (= lt!56357 (select (content!110 lt!55333) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))))))

(declare-fun e!71198 () Bool)

(assert (=> d!30699 (= lt!56357 e!71198)))

(declare-fun res!54192 () Bool)

(assert (=> d!30699 (=> (not res!54192) (not e!71198))))

(assert (=> d!30699 (= res!54192 ((_ is Cons!1644) lt!55333))))

(assert (=> d!30699 (= (contains!835 lt!55333 (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))) lt!56357)))

(declare-fun b!109459 () Bool)

(declare-fun e!71199 () Bool)

(assert (=> b!109459 (= e!71198 e!71199)))

(declare-fun res!54191 () Bool)

(assert (=> b!109459 (=> res!54191 e!71199)))

(assert (=> b!109459 (= res!54191 (= (h!2242 lt!55333) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))))))

(declare-fun b!109460 () Bool)

(assert (=> b!109460 (= e!71199 (contains!835 (t!5776 lt!55333) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))))))

(assert (= (and d!30699 res!54192) b!109459))

(assert (= (and b!109459 (not res!54191)) b!109460))

(declare-fun m!124041 () Bool)

(assert (=> d!30699 m!124041))

(declare-fun m!124043 () Bool)

(assert (=> d!30699 m!124043))

(declare-fun m!124045 () Bool)

(assert (=> b!109460 m!124045))

(assert (=> b!108194 d!30699))

(declare-fun d!30701 () Bool)

(declare-fun c!19363 () Bool)

(assert (=> d!30701 (= c!19363 ((_ is Nil!1645) (toList!811 lt!55303)))))

(declare-fun e!71200 () (InoxSet tuple2!2422))

(assert (=> d!30701 (= (content!110 (toList!811 lt!55303)) e!71200)))

(declare-fun b!109461 () Bool)

(assert (=> b!109461 (= e!71200 ((as const (Array tuple2!2422 Bool)) false))))

(declare-fun b!109462 () Bool)

(assert (=> b!109462 (= e!71200 ((_ map or) (store ((as const (Array tuple2!2422 Bool)) false) (h!2242 (toList!811 lt!55303)) true) (content!110 (t!5776 (toList!811 lt!55303)))))))

(assert (= (and d!30701 c!19363) b!109461))

(assert (= (and d!30701 (not c!19363)) b!109462))

(declare-fun m!124047 () Bool)

(assert (=> b!109462 m!124047))

(declare-fun m!124049 () Bool)

(assert (=> b!109462 m!124049))

(assert (=> d!29901 d!30701))

(declare-fun d!30703 () Bool)

(declare-fun e!71201 () Bool)

(assert (=> d!30703 e!71201))

(declare-fun res!54193 () Bool)

(assert (=> d!30703 (=> (not res!54193) (not e!71201))))

(declare-fun lt!56360 () ListLongMap!1591)

(assert (=> d!30703 (= res!54193 (contains!834 lt!56360 (_1!1221 (tuple2!2423 lt!55660 (zeroValue!2479 newMap!16)))))))

(declare-fun lt!56358 () List!1648)

(assert (=> d!30703 (= lt!56360 (ListLongMap!1592 lt!56358))))

(declare-fun lt!56359 () Unit!3339)

(declare-fun lt!56361 () Unit!3339)

(assert (=> d!30703 (= lt!56359 lt!56361)))

(assert (=> d!30703 (= (getValueByKey!156 lt!56358 (_1!1221 (tuple2!2423 lt!55660 (zeroValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 lt!55660 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30703 (= lt!56361 (lemmaContainsTupThenGetReturnValue!74 lt!56358 (_1!1221 (tuple2!2423 lt!55660 (zeroValue!2479 newMap!16))) (_2!1221 (tuple2!2423 lt!55660 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30703 (= lt!56358 (insertStrictlySorted!76 (toList!811 lt!55658) (_1!1221 (tuple2!2423 lt!55660 (zeroValue!2479 newMap!16))) (_2!1221 (tuple2!2423 lt!55660 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30703 (= (+!148 lt!55658 (tuple2!2423 lt!55660 (zeroValue!2479 newMap!16))) lt!56360)))

(declare-fun b!109463 () Bool)

(declare-fun res!54194 () Bool)

(assert (=> b!109463 (=> (not res!54194) (not e!71201))))

(assert (=> b!109463 (= res!54194 (= (getValueByKey!156 (toList!811 lt!56360) (_1!1221 (tuple2!2423 lt!55660 (zeroValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 lt!55660 (zeroValue!2479 newMap!16))))))))

(declare-fun b!109464 () Bool)

(assert (=> b!109464 (= e!71201 (contains!835 (toList!811 lt!56360) (tuple2!2423 lt!55660 (zeroValue!2479 newMap!16))))))

(assert (= (and d!30703 res!54193) b!109463))

(assert (= (and b!109463 res!54194) b!109464))

(declare-fun m!124051 () Bool)

(assert (=> d!30703 m!124051))

(declare-fun m!124053 () Bool)

(assert (=> d!30703 m!124053))

(declare-fun m!124055 () Bool)

(assert (=> d!30703 m!124055))

(declare-fun m!124057 () Bool)

(assert (=> d!30703 m!124057))

(declare-fun m!124059 () Bool)

(assert (=> b!109463 m!124059))

(declare-fun m!124061 () Bool)

(assert (=> b!109464 m!124061))

(assert (=> b!108350 d!30703))

(declare-fun d!30705 () Bool)

(assert (=> d!30705 (= (apply!99 lt!55656 lt!55663) (get!1352 (getValueByKey!156 (toList!811 lt!55656) lt!55663)))))

(declare-fun bs!4510 () Bool)

(assert (= bs!4510 d!30705))

(declare-fun m!124063 () Bool)

(assert (=> bs!4510 m!124063))

(assert (=> bs!4510 m!124063))

(declare-fun m!124065 () Bool)

(assert (=> bs!4510 m!124065))

(assert (=> b!108350 d!30705))

(declare-fun d!30707 () Bool)

(assert (=> d!30707 (= (apply!99 (+!148 lt!55658 (tuple2!2423 lt!55660 (zeroValue!2479 newMap!16))) lt!55670) (apply!99 lt!55658 lt!55670))))

(declare-fun lt!56362 () Unit!3339)

(assert (=> d!30707 (= lt!56362 (choose!684 lt!55658 lt!55660 (zeroValue!2479 newMap!16) lt!55670))))

(declare-fun e!71202 () Bool)

(assert (=> d!30707 e!71202))

(declare-fun res!54195 () Bool)

(assert (=> d!30707 (=> (not res!54195) (not e!71202))))

(assert (=> d!30707 (= res!54195 (contains!834 lt!55658 lt!55670))))

(assert (=> d!30707 (= (addApplyDifferent!75 lt!55658 lt!55660 (zeroValue!2479 newMap!16) lt!55670) lt!56362)))

(declare-fun b!109465 () Bool)

(assert (=> b!109465 (= e!71202 (not (= lt!55670 lt!55660)))))

(assert (= (and d!30707 res!54195) b!109465))

(assert (=> d!30707 m!121941))

(declare-fun m!124067 () Bool)

(assert (=> d!30707 m!124067))

(assert (=> d!30707 m!121929))

(assert (=> d!30707 m!121929))

(assert (=> d!30707 m!121951))

(declare-fun m!124069 () Bool)

(assert (=> d!30707 m!124069))

(assert (=> b!108350 d!30707))

(declare-fun d!30709 () Bool)

(assert (=> d!30709 (= (apply!99 (+!148 lt!55656 (tuple2!2423 lt!55667 (minValue!2479 newMap!16))) lt!55663) (get!1352 (getValueByKey!156 (toList!811 (+!148 lt!55656 (tuple2!2423 lt!55667 (minValue!2479 newMap!16)))) lt!55663)))))

(declare-fun bs!4511 () Bool)

(assert (= bs!4511 d!30709))

(declare-fun m!124071 () Bool)

(assert (=> bs!4511 m!124071))

(assert (=> bs!4511 m!124071))

(declare-fun m!124073 () Bool)

(assert (=> bs!4511 m!124073))

(assert (=> b!108350 d!30709))

(declare-fun d!30711 () Bool)

(assert (=> d!30711 (contains!834 (+!148 lt!55673 (tuple2!2423 lt!55671 (zeroValue!2479 newMap!16))) lt!55672)))

(declare-fun lt!56363 () Unit!3339)

(assert (=> d!30711 (= lt!56363 (choose!685 lt!55673 lt!55671 (zeroValue!2479 newMap!16) lt!55672))))

(assert (=> d!30711 (contains!834 lt!55673 lt!55672)))

(assert (=> d!30711 (= (addStillContains!75 lt!55673 lt!55671 (zeroValue!2479 newMap!16) lt!55672) lt!56363)))

(declare-fun bs!4512 () Bool)

(assert (= bs!4512 d!30711))

(assert (=> bs!4512 m!121935))

(assert (=> bs!4512 m!121935))

(assert (=> bs!4512 m!121937))

(declare-fun m!124075 () Bool)

(assert (=> bs!4512 m!124075))

(declare-fun m!124077 () Bool)

(assert (=> bs!4512 m!124077))

(assert (=> b!108350 d!30711))

(declare-fun d!30713 () Bool)

(assert (=> d!30713 (= (apply!99 (+!148 lt!55656 (tuple2!2423 lt!55667 (minValue!2479 newMap!16))) lt!55663) (apply!99 lt!55656 lt!55663))))

(declare-fun lt!56364 () Unit!3339)

(assert (=> d!30713 (= lt!56364 (choose!684 lt!55656 lt!55667 (minValue!2479 newMap!16) lt!55663))))

(declare-fun e!71203 () Bool)

(assert (=> d!30713 e!71203))

(declare-fun res!54196 () Bool)

(assert (=> d!30713 (=> (not res!54196) (not e!71203))))

(assert (=> d!30713 (= res!54196 (contains!834 lt!55656 lt!55663))))

(assert (=> d!30713 (= (addApplyDifferent!75 lt!55656 lt!55667 (minValue!2479 newMap!16) lt!55663) lt!56364)))

(declare-fun b!109466 () Bool)

(assert (=> b!109466 (= e!71203 (not (= lt!55663 lt!55667)))))

(assert (= (and d!30713 res!54196) b!109466))

(assert (=> d!30713 m!121957))

(declare-fun m!124079 () Bool)

(assert (=> d!30713 m!124079))

(assert (=> d!30713 m!121933))

(assert (=> d!30713 m!121933))

(assert (=> d!30713 m!121947))

(declare-fun m!124081 () Bool)

(assert (=> d!30713 m!124081))

(assert (=> b!108350 d!30713))

(declare-fun d!30715 () Bool)

(assert (=> d!30715 (= (apply!99 (+!148 lt!55675 (tuple2!2423 lt!55659 (minValue!2479 newMap!16))) lt!55669) (get!1352 (getValueByKey!156 (toList!811 (+!148 lt!55675 (tuple2!2423 lt!55659 (minValue!2479 newMap!16)))) lt!55669)))))

(declare-fun bs!4513 () Bool)

(assert (= bs!4513 d!30715))

(declare-fun m!124083 () Bool)

(assert (=> bs!4513 m!124083))

(assert (=> bs!4513 m!124083))

(declare-fun m!124085 () Bool)

(assert (=> bs!4513 m!124085))

(assert (=> b!108350 d!30715))

(declare-fun d!30717 () Bool)

(declare-fun e!71205 () Bool)

(assert (=> d!30717 e!71205))

(declare-fun res!54197 () Bool)

(assert (=> d!30717 (=> res!54197 e!71205)))

(declare-fun lt!56365 () Bool)

(assert (=> d!30717 (= res!54197 (not lt!56365))))

(declare-fun lt!56366 () Bool)

(assert (=> d!30717 (= lt!56365 lt!56366)))

(declare-fun lt!56367 () Unit!3339)

(declare-fun e!71204 () Unit!3339)

(assert (=> d!30717 (= lt!56367 e!71204)))

(declare-fun c!19364 () Bool)

(assert (=> d!30717 (= c!19364 lt!56366)))

(assert (=> d!30717 (= lt!56366 (containsKey!160 (toList!811 (+!148 lt!55673 (tuple2!2423 lt!55671 (zeroValue!2479 newMap!16)))) lt!55672))))

(assert (=> d!30717 (= (contains!834 (+!148 lt!55673 (tuple2!2423 lt!55671 (zeroValue!2479 newMap!16))) lt!55672) lt!56365)))

(declare-fun b!109467 () Bool)

(declare-fun lt!56368 () Unit!3339)

(assert (=> b!109467 (= e!71204 lt!56368)))

(assert (=> b!109467 (= lt!56368 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 (+!148 lt!55673 (tuple2!2423 lt!55671 (zeroValue!2479 newMap!16)))) lt!55672))))

(assert (=> b!109467 (isDefined!110 (getValueByKey!156 (toList!811 (+!148 lt!55673 (tuple2!2423 lt!55671 (zeroValue!2479 newMap!16)))) lt!55672))))

(declare-fun b!109468 () Bool)

(declare-fun Unit!3409 () Unit!3339)

(assert (=> b!109468 (= e!71204 Unit!3409)))

(declare-fun b!109469 () Bool)

(assert (=> b!109469 (= e!71205 (isDefined!110 (getValueByKey!156 (toList!811 (+!148 lt!55673 (tuple2!2423 lt!55671 (zeroValue!2479 newMap!16)))) lt!55672)))))

(assert (= (and d!30717 c!19364) b!109467))

(assert (= (and d!30717 (not c!19364)) b!109468))

(assert (= (and d!30717 (not res!54197)) b!109469))

(declare-fun m!124087 () Bool)

(assert (=> d!30717 m!124087))

(declare-fun m!124089 () Bool)

(assert (=> b!109467 m!124089))

(declare-fun m!124091 () Bool)

(assert (=> b!109467 m!124091))

(assert (=> b!109467 m!124091))

(declare-fun m!124093 () Bool)

(assert (=> b!109467 m!124093))

(assert (=> b!109469 m!124091))

(assert (=> b!109469 m!124091))

(assert (=> b!109469 m!124093))

(assert (=> b!108350 d!30717))

(declare-fun d!30719 () Bool)

(declare-fun e!71206 () Bool)

(assert (=> d!30719 e!71206))

(declare-fun res!54198 () Bool)

(assert (=> d!30719 (=> (not res!54198) (not e!71206))))

(declare-fun lt!56371 () ListLongMap!1591)

(assert (=> d!30719 (= res!54198 (contains!834 lt!56371 (_1!1221 (tuple2!2423 lt!55671 (zeroValue!2479 newMap!16)))))))

(declare-fun lt!56369 () List!1648)

(assert (=> d!30719 (= lt!56371 (ListLongMap!1592 lt!56369))))

(declare-fun lt!56370 () Unit!3339)

(declare-fun lt!56372 () Unit!3339)

(assert (=> d!30719 (= lt!56370 lt!56372)))

(assert (=> d!30719 (= (getValueByKey!156 lt!56369 (_1!1221 (tuple2!2423 lt!55671 (zeroValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 lt!55671 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30719 (= lt!56372 (lemmaContainsTupThenGetReturnValue!74 lt!56369 (_1!1221 (tuple2!2423 lt!55671 (zeroValue!2479 newMap!16))) (_2!1221 (tuple2!2423 lt!55671 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30719 (= lt!56369 (insertStrictlySorted!76 (toList!811 lt!55673) (_1!1221 (tuple2!2423 lt!55671 (zeroValue!2479 newMap!16))) (_2!1221 (tuple2!2423 lt!55671 (zeroValue!2479 newMap!16)))))))

(assert (=> d!30719 (= (+!148 lt!55673 (tuple2!2423 lt!55671 (zeroValue!2479 newMap!16))) lt!56371)))

(declare-fun b!109470 () Bool)

(declare-fun res!54199 () Bool)

(assert (=> b!109470 (=> (not res!54199) (not e!71206))))

(assert (=> b!109470 (= res!54199 (= (getValueByKey!156 (toList!811 lt!56371) (_1!1221 (tuple2!2423 lt!55671 (zeroValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 lt!55671 (zeroValue!2479 newMap!16))))))))

(declare-fun b!109471 () Bool)

(assert (=> b!109471 (= e!71206 (contains!835 (toList!811 lt!56371) (tuple2!2423 lt!55671 (zeroValue!2479 newMap!16))))))

(assert (= (and d!30719 res!54198) b!109470))

(assert (= (and b!109470 res!54199) b!109471))

(declare-fun m!124095 () Bool)

(assert (=> d!30719 m!124095))

(declare-fun m!124097 () Bool)

(assert (=> d!30719 m!124097))

(declare-fun m!124099 () Bool)

(assert (=> d!30719 m!124099))

(declare-fun m!124101 () Bool)

(assert (=> d!30719 m!124101))

(declare-fun m!124103 () Bool)

(assert (=> b!109470 m!124103))

(declare-fun m!124105 () Bool)

(assert (=> b!109471 m!124105))

(assert (=> b!108350 d!30719))

(assert (=> b!108350 d!30149))

(declare-fun d!30721 () Bool)

(declare-fun e!71207 () Bool)

(assert (=> d!30721 e!71207))

(declare-fun res!54200 () Bool)

(assert (=> d!30721 (=> (not res!54200) (not e!71207))))

(declare-fun lt!56375 () ListLongMap!1591)

(assert (=> d!30721 (= res!54200 (contains!834 lt!56375 (_1!1221 (tuple2!2423 lt!55659 (minValue!2479 newMap!16)))))))

(declare-fun lt!56373 () List!1648)

(assert (=> d!30721 (= lt!56375 (ListLongMap!1592 lt!56373))))

(declare-fun lt!56374 () Unit!3339)

(declare-fun lt!56376 () Unit!3339)

(assert (=> d!30721 (= lt!56374 lt!56376)))

(assert (=> d!30721 (= (getValueByKey!156 lt!56373 (_1!1221 (tuple2!2423 lt!55659 (minValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 lt!55659 (minValue!2479 newMap!16)))))))

(assert (=> d!30721 (= lt!56376 (lemmaContainsTupThenGetReturnValue!74 lt!56373 (_1!1221 (tuple2!2423 lt!55659 (minValue!2479 newMap!16))) (_2!1221 (tuple2!2423 lt!55659 (minValue!2479 newMap!16)))))))

(assert (=> d!30721 (= lt!56373 (insertStrictlySorted!76 (toList!811 lt!55675) (_1!1221 (tuple2!2423 lt!55659 (minValue!2479 newMap!16))) (_2!1221 (tuple2!2423 lt!55659 (minValue!2479 newMap!16)))))))

(assert (=> d!30721 (= (+!148 lt!55675 (tuple2!2423 lt!55659 (minValue!2479 newMap!16))) lt!56375)))

(declare-fun b!109472 () Bool)

(declare-fun res!54201 () Bool)

(assert (=> b!109472 (=> (not res!54201) (not e!71207))))

(assert (=> b!109472 (= res!54201 (= (getValueByKey!156 (toList!811 lt!56375) (_1!1221 (tuple2!2423 lt!55659 (minValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 lt!55659 (minValue!2479 newMap!16))))))))

(declare-fun b!109473 () Bool)

(assert (=> b!109473 (= e!71207 (contains!835 (toList!811 lt!56375) (tuple2!2423 lt!55659 (minValue!2479 newMap!16))))))

(assert (= (and d!30721 res!54200) b!109472))

(assert (= (and b!109472 res!54201) b!109473))

(declare-fun m!124107 () Bool)

(assert (=> d!30721 m!124107))

(declare-fun m!124109 () Bool)

(assert (=> d!30721 m!124109))

(declare-fun m!124111 () Bool)

(assert (=> d!30721 m!124111))

(declare-fun m!124113 () Bool)

(assert (=> d!30721 m!124113))

(declare-fun m!124115 () Bool)

(assert (=> b!109472 m!124115))

(declare-fun m!124117 () Bool)

(assert (=> b!109473 m!124117))

(assert (=> b!108350 d!30721))

(declare-fun d!30723 () Bool)

(assert (=> d!30723 (= (apply!99 (+!148 lt!55675 (tuple2!2423 lt!55659 (minValue!2479 newMap!16))) lt!55669) (apply!99 lt!55675 lt!55669))))

(declare-fun lt!56377 () Unit!3339)

(assert (=> d!30723 (= lt!56377 (choose!684 lt!55675 lt!55659 (minValue!2479 newMap!16) lt!55669))))

(declare-fun e!71208 () Bool)

(assert (=> d!30723 e!71208))

(declare-fun res!54202 () Bool)

(assert (=> d!30723 (=> (not res!54202) (not e!71208))))

(assert (=> d!30723 (= res!54202 (contains!834 lt!55675 lt!55669))))

(assert (=> d!30723 (= (addApplyDifferent!75 lt!55675 lt!55659 (minValue!2479 newMap!16) lt!55669) lt!56377)))

(declare-fun b!109474 () Bool)

(assert (=> b!109474 (= e!71208 (not (= lt!55669 lt!55659)))))

(assert (= (and d!30723 res!54202) b!109474))

(assert (=> d!30723 m!121931))

(declare-fun m!124119 () Bool)

(assert (=> d!30723 m!124119))

(assert (=> d!30723 m!121939))

(assert (=> d!30723 m!121939))

(assert (=> d!30723 m!121945))

(declare-fun m!124121 () Bool)

(assert (=> d!30723 m!124121))

(assert (=> b!108350 d!30723))

(declare-fun d!30725 () Bool)

(assert (=> d!30725 (= (apply!99 lt!55658 lt!55670) (get!1352 (getValueByKey!156 (toList!811 lt!55658) lt!55670)))))

(declare-fun bs!4514 () Bool)

(assert (= bs!4514 d!30725))

(declare-fun m!124123 () Bool)

(assert (=> bs!4514 m!124123))

(assert (=> bs!4514 m!124123))

(declare-fun m!124125 () Bool)

(assert (=> bs!4514 m!124125))

(assert (=> b!108350 d!30725))

(declare-fun d!30727 () Bool)

(declare-fun e!71209 () Bool)

(assert (=> d!30727 e!71209))

(declare-fun res!54203 () Bool)

(assert (=> d!30727 (=> (not res!54203) (not e!71209))))

(declare-fun lt!56380 () ListLongMap!1591)

(assert (=> d!30727 (= res!54203 (contains!834 lt!56380 (_1!1221 (tuple2!2423 lt!55667 (minValue!2479 newMap!16)))))))

(declare-fun lt!56378 () List!1648)

(assert (=> d!30727 (= lt!56380 (ListLongMap!1592 lt!56378))))

(declare-fun lt!56379 () Unit!3339)

(declare-fun lt!56381 () Unit!3339)

(assert (=> d!30727 (= lt!56379 lt!56381)))

(assert (=> d!30727 (= (getValueByKey!156 lt!56378 (_1!1221 (tuple2!2423 lt!55667 (minValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 lt!55667 (minValue!2479 newMap!16)))))))

(assert (=> d!30727 (= lt!56381 (lemmaContainsTupThenGetReturnValue!74 lt!56378 (_1!1221 (tuple2!2423 lt!55667 (minValue!2479 newMap!16))) (_2!1221 (tuple2!2423 lt!55667 (minValue!2479 newMap!16)))))))

(assert (=> d!30727 (= lt!56378 (insertStrictlySorted!76 (toList!811 lt!55656) (_1!1221 (tuple2!2423 lt!55667 (minValue!2479 newMap!16))) (_2!1221 (tuple2!2423 lt!55667 (minValue!2479 newMap!16)))))))

(assert (=> d!30727 (= (+!148 lt!55656 (tuple2!2423 lt!55667 (minValue!2479 newMap!16))) lt!56380)))

(declare-fun b!109475 () Bool)

(declare-fun res!54204 () Bool)

(assert (=> b!109475 (=> (not res!54204) (not e!71209))))

(assert (=> b!109475 (= res!54204 (= (getValueByKey!156 (toList!811 lt!56380) (_1!1221 (tuple2!2423 lt!55667 (minValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 lt!55667 (minValue!2479 newMap!16))))))))

(declare-fun b!109476 () Bool)

(assert (=> b!109476 (= e!71209 (contains!835 (toList!811 lt!56380) (tuple2!2423 lt!55667 (minValue!2479 newMap!16))))))

(assert (= (and d!30727 res!54203) b!109475))

(assert (= (and b!109475 res!54204) b!109476))

(declare-fun m!124127 () Bool)

(assert (=> d!30727 m!124127))

(declare-fun m!124129 () Bool)

(assert (=> d!30727 m!124129))

(declare-fun m!124131 () Bool)

(assert (=> d!30727 m!124131))

(declare-fun m!124133 () Bool)

(assert (=> d!30727 m!124133))

(declare-fun m!124135 () Bool)

(assert (=> b!109475 m!124135))

(declare-fun m!124137 () Bool)

(assert (=> b!109476 m!124137))

(assert (=> b!108350 d!30727))

(declare-fun d!30729 () Bool)

(assert (=> d!30729 (= (apply!99 lt!55675 lt!55669) (get!1352 (getValueByKey!156 (toList!811 lt!55675) lt!55669)))))

(declare-fun bs!4515 () Bool)

(assert (= bs!4515 d!30729))

(declare-fun m!124139 () Bool)

(assert (=> bs!4515 m!124139))

(assert (=> bs!4515 m!124139))

(declare-fun m!124141 () Bool)

(assert (=> bs!4515 m!124141))

(assert (=> b!108350 d!30729))

(declare-fun d!30731 () Bool)

(assert (=> d!30731 (= (apply!99 (+!148 lt!55658 (tuple2!2423 lt!55660 (zeroValue!2479 newMap!16))) lt!55670) (get!1352 (getValueByKey!156 (toList!811 (+!148 lt!55658 (tuple2!2423 lt!55660 (zeroValue!2479 newMap!16)))) lt!55670)))))

(declare-fun bs!4516 () Bool)

(assert (= bs!4516 d!30731))

(declare-fun m!124143 () Bool)

(assert (=> bs!4516 m!124143))

(assert (=> bs!4516 m!124143))

(declare-fun m!124145 () Bool)

(assert (=> bs!4516 m!124145))

(assert (=> b!108350 d!30731))

(assert (=> b!108521 d!30623))

(declare-fun d!30733 () Bool)

(declare-fun res!54205 () Bool)

(declare-fun e!71210 () Bool)

(assert (=> d!30733 (=> res!54205 e!71210)))

(assert (=> d!30733 (= res!54205 (and ((_ is Cons!1644) (toList!811 lt!55324)) (= (_1!1221 (h!2242 (toList!811 lt!55324))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30733 (= (containsKey!160 (toList!811 lt!55324) #b0000000000000000000000000000000000000000000000000000000000000000) e!71210)))

(declare-fun b!109477 () Bool)

(declare-fun e!71211 () Bool)

(assert (=> b!109477 (= e!71210 e!71211)))

(declare-fun res!54206 () Bool)

(assert (=> b!109477 (=> (not res!54206) (not e!71211))))

(assert (=> b!109477 (= res!54206 (and (or (not ((_ is Cons!1644) (toList!811 lt!55324))) (bvsle (_1!1221 (h!2242 (toList!811 lt!55324))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1644) (toList!811 lt!55324)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55324))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109478 () Bool)

(assert (=> b!109478 (= e!71211 (containsKey!160 (t!5776 (toList!811 lt!55324)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30733 (not res!54205)) b!109477))

(assert (= (and b!109477 res!54206) b!109478))

(declare-fun m!124147 () Bool)

(assert (=> b!109478 m!124147))

(assert (=> d!30073 d!30733))

(declare-fun d!30735 () Bool)

(assert (=> d!30735 (contains!834 (getCurrentListMap!487 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))

(declare-fun lt!56384 () Unit!3339)

(declare-fun choose!689 (array!4374 array!4376 (_ BitVec 32) (_ BitVec 32) V!3235 V!3235 (_ BitVec 64) (_ BitVec 32) Int) Unit!3339)

(assert (=> d!30735 (= lt!56384 (choose!689 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)))))

(assert (=> d!30735 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30735 (= (lemmaArrayContainsKeyThenInListMap!31 (_keys!4316 newMap!16) (_values!2589 newMap!16) (mask!6764 newMap!16) (extraKeys!2407 newMap!16) (zeroValue!2479 newMap!16) (minValue!2479 newMap!16) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2606 newMap!16)) lt!56384)))

(declare-fun bs!4517 () Bool)

(assert (= bs!4517 d!30735))

(assert (=> bs!4517 m!121407))

(assert (=> bs!4517 m!121407))

(assert (=> bs!4517 m!121177))

(assert (=> bs!4517 m!122009))

(assert (=> bs!4517 m!121177))

(declare-fun m!124149 () Bool)

(assert (=> bs!4517 m!124149))

(assert (=> bs!4517 m!121521))

(assert (=> b!108416 d!30735))

(assert (=> b!108416 d!30353))

(assert (=> b!108416 d!29895))

(assert (=> b!108333 d!30635))

(declare-fun d!30737 () Bool)

(declare-fun lt!56385 () Bool)

(assert (=> d!30737 (= lt!56385 (select (content!110 (t!5776 (toList!811 lt!55303))) lt!55252))))

(declare-fun e!71212 () Bool)

(assert (=> d!30737 (= lt!56385 e!71212)))

(declare-fun res!54208 () Bool)

(assert (=> d!30737 (=> (not res!54208) (not e!71212))))

(assert (=> d!30737 (= res!54208 ((_ is Cons!1644) (t!5776 (toList!811 lt!55303))))))

(assert (=> d!30737 (= (contains!835 (t!5776 (toList!811 lt!55303)) lt!55252) lt!56385)))

(declare-fun b!109479 () Bool)

(declare-fun e!71213 () Bool)

(assert (=> b!109479 (= e!71212 e!71213)))

(declare-fun res!54207 () Bool)

(assert (=> b!109479 (=> res!54207 e!71213)))

(assert (=> b!109479 (= res!54207 (= (h!2242 (t!5776 (toList!811 lt!55303))) lt!55252))))

(declare-fun b!109480 () Bool)

(assert (=> b!109480 (= e!71213 (contains!835 (t!5776 (t!5776 (toList!811 lt!55303))) lt!55252))))

(assert (= (and d!30737 res!54208) b!109479))

(assert (= (and b!109479 (not res!54207)) b!109480))

(assert (=> d!30737 m!124049))

(declare-fun m!124151 () Bool)

(assert (=> d!30737 m!124151))

(declare-fun m!124153 () Bool)

(assert (=> b!109480 m!124153))

(assert (=> b!108120 d!30737))

(declare-fun d!30739 () Bool)

(declare-fun e!71215 () Bool)

(assert (=> d!30739 e!71215))

(declare-fun res!54209 () Bool)

(assert (=> d!30739 (=> res!54209 e!71215)))

(declare-fun lt!56386 () Bool)

(assert (=> d!30739 (= res!54209 (not lt!56386))))

(declare-fun lt!56387 () Bool)

(assert (=> d!30739 (= lt!56386 lt!56387)))

(declare-fun lt!56388 () Unit!3339)

(declare-fun e!71214 () Unit!3339)

(assert (=> d!30739 (= lt!56388 e!71214)))

(declare-fun c!19365 () Bool)

(assert (=> d!30739 (= c!19365 lt!56387)))

(assert (=> d!30739 (= lt!56387 (containsKey!160 (toList!811 lt!55510) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30739 (= (contains!834 lt!55510 #b0000000000000000000000000000000000000000000000000000000000000000) lt!56386)))

(declare-fun b!109481 () Bool)

(declare-fun lt!56389 () Unit!3339)

(assert (=> b!109481 (= e!71214 lt!56389)))

(assert (=> b!109481 (= lt!56389 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55510) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109481 (isDefined!110 (getValueByKey!156 (toList!811 lt!55510) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109482 () Bool)

(declare-fun Unit!3410 () Unit!3339)

(assert (=> b!109482 (= e!71214 Unit!3410)))

(declare-fun b!109483 () Bool)

(assert (=> b!109483 (= e!71215 (isDefined!110 (getValueByKey!156 (toList!811 lt!55510) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30739 c!19365) b!109481))

(assert (= (and d!30739 (not c!19365)) b!109482))

(assert (= (and d!30739 (not res!54209)) b!109483))

(declare-fun m!124155 () Bool)

(assert (=> d!30739 m!124155))

(declare-fun m!124157 () Bool)

(assert (=> b!109481 m!124157))

(assert (=> b!109481 m!122791))

(assert (=> b!109481 m!122791))

(declare-fun m!124159 () Bool)

(assert (=> b!109481 m!124159))

(assert (=> b!109483 m!122791))

(assert (=> b!109483 m!122791))

(assert (=> b!109483 m!124159))

(assert (=> bm!11468 d!30739))

(assert (=> bm!11496 d!30095))

(declare-fun d!30741 () Bool)

(assert (=> d!30741 (isDefined!110 (getValueByKey!156 (toList!811 call!11428) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun lt!56390 () Unit!3339)

(assert (=> d!30741 (= lt!56390 (choose!683 (toList!811 call!11428) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!71216 () Bool)

(assert (=> d!30741 e!71216))

(declare-fun res!54210 () Bool)

(assert (=> d!30741 (=> (not res!54210) (not e!71216))))

(assert (=> d!30741 (= res!54210 (isStrictlySorted!305 (toList!811 call!11428)))))

(assert (=> d!30741 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 call!11428) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) lt!56390)))

(declare-fun b!109484 () Bool)

(assert (=> b!109484 (= e!71216 (containsKey!160 (toList!811 call!11428) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30741 res!54210) b!109484))

(assert (=> d!30741 m!121177))

(assert (=> d!30741 m!122245))

(assert (=> d!30741 m!122245))

(assert (=> d!30741 m!122247))

(assert (=> d!30741 m!121177))

(declare-fun m!124161 () Bool)

(assert (=> d!30741 m!124161))

(declare-fun m!124163 () Bool)

(assert (=> d!30741 m!124163))

(assert (=> b!109484 m!121177))

(assert (=> b!109484 m!122241))

(assert (=> b!108487 d!30741))

(assert (=> b!108487 d!30639))

(assert (=> b!108487 d!30641))

(declare-fun d!30743 () Bool)

(assert (=> d!30743 (= (apply!99 lt!55655 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1352 (getValueByKey!156 (toList!811 lt!55655) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4518 () Bool)

(assert (= bs!4518 d!30743))

(assert (=> bs!4518 m!123553))

(assert (=> bs!4518 m!123553))

(declare-fun m!124165 () Bool)

(assert (=> bs!4518 m!124165))

(assert (=> b!108356 d!30743))

(assert (=> b!108494 d!29885))

(declare-fun d!30745 () Bool)

(assert (=> d!30745 (isDefined!110 (getValueByKey!156 (toList!811 lt!55479) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!56391 () Unit!3339)

(assert (=> d!30745 (= lt!56391 (choose!683 (toList!811 lt!55479) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!71217 () Bool)

(assert (=> d!30745 e!71217))

(declare-fun res!54211 () Bool)

(assert (=> d!30745 (=> (not res!54211) (not e!71217))))

(assert (=> d!30745 (= res!54211 (isStrictlySorted!305 (toList!811 lt!55479)))))

(assert (=> d!30745 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55479) #b1000000000000000000000000000000000000000000000000000000000000000) lt!56391)))

(declare-fun b!109485 () Bool)

(assert (=> b!109485 (= e!71217 (containsKey!160 (toList!811 lt!55479) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30745 res!54211) b!109485))

(assert (=> d!30745 m!121855))

(assert (=> d!30745 m!121855))

(assert (=> d!30745 m!121857))

(declare-fun m!124167 () Bool)

(assert (=> d!30745 m!124167))

(assert (=> d!30745 m!123987))

(assert (=> b!109485 m!121851))

(assert (=> b!108307 d!30745))

(assert (=> b!108307 d!30533))

(assert (=> b!108307 d!30431))

(declare-fun d!30747 () Bool)

(declare-fun e!71219 () Bool)

(assert (=> d!30747 e!71219))

(declare-fun res!54212 () Bool)

(assert (=> d!30747 (=> res!54212 e!71219)))

(declare-fun lt!56392 () Bool)

(assert (=> d!30747 (= res!54212 (not lt!56392))))

(declare-fun lt!56393 () Bool)

(assert (=> d!30747 (= lt!56392 lt!56393)))

(declare-fun lt!56394 () Unit!3339)

(declare-fun e!71218 () Unit!3339)

(assert (=> d!30747 (= lt!56394 e!71218)))

(declare-fun c!19366 () Bool)

(assert (=> d!30747 (= c!19366 lt!56393)))

(assert (=> d!30747 (= lt!56393 (containsKey!160 (toList!811 lt!55775) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> d!30747 (= (contains!834 lt!55775 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) lt!56392)))

(declare-fun b!109486 () Bool)

(declare-fun lt!56395 () Unit!3339)

(assert (=> b!109486 (= e!71218 lt!56395)))

(assert (=> b!109486 (= lt!56395 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55775) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (=> b!109486 (isDefined!110 (getValueByKey!156 (toList!811 lt!55775) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun b!109487 () Bool)

(declare-fun Unit!3411 () Unit!3339)

(assert (=> b!109487 (= e!71218 Unit!3411)))

(declare-fun b!109488 () Bool)

(assert (=> b!109488 (= e!71219 (isDefined!110 (getValueByKey!156 (toList!811 lt!55775) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(assert (= (and d!30747 c!19366) b!109486))

(assert (= (and d!30747 (not c!19366)) b!109487))

(assert (= (and d!30747 (not res!54212)) b!109488))

(declare-fun m!124169 () Bool)

(assert (=> d!30747 m!124169))

(declare-fun m!124171 () Bool)

(assert (=> b!109486 m!124171))

(assert (=> b!109486 m!122053))

(assert (=> b!109486 m!122053))

(declare-fun m!124173 () Bool)

(assert (=> b!109486 m!124173))

(assert (=> b!109488 m!122053))

(assert (=> b!109488 m!122053))

(assert (=> b!109488 m!124173))

(assert (=> d!30001 d!30747))

(declare-fun d!30749 () Bool)

(declare-fun c!19367 () Bool)

(assert (=> d!30749 (= c!19367 (and ((_ is Cons!1644) lt!55773) (= (_1!1221 (h!2242 lt!55773)) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun e!71220 () Option!162)

(assert (=> d!30749 (= (getValueByKey!156 lt!55773 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) e!71220)))

(declare-fun e!71221 () Option!162)

(declare-fun b!109491 () Bool)

(assert (=> b!109491 (= e!71221 (getValueByKey!156 (t!5776 lt!55773) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun b!109492 () Bool)

(assert (=> b!109492 (= e!71221 None!160)))

(declare-fun b!109490 () Bool)

(assert (=> b!109490 (= e!71220 e!71221)))

(declare-fun c!19368 () Bool)

(assert (=> b!109490 (= c!19368 (and ((_ is Cons!1644) lt!55773) (not (= (_1!1221 (h!2242 lt!55773)) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))))

(declare-fun b!109489 () Bool)

(assert (=> b!109489 (= e!71220 (Some!161 (_2!1221 (h!2242 lt!55773))))))

(assert (= (and d!30749 c!19367) b!109489))

(assert (= (and d!30749 (not c!19367)) b!109490))

(assert (= (and b!109490 c!19368) b!109491))

(assert (= (and b!109490 (not c!19368)) b!109492))

(declare-fun m!124175 () Bool)

(assert (=> b!109491 m!124175))

(assert (=> d!30001 d!30749))

(declare-fun d!30751 () Bool)

(assert (=> d!30751 (= (getValueByKey!156 lt!55773 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) (Some!161 (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun lt!56396 () Unit!3339)

(assert (=> d!30751 (= lt!56396 (choose!680 lt!55773 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun e!71222 () Bool)

(assert (=> d!30751 e!71222))

(declare-fun res!54213 () Bool)

(assert (=> d!30751 (=> (not res!54213) (not e!71222))))

(assert (=> d!30751 (= res!54213 (isStrictlySorted!305 lt!55773))))

(assert (=> d!30751 (= (lemmaContainsTupThenGetReturnValue!74 lt!55773 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) lt!56396)))

(declare-fun b!109493 () Bool)

(declare-fun res!54214 () Bool)

(assert (=> b!109493 (=> (not res!54214) (not e!71222))))

(assert (=> b!109493 (= res!54214 (containsKey!160 lt!55773 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun b!109494 () Bool)

(assert (=> b!109494 (= e!71222 (contains!835 lt!55773 (tuple2!2423 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(assert (= (and d!30751 res!54213) b!109493))

(assert (= (and b!109493 res!54214) b!109494))

(assert (=> d!30751 m!122047))

(declare-fun m!124177 () Bool)

(assert (=> d!30751 m!124177))

(declare-fun m!124179 () Bool)

(assert (=> d!30751 m!124179))

(declare-fun m!124181 () Bool)

(assert (=> b!109493 m!124181))

(declare-fun m!124183 () Bool)

(assert (=> b!109494 m!124183))

(assert (=> d!30001 d!30751))

(declare-fun b!109495 () Bool)

(declare-fun c!19369 () Bool)

(assert (=> b!109495 (= c!19369 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55250 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))) (bvsgt (_1!1221 (h!2242 (toList!811 (+!148 lt!55250 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun e!71223 () List!1648)

(declare-fun e!71224 () List!1648)

(assert (=> b!109495 (= e!71223 e!71224)))

(declare-fun b!109496 () Bool)

(declare-fun e!71225 () List!1648)

(declare-fun call!11642 () List!1648)

(assert (=> b!109496 (= e!71225 call!11642)))

(declare-fun c!19370 () Bool)

(declare-fun bm!11638 () Bool)

(declare-fun e!71227 () List!1648)

(assert (=> bm!11638 (= call!11642 ($colon$colon!81 e!71227 (ite c!19370 (h!2242 (toList!811 (+!148 lt!55250 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))) (tuple2!2423 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))))

(declare-fun c!19371 () Bool)

(assert (=> bm!11638 (= c!19371 c!19370)))

(declare-fun b!109497 () Bool)

(declare-fun call!11641 () List!1648)

(assert (=> b!109497 (= e!71224 call!11641)))

(declare-fun b!109498 () Bool)

(declare-fun call!11643 () List!1648)

(assert (=> b!109498 (= e!71223 call!11643)))

(declare-fun d!30753 () Bool)

(declare-fun e!71226 () Bool)

(assert (=> d!30753 e!71226))

(declare-fun res!54215 () Bool)

(assert (=> d!30753 (=> (not res!54215) (not e!71226))))

(declare-fun lt!56397 () List!1648)

(assert (=> d!30753 (= res!54215 (isStrictlySorted!305 lt!56397))))

(assert (=> d!30753 (= lt!56397 e!71225)))

(assert (=> d!30753 (= c!19370 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55250 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))) (bvslt (_1!1221 (h!2242 (toList!811 (+!148 lt!55250 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(assert (=> d!30753 (isStrictlySorted!305 (toList!811 (+!148 lt!55250 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30753 (= (insertStrictlySorted!76 (toList!811 (+!148 lt!55250 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) lt!56397)))

(declare-fun b!109499 () Bool)

(assert (=> b!109499 (= e!71225 e!71223)))

(declare-fun c!19372 () Bool)

(assert (=> b!109499 (= c!19372 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55250 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))) (= (_1!1221 (h!2242 (toList!811 (+!148 lt!55250 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun b!109500 () Bool)

(declare-fun res!54216 () Bool)

(assert (=> b!109500 (=> (not res!54216) (not e!71226))))

(assert (=> b!109500 (= res!54216 (containsKey!160 lt!56397 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun bm!11639 () Bool)

(assert (=> bm!11639 (= call!11643 call!11642)))

(declare-fun bm!11640 () Bool)

(assert (=> bm!11640 (= call!11641 call!11643)))

(declare-fun b!109501 () Bool)

(assert (=> b!109501 (= e!71227 (insertStrictlySorted!76 (t!5776 (toList!811 (+!148 lt!55250 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun b!109502 () Bool)

(assert (=> b!109502 (= e!71224 call!11641)))

(declare-fun b!109503 () Bool)

(assert (=> b!109503 (= e!71226 (contains!835 lt!56397 (tuple2!2423 (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) (_2!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun b!109504 () Bool)

(assert (=> b!109504 (= e!71227 (ite c!19372 (t!5776 (toList!811 (+!148 lt!55250 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))) (ite c!19369 (Cons!1644 (h!2242 (toList!811 (+!148 lt!55250 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))) (t!5776 (toList!811 (+!148 lt!55250 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))) Nil!1645)))))

(assert (= (and d!30753 c!19370) b!109496))

(assert (= (and d!30753 (not c!19370)) b!109499))

(assert (= (and b!109499 c!19372) b!109498))

(assert (= (and b!109499 (not c!19372)) b!109495))

(assert (= (and b!109495 c!19369) b!109502))

(assert (= (and b!109495 (not c!19369)) b!109497))

(assert (= (or b!109502 b!109497) bm!11640))

(assert (= (or b!109498 bm!11640) bm!11639))

(assert (= (or b!109496 bm!11639) bm!11638))

(assert (= (and bm!11638 c!19371) b!109501))

(assert (= (and bm!11638 (not c!19371)) b!109504))

(assert (= (and d!30753 res!54215) b!109500))

(assert (= (and b!109500 res!54216) b!109503))

(declare-fun m!124185 () Bool)

(assert (=> b!109503 m!124185))

(declare-fun m!124187 () Bool)

(assert (=> b!109500 m!124187))

(declare-fun m!124189 () Bool)

(assert (=> bm!11638 m!124189))

(declare-fun m!124191 () Bool)

(assert (=> d!30753 m!124191))

(declare-fun m!124193 () Bool)

(assert (=> d!30753 m!124193))

(declare-fun m!124195 () Bool)

(assert (=> b!109501 m!124195))

(assert (=> d!30001 d!30753))

(assert (=> b!108344 d!30103))

(assert (=> b!108344 d!30105))

(declare-fun d!30755 () Bool)

(declare-fun c!19373 () Bool)

(assert (=> d!30755 (= c!19373 (and ((_ is Cons!1644) (toList!811 lt!55807)) (= (_1!1221 (h!2242 (toList!811 lt!55807))) (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!71228 () Option!162)

(assert (=> d!30755 (= (getValueByKey!156 (toList!811 lt!55807) (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) e!71228)))

(declare-fun b!109507 () Bool)

(declare-fun e!71229 () Option!162)

(assert (=> b!109507 (= e!71229 (getValueByKey!156 (t!5776 (toList!811 lt!55807)) (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109508 () Bool)

(assert (=> b!109508 (= e!71229 None!160)))

(declare-fun b!109506 () Bool)

(assert (=> b!109506 (= e!71228 e!71229)))

(declare-fun c!19374 () Bool)

(assert (=> b!109506 (= c!19374 (and ((_ is Cons!1644) (toList!811 lt!55807)) (not (= (_1!1221 (h!2242 (toList!811 lt!55807))) (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun b!109505 () Bool)

(assert (=> b!109505 (= e!71228 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55807)))))))

(assert (= (and d!30755 c!19373) b!109505))

(assert (= (and d!30755 (not c!19373)) b!109506))

(assert (= (and b!109506 c!19374) b!109507))

(assert (= (and b!109506 (not c!19374)) b!109508))

(declare-fun m!124197 () Bool)

(assert (=> b!109507 m!124197))

(assert (=> b!108446 d!30755))

(declare-fun d!30757 () Bool)

(declare-fun lt!56398 () Bool)

(assert (=> d!30757 (= lt!56398 (select (content!111 Nil!1644) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!71230 () Bool)

(assert (=> d!30757 (= lt!56398 e!71230)))

(declare-fun res!54218 () Bool)

(assert (=> d!30757 (=> (not res!54218) (not e!71230))))

(assert (=> d!30757 (= res!54218 ((_ is Cons!1643) Nil!1644))))

(assert (=> d!30757 (= (contains!836 Nil!1644 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) lt!56398)))

(declare-fun b!109509 () Bool)

(declare-fun e!71231 () Bool)

(assert (=> b!109509 (= e!71230 e!71231)))

(declare-fun res!54217 () Bool)

(assert (=> b!109509 (=> res!54217 e!71231)))

(assert (=> b!109509 (= res!54217 (= (h!2241 Nil!1644) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109510 () Bool)

(assert (=> b!109510 (= e!71231 (contains!836 (t!5775 Nil!1644) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!30757 res!54218) b!109509))

(assert (= (and b!109509 (not res!54217)) b!109510))

(assert (=> d!30757 m!121717))

(assert (=> d!30757 m!121517))

(declare-fun m!124199 () Bool)

(assert (=> d!30757 m!124199))

(assert (=> b!109510 m!121517))

(declare-fun m!124201 () Bool)

(assert (=> b!109510 m!124201))

(assert (=> b!108094 d!30757))

(declare-fun d!30759 () Bool)

(assert (=> d!30759 (isDefined!110 (getValueByKey!156 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325))) lt!55323))))

(declare-fun lt!56399 () Unit!3339)

(assert (=> d!30759 (= lt!56399 (choose!683 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325))) lt!55323))))

(declare-fun e!71232 () Bool)

(assert (=> d!30759 e!71232))

(declare-fun res!54219 () Bool)

(assert (=> d!30759 (=> (not res!54219) (not e!71232))))

(assert (=> d!30759 (= res!54219 (isStrictlySorted!305 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325)))))))

(assert (=> d!30759 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325))) lt!55323) lt!56399)))

(declare-fun b!109511 () Bool)

(assert (=> b!109511 (= e!71232 (containsKey!160 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325))) lt!55323))))

(assert (= (and d!30759 res!54219) b!109511))

(assert (=> d!30759 m!122299))

(assert (=> d!30759 m!122299))

(assert (=> d!30759 m!122301))

(declare-fun m!124203 () Bool)

(assert (=> d!30759 m!124203))

(declare-fun m!124205 () Bool)

(assert (=> d!30759 m!124205))

(assert (=> b!109511 m!122295))

(assert (=> b!108509 d!30759))

(assert (=> b!108509 d!30519))

(assert (=> b!108509 d!30521))

(declare-fun d!30761 () Bool)

(declare-fun res!54220 () Bool)

(declare-fun e!71233 () Bool)

(assert (=> d!30761 (=> (not res!54220) (not e!71233))))

(assert (=> d!30761 (= res!54220 (simpleValid!74 (_2!1222 lt!55767)))))

(assert (=> d!30761 (= (valid!416 (_2!1222 lt!55767)) e!71233)))

(declare-fun b!109512 () Bool)

(declare-fun res!54221 () Bool)

(assert (=> b!109512 (=> (not res!54221) (not e!71233))))

(assert (=> b!109512 (= res!54221 (= (arrayCountValidKeys!0 (_keys!4316 (_2!1222 lt!55767)) #b00000000000000000000000000000000 (size!2330 (_keys!4316 (_2!1222 lt!55767)))) (_size!505 (_2!1222 lt!55767))))))

(declare-fun b!109513 () Bool)

(declare-fun res!54222 () Bool)

(assert (=> b!109513 (=> (not res!54222) (not e!71233))))

(assert (=> b!109513 (= res!54222 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4316 (_2!1222 lt!55767)) (mask!6764 (_2!1222 lt!55767))))))

(declare-fun b!109514 () Bool)

(assert (=> b!109514 (= e!71233 (arrayNoDuplicates!0 (_keys!4316 (_2!1222 lt!55767)) #b00000000000000000000000000000000 Nil!1644))))

(assert (= (and d!30761 res!54220) b!109512))

(assert (= (and b!109512 res!54221) b!109513))

(assert (= (and b!109513 res!54222) b!109514))

(declare-fun m!124207 () Bool)

(assert (=> d!30761 m!124207))

(declare-fun m!124209 () Bool)

(assert (=> b!109512 m!124209))

(declare-fun m!124211 () Bool)

(assert (=> b!109513 m!124211))

(declare-fun m!124213 () Bool)

(assert (=> b!109514 m!124213))

(assert (=> b!108422 d!30761))

(declare-fun d!30763 () Bool)

(declare-fun c!19375 () Bool)

(assert (=> d!30763 (= c!19375 (and ((_ is Cons!1644) (toList!811 lt!55585)) (= (_1!1221 (h!2242 (toList!811 lt!55585))) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!71234 () Option!162)

(assert (=> d!30763 (= (getValueByKey!156 (toList!811 lt!55585) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) e!71234)))

(declare-fun b!109517 () Bool)

(declare-fun e!71235 () Option!162)

(assert (=> b!109517 (= e!71235 (getValueByKey!156 (t!5776 (toList!811 lt!55585)) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109518 () Bool)

(assert (=> b!109518 (= e!71235 None!160)))

(declare-fun b!109516 () Bool)

(assert (=> b!109516 (= e!71234 e!71235)))

(declare-fun c!19376 () Bool)

(assert (=> b!109516 (= c!19376 (and ((_ is Cons!1644) (toList!811 lt!55585)) (not (= (_1!1221 (h!2242 (toList!811 lt!55585))) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun b!109515 () Bool)

(assert (=> b!109515 (= e!71234 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55585)))))))

(assert (= (and d!30763 c!19375) b!109515))

(assert (= (and d!30763 (not c!19375)) b!109516))

(assert (= (and b!109516 c!19376) b!109517))

(assert (= (and b!109516 (not c!19376)) b!109518))

(declare-fun m!124215 () Bool)

(assert (=> b!109517 m!124215))

(assert (=> b!108160 d!30763))

(declare-fun d!30765 () Bool)

(declare-fun c!19377 () Bool)

(assert (=> d!30765 (= c!19377 (and ((_ is Cons!1644) (toList!811 lt!55783)) (= (_1!1221 (h!2242 (toList!811 lt!55783))) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!71236 () Option!162)

(assert (=> d!30765 (= (getValueByKey!156 (toList!811 lt!55783) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) e!71236)))

(declare-fun b!109521 () Bool)

(declare-fun e!71237 () Option!162)

(assert (=> b!109521 (= e!71237 (getValueByKey!156 (t!5776 (toList!811 lt!55783)) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109522 () Bool)

(assert (=> b!109522 (= e!71237 None!160)))

(declare-fun b!109520 () Bool)

(assert (=> b!109520 (= e!71236 e!71237)))

(declare-fun c!19378 () Bool)

(assert (=> b!109520 (= c!19378 (and ((_ is Cons!1644) (toList!811 lt!55783)) (not (= (_1!1221 (h!2242 (toList!811 lt!55783))) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun b!109519 () Bool)

(assert (=> b!109519 (= e!71236 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55783)))))))

(assert (= (and d!30765 c!19377) b!109519))

(assert (= (and d!30765 (not c!19377)) b!109520))

(assert (= (and b!109520 c!19378) b!109521))

(assert (= (and b!109520 (not c!19378)) b!109522))

(declare-fun m!124217 () Bool)

(assert (=> b!109521 m!124217))

(assert (=> b!108430 d!30765))

(assert (=> b!108306 d!30113))

(assert (=> b!108306 d!30115))

(declare-fun d!30767 () Bool)

(declare-fun lt!56400 () Bool)

(assert (=> d!30767 (= lt!56400 (select (content!110 (t!5776 (toList!811 lt!55335))) lt!55249))))

(declare-fun e!71238 () Bool)

(assert (=> d!30767 (= lt!56400 e!71238)))

(declare-fun res!54224 () Bool)

(assert (=> d!30767 (=> (not res!54224) (not e!71238))))

(assert (=> d!30767 (= res!54224 ((_ is Cons!1644) (t!5776 (toList!811 lt!55335))))))

(assert (=> d!30767 (= (contains!835 (t!5776 (toList!811 lt!55335)) lt!55249) lt!56400)))

(declare-fun b!109523 () Bool)

(declare-fun e!71239 () Bool)

(assert (=> b!109523 (= e!71238 e!71239)))

(declare-fun res!54223 () Bool)

(assert (=> b!109523 (=> res!54223 e!71239)))

(assert (=> b!109523 (= res!54223 (= (h!2242 (t!5776 (toList!811 lt!55335))) lt!55249))))

(declare-fun b!109524 () Bool)

(assert (=> b!109524 (= e!71239 (contains!835 (t!5776 (t!5776 (toList!811 lt!55335))) lt!55249))))

(assert (= (and d!30767 res!54224) b!109523))

(assert (= (and b!109523 (not res!54223)) b!109524))

(assert (=> d!30767 m!123867))

(declare-fun m!124219 () Bool)

(assert (=> d!30767 m!124219))

(declare-fun m!124221 () Bool)

(assert (=> b!109524 m!124221))

(assert (=> b!108541 d!30767))

(declare-fun d!30769 () Bool)

(assert (=> d!30769 (= ($colon$colon!81 e!70487 (ite c!19034 (h!2242 (toList!811 (+!148 lt!55250 lt!55249))) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252)))) (Cons!1644 (ite c!19034 (h!2242 (toList!811 (+!148 lt!55250 lt!55249))) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))) e!70487))))

(assert (=> bm!11497 d!30769))

(declare-fun d!30771 () Bool)

(declare-fun lt!56401 () (_ BitVec 32))

(assert (=> d!30771 (and (bvsge lt!56401 #b00000000000000000000000000000000) (bvsle lt!56401 (bvsub (size!2330 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!71241 () (_ BitVec 32))

(assert (=> d!30771 (= lt!56401 e!71241)))

(declare-fun c!19380 () Bool)

(assert (=> d!30771 (= c!19380 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2330 (_keys!4316 newMap!16))))))

(assert (=> d!30771 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2330 (_keys!4316 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2330 (_keys!4316 newMap!16)) (size!2330 (_keys!4316 newMap!16))))))

(assert (=> d!30771 (= (arrayCountValidKeys!0 (_keys!4316 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2330 (_keys!4316 newMap!16))) lt!56401)))

(declare-fun b!109525 () Bool)

(declare-fun e!71240 () (_ BitVec 32))

(declare-fun call!11644 () (_ BitVec 32))

(assert (=> b!109525 (= e!71240 (bvadd #b00000000000000000000000000000001 call!11644))))

(declare-fun b!109526 () Bool)

(assert (=> b!109526 (= e!71241 e!71240)))

(declare-fun c!19379 () Bool)

(assert (=> b!109526 (= c!19379 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!109527 () Bool)

(assert (=> b!109527 (= e!71240 call!11644)))

(declare-fun b!109528 () Bool)

(assert (=> b!109528 (= e!71241 #b00000000000000000000000000000000)))

(declare-fun bm!11641 () Bool)

(assert (=> bm!11641 (= call!11644 (arrayCountValidKeys!0 (_keys!4316 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2330 (_keys!4316 newMap!16))))))

(assert (= (and d!30771 c!19380) b!109528))

(assert (= (and d!30771 (not c!19380)) b!109526))

(assert (= (and b!109526 c!19379) b!109525))

(assert (= (and b!109526 (not c!19379)) b!109527))

(assert (= (or b!109525 b!109527) bm!11641))

(assert (=> b!109526 m!122525))

(assert (=> b!109526 m!122525))

(assert (=> b!109526 m!123937))

(declare-fun m!124223 () Bool)

(assert (=> bm!11641 m!124223))

(assert (=> bm!11502 d!30771))

(declare-fun d!30773 () Bool)

(declare-fun e!71243 () Bool)

(assert (=> d!30773 e!71243))

(declare-fun res!54225 () Bool)

(assert (=> d!30773 (=> res!54225 e!71243)))

(declare-fun lt!56402 () Bool)

(assert (=> d!30773 (= res!54225 (not lt!56402))))

(declare-fun lt!56403 () Bool)

(assert (=> d!30773 (= lt!56402 lt!56403)))

(declare-fun lt!56404 () Unit!3339)

(declare-fun e!71242 () Unit!3339)

(assert (=> d!30773 (= lt!56404 e!71242)))

(declare-fun c!19381 () Bool)

(assert (=> d!30773 (= c!19381 lt!56403)))

(assert (=> d!30773 (= lt!56403 (containsKey!160 (toList!811 lt!55655) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!30773 (= (contains!834 lt!55655 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)) lt!56402)))

(declare-fun b!109529 () Bool)

(declare-fun lt!56405 () Unit!3339)

(assert (=> b!109529 (= e!71242 lt!56405)))

(assert (=> b!109529 (= lt!56405 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55655) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!109529 (isDefined!110 (getValueByKey!156 (toList!811 lt!55655) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!109530 () Bool)

(declare-fun Unit!3412 () Unit!3339)

(assert (=> b!109530 (= e!71242 Unit!3412)))

(declare-fun b!109531 () Bool)

(assert (=> b!109531 (= e!71243 (isDefined!110 (getValueByKey!156 (toList!811 lt!55655) (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!30773 c!19381) b!109529))

(assert (= (and d!30773 (not c!19381)) b!109530))

(assert (= (and d!30773 (not res!54225)) b!109531))

(assert (=> d!30773 m!121517))

(declare-fun m!124225 () Bool)

(assert (=> d!30773 m!124225))

(assert (=> b!109529 m!121517))

(declare-fun m!124227 () Bool)

(assert (=> b!109529 m!124227))

(assert (=> b!109529 m!121517))

(assert (=> b!109529 m!123063))

(assert (=> b!109529 m!123063))

(declare-fun m!124229 () Bool)

(assert (=> b!109529 m!124229))

(assert (=> b!109531 m!121517))

(assert (=> b!109531 m!123063))

(assert (=> b!109531 m!123063))

(assert (=> b!109531 m!124229))

(assert (=> b!108363 d!30773))

(declare-fun d!30775 () Bool)

(declare-fun c!19382 () Bool)

(assert (=> d!30775 (= c!19382 (and ((_ is Cons!1644) (t!5776 (toList!811 lt!55339))) (= (_1!1221 (h!2242 (t!5776 (toList!811 lt!55339)))) (_1!1221 lt!55249))))))

(declare-fun e!71244 () Option!162)

(assert (=> d!30775 (= (getValueByKey!156 (t!5776 (toList!811 lt!55339)) (_1!1221 lt!55249)) e!71244)))

(declare-fun b!109534 () Bool)

(declare-fun e!71245 () Option!162)

(assert (=> b!109534 (= e!71245 (getValueByKey!156 (t!5776 (t!5776 (toList!811 lt!55339))) (_1!1221 lt!55249)))))

(declare-fun b!109535 () Bool)

(assert (=> b!109535 (= e!71245 None!160)))

(declare-fun b!109533 () Bool)

(assert (=> b!109533 (= e!71244 e!71245)))

(declare-fun c!19383 () Bool)

(assert (=> b!109533 (= c!19383 (and ((_ is Cons!1644) (t!5776 (toList!811 lt!55339))) (not (= (_1!1221 (h!2242 (t!5776 (toList!811 lt!55339)))) (_1!1221 lt!55249)))))))

(declare-fun b!109532 () Bool)

(assert (=> b!109532 (= e!71244 (Some!161 (_2!1221 (h!2242 (t!5776 (toList!811 lt!55339))))))))

(assert (= (and d!30775 c!19382) b!109532))

(assert (= (and d!30775 (not c!19382)) b!109533))

(assert (= (and b!109533 c!19383) b!109534))

(assert (= (and b!109533 (not c!19383)) b!109535))

(declare-fun m!124231 () Bool)

(assert (=> b!109534 m!124231))

(assert (=> b!108302 d!30775))

(declare-fun lt!56406 () Bool)

(declare-fun d!30777 () Bool)

(assert (=> d!30777 (= lt!56406 (select (content!110 (toList!811 lt!55775)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))

(declare-fun e!71246 () Bool)

(assert (=> d!30777 (= lt!56406 e!71246)))

(declare-fun res!54227 () Bool)

(assert (=> d!30777 (=> (not res!54227) (not e!71246))))

(assert (=> d!30777 (= res!54227 ((_ is Cons!1644) (toList!811 lt!55775)))))

(assert (=> d!30777 (= (contains!835 (toList!811 lt!55775) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)) lt!56406)))

(declare-fun b!109536 () Bool)

(declare-fun e!71247 () Bool)

(assert (=> b!109536 (= e!71246 e!71247)))

(declare-fun res!54226 () Bool)

(assert (=> b!109536 (=> res!54226 e!71247)))

(assert (=> b!109536 (= res!54226 (= (h!2242 (toList!811 lt!55775)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))

(declare-fun b!109537 () Bool)

(assert (=> b!109537 (= e!71247 (contains!835 (t!5776 (toList!811 lt!55775)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))

(assert (= (and d!30777 res!54227) b!109536))

(assert (= (and b!109536 (not res!54226)) b!109537))

(declare-fun m!124233 () Bool)

(assert (=> d!30777 m!124233))

(declare-fun m!124235 () Bool)

(assert (=> d!30777 m!124235))

(declare-fun m!124237 () Bool)

(assert (=> b!109537 m!124237))

(assert (=> b!108427 d!30777))

(declare-fun d!30779 () Bool)

(declare-fun res!54228 () Bool)

(declare-fun e!71248 () Bool)

(assert (=> d!30779 (=> res!54228 e!71248)))

(assert (=> d!30779 (= res!54228 (and ((_ is Cons!1644) (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325)))) (= (_1!1221 (h!2242 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325))))) lt!55323)))))

(assert (=> d!30779 (= (containsKey!160 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325))) lt!55323) e!71248)))

(declare-fun b!109538 () Bool)

(declare-fun e!71249 () Bool)

(assert (=> b!109538 (= e!71248 e!71249)))

(declare-fun res!54229 () Bool)

(assert (=> b!109538 (=> (not res!54229) (not e!71249))))

(assert (=> b!109538 (= res!54229 (and (or (not ((_ is Cons!1644) (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325))))) (bvsle (_1!1221 (h!2242 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325))))) lt!55323)) ((_ is Cons!1644) (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325)))) (bvslt (_1!1221 (h!2242 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325))))) lt!55323)))))

(declare-fun b!109539 () Bool)

(assert (=> b!109539 (= e!71249 (containsKey!160 (t!5776 (toList!811 (+!148 lt!55319 (tuple2!2423 lt!55321 lt!55325)))) lt!55323))))

(assert (= (and d!30779 (not res!54228)) b!109538))

(assert (= (and b!109538 res!54229) b!109539))

(declare-fun m!124239 () Bool)

(assert (=> b!109539 m!124239))

(assert (=> d!30081 d!30779))

(declare-fun d!30781 () Bool)

(assert (=> d!30781 (= (apply!99 lt!55558 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1352 (getValueByKey!156 (toList!811 lt!55558) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4519 () Bool)

(assert (= bs!4519 d!30781))

(assert (=> bs!4519 m!123471))

(assert (=> bs!4519 m!123471))

(declare-fun m!124241 () Bool)

(assert (=> bs!4519 m!124241))

(assert (=> b!108147 d!30781))

(declare-fun d!30783 () Bool)

(declare-fun res!54230 () Bool)

(declare-fun e!71250 () Bool)

(assert (=> d!30783 (=> res!54230 e!71250)))

(assert (=> d!30783 (= res!54230 (and ((_ is Cons!1644) lt!55333) (= (_1!1221 (h!2242 lt!55333)) (_1!1221 lt!55249))))))

(assert (=> d!30783 (= (containsKey!160 lt!55333 (_1!1221 lt!55249)) e!71250)))

(declare-fun b!109540 () Bool)

(declare-fun e!71251 () Bool)

(assert (=> b!109540 (= e!71250 e!71251)))

(declare-fun res!54231 () Bool)

(assert (=> b!109540 (=> (not res!54231) (not e!71251))))

(assert (=> b!109540 (= res!54231 (and (or (not ((_ is Cons!1644) lt!55333)) (bvsle (_1!1221 (h!2242 lt!55333)) (_1!1221 lt!55249))) ((_ is Cons!1644) lt!55333) (bvslt (_1!1221 (h!2242 lt!55333)) (_1!1221 lt!55249))))))

(declare-fun b!109541 () Bool)

(assert (=> b!109541 (= e!71251 (containsKey!160 (t!5776 lt!55333) (_1!1221 lt!55249)))))

(assert (= (and d!30783 (not res!54230)) b!109540))

(assert (= (and b!109540 res!54231) b!109541))

(declare-fun m!124243 () Bool)

(assert (=> b!109541 m!124243))

(assert (=> b!108193 d!30783))

(declare-fun d!30785 () Bool)

(declare-fun lt!56407 () Bool)

(assert (=> d!30785 (= lt!56407 (select (content!110 lt!55337) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))))))

(declare-fun e!71252 () Bool)

(assert (=> d!30785 (= lt!56407 e!71252)))

(declare-fun res!54233 () Bool)

(assert (=> d!30785 (=> (not res!54233) (not e!71252))))

(assert (=> d!30785 (= res!54233 ((_ is Cons!1644) lt!55337))))

(assert (=> d!30785 (= (contains!835 lt!55337 (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))) lt!56407)))

(declare-fun b!109542 () Bool)

(declare-fun e!71253 () Bool)

(assert (=> b!109542 (= e!71252 e!71253)))

(declare-fun res!54232 () Bool)

(assert (=> b!109542 (=> res!54232 e!71253)))

(assert (=> b!109542 (= res!54232 (= (h!2242 lt!55337) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))))))

(declare-fun b!109543 () Bool)

(assert (=> b!109543 (= e!71253 (contains!835 (t!5776 lt!55337) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))))))

(assert (= (and d!30785 res!54233) b!109542))

(assert (= (and b!109542 (not res!54232)) b!109543))

(declare-fun m!124245 () Bool)

(assert (=> d!30785 m!124245))

(declare-fun m!124247 () Bool)

(assert (=> d!30785 m!124247))

(declare-fun m!124249 () Bool)

(assert (=> b!109543 m!124249))

(assert (=> b!108233 d!30785))

(declare-fun d!30787 () Bool)

(declare-fun e!71255 () Bool)

(assert (=> d!30787 e!71255))

(declare-fun res!54234 () Bool)

(assert (=> d!30787 (=> res!54234 e!71255)))

(declare-fun lt!56408 () Bool)

(assert (=> d!30787 (= res!54234 (not lt!56408))))

(declare-fun lt!56409 () Bool)

(assert (=> d!30787 (= lt!56408 lt!56409)))

(declare-fun lt!56410 () Unit!3339)

(declare-fun e!71254 () Unit!3339)

(assert (=> d!30787 (= lt!56410 e!71254)))

(declare-fun c!19384 () Bool)

(assert (=> d!30787 (= c!19384 lt!56409)))

(assert (=> d!30787 (= lt!56409 (containsKey!160 (toList!811 lt!55807) (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30787 (= (contains!834 lt!55807 (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!56408)))

(declare-fun b!109544 () Bool)

(declare-fun lt!56411 () Unit!3339)

(assert (=> b!109544 (= e!71254 lt!56411)))

(assert (=> b!109544 (= lt!56411 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55807) (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> b!109544 (isDefined!110 (getValueByKey!156 (toList!811 lt!55807) (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109545 () Bool)

(declare-fun Unit!3413 () Unit!3339)

(assert (=> b!109545 (= e!71254 Unit!3413)))

(declare-fun b!109546 () Bool)

(assert (=> b!109546 (= e!71255 (isDefined!110 (getValueByKey!156 (toList!811 lt!55807) (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (= (and d!30787 c!19384) b!109544))

(assert (= (and d!30787 (not c!19384)) b!109545))

(assert (= (and d!30787 (not res!54234)) b!109546))

(declare-fun m!124251 () Bool)

(assert (=> d!30787 m!124251))

(declare-fun m!124253 () Bool)

(assert (=> b!109544 m!124253))

(assert (=> b!109544 m!122153))

(assert (=> b!109544 m!122153))

(declare-fun m!124255 () Bool)

(assert (=> b!109544 m!124255))

(assert (=> b!109546 m!122153))

(assert (=> b!109546 m!122153))

(assert (=> b!109546 m!124255))

(assert (=> d!30027 d!30787))

(declare-fun d!30789 () Bool)

(declare-fun c!19385 () Bool)

(assert (=> d!30789 (= c!19385 (and ((_ is Cons!1644) lt!55805) (= (_1!1221 (h!2242 lt!55805)) (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!71256 () Option!162)

(assert (=> d!30789 (= (getValueByKey!156 lt!55805 (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) e!71256)))

(declare-fun b!109549 () Bool)

(declare-fun e!71257 () Option!162)

(assert (=> b!109549 (= e!71257 (getValueByKey!156 (t!5776 lt!55805) (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109550 () Bool)

(assert (=> b!109550 (= e!71257 None!160)))

(declare-fun b!109548 () Bool)

(assert (=> b!109548 (= e!71256 e!71257)))

(declare-fun c!19386 () Bool)

(assert (=> b!109548 (= c!19386 (and ((_ is Cons!1644) lt!55805) (not (= (_1!1221 (h!2242 lt!55805)) (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun b!109547 () Bool)

(assert (=> b!109547 (= e!71256 (Some!161 (_2!1221 (h!2242 lt!55805))))))

(assert (= (and d!30789 c!19385) b!109547))

(assert (= (and d!30789 (not c!19385)) b!109548))

(assert (= (and b!109548 c!19386) b!109549))

(assert (= (and b!109548 (not c!19386)) b!109550))

(declare-fun m!124257 () Bool)

(assert (=> b!109549 m!124257))

(assert (=> d!30027 d!30789))

(declare-fun d!30791 () Bool)

(assert (=> d!30791 (= (getValueByKey!156 lt!55805 (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun lt!56412 () Unit!3339)

(assert (=> d!30791 (= lt!56412 (choose!680 lt!55805 (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun e!71258 () Bool)

(assert (=> d!30791 e!71258))

(declare-fun res!54235 () Bool)

(assert (=> d!30791 (=> (not res!54235) (not e!71258))))

(assert (=> d!30791 (= res!54235 (isStrictlySorted!305 lt!55805))))

(assert (=> d!30791 (= (lemmaContainsTupThenGetReturnValue!74 lt!55805 (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!56412)))

(declare-fun b!109551 () Bool)

(declare-fun res!54236 () Bool)

(assert (=> b!109551 (=> (not res!54236) (not e!71258))))

(assert (=> b!109551 (= res!54236 (containsKey!160 lt!55805 (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109552 () Bool)

(assert (=> b!109552 (= e!71258 (contains!835 lt!55805 (tuple2!2423 (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (= (and d!30791 res!54235) b!109551))

(assert (= (and b!109551 res!54236) b!109552))

(assert (=> d!30791 m!122147))

(declare-fun m!124259 () Bool)

(assert (=> d!30791 m!124259))

(declare-fun m!124261 () Bool)

(assert (=> d!30791 m!124261))

(declare-fun m!124263 () Bool)

(assert (=> b!109551 m!124263))

(declare-fun m!124265 () Bool)

(assert (=> b!109552 m!124265))

(assert (=> d!30027 d!30791))

(declare-fun c!19387 () Bool)

(declare-fun b!109553 () Bool)

(assert (=> b!109553 (= c!19387 (and ((_ is Cons!1644) (toList!811 lt!55480)) (bvsgt (_1!1221 (h!2242 (toList!811 lt!55480))) (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!71259 () List!1648)

(declare-fun e!71260 () List!1648)

(assert (=> b!109553 (= e!71259 e!71260)))

(declare-fun b!109554 () Bool)

(declare-fun e!71261 () List!1648)

(declare-fun call!11646 () List!1648)

(assert (=> b!109554 (= e!71261 call!11646)))

(declare-fun c!19388 () Bool)

(declare-fun e!71263 () List!1648)

(declare-fun bm!11642 () Bool)

(assert (=> bm!11642 (= call!11646 ($colon$colon!81 e!71263 (ite c!19388 (h!2242 (toList!811 lt!55480)) (tuple2!2423 (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun c!19389 () Bool)

(assert (=> bm!11642 (= c!19389 c!19388)))

(declare-fun b!109555 () Bool)

(declare-fun call!11645 () List!1648)

(assert (=> b!109555 (= e!71260 call!11645)))

(declare-fun b!109556 () Bool)

(declare-fun call!11647 () List!1648)

(assert (=> b!109556 (= e!71259 call!11647)))

(declare-fun d!30793 () Bool)

(declare-fun e!71262 () Bool)

(assert (=> d!30793 e!71262))

(declare-fun res!54237 () Bool)

(assert (=> d!30793 (=> (not res!54237) (not e!71262))))

(declare-fun lt!56413 () List!1648)

(assert (=> d!30793 (= res!54237 (isStrictlySorted!305 lt!56413))))

(assert (=> d!30793 (= lt!56413 e!71261)))

(assert (=> d!30793 (= c!19388 (and ((_ is Cons!1644) (toList!811 lt!55480)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55480))) (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (=> d!30793 (isStrictlySorted!305 (toList!811 lt!55480))))

(assert (=> d!30793 (= (insertStrictlySorted!76 (toList!811 lt!55480) (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!56413)))

(declare-fun b!109557 () Bool)

(assert (=> b!109557 (= e!71261 e!71259)))

(declare-fun c!19390 () Bool)

(assert (=> b!109557 (= c!19390 (and ((_ is Cons!1644) (toList!811 lt!55480)) (= (_1!1221 (h!2242 (toList!811 lt!55480))) (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!109558 () Bool)

(declare-fun res!54238 () Bool)

(assert (=> b!109558 (=> (not res!54238) (not e!71262))))

(assert (=> b!109558 (= res!54238 (containsKey!160 lt!56413 (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun bm!11643 () Bool)

(assert (=> bm!11643 (= call!11647 call!11646)))

(declare-fun bm!11644 () Bool)

(assert (=> bm!11644 (= call!11645 call!11647)))

(declare-fun b!109559 () Bool)

(assert (=> b!109559 (= e!71263 (insertStrictlySorted!76 (t!5776 (toList!811 lt!55480)) (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109560 () Bool)

(assert (=> b!109560 (= e!71260 call!11645)))

(declare-fun b!109561 () Bool)

(assert (=> b!109561 (= e!71262 (contains!835 lt!56413 (tuple2!2423 (_1!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55491 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!109562 () Bool)

(assert (=> b!109562 (= e!71263 (ite c!19390 (t!5776 (toList!811 lt!55480)) (ite c!19387 (Cons!1644 (h!2242 (toList!811 lt!55480)) (t!5776 (toList!811 lt!55480))) Nil!1645)))))

(assert (= (and d!30793 c!19388) b!109554))

(assert (= (and d!30793 (not c!19388)) b!109557))

(assert (= (and b!109557 c!19390) b!109556))

(assert (= (and b!109557 (not c!19390)) b!109553))

(assert (= (and b!109553 c!19387) b!109560))

(assert (= (and b!109553 (not c!19387)) b!109555))

(assert (= (or b!109560 b!109555) bm!11644))

(assert (= (or b!109556 bm!11644) bm!11643))

(assert (= (or b!109554 bm!11643) bm!11642))

(assert (= (and bm!11642 c!19389) b!109559))

(assert (= (and bm!11642 (not c!19389)) b!109562))

(assert (= (and d!30793 res!54237) b!109558))

(assert (= (and b!109558 res!54238) b!109561))

(declare-fun m!124267 () Bool)

(assert (=> b!109561 m!124267))

(declare-fun m!124269 () Bool)

(assert (=> b!109558 m!124269))

(declare-fun m!124271 () Bool)

(assert (=> bm!11642 m!124271))

(declare-fun m!124273 () Bool)

(assert (=> d!30793 m!124273))

(declare-fun m!124275 () Bool)

(assert (=> d!30793 m!124275))

(declare-fun m!124277 () Bool)

(assert (=> b!109559 m!124277))

(assert (=> d!30027 d!30793))

(declare-fun d!30795 () Bool)

(declare-fun lt!56414 () Bool)

(assert (=> d!30795 (= lt!56414 (select (content!110 lt!55329) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))))))

(declare-fun e!71264 () Bool)

(assert (=> d!30795 (= lt!56414 e!71264)))

(declare-fun res!54240 () Bool)

(assert (=> d!30795 (=> (not res!54240) (not e!71264))))

(assert (=> d!30795 (= res!54240 ((_ is Cons!1644) lt!55329))))

(assert (=> d!30795 (= (contains!835 lt!55329 (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))) lt!56414)))

(declare-fun b!109563 () Bool)

(declare-fun e!71265 () Bool)

(assert (=> b!109563 (= e!71264 e!71265)))

(declare-fun res!54239 () Bool)

(assert (=> b!109563 (=> res!54239 e!71265)))

(assert (=> b!109563 (= res!54239 (= (h!2242 lt!55329) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))))))

(declare-fun b!109564 () Bool)

(assert (=> b!109564 (= e!71265 (contains!835 (t!5776 lt!55329) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))))))

(assert (= (and d!30795 res!54240) b!109563))

(assert (= (and b!109563 (not res!54239)) b!109564))

(declare-fun m!124279 () Bool)

(assert (=> d!30795 m!124279))

(declare-fun m!124281 () Bool)

(assert (=> d!30795 m!124281))

(declare-fun m!124283 () Bool)

(assert (=> b!109564 m!124283))

(assert (=> b!108468 d!30795))

(declare-fun d!30797 () Bool)

(declare-fun lt!56415 () Bool)

(assert (=> d!30797 (= lt!56415 (select (content!110 lt!55626) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))))))

(declare-fun e!71266 () Bool)

(assert (=> d!30797 (= lt!56415 e!71266)))

(declare-fun res!54242 () Bool)

(assert (=> d!30797 (=> (not res!54242) (not e!71266))))

(assert (=> d!30797 (= res!54242 ((_ is Cons!1644) lt!55626))))

(assert (=> d!30797 (= (contains!835 lt!55626 (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))) lt!56415)))

(declare-fun b!109565 () Bool)

(declare-fun e!71267 () Bool)

(assert (=> b!109565 (= e!71266 e!71267)))

(declare-fun res!54241 () Bool)

(assert (=> b!109565 (=> res!54241 e!71267)))

(assert (=> b!109565 (= res!54241 (= (h!2242 lt!55626) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))))))

(declare-fun b!109566 () Bool)

(assert (=> b!109566 (= e!71267 (contains!835 (t!5776 lt!55626) (tuple2!2423 (_1!1221 lt!55252) (_2!1221 lt!55252))))))

(assert (= (and d!30797 res!54242) b!109565))

(assert (= (and b!109565 (not res!54241)) b!109566))

(declare-fun m!124285 () Bool)

(assert (=> d!30797 m!124285))

(declare-fun m!124287 () Bool)

(assert (=> d!30797 m!124287))

(declare-fun m!124289 () Bool)

(assert (=> b!109566 m!124289))

(assert (=> b!108290 d!30797))

(declare-fun b!109567 () Bool)

(declare-fun e!71268 () Bool)

(declare-fun call!11648 () Bool)

(assert (=> b!109567 (= e!71268 call!11648)))

(declare-fun b!109568 () Bool)

(assert (=> b!109568 (= e!71268 call!11648)))

(declare-fun bm!11645 () Bool)

(declare-fun c!19391 () Bool)

(assert (=> bm!11645 (= call!11648 (arrayNoDuplicates!0 (_keys!4316 (_2!1222 lt!55429)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19391 (Cons!1643 (select (arr!2074 (_keys!4316 (_2!1222 lt!55429))) #b00000000000000000000000000000000) Nil!1644) Nil!1644)))))

(declare-fun d!30799 () Bool)

(declare-fun res!54244 () Bool)

(declare-fun e!71269 () Bool)

(assert (=> d!30799 (=> res!54244 e!71269)))

(assert (=> d!30799 (= res!54244 (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 (_2!1222 lt!55429)))))))

(assert (=> d!30799 (= (arrayNoDuplicates!0 (_keys!4316 (_2!1222 lt!55429)) #b00000000000000000000000000000000 Nil!1644) e!71269)))

(declare-fun b!109569 () Bool)

(declare-fun e!71270 () Bool)

(assert (=> b!109569 (= e!71270 (contains!836 Nil!1644 (select (arr!2074 (_keys!4316 (_2!1222 lt!55429))) #b00000000000000000000000000000000)))))

(declare-fun b!109570 () Bool)

(declare-fun e!71271 () Bool)

(assert (=> b!109570 (= e!71269 e!71271)))

(declare-fun res!54243 () Bool)

(assert (=> b!109570 (=> (not res!54243) (not e!71271))))

(assert (=> b!109570 (= res!54243 (not e!71270))))

(declare-fun res!54245 () Bool)

(assert (=> b!109570 (=> (not res!54245) (not e!71270))))

(assert (=> b!109570 (= res!54245 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (_2!1222 lt!55429))) #b00000000000000000000000000000000)))))

(declare-fun b!109571 () Bool)

(assert (=> b!109571 (= e!71271 e!71268)))

(assert (=> b!109571 (= c!19391 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (_2!1222 lt!55429))) #b00000000000000000000000000000000)))))

(assert (= (and d!30799 (not res!54244)) b!109570))

(assert (= (and b!109570 res!54245) b!109569))

(assert (= (and b!109570 res!54243) b!109571))

(assert (= (and b!109571 c!19391) b!109567))

(assert (= (and b!109571 (not c!19391)) b!109568))

(assert (= (or b!109567 b!109568) bm!11645))

(assert (=> bm!11645 m!122519))

(declare-fun m!124291 () Bool)

(assert (=> bm!11645 m!124291))

(assert (=> b!109569 m!122519))

(assert (=> b!109569 m!122519))

(declare-fun m!124293 () Bool)

(assert (=> b!109569 m!124293))

(assert (=> b!109570 m!122519))

(assert (=> b!109570 m!122519))

(assert (=> b!109570 m!122521))

(assert (=> b!109571 m!122519))

(assert (=> b!109571 m!122519))

(assert (=> b!109571 m!122521))

(assert (=> b!108272 d!30799))

(declare-fun d!30801 () Bool)

(declare-fun e!71273 () Bool)

(assert (=> d!30801 e!71273))

(declare-fun res!54246 () Bool)

(assert (=> d!30801 (=> res!54246 e!71273)))

(declare-fun lt!56416 () Bool)

(assert (=> d!30801 (= res!54246 (not lt!56416))))

(declare-fun lt!56417 () Bool)

(assert (=> d!30801 (= lt!56416 lt!56417)))

(declare-fun lt!56418 () Unit!3339)

(declare-fun e!71272 () Unit!3339)

(assert (=> d!30801 (= lt!56418 e!71272)))

(declare-fun c!19392 () Bool)

(assert (=> d!30801 (= c!19392 lt!56417)))

(assert (=> d!30801 (= lt!56417 (containsKey!160 (toList!811 lt!55585) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30801 (= (contains!834 lt!55585 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!56416)))

(declare-fun b!109572 () Bool)

(declare-fun lt!56419 () Unit!3339)

(assert (=> b!109572 (= e!71272 lt!56419)))

(assert (=> b!109572 (= lt!56419 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55585) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> b!109572 (isDefined!110 (getValueByKey!156 (toList!811 lt!55585) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109573 () Bool)

(declare-fun Unit!3414 () Unit!3339)

(assert (=> b!109573 (= e!71272 Unit!3414)))

(declare-fun b!109574 () Bool)

(assert (=> b!109574 (= e!71273 (isDefined!110 (getValueByKey!156 (toList!811 lt!55585) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (= (and d!30801 c!19392) b!109572))

(assert (= (and d!30801 (not c!19392)) b!109573))

(assert (= (and d!30801 (not res!54246)) b!109574))

(declare-fun m!124295 () Bool)

(assert (=> d!30801 m!124295))

(declare-fun m!124297 () Bool)

(assert (=> b!109572 m!124297))

(assert (=> b!109572 m!121707))

(assert (=> b!109572 m!121707))

(declare-fun m!124299 () Bool)

(assert (=> b!109572 m!124299))

(assert (=> b!109574 m!121707))

(assert (=> b!109574 m!121707))

(assert (=> b!109574 m!124299))

(assert (=> d!29923 d!30801))

(declare-fun d!30803 () Bool)

(declare-fun c!19393 () Bool)

(assert (=> d!30803 (= c!19393 (and ((_ is Cons!1644) lt!55583) (= (_1!1221 (h!2242 lt!55583)) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!71274 () Option!162)

(assert (=> d!30803 (= (getValueByKey!156 lt!55583 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) e!71274)))

(declare-fun b!109577 () Bool)

(declare-fun e!71275 () Option!162)

(assert (=> b!109577 (= e!71275 (getValueByKey!156 (t!5776 lt!55583) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109578 () Bool)

(assert (=> b!109578 (= e!71275 None!160)))

(declare-fun b!109576 () Bool)

(assert (=> b!109576 (= e!71274 e!71275)))

(declare-fun c!19394 () Bool)

(assert (=> b!109576 (= c!19394 (and ((_ is Cons!1644) lt!55583) (not (= (_1!1221 (h!2242 lt!55583)) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun b!109575 () Bool)

(assert (=> b!109575 (= e!71274 (Some!161 (_2!1221 (h!2242 lt!55583))))))

(assert (= (and d!30803 c!19393) b!109575))

(assert (= (and d!30803 (not c!19393)) b!109576))

(assert (= (and b!109576 c!19394) b!109577))

(assert (= (and b!109576 (not c!19394)) b!109578))

(declare-fun m!124301 () Bool)

(assert (=> b!109577 m!124301))

(assert (=> d!29923 d!30803))

(declare-fun d!30805 () Bool)

(assert (=> d!30805 (= (getValueByKey!156 lt!55583 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun lt!56420 () Unit!3339)

(assert (=> d!30805 (= lt!56420 (choose!680 lt!55583 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun e!71276 () Bool)

(assert (=> d!30805 e!71276))

(declare-fun res!54247 () Bool)

(assert (=> d!30805 (=> (not res!54247) (not e!71276))))

(assert (=> d!30805 (= res!54247 (isStrictlySorted!305 lt!55583))))

(assert (=> d!30805 (= (lemmaContainsTupThenGetReturnValue!74 lt!55583 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!56420)))

(declare-fun b!109579 () Bool)

(declare-fun res!54248 () Bool)

(assert (=> b!109579 (=> (not res!54248) (not e!71276))))

(assert (=> b!109579 (= res!54248 (containsKey!160 lt!55583 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109580 () Bool)

(assert (=> b!109580 (= e!71276 (contains!835 lt!55583 (tuple2!2423 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (= (and d!30805 res!54247) b!109579))

(assert (= (and b!109579 res!54248) b!109580))

(assert (=> d!30805 m!121701))

(declare-fun m!124303 () Bool)

(assert (=> d!30805 m!124303))

(declare-fun m!124305 () Bool)

(assert (=> d!30805 m!124305))

(declare-fun m!124307 () Bool)

(assert (=> b!109579 m!124307))

(declare-fun m!124309 () Bool)

(assert (=> b!109580 m!124309))

(assert (=> d!29923 d!30805))

(declare-fun b!109581 () Bool)

(declare-fun c!19395 () Bool)

(assert (=> b!109581 (= c!19395 (and ((_ is Cons!1644) (toList!811 call!11460)) (bvsgt (_1!1221 (h!2242 (toList!811 call!11460))) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!71277 () List!1648)

(declare-fun e!71278 () List!1648)

(assert (=> b!109581 (= e!71277 e!71278)))

(declare-fun b!109582 () Bool)

(declare-fun e!71279 () List!1648)

(declare-fun call!11650 () List!1648)

(assert (=> b!109582 (= e!71279 call!11650)))

(declare-fun e!71281 () List!1648)

(declare-fun bm!11646 () Bool)

(declare-fun c!19396 () Bool)

(assert (=> bm!11646 (= call!11650 ($colon$colon!81 e!71281 (ite c!19396 (h!2242 (toList!811 call!11460)) (tuple2!2423 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun c!19397 () Bool)

(assert (=> bm!11646 (= c!19397 c!19396)))

(declare-fun b!109583 () Bool)

(declare-fun call!11649 () List!1648)

(assert (=> b!109583 (= e!71278 call!11649)))

(declare-fun b!109584 () Bool)

(declare-fun call!11651 () List!1648)

(assert (=> b!109584 (= e!71277 call!11651)))

(declare-fun d!30807 () Bool)

(declare-fun e!71280 () Bool)

(assert (=> d!30807 e!71280))

(declare-fun res!54249 () Bool)

(assert (=> d!30807 (=> (not res!54249) (not e!71280))))

(declare-fun lt!56421 () List!1648)

(assert (=> d!30807 (= res!54249 (isStrictlySorted!305 lt!56421))))

(assert (=> d!30807 (= lt!56421 e!71279)))

(assert (=> d!30807 (= c!19396 (and ((_ is Cons!1644) (toList!811 call!11460)) (bvslt (_1!1221 (h!2242 (toList!811 call!11460))) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (=> d!30807 (isStrictlySorted!305 (toList!811 call!11460))))

(assert (=> d!30807 (= (insertStrictlySorted!76 (toList!811 call!11460) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!56421)))

(declare-fun b!109585 () Bool)

(assert (=> b!109585 (= e!71279 e!71277)))

(declare-fun c!19398 () Bool)

(assert (=> b!109585 (= c!19398 (and ((_ is Cons!1644) (toList!811 call!11460)) (= (_1!1221 (h!2242 (toList!811 call!11460))) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!109586 () Bool)

(declare-fun res!54250 () Bool)

(assert (=> b!109586 (=> (not res!54250) (not e!71280))))

(assert (=> b!109586 (= res!54250 (containsKey!160 lt!56421 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun bm!11647 () Bool)

(assert (=> bm!11647 (= call!11651 call!11650)))

(declare-fun bm!11648 () Bool)

(assert (=> bm!11648 (= call!11649 call!11651)))

(declare-fun b!109587 () Bool)

(assert (=> b!109587 (= e!71281 (insertStrictlySorted!76 (t!5776 (toList!811 call!11460)) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109588 () Bool)

(assert (=> b!109588 (= e!71278 call!11649)))

(declare-fun b!109589 () Bool)

(assert (=> b!109589 (= e!71280 (contains!835 lt!56421 (tuple2!2423 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!109590 () Bool)

(assert (=> b!109590 (= e!71281 (ite c!19398 (t!5776 (toList!811 call!11460)) (ite c!19395 (Cons!1644 (h!2242 (toList!811 call!11460)) (t!5776 (toList!811 call!11460))) Nil!1645)))))

(assert (= (and d!30807 c!19396) b!109582))

(assert (= (and d!30807 (not c!19396)) b!109585))

(assert (= (and b!109585 c!19398) b!109584))

(assert (= (and b!109585 (not c!19398)) b!109581))

(assert (= (and b!109581 c!19395) b!109588))

(assert (= (and b!109581 (not c!19395)) b!109583))

(assert (= (or b!109588 b!109583) bm!11648))

(assert (= (or b!109584 bm!11648) bm!11647))

(assert (= (or b!109582 bm!11647) bm!11646))

(assert (= (and bm!11646 c!19397) b!109587))

(assert (= (and bm!11646 (not c!19397)) b!109590))

(assert (= (and d!30807 res!54249) b!109586))

(assert (= (and b!109586 res!54250) b!109589))

(declare-fun m!124311 () Bool)

(assert (=> b!109589 m!124311))

(declare-fun m!124313 () Bool)

(assert (=> b!109586 m!124313))

(declare-fun m!124315 () Bool)

(assert (=> bm!11646 m!124315))

(declare-fun m!124317 () Bool)

(assert (=> d!30807 m!124317))

(declare-fun m!124319 () Bool)

(assert (=> d!30807 m!124319))

(declare-fun m!124321 () Bool)

(assert (=> b!109587 m!124321))

(assert (=> d!29923 d!30807))

(declare-fun d!30809 () Bool)

(declare-fun e!71283 () Bool)

(assert (=> d!30809 e!71283))

(declare-fun res!54251 () Bool)

(assert (=> d!30809 (=> res!54251 e!71283)))

(declare-fun lt!56422 () Bool)

(assert (=> d!30809 (= res!54251 (not lt!56422))))

(declare-fun lt!56423 () Bool)

(assert (=> d!30809 (= lt!56422 lt!56423)))

(declare-fun lt!56424 () Unit!3339)

(declare-fun e!71282 () Unit!3339)

(assert (=> d!30809 (= lt!56424 e!71282)))

(declare-fun c!19399 () Bool)

(assert (=> d!30809 (= c!19399 lt!56423)))

(assert (=> d!30809 (= lt!56423 (containsKey!160 (toList!811 lt!55783) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30809 (= (contains!834 lt!55783 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!56422)))

(declare-fun b!109591 () Bool)

(declare-fun lt!56425 () Unit!3339)

(assert (=> b!109591 (= e!71282 lt!56425)))

(assert (=> b!109591 (= lt!56425 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55783) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> b!109591 (isDefined!110 (getValueByKey!156 (toList!811 lt!55783) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109592 () Bool)

(declare-fun Unit!3415 () Unit!3339)

(assert (=> b!109592 (= e!71282 Unit!3415)))

(declare-fun b!109593 () Bool)

(assert (=> b!109593 (= e!71283 (isDefined!110 (getValueByKey!156 (toList!811 lt!55783) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (= (and d!30809 c!19399) b!109591))

(assert (= (and d!30809 (not c!19399)) b!109592))

(assert (= (and d!30809 (not res!54251)) b!109593))

(declare-fun m!124323 () Bool)

(assert (=> d!30809 m!124323))

(declare-fun m!124325 () Bool)

(assert (=> b!109591 m!124325))

(assert (=> b!109591 m!122077))

(assert (=> b!109591 m!122077))

(declare-fun m!124327 () Bool)

(assert (=> b!109591 m!124327))

(assert (=> b!109593 m!122077))

(assert (=> b!109593 m!122077))

(assert (=> b!109593 m!124327))

(assert (=> d!30007 d!30809))

(declare-fun d!30811 () Bool)

(declare-fun c!19400 () Bool)

(assert (=> d!30811 (= c!19400 (and ((_ is Cons!1644) lt!55781) (= (_1!1221 (h!2242 lt!55781)) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!71284 () Option!162)

(assert (=> d!30811 (= (getValueByKey!156 lt!55781 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) e!71284)))

(declare-fun b!109596 () Bool)

(declare-fun e!71285 () Option!162)

(assert (=> b!109596 (= e!71285 (getValueByKey!156 (t!5776 lt!55781) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109597 () Bool)

(assert (=> b!109597 (= e!71285 None!160)))

(declare-fun b!109595 () Bool)

(assert (=> b!109595 (= e!71284 e!71285)))

(declare-fun c!19401 () Bool)

(assert (=> b!109595 (= c!19401 (and ((_ is Cons!1644) lt!55781) (not (= (_1!1221 (h!2242 lt!55781)) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun b!109594 () Bool)

(assert (=> b!109594 (= e!71284 (Some!161 (_2!1221 (h!2242 lt!55781))))))

(assert (= (and d!30811 c!19400) b!109594))

(assert (= (and d!30811 (not c!19400)) b!109595))

(assert (= (and b!109595 c!19401) b!109596))

(assert (= (and b!109595 (not c!19401)) b!109597))

(declare-fun m!124329 () Bool)

(assert (=> b!109596 m!124329))

(assert (=> d!30007 d!30811))

(declare-fun d!30813 () Bool)

(assert (=> d!30813 (= (getValueByKey!156 lt!55781 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun lt!56426 () Unit!3339)

(assert (=> d!30813 (= lt!56426 (choose!680 lt!55781 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun e!71286 () Bool)

(assert (=> d!30813 e!71286))

(declare-fun res!54252 () Bool)

(assert (=> d!30813 (=> (not res!54252) (not e!71286))))

(assert (=> d!30813 (= res!54252 (isStrictlySorted!305 lt!55781))))

(assert (=> d!30813 (= (lemmaContainsTupThenGetReturnValue!74 lt!55781 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!56426)))

(declare-fun b!109598 () Bool)

(declare-fun res!54253 () Bool)

(assert (=> b!109598 (=> (not res!54253) (not e!71286))))

(assert (=> b!109598 (= res!54253 (containsKey!160 lt!55781 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109599 () Bool)

(assert (=> b!109599 (= e!71286 (contains!835 lt!55781 (tuple2!2423 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (= (and d!30813 res!54252) b!109598))

(assert (= (and b!109598 res!54253) b!109599))

(assert (=> d!30813 m!122071))

(declare-fun m!124331 () Bool)

(assert (=> d!30813 m!124331))

(declare-fun m!124333 () Bool)

(assert (=> d!30813 m!124333))

(declare-fun m!124335 () Bool)

(assert (=> b!109598 m!124335))

(declare-fun m!124337 () Bool)

(assert (=> b!109599 m!124337))

(assert (=> d!30007 d!30813))

(declare-fun b!109600 () Bool)

(declare-fun c!19402 () Bool)

(assert (=> b!109600 (= c!19402 (and ((_ is Cons!1644) (toList!811 lt!55250)) (bvsgt (_1!1221 (h!2242 (toList!811 lt!55250))) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!71287 () List!1648)

(declare-fun e!71288 () List!1648)

(assert (=> b!109600 (= e!71287 e!71288)))

(declare-fun b!109601 () Bool)

(declare-fun e!71289 () List!1648)

(declare-fun call!11653 () List!1648)

(assert (=> b!109601 (= e!71289 call!11653)))

(declare-fun bm!11649 () Bool)

(declare-fun e!71291 () List!1648)

(declare-fun c!19403 () Bool)

(assert (=> bm!11649 (= call!11653 ($colon$colon!81 e!71291 (ite c!19403 (h!2242 (toList!811 lt!55250)) (tuple2!2423 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun c!19404 () Bool)

(assert (=> bm!11649 (= c!19404 c!19403)))

(declare-fun b!109602 () Bool)

(declare-fun call!11652 () List!1648)

(assert (=> b!109602 (= e!71288 call!11652)))

(declare-fun b!109603 () Bool)

(declare-fun call!11654 () List!1648)

(assert (=> b!109603 (= e!71287 call!11654)))

(declare-fun d!30815 () Bool)

(declare-fun e!71290 () Bool)

(assert (=> d!30815 e!71290))

(declare-fun res!54254 () Bool)

(assert (=> d!30815 (=> (not res!54254) (not e!71290))))

(declare-fun lt!56427 () List!1648)

(assert (=> d!30815 (= res!54254 (isStrictlySorted!305 lt!56427))))

(assert (=> d!30815 (= lt!56427 e!71289)))

(assert (=> d!30815 (= c!19403 (and ((_ is Cons!1644) (toList!811 lt!55250)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55250))) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (=> d!30815 (isStrictlySorted!305 (toList!811 lt!55250))))

(assert (=> d!30815 (= (insertStrictlySorted!76 (toList!811 lt!55250) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!56427)))

(declare-fun b!109604 () Bool)

(assert (=> b!109604 (= e!71289 e!71287)))

(declare-fun c!19405 () Bool)

(assert (=> b!109604 (= c!19405 (and ((_ is Cons!1644) (toList!811 lt!55250)) (= (_1!1221 (h!2242 (toList!811 lt!55250))) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!109605 () Bool)

(declare-fun res!54255 () Bool)

(assert (=> b!109605 (=> (not res!54255) (not e!71290))))

(assert (=> b!109605 (= res!54255 (containsKey!160 lt!56427 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun bm!11650 () Bool)

(assert (=> bm!11650 (= call!11654 call!11653)))

(declare-fun bm!11651 () Bool)

(assert (=> bm!11651 (= call!11652 call!11654)))

(declare-fun b!109606 () Bool)

(assert (=> b!109606 (= e!71291 (insertStrictlySorted!76 (t!5776 (toList!811 lt!55250)) (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109607 () Bool)

(assert (=> b!109607 (= e!71288 call!11652)))

(declare-fun b!109608 () Bool)

(assert (=> b!109608 (= e!71290 (contains!835 lt!56427 (tuple2!2423 (_1!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!109609 () Bool)

(assert (=> b!109609 (= e!71291 (ite c!19405 (t!5776 (toList!811 lt!55250)) (ite c!19402 (Cons!1644 (h!2242 (toList!811 lt!55250)) (t!5776 (toList!811 lt!55250))) Nil!1645)))))

(assert (= (and d!30815 c!19403) b!109601))

(assert (= (and d!30815 (not c!19403)) b!109604))

(assert (= (and b!109604 c!19405) b!109603))

(assert (= (and b!109604 (not c!19405)) b!109600))

(assert (= (and b!109600 c!19402) b!109607))

(assert (= (and b!109600 (not c!19402)) b!109602))

(assert (= (or b!109607 b!109602) bm!11651))

(assert (= (or b!109603 bm!11651) bm!11650))

(assert (= (or b!109601 bm!11650) bm!11649))

(assert (= (and bm!11649 c!19404) b!109606))

(assert (= (and bm!11649 (not c!19404)) b!109609))

(assert (= (and d!30815 res!54254) b!109605))

(assert (= (and b!109605 res!54255) b!109608))

(declare-fun m!124339 () Bool)

(assert (=> b!109608 m!124339))

(declare-fun m!124341 () Bool)

(assert (=> b!109605 m!124341))

(declare-fun m!124343 () Bool)

(assert (=> bm!11649 m!124343))

(declare-fun m!124345 () Bool)

(assert (=> d!30815 m!124345))

(assert (=> d!30815 m!121775))

(declare-fun m!124347 () Bool)

(assert (=> b!109606 m!124347))

(assert (=> d!30007 d!30815))

(assert (=> b!108462 d!30229))

(assert (=> b!108462 d!29963))

(declare-fun d!30817 () Bool)

(declare-fun e!71292 () Bool)

(assert (=> d!30817 e!71292))

(declare-fun res!54256 () Bool)

(assert (=> d!30817 (=> (not res!54256) (not e!71292))))

(declare-fun lt!56430 () ListLongMap!1591)

(assert (=> d!30817 (= res!54256 (contains!834 lt!56430 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(declare-fun lt!56428 () List!1648)

(assert (=> d!30817 (= lt!56430 (ListLongMap!1592 lt!56428))))

(declare-fun lt!56429 () Unit!3339)

(declare-fun lt!56431 () Unit!3339)

(assert (=> d!30817 (= lt!56429 lt!56431)))

(assert (=> d!30817 (= (getValueByKey!156 lt!56428 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(assert (=> d!30817 (= lt!56431 (lemmaContainsTupThenGetReturnValue!74 lt!56428 (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))) (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(assert (=> d!30817 (= lt!56428 (insertStrictlySorted!76 (toList!811 call!11470) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))) (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))))))

(assert (=> d!30817 (= (+!148 call!11470 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))) lt!56430)))

(declare-fun b!109610 () Bool)

(declare-fun res!54257 () Bool)

(assert (=> b!109610 (=> (not res!54257) (not e!71292))))

(assert (=> b!109610 (= res!54257 (= (getValueByKey!156 (toList!811 lt!56430) (_1!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16)))) (Some!161 (_2!1221 (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))))

(declare-fun b!109611 () Bool)

(assert (=> b!109611 (= e!71292 (contains!835 (toList!811 lt!56430) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2479 newMap!16))))))

(assert (= (and d!30817 res!54256) b!109610))

(assert (= (and b!109610 res!54257) b!109611))

(declare-fun m!124349 () Bool)

(assert (=> d!30817 m!124349))

(declare-fun m!124351 () Bool)

(assert (=> d!30817 m!124351))

(declare-fun m!124353 () Bool)

(assert (=> d!30817 m!124353))

(declare-fun m!124355 () Bool)

(assert (=> d!30817 m!124355))

(declare-fun m!124357 () Bool)

(assert (=> b!109610 m!124357))

(declare-fun m!124359 () Bool)

(assert (=> b!109611 m!124359))

(assert (=> b!108077 d!30817))

(declare-fun b!109612 () Bool)

(declare-fun e!71293 () Bool)

(declare-fun call!11655 () Bool)

(assert (=> b!109612 (= e!71293 call!11655)))

(declare-fun b!109613 () Bool)

(assert (=> b!109613 (= e!71293 call!11655)))

(declare-fun bm!11652 () Bool)

(declare-fun c!19406 () Bool)

(assert (=> bm!11652 (= call!11655 (arrayNoDuplicates!0 (_keys!4316 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19406 (Cons!1643 (select (arr!2074 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!18978 (Cons!1643 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) Nil!1644) Nil!1644)) (ite c!18978 (Cons!1643 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) Nil!1644) Nil!1644))))))

(declare-fun d!30819 () Bool)

(declare-fun res!54259 () Bool)

(declare-fun e!71294 () Bool)

(assert (=> d!30819 (=> res!54259 e!71294)))

(assert (=> d!30819 (= res!54259 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2330 (_keys!4316 newMap!16))))))

(assert (=> d!30819 (= (arrayNoDuplicates!0 (_keys!4316 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18978 (Cons!1643 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) Nil!1644) Nil!1644)) e!71294)))

(declare-fun b!109614 () Bool)

(declare-fun e!71295 () Bool)

(assert (=> b!109614 (= e!71295 (contains!836 (ite c!18978 (Cons!1643 (select (arr!2074 (_keys!4316 newMap!16)) #b00000000000000000000000000000000) Nil!1644) Nil!1644) (select (arr!2074 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!109615 () Bool)

(declare-fun e!71296 () Bool)

(assert (=> b!109615 (= e!71294 e!71296)))

(declare-fun res!54258 () Bool)

(assert (=> b!109615 (=> (not res!54258) (not e!71296))))

(assert (=> b!109615 (= res!54258 (not e!71295))))

(declare-fun res!54260 () Bool)

(assert (=> b!109615 (=> (not res!54260) (not e!71295))))

(assert (=> b!109615 (= res!54260 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!109616 () Bool)

(assert (=> b!109616 (= e!71296 e!71293)))

(assert (=> b!109616 (= c!19406 (validKeyInArray!0 (select (arr!2074 (_keys!4316 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!30819 (not res!54259)) b!109615))

(assert (= (and b!109615 res!54260) b!109614))

(assert (= (and b!109615 res!54258) b!109616))

(assert (= (and b!109616 c!19406) b!109612))

(assert (= (and b!109616 (not c!19406)) b!109613))

(assert (= (or b!109612 b!109613) bm!11652))

(assert (=> bm!11652 m!122525))

(declare-fun m!124361 () Bool)

(assert (=> bm!11652 m!124361))

(assert (=> b!109614 m!122525))

(assert (=> b!109614 m!122525))

(declare-fun m!124363 () Bool)

(assert (=> b!109614 m!124363))

(assert (=> b!109615 m!122525))

(assert (=> b!109615 m!122525))

(assert (=> b!109615 m!123937))

(assert (=> b!109616 m!122525))

(assert (=> b!109616 m!122525))

(assert (=> b!109616 m!123937))

(assert (=> bm!11471 d!30819))

(declare-fun d!30821 () Bool)

(declare-fun c!19407 () Bool)

(assert (=> d!30821 (= c!19407 (and ((_ is Cons!1644) (t!5776 (toList!811 lt!55247))) (= (_1!1221 (h!2242 (t!5776 (toList!811 lt!55247)))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))))

(declare-fun e!71297 () Option!162)

(assert (=> d!30821 (= (getValueByKey!156 (t!5776 (toList!811 lt!55247)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) e!71297)))

(declare-fun b!109619 () Bool)

(declare-fun e!71298 () Option!162)

(assert (=> b!109619 (= e!71298 (getValueByKey!156 (t!5776 (t!5776 (toList!811 lt!55247))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun b!109620 () Bool)

(assert (=> b!109620 (= e!71298 None!160)))

(declare-fun b!109618 () Bool)

(assert (=> b!109618 (= e!71297 e!71298)))

(declare-fun c!19408 () Bool)

(assert (=> b!109618 (= c!19408 (and ((_ is Cons!1644) (t!5776 (toList!811 lt!55247))) (not (= (_1!1221 (h!2242 (t!5776 (toList!811 lt!55247)))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))))

(declare-fun b!109617 () Bool)

(assert (=> b!109617 (= e!71297 (Some!161 (_2!1221 (h!2242 (t!5776 (toList!811 lt!55247))))))))

(assert (= (and d!30821 c!19407) b!109617))

(assert (= (and d!30821 (not c!19407)) b!109618))

(assert (= (and b!109618 c!19408) b!109619))

(assert (= (and b!109618 (not c!19408)) b!109620))

(assert (=> b!109619 m!121177))

(declare-fun m!124365 () Bool)

(assert (=> b!109619 m!124365))

(assert (=> b!108371 d!30821))

(assert (=> b!108456 d!30109))

(assert (=> bm!11475 d!30569))

(declare-fun d!30823 () Bool)

(declare-fun res!54261 () Bool)

(declare-fun e!71299 () Bool)

(assert (=> d!30823 (=> res!54261 e!71299)))

(assert (=> d!30823 (= res!54261 (and ((_ is Cons!1644) lt!55611) (= (_1!1221 (h!2242 lt!55611)) (_1!1221 lt!55249))))))

(assert (=> d!30823 (= (containsKey!160 lt!55611 (_1!1221 lt!55249)) e!71299)))

(declare-fun b!109621 () Bool)

(declare-fun e!71300 () Bool)

(assert (=> b!109621 (= e!71299 e!71300)))

(declare-fun res!54262 () Bool)

(assert (=> b!109621 (=> (not res!54262) (not e!71300))))

(assert (=> b!109621 (= res!54262 (and (or (not ((_ is Cons!1644) lt!55611)) (bvsle (_1!1221 (h!2242 lt!55611)) (_1!1221 lt!55249))) ((_ is Cons!1644) lt!55611) (bvslt (_1!1221 (h!2242 lt!55611)) (_1!1221 lt!55249))))))

(declare-fun b!109622 () Bool)

(assert (=> b!109622 (= e!71300 (containsKey!160 (t!5776 lt!55611) (_1!1221 lt!55249)))))

(assert (= (and d!30823 (not res!54261)) b!109621))

(assert (= (and b!109621 res!54262) b!109622))

(declare-fun m!124367 () Bool)

(assert (=> b!109622 m!124367))

(assert (=> b!108239 d!30823))

(declare-fun lt!56432 () Bool)

(declare-fun d!30825 () Bool)

(assert (=> d!30825 (= lt!56432 (select (content!110 (toList!811 lt!55811)) (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun e!71301 () Bool)

(assert (=> d!30825 (= lt!56432 e!71301)))

(declare-fun res!54264 () Bool)

(assert (=> d!30825 (=> (not res!54264) (not e!71301))))

(assert (=> d!30825 (= res!54264 ((_ is Cons!1644) (toList!811 lt!55811)))))

(assert (=> d!30825 (= (contains!835 (toList!811 lt!55811) (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!56432)))

(declare-fun b!109623 () Bool)

(declare-fun e!71302 () Bool)

(assert (=> b!109623 (= e!71301 e!71302)))

(declare-fun res!54263 () Bool)

(assert (=> b!109623 (=> res!54263 e!71302)))

(assert (=> b!109623 (= res!54263 (= (h!2242 (toList!811 lt!55811)) (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!109624 () Bool)

(assert (=> b!109624 (= e!71302 (contains!835 (t!5776 (toList!811 lt!55811)) (tuple2!2423 lt!55495 (zeroValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(assert (= (and d!30825 res!54264) b!109623))

(assert (= (and b!109623 (not res!54263)) b!109624))

(declare-fun m!124369 () Bool)

(assert (=> d!30825 m!124369))

(declare-fun m!124371 () Bool)

(assert (=> d!30825 m!124371))

(declare-fun m!124373 () Bool)

(assert (=> b!109624 m!124373))

(assert (=> b!108449 d!30825))

(declare-fun d!30827 () Bool)

(declare-fun lt!56433 () Bool)

(assert (=> d!30827 (= lt!56433 (select (content!110 lt!55605) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))))))

(declare-fun e!71303 () Bool)

(assert (=> d!30827 (= lt!56433 e!71303)))

(declare-fun res!54266 () Bool)

(assert (=> d!30827 (=> (not res!54266) (not e!71303))))

(assert (=> d!30827 (= res!54266 ((_ is Cons!1644) lt!55605))))

(assert (=> d!30827 (= (contains!835 lt!55605 (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))) lt!56433)))

(declare-fun b!109625 () Bool)

(declare-fun e!71304 () Bool)

(assert (=> b!109625 (= e!71303 e!71304)))

(declare-fun res!54265 () Bool)

(assert (=> b!109625 (=> res!54265 e!71304)))

(assert (=> b!109625 (= res!54265 (= (h!2242 lt!55605) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))))))

(declare-fun b!109626 () Bool)

(assert (=> b!109626 (= e!71304 (contains!835 (t!5776 lt!55605) (tuple2!2423 (_1!1221 lt!55249) (_2!1221 lt!55249))))))

(assert (= (and d!30827 res!54266) b!109625))

(assert (= (and b!109625 (not res!54265)) b!109626))

(declare-fun m!124375 () Bool)

(assert (=> d!30827 m!124375))

(declare-fun m!124377 () Bool)

(assert (=> d!30827 m!124377))

(declare-fun m!124379 () Bool)

(assert (=> b!109626 m!124379))

(assert (=> b!108223 d!30827))

(declare-fun d!30829 () Bool)

(declare-fun e!71306 () Bool)

(assert (=> d!30829 e!71306))

(declare-fun res!54267 () Bool)

(assert (=> d!30829 (=> res!54267 e!71306)))

(declare-fun lt!56434 () Bool)

(assert (=> d!30829 (= res!54267 (not lt!56434))))

(declare-fun lt!56435 () Bool)

(assert (=> d!30829 (= lt!56434 lt!56435)))

(declare-fun lt!56436 () Unit!3339)

(declare-fun e!71305 () Unit!3339)

(assert (=> d!30829 (= lt!56436 e!71305)))

(declare-fun c!19409 () Bool)

(assert (=> d!30829 (= c!19409 lt!56435)))

(assert (=> d!30829 (= lt!56435 (containsKey!160 (toList!811 lt!55795) (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> d!30829 (= (contains!834 lt!55795 (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!56434)))

(declare-fun b!109627 () Bool)

(declare-fun lt!56437 () Unit!3339)

(assert (=> b!109627 (= e!71305 lt!56437)))

(assert (=> b!109627 (= lt!56437 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!811 lt!55795) (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(assert (=> b!109627 (isDefined!110 (getValueByKey!156 (toList!811 lt!55795) (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109628 () Bool)

(declare-fun Unit!3416 () Unit!3339)

(assert (=> b!109628 (= e!71305 Unit!3416)))

(declare-fun b!109629 () Bool)

(assert (=> b!109629 (= e!71306 (isDefined!110 (getValueByKey!156 (toList!811 lt!55795) (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (= (and d!30829 c!19409) b!109627))

(assert (= (and d!30829 (not c!19409)) b!109628))

(assert (= (and d!30829 (not res!54267)) b!109629))

(declare-fun m!124381 () Bool)

(assert (=> d!30829 m!124381))

(declare-fun m!124383 () Bool)

(assert (=> b!109627 m!124383))

(assert (=> b!109627 m!122113))

(assert (=> b!109627 m!122113))

(declare-fun m!124385 () Bool)

(assert (=> b!109627 m!124385))

(assert (=> b!109629 m!122113))

(assert (=> b!109629 m!122113))

(assert (=> b!109629 m!124385))

(assert (=> d!30015 d!30829))

(declare-fun d!30831 () Bool)

(declare-fun c!19410 () Bool)

(assert (=> d!30831 (= c!19410 (and ((_ is Cons!1644) lt!55793) (= (_1!1221 (h!2242 lt!55793)) (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!71307 () Option!162)

(assert (=> d!30831 (= (getValueByKey!156 lt!55793 (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) e!71307)))

(declare-fun e!71308 () Option!162)

(declare-fun b!109632 () Bool)

(assert (=> b!109632 (= e!71308 (getValueByKey!156 (t!5776 lt!55793) (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109633 () Bool)

(assert (=> b!109633 (= e!71308 None!160)))

(declare-fun b!109631 () Bool)

(assert (=> b!109631 (= e!71307 e!71308)))

(declare-fun c!19411 () Bool)

(assert (=> b!109631 (= c!19411 (and ((_ is Cons!1644) lt!55793) (not (= (_1!1221 (h!2242 lt!55793)) (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun b!109630 () Bool)

(assert (=> b!109630 (= e!71307 (Some!161 (_2!1221 (h!2242 lt!55793))))))

(assert (= (and d!30831 c!19410) b!109630))

(assert (= (and d!30831 (not c!19410)) b!109631))

(assert (= (and b!109631 c!19411) b!109632))

(assert (= (and b!109631 (not c!19411)) b!109633))

(declare-fun m!124387 () Bool)

(assert (=> b!109632 m!124387))

(assert (=> d!30015 d!30831))

(declare-fun d!30833 () Bool)

(assert (=> d!30833 (= (getValueByKey!156 lt!55793 (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) (Some!161 (_2!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun lt!56438 () Unit!3339)

(assert (=> d!30833 (= lt!56438 (choose!680 lt!55793 (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun e!71309 () Bool)

(assert (=> d!30833 e!71309))

(declare-fun res!54268 () Bool)

(assert (=> d!30833 (=> (not res!54268) (not e!71309))))

(assert (=> d!30833 (= res!54268 (isStrictlySorted!305 lt!55793))))

(assert (=> d!30833 (= (lemmaContainsTupThenGetReturnValue!74 lt!55793 (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!56438)))

(declare-fun b!109634 () Bool)

(declare-fun res!54269 () Bool)

(assert (=> b!109634 (=> (not res!54269) (not e!71309))))

(assert (=> b!109634 (= res!54269 (containsKey!160 lt!55793 (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109635 () Bool)

(assert (=> b!109635 (= e!71309 (contains!835 lt!55793 (tuple2!2423 (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (= (and d!30833 res!54268) b!109634))

(assert (= (and b!109634 res!54269) b!109635))

(assert (=> d!30833 m!122107))

(declare-fun m!124389 () Bool)

(assert (=> d!30833 m!124389))

(declare-fun m!124391 () Bool)

(assert (=> d!30833 m!124391))

(declare-fun m!124393 () Bool)

(assert (=> b!109634 m!124393))

(declare-fun m!124395 () Bool)

(assert (=> b!109635 m!124395))

(assert (=> d!30015 d!30833))

(declare-fun b!109636 () Bool)

(declare-fun c!19412 () Bool)

(assert (=> b!109636 (= c!19412 (and ((_ is Cons!1644) (toList!811 lt!55499)) (bvsgt (_1!1221 (h!2242 (toList!811 lt!55499))) (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun e!71310 () List!1648)

(declare-fun e!71311 () List!1648)

(assert (=> b!109636 (= e!71310 e!71311)))

(declare-fun b!109637 () Bool)

(declare-fun e!71312 () List!1648)

(declare-fun call!11657 () List!1648)

(assert (=> b!109637 (= e!71312 call!11657)))

(declare-fun c!19413 () Bool)

(declare-fun bm!11653 () Bool)

(declare-fun e!71314 () List!1648)

(assert (=> bm!11653 (= call!11657 ($colon$colon!81 e!71314 (ite c!19413 (h!2242 (toList!811 lt!55499)) (tuple2!2423 (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))))

(declare-fun c!19414 () Bool)

(assert (=> bm!11653 (= c!19414 c!19413)))

(declare-fun b!109638 () Bool)

(declare-fun call!11656 () List!1648)

(assert (=> b!109638 (= e!71311 call!11656)))

(declare-fun b!109639 () Bool)

(declare-fun call!11658 () List!1648)

(assert (=> b!109639 (= e!71310 call!11658)))

(declare-fun d!30835 () Bool)

(declare-fun e!71313 () Bool)

(assert (=> d!30835 e!71313))

(declare-fun res!54270 () Bool)

(assert (=> d!30835 (=> (not res!54270) (not e!71313))))

(declare-fun lt!56439 () List!1648)

(assert (=> d!30835 (= res!54270 (isStrictlySorted!305 lt!56439))))

(assert (=> d!30835 (= lt!56439 e!71312)))

(assert (=> d!30835 (= c!19413 (and ((_ is Cons!1644) (toList!811 lt!55499)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55499))) (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(assert (=> d!30835 (isStrictlySorted!305 (toList!811 lt!55499))))

(assert (=> d!30835 (= (insertStrictlySorted!76 (toList!811 lt!55499) (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))) lt!56439)))

(declare-fun b!109640 () Bool)

(assert (=> b!109640 (= e!71312 e!71310)))

(declare-fun c!19415 () Bool)

(assert (=> b!109640 (= c!19415 (and ((_ is Cons!1644) (toList!811 lt!55499)) (= (_1!1221 (h!2242 (toList!811 lt!55499))) (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!109641 () Bool)

(declare-fun res!54271 () Bool)

(assert (=> b!109641 (=> (not res!54271) (not e!71313))))

(assert (=> b!109641 (= res!54271 (containsKey!160 lt!56439 (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun bm!11654 () Bool)

(assert (=> bm!11654 (= call!11658 call!11657)))

(declare-fun bm!11655 () Bool)

(assert (=> bm!11655 (= call!11656 call!11658)))

(declare-fun b!109642 () Bool)

(assert (=> b!109642 (= e!71314 (insertStrictlySorted!76 (t!5776 (toList!811 lt!55499)) (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992)))))))))

(declare-fun b!109643 () Bool)

(assert (=> b!109643 (= e!71311 call!11656)))

(declare-fun b!109644 () Bool)

(assert (=> b!109644 (= e!71313 (contains!835 lt!56439 (tuple2!2423 (_1!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) (_2!1221 (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))))

(declare-fun b!109645 () Bool)

(assert (=> b!109645 (= e!71314 (ite c!19415 (t!5776 (toList!811 lt!55499)) (ite c!19412 (Cons!1644 (h!2242 (toList!811 lt!55499)) (t!5776 (toList!811 lt!55499))) Nil!1645)))))

(assert (= (and d!30835 c!19413) b!109637))

(assert (= (and d!30835 (not c!19413)) b!109640))

(assert (= (and b!109640 c!19415) b!109639))

(assert (= (and b!109640 (not c!19415)) b!109636))

(assert (= (and b!109636 c!19412) b!109643))

(assert (= (and b!109636 (not c!19412)) b!109638))

(assert (= (or b!109643 b!109638) bm!11655))

(assert (= (or b!109639 bm!11655) bm!11654))

(assert (= (or b!109637 bm!11654) bm!11653))

(assert (= (and bm!11653 c!19414) b!109642))

(assert (= (and bm!11653 (not c!19414)) b!109645))

(assert (= (and d!30835 res!54270) b!109641))

(assert (= (and b!109641 res!54271) b!109644))

(declare-fun m!124397 () Bool)

(assert (=> b!109644 m!124397))

(declare-fun m!124399 () Bool)

(assert (=> b!109641 m!124399))

(declare-fun m!124401 () Bool)

(assert (=> bm!11653 m!124401))

(declare-fun m!124403 () Bool)

(assert (=> d!30835 m!124403))

(declare-fun m!124405 () Bool)

(assert (=> d!30835 m!124405))

(declare-fun m!124407 () Bool)

(assert (=> b!109642 m!124407))

(assert (=> d!30015 d!30835))

(assert (=> b!108159 d!30243))

(assert (=> b!108159 d!30245))

(declare-fun d!30837 () Bool)

(declare-fun lt!56440 () Bool)

(assert (=> d!30837 (= lt!56440 (select (content!110 (toList!811 lt!55787)) (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun e!71315 () Bool)

(assert (=> d!30837 (= lt!56440 e!71315)))

(declare-fun res!54273 () Bool)

(assert (=> d!30837 (=> (not res!54273) (not e!71315))))

(assert (=> d!30837 (= res!54273 ((_ is Cons!1644) (toList!811 lt!55787)))))

(assert (=> d!30837 (= (contains!835 (toList!811 lt!55787) (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) lt!56440)))

(declare-fun b!109646 () Bool)

(declare-fun e!71316 () Bool)

(assert (=> b!109646 (= e!71315 e!71316)))

(declare-fun res!54272 () Bool)

(assert (=> b!109646 (=> res!54272 e!71316)))

(assert (=> b!109646 (= res!54272 (= (h!2242 (toList!811 lt!55787)) (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun b!109647 () Bool)

(assert (=> b!109647 (= e!71316 (contains!835 (t!5776 (toList!811 lt!55787)) (ite c!18944 (ite c!18941 (tuple2!2423 #b0000000000000000000000000000000000000000000000000000000000000000 lt!55248) (tuple2!2423 #b1000000000000000000000000000000000000000000000000000000000000000 lt!55248)) (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(assert (= (and d!30837 res!54273) b!109646))

(assert (= (and b!109646 (not res!54272)) b!109647))

(declare-fun m!124409 () Bool)

(assert (=> d!30837 m!124409))

(declare-fun m!124411 () Bool)

(assert (=> d!30837 m!124411))

(declare-fun m!124413 () Bool)

(assert (=> b!109647 m!124413))

(assert (=> b!108433 d!30837))

(declare-fun d!30839 () Bool)

(declare-fun c!19416 () Bool)

(assert (=> d!30839 (= c!19416 (and ((_ is Cons!1644) (t!5776 lt!55333)) (= (_1!1221 (h!2242 (t!5776 lt!55333))) (_1!1221 lt!55249))))))

(declare-fun e!71317 () Option!162)

(assert (=> d!30839 (= (getValueByKey!156 (t!5776 lt!55333) (_1!1221 lt!55249)) e!71317)))

(declare-fun b!109650 () Bool)

(declare-fun e!71318 () Option!162)

(assert (=> b!109650 (= e!71318 (getValueByKey!156 (t!5776 (t!5776 lt!55333)) (_1!1221 lt!55249)))))

(declare-fun b!109651 () Bool)

(assert (=> b!109651 (= e!71318 None!160)))

(declare-fun b!109649 () Bool)

(assert (=> b!109649 (= e!71317 e!71318)))

(declare-fun c!19417 () Bool)

(assert (=> b!109649 (= c!19417 (and ((_ is Cons!1644) (t!5776 lt!55333)) (not (= (_1!1221 (h!2242 (t!5776 lt!55333))) (_1!1221 lt!55249)))))))

(declare-fun b!109648 () Bool)

(assert (=> b!109648 (= e!71317 (Some!161 (_2!1221 (h!2242 (t!5776 lt!55333)))))))

(assert (= (and d!30839 c!19416) b!109648))

(assert (= (and d!30839 (not c!19416)) b!109649))

(assert (= (and b!109649 c!19417) b!109650))

(assert (= (and b!109649 (not c!19417)) b!109651))

(declare-fun m!124415 () Bool)

(assert (=> b!109650 m!124415))

(assert (=> b!108187 d!30839))

(declare-fun d!30841 () Bool)

(declare-fun res!54274 () Bool)

(declare-fun e!71319 () Bool)

(assert (=> d!30841 (=> res!54274 e!71319)))

(assert (=> d!30841 (= res!54274 (and ((_ is Cons!1644) (toList!811 call!11428)) (= (_1!1221 (h!2242 (toList!811 call!11428))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))))

(assert (=> d!30841 (= (containsKey!160 (toList!811 call!11428) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) e!71319)))

(declare-fun b!109652 () Bool)

(declare-fun e!71320 () Bool)

(assert (=> b!109652 (= e!71319 e!71320)))

(declare-fun res!54275 () Bool)

(assert (=> b!109652 (=> (not res!54275) (not e!71320))))

(assert (=> b!109652 (= res!54275 (and (or (not ((_ is Cons!1644) (toList!811 call!11428))) (bvsle (_1!1221 (h!2242 (toList!811 call!11428))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))) ((_ is Cons!1644) (toList!811 call!11428)) (bvslt (_1!1221 (h!2242 (toList!811 call!11428))) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355))))))

(declare-fun b!109653 () Bool)

(assert (=> b!109653 (= e!71320 (containsKey!160 (t!5776 (toList!811 call!11428)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(assert (= (and d!30841 (not res!54274)) b!109652))

(assert (= (and b!109652 res!54275) b!109653))

(assert (=> b!109653 m!121177))

(declare-fun m!124417 () Bool)

(assert (=> b!109653 m!124417))

(assert (=> d!30063 d!30841))

(declare-fun c!19418 () Bool)

(declare-fun d!30843 () Bool)

(assert (=> d!30843 (= c!19418 (and ((_ is Cons!1644) (toList!811 lt!55775)) (= (_1!1221 (h!2242 (toList!811 lt!55775))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248)))))))

(declare-fun e!71321 () Option!162)

(assert (=> d!30843 (= (getValueByKey!156 (toList!811 lt!55775) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))) e!71321)))

(declare-fun b!109656 () Bool)

(declare-fun e!71322 () Option!162)

(assert (=> b!109656 (= e!71322 (getValueByKey!156 (t!5776 (toList!811 lt!55775)) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))

(declare-fun b!109657 () Bool)

(assert (=> b!109657 (= e!71322 None!160)))

(declare-fun b!109655 () Bool)

(assert (=> b!109655 (= e!71321 e!71322)))

(declare-fun c!19419 () Bool)

(assert (=> b!109655 (= c!19419 (and ((_ is Cons!1644) (toList!811 lt!55775)) (not (= (_1!1221 (h!2242 (toList!811 lt!55775))) (_1!1221 (tuple2!2423 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) lt!55248))))))))

(declare-fun b!109654 () Bool)

(assert (=> b!109654 (= e!71321 (Some!161 (_2!1221 (h!2242 (toList!811 lt!55775)))))))

(assert (= (and d!30843 c!19418) b!109654))

(assert (= (and d!30843 (not c!19418)) b!109655))

(assert (= (and b!109655 c!19419) b!109656))

(assert (= (and b!109655 (not c!19419)) b!109657))

(declare-fun m!124419 () Bool)

(assert (=> b!109656 m!124419))

(assert (=> b!108426 d!30843))

(declare-fun b!109676 () Bool)

(declare-fun e!71333 () SeekEntryResult!270)

(assert (=> b!109676 (= e!71333 (Intermediate!270 true (toIndex!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (mask!6764 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!109677 () Bool)

(declare-fun e!71336 () Bool)

(declare-fun lt!56446 () SeekEntryResult!270)

(assert (=> b!109677 (= e!71336 (bvsge (x!13814 lt!56446) #b01111111111111111111111111111110))))

(declare-fun d!30845 () Bool)

(assert (=> d!30845 e!71336))

(declare-fun c!19427 () Bool)

(assert (=> d!30845 (= c!19427 (and ((_ is Intermediate!270) lt!56446) (undefined!1082 lt!56446)))))

(assert (=> d!30845 (= lt!56446 e!71333)))

(declare-fun c!19426 () Bool)

(assert (=> d!30845 (= c!19426 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!56445 () (_ BitVec 64))

(assert (=> d!30845 (= lt!56445 (select (arr!2074 (_keys!4316 newMap!16)) (toIndex!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (mask!6764 newMap!16))))))

(assert (=> d!30845 (validMask!0 (mask!6764 newMap!16))))

(assert (=> d!30845 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (mask!6764 newMap!16)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)) lt!56446)))

(declare-fun b!109678 () Bool)

(assert (=> b!109678 (and (bvsge (index!3231 lt!56446) #b00000000000000000000000000000000) (bvslt (index!3231 lt!56446) (size!2330 (_keys!4316 newMap!16))))))

(declare-fun res!54283 () Bool)

(assert (=> b!109678 (= res!54283 (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3231 lt!56446)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)))))

(declare-fun e!71337 () Bool)

(assert (=> b!109678 (=> res!54283 e!71337)))

(declare-fun e!71335 () Bool)

(assert (=> b!109678 (= e!71335 e!71337)))

(declare-fun e!71334 () SeekEntryResult!270)

(declare-fun b!109679 () Bool)

(assert (=> b!109679 (= e!71334 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (mask!6764 newMap!16)) #b00000000000000000000000000000000 (mask!6764 newMap!16)) (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (_keys!4316 newMap!16) (mask!6764 newMap!16)))))

(declare-fun b!109680 () Bool)

(assert (=> b!109680 (= e!71333 e!71334)))

(declare-fun c!19428 () Bool)

(assert (=> b!109680 (= c!19428 (or (= lt!56445 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355)) (= (bvadd lt!56445 lt!56445) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109681 () Bool)

(assert (=> b!109681 (and (bvsge (index!3231 lt!56446) #b00000000000000000000000000000000) (bvslt (index!3231 lt!56446) (size!2330 (_keys!4316 newMap!16))))))

(assert (=> b!109681 (= e!71337 (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3231 lt!56446)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109682 () Bool)

(assert (=> b!109682 (= e!71334 (Intermediate!270 false (toIndex!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (mask!6764 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!109683 () Bool)

(assert (=> b!109683 (= e!71336 e!71335)))

(declare-fun res!54284 () Bool)

(assert (=> b!109683 (= res!54284 (and ((_ is Intermediate!270) lt!56446) (not (undefined!1082 lt!56446)) (bvslt (x!13814 lt!56446) #b01111111111111111111111111111110) (bvsge (x!13814 lt!56446) #b00000000000000000000000000000000) (bvsge (x!13814 lt!56446) #b00000000000000000000000000000000)))))

(assert (=> b!109683 (=> (not res!54284) (not e!71335))))

(declare-fun b!109684 () Bool)

(assert (=> b!109684 (and (bvsge (index!3231 lt!56446) #b00000000000000000000000000000000) (bvslt (index!3231 lt!56446) (size!2330 (_keys!4316 newMap!16))))))

(declare-fun res!54282 () Bool)

(assert (=> b!109684 (= res!54282 (= (select (arr!2074 (_keys!4316 newMap!16)) (index!3231 lt!56446)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109684 (=> res!54282 e!71337)))

(assert (= (and d!30845 c!19426) b!109676))

(assert (= (and d!30845 (not c!19426)) b!109680))

(assert (= (and b!109680 c!19428) b!109682))

(assert (= (and b!109680 (not c!19428)) b!109679))

(assert (= (and d!30845 c!19427) b!109677))

(assert (= (and d!30845 (not c!19427)) b!109683))

(assert (= (and b!109683 res!54284) b!109678))

(assert (= (and b!109678 (not res!54283)) b!109684))

(assert (= (and b!109684 (not res!54282)) b!109681))

(declare-fun m!124421 () Bool)

(assert (=> b!109684 m!124421))

(assert (=> b!109681 m!124421))

(assert (=> b!109678 m!124421))

(assert (=> d!30845 m!121583))

(declare-fun m!124423 () Bool)

(assert (=> d!30845 m!124423))

(assert (=> d!30845 m!121521))

(assert (=> b!109679 m!121583))

(declare-fun m!124425 () Bool)

(assert (=> b!109679 m!124425))

(assert (=> b!109679 m!124425))

(assert (=> b!109679 m!121177))

(declare-fun m!124427 () Bool)

(assert (=> b!109679 m!124427))

(assert (=> d!29899 d!30845))

(declare-fun d!30847 () Bool)

(declare-fun lt!56452 () (_ BitVec 32))

(declare-fun lt!56451 () (_ BitVec 32))

(assert (=> d!30847 (= lt!56452 (bvmul (bvxor lt!56451 (bvlshr lt!56451 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!30847 (= lt!56451 ((_ extract 31 0) (bvand (bvxor (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvlshr (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!30847 (and (bvsge (mask!6764 newMap!16) #b00000000000000000000000000000000) (let ((res!54285 (let ((h!2244 ((_ extract 31 0) (bvand (bvxor (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (bvlshr (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!13917 (bvmul (bvxor h!2244 (bvlshr h!2244 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!13917 (bvlshr x!13917 #b00000000000000000000000000001101)) (mask!6764 newMap!16)))))) (and (bvslt res!54285 (bvadd (mask!6764 newMap!16) #b00000000000000000000000000000001)) (bvsge res!54285 #b00000000000000000000000000000000))))))

(assert (=> d!30847 (= (toIndex!0 (select (arr!2074 (_keys!4316 (v!2913 (underlying!367 thiss!992)))) from!355) (mask!6764 newMap!16)) (bvand (bvxor lt!56452 (bvlshr lt!56452 #b00000000000000000000000000001101)) (mask!6764 newMap!16)))))

(assert (=> d!29899 d!30847))

(assert (=> d!29899 d!30107))

(assert (=> b!108227 d!30141))

(assert (=> b!108227 d!29971))

(declare-fun d!30849 () Bool)

(assert (=> d!30849 (= (inRange!0 (ite c!19028 (index!3229 lt!55620) (index!3232 lt!55620)) (mask!6764 newMap!16)) (and (bvsge (ite c!19028 (index!3229 lt!55620) (index!3232 lt!55620)) #b00000000000000000000000000000000) (bvslt (ite c!19028 (index!3229 lt!55620) (index!3232 lt!55620)) (bvadd (mask!6764 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11495 d!30849))

(declare-fun d!30851 () Bool)

(declare-fun res!54286 () Bool)

(declare-fun e!71338 () Bool)

(assert (=> d!30851 (=> res!54286 e!71338)))

(assert (=> d!30851 (= res!54286 (and ((_ is Cons!1644) (toList!811 lt!55479)) (= (_1!1221 (h!2242 (toList!811 lt!55479))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30851 (= (containsKey!160 (toList!811 lt!55479) #b1000000000000000000000000000000000000000000000000000000000000000) e!71338)))

(declare-fun b!109685 () Bool)

(declare-fun e!71339 () Bool)

(assert (=> b!109685 (= e!71338 e!71339)))

(declare-fun res!54287 () Bool)

(assert (=> b!109685 (=> (not res!54287) (not e!71339))))

(assert (=> b!109685 (= res!54287 (and (or (not ((_ is Cons!1644) (toList!811 lt!55479))) (bvsle (_1!1221 (h!2242 (toList!811 lt!55479))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1644) (toList!811 lt!55479)) (bvslt (_1!1221 (h!2242 (toList!811 lt!55479))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109686 () Bool)

(assert (=> b!109686 (= e!71339 (containsKey!160 (t!5776 (toList!811 lt!55479)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30851 (not res!54286)) b!109685))

(assert (= (and b!109685 res!54287) b!109686))

(declare-fun m!124429 () Bool)

(assert (=> b!109686 m!124429))

(assert (=> d!29975 d!30851))

(assert (=> d!29959 d!29957))

(declare-fun d!30853 () Bool)

(assert (=> d!30853 (= (getValueByKey!156 lt!55301 (_1!1221 lt!55252)) (Some!161 (_2!1221 lt!55252)))))

(assert (=> d!30853 true))

(declare-fun _$22!442 () Unit!3339)

(assert (=> d!30853 (= (choose!680 lt!55301 (_1!1221 lt!55252) (_2!1221 lt!55252)) _$22!442)))

(declare-fun bs!4520 () Bool)

(assert (= bs!4520 d!30853))

(assert (=> bs!4520 m!121291))

(assert (=> d!29959 d!30853))

(declare-fun d!30855 () Bool)

(declare-fun res!54288 () Bool)

(declare-fun e!71340 () Bool)

(assert (=> d!30855 (=> res!54288 e!71340)))

(assert (=> d!30855 (= res!54288 (or ((_ is Nil!1645) lt!55301) ((_ is Nil!1645) (t!5776 lt!55301))))))

(assert (=> d!30855 (= (isStrictlySorted!305 lt!55301) e!71340)))

(declare-fun b!109687 () Bool)

(declare-fun e!71341 () Bool)

(assert (=> b!109687 (= e!71340 e!71341)))

(declare-fun res!54289 () Bool)

(assert (=> b!109687 (=> (not res!54289) (not e!71341))))

(assert (=> b!109687 (= res!54289 (bvslt (_1!1221 (h!2242 lt!55301)) (_1!1221 (h!2242 (t!5776 lt!55301)))))))

(declare-fun b!109688 () Bool)

(assert (=> b!109688 (= e!71341 (isStrictlySorted!305 (t!5776 lt!55301)))))

(assert (= (and d!30855 (not res!54288)) b!109687))

(assert (= (and b!109687 res!54289) b!109688))

(declare-fun m!124431 () Bool)

(assert (=> b!109688 m!124431))

(assert (=> d!29959 d!30855))

(declare-fun d!30857 () Bool)

(declare-fun res!54290 () Bool)

(declare-fun e!71342 () Bool)

(assert (=> d!30857 (=> res!54290 e!71342)))

(assert (=> d!30857 (= res!54290 (and ((_ is Cons!1644) lt!55337) (= (_1!1221 (h!2242 lt!55337)) (_1!1221 lt!55249))))))

(assert (=> d!30857 (= (containsKey!160 lt!55337 (_1!1221 lt!55249)) e!71342)))

(declare-fun b!109689 () Bool)

(declare-fun e!71343 () Bool)

(assert (=> b!109689 (= e!71342 e!71343)))

(declare-fun res!54291 () Bool)

(assert (=> b!109689 (=> (not res!54291) (not e!71343))))

(assert (=> b!109689 (= res!54291 (and (or (not ((_ is Cons!1644) lt!55337)) (bvsle (_1!1221 (h!2242 lt!55337)) (_1!1221 lt!55249))) ((_ is Cons!1644) lt!55337) (bvslt (_1!1221 (h!2242 lt!55337)) (_1!1221 lt!55249))))))

(declare-fun b!109690 () Bool)

(assert (=> b!109690 (= e!71343 (containsKey!160 (t!5776 lt!55337) (_1!1221 lt!55249)))))

(assert (= (and d!30857 (not res!54290)) b!109689))

(assert (= (and b!109689 res!54291) b!109690))

(declare-fun m!124433 () Bool)

(assert (=> b!109690 m!124433))

(assert (=> b!108232 d!30857))

(declare-fun b!109691 () Bool)

(declare-fun e!71346 () Bool)

(declare-fun call!11659 () Bool)

(assert (=> b!109691 (= e!71346 call!11659)))

(declare-fun d!30859 () Bool)

(declare-fun res!54293 () Bool)

(declare-fun e!71345 () Bool)

(assert (=> d!30859 (=> res!54293 e!71345)))

(assert (=> d!30859 (= res!54293 (bvsge #b00000000000000000000000000000000 (size!2330 (_keys!4316 (_2!1222 lt!55429)))))))

(assert (=> d!30859 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4316 (_2!1222 lt!55429)) (mask!6764 (_2!1222 lt!55429))) e!71345)))

(declare-fun b!109692 () Bool)

(declare-fun e!71344 () Bool)

(assert (=> b!109692 (= e!71344 e!71346)))

(declare-fun lt!56453 () (_ BitVec 64))

(assert (=> b!109692 (= lt!56453 (select (arr!2074 (_keys!4316 (_2!1222 lt!55429))) #b00000000000000000000000000000000))))

(declare-fun lt!56455 () Unit!3339)

(assert (=> b!109692 (= lt!56455 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4316 (_2!1222 lt!55429)) lt!56453 #b00000000000000000000000000000000))))

(assert (=> b!109692 (arrayContainsKey!0 (_keys!4316 (_2!1222 lt!55429)) lt!56453 #b00000000000000000000000000000000)))

(declare-fun lt!56454 () Unit!3339)

(assert (=> b!109692 (= lt!56454 lt!56455)))

(declare-fun res!54292 () Bool)

(assert (=> b!109692 (= res!54292 (= (seekEntryOrOpen!0 (select (arr!2074 (_keys!4316 (_2!1222 lt!55429))) #b00000000000000000000000000000000) (_keys!4316 (_2!1222 lt!55429)) (mask!6764 (_2!1222 lt!55429))) (Found!270 #b00000000000000000000000000000000)))))

(assert (=> b!109692 (=> (not res!54292) (not e!71346))))

(declare-fun bm!11656 () Bool)

(assert (=> bm!11656 (= call!11659 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4316 (_2!1222 lt!55429)) (mask!6764 (_2!1222 lt!55429))))))

(declare-fun b!109693 () Bool)

(assert (=> b!109693 (= e!71345 e!71344)))

(declare-fun c!19429 () Bool)

(assert (=> b!109693 (= c!19429 (validKeyInArray!0 (select (arr!2074 (_keys!4316 (_2!1222 lt!55429))) #b00000000000000000000000000000000)))))

(declare-fun b!109694 () Bool)

(assert (=> b!109694 (= e!71344 call!11659)))

(assert (= (and d!30859 (not res!54293)) b!109693))

(assert (= (and b!109693 c!19429) b!109692))

(assert (= (and b!109693 (not c!19429)) b!109694))

(assert (= (and b!109692 res!54292) b!109691))

(assert (= (or b!109691 b!109694) bm!11656))

(assert (=> b!109692 m!122519))

(declare-fun m!124435 () Bool)

(assert (=> b!109692 m!124435))

(declare-fun m!124437 () Bool)

(assert (=> b!109692 m!124437))

(assert (=> b!109692 m!122519))

(declare-fun m!124439 () Bool)

(assert (=> b!109692 m!124439))

(declare-fun m!124441 () Bool)

(assert (=> bm!11656 m!124441))

(assert (=> b!109693 m!122519))

(assert (=> b!109693 m!122519))

(assert (=> b!109693 m!122521))

(assert (=> b!108271 d!30859))

(assert (=> b!108414 d!29951))

(declare-fun lt!56456 () Bool)

(declare-fun d!30861 () Bool)

(assert (=> d!30861 (= lt!56456 (select (content!110 (toList!811 lt!55795)) (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun e!71347 () Bool)

(assert (=> d!30861 (= lt!56456 e!71347)))

(declare-fun res!54295 () Bool)

(assert (=> d!30861 (=> (not res!54295) (not e!71347))))

(assert (=> d!30861 (= res!54295 ((_ is Cons!1644) (toList!811 lt!55795)))))

(assert (=> d!30861 (= (contains!835 (toList!811 lt!55795) (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))) lt!56456)))

(declare-fun b!109695 () Bool)

(declare-fun e!71348 () Bool)

(assert (=> b!109695 (= e!71347 e!71348)))

(declare-fun res!54294 () Bool)

(assert (=> b!109695 (=> res!54294 e!71348)))

(assert (=> b!109695 (= res!54294 (= (h!2242 (toList!811 lt!55795)) (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(declare-fun b!109696 () Bool)

(assert (=> b!109696 (= e!71348 (contains!835 (t!5776 (toList!811 lt!55795)) (tuple2!2423 lt!55483 (minValue!2479 (v!2913 (underlying!367 thiss!992))))))))

(assert (= (and d!30861 res!54295) b!109695))

(assert (= (and b!109695 (not res!54294)) b!109696))

(declare-fun m!124443 () Bool)

(assert (=> d!30861 m!124443))

(declare-fun m!124445 () Bool)

(assert (=> d!30861 m!124445))

(declare-fun m!124447 () Bool)

(assert (=> b!109696 m!124447))

(assert (=> b!108438 d!30861))

(assert (=> b!108126 d!30293))

(assert (=> b!108126 d!30295))

(declare-fun d!30863 () Bool)

(declare-fun res!54296 () Bool)

(declare-fun e!71349 () Bool)

(assert (=> d!30863 (=> res!54296 e!71349)))

(assert (=> d!30863 (= res!54296 (and ((_ is Cons!1644) lt!55329) (= (_1!1221 (h!2242 lt!55329)) (_1!1221 lt!55252))))))

(assert (=> d!30863 (= (containsKey!160 lt!55329 (_1!1221 lt!55252)) e!71349)))

(declare-fun b!109697 () Bool)

(declare-fun e!71350 () Bool)

(assert (=> b!109697 (= e!71349 e!71350)))

(declare-fun res!54297 () Bool)

(assert (=> b!109697 (=> (not res!54297) (not e!71350))))

(assert (=> b!109697 (= res!54297 (and (or (not ((_ is Cons!1644) lt!55329)) (bvsle (_1!1221 (h!2242 lt!55329)) (_1!1221 lt!55252))) ((_ is Cons!1644) lt!55329) (bvslt (_1!1221 (h!2242 lt!55329)) (_1!1221 lt!55252))))))

(declare-fun b!109698 () Bool)

(assert (=> b!109698 (= e!71350 (containsKey!160 (t!5776 lt!55329) (_1!1221 lt!55252)))))

(assert (= (and d!30863 (not res!54296)) b!109697))

(assert (= (and b!109697 res!54297) b!109698))

(declare-fun m!124449 () Bool)

(assert (=> b!109698 m!124449))

(assert (=> b!108467 d!30863))

(declare-fun b!109700 () Bool)

(declare-fun e!71352 () Bool)

(assert (=> b!109700 (= e!71352 tp_is_empty!2691)))

(declare-fun b!109699 () Bool)

(declare-fun e!71351 () Bool)

(assert (=> b!109699 (= e!71351 tp_is_empty!2691)))

(declare-fun mapIsEmpty!3987 () Bool)

(declare-fun mapRes!3987 () Bool)

(assert (=> mapIsEmpty!3987 mapRes!3987))

(declare-fun condMapEmpty!3987 () Bool)

(declare-fun mapDefault!3987 () ValueCell!1002)

(assert (=> mapNonEmpty!3985 (= condMapEmpty!3987 (= mapRest!3985 ((as const (Array (_ BitVec 32) ValueCell!1002)) mapDefault!3987)))))

(assert (=> mapNonEmpty!3985 (= tp!9997 (and e!71352 mapRes!3987))))

(declare-fun mapNonEmpty!3987 () Bool)

(declare-fun tp!9999 () Bool)

(assert (=> mapNonEmpty!3987 (= mapRes!3987 (and tp!9999 e!71351))))

(declare-fun mapKey!3987 () (_ BitVec 32))

(declare-fun mapValue!3987 () ValueCell!1002)

(declare-fun mapRest!3987 () (Array (_ BitVec 32) ValueCell!1002))

(assert (=> mapNonEmpty!3987 (= mapRest!3985 (store mapRest!3987 mapKey!3987 mapValue!3987))))

(assert (= (and mapNonEmpty!3985 condMapEmpty!3987) mapIsEmpty!3987))

(assert (= (and mapNonEmpty!3985 (not condMapEmpty!3987)) mapNonEmpty!3987))

(assert (= (and mapNonEmpty!3987 ((_ is ValueCellFull!1002) mapValue!3987)) b!109699))

(assert (= (and mapNonEmpty!3985 ((_ is ValueCellFull!1002) mapDefault!3987)) b!109700))

(declare-fun m!124451 () Bool)

(assert (=> mapNonEmpty!3987 m!124451))

(declare-fun b!109702 () Bool)

(declare-fun e!71354 () Bool)

(assert (=> b!109702 (= e!71354 tp_is_empty!2691)))

(declare-fun b!109701 () Bool)

(declare-fun e!71353 () Bool)

(assert (=> b!109701 (= e!71353 tp_is_empty!2691)))

(declare-fun mapIsEmpty!3988 () Bool)

(declare-fun mapRes!3988 () Bool)

(assert (=> mapIsEmpty!3988 mapRes!3988))

(declare-fun condMapEmpty!3988 () Bool)

(declare-fun mapDefault!3988 () ValueCell!1002)

(assert (=> mapNonEmpty!3986 (= condMapEmpty!3988 (= mapRest!3986 ((as const (Array (_ BitVec 32) ValueCell!1002)) mapDefault!3988)))))

(assert (=> mapNonEmpty!3986 (= tp!9998 (and e!71354 mapRes!3988))))

(declare-fun mapNonEmpty!3988 () Bool)

(declare-fun tp!10000 () Bool)

(assert (=> mapNonEmpty!3988 (= mapRes!3988 (and tp!10000 e!71353))))

(declare-fun mapValue!3988 () ValueCell!1002)

(declare-fun mapKey!3988 () (_ BitVec 32))

(declare-fun mapRest!3988 () (Array (_ BitVec 32) ValueCell!1002))

(assert (=> mapNonEmpty!3988 (= mapRest!3986 (store mapRest!3988 mapKey!3988 mapValue!3988))))

(assert (= (and mapNonEmpty!3986 condMapEmpty!3988) mapIsEmpty!3988))

(assert (= (and mapNonEmpty!3986 (not condMapEmpty!3988)) mapNonEmpty!3988))

(assert (= (and mapNonEmpty!3988 ((_ is ValueCellFull!1002) mapValue!3988)) b!109701))

(assert (= (and mapNonEmpty!3986 ((_ is ValueCellFull!1002) mapDefault!3988)) b!109702))

(declare-fun m!124453 () Bool)

(assert (=> mapNonEmpty!3988 m!124453))

(declare-fun b_lambda!4913 () Bool)

(assert (= b_lambda!4909 (or (and b!107703 b_free!2549 (= (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107707 b_free!2551) b_lambda!4913)))

(declare-fun b_lambda!4915 () Bool)

(assert (= b_lambda!4901 (or (and b!107703 b_free!2549) (and b!107707 b_free!2551 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))))) b_lambda!4915)))

(declare-fun b_lambda!4917 () Bool)

(assert (= b_lambda!4905 (or (and b!107703 b_free!2549 (= (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107707 b_free!2551) b_lambda!4917)))

(declare-fun b_lambda!4919 () Bool)

(assert (= b_lambda!4897 (or (and b!107703 b_free!2549 (= (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107707 b_free!2551) b_lambda!4919)))

(declare-fun b_lambda!4921 () Bool)

(assert (= b_lambda!4895 (or (and b!107703 b_free!2549 (= (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107707 b_free!2551) b_lambda!4921)))

(declare-fun b_lambda!4923 () Bool)

(assert (= b_lambda!4899 (or (and b!107703 b_free!2549) (and b!107707 b_free!2551 (= (defaultEntry!2606 newMap!16) (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))))) b_lambda!4923)))

(declare-fun b_lambda!4925 () Bool)

(assert (= b_lambda!4885 (or (and b!107703 b_free!2549 (= (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107707 b_free!2551) b_lambda!4925)))

(declare-fun b_lambda!4927 () Bool)

(assert (= b_lambda!4907 (or (and b!107703 b_free!2549 (= (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107707 b_free!2551) b_lambda!4927)))

(declare-fun b_lambda!4929 () Bool)

(assert (= b_lambda!4903 (or (and b!107703 b_free!2549 (= (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107707 b_free!2551) b_lambda!4929)))

(declare-fun b_lambda!4931 () Bool)

(assert (= b_lambda!4911 (or (and b!107703 b_free!2549 (= (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107707 b_free!2551) b_lambda!4931)))

(declare-fun b_lambda!4933 () Bool)

(assert (= b_lambda!4887 (or (and b!107703 b_free!2549 (= (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107707 b_free!2551) b_lambda!4933)))

(declare-fun b_lambda!4935 () Bool)

(assert (= b_lambda!4883 (or (and b!107703 b_free!2549 (= (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107707 b_free!2551) b_lambda!4935)))

(declare-fun b_lambda!4937 () Bool)

(assert (= b_lambda!4889 (or (and b!107703 b_free!2549 (= (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107707 b_free!2551) b_lambda!4937)))

(declare-fun b_lambda!4939 () Bool)

(assert (= b_lambda!4891 (or (and b!107703 b_free!2549 (= (defaultEntry!2606 (v!2913 (underlying!367 thiss!992))) (defaultEntry!2606 newMap!16))) (and b!107707 b_free!2551) b_lambda!4939)))

(check-sat (not d!30361) (not b!109120) (not d!30543) (not b!108846) (not b!109286) (not b!109650) (not b!108716) (not d!30137) (not b!108596) (not b!109312) tp_is_empty!2691 (not bm!11652) (not d!30363) (not d!30241) (not d!30583) (not b!108621) (not b_next!2551) (not b!109384) (not b!109164) (not b!109507) (not b!108928) (not b!108878) (not b!109593) (not b_lambda!4927) (not bm!11626) (not d!30325) (not b!109608) (not d!30785) (not d!30359) (not b!109090) (not bm!11548) (not b!109420) (not b!108699) (not b!109494) (not b!109129) (not d!30385) (not b!109399) (not b!109486) (not d!30793) (not d!30503) b_and!6765 (not b!109424) (not b!109615) (not d!30683) (not b!108623) (not d!30561) (not bm!11555) (not b!109140) (not b!109418) (not b_lambda!4881) (not d!30829) (not b!108849) (not d!30745) (not d!30817) (not b!108875) (not b!109309) (not b!108998) (not bm!11552) (not b!109610) (not d!30565) (not b!108563) (not bm!11598) (not b!108744) (not b!108633) (not b!109016) (not b_lambda!4935) (not bm!11571) (not b!109173) (not b!109323) (not b!108967) (not bm!11587) (not b!109541) (not b!109024) (not d!30513) (not b!108646) (not b!109433) (not b!108758) (not b!109187) (not d!30567) (not b!108708) (not d!30341) (not d!30649) (not d!30235) (not b!108962) (not b!108742) (not bm!11565) (not b!109696) (not b!109485) (not b!109480) (not d!30637) (not d!30815) (not b!108643) (not d!30729) (not b!109513) (not d!30699) (not b!109297) (not d!30313) (not d!30447) (not bm!11625) (not b!109295) (not d!30123) (not b!109195) (not b!108706) (not b!108961) (not b!108688) (not d!30617) (not d!30759) (not b!109331) (not b!109484) (not b!109055) (not d!30227) (not b!108564) (not bm!11601) (not bm!11653) (not b!108837) (not b_lambda!4879) (not b!108611) (not b!108666) (not b!109102) (not b!109656) (not b!109288) (not d!30183) (not b!109500) (not b!109451) (not b!109360) (not b!109183) (not bm!11586) (not b!109436) (not d!30801) (not bm!11549) (not b!109165) (not b!109647) (not b!109302) (not d!30589) (not b!109572) (not b!109377) (not b!108889) (not b!109133) (not d!30727) (not bm!11646) (not d!30555) (not b!108819) (not d!30287) (not b!109619) (not b!109241) (not b!108787) (not b!109220) (not d!30713) (not d!30655) (not b!109539) (not b!108976) (not d!30203) (not d!30685) (not b!109356) (not b!109686) (not d!30165) (not b!109066) (not b!108723) (not b!109551) (not d!30825) (not d!30213) (not b!108951) (not b_lambda!4877) (not b!109517) (not d!30689) (not b!109291) (not b!108707) (not d!30531) (not b!109218) (not bm!11559) (not b!109223) (not d!30807) (not b!109426) (not d!30659) (not d!30707) (not b_lambda!4873) (not b!108672) (not b!109362) (not b!109110) (not d!30467) (not b!109042) (not b!109626) (not b!108891) (not d!30715) (not b!108959) (not b!109161) (not b!109488) (not d!30315) (not b!108556) (not d!30553) (not b!108675) (not d!30261) (not b!109229) (not b!109393) (not d!30149) (not d!30305) (not b!109463) (not b!108965) (not b!108966) (not bm!11562) (not b!109003) (not b!109144) (not b!109075) (not b!109634) (not b!109365) (not b!108774) (not bm!11591) (not b!109470) (not b!109544) (not d!30661) (not d!30309) (not d!30219) (not d!30571) (not b!109343) (not mapNonEmpty!3987) (not b!109453) (not bm!11544) (not b!109018) (not b!109598) (not b!109383) (not d!30631) (not b!109614) (not b!109020) (not d!30743) (not d!30533) (not bm!11607) (not b!109333) (not b!109311) (not d!30253) (not d!30291) (not b!109001) (not d!30835) (not b!109462) (not bm!11594) (not d!30307) (not b!108597) (not d!30099) (not b!109158) (not bm!11533) (not d!30147) (not d!30403) (not b!108853) (not b!108599) (not b!108905) (not b!109409) (not b!108657) (not b!108924) (not b!108893) (not b!108627) (not b!108771) (not b!108840) (not d!30371) (not d!30395) (not d!30321) b_and!6767 (not d!30177) (not b!109692) (not b!108714) (not d!30737) (not d!30747) (not b_lambda!4921) (not bm!11629) (not bm!11582) (not b!108687) (not b!108935) (not d!30677) (not d!30231) (not b!109283) (not b!108852) (not b!108949) (not b!108622) (not b!109464) (not bm!11656) (not d!30731) (not bm!11589) (not b_lambda!4931) (not b!109046) (not d!30209) (not d!30669) (not d!30633) (not b!108549) (not b!109483) (not b!108634) (not d!30153) (not d!30199) (not d!30651) (not b!109501) (not b!109310) (not d!30739) (not d!30509) (not b!108988) (not b!109298) (not d!30577) (not d!30777) (not b!109514) (not bm!11634) (not b!109078) (not d!30809) (not b!108606) (not b!108850) (not b!109062) (not b!108696) (not b!108799) (not b!109349) (not b!109622) (not b!109478) (not d!30233) (not b!108830) (not b!108751) (not b_lambda!4861) (not b!109251) (not b!109301) (not d!30519) (not b!109587) (not b!109056) (not d!30281) (not d!30181) (not bm!11578) (not b!108789) (not d!30401) (not b!109006) (not d!30399) (not b!109577) (not d!30113) (not d!30681) (not d!30111) (not b!108619) (not d!30471) (not b!108918) (not b!108836) (not bm!11530) (not bm!11558) (not b!109427) (not d!30289) (not d!30481) (not b!109034) (not b!109586) (not d!30495) (not b!108573) (not b!108644) (not b!108658) (not b!108772) (not d!30791) (not bm!11536) (not b!108978) (not b!109363) (not b!109342) (not d!30101) (not d!30753) (not bm!11576) (not d!30441) (not bm!11556) (not bm!11616) (not bm!11600) (not b!108994) (not b!109564) (not b!109353) (not b!108987) (not b!109134) (not b!108781) (not b!109228) (not b!109403) (not b!109235) (not b!109145) (not b!109092) (not bm!11575) (not d!30187) (not d!30741) (not b!108984) (not b!109219) (not d!30695) (not b!109440) (not b!109244) (not b!109303) (not b!108938) (not d!30195) (not bm!11597) (not b!109105) (not d!30527) (not b!108571) (not b!109400) (not b!108825) (not b!108908) (not b!109589) (not mapNonEmpty!3988) (not d!30223) (not b!108650) (not b!109396) (not d!30845) (not d!30329) (not d!30409) (not b!108626) (not b!109605) (not b!109688) (not d!30343) (not b!108885) (not b_lambda!4923) (not b!109174) (not d!30411) (not d!30265) (not b!109389) (not d!30303) (not d!30201) (not b!109087) (not d!30813) (not d!30263) (not d!30215) (not b!109189) (not b!109448) (not b!108945) (not d!30191) (not d!30609) (not d!30243) (not b!108854) (not b!108974) (not b!109510) (not b_next!2549) (not b!109558) (not d!30621) (not b!108587) (not b!109570) (not b!109072) (not b!109168) (not bm!11537) (not b!108827) (not b!108809) (not b!109460) (not b!108689) (not b!109549) (not d!30275) (not b!109391) (not bm!11613) (not b!109131) (not b!109476) (not b!108868) (not d!30197) (not d!30139) (not b!109107) (not b!108637) (not b!109444) (not bm!11630) (not b!109627) (not b!109616) (not b!109475) (not b_lambda!4913) (not bm!11539) (not b!109611) (not b!109561) (not b!109148) (not b!109524) (not b!108583) (not b!109351) (not b!108551) (not b!108685) (not b!109382) (not b!109212) (not bm!11599) (not d!30511) (not b!109471) (not d!30251) (not b!109591) (not b!108879) (not d!30377) (not b!109454) (not b!109313) (not b!108822) (not b!108856) (not b!108813) (not b!109472) (not b!109100) (not b!109124) (not b!109253) (not d!30607) (not b!108816) (not b!109422) (not b!108624) (not b!109559) (not b!109354) (not b!109512) (not d!30723) (not b!108726) (not b!108934) (not b!109292) (not b!109248) (not d!30861) (not b!109370) (not d!30833) (not b!109238) (not b!109493) (not b!108811) (not b!109136) (not d!30259) (not b!109043) (not b!108607) (not b!109350) (not b!108697) (not b!109371) (not b!109171) (not b!109330) (not b!108681) (not b!108896) (not d!30853) (not b!108724) (not b!109299) (not b!108985) (not b!109052) (not b!108765) (not b!108759) (not b!109644) (not d!30625) (not b!109511) (not bm!11604) (not d!30735) (not d!30653) (not b!109606) (not b!108800) (not b!108593) (not b!109467) (not b!109368) (not b!108701) (not d!30379) (not b!109085) (not bm!11569) (not b_lambda!4915) (not d!30767) (not b!109431) (not d!30751) (not d!30605) (not b!108839) (not b!108912) (not bm!11623) (not b!108653) (not b!109445) (not b!109180) (not b!108955) (not b!109226) (not b!108927) (not b!109336) (not b!109537) (not b!109521) (not d!30179) (not b!108866) (not b!109192) (not b!108693) (not b!109642) (not b!108754) (not b!108692) (not b_lambda!4919) (not b!108570) (not b!108700) (not b!108881) (not d!30479) (not d!30705) (not b!109458) (not b!108899) (not b!108554) (not d!30725) (not b!108876) (not b!108625) (not d!30185) (not b!108842) (not b!109069) (not b!108863) (not d!30619) (not b!108888) (not bm!11612) (not d!30103) (not b!109181) (not b!109569) (not b!109473) (not b!108747) (not b!109290) (not d!30257) (not d!30603) (not b!109387) (not b!108691) (not b!109641) (not b_lambda!4937) (not d!30283) (not d!30559) (not b!108755) (not b!108925) (not b!108794) (not b!109152) (not b!109415) (not b!108717) (not b!108792) (not b!109693) (not b!109150) (not d!30367) (not b!108828) (not d!30487) (not bm!11605) (not d!30693) (not b!109456) (not d!30837) (not b!109221) (not b!109380) (not b!109130) (not bm!11645) (not d!30483) (not b_lambda!4925) (not b!109503) (not d!30357) (not b!108628) (not b!109481) (not d!30551) (not b!109596) (not b!108635) (not d!30437) (not b!108923) (not d!30117) (not b!108933) (not b_lambda!4893) (not b!109080) (not b!109543) (not d!30827) (not d!30575) (not bm!11590) (not b_lambda!4917) (not d!30155) (not b_lambda!4875) (not b!109285) (not b!108580) (not b!108660) (not b!108970) (not d!30787) (not b!109449) (not d!30601) (not bm!11541) (not d!30141) (not b!108673) (not d!30711) (not b!109254) (not b!109378) (not b!109099) (not bm!11641) (not b!109599) (not bm!11609) (not b!109031) (not b!108778) (not bm!11642) (not b!108603) (not b!109574) (not d!30757) (not d!30645) (not b!109281) (not b!109429) (not d!30721) (not d!30569) (not b!109347) (not d!30285) (not bm!11624) (not b!109314) (not d!30355) (not b!109289) (not b!109546) (not d!30499) (not b!108990) (not b!108613) (not d!30505) (not bm!11572) (not b_lambda!4929) (not b!108898) (not bm!11638) (not b!108561) (not b!108797) (not bm!11595) (not bm!11579) (not b!108663) (not d!30709) (not b!108741) (not b!109029) (not b!109236) (not b!109084) (not d!30563) (not b!109117) (not b!109534) (not d!30459) (not bm!11631) (not b!109491) (not d!30333) (not b!109679) (not b_lambda!4933) (not b!108906) (not d!30415) (not b!108920) (not d!30697) (not d!30443) (not b!109653) (not d!30229) (not b!109300) (not b!108729) (not b!108791) (not b!109048) (not b!109632) (not b!108806) (not b!108585) (not d!30781) (not b!108546) (not d!30193) (not b!109469) (not d!30249) (not b!108857) (not b!108921) (not d!30217) (not b!109526) (not b!109635) (not b!108946) (not b!108926) (not b!109194) (not b_lambda!4859) (not b!109447) (not b!109629) (not b!108915) (not d!30717) (not b!109358) (not b!109352) (not d!30797) (not b!109045) (not b!109035) (not d!30189) (not b!109015) (not b!108761) (not b!108698) (not b_lambda!4939) (not b!109340) (not b!109000) (not b!108914) (not bm!11568) (not b!109552) (not d!30489) (not d!30293) (not b!108734) (not b!109093) (not b!108785) (not d!30205) (not bm!11635) (not b!108948) (not d!30773) (not d!30131) (not b!108777) (not d!30719) (not d!30557) (not d!30545) (not b!108711) (not b!109315) (not d!30171) (not bm!11545) (not d!30663) (not b!109442) (not d!30407) (not d!30475) (not d!30169) (not d!30547) (not b!108860) (not d!30133) (not d!30237) (not bm!11608) (not b!108690) (not d!30573) (not b!109571) (not b!109127) (not b!109579) (not d!30353) (not bm!11540) (not b!108997) (not b!108745) (not b!109082) (not b!108577) (not b!109036) (not b!109255) (not b!109113) (not bm!11583) (not b!109068) (not d!30207) (not b!109698) (not b!109624) (not b!109115) (not b!109319) (not b!108807) (not b!108731) (not b_lambda!4857) (not b!109304) (not d!30703) (not d!30497) (not b!109190) (not d!30121) (not d!30173) (not b!109216) (not d!30417) (not d!30687) (not d!30339) (not b!109531) (not b!108916) (not b!108695) (not b!109143) (not d!30451) (not b!108869) (not b!108762) (not d!30317) (not d!30381) (not b!108665) (not b!108594) (not d!30433) (not b!108558) (not b!109138) (not b_lambda!4849) (not b!109566) (not d!30805) (not b!109197) (not b!109690) (not b!109166) (not b!108709) (not d!30795) (not d!30599) (not d!30613) (not d!30501) (not bm!11649) (not b!108958) (not d!30761) (not d!30331) (not b!109580) (not b!109416) (not d!30639) (not d!30549) (not b!109529))
(check-sat b_and!6765 b_and!6767 (not b_next!2549) (not b_next!2551))
